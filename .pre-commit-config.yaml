exclude: >
  (?x)^(
    \.git/|
    \.venv/|
    \.local-artifacts/|
    artifacts/|
    __pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|
    coverage/|coverage\.xml|htmlcov/|
    dist/|build/|.*\.egg-info/|
    node_modules/|
    webapp/\.next/|webapp/(out|build)/
    |\.codex/
  )
repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.7.0
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: end-of-file-fixer
        exclude: '\.(md|MD)$'
      - id: trailing-whitespace
        exclude: '\.(md|MD)$'
      - id: check-merge-conflict
      - id: mixed-line-ending
        args: [--fix=lf]
  - repo: https://github.com/adamchainz/blacken-docs
    rev: 1.16.0
    hooks:
      - id: blacken-docs
        args: ["--skip-errors"]
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: ["--explicit-package-bases", "-p", "services"]
        pass_filenames: false
        language: system
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.10
    hooks:
      - id: vulture  # detect dead code
        args:
          - --min-confidence=80
          - --ignore-decorators=@router.get,@router.post
          - --ignore-names=__init__
          - --exclude=*/services/api/tests/*,*/services/api/migrations/*
          - services/api
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.4
    hooks:
      - id: gitleaks
        name: gitleaks (protect staged)
        args: ["protect", "--staged", "--verbose", "--redact", "--no-banner", "--config=.gitleaks.toml"]
  - repo: local
    hooks:
      - id: block-plain-secrets
        name: Block committing plaintext secrets
        language: system
        entry: |-
          bash -lc '
            set -euo pipefail
            mapfile -t files < <(git diff --cached --name-only)
            bad=()
            for f in "${files[@]}"; do
              # Skip non-existent (deleted/renamed) entries
              [ -e "$f" ] || continue
              # Allowlist: encrypted/ examples/ gitkeep
              case "$f" in
                *.enc.*) continue;;
                *.example) continue;;
                */.gitkeep) continue;;
              esac
              base="${f##*/}"
              # Block any .env or .env.* anywhere (except *.example handled above)
              if [[ "$base" =~ ^\.env($|\.) ]]; then bad+=("$f"); continue; fi
              # Block anything under ops/secrets/**
              if [[ "$f" == ops/secrets/* ]]; then bad+=("$f"); continue; fi
              # Block obvious secret filenames anywhere (exact base names, not substrings)
              if [[ "$base" =~ ^(secret|secrets|credentials|apikey|api_key|token|private(_|-)?key)(\..*)?$ ]]; then
                bad+=("$f"); continue
              fi
            done
            if ((${#bad[@]})); then
              echo "❌ Plaintext secrets detected in staged files:"
              printf "  - %s\n" "${bad[@]}"
              echo "Commit blocked. Encrypt with SOPS (*.enc.*) or use .example files."
              exit 1
            fi
          '
        stages: [pre-commit]
      - id: forbid-legacy-imports
        name: Forbid imports from legacy package
        language: system
        entry: |-
          bash -lc '
            set -euo pipefail
            mapfile -t files < <(git diff --cached --name-only --diff-filter=ACM -- "*.py")
            bad=()
            for f in "${files[@]}"; do
              [[ "$f" == legacy/* ]] && continue
              [[ -f "$f" ]] || continue
              if grep -nE "^(from|import)\s+legacy(\.|(\s|$))" "$f" >/dev/null; then
                bad+=("$f")
              fi
            done
            if ((${#bad[@]})); then
              echo "❌ legacy/ imports detected:"
              printf "  - %s\n" "${bad[@]}"
              echo "Remove imports from legacy/ modules."
              exit 1
            fi
          '
        pass_filenames: false
        stages: [pre-commit]
