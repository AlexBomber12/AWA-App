name: ci-postgres

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ENABLE_LIVE: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          pip install -r services/etl/requirements.txt
          pip install -r services/api/requirements.txt
          pip install -r services/repricer/requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest
      - name: Load env
        run: |
          echo "PG_PASSWORD=pass" >> $GITHUB_ENV
          source .env.postgres
          cat .env.postgres >> $GITHUB_ENV
      - name: Start services
        run: docker compose --env-file .env.postgres -f docker-compose.yml -f docker-compose.postgres.yml up -d --wait
      - name: Show Postgres logs
        if: always()
        run: |
          # list containers so the log makes sense in the summary
          docker compose -f docker-compose.yml -f docker-compose.postgres.yml ps
          # dump the last 200 lines of the postgres service logs
          docker compose -f docker-compose.yml -f docker-compose.postgres.yml \
            logs --no-color --timestamps --tail 200 postgres
      - name: Run tests
        run: pytest -q
