name: test

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass # pragma: allowlist secret
          POSTGRES_DB: awa
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres -d awa"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with: { python-version: '3.12' }

      - name: Install dependencies
        run: |  # pragma: allowlist secret
          pip install -r services/etl/requirements.txt
          pip install -r services/api/requirements.txt
          pip install -r services/repricer/requirements.txt
          pip install -r services/fees_h10/requirements.txt
          pip install -r requirements-dev.txt
          pip install asyncpg
          pip install pytest
        env:
          DATABASE_URL: postgresql+psycopg://postgres:pass@localhost:5432/awa  # pragma: allowlist secret
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
        working-directory: web
      - run: npm run build --if-present
        working-directory: web


      - name: Run Alembic migrations
        run: alembic upgrade head
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass # pragma: allowlist secret
          POSTGRES_DB: awa
          PG_USER: postgres
          PG_PASSWORD: pass # pragma: allowlist secret
          PG_DATABASE: awa
          PG_HOST: localhost
          PG_PORT: '5432'

      - run: echo 'PGHOST=localhost' >> $GITHUB_ENV

      - name: Export DATABASE_URL
        run: echo "DATABASE_URL=postgresql+psycopg://postgres:pass@localhost:5432/awa" >> $GITHUB_ENV  # pragma: allowlist secret

      - name: pytest -q
        run: pytest -q
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass # pragma: allowlist secret
          POSTGRES_DB: awa
          PG_USER: postgres
          PG_PASSWORD: pass # pragma: allowlist secret
          PG_DATABASE: awa
          PG_PORT: '5432'
          DATA_DIR: ${{ runner.temp }}/awa-data

      - name: Dump Postgres logs
        if: always()
        run: |
          echo "::group::postgres container logs"
          docker logs ${{ job.services.postgres.id }} --tail 200
          echo "::endgroup::"
