name: CI
on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  service:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [api, etl, fees_h10, logistics_etl, price_importer, repricer, alert_bot, emailer]
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: awa
        options: >-
          --health-cmd="pg_isready -U postgres -d awa"
          --health-interval=5s --health-timeout=5s --health-retries=20
        ports: ['5432:5432']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            constraints.txt
            services/${{ matrix.service }}/requirements.txt
            requirements-dev.txt
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r services/${{ matrix.service }}/requirements.txt -c constraints.txt
          python -m pip install -r requirements-dev.txt -c constraints.txt
      - name: Fix imports
        run: ruff check . --select I001 --fix
      - name: Build Docker images
        run: docker compose build --parallel
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Set DATABASE_URL
        run: echo "DATABASE_URL=postgresql+asyncpg://postgres:pass@localhost:5432/awa" >> $GITHUB_ENV
      - name: Wait for Postgres
        run: scripts/wait_pg.sh
      - run: alembic upgrade head
        if: matrix.service == 'api'
      - name: Lint
        run: ruff check .
      - name: Format
        run: ruff format --check .
      - name: Ruff Style
        run: ruff check . --format=github
      - name: Type check
        run: python -m mypy services || true
      - name: Wait for Postgres again
        run: scripts/wait_pg.sh
      - name: Test
        continue-on-error: false
        run: pytest -q \
          --cov=services --cov=tests \
          --cov-report=xml \
          --cov-fail-under=35
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
