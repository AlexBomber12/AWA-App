name: CI

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Detect sandbox
        run: |
          if [[ "$GITHUB_ACTIONS" != "true" ]]; then
            echo "PLAYWRIGHT_OFFLINE=1" >> $GITHUB_ENV
          fi
      - if: env.PLAYWRIGHT_OFFLINE != '1'
        run: npm install -g playwright && playwright install --with-deps chromium
      - run: |
          pip install -r services/etl/requirements.txt
          pip install -r services/api/requirements.txt
          pip install -r services/repricer/requirements.txt
          pip install -r requirements-dev.txt
          # core dev tools
          pip install pytest ruff black mypy playwright
      - run: ruff check .
      - run: black --check .
      - run: mypy services || true
      - run: pytest -q

  postgres:
    needs: build
    runs-on: ubuntu-latest
    env:
      ENABLE_LIVE: "1"
      PGPASSWORD: pass
      DATABASE_URL: postgresql+asyncpg://postgres:pass@postgres:5432/postgres
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          pip install -r services/etl/requirements.txt
          pip install -r services/api/requirements.txt
          pip install -r services/repricer/requirements.txt
          pip install -r requirements-dev.txt
          # core dev tools
          pip install pytest ruff black mypy
      - name: Copy env (Postgres)
        run: cp .env.postgres .env
      - name: Compose up (Postgres)
        run: |
          docker compose \
            -f docker-compose.yml \
            -f docker-compose.postgres.yml \
            up -d --wait
      - if: failure()
        run: docker compose logs --no-color
      - run: docker compose logs api --tail=100
      - run: ruff check .
      - run: black --check .
      - run: mypy services || true
      - name: Run tests
        run: |
          export $(cat .env.postgres | xargs)
          pytest -q
