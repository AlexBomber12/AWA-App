name: logs-after-ci
on:
  workflow_run:
    workflows: ["CI", "test", "compose-e2e"]
    types: [completed]
permissions:
  contents: write
  pull-requests: write

concurrency:
  # ensure only one logs job per SHA; cancel earlier ones
  group: logs-${{ github.event.workflow_run.head_sha }}
  cancel-in-progress: true

jobs:
  gather-and-commit:
    # Only run on PRs and merges to main; skip if triggered by other refs
    # Do not run on our own commits (in case the workflow_run name is logs-after-ci)
    if: >
      (github.event.workflow_run.event == 'pull_request')
      || (github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main')
      && github.event.workflow_run.name != 'logs-after-ci'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository at the target branch (PR head or main)
        uses: actions/checkout@v4
        with:
          # checkout the exact commit where workflows ran
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Ensure ci-logs/latest directory
        run: |
          mkdir -p ci-logs/latest

      # Download all artifacts emitted by the completed workflow runs.
      # This uses the run-id and workflow name implicitly from workflow_run context.
      - name: Download all artifacts for this run
        uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: ci-logs/latest
        continue-on-error: true

      # If no artifacts were downloaded, write a minimal summary.
      - name: Write run summary if no artifacts
        run: |
          if ! find ci-logs/latest -type f -maxdepth 1 | grep .; then
            echo "No artifacts found. Run ID: ${{ github.event.workflow_run.id }}" > ci-logs/latest/run.txt
            echo "Conclusion: ${{ github.event.workflow_run.conclusion }}" >> ci-logs/latest/run.txt
          fi

      # Write an index file listing all files in ci-logs/latest
      - name: Write index file
        run: |
          {
            echo "# Logs for run on branch ${{ github.event.workflow_run.head_branch || 'main' }}"
            echo "- Workflow run: ${{ github.event.workflow_run.name }}"
            echo "- Run ID: ${{ github.event.workflow_run.id }}"
            echo "- Conclusion: ${{ github.event.workflow_run.conclusion }}"
            echo "- SHA: ${{ github.event.workflow_run.head_sha }}"
            echo ""
            echo "## Files"
            find ci-logs/latest -type f | sed 's#^#- #'
          } > ci-logs/latest/README.md

      # Commit to main branch (or PR branch) ignoring ci-logs/** in other workflows
      - name: Commit and push logs
        env:
          GH_USER_NAME: logs-bot
          GH_USER_EMAIL: logs-bot@users.noreply.github.com
        run: |
          set -e
          git config user.name "$GH_USER_NAME"
          git config user.email "$GH_USER_EMAIL"
          # Always commit logs to the same branch the workflow was run on
          git checkout ${{ github.event.workflow_run.head_branch || 'main' }}
          git add -A ci-logs/latest
          if git diff --cached --quiet; then
            echo "No log changes to commit."
            exit 0
          fi
          git commit -m "Update ci-logs/latest after workflows complete (run ${{ github.event.workflow_run.id }})"
          git push

      # Optionally open/update a PR if this is a pull_request run
      - name: Open or update logs PR
        if: github.event.workflow_run.event == 'pull_request'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: logs-${{ github.event.workflow_run.head_sha }}
          title: "Update logs for PR #${{ github.event.workflow_run.pull_request.number }}"
          body: |
            This PR contains the collected workflow logs (CI, test, compose-e2e) after all workflows completed.
          commit-message: "ci-logs: update"
          labels: ci-logs
          base: ${{ github.event.workflow_run.head_branch }}
