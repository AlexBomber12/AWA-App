2025-08-18T21:11:09.9918866Z ##[group]Run pydoc-markdown
2025-08-18T21:11:09.9919414Z [36;1mpydoc-markdown[0m
2025-08-18T21:11:09.9959949Z shell: /usr/bin/bash -e {0}
2025-08-18T21:11:09.9960172Z env:
2025-08-18T21:11:09.9960401Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:11:09.9960788Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T21:11:09.9961176Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:11:09.9961510Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:11:09.9961843Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:11:09.9962166Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T21:11:09.9962439Z ##[endgroup]
2025-08-18T21:11:10.2788626Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T21:11:10.2789529Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T21:11:10.2789994Z In "pydoc-markdown.yml"
2025-08-18T21:11:10.2790439Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T21:11:10.2791094Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T21:11:10.2791873Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T21:11:10.2792403Z 
2025-08-18T21:11:10.6017046Z <a id="__init__"></a>
2025-08-18T21:11:10.6017438Z 
2025-08-18T21:11:10.6017567Z # \_\_init\_\_
2025-08-18T21:11:10.6017770Z 
2025-08-18T21:11:10.6017907Z <a id="api"></a>
2025-08-18T21:11:10.6018121Z 
2025-08-18T21:11:10.6018247Z # api
2025-08-18T21:11:10.6018436Z 
2025-08-18T21:11:10.6018589Z <a id="api.errors"></a>
2025-08-18T21:11:10.6018829Z 
2025-08-18T21:11:10.6019235Z # api.errors
2025-08-18T21:11:10.6019461Z 
2025-08-18T21:11:10.6019635Z <a id="api.sentry_config"></a>
2025-08-18T21:11:10.6019915Z 
2025-08-18T21:11:10.6020068Z # api.sentry\_config
2025-08-18T21:11:10.6020320Z 
2025-08-18T21:11:10.6020521Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T21:11:10.6020887Z 
2025-08-18T21:11:10.6021559Z # api.tests.test\_sentry\_scrub
2025-08-18T21:11:10.6021898Z 
2025-08-18T21:11:10.6022072Z <a id="api.tests.test_errors_json"></a>
2025-08-18T21:11:10.6022407Z 
2025-08-18T21:11:10.6022564Z # api.tests.test\_errors\_json
2025-08-18T21:11:10.6022850Z 
2025-08-18T21:11:10.6023031Z <a id="api.tests.test_llm"></a>
2025-08-18T21:11:10.6023308Z 
2025-08-18T21:11:10.6023469Z # api.tests.test\_llm
2025-08-18T21:11:10.6023725Z 
2025-08-18T21:11:10.6023935Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T21:11:10.6024298Z 
2025-08-18T21:11:10.6024470Z # api.tests.test\_sentry\_event
2025-08-18T21:11:10.6024791Z 
2025-08-18T21:11:10.6025060Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T21:11:10.6025510Z 
2025-08-18T21:11:10.6026038Z ## DummyTransport Objects
2025-08-18T21:11:10.6026344Z 
2025-08-18T21:11:10.6026482Z ```python
2025-08-18T21:11:10.6026854Z class DummyTransport()
2025-08-18T21:11:10.6027266Z ```
2025-08-18T21:11:10.6027464Z 
2025-08-18T21:11:10.6027789Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T21:11:10.6028267Z 
2025-08-18T21:11:10.6028400Z #### capture\_envelope
2025-08-18T21:11:10.6028619Z 
2025-08-18T21:11:10.6028731Z ```python
2025-08-18T21:11:10.6029245Z def capture_envelope(envelope)
2025-08-18T21:11:10.6029591Z ```
2025-08-18T21:11:10.6029733Z 
2025-08-18T21:11:10.6029954Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T21:11:10.6030309Z 
2025-08-18T21:11:10.6030450Z <a id="api.tests.test_cors"></a>
2025-08-18T21:11:10.6030707Z 
2025-08-18T21:11:10.6030831Z # api.tests.test\_cors
2025-08-18T21:11:10.6031032Z 
2025-08-18T21:11:10.6031186Z <a id="api.tests.test_imports"></a>
2025-08-18T21:11:10.6031390Z 
2025-08-18T21:11:10.6031477Z # api.tests.test\_imports
2025-08-18T21:11:10.6031623Z 
2025-08-18T21:11:10.6031731Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T21:11:10.6031917Z 
2025-08-18T21:11:10.6032009Z # api.tests.test\_rate\_limit
2025-08-18T21:11:10.6032170Z 
2025-08-18T21:11:10.6032277Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T21:11:10.6032761Z 
2025-08-18T21:11:10.6032838Z #### app
2025-08-18T21:11:10.6032934Z 
2025-08-18T21:11:10.6033004Z noqa: E402
2025-08-18T21:11:10.6033102Z 
2025-08-18T21:11:10.6033203Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T21:11:10.6033380Z 
2025-08-18T21:11:10.6033468Z # api.tests.test\_entrypoint
2025-08-18T21:11:10.6033626Z 
2025-08-18T21:11:10.6033717Z <a id="api.tests.test_health"></a>
2025-08-18T21:11:10.6033887Z 
2025-08-18T21:11:10.6033970Z # api.tests.test\_health
2025-08-18T21:11:10.6034113Z 
2025-08-18T21:11:10.6034199Z <a id="api.logging_config"></a>
2025-08-18T21:11:10.6034351Z 
2025-08-18T21:11:10.6034437Z # api.logging\_config
2025-08-18T21:11:10.6034564Z 
2025-08-18T21:11:10.6034653Z <a id="api.migrations.env"></a>
2025-08-18T21:11:10.6034813Z 
2025-08-18T21:11:10.6034894Z # api.migrations.env
2025-08-18T21:11:10.6035019Z 
2025-08-18T21:11:10.6035147Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T21:11:10.6035382Z 
2025-08-18T21:11:10.6035500Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T21:11:10.6035715Z 
2025-08-18T21:11:10.6035841Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T21:11:10.6036055Z 
2025-08-18T21:11:10.6036157Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T21:11:10.6036354Z 
2025-08-18T21:11:10.6036522Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T21:11:10.6036781Z 
2025-08-18T21:11:10.6036927Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T21:11:10.6037174Z 
2025-08-18T21:11:10.6037309Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T21:11:10.6037535Z 
2025-08-18T21:11:10.6037654Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T21:11:10.6037857Z 
2025-08-18T21:11:10.6037983Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T21:11:10.6038183Z 
2025-08-18T21:11:10.6038282Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T21:11:10.6038455Z 
2025-08-18T21:11:10.6038709Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T21:11:10.6038912Z 
2025-08-18T21:11:10.6039271Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T21:11:10.6039479Z 
2025-08-18T21:11:10.6039601Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T21:11:10.6039800Z 
2025-08-18T21:11:10.6039904Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T21:11:10.6040091Z 
2025-08-18T21:11:10.6040214Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T21:11:10.6040412Z 
2025-08-18T21:11:10.6040519Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T21:11:10.6040697Z 
2025-08-18T21:11:10.6040830Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T21:11:10.6041047Z 
2025-08-18T21:11:10.6041163Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T21:11:10.6041353Z 
2025-08-18T21:11:10.6041472Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T21:11:10.6041673Z 
2025-08-18T21:11:10.6041787Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T21:11:10.6041975Z 
2025-08-18T21:11:10.6042112Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T21:11:10.6042404Z 
2025-08-18T21:11:10.6042525Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T21:11:10.6042755Z 
2025-08-18T21:11:10.6042864Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T21:11:10.6043050Z 
2025-08-18T21:11:10.6043150Z # api.migrations.versions.0001\_baseline
2025-08-18T21:11:10.6043314Z 
2025-08-18T21:11:10.6043409Z <a id="api.migrations.versions"></a>
2025-08-18T21:11:10.6043573Z 
2025-08-18T21:11:10.6043655Z # api.migrations.versions
2025-08-18T21:11:10.6043781Z 
2025-08-18T21:11:10.6043862Z <a id="api.migrations"></a>
2025-08-18T21:11:10.6043992Z 
2025-08-18T21:11:10.6044058Z # api.migrations
2025-08-18T21:11:10.6044161Z 
2025-08-18T21:11:10.6044233Z <a id="api.db"></a>
2025-08-18T21:11:10.6044337Z 
2025-08-18T21:11:10.6044398Z # api.db
2025-08-18T21:11:10.6044489Z 
2025-08-18T21:11:10.6044573Z <a id="api.routes.stats"></a>
2025-08-18T21:11:10.6044870Z 
2025-08-18T21:11:10.6044939Z # api.routes.stats
2025-08-18T21:11:10.6045051Z 
2025-08-18T21:11:10.6045136Z <a id="api.routes.stats.kpi"></a>
2025-08-18T21:11:10.6045284Z 
2025-08-18T21:11:10.6045350Z #### kpi
2025-08-18T21:11:10.6045436Z 
2025-08-18T21:11:10.6045497Z ```python
2025-08-18T21:11:10.6045665Z @router.get("/stats/kpi")
2025-08-18T21:11:10.6045921Z def kpi() -> List[Dict[str, int]]
2025-08-18T21:11:10.6046132Z ```
2025-08-18T21:11:10.6046214Z 
2025-08-18T21:11:10.6046291Z Return KPI metrics (mock).
2025-08-18T21:11:10.6046424Z 
2025-08-18T21:11:10.6046520Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T21:11:10.6046694Z 
2025-08-18T21:11:10.6046769Z #### roi\_by\_vendor
2025-08-18T21:11:10.6046877Z 
2025-08-18T21:11:10.6046939Z ```python
2025-08-18T21:11:10.6047113Z @router.get("/stats/roi_by_vendor")
2025-08-18T21:11:10.6047354Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T21:11:10.6047579Z ```
2025-08-18T21:11:10.6047665Z 
2025-08-18T21:11:10.6047748Z Return ROI percent by vendor.
2025-08-18T21:11:10.6047890Z 
2025-08-18T21:11:10.6047978Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T21:11:10.6048140Z 
2025-08-18T21:11:10.6048208Z #### roi\_trend
2025-08-18T21:11:10.6048307Z 
2025-08-18T21:11:10.6048370Z ```python
2025-08-18T21:11:10.6048533Z @router.get("/stats/roi_trend")
2025-08-18T21:11:10.6048758Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T21:11:10.6049182Z ```
2025-08-18T21:11:10.6049263Z 
2025-08-18T21:11:10.6049337Z Return 30-day ROI trend.
2025-08-18T21:11:10.6049465Z 
2025-08-18T21:11:10.6049541Z <a id="api.routes.roi"></a>
2025-08-18T21:11:10.6049671Z 
2025-08-18T21:11:10.6049744Z # api.routes.roi
2025-08-18T21:11:10.6049847Z 
2025-08-18T21:11:10.6049926Z <a id="api.routes.health"></a>
2025-08-18T21:11:10.6050081Z 
2025-08-18T21:11:10.6050153Z # api.routes.health
2025-08-18T21:11:10.6050259Z 
2025-08-18T21:11:10.6050352Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T21:11:10.6050646Z 
2025-08-18T21:11:10.6050712Z #### MAX\_SKEW
2025-08-18T21:11:10.6050809Z 
2025-08-18T21:11:10.6050876Z seconds
2025-08-18T21:11:10.6050961Z 
2025-08-18T21:11:10.6051051Z <a id="api.routes.health.health"></a>
2025-08-18T21:11:10.6051219Z 
2025-08-18T21:11:10.6051280Z #### health
2025-08-18T21:11:10.6051369Z 
2025-08-18T21:11:10.6051437Z ```python
2025-08-18T21:11:10.6051624Z @router.get("/health", include_in_schema=False)
2025-08-18T21:11:10.6052005Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T21:11:10.6052339Z ```
2025-08-18T21:11:10.6052427Z 
2025-08-18T21:11:10.6052540Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T21:11:10.6052733Z 
2025-08-18T21:11:10.6052857Z <a id="api.routes.repository"></a>
2025-08-18T21:11:10.6053027Z 
2025-08-18T21:11:10.6053102Z # api.routes.repository
2025-08-18T21:11:10.6053226Z 
2025-08-18T21:11:10.6053300Z <a id="api.routes"></a>
2025-08-18T21:11:10.6053413Z 
2025-08-18T21:11:10.6053476Z # api.routes
2025-08-18T21:11:10.6053577Z 
2025-08-18T21:11:10.6053663Z <a id="api.models.fee"></a>
2025-08-18T21:11:10.6053793Z 
2025-08-18T21:11:10.6053857Z # api.models.fee
2025-08-18T21:11:10.6053965Z 
2025-08-18T21:11:10.6054035Z <a id="api.models"></a>
2025-08-18T21:11:10.6054148Z 
2025-08-18T21:11:10.6054216Z # api.models
2025-08-18T21:11:10.6054306Z 
2025-08-18T21:11:10.6054386Z <a id="api.roi_repository"></a>
2025-08-18T21:11:10.6054524Z 
2025-08-18T21:11:10.6054601Z # api.roi\_repository
2025-08-18T21:11:10.6054711Z 
2025-08-18T21:11:10.6054780Z <a id="api.main"></a>
2025-08-18T21:11:10.6054894Z 
2025-08-18T21:11:10.6054956Z # api.main
2025-08-18T21:11:10.6055044Z 
2025-08-18T21:11:10.6055118Z <a id="api.main.ready"></a>
2025-08-18T21:11:10.6055251Z 
2025-08-18T21:11:10.6055312Z #### ready
2025-08-18T21:11:10.6055397Z 
2025-08-18T21:11:10.6055462Z ```python
2025-08-18T21:11:10.6055712Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T21:11:10.6056141Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T21:11:10.6056605Z                                                                       str]
2025-08-18T21:11:10.6056832Z ```
2025-08-18T21:11:10.6056913Z 
2025-08-18T21:11:10.6057007Z Return 200 only when migrations are at head.
2025-08-18T21:11:10.6057183Z 
2025-08-18T21:11:10.6057254Z <a id="api.config"></a>
2025-08-18T21:11:10.6057369Z 
2025-08-18T21:11:10.6057440Z # api.config
2025-08-18T21:11:10.6057539Z 
2025-08-18T21:11:10.6057602Z <a id="etl"></a>
2025-08-18T21:11:10.6057708Z 
2025-08-18T21:11:10.6057767Z # etl
2025-08-18T21:11:10.6057850Z 
2025-08-18T21:11:10.6057929Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T21:11:10.6058081Z 
2025-08-18T21:11:10.6058153Z # etl.fba\_fee\_ingestor
2025-08-18T21:11:10.6058273Z 
2025-08-18T21:11:10.6058357Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T21:11:10.6058502Z 
2025-08-18T21:11:10.6058573Z # etl.sp\_fees\_ingestor
2025-08-18T21:11:10.6058695Z 
2025-08-18T21:11:10.6058771Z <a id="etl.keepa_ingestor"></a>
2025-08-18T21:11:10.6058917Z 
2025-08-18T21:11:10.6059159Z # etl.keepa\_ingestor
2025-08-18T21:11:10.6059358Z 
2025-08-18T21:11:10.6059427Z <a id="etl.db"></a>
2025-08-18T21:11:10.6059534Z 
2025-08-18T21:11:10.6059598Z # etl.db
2025-08-18T21:11:10.6059684Z 
2025-08-18T21:11:10.6059765Z <a id="etl.dialects.schemas"></a>
2025-08-18T21:11:10.6059907Z 
2025-08-18T21:11:10.6059987Z # etl.dialects.schemas
2025-08-18T21:11:10.6060101Z 
2025-08-18T21:11:10.6060204Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T21:11:10.6060394Z 
2025-08-18T21:11:10.6060482Z # etl.dialects.amazon\_reimbursements
2025-08-18T21:11:10.6060641Z 
2025-08-18T21:11:10.6060739Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T21:11:10.6060909Z 
2025-08-18T21:11:10.6060993Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T21:11:10.6061144Z 
2025-08-18T21:11:10.6061239Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T21:11:10.6061404Z 
2025-08-18T21:11:10.6061486Z # etl.dialects.amazon\_returns
2025-08-18T21:11:10.6061757Z 
2025-08-18T21:11:10.6061859Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T21:11:10.6062025Z 
2025-08-18T21:11:10.6062112Z # etl.dialects.amazon\_fee\_preview
2025-08-18T21:11:10.6062264Z 
2025-08-18T21:11:10.6062368Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T21:11:10.6062551Z 
2025-08-18T21:11:10.6062646Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T21:11:10.6062808Z 
2025-08-18T21:11:10.6062900Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T21:11:10.6063071Z 
2025-08-18T21:11:10.6063156Z # etl.dialects.amazon\_settlements
2025-08-18T21:11:10.6063306Z 
2025-08-18T21:11:10.6063386Z <a id="etl.dialects"></a>
2025-08-18T21:11:10.6063511Z 
2025-08-18T21:11:10.6063576Z # etl.dialects
2025-08-18T21:11:10.6063672Z 
2025-08-18T21:11:10.6063745Z <a id="ingest"></a>
2025-08-18T21:11:10.6063850Z 
2025-08-18T21:11:10.6063909Z # ingest
2025-08-18T21:11:10.6064000Z 
2025-08-18T21:11:10.6064081Z <a id="ingest.maintenance"></a>
2025-08-18T21:11:10.6064220Z 
2025-08-18T21:11:10.6064300Z # ingest.maintenance
2025-08-18T21:11:10.6064421Z 
2025-08-18T21:11:10.6064498Z <a id="ingest.copy_loader"></a>
2025-08-18T21:11:10.6064634Z 
2025-08-18T21:11:10.6064710Z # ingest.copy\_loader
2025-08-18T21:11:10.6064822Z 
2025-08-18T21:11:10.6064921Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T21:11:10.6065105Z 
2025-08-18T21:11:10.6065176Z #### copy\_df\_via\_temp
2025-08-18T21:11:10.6065295Z 
2025-08-18T21:11:10.6065357Z ```python
2025-08-18T21:11:10.6065528Z def copy_df_via_temp(engine: Engine,
2025-08-18T21:11:10.6065760Z                      df: pd.DataFrame,
2025-08-18T21:11:10.6065986Z                      target_table: str,
2025-08-18T21:11:10.6066205Z                      *,
2025-08-18T21:11:10.6066401Z                      target_schema: Optional[str] = None,
2025-08-18T21:11:10.6066658Z                      columns: Sequence[str],
2025-08-18T21:11:10.6066919Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T21:11:10.6067200Z                      analyze_after: bool = False,
2025-08-18T21:11:10.6067575Z                      connection: Any | None = None) -> int
2025-08-18T21:11:10.6067809Z ```
2025-08-18T21:11:10.6067893Z 
2025-08-18T21:11:10.6068048Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T21:11:10.6068275Z 
2025-08-18T21:11:10.6068360Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T21:11:10.6068522Z 
2025-08-18T21:11:10.6068599Z # ingest.tests.test\_smoke
2025-08-18T21:11:10.6068726Z 
2025-08-18T21:11:10.6068799Z <a id="ingest.tests"></a>
2025-08-18T21:11:10.6069076Z 
2025-08-18T21:11:10.6069198Z # ingest.tests
2025-08-18T21:11:10.6069307Z 
2025-08-18T21:11:10.6069396Z <a id="ingest.upload_router"></a>
2025-08-18T21:11:10.6069542Z 
2025-08-18T21:11:10.6069614Z # ingest.upload\_router
2025-08-18T21:11:10.6069731Z 
2025-08-18T21:11:10.6069814Z <a id="ingest.email_watcher"></a>
2025-08-18T21:11:10.6069953Z 
2025-08-18T21:11:10.6070024Z # ingest.email\_watcher
2025-08-18T21:11:10.6070141Z 
2025-08-18T21:11:10.6070232Z <a id="ingest.email_watcher.main"></a>
2025-08-18T21:11:10.6070395Z 
2025-08-18T21:11:10.6070461Z #### main
2025-08-18T21:11:10.6070545Z 
2025-08-18T21:11:10.6070607Z ```python
2025-08-18T21:11:10.6070769Z def main() -> dict[str, str]
2025-08-18T21:11:10.6070954Z ```
2025-08-18T21:11:10.6071036Z 
2025-08-18T21:11:10.6071179Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T21:11:10.6071417Z 
2025-08-18T21:11:10.6071541Z Returns {"status": "success"} when processing completes.
2025-08-18T21:11:10.6071745Z 
2025-08-18T21:11:10.6071823Z <a id="ingest.tasks"></a>
2025-08-18T21:11:10.6071944Z 
2025-08-18T21:11:10.6072009Z # ingest.tasks
2025-08-18T21:11:10.6072108Z 
2025-08-18T21:11:10.6072208Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T21:11:10.6072380Z 
2025-08-18T21:11:10.6072451Z #### task\_import\_file
2025-08-18T21:11:10.6072569Z 
2025-08-18T21:11:10.6072630Z ```python
2025-08-18T21:11:10.6072830Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T21:11:10.6073270Z def task_import_file(self: Any,
2025-08-18T21:11:10.6073487Z                      uri: str,
2025-08-18T21:11:10.6073703Z                      report_type: Optional[str] = None,
2025-08-18T21:11:10.6073968Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T21:11:10.6074197Z ```
2025-08-18T21:11:10.6074284Z 
2025-08-18T21:11:10.6074421Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T21:11:10.6074636Z 
2025-08-18T21:11:10.6074717Z <a id="ingest.celery_app"></a>
2025-08-18T21:11:10.6074864Z 
2025-08-18T21:11:10.6074936Z # ingest.celery\_app
2025-08-18T21:11:10.6075049Z 
2025-08-18T21:11:10.6075137Z <a id="ingest.ingest_router"></a>
2025-08-18T21:11:10.6075282Z 
2025-08-18T21:11:10.6075354Z # ingest.ingest\_router
2025-08-18T21:11:10.6075471Z 
2025-08-18T21:11:10.6075545Z <a id="logistics_etl"></a>
2025-08-18T21:11:10.6075666Z 
2025-08-18T21:11:10.6075729Z # logistics\_etl
2025-08-18T21:11:10.6075838Z 
2025-08-18T21:11:10.6075912Z Daily logistics ETL job.
2025-08-18T21:11:10.6076043Z 
2025-08-18T21:11:10.6076127Z <a id="logistics_etl.__main__"></a>
2025-08-18T21:11:10.6076273Z 
2025-08-18T21:11:10.6076347Z # logistics\_etl.\_\_main\_\_
2025-08-18T21:11:10.6076479Z 
2025-08-18T21:11:10.6076559Z <a id="logistics_etl.dsn"></a>
2025-08-18T21:11:10.6076691Z 
2025-08-18T21:11:10.6076758Z # logistics\_etl.dsn
2025-08-18T21:11:10.6076873Z 
2025-08-18T21:11:10.6076984Z Local DSN builder to avoid cross-service dependency.
2025-08-18T21:11:10.6077183Z 
2025-08-18T21:11:10.6077278Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T21:11:10.6077440Z 
2025-08-18T21:11:10.6077502Z #### build\_dsn
2025-08-18T21:11:10.6077599Z 
2025-08-18T21:11:10.6077666Z ```python
2025-08-18T21:11:10.6077831Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:11:10.6078049Z ```
2025-08-18T21:11:10.6078130Z 
2025-08-18T21:11:10.6078266Z Return a Postgres DSN assembled from environment variables.
2025-08-18T21:11:10.6078488Z 
2025-08-18T21:11:10.6078632Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T21:11:10.6079289Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T21:11:10.6079622Z error when any required variable is missing.
2025-08-18T21:11:10.6079792Z 
2025-08-18T21:11:10.6079888Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T21:11:10.6080055Z 
2025-08-18T21:11:10.6080138Z # logistics\_etl.tests.conftest
2025-08-18T21:11:10.6080284Z 
2025-08-18T21:11:10.6080384Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T21:11:10.6080565Z 
2025-08-18T21:11:10.6080659Z # logistics\_etl.tests.test\_repository
2025-08-18T21:11:10.6080821Z 
2025-08-18T21:11:10.6080912Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T21:11:10.6081077Z 
2025-08-18T21:11:10.6081165Z # logistics\_etl.tests.test\_cron
2025-08-18T21:11:10.6081310Z 
2025-08-18T21:11:10.6081404Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T21:11:10.6081579Z 
2025-08-18T21:11:10.6081661Z # logistics\_etl.tests.test\_imports
2025-08-18T21:11:10.6081820Z 
2025-08-18T21:11:10.6081925Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T21:11:10.6082091Z 
2025-08-18T21:11:10.6082172Z # logistics\_etl.tests.test\_smoke
2025-08-18T21:11:10.6082319Z 
2025-08-18T21:11:10.6082415Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T21:11:10.6082581Z 
2025-08-18T21:11:10.6082661Z # logistics\_etl.tests.test\_client
2025-08-18T21:11:10.6082817Z 
2025-08-18T21:11:10.6082923Z <a id="logistics_etl.tests"></a>
2025-08-18T21:11:10.6083064Z 
2025-08-18T21:11:10.6083138Z # logistics\_etl.tests
2025-08-18T21:11:10.6083252Z 
2025-08-18T21:11:10.6083329Z <a id="logistics_etl.flow"></a>
2025-08-18T21:11:10.6083464Z 
2025-08-18T21:11:10.6083538Z # logistics\_etl.flow
2025-08-18T21:11:10.6083651Z 
2025-08-18T21:11:10.6083730Z <a id="logistics_etl.client"></a>
2025-08-18T21:11:10.6083877Z 
2025-08-18T21:11:10.6083950Z # logistics\_etl.client
2025-08-18T21:11:10.6084066Z 
2025-08-18T21:11:10.6084144Z <a id="logistics_etl.cron"></a>
2025-08-18T21:11:10.6084401Z 
2025-08-18T21:11:10.6084470Z # logistics\_etl.cron
2025-08-18T21:11:10.6084590Z 
2025-08-18T21:11:10.6084671Z <a id="logistics_etl.db"></a>
2025-08-18T21:11:10.6084804Z 
2025-08-18T21:11:10.6124917Z # logistics\_etl.db
2025-08-18T21:11:10.6125217Z 
2025-08-18T21:11:10.6125415Z <a id="logistics_etl.repository"></a>
2025-08-18T21:11:10.6125787Z 
2025-08-18T21:11:10.6125956Z # logistics\_etl.repository
2025-08-18T21:11:10.6126235Z 
2025-08-18T21:11:10.6126386Z <a id="alert_bot"></a>
2025-08-18T21:11:10.6126626Z 
2025-08-18T21:11:10.6126757Z # alert\_bot
2025-08-18T21:11:10.6126975Z 
2025-08-18T21:11:10.6127101Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T21:11:10.6127304Z 
2025-08-18T21:11:10.6127406Z # alert\_bot.tests.test\_smoke
2025-08-18T21:11:10.6127589Z 
2025-08-18T21:11:10.6127686Z <a id="alert_bot.tests"></a>
2025-08-18T21:11:10.6127853Z 
2025-08-18T21:11:10.6127947Z # alert\_bot.tests
2025-08-18T21:11:10.6128084Z 
2025-08-18T21:11:10.6128184Z <a id="alert_bot.alert_bot"></a>
2025-08-18T21:11:10.6128377Z 
2025-08-18T21:11:10.6128471Z # alert\_bot.alert\_bot
2025-08-18T21:11:10.6128616Z 
2025-08-18T21:11:10.6128710Z <a id="alert_bot.rules"></a>
2025-08-18T21:11:10.6128880Z 
2025-08-18T21:11:10.6129138Z # alert\_bot.rules
2025-08-18T21:11:10.6129270Z 
2025-08-18T21:11:10.6129361Z <a id="common"></a>
2025-08-18T21:11:10.6129489Z 
2025-08-18T21:11:10.6129564Z # common
2025-08-18T21:11:10.6129673Z 
2025-08-18T21:11:10.6129768Z <a id="common.dsn"></a>
2025-08-18T21:11:10.6129917Z 
2025-08-18T21:11:10.6130006Z # common.dsn
2025-08-18T21:11:10.6130128Z 
2025-08-18T21:11:10.6130231Z <a id="common.dsn.build_dsn"></a>
2025-08-18T21:11:10.6130413Z 
2025-08-18T21:11:10.6130496Z #### build\_dsn
2025-08-18T21:11:10.6130621Z 
2025-08-18T21:11:10.6130698Z ```python
2025-08-18T21:11:10.6130912Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:11:10.6131179Z ```
2025-08-18T21:11:10.6131279Z 
2025-08-18T21:11:10.6131435Z Return a Postgres DSN, validating required variables.
2025-08-18T21:11:10.6131686Z 
2025-08-18T21:11:10.6131925Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T21:11:10.6132652Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T21:11:10.6133160Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T21:11:10.6133533Z missing.
2025-08-18T21:11:10.6133640Z 
2025-08-18T21:11:10.6133750Z <a id="common.models_vendor"></a>
2025-08-18T21:11:10.6133934Z 
2025-08-18T21:11:10.6134025Z # common.models\_vendor
2025-08-18T21:11:10.6134177Z 
2025-08-18T21:11:10.6134284Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T21:11:10.6134489Z 
2025-08-18T21:11:10.6134570Z ## Vendor Objects
2025-08-18T21:11:10.6134705Z 
2025-08-18T21:11:10.6134783Z ```python
2025-08-18T21:11:10.6134971Z class Vendor(Base)
2025-08-18T21:11:10.6135167Z ```
2025-08-18T21:11:10.6135265Z 
2025-08-18T21:11:10.6135366Z Vendor of inventory items.
2025-08-18T21:11:10.6135526Z 
2025-08-18T21:11:10.6135651Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T21:11:10.6135890Z 
2025-08-18T21:11:10.6135982Z ## VendorPrice Objects
2025-08-18T21:11:10.6136127Z 
2025-08-18T21:11:10.6136208Z ```python
2025-08-18T21:11:10.6136402Z class VendorPrice(Base)
2025-08-18T21:11:10.6136631Z ```
2025-08-18T21:11:10.6136747Z 
2025-08-18T21:11:10.6136872Z Association table linking vendors to pricing.
2025-08-18T21:11:10.6137090Z 
2025-08-18T21:11:10.6137189Z <a id="common.db_url"></a>
2025-08-18T21:11:10.6137343Z 
2025-08-18T21:11:10.6137423Z # common.db\_url
2025-08-18T21:11:10.6137564Z 
2025-08-18T21:11:10.6137656Z <a id="common.db_url.build_url"></a>
2025-08-18T21:11:10.6137807Z 
2025-08-18T21:11:10.6137876Z #### build\_url
2025-08-18T21:11:10.6137974Z 
2025-08-18T21:11:10.6138041Z ```python
2025-08-18T21:11:10.6138218Z def build_url(async_: bool = True) -> str
2025-08-18T21:11:10.6138439Z ```
2025-08-18T21:11:10.6138525Z 
2025-08-18T21:11:10.6138620Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:11:10.6138791Z 
2025-08-18T21:11:10.6138868Z <a id="common.keepa"></a>
2025-08-18T21:11:10.6139261Z 
2025-08-18T21:11:10.6139329Z # common.keepa
2025-08-18T21:11:10.6139432Z 
2025-08-18T21:11:10.6139511Z <a id="common.llm"></a>
2025-08-18T21:11:10.6139630Z 
2025-08-18T21:11:10.6139692Z # common.llm
2025-08-18T21:11:10.6139786Z 
2025-08-18T21:11:10.6139873Z <a id="common.settings"></a>
2025-08-18T21:11:10.6140009Z 
2025-08-18T21:11:10.6140076Z # common.settings
2025-08-18T21:11:10.6140186Z 
2025-08-18T21:11:10.6140256Z <a id="common.db"></a>
2025-08-18T21:11:10.6140370Z 
2025-08-18T21:11:10.6140438Z # common.db
2025-08-18T21:11:10.6140527Z 
2025-08-18T21:11:10.6140621Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T21:11:10.6140791Z 
2025-08-18T21:11:10.6140872Z #### build\_sqlalchemy\_url
2025-08-18T21:11:10.6140998Z 
2025-08-18T21:11:10.6141058Z ```python
2025-08-18T21:11:10.6141232Z def build_sqlalchemy_url() -> str
2025-08-18T21:11:10.6141431Z ```
2025-08-18T21:11:10.6141516Z 
2025-08-18T21:11:10.6141607Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:11:10.6141785Z 
2025-08-18T21:11:10.6141881Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T21:11:10.6142045Z 
2025-08-18T21:11:10.6142118Z #### build\_asyncpg\_dsn
2025-08-18T21:11:10.6142238Z 
2025-08-18T21:11:10.6142305Z ```python
2025-08-18T21:11:10.6142467Z def build_asyncpg_dsn() -> str
2025-08-18T21:11:10.6142664Z ```
2025-08-18T21:11:10.6142742Z 
2025-08-18T21:11:10.6142868Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:11:10.6143083Z 
2025-08-18T21:11:10.6143166Z <a id="common.db.refresh_mvs"></a>
2025-08-18T21:11:10.6143317Z 
2025-08-18T21:11:10.6143385Z #### refresh\_mvs
2025-08-18T21:11:10.6143488Z 
2025-08-18T21:11:10.6143548Z ```python
2025-08-18T21:11:10.6143739Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:11:10.6143985Z ```
2025-08-18T21:11:10.6144069Z 
2025-08-18T21:11:10.6144202Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:11:10.6144415Z 
2025-08-18T21:11:10.6144489Z <a id="common.config"></a>
2025-08-18T21:11:10.6144630Z 
2025-08-18T21:11:10.6144814Z # common.config
2025-08-18T21:11:10.6144916Z 
2025-08-18T21:11:10.6144994Z <a id="common.base"></a>
2025-08-18T21:11:10.6145114Z 
2025-08-18T21:11:10.6145177Z # common.base
2025-08-18T21:11:10.6145277Z 
2025-08-18T21:11:10.6145355Z <a id="common.base.Base"></a>
2025-08-18T21:11:10.6145491Z 
2025-08-18T21:11:10.6145557Z ## Base Objects
2025-08-18T21:11:10.6145661Z 
2025-08-18T21:11:10.6145720Z ```python
2025-08-18T21:11:10.6145919Z class Base(DeclarativeBase)
2025-08-18T21:11:10.6146108Z ```
2025-08-18T21:11:10.6146190Z 
2025-08-18T21:11:10.6146277Z Base class for SQLAlchemy models.
2025-08-18T21:11:10.6146422Z 
2025-08-18T21:11:10.6146492Z <a id="repricer"></a>
2025-08-18T21:11:10.6146610Z 
2025-08-18T21:11:10.6146673Z # repricer
2025-08-18T21:11:10.6146763Z 
2025-08-18T21:11:10.6146849Z <a id="repricer.app.schemas"></a>
2025-08-18T21:11:10.6147003Z 
2025-08-18T21:11:10.6147080Z # repricer.app.schemas
2025-08-18T21:11:10.6147201Z 
2025-08-18T21:11:10.6147295Z <a id="repricer.app.deps"></a>
2025-08-18T21:11:10.6147443Z 
2025-08-18T21:11:10.6147515Z # repricer.app.deps
2025-08-18T21:11:10.6147634Z 
2025-08-18T21:11:10.6147748Z Placeholder module for Keepa / SP-API clients.
2025-08-18T21:11:10.6147940Z 
2025-08-18T21:11:10.6148023Z <a id="repricer.app.logic"></a>
2025-08-18T21:11:10.6148173Z 
2025-08-18T21:11:10.6148246Z # repricer.app.logic
2025-08-18T21:11:10.6148360Z 
2025-08-18T21:11:10.6148463Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T21:11:10.6148639Z 
2025-08-18T21:11:10.6148704Z #### MIN\_MARGIN
2025-08-18T21:11:10.6148805Z 
2025-08-18T21:11:10.6148875Z 15 % ROI
2025-08-18T21:11:10.6149085Z 
2025-08-18T21:11:10.6149191Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T21:11:10.6149380Z 
2025-08-18T21:11:10.6149451Z #### compute\_price
2025-08-18T21:11:10.6149556Z 
2025-08-18T21:11:10.6149630Z ```python
2025-08-18T21:11:10.6149871Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T21:11:10.6150176Z ```
2025-08-18T21:11:10.6150429Z 
2025-08-18T21:11:10.6150544Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T21:11:10.6150830Z Replace with real competitive logic later.
2025-08-18T21:11:10.6150997Z 
2025-08-18T21:11:10.6151081Z <a id="repricer.app.main"></a>
2025-08-18T21:11:10.6151236Z 
2025-08-18T21:11:10.6151310Z # repricer.app.main
2025-08-18T21:11:10.6151449Z 
2025-08-18T21:11:10.6151534Z <a id="repricer.app"></a>
2025-08-18T21:11:10.6151662Z 
2025-08-18T21:11:10.6151729Z # repricer.app
2025-08-18T21:11:10.6151832Z 
2025-08-18T21:11:10.6151930Z <a id="repricer.tests.test_imports"></a>
2025-08-18T21:11:10.6152147Z 
2025-08-18T21:11:10.6152230Z # repricer.tests.test\_imports
2025-08-18T21:11:10.6152377Z 
2025-08-18T21:11:10.6152464Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T21:11:10.6152626Z 
2025-08-18T21:11:10.6152714Z # repricer.tests.test\_smoke
2025-08-18T21:11:10.6152850Z 
2025-08-18T21:11:10.6152928Z <a id="repricer.tests"></a>
2025-08-18T21:11:10.6153065Z 
2025-08-18T21:11:10.6153138Z # repricer.tests
2025-08-18T21:11:10.6153246Z 
2025-08-18T21:11:10.6153309Z <a id="db"></a>
2025-08-18T21:11:10.6153414Z 
2025-08-18T21:11:10.6153475Z # db
2025-08-18T21:11:10.6153558Z 
2025-08-18T21:11:10.6153638Z <a id="db.utils.views"></a>
2025-08-18T21:11:10.6153765Z 
2025-08-18T21:11:10.6153830Z # db.utils.views
2025-08-18T21:11:10.6153933Z 
2025-08-18T21:11:10.6154030Z <a id="db.utils.views.replace_view"></a>
2025-08-18T21:11:10.6154197Z 
2025-08-18T21:11:10.6154265Z #### replace\_view
2025-08-18T21:11:10.6154375Z 
2025-08-18T21:11:10.6154439Z ```python
2025-08-18T21:11:10.6154626Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T21:11:10.6154875Z ```
2025-08-18T21:11:10.6154959Z 
2025-08-18T21:11:10.6155052Z Drop and recreate a SQL view atomically.
2025-08-18T21:11:10.6155216Z 
2025-08-18T21:11:10.6155287Z <a id="db.utils"></a>
2025-08-18T21:11:10.6155401Z 
2025-08-18T21:11:10.6155470Z # db.utils
2025-08-18T21:11:10.6155558Z 
2025-08-18T21:11:10.6155636Z <a id="price_importer"></a>
2025-08-18T21:11:10.6155777Z 
2025-08-18T21:11:10.6155963Z # price\_importer
2025-08-18T21:11:10.6156068Z 
2025-08-18T21:11:10.6156176Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T21:11:10.6156358Z 
2025-08-18T21:11:10.6156448Z # price\_importer.services\_common.dsn
2025-08-18T21:11:10.6156614Z 
2025-08-18T21:11:10.6156744Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T21:11:10.6156949Z 
2025-08-18T21:11:10.6157014Z #### build\_dsn
2025-08-18T21:11:10.6157120Z 
2025-08-18T21:11:10.6157183Z ```python
2025-08-18T21:11:10.6157353Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:11:10.6157575Z ```
2025-08-18T21:11:10.6157657Z 
2025-08-18T21:11:10.6157735Z Return safe DSN.
2025-08-18T21:11:10.6157836Z 
2025-08-18T21:11:10.6158200Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T21:11:10.6158401Z 
2025-08-18T21:11:10.6158534Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T21:11:10.6158740Z 
2025-08-18T21:11:10.6158850Z # price\_importer.services\_common.models\_vendor
2025-08-18T21:11:10.6159188Z 
2025-08-18T21:11:10.6159294Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T21:11:10.6159481Z 
2025-08-18T21:11:10.6159585Z # price\_importer.services\_common.db\_url
2025-08-18T21:11:10.6159755Z 
2025-08-18T21:11:10.6159885Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T21:11:10.6160105Z 
2025-08-18T21:11:10.6160169Z #### build\_url
2025-08-18T21:11:10.6160268Z 
2025-08-18T21:11:10.6160331Z ```python
2025-08-18T21:11:10.6160512Z def build_url(async_: bool = True) -> str
2025-08-18T21:11:10.6160737Z ```
2025-08-18T21:11:10.6160827Z 
2025-08-18T21:11:10.6160925Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:11:10.6161095Z 
2025-08-18T21:11:10.6161207Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T21:11:10.6161392Z 
2025-08-18T21:11:10.6161485Z # price\_importer.services\_common.keepa
2025-08-18T21:11:10.6161659Z 
2025-08-18T21:11:10.6161761Z <a id="price_importer.services_common.llm"></a>
2025-08-18T21:11:10.6162078Z 
2025-08-18T21:11:10.6162170Z # price\_importer.services\_common.llm
2025-08-18T21:11:10.6162342Z 
2025-08-18T21:11:10.6162456Z <a id="price_importer.services_common.settings"></a>
2025-08-18T21:11:10.6162650Z 
2025-08-18T21:11:10.6162751Z # price\_importer.services\_common.settings
2025-08-18T21:11:10.6162922Z 
2025-08-18T21:11:10.6163023Z <a id="price_importer.services_common.db"></a>
2025-08-18T21:11:10.6163210Z 
2025-08-18T21:11:10.6163298Z # price\_importer.services\_common.db
2025-08-18T21:11:10.6163457Z 
2025-08-18T21:11:10.6163616Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T21:11:10.6163853Z 
2025-08-18T21:11:10.6163930Z #### build\_sqlalchemy\_url
2025-08-18T21:11:10.6164057Z 
2025-08-18T21:11:10.6164125Z ```python
2025-08-18T21:11:10.6164291Z def build_sqlalchemy_url() -> str
2025-08-18T21:11:10.6164498Z ```
2025-08-18T21:11:10.6164577Z 
2025-08-18T21:11:10.6164670Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:11:10.6164854Z 
2025-08-18T21:11:10.6165001Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T21:11:10.6165226Z 
2025-08-18T21:11:10.6165306Z #### build\_asyncpg\_dsn
2025-08-18T21:11:10.6165430Z 
2025-08-18T21:11:10.6165492Z ```python
2025-08-18T21:11:10.6165662Z def build_asyncpg_dsn() -> str
2025-08-18T21:11:10.6165857Z ```
2025-08-18T21:11:10.6165942Z 
2025-08-18T21:11:10.6166067Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:11:10.6166274Z 
2025-08-18T21:11:10.6166398Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T21:11:10.6166610Z 
2025-08-18T21:11:10.6166675Z #### refresh\_mvs
2025-08-18T21:11:10.6166780Z 
2025-08-18T21:11:10.6166848Z ```python
2025-08-18T21:11:10.6167039Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:11:10.6167285Z ```
2025-08-18T21:11:10.6167365Z 
2025-08-18T21:11:10.6167497Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:11:10.6167716Z 
2025-08-18T21:11:10.6167815Z <a id="price_importer.services_common"></a>
2025-08-18T21:11:10.6168101Z 
2025-08-18T21:11:10.6168192Z # price\_importer.services\_common
2025-08-18T21:11:10.6168346Z 
2025-08-18T21:11:10.6168447Z <a id="price_importer.services_common.base"></a>
2025-08-18T21:11:10.6168630Z 
2025-08-18T21:11:10.6168723Z # price\_importer.services\_common.base
2025-08-18T21:11:10.6168886Z 
2025-08-18T21:11:10.6169098Z <a id="price_importer.normaliser"></a>
2025-08-18T21:11:10.6169266Z 
2025-08-18T21:11:10.6169348Z # price\_importer.normaliser
2025-08-18T21:11:10.6169485Z 
2025-08-18T21:11:10.6169593Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T21:11:10.6169774Z 
2025-08-18T21:11:10.6169863Z # price\_importer.common.models\_vendor
2025-08-18T21:11:10.6170024Z 
2025-08-18T21:11:10.6170119Z <a id="price_importer.common.db_url"></a>
2025-08-18T21:11:10.6170289Z 
2025-08-18T21:11:10.6170373Z # price\_importer.common.db\_url
2025-08-18T21:11:10.6170524Z 
2025-08-18T21:11:10.6170628Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T21:11:10.6170823Z 
2025-08-18T21:11:10.6170892Z #### make\_dsn
2025-08-18T21:11:10.6170991Z 
2025-08-18T21:11:10.6171052Z ```python
2025-08-18T21:11:10.6171229Z def make_dsn(async_: bool = False) -> str
2025-08-18T21:11:10.6171447Z ```
2025-08-18T21:11:10.6171533Z 
2025-08-18T21:11:10.6171649Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T21:11:10.6171849Z 
2025-08-18T21:11:10.6171956Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T21:11:10.6172154Z 
2025-08-18T21:11:10.6172217Z #### build\_url
2025-08-18T21:11:10.6172315Z 
2025-08-18T21:11:10.6172382Z ```python
2025-08-18T21:11:10.6172550Z def build_url(async_: bool = False) -> str
2025-08-18T21:11:10.6172778Z ```
2025-08-18T21:11:10.6172858Z 
2025-08-18T21:11:10.6172982Z Return Postgres DSN built from environment variables.
2025-08-18T21:11:10.6173186Z 
2025-08-18T21:11:10.6173272Z <a id="price_importer.common"></a>
2025-08-18T21:11:10.6173425Z 
2025-08-18T21:11:10.6173512Z # price\_importer.common
2025-08-18T21:11:10.6173763Z 
2025-08-18T21:11:10.6173860Z <a id="price_importer.common.base"></a>
2025-08-18T21:11:10.6174024Z 
2025-08-18T21:11:10.6174115Z # price\_importer.common.base
2025-08-18T21:11:10.6174257Z 
2025-08-18T21:11:10.6174353Z <a id="price_importer.tests.conftest"></a>
2025-08-18T21:11:10.6174529Z 
2025-08-18T21:11:10.6174616Z # price\_importer.tests.conftest
2025-08-18T21:11:10.6174795Z 
2025-08-18T21:11:10.6174902Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T21:11:10.6175080Z 
2025-08-18T21:11:10.6175168Z # price\_importer.tests.test\_reader
2025-08-18T21:11:10.6175326Z 
2025-08-18T21:11:10.6175434Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T21:11:10.6175613Z 
2025-08-18T21:11:10.6175702Z # price\_importer.tests.test\_imports
2025-08-18T21:11:10.6175868Z 
2025-08-18T21:11:10.6175963Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T21:11:10.6176133Z 
2025-08-18T21:11:10.6176221Z # price\_importer.tests.test\_smoke
2025-08-18T21:11:10.6176377Z 
2025-08-18T21:11:10.6176490Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T21:11:10.6176677Z 
2025-08-18T21:11:10.6176777Z # price\_importer.tests.test\_normaliser
2025-08-18T21:11:10.6176941Z 
2025-08-18T21:11:10.6177025Z <a id="price_importer.tests"></a>
2025-08-18T21:11:10.6177179Z 
2025-08-18T21:11:10.6177254Z # price\_importer.tests
2025-08-18T21:11:10.6177376Z 
2025-08-18T21:11:10.6177464Z <a id="price_importer.reader"></a>
2025-08-18T21:11:10.6177615Z 
2025-08-18T21:11:10.6177690Z # price\_importer.reader
2025-08-18T21:11:10.6177816Z 
2025-08-18T21:11:10.6177910Z <a id="price_importer.repository"></a>
2025-08-18T21:11:10.6178071Z 
2025-08-18T21:11:10.6178152Z # price\_importer.repository
2025-08-18T21:11:10.6178295Z 
2025-08-18T21:11:10.6178378Z <a id="price_importer.import"></a>
2025-08-18T21:11:10.6178531Z 
2025-08-18T21:11:10.6178609Z # price\_importer.import
2025-08-18T21:11:10.6178734Z 
2025-08-18T21:11:10.6178803Z <a id="fees_h10"></a>
2025-08-18T21:11:10.6178914Z 
2025-08-18T21:11:10.6179087Z # fees\_h10
2025-08-18T21:11:10.6179294Z 
2025-08-18T21:11:10.6179371Z <a id="fees_h10.worker"></a>
2025-08-18T21:11:10.6179506Z 
2025-08-18T21:11:10.6179572Z # fees\_h10.worker
2025-08-18T21:11:10.6179675Z 
2025-08-18T21:11:10.6179768Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T21:11:10.6179947Z 
2025-08-18T21:11:10.6180020Z #### list\_active\_asins
2025-08-18T21:11:10.6180138Z 
2025-08-18T21:11:10.6180205Z ```python
2025-08-18T21:11:10.6180370Z def list_active_asins() -> list[str]
2025-08-18T21:11:10.6180584Z ```
2025-08-18T21:11:10.6180663Z 
2025-08-18T21:11:10.6180772Z Return known ASINs or an empty list if unavailable.
2025-08-18T21:11:10.6180969Z 
2025-08-18T21:11:10.6181051Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T21:11:10.6181206Z 
2025-08-18T21:11:10.6181290Z # fees\_h10.tests.test\_smoke
2025-08-18T21:11:10.6181426Z 
2025-08-18T21:11:10.6181501Z <a id="fees_h10.tests"></a>
2025-08-18T21:11:10.6181629Z 
2025-08-18T21:11:10.6181700Z # fees\_h10.tests
2025-08-18T21:11:10.6181807Z 
2025-08-18T21:11:10.6181918Z <a id="fees_h10.client"></a>
2025-08-18T21:11:10.6182054Z 
2025-08-18T21:11:10.6182124Z # fees\_h10.client
2025-08-18T21:11:10.6182227Z 
2025-08-18T21:11:10.6182307Z <a id="fees_h10.repository"></a>
2025-08-18T21:11:10.6182453Z 
2025-08-18T21:11:10.6182525Z # fees\_h10.repository
2025-08-18T21:11:10.6182639Z 
2025-08-18T21:11:10.6182720Z <a id="emailer"></a>
2025-08-18T21:11:10.6182829Z 
2025-08-18T21:11:10.6182891Z # emailer
2025-08-18T21:11:10.6182984Z 
2025-08-18T21:11:10.6183084Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T21:11:10.6183260Z 
2025-08-18T21:11:10.6183367Z # emailer.tests.test\_import\_emailer
2025-08-18T21:11:10.6183531Z 
2025-08-18T21:11:10.6183615Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T21:11:10.6183770Z 
2025-08-18T21:11:10.6183854Z # emailer.tests.test\_smoke
2025-08-18T21:11:10.6183986Z 
2025-08-18T21:11:10.6184062Z <a id="emailer.tests"></a>
2025-08-18T21:11:10.6204462Z 
2025-08-18T21:11:10.6204622Z # emailer.tests
2025-08-18T21:11:10.6205052Z 
2025-08-18T21:11:10.6205204Z <a id="emailer.generate_body"></a>
2025-08-18T21:11:10.6205451Z 
2025-08-18T21:11:10.6205544Z # emailer.generate\_body
2025-08-18T21:11:10.6205686Z 
2025-08-18T21:11:10.6205765Z <a id="llm_server"></a>
2025-08-18T21:11:10.6205898Z 
2025-08-18T21:11:10.6205965Z # llm\_server
2025-08-18T21:11:10.6206067Z 
2025-08-18T21:11:10.6206160Z <a id="llm_server.app"></a>
2025-08-18T21:11:10.6206296Z 
2025-08-18T21:11:10.6206365Z # llm\_server.app
2025-08-18T21:11:10.6206485Z 
