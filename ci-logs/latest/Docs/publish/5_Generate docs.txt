2025-08-19T08:19:25.9172928Z ##[group]Run pydoc-markdown
2025-08-19T08:19:25.9173255Z [36;1mpydoc-markdown[0m
2025-08-19T08:19:25.9215469Z shell: /usr/bin/bash -e {0}
2025-08-19T08:19:25.9215744Z env:
2025-08-19T08:19:25.9215988Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:25.9216409Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T08:19:25.9216800Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:25.9217145Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:25.9217490Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:25.9217832Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T08:19:25.9218124Z ##[endgroup]
2025-08-19T08:19:26.2768830Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T08:19:26.2769670Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T08:19:26.2770379Z In "pydoc-markdown.yml"
2025-08-19T08:19:26.2770822Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T08:19:26.2771546Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T08:19:26.2772348Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T08:19:26.2772899Z 
2025-08-19T08:19:26.5987313Z <a id="__init__"></a>
2025-08-19T08:19:26.5987744Z 
2025-08-19T08:19:26.5987885Z # \_\_init\_\_
2025-08-19T08:19:26.5988089Z 
2025-08-19T08:19:26.5988219Z <a id="api"></a>
2025-08-19T08:19:26.5988441Z 
2025-08-19T08:19:26.5988560Z # api
2025-08-19T08:19:26.5988725Z 
2025-08-19T08:19:26.5988881Z <a id="api.errors"></a>
2025-08-19T08:19:26.5989115Z 
2025-08-19T08:19:26.5989245Z # api.errors
2025-08-19T08:19:26.5989441Z 
2025-08-19T08:19:26.5989607Z <a id="api.sentry_config"></a>
2025-08-19T08:19:26.5989893Z 
2025-08-19T08:19:26.5990034Z # api.sentry\_config
2025-08-19T08:19:26.5990761Z 
2025-08-19T08:19:26.5990957Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T08:19:26.5991294Z 
2025-08-19T08:19:26.5991460Z # api.tests.test\_sentry\_scrub
2025-08-19T08:19:26.5991789Z 
2025-08-19T08:19:26.5991954Z <a id="api.tests.test_errors_json"></a>
2025-08-19T08:19:26.5992259Z 
2025-08-19T08:19:26.5992415Z # api.tests.test\_errors\_json
2025-08-19T08:19:26.5992680Z 
2025-08-19T08:19:26.5992831Z <a id="api.tests.test_llm"></a>
2025-08-19T08:19:26.5993095Z 
2025-08-19T08:19:26.5993230Z # api.tests.test\_llm
2025-08-19T08:19:26.5993452Z 
2025-08-19T08:19:26.5993606Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T08:19:26.5993907Z 
2025-08-19T08:19:26.5994057Z # api.tests.test\_sentry\_event
2025-08-19T08:19:26.5994318Z 
2025-08-19T08:19:26.5994562Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T08:19:26.5994958Z 
2025-08-19T08:19:26.5995108Z ## DummyTransport Objects
2025-08-19T08:19:26.5995362Z 
2025-08-19T08:19:26.5995487Z ```python
2025-08-19T08:19:26.5995801Z class DummyTransport()
2025-08-19T08:19:26.5996144Z ```
2025-08-19T08:19:26.5996301Z 
2025-08-19T08:19:26.5996635Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T08:19:26.5997605Z 
2025-08-19T08:19:26.5997765Z #### capture\_envelope
2025-08-19T08:19:26.5997997Z 
2025-08-19T08:19:26.5998129Z ```python
2025-08-19T08:19:26.5998466Z def capture_envelope(envelope)
2025-08-19T08:19:26.5998857Z ```
2025-08-19T08:19:26.5999016Z 
2025-08-19T08:19:26.5999258Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T08:19:26.5999669Z 
2025-08-19T08:19:26.5999838Z <a id="api.tests.test_cors"></a>
2025-08-19T08:19:26.6000321Z 
2025-08-19T08:19:26.6000485Z # api.tests.test\_cors
2025-08-19T08:19:26.6000715Z 
2025-08-19T08:19:26.6000876Z <a id="api.tests.test_imports"></a>
2025-08-19T08:19:26.6001175Z 
2025-08-19T08:19:26.6001327Z # api.tests.test\_imports
2025-08-19T08:19:26.6001574Z 
2025-08-19T08:19:26.6001744Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T08:19:26.6002069Z 
2025-08-19T08:19:26.6002227Z # api.tests.test\_rate\_limit
2025-08-19T08:19:26.6002488Z 
2025-08-19T08:19:26.6002679Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T08:19:26.6003394Z 
2025-08-19T08:19:26.6003523Z #### app
2025-08-19T08:19:26.6003691Z 
2025-08-19T08:19:26.6003820Z noqa: E402
2025-08-19T08:19:26.6003993Z 
2025-08-19T08:19:26.6004165Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T08:19:26.6004484Z 
2025-08-19T08:19:26.6004637Z # api.tests.test\_entrypoint
2025-08-19T08:19:26.6004899Z 
2025-08-19T08:19:26.6005066Z <a id="api.tests.test_health"></a>
2025-08-19T08:19:26.6005352Z 
2025-08-19T08:19:26.6005488Z # api.tests.test\_health
2025-08-19T08:19:26.6005718Z 
2025-08-19T08:19:26.6005869Z <a id="api.logging_config"></a>
2025-08-19T08:19:26.6006128Z 
2025-08-19T08:19:26.6006261Z # api.logging\_config
2025-08-19T08:19:26.6006485Z 
2025-08-19T08:19:26.6006627Z <a id="api.migrations.env"></a>
2025-08-19T08:19:26.6006877Z 
2025-08-19T08:19:26.6007004Z # api.migrations.env
2025-08-19T08:19:26.6007223Z 
2025-08-19T08:19:26.6007442Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T08:19:26.6007809Z 
2025-08-19T08:19:26.6008007Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T08:19:26.6008368Z 
2025-08-19T08:19:26.6008576Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T08:19:26.6008938Z 
2025-08-19T08:19:26.6009123Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T08:19:26.6009449Z 
2025-08-19T08:19:26.6009742Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T08:19:26.6010386Z 
2025-08-19T08:19:26.6010659Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T08:19:26.6011074Z 
2025-08-19T08:19:26.6011316Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T08:19:26.6011702Z 
2025-08-19T08:19:26.6011898Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T08:19:26.6012249Z 
2025-08-19T08:19:26.6012473Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T08:19:26.6012842Z 
2025-08-19T08:19:26.6013042Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T08:19:26.6013372Z 
2025-08-19T08:19:26.6013587Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T08:19:26.6013970Z 
2025-08-19T08:19:26.6014159Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T08:19:26.6014489Z 
2025-08-19T08:19:26.6014684Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T08:19:26.6015042Z 
2025-08-19T08:19:26.6015218Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T08:19:26.6015552Z 
2025-08-19T08:19:26.6015778Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T08:19:26.6016143Z 
2025-08-19T08:19:26.6016325Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T08:19:26.6016651Z 
2025-08-19T08:19:26.6016906Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T08:19:26.6017307Z 
2025-08-19T08:19:26.6017517Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T08:19:26.6017890Z 
2025-08-19T08:19:26.6018102Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T08:19:26.6018469Z 
2025-08-19T08:19:26.6018667Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T08:19:26.6019257Z 
2025-08-19T08:19:26.6019502Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T08:19:26.6019933Z 
2025-08-19T08:19:26.6020343Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T08:19:26.6020783Z 
2025-08-19T08:19:26.6020983Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T08:19:26.6021331Z 
2025-08-19T08:19:26.6021496Z # api.migrations.versions.0001\_baseline
2025-08-19T08:19:26.6021815Z 
2025-08-19T08:19:26.6021968Z <a id="api.migrations.versions"></a>
2025-08-19T08:19:26.6022255Z 
2025-08-19T08:19:26.6022404Z # api.migrations.versions
2025-08-19T08:19:26.6022637Z 
2025-08-19T08:19:26.6022772Z <a id="api.migrations"></a>
2025-08-19T08:19:26.6023018Z 
2025-08-19T08:19:26.6023142Z # api.migrations
2025-08-19T08:19:26.6023330Z 
2025-08-19T08:19:26.6023449Z <a id="api.db"></a>
2025-08-19T08:19:26.6023649Z 
2025-08-19T08:19:26.6023760Z # api.db
2025-08-19T08:19:26.6023914Z 
2025-08-19T08:19:26.6024060Z <a id="api.routes.stats"></a>
2025-08-19T08:19:26.6024547Z 
2025-08-19T08:19:26.6024668Z # api.routes.stats
2025-08-19T08:19:26.6024862Z 
2025-08-19T08:19:26.6025022Z <a id="api.routes.stats.kpi"></a>
2025-08-19T08:19:26.6025297Z 
2025-08-19T08:19:26.6025407Z #### kpi
2025-08-19T08:19:26.6025567Z 
2025-08-19T08:19:26.6025685Z ```python
2025-08-19T08:19:26.6025979Z @router.get("/stats/kpi")
2025-08-19T08:19:26.6026397Z def kpi() -> List[Dict[str, int]]
2025-08-19T08:19:26.6026771Z ```
2025-08-19T08:19:26.6026917Z 
2025-08-19T08:19:26.6027053Z Return KPI metrics (mock).
2025-08-19T08:19:26.6027288Z 
2025-08-19T08:19:26.6027462Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T08:19:26.6027785Z 
2025-08-19T08:19:26.6027907Z #### roi\_by\_vendor
2025-08-19T08:19:26.6028113Z 
2025-08-19T08:19:26.6028224Z ```python
2025-08-19T08:19:26.6028522Z @router.get("/stats/roi_by_vendor")
2025-08-19T08:19:26.6028968Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T08:19:26.6029385Z ```
2025-08-19T08:19:26.6029530Z 
2025-08-19T08:19:26.6029686Z Return ROI percent by vendor.
2025-08-19T08:19:26.6029947Z 
2025-08-19T08:19:26.6030354Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T08:19:26.6030679Z 
2025-08-19T08:19:26.6030800Z #### roi\_trend
2025-08-19T08:19:26.6030996Z 
2025-08-19T08:19:26.6031109Z ```python
2025-08-19T08:19:26.6031411Z @router.get("/stats/roi_trend")
2025-08-19T08:19:26.6031839Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T08:19:26.6032267Z ```
2025-08-19T08:19:26.6032412Z 
2025-08-19T08:19:26.6032548Z Return 30-day ROI trend.
2025-08-19T08:19:26.6032775Z 
2025-08-19T08:19:26.6032921Z <a id="api.routes.roi"></a>
2025-08-19T08:19:26.6033153Z 
2025-08-19T08:19:26.6033270Z # api.routes.roi
2025-08-19T08:19:26.6033470Z 
2025-08-19T08:19:26.6033625Z <a id="api.routes.health"></a>
2025-08-19T08:19:26.6033889Z 
2025-08-19T08:19:26.6034026Z # api.routes.health
2025-08-19T08:19:26.6034246Z 
2025-08-19T08:19:26.6034411Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T08:19:26.6034733Z 
2025-08-19T08:19:26.6034890Z #### MAX\_SKEW
2025-08-19T08:19:26.6035076Z 
2025-08-19T08:19:26.6035194Z seconds
2025-08-19T08:19:26.6035361Z 
2025-08-19T08:19:26.6035531Z <a id="api.routes.health.health"></a>
2025-08-19T08:19:26.6035843Z 
2025-08-19T08:19:26.6035963Z #### health
2025-08-19T08:19:26.6036151Z 
2025-08-19T08:19:26.6036269Z ```python
2025-08-19T08:19:26.6036646Z @router.get("/health", include_in_schema=False)
2025-08-19T08:19:26.6037352Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T08:19:26.6037999Z ```
2025-08-19T08:19:26.6038161Z 
2025-08-19T08:19:26.6038379Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T08:19:26.6038748Z 
2025-08-19T08:19:26.6038913Z <a id="api.routes.repository"></a>
2025-08-19T08:19:26.6039206Z 
2025-08-19T08:19:26.6039354Z # api.routes.repository
2025-08-19T08:19:26.6039595Z 
2025-08-19T08:19:26.6039729Z <a id="api.routes"></a>
2025-08-19T08:19:26.6039948Z 
2025-08-19T08:19:26.6040265Z # api.routes
2025-08-19T08:19:26.6040452Z 
2025-08-19T08:19:26.6040873Z <a id="api.models.fee"></a>
2025-08-19T08:19:26.6041135Z 
2025-08-19T08:19:26.6041249Z # api.models.fee
2025-08-19T08:19:26.6041432Z 
2025-08-19T08:19:26.6041557Z <a id="api.models"></a>
2025-08-19T08:19:26.6041774Z 
2025-08-19T08:19:26.6041887Z # api.models
2025-08-19T08:19:26.6042052Z 
2025-08-19T08:19:26.6042198Z <a id="api.roi_repository"></a>
2025-08-19T08:19:26.6042453Z 
2025-08-19T08:19:26.6042579Z # api.roi\_repository
2025-08-19T08:19:26.6042799Z 
2025-08-19T08:19:26.6042939Z <a id="api.main"></a>
2025-08-19T08:19:26.6043148Z 
2025-08-19T08:19:26.6043265Z # api.main
2025-08-19T08:19:26.6043446Z 
2025-08-19T08:19:26.6043617Z <a id="api.main.ready"></a>
2025-08-19T08:19:26.6043876Z 
2025-08-19T08:19:26.6043990Z #### ready
2025-08-19T08:19:26.6044146Z 
2025-08-19T08:19:26.6044255Z ```python
2025-08-19T08:19:26.6044721Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T08:19:26.6045581Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T08:19:26.6046369Z                                                                       str]
2025-08-19T08:19:26.6046755Z ```
2025-08-19T08:19:26.6046912Z 
2025-08-19T08:19:26.6047088Z Return 200 only when migrations are at head.
2025-08-19T08:19:26.6047425Z 
2025-08-19T08:19:26.6047554Z <a id="api.config"></a>
2025-08-19T08:19:26.6047767Z 
2025-08-19T08:19:26.6047889Z # api.config
2025-08-19T08:19:26.6048061Z 
2025-08-19T08:19:26.6048174Z <a id="etl"></a>
2025-08-19T08:19:26.6048366Z 
2025-08-19T08:19:26.6048475Z # etl
2025-08-19T08:19:26.6048630Z 
2025-08-19T08:19:26.6048781Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T08:19:26.6049064Z 
2025-08-19T08:19:26.6049200Z # etl.fba\_fee\_ingestor
2025-08-19T08:19:26.6049432Z 
2025-08-19T08:19:26.6049590Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T08:19:26.6049849Z 
2025-08-19T08:19:26.6049985Z # etl.sp\_fees\_ingestor
2025-08-19T08:19:26.6050401Z 
2025-08-19T08:19:26.6050547Z <a id="etl.keepa_ingestor"></a>
2025-08-19T08:19:26.6050831Z 
2025-08-19T08:19:26.6050970Z # etl.keepa\_ingestor
2025-08-19T08:19:26.6051176Z 
2025-08-19T08:19:26.6051296Z <a id="etl.db"></a>
2025-08-19T08:19:26.6051497Z 
2025-08-19T08:19:26.6051613Z # etl.db
2025-08-19T08:19:26.6051778Z 
2025-08-19T08:19:26.6051939Z <a id="etl.dialects.schemas"></a>
2025-08-19T08:19:26.6052219Z 
2025-08-19T08:19:26.6052355Z # etl.dialects.schemas
2025-08-19T08:19:26.6052574Z 
2025-08-19T08:19:26.6052765Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T08:19:26.6053098Z 
2025-08-19T08:19:26.6053257Z # etl.dialects.amazon\_reimbursements
2025-08-19T08:19:26.6053551Z 
2025-08-19T08:19:26.6053716Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T08:19:26.6054028Z 
2025-08-19T08:19:26.6054186Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T08:19:26.6054474Z 
2025-08-19T08:19:26.6054634Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T08:19:26.6054939Z 
2025-08-19T08:19:26.6055098Z # etl.dialects.amazon\_returns
2025-08-19T08:19:26.6055362Z 
2025-08-19T08:19:26.6055552Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T08:19:26.6055886Z 
2025-08-19T08:19:26.6056050Z # etl.dialects.amazon\_fee\_preview
2025-08-19T08:19:26.6056341Z 
2025-08-19T08:19:26.6056544Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T08:19:26.6056892Z 
2025-08-19T08:19:26.6057056Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T08:19:26.6057357Z 
2025-08-19T08:19:26.6057535Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T08:19:26.6057854Z 
2025-08-19T08:19:26.6058008Z # etl.dialects.amazon\_settlements
2025-08-19T08:19:26.6058294Z 
2025-08-19T08:19:26.6058429Z <a id="etl.dialects"></a>
2025-08-19T08:19:26.6058662Z 
2025-08-19T08:19:26.6058796Z # etl.dialects
2025-08-19T08:19:26.6058977Z 
2025-08-19T08:19:26.6059098Z <a id="ingest"></a>
2025-08-19T08:19:26.6059294Z 
2025-08-19T08:19:26.6059414Z # ingest
2025-08-19T08:19:26.6059574Z 
2025-08-19T08:19:26.6059723Z <a id="ingest.maintenance"></a>
2025-08-19T08:19:26.6059995Z 
2025-08-19T08:19:26.6060330Z # ingest.maintenance
2025-08-19T08:19:26.6060811Z 
2025-08-19T08:19:26.6060958Z <a id="ingest.copy_loader"></a>
2025-08-19T08:19:26.6061222Z 
2025-08-19T08:19:26.6061350Z # ingest.copy\_loader
2025-08-19T08:19:26.6061556Z 
2025-08-19T08:19:26.6061748Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T08:19:26.6062095Z 
2025-08-19T08:19:26.6062227Z #### copy\_df\_via\_temp
2025-08-19T08:19:26.6062493Z 
2025-08-19T08:19:26.6062609Z ```python
2025-08-19T08:19:26.6062917Z def copy_df_via_temp(engine: Engine,
2025-08-19T08:19:26.6063347Z                      df: pd.DataFrame,
2025-08-19T08:19:26.6063765Z                      target_table: str,
2025-08-19T08:19:26.6064176Z                      *,
2025-08-19T08:19:26.6064585Z                      target_schema: Optional[str] = None,
2025-08-19T08:19:26.6065070Z                      columns: Sequence[str],
2025-08-19T08:19:26.6065560Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T08:19:26.6066062Z                      analyze_after: bool = False,
2025-08-19T08:19:26.6066746Z                      connection: Any | None = None) -> int
2025-08-19T08:19:26.6067182Z ```
2025-08-19T08:19:26.6067344Z 
2025-08-19T08:19:26.6067625Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T08:19:26.6068051Z 
2025-08-19T08:19:26.6068220Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T08:19:26.6068518Z 
2025-08-19T08:19:26.6068658Z # ingest.tests.test\_smoke
2025-08-19T08:19:26.6068905Z 
2025-08-19T08:19:26.6069036Z <a id="ingest.tests"></a>
2025-08-19T08:19:26.6069265Z 
2025-08-19T08:19:26.6069389Z # ingest.tests
2025-08-19T08:19:26.6069635Z 
2025-08-19T08:19:26.6069783Z <a id="ingest.upload_router"></a>
2025-08-19T08:19:26.6070063Z 
2025-08-19T08:19:26.6070400Z # ingest.upload\_router
2025-08-19T08:19:26.6070638Z 
2025-08-19T08:19:26.6070780Z <a id="ingest.email_watcher"></a>
2025-08-19T08:19:26.6071062Z 
2025-08-19T08:19:26.6071213Z # ingest.email\_watcher
2025-08-19T08:19:26.6071435Z 
2025-08-19T08:19:26.6071598Z <a id="ingest.email_watcher.main"></a>
2025-08-19T08:19:26.6071938Z 
2025-08-19T08:19:26.6072055Z #### main
2025-08-19T08:19:26.6072220Z 
2025-08-19T08:19:26.6072345Z ```python
2025-08-19T08:19:26.6072651Z def main() -> dict[str, str]
2025-08-19T08:19:26.6073020Z ```
2025-08-19T08:19:26.6073177Z 
2025-08-19T08:19:26.6073440Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T08:19:26.6073867Z 
2025-08-19T08:19:26.6074090Z Returns {"status": "success"} when processing completes.
2025-08-19T08:19:26.6074481Z 
2025-08-19T08:19:26.6074621Z <a id="ingest.tasks"></a>
2025-08-19T08:19:26.6074864Z 
2025-08-19T08:19:26.6074995Z # ingest.tasks
2025-08-19T08:19:26.6075186Z 
2025-08-19T08:19:26.6075362Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T08:19:26.6075700Z 
2025-08-19T08:19:26.6075850Z #### task\_import\_file
2025-08-19T08:19:26.6076076Z 
2025-08-19T08:19:26.6076199Z ```python
2025-08-19T08:19:26.6076596Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T08:19:26.6077139Z def task_import_file(self: Any,
2025-08-19T08:19:26.6077574Z                      uri: str,
2025-08-19T08:19:26.6077972Z                      report_type: Optional[str] = None,
2025-08-19T08:19:26.6078497Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T08:19:26.6078962Z ```
2025-08-19T08:19:26.6079129Z 
2025-08-19T08:19:26.6079390Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T08:19:26.6079817Z 
2025-08-19T08:19:26.6079977Z <a id="ingest.celery_app"></a>
2025-08-19T08:19:26.6080455Z 
2025-08-19T08:19:26.6080602Z # ingest.celery\_app
2025-08-19T08:19:26.6080816Z 
2025-08-19T08:19:26.6080976Z <a id="ingest.ingest_router"></a>
2025-08-19T08:19:26.6081250Z 
2025-08-19T08:19:26.6081396Z # ingest.ingest\_router
2025-08-19T08:19:26.6081620Z 
2025-08-19T08:19:26.6081764Z <a id="logistics_etl"></a>
2025-08-19T08:19:26.6082015Z 
2025-08-19T08:19:26.6082138Z # logistics\_etl
2025-08-19T08:19:26.6082328Z 
2025-08-19T08:19:26.6082464Z Daily logistics ETL job.
2025-08-19T08:19:26.6082724Z 
2025-08-19T08:19:26.6083121Z <a id="logistics_etl.__main__"></a>
2025-08-19T08:19:26.6083416Z 
2025-08-19T08:19:26.6083567Z # logistics\_etl.\_\_main\_\_
2025-08-19T08:19:26.6083827Z 
2025-08-19T08:19:26.6083969Z <a id="logistics_etl.dsn"></a>
2025-08-19T08:19:26.6084225Z 
2025-08-19T08:19:26.6084374Z # logistics\_etl.dsn
2025-08-19T08:19:26.6084579Z 
2025-08-19T08:19:26.6084792Z Local DSN builder to avoid cross-service dependency.
2025-08-19T08:19:26.6085176Z 
2025-08-19T08:19:26.6085343Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T08:19:26.6085647Z 
2025-08-19T08:19:26.6085776Z #### build\_dsn
2025-08-19T08:19:26.6085961Z 
2025-08-19T08:19:26.6086083Z ```python
2025-08-19T08:19:26.6086429Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:19:26.6086853Z ```
2025-08-19T08:19:26.6087016Z 
2025-08-19T08:19:26.6087286Z Return a Postgres DSN assembled from environment variables.
2025-08-19T08:19:26.6087702Z 
2025-08-19T08:19:26.6087989Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T08:19:26.6089012Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T08:19:26.6089682Z error when any required variable is missing.
2025-08-19T08:19:26.6090012Z 
2025-08-19T08:19:26.6090369Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T08:19:26.6090699Z 
2025-08-19T08:19:26.6090847Z # logistics\_etl.tests.conftest
2025-08-19T08:19:26.6091116Z 
2025-08-19T08:19:26.6091307Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T08:19:26.6091662Z 
2025-08-19T08:19:26.6091839Z # logistics\_etl.tests.test\_repository
2025-08-19T08:19:26.6092142Z 
2025-08-19T08:19:26.6092364Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T08:19:26.6092722Z 
2025-08-19T08:19:26.6092916Z # logistics\_etl.tests.test\_cron
2025-08-19T08:19:26.6093230Z 
2025-08-19T08:19:26.6093452Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T08:19:26.6093787Z 
2025-08-19T08:19:26.6093956Z # logistics\_etl.tests.test\_imports
2025-08-19T08:19:26.6094308Z 
2025-08-19T08:19:26.6094500Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T08:19:26.6094841Z 
2025-08-19T08:19:26.6095027Z # logistics\_etl.tests.test\_smoke
2025-08-19T08:19:26.6095326Z 
2025-08-19T08:19:26.6095506Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T08:19:26.6095838Z 
2025-08-19T08:19:26.6095981Z # logistics\_etl.tests.test\_client
2025-08-19T08:19:26.6096239Z 
2025-08-19T08:19:26.6098224Z <a id="logistics_etl.tests"></a>
2025-08-19T08:19:26.6098557Z 
2025-08-19T08:19:26.6098731Z # logistics\_etl.tests
2025-08-19T08:19:26.6098975Z 
2025-08-19T08:19:26.6099138Z <a id="logistics_etl.flow"></a>
2025-08-19T08:19:26.6099405Z 
2025-08-19T08:19:26.6099542Z # logistics\_etl.flow
2025-08-19T08:19:26.6099767Z 
2025-08-19T08:19:26.6099921Z <a id="logistics_etl.client"></a>
2025-08-19T08:19:26.6100402Z 
2025-08-19T08:19:26.6100543Z # logistics\_etl.client
2025-08-19T08:19:26.6100765Z 
2025-08-19T08:19:26.6100908Z <a id="logistics_etl.cron"></a>
2025-08-19T08:19:26.6101164Z 
2025-08-19T08:19:26.6101305Z # logistics\_etl.cron
2025-08-19T08:19:26.6101547Z 
2025-08-19T08:19:26.6101687Z <a id="logistics_etl.db"></a>
2025-08-19T08:19:26.6101954Z 
2025-08-19T08:19:26.6102187Z # logistics\_etl.db
2025-08-19T08:19:26.6102394Z 
2025-08-19T08:19:26.6102566Z <a id="logistics_etl.repository"></a>
2025-08-19T08:19:26.6102912Z 
2025-08-19T08:19:26.6103057Z # logistics\_etl.repository
2025-08-19T08:19:26.6103293Z 
2025-08-19T08:19:26.6103434Z <a id="alert_bot"></a>
2025-08-19T08:19:26.6103652Z 
2025-08-19T08:19:26.6103773Z # alert\_bot
2025-08-19T08:19:26.6103967Z 
2025-08-19T08:19:26.6104134Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T08:19:26.6104442Z 
2025-08-19T08:19:26.6104594Z # alert\_bot.tests.test\_smoke
2025-08-19T08:19:26.6104864Z 
2025-08-19T08:19:26.6105004Z <a id="alert_bot.tests"></a>
2025-08-19T08:19:26.6105258Z 
2025-08-19T08:19:26.6105398Z # alert\_bot.tests
2025-08-19T08:19:26.6105603Z 
2025-08-19T08:19:26.6105755Z <a id="alert_bot.alert_bot"></a>
2025-08-19T08:19:26.6106026Z 
2025-08-19T08:19:26.6106174Z # alert\_bot.alert\_bot
2025-08-19T08:19:26.6106651Z 
2025-08-19T08:19:26.6106797Z <a id="alert_bot.rules"></a>
2025-08-19T08:19:26.6107055Z 
2025-08-19T08:19:26.6107184Z # alert\_bot.rules
2025-08-19T08:19:26.6107378Z 
2025-08-19T08:19:26.6107511Z <a id="common"></a>
2025-08-19T08:19:26.6107713Z 
2025-08-19T08:19:26.6107830Z # common
2025-08-19T08:19:26.6108003Z 
2025-08-19T08:19:26.6108137Z <a id="common.dsn"></a>
2025-08-19T08:19:26.6108366Z 
2025-08-19T08:19:26.6108486Z # common.dsn
2025-08-19T08:19:26.6108671Z 
2025-08-19T08:19:26.6108819Z <a id="common.dsn.build_dsn"></a>
2025-08-19T08:19:26.6109097Z 
2025-08-19T08:19:26.6109226Z #### build\_dsn
2025-08-19T08:19:26.6109409Z 
2025-08-19T08:19:26.6109526Z ```python
2025-08-19T08:19:26.6109859Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:19:26.6110475Z ```
2025-08-19T08:19:26.6110644Z 
2025-08-19T08:19:26.6110876Z Return a Postgres DSN, validating required variables.
2025-08-19T08:19:26.6111258Z 
2025-08-19T08:19:26.6111648Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T08:19:26.6112765Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T08:19:26.6113565Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T08:19:26.6114148Z missing.
2025-08-19T08:19:26.6114319Z 
2025-08-19T08:19:26.6114484Z <a id="common.models_vendor"></a>
2025-08-19T08:19:26.6114765Z 
2025-08-19T08:19:26.6114902Z # common.models\_vendor
2025-08-19T08:19:26.6115138Z 
2025-08-19T08:19:26.6115302Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T08:19:26.6115613Z 
2025-08-19T08:19:26.6115749Z ## Vendor Objects
2025-08-19T08:19:26.6115941Z 
2025-08-19T08:19:26.6116058Z ```python
2025-08-19T08:19:26.6116349Z class Vendor(Base)
2025-08-19T08:19:26.6116643Z ```
2025-08-19T08:19:26.6116800Z 
2025-08-19T08:19:26.6116966Z Vendor of inventory items.
2025-08-19T08:19:26.6117219Z 
2025-08-19T08:19:26.6117412Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T08:19:26.6117788Z 
2025-08-19T08:19:26.6117945Z ## VendorPrice Objects
2025-08-19T08:19:26.6118174Z 
2025-08-19T08:19:26.6118302Z ```python
2025-08-19T08:19:26.6118608Z class VendorPrice(Base)
2025-08-19T08:19:26.6118946Z ```
2025-08-19T08:19:26.6119107Z 
2025-08-19T08:19:26.6119306Z Association table linking vendors to pricing.
2025-08-19T08:19:26.6119664Z 
2025-08-19T08:19:26.6119816Z <a id="common.db_url"></a>
2025-08-19T08:19:26.6120063Z 
2025-08-19T08:19:26.6120403Z # common.db\_url
2025-08-19T08:19:26.6120626Z 
2025-08-19T08:19:26.6120785Z <a id="common.db_url.build_url"></a>
2025-08-19T08:19:26.6121092Z 
2025-08-19T08:19:26.6121229Z #### build\_url
2025-08-19T08:19:26.6121428Z 
2025-08-19T08:19:26.6121551Z ```python
2025-08-19T08:19:26.6121892Z def build_url(async_: bool = True) -> str
2025-08-19T08:19:26.6122316Z ```
2025-08-19T08:19:26.6122474Z 
2025-08-19T08:19:26.6122653Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:19:26.6122967Z 
2025-08-19T08:19:26.6123106Z <a id="common.keepa"></a>
2025-08-19T08:19:26.6123380Z 
2025-08-19T08:19:26.6123507Z # common.keepa
2025-08-19T08:19:26.6123696Z 
2025-08-19T08:19:26.6123839Z <a id="common.llm"></a>
2025-08-19T08:19:26.6124061Z 
2025-08-19T08:19:26.6124179Z # common.llm
2025-08-19T08:19:26.6124361Z 
2025-08-19T08:19:26.6124513Z <a id="common.settings"></a>
2025-08-19T08:19:26.6124772Z 
2025-08-19T08:19:26.6124896Z # common.settings
2025-08-19T08:19:26.6125104Z 
2025-08-19T08:19:26.6125234Z <a id="common.db"></a>
2025-08-19T08:19:26.6125449Z 
2025-08-19T08:19:26.6125567Z # common.db
2025-08-19T08:19:26.6125738Z 
2025-08-19T08:19:26.6125915Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T08:19:26.6126240Z 
2025-08-19T08:19:26.6126385Z #### build\_sqlalchemy\_url
2025-08-19T08:19:26.6126629Z 
2025-08-19T08:19:26.6126748Z ```python
2025-08-19T08:19:26.6127099Z def build_sqlalchemy_url() -> str
2025-08-19T08:19:26.6127484Z ```
2025-08-19T08:19:26.6127644Z 
2025-08-19T08:19:26.6127819Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:19:26.6128157Z 
2025-08-19T08:19:26.6128604Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T08:19:26.6128936Z 
2025-08-19T08:19:26.6129085Z #### build\_asyncpg\_dsn
2025-08-19T08:19:26.6129313Z 
2025-08-19T08:19:26.6129450Z ```python
2025-08-19T08:19:26.6129784Z def build_asyncpg_dsn() -> str
2025-08-19T08:19:26.6130357Z ```
2025-08-19T08:19:26.6130530Z 
2025-08-19T08:19:26.6130773Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:19:26.6131191Z 
2025-08-19T08:19:26.6131349Z <a id="common.db.refresh_mvs"></a>
2025-08-19T08:19:26.6131643Z 
2025-08-19T08:19:26.6131776Z #### refresh\_mvs
2025-08-19T08:19:26.6131970Z 
2025-08-19T08:19:26.6132086Z ```python
2025-08-19T08:19:26.6132464Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:19:26.6132916Z ```
2025-08-19T08:19:26.6133077Z 
2025-08-19T08:19:26.6133338Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:19:26.6133746Z 
2025-08-19T08:19:26.6133890Z <a id="common.config"></a>
2025-08-19T08:19:26.6134138Z 
2025-08-19T08:19:26.6134568Z # common.config
2025-08-19T08:19:26.6134766Z 
2025-08-19T08:19:26.6134913Z <a id="common.base"></a>
2025-08-19T08:19:26.6135151Z 
2025-08-19T08:19:26.6135268Z # common.base
2025-08-19T08:19:26.6135451Z 
2025-08-19T08:19:26.6135597Z <a id="common.base.Base"></a>
2025-08-19T08:19:26.6135856Z 
2025-08-19T08:19:26.6135981Z ## Base Objects
2025-08-19T08:19:26.6136186Z 
2025-08-19T08:19:26.6136312Z ```python
2025-08-19T08:19:26.6136637Z class Base(DeclarativeBase)
2025-08-19T08:19:26.6137008Z ```
2025-08-19T08:19:26.6137168Z 
2025-08-19T08:19:26.6137333Z Base class for SQLAlchemy models.
2025-08-19T08:19:26.6137611Z 
2025-08-19T08:19:26.6137748Z <a id="repricer"></a>
2025-08-19T08:19:26.6137975Z 
2025-08-19T08:19:26.6138094Z # repricer
2025-08-19T08:19:26.6138264Z 
2025-08-19T08:19:26.6138420Z <a id="repricer.app.schemas"></a>
2025-08-19T08:19:26.6138713Z 
2025-08-19T08:19:26.6138854Z # repricer.app.schemas
2025-08-19T08:19:26.6139082Z 
2025-08-19T08:19:26.6139246Z <a id="repricer.app.deps"></a>
2025-08-19T08:19:26.6139525Z 
2025-08-19T08:19:26.6139656Z # repricer.app.deps
2025-08-19T08:19:26.6139858Z 
2025-08-19T08:19:26.6140056Z Placeholder module for Keepa / SP-API clients.
2025-08-19T08:19:26.6140606Z 
2025-08-19T08:19:26.6140811Z <a id="repricer.app.logic"></a>
2025-08-19T08:19:26.6141092Z 
2025-08-19T08:19:26.6141231Z # repricer.app.logic
2025-08-19T08:19:26.6141445Z 
2025-08-19T08:19:26.6141641Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T08:19:26.6141963Z 
2025-08-19T08:19:26.6142083Z #### MIN\_MARGIN
2025-08-19T08:19:26.6142284Z 
2025-08-19T08:19:26.6142403Z 15 % ROI
2025-08-19T08:19:26.6142567Z 
2025-08-19T08:19:26.6142767Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T08:19:26.6143122Z 
2025-08-19T08:19:26.6143248Z #### compute\_price
2025-08-19T08:19:26.6143439Z 
2025-08-19T08:19:26.6143557Z ```python
2025-08-19T08:19:26.6144002Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T08:19:26.6144544Z ```
2025-08-19T08:19:26.6144691Z 
2025-08-19T08:19:26.6144900Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T08:19:26.6145398Z Replace with real competitive logic later.
2025-08-19T08:19:26.6145701Z 
2025-08-19T08:19:26.6145848Z <a id="repricer.app.main"></a>
2025-08-19T08:19:26.6146108Z 
2025-08-19T08:19:26.6146237Z # repricer.app.main
2025-08-19T08:19:26.6146439Z 
2025-08-19T08:19:26.6146583Z <a id="repricer.app"></a>
2025-08-19T08:19:26.6146819Z 
2025-08-19T08:19:26.6146946Z # repricer.app
2025-08-19T08:19:26.6147130Z 
2025-08-19T08:19:26.6147311Z <a id="repricer.tests.test_imports"></a>
2025-08-19T08:19:26.6147626Z 
2025-08-19T08:19:26.6147774Z # repricer.tests.test\_imports
2025-08-19T08:19:26.6148034Z 
2025-08-19T08:19:26.6148194Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T08:19:26.6148483Z 
2025-08-19T08:19:26.6148631Z # repricer.tests.test\_smoke
2025-08-19T08:19:26.6148887Z 
2025-08-19T08:19:26.6149025Z <a id="repricer.tests"></a>
2025-08-19T08:19:26.6149268Z 
2025-08-19T08:19:26.6149400Z # repricer.tests
2025-08-19T08:19:26.6149825Z 
2025-08-19T08:19:26.6149939Z <a id="db"></a>
2025-08-19T08:19:26.6150313Z 
2025-08-19T08:19:26.6150428Z # db
2025-08-19T08:19:26.6150578Z 
2025-08-19T08:19:26.6150713Z <a id="db.utils.views"></a>
2025-08-19T08:19:26.6150955Z 
2025-08-19T08:19:26.6151071Z # db.utils.views
2025-08-19T08:19:26.6151255Z 
2025-08-19T08:19:26.6151426Z <a id="db.utils.views.replace_view"></a>
2025-08-19T08:19:26.6151742Z 
2025-08-19T08:19:26.6151862Z #### replace\_view
2025-08-19T08:19:26.6152061Z 
2025-08-19T08:19:26.6152181Z ```python
2025-08-19T08:19:26.6152523Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T08:19:26.6152982Z ```
2025-08-19T08:19:26.6153132Z 
2025-08-19T08:19:26.6153330Z Drop and recreate a SQL view atomically.
2025-08-19T08:19:26.6153632Z 
2025-08-19T08:19:26.6153759Z <a id="db.utils"></a>
2025-08-19T08:19:26.6153964Z 
2025-08-19T08:19:26.6154081Z # db.utils
2025-08-19T08:19:26.6154238Z 
2025-08-19T08:19:26.6154376Z <a id="price_importer"></a>
2025-08-19T08:19:26.6154623Z 
2025-08-19T08:19:26.6154967Z # price\_importer
2025-08-19T08:19:26.6155165Z 
2025-08-19T08:19:26.6155357Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T08:19:26.6155703Z 
2025-08-19T08:19:26.6155870Z # price\_importer.services\_common.dsn
2025-08-19T08:19:26.6156169Z 
2025-08-19T08:19:26.6156399Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T08:19:26.6156825Z 
2025-08-19T08:19:26.6156953Z #### build\_dsn
2025-08-19T08:19:26.6157158Z 
2025-08-19T08:19:26.6157280Z ```python
2025-08-19T08:19:26.6157599Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:19:26.6158013Z ```
2025-08-19T08:19:26.6158164Z 
2025-08-19T08:19:26.6158297Z Return safe DSN.
2025-08-19T08:19:26.6158496Z 
2025-08-19T08:19:26.6159028Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T08:19:26.6159409Z 
2025-08-19T08:19:26.6159644Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T08:19:26.6160034Z 
2025-08-19T08:19:26.6160438Z # price\_importer.services\_common.models\_vendor
2025-08-19T08:19:26.6160833Z 
2025-08-19T08:19:26.6161037Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T08:19:26.6161384Z 
2025-08-19T08:19:26.6161578Z # price\_importer.services\_common.db\_url
2025-08-19T08:19:26.6161906Z 
2025-08-19T08:19:26.6162151Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T08:19:26.6162541Z 
2025-08-19T08:19:26.6162666Z #### build\_url
2025-08-19T08:19:26.6162855Z 
2025-08-19T08:19:26.6162979Z ```python
2025-08-19T08:19:26.6163301Z def build_url(async_: bool = True) -> str
2025-08-19T08:19:26.6163714Z ```
2025-08-19T08:19:26.6163879Z 
2025-08-19T08:19:26.6164055Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:19:26.6164381Z 
2025-08-19T08:19:26.6164589Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T08:19:26.6164933Z 
2025-08-19T08:19:26.6165107Z # price\_importer.services\_common.keepa
2025-08-19T08:19:26.6165432Z 
2025-08-19T08:19:26.6165615Z <a id="price_importer.services_common.llm"></a>
2025-08-19T08:19:26.6165972Z 
2025-08-19T08:19:26.6166156Z # price\_importer.services\_common.llm
2025-08-19T08:19:26.6166474Z 
2025-08-19T08:19:26.6166690Z <a id="price_importer.services_common.settings"></a>
2025-08-19T08:19:26.6167055Z 
2025-08-19T08:19:26.6167255Z # price\_importer.services\_common.settings
2025-08-19T08:19:26.6167592Z 
2025-08-19T08:19:26.6167795Z <a id="price_importer.services_common.db"></a>
2025-08-19T08:19:26.6168154Z 
2025-08-19T08:19:26.6168332Z # price\_importer.services\_common.db
2025-08-19T08:19:26.6168652Z 
2025-08-19T08:19:26.6168948Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T08:19:26.6169419Z 
2025-08-19T08:19:26.6169575Z #### build\_sqlalchemy\_url
2025-08-19T08:19:26.6169845Z 
2025-08-19T08:19:26.6169981Z ```python
2025-08-19T08:19:26.6170510Z def build_sqlalchemy_url() -> str
2025-08-19T08:19:26.6170910Z ```
2025-08-19T08:19:26.6171073Z 
2025-08-19T08:19:26.6171257Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:19:26.6171595Z 
2025-08-19T08:19:26.6171882Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T08:19:26.6172584Z 
2025-08-19T08:19:26.6172735Z #### build\_asyncpg\_dsn
2025-08-19T08:19:26.6172962Z 
2025-08-19T08:19:26.6173081Z ```python
2025-08-19T08:19:26.6173405Z def build_asyncpg_dsn() -> str
2025-08-19T08:19:26.6173774Z ```
2025-08-19T08:19:26.6173932Z 
2025-08-19T08:19:26.6174171Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:19:26.6174553Z 
2025-08-19T08:19:26.6174781Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T08:19:26.6175156Z 
2025-08-19T08:19:26.6175275Z #### refresh\_mvs
2025-08-19T08:19:26.6175462Z 
2025-08-19T08:19:26.6175584Z ```python
2025-08-19T08:19:26.6175935Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:19:26.6176390Z ```
2025-08-19T08:19:26.6176538Z 
2025-08-19T08:19:26.6176782Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:19:26.6177198Z 
2025-08-19T08:19:26.6177385Z <a id="price_importer.services_common"></a>
2025-08-19T08:19:26.6177976Z 
2025-08-19T08:19:26.6178150Z # price\_importer.services\_common
2025-08-19T08:19:26.6178434Z 
2025-08-19T08:19:26.6178624Z <a id="price_importer.services_common.base"></a>
2025-08-19T08:19:26.6178955Z 
2025-08-19T08:19:26.6179128Z # price\_importer.services\_common.base
2025-08-19T08:19:26.6179427Z 
2025-08-19T08:19:26.6179590Z <a id="price_importer.normaliser"></a>
2025-08-19T08:19:26.6179897Z 
2025-08-19T08:19:26.6180058Z # price\_importer.normaliser
2025-08-19T08:19:26.6180510Z 
2025-08-19T08:19:26.6180707Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T08:19:26.6181047Z 
2025-08-19T08:19:26.6181225Z # price\_importer.common.models\_vendor
2025-08-19T08:19:26.6181533Z 
2025-08-19T08:19:26.6181708Z <a id="price_importer.common.db_url"></a>
2025-08-19T08:19:26.6182018Z 
2025-08-19T08:19:26.6182169Z # price\_importer.common.db\_url
2025-08-19T08:19:26.6182453Z 
2025-08-19T08:19:26.6182646Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T08:19:26.6183009Z 
2025-08-19T08:19:26.6183132Z #### make\_dsn
2025-08-19T08:19:26.6183305Z 
2025-08-19T08:19:26.6183418Z ```python
2025-08-19T08:19:26.6183736Z def make_dsn(async_: bool = False) -> str
2025-08-19T08:19:26.6184150Z ```
2025-08-19T08:19:26.6184316Z 
2025-08-19T08:19:26.6184561Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T08:19:26.6184928Z 
2025-08-19T08:19:26.6185129Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T08:19:26.6185484Z 
2025-08-19T08:19:26.6185601Z #### build\_url
2025-08-19T08:19:26.6185782Z 
2025-08-19T08:19:26.6185900Z ```python
2025-08-19T08:19:26.6186224Z def build_url(async_: bool = False) -> str
2025-08-19T08:19:26.6186650Z ```
2025-08-19T08:19:26.6186806Z 
2025-08-19T08:19:26.6187031Z Return Postgres DSN built from environment variables.
2025-08-19T08:19:26.6187416Z 
2025-08-19T08:19:26.6187575Z <a id="price_importer.common"></a>
2025-08-19T08:19:26.6187849Z 
2025-08-19T08:19:26.6187991Z # price\_importer.common
2025-08-19T08:19:26.6188222Z 
2025-08-19T08:19:26.6188406Z <a id="price_importer.common.base"></a>
2025-08-19T08:19:26.6188730Z 
2025-08-19T08:19:26.6188895Z # price\_importer.common.base
2025-08-19T08:19:26.6189169Z 
2025-08-19T08:19:26.6189351Z <a id="price_importer.tests.conftest"></a>
2025-08-19T08:19:26.6189689Z 
2025-08-19T08:19:26.6189852Z # price\_importer.tests.conftest
2025-08-19T08:19:26.6190334Z 
2025-08-19T08:19:26.6190524Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T08:19:26.6190873Z 
2025-08-19T08:19:26.6191035Z # price\_importer.tests.test\_reader
2025-08-19T08:19:26.6191333Z 
2025-08-19T08:19:26.6191527Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T08:19:26.6191870Z 
2025-08-19T08:19:26.6192025Z # price\_importer.tests.test\_imports
2025-08-19T08:19:26.6192334Z 
2025-08-19T08:19:26.6192524Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T08:19:26.6192859Z 
2025-08-19T08:19:26.6193029Z # price\_importer.tests.test\_smoke
2025-08-19T08:19:26.6193340Z 
2025-08-19T08:19:26.6193547Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T08:19:26.6194187Z 
2025-08-19T08:19:26.6194382Z # price\_importer.tests.test\_normaliser
2025-08-19T08:19:26.6194701Z 
2025-08-19T08:19:26.6194864Z <a id="price_importer.tests"></a>
2025-08-19T08:19:26.6195166Z 
2025-08-19T08:19:26.6195311Z # price\_importer.tests
2025-08-19T08:19:26.6195546Z 
2025-08-19T08:19:26.6195713Z <a id="price_importer.reader"></a>
2025-08-19T08:19:26.6196016Z 
2025-08-19T08:19:26.6196163Z # price\_importer.reader
2025-08-19T08:19:26.6196403Z 
2025-08-19T08:19:26.6196583Z <a id="price_importer.repository"></a>
2025-08-19T08:19:26.6196892Z 
2025-08-19T08:19:26.6197042Z # price\_importer.repository
2025-08-19T08:19:26.6197315Z 
2025-08-19T08:19:26.6197469Z <a id="price_importer.import"></a>
2025-08-19T08:19:26.6197749Z 
2025-08-19T08:19:26.6197887Z # price\_importer.import
2025-08-19T08:19:26.6198124Z 
2025-08-19T08:19:26.6198246Z <a id="fees_h10"></a>
2025-08-19T08:19:26.6198449Z 
2025-08-19T08:19:26.6198569Z # fees\_h10
2025-08-19T08:19:26.6198975Z 
2025-08-19T08:19:26.6199122Z <a id="fees_h10.worker"></a>
2025-08-19T08:19:26.6199384Z 
2025-08-19T08:19:26.6199508Z # fees\_h10.worker
2025-08-19T08:19:26.6199697Z 
2025-08-19T08:19:26.6199869Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T08:19:26.6200414Z 
2025-08-19T08:19:26.6200546Z #### list\_active\_asins
2025-08-19T08:19:26.6200768Z 
2025-08-19T08:19:26.6200896Z ```python
2025-08-19T08:19:26.6201210Z def list_active_asins() -> list[str]
2025-08-19T08:19:26.6201616Z ```
2025-08-19T08:19:26.6201763Z 
2025-08-19T08:19:26.6201969Z Return known ASINs or an empty list if unavailable.
2025-08-19T08:19:26.6202332Z 
2025-08-19T08:19:26.6202490Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T08:19:26.6202786Z 
2025-08-19T08:19:26.6202932Z # fees\_h10.tests.test\_smoke
2025-08-19T08:19:26.6203206Z 
2025-08-19T08:19:26.6203343Z <a id="fees_h10.tests"></a>
2025-08-19T08:19:26.6203580Z 
2025-08-19T08:19:26.6203705Z # fees\_h10.tests
2025-08-19T08:19:26.6203890Z 
2025-08-19T08:19:26.6204042Z <a id="fees_h10.client"></a>
2025-08-19T08:19:26.6204307Z 
2025-08-19T08:19:26.6204430Z # fees\_h10.client
2025-08-19T08:19:26.6204620Z 
2025-08-19T08:19:26.6204764Z <a id="fees_h10.repository"></a>
2025-08-19T08:19:26.6205089Z 
2025-08-19T08:19:26.6205221Z # fees\_h10.repository
2025-08-19T08:19:26.6205479Z 
2025-08-19T08:19:26.6205615Z <a id="emailer"></a>
2025-08-19T08:19:26.6205826Z 
2025-08-19T08:19:26.6205948Z # emailer
2025-08-19T08:19:26.6206132Z 
2025-08-19T08:19:26.6206314Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T08:19:26.6206653Z 
2025-08-19T08:19:26.6206825Z # emailer.tests.test\_import\_emailer
2025-08-19T08:19:26.6207139Z 
2025-08-19T08:19:26.6207302Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T08:19:26.6207605Z 
2025-08-19T08:19:26.6207764Z # emailer.tests.test\_smoke
2025-08-19T08:19:26.6208018Z 
2025-08-19T08:19:26.6208165Z <a id="emailer.tests"></a>
2025-08-19T08:19:26.6208403Z 
2025-08-19T08:19:26.6208543Z # emailer.tests
2025-08-19T08:19:26.6208742Z 
2025-08-19T08:19:26.6208922Z <a id="emailer.generate_body"></a>
2025-08-19T08:19:26.6209221Z 
2025-08-19T08:19:26.6209369Z # emailer.generate\_body
2025-08-19T08:19:26.6209610Z 
2025-08-19T08:19:26.6209796Z <a id="llm_server"></a>
2025-08-19T08:19:26.6210023Z 
2025-08-19T08:19:26.6210321Z # llm\_server
2025-08-19T08:19:26.6210518Z 
2025-08-19T08:19:26.6210675Z <a id="llm_server.app"></a>
2025-08-19T08:19:26.6210928Z 
2025-08-19T08:19:26.6211055Z # llm\_server.app
2025-08-19T08:19:26.6211269Z 
