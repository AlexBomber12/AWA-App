2025-08-19T16:05:35.8632063Z ##[group]Run pydoc-markdown
2025-08-19T16:05:35.8632389Z [36;1mpydoc-markdown[0m
2025-08-19T16:05:35.8673503Z shell: /usr/bin/bash -e {0}
2025-08-19T16:05:35.8673746Z env:
2025-08-19T16:05:35.8674002Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:35.8674431Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T16:05:35.8674857Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:35.8675223Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:35.8675594Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:35.8675966Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T16:05:35.8676268Z ##[endgroup]
2025-08-19T16:05:36.3177068Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T16:05:36.3179564Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T16:05:36.3180332Z In "pydoc-markdown.yml"
2025-08-19T16:05:36.3180974Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T16:05:36.3182017Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T16:05:36.3183249Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T16:05:36.3184136Z 
2025-08-19T16:05:36.6446719Z <a id="__init__"></a>
2025-08-19T16:05:36.6447084Z 
2025-08-19T16:05:36.6447220Z # \_\_init\_\_
2025-08-19T16:05:36.6447433Z 
2025-08-19T16:05:36.6447569Z <a id="api"></a>
2025-08-19T16:05:36.6448044Z 
2025-08-19T16:05:36.6448187Z # api
2025-08-19T16:05:36.6448387Z 
2025-08-19T16:05:36.6448541Z <a id="api.errors"></a>
2025-08-19T16:05:36.6448785Z 
2025-08-19T16:05:36.6448928Z # api.errors
2025-08-19T16:05:36.6449122Z 
2025-08-19T16:05:36.6449278Z <a id="api.sentry_config"></a>
2025-08-19T16:05:36.6449573Z 
2025-08-19T16:05:36.6449722Z # api.sentry\_config
2025-08-19T16:05:36.6449957Z 
2025-08-19T16:05:36.6450165Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T16:05:36.6450524Z 
2025-08-19T16:05:36.6450692Z # api.tests.test\_stats\_contracts
2025-08-19T16:05:36.6451101Z 
2025-08-19T16:05:36.6451305Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T16:05:36.6451639Z 
2025-08-19T16:05:36.6451792Z # api.tests.test\_sentry\_scrub
2025-08-19T16:05:36.6452065Z 
2025-08-19T16:05:36.6452243Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T16:05:36.6452567Z 
2025-08-19T16:05:36.6452720Z # api.tests.test\_roi\_basic\_auth
2025-08-19T16:05:36.6453012Z 
2025-08-19T16:05:36.6453290Z <a id="api.tests.test_errors_json"></a>
2025-08-19T16:05:36.6453634Z 
2025-08-19T16:05:36.6453810Z # api.tests.test\_errors\_json
2025-08-19T16:05:36.6454101Z 
2025-08-19T16:05:36.6454235Z <a id="api.tests.test_llm"></a>
2025-08-19T16:05:36.6454508Z 
2025-08-19T16:05:36.6454645Z # api.tests.test\_llm
2025-08-19T16:05:36.6454861Z 
2025-08-19T16:05:36.6455027Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T16:05:36.6455332Z 
2025-08-19T16:05:36.6455474Z # api.tests.test\_roi\_filters
2025-08-19T16:05:36.6455738Z 
2025-08-19T16:05:36.6455855Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T16:05:36.6456354Z 
2025-08-19T16:05:36.6456455Z # api.tests.test\_sentry\_event
2025-08-19T16:05:36.6456633Z 
2025-08-19T16:05:36.6456781Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T16:05:36.6457032Z 
2025-08-19T16:05:36.6457134Z ## DummyTransport Objects
2025-08-19T16:05:36.6457290Z 
2025-08-19T16:05:36.6457369Z ```python
2025-08-19T16:05:36.6457578Z class DummyTransport()
2025-08-19T16:05:36.6458051Z ```
2025-08-19T16:05:36.6458155Z 
2025-08-19T16:05:36.6458374Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T16:05:36.6458691Z 
2025-08-19T16:05:36.6458776Z #### capture\_envelope
2025-08-19T16:05:36.6458921Z 
2025-08-19T16:05:36.6458997Z ```python
2025-08-19T16:05:36.6459213Z def capture_envelope(envelope)
2025-08-19T16:05:36.6459454Z ```
2025-08-19T16:05:36.6459552Z 
2025-08-19T16:05:36.6459710Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T16:05:36.6459958Z 
2025-08-19T16:05:36.6460056Z <a id="api.tests.test_cors"></a>
2025-08-19T16:05:36.6460474Z 
2025-08-19T16:05:36.6460559Z # api.tests.test\_cors
2025-08-19T16:05:36.6460697Z 
2025-08-19T16:05:36.6460798Z <a id="api.tests.test_imports"></a>
2025-08-19T16:05:36.6460991Z 
2025-08-19T16:05:36.6461080Z # api.tests.test\_imports
2025-08-19T16:05:36.6461235Z 
2025-08-19T16:05:36.6461348Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T16:05:36.6461544Z 
2025-08-19T16:05:36.6461638Z # api.tests.test\_rate\_limit
2025-08-19T16:05:36.6461809Z 
2025-08-19T16:05:36.6461919Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T16:05:36.6462123Z 
2025-08-19T16:05:36.6462186Z #### app
2025-08-19T16:05:36.6462285Z 
2025-08-19T16:05:36.6462350Z noqa: E402
2025-08-19T16:05:36.6462440Z 
2025-08-19T16:05:36.6462537Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T16:05:36.6462703Z 
2025-08-19T16:05:36.6462784Z # api.tests.test\_entrypoint
2025-08-19T16:05:36.6462924Z 
2025-08-19T16:05:36.6463015Z <a id="api.tests.test_health"></a>
2025-08-19T16:05:36.6463173Z 
2025-08-19T16:05:36.6463254Z # api.tests.test\_health
2025-08-19T16:05:36.6463388Z 
2025-08-19T16:05:36.6463471Z <a id="api.tests.test_score"></a>
2025-08-19T16:05:36.6463655Z 
2025-08-19T16:05:36.6463737Z # api.tests.test\_score
2025-08-19T16:05:36.6463855Z 
2025-08-19T16:05:36.6463934Z <a id="api.logging_config"></a>
2025-08-19T16:05:36.6464071Z 
2025-08-19T16:05:36.6464148Z # api.logging\_config
2025-08-19T16:05:36.6464264Z 
2025-08-19T16:05:36.6464345Z <a id="api.migrations.env"></a>
2025-08-19T16:05:36.6464490Z 
2025-08-19T16:05:36.6464564Z # api.migrations.env
2025-08-19T16:05:36.6464679Z 
2025-08-19T16:05:36.6464796Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T16:05:36.6465001Z 
2025-08-19T16:05:36.6465110Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T16:05:36.6465298Z 
2025-08-19T16:05:36.6465415Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T16:05:36.6465611Z 
2025-08-19T16:05:36.6465706Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T16:05:36.6465890Z 
2025-08-19T16:05:36.6466040Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T16:05:36.6466277Z 
2025-08-19T16:05:36.6466419Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T16:05:36.6466634Z 
2025-08-19T16:05:36.6466754Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T16:05:36.6466958Z 
2025-08-19T16:05:36.6467064Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T16:05:36.6467250Z 
2025-08-19T16:05:36.6467371Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T16:05:36.6467583Z 
2025-08-19T16:05:36.6467801Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T16:05:36.6467984Z 
2025-08-19T16:05:36.6468113Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T16:05:36.6468314Z 
2025-08-19T16:05:36.6468426Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T16:05:36.6468620Z 
2025-08-19T16:05:36.6468737Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T16:05:36.6469143Z 
2025-08-19T16:05:36.6469264Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T16:05:36.6469482Z 
2025-08-19T16:05:36.6469608Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T16:05:36.6469815Z 
2025-08-19T16:05:36.6469922Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T16:05:36.6470101Z 
2025-08-19T16:05:36.6470246Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T16:05:36.6470463Z 
2025-08-19T16:05:36.6470583Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T16:05:36.6470787Z 
2025-08-19T16:05:36.6470913Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T16:05:36.6471114Z 
2025-08-19T16:05:36.6471223Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T16:05:36.6471414Z 
2025-08-19T16:05:36.6471550Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T16:05:36.6471767Z 
2025-08-19T16:05:36.6471888Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T16:05:36.6472223Z 
2025-08-19T16:05:36.6472333Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T16:05:36.6472530Z 
2025-08-19T16:05:36.6472628Z # api.migrations.versions.0001\_baseline
2025-08-19T16:05:36.6472803Z 
2025-08-19T16:05:36.6472893Z <a id="api.migrations.versions"></a>
2025-08-19T16:05:36.6473060Z 
2025-08-19T16:05:36.6473143Z # api.migrations.versions
2025-08-19T16:05:36.6473278Z 
2025-08-19T16:05:36.6473367Z <a id="api.migrations"></a>
2025-08-19T16:05:36.6473501Z 
2025-08-19T16:05:36.6473570Z # api.migrations
2025-08-19T16:05:36.6473863Z 
2025-08-19T16:05:36.6473985Z <a id="api.db"></a>
2025-08-19T16:05:36.6474172Z 
2025-08-19T16:05:36.6474291Z # api.db
2025-08-19T16:05:36.6474460Z 
2025-08-19T16:05:36.6474609Z <a id="api.routes.score"></a>
2025-08-19T16:05:36.6474869Z 
2025-08-19T16:05:36.6475002Z # api.routes.score
2025-08-19T16:05:36.6475194Z 
2025-08-19T16:05:36.6475336Z <a id="api.routes.stats"></a>
2025-08-19T16:05:36.6475590Z 
2025-08-19T16:05:36.6475737Z # api.routes.stats
2025-08-19T16:05:36.6475939Z 
2025-08-19T16:05:36.6476023Z <a id="api.routes.roi"></a>
2025-08-19T16:05:36.6476167Z 
2025-08-19T16:05:36.6476236Z # api.routes.roi
2025-08-19T16:05:36.6476342Z 
2025-08-19T16:05:36.6476431Z <a id="api.routes.health"></a>
2025-08-19T16:05:36.6476571Z 
2025-08-19T16:05:36.6476643Z # api.routes.health
2025-08-19T16:05:36.6476754Z 
2025-08-19T16:05:36.6476852Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T16:05:36.6477019Z 
2025-08-19T16:05:36.6477086Z #### MAX\_SKEW
2025-08-19T16:05:36.6477191Z 
2025-08-19T16:05:36.6477253Z seconds
2025-08-19T16:05:36.6477338Z 
2025-08-19T16:05:36.6477427Z <a id="api.routes.health.health"></a>
2025-08-19T16:05:36.6477596Z 
2025-08-19T16:05:36.6477787Z #### health
2025-08-19T16:05:36.6477878Z 
2025-08-19T16:05:36.6477949Z ```python
2025-08-19T16:05:36.6478149Z @router.get("/health", include_in_schema=False)
2025-08-19T16:05:36.6478561Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T16:05:36.6478897Z ```
2025-08-19T16:05:36.6478995Z 
2025-08-19T16:05:36.6479114Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T16:05:36.6479312Z 
2025-08-19T16:05:36.6479401Z <a id="api.routes.repository"></a>
2025-08-19T16:05:36.6479565Z 
2025-08-19T16:05:36.6479645Z # api.routes.repository
2025-08-19T16:05:36.6479771Z 
2025-08-19T16:05:36.6479849Z <a id="api.routes"></a>
2025-08-19T16:05:36.6479969Z 
2025-08-19T16:05:36.6480035Z # api.routes
2025-08-19T16:05:36.6480139Z 
2025-08-19T16:05:36.6480216Z <a id="api.models.fee"></a>
2025-08-19T16:05:36.6480347Z 
2025-08-19T16:05:36.6480416Z # api.models.fee
2025-08-19T16:05:36.6480526Z 
2025-08-19T16:05:36.6480599Z <a id="api.models"></a>
2025-08-19T16:05:36.6480716Z 
2025-08-19T16:05:36.6480788Z # api.models
2025-08-19T16:05:36.6480881Z 
2025-08-19T16:05:36.6480961Z <a id="api.roi_repository"></a>
2025-08-19T16:05:36.6481110Z 
2025-08-19T16:05:36.6481182Z # api.roi\_repository
2025-08-19T16:05:36.6481298Z 
2025-08-19T16:05:36.6481368Z <a id="api.main"></a>
2025-08-19T16:05:36.6481669Z 
2025-08-19T16:05:36.6481734Z # api.main
2025-08-19T16:05:36.6481827Z 
2025-08-19T16:05:36.6481910Z <a id="api.main.ready"></a>
2025-08-19T16:05:36.6482040Z 
2025-08-19T16:05:36.6482103Z #### ready
2025-08-19T16:05:36.6482191Z 
2025-08-19T16:05:36.6482264Z ```python
2025-08-19T16:05:36.6482523Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T16:05:36.6482957Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T16:05:36.6483305Z                                                                       str]
2025-08-19T16:05:36.6483539Z ```
2025-08-19T16:05:36.6483622Z 
2025-08-19T16:05:36.6483724Z Return 200 only when migrations are at head.
2025-08-19T16:05:36.6483897Z 
2025-08-19T16:05:36.6483970Z <a id="api.config"></a>
2025-08-19T16:05:36.6484089Z 
2025-08-19T16:05:36.6484167Z # api.config
2025-08-19T16:05:36.6484262Z 
2025-08-19T16:05:36.6484337Z <a id="api.security"></a>
2025-08-19T16:05:36.6484476Z 
2025-08-19T16:05:36.6484664Z # api.security
2025-08-19T16:05:36.6484766Z 
2025-08-19T16:05:36.6484838Z <a id="etl"></a>
2025-08-19T16:05:36.6484941Z 
2025-08-19T16:05:36.6485005Z # etl
2025-08-19T16:05:36.6485090Z 
2025-08-19T16:05:36.6485184Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T16:05:36.6485331Z 
2025-08-19T16:05:36.6485404Z # etl.fba\_fee\_ingestor
2025-08-19T16:05:36.6485531Z 
2025-08-19T16:05:36.6485611Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T16:05:36.6485755Z 
2025-08-19T16:05:36.6485828Z # etl.sp\_fees\_ingestor
2025-08-19T16:05:36.6485953Z 
2025-08-19T16:05:36.6486031Z <a id="etl.keepa_ingestor"></a>
2025-08-19T16:05:36.6486171Z 
2025-08-19T16:05:36.6486246Z # etl.keepa\_ingestor
2025-08-19T16:05:36.6486361Z 
2025-08-19T16:05:36.6486428Z <a id="etl.db"></a>
2025-08-19T16:05:36.6486539Z 
2025-08-19T16:05:36.6486601Z # etl.db
2025-08-19T16:05:36.6486688Z 
2025-08-19T16:05:36.6486771Z <a id="etl.dialects.schemas"></a>
2025-08-19T16:05:36.6486925Z 
2025-08-19T16:05:36.6487000Z # etl.dialects.schemas
2025-08-19T16:05:36.6487126Z 
2025-08-19T16:05:36.6487238Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T16:05:36.6487423Z 
2025-08-19T16:05:36.6487515Z # etl.dialects.amazon\_reimbursements
2025-08-19T16:05:36.6487791Z 
2025-08-19T16:05:36.6487890Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T16:05:36.6488065Z 
2025-08-19T16:05:36.6488152Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T16:05:36.6488316Z 
2025-08-19T16:05:36.6488406Z <a id="etl.dialects.test_generic"></a>
2025-08-19T16:05:36.6488566Z 
2025-08-19T16:05:36.6488653Z # etl.dialects.test\_generic
2025-08-19T16:05:36.6488790Z 
2025-08-19T16:05:36.6488879Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T16:05:36.6489049Z 
2025-08-19T16:05:36.6489131Z # etl.dialects.amazon\_returns
2025-08-19T16:05:36.6489271Z 
2025-08-19T16:05:36.6489368Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T16:05:36.6489542Z 
2025-08-19T16:05:36.6489628Z # etl.dialects.amazon\_fee\_preview
2025-08-19T16:05:36.6489780Z 
2025-08-19T16:05:36.6489896Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T16:05:36.6490083Z 
2025-08-19T16:05:36.6490174Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T16:05:36.6490342Z 
2025-08-19T16:05:36.6490441Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T16:05:36.6490613Z 
2025-08-19T16:05:36.6490702Z # etl.dialects.amazon\_settlements
2025-08-19T16:05:36.6490860Z 
2025-08-19T16:05:36.6490937Z <a id="etl.dialects"></a>
2025-08-19T16:05:36.6491062Z 
2025-08-19T16:05:36.6491135Z # etl.dialects
2025-08-19T16:05:36.6491233Z 
2025-08-19T16:05:36.6491312Z <a id="ingest"></a>
2025-08-19T16:05:36.6491419Z 
2025-08-19T16:05:36.6491481Z # ingest
2025-08-19T16:05:36.6491566Z 
2025-08-19T16:05:36.6491654Z <a id="ingest.maintenance"></a>
2025-08-19T16:05:36.6491795Z 
2025-08-19T16:05:36.6491868Z # ingest.maintenance
2025-08-19T16:05:36.6491987Z 
2025-08-19T16:05:36.6492065Z <a id="ingest.copy_loader"></a>
2025-08-19T16:05:36.6492200Z 
2025-08-19T16:05:36.6492272Z # ingest.copy\_loader
2025-08-19T16:05:36.6492401Z 
2025-08-19T16:05:36.6492622Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T16:05:36.6492801Z 
2025-08-19T16:05:36.6492883Z #### copy\_df\_via\_temp
2025-08-19T16:05:36.6493007Z 
2025-08-19T16:05:36.6493071Z ```python
2025-08-19T16:05:36.6493245Z def copy_df_via_temp(engine: Engine,
2025-08-19T16:05:36.6493477Z                      df: pd.DataFrame,
2025-08-19T16:05:36.6493713Z                      target_table: str,
2025-08-19T16:05:36.6493926Z                      *,
2025-08-19T16:05:36.6494137Z                      target_schema: Optional[str] = None,
2025-08-19T16:05:36.6494400Z                      columns: Sequence[str],
2025-08-19T16:05:36.6494669Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T16:05:36.6494957Z                      analyze_after: bool = False,
2025-08-19T16:05:36.6495239Z                      connection: Any | None = None) -> int
2025-08-19T16:05:36.6495480Z ```
2025-08-19T16:05:36.6495565Z 
2025-08-19T16:05:36.6495718Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T16:05:36.6496078Z 
2025-08-19T16:05:36.6496165Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T16:05:36.6496321Z 
2025-08-19T16:05:36.6496406Z # ingest.tests.test\_smoke
2025-08-19T16:05:36.6496536Z 
2025-08-19T16:05:36.6496612Z <a id="ingest.tests"></a>
2025-08-19T16:05:36.6496741Z 
2025-08-19T16:05:36.6496807Z # ingest.tests
2025-08-19T16:05:36.6496909Z 
2025-08-19T16:05:36.6496994Z <a id="ingest.upload_router"></a>
2025-08-19T16:05:36.6497147Z 
2025-08-19T16:05:36.6497222Z # ingest.upload\_router
2025-08-19T16:05:36.6497342Z 
2025-08-19T16:05:36.6497431Z <a id="ingest.email_watcher"></a>
2025-08-19T16:05:36.6497576Z 
2025-08-19T16:05:36.6497839Z # ingest.email\_watcher
2025-08-19T16:05:36.6498035Z 
2025-08-19T16:05:36.6498176Z <a id="ingest.email_watcher.main"></a>
2025-08-19T16:05:36.6498432Z 
2025-08-19T16:05:36.6498533Z #### main
2025-08-19T16:05:36.6498688Z 
2025-08-19T16:05:36.6498755Z ```python
2025-08-19T16:05:36.6498925Z def main() -> dict[str, str]
2025-08-19T16:05:36.6499138Z ```
2025-08-19T16:05:36.6499222Z 
2025-08-19T16:05:36.6499367Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T16:05:36.6499590Z 
2025-08-19T16:05:36.6499717Z Returns {"status": "success"} when processing completes.
2025-08-19T16:05:36.6499930Z 
2025-08-19T16:05:36.6500006Z <a id="ingest.tasks"></a>
2025-08-19T16:05:36.6500132Z 
2025-08-19T16:05:36.6500197Z # ingest.tasks
2025-08-19T16:05:36.6500303Z 
2025-08-19T16:05:36.6500399Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T16:05:36.6500570Z 
2025-08-19T16:05:36.6500650Z #### task\_import\_file
2025-08-19T16:05:36.6500765Z 
2025-08-19T16:05:36.6500829Z ```python
2025-08-19T16:05:36.6501046Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T16:05:36.6501350Z def task_import_file(self: Any,
2025-08-19T16:05:36.6501560Z                      uri: str,
2025-08-19T16:05:36.6501781Z                      report_type: str | None = None,
2025-08-19T16:05:36.6502047Z                      force: bool = False) -> dict[str, Any]
2025-08-19T16:05:36.6502296Z ```
2025-08-19T16:05:36.6502380Z 
2025-08-19T16:05:36.6502514Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T16:05:36.6502722Z 
2025-08-19T16:05:36.6502805Z <a id="ingest.celery_app"></a>
2025-08-19T16:05:36.6502947Z 
2025-08-19T16:05:36.6503022Z # ingest.celery\_app
2025-08-19T16:05:36.6503135Z 
2025-08-19T16:05:36.6503216Z <a id="ingest.ingest_router"></a>
2025-08-19T16:05:36.6503368Z 
2025-08-19T16:05:36.6503442Z # ingest.ingest\_router
2025-08-19T16:05:36.6503560Z 
2025-08-19T16:05:36.6503640Z <a id="logistics_etl"></a>
2025-08-19T16:05:36.6503768Z 
2025-08-19T16:05:36.6503835Z # logistics\_etl
2025-08-19T16:05:36.6503941Z 
2025-08-19T16:05:36.6504022Z Daily logistics ETL job.
2025-08-19T16:05:36.6504145Z 
2025-08-19T16:05:36.6504226Z <a id="logistics_etl.__main__"></a>
2025-08-19T16:05:36.6504382Z 
2025-08-19T16:05:36.6504459Z # logistics\_etl.\_\_main\_\_
2025-08-19T16:05:36.6504593Z 
2025-08-19T16:05:36.6504823Z <a id="logistics_etl.dsn"></a>
2025-08-19T16:05:36.6504959Z 
2025-08-19T16:05:36.6505027Z # logistics\_etl.dsn
2025-08-19T16:05:36.6505136Z 
2025-08-19T16:05:36.6505254Z Local DSN builder to avoid cross-service dependency.
2025-08-19T16:05:36.6505453Z 
2025-08-19T16:05:36.6505542Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T16:05:36.6505714Z 
2025-08-19T16:05:36.6505778Z #### build\_dsn
2025-08-19T16:05:36.6505879Z 
2025-08-19T16:05:36.6505949Z ```python
2025-08-19T16:05:36.6506120Z def build_dsn(sync: bool = True) -> str
2025-08-19T16:05:36.6506344Z ```
2025-08-19T16:05:36.6506424Z 
2025-08-19T16:05:36.6506561Z Return a Postgres DSN assembled from environment variables.
2025-08-19T16:05:36.6506786Z 
2025-08-19T16:05:36.6506933Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T16:05:36.6507323Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T16:05:36.6507872Z error when any required variable is missing.
2025-08-19T16:05:36.6508062Z 
2025-08-19T16:05:36.6508291Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T16:05:36.6508464Z 
2025-08-19T16:05:36.6508544Z # logistics\_etl.tests.conftest
2025-08-19T16:05:36.6508685Z 
2025-08-19T16:05:36.6508795Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T16:05:36.6508979Z 
2025-08-19T16:05:36.6509067Z # logistics\_etl.tests.test\_repository
2025-08-19T16:05:36.6509237Z 
2025-08-19T16:05:36.6509329Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T16:05:36.6509497Z 
2025-08-19T16:05:36.6509587Z # logistics\_etl.tests.test\_cron
2025-08-19T16:05:36.6509733Z 
2025-08-19T16:05:36.6509831Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T16:05:36.6510008Z 
2025-08-19T16:05:36.6510101Z # logistics\_etl.tests.test\_imports
2025-08-19T16:05:36.6510256Z 
2025-08-19T16:05:36.6510350Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T16:05:36.6510526Z 
2025-08-19T16:05:36.6510611Z # logistics\_etl.tests.test\_smoke
2025-08-19T16:05:36.6510760Z 
2025-08-19T16:05:36.6510861Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T16:05:36.6511036Z 
2025-08-19T16:05:36.6511119Z # logistics\_etl.tests.test\_client
2025-08-19T16:05:36.6511270Z 
2025-08-19T16:05:36.6511361Z <a id="logistics_etl.tests"></a>
2025-08-19T16:05:36.6511504Z 
2025-08-19T16:05:36.6511577Z # logistics\_etl.tests
2025-08-19T16:05:36.6511700Z 
2025-08-19T16:05:36.6511777Z <a id="logistics_etl.flow"></a>
2025-08-19T16:05:36.6511916Z 
2025-08-19T16:05:36.6511994Z # logistics\_etl.flow
2025-08-19T16:05:36.6512109Z 
2025-08-19T16:05:36.6512191Z <a id="logistics_etl.client"></a>
2025-08-19T16:05:36.6512334Z 
2025-08-19T16:05:36.6512416Z # logistics\_etl.client
2025-08-19T16:05:36.6512534Z 
2025-08-19T16:05:36.6512613Z <a id="logistics_etl.cron"></a>
2025-08-19T16:05:36.6512755Z 
2025-08-19T16:05:36.6512827Z # logistics\_etl.cron
2025-08-19T16:05:36.6512941Z 
2025-08-19T16:05:36.6513026Z <a id="logistics_etl.db"></a>
2025-08-19T16:05:36.6513163Z 
2025-08-19T16:05:36.6513233Z # logistics\_etl.db
2025-08-19T16:05:36.6513349Z 
2025-08-19T16:05:36.6513447Z <a id="logistics_etl.repository"></a>
2025-08-19T16:05:36.6513605Z 
2025-08-19T16:05:36.6548463Z # logistics\_etl.repository
2025-08-19T16:05:36.6548856Z 
2025-08-19T16:05:36.6549021Z <a id="alert_bot"></a>
2025-08-19T16:05:36.6549310Z 
2025-08-19T16:05:36.6549472Z # alert\_bot
2025-08-19T16:05:36.6549709Z 
2025-08-19T16:05:36.6549935Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T16:05:36.6550347Z 
2025-08-19T16:05:36.6550542Z # alert\_bot.tests.test\_smoke
2025-08-19T16:05:36.6550871Z 
2025-08-19T16:05:36.6551034Z <a id="alert_bot.tests"></a>
2025-08-19T16:05:36.6551319Z 
2025-08-19T16:05:36.6551460Z # alert\_bot.tests
2025-08-19T16:05:36.6551678Z 
2025-08-19T16:05:36.6551827Z <a id="alert_bot.alert_bot"></a>
2025-08-19T16:05:36.6552003Z 
2025-08-19T16:05:36.6552083Z # alert\_bot.alert\_bot
2025-08-19T16:05:36.6552212Z 
2025-08-19T16:05:36.6552292Z <a id="alert_bot.rules"></a>
2025-08-19T16:05:36.6552434Z 
2025-08-19T16:05:36.6552504Z # alert\_bot.rules
2025-08-19T16:05:36.6553062Z 
2025-08-19T16:05:36.6553192Z <a id="common"></a>
2025-08-19T16:05:36.6553393Z 
2025-08-19T16:05:36.6553515Z # common
2025-08-19T16:05:36.6553682Z 
2025-08-19T16:05:36.6553814Z <a id="common.dsn"></a>
2025-08-19T16:05:36.6554047Z 
2025-08-19T16:05:36.6554170Z # common.dsn
2025-08-19T16:05:36.6554355Z 
2025-08-19T16:05:36.6554481Z <a id="common.dsn.build_dsn"></a>
2025-08-19T16:05:36.6554653Z 
2025-08-19T16:05:36.6554721Z #### build\_dsn
2025-08-19T16:05:36.6554830Z 
2025-08-19T16:05:36.6554905Z ```python
2025-08-19T16:05:36.6555088Z def build_dsn(sync: bool = True) -> str
2025-08-19T16:05:36.6555320Z ```
2025-08-19T16:05:36.6555406Z 
2025-08-19T16:05:36.6555534Z Return a Postgres DSN, validating required variables.
2025-08-19T16:05:36.6555744Z 
2025-08-19T16:05:36.6555932Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T16:05:36.6556367Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T16:05:36.6556784Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T16:05:36.6557582Z missing.
2025-08-19T16:05:36.6557904Z 
2025-08-19T16:05:36.6557998Z <a id="common.models_vendor"></a>
2025-08-19T16:05:36.6558170Z 
2025-08-19T16:05:36.6558247Z # common.models\_vendor
2025-08-19T16:05:36.6558370Z 
2025-08-19T16:05:36.6558464Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T16:05:36.6558644Z 
2025-08-19T16:05:36.6558714Z ## Vendor Objects
2025-08-19T16:05:36.6558819Z 
2025-08-19T16:05:36.6558890Z ```python
2025-08-19T16:05:36.6559049Z class Vendor(Base)
2025-08-19T16:05:36.6559221Z ```
2025-08-19T16:05:36.6559306Z 
2025-08-19T16:05:36.6559386Z Vendor of inventory items.
2025-08-19T16:05:36.6559525Z 
2025-08-19T16:05:36.6559629Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T16:05:36.6559810Z 
2025-08-19T16:05:36.6559884Z ## VendorPrice Objects
2025-08-19T16:05:36.6560009Z 
2025-08-19T16:05:36.6560074Z ```python
2025-08-19T16:05:36.6560240Z class VendorPrice(Base)
2025-08-19T16:05:36.6560422Z ```
2025-08-19T16:05:36.6560520Z 
2025-08-19T16:05:36.6560629Z Association table linking vendors to pricing.
2025-08-19T16:05:36.6560813Z 
2025-08-19T16:05:36.6560889Z <a id="common.db_url"></a>
2025-08-19T16:05:36.6561024Z 
2025-08-19T16:05:36.6561092Z # common.db\_url
2025-08-19T16:05:36.6561197Z 
2025-08-19T16:05:36.6561281Z <a id="common.db_url.build_url"></a>
2025-08-19T16:05:36.6561446Z 
2025-08-19T16:05:36.6561514Z #### build\_url
2025-08-19T16:05:36.6561617Z 
2025-08-19T16:05:36.6561689Z ```python
2025-08-19T16:05:36.6561865Z def build_url(async_: bool = True) -> str
2025-08-19T16:05:36.6562095Z ```
2025-08-19T16:05:36.6562178Z 
2025-08-19T16:05:36.6562275Z Return Postgres DSN from env or PG_* parts.
2025-08-19T16:05:36.6562456Z 
2025-08-19T16:05:36.6562535Z <a id="common.keepa"></a>
2025-08-19T16:05:36.6562665Z 
2025-08-19T16:05:36.6562737Z # common.keepa
2025-08-19T16:05:36.6562845Z 
2025-08-19T16:05:36.6562919Z <a id="common.llm"></a>
2025-08-19T16:05:36.6563040Z 
2025-08-19T16:05:36.6563110Z # common.llm
2025-08-19T16:05:36.6563216Z 
2025-08-19T16:05:36.6563297Z <a id="common.settings"></a>
2025-08-19T16:05:36.6563440Z 
2025-08-19T16:05:36.6563510Z # common.settings
2025-08-19T16:05:36.6563618Z 
2025-08-19T16:05:36.6563690Z <a id="common.db"></a>
2025-08-19T16:05:36.6563814Z 
2025-08-19T16:05:36.6563879Z # common.db
2025-08-19T16:05:36.6563971Z 
2025-08-19T16:05:36.6564071Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T16:05:36.6564245Z 
2025-08-19T16:05:36.6564322Z #### build\_sqlalchemy\_url
2025-08-19T16:05:36.6564459Z 
2025-08-19T16:05:36.6564523Z ```python
2025-08-19T16:05:36.6564693Z def build_sqlalchemy_url() -> str
2025-08-19T16:05:36.6564905Z ```
2025-08-19T16:05:36.6564989Z 
2025-08-19T16:05:36.6565085Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T16:05:36.6565262Z 
2025-08-19T16:05:36.6565354Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T16:05:36.6565521Z 
2025-08-19T16:05:36.6565604Z #### build\_asyncpg\_dsn
2025-08-19T16:05:36.6565730Z 
2025-08-19T16:05:36.6565801Z ```python
2025-08-19T16:05:36.6566114Z def build_asyncpg_dsn() -> str
2025-08-19T16:05:36.6566315Z ```
2025-08-19T16:05:36.6566406Z 
2025-08-19T16:05:36.6566535Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T16:05:36.6566746Z 
2025-08-19T16:05:36.6566840Z <a id="common.db.refresh_mvs"></a>
2025-08-19T16:05:36.6566996Z 
2025-08-19T16:05:36.6567064Z #### refresh\_mvs
2025-08-19T16:05:36.6567174Z 
2025-08-19T16:05:36.6567245Z ```python
2025-08-19T16:05:36.6567439Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T16:05:36.6567802Z ```
2025-08-19T16:05:36.6567887Z 
2025-08-19T16:05:36.6568024Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T16:05:36.6568246Z 
2025-08-19T16:05:36.6568325Z <a id="common.config"></a>
2025-08-19T16:05:36.6568454Z 
2025-08-19T16:05:36.6568528Z # common.config
2025-08-19T16:05:36.6568635Z 
2025-08-19T16:05:36.6568709Z <a id="common.base"></a>
2025-08-19T16:05:36.6568832Z 
2025-08-19T16:05:36.6568905Z # common.base
2025-08-19T16:05:36.6569132Z 
2025-08-19T16:05:36.6569214Z <a id="common.base.Base"></a>
2025-08-19T16:05:36.6569357Z 
2025-08-19T16:05:36.6569422Z ## Base Objects
2025-08-19T16:05:36.6569522Z 
2025-08-19T16:05:36.6569589Z ```python
2025-08-19T16:05:36.6569755Z class Base(DeclarativeBase)
2025-08-19T16:05:36.6569951Z ```
2025-08-19T16:05:36.6570032Z 
2025-08-19T16:05:36.6570116Z Base class for SQLAlchemy models.
2025-08-19T16:05:36.6570264Z 
2025-08-19T16:05:36.6570340Z <a id="repricer"></a>
2025-08-19T16:05:36.6570454Z 
2025-08-19T16:05:36.6570518Z # repricer
2025-08-19T16:05:36.6570616Z 
2025-08-19T16:05:36.6570704Z <a id="repricer.app.schemas"></a>
2025-08-19T16:05:36.6570850Z 
2025-08-19T16:05:36.6570932Z # repricer.app.schemas
2025-08-19T16:05:36.6571053Z 
2025-08-19T16:05:36.6571136Z <a id="repricer.app.deps"></a>
2025-08-19T16:05:36.6571277Z 
2025-08-19T16:05:36.6571359Z # repricer.app.deps
2025-08-19T16:05:36.6571481Z 
2025-08-19T16:05:36.6571598Z Placeholder module for Keepa / SP-API clients.
2025-08-19T16:05:36.6571796Z 
2025-08-19T16:05:36.6571883Z <a id="repricer.app.logic"></a>
2025-08-19T16:05:36.6572029Z 
2025-08-19T16:05:36.6572109Z # repricer.app.logic
2025-08-19T16:05:36.6572233Z 
2025-08-19T16:05:36.6572333Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T16:05:36.6572510Z 
2025-08-19T16:05:36.6572581Z #### MIN\_MARGIN
2025-08-19T16:05:36.6572682Z 
2025-08-19T16:05:36.6572745Z 15 % ROI
2025-08-19T16:05:36.6572837Z 
2025-08-19T16:05:36.6572939Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T16:05:36.6573119Z 
2025-08-19T16:05:36.6573187Z #### compute\_price
2025-08-19T16:05:36.6573302Z 
2025-08-19T16:05:36.6573365Z ```python
2025-08-19T16:05:36.6573616Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T16:05:36.6573919Z ```
2025-08-19T16:05:36.6574002Z 
2025-08-19T16:05:36.6574118Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T16:05:36.6574401Z Replace with real competitive logic later.
2025-08-19T16:05:36.6574578Z 
2025-08-19T16:05:36.6574661Z <a id="repricer.app.main"></a>
2025-08-19T16:05:36.6574810Z 
2025-08-19T16:05:36.6574884Z # repricer.app.main
2025-08-19T16:05:36.6575001Z 
2025-08-19T16:05:36.6575079Z <a id="repricer.app"></a>
2025-08-19T16:05:36.6575208Z 
2025-08-19T16:05:36.6575283Z # repricer.app
2025-08-19T16:05:36.6575385Z 
2025-08-19T16:05:36.6575477Z <a id="repricer.tests.test_imports"></a>
2025-08-19T16:05:36.6575654Z 
2025-08-19T16:05:36.6575737Z # repricer.tests.test\_imports
2025-08-19T16:05:36.6575876Z 
2025-08-19T16:05:36.6575965Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T16:05:36.6576136Z 
2025-08-19T16:05:36.6576222Z # repricer.tests.test\_smoke
2025-08-19T16:05:36.6576359Z 
2025-08-19T16:05:36.6576445Z <a id="repricer.tests"></a>
2025-08-19T16:05:36.6576579Z 
2025-08-19T16:05:36.6576651Z # repricer.tests
2025-08-19T16:05:36.6576766Z 
2025-08-19T16:05:36.6576837Z <a id="db"></a>
2025-08-19T16:05:36.6576939Z 
2025-08-19T16:05:36.6577050Z # db
2025-08-19T16:05:36.6577137Z 
2025-08-19T16:05:36.6577223Z <a id="db.utils.views"></a>
2025-08-19T16:05:36.6577486Z 
2025-08-19T16:05:36.6577557Z # db.utils.views
2025-08-19T16:05:36.6577765Z 
2025-08-19T16:05:36.6577867Z <a id="db.utils.views.replace_view"></a>
2025-08-19T16:05:36.6578039Z 
2025-08-19T16:05:36.6578109Z #### replace\_view
2025-08-19T16:05:36.6578225Z 
2025-08-19T16:05:36.6578288Z ```python
2025-08-19T16:05:36.6578480Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T16:05:36.6578733Z ```
2025-08-19T16:05:36.6578816Z 
2025-08-19T16:05:36.6578913Z Drop and recreate a SQL view atomically.
2025-08-19T16:05:36.6579075Z 
2025-08-19T16:05:36.6579146Z <a id="db.utils"></a>
2025-08-19T16:05:36.6579261Z 
2025-08-19T16:05:36.6579331Z # db.utils
2025-08-19T16:05:36.6579427Z 
2025-08-19T16:05:36.6579506Z <a id="price_importer"></a>
2025-08-19T16:05:36.6579643Z 
2025-08-19T16:05:36.6579712Z # price\_importer
2025-08-19T16:05:36.6579818Z 
2025-08-19T16:05:36.6579921Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T16:05:36.6580110Z 
2025-08-19T16:05:36.6580200Z # price\_importer.services\_common.dsn
2025-08-19T16:05:36.6580539Z 
2025-08-19T16:05:36.6580669Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T16:05:36.6580879Z 
2025-08-19T16:05:36.6580945Z #### build\_dsn
2025-08-19T16:05:36.6581051Z 
2025-08-19T16:05:36.6581114Z ```python
2025-08-19T16:05:36.6581289Z def build_dsn(sync: bool = True) -> str
2025-08-19T16:05:36.6581516Z ```
2025-08-19T16:05:36.6581599Z 
2025-08-19T16:05:36.6581672Z Return safe DSN.
2025-08-19T16:05:36.6581780Z 
2025-08-19T16:05:36.6582125Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T16:05:36.6582330Z 
2025-08-19T16:05:36.6582465Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T16:05:36.6582674Z 
2025-08-19T16:05:36.6582785Z # price\_importer.services\_common.models\_vendor
2025-08-19T16:05:36.6582979Z 
2025-08-19T16:05:36.6583087Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T16:05:36.6583276Z 
2025-08-19T16:05:36.6583378Z # price\_importer.services\_common.db\_url
2025-08-19T16:05:36.6583564Z 
2025-08-19T16:05:36.6583697Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T16:05:36.6583918Z 
2025-08-19T16:05:36.6583984Z #### build\_url
2025-08-19T16:05:36.6584086Z 
2025-08-19T16:05:36.6584150Z ```python
2025-08-19T16:05:36.6584331Z def build_url(async_: bool = True) -> str
2025-08-19T16:05:36.6584555Z ```
2025-08-19T16:05:36.6584644Z 
2025-08-19T16:05:36.6584740Z Return Postgres DSN from env or PG_* parts.
2025-08-19T16:05:36.6584914Z 
2025-08-19T16:05:36.6585027Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T16:05:36.6585210Z 
2025-08-19T16:05:36.6585302Z # price\_importer.services\_common.keepa
2025-08-19T16:05:36.6585476Z 
2025-08-19T16:05:36.6585576Z <a id="price_importer.services_common.llm"></a>
2025-08-19T16:05:36.6585759Z 
2025-08-19T16:05:36.6585851Z # price\_importer.services\_common.llm
2025-08-19T16:05:36.6586017Z 
2025-08-19T16:05:36.6586131Z <a id="price_importer.services_common.settings"></a>
2025-08-19T16:05:36.6586333Z 
2025-08-19T16:05:36.6586440Z # price\_importer.services\_common.settings
2025-08-19T16:05:36.6586612Z 
2025-08-19T16:05:36.6586714Z <a id="price_importer.services_common.db"></a>
2025-08-19T16:05:36.6586898Z 
2025-08-19T16:05:36.6586991Z # price\_importer.services\_common.db
2025-08-19T16:05:36.6587149Z 
2025-08-19T16:05:36.6587309Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T16:05:36.6587549Z 
2025-08-19T16:05:36.6587723Z #### build\_sqlalchemy\_url
2025-08-19T16:05:36.6587859Z 
2025-08-19T16:05:36.6587931Z ```python
2025-08-19T16:05:36.6588105Z def build_sqlalchemy_url() -> str
2025-08-19T16:05:36.6588316Z ```
2025-08-19T16:05:36.6588399Z 
2025-08-19T16:05:36.6588494Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T16:05:36.6588673Z 
2025-08-19T16:05:36.6588821Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T16:05:36.6589049Z 
2025-08-19T16:05:36.6589132Z #### build\_asyncpg\_dsn
2025-08-19T16:05:36.6589257Z 
2025-08-19T16:05:36.6589450Z ```python
2025-08-19T16:05:36.6589633Z def build_asyncpg_dsn() -> str
2025-08-19T16:05:36.6589832Z ```
2025-08-19T16:05:36.6589922Z 
2025-08-19T16:05:36.6590050Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T16:05:36.6590260Z 
2025-08-19T16:05:36.6590385Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T16:05:36.6590601Z 
2025-08-19T16:05:36.6590668Z #### refresh\_mvs
2025-08-19T16:05:36.6590774Z 
2025-08-19T16:05:36.6590845Z ```python
2025-08-19T16:05:36.6591042Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T16:05:36.6591293Z ```
2025-08-19T16:05:36.6591377Z 
2025-08-19T16:05:36.6591513Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T16:05:36.6591734Z 
2025-08-19T16:05:36.6591832Z <a id="price_importer.services_common"></a>
2025-08-19T16:05:36.6592003Z 
2025-08-19T16:05:36.6592096Z # price\_importer.services\_common
2025-08-19T16:05:36.6592249Z 
2025-08-19T16:05:36.6592352Z <a id="price_importer.services_common.base"></a>
2025-08-19T16:05:36.6592662Z 
2025-08-19T16:05:36.6592760Z # price\_importer.services\_common.base
2025-08-19T16:05:36.6592923Z 
2025-08-19T16:05:36.6593013Z <a id="price_importer.normaliser"></a>
2025-08-19T16:05:36.6593180Z 
2025-08-19T16:05:36.6593262Z # price\_importer.normaliser
2025-08-19T16:05:36.6593401Z 
2025-08-19T16:05:36.6593513Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T16:05:36.6593695Z 
2025-08-19T16:05:36.6593785Z # price\_importer.common.models\_vendor
2025-08-19T16:05:36.6593949Z 
2025-08-19T16:05:36.6594046Z <a id="price_importer.common.db_url"></a>
2025-08-19T16:05:36.6594216Z 
2025-08-19T16:05:36.6594302Z # price\_importer.common.db\_url
2025-08-19T16:05:36.6594458Z 
2025-08-19T16:05:36.6594561Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T16:05:36.6594746Z 
2025-08-19T16:05:36.6594818Z #### make\_dsn
2025-08-19T16:05:36.6594917Z 
2025-08-19T16:05:36.6594982Z ```python
2025-08-19T16:05:36.6595163Z def make_dsn(async_: bool = False) -> str
2025-08-19T16:05:36.6595398Z ```
2025-08-19T16:05:36.6595486Z 
2025-08-19T16:05:36.6595604Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T16:05:36.6595802Z 
2025-08-19T16:05:36.6595912Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T16:05:36.6596105Z 
2025-08-19T16:05:36.6596171Z #### build\_url
2025-08-19T16:05:36.6596271Z 
2025-08-19T16:05:36.6596341Z ```python
2025-08-19T16:05:36.6596514Z def build_url(async_: bool = False) -> str
2025-08-19T16:05:36.6596743Z ```
2025-08-19T16:05:36.6596824Z 
2025-08-19T16:05:36.6596946Z Return Postgres DSN built from environment variables.
2025-08-19T16:05:36.6597188Z 
2025-08-19T16:05:36.6597275Z <a id="price_importer.common"></a>
2025-08-19T16:05:36.6597427Z 
2025-08-19T16:05:36.6597505Z # price\_importer.common
2025-08-19T16:05:36.6597795Z 
2025-08-19T16:05:36.6597924Z <a id="price_importer.common.base"></a>
2025-08-19T16:05:36.6598095Z 
2025-08-19T16:05:36.6598187Z # price\_importer.common.base
2025-08-19T16:05:36.6598329Z 
2025-08-19T16:05:36.6598434Z <a id="price_importer.tests.conftest"></a>
2025-08-19T16:05:36.6598618Z 
2025-08-19T16:05:36.6598704Z # price\_importer.tests.conftest
2025-08-19T16:05:36.6598852Z 
2025-08-19T16:05:36.6598953Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T16:05:36.6599138Z 
2025-08-19T16:05:36.6599225Z # price\_importer.tests.test\_reader
2025-08-19T16:05:36.6599383Z 
2025-08-19T16:05:36.6599494Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T16:05:36.6599675Z 
2025-08-19T16:05:36.6599767Z # price\_importer.tests.test\_imports
2025-08-19T16:05:36.6599933Z 
2025-08-19T16:05:36.6600029Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T16:05:36.6600202Z 
2025-08-19T16:05:36.6600290Z # price\_importer.tests.test\_smoke
2025-08-19T16:05:36.6600450Z 
2025-08-19T16:05:36.6600555Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T16:05:36.6600773Z 
2025-08-19T16:05:36.6600874Z # price\_importer.tests.test\_normaliser
2025-08-19T16:05:36.6601039Z 
2025-08-19T16:05:36.6601124Z <a id="price_importer.tests"></a>
2025-08-19T16:05:36.6601434Z 
2025-08-19T16:05:36.6601514Z # price\_importer.tests
2025-08-19T16:05:36.6601638Z 
2025-08-19T16:05:36.6601730Z <a id="price_importer.reader"></a>
2025-08-19T16:05:36.6601882Z 
2025-08-19T16:05:36.6601962Z # price\_importer.reader
2025-08-19T16:05:36.6602087Z 
2025-08-19T16:05:36.6602188Z <a id="price_importer.repository"></a>
2025-08-19T16:05:36.6602352Z 
2025-08-19T16:05:36.6602435Z # price\_importer.repository
2025-08-19T16:05:36.6602582Z 
2025-08-19T16:05:36.6602668Z <a id="price_importer.import"></a>
2025-08-19T16:05:36.6602817Z 
2025-08-19T16:05:36.6602899Z # price\_importer.import
2025-08-19T16:05:36.6603035Z 
2025-08-19T16:05:36.6603106Z <a id="fees_h10"></a>
2025-08-19T16:05:36.6603220Z 
2025-08-19T16:05:36.6603292Z # fees\_h10
2025-08-19T16:05:36.6603385Z 
2025-08-19T16:05:36.6603462Z <a id="fees_h10.worker"></a>
2025-08-19T16:05:36.6603599Z 
2025-08-19T16:05:36.6603669Z # fees\_h10.worker
2025-08-19T16:05:36.6603776Z 
2025-08-19T16:05:36.6603995Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T16:05:36.6604185Z 
2025-08-19T16:05:36.6604259Z #### list\_active\_asins
2025-08-19T16:05:36.6604378Z 
2025-08-19T16:05:36.6604449Z ```python
2025-08-19T16:05:36.6604617Z def list_active_asins() -> list[str]
2025-08-19T16:05:36.6604833Z ```
2025-08-19T16:05:36.6604916Z 
2025-08-19T16:05:36.6605027Z Return known ASINs or an empty list if unavailable.
2025-08-19T16:05:36.6605227Z 
2025-08-19T16:05:36.6605311Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T16:05:36.6605470Z 
2025-08-19T16:05:36.6605549Z # fees\_h10.tests.test\_smoke
2025-08-19T16:05:36.6605691Z 
2025-08-19T16:05:36.6605766Z <a id="fees_h10.tests"></a>
2025-08-19T16:05:36.6605897Z 
2025-08-19T16:05:36.6605967Z # fees\_h10.tests
2025-08-19T16:05:36.6606070Z 
2025-08-19T16:05:36.6606146Z <a id="fees_h10.client"></a>
2025-08-19T16:05:36.6606282Z 
2025-08-19T16:05:36.6606349Z # fees\_h10.client
2025-08-19T16:05:36.6606451Z 
2025-08-19T16:05:36.6606532Z <a id="fees_h10.repository"></a>
2025-08-19T16:05:36.6606690Z 
2025-08-19T16:05:36.6606767Z # fees\_h10.repository
2025-08-19T16:05:36.6606882Z 
2025-08-19T16:05:36.6606960Z <a id="emailer"></a>
2025-08-19T16:05:36.6607074Z 
2025-08-19T16:05:36.6607137Z # emailer
2025-08-19T16:05:36.6607231Z 
2025-08-19T16:05:36.6607331Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T16:05:36.6607507Z 
2025-08-19T16:05:36.6607595Z # emailer.tests.test\_import\_emailer
2025-08-19T16:05:36.6607873Z 
2025-08-19T16:05:36.6607960Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T16:05:36.6608115Z 
2025-08-19T16:05:36.6608203Z # emailer.tests.test\_smoke
2025-08-19T16:05:36.6608338Z 
2025-08-19T16:05:36.6608416Z <a id="emailer.tests"></a>
2025-08-19T16:05:36.6608553Z 
2025-08-19T16:05:36.6608622Z # emailer.tests
2025-08-19T16:05:36.6608725Z 
2025-08-19T16:05:36.6608810Z <a id="emailer.generate_body"></a>
2025-08-19T16:05:36.6608966Z 
2025-08-19T16:05:36.6609042Z # emailer.generate\_body
2025-08-19T16:05:36.6609168Z 
2025-08-19T16:05:36.6609248Z <a id="llm_server"></a>
2025-08-19T16:05:36.6609375Z 
2025-08-19T16:05:36.6609442Z # llm\_server
2025-08-19T16:05:36.6609541Z 
2025-08-19T16:05:36.6609625Z <a id="llm_server.app"></a>
2025-08-19T16:05:36.6609755Z 
2025-08-19T16:05:36.6609823Z # llm\_server.app
2025-08-19T16:05:36.6609935Z 
