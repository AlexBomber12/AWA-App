2025-08-18T06:39:24.8211975Z ##[group]Run pydoc-markdown
2025-08-18T06:39:24.8212507Z [36;1mpydoc-markdown[0m
2025-08-18T06:39:24.8253999Z shell: /usr/bin/bash -e {0}
2025-08-18T06:39:24.8254237Z env:
2025-08-18T06:39:24.8254474Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T06:39:24.8254873Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T06:39:24.8255239Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T06:39:24.8255573Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T06:39:24.8255901Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T06:39:24.8256234Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T06:39:24.8256508Z ##[endgroup]
2025-08-18T06:39:25.1471441Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T06:39:25.1472461Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T06:39:25.1472945Z In "pydoc-markdown.yml"
2025-08-18T06:39:25.1473393Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T06:39:25.1474044Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T06:39:25.1474789Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T06:39:25.1475297Z 
2025-08-18T06:39:25.4396825Z <a id="__init__"></a>
2025-08-18T06:39:25.4397183Z 
2025-08-18T06:39:25.4397336Z # \_\_init\_\_
2025-08-18T06:39:25.4397567Z 
2025-08-18T06:39:25.4397721Z <a id="api"></a>
2025-08-18T06:39:25.4397949Z 
2025-08-18T06:39:25.4398081Z # api
2025-08-18T06:39:25.4398253Z 
2025-08-18T06:39:25.4398420Z <a id="api.errors"></a>
2025-08-18T06:39:25.4398662Z 
2025-08-18T06:39:25.4398802Z # api.errors
2025-08-18T06:39:25.4399011Z 
2025-08-18T06:39:25.4399198Z <a id="api.tests.test_errors_json"></a>
2025-08-18T06:39:25.4399547Z 
2025-08-18T06:39:25.4399724Z # api.tests.test\_errors\_json
2025-08-18T06:39:25.4400051Z 
2025-08-18T06:39:25.4400226Z <a id="api.tests.test_llm"></a>
2025-08-18T06:39:25.4400515Z 
2025-08-18T06:39:25.4401089Z # api.tests.test\_llm
2025-08-18T06:39:25.4401373Z 
2025-08-18T06:39:25.4401550Z <a id="api.tests.test_imports"></a>
2025-08-18T06:39:25.4401900Z 
2025-08-18T06:39:25.4402063Z # api.tests.test\_imports
2025-08-18T06:39:25.4402706Z 
2025-08-18T06:39:25.4402891Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T06:39:25.4403282Z 
2025-08-18T06:39:25.4403393Z # api.tests.test\_entrypoint
2025-08-18T06:39:25.4403570Z 
2025-08-18T06:39:25.4403682Z <a id="api.tests.test_health"></a>
2025-08-18T06:39:25.4403875Z 
2025-08-18T06:39:25.4403969Z # api.tests.test\_health
2025-08-18T06:39:25.4404132Z 
2025-08-18T06:39:25.4404233Z <a id="api.logging_config"></a>
2025-08-18T06:39:25.4404452Z 
2025-08-18T06:39:25.4404743Z # api.logging\_config
2025-08-18T06:39:25.4405025Z 
2025-08-18T06:39:25.4405211Z <a id="api.migrations.env"></a>
2025-08-18T06:39:25.4405527Z 
2025-08-18T06:39:25.4405702Z # api.migrations.env
2025-08-18T06:39:25.4405926Z 
2025-08-18T06:39:25.4406135Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T06:39:25.4406508Z 
2025-08-18T06:39:25.4406684Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T06:39:25.4406997Z 
2025-08-18T06:39:25.4407178Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T06:39:25.4407504Z 
2025-08-18T06:39:25.4407660Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T06:39:25.4407951Z 
2025-08-18T06:39:25.4408211Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T06:39:25.4408607Z 
2025-08-18T06:39:25.4408832Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T06:39:25.4409123Z 
2025-08-18T06:39:25.4409245Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T06:39:25.4409450Z 
2025-08-18T06:39:25.4409559Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T06:39:25.4409740Z 
2025-08-18T06:39:25.4409856Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T06:39:25.4410055Z 
2025-08-18T06:39:25.4410168Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T06:39:25.4410366Z 
2025-08-18T06:39:25.4410752Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T06:39:25.4410973Z 
2025-08-18T06:39:25.4411083Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T06:39:25.4411272Z 
2025-08-18T06:39:25.4411389Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T06:39:25.4411585Z 
2025-08-18T06:39:25.4411688Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T06:39:25.4411880Z 
2025-08-18T06:39:25.4412001Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T06:39:25.4412416Z 
2025-08-18T06:39:25.4412529Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T06:39:25.4412721Z 
2025-08-18T06:39:25.4412855Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T06:39:25.4413072Z 
2025-08-18T06:39:25.4413193Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T06:39:25.4413390Z 
2025-08-18T06:39:25.4413510Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T06:39:25.4413727Z 
2025-08-18T06:39:25.4413840Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T06:39:25.4414032Z 
2025-08-18T06:39:25.4414167Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T06:39:25.4414394Z 
2025-08-18T06:39:25.4414507Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T06:39:25.4414703Z 
2025-08-18T06:39:25.4414817Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T06:39:25.4415008Z 
2025-08-18T06:39:25.4415099Z # api.migrations.versions.0001\_baseline
2025-08-18T06:39:25.4415270Z 
2025-08-18T06:39:25.4415357Z <a id="api.migrations.versions"></a>
2025-08-18T06:39:25.4415517Z 
2025-08-18T06:39:25.4415596Z # api.migrations.versions
2025-08-18T06:39:25.4415728Z 
2025-08-18T06:39:25.4415808Z <a id="api.migrations"></a>
2025-08-18T06:39:25.4415942Z 
2025-08-18T06:39:25.4416015Z # api.migrations
2025-08-18T06:39:25.4416119Z 
2025-08-18T06:39:25.4416189Z <a id="api.db"></a>
2025-08-18T06:39:25.4416307Z 
2025-08-18T06:39:25.4416508Z # api.db
2025-08-18T06:39:25.4416601Z 
2025-08-18T06:39:25.4416679Z <a id="api.routes.stats"></a>
2025-08-18T06:39:25.4416823Z 
2025-08-18T06:39:25.4416894Z # api.routes.stats
2025-08-18T06:39:25.4417002Z 
2025-08-18T06:39:25.4417094Z <a id="api.routes.stats.kpi"></a>
2025-08-18T06:39:25.4417246Z 
2025-08-18T06:39:25.4417307Z #### kpi
2025-08-18T06:39:25.4417391Z 
2025-08-18T06:39:25.4417459Z ```python
2025-08-18T06:39:25.4417621Z @router.get("/stats/kpi")
2025-08-18T06:39:25.4417859Z def kpi() -> List[Dict[str, int]]
2025-08-18T06:39:25.4418067Z ```
2025-08-18T06:39:25.4418156Z 
2025-08-18T06:39:25.4418232Z Return KPI metrics (mock).
2025-08-18T06:39:25.4418359Z 
2025-08-18T06:39:25.4418467Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T06:39:25.4418643Z 
2025-08-18T06:39:25.4418712Z #### roi\_by\_vendor
2025-08-18T06:39:25.4418819Z 
2025-08-18T06:39:25.4418887Z ```python
2025-08-18T06:39:25.4419052Z @router.get("/stats/roi_by_vendor")
2025-08-18T06:39:25.4419298Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T06:39:25.4419528Z ```
2025-08-18T06:39:25.4419629Z 
2025-08-18T06:39:25.4419712Z Return ROI percent by vendor.
2025-08-18T06:39:25.4419936Z 
2025-08-18T06:39:25.4420028Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T06:39:25.4420195Z 
2025-08-18T06:39:25.4420259Z #### roi\_trend
2025-08-18T06:39:25.4420366Z 
2025-08-18T06:39:25.4420429Z ```python
2025-08-18T06:39:25.4420602Z @router.get("/stats/roi_trend")
2025-08-18T06:39:25.4420835Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T06:39:25.4421072Z ```
2025-08-18T06:39:25.4421150Z 
2025-08-18T06:39:25.4421223Z Return 30-day ROI trend.
2025-08-18T06:39:25.4421354Z 
2025-08-18T06:39:25.4421434Z <a id="api.routes.roi"></a>
2025-08-18T06:39:25.4421568Z 
2025-08-18T06:39:25.4421633Z # api.routes.roi
2025-08-18T06:39:25.4421767Z 
2025-08-18T06:39:25.4421849Z <a id="api.routes.health"></a>
2025-08-18T06:39:25.4421991Z 
2025-08-18T06:39:25.4422076Z # api.routes.health
2025-08-18T06:39:25.4422417Z 
2025-08-18T06:39:25.4422585Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T06:39:25.4422936Z 
2025-08-18T06:39:25.4423003Z #### MAX\_SKEW
2025-08-18T06:39:25.4423103Z 
2025-08-18T06:39:25.4423165Z seconds
2025-08-18T06:39:25.4423273Z 
2025-08-18T06:39:25.4423364Z <a id="api.routes.health.health"></a>
2025-08-18T06:39:25.4423528Z 
2025-08-18T06:39:25.4423599Z #### health
2025-08-18T06:39:25.4423690Z 
2025-08-18T06:39:25.4423752Z ```python
2025-08-18T06:39:25.4423994Z @router.get("/health", include_in_schema=False)
2025-08-18T06:39:25.4424365Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T06:39:25.4424705Z ```
2025-08-18T06:39:25.4424785Z 
2025-08-18T06:39:25.4424898Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T06:39:25.4425097Z 
2025-08-18T06:39:25.4425182Z <a id="api.routes.repository"></a>
2025-08-18T06:39:25.4425334Z 
2025-08-18T06:39:25.4425417Z # api.routes.repository
2025-08-18T06:39:25.4425538Z 
2025-08-18T06:39:25.4425607Z <a id="api.routes"></a>
2025-08-18T06:39:25.4425730Z 
2025-08-18T06:39:25.4425796Z # api.routes
2025-08-18T06:39:25.4425890Z 
2025-08-18T06:39:25.4425964Z <a id="api.models.fee"></a>
2025-08-18T06:39:25.4426099Z 
2025-08-18T06:39:25.4426163Z # api.models.fee
2025-08-18T06:39:25.4426263Z 
2025-08-18T06:39:25.4426337Z <a id="api.models"></a>
2025-08-18T06:39:25.4426450Z 
2025-08-18T06:39:25.4426511Z # api.models
2025-08-18T06:39:25.4426602Z 
2025-08-18T06:39:25.4426684Z <a id="api.roi_repository"></a>
2025-08-18T06:39:25.4426820Z 
2025-08-18T06:39:25.4426889Z # api.roi\_repository
2025-08-18T06:39:25.4427009Z 
2025-08-18T06:39:25.4427075Z <a id="api.main"></a>
2025-08-18T06:39:25.4427182Z 
2025-08-18T06:39:25.4427244Z # api.main
2025-08-18T06:39:25.4427338Z 
2025-08-18T06:39:25.4427412Z <a id="api.main.ready"></a>
2025-08-18T06:39:25.4427539Z 
2025-08-18T06:39:25.4427603Z #### ready
2025-08-18T06:39:25.4427691Z 
2025-08-18T06:39:25.4427755Z ```python
2025-08-18T06:39:25.4428013Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T06:39:25.4428560Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T06:39:25.4428918Z                                                                       str]
2025-08-18T06:39:25.4429148Z ```
2025-08-18T06:39:25.4429229Z 
2025-08-18T06:39:25.4429322Z Return 200 only when migrations are at head.
2025-08-18T06:39:25.4429491Z 
2025-08-18T06:39:25.4429569Z <a id="api.config"></a>
2025-08-18T06:39:25.4429684Z 
2025-08-18T06:39:25.4429748Z # api.config
2025-08-18T06:39:25.4429858Z 
2025-08-18T06:39:25.4429930Z <a id="etl"></a>
2025-08-18T06:39:25.4430031Z 
2025-08-18T06:39:25.4430092Z # etl
2025-08-18T06:39:25.4430183Z 
2025-08-18T06:39:25.4430263Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T06:39:25.4430413Z 
2025-08-18T06:39:25.4430488Z # etl.fba\_fee\_ingestor
2025-08-18T06:39:25.4430616Z 
2025-08-18T06:39:25.4430694Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T06:39:25.4430837Z 
2025-08-18T06:39:25.4430916Z # etl.sp\_fees\_ingestor
2025-08-18T06:39:25.4431038Z 
2025-08-18T06:39:25.4431115Z <a id="etl.keepa_ingestor"></a>
2025-08-18T06:39:25.4431261Z 
2025-08-18T06:39:25.4431330Z # etl.keepa\_ingestor
2025-08-18T06:39:25.4431443Z 
2025-08-18T06:39:25.4431508Z <a id="etl.db"></a>
2025-08-18T06:39:25.4431618Z 
2025-08-18T06:39:25.4431679Z # etl.db
2025-08-18T06:39:25.4431763Z 
2025-08-18T06:39:25.4431849Z <a id="etl.dialects.schemas"></a>
2025-08-18T06:39:25.4431992Z 
2025-08-18T06:39:25.4432064Z # etl.dialects.schemas
2025-08-18T06:39:25.4432368Z 
2025-08-18T06:39:25.4432488Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T06:39:25.4432674Z 
2025-08-18T06:39:25.4432762Z # etl.dialects.amazon\_reimbursements
2025-08-18T06:39:25.4432927Z 
2025-08-18T06:39:25.4433020Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T06:39:25.4433196Z 
2025-08-18T06:39:25.4433292Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T06:39:25.4433454Z 
2025-08-18T06:39:25.4433545Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T06:39:25.4433713Z 
2025-08-18T06:39:25.4433796Z # etl.dialects.amazon\_returns
2025-08-18T06:39:25.4434061Z 
2025-08-18T06:39:25.4434155Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T06:39:25.4434326Z 
2025-08-18T06:39:25.4434408Z # etl.dialects.amazon\_fee\_preview
2025-08-18T06:39:25.4434559Z 
2025-08-18T06:39:25.4434668Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T06:39:25.4434852Z 
2025-08-18T06:39:25.4434940Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T06:39:25.4435106Z 
2025-08-18T06:39:25.4435200Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T06:39:25.4435367Z 
2025-08-18T06:39:25.4435451Z # etl.dialects.amazon\_settlements
2025-08-18T06:39:25.4435606Z 
2025-08-18T06:39:25.4435679Z <a id="etl.dialects"></a>
2025-08-18T06:39:25.4435804Z 
2025-08-18T06:39:25.4435874Z # etl.dialects
2025-08-18T06:39:25.4435972Z 
2025-08-18T06:39:25.4436041Z <a id="ingest"></a>
2025-08-18T06:39:25.4436161Z 
2025-08-18T06:39:25.4436219Z # ingest
2025-08-18T06:39:25.4436304Z 
2025-08-18T06:39:25.4436383Z <a id="ingest.maintenance"></a>
2025-08-18T06:39:25.4436534Z 
2025-08-18T06:39:25.4436604Z # ingest.maintenance
2025-08-18T06:39:25.4436717Z 
2025-08-18T06:39:25.4436798Z <a id="ingest.copy_loader"></a>
2025-08-18T06:39:25.4436932Z 
2025-08-18T06:39:25.4437002Z # ingest.copy\_loader
2025-08-18T06:39:25.4437116Z 
2025-08-18T06:39:25.4437221Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T06:39:25.4437399Z 
2025-08-18T06:39:25.4437471Z #### copy\_df\_via\_temp
2025-08-18T06:39:25.4437597Z 
2025-08-18T06:39:25.4437660Z ```python
2025-08-18T06:39:25.4437826Z def copy_df_via_temp(engine: Engine,
2025-08-18T06:39:25.4438063Z                      df: pd.DataFrame,
2025-08-18T06:39:25.4438294Z                      target_table: str,
2025-08-18T06:39:25.4438508Z                      *,
2025-08-18T06:39:25.4438717Z                      target_schema: Optional[str] = None,
2025-08-18T06:39:25.4438970Z                      columns: Sequence[str],
2025-08-18T06:39:25.4439241Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T06:39:25.4439637Z                      analyze_after: bool = False,
2025-08-18T06:39:25.4439898Z                      connection: Any | None = None) -> int
2025-08-18T06:39:25.4440128Z ```
2025-08-18T06:39:25.4440214Z 
2025-08-18T06:39:25.4440357Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T06:39:25.4440588Z 
2025-08-18T06:39:25.4440678Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T06:39:25.4440834Z 
2025-08-18T06:39:25.4440912Z # ingest.tests.test\_smoke
2025-08-18T06:39:25.4441044Z 
2025-08-18T06:39:25.4441117Z <a id="ingest.tests"></a>
2025-08-18T06:39:25.4441239Z 
2025-08-18T06:39:25.4441305Z # ingest.tests
2025-08-18T06:39:25.4441442Z 
2025-08-18T06:39:25.4441524Z <a id="ingest.upload_router"></a>
2025-08-18T06:39:25.4441671Z 
2025-08-18T06:39:25.4441750Z # ingest.upload\_router
2025-08-18T06:39:25.4441866Z 
2025-08-18T06:39:25.4441944Z <a id="ingest.email_watcher"></a>
2025-08-18T06:39:25.4442092Z 
2025-08-18T06:39:25.4442321Z # ingest.email\_watcher
2025-08-18T06:39:25.4442529Z 
2025-08-18T06:39:25.4442621Z <a id="ingest.email_watcher.main"></a>
2025-08-18T06:39:25.4442789Z 
2025-08-18T06:39:25.4442849Z #### main
2025-08-18T06:39:25.4442936Z 
2025-08-18T06:39:25.4443005Z ```python
2025-08-18T06:39:25.4443163Z def main() -> dict[str, str]
2025-08-18T06:39:25.4443359Z ```
2025-08-18T06:39:25.4443438Z 
2025-08-18T06:39:25.4443575Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T06:39:25.4443801Z 
2025-08-18T06:39:25.4443931Z Returns {"status": "success"} when processing completes.
2025-08-18T06:39:25.4444135Z 
2025-08-18T06:39:25.4444207Z <a id="ingest.tasks"></a>
2025-08-18T06:39:25.4444336Z 
2025-08-18T06:39:25.4444401Z # ingest.tasks
2025-08-18T06:39:25.4444498Z 
2025-08-18T06:39:25.4444601Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T06:39:25.4444769Z 
2025-08-18T06:39:25.4444838Z #### task\_import\_file
2025-08-18T06:39:25.4444956Z 
2025-08-18T06:39:25.4445016Z ```python
2025-08-18T06:39:25.4445213Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T06:39:25.4445629Z def task_import_file(self,
2025-08-18T06:39:25.4445832Z                      uri: str,
2025-08-18T06:39:25.4446041Z                      report_type: Optional[str] = None,
2025-08-18T06:39:25.4446306Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T06:39:25.4446534Z ```
2025-08-18T06:39:25.4446612Z 
2025-08-18T06:39:25.4446743Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T06:39:25.4446944Z 
2025-08-18T06:39:25.4447021Z <a id="ingest.celery_app"></a>
2025-08-18T06:39:25.4447159Z 
2025-08-18T06:39:25.4447228Z # ingest.celery\_app
2025-08-18T06:39:25.4447339Z 
2025-08-18T06:39:25.4447420Z <a id="ingest.ingest_router"></a>
2025-08-18T06:39:25.4447564Z 
2025-08-18T06:39:25.4447634Z # ingest.ingest\_router
2025-08-18T06:39:25.4447748Z 
2025-08-18T06:39:25.4447827Z <a id="logistics_etl"></a>
2025-08-18T06:39:25.4447949Z 
2025-08-18T06:39:25.4448012Z # logistics\_etl
2025-08-18T06:39:25.4448124Z 
2025-08-18T06:39:25.4448197Z Daily logistics ETL job.
2025-08-18T06:39:25.4448320Z 
2025-08-18T06:39:25.4448403Z <a id="logistics_etl.__main__"></a>
2025-08-18T06:39:25.4448551Z 
2025-08-18T06:39:25.4448625Z # logistics\_etl.\_\_main\_\_
2025-08-18T06:39:25.4448756Z 
2025-08-18T06:39:25.4448837Z <a id="logistics_etl.dsn"></a>
2025-08-18T06:39:25.4448968Z 
2025-08-18T06:39:25.4449035Z # logistics\_etl.dsn
2025-08-18T06:39:25.4449164Z 
2025-08-18T06:39:25.4449277Z Local DSN builder to avoid cross-service dependency.
2025-08-18T06:39:25.4449481Z 
2025-08-18T06:39:25.4449566Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T06:39:25.4449730Z 
2025-08-18T06:39:25.4449799Z #### build\_dsn
2025-08-18T06:39:25.4449906Z 
2025-08-18T06:39:25.4449967Z ```python
2025-08-18T06:39:25.4450147Z def build_dsn(sync: bool = True) -> str
2025-08-18T06:39:25.4450365Z ```
2025-08-18T06:39:25.4450451Z 
2025-08-18T06:39:25.4450590Z Return a Postgres DSN assembled from environment variables.
2025-08-18T06:39:25.4450812Z 
2025-08-18T06:39:25.4451076Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T06:39:25.4451477Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T06:39:25.4451824Z error when any required variable is missing.
2025-08-18T06:39:25.4451997Z 
2025-08-18T06:39:25.4452088Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T06:39:25.4452493Z 
2025-08-18T06:39:25.4452580Z # logistics\_etl.tests.conftest
2025-08-18T06:39:25.4452726Z 
2025-08-18T06:39:25.4452830Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T06:39:25.4453020Z 
2025-08-18T06:39:25.4453108Z # logistics\_etl.tests.test\_repository
2025-08-18T06:39:25.4453269Z 
2025-08-18T06:39:25.4453365Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T06:39:25.4453531Z 
2025-08-18T06:39:25.4453614Z # logistics\_etl.tests.test\_cron
2025-08-18T06:39:25.4453764Z 
2025-08-18T06:39:25.4453859Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T06:39:25.4454030Z 
2025-08-18T06:39:25.4454112Z # logistics\_etl.tests.test\_imports
2025-08-18T06:39:25.4454293Z 
2025-08-18T06:39:25.4454387Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T06:39:25.4454557Z 
2025-08-18T06:39:25.4454644Z # logistics\_etl.tests.test\_smoke
2025-08-18T06:39:25.4454795Z 
2025-08-18T06:39:25.4454890Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T06:39:25.4455064Z 
2025-08-18T06:39:25.4455144Z # logistics\_etl.tests.test\_client
2025-08-18T06:39:25.4455293Z 
2025-08-18T06:39:25.4455373Z <a id="logistics_etl.tests"></a>
2025-08-18T06:39:25.4455521Z 
2025-08-18T06:39:25.4455590Z # logistics\_etl.tests
2025-08-18T06:39:25.4455703Z 
2025-08-18T06:39:25.4455785Z <a id="logistics_etl.flow"></a>
2025-08-18T06:39:25.4455920Z 
2025-08-18T06:39:25.4455997Z # logistics\_etl.flow
2025-08-18T06:39:25.4456115Z 
2025-08-18T06:39:25.4456194Z <a id="logistics_etl.client"></a>
2025-08-18T06:39:25.4456335Z 
2025-08-18T06:39:25.4456405Z # logistics\_etl.client
2025-08-18T06:39:25.4456527Z 
2025-08-18T06:39:25.4456601Z <a id="logistics_etl.cron"></a>
2025-08-18T06:39:25.4456874Z 
2025-08-18T06:39:25.4456948Z # logistics\_etl.cron
2025-08-18T06:39:25.4457057Z 
2025-08-18T06:39:25.4457132Z <a id="logistics_etl.db"></a>
2025-08-18T06:39:25.4457268Z 
2025-08-18T06:39:25.4457334Z # logistics\_etl.db
2025-08-18T06:39:25.4457438Z 
2025-08-18T06:39:25.4457523Z <a id="logistics_etl.repository"></a>
2025-08-18T06:39:25.4457682Z 
2025-08-18T06:39:25.4457760Z # logistics\_etl.repository
2025-08-18T06:39:25.4457888Z 
2025-08-18T06:39:25.4457961Z <a id="alert_bot"></a>
2025-08-18T06:39:25.4458072Z 
2025-08-18T06:39:25.4458134Z # alert\_bot
2025-08-18T06:39:25.4458227Z 
2025-08-18T06:39:25.4458314Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T06:39:25.4458472Z 
2025-08-18T06:39:25.4458549Z # alert\_bot.tests.test\_smoke
2025-08-18T06:39:25.4458688Z 
2025-08-18T06:39:25.4458763Z <a id="alert_bot.tests"></a>
2025-08-18T06:39:25.4458894Z 
2025-08-18T06:39:25.4458964Z # alert\_bot.tests
2025-08-18T06:39:25.4459067Z 
2025-08-18T06:39:25.4459144Z <a id="alert_bot.alert_bot"></a>
2025-08-18T06:39:25.4459289Z 
2025-08-18T06:39:25.4459365Z # alert\_bot.alert\_bot
2025-08-18T06:39:25.4459477Z 
2025-08-18T06:39:25.4459549Z <a id="alert_bot.rules"></a>
2025-08-18T06:39:25.4459683Z 
2025-08-18T06:39:25.4459748Z # alert\_bot.rules
2025-08-18T06:39:25.4459848Z 
2025-08-18T06:39:25.4459912Z <a id="common"></a>
2025-08-18T06:39:25.4460022Z 
2025-08-18T06:39:25.4460081Z # common
2025-08-18T06:39:25.4460169Z 
2025-08-18T06:39:25.4460246Z <a id="common.dsn"></a>
2025-08-18T06:39:25.4460360Z 
2025-08-18T06:39:25.4460424Z # common.dsn
2025-08-18T06:39:25.4460523Z 
2025-08-18T06:39:25.4460605Z <a id="common.dsn.build_dsn"></a>
2025-08-18T06:39:25.4460748Z 
2025-08-18T06:39:25.4460811Z #### build\_dsn
2025-08-18T06:39:25.4460918Z 
2025-08-18T06:39:25.4460979Z ```python
2025-08-18T06:39:25.4461154Z def build_dsn(sync: bool = True) -> str
2025-08-18T06:39:25.4461370Z ```
2025-08-18T06:39:25.4461450Z 
2025-08-18T06:39:25.4461575Z Return a Postgres DSN, validating required variables.
2025-08-18T06:39:25.4461937Z 
2025-08-18T06:39:25.4462121Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T06:39:25.4462779Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T06:39:25.4463186Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T06:39:25.4508587Z missing.
2025-08-18T06:39:25.4508803Z 
2025-08-18T06:39:25.4508998Z <a id="common.models_vendor"></a>
2025-08-18T06:39:25.4509330Z 
2025-08-18T06:39:25.4509488Z # common.models\_vendor
2025-08-18T06:39:25.4509757Z 
2025-08-18T06:39:25.4509949Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T06:39:25.4510303Z 
2025-08-18T06:39:25.4510439Z ## Vendor Objects
2025-08-18T06:39:25.4510660Z 
2025-08-18T06:39:25.4510789Z ```python
2025-08-18T06:39:25.4511065Z class Vendor(Base)
2025-08-18T06:39:25.4511272Z ```
2025-08-18T06:39:25.4511373Z 
2025-08-18T06:39:25.4511479Z Vendor of inventory items.
2025-08-18T06:39:25.4511645Z 
2025-08-18T06:39:25.4511784Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T06:39:25.4512025Z 
2025-08-18T06:39:25.4512114Z ## VendorPrice Objects
2025-08-18T06:39:25.4512558Z 
2025-08-18T06:39:25.4512646Z ```python
2025-08-18T06:39:25.4512850Z class VendorPrice(Base)
2025-08-18T06:39:25.4513070Z ```
2025-08-18T06:39:25.4513168Z 
2025-08-18T06:39:25.4513295Z Association table linking vendors to pricing.
2025-08-18T06:39:25.4513521Z 
2025-08-18T06:39:25.4513621Z <a id="common.db_url"></a>
2025-08-18T06:39:25.4513777Z 
2025-08-18T06:39:25.4513857Z # common.db\_url
2025-08-18T06:39:25.4514057Z 
2025-08-18T06:39:25.4514157Z <a id="common.db_url.build_url"></a>
2025-08-18T06:39:25.4514345Z 
2025-08-18T06:39:25.4514429Z #### build\_url
2025-08-18T06:39:25.4514550Z 
2025-08-18T06:39:25.4514624Z ```python
2025-08-18T06:39:25.4514840Z def build_url(async_: bool = True) -> str
2025-08-18T06:39:25.4515109Z ```
2025-08-18T06:39:25.4515211Z 
2025-08-18T06:39:25.4515330Z Return Postgres DSN from env or PG_* parts.
2025-08-18T06:39:25.4515549Z 
2025-08-18T06:39:25.4515828Z <a id="common.keepa"></a>
2025-08-18T06:39:25.4515995Z 
2025-08-18T06:39:25.4516075Z # common.keepa
2025-08-18T06:39:25.4516203Z 
2025-08-18T06:39:25.4516278Z <a id="common.llm"></a>
2025-08-18T06:39:25.4516393Z 
2025-08-18T06:39:25.4516454Z # common.llm
2025-08-18T06:39:25.4516551Z 
2025-08-18T06:39:25.4516629Z <a id="common.settings"></a>
2025-08-18T06:39:25.4516764Z 
2025-08-18T06:39:25.4516828Z # common.settings
2025-08-18T06:39:25.4516937Z 
2025-08-18T06:39:25.4517005Z <a id="common.db"></a>
2025-08-18T06:39:25.4517118Z 
2025-08-18T06:39:25.4517184Z # common.db
2025-08-18T06:39:25.4517275Z 
2025-08-18T06:39:25.4517364Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T06:39:25.4517534Z 
2025-08-18T06:39:25.4517613Z #### build\_sqlalchemy\_url
2025-08-18T06:39:25.4517740Z 
2025-08-18T06:39:25.4517801Z ```python
2025-08-18T06:39:25.4517977Z def build_sqlalchemy_url() -> str
2025-08-18T06:39:25.4518183Z ```
2025-08-18T06:39:25.4518270Z 
2025-08-18T06:39:25.4518367Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T06:39:25.4518545Z 
2025-08-18T06:39:25.4518640Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T06:39:25.4518805Z 
2025-08-18T06:39:25.4518878Z #### build\_asyncpg\_dsn
2025-08-18T06:39:25.4519006Z 
2025-08-18T06:39:25.4519068Z ```python
2025-08-18T06:39:25.4519237Z def build_asyncpg_dsn() -> str
2025-08-18T06:39:25.4519434Z ```
2025-08-18T06:39:25.4519515Z 
2025-08-18T06:39:25.4519643Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T06:39:25.4519860Z 
2025-08-18T06:39:25.4519943Z <a id="common.db.refresh_mvs"></a>
2025-08-18T06:39:25.4520095Z 
2025-08-18T06:39:25.4520165Z #### refresh\_mvs
2025-08-18T06:39:25.4520270Z 
2025-08-18T06:39:25.4520333Z ```python
2025-08-18T06:39:25.4520531Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T06:39:25.4520774Z ```
2025-08-18T06:39:25.4520888Z 
2025-08-18T06:39:25.4521125Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T06:39:25.4521385Z 
2025-08-18T06:39:25.4521596Z <a id="common.config"></a>
2025-08-18T06:39:25.4521733Z 
2025-08-18T06:39:25.4521799Z # common.config
2025-08-18T06:39:25.4521901Z 
2025-08-18T06:39:25.4521980Z <a id="common.base"></a>
2025-08-18T06:39:25.4522101Z 
2025-08-18T06:39:25.4522310Z # common.base
2025-08-18T06:39:25.4522424Z 
2025-08-18T06:39:25.4522504Z <a id="common.base.Base"></a>
2025-08-18T06:39:25.4522642Z 
2025-08-18T06:39:25.4522704Z ## Base Objects
2025-08-18T06:39:25.4522807Z 
2025-08-18T06:39:25.4522868Z ```python
2025-08-18T06:39:25.4523031Z class Base(DeclarativeBase)
2025-08-18T06:39:25.4523220Z ```
2025-08-18T06:39:25.4523297Z 
2025-08-18T06:39:25.4523384Z Base class for SQLAlchemy models.
2025-08-18T06:39:25.4523535Z 
2025-08-18T06:39:25.4523608Z <a id="repricer"></a>
2025-08-18T06:39:25.4523729Z 
2025-08-18T06:39:25.4523790Z # repricer
2025-08-18T06:39:25.4523880Z 
2025-08-18T06:39:25.4523966Z <a id="repricer.app.schemas"></a>
2025-08-18T06:39:25.4524123Z 
2025-08-18T06:39:25.4524198Z # repricer.app.schemas
2025-08-18T06:39:25.4524320Z 
2025-08-18T06:39:25.4524415Z <a id="repricer.app.deps"></a>
2025-08-18T06:39:25.4524552Z 
2025-08-18T06:39:25.4524624Z # repricer.app.deps
2025-08-18T06:39:25.4524739Z 
2025-08-18T06:39:25.4524884Z Placeholder module for Keepa / SP-API clients.
2025-08-18T06:39:25.4525065Z 
2025-08-18T06:39:25.4525146Z <a id="repricer.app.logic"></a>
2025-08-18T06:39:25.4525292Z 
2025-08-18T06:39:25.4525364Z # repricer.app.logic
2025-08-18T06:39:25.4525477Z 
2025-08-18T06:39:25.4525577Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T06:39:25.4525749Z 
2025-08-18T06:39:25.4525812Z #### MIN\_MARGIN
2025-08-18T06:39:25.4525917Z 
2025-08-18T06:39:25.4525976Z 15 % ROI
2025-08-18T06:39:25.4526061Z 
2025-08-18T06:39:25.4526161Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T06:39:25.4526345Z 
2025-08-18T06:39:25.4526416Z #### compute\_price
2025-08-18T06:39:25.4526519Z 
2025-08-18T06:39:25.4526583Z ```python
2025-08-18T06:39:25.4526819Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T06:39:25.4527250Z ```
2025-08-18T06:39:25.4527329Z 
2025-08-18T06:39:25.4527433Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T06:39:25.4527710Z Replace with real competitive logic later.
2025-08-18T06:39:25.4527878Z 
2025-08-18T06:39:25.4527960Z <a id="repricer.app.main"></a>
2025-08-18T06:39:25.4528105Z 
2025-08-18T06:39:25.4528175Z # repricer.app.main
2025-08-18T06:39:25.4528280Z 
2025-08-18T06:39:25.4528360Z <a id="repricer.app"></a>
2025-08-18T06:39:25.4528486Z 
2025-08-18T06:39:25.4528551Z # repricer.app
2025-08-18T06:39:25.4528655Z 
2025-08-18T06:39:25.4528746Z <a id="repricer.tests.test_imports"></a>
2025-08-18T06:39:25.4528911Z 
2025-08-18T06:39:25.4528992Z # repricer.tests.test\_imports
2025-08-18T06:39:25.4529133Z 
2025-08-18T06:39:25.4529219Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T06:39:25.4529379Z 
2025-08-18T06:39:25.4529465Z # repricer.tests.test\_smoke
2025-08-18T06:39:25.4529602Z 
2025-08-18T06:39:25.4529678Z <a id="repricer.tests"></a>
2025-08-18T06:39:25.4529816Z 
2025-08-18T06:39:25.4529884Z # repricer.tests
2025-08-18T06:39:25.4529986Z 
2025-08-18T06:39:25.4530047Z <a id="db"></a>
2025-08-18T06:39:25.4530151Z 
2025-08-18T06:39:25.4530209Z # db
2025-08-18T06:39:25.4530292Z 
2025-08-18T06:39:25.4530372Z <a id="db.utils.views"></a>
2025-08-18T06:39:25.4530500Z 
2025-08-18T06:39:25.4530565Z # db.utils.views
2025-08-18T06:39:25.4530663Z 
2025-08-18T06:39:25.4530759Z <a id="db.utils.views.replace_view"></a>
2025-08-18T06:39:25.4530924Z 
2025-08-18T06:39:25.4530992Z #### replace\_view
2025-08-18T06:39:25.4531101Z 
2025-08-18T06:39:25.4531162Z ```python
2025-08-18T06:39:25.4531350Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T06:39:25.4531598Z ```
2025-08-18T06:39:25.4531679Z 
2025-08-18T06:39:25.4531773Z Drop and recreate a SQL view atomically.
2025-08-18T06:39:25.4531936Z 
2025-08-18T06:39:25.4532005Z <a id="db.utils"></a>
2025-08-18T06:39:25.4532118Z 
2025-08-18T06:39:25.4532289Z # db.utils
2025-08-18T06:39:25.4532382Z 
2025-08-18T06:39:25.4532574Z <a id="price_importer"></a>
2025-08-18T06:39:25.4532716Z 
2025-08-18T06:39:25.4532782Z # price\_importer
2025-08-18T06:39:25.4532886Z 
2025-08-18T06:39:25.4532990Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T06:39:25.4533182Z 
2025-08-18T06:39:25.4533272Z # price\_importer.services\_common.dsn
2025-08-18T06:39:25.4533434Z 
2025-08-18T06:39:25.4533563Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T06:39:25.4533768Z 
2025-08-18T06:39:25.4533829Z #### build\_dsn
2025-08-18T06:39:25.4533930Z 
2025-08-18T06:39:25.4533992Z ```python
2025-08-18T06:39:25.4534160Z def build_dsn(sync: bool = True) -> str
2025-08-18T06:39:25.4534388Z ```
2025-08-18T06:39:25.4534469Z 
2025-08-18T06:39:25.4534540Z Return safe DSN.
2025-08-18T06:39:25.4534641Z 
2025-08-18T06:39:25.4534987Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T06:39:25.4535190Z 
2025-08-18T06:39:25.4535320Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T06:39:25.4535532Z 
2025-08-18T06:39:25.4535640Z # price\_importer.services\_common.models\_vendor
2025-08-18T06:39:25.4535843Z 
2025-08-18T06:39:25.4535947Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T06:39:25.4536129Z 
2025-08-18T06:39:25.4536228Z # price\_importer.services\_common.db\_url
2025-08-18T06:39:25.4536405Z 
2025-08-18T06:39:25.4536535Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T06:39:25.4536751Z 
2025-08-18T06:39:25.4536815Z #### build\_url
2025-08-18T06:39:25.4536911Z 
2025-08-18T06:39:25.4536972Z ```python
2025-08-18T06:39:25.4537144Z def build_url(async_: bool = True) -> str
2025-08-18T06:39:25.4537364Z ```
2025-08-18T06:39:25.4537451Z 
2025-08-18T06:39:25.4537547Z Return Postgres DSN from env or PG_* parts.
2025-08-18T06:39:25.4537718Z 
2025-08-18T06:39:25.4537829Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T06:39:25.4538013Z 
2025-08-18T06:39:25.4538102Z # price\_importer.services\_common.keepa
2025-08-18T06:39:25.4538271Z 
2025-08-18T06:39:25.4538373Z <a id="price_importer.services_common.llm"></a>
2025-08-18T06:39:25.4538668Z 
2025-08-18T06:39:25.4538756Z # price\_importer.services\_common.llm
2025-08-18T06:39:25.4538921Z 
2025-08-18T06:39:25.4539033Z <a id="price_importer.services_common.settings"></a>
2025-08-18T06:39:25.4539222Z 
2025-08-18T06:39:25.4539320Z # price\_importer.services\_common.settings
2025-08-18T06:39:25.4539490Z 
2025-08-18T06:39:25.4539588Z <a id="price_importer.services_common.db"></a>
2025-08-18T06:39:25.4539771Z 
2025-08-18T06:39:25.4539858Z # price\_importer.services\_common.db
2025-08-18T06:39:25.4540014Z 
2025-08-18T06:39:25.4540170Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T06:39:25.4540406Z 
2025-08-18T06:39:25.4540480Z #### build\_sqlalchemy\_url
2025-08-18T06:39:25.4540607Z 
2025-08-18T06:39:25.4540677Z ```python
2025-08-18T06:39:25.4540843Z def build_sqlalchemy_url() -> str
2025-08-18T06:39:25.4541052Z ```
2025-08-18T06:39:25.4541133Z 
2025-08-18T06:39:25.4541225Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T06:39:25.4541408Z 
2025-08-18T06:39:25.4541548Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T06:39:25.4541772Z 
2025-08-18T06:39:25.4541850Z #### build\_asyncpg\_dsn
2025-08-18T06:39:25.4541974Z 
2025-08-18T06:39:25.4542035Z ```python
2025-08-18T06:39:25.4542313Z def build_asyncpg_dsn() -> str
2025-08-18T06:39:25.4542508Z ```
2025-08-18T06:39:25.4542592Z 
2025-08-18T06:39:25.4542716Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T06:39:25.4542924Z 
2025-08-18T06:39:25.4543048Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T06:39:25.4543259Z 
2025-08-18T06:39:25.4543324Z #### refresh\_mvs
2025-08-18T06:39:25.4543427Z 
2025-08-18T06:39:25.4543495Z ```python
2025-08-18T06:39:25.4543683Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T06:39:25.4543932Z ```
2025-08-18T06:39:25.4544011Z 
2025-08-18T06:39:25.4544142Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T06:39:25.4544492Z 
2025-08-18T06:39:25.4544591Z <a id="price_importer.services_common"></a>
2025-08-18T06:39:25.4544758Z 
2025-08-18T06:39:25.4544848Z # price\_importer.services\_common
2025-08-18T06:39:25.4544999Z 
2025-08-18T06:39:25.4545103Z <a id="price_importer.services_common.base"></a>
2025-08-18T06:39:25.4545283Z 
2025-08-18T06:39:25.4545379Z # price\_importer.services\_common.base
2025-08-18T06:39:25.4545542Z 
2025-08-18T06:39:25.4545633Z <a id="price_importer.normaliser"></a>
2025-08-18T06:39:25.4545798Z 
2025-08-18T06:39:25.4545880Z # price\_importer.normaliser
2025-08-18T06:39:25.4546017Z 
2025-08-18T06:39:25.4546125Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T06:39:25.4546316Z 
2025-08-18T06:39:25.4546403Z # price\_importer.common.models\_vendor
2025-08-18T06:39:25.4546563Z 
2025-08-18T06:39:25.4546693Z <a id="price_importer.common.db_url"></a>
2025-08-18T06:39:25.4546863Z 
2025-08-18T06:39:25.4546947Z # price\_importer.common.db\_url
2025-08-18T06:39:25.4547101Z 
2025-08-18T06:39:25.4547207Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T06:39:25.4547395Z 
2025-08-18T06:39:25.4547466Z #### make\_dsn
2025-08-18T06:39:25.4547563Z 
2025-08-18T06:39:25.4547625Z ```python
2025-08-18T06:39:25.4547801Z def make_dsn(async_: bool = False) -> str
2025-08-18T06:39:25.4548023Z ```
2025-08-18T06:39:25.4548110Z 
2025-08-18T06:39:25.4548228Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T06:39:25.4548424Z 
2025-08-18T06:39:25.4548533Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T06:39:25.4548722Z 
2025-08-18T06:39:25.4548786Z #### build\_url
2025-08-18T06:39:25.4548883Z 
2025-08-18T06:39:25.4548950Z ```python
2025-08-18T06:39:25.4549118Z def build_url(async_: bool = False) -> str
2025-08-18T06:39:25.4549340Z ```
2025-08-18T06:39:25.4549418Z 
2025-08-18T06:39:25.4549537Z Return Postgres DSN built from environment variables.
2025-08-18T06:39:25.4549741Z 
2025-08-18T06:39:25.4549825Z <a id="price_importer.common"></a>
2025-08-18T06:39:25.4549974Z 
2025-08-18T06:39:25.4550054Z # price\_importer.common
2025-08-18T06:39:25.4550481Z 
2025-08-18T06:39:25.4550569Z <a id="price_importer.common.base"></a>
2025-08-18T06:39:25.4550730Z 
2025-08-18T06:39:25.4550814Z # price\_importer.common.base
2025-08-18T06:39:25.4550952Z 
2025-08-18T06:39:25.4551046Z <a id="price_importer.tests.conftest"></a>
2025-08-18T06:39:25.4551243Z 
2025-08-18T06:39:25.4551324Z # price\_importer.tests.conftest
2025-08-18T06:39:25.4551467Z 
2025-08-18T06:39:25.4551563Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T06:39:25.4551742Z 
2025-08-18T06:39:25.4551827Z # price\_importer.tests.test\_reader
2025-08-18T06:39:25.4551983Z 
2025-08-18T06:39:25.4552086Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T06:39:25.4552461Z 
2025-08-18T06:39:25.4552557Z # price\_importer.tests.test\_imports
2025-08-18T06:39:25.4552725Z 
2025-08-18T06:39:25.4552820Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T06:39:25.4552989Z 
2025-08-18T06:39:25.4553075Z # price\_importer.tests.test\_smoke
2025-08-18T06:39:25.4553239Z 
2025-08-18T06:39:25.4553342Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T06:39:25.4553524Z 
2025-08-18T06:39:25.4553618Z # price\_importer.tests.test\_normaliser
2025-08-18T06:39:25.4553781Z 
2025-08-18T06:39:25.4553864Z <a id="price_importer.tests"></a>
2025-08-18T06:39:25.4554018Z 
2025-08-18T06:39:25.4554090Z # price\_importer.tests
2025-08-18T06:39:25.4554210Z 
2025-08-18T06:39:25.4554294Z <a id="price_importer.reader"></a>
2025-08-18T06:39:25.4554448Z 
2025-08-18T06:39:25.4554524Z # price\_importer.reader
2025-08-18T06:39:25.4554647Z 
2025-08-18T06:39:25.4554743Z <a id="price_importer.repository"></a>
2025-08-18T06:39:25.4554904Z 
2025-08-18T06:39:25.4554984Z # price\_importer.repository
2025-08-18T06:39:25.4555128Z 
2025-08-18T06:39:25.4555211Z <a id="price_importer.import"></a>
2025-08-18T06:39:25.4555357Z 
2025-08-18T06:39:25.4555431Z # price\_importer.import
2025-08-18T06:39:25.4555558Z 
2025-08-18T06:39:25.4555628Z <a id="fees_h10"></a>
2025-08-18T06:39:25.4555865Z 
2025-08-18T06:39:25.4555939Z # fees\_h10
2025-08-18T06:39:25.4556030Z 
2025-08-18T06:39:25.4556104Z <a id="fees_h10.worker"></a>
2025-08-18T06:39:25.4556245Z 
2025-08-18T06:39:25.4556312Z # fees\_h10.worker
2025-08-18T06:39:25.4556418Z 
2025-08-18T06:39:25.4556519Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T06:39:25.4556704Z 
2025-08-18T06:39:25.4556775Z #### list\_active\_asins
2025-08-18T06:39:25.4556891Z 
2025-08-18T06:39:25.4556958Z ```python
2025-08-18T06:39:25.4557123Z def list_active_asins() -> list[str]
2025-08-18T06:39:25.4557356Z ```
2025-08-18T06:39:25.4557436Z 
2025-08-18T06:39:25.4557551Z Return known ASINs or an empty list if unavailable.
2025-08-18T06:39:25.4557751Z 
2025-08-18T06:39:25.4557835Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T06:39:25.4557989Z 
2025-08-18T06:39:25.4558075Z # fees\_h10.tests.test\_smoke
2025-08-18T06:39:25.4558212Z 
2025-08-18T06:39:25.4558287Z <a id="fees_h10.tests"></a>
2025-08-18T06:39:25.4558414Z 
2025-08-18T06:39:25.4558490Z # fees\_h10.tests
2025-08-18T06:39:25.4558597Z 
2025-08-18T06:39:25.4558671Z <a id="fees_h10.client"></a>
2025-08-18T06:39:25.4558806Z 
2025-08-18T06:39:25.4558871Z # fees\_h10.client
2025-08-18T06:39:25.4558973Z 
2025-08-18T06:39:25.4559054Z <a id="fees_h10.repository"></a>
2025-08-18T06:39:25.4559203Z 
2025-08-18T06:39:25.4559273Z # fees\_h10.repository
2025-08-18T06:39:25.4559386Z 
2025-08-18T06:39:25.4559461Z <a id="emailer"></a>
2025-08-18T06:39:25.4559571Z 
2025-08-18T06:39:25.4559631Z # emailer
2025-08-18T06:39:25.4559722Z 
2025-08-18T06:39:25.4559823Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T06:39:25.4560001Z 
2025-08-18T06:39:25.4560087Z # emailer.tests.test\_import\_emailer
2025-08-18T06:39:25.4560249Z 
2025-08-18T06:39:25.4560333Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T06:39:25.4560487Z 
2025-08-18T06:39:25.4560569Z # emailer.tests.test\_smoke
2025-08-18T06:39:25.4560700Z 
2025-08-18T06:39:25.4560774Z <a id="emailer.tests"></a>
2025-08-18T06:39:25.4560908Z 
2025-08-18T06:39:25.4560976Z # emailer.tests
2025-08-18T06:39:25.4561199Z 
2025-08-18T06:39:25.4561281Z <a id="emailer.generate_body"></a>
2025-08-18T06:39:25.4561433Z 
2025-08-18T06:39:25.4561507Z # emailer.generate\_body
2025-08-18T06:39:25.4561628Z 
2025-08-18T06:39:25.4561702Z <a id="llm_server"></a>
2025-08-18T06:39:25.4561815Z 
2025-08-18T06:39:25.4561876Z # llm\_server
2025-08-18T06:39:25.4561974Z 
2025-08-18T06:39:25.4562052Z <a id="llm_server.app"></a>
2025-08-18T06:39:25.4562281Z 
2025-08-18T06:39:25.4562352Z # llm\_server.app
2025-08-18T06:39:25.4562459Z 
