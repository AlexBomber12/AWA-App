2025-08-18T10:33:07.2692412Z ##[group]Run pydoc-markdown
2025-08-18T10:33:07.2692737Z [36;1mpydoc-markdown[0m
2025-08-18T10:33:07.2735655Z shell: /usr/bin/bash -e {0}
2025-08-18T10:33:07.2735895Z env:
2025-08-18T10:33:07.2736137Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:33:07.2736555Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T10:33:07.2736962Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:33:07.2737303Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:33:07.2737644Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:33:07.2737979Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T10:33:07.2738263Z ##[endgroup]
2025-08-18T10:33:07.6095239Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T10:33:07.6096065Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T10:33:07.6096423Z In "pydoc-markdown.yml"
2025-08-18T10:33:07.6096738Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T10:33:07.6097601Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T10:33:07.6098286Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T10:33:07.6098771Z 
2025-08-18T10:33:07.9088419Z <a id="__init__"></a>
2025-08-18T10:33:07.9088747Z 
2025-08-18T10:33:07.9088879Z # \_\_init\_\_
2025-08-18T10:33:07.9089077Z 
2025-08-18T10:33:07.9089289Z <a id="api"></a>
2025-08-18T10:33:07.9089505Z 
2025-08-18T10:33:07.9089617Z # api
2025-08-18T10:33:07.9089782Z 
2025-08-18T10:33:07.9089924Z <a id="api.errors"></a>
2025-08-18T10:33:07.9090166Z 
2025-08-18T10:33:07.9090293Z # api.errors
2025-08-18T10:33:07.9090476Z 
2025-08-18T10:33:07.9090658Z <a id="api.tests.test_errors_json"></a>
2025-08-18T10:33:07.9090987Z 
2025-08-18T10:33:07.9091148Z # api.tests.test\_errors\_json
2025-08-18T10:33:07.9091416Z 
2025-08-18T10:33:07.9091583Z <a id="api.tests.test_llm"></a>
2025-08-18T10:33:07.9091858Z 
2025-08-18T10:33:07.9091995Z # api.tests.test\_llm
2025-08-18T10:33:07.9092272Z 
2025-08-18T10:33:07.9092437Z <a id="api.tests.test_imports"></a>
2025-08-18T10:33:07.9092745Z 
2025-08-18T10:33:07.9092903Z # api.tests.test\_imports
2025-08-18T10:33:07.9093150Z 
2025-08-18T10:33:07.9093323Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T10:33:07.9093642Z 
2025-08-18T10:33:07.9093805Z # api.tests.test\_entrypoint
2025-08-18T10:33:07.9094067Z 
2025-08-18T10:33:07.9094228Z <a id="api.tests.test_health"></a>
2025-08-18T10:33:07.9094527Z 
2025-08-18T10:33:07.9094674Z # api.tests.test\_health
2025-08-18T10:33:07.9094912Z 
2025-08-18T10:33:07.9095066Z <a id="api.logging_config"></a>
2025-08-18T10:33:07.9095543Z 
2025-08-18T10:33:07.9095687Z # api.logging\_config
2025-08-18T10:33:07.9095911Z 
2025-08-18T10:33:07.9096070Z <a id="api.migrations.env"></a>
2025-08-18T10:33:07.9096341Z 
2025-08-18T10:33:07.9096486Z # api.migrations.env
2025-08-18T10:33:07.9096718Z 
2025-08-18T10:33:07.9096943Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T10:33:07.9097669Z 
2025-08-18T10:33:07.9097882Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T10:33:07.9098239Z 
2025-08-18T10:33:07.9098450Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T10:33:07.9098821Z 
2025-08-18T10:33:07.9099018Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T10:33:07.9099356Z 
2025-08-18T10:33:07.9099652Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T10:33:07.9100112Z 
2025-08-18T10:33:07.9100372Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T10:33:07.9100792Z 
2025-08-18T10:33:07.9101031Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T10:33:07.9101422Z 
2025-08-18T10:33:07.9101631Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T10:33:07.9101990Z 
2025-08-18T10:33:07.9102221Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T10:33:07.9102599Z 
2025-08-18T10:33:07.9102798Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T10:33:07.9103153Z 
2025-08-18T10:33:07.9103720Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T10:33:07.9104114Z 
2025-08-18T10:33:07.9104338Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T10:33:07.9104700Z 
2025-08-18T10:33:07.9104929Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T10:33:07.9105548Z 
2025-08-18T10:33:07.9105762Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T10:33:07.9106122Z 
2025-08-18T10:33:07.9106364Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T10:33:07.9106766Z 
2025-08-18T10:33:07.9106971Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T10:33:07.9107324Z 
2025-08-18T10:33:07.9107602Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T10:33:07.9108025Z 
2025-08-18T10:33:07.9108259Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T10:33:07.9108651Z 
2025-08-18T10:33:07.9108900Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T10:33:07.9109303Z 
2025-08-18T10:33:07.9109540Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T10:33:07.9109902Z 
2025-08-18T10:33:07.9110164Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T10:33:07.9110580Z 
2025-08-18T10:33:07.9110815Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T10:33:07.9111186Z 
2025-08-18T10:33:07.9111394Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T10:33:07.9111768Z 
2025-08-18T10:33:07.9111948Z # api.migrations.versions.0001\_baseline
2025-08-18T10:33:07.9112272Z 
2025-08-18T10:33:07.9112453Z <a id="api.migrations.versions"></a>
2025-08-18T10:33:07.9112760Z 
2025-08-18T10:33:07.9112912Z # api.migrations.versions
2025-08-18T10:33:07.9113168Z 
2025-08-18T10:33:07.9113323Z <a id="api.migrations"></a>
2025-08-18T10:33:07.9113579Z 
2025-08-18T10:33:07.9113713Z # api.migrations
2025-08-18T10:33:07.9113927Z 
2025-08-18T10:33:07.9114060Z <a id="api.db"></a>
2025-08-18T10:33:07.9114272Z 
2025-08-18T10:33:07.9114400Z # api.db
2025-08-18T10:33:07.9114576Z 
2025-08-18T10:33:07.9114737Z <a id="api.routes.stats"></a>
2025-08-18T10:33:07.9115004Z 
2025-08-18T10:33:07.9115144Z # api.routes.stats
2025-08-18T10:33:07.9115524Z 
2025-08-18T10:33:07.9115693Z <a id="api.routes.stats.kpi"></a>
2025-08-18T10:33:07.9115990Z 
2025-08-18T10:33:07.9116109Z #### kpi
2025-08-18T10:33:07.9116274Z 
2025-08-18T10:33:07.9116396Z ```python
2025-08-18T10:33:07.9116716Z @router.get("/stats/kpi")
2025-08-18T10:33:07.9117141Z def kpi() -> List[Dict[str, int]]
2025-08-18T10:33:07.9117525Z ```
2025-08-18T10:33:07.9117683Z 
2025-08-18T10:33:07.9117844Z Return KPI metrics (mock).
2025-08-18T10:33:07.9118094Z 
2025-08-18T10:33:07.9118279Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T10:33:07.9118620Z 
2025-08-18T10:33:07.9118752Z #### roi\_by\_vendor
2025-08-18T10:33:07.9118966Z 
2025-08-18T10:33:07.9119087Z ```python
2025-08-18T10:33:07.9119411Z @router.get("/stats/roi_by_vendor")
2025-08-18T10:33:07.9119884Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T10:33:07.9120329Z ```
2025-08-18T10:33:07.9120754Z 
2025-08-18T10:33:07.9120910Z Return ROI percent by vendor.
2025-08-18T10:33:07.9121252Z 
2025-08-18T10:33:07.9121432Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T10:33:07.9121804Z 
2025-08-18T10:33:07.9121929Z #### roi\_trend
2025-08-18T10:33:07.9122121Z 
2025-08-18T10:33:07.9122250Z ```python
2025-08-18T10:33:07.9122567Z @router.get("/stats/roi_trend")
2025-08-18T10:33:07.9123015Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T10:33:07.9123453Z ```
2025-08-18T10:33:07.9123616Z 
2025-08-18T10:33:07.9123754Z Return 30-day ROI trend.
2025-08-18T10:33:07.9123992Z 
2025-08-18T10:33:07.9124145Z <a id="api.routes.roi"></a>
2025-08-18T10:33:07.9124401Z 
2025-08-18T10:33:07.9124530Z # api.routes.roi
2025-08-18T10:33:07.9124733Z 
2025-08-18T10:33:07.9124895Z <a id="api.routes.health"></a>
2025-08-18T10:33:07.9125160Z 
2025-08-18T10:33:07.9125472Z # api.routes.health
2025-08-18T10:33:07.9125703Z 
2025-08-18T10:33:07.9125875Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T10:33:07.9126433Z 
2025-08-18T10:33:07.9126556Z #### MAX\_SKEW
2025-08-18T10:33:07.9126751Z 
2025-08-18T10:33:07.9126867Z seconds
2025-08-18T10:33:07.9127053Z 
2025-08-18T10:33:07.9127232Z <a id="api.routes.health.health"></a>
2025-08-18T10:33:07.9127547Z 
2025-08-18T10:33:07.9127667Z #### health
2025-08-18T10:33:07.9127848Z 
2025-08-18T10:33:07.9127968Z ```python
2025-08-18T10:33:07.9128331Z @router.get("/health", include_in_schema=False)
2025-08-18T10:33:07.9129047Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T10:33:07.9129674Z ```
2025-08-18T10:33:07.9129838Z 
2025-08-18T10:33:07.9130042Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T10:33:07.9130392Z 
2025-08-18T10:33:07.9130570Z <a id="api.routes.repository"></a>
2025-08-18T10:33:07.9130873Z 
2025-08-18T10:33:07.9131020Z # api.routes.repository
2025-08-18T10:33:07.9131264Z 
2025-08-18T10:33:07.9131401Z <a id="api.routes"></a>
2025-08-18T10:33:07.9131631Z 
2025-08-18T10:33:07.9131766Z # api.routes
2025-08-18T10:33:07.9131969Z 
2025-08-18T10:33:07.9132116Z <a id="api.models.fee"></a>
2025-08-18T10:33:07.9132378Z 
2025-08-18T10:33:07.9132512Z # api.models.fee
2025-08-18T10:33:07.9132713Z 
2025-08-18T10:33:07.9132851Z <a id="api.models"></a>
2025-08-18T10:33:07.9133081Z 
2025-08-18T10:33:07.9133205Z # api.models
2025-08-18T10:33:07.9133390Z 
2025-08-18T10:33:07.9133541Z <a id="api.roi_repository"></a>
2025-08-18T10:33:07.9133821Z 
2025-08-18T10:33:07.9133961Z # api.roi\_repository
2025-08-18T10:33:07.9134181Z 
2025-08-18T10:33:07.9134323Z <a id="api.main"></a>
2025-08-18T10:33:07.9134540Z 
2025-08-18T10:33:07.9134663Z # api.main
2025-08-18T10:33:07.9134837Z 
2025-08-18T10:33:07.9134991Z <a id="api.main.ready"></a>
2025-08-18T10:33:07.9135247Z 
2025-08-18T10:33:07.9135549Z #### ready
2025-08-18T10:33:07.9135741Z 
2025-08-18T10:33:07.9135867Z ```python
2025-08-18T10:33:07.9136360Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T10:33:07.9137204Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T10:33:07.9137897Z                                                                       str]
2025-08-18T10:33:07.9138326Z ```
2025-08-18T10:33:07.9138483Z 
2025-08-18T10:33:07.9138679Z Return 200 only when migrations are at head.
2025-08-18T10:33:07.9139012Z 
2025-08-18T10:33:07.9139152Z <a id="api.config"></a>
2025-08-18T10:33:07.9139389Z 
2025-08-18T10:33:07.9139512Z # api.config
2025-08-18T10:33:07.9139689Z 
2025-08-18T10:33:07.9139819Z <a id="etl"></a>
2025-08-18T10:33:07.9140016Z 
2025-08-18T10:33:07.9140130Z # etl
2025-08-18T10:33:07.9140292Z 
2025-08-18T10:33:07.9140453Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T10:33:07.9140735Z 
2025-08-18T10:33:07.9140872Z # etl.fba\_fee\_ingestor
2025-08-18T10:33:07.9141114Z 
2025-08-18T10:33:07.9141266Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T10:33:07.9141542Z 
2025-08-18T10:33:07.9141678Z # etl.sp\_fees\_ingestor
2025-08-18T10:33:07.9141914Z 
2025-08-18T10:33:07.9142108Z <a id="etl.keepa_ingestor"></a>
2025-08-18T10:33:07.9142685Z 
2025-08-18T10:33:07.9142835Z # etl.keepa\_ingestor
2025-08-18T10:33:07.9143062Z 
2025-08-18T10:33:07.9143189Z <a id="etl.db"></a>
2025-08-18T10:33:07.9143395Z 
2025-08-18T10:33:07.9143514Z # etl.db
2025-08-18T10:33:07.9143683Z 
2025-08-18T10:33:07.9143842Z <a id="etl.dialects.schemas"></a>
2025-08-18T10:33:07.9144141Z 
2025-08-18T10:33:07.9144279Z # etl.dialects.schemas
2025-08-18T10:33:07.9144507Z 
2025-08-18T10:33:07.9144712Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T10:33:07.9145079Z 
2025-08-18T10:33:07.9145251Z # etl.dialects.amazon\_reimbursements
2025-08-18T10:33:07.9145756Z 
2025-08-18T10:33:07.9145938Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T10:33:07.9146271Z 
2025-08-18T10:33:07.9146432Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T10:33:07.9146742Z 
2025-08-18T10:33:07.9146980Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T10:33:07.9147304Z 
2025-08-18T10:33:07.9147460Z # etl.dialects.amazon\_returns
2025-08-18T10:33:07.9147951Z 
2025-08-18T10:33:07.9148147Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T10:33:07.9148485Z 
2025-08-18T10:33:07.9148649Z # etl.dialects.amazon\_fee\_preview
2025-08-18T10:33:07.9148951Z 
2025-08-18T10:33:07.9149156Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T10:33:07.9149518Z 
2025-08-18T10:33:07.9149764Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T10:33:07.9150087Z 
2025-08-18T10:33:07.9150269Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T10:33:07.9150601Z 
2025-08-18T10:33:07.9150778Z # etl.dialects.amazon\_settlements
2025-08-18T10:33:07.9151071Z 
2025-08-18T10:33:07.9151214Z <a id="etl.dialects"></a>
2025-08-18T10:33:07.9151462Z 
2025-08-18T10:33:07.9151586Z # etl.dialects
2025-08-18T10:33:07.9151776Z 
2025-08-18T10:33:07.9151910Z <a id="ingest"></a>
2025-08-18T10:33:07.9152115Z 
2025-08-18T10:33:07.9152235Z # ingest
2025-08-18T10:33:07.9152399Z 
2025-08-18T10:33:07.9152564Z <a id="ingest.maintenance"></a>
2025-08-18T10:33:07.9152854Z 
2025-08-18T10:33:07.9152992Z # ingest.maintenance
2025-08-18T10:33:07.9153226Z 
2025-08-18T10:33:07.9153374Z <a id="ingest.copy_loader"></a>
2025-08-18T10:33:07.9153675Z 
2025-08-18T10:33:07.9153817Z # ingest.copy\_loader
2025-08-18T10:33:07.9154035Z 
2025-08-18T10:33:07.9154225Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T10:33:07.9154572Z 
2025-08-18T10:33:07.9154719Z #### copy\_df\_via\_temp
2025-08-18T10:33:07.9154952Z 
2025-08-18T10:33:07.9155073Z ```python
2025-08-18T10:33:07.9155597Z def copy_df_via_temp(engine: Engine,
2025-08-18T10:33:07.9156043Z                      df: pd.DataFrame,
2025-08-18T10:33:07.9156487Z                      target_table: str,
2025-08-18T10:33:07.9156907Z                      *,
2025-08-18T10:33:07.9157294Z                      target_schema: Optional[str] = None,
2025-08-18T10:33:07.9157805Z                      columns: Sequence[str],
2025-08-18T10:33:07.9158322Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T10:33:07.9158871Z                      analyze_after: bool = False,
2025-08-18T10:33:07.9159369Z                      connection: Any | None = None) -> int
2025-08-18T10:33:07.9159830Z ```
2025-08-18T10:33:07.9159998Z 
2025-08-18T10:33:07.9160292Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T10:33:07.9160742Z 
2025-08-18T10:33:07.9160905Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T10:33:07.9161209Z 
2025-08-18T10:33:07.9161370Z # ingest.tests.test\_smoke
2025-08-18T10:33:07.9161619Z 
2025-08-18T10:33:07.9161758Z <a id="ingest.tests"></a>
2025-08-18T10:33:07.9162005Z 
2025-08-18T10:33:07.9162130Z # ingest.tests
2025-08-18T10:33:07.9162321Z 
2025-08-18T10:33:07.9162476Z <a id="ingest.upload_router"></a>
2025-08-18T10:33:07.9162774Z 
2025-08-18T10:33:07.9162915Z # ingest.upload\_router
2025-08-18T10:33:07.9163144Z 
2025-08-18T10:33:07.9163303Z <a id="ingest.email_watcher"></a>
2025-08-18T10:33:07.9163584Z 
2025-08-18T10:33:07.9163721Z # ingest.email\_watcher
2025-08-18T10:33:07.9163967Z 
2025-08-18T10:33:07.9164352Z <a id="ingest.email_watcher.main"></a>
2025-08-18T10:33:07.9164672Z 
2025-08-18T10:33:07.9164789Z #### main
2025-08-18T10:33:07.9164965Z 
2025-08-18T10:33:07.9165087Z ```python
2025-08-18T10:33:07.9165646Z def main() -> dict[str, str]
2025-08-18T10:33:07.9166014Z ```
2025-08-18T10:33:07.9166169Z 
2025-08-18T10:33:07.9166442Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T10:33:07.9166864Z 
2025-08-18T10:33:07.9167109Z Returns {"status": "success"} when processing completes.
2025-08-18T10:33:07.9167510Z 
2025-08-18T10:33:07.9167655Z <a id="ingest.tasks"></a>
2025-08-18T10:33:07.9167897Z 
2025-08-18T10:33:07.9168027Z # ingest.tasks
2025-08-18T10:33:07.9168223Z 
2025-08-18T10:33:07.9168404Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T10:33:07.9168734Z 
2025-08-18T10:33:07.9168876Z #### task\_import\_file
2025-08-18T10:33:07.9169105Z 
2025-08-18T10:33:07.9169226Z ```python
2025-08-18T10:33:07.9169632Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T10:33:07.9170401Z def task_import_file(self,
2025-08-18T10:33:07.9170779Z                      uri: str,
2025-08-18T10:33:07.9171199Z                      report_type: Optional[str] = None,
2025-08-18T10:33:07.9171713Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T10:33:07.9172172Z ```
2025-08-18T10:33:07.9172329Z 
2025-08-18T10:33:07.9172587Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T10:33:07.9172998Z 
2025-08-18T10:33:07.9173156Z <a id="ingest.celery_app"></a>
2025-08-18T10:33:07.9173424Z 
2025-08-18T10:33:07.9173558Z # ingest.celery\_app
2025-08-18T10:33:07.9173783Z 
2025-08-18T10:33:07.9173936Z <a id="ingest.ingest_router"></a>
2025-08-18T10:33:07.9174221Z 
2025-08-18T10:33:07.9174373Z # ingest.ingest\_router
2025-08-18T10:33:07.9174601Z 
2025-08-18T10:33:07.9174742Z <a id="logistics_etl"></a>
2025-08-18T10:33:07.9174986Z 
2025-08-18T10:33:07.9175119Z # logistics\_etl
2025-08-18T10:33:07.9175497Z 
2025-08-18T10:33:07.9175647Z Daily logistics ETL job.
2025-08-18T10:33:07.9175914Z 
2025-08-18T10:33:07.9176068Z <a id="logistics_etl.__main__"></a>
2025-08-18T10:33:07.9176362Z 
2025-08-18T10:33:07.9176511Z # logistics\_etl.\_\_main\_\_
2025-08-18T10:33:07.9176767Z 
2025-08-18T10:33:07.9176913Z <a id="logistics_etl.dsn"></a>
2025-08-18T10:33:07.9177172Z 
2025-08-18T10:33:07.9177315Z # logistics\_etl.dsn
2025-08-18T10:33:07.9177605Z 
2025-08-18T10:33:07.9177832Z Local DSN builder to avoid cross-service dependency.
2025-08-18T10:33:07.9178211Z 
2025-08-18T10:33:07.9178380Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T10:33:07.9178714Z 
2025-08-18T10:33:07.9178842Z #### build\_dsn
2025-08-18T10:33:07.9179042Z 
2025-08-18T10:33:07.9179173Z ```python
2025-08-18T10:33:07.9179507Z def build_dsn(sync: bool = True) -> str
2025-08-18T10:33:07.9179932Z ```
2025-08-18T10:33:07.9180085Z 
2025-08-18T10:33:07.9180350Z Return a Postgres DSN assembled from environment variables.
2025-08-18T10:33:07.9180783Z 
2025-08-18T10:33:07.9181064Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T10:33:07.9181826Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T10:33:07.9182486Z error when any required variable is missing.
2025-08-18T10:33:07.9182823Z 
2025-08-18T10:33:07.9183009Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T10:33:07.9183336Z 
2025-08-18T10:33:07.9183490Z # logistics\_etl.tests.conftest
2025-08-18T10:33:07.9183768Z 
2025-08-18T10:33:07.9183968Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T10:33:07.9184324Z 
2025-08-18T10:33:07.9184491Z # logistics\_etl.tests.test\_repository
2025-08-18T10:33:07.9184822Z 
2025-08-18T10:33:07.9185007Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T10:33:07.9185523Z 
2025-08-18T10:33:07.9185702Z # logistics\_etl.tests.test\_cron
2025-08-18T10:33:07.9185998Z 
2025-08-18T10:33:07.9186169Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T10:33:07.9186459Z 
2025-08-18T10:33:07.9186589Z # logistics\_etl.tests.test\_imports
2025-08-18T10:33:07.9187054Z 
2025-08-18T10:33:07.9187202Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T10:33:07.9187495Z 
2025-08-18T10:33:07.9187634Z # logistics\_etl.tests.test\_smoke
2025-08-18T10:33:07.9187901Z 
2025-08-18T10:33:07.9188111Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T10:33:07.9188405Z 
2025-08-18T10:33:07.9188546Z # logistics\_etl.tests.test\_client
2025-08-18T10:33:07.9188826Z 
2025-08-18T10:33:07.9188974Z <a id="logistics_etl.tests"></a>
2025-08-18T10:33:07.9189229Z 
2025-08-18T10:33:07.9189355Z # logistics\_etl.tests
2025-08-18T10:33:07.9189579Z 
2025-08-18T10:33:07.9189720Z <a id="logistics_etl.flow"></a>
2025-08-18T10:33:07.9189954Z 
2025-08-18T10:33:07.9190069Z # logistics\_etl.flow
2025-08-18T10:33:07.9190253Z 
2025-08-18T10:33:07.9190381Z <a id="logistics_etl.client"></a>
2025-08-18T10:33:07.9190627Z 
2025-08-18T10:33:07.9190755Z # logistics\_etl.client
2025-08-18T10:33:07.9190959Z 
2025-08-18T10:33:07.9191098Z <a id="logistics_etl.cron"></a>
2025-08-18T10:33:07.9191526Z 
2025-08-18T10:33:07.9191712Z # logistics\_etl.cron
2025-08-18T10:33:07.9191922Z 
2025-08-18T10:33:07.9192069Z <a id="logistics_etl.db"></a>
2025-08-18T10:33:07.9192287Z 
2025-08-18T10:33:07.9192393Z # logistics\_etl.db
2025-08-18T10:33:07.9192565Z 
2025-08-18T10:33:07.9192701Z <a id="logistics_etl.repository"></a>
2025-08-18T10:33:07.9192951Z 
2025-08-18T10:33:07.9193077Z # logistics\_etl.repository
2025-08-18T10:33:07.9193312Z 
2025-08-18T10:33:07.9193441Z <a id="alert_bot"></a>
2025-08-18T10:33:07.9193658Z 
2025-08-18T10:33:07.9193763Z # alert\_bot
2025-08-18T10:33:07.9193915Z 
2025-08-18T10:33:07.9194053Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T10:33:07.9194336Z 
2025-08-18T10:33:07.9194486Z # alert\_bot.tests.test\_smoke
2025-08-18T10:33:07.9194735Z 
2025-08-18T10:33:07.9194871Z <a id="alert_bot.tests"></a>
2025-08-18T10:33:07.9195119Z 
2025-08-18T10:33:07.9195229Z # alert\_bot.tests
2025-08-18T10:33:07.9195588Z 
2025-08-18T10:33:07.9195715Z <a id="alert_bot.alert_bot"></a>
2025-08-18T10:33:07.9195948Z 
2025-08-18T10:33:07.9196054Z # alert\_bot.alert\_bot
2025-08-18T10:33:07.9196228Z 
2025-08-18T10:33:07.9196346Z <a id="alert_bot.rules"></a>
2025-08-18T10:33:07.9196562Z 
2025-08-18T10:33:07.9196683Z # alert\_bot.rules
2025-08-18T10:33:07.9196882Z 
2025-08-18T10:33:07.9197000Z <a id="common"></a>
2025-08-18T10:33:07.9197187Z 
2025-08-18T10:33:07.9197300Z # common
2025-08-18T10:33:07.9197463Z 
2025-08-18T10:33:07.9197591Z <a id="common.dsn"></a>
2025-08-18T10:33:07.9197804Z 
2025-08-18T10:33:07.9197923Z # common.dsn
2025-08-18T10:33:07.9198091Z 
2025-08-18T10:33:07.9198240Z <a id="common.dsn.build_dsn"></a>
2025-08-18T10:33:07.9198512Z 
2025-08-18T10:33:07.9198630Z #### build\_dsn
2025-08-18T10:33:07.9198818Z 
2025-08-18T10:33:07.9198938Z ```python
2025-08-18T10:33:07.9199278Z def build_dsn(sync: bool = True) -> str
2025-08-18T10:33:07.9199728Z ```
2025-08-18T10:33:07.9199892Z 
2025-08-18T10:33:07.9200124Z Return a Postgres DSN, validating required variables.
2025-08-18T10:33:07.9200510Z 
2025-08-18T10:33:07.9200889Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T10:33:07.9201714Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T10:33:07.9202510Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T10:33:07.9232272Z missing.
2025-08-18T10:33:07.9232518Z 
2025-08-18T10:33:07.9232672Z <a id="common.models_vendor"></a>
2025-08-18T10:33:07.9232932Z 
2025-08-18T10:33:07.9233053Z # common.models\_vendor
2025-08-18T10:33:07.9233261Z 
2025-08-18T10:33:07.9233405Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T10:33:07.9233698Z 
2025-08-18T10:33:07.9233817Z ## Vendor Objects
2025-08-18T10:33:07.9233997Z 
2025-08-18T10:33:07.9234101Z ```python
2025-08-18T10:33:07.9234358Z class Vendor(Base)
2025-08-18T10:33:07.9234637Z ```
2025-08-18T10:33:07.9234770Z 
2025-08-18T10:33:07.9234989Z Vendor of inventory items.
2025-08-18T10:33:07.9235205Z 
2025-08-18T10:33:07.9235559Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T10:33:07.9236192Z 
2025-08-18T10:33:07.9236308Z ## VendorPrice Objects
2025-08-18T10:33:07.9236496Z 
2025-08-18T10:33:07.9236605Z ```python
2025-08-18T10:33:07.9236846Z class VendorPrice(Base)
2025-08-18T10:33:07.9237129Z ```
2025-08-18T10:33:07.9237250Z 
2025-08-18T10:33:07.9237411Z Association table linking vendors to pricing.
2025-08-18T10:33:07.9237713Z 
2025-08-18T10:33:07.9237832Z <a id="common.db_url"></a>
2025-08-18T10:33:07.9238035Z 
2025-08-18T10:33:07.9238146Z # common.db\_url
2025-08-18T10:33:07.9238317Z 
2025-08-18T10:33:07.9238452Z <a id="common.db_url.build_url"></a>
2025-08-18T10:33:07.9238699Z 
2025-08-18T10:33:07.9238805Z #### build\_url
2025-08-18T10:33:07.9238961Z 
2025-08-18T10:33:07.9239059Z ```python
2025-08-18T10:33:07.9239335Z def build_url(async_: bool = True) -> str
2025-08-18T10:33:07.9239690Z ```
2025-08-18T10:33:07.9239822Z 
2025-08-18T10:33:07.9239989Z Return Postgres DSN from env or PG_* parts.
2025-08-18T10:33:07.9240267Z 
2025-08-18T10:33:07.9240740Z <a id="common.keepa"></a>
2025-08-18T10:33:07.9240962Z 
2025-08-18T10:33:07.9241070Z # common.keepa
2025-08-18T10:33:07.9241230Z 
2025-08-18T10:33:07.9241356Z <a id="common.llm"></a>
2025-08-18T10:33:07.9241550Z 
2025-08-18T10:33:07.9241645Z # common.llm
2025-08-18T10:33:07.9241786Z 
2025-08-18T10:33:07.9241912Z <a id="common.settings"></a>
2025-08-18T10:33:07.9242121Z 
2025-08-18T10:33:07.9242225Z # common.settings
2025-08-18T10:33:07.9242406Z 
2025-08-18T10:33:07.9242516Z <a id="common.db"></a>
2025-08-18T10:33:07.9242748Z 
2025-08-18T10:33:07.9242859Z # common.db
2025-08-18T10:33:07.9243000Z 
2025-08-18T10:33:07.9243140Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T10:33:07.9243411Z 
2025-08-18T10:33:07.9243533Z #### build\_sqlalchemy\_url
2025-08-18T10:33:07.9243743Z 
2025-08-18T10:33:07.9243842Z ```python
2025-08-18T10:33:07.9244119Z def build_sqlalchemy_url() -> str
2025-08-18T10:33:07.9244439Z ```
2025-08-18T10:33:07.9244579Z 
2025-08-18T10:33:07.9244730Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T10:33:07.9245026Z 
2025-08-18T10:33:07.9245172Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T10:33:07.9245604Z 
2025-08-18T10:33:07.9245728Z #### build\_asyncpg\_dsn
2025-08-18T10:33:07.9245925Z 
2025-08-18T10:33:07.9246030Z ```python
2025-08-18T10:33:07.9246293Z def build_asyncpg_dsn() -> str
2025-08-18T10:33:07.9246615Z ```
2025-08-18T10:33:07.9246747Z 
2025-08-18T10:33:07.9246945Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T10:33:07.9247282Z 
2025-08-18T10:33:07.9247412Z <a id="common.db.refresh_mvs"></a>
2025-08-18T10:33:07.9247651Z 
2025-08-18T10:33:07.9247763Z #### refresh\_mvs
2025-08-18T10:33:07.9247940Z 
2025-08-18T10:33:07.9248042Z ```python
2025-08-18T10:33:07.9248359Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T10:33:07.9248761Z ```
2025-08-18T10:33:07.9248903Z 
2025-08-18T10:33:07.9249122Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T10:33:07.9249468Z 
2025-08-18T10:33:07.9249605Z <a id="common.config"></a>
2025-08-18T10:33:07.9249822Z 
2025-08-18T10:33:07.9249924Z # common.config
2025-08-18T10:33:07.9250084Z 
2025-08-18T10:33:07.9250212Z <a id="common.base"></a>
2025-08-18T10:33:07.9250410Z 
2025-08-18T10:33:07.9250513Z # common.base
2025-08-18T10:33:07.9250673Z 
2025-08-18T10:33:07.9250806Z <a id="common.base.Base"></a>
2025-08-18T10:33:07.9251047Z 
2025-08-18T10:33:07.9251151Z ## Base Objects
2025-08-18T10:33:07.9251325Z 
2025-08-18T10:33:07.9251423Z ```python
2025-08-18T10:33:07.9251690Z class Base(DeclarativeBase)
2025-08-18T10:33:07.9251994Z ```
2025-08-18T10:33:07.9252123Z 
2025-08-18T10:33:07.9252265Z Base class for SQLAlchemy models.
2025-08-18T10:33:07.9252508Z 
2025-08-18T10:33:07.9252625Z <a id="repricer"></a>
2025-08-18T10:33:07.9252817Z 
2025-08-18T10:33:07.9252913Z # repricer
2025-08-18T10:33:07.9253056Z 
2025-08-18T10:33:07.9253193Z <a id="repricer.app.schemas"></a>
2025-08-18T10:33:07.9253438Z 
2025-08-18T10:33:07.9253555Z # repricer.app.schemas
2025-08-18T10:33:07.9253742Z 
2025-08-18T10:33:07.9254059Z <a id="repricer.app.deps"></a>
2025-08-18T10:33:07.9254284Z 
2025-08-18T10:33:07.9254401Z # repricer.app.deps
2025-08-18T10:33:07.9254582Z 
2025-08-18T10:33:07.9254754Z Placeholder module for Keepa / SP-API clients.
2025-08-18T10:33:07.9255048Z 
2025-08-18T10:33:07.9255178Z <a id="repricer.app.logic"></a>
2025-08-18T10:33:07.9255565Z 
2025-08-18T10:33:07.9255683Z # repricer.app.logic
2025-08-18T10:33:07.9255866Z 
2025-08-18T10:33:07.9256026Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T10:33:07.9256307Z 
2025-08-18T10:33:07.9256410Z #### MIN\_MARGIN
2025-08-18T10:33:07.9256574Z 
2025-08-18T10:33:07.9256671Z 15 % ROI
2025-08-18T10:33:07.9256804Z 
2025-08-18T10:33:07.9256963Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T10:33:07.9257258Z 
2025-08-18T10:33:07.9257365Z #### compute\_price
2025-08-18T10:33:07.9257531Z 
2025-08-18T10:33:07.9257638Z ```python
2025-08-18T10:33:07.9258020Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T10:33:07.9258670Z ```
2025-08-18T10:33:07.9258811Z 
2025-08-18T10:33:07.9258989Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T10:33:07.9259441Z Replace with real competitive logic later.
2025-08-18T10:33:07.9259710Z 
2025-08-18T10:33:07.9259842Z <a id="repricer.app.main"></a>
2025-08-18T10:33:07.9260075Z 
2025-08-18T10:33:07.9260195Z # repricer.app.main
2025-08-18T10:33:07.9260374Z 
2025-08-18T10:33:07.9260500Z <a id="repricer.app"></a>
2025-08-18T10:33:07.9260708Z 
2025-08-18T10:33:07.9260813Z # repricer.app
2025-08-18T10:33:07.9260969Z 
2025-08-18T10:33:07.9261119Z <a id="repricer.tests.test_imports"></a>
2025-08-18T10:33:07.9261384Z 
2025-08-18T10:33:07.9261509Z # repricer.tests.test\_imports
2025-08-18T10:33:07.9261740Z 
2025-08-18T10:33:07.9261880Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T10:33:07.9262134Z 
2025-08-18T10:33:07.9262266Z # repricer.tests.test\_smoke
2025-08-18T10:33:07.9262484Z 
2025-08-18T10:33:07.9262605Z <a id="repricer.tests"></a>
2025-08-18T10:33:07.9262810Z 
2025-08-18T10:33:07.9262937Z # repricer.tests
2025-08-18T10:33:07.9263102Z 
2025-08-18T10:33:07.9263202Z <a id="db"></a>
2025-08-18T10:33:07.9263366Z 
2025-08-18T10:33:07.9263459Z # db
2025-08-18T10:33:07.9263594Z 
2025-08-18T10:33:07.9263713Z <a id="db.utils.views"></a>
2025-08-18T10:33:07.9263925Z 
2025-08-18T10:33:07.9264035Z # db.utils.views
2025-08-18T10:33:07.9264198Z 
2025-08-18T10:33:07.9264347Z <a id="db.utils.views.replace_view"></a>
2025-08-18T10:33:07.9264606Z 
2025-08-18T10:33:07.9264712Z #### replace\_view
2025-08-18T10:33:07.9264887Z 
2025-08-18T10:33:07.9264983Z ```python
2025-08-18T10:33:07.9265432Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T10:33:07.9265835Z ```
2025-08-18T10:33:07.9265963Z 
2025-08-18T10:33:07.9266115Z Drop and recreate a SQL view atomically.
2025-08-18T10:33:07.9266384Z 
2025-08-18T10:33:07.9266496Z <a id="db.utils"></a>
2025-08-18T10:33:07.9266667Z 
2025-08-18T10:33:07.9266772Z # db.utils
2025-08-18T10:33:07.9266911Z 
2025-08-18T10:33:07.9267032Z <a id="price_importer"></a>
2025-08-18T10:33:07.9267250Z 
2025-08-18T10:33:07.9267357Z # price\_importer
2025-08-18T10:33:07.9267524Z 
2025-08-18T10:33:07.9267678Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T10:33:07.9267980Z 
2025-08-18T10:33:07.9268120Z # price\_importer.services\_common.dsn
2025-08-18T10:33:07.9268372Z 
2025-08-18T10:33:07.9268573Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T10:33:07.9268890Z 
2025-08-18T10:33:07.9268988Z #### build\_dsn
2025-08-18T10:33:07.9269152Z 
2025-08-18T10:33:07.9269253Z ```python
2025-08-18T10:33:07.9269523Z def build_dsn(sync: bool = True) -> str
2025-08-18T10:33:07.9269886Z ```
2025-08-18T10:33:07.9270022Z 
2025-08-18T10:33:07.9270132Z Return safe DSN.
2025-08-18T10:33:07.9270294Z 
2025-08-18T10:33:07.9270745Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T10:33:07.9271055Z 
2025-08-18T10:33:07.9271260Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T10:33:07.9271590Z 
2025-08-18T10:33:07.9271764Z # price\_importer.services\_common.models\_vendor
2025-08-18T10:33:07.9272328Z 
2025-08-18T10:33:07.9272501Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T10:33:07.9272810Z 
2025-08-18T10:33:07.9272968Z # price\_importer.services\_common.db\_url
2025-08-18T10:33:07.9273247Z 
2025-08-18T10:33:07.9273458Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T10:33:07.9273804Z 
2025-08-18T10:33:07.9273911Z #### build\_url
2025-08-18T10:33:07.9274064Z 
2025-08-18T10:33:07.9274161Z ```python
2025-08-18T10:33:07.9274439Z def build_url(async_: bool = True) -> str
2025-08-18T10:33:07.9274786Z ```
2025-08-18T10:33:07.9274924Z 
2025-08-18T10:33:07.9275080Z Return Postgres DSN from env or PG_* parts.
2025-08-18T10:33:07.9275496Z 
2025-08-18T10:33:07.9275678Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T10:33:07.9275966Z 
2025-08-18T10:33:07.9276110Z # price\_importer.services\_common.keepa
2025-08-18T10:33:07.9276383Z 
2025-08-18T10:33:07.9276546Z <a id="price_importer.services_common.llm"></a>
2025-08-18T10:33:07.9276996Z 
2025-08-18T10:33:07.9277140Z # price\_importer.services\_common.llm
2025-08-18T10:33:07.9277396Z 
2025-08-18T10:33:07.9277575Z <a id="price_importer.services_common.settings"></a>
2025-08-18T10:33:07.9277875Z 
2025-08-18T10:33:07.9278025Z # price\_importer.services\_common.settings
2025-08-18T10:33:07.9278292Z 
2025-08-18T10:33:07.9278454Z <a id="price_importer.services_common.db"></a>
2025-08-18T10:33:07.9278744Z 
2025-08-18T10:33:07.9278882Z # price\_importer.services\_common.db
2025-08-18T10:33:07.9279140Z 
2025-08-18T10:33:07.9279389Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T10:33:07.9279781Z 
2025-08-18T10:33:07.9279905Z #### build\_sqlalchemy\_url
2025-08-18T10:33:07.9280118Z 
2025-08-18T10:33:07.9280226Z ```python
2025-08-18T10:33:07.9280506Z def build_sqlalchemy_url() -> str
2025-08-18T10:33:07.9280855Z ```
2025-08-18T10:33:07.9280994Z 
2025-08-18T10:33:07.9281156Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T10:33:07.9281475Z 
2025-08-18T10:33:07.9281722Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T10:33:07.9282125Z 
2025-08-18T10:33:07.9282262Z #### build\_asyncpg\_dsn
2025-08-18T10:33:07.9282475Z 
2025-08-18T10:33:07.9282586Z ```python
2025-08-18T10:33:07.9282885Z def build_asyncpg_dsn() -> str
2025-08-18T10:33:07.9283232Z ```
2025-08-18T10:33:07.9283379Z 
2025-08-18T10:33:07.9283590Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T10:33:07.9283940Z 
2025-08-18T10:33:07.9284148Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T10:33:07.9284496Z 
2025-08-18T10:33:07.9284613Z #### refresh\_mvs
2025-08-18T10:33:07.9284785Z 
2025-08-18T10:33:07.9284898Z ```python
2025-08-18T10:33:07.9285224Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T10:33:07.9285853Z ```
2025-08-18T10:33:07.9285957Z 
2025-08-18T10:33:07.9286101Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T10:33:07.9286326Z 
2025-08-18T10:33:07.9286441Z <a id="price_importer.services_common"></a>
2025-08-18T10:33:07.9286621Z 
2025-08-18T10:33:07.9286720Z # price\_importer.services\_common
2025-08-18T10:33:07.9286876Z 
2025-08-18T10:33:07.9286984Z <a id="price_importer.services_common.base"></a>
2025-08-18T10:33:07.9287168Z 
2025-08-18T10:33:07.9287274Z # price\_importer.services\_common.base
2025-08-18T10:33:07.9287439Z 
2025-08-18T10:33:07.9287535Z <a id="price_importer.normaliser"></a>
2025-08-18T10:33:07.9287704Z 
2025-08-18T10:33:07.9287790Z # price\_importer.normaliser
2025-08-18T10:33:07.9287932Z 
2025-08-18T10:33:07.9288045Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T10:33:07.9288228Z 
2025-08-18T10:33:07.9288323Z # price\_importer.common.models\_vendor
2025-08-18T10:33:07.9288488Z 
2025-08-18T10:33:07.9288590Z <a id="price_importer.common.db_url"></a>
2025-08-18T10:33:07.9288759Z 
2025-08-18T10:33:07.9288847Z # price\_importer.common.db\_url
2025-08-18T10:33:07.9289005Z 
2025-08-18T10:33:07.9289112Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T10:33:07.9289443Z 
2025-08-18T10:33:07.9289518Z #### make\_dsn
2025-08-18T10:33:07.9289618Z 
2025-08-18T10:33:07.9289684Z ```python
2025-08-18T10:33:07.9289871Z def make_dsn(async_: bool = False) -> str
2025-08-18T10:33:07.9290101Z ```
2025-08-18T10:33:07.9290192Z 
2025-08-18T10:33:07.9290313Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T10:33:07.9290512Z 
2025-08-18T10:33:07.9290624Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T10:33:07.9290819Z 
2025-08-18T10:33:07.9290888Z #### build\_url
2025-08-18T10:33:07.9290990Z 
2025-08-18T10:33:07.9291061Z ```python
2025-08-18T10:33:07.9291240Z def build_url(async_: bool = False) -> str
2025-08-18T10:33:07.9291472Z ```
2025-08-18T10:33:07.9291555Z 
2025-08-18T10:33:07.9291677Z Return Postgres DSN built from environment variables.
2025-08-18T10:33:07.9291881Z 
2025-08-18T10:33:07.9291973Z <a id="price_importer.common"></a>
2025-08-18T10:33:07.9292126Z 
2025-08-18T10:33:07.9292207Z # price\_importer.common
2025-08-18T10:33:07.9292465Z 
2025-08-18T10:33:07.9292560Z <a id="price_importer.common.base"></a>
2025-08-18T10:33:07.9292726Z 
2025-08-18T10:33:07.9292821Z # price\_importer.common.base
2025-08-18T10:33:07.9292963Z 
2025-08-18T10:33:07.9293061Z <a id="price_importer.tests.conftest"></a>
2025-08-18T10:33:07.9293241Z 
2025-08-18T10:33:07.9293330Z # price\_importer.tests.conftest
2025-08-18T10:33:07.9293477Z 
2025-08-18T10:33:07.9293580Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T10:33:07.9293762Z 
2025-08-18T10:33:07.9293854Z # price\_importer.tests.test\_reader
2025-08-18T10:33:07.9294014Z 
2025-08-18T10:33:07.9294124Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T10:33:07.9294304Z 
2025-08-18T10:33:07.9294400Z # price\_importer.tests.test\_imports
2025-08-18T10:33:07.9294574Z 
2025-08-18T10:33:07.9294678Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T10:33:07.9294856Z 
2025-08-18T10:33:07.9294945Z # price\_importer.tests.test\_smoke
2025-08-18T10:33:07.9295117Z 
2025-08-18T10:33:07.9295230Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T10:33:07.9295645Z 
2025-08-18T10:33:07.9295751Z # price\_importer.tests.test\_normaliser
2025-08-18T10:33:07.9295933Z 
2025-08-18T10:33:07.9296028Z <a id="price_importer.tests"></a>
2025-08-18T10:33:07.9296195Z 
2025-08-18T10:33:07.9296277Z # price\_importer.tests
2025-08-18T10:33:07.9296405Z 
2025-08-18T10:33:07.9296493Z <a id="price_importer.reader"></a>
2025-08-18T10:33:07.9296656Z 
2025-08-18T10:33:07.9296740Z # price\_importer.reader
2025-08-18T10:33:07.9296869Z 
2025-08-18T10:33:07.9296971Z <a id="price_importer.repository"></a>
2025-08-18T10:33:07.9297138Z 
2025-08-18T10:33:07.9297228Z # price\_importer.repository
2025-08-18T10:33:07.9297383Z 
2025-08-18T10:33:07.9297474Z <a id="price_importer.import"></a>
2025-08-18T10:33:07.9297627Z 
2025-08-18T10:33:07.9297709Z # price\_importer.import
2025-08-18T10:33:07.9297844Z 
2025-08-18T10:33:07.9297918Z <a id="fees_h10"></a>
2025-08-18T10:33:07.9298037Z 
2025-08-18T10:33:07.9298119Z # fees\_h10
2025-08-18T10:33:07.9298218Z 
2025-08-18T10:33:07.9298296Z <a id="fees_h10.worker"></a>
2025-08-18T10:33:07.9298438Z 
2025-08-18T10:33:07.9298508Z # fees\_h10.worker
2025-08-18T10:33:07.9298621Z 
2025-08-18T10:33:07.9298723Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T10:33:07.9298909Z 
2025-08-18T10:33:07.9298986Z #### list\_active\_asins
2025-08-18T10:33:07.9299110Z 
2025-08-18T10:33:07.9299186Z ```python
2025-08-18T10:33:07.9299362Z def list_active_asins() -> list[str]
2025-08-18T10:33:07.9299622Z ```
2025-08-18T10:33:07.9299711Z 
2025-08-18T10:33:07.9299826Z Return known ASINs or an empty list if unavailable.
2025-08-18T10:33:07.9300032Z 
2025-08-18T10:33:07.9300120Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T10:33:07.9300279Z 
2025-08-18T10:33:07.9300362Z # fees\_h10.tests.test\_smoke
2025-08-18T10:33:07.9300506Z 
2025-08-18T10:33:07.9300585Z <a id="fees_h10.tests"></a>
2025-08-18T10:33:07.9300716Z 
2025-08-18T10:33:07.9300796Z # fees\_h10.tests
2025-08-18T10:33:07.9301037Z 
2025-08-18T10:33:07.9301117Z <a id="fees_h10.client"></a>
2025-08-18T10:33:07.9301258Z 
2025-08-18T10:33:07.9301328Z # fees\_h10.client
2025-08-18T10:33:07.9301432Z 
2025-08-18T10:33:07.9301515Z <a id="fees_h10.repository"></a>
2025-08-18T10:33:07.9301663Z 
2025-08-18T10:33:07.9301738Z # fees\_h10.repository
2025-08-18T10:33:07.9301857Z 
2025-08-18T10:33:07.9301934Z <a id="emailer"></a>
2025-08-18T10:33:07.9302048Z 
2025-08-18T10:33:07.9302112Z # emailer
2025-08-18T10:33:07.9302211Z 
2025-08-18T10:33:07.9302313Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T10:33:07.9302491Z 
2025-08-18T10:33:07.9302581Z # emailer.tests.test\_import\_emailer
2025-08-18T10:33:07.9302749Z 
2025-08-18T10:33:07.9302837Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T10:33:07.9302992Z 
2025-08-18T10:33:07.9303081Z # emailer.tests.test\_smoke
2025-08-18T10:33:07.9303216Z 
2025-08-18T10:33:07.9303296Z <a id="emailer.tests"></a>
2025-08-18T10:33:07.9303437Z 
2025-08-18T10:33:07.9303506Z # emailer.tests
2025-08-18T10:33:07.9303728Z 
2025-08-18T10:33:07.9303816Z <a id="emailer.generate_body"></a>
2025-08-18T10:33:07.9303976Z 
2025-08-18T10:33:07.9304054Z # emailer.generate\_body
2025-08-18T10:33:07.9304183Z 
2025-08-18T10:33:07.9304267Z <a id="llm_server"></a>
2025-08-18T10:33:07.9304387Z 
2025-08-18T10:33:07.9304454Z # llm\_server
2025-08-18T10:33:07.9304554Z 
2025-08-18T10:33:07.9304639Z <a id="llm_server.app"></a>
2025-08-18T10:33:07.9304770Z 
2025-08-18T10:33:07.9304841Z # llm\_server.app
2025-08-18T10:33:07.9304956Z 
