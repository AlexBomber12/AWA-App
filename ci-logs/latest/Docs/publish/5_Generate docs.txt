2025-08-19T13:34:04.4788204Z ##[group]Run pydoc-markdown
2025-08-19T13:34:04.4788538Z [36;1mpydoc-markdown[0m
2025-08-19T13:34:04.4830520Z shell: /usr/bin/bash -e {0}
2025-08-19T13:34:04.4830837Z env:
2025-08-19T13:34:04.4831160Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:34:04.4831739Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T13:34:04.4832462Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:34:04.4832993Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:34:04.4833485Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:34:04.4833988Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T13:34:04.4834396Z ##[endgroup]
2025-08-19T13:34:04.8604734Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T13:34:04.8605504Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T13:34:04.8606082Z In "pydoc-markdown.yml"
2025-08-19T13:34:04.8606621Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T13:34:04.8607789Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T13:34:04.8609421Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T13:34:04.8610531Z 
2025-08-19T13:34:05.1866274Z <a id="__init__"></a>
2025-08-19T13:34:05.1866910Z 
2025-08-19T13:34:05.1867043Z # \_\_init\_\_
2025-08-19T13:34:05.1867242Z 
2025-08-19T13:34:05.1867376Z <a id="api"></a>
2025-08-19T13:34:05.1867579Z 
2025-08-19T13:34:05.1867689Z # api
2025-08-19T13:34:05.1867859Z 
2025-08-19T13:34:05.1868005Z <a id="api.errors"></a>
2025-08-19T13:34:05.1868313Z 
2025-08-19T13:34:05.1868439Z # api.errors
2025-08-19T13:34:05.1868619Z 
2025-08-19T13:34:05.1868777Z <a id="api.sentry_config"></a>
2025-08-19T13:34:05.1869051Z 
2025-08-19T13:34:05.1869187Z # api.sentry\_config
2025-08-19T13:34:05.1869404Z 
2025-08-19T13:34:05.1869591Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T13:34:05.1869926Z 
2025-08-19T13:34:05.1870459Z # api.tests.test\_stats\_contracts
2025-08-19T13:34:05.1870790Z 
2025-08-19T13:34:05.1870960Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T13:34:05.1871280Z 
2025-08-19T13:34:05.1871438Z # api.tests.test\_sentry\_scrub
2025-08-19T13:34:05.1871707Z 
2025-08-19T13:34:05.1871879Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T13:34:05.1873181Z 
2025-08-19T13:34:05.1873363Z # api.tests.test\_roi\_basic\_auth
2025-08-19T13:34:05.1873661Z 
2025-08-19T13:34:05.1873822Z <a id="api.tests.test_errors_json"></a>
2025-08-19T13:34:05.1874145Z 
2025-08-19T13:34:05.1874298Z # api.tests.test\_errors\_json
2025-08-19T13:34:05.1874565Z 
2025-08-19T13:34:05.1874727Z <a id="api.tests.test_llm"></a>
2025-08-19T13:34:05.1874999Z 
2025-08-19T13:34:05.1875135Z # api.tests.test\_llm
2025-08-19T13:34:05.1875352Z 
2025-08-19T13:34:05.1875519Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T13:34:05.1875827Z 
2025-08-19T13:34:05.1875970Z # api.tests.test\_roi\_filters
2025-08-19T13:34:05.1876236Z 
2025-08-19T13:34:05.1876407Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T13:34:05.1876735Z 
2025-08-19T13:34:05.1876893Z # api.tests.test\_sentry\_event
2025-08-19T13:34:05.1877157Z 
2025-08-19T13:34:05.1877387Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T13:34:05.1877775Z 
2025-08-19T13:34:05.1877934Z ## DummyTransport Objects
2025-08-19T13:34:05.1878176Z 
2025-08-19T13:34:05.1878296Z ```python
2025-08-19T13:34:05.1878612Z class DummyTransport()
2025-08-19T13:34:05.1878937Z ```
2025-08-19T13:34:05.1879136Z 
2025-08-19T13:34:05.1879458Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T13:34:05.1879953Z 
2025-08-19T13:34:05.1880102Z #### capture\_envelope
2025-08-19T13:34:05.1880320Z 
2025-08-19T13:34:05.1880434Z ```python
2025-08-19T13:34:05.1880753Z def capture_envelope(envelope)
2025-08-19T13:34:05.1881117Z ```
2025-08-19T13:34:05.1881274Z 
2025-08-19T13:34:05.1881508Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T13:34:05.1881895Z 
2025-08-19T13:34:05.1882058Z <a id="api.tests.test_cors"></a>
2025-08-19T13:34:05.1882891Z 
2025-08-19T13:34:05.1883036Z # api.tests.test\_cors
2025-08-19T13:34:05.1883266Z 
2025-08-19T13:34:05.1883428Z <a id="api.tests.test_imports"></a>
2025-08-19T13:34:05.1883724Z 
2025-08-19T13:34:05.1883894Z # api.tests.test\_imports
2025-08-19T13:34:05.1884146Z 
2025-08-19T13:34:05.1884302Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T13:34:05.1884629Z 
2025-08-19T13:34:05.1884796Z # api.tests.test\_rate\_limit
2025-08-19T13:34:05.1885068Z 
2025-08-19T13:34:05.1885241Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T13:34:05.1885569Z 
2025-08-19T13:34:05.1885696Z #### app
2025-08-19T13:34:05.1885856Z 
2025-08-19T13:34:05.1885971Z noqa: E402
2025-08-19T13:34:05.1886144Z 
2025-08-19T13:34:05.1886306Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T13:34:05.1886611Z 
2025-08-19T13:34:05.1886757Z # api.tests.test\_entrypoint
2025-08-19T13:34:05.1887028Z 
2025-08-19T13:34:05.1887178Z <a id="api.tests.test_health"></a>
2025-08-19T13:34:05.1887479Z 
2025-08-19T13:34:05.1887623Z # api.tests.test\_health
2025-08-19T13:34:05.1887859Z 
2025-08-19T13:34:05.1888006Z <a id="api.tests.test_score"></a>
2025-08-19T13:34:05.1888292Z 
2025-08-19T13:34:05.1888419Z # api.tests.test\_score
2025-08-19T13:34:05.1888642Z 
2025-08-19T13:34:05.1888783Z <a id="api.logging_config"></a>
2025-08-19T13:34:05.1889054Z 
2025-08-19T13:34:05.1889182Z # api.logging\_config
2025-08-19T13:34:05.1889396Z 
2025-08-19T13:34:05.1889549Z <a id="api.migrations.env"></a>
2025-08-19T13:34:05.1889807Z 
2025-08-19T13:34:05.1889938Z # api.migrations.env
2025-08-19T13:34:05.1890150Z 
2025-08-19T13:34:05.1890378Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T13:34:05.1890750Z 
2025-08-19T13:34:05.1890942Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T13:34:05.1891294Z 
2025-08-19T13:34:05.1891492Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T13:34:05.1891851Z 
2025-08-19T13:34:05.1892028Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T13:34:05.1892806Z 
2025-08-19T13:34:05.1893108Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T13:34:05.1893584Z 
2025-08-19T13:34:05.1893837Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T13:34:05.1894244Z 
2025-08-19T13:34:05.1894474Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T13:34:05.1894867Z 
2025-08-19T13:34:05.1895072Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T13:34:05.1895419Z 
2025-08-19T13:34:05.1895644Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T13:34:05.1896017Z 
2025-08-19T13:34:05.1896204Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T13:34:05.1896557Z 
2025-08-19T13:34:05.1896782Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T13:34:05.1897165Z 
2025-08-19T13:34:05.1897364Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T13:34:05.1897725Z 
2025-08-19T13:34:05.1897946Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T13:34:05.1898479Z 
2025-08-19T13:34:05.1898681Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T13:34:05.1899077Z 
2025-08-19T13:34:05.1899312Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T13:34:05.1899699Z 
2025-08-19T13:34:05.1899893Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T13:34:05.1900251Z 
2025-08-19T13:34:05.1900509Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T13:34:05.1900932Z 
2025-08-19T13:34:05.1901161Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T13:34:05.1901546Z 
2025-08-19T13:34:05.1901775Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T13:34:05.1902355Z 
2025-08-19T13:34:05.1902571Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T13:34:05.1902928Z 
2025-08-19T13:34:05.1903184Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T13:34:05.1903603Z 
2025-08-19T13:34:05.1903819Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T13:34:05.1904453Z 
2025-08-19T13:34:05.1904654Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T13:34:05.1905028Z 
2025-08-19T13:34:05.1905198Z # api.migrations.versions.0001\_baseline
2025-08-19T13:34:05.1905520Z 
2025-08-19T13:34:05.1905689Z <a id="api.migrations.versions"></a>
2025-08-19T13:34:05.1905994Z 
2025-08-19T13:34:05.1906142Z # api.migrations.versions
2025-08-19T13:34:05.1906458Z 
2025-08-19T13:34:05.1906606Z <a id="api.migrations"></a>
2025-08-19T13:34:05.1906859Z 
2025-08-19T13:34:05.1906986Z # api.migrations
2025-08-19T13:34:05.1907317Z 
2025-08-19T13:34:05.1907440Z <a id="api.db"></a>
2025-08-19T13:34:05.1907640Z 
2025-08-19T13:34:05.1907760Z # api.db
2025-08-19T13:34:05.1907924Z 
2025-08-19T13:34:05.1908070Z <a id="api.routes.score"></a>
2025-08-19T13:34:05.1908337Z 
2025-08-19T13:34:05.1908519Z # api.routes.score
2025-08-19T13:34:05.1908724Z 
2025-08-19T13:34:05.1908865Z <a id="api.routes.stats"></a>
2025-08-19T13:34:05.1909133Z 
2025-08-19T13:34:05.1909265Z # api.routes.stats
2025-08-19T13:34:05.1909525Z 
2025-08-19T13:34:05.1909670Z <a id="api.routes.roi"></a>
2025-08-19T13:34:05.1909917Z 
2025-08-19T13:34:05.1910037Z # api.routes.roi
2025-08-19T13:34:05.1910228Z 
2025-08-19T13:34:05.1910382Z <a id="api.routes.health"></a>
2025-08-19T13:34:05.1910642Z 
2025-08-19T13:34:05.1910767Z # api.routes.health
2025-08-19T13:34:05.1910974Z 
2025-08-19T13:34:05.1911138Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T13:34:05.1911453Z 
2025-08-19T13:34:05.1911574Z #### MAX\_SKEW
2025-08-19T13:34:05.1911753Z 
2025-08-19T13:34:05.1911864Z seconds
2025-08-19T13:34:05.1912017Z 
2025-08-19T13:34:05.1912372Z <a id="api.routes.health.health"></a>
2025-08-19T13:34:05.1912693Z 
2025-08-19T13:34:05.1912805Z #### health
2025-08-19T13:34:05.1912975Z 
2025-08-19T13:34:05.1913088Z ```python
2025-08-19T13:34:05.1913532Z @router.get("/health", include_in_schema=False)
2025-08-19T13:34:05.1914252Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T13:34:05.1915125Z ```
2025-08-19T13:34:05.1915290Z 
2025-08-19T13:34:05.1915512Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T13:34:05.1915879Z 
2025-08-19T13:34:05.1916054Z <a id="api.routes.repository"></a>
2025-08-19T13:34:05.1916348Z 
2025-08-19T13:34:05.1916487Z # api.routes.repository
2025-08-19T13:34:05.1916729Z 
2025-08-19T13:34:05.1916862Z <a id="api.routes"></a>
2025-08-19T13:34:05.1917085Z 
2025-08-19T13:34:05.1917208Z # api.routes
2025-08-19T13:34:05.1917390Z 
2025-08-19T13:34:05.1917526Z <a id="api.models.fee"></a>
2025-08-19T13:34:05.1917792Z 
2025-08-19T13:34:05.1918234Z # api.models.fee
2025-08-19T13:34:05.1918546Z 
2025-08-19T13:34:05.1918788Z <a id="api.models"></a>
2025-08-19T13:34:05.1919022Z 
2025-08-19T13:34:05.1919139Z # api.models
2025-08-19T13:34:05.1919315Z 
2025-08-19T13:34:05.1919460Z <a id="api.roi_repository"></a>
2025-08-19T13:34:05.1919733Z 
2025-08-19T13:34:05.1919862Z # api.roi\_repository
2025-08-19T13:34:05.1920050Z 
2025-08-19T13:34:05.1920176Z <a id="api.main"></a>
2025-08-19T13:34:05.1920384Z 
2025-08-19T13:34:05.1920490Z # api.main
2025-08-19T13:34:05.1920653Z 
2025-08-19T13:34:05.1920776Z <a id="api.main.ready"></a>
2025-08-19T13:34:05.1921021Z 
2025-08-19T13:34:05.1921229Z #### ready
2025-08-19T13:34:05.1921392Z 
2025-08-19T13:34:05.1921502Z ```python
2025-08-19T13:34:05.1921985Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T13:34:05.1922969Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T13:34:05.1923636Z                                                                       str]
2025-08-19T13:34:05.1924058Z ```
2025-08-19T13:34:05.1924220Z 
2025-08-19T13:34:05.1924431Z Return 200 only when migrations are at head.
2025-08-19T13:34:05.1924785Z 
2025-08-19T13:34:05.1924929Z <a id="api.config"></a>
2025-08-19T13:34:05.1925155Z 
2025-08-19T13:34:05.1925272Z # api.config
2025-08-19T13:34:05.1925455Z 
2025-08-19T13:34:05.1925593Z <a id="api.security"></a>
2025-08-19T13:34:05.1925846Z 
2025-08-19T13:34:05.1926192Z # api.security
2025-08-19T13:34:05.1926392Z 
2025-08-19T13:34:05.1926509Z <a id="etl"></a>
2025-08-19T13:34:05.1926693Z 
2025-08-19T13:34:05.1926810Z # etl
2025-08-19T13:34:05.1926963Z 
2025-08-19T13:34:05.1927106Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T13:34:05.1927385Z 
2025-08-19T13:34:05.1927525Z # etl.fba\_fee\_ingestor
2025-08-19T13:34:05.1927749Z 
2025-08-19T13:34:05.1927894Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T13:34:05.1928170Z 
2025-08-19T13:34:05.1928299Z # etl.sp\_fees\_ingestor
2025-08-19T13:34:05.1928522Z 
2025-08-19T13:34:05.1928662Z <a id="etl.keepa_ingestor"></a>
2025-08-19T13:34:05.1928933Z 
2025-08-19T13:34:05.1929066Z # etl.keepa\_ingestor
2025-08-19T13:34:05.1929275Z 
2025-08-19T13:34:05.1929401Z <a id="etl.db"></a>
2025-08-19T13:34:05.1929593Z 
2025-08-19T13:34:05.1929702Z # etl.db
2025-08-19T13:34:05.1929866Z 
2025-08-19T13:34:05.1930017Z <a id="etl.dialects.schemas"></a>
2025-08-19T13:34:05.1930293Z 
2025-08-19T13:34:05.1930425Z # etl.dialects.schemas
2025-08-19T13:34:05.1930665Z 
2025-08-19T13:34:05.1930853Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T13:34:05.1931200Z 
2025-08-19T13:34:05.1931370Z # etl.dialects.amazon\_reimbursements
2025-08-19T13:34:05.1931673Z 
2025-08-19T13:34:05.1931850Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T13:34:05.1932403Z 
2025-08-19T13:34:05.1932568Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T13:34:05.1932867Z 
2025-08-19T13:34:05.1933025Z <a id="etl.dialects.test_generic"></a>
2025-08-19T13:34:05.1933349Z 
2025-08-19T13:34:05.1933490Z # etl.dialects.test\_generic
2025-08-19T13:34:05.1933746Z 
2025-08-19T13:34:05.1933935Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T13:34:05.1934247Z 
2025-08-19T13:34:05.1934394Z # etl.dialects.amazon\_returns
2025-08-19T13:34:05.1934673Z 
2025-08-19T13:34:05.1934849Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T13:34:05.1935227Z 
2025-08-19T13:34:05.1935386Z # etl.dialects.amazon\_fee\_preview
2025-08-19T13:34:05.1935930Z 
2025-08-19T13:34:05.1936140Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T13:34:05.1936493Z 
2025-08-19T13:34:05.1936664Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T13:34:05.1936974Z 
2025-08-19T13:34:05.1937153Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T13:34:05.1937485Z 
2025-08-19T13:34:05.1937640Z # etl.dialects.amazon\_settlements
2025-08-19T13:34:05.1937925Z 
2025-08-19T13:34:05.1938062Z <a id="etl.dialects"></a>
2025-08-19T13:34:05.1938309Z 
2025-08-19T13:34:05.1938428Z # etl.dialects
2025-08-19T13:34:05.1938612Z 
2025-08-19T13:34:05.1938743Z <a id="ingest"></a>
2025-08-19T13:34:05.1938939Z 
2025-08-19T13:34:05.1939049Z # ingest
2025-08-19T13:34:05.1939205Z 
2025-08-19T13:34:05.1939362Z <a id="ingest.maintenance"></a>
2025-08-19T13:34:05.1939630Z 
2025-08-19T13:34:05.1939758Z # ingest.maintenance
2025-08-19T13:34:05.1939976Z 
2025-08-19T13:34:05.1940117Z <a id="ingest.copy_loader"></a>
2025-08-19T13:34:05.1940380Z 
2025-08-19T13:34:05.1940514Z # ingest.copy\_loader
2025-08-19T13:34:05.1940735Z 
2025-08-19T13:34:05.1940920Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T13:34:05.1941253Z 
2025-08-19T13:34:05.1941393Z #### copy\_df\_via\_temp
2025-08-19T13:34:05.1941619Z 
2025-08-19T13:34:05.1941732Z ```python
2025-08-19T13:34:05.1942043Z def copy_df_via_temp(engine: Engine,
2025-08-19T13:34:05.1942759Z                      df: pd.DataFrame,
2025-08-19T13:34:05.1943197Z                      target_table: str,
2025-08-19T13:34:05.1943599Z                      *,
2025-08-19T13:34:05.1943969Z                      target_schema: Optional[str] = None,
2025-08-19T13:34:05.1944459Z                      columns: Sequence[str],
2025-08-19T13:34:05.1944957Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T13:34:05.1945480Z                      analyze_after: bool = False,
2025-08-19T13:34:05.1945971Z                      connection: Any | None = None) -> int
2025-08-19T13:34:05.1946424Z ```
2025-08-19T13:34:05.1946576Z 
2025-08-19T13:34:05.1946888Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T13:34:05.1947563Z 
2025-08-19T13:34:05.1947724Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T13:34:05.1948030Z 
2025-08-19T13:34:05.1948186Z # ingest.tests.test\_smoke
2025-08-19T13:34:05.1948434Z 
2025-08-19T13:34:05.1948572Z <a id="ingest.tests"></a>
2025-08-19T13:34:05.1948815Z 
2025-08-19T13:34:05.1948935Z # ingest.tests
2025-08-19T13:34:05.1949117Z 
2025-08-19T13:34:05.1949266Z <a id="ingest.upload_router"></a>
2025-08-19T13:34:05.1949554Z 
2025-08-19T13:34:05.1949688Z # ingest.upload\_router
2025-08-19T13:34:05.1949911Z 
2025-08-19T13:34:05.1950067Z <a id="ingest.email_watcher"></a>
2025-08-19T13:34:05.1950336Z 
2025-08-19T13:34:05.1950469Z # ingest.email\_watcher
2025-08-19T13:34:05.1950693Z 
2025-08-19T13:34:05.1950847Z <a id="ingest.email_watcher.main"></a>
2025-08-19T13:34:05.1951151Z 
2025-08-19T13:34:05.1951265Z #### main
2025-08-19T13:34:05.1951433Z 
2025-08-19T13:34:05.1951543Z ```python
2025-08-19T13:34:05.1951853Z def main() -> dict[str, str]
2025-08-19T13:34:05.1952394Z ```
2025-08-19T13:34:05.1952548Z 
2025-08-19T13:34:05.1952818Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T13:34:05.1953231Z 
2025-08-19T13:34:05.1953471Z Returns {"status": "success"} when processing completes.
2025-08-19T13:34:05.1953876Z 
2025-08-19T13:34:05.1954012Z <a id="ingest.tasks"></a>
2025-08-19T13:34:05.1954242Z 
2025-08-19T13:34:05.1954357Z # ingest.tasks
2025-08-19T13:34:05.1954555Z 
2025-08-19T13:34:05.1954729Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T13:34:05.1955058Z 
2025-08-19T13:34:05.1955204Z #### task\_import\_file
2025-08-19T13:34:05.1955427Z 
2025-08-19T13:34:05.1955545Z ```python
2025-08-19T13:34:05.1955943Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T13:34:05.1956550Z def task_import_file(self: Any,
2025-08-19T13:34:05.1956936Z                      uri: str,
2025-08-19T13:34:05.1957346Z                      report_type: str | None = None,
2025-08-19T13:34:05.1958077Z                      force: bool = False) -> dict[str, Any]
2025-08-19T13:34:05.1958531Z ```
2025-08-19T13:34:05.1958682Z 
2025-08-19T13:34:05.1958938Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T13:34:05.1959331Z 
2025-08-19T13:34:05.1959480Z <a id="ingest.celery_app"></a>
2025-08-19T13:34:05.1959752Z 
2025-08-19T13:34:05.1959881Z # ingest.celery\_app
2025-08-19T13:34:05.1960092Z 
2025-08-19T13:34:05.1960240Z <a id="ingest.ingest_router"></a>
2025-08-19T13:34:05.1960525Z 
2025-08-19T13:34:05.1960656Z # ingest.ingest\_router
2025-08-19T13:34:05.1960874Z 
2025-08-19T13:34:05.1961016Z <a id="logistics_etl"></a>
2025-08-19T13:34:05.1961253Z 
2025-08-19T13:34:05.1961375Z # logistics\_etl
2025-08-19T13:34:05.1961574Z 
2025-08-19T13:34:05.1961708Z Daily logistics ETL job.
2025-08-19T13:34:05.1961940Z 
2025-08-19T13:34:05.1962085Z <a id="logistics_etl.__main__"></a>
2025-08-19T13:34:05.1962564Z 
2025-08-19T13:34:05.1962707Z # logistics\_etl.\_\_main\_\_
2025-08-19T13:34:05.1962982Z 
2025-08-19T13:34:05.1963135Z <a id="logistics_etl.dsn"></a>
2025-08-19T13:34:05.1963396Z 
2025-08-19T13:34:05.1963520Z # logistics\_etl.dsn
2025-08-19T13:34:05.1963735Z 
2025-08-19T13:34:05.1963948Z Local DSN builder to avoid cross-service dependency.
2025-08-19T13:34:05.1964324Z 
2025-08-19T13:34:05.1964494Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T13:34:05.1964821Z 
2025-08-19T13:34:05.1964940Z #### build\_dsn
2025-08-19T13:34:05.1965126Z 
2025-08-19T13:34:05.1965247Z ```python
2025-08-19T13:34:05.1965566Z def build_dsn(sync: bool = True) -> str
2025-08-19T13:34:05.1965980Z ```
2025-08-19T13:34:05.1966129Z 
2025-08-19T13:34:05.1966387Z Return a Postgres DSN assembled from environment variables.
2025-08-19T13:34:05.1966812Z 
2025-08-19T13:34:05.1967086Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T13:34:05.1967803Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T13:34:05.1968451Z error when any required variable is missing.
2025-08-19T13:34:05.1968793Z 
2025-08-19T13:34:05.1969335Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T13:34:05.1969670Z 
2025-08-19T13:34:05.1969822Z # logistics\_etl.tests.conftest
2025-08-19T13:34:05.1970107Z 
2025-08-19T13:34:05.1970303Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T13:34:05.1970659Z 
2025-08-19T13:34:05.1970825Z # logistics\_etl.tests.test\_repository
2025-08-19T13:34:05.1971140Z 
2025-08-19T13:34:05.1971311Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T13:34:05.1971630Z 
2025-08-19T13:34:05.1971789Z # logistics\_etl.tests.test\_cron
2025-08-19T13:34:05.1972068Z 
2025-08-19T13:34:05.1972434Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T13:34:05.1972783Z 
2025-08-19T13:34:05.1972935Z # logistics\_etl.tests.test\_imports
2025-08-19T13:34:05.1973231Z 
2025-08-19T13:34:05.1973399Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T13:34:05.1973733Z 
2025-08-19T13:34:05.1973884Z # logistics\_etl.tests.test\_smoke
2025-08-19T13:34:05.1974165Z 
2025-08-19T13:34:05.1974357Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T13:34:05.1974685Z 
2025-08-19T13:34:05.1974833Z # logistics\_etl.tests.test\_client
2025-08-19T13:34:05.1975126Z 
2025-08-19T13:34:05.1975271Z <a id="logistics_etl.tests"></a>
2025-08-19T13:34:05.1975542Z 
2025-08-19T13:34:05.1975673Z # logistics\_etl.tests
2025-08-19T13:34:05.1975899Z 
2025-08-19T13:34:05.1976047Z <a id="logistics_etl.flow"></a>
2025-08-19T13:34:05.1976309Z 
2025-08-19T13:34:05.1976445Z # logistics\_etl.flow
2025-08-19T13:34:05.1976662Z 
2025-08-19T13:34:05.1976809Z <a id="logistics_etl.client"></a>
2025-08-19T13:34:05.1977086Z 
2025-08-19T13:34:05.1977218Z # logistics\_etl.client
2025-08-19T13:34:05.1977439Z 
2025-08-19T13:34:05.1977578Z <a id="logistics_etl.cron"></a>
2025-08-19T13:34:05.1977842Z 
2025-08-19T13:34:05.1977971Z # logistics\_etl.cron
2025-08-19T13:34:05.1978182Z 
2025-08-19T13:34:05.1978331Z <a id="logistics_etl.db"></a>
2025-08-19T13:34:05.1978584Z 
2025-08-19T13:34:05.1978706Z # logistics\_etl.db
2025-08-19T13:34:05.1979379Z 
2025-08-19T13:34:05.1979538Z <a id="logistics_etl.repository"></a>
2025-08-19T13:34:05.1979830Z 
2025-08-19T13:34:05.2006070Z # logistics\_etl.repository
2025-08-19T13:34:05.2006493Z 
2025-08-19T13:34:05.2006701Z <a id="alert_bot"></a>
2025-08-19T13:34:05.2007001Z 
2025-08-19T13:34:05.2007191Z # alert\_bot
2025-08-19T13:34:05.2007444Z 
2025-08-19T13:34:05.2007650Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T13:34:05.2008057Z 
2025-08-19T13:34:05.2008232Z # alert\_bot.tests.test\_smoke
2025-08-19T13:34:05.2008454Z 
2025-08-19T13:34:05.2008616Z <a id="alert_bot.tests"></a>
2025-08-19T13:34:05.2008945Z 
2025-08-19T13:34:05.2009102Z # alert\_bot.tests
2025-08-19T13:34:05.2009352Z 
2025-08-19T13:34:05.2009545Z <a id="alert_bot.alert_bot"></a>
2025-08-19T13:34:05.2009892Z 
2025-08-19T13:34:05.2010063Z # alert\_bot.alert\_bot
2025-08-19T13:34:05.2010353Z 
2025-08-19T13:34:05.2010529Z <a id="alert_bot.rules"></a>
2025-08-19T13:34:05.2010852Z 
2025-08-19T13:34:05.2011001Z # alert\_bot.rules
2025-08-19T13:34:05.2011276Z 
2025-08-19T13:34:05.2011430Z <a id="common"></a>
2025-08-19T13:34:05.2011674Z 
2025-08-19T13:34:05.2011819Z # common
2025-08-19T13:34:05.2012017Z 
2025-08-19T13:34:05.2012417Z <a id="common.dsn"></a>
2025-08-19T13:34:05.2012792Z 
2025-08-19T13:34:05.2013101Z # common.dsn
2025-08-19T13:34:05.2013347Z 
2025-08-19T13:34:05.2013555Z <a id="common.dsn.build_dsn"></a>
2025-08-19T13:34:05.2013954Z 
2025-08-19T13:34:05.2014118Z #### build\_dsn
2025-08-19T13:34:05.2014378Z 
2025-08-19T13:34:05.2014547Z ```python
2025-08-19T13:34:05.2015000Z def build_dsn(sync: bool = True) -> str
2025-08-19T13:34:05.2015608Z ```
2025-08-19T13:34:05.2015820Z 
2025-08-19T13:34:05.2016117Z Return a Postgres DSN, validating required variables.
2025-08-19T13:34:05.2016665Z 
2025-08-19T13:34:05.2017160Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T13:34:05.2018322Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T13:34:05.2019420Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T13:34:05.2020123Z missing.
2025-08-19T13:34:05.2020265Z 
2025-08-19T13:34:05.2020397Z <a id="common.models_vendor"></a>
2025-08-19T13:34:05.2020637Z 
2025-08-19T13:34:05.2020756Z # common.models\_vendor
2025-08-19T13:34:05.2020945Z 
2025-08-19T13:34:05.2021082Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T13:34:05.2021358Z 
2025-08-19T13:34:05.2021462Z ## Vendor Objects
2025-08-19T13:34:05.2021627Z 
2025-08-19T13:34:05.2021728Z ```python
2025-08-19T13:34:05.2021969Z class Vendor(Base)
2025-08-19T13:34:05.2022447Z ```
2025-08-19T13:34:05.2022585Z 
2025-08-19T13:34:05.2022708Z Vendor of inventory items.
2025-08-19T13:34:05.2022919Z 
2025-08-19T13:34:05.2023084Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T13:34:05.2023374Z 
2025-08-19T13:34:05.2023486Z ## VendorPrice Objects
2025-08-19T13:34:05.2023677Z 
2025-08-19T13:34:05.2023773Z ```python
2025-08-19T13:34:05.2023997Z class VendorPrice(Base)
2025-08-19T13:34:05.2024183Z ```
2025-08-19T13:34:05.2024271Z 
2025-08-19T13:34:05.2024381Z Association table linking vendors to pricing.
2025-08-19T13:34:05.2024586Z 
2025-08-19T13:34:05.2024667Z <a id="common.db_url"></a>
2025-08-19T13:34:05.2024810Z 
2025-08-19T13:34:05.2024879Z # common.db\_url
2025-08-19T13:34:05.2024987Z 
2025-08-19T13:34:05.2025072Z <a id="common.db_url.build_url"></a>
2025-08-19T13:34:05.2025241Z 
2025-08-19T13:34:05.2025308Z #### build\_url
2025-08-19T13:34:05.2025411Z 
2025-08-19T13:34:05.2025482Z ```python
2025-08-19T13:34:05.2025660Z def build_url(async_: bool = True) -> str
2025-08-19T13:34:05.2025900Z ```
2025-08-19T13:34:05.2025987Z 
2025-08-19T13:34:05.2026089Z Return Postgres DSN from env or PG_* parts.
2025-08-19T13:34:05.2026281Z 
2025-08-19T13:34:05.2026364Z <a id="common.keepa"></a>
2025-08-19T13:34:05.2026498Z 
2025-08-19T13:34:05.2026568Z # common.keepa
2025-08-19T13:34:05.2026681Z 
2025-08-19T13:34:05.2026756Z <a id="common.llm"></a>
2025-08-19T13:34:05.2026880Z 
2025-08-19T13:34:05.2027087Z # common.llm
2025-08-19T13:34:05.2027192Z 
2025-08-19T13:34:05.2027276Z <a id="common.settings"></a>
2025-08-19T13:34:05.2027425Z 
2025-08-19T13:34:05.2027497Z # common.settings
2025-08-19T13:34:05.2027612Z 
2025-08-19T13:34:05.2027686Z <a id="common.db"></a>
2025-08-19T13:34:05.2027811Z 
2025-08-19T13:34:05.2027877Z # common.db
2025-08-19T13:34:05.2027970Z 
2025-08-19T13:34:05.2028076Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T13:34:05.2028261Z 
2025-08-19T13:34:05.2028336Z #### build\_sqlalchemy\_url
2025-08-19T13:34:05.2028472Z 
2025-08-19T13:34:05.2028546Z ```python
2025-08-19T13:34:05.2028720Z def build_sqlalchemy_url() -> str
2025-08-19T13:34:05.2028942Z ```
2025-08-19T13:34:05.2029027Z 
2025-08-19T13:34:05.2029124Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T13:34:05.2029324Z 
2025-08-19T13:34:05.2029449Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T13:34:05.2029628Z 
2025-08-19T13:34:05.2029712Z #### build\_asyncpg\_dsn
2025-08-19T13:34:05.2029847Z 
2025-08-19T13:34:05.2029916Z ```python
2025-08-19T13:34:05.2030098Z def build_asyncpg_dsn() -> str
2025-08-19T13:34:05.2030303Z ```
2025-08-19T13:34:05.2030394Z 
2025-08-19T13:34:05.2030528Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T13:34:05.2030752Z 
2025-08-19T13:34:05.2030839Z <a id="common.db.refresh_mvs"></a>
2025-08-19T13:34:05.2031004Z 
2025-08-19T13:34:05.2031072Z #### refresh\_mvs
2025-08-19T13:34:05.2031179Z 
2025-08-19T13:34:05.2031250Z ```python
2025-08-19T13:34:05.2031455Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T13:34:05.2031719Z ```
2025-08-19T13:34:05.2031801Z 
2025-08-19T13:34:05.2031942Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T13:34:05.2032358Z 
2025-08-19T13:34:05.2032442Z <a id="common.config"></a>
2025-08-19T13:34:05.2032577Z 
2025-08-19T13:34:05.2032650Z # common.config
2025-08-19T13:34:05.2032755Z 
2025-08-19T13:34:05.2032831Z <a id="common.base"></a>
2025-08-19T13:34:05.2032957Z 
2025-08-19T13:34:05.2033029Z # common.base
2025-08-19T13:34:05.2033267Z 
2025-08-19T13:34:05.2033349Z <a id="common.base.Base"></a>
2025-08-19T13:34:05.2033498Z 
2025-08-19T13:34:05.2033563Z ## Base Objects
2025-08-19T13:34:05.2033664Z 
2025-08-19T13:34:05.2033727Z ```python
2025-08-19T13:34:05.2033899Z class Base(DeclarativeBase)
2025-08-19T13:34:05.2034100Z ```
2025-08-19T13:34:05.2034181Z 
2025-08-19T13:34:05.2034267Z Base class for SQLAlchemy models.
2025-08-19T13:34:05.2034425Z 
2025-08-19T13:34:05.2034506Z <a id="repricer"></a>
2025-08-19T13:34:05.2034626Z 
2025-08-19T13:34:05.2034690Z # repricer
2025-08-19T13:34:05.2034787Z 
2025-08-19T13:34:05.2034875Z <a id="repricer.app.schemas"></a>
2025-08-19T13:34:05.2035033Z 
2025-08-19T13:34:05.2035110Z # repricer.app.schemas
2025-08-19T13:34:05.2035240Z 
2025-08-19T13:34:05.2035322Z <a id="repricer.app.deps"></a>
2025-08-19T13:34:05.2035471Z 
2025-08-19T13:34:05.2035553Z # repricer.app.deps
2025-08-19T13:34:05.2035667Z 
2025-08-19T13:34:05.2035796Z Placeholder module for Keepa / SP-API clients.
2025-08-19T13:34:05.2036007Z 
2025-08-19T13:34:05.2036092Z <a id="repricer.app.logic"></a>
2025-08-19T13:34:05.2036242Z 
2025-08-19T13:34:05.2036317Z # repricer.app.logic
2025-08-19T13:34:05.2036441Z 
2025-08-19T13:34:05.2036541Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T13:34:05.2036725Z 
2025-08-19T13:34:05.2036797Z #### MIN\_MARGIN
2025-08-19T13:34:05.2036901Z 
2025-08-19T13:34:05.2036964Z 15 % ROI
2025-08-19T13:34:05.2037062Z 
2025-08-19T13:34:05.2037166Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T13:34:05.2037357Z 
2025-08-19T13:34:05.2037428Z #### compute\_price
2025-08-19T13:34:05.2037542Z 
2025-08-19T13:34:05.2037607Z ```python
2025-08-19T13:34:05.2037866Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T13:34:05.2038186Z ```
2025-08-19T13:34:05.2038270Z 
2025-08-19T13:34:05.2038385Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T13:34:05.2038677Z Replace with real competitive logic later.
2025-08-19T13:34:05.2038866Z 
2025-08-19T13:34:05.2039074Z <a id="repricer.app.main"></a>
2025-08-19T13:34:05.2039234Z 
2025-08-19T13:34:05.2039309Z # repricer.app.main
2025-08-19T13:34:05.2039431Z 
2025-08-19T13:34:05.2039510Z <a id="repricer.app"></a>
2025-08-19T13:34:05.2039644Z 
2025-08-19T13:34:05.2039719Z # repricer.app
2025-08-19T13:34:05.2039823Z 
2025-08-19T13:34:05.2039919Z <a id="repricer.tests.test_imports"></a>
2025-08-19T13:34:05.2040104Z 
2025-08-19T13:34:05.2040188Z # repricer.tests.test\_imports
2025-08-19T13:34:05.2040334Z 
2025-08-19T13:34:05.2040424Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T13:34:05.2040599Z 
2025-08-19T13:34:05.2040685Z # repricer.tests.test\_smoke
2025-08-19T13:34:05.2040830Z 
2025-08-19T13:34:05.2040916Z <a id="repricer.tests"></a>
2025-08-19T13:34:05.2041054Z 
2025-08-19T13:34:05.2041123Z # repricer.tests
2025-08-19T13:34:05.2041232Z 
2025-08-19T13:34:05.2041305Z <a id="db"></a>
2025-08-19T13:34:05.2041408Z 
2025-08-19T13:34:05.2041471Z # db
2025-08-19T13:34:05.2041565Z 
2025-08-19T13:34:05.2041649Z <a id="db.utils.views"></a>
2025-08-19T13:34:05.2041789Z 
2025-08-19T13:34:05.2041862Z # db.utils.views
2025-08-19T13:34:05.2041969Z 
2025-08-19T13:34:05.2042065Z <a id="db.utils.views.replace_view"></a>
2025-08-19T13:34:05.2042445Z 
2025-08-19T13:34:05.2042524Z #### replace\_view
2025-08-19T13:34:05.2042642Z 
2025-08-19T13:34:05.2042707Z ```python
2025-08-19T13:34:05.2042911Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T13:34:05.2043160Z ```
2025-08-19T13:34:05.2043247Z 
2025-08-19T13:34:05.2043333Z Drop and recreate a SQL view atomically.
2025-08-19T13:34:05.2043493Z 
2025-08-19T13:34:05.2043565Z <a id="db.utils"></a>
2025-08-19T13:34:05.2043677Z 
2025-08-19T13:34:05.2043737Z # db.utils
2025-08-19T13:34:05.2043821Z 
2025-08-19T13:34:05.2043903Z <a id="price_importer"></a>
2025-08-19T13:34:05.2044029Z 
2025-08-19T13:34:05.2044095Z # price\_importer
2025-08-19T13:34:05.2044202Z 
2025-08-19T13:34:05.2044306Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T13:34:05.2044488Z 
2025-08-19T13:34:05.2044586Z # price\_importer.services\_common.dsn
2025-08-19T13:34:05.2044873Z 
2025-08-19T13:34:05.2044998Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T13:34:05.2045203Z 
2025-08-19T13:34:05.2045271Z #### build\_dsn
2025-08-19T13:34:05.2045367Z 
2025-08-19T13:34:05.2045427Z ```python
2025-08-19T13:34:05.2045600Z def build_dsn(sync: bool = True) -> str
2025-08-19T13:34:05.2045813Z ```
2025-08-19T13:34:05.2045897Z 
2025-08-19T13:34:05.2045964Z Return safe DSN.
2025-08-19T13:34:05.2046064Z 
2025-08-19T13:34:05.2046416Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T13:34:05.2046614Z 
2025-08-19T13:34:05.2046739Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T13:34:05.2046946Z 
2025-08-19T13:34:05.2047052Z # price\_importer.services\_common.models\_vendor
2025-08-19T13:34:05.2047236Z 
2025-08-19T13:34:05.2047339Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T13:34:05.2047523Z 
2025-08-19T13:34:05.2047613Z # price\_importer.services\_common.db\_url
2025-08-19T13:34:05.2047796Z 
2025-08-19T13:34:05.2047931Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T13:34:05.2048138Z 
2025-08-19T13:34:05.2048199Z #### build\_url
2025-08-19T13:34:05.2048301Z 
2025-08-19T13:34:05.2048361Z ```python
2025-08-19T13:34:05.2048529Z def build_url(async_: bool = True) -> str
2025-08-19T13:34:05.2048756Z ```
2025-08-19T13:34:05.2048838Z 
2025-08-19T13:34:05.2048932Z Return Postgres DSN from env or PG_* parts.
2025-08-19T13:34:05.2049109Z 
2025-08-19T13:34:05.2049213Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T13:34:05.2049390Z 
2025-08-19T13:34:05.2049486Z # price\_importer.services\_common.keepa
2025-08-19T13:34:05.2049652Z 
2025-08-19T13:34:05.2049748Z <a id="price_importer.services_common.llm"></a>
2025-08-19T13:34:05.2049930Z 
2025-08-19T13:34:05.2050017Z # price\_importer.services\_common.llm
2025-08-19T13:34:05.2050175Z 
2025-08-19T13:34:05.2050287Z <a id="price_importer.services_common.settings"></a>
2025-08-19T13:34:05.2050611Z 
2025-08-19T13:34:05.2050705Z # price\_importer.services\_common.settings
2025-08-19T13:34:05.2050874Z 
2025-08-19T13:34:05.2050980Z <a id="price_importer.services_common.db"></a>
2025-08-19T13:34:05.2051152Z 
2025-08-19T13:34:05.2051237Z # price\_importer.services\_common.db
2025-08-19T13:34:05.2051400Z 
2025-08-19T13:34:05.2051550Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T13:34:05.2051783Z 
2025-08-19T13:34:05.2051863Z #### build\_sqlalchemy\_url
2025-08-19T13:34:05.2051992Z 
2025-08-19T13:34:05.2052053Z ```python
2025-08-19T13:34:05.2052420Z def build_sqlalchemy_url() -> str
2025-08-19T13:34:05.2052630Z ```
2025-08-19T13:34:05.2052716Z 
2025-08-19T13:34:05.2052809Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T13:34:05.2052978Z 
2025-08-19T13:34:05.2053117Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T13:34:05.2053344Z 
2025-08-19T13:34:05.2053417Z #### build\_asyncpg\_dsn
2025-08-19T13:34:05.2053548Z 
2025-08-19T13:34:05.2053618Z ```python
2025-08-19T13:34:05.2053782Z def build_asyncpg_dsn() -> str
2025-08-19T13:34:05.2053984Z ```
2025-08-19T13:34:05.2054064Z 
2025-08-19T13:34:05.2054187Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T13:34:05.2054398Z 
2025-08-19T13:34:05.2054520Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T13:34:05.2054723Z 
2025-08-19T13:34:05.2054787Z #### refresh\_mvs
2025-08-19T13:34:05.2054896Z 
2025-08-19T13:34:05.2054956Z ```python
2025-08-19T13:34:05.2055149Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T13:34:05.2055389Z ```
2025-08-19T13:34:05.2055467Z 
2025-08-19T13:34:05.2055609Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T13:34:05.2055820Z 
2025-08-19T13:34:05.2055913Z <a id="price_importer.services_common"></a>
2025-08-19T13:34:05.2056096Z 
2025-08-19T13:34:05.2056180Z # price\_importer.services\_common
2025-08-19T13:34:05.2056332Z 
2025-08-19T13:34:05.2056436Z <a id="price_importer.services_common.base"></a>
2025-08-19T13:34:05.2056748Z 
2025-08-19T13:34:05.2056835Z # price\_importer.services\_common.base
2025-08-19T13:34:05.2056993Z 
2025-08-19T13:34:05.2057085Z <a id="price_importer.normaliser"></a>
2025-08-19T13:34:05.2057244Z 
2025-08-19T13:34:05.2057324Z # price\_importer.normaliser
2025-08-19T13:34:05.2057461Z 
2025-08-19T13:34:05.2057560Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T13:34:05.2057737Z 
2025-08-19T13:34:05.2057827Z # price\_importer.common.models\_vendor
2025-08-19T13:34:05.2057984Z 
2025-08-19T13:34:05.2058071Z <a id="price_importer.common.db_url"></a>
2025-08-19T13:34:05.2058235Z 
2025-08-19T13:34:05.2058321Z # price\_importer.common.db\_url
2025-08-19T13:34:05.2058464Z 
2025-08-19T13:34:05.2058567Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T13:34:05.2058750Z 
2025-08-19T13:34:05.2058813Z #### make\_dsn
2025-08-19T13:34:05.2058911Z 
2025-08-19T13:34:05.2058977Z ```python
2025-08-19T13:34:05.2059145Z def make_dsn(async_: bool = False) -> str
2025-08-19T13:34:05.2059377Z ```
2025-08-19T13:34:05.2059455Z 
2025-08-19T13:34:05.2059572Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T13:34:05.2059772Z 
2025-08-19T13:34:05.2059878Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T13:34:05.2060061Z 
2025-08-19T13:34:05.2060122Z #### build\_url
2025-08-19T13:34:05.2060226Z 
2025-08-19T13:34:05.2060285Z ```python
2025-08-19T13:34:05.2060458Z def build_url(async_: bool = False) -> str
2025-08-19T13:34:05.2060678Z ```
2025-08-19T13:34:05.2060756Z 
2025-08-19T13:34:05.2060884Z Return Postgres DSN built from environment variables.
2025-08-19T13:34:05.2061078Z 
2025-08-19T13:34:05.2061163Z <a id="price_importer.common"></a>
2025-08-19T13:34:05.2061327Z 
2025-08-19T13:34:05.2061403Z # price\_importer.common
2025-08-19T13:34:05.2061535Z 
2025-08-19T13:34:05.2061626Z <a id="price_importer.common.base"></a>
2025-08-19T13:34:05.2061802Z 
2025-08-19T13:34:05.2061885Z # price\_importer.common.base
2025-08-19T13:34:05.2062321Z 
2025-08-19T13:34:05.2062450Z <a id="price_importer.tests.conftest"></a>
2025-08-19T13:34:05.2062626Z 
2025-08-19T13:34:05.2062710Z # price\_importer.tests.conftest
2025-08-19T13:34:05.2062861Z 
2025-08-19T13:34:05.2062961Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T13:34:05.2063135Z 
2025-08-19T13:34:05.2063218Z # price\_importer.tests.test\_reader
2025-08-19T13:34:05.2063380Z 
2025-08-19T13:34:05.2063477Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T13:34:05.2063652Z 
2025-08-19T13:34:05.2063745Z # price\_importer.tests.test\_imports
2025-08-19T13:34:05.2063899Z 
2025-08-19T13:34:05.2063995Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T13:34:05.2064168Z 
2025-08-19T13:34:05.2064252Z # price\_importer.tests.test\_smoke
2025-08-19T13:34:05.2064403Z 
2025-08-19T13:34:05.2064512Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T13:34:05.2064724Z 
2025-08-19T13:34:05.2064814Z # price\_importer.tests.test\_normaliser
2025-08-19T13:34:05.2064979Z 
2025-08-19T13:34:05.2065073Z <a id="price_importer.tests"></a>
2025-08-19T13:34:05.2065223Z 
2025-08-19T13:34:05.2065296Z # price\_importer.tests
2025-08-19T13:34:05.2065422Z 
2025-08-19T13:34:05.2065506Z <a id="price_importer.reader"></a>
2025-08-19T13:34:05.2065654Z 
2025-08-19T13:34:05.2065734Z # price\_importer.reader
2025-08-19T13:34:05.2065856Z 
2025-08-19T13:34:05.2065943Z <a id="price_importer.repository"></a>
2025-08-19T13:34:05.2066105Z 
2025-08-19T13:34:05.2066194Z # price\_importer.repository
2025-08-19T13:34:05.2066329Z 
2025-08-19T13:34:05.2066412Z <a id="price_importer.import"></a>
2025-08-19T13:34:05.2066570Z 
2025-08-19T13:34:05.2066645Z # price\_importer.import
2025-08-19T13:34:05.2066765Z 
2025-08-19T13:34:05.2066834Z <a id="fees_h10"></a>
2025-08-19T13:34:05.2066952Z 
2025-08-19T13:34:05.2067015Z # fees\_h10
2025-08-19T13:34:05.2067106Z 
2025-08-19T13:34:05.2067189Z <a id="fees_h10.worker"></a>
2025-08-19T13:34:05.2067317Z 
2025-08-19T13:34:05.2067387Z # fees\_h10.worker
2025-08-19T13:34:05.2067496Z 
2025-08-19T13:34:05.2067725Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T13:34:05.2067897Z 
2025-08-19T13:34:05.2067970Z #### list\_active\_asins
2025-08-19T13:34:05.2068093Z 
2025-08-19T13:34:05.2068155Z ```python
2025-08-19T13:34:05.2068323Z def list_active_asins() -> list[str]
2025-08-19T13:34:05.2068526Z ```
2025-08-19T13:34:05.2068603Z 
2025-08-19T13:34:05.2068716Z Return known ASINs or an empty list if unavailable.
2025-08-19T13:34:05.2068906Z 
2025-08-19T13:34:05.2068986Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T13:34:05.2069143Z 
2025-08-19T13:34:05.2069218Z # fees\_h10.tests.test\_smoke
2025-08-19T13:34:05.2069351Z 
2025-08-19T13:34:05.2069428Z <a id="fees_h10.tests"></a>
2025-08-19T13:34:05.2069554Z 
2025-08-19T13:34:05.2069617Z # fees\_h10.tests
2025-08-19T13:34:05.2069717Z 
2025-08-19T13:34:05.2069795Z <a id="fees_h10.client"></a>
2025-08-19T13:34:05.2069922Z 
2025-08-19T13:34:05.2069986Z # fees\_h10.client
2025-08-19T13:34:05.2070092Z 
2025-08-19T13:34:05.2070170Z <a id="fees_h10.repository"></a>
2025-08-19T13:34:05.2070319Z 
2025-08-19T13:34:05.2070387Z # fees\_h10.repository
2025-08-19T13:34:05.2070508Z 
2025-08-19T13:34:05.2070573Z <a id="emailer"></a>
2025-08-19T13:34:05.2070682Z 
2025-08-19T13:34:05.2070746Z # emailer
2025-08-19T13:34:05.2070831Z 
2025-08-19T13:34:05.2070929Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T13:34:05.2071112Z 
2025-08-19T13:34:05.2071199Z # emailer.tests.test\_import\_emailer
2025-08-19T13:34:05.2071353Z 
2025-08-19T13:34:05.2071435Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T13:34:05.2071593Z 
2025-08-19T13:34:05.2071673Z # emailer.tests.test\_smoke
2025-08-19T13:34:05.2071804Z 
2025-08-19T13:34:05.2071886Z <a id="emailer.tests"></a>
2025-08-19T13:34:05.2072011Z 
2025-08-19T13:34:05.2072076Z # emailer.tests
2025-08-19T13:34:05.2072383Z 
2025-08-19T13:34:05.2072486Z <a id="emailer.generate_body"></a>
2025-08-19T13:34:05.2072645Z 
2025-08-19T13:34:05.2072719Z # emailer.generate\_body
2025-08-19T13:34:05.2072849Z 
2025-08-19T13:34:05.2073047Z <a id="llm_server"></a>
2025-08-19T13:34:05.2073173Z 
2025-08-19T13:34:05.2073241Z # llm\_server
2025-08-19T13:34:05.2073336Z 
2025-08-19T13:34:05.2073412Z <a id="llm_server.app"></a>
2025-08-19T13:34:05.2073540Z 
2025-08-19T13:34:05.2073613Z # llm\_server.app
2025-08-19T13:34:05.2073715Z 
