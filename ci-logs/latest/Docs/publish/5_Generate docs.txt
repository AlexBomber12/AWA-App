2025-08-18T19:13:54.0194171Z ##[group]Run pydoc-markdown
2025-08-18T19:13:54.0194496Z [36;1mpydoc-markdown[0m
2025-08-18T19:13:54.0234890Z shell: /usr/bin/bash -e {0}
2025-08-18T19:13:54.0235126Z env:
2025-08-18T19:13:54.0235370Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:13:54.0235789Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T19:13:54.0236180Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:13:54.0236527Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:13:54.0236882Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:13:54.0237236Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T19:13:54.0237531Z ##[endgroup]
2025-08-18T19:13:54.3974731Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T19:13:54.3975452Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T19:13:54.3975911Z In "pydoc-markdown.yml"
2025-08-18T19:13:54.3976313Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T19:13:54.3976975Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T19:13:54.3977752Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T19:13:54.3978288Z 
2025-08-18T19:13:54.6983372Z <a id="__init__"></a>
2025-08-18T19:13:54.6983802Z 
2025-08-18T19:13:54.6983934Z # \_\_init\_\_
2025-08-18T19:13:54.6984136Z 
2025-08-18T19:13:54.6984274Z <a id="api"></a>
2025-08-18T19:13:54.6984474Z 
2025-08-18T19:13:54.6984590Z # api
2025-08-18T19:13:54.6984765Z 
2025-08-18T19:13:54.6984908Z <a id="api.errors"></a>
2025-08-18T19:13:54.6985145Z 
2025-08-18T19:13:54.6985279Z # api.errors
2025-08-18T19:13:54.6985464Z 
2025-08-18T19:13:54.6985636Z <a id="api.tests.test_errors_json"></a>
2025-08-18T19:13:54.6985965Z 
2025-08-18T19:13:54.6986135Z # api.tests.test\_errors\_json
2025-08-18T19:13:54.6986408Z 
2025-08-18T19:13:54.6986563Z <a id="api.tests.test_llm"></a>
2025-08-18T19:13:54.6986843Z 
2025-08-18T19:13:54.6986982Z # api.tests.test\_llm
2025-08-18T19:13:54.6987257Z 
2025-08-18T19:13:54.6987412Z <a id="api.tests.test_cors"></a>
2025-08-18T19:13:54.6987710Z 
2025-08-18T19:13:54.6987854Z # api.tests.test\_cors
2025-08-18T19:13:54.6988082Z 
2025-08-18T19:13:54.6988255Z <a id="api.tests.test_imports"></a>
2025-08-18T19:13:54.6988553Z 
2025-08-18T19:13:54.6988700Z # api.tests.test\_imports
2025-08-18T19:13:54.6988952Z 
2025-08-18T19:13:54.6989116Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T19:13:54.6989427Z 
2025-08-18T19:13:54.6989576Z # api.tests.test\_rate\_limit
2025-08-18T19:13:54.6989854Z 
2025-08-18T19:13:54.6990039Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T19:13:54.6990368Z 
2025-08-18T19:13:54.6990499Z #### app
2025-08-18T19:13:54.6990669Z 
2025-08-18T19:13:54.6990791Z noqa: E402
2025-08-18T19:13:54.6990967Z 
2025-08-18T19:13:54.6991136Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T19:13:54.6991449Z 
2025-08-18T19:13:54.6991870Z # api.tests.test\_entrypoint
2025-08-18T19:13:54.6992155Z 
2025-08-18T19:13:54.6992837Z <a id="api.tests.test_health"></a>
2025-08-18T19:13:54.6993138Z 
2025-08-18T19:13:54.6993297Z # api.tests.test\_health
2025-08-18T19:13:54.6993553Z 
2025-08-18T19:13:54.6993711Z <a id="api.logging_config"></a>
2025-08-18T19:13:54.6993999Z 
2025-08-18T19:13:54.6994141Z # api.logging\_config
2025-08-18T19:13:54.6994365Z 
2025-08-18T19:13:54.6994522Z <a id="api.migrations.env"></a>
2025-08-18T19:13:54.6994801Z 
2025-08-18T19:13:54.6994941Z # api.migrations.env
2025-08-18T19:13:54.6995152Z 
2025-08-18T19:13:54.6995382Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T19:13:54.6995765Z 
2025-08-18T19:13:54.6995965Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T19:13:54.6996313Z 
2025-08-18T19:13:54.6996535Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T19:13:54.6996897Z 
2025-08-18T19:13:54.6997078Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T19:13:54.6997414Z 
2025-08-18T19:13:54.6997705Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T19:13:54.6998519Z 
2025-08-18T19:13:54.6998798Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T19:13:54.6999213Z 
2025-08-18T19:13:54.6999447Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T19:13:54.6999839Z 
2025-08-18T19:13:54.7000039Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T19:13:54.7000394Z 
2025-08-18T19:13:54.7000624Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T19:13:54.7001009Z 
2025-08-18T19:13:54.7001203Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T19:13:54.7001759Z 
2025-08-18T19:13:54.7002021Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T19:13:54.7002427Z 
2025-08-18T19:13:54.7002639Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T19:13:54.7003018Z 
2025-08-18T19:13:54.7003251Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T19:13:54.7003642Z 
2025-08-18T19:13:54.7003858Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T19:13:54.7004259Z 
2025-08-18T19:13:54.7004506Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T19:13:54.7004900Z 
2025-08-18T19:13:54.7005117Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T19:13:54.7005477Z 
2025-08-18T19:13:54.7005747Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T19:13:54.7006175Z 
2025-08-18T19:13:54.7006405Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T19:13:54.7006790Z 
2025-08-18T19:13:54.7007101Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T19:13:54.7007496Z 
2025-08-18T19:13:54.7007705Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T19:13:54.7008071Z 
2025-08-18T19:13:54.7008342Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T19:13:54.7008768Z 
2025-08-18T19:13:54.7008993Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T19:13:54.7009389Z 
2025-08-18T19:13:54.7009612Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T19:13:54.7010009Z 
2025-08-18T19:13:54.7010207Z # api.migrations.versions.0001\_baseline
2025-08-18T19:13:54.7010528Z 
2025-08-18T19:13:54.7010698Z <a id="api.migrations.versions"></a>
2025-08-18T19:13:54.7011015Z 
2025-08-18T19:13:54.7011171Z # api.migrations.versions
2025-08-18T19:13:54.7011424Z 
2025-08-18T19:13:54.7011776Z <a id="api.migrations"></a>
2025-08-18T19:13:54.7012052Z 
2025-08-18T19:13:54.7012181Z # api.migrations
2025-08-18T19:13:54.7012384Z 
2025-08-18T19:13:54.7012519Z <a id="api.db"></a>
2025-08-18T19:13:54.7012723Z 
2025-08-18T19:13:54.7012843Z # api.db
2025-08-18T19:13:54.7013008Z 
2025-08-18T19:13:54.7013169Z <a id="api.routes.stats"></a>
2025-08-18T19:13:54.7013434Z 
2025-08-18T19:13:54.7013570Z # api.routes.stats
2025-08-18T19:13:54.7013784Z 
2025-08-18T19:13:54.7013944Z <a id="api.routes.stats.kpi"></a>
2025-08-18T19:13:54.7014237Z 
2025-08-18T19:13:54.7014366Z #### kpi
2025-08-18T19:13:54.7014533Z 
2025-08-18T19:13:54.7014655Z ```python
2025-08-18T19:13:54.7014975Z @router.get("/stats/kpi")
2025-08-18T19:13:54.7015733Z def kpi() -> List[Dict[str, int]]
2025-08-18T19:13:54.7016145Z ```
2025-08-18T19:13:54.7016491Z 
2025-08-18T19:13:54.7016657Z Return KPI metrics (mock).
2025-08-18T19:13:54.7016955Z 
2025-08-18T19:13:54.7017151Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T19:13:54.7017493Z 
2025-08-18T19:13:54.7017635Z #### roi\_by\_vendor
2025-08-18T19:13:54.7017848Z 
2025-08-18T19:13:54.7017967Z ```python
2025-08-18T19:13:54.7018300Z @router.get("/stats/roi_by_vendor")
2025-08-18T19:13:54.7018764Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T19:13:54.7019198Z ```
2025-08-18T19:13:54.7019355Z 
2025-08-18T19:13:54.7019512Z Return ROI percent by vendor.
2025-08-18T19:13:54.7019778Z 
2025-08-18T19:13:54.7019949Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T19:13:54.7020260Z 
2025-08-18T19:13:54.7020394Z #### roi\_trend
2025-08-18T19:13:54.7020584Z 
2025-08-18T19:13:54.7020703Z ```python
2025-08-18T19:13:54.7021017Z @router.get("/stats/roi_trend")
2025-08-18T19:13:54.7021908Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T19:13:54.7022361Z ```
2025-08-18T19:13:54.7022515Z 
2025-08-18T19:13:54.7022661Z Return 30-day ROI trend.
2025-08-18T19:13:54.7023054Z 
2025-08-18T19:13:54.7023203Z <a id="api.routes.roi"></a>
2025-08-18T19:13:54.7023462Z 
2025-08-18T19:13:54.7023601Z # api.routes.roi
2025-08-18T19:13:54.7023807Z 
2025-08-18T19:13:54.7023964Z <a id="api.routes.health"></a>
2025-08-18T19:13:54.7024245Z 
2025-08-18T19:13:54.7024382Z # api.routes.health
2025-08-18T19:13:54.7024595Z 
2025-08-18T19:13:54.7024784Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T19:13:54.7025102Z 
2025-08-18T19:13:54.7025231Z #### MAX\_SKEW
2025-08-18T19:13:54.7025428Z 
2025-08-18T19:13:54.7025550Z seconds
2025-08-18T19:13:54.7025692Z 
2025-08-18T19:13:54.7025846Z <a id="api.routes.health.health"></a>
2025-08-18T19:13:54.7026141Z 
2025-08-18T19:13:54.7026252Z #### health
2025-08-18T19:13:54.7026410Z 
2025-08-18T19:13:54.7026549Z ```python
2025-08-18T19:13:54.7026902Z @router.get("/health", include_in_schema=False)
2025-08-18T19:13:54.7027636Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T19:13:54.7028268Z ```
2025-08-18T19:13:54.7028428Z 
2025-08-18T19:13:54.7028654Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T19:13:54.7029033Z 
2025-08-18T19:13:54.7029201Z <a id="api.routes.repository"></a>
2025-08-18T19:13:54.7029505Z 
2025-08-18T19:13:54.7029653Z # api.routes.repository
2025-08-18T19:13:54.7029893Z 
2025-08-18T19:13:54.7030038Z <a id="api.routes"></a>
2025-08-18T19:13:54.7030263Z 
2025-08-18T19:13:54.7030386Z # api.routes
2025-08-18T19:13:54.7030570Z 
2025-08-18T19:13:54.7030725Z <a id="api.models.fee"></a>
2025-08-18T19:13:54.7030981Z 
2025-08-18T19:13:54.7031109Z # api.models.fee
2025-08-18T19:13:54.7031324Z 
2025-08-18T19:13:54.7031459Z <a id="api.models"></a>
2025-08-18T19:13:54.7031909Z 
2025-08-18T19:13:54.7032038Z # api.models
2025-08-18T19:13:54.7032235Z 
2025-08-18T19:13:54.7032388Z <a id="api.roi_repository"></a>
2025-08-18T19:13:54.7032746Z 
2025-08-18T19:13:54.7032899Z # api.roi\_repository
2025-08-18T19:13:54.7033131Z 
2025-08-18T19:13:54.7033268Z <a id="api.main"></a>
2025-08-18T19:13:54.7033494Z 
2025-08-18T19:13:54.7033614Z # api.main
2025-08-18T19:13:54.7033786Z 
2025-08-18T19:13:54.7033933Z <a id="api.main.ready"></a>
2025-08-18T19:13:54.7034191Z 
2025-08-18T19:13:54.7034310Z #### ready
2025-08-18T19:13:54.7034480Z 
2025-08-18T19:13:54.7034606Z ```python
2025-08-18T19:13:54.7035094Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T19:13:54.7035921Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T19:13:54.7036578Z                                                                       str]
2025-08-18T19:13:54.7037022Z ```
2025-08-18T19:13:54.7037177Z 
2025-08-18T19:13:54.7037364Z Return 200 only when migrations are at head.
2025-08-18T19:13:54.7037710Z 
2025-08-18T19:13:54.7037850Z <a id="api.config"></a>
2025-08-18T19:13:54.7038078Z 
2025-08-18T19:13:54.7038449Z # api.config
2025-08-18T19:13:54.7038637Z 
2025-08-18T19:13:54.7038762Z <a id="etl"></a>
2025-08-18T19:13:54.7038961Z 
2025-08-18T19:13:54.7039086Z # etl
2025-08-18T19:13:54.7039250Z 
2025-08-18T19:13:54.7039401Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T19:13:54.7039694Z 
2025-08-18T19:13:54.7039832Z # etl.fba\_fee\_ingestor
2025-08-18T19:13:54.7040070Z 
2025-08-18T19:13:54.7040233Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T19:13:54.7040513Z 
2025-08-18T19:13:54.7040651Z # etl.sp\_fees\_ingestor
2025-08-18T19:13:54.7040881Z 
2025-08-18T19:13:54.7041038Z <a id="etl.keepa_ingestor"></a>
2025-08-18T19:13:54.7041308Z 
2025-08-18T19:13:54.7041445Z # etl.keepa\_ingestor
2025-08-18T19:13:54.7041850Z 
2025-08-18T19:13:54.7041979Z <a id="etl.db"></a>
2025-08-18T19:13:54.7042185Z 
2025-08-18T19:13:54.7042301Z # etl.db
2025-08-18T19:13:54.7042474Z 
2025-08-18T19:13:54.7042632Z <a id="etl.dialects.schemas"></a>
2025-08-18T19:13:54.7042915Z 
2025-08-18T19:13:54.7043063Z # etl.dialects.schemas
2025-08-18T19:13:54.7043502Z 
2025-08-18T19:13:54.7043801Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T19:13:54.7044161Z 
2025-08-18T19:13:54.7044334Z # etl.dialects.amazon\_reimbursements
2025-08-18T19:13:54.7044651Z 
2025-08-18T19:13:54.7044841Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T19:13:54.7045178Z 
2025-08-18T19:13:54.7045351Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T19:13:54.7045660Z 
2025-08-18T19:13:54.7045845Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T19:13:54.7046181Z 
2025-08-18T19:13:54.7046344Z # etl.dialects.amazon\_returns
2025-08-18T19:13:54.7046613Z 
2025-08-18T19:13:54.7046800Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T19:13:54.7047139Z 
2025-08-18T19:13:54.7047312Z # etl.dialects.amazon\_fee\_preview
2025-08-18T19:13:54.7047617Z 
2025-08-18T19:13:54.7047823Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T19:13:54.7048183Z 
2025-08-18T19:13:54.7048366Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T19:13:54.7048707Z 
2025-08-18T19:13:54.7048892Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T19:13:54.7049232Z 
2025-08-18T19:13:54.7049405Z # etl.dialects.amazon\_settlements
2025-08-18T19:13:54.7049697Z 
2025-08-18T19:13:54.7049845Z <a id="etl.dialects"></a>
2025-08-18T19:13:54.7050096Z 
2025-08-18T19:13:54.7050219Z # etl.dialects
2025-08-18T19:13:54.7050408Z 
2025-08-18T19:13:54.7050535Z <a id="ingest"></a>
2025-08-18T19:13:54.7050749Z 
2025-08-18T19:13:54.7050866Z # ingest
2025-08-18T19:13:54.7051034Z 
2025-08-18T19:13:54.7051197Z <a id="ingest.maintenance"></a>
2025-08-18T19:13:54.7051474Z 
2025-08-18T19:13:54.7051799Z # ingest.maintenance
2025-08-18T19:13:54.7052043Z 
2025-08-18T19:13:54.7052193Z <a id="ingest.copy_loader"></a>
2025-08-18T19:13:54.7052456Z 
2025-08-18T19:13:54.7052593Z # ingest.copy\_loader
2025-08-18T19:13:54.7052820Z 
2025-08-18T19:13:54.7053013Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T19:13:54.7053362Z 
2025-08-18T19:13:54.7053510Z #### copy\_df\_via\_temp
2025-08-18T19:13:54.7053761Z 
2025-08-18T19:13:54.7053879Z ```python
2025-08-18T19:13:54.7054201Z def copy_df_via_temp(engine: Engine,
2025-08-18T19:13:54.7054649Z                      df: pd.DataFrame,
2025-08-18T19:13:54.7055097Z                      target_table: str,
2025-08-18T19:13:54.7055510Z                      *,
2025-08-18T19:13:54.7055919Z                      target_schema: Optional[str] = None,
2025-08-18T19:13:54.7056438Z                      columns: Sequence[str],
2025-08-18T19:13:54.7056971Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T19:13:54.7057535Z                      analyze_after: bool = False,
2025-08-18T19:13:54.7058035Z                      connection: Any | None = None) -> int
2025-08-18T19:13:54.7058494Z ```
2025-08-18T19:13:54.7058652Z 
2025-08-18T19:13:54.7059083Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T19:13:54.7059537Z 
2025-08-18T19:13:54.7059707Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T19:13:54.7060264Z 
2025-08-18T19:13:54.7060424Z # ingest.tests.test\_smoke
2025-08-18T19:13:54.7060675Z 
2025-08-18T19:13:54.7060817Z <a id="ingest.tests"></a>
2025-08-18T19:13:54.7061061Z 
2025-08-18T19:13:54.7061198Z # ingest.tests
2025-08-18T19:13:54.7061391Z 
2025-08-18T19:13:54.7061726Z <a id="ingest.upload_router"></a>
2025-08-18T19:13:54.7062043Z 
2025-08-18T19:13:54.7062188Z # ingest.upload\_router
2025-08-18T19:13:54.7062420Z 
2025-08-18T19:13:54.7062587Z <a id="ingest.email_watcher"></a>
2025-08-18T19:13:54.7062870Z 
2025-08-18T19:13:54.7063017Z # ingest.email\_watcher
2025-08-18T19:13:54.7063246Z 
2025-08-18T19:13:54.7063417Z <a id="ingest.email_watcher.main"></a>
2025-08-18T19:13:54.7063726Z 
2025-08-18T19:13:54.7063844Z #### main
2025-08-18T19:13:54.7064023Z 
2025-08-18T19:13:54.7064144Z ```python
2025-08-18T19:13:54.7064467Z def main() -> dict[str, str]
2025-08-18T19:13:54.7064839Z ```
2025-08-18T19:13:54.7064997Z 
2025-08-18T19:13:54.7065265Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T19:13:54.7065922Z 
2025-08-18T19:13:54.7066180Z Returns {"status": "success"} when processing completes.
2025-08-18T19:13:54.7066594Z 
2025-08-18T19:13:54.7066744Z <a id="ingest.tasks"></a>
2025-08-18T19:13:54.7066991Z 
2025-08-18T19:13:54.7067116Z # ingest.tasks
2025-08-18T19:13:54.7067313Z 
2025-08-18T19:13:54.7067494Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T19:13:54.7067833Z 
2025-08-18T19:13:54.7067980Z #### task\_import\_file
2025-08-18T19:13:54.7068212Z 
2025-08-18T19:13:54.7068337Z ```python
2025-08-18T19:13:54.7068746Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T19:13:54.7069288Z def task_import_file(self: Any,
2025-08-18T19:13:54.7069696Z                      uri: str,
2025-08-18T19:13:54.7070118Z                      report_type: Optional[str] = None,
2025-08-18T19:13:54.7070632Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T19:13:54.7071073Z ```
2025-08-18T19:13:54.7071237Z 
2025-08-18T19:13:54.7071486Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T19:13:54.7072151Z 
2025-08-18T19:13:54.7072322Z <a id="ingest.celery_app"></a>
2025-08-18T19:13:54.7072597Z 
2025-08-18T19:13:54.7072762Z # ingest.celery\_app
2025-08-18T19:13:54.7073004Z 
2025-08-18T19:13:54.7073163Z <a id="ingest.ingest_router"></a>
2025-08-18T19:13:54.7073445Z 
2025-08-18T19:13:54.7073585Z # ingest.ingest\_router
2025-08-18T19:13:54.7073857Z 
2025-08-18T19:13:54.7074010Z <a id="logistics_etl"></a>
2025-08-18T19:13:54.7074262Z 
2025-08-18T19:13:54.7074390Z # logistics\_etl
2025-08-18T19:13:54.7074592Z 
2025-08-18T19:13:54.7074750Z Daily logistics ETL job.
2025-08-18T19:13:54.7074988Z 
2025-08-18T19:13:54.7075142Z <a id="logistics_etl.__main__"></a>
2025-08-18T19:13:54.7075445Z 
2025-08-18T19:13:54.7075593Z # logistics\_etl.\_\_main\_\_
2025-08-18T19:13:54.7075863Z 
2025-08-18T19:13:54.7076029Z <a id="logistics_etl.dsn"></a>
2025-08-18T19:13:54.7076301Z 
2025-08-18T19:13:54.7076439Z # logistics\_etl.dsn
2025-08-18T19:13:54.7076660Z 
2025-08-18T19:13:54.7076910Z Local DSN builder to avoid cross-service dependency.
2025-08-18T19:13:54.7077296Z 
2025-08-18T19:13:54.7077467Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T19:13:54.7077798Z 
2025-08-18T19:13:54.7077921Z #### build\_dsn
2025-08-18T19:13:54.7078119Z 
2025-08-18T19:13:54.7078239Z ```python
2025-08-18T19:13:54.7078572Z def build_dsn(sync: bool = True) -> str
2025-08-18T19:13:54.7079000Z ```
2025-08-18T19:13:54.7079156Z 
2025-08-18T19:13:54.7079422Z Return a Postgres DSN assembled from environment variables.
2025-08-18T19:13:54.7079855Z 
2025-08-18T19:13:54.7080138Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T19:13:54.7080876Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T19:13:54.7081727Z error when any required variable is missing.
2025-08-18T19:13:54.7082088Z 
2025-08-18T19:13:54.7082306Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T19:13:54.7082652Z 
2025-08-18T19:13:54.7082814Z # logistics\_etl.tests.conftest
2025-08-18T19:13:54.7083462Z 
2025-08-18T19:13:54.7083663Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T19:13:54.7084002Z 
2025-08-18T19:13:54.7084171Z # logistics\_etl.tests.test\_repository
2025-08-18T19:13:54.7084503Z 
2025-08-18T19:13:54.7084689Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T19:13:54.7085023Z 
2025-08-18T19:13:54.7085236Z # logistics\_etl.tests.test\_cron
2025-08-18T19:13:54.7085524Z 
2025-08-18T19:13:54.7085710Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T19:13:54.7086047Z 
2025-08-18T19:13:54.7086214Z # logistics\_etl.tests.test\_imports
2025-08-18T19:13:54.7086517Z 
2025-08-18T19:13:54.7086696Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T19:13:54.7087037Z 
2025-08-18T19:13:54.7087199Z # logistics\_etl.tests.test\_smoke
2025-08-18T19:13:54.7087489Z 
2025-08-18T19:13:54.7087678Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T19:13:54.7088011Z 
2025-08-18T19:13:54.7088171Z # logistics\_etl.tests.test\_client
2025-08-18T19:13:54.7088468Z 
2025-08-18T19:13:54.7089126Z <a id="logistics_etl.tests"></a>
2025-08-18T19:13:54.7089432Z 
2025-08-18T19:13:54.7089585Z # logistics\_etl.tests
2025-08-18T19:13:54.7089873Z 
2025-08-18T19:13:54.7090026Z <a id="logistics_etl.flow"></a>
2025-08-18T19:13:54.7090296Z 
2025-08-18T19:13:54.7090440Z # logistics\_etl.flow
2025-08-18T19:13:54.7090663Z 
2025-08-18T19:13:54.7090819Z <a id="logistics_etl.client"></a>
2025-08-18T19:13:54.7091103Z 
2025-08-18T19:13:54.7091254Z # logistics\_etl.client
2025-08-18T19:13:54.7091489Z 
2025-08-18T19:13:54.7091846Z <a id="logistics_etl.cron"></a>
2025-08-18T19:13:54.7092141Z 
2025-08-18T19:13:54.7092279Z # logistics\_etl.cron
2025-08-18T19:13:54.7092498Z 
2025-08-18T19:13:54.7092645Z <a id="logistics_etl.db"></a>
2025-08-18T19:13:54.7092934Z 
2025-08-18T19:13:54.7093066Z # logistics\_etl.db
2025-08-18T19:13:54.7093269Z 
2025-08-18T19:13:54.7093441Z <a id="logistics_etl.repository"></a>
2025-08-18T19:13:54.7093749Z 
2025-08-18T19:13:54.7093900Z # logistics\_etl.repository
2025-08-18T19:13:54.7094182Z 
2025-08-18T19:13:54.7094317Z <a id="alert_bot"></a>
2025-08-18T19:13:54.7094541Z 
2025-08-18T19:13:54.7094663Z # alert\_bot
2025-08-18T19:13:54.7094854Z 
2025-08-18T19:13:54.7095023Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T19:13:54.7095342Z 
2025-08-18T19:13:54.7095504Z # alert\_bot.tests.test\_smoke
2025-08-18T19:13:54.7095776Z 
2025-08-18T19:13:54.7095923Z <a id="alert_bot.tests"></a>
2025-08-18T19:13:54.7096189Z 
2025-08-18T19:13:54.7096318Z # alert\_bot.tests
2025-08-18T19:13:54.7096517Z 
2025-08-18T19:13:54.7096669Z <a id="alert_bot.alert_bot"></a>
2025-08-18T19:13:54.7096948Z 
2025-08-18T19:13:54.7097089Z # alert\_bot.alert\_bot
2025-08-18T19:13:54.7097319Z 
2025-08-18T19:13:54.7097493Z <a id="alert_bot.rules"></a>
2025-08-18T19:13:54.7097750Z 
2025-08-18T19:13:54.7097876Z # alert\_bot.rules
2025-08-18T19:13:54.7098088Z 
2025-08-18T19:13:54.7098219Z <a id="common"></a>
2025-08-18T19:13:54.7098425Z 
2025-08-18T19:13:54.7098550Z # common
2025-08-18T19:13:54.7098721Z 
2025-08-18T19:13:54.7098882Z <a id="common.dsn"></a>
2025-08-18T19:13:54.7099115Z 
2025-08-18T19:13:54.7099251Z # common.dsn
2025-08-18T19:13:54.7099439Z 
2025-08-18T19:13:54.7099600Z <a id="common.dsn.build_dsn"></a>
2025-08-18T19:13:54.7099898Z 
2025-08-18T19:13:54.7100022Z #### build\_dsn
2025-08-18T19:13:54.7100213Z 
2025-08-18T19:13:54.7100334Z ```python
2025-08-18T19:13:54.7124353Z def build_dsn(sync: bool = True) -> str
2025-08-18T19:13:54.7124782Z ```
2025-08-18T19:13:54.7124924Z 
2025-08-18T19:13:54.7125132Z Return a Postgres DSN, validating required variables.
2025-08-18T19:13:54.7125487Z 
2025-08-18T19:13:54.7125814Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T19:13:54.7126525Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T19:13:54.7127214Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T19:13:54.7127767Z missing.
2025-08-18T19:13:54.7127912Z 
2025-08-18T19:13:54.7128053Z <a id="common.models_vendor"></a>
2025-08-18T19:13:54.7128633Z 
2025-08-18T19:13:54.7128852Z # common.models\_vendor
2025-08-18T19:13:54.7129047Z 
2025-08-18T19:13:54.7129187Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T19:13:54.7129462Z 
2025-08-18T19:13:54.7129570Z ## Vendor Objects
2025-08-18T19:13:54.7129737Z 
2025-08-18T19:13:54.7129841Z ```python
2025-08-18T19:13:54.7130078Z class Vendor(Base)
2025-08-18T19:13:54.7130339Z ```
2025-08-18T19:13:54.7130477Z 
2025-08-18T19:13:54.7130598Z Vendor of inventory items.
2025-08-18T19:13:54.7130816Z 
2025-08-18T19:13:54.7130987Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T19:13:54.7131290Z 
2025-08-18T19:13:54.7131413Z ## VendorPrice Objects
2025-08-18T19:13:54.7131877Z 
2025-08-18T19:13:54.7131987Z ```python
2025-08-18T19:13:54.7132248Z class VendorPrice(Base)
2025-08-18T19:13:54.7132532Z ```
2025-08-18T19:13:54.7132664Z 
2025-08-18T19:13:54.7132828Z Association table linking vendors to pricing.
2025-08-18T19:13:54.7133127Z 
2025-08-18T19:13:54.7133458Z <a id="common.db_url"></a>
2025-08-18T19:13:54.7133689Z 
2025-08-18T19:13:54.7133795Z # common.db\_url
2025-08-18T19:13:54.7133976Z 
2025-08-18T19:13:54.7134112Z <a id="common.db_url.build_url"></a>
2025-08-18T19:13:54.7134367Z 
2025-08-18T19:13:54.7134474Z #### build\_url
2025-08-18T19:13:54.7134640Z 
2025-08-18T19:13:54.7134748Z ```python
2025-08-18T19:13:54.7135022Z def build_url(async_: bool = True) -> str
2025-08-18T19:13:54.7135389Z ```
2025-08-18T19:13:54.7135523Z 
2025-08-18T19:13:54.7135689Z Return Postgres DSN from env or PG_* parts.
2025-08-18T19:13:54.7136008Z 
2025-08-18T19:13:54.7136134Z <a id="common.keepa"></a>
2025-08-18T19:13:54.7136337Z 
2025-08-18T19:13:54.7136440Z # common.keepa
2025-08-18T19:13:54.7136615Z 
2025-08-18T19:13:54.7136727Z <a id="common.llm"></a>
2025-08-18T19:13:54.7136914Z 
2025-08-18T19:13:54.7137019Z # common.llm
2025-08-18T19:13:54.7137169Z 
2025-08-18T19:13:54.7137306Z <a id="common.settings"></a>
2025-08-18T19:13:54.7137546Z 
2025-08-18T19:13:54.7137660Z # common.settings
2025-08-18T19:13:54.7137855Z 
2025-08-18T19:13:54.7137977Z <a id="common.db"></a>
2025-08-18T19:13:54.7138171Z 
2025-08-18T19:13:54.7138289Z # common.db
2025-08-18T19:13:54.7138471Z 
2025-08-18T19:13:54.7138627Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T19:13:54.7138904Z 
2025-08-18T19:13:54.7139024Z #### build\_sqlalchemy\_url
2025-08-18T19:13:54.7139227Z 
2025-08-18T19:13:54.7139334Z ```python
2025-08-18T19:13:54.7139605Z def build_sqlalchemy_url() -> str
2025-08-18T19:13:54.7139943Z ```
2025-08-18T19:13:54.7140071Z 
2025-08-18T19:13:54.7140220Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T19:13:54.7140501Z 
2025-08-18T19:13:54.7140646Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T19:13:54.7140906Z 
2025-08-18T19:13:54.7141029Z #### build\_asyncpg\_dsn
2025-08-18T19:13:54.7141233Z 
2025-08-18T19:13:54.7141332Z ```python
2025-08-18T19:13:54.7141759Z def build_asyncpg_dsn() -> str
2025-08-18T19:13:54.7142092Z ```
2025-08-18T19:13:54.7142231Z 
2025-08-18T19:13:54.7142439Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T19:13:54.7142783Z 
2025-08-18T19:13:54.7142916Z <a id="common.db.refresh_mvs"></a>
2025-08-18T19:13:54.7143169Z 
2025-08-18T19:13:54.7143276Z #### refresh\_mvs
2025-08-18T19:13:54.7143443Z 
2025-08-18T19:13:54.7143553Z ```python
2025-08-18T19:13:54.7143937Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T19:13:54.7144341Z ```
2025-08-18T19:13:54.7144470Z 
2025-08-18T19:13:54.7144687Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T19:13:54.7145033Z 
2025-08-18T19:13:54.7145154Z <a id="common.config"></a>
2025-08-18T19:13:54.7145354Z 
2025-08-18T19:13:54.7145467Z # common.config
2025-08-18T19:13:54.7145631Z 
2025-08-18T19:13:54.7145743Z <a id="common.base"></a>
2025-08-18T19:13:54.7145933Z 
2025-08-18T19:13:54.7146042Z # common.base
2025-08-18T19:13:54.7146193Z 
2025-08-18T19:13:54.7146320Z <a id="common.base.Base"></a>
2025-08-18T19:13:54.7146544Z 
2025-08-18T19:13:54.7146654Z ## Base Objects
2025-08-18T19:13:54.7147078Z 
2025-08-18T19:13:54.7147190Z ```python
2025-08-18T19:13:54.7147465Z class Base(DeclarativeBase)
2025-08-18T19:13:54.7147777Z ```
2025-08-18T19:13:54.7147971Z 
2025-08-18T19:13:54.7148118Z Base class for SQLAlchemy models.
2025-08-18T19:13:54.7148370Z 
2025-08-18T19:13:54.7148481Z <a id="repricer"></a>
2025-08-18T19:13:54.7148670Z 
2025-08-18T19:13:54.7148785Z # repricer
2025-08-18T19:13:54.7148930Z 
2025-08-18T19:13:54.7149065Z <a id="repricer.app.schemas"></a>
2025-08-18T19:13:54.7149312Z 
2025-08-18T19:13:54.7149438Z # repricer.app.schemas
2025-08-18T19:13:54.7149629Z 
2025-08-18T19:13:54.7149763Z <a id="repricer.app.deps"></a>
2025-08-18T19:13:54.7149990Z 
2025-08-18T19:13:54.7150107Z # repricer.app.deps
2025-08-18T19:13:54.7150280Z 
2025-08-18T19:13:54.7150460Z Placeholder module for Keepa / SP-API clients.
2025-08-18T19:13:54.7150762Z 
2025-08-18T19:13:54.7150889Z <a id="repricer.app.logic"></a>
2025-08-18T19:13:54.7151119Z 
2025-08-18T19:13:54.7151234Z # repricer.app.logic
2025-08-18T19:13:54.7151802Z 
2025-08-18T19:13:54.7151966Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T19:13:54.7152253Z 
2025-08-18T19:13:54.7152359Z #### MIN\_MARGIN
2025-08-18T19:13:54.7152515Z 
2025-08-18T19:13:54.7152620Z 15 % ROI
2025-08-18T19:13:54.7152760Z 
2025-08-18T19:13:54.7152924Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T19:13:54.7153201Z 
2025-08-18T19:13:54.7153325Z #### compute\_price
2025-08-18T19:13:54.7153494Z 
2025-08-18T19:13:54.7153601Z ```python
2025-08-18T19:13:54.7153997Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T19:13:54.7154472Z ```
2025-08-18T19:13:54.7154612Z 
2025-08-18T19:13:54.7154774Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T19:13:54.7155213Z Replace with real competitive logic later.
2025-08-18T19:13:54.7155479Z 
2025-08-18T19:13:54.7155606Z <a id="repricer.app.main"></a>
2025-08-18T19:13:54.7155834Z 
2025-08-18T19:13:54.7155948Z # repricer.app.main
2025-08-18T19:13:54.7156120Z 
2025-08-18T19:13:54.7156249Z <a id="repricer.app"></a>
2025-08-18T19:13:54.7156464Z 
2025-08-18T19:13:54.7156569Z # repricer.app
2025-08-18T19:13:54.7156731Z 
2025-08-18T19:13:54.7156882Z <a id="repricer.tests.test_imports"></a>
2025-08-18T19:13:54.7157140Z 
2025-08-18T19:13:54.7157272Z # repricer.tests.test\_imports
2025-08-18T19:13:54.7157489Z 
2025-08-18T19:13:54.7157634Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T19:13:54.7157882Z 
2025-08-18T19:13:54.7158004Z # repricer.tests.test\_smoke
2025-08-18T19:13:54.7158223Z 
2025-08-18T19:13:54.7158341Z <a id="repricer.tests"></a>
2025-08-18T19:13:54.7158549Z 
2025-08-18T19:13:54.7158664Z # repricer.tests
2025-08-18T19:13:54.7158835Z 
2025-08-18T19:13:54.7158939Z <a id="db"></a>
2025-08-18T19:13:54.7159092Z 
2025-08-18T19:13:54.7159191Z # db
2025-08-18T19:13:54.7159319Z 
2025-08-18T19:13:54.7159436Z <a id="db.utils.views"></a>
2025-08-18T19:13:54.7159648Z 
2025-08-18T19:13:54.7159752Z # db.utils.views
2025-08-18T19:13:54.7159917Z 
2025-08-18T19:13:54.7160058Z <a id="db.utils.views.replace_view"></a>
2025-08-18T19:13:54.7160339Z 
2025-08-18T19:13:54.7160447Z #### replace\_view
2025-08-18T19:13:54.7160608Z 
2025-08-18T19:13:54.7160715Z ```python
2025-08-18T19:13:54.7161020Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T19:13:54.7161410Z ```
2025-08-18T19:13:54.7161701Z 
2025-08-18T19:13:54.7161850Z Drop and recreate a SQL view atomically.
2025-08-18T19:13:54.7162128Z 
2025-08-18T19:13:54.7162239Z <a id="db.utils"></a>
2025-08-18T19:13:54.7162417Z 
2025-08-18T19:13:54.7162517Z # db.utils
2025-08-18T19:13:54.7162661Z 
2025-08-18T19:13:54.7162782Z <a id="price_importer"></a>
2025-08-18T19:13:54.7162994Z 
2025-08-18T19:13:54.7163111Z # price\_importer
2025-08-18T19:13:54.7163282Z 
2025-08-18T19:13:54.7163451Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T19:13:54.7163747Z 
2025-08-18T19:13:54.7163888Z # price\_importer.services\_common.dsn
2025-08-18T19:13:54.7164146Z 
2025-08-18T19:13:54.7164338Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T19:13:54.7164933Z 
2025-08-18T19:13:54.7165033Z #### build\_dsn
2025-08-18T19:13:54.7165191Z 
2025-08-18T19:13:54.7165298Z ```python
2025-08-18T19:13:54.7165570Z def build_dsn(sync: bool = True) -> str
2025-08-18T19:13:54.7165910Z ```
2025-08-18T19:13:54.7166041Z 
2025-08-18T19:13:54.7166149Z Return safe DSN.
2025-08-18T19:13:54.7166323Z 
2025-08-18T19:13:54.7166770Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T19:13:54.7167084Z 
2025-08-18T19:13:54.7167288Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T19:13:54.7167612Z 
2025-08-18T19:13:54.7167784Z # price\_importer.services\_common.models\_vendor
2025-08-18T19:13:54.7168085Z 
2025-08-18T19:13:54.7168260Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T19:13:54.7168548Z 
2025-08-18T19:13:54.7168694Z # price\_importer.services\_common.db\_url
2025-08-18T19:13:54.7168972Z 
2025-08-18T19:13:54.7169171Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T19:13:54.7169503Z 
2025-08-18T19:13:54.7169809Z #### build\_url
2025-08-18T19:13:54.7169971Z 
2025-08-18T19:13:54.7170070Z ```python
2025-08-18T19:13:54.7170353Z def build_url(async_: bool = True) -> str
2025-08-18T19:13:54.7170709Z ```
2025-08-18T19:13:54.7170850Z 
2025-08-18T19:13:54.7170998Z Return Postgres DSN from env or PG_* parts.
2025-08-18T19:13:54.7171264Z 
2025-08-18T19:13:54.7171433Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T19:13:54.7171930Z 
2025-08-18T19:13:54.7172080Z # price\_importer.services\_common.keepa
2025-08-18T19:13:54.7172339Z 
2025-08-18T19:13:54.7172504Z <a id="price_importer.services_common.llm"></a>
2025-08-18T19:13:54.7172788Z 
2025-08-18T19:13:54.7172932Z # price\_importer.services\_common.llm
2025-08-18T19:13:54.7173190Z 
2025-08-18T19:13:54.7173370Z <a id="price_importer.services_common.settings"></a>
2025-08-18T19:13:54.7173664Z 
2025-08-18T19:13:54.7173812Z # price\_importer.services\_common.settings
2025-08-18T19:13:54.7174085Z 
2025-08-18T19:13:54.7174241Z <a id="price_importer.services_common.db"></a>
2025-08-18T19:13:54.7174541Z 
2025-08-18T19:13:54.7174688Z # price\_importer.services\_common.db
2025-08-18T19:13:54.7174939Z 
2025-08-18T19:13:54.7175186Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T19:13:54.7175560Z 
2025-08-18T19:13:54.7175679Z #### build\_sqlalchemy\_url
2025-08-18T19:13:54.7175886Z 
2025-08-18T19:13:54.7175985Z ```python
2025-08-18T19:13:54.7176261Z def build_sqlalchemy_url() -> str
2025-08-18T19:13:54.7176584Z ```
2025-08-18T19:13:54.7176715Z 
2025-08-18T19:13:54.7176864Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T19:13:54.7177137Z 
2025-08-18T19:13:54.7177374Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T19:13:54.7177734Z 
2025-08-18T19:13:54.7177859Z #### build\_asyncpg\_dsn
2025-08-18T19:13:54.7178059Z 
2025-08-18T19:13:54.7178157Z ```python
2025-08-18T19:13:54.7178425Z def build_asyncpg_dsn() -> str
2025-08-18T19:13:54.7178744Z ```
2025-08-18T19:13:54.7178874Z 
2025-08-18T19:13:54.7179086Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T19:13:54.7179422Z 
2025-08-18T19:13:54.7179616Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T19:13:54.7179945Z 
2025-08-18T19:13:54.7180049Z #### refresh\_mvs
2025-08-18T19:13:54.7180210Z 
2025-08-18T19:13:54.7180311Z ```python
2025-08-18T19:13:54.7180616Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T19:13:54.7181003Z ```
2025-08-18T19:13:54.7181126Z 
2025-08-18T19:13:54.7181337Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T19:13:54.7181817Z 
2025-08-18T19:13:54.7181987Z <a id="price_importer.services_common"></a>
2025-08-18T19:13:54.7182261Z 
2025-08-18T19:13:54.7182395Z # price\_importer.services\_common
2025-08-18T19:13:54.7182629Z 
2025-08-18T19:13:54.7182787Z <a id="price_importer.services_common.base"></a>
2025-08-18T19:13:54.7183063Z 
2025-08-18T19:13:54.7183207Z # price\_importer.services\_common.base
2025-08-18T19:13:54.7183458Z 
2025-08-18T19:13:54.7183598Z <a id="price_importer.normaliser"></a>
2025-08-18T19:13:54.7184041Z 
2025-08-18T19:13:54.7184176Z # price\_importer.normaliser
2025-08-18T19:13:54.7184386Z 
2025-08-18T19:13:54.7184557Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T19:13:54.7184847Z 
2025-08-18T19:13:54.7184987Z # price\_importer.common.models\_vendor
2025-08-18T19:13:54.7185243Z 
2025-08-18T19:13:54.7185391Z <a id="price_importer.common.db_url"></a>
2025-08-18T19:13:54.7185651Z 
2025-08-18T19:13:54.7185779Z # price\_importer.common.db\_url
2025-08-18T19:13:54.7186008Z 
2025-08-18T19:13:54.7186181Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T19:13:54.7186474Z 
2025-08-18T19:13:54.7186586Z #### make\_dsn
2025-08-18T19:13:54.7186746Z 
2025-08-18T19:13:54.7186848Z ```python
2025-08-18T19:13:54.7187122Z def make_dsn(async_: bool = False) -> str
2025-08-18T19:13:54.7187484Z ```
2025-08-18T19:13:54.7187626Z 
2025-08-18T19:13:54.7187826Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T19:13:54.7188145Z 
2025-08-18T19:13:54.7188499Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T19:13:54.7188811Z 
2025-08-18T19:13:54.7188914Z #### build\_url
2025-08-18T19:13:54.7189073Z 
2025-08-18T19:13:54.7189173Z ```python
2025-08-18T19:13:54.7189468Z def build_url(async_: bool = False) -> str
2025-08-18T19:13:54.7189811Z ```
2025-08-18T19:13:54.7189945Z 
2025-08-18T19:13:54.7190142Z Return Postgres DSN built from environment variables.
2025-08-18T19:13:54.7190461Z 
2025-08-18T19:13:54.7190601Z <a id="price_importer.common"></a>
2025-08-18T19:13:54.7190830Z 
2025-08-18T19:13:54.7190953Z # price\_importer.common
2025-08-18T19:13:54.7191155Z 
2025-08-18T19:13:54.7191295Z <a id="price_importer.common.base"></a>
2025-08-18T19:13:54.7191714Z 
2025-08-18T19:13:54.7191847Z # price\_importer.common.base
2025-08-18T19:13:54.7192067Z 
2025-08-18T19:13:54.7192221Z <a id="price_importer.tests.conftest"></a>
2025-08-18T19:13:54.7192486Z 
2025-08-18T19:13:54.7192621Z # price\_importer.tests.conftest
2025-08-18T19:13:54.7192857Z 
2025-08-18T19:13:54.7193027Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T19:13:54.7193300Z 
2025-08-18T19:13:54.7193433Z # price\_importer.tests.test\_reader
2025-08-18T19:13:54.7193680Z 
2025-08-18T19:13:54.7193835Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T19:13:54.7194105Z 
2025-08-18T19:13:54.7194246Z # price\_importer.tests.test\_imports
2025-08-18T19:13:54.7194491Z 
2025-08-18T19:13:54.7194645Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T19:13:54.7194916Z 
2025-08-18T19:13:54.7195056Z # price\_importer.tests.test\_smoke
2025-08-18T19:13:54.7195307Z 
2025-08-18T19:13:54.7195487Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T19:13:54.7195799Z 
2025-08-18T19:13:54.7195954Z # price\_importer.tests.test\_normaliser
2025-08-18T19:13:54.7196226Z 
2025-08-18T19:13:54.7196375Z <a id="price_importer.tests"></a>
2025-08-18T19:13:54.7196614Z 
2025-08-18T19:13:54.7196737Z # price\_importer.tests
2025-08-18T19:13:54.7196923Z 
2025-08-18T19:13:54.7197073Z <a id="price_importer.reader"></a>
2025-08-18T19:13:54.7197326Z 
2025-08-18T19:13:54.7197446Z # price\_importer.reader
2025-08-18T19:13:54.7197650Z 
2025-08-18T19:13:54.7197790Z <a id="price_importer.repository"></a>
2025-08-18T19:13:54.7198044Z 
2025-08-18T19:13:54.7198179Z # price\_importer.repository
2025-08-18T19:13:54.7198404Z 
2025-08-18T19:13:54.7198537Z <a id="price_importer.import"></a>
2025-08-18T19:13:54.7198776Z 
2025-08-18T19:13:54.7198903Z # price\_importer.import
2025-08-18T19:13:54.7199101Z 
2025-08-18T19:13:54.7199215Z <a id="fees_h10"></a>
2025-08-18T19:13:54.7199395Z 
2025-08-18T19:13:54.7199494Z # fees\_h10
2025-08-18T19:13:54.7199639Z 
2025-08-18T19:13:54.7199764Z <a id="fees_h10.worker"></a>
2025-08-18T19:13:54.7199985Z 
2025-08-18T19:13:54.7200094Z # fees\_h10.worker
2025-08-18T19:13:54.7200255Z 
2025-08-18T19:13:54.7200421Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T19:13:54.7200707Z 
2025-08-18T19:13:54.7200826Z #### list\_active\_asins
2025-08-18T19:13:54.7201026Z 
2025-08-18T19:13:54.7201324Z ```python
2025-08-18T19:13:54.7201731Z def list_active_asins() -> list[str]
2025-08-18T19:13:54.7202085Z ```
2025-08-18T19:13:54.7202216Z 
2025-08-18T19:13:54.7202398Z Return known ASINs or an empty list if unavailable.
2025-08-18T19:13:54.7202703Z 
2025-08-18T19:13:54.7202836Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T19:13:54.7203080Z 
2025-08-18T19:13:54.7203214Z # fees\_h10.tests.test\_smoke
2025-08-18T19:13:54.7203424Z 
2025-08-18T19:13:54.7203542Z <a id="fees_h10.tests"></a>
2025-08-18T19:13:54.7203754Z 
2025-08-18T19:13:54.7203862Z # fees\_h10.tests
2025-08-18T19:13:54.7204024Z 
2025-08-18T19:13:54.7204149Z <a id="fees_h10.client"></a>
2025-08-18T19:13:54.7204361Z 
2025-08-18T19:13:54.7204467Z # fees\_h10.client
2025-08-18T19:13:54.7204625Z 
2025-08-18T19:13:54.7204763Z <a id="fees_h10.repository"></a>
2025-08-18T19:13:54.7204992Z 
2025-08-18T19:13:54.7205108Z # fees\_h10.repository
2025-08-18T19:13:54.7205295Z 
2025-08-18T19:13:54.7205406Z <a id="emailer"></a>
2025-08-18T19:13:54.7205757Z 
2025-08-18T19:13:54.7205855Z # emailer
2025-08-18T19:13:54.7205999Z 
2025-08-18T19:13:54.7206162Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T19:13:54.7206441Z 
2025-08-18T19:13:54.7206591Z # emailer.tests.test\_import\_emailer
2025-08-18T19:13:54.7206842Z 
2025-08-18T19:13:54.7207030Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T19:13:54.7207295Z 
2025-08-18T19:13:54.7207424Z # emailer.tests.test\_smoke
2025-08-18T19:13:54.7207637Z 
2025-08-18T19:13:54.7207762Z <a id="emailer.tests"></a>
2025-08-18T19:13:54.7207983Z 
2025-08-18T19:13:54.7208096Z # emailer.tests
2025-08-18T19:13:54.7208262Z 
2025-08-18T19:13:54.7208399Z <a id="emailer.generate_body"></a>
2025-08-18T19:13:54.7208636Z 
2025-08-18T19:13:54.7208759Z # emailer.generate\_body
2025-08-18T19:13:54.7208966Z 
2025-08-18T19:13:54.7209082Z <a id="llm_server"></a>
2025-08-18T19:13:54.7209272Z 
2025-08-18T19:13:54.7209377Z # llm\_server
2025-08-18T19:13:54.7209544Z 
2025-08-18T19:13:54.7209668Z <a id="llm_server.app"></a>
2025-08-18T19:13:54.7209890Z 
2025-08-18T19:13:54.7210007Z # llm\_server.app
2025-08-18T19:13:54.7210174Z 
