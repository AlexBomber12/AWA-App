2025-08-17T02:10:12.6806643Z ##[group]Run pydoc-markdown
2025-08-17T02:10:12.6806948Z [36;1mpydoc-markdown[0m
2025-08-17T02:10:12.6847591Z shell: /usr/bin/bash -e {0}
2025-08-17T02:10:12.6847829Z env:
2025-08-17T02:10:12.6848069Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:10:12.6848495Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T02:10:12.6848895Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:10:12.6849477Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:10:12.6849857Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:10:12.6850211Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T02:10:12.6850504Z ##[endgroup]
2025-08-17T02:10:13.0627228Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T02:10:13.0627941Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T02:10:13.0628402Z In "pydoc-markdown.yml"
2025-08-17T02:10:13.0628852Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T02:10:13.0629787Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T02:10:13.0630564Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T02:10:13.0631099Z 
2025-08-17T02:10:13.2765295Z <a id="__init__"></a>
2025-08-17T02:10:13.2765832Z 
2025-08-17T02:10:13.2766013Z # \_\_init\_\_
2025-08-17T02:10:13.2766275Z 
2025-08-17T02:10:13.2766418Z <a id="api"></a>
2025-08-17T02:10:13.2766649Z 
2025-08-17T02:10:13.2766780Z # api
2025-08-17T02:10:13.2766963Z 
2025-08-17T02:10:13.2767141Z <a id="api.tests.test_llm"></a>
2025-08-17T02:10:13.2767464Z 
2025-08-17T02:10:13.2767628Z # api.tests.test\_llm
2025-08-17T02:10:13.2767893Z 
2025-08-17T02:10:13.2768081Z <a id="api.tests.test_imports"></a>
2025-08-17T02:10:13.2768425Z 
2025-08-17T02:10:13.2768592Z # api.tests.test\_imports
2025-08-17T02:10:13.2768880Z 
2025-08-17T02:10:13.2769070Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T02:10:13.2770221Z 
2025-08-17T02:10:13.2770341Z # api.tests.test\_entrypoint
2025-08-17T02:10:13.2770560Z 
2025-08-17T02:10:13.2770680Z <a id="api.tests.test_health"></a>
2025-08-17T02:10:13.2770905Z 
2025-08-17T02:10:13.2771017Z # api.tests.test\_health
2025-08-17T02:10:13.2771196Z 
2025-08-17T02:10:13.2771308Z <a id="api.migrations.env"></a>
2025-08-17T02:10:13.2771506Z 
2025-08-17T02:10:13.2771611Z # api.migrations.env
2025-08-17T02:10:13.2771772Z 
2025-08-17T02:10:13.2771941Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T02:10:13.2772237Z 
2025-08-17T02:10:13.2772382Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T02:10:13.2772641Z 
2025-08-17T02:10:13.2772792Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T02:10:13.2773058Z 
2025-08-17T02:10:13.2773182Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T02:10:13.2773428Z 
2025-08-17T02:10:13.2773597Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T02:10:13.2773863Z 
2025-08-17T02:10:13.2774018Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T02:10:13.2774279Z 
2025-08-17T02:10:13.2774416Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T02:10:13.2774653Z 
2025-08-17T02:10:13.2774780Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T02:10:13.2774990Z 
2025-08-17T02:10:13.2775120Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T02:10:13.2775349Z 
2025-08-17T02:10:13.2775460Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T02:10:13.2775667Z 
2025-08-17T02:10:13.2775801Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T02:10:13.2776041Z 
2025-08-17T02:10:13.2776158Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T02:10:13.2776372Z 
2025-08-17T02:10:13.2776501Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T02:10:13.2776721Z 
2025-08-17T02:10:13.2776839Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T02:10:13.2777052Z 
2025-08-17T02:10:13.2777187Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T02:10:13.2777654Z 
2025-08-17T02:10:13.2777779Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T02:10:13.2777990Z 
2025-08-17T02:10:13.2778128Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T02:10:13.2778357Z 
2025-08-17T02:10:13.2778481Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T02:10:13.2778693Z 
2025-08-17T02:10:13.2778811Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T02:10:13.2779031Z 
2025-08-17T02:10:13.2779131Z # api.migrations.versions.0001\_baseline
2025-08-17T02:10:13.2779474Z 
2025-08-17T02:10:13.2779578Z <a id="api.migrations.versions"></a>
2025-08-17T02:10:13.2779760Z 
2025-08-17T02:10:13.2779847Z # api.migrations.versions
2025-08-17T02:10:13.2779990Z 
2025-08-17T02:10:13.2780081Z <a id="api.migrations"></a>
2025-08-17T02:10:13.2780228Z 
2025-08-17T02:10:13.2780302Z # api.migrations
2025-08-17T02:10:13.2780423Z 
2025-08-17T02:10:13.2780497Z <a id="api.db"></a>
2025-08-17T02:10:13.2780619Z 
2025-08-17T02:10:13.2780698Z # api.db
2025-08-17T02:10:13.2780792Z 
2025-08-17T02:10:13.2780880Z <a id="api.routes.stats"></a>
2025-08-17T02:10:13.2781035Z 
2025-08-17T02:10:13.2781118Z # api.routes.stats
2025-08-17T02:10:13.2781237Z 
2025-08-17T02:10:13.2781332Z <a id="api.routes.stats.kpi"></a>
2025-08-17T02:10:13.2781508Z 
2025-08-17T02:10:13.2781578Z #### kpi
2025-08-17T02:10:13.2781676Z 
2025-08-17T02:10:13.2781747Z ```python
2025-08-17T02:10:13.2781935Z @router.get("/stats/kpi")
2025-08-17T02:10:13.2782201Z def kpi() -> List[Dict[str, int]]
2025-08-17T02:10:13.2782430Z ```
2025-08-17T02:10:13.2782521Z 
2025-08-17T02:10:13.2782612Z Return KPI metrics (mock).
2025-08-17T02:10:13.2782756Z 
2025-08-17T02:10:13.2782861Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T02:10:13.2783062Z 
2025-08-17T02:10:13.2783137Z #### roi\_by\_vendor
2025-08-17T02:10:13.2783258Z 
2025-08-17T02:10:13.2783330Z ```python
2025-08-17T02:10:13.2783534Z @router.get("/stats/roi_by_vendor")
2025-08-17T02:10:13.2783948Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T02:10:13.2784199Z ```
2025-08-17T02:10:13.2784277Z 
2025-08-17T02:10:13.2784362Z Return ROI percent by vendor.
2025-08-17T02:10:13.2784500Z 
2025-08-17T02:10:13.2784591Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T02:10:13.2784763Z 
2025-08-17T02:10:13.2784826Z #### roi\_trend
2025-08-17T02:10:13.2784929Z 
2025-08-17T02:10:13.2784990Z ```python
2025-08-17T02:10:13.2785159Z @router.get("/stats/roi_trend")
2025-08-17T02:10:13.2785402Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T02:10:13.2785633Z ```
2025-08-17T02:10:13.2785710Z 
2025-08-17T02:10:13.2785790Z Return 30-day ROI trend.
2025-08-17T02:10:13.2785915Z 
2025-08-17T02:10:13.2785993Z <a id="api.routes.roi"></a>
2025-08-17T02:10:13.2786134Z 
2025-08-17T02:10:13.2786201Z # api.routes.roi
2025-08-17T02:10:13.2786338Z 
2025-08-17T02:10:13.2786427Z <a id="api.routes.health"></a>
2025-08-17T02:10:13.2786663Z 
2025-08-17T02:10:13.2786732Z # api.routes.health
2025-08-17T02:10:13.2786854Z 
2025-08-17T02:10:13.2786947Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T02:10:13.2787114Z 
2025-08-17T02:10:13.2787179Z #### MAX\_SKEW
2025-08-17T02:10:13.2787285Z 
2025-08-17T02:10:13.2787345Z seconds
2025-08-17T02:10:13.2787428Z 
2025-08-17T02:10:13.2787523Z <a id="api.routes.health.health"></a>
2025-08-17T02:10:13.2787684Z 
2025-08-17T02:10:13.2787745Z #### health
2025-08-17T02:10:13.2787837Z 
2025-08-17T02:10:13.2787898Z ```python
2025-08-17T02:10:13.2788083Z @router.get("/health", include_in_schema=False)
2025-08-17T02:10:13.2788457Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T02:10:13.2788796Z ```
2025-08-17T02:10:13.2788881Z 
2025-08-17T02:10:13.2788994Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T02:10:13.2789322Z 
2025-08-17T02:10:13.2789419Z <a id="api.routes.repository"></a>
2025-08-17T02:10:13.2789576Z 
2025-08-17T02:10:13.2789652Z # api.routes.repository
2025-08-17T02:10:13.2789781Z 
2025-08-17T02:10:13.2789857Z <a id="api.routes"></a>
2025-08-17T02:10:13.2790130Z 
2025-08-17T02:10:13.2790194Z # api.routes
2025-08-17T02:10:13.2790298Z 
2025-08-17T02:10:13.2790374Z <a id="api.models.fee"></a>
2025-08-17T02:10:13.2790505Z 
2025-08-17T02:10:13.2790577Z # api.models.fee
2025-08-17T02:10:13.2790679Z 
2025-08-17T02:10:13.2790749Z <a id="api.models"></a>
2025-08-17T02:10:13.2790867Z 
2025-08-17T02:10:13.2790929Z # api.models
2025-08-17T02:10:13.2791020Z 
2025-08-17T02:10:13.2791099Z <a id="api.roi_repository"></a>
2025-08-17T02:10:13.2791244Z 
2025-08-17T02:10:13.2791313Z # api.roi\_repository
2025-08-17T02:10:13.2791428Z 
2025-08-17T02:10:13.2791502Z <a id="api.main"></a>
2025-08-17T02:10:13.2791612Z 
2025-08-17T02:10:13.2791678Z # api.main
2025-08-17T02:10:13.2791772Z 
2025-08-17T02:10:13.2791852Z <a id="api.main.ready"></a>
2025-08-17T02:10:13.2791981Z 
2025-08-17T02:10:13.2792045Z #### ready
2025-08-17T02:10:13.2792139Z 
2025-08-17T02:10:13.2792201Z ```python
2025-08-17T02:10:13.2792456Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T02:10:13.2792896Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T02:10:13.2793257Z                                                                       str]
2025-08-17T02:10:13.2793489Z ```
2025-08-17T02:10:13.2793572Z 
2025-08-17T02:10:13.2793678Z Return 200 only when migrations are at head.
2025-08-17T02:10:13.2793852Z 
2025-08-17T02:10:13.2793925Z <a id="api.config"></a>
2025-08-17T02:10:13.2794054Z 
2025-08-17T02:10:13.2794118Z # api.config
2025-08-17T02:10:13.2794212Z 
2025-08-17T02:10:13.2794283Z <a id="etl"></a>
2025-08-17T02:10:13.2794387Z 
2025-08-17T02:10:13.2794449Z # etl
2025-08-17T02:10:13.2794536Z 
2025-08-17T02:10:13.2794631Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T02:10:13.2794779Z 
2025-08-17T02:10:13.2794853Z # etl.fba\_fee\_ingestor
2025-08-17T02:10:13.2794981Z 
2025-08-17T02:10:13.2795061Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T02:10:13.2795204Z 
2025-08-17T02:10:13.2795294Z # etl.sp\_fees\_ingestor
2025-08-17T02:10:13.2795551Z 
2025-08-17T02:10:13.2795637Z <a id="etl.keepa_ingestor"></a>
2025-08-17T02:10:13.2795778Z 
2025-08-17T02:10:13.2795849Z # etl.keepa\_ingestor
2025-08-17T02:10:13.2795973Z 
2025-08-17T02:10:13.2796039Z <a id="etl.db"></a>
2025-08-17T02:10:13.2796144Z 
2025-08-17T02:10:13.2796205Z # etl.db
2025-08-17T02:10:13.2796301Z 
2025-08-17T02:10:13.2796405Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T02:10:13.2796592Z 
2025-08-17T02:10:13.2796688Z # etl.dialects.amazon\_reimbursements
2025-08-17T02:10:13.2796851Z 
2025-08-17T02:10:13.2796939Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T02:10:13.2797114Z 
2025-08-17T02:10:13.2797196Z # etl.dialects.amazon\_returns
2025-08-17T02:10:13.2797336Z 
2025-08-17T02:10:13.2797411Z <a id="etl.dialects"></a>
2025-08-17T02:10:13.2797545Z 
2025-08-17T02:10:13.2797610Z # etl.dialects
2025-08-17T02:10:13.2797707Z 
2025-08-17T02:10:13.2797780Z <a id="ingest"></a>
2025-08-17T02:10:13.2797886Z 
2025-08-17T02:10:13.2797954Z # ingest
2025-08-17T02:10:13.2798048Z 
2025-08-17T02:10:13.2798131Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T02:10:13.2798286Z 
2025-08-17T02:10:13.2798364Z # ingest.tests.test\_smoke
2025-08-17T02:10:13.2798499Z 
2025-08-17T02:10:13.2798571Z <a id="ingest.tests"></a>
2025-08-17T02:10:13.2798693Z 
2025-08-17T02:10:13.2798761Z # ingest.tests
2025-08-17T02:10:13.2798860Z 
2025-08-17T02:10:13.2798939Z <a id="ingest.upload_router"></a>
2025-08-17T02:10:13.2799084Z 
2025-08-17T02:10:13.2799165Z # ingest.upload\_router
2025-08-17T02:10:13.2799404Z 
2025-08-17T02:10:13.2799486Z <a id="ingest.email_watcher"></a>
2025-08-17T02:10:13.2799636Z 
2025-08-17T02:10:13.2799707Z # ingest.email\_watcher
2025-08-17T02:10:13.2799822Z 
2025-08-17T02:10:13.2799912Z <a id="ingest.email_watcher.main"></a>
2025-08-17T02:10:13.2800070Z 
2025-08-17T02:10:13.2800130Z #### main
2025-08-17T02:10:13.2800216Z 
2025-08-17T02:10:13.2800282Z ```python
2025-08-17T02:10:13.2800444Z def main() -> dict[str, str]
2025-08-17T02:10:13.2800646Z ```
2025-08-17T02:10:13.2800728Z 
2025-08-17T02:10:13.2800985Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T02:10:13.2801215Z 
2025-08-17T02:10:13.2801342Z Returns {"status": "success"} when processing completes.
2025-08-17T02:10:13.2801547Z 
2025-08-17T02:10:13.2801635Z <a id="ingest.ingest_router"></a>
2025-08-17T02:10:13.2801780Z 
2025-08-17T02:10:13.2801853Z # ingest.ingest\_router
2025-08-17T02:10:13.2801973Z 
2025-08-17T02:10:13.2802046Z <a id="logistics_etl"></a>
2025-08-17T02:10:13.2802173Z 
2025-08-17T02:10:13.2802237Z # logistics\_etl
2025-08-17T02:10:13.2802347Z 
2025-08-17T02:10:13.2802421Z Daily logistics ETL job.
2025-08-17T02:10:13.2802544Z 
2025-08-17T02:10:13.2802629Z <a id="logistics_etl.__main__"></a>
2025-08-17T02:10:13.2802780Z 
2025-08-17T02:10:13.2802855Z # logistics\_etl.\_\_main\_\_
2025-08-17T02:10:13.2802989Z 
2025-08-17T02:10:13.2803072Z <a id="logistics_etl.dsn"></a>
2025-08-17T02:10:13.2803209Z 
2025-08-17T02:10:13.2803277Z # logistics\_etl.dsn
2025-08-17T02:10:13.2803402Z 
2025-08-17T02:10:13.2803522Z Local DSN builder to avoid cross-service dependency.
2025-08-17T02:10:13.2803722Z 
2025-08-17T02:10:13.2803814Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T02:10:13.2803978Z 
2025-08-17T02:10:13.2804041Z #### build\_dsn
2025-08-17T02:10:13.2804140Z 
2025-08-17T02:10:13.2804206Z ```python
2025-08-17T02:10:13.2804376Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:10:13.2804598Z ```
2025-08-17T02:10:13.2804679Z 
2025-08-17T02:10:13.2804820Z Return a Postgres DSN assembled from environment variables.
2025-08-17T02:10:13.2805047Z 
2025-08-17T02:10:13.2805195Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T02:10:13.2805583Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T02:10:13.2805922Z error when any required variable is missing.
2025-08-17T02:10:13.2806097Z 
2025-08-17T02:10:13.2806197Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T02:10:13.2806366Z 
2025-08-17T02:10:13.2806563Z # logistics\_etl.tests.conftest
2025-08-17T02:10:13.2806718Z 
2025-08-17T02:10:13.2806822Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T02:10:13.2807008Z 
2025-08-17T02:10:13.2807101Z # logistics\_etl.tests.test\_repository
2025-08-17T02:10:13.2807264Z 
2025-08-17T02:10:13.2807357Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T02:10:13.2807525Z 
2025-08-17T02:10:13.2807614Z # logistics\_etl.tests.test\_cron
2025-08-17T02:10:13.2807764Z 
2025-08-17T02:10:13.2807859Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T02:10:13.2808039Z 
2025-08-17T02:10:13.2808124Z # logistics\_etl.tests.test\_imports
2025-08-17T02:10:13.2808277Z 
2025-08-17T02:10:13.2808378Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T02:10:13.2808546Z 
2025-08-17T02:10:13.2808628Z # logistics\_etl.tests.test\_smoke
2025-08-17T02:10:13.2808778Z 
2025-08-17T02:10:13.2808913Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T02:10:13.2809090Z 
2025-08-17T02:10:13.2809174Z # logistics\_etl.tests.test\_client
2025-08-17T02:10:13.2809469Z 
2025-08-17T02:10:13.2809557Z <a id="logistics_etl.tests"></a>
2025-08-17T02:10:13.2809702Z 
2025-08-17T02:10:13.2809772Z # logistics\_etl.tests
2025-08-17T02:10:13.2809889Z 
2025-08-17T02:10:13.2809971Z <a id="logistics_etl.flow"></a>
2025-08-17T02:10:13.2810110Z 
2025-08-17T02:10:13.2810179Z # logistics\_etl.flow
2025-08-17T02:10:13.2810299Z 
2025-08-17T02:10:13.2810378Z <a id="logistics_etl.client"></a>
2025-08-17T02:10:13.2810522Z 
2025-08-17T02:10:13.2810592Z # logistics\_etl.client
2025-08-17T02:10:13.2810711Z 
2025-08-17T02:10:13.2810786Z <a id="logistics_etl.cron"></a>
2025-08-17T02:10:13.2810922Z 
2025-08-17T02:10:13.2810997Z # logistics\_etl.cron
2025-08-17T02:10:13.2811107Z 
2025-08-17T02:10:13.2811183Z <a id="logistics_etl.db"></a>
2025-08-17T02:10:13.2811324Z 
2025-08-17T02:10:13.2811390Z # logistics\_etl.db
2025-08-17T02:10:13.2811497Z 
2025-08-17T02:10:13.2811582Z <a id="logistics_etl.repository"></a>
2025-08-17T02:10:13.2811746Z 
2025-08-17T02:10:13.2811828Z # logistics\_etl.repository
2025-08-17T02:10:13.2812095Z 
2025-08-17T02:10:13.2812170Z <a id="alert_bot"></a>
2025-08-17T02:10:13.2812284Z 
2025-08-17T02:10:13.2812347Z # alert\_bot
2025-08-17T02:10:13.2812445Z 
2025-08-17T02:10:13.2812531Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T02:10:13.2812692Z 
2025-08-17T02:10:13.2812769Z # alert\_bot.tests.test\_smoke
2025-08-17T02:10:13.2812912Z 
2025-08-17T02:10:13.2812989Z <a id="alert_bot.tests"></a>
2025-08-17T02:10:13.2813122Z 
2025-08-17T02:10:13.2813192Z # alert\_bot.tests
2025-08-17T02:10:13.2813301Z 
2025-08-17T02:10:13.2813379Z <a id="alert_bot.alert_bot"></a>
2025-08-17T02:10:13.2813520Z 
2025-08-17T02:10:13.2813596Z # alert\_bot.alert\_bot
2025-08-17T02:10:13.2813712Z 
2025-08-17T02:10:13.2813785Z <a id="alert_bot.rules"></a>
2025-08-17T02:10:13.2813924Z 
2025-08-17T02:10:13.2813989Z # alert\_bot.rules
2025-08-17T02:10:13.2814094Z 
2025-08-17T02:10:13.2814165Z <a id="common"></a>
2025-08-17T02:10:13.2814268Z 
2025-08-17T02:10:13.2814329Z # common
2025-08-17T02:10:13.2814421Z 
2025-08-17T02:10:13.2814504Z <a id="common.dsn"></a>
2025-08-17T02:10:13.2814618Z 
2025-08-17T02:10:13.2814681Z # common.dsn
2025-08-17T02:10:13.2814817Z 
2025-08-17T02:10:13.2814899Z <a id="common.dsn.build_dsn"></a>
2025-08-17T02:10:13.2815044Z 
2025-08-17T02:10:13.2815107Z #### build\_dsn
2025-08-17T02:10:13.2815210Z 
2025-08-17T02:10:13.2815273Z ```python
2025-08-17T02:10:13.2815455Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:10:13.2815695Z ```
2025-08-17T02:10:13.2815779Z 
2025-08-17T02:10:13.2815902Z Return a Postgres DSN, validating required variables.
2025-08-17T02:10:13.2816113Z 
2025-08-17T02:10:13.2816299Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T02:10:13.2816731Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T02:10:13.2817155Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T02:10:13.2817469Z missing.
2025-08-17T02:10:13.2817721Z 
2025-08-17T02:10:13.2817804Z <a id="common.models_vendor"></a>
2025-08-17T02:10:13.2817965Z 
2025-08-17T02:10:13.2818045Z # common.models\_vendor
2025-08-17T02:10:13.2818164Z 
2025-08-17T02:10:13.2818256Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T02:10:13.2818430Z 
2025-08-17T02:10:13.2818497Z ## Vendor Objects
2025-08-17T02:10:13.2818604Z 
2025-08-17T02:10:13.2818672Z ```python
2025-08-17T02:10:13.2818824Z class Vendor(Base)
2025-08-17T02:10:13.2818992Z ```
2025-08-17T02:10:13.2819078Z 
2025-08-17T02:10:13.2819157Z Vendor of inventory items.
2025-08-17T02:10:13.2819408Z 
2025-08-17T02:10:13.2819513Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T02:10:13.2819696Z 
2025-08-17T02:10:13.2819769Z ## VendorPrice Objects
2025-08-17T02:10:13.2819892Z 
2025-08-17T02:10:13.2819954Z ```python
2025-08-17T02:10:13.2820116Z class VendorPrice(Base)
2025-08-17T02:10:13.2820293Z ```
2025-08-17T02:10:13.2820373Z 
2025-08-17T02:10:13.2820480Z Association table linking vendors to pricing.
2025-08-17T02:10:13.2820670Z 
2025-08-17T02:10:13.2820752Z <a id="common.db_url"></a>
2025-08-17T02:10:13.2820885Z 
2025-08-17T02:10:13.2820950Z # common.db\_url
2025-08-17T02:10:13.2821054Z 
2025-08-17T02:10:13.2821137Z <a id="common.db_url.build_url"></a>
2025-08-17T02:10:13.2821299Z 
2025-08-17T02:10:13.2821361Z #### build\_url
2025-08-17T02:10:13.2821459Z 
2025-08-17T02:10:13.2821524Z ```python
2025-08-17T02:10:13.2821692Z def build_url(async_: bool = True) -> str
2025-08-17T02:10:13.2821917Z ```
2025-08-17T02:10:13.2821996Z 
2025-08-17T02:10:13.2822092Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:10:13.2822272Z 
2025-08-17T02:10:13.2822349Z <a id="common.keepa"></a>
2025-08-17T02:10:13.2822478Z 
2025-08-17T02:10:13.2822544Z # common.keepa
2025-08-17T02:10:13.2822650Z 
2025-08-17T02:10:13.2822722Z <a id="common.llm"></a>
2025-08-17T02:10:13.2822837Z 
2025-08-17T02:10:13.2822905Z # common.llm
2025-08-17T02:10:13.2822997Z 
2025-08-17T02:10:13.2823078Z <a id="common.settings"></a>
2025-08-17T02:10:13.2823222Z 
2025-08-17T02:10:13.2823288Z # common.settings
2025-08-17T02:10:13.2823513Z 
2025-08-17T02:10:13.2823581Z <a id="common.db"></a>
2025-08-17T02:10:13.2823701Z 
2025-08-17T02:10:13.2823762Z # common.db
2025-08-17T02:10:13.2823850Z 
2025-08-17T02:10:13.2823943Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T02:10:13.2824110Z 
2025-08-17T02:10:13.2824187Z #### build\_sqlalchemy\_url
2025-08-17T02:10:13.2824316Z 
2025-08-17T02:10:13.2824381Z ```python
2025-08-17T02:10:13.2824548Z def build_sqlalchemy_url() -> str
2025-08-17T02:10:13.2824758Z ```
2025-08-17T02:10:13.2824838Z 
2025-08-17T02:10:13.2824931Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:10:13.2825109Z 
2025-08-17T02:10:13.2825199Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T02:10:13.2825364Z 
2025-08-17T02:10:13.2825446Z #### build\_asyncpg\_dsn
2025-08-17T02:10:13.2825569Z 
2025-08-17T02:10:13.2825629Z ```python
2025-08-17T02:10:13.2825799Z def build_asyncpg_dsn() -> str
2025-08-17T02:10:13.2825993Z ```
2025-08-17T02:10:13.2826087Z 
2025-08-17T02:10:13.2826222Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:10:13.2826435Z 
2025-08-17T02:10:13.2826519Z <a id="common.db.refresh_mvs"></a>
2025-08-17T02:10:13.2826681Z 
2025-08-17T02:10:13.2826746Z #### refresh\_mvs
2025-08-17T02:10:13.2826849Z 
2025-08-17T02:10:13.2826913Z ```python
2025-08-17T02:10:13.2827101Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:10:13.2827351Z ```
2025-08-17T02:10:13.2827429Z 
2025-08-17T02:10:13.2827563Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:10:13.2827786Z 
2025-08-17T02:10:13.2827861Z <a id="common.config"></a>
2025-08-17T02:10:13.2827990Z 
2025-08-17T02:10:13.2828063Z # common.config
2025-08-17T02:10:13.2828167Z 
2025-08-17T02:10:13.2828240Z <a id="common.base"></a>
2025-08-17T02:10:13.2828360Z 
2025-08-17T02:10:13.2828431Z # common.base
2025-08-17T02:10:13.2828530Z 
2025-08-17T02:10:13.2828610Z <a id="common.base.Base"></a>
2025-08-17T02:10:13.2828759Z 
2025-08-17T02:10:13.2828958Z ## Base Objects
2025-08-17T02:10:13.2829066Z 
2025-08-17T02:10:13.2829128Z ```python
2025-08-17T02:10:13.2829425Z class Base(DeclarativeBase)
2025-08-17T02:10:13.2829641Z ```
2025-08-17T02:10:13.2829727Z 
2025-08-17T02:10:13.2829815Z Base class for SQLAlchemy models.
2025-08-17T02:10:13.2829969Z 
2025-08-17T02:10:13.2830047Z <a id="repricer"></a>
2025-08-17T02:10:13.2830167Z 
2025-08-17T02:10:13.2830230Z # repricer
2025-08-17T02:10:13.2830328Z 
2025-08-17T02:10:13.2830414Z <a id="repricer.app.schemas"></a>
2025-08-17T02:10:13.2830564Z 
2025-08-17T02:10:13.2830639Z # repricer.app.schemas
2025-08-17T02:10:13.2830766Z 
2025-08-17T02:10:13.2830848Z <a id="repricer.app.deps"></a>
2025-08-17T02:10:13.2830990Z 
2025-08-17T02:10:13.2831070Z # repricer.app.deps
2025-08-17T02:10:13.2831182Z 
2025-08-17T02:10:13.2831298Z Placeholder module for Keepa / SP-API clients.
2025-08-17T02:10:13.2831495Z 
2025-08-17T02:10:13.2831767Z <a id="repricer.app.logic"></a>
2025-08-17T02:10:13.2831929Z 
2025-08-17T02:10:13.2832021Z # repricer.app.logic
2025-08-17T02:10:13.2832148Z 
2025-08-17T02:10:13.2832242Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T02:10:13.2832417Z 
2025-08-17T02:10:13.2832485Z #### MIN\_MARGIN
2025-08-17T02:10:13.2832584Z 
2025-08-17T02:10:13.2832643Z 15 % ROI
2025-08-17T02:10:13.2832734Z 
2025-08-17T02:10:13.2832836Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T02:10:13.2833016Z 
2025-08-17T02:10:13.2840154Z #### compute\_price
2025-08-17T02:10:13.2840456Z 
2025-08-17T02:10:13.2840576Z ```python
2025-08-17T02:10:13.2841026Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T02:10:13.2841566Z ```
2025-08-17T02:10:13.2841715Z 
2025-08-17T02:10:13.2841911Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T02:10:13.2842410Z Replace with real competitive logic later.
2025-08-17T02:10:13.2842714Z 
2025-08-17T02:10:13.2842855Z <a id="repricer.app.main"></a>
2025-08-17T02:10:13.2843109Z 
2025-08-17T02:10:13.2843229Z # repricer.app.main
2025-08-17T02:10:13.2843434Z 
2025-08-17T02:10:13.2843799Z <a id="repricer.app"></a>
2025-08-17T02:10:13.2844035Z 
2025-08-17T02:10:13.2844167Z # repricer.app
2025-08-17T02:10:13.2844327Z 
2025-08-17T02:10:13.2844428Z <a id="repricer.tests.test_imports"></a>
2025-08-17T02:10:13.2844607Z 
2025-08-17T02:10:13.2844695Z # repricer.tests.test\_imports
2025-08-17T02:10:13.2844851Z 
2025-08-17T02:10:13.2844945Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T02:10:13.2845113Z 
2025-08-17T02:10:13.2845201Z # repricer.tests.test\_smoke
2025-08-17T02:10:13.2845344Z 
2025-08-17T02:10:13.2845421Z <a id="repricer.tests"></a>
2025-08-17T02:10:13.2845561Z 
2025-08-17T02:10:13.2845631Z # repricer.tests
2025-08-17T02:10:13.2845741Z 
2025-08-17T02:10:13.2845805Z <a id="db"></a>
2025-08-17T02:10:13.2845913Z 
2025-08-17T02:10:13.2845972Z # db
2025-08-17T02:10:13.2846058Z 
2025-08-17T02:10:13.2846139Z <a id="db.utils.views"></a>
2025-08-17T02:10:13.2846272Z 
2025-08-17T02:10:13.2846337Z # db.utils.views
2025-08-17T02:10:13.2846439Z 
2025-08-17T02:10:13.2846545Z <a id="db.utils.views.replace_view"></a>
2025-08-17T02:10:13.2846726Z 
2025-08-17T02:10:13.2846794Z #### replace\_view
2025-08-17T02:10:13.2846907Z 
2025-08-17T02:10:13.2846971Z ```python
2025-08-17T02:10:13.2847169Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T02:10:13.2847425Z ```
2025-08-17T02:10:13.2847508Z 
2025-08-17T02:10:13.2847603Z Drop and recreate a SQL view atomically.
2025-08-17T02:10:13.2847773Z 
2025-08-17T02:10:13.2847848Z <a id="db.utils"></a>
2025-08-17T02:10:13.2847965Z 
2025-08-17T02:10:13.2848033Z # db.utils
2025-08-17T02:10:13.2848122Z 
2025-08-17T02:10:13.2848199Z <a id="price_importer"></a>
2025-08-17T02:10:13.2848352Z 
2025-08-17T02:10:13.2848420Z # price\_importer
2025-08-17T02:10:13.2848525Z 
2025-08-17T02:10:13.2848635Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T02:10:13.2848823Z 
2025-08-17T02:10:13.2848911Z # price\_importer.services\_common.dsn
2025-08-17T02:10:13.2849076Z 
2025-08-17T02:10:13.2849388Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T02:10:13.2849802Z 
2025-08-17T02:10:13.2849865Z #### build\_dsn
2025-08-17T02:10:13.2849973Z 
2025-08-17T02:10:13.2850035Z ```python
2025-08-17T02:10:13.2850211Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:10:13.2850441Z ```
2025-08-17T02:10:13.2850522Z 
2025-08-17T02:10:13.2850594Z Return safe DSN.
2025-08-17T02:10:13.2850701Z 
2025-08-17T02:10:13.2851049Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T02:10:13.2851264Z 
2025-08-17T02:10:13.2851395Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T02:10:13.2851601Z 
2025-08-17T02:10:13.2851712Z # price\_importer.services\_common.models\_vendor
2025-08-17T02:10:13.2851907Z 
2025-08-17T02:10:13.2852010Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T02:10:13.2852197Z 
2025-08-17T02:10:13.2852293Z # price\_importer.services\_common.db\_url
2025-08-17T02:10:13.2852463Z 
2025-08-17T02:10:13.2852595Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T02:10:13.2852825Z 
2025-08-17T02:10:13.2852894Z #### build\_url
2025-08-17T02:10:13.2852994Z 
2025-08-17T02:10:13.2853055Z ```python
2025-08-17T02:10:13.2853230Z def build_url(async_: bool = True) -> str
2025-08-17T02:10:13.2853455Z ```
2025-08-17T02:10:13.2853534Z 
2025-08-17T02:10:13.2853629Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:10:13.2853803Z 
2025-08-17T02:10:13.2853910Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T02:10:13.2854092Z 
2025-08-17T02:10:13.2854185Z # price\_importer.services\_common.keepa
2025-08-17T02:10:13.2854356Z 
2025-08-17T02:10:13.2854454Z <a id="price_importer.services_common.llm"></a>
2025-08-17T02:10:13.2854634Z 
2025-08-17T02:10:13.2854726Z # price\_importer.services\_common.llm
2025-08-17T02:10:13.2854887Z 
2025-08-17T02:10:13.2854999Z <a id="price_importer.services_common.settings"></a>
2025-08-17T02:10:13.2855189Z 
2025-08-17T02:10:13.2855288Z # price\_importer.services\_common.settings
2025-08-17T02:10:13.2855456Z 
2025-08-17T02:10:13.2855560Z <a id="price_importer.services_common.db"></a>
2025-08-17T02:10:13.2855880Z 
2025-08-17T02:10:13.2855971Z # price\_importer.services\_common.db
2025-08-17T02:10:13.2856131Z 
2025-08-17T02:10:13.2856289Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T02:10:13.2856527Z 
2025-08-17T02:10:13.2856603Z #### build\_sqlalchemy\_url
2025-08-17T02:10:13.2856733Z 
2025-08-17T02:10:13.2856801Z ```python
2025-08-17T02:10:13.2856973Z def build_sqlalchemy_url() -> str
2025-08-17T02:10:13.2857188Z ```
2025-08-17T02:10:13.2857268Z 
2025-08-17T02:10:13.2857361Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:10:13.2857537Z 
2025-08-17T02:10:13.2857683Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T02:10:13.2857909Z 
2025-08-17T02:10:13.2857988Z #### build\_asyncpg\_dsn
2025-08-17T02:10:13.2858112Z 
2025-08-17T02:10:13.2858172Z ```python
2025-08-17T02:10:13.2858348Z def build_asyncpg_dsn() -> str
2025-08-17T02:10:13.2858546Z ```
2025-08-17T02:10:13.2858639Z 
2025-08-17T02:10:13.2858773Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:10:13.2858983Z 
2025-08-17T02:10:13.2859110Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T02:10:13.2859436Z 
2025-08-17T02:10:13.2859503Z #### refresh\_mvs
2025-08-17T02:10:13.2859608Z 
2025-08-17T02:10:13.2859675Z ```python
2025-08-17T02:10:13.2859870Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:10:13.2860123Z ```
2025-08-17T02:10:13.2860204Z 
2025-08-17T02:10:13.2860338Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:10:13.2860560Z 
2025-08-17T02:10:13.2860654Z <a id="price_importer.services_common"></a>
2025-08-17T02:10:13.2860824Z 
2025-08-17T02:10:13.2860915Z # price\_importer.services\_common
2025-08-17T02:10:13.2861073Z 
2025-08-17T02:10:13.2861175Z <a id="price_importer.services_common.base"></a>
2025-08-17T02:10:13.2861366Z 
2025-08-17T02:10:13.2861457Z # price\_importer.services\_common.base
2025-08-17T02:10:13.2861746Z 
2025-08-17T02:10:13.2861839Z <a id="price_importer.normaliser"></a>
2025-08-17T02:10:13.2862021Z 
2025-08-17T02:10:13.2862103Z # price\_importer.normaliser
2025-08-17T02:10:13.2862244Z 
2025-08-17T02:10:13.2862357Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T02:10:13.2862538Z 
2025-08-17T02:10:13.2862625Z # price\_importer.common.models\_vendor
2025-08-17T02:10:13.2862794Z 
2025-08-17T02:10:13.2862885Z <a id="price_importer.common.db_url"></a>
2025-08-17T02:10:13.2863056Z 
2025-08-17T02:10:13.2863140Z # price\_importer.common.db\_url
2025-08-17T02:10:13.2863295Z 
2025-08-17T02:10:13.2863400Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T02:10:13.2863588Z 
2025-08-17T02:10:13.2863661Z #### make\_dsn
2025-08-17T02:10:13.2863760Z 
2025-08-17T02:10:13.2863821Z ```python
2025-08-17T02:10:13.2864002Z def make_dsn(async_: bool = False) -> str
2025-08-17T02:10:13.2864223Z ```
2025-08-17T02:10:13.2864311Z 
2025-08-17T02:10:13.2864429Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T02:10:13.2864638Z 
2025-08-17T02:10:13.2864750Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T02:10:13.2864942Z 
2025-08-17T02:10:13.2865004Z #### build\_url
2025-08-17T02:10:13.2865103Z 
2025-08-17T02:10:13.2865168Z ```python
2025-08-17T02:10:13.2865337Z def build_url(async_: bool = False) -> str
2025-08-17T02:10:13.2865562Z ```
2025-08-17T02:10:13.2865639Z 
2025-08-17T02:10:13.2865758Z Return Postgres DSN built from environment variables.
2025-08-17T02:10:13.2865965Z 
2025-08-17T02:10:13.2866052Z <a id="price_importer.common"></a>
2025-08-17T02:10:13.2866202Z 
2025-08-17T02:10:13.2866280Z # price\_importer.common
2025-08-17T02:10:13.2866407Z 
2025-08-17T02:10:13.2866496Z <a id="price_importer.common.base"></a>
2025-08-17T02:10:13.2866668Z 
2025-08-17T02:10:13.2866757Z # price\_importer.common.base
2025-08-17T02:10:13.2866902Z 
2025-08-17T02:10:13.2867003Z <a id="price_importer.tests.conftest"></a>
2025-08-17T02:10:13.2867183Z 
2025-08-17T02:10:13.2867270Z # price\_importer.tests.conftest
2025-08-17T02:10:13.2867542Z 
2025-08-17T02:10:13.2867648Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T02:10:13.2867825Z 
2025-08-17T02:10:13.2867911Z # price\_importer.tests.test\_reader
2025-08-17T02:10:13.2868069Z 
2025-08-17T02:10:13.2868175Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T02:10:13.2868353Z 
2025-08-17T02:10:13.2868438Z # price\_importer.tests.test\_imports
2025-08-17T02:10:13.2868604Z 
2025-08-17T02:10:13.2868699Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T02:10:13.2868870Z 
2025-08-17T02:10:13.2868959Z # price\_importer.tests.test\_smoke
2025-08-17T02:10:13.2869118Z 
2025-08-17T02:10:13.2869352Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T02:10:13.2869547Z 
2025-08-17T02:10:13.2869644Z # price\_importer.tests.test\_normaliser
2025-08-17T02:10:13.2869810Z 
2025-08-17T02:10:13.2869895Z <a id="price_importer.tests"></a>
2025-08-17T02:10:13.2870050Z 
2025-08-17T02:10:13.2870125Z # price\_importer.tests
2025-08-17T02:10:13.2870252Z 
2025-08-17T02:10:13.2870349Z <a id="price_importer.reader"></a>
2025-08-17T02:10:13.2870500Z 
2025-08-17T02:10:13.2870576Z # price\_importer.reader
2025-08-17T02:10:13.2870702Z 
2025-08-17T02:10:13.2870805Z <a id="price_importer.reader.load_file"></a>
2025-08-17T02:10:13.2870983Z 
2025-08-17T02:10:13.2871048Z #### load\_file
2025-08-17T02:10:13.2871156Z 
2025-08-17T02:10:13.2871219Z ```python
2025-08-17T02:10:13.2871394Z def load_file(path: str | Path) -> Any
2025-08-17T02:10:13.2871620Z ```
2025-08-17T02:10:13.2871704Z 
2025-08-17T02:10:13.2871797Z Return DataFrame from CSV or Excel file.
2025-08-17T02:10:13.2871964Z 
2025-08-17T02:10:13.2872072Z Raises RuntimeError if pandas is unavailable.
2025-08-17T02:10:13.2872259Z 
2025-08-17T02:10:13.2872374Z <a id="price_importer.repository"></a>
2025-08-17T02:10:13.2872539Z 
2025-08-17T02:10:13.2872627Z # price\_importer.repository
2025-08-17T02:10:13.2872768Z 
2025-08-17T02:10:13.2872852Z <a id="price_importer.import"></a>
2025-08-17T02:10:13.2873010Z 
2025-08-17T02:10:13.2873209Z # price\_importer.import
2025-08-17T02:10:13.2873342Z 
2025-08-17T02:10:13.2873415Z <a id="fees_h10"></a>
2025-08-17T02:10:13.2873535Z 
2025-08-17T02:10:13.2873597Z # fees\_h10
2025-08-17T02:10:13.2873690Z 
2025-08-17T02:10:13.2873774Z <a id="fees_h10.worker"></a>
2025-08-17T02:10:13.2873906Z 
2025-08-17T02:10:13.2873974Z # fees\_h10.worker
2025-08-17T02:10:13.2874087Z 
2025-08-17T02:10:13.2874183Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T02:10:13.2874358Z 
2025-08-17T02:10:13.2874430Z #### list\_active\_asins
2025-08-17T02:10:13.2874556Z 
2025-08-17T02:10:13.2874619Z ```python
2025-08-17T02:10:13.2874793Z def list_active_asins() -> list[str]
2025-08-17T02:10:13.2875006Z ```
2025-08-17T02:10:13.2875088Z 
2025-08-17T02:10:13.2875208Z Return known ASINs or an empty list if unavailable.
2025-08-17T02:10:13.2875407Z 
2025-08-17T02:10:13.2875491Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T02:10:13.2875656Z 
2025-08-17T02:10:13.2875734Z # fees\_h10.tests.test\_smoke
2025-08-17T02:10:13.2875879Z 
2025-08-17T02:10:13.2875958Z <a id="fees_h10.tests"></a>
2025-08-17T02:10:13.2876095Z 
2025-08-17T02:10:13.2876161Z # fees\_h10.tests
2025-08-17T02:10:13.2876264Z 
2025-08-17T02:10:13.2876342Z <a id="fees_h10.client"></a>
2025-08-17T02:10:13.2876473Z 
2025-08-17T02:10:13.2876536Z # fees\_h10.client
2025-08-17T02:10:13.2876643Z 
2025-08-17T02:10:13.2876723Z <a id="fees_h10.repository"></a>
2025-08-17T02:10:13.2876868Z 
2025-08-17T02:10:13.2876938Z # fees\_h10.repository
2025-08-17T02:10:13.2877058Z 
2025-08-17T02:10:13.2877125Z <a id="emailer"></a>
2025-08-17T02:10:13.2877235Z 
2025-08-17T02:10:13.2877300Z # emailer
2025-08-17T02:10:13.2877387Z 
2025-08-17T02:10:13.2877489Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T02:10:13.2877666Z 
2025-08-17T02:10:13.2877758Z # emailer.tests.test\_import\_emailer
2025-08-17T02:10:13.2877917Z 
2025-08-17T02:10:13.2878001Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T02:10:13.2878167Z 
2025-08-17T02:10:13.2878246Z # emailer.tests.test\_smoke
2025-08-17T02:10:13.2878612Z 
2025-08-17T02:10:13.2878693Z <a id="emailer.tests"></a>
2025-08-17T02:10:13.2878821Z 
2025-08-17T02:10:13.2878886Z # emailer.tests
2025-08-17T02:10:13.2878991Z 
2025-08-17T02:10:13.2879079Z <a id="emailer.generate_body"></a>
2025-08-17T02:10:13.2879338Z 
2025-08-17T02:10:13.2879416Z # emailer.generate\_body
2025-08-17T02:10:13.2879547Z 
2025-08-17T02:10:13.2879616Z <a id="llm_server"></a>
2025-08-17T02:10:13.2879732Z 
2025-08-17T02:10:13.2879794Z # llm\_server
2025-08-17T02:10:13.2879895Z 
2025-08-17T02:10:13.2879970Z <a id="llm_server.app"></a>
2025-08-17T02:10:13.2880100Z 
2025-08-17T02:10:13.2880173Z # llm\_server.app
2025-08-17T02:10:13.2880282Z 
