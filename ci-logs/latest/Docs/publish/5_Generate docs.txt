2025-08-18T23:28:39.5158856Z ##[group]Run pydoc-markdown
2025-08-18T23:28:39.5159186Z [36;1mpydoc-markdown[0m
2025-08-18T23:28:39.5199351Z shell: /usr/bin/bash -e {0}
2025-08-18T23:28:39.5199582Z env:
2025-08-18T23:28:39.5199832Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:28:39.5200233Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T23:28:39.5200625Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:28:39.5200965Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:28:39.5201307Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:28:39.5201639Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T23:28:39.5201931Z ##[endgroup]
2025-08-18T23:28:39.8714648Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T23:28:39.8715361Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T23:28:39.8715840Z In "pydoc-markdown.yml"
2025-08-18T23:28:39.8716577Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T23:28:39.8717388Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T23:28:39.8718144Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T23:28:39.8718673Z 
2025-08-18T23:28:40.1852681Z <a id="__init__"></a>
2025-08-18T23:28:40.1853183Z 
2025-08-18T23:28:40.1853324Z # \_\_init\_\_
2025-08-18T23:28:40.1853544Z 
2025-08-18T23:28:40.1853686Z <a id="api"></a>
2025-08-18T23:28:40.1853906Z 
2025-08-18T23:28:40.1854043Z # api
2025-08-18T23:28:40.1854226Z 
2025-08-18T23:28:40.1854385Z <a id="api.errors"></a>
2025-08-18T23:28:40.1854640Z 
2025-08-18T23:28:40.1854790Z # api.errors
2025-08-18T23:28:40.1855002Z 
2025-08-18T23:28:40.1855173Z <a id="api.sentry_config"></a>
2025-08-18T23:28:40.1855477Z 
2025-08-18T23:28:40.1855641Z # api.sentry\_config
2025-08-18T23:28:40.1855904Z 
2025-08-18T23:28:40.1856346Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T23:28:40.1856756Z 
2025-08-18T23:28:40.1856950Z # api.tests.test\_sentry\_scrub
2025-08-18T23:28:40.1857323Z 
2025-08-18T23:28:40.1857533Z <a id="api.tests.test_errors_json"></a>
2025-08-18T23:28:40.1857902Z 
2025-08-18T23:28:40.1858083Z # api.tests.test\_errors\_json
2025-08-18T23:28:40.1858403Z 
2025-08-18T23:28:40.1858578Z <a id="api.tests.test_llm"></a>
2025-08-18T23:28:40.1858889Z 
2025-08-18T23:28:40.1859053Z # api.tests.test\_llm
2025-08-18T23:28:40.1859318Z 
2025-08-18T23:28:40.1859508Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T23:28:40.1859866Z 
2025-08-18T23:28:40.1860043Z # api.tests.test\_sentry\_event
2025-08-18T23:28:40.1860344Z 
2025-08-18T23:28:40.1860599Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T23:28:40.1861041Z 
2025-08-18T23:28:40.1861237Z ## DummyTransport Objects
2025-08-18T23:28:40.1861529Z 
2025-08-18T23:28:40.1861668Z ```python
2025-08-18T23:28:40.1862038Z class DummyTransport()
2025-08-18T23:28:40.1862424Z ```
2025-08-18T23:28:40.1862610Z 
2025-08-18T23:28:40.1862977Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T23:28:40.1863954Z 
2025-08-18T23:28:40.1864122Z #### capture\_envelope
2025-08-18T23:28:40.1864370Z 
2025-08-18T23:28:40.1864507Z ```python
2025-08-18T23:28:40.1864882Z def capture_envelope(envelope)
2025-08-18T23:28:40.1865308Z ```
2025-08-18T23:28:40.1865494Z 
2025-08-18T23:28:40.1865758Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T23:28:40.1866403Z 
2025-08-18T23:28:40.1866590Z <a id="api.tests.test_cors"></a>
2025-08-18T23:28:40.1866907Z 
2025-08-18T23:28:40.1867063Z # api.tests.test\_cors
2025-08-18T23:28:40.1867314Z 
2025-08-18T23:28:40.1867501Z <a id="api.tests.test_imports"></a>
2025-08-18T23:28:40.1867833Z 
2025-08-18T23:28:40.1867997Z # api.tests.test\_imports
2025-08-18T23:28:40.1868249Z 
2025-08-18T23:28:40.1868397Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T23:28:40.1868672Z 
2025-08-18T23:28:40.1868819Z # api.tests.test\_rate\_limit
2025-08-18T23:28:40.1869056Z 
2025-08-18T23:28:40.1869217Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T23:28:40.1869819Z 
2025-08-18T23:28:40.1869936Z #### app
2025-08-18T23:28:40.1870088Z 
2025-08-18T23:28:40.1870198Z noqa: E402
2025-08-18T23:28:40.1870356Z 
2025-08-18T23:28:40.1870505Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T23:28:40.1870783Z 
2025-08-18T23:28:40.1870920Z # api.tests.test\_entrypoint
2025-08-18T23:28:40.1871162Z 
2025-08-18T23:28:40.1871308Z <a id="api.tests.test_health"></a>
2025-08-18T23:28:40.1871580Z 
2025-08-18T23:28:40.1871687Z # api.tests.test\_health
2025-08-18T23:28:40.1871823Z 
2025-08-18T23:28:40.1871908Z <a id="api.logging_config"></a>
2025-08-18T23:28:40.1872062Z 
2025-08-18T23:28:40.1872138Z # api.logging\_config
2025-08-18T23:28:40.1872262Z 
2025-08-18T23:28:40.1872346Z <a id="api.migrations.env"></a>
2025-08-18T23:28:40.1872502Z 
2025-08-18T23:28:40.1872578Z # api.migrations.env
2025-08-18T23:28:40.1872698Z 
2025-08-18T23:28:40.1872830Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T23:28:40.1873044Z 
2025-08-18T23:28:40.1873152Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T23:28:40.1873361Z 
2025-08-18T23:28:40.1873474Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T23:28:40.1873676Z 
2025-08-18T23:28:40.1873772Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T23:28:40.1873967Z 
2025-08-18T23:28:40.1874127Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T23:28:40.1874380Z 
2025-08-18T23:28:40.1874529Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T23:28:40.1874762Z 
2025-08-18T23:28:40.1874890Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T23:28:40.1875116Z 
2025-08-18T23:28:40.1875232Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T23:28:40.1875425Z 
2025-08-18T23:28:40.1875556Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T23:28:40.1875756Z 
2025-08-18T23:28:40.1875860Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T23:28:40.1876221Z 
2025-08-18T23:28:40.1876400Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T23:28:40.1876620Z 
2025-08-18T23:28:40.1876732Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T23:28:40.1876929Z 
2025-08-18T23:28:40.1877048Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T23:28:40.1877242Z 
2025-08-18T23:28:40.1877359Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T23:28:40.1877543Z 
2025-08-18T23:28:40.1877667Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T23:28:40.1877875Z 
2025-08-18T23:28:40.1877983Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T23:28:40.1878168Z 
2025-08-18T23:28:40.1878307Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T23:28:40.1878530Z 
2025-08-18T23:28:40.1878653Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T23:28:40.1878851Z 
2025-08-18T23:28:40.1878981Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T23:28:40.1879183Z 
2025-08-18T23:28:40.1879293Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T23:28:40.1879634Z 
2025-08-18T23:28:40.1879912Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T23:28:40.1880210Z 
2025-08-18T23:28:40.1880339Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T23:28:40.1880573Z 
2025-08-18T23:28:40.1880685Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T23:28:40.1880889Z 
2025-08-18T23:28:40.1880987Z # api.migrations.versions.0001\_baseline
2025-08-18T23:28:40.1881159Z 
2025-08-18T23:28:40.1881257Z <a id="api.migrations.versions"></a>
2025-08-18T23:28:40.1881420Z 
2025-08-18T23:28:40.1881504Z # api.migrations.versions
2025-08-18T23:28:40.1881641Z 
2025-08-18T23:28:40.1881734Z <a id="api.migrations"></a>
2025-08-18T23:28:40.1881869Z 
2025-08-18T23:28:40.1881941Z # api.migrations
2025-08-18T23:28:40.1882057Z 
2025-08-18T23:28:40.1882126Z <a id="api.db"></a>
2025-08-18T23:28:40.1882237Z 
2025-08-18T23:28:40.1882307Z # api.db
2025-08-18T23:28:40.1882405Z 
2025-08-18T23:28:40.1882486Z <a id="api.routes.stats"></a>
2025-08-18T23:28:40.1882777Z 
2025-08-18T23:28:40.1882856Z # api.routes.stats
2025-08-18T23:28:40.1882966Z 
2025-08-18T23:28:40.1883055Z <a id="api.routes.stats.kpi"></a>
2025-08-18T23:28:40.1883222Z 
2025-08-18T23:28:40.1883287Z #### kpi
2025-08-18T23:28:40.1883372Z 
2025-08-18T23:28:40.1883438Z ```python
2025-08-18T23:28:40.1883625Z @router.get("/stats/kpi")
2025-08-18T23:28:40.1883966Z def kpi() -> List[Dict[str, int]]
2025-08-18T23:28:40.1884178Z ```
2025-08-18T23:28:40.1884266Z 
2025-08-18T23:28:40.1884355Z Return KPI metrics (mock).
2025-08-18T23:28:40.1884488Z 
2025-08-18T23:28:40.1884589Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T23:28:40.1884775Z 
2025-08-18T23:28:40.1884847Z #### roi\_by\_vendor
2025-08-18T23:28:40.1884958Z 
2025-08-18T23:28:40.1885026Z ```python
2025-08-18T23:28:40.1885206Z @router.get("/stats/roi_by_vendor")
2025-08-18T23:28:40.1885460Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T23:28:40.1885693Z ```
2025-08-18T23:28:40.1885773Z 
2025-08-18T23:28:40.1885872Z Return ROI percent by vendor.
2025-08-18T23:28:40.1886014Z 
2025-08-18T23:28:40.1886284Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T23:28:40.1886466Z 
2025-08-18T23:28:40.1886533Z #### roi\_trend
2025-08-18T23:28:40.1886637Z 
2025-08-18T23:28:40.1886700Z ```python
2025-08-18T23:28:40.1886871Z @router.get("/stats/roi_trend")
2025-08-18T23:28:40.1887112Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T23:28:40.1887346Z ```
2025-08-18T23:28:40.1887427Z 
2025-08-18T23:28:40.1887511Z Return 30-day ROI trend.
2025-08-18T23:28:40.1887638Z 
2025-08-18T23:28:40.1887720Z <a id="api.routes.roi"></a>
2025-08-18T23:28:40.1887860Z 
2025-08-18T23:28:40.1887931Z # api.routes.roi
2025-08-18T23:28:40.1888037Z 
2025-08-18T23:28:40.1888122Z <a id="api.routes.health"></a>
2025-08-18T23:28:40.1888272Z 
2025-08-18T23:28:40.1888345Z # api.routes.health
2025-08-18T23:28:40.1888455Z 
2025-08-18T23:28:40.1888553Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T23:28:40.1888723Z 
2025-08-18T23:28:40.1888802Z #### MAX\_SKEW
2025-08-18T23:28:40.1888911Z 
2025-08-18T23:28:40.1888977Z seconds
2025-08-18T23:28:40.1889066Z 
2025-08-18T23:28:40.1889162Z <a id="api.routes.health.health"></a>
2025-08-18T23:28:40.1889336Z 
2025-08-18T23:28:40.1889402Z #### health
2025-08-18T23:28:40.1889492Z 
2025-08-18T23:28:40.1889563Z ```python
2025-08-18T23:28:40.1889755Z @router.get("/health", include_in_schema=False)
2025-08-18T23:28:40.1890137Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T23:28:40.1890485Z ```
2025-08-18T23:28:40.1890574Z 
2025-08-18T23:28:40.1890692Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T23:28:40.1890892Z 
2025-08-18T23:28:40.1890983Z <a id="api.routes.repository"></a>
2025-08-18T23:28:40.1891146Z 
2025-08-18T23:28:40.1891225Z # api.routes.repository
2025-08-18T23:28:40.1891349Z 
2025-08-18T23:28:40.1891430Z <a id="api.routes"></a>
2025-08-18T23:28:40.1891549Z 
2025-08-18T23:28:40.1891617Z # api.routes
2025-08-18T23:28:40.1891717Z 
2025-08-18T23:28:40.1891939Z <a id="api.models.fee"></a>
2025-08-18T23:28:40.1892073Z 
2025-08-18T23:28:40.1892142Z # api.models.fee
2025-08-18T23:28:40.1892255Z 
2025-08-18T23:28:40.1892328Z <a id="api.models"></a>
2025-08-18T23:28:40.1892446Z 
2025-08-18T23:28:40.1892519Z # api.models
2025-08-18T23:28:40.1892615Z 
2025-08-18T23:28:40.1892696Z <a id="api.roi_repository"></a>
2025-08-18T23:28:40.1892840Z 
2025-08-18T23:28:40.1892922Z # api.roi\_repository
2025-08-18T23:28:40.1893037Z 
2025-08-18T23:28:40.1893109Z <a id="api.main"></a>
2025-08-18T23:28:40.1893226Z 
2025-08-18T23:28:40.1893291Z # api.main
2025-08-18T23:28:40.1893383Z 
2025-08-18T23:28:40.1893462Z <a id="api.main.ready"></a>
2025-08-18T23:28:40.1893603Z 
2025-08-18T23:28:40.1893669Z #### ready
2025-08-18T23:28:40.1893759Z 
2025-08-18T23:28:40.1893830Z ```python
2025-08-18T23:28:40.1894088Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T23:28:40.1894529Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T23:28:40.1895004Z                                                                       str]
2025-08-18T23:28:40.1895243Z ```
2025-08-18T23:28:40.1895328Z 
2025-08-18T23:28:40.1895425Z Return 200 only when migrations are at head.
2025-08-18T23:28:40.1895607Z 
2025-08-18T23:28:40.1895682Z <a id="api.config"></a>
2025-08-18T23:28:40.1895801Z 
2025-08-18T23:28:40.1895875Z # api.config
2025-08-18T23:28:40.1895971Z 
2025-08-18T23:28:40.1896177Z <a id="etl"></a>
2025-08-18T23:28:40.1896324Z 
2025-08-18T23:28:40.1896387Z # etl
2025-08-18T23:28:40.1896476Z 
2025-08-18T23:28:40.1896559Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T23:28:40.1896716Z 
2025-08-18T23:28:40.1896790Z # etl.fba\_fee\_ingestor
2025-08-18T23:28:40.1896915Z 
2025-08-18T23:28:40.1897002Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T23:28:40.1897147Z 
2025-08-18T23:28:40.1897223Z # etl.sp\_fees\_ingestor
2025-08-18T23:28:40.1897349Z 
2025-08-18T23:28:40.1897430Z <a id="etl.keepa_ingestor"></a>
2025-08-18T23:28:40.1897574Z 
2025-08-18T23:28:40.1897651Z # etl.keepa\_ingestor
2025-08-18T23:28:40.1897774Z 
2025-08-18T23:28:40.1897843Z <a id="etl.db"></a>
2025-08-18T23:28:40.1897950Z 
2025-08-18T23:28:40.1898021Z # etl.db
2025-08-18T23:28:40.1898108Z 
2025-08-18T23:28:40.1898199Z <a id="etl.dialects.schemas"></a>
2025-08-18T23:28:40.1898351Z 
2025-08-18T23:28:40.1898426Z # etl.dialects.schemas
2025-08-18T23:28:40.1898546Z 
2025-08-18T23:28:40.1898658Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T23:28:40.1898845Z 
2025-08-18T23:28:40.1898936Z # etl.dialects.amazon\_reimbursements
2025-08-18T23:28:40.1899104Z 
2025-08-18T23:28:40.1899200Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T23:28:40.1899374Z 
2025-08-18T23:28:40.1899462Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T23:28:40.1899622Z 
2025-08-18T23:28:40.1899713Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T23:28:40.1899879Z 
2025-08-18T23:28:40.1899968Z # etl.dialects.amazon\_returns
2025-08-18T23:28:40.1900109Z 
2025-08-18T23:28:40.1900213Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T23:28:40.1900392Z 
2025-08-18T23:28:40.1900477Z # etl.dialects.amazon\_fee\_preview
2025-08-18T23:28:40.1900633Z 
2025-08-18T23:28:40.1900742Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T23:28:40.1900935Z 
2025-08-18T23:28:40.1901028Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T23:28:40.1901193Z 
2025-08-18T23:28:40.1901297Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T23:28:40.1901471Z 
2025-08-18T23:28:40.1901558Z # etl.dialects.amazon\_settlements
2025-08-18T23:28:40.1901717Z 
2025-08-18T23:28:40.1901794Z <a id="etl.dialects"></a>
2025-08-18T23:28:40.1901920Z 
2025-08-18T23:28:40.1901987Z # etl.dialects
2025-08-18T23:28:40.1902092Z 
2025-08-18T23:28:40.1902162Z <a id="ingest"></a>
2025-08-18T23:28:40.1902277Z 
2025-08-18T23:28:40.1902345Z # ingest
2025-08-18T23:28:40.1902434Z 
2025-08-18T23:28:40.1902519Z <a id="ingest.maintenance"></a>
2025-08-18T23:28:40.1902661Z 
2025-08-18T23:28:40.1902743Z # ingest.maintenance
2025-08-18T23:28:40.1902988Z 
2025-08-18T23:28:40.1903073Z <a id="ingest.copy_loader"></a>
2025-08-18T23:28:40.1903220Z 
2025-08-18T23:28:40.1903293Z # ingest.copy\_loader
2025-08-18T23:28:40.1903411Z 
2025-08-18T23:28:40.1903520Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T23:28:40.1903706Z 
2025-08-18T23:28:40.1903782Z #### copy\_df\_via\_temp
2025-08-18T23:28:40.1903906Z 
2025-08-18T23:28:40.1903980Z ```python
2025-08-18T23:28:40.1904153Z def copy_df_via_temp(engine: Engine,
2025-08-18T23:28:40.1904396Z                      df: pd.DataFrame,
2025-08-18T23:28:40.1904639Z                      target_table: str,
2025-08-18T23:28:40.1904864Z                      *,
2025-08-18T23:28:40.1905072Z                      target_schema: Optional[str] = None,
2025-08-18T23:28:40.1905384Z                      columns: Sequence[str],
2025-08-18T23:28:40.1905664Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T23:28:40.1905953Z                      analyze_after: bool = False,
2025-08-18T23:28:40.1906689Z                      connection: Any | None = None) -> int
2025-08-18T23:28:40.1906944Z ```
2025-08-18T23:28:40.1907034Z 
2025-08-18T23:28:40.1907196Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T23:28:40.1907441Z 
2025-08-18T23:28:40.1907533Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T23:28:40.1907693Z 
2025-08-18T23:28:40.1907784Z # ingest.tests.test\_smoke
2025-08-18T23:28:40.1907918Z 
2025-08-18T23:28:40.1907996Z <a id="ingest.tests"></a>
2025-08-18T23:28:40.1908129Z 
2025-08-18T23:28:40.1908198Z # ingest.tests
2025-08-18T23:28:40.1908302Z 
2025-08-18T23:28:40.1908387Z <a id="ingest.upload_router"></a>
2025-08-18T23:28:40.1908543Z 
2025-08-18T23:28:40.1908619Z # ingest.upload\_router
2025-08-18T23:28:40.1908743Z 
2025-08-18T23:28:40.1908831Z <a id="ingest.email_watcher"></a>
2025-08-18T23:28:40.1908976Z 
2025-08-18T23:28:40.1909050Z # ingest.email\_watcher
2025-08-18T23:28:40.1909171Z 
2025-08-18T23:28:40.1909258Z <a id="ingest.email_watcher.main"></a>
2025-08-18T23:28:40.1909430Z 
2025-08-18T23:28:40.1909493Z #### main
2025-08-18T23:28:40.1909587Z 
2025-08-18T23:28:40.1909652Z ```python
2025-08-18T23:28:40.1909828Z def main() -> dict[str, str]
2025-08-18T23:28:40.1910024Z ```
2025-08-18T23:28:40.1910110Z 
2025-08-18T23:28:40.1910256Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T23:28:40.1910492Z 
2025-08-18T23:28:40.1910630Z Returns {"status": "success"} when processing completes.
2025-08-18T23:28:40.1910839Z 
2025-08-18T23:28:40.1910918Z <a id="ingest.tasks"></a>
2025-08-18T23:28:40.1911051Z 
2025-08-18T23:28:40.1911118Z # ingest.tasks
2025-08-18T23:28:40.1911220Z 
2025-08-18T23:28:40.1911322Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T23:28:40.1911497Z 
2025-08-18T23:28:40.1911571Z #### task\_import\_file
2025-08-18T23:28:40.1911689Z 
2025-08-18T23:28:40.1911758Z ```python
2025-08-18T23:28:40.1911965Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T23:28:40.1912251Z def task_import_file(self: Any,
2025-08-18T23:28:40.1912471Z                      uri: str,
2025-08-18T23:28:40.1912699Z                      report_type: Optional[str] = None,
2025-08-18T23:28:40.1912974Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T23:28:40.1913216Z ```
2025-08-18T23:28:40.1913300Z 
2025-08-18T23:28:40.1913436Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T23:28:40.1913645Z 
2025-08-18T23:28:40.1913727Z <a id="ingest.celery_app"></a>
2025-08-18T23:28:40.1913872Z 
2025-08-18T23:28:40.1913945Z # ingest.celery\_app
2025-08-18T23:28:40.1914063Z 
2025-08-18T23:28:40.1914145Z <a id="ingest.ingest_router"></a>
2025-08-18T23:28:40.1914303Z 
2025-08-18T23:28:40.1914378Z # ingest.ingest\_router
2025-08-18T23:28:40.1914495Z 
2025-08-18T23:28:40.1914580Z <a id="logistics_etl"></a>
2025-08-18T23:28:40.1914709Z 
2025-08-18T23:28:40.1914777Z # logistics\_etl
2025-08-18T23:28:40.1914892Z 
2025-08-18T23:28:40.1914968Z Daily logistics ETL job.
2025-08-18T23:28:40.1915098Z 
2025-08-18T23:28:40.1915462Z <a id="logistics_etl.__main__"></a>
2025-08-18T23:28:40.1915630Z 
2025-08-18T23:28:40.1915708Z # logistics\_etl.\_\_main\_\_
2025-08-18T23:28:40.1915845Z 
2025-08-18T23:28:40.1915931Z <a id="logistics_etl.dsn"></a>
2025-08-18T23:28:40.1916234Z 
2025-08-18T23:28:40.1916368Z # logistics\_etl.dsn
2025-08-18T23:28:40.1916502Z 
2025-08-18T23:28:40.1916622Z Local DSN builder to avoid cross-service dependency.
2025-08-18T23:28:40.1916830Z 
2025-08-18T23:28:40.1916921Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T23:28:40.1917094Z 
2025-08-18T23:28:40.1917161Z #### build\_dsn
2025-08-18T23:28:40.1917264Z 
2025-08-18T23:28:40.1917334Z ```python
2025-08-18T23:28:40.1917508Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:28:40.1917738Z ```
2025-08-18T23:28:40.1917824Z 
2025-08-18T23:28:40.1917964Z Return a Postgres DSN assembled from environment variables.
2025-08-18T23:28:40.1918196Z 
2025-08-18T23:28:40.1918346Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T23:28:40.1918879Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T23:28:40.1919235Z error when any required variable is missing.
2025-08-18T23:28:40.1919411Z 
2025-08-18T23:28:40.1919517Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T23:28:40.1919691Z 
2025-08-18T23:28:40.1919775Z # logistics\_etl.tests.conftest
2025-08-18T23:28:40.1919926Z 
2025-08-18T23:28:40.1920031Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T23:28:40.1920215Z 
2025-08-18T23:28:40.1920306Z # logistics\_etl.tests.test\_repository
2025-08-18T23:28:40.1920475Z 
2025-08-18T23:28:40.1920566Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T23:28:40.1920766Z 
2025-08-18T23:28:40.1920858Z # logistics\_etl.tests.test\_cron
2025-08-18T23:28:40.1921009Z 
2025-08-18T23:28:40.1921107Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T23:28:40.1921290Z 
2025-08-18T23:28:40.1921376Z # logistics\_etl.tests.test\_imports
2025-08-18T23:28:40.1921531Z 
2025-08-18T23:28:40.1921628Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T23:28:40.1921808Z 
2025-08-18T23:28:40.1921892Z # logistics\_etl.tests.test\_smoke
2025-08-18T23:28:40.1922045Z 
2025-08-18T23:28:40.1922145Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T23:28:40.1922315Z 
2025-08-18T23:28:40.1922398Z # logistics\_etl.tests.test\_client
2025-08-18T23:28:40.1922558Z 
2025-08-18T23:28:40.1922639Z <a id="logistics_etl.tests"></a>
2025-08-18T23:28:40.1922784Z 
2025-08-18T23:28:40.1922854Z # logistics\_etl.tests
2025-08-18T23:28:40.1922975Z 
2025-08-18T23:28:40.1923053Z <a id="logistics_etl.flow"></a>
2025-08-18T23:28:40.1923189Z 
2025-08-18T23:28:40.1923266Z # logistics\_etl.flow
2025-08-18T23:28:40.1923380Z 
2025-08-18T23:28:40.1923463Z <a id="logistics_etl.client"></a>
2025-08-18T23:28:40.1923616Z 
2025-08-18T23:28:40.1923691Z # logistics\_etl.client
2025-08-18T23:28:40.1923814Z 
2025-08-18T23:28:40.1923892Z <a id="logistics_etl.cron"></a>
2025-08-18T23:28:40.1924040Z 
2025-08-18T23:28:40.1924114Z # logistics\_etl.cron
2025-08-18T23:28:40.1924239Z 
2025-08-18T23:28:40.1924322Z <a id="logistics_etl.db"></a>
2025-08-18T23:28:40.1924458Z 
2025-08-18T23:28:40.1960377Z # logistics\_etl.db
2025-08-18T23:28:40.1960603Z 
2025-08-18T23:28:40.1960759Z <a id="logistics_etl.repository"></a>
2025-08-18T23:28:40.1961049Z 
2025-08-18T23:28:40.1961186Z # logistics\_etl.repository
2025-08-18T23:28:40.1961426Z 
2025-08-18T23:28:40.1961548Z <a id="alert_bot"></a>
2025-08-18T23:28:40.1961747Z 
2025-08-18T23:28:40.1961862Z # alert\_bot
2025-08-18T23:28:40.1962026Z 
2025-08-18T23:28:40.1962173Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T23:28:40.1962485Z 
2025-08-18T23:28:40.1962653Z # alert\_bot.tests.test\_smoke
2025-08-18T23:28:40.1962950Z 
2025-08-18T23:28:40.1963116Z <a id="alert_bot.tests"></a>
2025-08-18T23:28:40.1963411Z 
2025-08-18T23:28:40.1963555Z # alert\_bot.tests
2025-08-18T23:28:40.1963780Z 
2025-08-18T23:28:40.1963954Z <a id="alert_bot.alert_bot"></a>
2025-08-18T23:28:40.1964260Z 
2025-08-18T23:28:40.1964424Z # alert\_bot.alert\_bot
2025-08-18T23:28:40.1964908Z 
2025-08-18T23:28:40.1965090Z <a id="alert_bot.rules"></a>
2025-08-18T23:28:40.1965281Z 
2025-08-18T23:28:40.1965368Z # alert\_bot.rules
2025-08-18T23:28:40.1965526Z 
2025-08-18T23:28:40.1965612Z <a id="common"></a>
2025-08-18T23:28:40.1965749Z 
2025-08-18T23:28:40.1965828Z # common
2025-08-18T23:28:40.1965946Z 
2025-08-18T23:28:40.1966037Z <a id="common.dsn"></a>
2025-08-18T23:28:40.1966480Z 
2025-08-18T23:28:40.1966641Z # common.dsn
2025-08-18T23:28:40.1966766Z 
2025-08-18T23:28:40.1966875Z <a id="common.dsn.build_dsn"></a>
2025-08-18T23:28:40.1967070Z 
2025-08-18T23:28:40.1967153Z #### build\_dsn
2025-08-18T23:28:40.1967282Z 
2025-08-18T23:28:40.1967363Z ```python
2025-08-18T23:28:40.1967591Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:28:40.1967875Z ```
2025-08-18T23:28:40.1967980Z 
2025-08-18T23:28:40.1968139Z Return a Postgres DSN, validating required variables.
2025-08-18T23:28:40.1968396Z 
2025-08-18T23:28:40.1968643Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T23:28:40.1969367Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T23:28:40.1969885Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T23:28:40.1970267Z missing.
2025-08-18T23:28:40.1970384Z 
2025-08-18T23:28:40.1970487Z <a id="common.models_vendor"></a>
2025-08-18T23:28:40.1970676Z 
2025-08-18T23:28:40.1970775Z # common.models\_vendor
2025-08-18T23:28:40.1970930Z 
2025-08-18T23:28:40.1971042Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T23:28:40.1971258Z 
2025-08-18T23:28:40.1971344Z ## Vendor Objects
2025-08-18T23:28:40.1971479Z 
2025-08-18T23:28:40.1971558Z ```python
2025-08-18T23:28:40.1971757Z class Vendor(Base)
2025-08-18T23:28:40.1971961Z ```
2025-08-18T23:28:40.1972070Z 
2025-08-18T23:28:40.1972167Z Vendor of inventory items.
2025-08-18T23:28:40.1972331Z 
2025-08-18T23:28:40.1972470Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T23:28:40.1972702Z 
2025-08-18T23:28:40.1972781Z ## VendorPrice Objects
2025-08-18T23:28:40.1972905Z 
2025-08-18T23:28:40.1972969Z ```python
2025-08-18T23:28:40.1973128Z class VendorPrice(Base)
2025-08-18T23:28:40.1973311Z ```
2025-08-18T23:28:40.1973391Z 
2025-08-18T23:28:40.1973501Z Association table linking vendors to pricing.
2025-08-18T23:28:40.1973681Z 
2025-08-18T23:28:40.1973756Z <a id="common.db_url"></a>
2025-08-18T23:28:40.1973884Z 
2025-08-18T23:28:40.1973958Z # common.db\_url
2025-08-18T23:28:40.1974062Z 
2025-08-18T23:28:40.1974148Z <a id="common.db_url.build_url"></a>
2025-08-18T23:28:40.1974311Z 
2025-08-18T23:28:40.1974376Z #### build\_url
2025-08-18T23:28:40.1974480Z 
2025-08-18T23:28:40.1974542Z ```python
2025-08-18T23:28:40.1974724Z def build_url(async_: bool = True) -> str
2025-08-18T23:28:40.1974954Z ```
2025-08-18T23:28:40.1975035Z 
2025-08-18T23:28:40.1975132Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:28:40.1975306Z 
2025-08-18T23:28:40.1975392Z <a id="common.keepa"></a>
2025-08-18T23:28:40.1975532Z 
2025-08-18T23:28:40.1975600Z # common.keepa
2025-08-18T23:28:40.1975707Z 
2025-08-18T23:28:40.1975780Z <a id="common.llm"></a>
2025-08-18T23:28:40.1975897Z 
2025-08-18T23:28:40.1975968Z # common.llm
2025-08-18T23:28:40.1976173Z 
2025-08-18T23:28:40.1976255Z <a id="common.settings"></a>
2025-08-18T23:28:40.1976393Z 
2025-08-18T23:28:40.1976468Z # common.settings
2025-08-18T23:28:40.1976572Z 
2025-08-18T23:28:40.1976642Z <a id="common.db"></a>
2025-08-18T23:28:40.1976764Z 
2025-08-18T23:28:40.1976828Z # common.db
2025-08-18T23:28:40.1976917Z 
2025-08-18T23:28:40.1977010Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T23:28:40.1977185Z 
2025-08-18T23:28:40.1977261Z #### build\_sqlalchemy\_url
2025-08-18T23:28:40.1977391Z 
2025-08-18T23:28:40.1977460Z ```python
2025-08-18T23:28:40.1977629Z def build_sqlalchemy_url() -> str
2025-08-18T23:28:40.1977840Z ```
2025-08-18T23:28:40.1977922Z 
2025-08-18T23:28:40.1978015Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:28:40.1978192Z 
2025-08-18T23:28:40.1978407Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T23:28:40.1978575Z 
2025-08-18T23:28:40.1978651Z #### build\_asyncpg\_dsn
2025-08-18T23:28:40.1978783Z 
2025-08-18T23:28:40.1978851Z ```python
2025-08-18T23:28:40.1979027Z def build_asyncpg_dsn() -> str
2025-08-18T23:28:40.1979222Z ```
2025-08-18T23:28:40.1979304Z 
2025-08-18T23:28:40.1979442Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:28:40.1979656Z 
2025-08-18T23:28:40.1979740Z <a id="common.db.refresh_mvs"></a>
2025-08-18T23:28:40.1979900Z 
2025-08-18T23:28:40.1979967Z #### refresh\_mvs
2025-08-18T23:28:40.1980071Z 
2025-08-18T23:28:40.1980141Z ```python
2025-08-18T23:28:40.1980337Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:28:40.1980594Z ```
2025-08-18T23:28:40.1980674Z 
2025-08-18T23:28:40.1980813Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:28:40.1981035Z 
2025-08-18T23:28:40.1981112Z <a id="common.config"></a>
2025-08-18T23:28:40.1981241Z 
2025-08-18T23:28:40.1981431Z # common.config
2025-08-18T23:28:40.1981539Z 
2025-08-18T23:28:40.1981614Z <a id="common.base"></a>
2025-08-18T23:28:40.1981735Z 
2025-08-18T23:28:40.1981804Z # common.base
2025-08-18T23:28:40.1981901Z 
2025-08-18T23:28:40.1981981Z <a id="common.base.Base"></a>
2025-08-18T23:28:40.1982121Z 
2025-08-18T23:28:40.1982196Z ## Base Objects
2025-08-18T23:28:40.1982297Z 
2025-08-18T23:28:40.1982358Z ```python
2025-08-18T23:28:40.1982526Z class Base(DeclarativeBase)
2025-08-18T23:28:40.1982715Z ```
2025-08-18T23:28:40.1982801Z 
2025-08-18T23:28:40.1982884Z Base class for SQLAlchemy models.
2025-08-18T23:28:40.1983031Z 
2025-08-18T23:28:40.1983108Z <a id="repricer"></a>
2025-08-18T23:28:40.1983223Z 
2025-08-18T23:28:40.1983288Z # repricer
2025-08-18T23:28:40.1983378Z 
2025-08-18T23:28:40.1983469Z <a id="repricer.app.schemas"></a>
2025-08-18T23:28:40.1983619Z 
2025-08-18T23:28:40.1983696Z # repricer.app.schemas
2025-08-18T23:28:40.1983823Z 
2025-08-18T23:28:40.1983907Z <a id="repricer.app.deps"></a>
2025-08-18T23:28:40.1984063Z 
2025-08-18T23:28:40.1984145Z # repricer.app.deps
2025-08-18T23:28:40.1984256Z 
2025-08-18T23:28:40.1984372Z Placeholder module for Keepa / SP-API clients.
2025-08-18T23:28:40.1984556Z 
2025-08-18T23:28:40.1984645Z <a id="repricer.app.logic"></a>
2025-08-18T23:28:40.1984787Z 
2025-08-18T23:28:40.1984862Z # repricer.app.logic
2025-08-18T23:28:40.1984985Z 
2025-08-18T23:28:40.1985083Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T23:28:40.1985258Z 
2025-08-18T23:28:40.1985329Z #### MIN\_MARGIN
2025-08-18T23:28:40.1985431Z 
2025-08-18T23:28:40.1985494Z 15 % ROI
2025-08-18T23:28:40.1985580Z 
2025-08-18T23:28:40.1985688Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T23:28:40.1985868Z 
2025-08-18T23:28:40.1985937Z #### compute\_price
2025-08-18T23:28:40.1986161Z 
2025-08-18T23:28:40.1986226Z ```python
2025-08-18T23:28:40.1986470Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T23:28:40.1986773Z ```
2025-08-18T23:28:40.1986855Z 
2025-08-18T23:28:40.1986979Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T23:28:40.1987261Z Replace with real competitive logic later.
2025-08-18T23:28:40.1987432Z 
2025-08-18T23:28:40.1987521Z <a id="repricer.app.main"></a>
2025-08-18T23:28:40.1987663Z 
2025-08-18T23:28:40.1987735Z # repricer.app.main
2025-08-18T23:28:40.1987850Z 
2025-08-18T23:28:40.1987926Z <a id="repricer.app"></a>
2025-08-18T23:28:40.1988053Z 
2025-08-18T23:28:40.1988128Z # repricer.app
2025-08-18T23:28:40.1988229Z 
2025-08-18T23:28:40.1988321Z <a id="repricer.tests.test_imports"></a>
2025-08-18T23:28:40.1988490Z 
2025-08-18T23:28:40.1988577Z # repricer.tests.test\_imports
2025-08-18T23:28:40.1988715Z 
2025-08-18T23:28:40.1988803Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T23:28:40.1988971Z 
2025-08-18T23:28:40.1989053Z # repricer.tests.test\_smoke
2025-08-18T23:28:40.1989190Z 
2025-08-18T23:28:40.1989268Z <a id="repricer.tests"></a>
2025-08-18T23:28:40.1989406Z 
2025-08-18T23:28:40.1989478Z # repricer.tests
2025-08-18T23:28:40.1989714Z 
2025-08-18T23:28:40.1989787Z <a id="db"></a>
2025-08-18T23:28:40.1989890Z 
2025-08-18T23:28:40.1989952Z # db
2025-08-18T23:28:40.1990045Z 
2025-08-18T23:28:40.1990122Z <a id="db.utils.views"></a>
2025-08-18T23:28:40.1990251Z 
2025-08-18T23:28:40.1990319Z # db.utils.views
2025-08-18T23:28:40.1990428Z 
2025-08-18T23:28:40.1990521Z <a id="db.utils.views.replace_view"></a>
2025-08-18T23:28:40.1990690Z 
2025-08-18T23:28:40.1990765Z #### replace\_view
2025-08-18T23:28:40.1990870Z 
2025-08-18T23:28:40.1990935Z ```python
2025-08-18T23:28:40.1991131Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T23:28:40.1991376Z ```
2025-08-18T23:28:40.1991465Z 
2025-08-18T23:28:40.1991553Z Drop and recreate a SQL view atomically.
2025-08-18T23:28:40.1991717Z 
2025-08-18T23:28:40.1991788Z <a id="db.utils"></a>
2025-08-18T23:28:40.1991910Z 
2025-08-18T23:28:40.1991972Z # db.utils
2025-08-18T23:28:40.1992061Z 
2025-08-18T23:28:40.1992145Z <a id="price_importer"></a>
2025-08-18T23:28:40.1992274Z 
2025-08-18T23:28:40.1992525Z # price\_importer
2025-08-18T23:28:40.1992637Z 
2025-08-18T23:28:40.1992740Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T23:28:40.1992923Z 
2025-08-18T23:28:40.1993013Z # price\_importer.services\_common.dsn
2025-08-18T23:28:40.1993179Z 
2025-08-18T23:28:40.1993303Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T23:28:40.1993511Z 
2025-08-18T23:28:40.1993583Z #### build\_dsn
2025-08-18T23:28:40.1993682Z 
2025-08-18T23:28:40.1993745Z ```python
2025-08-18T23:28:40.1993921Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:28:40.1994141Z ```
2025-08-18T23:28:40.1994229Z 
2025-08-18T23:28:40.1994295Z Return safe DSN.
2025-08-18T23:28:40.1994399Z 
2025-08-18T23:28:40.1994757Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T23:28:40.1994972Z 
2025-08-18T23:28:40.1995100Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T23:28:40.1995309Z 
2025-08-18T23:28:40.1995424Z # price\_importer.services\_common.models\_vendor
2025-08-18T23:28:40.1995632Z 
2025-08-18T23:28:40.1995737Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T23:28:40.1995931Z 
2025-08-18T23:28:40.1996026Z # price\_importer.services\_common.db\_url
2025-08-18T23:28:40.1996307Z 
2025-08-18T23:28:40.1996440Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T23:28:40.1996665Z 
2025-08-18T23:28:40.1996732Z #### build\_url
2025-08-18T23:28:40.1996831Z 
2025-08-18T23:28:40.1996900Z ```python
2025-08-18T23:28:40.1997073Z def build_url(async_: bool = True) -> str
2025-08-18T23:28:40.1997304Z ```
2025-08-18T23:28:40.1997387Z 
2025-08-18T23:28:40.1997486Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:28:40.1997670Z 
2025-08-18T23:28:40.1997779Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T23:28:40.1997968Z 
2025-08-18T23:28:40.1998068Z # price\_importer.services\_common.keepa
2025-08-18T23:28:40.1998238Z 
2025-08-18T23:28:40.1998341Z <a id="price_importer.services_common.llm"></a>
2025-08-18T23:28:40.1998539Z 
2025-08-18T23:28:40.1998634Z # price\_importer.services\_common.llm
2025-08-18T23:28:40.1998797Z 
2025-08-18T23:28:40.1998913Z <a id="price_importer.services_common.settings"></a>
2025-08-18T23:28:40.1999120Z 
2025-08-18T23:28:40.1999217Z # price\_importer.services\_common.settings
2025-08-18T23:28:40.1999390Z 
2025-08-18T23:28:40.1999501Z <a id="price_importer.services_common.db"></a>
2025-08-18T23:28:40.1999681Z 
2025-08-18T23:28:40.1999772Z # price\_importer.services\_common.db
2025-08-18T23:28:40.1999939Z 
2025-08-18T23:28:40.2000095Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T23:28:40.2000337Z 
2025-08-18T23:28:40.2000415Z #### build\_sqlalchemy\_url
2025-08-18T23:28:40.2000555Z 
2025-08-18T23:28:40.2000620Z ```python
2025-08-18T23:28:40.2000798Z def build_sqlalchemy_url() -> str
2025-08-18T23:28:40.2001007Z ```
2025-08-18T23:28:40.2001093Z 
2025-08-18T23:28:40.2001196Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:28:40.2001372Z 
2025-08-18T23:28:40.2001646Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T23:28:40.2001883Z 
2025-08-18T23:28:40.2001960Z #### build\_asyncpg\_dsn
2025-08-18T23:28:40.2002091Z 
2025-08-18T23:28:40.2002156Z ```python
2025-08-18T23:28:40.2002333Z def build_asyncpg_dsn() -> str
2025-08-18T23:28:40.2002547Z ```
2025-08-18T23:28:40.2002628Z 
2025-08-18T23:28:40.2002758Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:28:40.2002969Z 
2025-08-18T23:28:40.2003103Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T23:28:40.2003311Z 
2025-08-18T23:28:40.2003379Z #### refresh\_mvs
2025-08-18T23:28:40.2003492Z 
2025-08-18T23:28:40.2003555Z ```python
2025-08-18T23:28:40.2003756Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:28:40.2004016Z ```
2025-08-18T23:28:40.2004098Z 
2025-08-18T23:28:40.2004244Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:28:40.2004462Z 
2025-08-18T23:28:40.2004557Z <a id="price_importer.services_common"></a>
2025-08-18T23:28:40.2004854Z 
2025-08-18T23:28:40.2004942Z # price\_importer.services\_common
2025-08-18T23:28:40.2005096Z 
2025-08-18T23:28:40.2005201Z <a id="price_importer.services_common.base"></a>
2025-08-18T23:28:40.2005393Z 
2025-08-18T23:28:40.2005484Z # price\_importer.services\_common.base
2025-08-18T23:28:40.2005648Z 
2025-08-18T23:28:40.2005744Z <a id="price_importer.normaliser"></a>
2025-08-18T23:28:40.2005909Z 
2025-08-18T23:28:40.2005991Z # price\_importer.normaliser
2025-08-18T23:28:40.2006345Z 
2025-08-18T23:28:40.2006458Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T23:28:40.2006642Z 
2025-08-18T23:28:40.2006731Z # price\_importer.common.models\_vendor
2025-08-18T23:28:40.2006902Z 
2025-08-18T23:28:40.2006996Z <a id="price_importer.common.db_url"></a>
2025-08-18T23:28:40.2007170Z 
2025-08-18T23:28:40.2007260Z # price\_importer.common.db\_url
2025-08-18T23:28:40.2007405Z 
2025-08-18T23:28:40.2007510Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T23:28:40.2007721Z 
2025-08-18T23:28:40.2007788Z #### make\_dsn
2025-08-18T23:28:40.2007888Z 
2025-08-18T23:28:40.2007951Z ```python
2025-08-18T23:28:40.2008131Z def make_dsn(async_: bool = False) -> str
2025-08-18T23:28:40.2008359Z ```
2025-08-18T23:28:40.2008441Z 
2025-08-18T23:28:40.2008560Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T23:28:40.2008760Z 
2025-08-18T23:28:40.2008875Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T23:28:40.2009065Z 
2025-08-18T23:28:40.2009130Z #### build\_url
2025-08-18T23:28:40.2009237Z 
2025-08-18T23:28:40.2009301Z ```python
2025-08-18T23:28:40.2009474Z def build_url(async_: bool = False) -> str
2025-08-18T23:28:40.2009709Z ```
2025-08-18T23:28:40.2009791Z 
2025-08-18T23:28:40.2009920Z Return Postgres DSN built from environment variables.
2025-08-18T23:28:40.2010121Z 
2025-08-18T23:28:40.2010207Z <a id="price_importer.common"></a>
2025-08-18T23:28:40.2010371Z 
2025-08-18T23:28:40.2010448Z # price\_importer.common
2025-08-18T23:28:40.2010577Z 
2025-08-18T23:28:40.2010682Z <a id="price_importer.common.base"></a>
2025-08-18T23:28:40.2010853Z 
2025-08-18T23:28:40.2010936Z # price\_importer.common.base
2025-08-18T23:28:40.2011079Z 
2025-08-18T23:28:40.2011182Z <a id="price_importer.tests.conftest"></a>
2025-08-18T23:28:40.2011355Z 
2025-08-18T23:28:40.2011441Z # price\_importer.tests.conftest
2025-08-18T23:28:40.2011628Z 
2025-08-18T23:28:40.2011730Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T23:28:40.2011909Z 
2025-08-18T23:28:40.2011998Z # price\_importer.tests.test\_reader
2025-08-18T23:28:40.2012165Z 
2025-08-18T23:28:40.2012269Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T23:28:40.2012456Z 
2025-08-18T23:28:40.2012552Z # price\_importer.tests.test\_imports
2025-08-18T23:28:40.2012713Z 
2025-08-18T23:28:40.2012811Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T23:28:40.2012989Z 
2025-08-18T23:28:40.2013075Z # price\_importer.tests.test\_smoke
2025-08-18T23:28:40.2013232Z 
2025-08-18T23:28:40.2013337Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T23:28:40.2013668Z 
2025-08-18T23:28:40.2013762Z # price\_importer.tests.test\_normaliser
2025-08-18T23:28:40.2013930Z 
2025-08-18T23:28:40.2014028Z <a id="price_importer.tests"></a>
2025-08-18T23:28:40.2014179Z 
2025-08-18T23:28:40.2014256Z # price\_importer.tests
2025-08-18T23:28:40.2014386Z 
2025-08-18T23:28:40.2014472Z <a id="price_importer.reader"></a>
2025-08-18T23:28:40.2014624Z 
2025-08-18T23:28:40.2014702Z # price\_importer.reader
2025-08-18T23:28:40.2014835Z 
2025-08-18T23:28:40.2014926Z <a id="price_importer.repository"></a>
2025-08-18T23:28:40.2015090Z 
2025-08-18T23:28:40.2015181Z # price\_importer.repository
2025-08-18T23:28:40.2015319Z 
2025-08-18T23:28:40.2015404Z <a id="price_importer.import"></a>
2025-08-18T23:28:40.2015559Z 
2025-08-18T23:28:40.2015637Z # price\_importer.import
2025-08-18T23:28:40.2015761Z 
2025-08-18T23:28:40.2015835Z <a id="fees_h10"></a>
2025-08-18T23:28:40.2015956Z 
2025-08-18T23:28:40.2016022Z # fees\_h10
2025-08-18T23:28:40.2016353Z 
2025-08-18T23:28:40.2016438Z <a id="fees_h10.worker"></a>
2025-08-18T23:28:40.2016579Z 
2025-08-18T23:28:40.2016647Z # fees\_h10.worker
2025-08-18T23:28:40.2016753Z 
2025-08-18T23:28:40.2016861Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T23:28:40.2017042Z 
2025-08-18T23:28:40.2017115Z #### list\_active\_asins
2025-08-18T23:28:40.2017243Z 
2025-08-18T23:28:40.2017307Z ```python
2025-08-18T23:28:40.2017478Z def list_active_asins() -> list[str]
2025-08-18T23:28:40.2017698Z ```
2025-08-18T23:28:40.2017779Z 
2025-08-18T23:28:40.2017899Z Return known ASINs or an empty list if unavailable.
2025-08-18T23:28:40.2018093Z 
2025-08-18T23:28:40.2018177Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T23:28:40.2018340Z 
2025-08-18T23:28:40.2018421Z # fees\_h10.tests.test\_smoke
2025-08-18T23:28:40.2018558Z 
2025-08-18T23:28:40.2018633Z <a id="fees_h10.tests"></a>
2025-08-18T23:28:40.2018770Z 
2025-08-18T23:28:40.2018838Z # fees\_h10.tests
2025-08-18T23:28:40.2018942Z 
2025-08-18T23:28:40.2019028Z <a id="fees_h10.client"></a>
2025-08-18T23:28:40.2019165Z 
2025-08-18T23:28:40.2019233Z # fees\_h10.client
2025-08-18T23:28:40.2019337Z 
2025-08-18T23:28:40.2019424Z <a id="fees_h10.repository"></a>
2025-08-18T23:28:40.2019569Z 
2025-08-18T23:28:40.2019642Z # fees\_h10.repository
2025-08-18T23:28:40.2019764Z 
2025-08-18T23:28:40.2019835Z <a id="emailer"></a>
2025-08-18T23:28:40.2019947Z 
2025-08-18T23:28:40.2020015Z # emailer
2025-08-18T23:28:40.2020107Z 
2025-08-18T23:28:40.2020207Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T23:28:40.2020387Z 
2025-08-18T23:28:40.2020482Z # emailer.tests.test\_import\_emailer
2025-08-18T23:28:40.2020643Z 
2025-08-18T23:28:40.2020730Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T23:28:40.2020892Z 
2025-08-18T23:28:40.2020972Z # emailer.tests.test\_smoke
2025-08-18T23:28:40.2021106Z 
2025-08-18T23:28:40.2021190Z <a id="emailer.tests"></a>
2025-08-18T23:28:40.2021319Z 
2025-08-18T23:28:40.2021385Z # emailer.tests
2025-08-18T23:28:40.2021487Z 
2025-08-18T23:28:40.2021588Z <a id="emailer.generate_body"></a>
2025-08-18T23:28:40.2021739Z 
2025-08-18T23:28:40.2021818Z # emailer.generate\_body
2025-08-18T23:28:40.2021952Z 
2025-08-18T23:28:40.2022025Z <a id="llm_server"></a>
2025-08-18T23:28:40.2022143Z 
2025-08-18T23:28:40.2022208Z # llm\_server
2025-08-18T23:28:40.2022311Z 
2025-08-18T23:28:40.2022389Z <a id="llm_server.app"></a>
2025-08-18T23:28:40.2022520Z 
2025-08-18T23:28:40.2022594Z # llm\_server.app
2025-08-18T23:28:40.2022702Z 
