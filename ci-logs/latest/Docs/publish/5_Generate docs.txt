2025-08-17T12:22:47.8161508Z ##[group]Run pydoc-markdown
2025-08-17T12:22:47.8161830Z [36;1mpydoc-markdown[0m
2025-08-17T12:22:47.8202356Z shell: /usr/bin/bash -e {0}
2025-08-17T12:22:47.8202596Z env:
2025-08-17T12:22:47.8202837Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:22:47.8203241Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T12:22:47.8203654Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:22:47.8204003Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:22:47.8204344Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:22:47.8204678Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T12:22:47.8204968Z ##[endgroup]
2025-08-17T12:22:48.1785130Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T12:22:48.1785937Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T12:22:48.1786288Z In "pydoc-markdown.yml"
2025-08-17T12:22:48.1786604Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T12:22:48.1787131Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T12:22:48.1787650Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T12:22:48.1788003Z 
2025-08-17T12:22:48.3897744Z <a id="__init__"></a>
2025-08-17T12:22:48.3898145Z 
2025-08-17T12:22:48.3898276Z # \_\_init\_\_
2025-08-17T12:22:48.3898481Z 
2025-08-17T12:22:48.3898613Z <a id="api"></a>
2025-08-17T12:22:48.3898820Z 
2025-08-17T12:22:48.3898933Z # api
2025-08-17T12:22:48.3899110Z 
2025-08-17T12:22:48.3899268Z <a id="api.tests.test_llm"></a>
2025-08-17T12:22:48.3899555Z 
2025-08-17T12:22:48.3899701Z # api.tests.test\_llm
2025-08-17T12:22:48.3899932Z 
2025-08-17T12:22:48.3900096Z <a id="api.tests.test_imports"></a>
2025-08-17T12:22:48.3900569Z 
2025-08-17T12:22:48.3900732Z # api.tests.test\_imports
2025-08-17T12:22:48.3900979Z 
2025-08-17T12:22:48.3901148Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T12:22:48.3901475Z 
2025-08-17T12:22:48.3901626Z # api.tests.test\_entrypoint
2025-08-17T12:22:48.3901934Z 
2025-08-17T12:22:48.3902098Z <a id="api.tests.test_health"></a>
2025-08-17T12:22:48.3902386Z 
2025-08-17T12:22:48.3902527Z # api.tests.test\_health
2025-08-17T12:22:48.3902799Z 
2025-08-17T12:22:48.3902958Z <a id="api.migrations.env"></a>
2025-08-17T12:22:48.3903227Z 
2025-08-17T12:22:48.3903364Z # api.migrations.env
2025-08-17T12:22:48.3903590Z 
2025-08-17T12:22:48.3903844Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T12:22:48.3904254Z 
2025-08-17T12:22:48.3904463Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T12:22:48.3904818Z 
2025-08-17T12:22:48.3905022Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T12:22:48.3905379Z 
2025-08-17T12:22:48.3905565Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T12:22:48.3905892Z 
2025-08-17T12:22:48.3906181Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T12:22:48.3906643Z 
2025-08-17T12:22:48.3906899Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T12:22:48.3907669Z 
2025-08-17T12:22:48.3907924Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T12:22:48.3908322Z 
2025-08-17T12:22:48.3908524Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T12:22:48.3908889Z 
2025-08-17T12:22:48.3909122Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T12:22:48.3909507Z 
2025-08-17T12:22:48.3909705Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T12:22:48.3910063Z 
2025-08-17T12:22:48.3910512Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T12:22:48.3910938Z 
2025-08-17T12:22:48.3911164Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T12:22:48.3911529Z 
2025-08-17T12:22:48.3911754Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T12:22:48.3912144Z 
2025-08-17T12:22:48.3912343Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T12:22:48.3912695Z 
2025-08-17T12:22:48.3912928Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T12:22:48.3913676Z 
2025-08-17T12:22:48.3913885Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T12:22:48.3914251Z 
2025-08-17T12:22:48.3914500Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T12:22:48.3914894Z 
2025-08-17T12:22:48.3915098Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T12:22:48.3915464Z 
2025-08-17T12:22:48.3915678Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T12:22:48.3916041Z 
2025-08-17T12:22:48.3916226Z # api.migrations.versions.0001\_baseline
2025-08-17T12:22:48.3916551Z 
2025-08-17T12:22:48.3916713Z <a id="api.migrations.versions"></a>
2025-08-17T12:22:48.3917016Z 
2025-08-17T12:22:48.3917175Z # api.migrations.versions
2025-08-17T12:22:48.3917428Z 
2025-08-17T12:22:48.3917576Z <a id="api.migrations"></a>
2025-08-17T12:22:48.3917838Z 
2025-08-17T12:22:48.3917962Z # api.migrations
2025-08-17T12:22:48.3918163Z 
2025-08-17T12:22:48.3918290Z <a id="api.db"></a>
2025-08-17T12:22:48.3918504Z 
2025-08-17T12:22:48.3918634Z # api.db
2025-08-17T12:22:48.3918802Z 
2025-08-17T12:22:48.3918962Z <a id="api.routes.stats"></a>
2025-08-17T12:22:48.3919232Z 
2025-08-17T12:22:48.3919361Z # api.routes.stats
2025-08-17T12:22:48.3919575Z 
2025-08-17T12:22:48.3919736Z <a id="api.routes.stats.kpi"></a>
2025-08-17T12:22:48.3920028Z 
2025-08-17T12:22:48.3920146Z #### kpi
2025-08-17T12:22:48.3920524Z 
2025-08-17T12:22:48.3920655Z ```python
2025-08-17T12:22:48.3920988Z @router.get("/stats/kpi")
2025-08-17T12:22:48.3921419Z def kpi() -> List[Dict[str, int]]
2025-08-17T12:22:48.3921808Z ```
2025-08-17T12:22:48.3921961Z 
2025-08-17T12:22:48.3922105Z Return KPI metrics (mock).
2025-08-17T12:22:48.3922359Z 
2025-08-17T12:22:48.3922541Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T12:22:48.3922874Z 
2025-08-17T12:22:48.3923002Z #### roi\_by\_vendor
2025-08-17T12:22:48.3923213Z 
2025-08-17T12:22:48.3923328Z ```python
2025-08-17T12:22:48.3923648Z @router.get("/stats/roi_by_vendor")
2025-08-17T12:22:48.3924108Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T12:22:48.3924558Z ```
2025-08-17T12:22:48.3924708Z 
2025-08-17T12:22:48.3924856Z Return ROI percent by vendor.
2025-08-17T12:22:48.3925134Z 
2025-08-17T12:22:48.3925304Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T12:22:48.3925623Z 
2025-08-17T12:22:48.3925742Z #### roi\_trend
2025-08-17T12:22:48.3925939Z 
2025-08-17T12:22:48.3926054Z ```python
2025-08-17T12:22:48.3926369Z @router.get("/stats/roi_trend")
2025-08-17T12:22:48.3926808Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T12:22:48.3927253Z ```
2025-08-17T12:22:48.3927403Z 
2025-08-17T12:22:48.3927538Z Return 30-day ROI trend.
2025-08-17T12:22:48.3927779Z 
2025-08-17T12:22:48.3927925Z <a id="api.routes.roi"></a>
2025-08-17T12:22:48.3928177Z 
2025-08-17T12:22:48.3928305Z # api.routes.roi
2025-08-17T12:22:48.3928533Z 
2025-08-17T12:22:48.3928688Z <a id="api.routes.health"></a>
2025-08-17T12:22:48.3929033Z 
2025-08-17T12:22:48.3929163Z # api.routes.health
2025-08-17T12:22:48.3929368Z 
2025-08-17T12:22:48.3929550Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T12:22:48.3930114Z 
2025-08-17T12:22:48.3930241Z #### MAX\_SKEW
2025-08-17T12:22:48.3930631Z 
2025-08-17T12:22:48.3930758Z seconds
2025-08-17T12:22:48.3930921Z 
2025-08-17T12:22:48.3931093Z <a id="api.routes.health.health"></a>
2025-08-17T12:22:48.3931412Z 
2025-08-17T12:22:48.3931527Z #### health
2025-08-17T12:22:48.3931695Z 
2025-08-17T12:22:48.3931813Z ```python
2025-08-17T12:22:48.3932182Z @router.get("/health", include_in_schema=False)
2025-08-17T12:22:48.3932891Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T12:22:48.3933532Z ```
2025-08-17T12:22:48.3933684Z 
2025-08-17T12:22:48.3933910Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T12:22:48.3934284Z 
2025-08-17T12:22:48.3934447Z <a id="api.routes.repository"></a>
2025-08-17T12:22:48.3934751Z 
2025-08-17T12:22:48.3934895Z # api.routes.repository
2025-08-17T12:22:48.3935131Z 
2025-08-17T12:22:48.3935268Z <a id="api.routes"></a>
2025-08-17T12:22:48.3935779Z 
2025-08-17T12:22:48.3935904Z # api.routes
2025-08-17T12:22:48.3936093Z 
2025-08-17T12:22:48.3936249Z <a id="api.models.fee"></a>
2025-08-17T12:22:48.3936486Z 
2025-08-17T12:22:48.3936605Z # api.models.fee
2025-08-17T12:22:48.3936793Z 
2025-08-17T12:22:48.3936917Z <a id="api.models"></a>
2025-08-17T12:22:48.3937123Z 
2025-08-17T12:22:48.3937230Z # api.models
2025-08-17T12:22:48.3937416Z 
2025-08-17T12:22:48.3937566Z <a id="api.roi_repository"></a>
2025-08-17T12:22:48.3937836Z 
2025-08-17T12:22:48.3937975Z # api.roi\_repository
2025-08-17T12:22:48.3938198Z 
2025-08-17T12:22:48.3938326Z <a id="api.main"></a>
2025-08-17T12:22:48.3938541Z 
2025-08-17T12:22:48.3938665Z # api.main
2025-08-17T12:22:48.3938835Z 
2025-08-17T12:22:48.3939021Z <a id="api.main.ready"></a>
2025-08-17T12:22:48.3939283Z 
2025-08-17T12:22:48.3939402Z #### ready
2025-08-17T12:22:48.3939654Z 
2025-08-17T12:22:48.3939779Z ```python
2025-08-17T12:22:48.3940262Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T12:22:48.3941315Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T12:22:48.3941994Z                                                                       str]
2025-08-17T12:22:48.3942431Z ```
2025-08-17T12:22:48.3942585Z 
2025-08-17T12:22:48.3942770Z Return 200 only when migrations are at head.
2025-08-17T12:22:48.3943104Z 
2025-08-17T12:22:48.3943245Z <a id="api.config"></a>
2025-08-17T12:22:48.3943476Z 
2025-08-17T12:22:48.3943604Z # api.config
2025-08-17T12:22:48.3943785Z 
2025-08-17T12:22:48.3943906Z <a id="etl"></a>
2025-08-17T12:22:48.3944104Z 
2025-08-17T12:22:48.3944220Z # etl
2025-08-17T12:22:48.3944383Z 
2025-08-17T12:22:48.3944534Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T12:22:48.3944826Z 
2025-08-17T12:22:48.3944960Z # etl.fba\_fee\_ingestor
2025-08-17T12:22:48.3945194Z 
2025-08-17T12:22:48.3945342Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T12:22:48.3945629Z 
2025-08-17T12:22:48.3945762Z # etl.sp\_fees\_ingestor
2025-08-17T12:22:48.3946012Z 
2025-08-17T12:22:48.3946170Z <a id="etl.keepa_ingestor"></a>
2025-08-17T12:22:48.3946440Z 
2025-08-17T12:22:48.3946572Z # etl.keepa\_ingestor
2025-08-17T12:22:48.3946794Z 
2025-08-17T12:22:48.3946919Z <a id="etl.db"></a>
2025-08-17T12:22:48.3947124Z 
2025-08-17T12:22:48.3947240Z # etl.db
2025-08-17T12:22:48.3947411Z 
2025-08-17T12:22:48.3947611Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T12:22:48.3947964Z 
2025-08-17T12:22:48.3948137Z # etl.dialects.amazon\_reimbursements
2025-08-17T12:22:48.3948440Z 
2025-08-17T12:22:48.3948608Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T12:22:48.3948928Z 
2025-08-17T12:22:48.3949082Z # etl.dialects.amazon\_returns
2025-08-17T12:22:48.3949346Z 
2025-08-17T12:22:48.3949487Z <a id="etl.dialects"></a>
2025-08-17T12:22:48.3949734Z 
2025-08-17T12:22:48.3949854Z # etl.dialects
2025-08-17T12:22:48.3950042Z 
2025-08-17T12:22:48.3950175Z <a id="ingest"></a>
2025-08-17T12:22:48.3950559Z 
2025-08-17T12:22:48.3950682Z # ingest
2025-08-17T12:22:48.3950864Z 
2025-08-17T12:22:48.3951259Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T12:22:48.3951576Z 
2025-08-17T12:22:48.3951722Z # ingest.tests.test\_smoke
2025-08-17T12:22:48.3951976Z 
2025-08-17T12:22:48.3952115Z <a id="ingest.tests"></a>
2025-08-17T12:22:48.3952358Z 
2025-08-17T12:22:48.3952487Z # ingest.tests
2025-08-17T12:22:48.3952677Z 
2025-08-17T12:22:48.3952831Z <a id="ingest.upload_router"></a>
2025-08-17T12:22:48.3953119Z 
2025-08-17T12:22:48.3953272Z # ingest.upload\_router
2025-08-17T12:22:48.3953507Z 
2025-08-17T12:22:48.3953662Z <a id="ingest.email_watcher"></a>
2025-08-17T12:22:48.3953953Z 
2025-08-17T12:22:48.3954088Z # ingest.email\_watcher
2025-08-17T12:22:48.3954308Z 
2025-08-17T12:22:48.3954480Z <a id="ingest.email_watcher.main"></a>
2025-08-17T12:22:48.3954856Z 
2025-08-17T12:22:48.3954972Z #### main
2025-08-17T12:22:48.3955137Z 
2025-08-17T12:22:48.3955258Z ```python
2025-08-17T12:22:48.3955572Z def main() -> dict[str, str]
2025-08-17T12:22:48.3955936Z ```
2025-08-17T12:22:48.3956091Z 
2025-08-17T12:22:48.3956582Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T12:22:48.3957023Z 
2025-08-17T12:22:48.3957270Z Returns {"status": "success"} when processing completes.
2025-08-17T12:22:48.3957668Z 
2025-08-17T12:22:48.3957833Z <a id="ingest.ingest_router"></a>
2025-08-17T12:22:48.3958116Z 
2025-08-17T12:22:48.3958253Z # ingest.ingest\_router
2025-08-17T12:22:48.3958480Z 
2025-08-17T12:22:48.3958630Z <a id="logistics_etl"></a>
2025-08-17T12:22:48.3958878Z 
2025-08-17T12:22:48.3958998Z # logistics\_etl
2025-08-17T12:22:48.3959200Z 
2025-08-17T12:22:48.3959345Z Daily logistics ETL job.
2025-08-17T12:22:48.3959578Z 
2025-08-17T12:22:48.3959735Z <a id="logistics_etl.__main__"></a>
2025-08-17T12:22:48.3960029Z 
2025-08-17T12:22:48.3960170Z # logistics\_etl.\_\_main\_\_
2025-08-17T12:22:48.3960620Z 
2025-08-17T12:22:48.3960769Z <a id="logistics_etl.dsn"></a>
2025-08-17T12:22:48.3961040Z 
2025-08-17T12:22:48.3961174Z # logistics\_etl.dsn
2025-08-17T12:22:48.3961398Z 
2025-08-17T12:22:48.3961637Z Local DSN builder to avoid cross-service dependency.
2025-08-17T12:22:48.3962019Z 
2025-08-17T12:22:48.3962202Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T12:22:48.3962521Z 
2025-08-17T12:22:48.3962723Z #### build\_dsn
2025-08-17T12:22:48.3962919Z 
2025-08-17T12:22:48.3963052Z ```python
2025-08-17T12:22:48.3963389Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:22:48.3963812Z ```
2025-08-17T12:22:48.3963964Z 
2025-08-17T12:22:48.3964226Z Return a Postgres DSN assembled from environment variables.
2025-08-17T12:22:48.3964656Z 
2025-08-17T12:22:48.3964940Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T12:22:48.3965691Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T12:22:48.3966346Z error when any required variable is missing.
2025-08-17T12:22:48.3966691Z 
2025-08-17T12:22:48.3966870Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T12:22:48.3967196Z 
2025-08-17T12:22:48.3967354Z # logistics\_etl.tests.conftest
2025-08-17T12:22:48.3967657Z 
2025-08-17T12:22:48.3967851Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T12:22:48.3968207Z 
2025-08-17T12:22:48.3968382Z # logistics\_etl.tests.test\_repository
2025-08-17T12:22:48.3968697Z 
2025-08-17T12:22:48.3968872Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T12:22:48.3969205Z 
2025-08-17T12:22:48.3969360Z # logistics\_etl.tests.test\_cron
2025-08-17T12:22:48.3969646Z 
2025-08-17T12:22:48.3969829Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T12:22:48.3970174Z 
2025-08-17T12:22:48.3970505Z # logistics\_etl.tests.test\_imports
2025-08-17T12:22:48.3970817Z 
2025-08-17T12:22:48.3971004Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T12:22:48.3971329Z 
2025-08-17T12:22:48.3971487Z # logistics\_etl.tests.test\_smoke
2025-08-17T12:22:48.3971783Z 
2025-08-17T12:22:48.3971963Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T12:22:48.3972299Z 
2025-08-17T12:22:48.3972464Z # logistics\_etl.tests.test\_client
2025-08-17T12:22:48.3972785Z 
2025-08-17T12:22:48.3973169Z <a id="logistics_etl.tests"></a>
2025-08-17T12:22:48.3973458Z 
2025-08-17T12:22:48.3973610Z # logistics\_etl.tests
2025-08-17T12:22:48.3973832Z 
2025-08-17T12:22:48.3973976Z <a id="logistics_etl.flow"></a>
2025-08-17T12:22:48.3974245Z 
2025-08-17T12:22:48.3974375Z # logistics\_etl.flow
2025-08-17T12:22:48.3974592Z 
2025-08-17T12:22:48.3974741Z <a id="logistics_etl.client"></a>
2025-08-17T12:22:48.3975027Z 
2025-08-17T12:22:48.3975162Z # logistics\_etl.client
2025-08-17T12:22:48.3975385Z 
2025-08-17T12:22:48.3975535Z <a id="logistics_etl.cron"></a>
2025-08-17T12:22:48.3975797Z 
2025-08-17T12:22:48.3975925Z # logistics\_etl.cron
2025-08-17T12:22:48.3976138Z 
2025-08-17T12:22:48.3976291Z <a id="logistics_etl.db"></a>
2025-08-17T12:22:48.3976555Z 
2025-08-17T12:22:48.3976680Z # logistics\_etl.db
2025-08-17T12:22:48.3976896Z 
2025-08-17T12:22:48.3977066Z <a id="logistics_etl.repository"></a>
2025-08-17T12:22:48.3977371Z 
2025-08-17T12:22:48.3977526Z # logistics\_etl.repository
2025-08-17T12:22:48.3978035Z 
2025-08-17T12:22:48.3978173Z <a id="alert_bot"></a>
2025-08-17T12:22:48.3978398Z 
2025-08-17T12:22:48.3978527Z # alert\_bot
2025-08-17T12:22:48.3978708Z 
2025-08-17T12:22:48.3978871Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T12:22:48.3979193Z 
2025-08-17T12:22:48.3979338Z # alert\_bot.tests.test\_smoke
2025-08-17T12:22:48.3979601Z 
2025-08-17T12:22:48.3979744Z <a id="alert_bot.tests"></a>
2025-08-17T12:22:48.3980009Z 
2025-08-17T12:22:48.3980132Z # alert\_bot.tests
2025-08-17T12:22:48.3980515Z 
2025-08-17T12:22:48.3980683Z <a id="alert_bot.alert_bot"></a>
2025-08-17T12:22:48.3980958Z 
2025-08-17T12:22:48.3981094Z # alert\_bot.alert\_bot
2025-08-17T12:22:48.3981330Z 
2025-08-17T12:22:48.3981473Z <a id="alert_bot.rules"></a>
2025-08-17T12:22:48.3981728Z 
2025-08-17T12:22:48.3981854Z # alert\_bot.rules
2025-08-17T12:22:48.3982063Z 
2025-08-17T12:22:48.3982191Z <a id="common"></a>
2025-08-17T12:22:48.3982401Z 
2025-08-17T12:22:48.3982528Z # common
2025-08-17T12:22:48.3982696Z 
2025-08-17T12:22:48.3982850Z <a id="common.dsn"></a>
2025-08-17T12:22:48.3983083Z 
2025-08-17T12:22:48.3983198Z # common.dsn
2025-08-17T12:22:48.3983377Z 
2025-08-17T12:22:48.3983569Z <a id="common.dsn.build_dsn"></a>
2025-08-17T12:22:48.3983863Z 
2025-08-17T12:22:48.3983981Z #### build\_dsn
2025-08-17T12:22:48.3984168Z 
2025-08-17T12:22:48.3984294Z ```python
2025-08-17T12:22:48.3984610Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:22:48.3985045Z ```
2025-08-17T12:22:48.3985208Z 
2025-08-17T12:22:48.3985448Z Return a Postgres DSN, validating required variables.
2025-08-17T12:22:48.3985832Z 
2025-08-17T12:22:48.3986189Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T12:22:48.3987032Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T12:22:48.3987830Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T12:22:48.3988415Z missing.
2025-08-17T12:22:48.3988579Z 
2025-08-17T12:22:48.3988742Z <a id="common.models_vendor"></a>
2025-08-17T12:22:48.3989077Z 
2025-08-17T12:22:48.3989214Z # common.models\_vendor
2025-08-17T12:22:48.3989447Z 
2025-08-17T12:22:48.3989612Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T12:22:48.3989929Z 
2025-08-17T12:22:48.3990054Z ## Vendor Objects
2025-08-17T12:22:48.3990260Z 
2025-08-17T12:22:48.3990557Z ```python
2025-08-17T12:22:48.3990861Z class Vendor(Base)
2025-08-17T12:22:48.3991171Z ```
2025-08-17T12:22:48.3991329Z 
2025-08-17T12:22:48.3991482Z Vendor of inventory items.
2025-08-17T12:22:48.3991737Z 
2025-08-17T12:22:48.3991937Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T12:22:48.3992294Z 
2025-08-17T12:22:48.3992433Z ## VendorPrice Objects
2025-08-17T12:22:48.3992661Z 
2025-08-17T12:22:48.3992778Z ```python
2025-08-17T12:22:48.3993089Z class VendorPrice(Base)
2025-08-17T12:22:48.3993419Z ```
2025-08-17T12:22:48.3993569Z 
2025-08-17T12:22:48.3993765Z Association table linking vendors to pricing.
2025-08-17T12:22:48.3994111Z 
2025-08-17T12:22:48.3994272Z <a id="common.db_url"></a>
2025-08-17T12:22:48.3994741Z 
2025-08-17T12:22:48.3994864Z # common.db\_url
2025-08-17T12:22:48.3995070Z 
2025-08-17T12:22:48.3995226Z <a id="common.db_url.build_url"></a>
2025-08-17T12:22:48.3995527Z 
2025-08-17T12:22:48.3995656Z #### build\_url
2025-08-17T12:22:48.3995848Z 
2025-08-17T12:22:48.3995965Z ```python
2025-08-17T12:22:48.3996295Z def build_url(async_: bool = True) -> str
2025-08-17T12:22:48.3996691Z ```
2025-08-17T12:22:48.3996831Z 
2025-08-17T12:22:48.3997008Z Return Postgres DSN from env or PG_* parts.
2025-08-17T12:22:48.3997325Z 
2025-08-17T12:22:48.3997469Z <a id="common.keepa"></a>
2025-08-17T12:22:48.3997716Z 
2025-08-17T12:22:48.3997838Z # common.keepa
2025-08-17T12:22:48.3998030Z 
2025-08-17T12:22:48.3998171Z <a id="common.llm"></a>
2025-08-17T12:22:48.3998397Z 
2025-08-17T12:22:48.3998513Z # common.llm
2025-08-17T12:22:48.3998691Z 
2025-08-17T12:22:48.3998846Z <a id="common.settings"></a>
2025-08-17T12:22:48.3999106Z 
2025-08-17T12:22:48.3999228Z # common.settings
2025-08-17T12:22:48.3999635Z 
2025-08-17T12:22:48.3999769Z <a id="common.db"></a>
2025-08-17T12:22:48.3999992Z 
2025-08-17T12:22:48.4000108Z # common.db
2025-08-17T12:22:48.4000293Z 
2025-08-17T12:22:48.4000701Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T12:22:48.4001038Z 
2025-08-17T12:22:48.4001241Z #### build\_sqlalchemy\_url
2025-08-17T12:22:48.4001476Z 
2025-08-17T12:22:48.4001608Z ```python
2025-08-17T12:22:48.4001940Z def build_sqlalchemy_url() -> str
2025-08-17T12:22:48.4002321Z ```
2025-08-17T12:22:48.4002478Z 
2025-08-17T12:22:48.4002654Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T12:22:48.4002958Z 
2025-08-17T12:22:48.4003117Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T12:22:48.4003403Z 
2025-08-17T12:22:48.4003524Z #### build\_asyncpg\_dsn
2025-08-17T12:22:48.4003729Z 
2025-08-17T12:22:48.4003833Z ```python
2025-08-17T12:22:48.4004106Z def build_asyncpg_dsn() -> str
2025-08-17T12:22:48.4004445Z ```
2025-08-17T12:22:48.4004581Z 
2025-08-17T12:22:48.4004831Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T12:22:48.4005209Z 
2025-08-17T12:22:48.4005358Z <a id="common.db.refresh_mvs"></a>
2025-08-17T12:22:48.4005645Z 
2025-08-17T12:22:48.4005771Z #### refresh\_mvs
2025-08-17T12:22:48.4005951Z 
2025-08-17T12:22:48.4006058Z ```python
2025-08-17T12:22:48.4006367Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T12:22:48.4006792Z ```
2025-08-17T12:22:48.4006917Z 
2025-08-17T12:22:48.4007139Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T12:22:48.4007509Z 
2025-08-17T12:22:48.4007630Z <a id="common.config"></a>
2025-08-17T12:22:48.4007831Z 
2025-08-17T12:22:48.4007944Z # common.config
2025-08-17T12:22:48.4008107Z 
2025-08-17T12:22:48.4008227Z <a id="common.base"></a>
2025-08-17T12:22:48.4008423Z 
2025-08-17T12:22:48.4008525Z # common.base
2025-08-17T12:22:48.4008674Z 
2025-08-17T12:22:48.4008794Z <a id="common.base.Base"></a>
2025-08-17T12:22:48.4009026Z 
2025-08-17T12:22:48.4009125Z ## Base Objects
2025-08-17T12:22:48.4009293Z 
2025-08-17T12:22:48.4009398Z ```python
2025-08-17T12:22:48.4009658Z class Base(DeclarativeBase)
2025-08-17T12:22:48.4009958Z ```
2025-08-17T12:22:48.4010082Z 
2025-08-17T12:22:48.4010213Z Base class for SQLAlchemy models.
2025-08-17T12:22:48.4010649Z 
2025-08-17T12:22:48.4010763Z <a id="repricer"></a>
2025-08-17T12:22:48.4010948Z 
2025-08-17T12:22:48.4011046Z # repricer
2025-08-17T12:22:48.4011187Z 
2025-08-17T12:22:48.4011315Z <a id="repricer.app.schemas"></a>
2025-08-17T12:22:48.4011543Z 
2025-08-17T12:22:48.4011664Z # repricer.app.schemas
2025-08-17T12:22:48.4011848Z 
2025-08-17T12:22:48.4011969Z <a id="repricer.app.deps"></a>
2025-08-17T12:22:48.4012200Z 
2025-08-17T12:22:48.4012311Z # repricer.app.deps
2025-08-17T12:22:48.4012488Z 
2025-08-17T12:22:48.4012653Z Placeholder module for Keepa / SP-API clients.
2025-08-17T12:22:48.4012959Z 
2025-08-17T12:22:48.4013086Z <a id="repricer.app.logic"></a>
2025-08-17T12:22:48.4013309Z 
2025-08-17T12:22:48.4013425Z # repricer.app.logic
2025-08-17T12:22:48.4013818Z 
2025-08-17T12:22:48.4013974Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T12:22:48.4014249Z 
2025-08-17T12:22:48.4014345Z #### MIN\_MARGIN
2025-08-17T12:22:48.4014502Z 
2025-08-17T12:22:48.4014598Z 15 % ROI
2025-08-17T12:22:48.4014738Z 
2025-08-17T12:22:48.4014893Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T12:22:48.4015190Z 
2025-08-17T12:22:48.4015384Z #### compute\_price
2025-08-17T12:22:48.4015547Z 
2025-08-17T12:22:48.4015642Z ```python
2025-08-17T12:22:48.4016041Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T12:22:48.4016515Z ```
2025-08-17T12:22:48.4016657Z 
2025-08-17T12:22:48.4016831Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T12:22:48.4017255Z Replace with real competitive logic later.
2025-08-17T12:22:48.4017524Z 
2025-08-17T12:22:48.4017646Z <a id="repricer.app.main"></a>
2025-08-17T12:22:48.4017868Z 
2025-08-17T12:22:48.4017987Z # repricer.app.main
2025-08-17T12:22:48.4018169Z 
2025-08-17T12:22:48.4018453Z <a id="repricer.app"></a>
2025-08-17T12:22:48.4018678Z 
2025-08-17T12:22:48.4018776Z # repricer.app
2025-08-17T12:22:48.4018925Z 
2025-08-17T12:22:48.4019067Z <a id="repricer.tests.test_imports"></a>
2025-08-17T12:22:48.4019333Z 
2025-08-17T12:22:48.4019457Z # repricer.tests.test\_imports
2025-08-17T12:22:48.4019661Z 
2025-08-17T12:22:48.4019802Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T12:22:48.4020049Z 
2025-08-17T12:22:48.4020168Z # repricer.tests.test\_smoke
2025-08-17T12:22:48.4020534Z 
2025-08-17T12:22:48.4020655Z <a id="repricer.tests"></a>
2025-08-17T12:22:48.4020861Z 
2025-08-17T12:22:48.4020968Z # repricer.tests
2025-08-17T12:22:48.4021136Z 
2025-08-17T12:22:48.4021236Z <a id="db"></a>
2025-08-17T12:22:48.4021387Z 
2025-08-17T12:22:48.4021487Z # db
2025-08-17T12:22:48.4021620Z 
2025-08-17T12:22:48.4021733Z <a id="db.utils.views"></a>
2025-08-17T12:22:48.4021936Z 
2025-08-17T12:22:48.4022047Z # db.utils.views
2025-08-17T12:22:48.4022201Z 
2025-08-17T12:22:48.4022340Z <a id="db.utils.views.replace_view"></a>
2025-08-17T12:22:48.4022629Z 
2025-08-17T12:22:48.4022731Z #### replace\_view
2025-08-17T12:22:48.4022896Z 
2025-08-17T12:22:48.4022988Z ```python
2025-08-17T12:22:48.4023291Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T12:22:48.4023661Z ```
2025-08-17T12:22:48.4023783Z 
2025-08-17T12:22:48.4023917Z Drop and recreate a SQL view atomically.
2025-08-17T12:22:48.4024168Z 
2025-08-17T12:22:48.4024282Z <a id="db.utils"></a>
2025-08-17T12:22:48.4024456Z 
2025-08-17T12:22:48.4024551Z # db.utils
2025-08-17T12:22:48.4024692Z 
2025-08-17T12:22:48.4024808Z <a id="price_importer"></a>
2025-08-17T12:22:48.4025004Z 
2025-08-17T12:22:48.4025113Z # price\_importer
2025-08-17T12:22:48.4025275Z 
2025-08-17T12:22:48.4025432Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T12:22:48.4025711Z 
2025-08-17T12:22:48.4025854Z # price\_importer.services\_common.dsn
2025-08-17T12:22:48.4026103Z 
2025-08-17T12:22:48.4026291Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T12:22:48.4026628Z 
2025-08-17T12:22:48.4026722Z #### build\_dsn
2025-08-17T12:22:48.4026871Z 
2025-08-17T12:22:48.4026972Z ```python
2025-08-17T12:22:48.4027228Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:22:48.4027558Z ```
2025-08-17T12:22:48.4027679Z 
2025-08-17T12:22:48.4027775Z Return safe DSN.
2025-08-17T12:22:48.4027934Z 
2025-08-17T12:22:48.4028393Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T12:22:48.4028704Z 
2025-08-17T12:22:48.4028886Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T12:22:48.4029203Z 
2025-08-17T12:22:48.4029365Z # price\_importer.services\_common.models\_vendor
2025-08-17T12:22:48.4029666Z 
2025-08-17T12:22:48.4029828Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T12:22:48.4030119Z 
2025-08-17T12:22:48.4030257Z # price\_importer.services\_common.db\_url
2025-08-17T12:22:48.4030677Z 
2025-08-17T12:22:48.4030927Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T12:22:48.4031263Z 
2025-08-17T12:22:48.4031551Z #### build\_url
2025-08-17T12:22:48.4031710Z 
2025-08-17T12:22:48.4031804Z ```python
2025-08-17T12:22:48.4032065Z def build_url(async_: bool = True) -> str
2025-08-17T12:22:48.4032395Z ```
2025-08-17T12:22:48.4032528Z 
2025-08-17T12:22:48.4032686Z Return Postgres DSN from env or PG_* parts.
2025-08-17T12:22:48.4032954Z 
2025-08-17T12:22:48.4033125Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T12:22:48.4033433Z 
2025-08-17T12:22:48.4033576Z # price\_importer.services\_common.keepa
2025-08-17T12:22:48.4033831Z 
2025-08-17T12:22:48.4033984Z <a id="price_importer.services_common.llm"></a>
2025-08-17T12:22:48.4034275Z 
2025-08-17T12:22:48.4034410Z # price\_importer.services\_common.llm
2025-08-17T12:22:48.4034652Z 
2025-08-17T12:22:48.4034835Z <a id="price_importer.services_common.settings"></a>
2025-08-17T12:22:48.4035137Z 
2025-08-17T12:22:48.4035293Z # price\_importer.services\_common.settings
2025-08-17T12:22:48.4035567Z 
2025-08-17T12:22:48.4035716Z <a id="price_importer.services_common.db"></a>
2025-08-17T12:22:48.4036206Z 
2025-08-17T12:22:48.4036350Z # price\_importer.services\_common.db
2025-08-17T12:22:48.4036602Z 
2025-08-17T12:22:48.4036838Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T12:22:48.4037209Z 
2025-08-17T12:22:48.4037334Z #### build\_sqlalchemy\_url
2025-08-17T12:22:48.4037538Z 
2025-08-17T12:22:48.4037635Z ```python
2025-08-17T12:22:48.4037896Z def build_sqlalchemy_url() -> str
2025-08-17T12:22:48.4038206Z ```
2025-08-17T12:22:48.4038339Z 
2025-08-17T12:22:48.4038482Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T12:22:48.4038750Z 
2025-08-17T12:22:48.4038975Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T12:22:48.4039317Z 
2025-08-17T12:22:48.4039431Z #### build\_asyncpg\_dsn
2025-08-17T12:22:48.4039625Z 
2025-08-17T12:22:48.4039718Z ```python
2025-08-17T12:22:48.4039972Z def build_asyncpg_dsn() -> str
2025-08-17T12:22:48.4040275Z ```
2025-08-17T12:22:48.4040563Z 
2025-08-17T12:22:48.4040773Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T12:22:48.4041103Z 
2025-08-17T12:22:48.4041304Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T12:22:48.4041621Z 
2025-08-17T12:22:48.4041726Z #### refresh\_mvs
2025-08-17T12:22:48.4041881Z 
2025-08-17T12:22:48.4041977Z ```python
2025-08-17T12:22:48.4042274Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T12:22:48.4042657Z ```
2025-08-17T12:22:48.4042790Z 
2025-08-17T12:22:48.4042999Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T12:22:48.4043328Z 
2025-08-17T12:22:48.4043486Z <a id="price_importer.services_common"></a>
2025-08-17T12:22:48.4043765Z 
2025-08-17T12:22:48.4043900Z # price\_importer.services\_common
2025-08-17T12:22:48.4044139Z 
2025-08-17T12:22:48.4044313Z <a id="price_importer.services_common.base"></a>
2025-08-17T12:22:48.4044598Z 
2025-08-17T12:22:48.4044736Z # price\_importer.services\_common.base
2025-08-17T12:22:48.4045000Z 
2025-08-17T12:22:48.4045138Z <a id="price_importer.normaliser"></a>
2025-08-17T12:22:48.4045416Z 
2025-08-17T12:22:48.4045553Z # price\_importer.normaliser
2025-08-17T12:22:48.4045770Z 
2025-08-17T12:22:48.4045933Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T12:22:48.4046216Z 
2025-08-17T12:22:48.4046357Z # price\_importer.common.models\_vendor
2025-08-17T12:22:48.4046603Z 
2025-08-17T12:22:48.4046741Z <a id="price_importer.common.db_url"></a>
2025-08-17T12:22:48.4047004Z 
2025-08-17T12:22:48.4047134Z # price\_importer.common.db\_url
2025-08-17T12:22:48.4047358Z 
2025-08-17T12:22:48.4047528Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T12:22:48.4047807Z 
2025-08-17T12:22:48.4047908Z #### make\_dsn
2025-08-17T12:22:48.4048056Z 
2025-08-17T12:22:48.4048159Z ```python
2025-08-17T12:22:48.4048422Z def make_dsn(async_: bool = False) -> str
2025-08-17T12:22:48.4048765Z ```
2025-08-17T12:22:48.4048891Z 
2025-08-17T12:22:48.4049077Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T12:22:48.4049396Z 
2025-08-17T12:22:48.4049768Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T12:22:48.4050067Z 
2025-08-17T12:22:48.4050171Z #### build\_url
2025-08-17T12:22:48.4050456Z 
2025-08-17T12:22:48.4050559Z ```python
2025-08-17T12:22:48.4050837Z def build_url(async_: bool = False) -> str
2025-08-17T12:22:48.4051178Z ```
2025-08-17T12:22:48.4051312Z 
2025-08-17T12:22:48.4051505Z Return Postgres DSN built from environment variables.
2025-08-17T12:22:48.4051819Z 
2025-08-17T12:22:48.4051951Z <a id="price_importer.common"></a>
2025-08-17T12:22:48.4052200Z 
2025-08-17T12:22:48.4052322Z # price\_importer.common
2025-08-17T12:22:48.4052519Z 
2025-08-17T12:22:48.4052661Z <a id="price_importer.common.base"></a>
2025-08-17T12:22:48.4052914Z 
2025-08-17T12:22:48.4053037Z # price\_importer.common.base
2025-08-17T12:22:48.4053254Z 
2025-08-17T12:22:48.4053401Z <a id="price_importer.tests.conftest"></a>
2025-08-17T12:22:48.4053664Z 
2025-08-17T12:22:48.4053791Z # price\_importer.tests.conftest
2025-08-17T12:22:48.4054198Z 
2025-08-17T12:22:48.4054351Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T12:22:48.4054629Z 
2025-08-17T12:22:48.4054764Z # price\_importer.tests.test\_reader
2025-08-17T12:22:48.4055058Z 
2025-08-17T12:22:48.4055208Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T12:22:48.4055501Z 
2025-08-17T12:22:48.4055646Z # price\_importer.tests.test\_imports
2025-08-17T12:22:48.4055896Z 
2025-08-17T12:22:48.4056053Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T12:22:48.4056335Z 
2025-08-17T12:22:48.4056465Z # price\_importer.tests.test\_smoke
2025-08-17T12:22:48.4056703Z 
2025-08-17T12:22:48.4056868Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T12:22:48.4057154Z 
2025-08-17T12:22:48.4057295Z # price\_importer.tests.test\_normaliser
2025-08-17T12:22:48.4057555Z 
2025-08-17T12:22:48.4057682Z <a id="price_importer.tests"></a>
2025-08-17T12:22:48.4057922Z 
2025-08-17T12:22:48.4058047Z # price\_importer.tests
2025-08-17T12:22:48.4058240Z 
2025-08-17T12:22:48.4058383Z <a id="price_importer.reader"></a>
2025-08-17T12:22:48.4058624Z 
2025-08-17T12:22:48.4058749Z # price\_importer.reader
2025-08-17T12:22:48.4058942Z 
2025-08-17T12:22:48.4059092Z <a id="price_importer.reader.load_file"></a>
2025-08-17T12:22:48.4059366Z 
2025-08-17T12:22:48.4059466Z #### load\_file
2025-08-17T12:22:48.4059619Z 
2025-08-17T12:22:48.4059714Z ```python
2025-08-17T12:22:48.4059988Z def load_file(path: str | Path) -> Any
2025-08-17T12:22:48.4060472Z ```
2025-08-17T12:22:48.4060609Z 
2025-08-17T12:22:48.4060745Z Return DataFrame from CSV or Excel file.
2025-08-17T12:22:48.4060997Z 
2025-08-17T12:22:48.4061164Z Raises RuntimeError if pandas is unavailable.
2025-08-17T12:22:48.4061441Z 
2025-08-17T12:22:48.4061578Z <a id="price_importer.repository"></a>
2025-08-17T12:22:48.4061841Z 
2025-08-17T12:22:48.4061970Z # price\_importer.repository
2025-08-17T12:22:48.4062181Z 
2025-08-17T12:22:48.4062322Z <a id="price_importer.import"></a>
2025-08-17T12:22:48.4062554Z 
2025-08-17T12:22:48.4062669Z # price\_importer.import
2025-08-17T12:22:48.4062875Z 
2025-08-17T12:22:48.4062990Z <a id="fees_h10"></a>
2025-08-17T12:22:48.4063165Z 
2025-08-17T12:22:48.4063261Z # fees\_h10
2025-08-17T12:22:48.4063403Z 
2025-08-17T12:22:48.4063515Z <a id="fees_h10.worker"></a>
2025-08-17T12:22:48.4063716Z 
2025-08-17T12:22:48.4063850Z # fees\_h10.worker
2025-08-17T12:22:48.4064068Z 
2025-08-17T12:22:48.4064213Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T12:22:48.4064478Z 
2025-08-17T12:22:48.4064592Z #### list\_active\_asins
2025-08-17T12:22:48.4064771Z 
2025-08-17T12:22:48.4064867Z ```python
2025-08-17T12:22:48.4065135Z def list_active_asins() -> list[str]
2025-08-17T12:22:48.4065469Z ```
2025-08-17T12:22:48.4065599Z 
2025-08-17T12:22:48.4065769Z Return known ASINs or an empty list if unavailable.
2025-08-17T12:22:48.4066074Z 
2025-08-17T12:22:48.4066210Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T12:22:48.4066465Z 
2025-08-17T12:22:48.4066591Z # fees\_h10.tests.test\_smoke
2025-08-17T12:22:48.4066807Z 
2025-08-17T12:22:48.4067112Z <a id="fees_h10.tests"></a>
2025-08-17T12:22:48.4067318Z 
2025-08-17T12:22:48.4067424Z # fees\_h10.tests
2025-08-17T12:22:48.4067589Z 
2025-08-17T12:22:48.4067710Z <a id="fees_h10.client"></a>
2025-08-17T12:22:48.4067916Z 
2025-08-17T12:22:48.4068014Z # fees\_h10.client
2025-08-17T12:22:48.4068178Z 
2025-08-17T12:22:48.4068296Z <a id="fees_h10.repository"></a>
2025-08-17T12:22:48.4068513Z 
2025-08-17T12:22:48.4068628Z # fees\_h10.repository
2025-08-17T12:22:48.4068800Z 
2025-08-17T12:22:48.4068901Z <a id="emailer"></a>
2025-08-17T12:22:48.4069074Z 
2025-08-17T12:22:48.4069166Z # emailer
2025-08-17T12:22:48.4069295Z 
2025-08-17T12:22:48.4069446Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T12:22:48.4069728Z 
2025-08-17T12:22:48.4069861Z # emailer.tests.test\_import\_emailer
2025-08-17T12:22:48.4070097Z 
2025-08-17T12:22:48.4070231Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T12:22:48.4070626Z 
2025-08-17T12:22:48.4070749Z # emailer.tests.test\_smoke
2025-08-17T12:22:48.4071136Z 
2025-08-17T12:22:48.4071253Z <a id="emailer.tests"></a>
2025-08-17T12:22:48.4071451Z 
2025-08-17T12:22:48.4071554Z # emailer.tests
2025-08-17T12:22:48.4071718Z 
2025-08-17T12:22:48.4071845Z <a id="emailer.generate_body"></a>
2025-08-17T12:22:48.4072079Z 
2025-08-17T12:22:48.4072198Z # emailer.generate\_body
2025-08-17T12:22:48.4072385Z 
2025-08-17T12:22:48.4072496Z <a id="llm_server"></a>
2025-08-17T12:22:48.4072678Z 
2025-08-17T12:22:48.4072773Z # llm\_server
2025-08-17T12:22:48.4072918Z 
2025-08-17T12:22:48.4073033Z <a id="llm_server.app"></a>
2025-08-17T12:22:48.4073241Z 
2025-08-17T12:22:48.4073343Z # llm\_server.app
2025-08-17T12:22:48.4073503Z 
