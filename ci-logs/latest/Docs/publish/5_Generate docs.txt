2025-08-17T00:13:04.2538942Z ##[group]Run pydoc-markdown
2025-08-17T00:13:04.2539225Z [36;1mpydoc-markdown[0m
2025-08-17T00:13:04.2579327Z shell: /usr/bin/bash -e {0}
2025-08-17T00:13:04.2579566Z env:
2025-08-17T00:13:04.2579794Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:13:04.2580195Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T00:13:04.2580575Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:13:04.2580916Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:13:04.2581251Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:13:04.2581582Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T00:13:04.2581862Z ##[endgroup]
2025-08-17T00:13:04.6044211Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T00:13:04.6044733Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T00:13:04.6045056Z In "pydoc-markdown.yml"
2025-08-17T00:13:04.6045375Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T00:13:04.6045847Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T00:13:04.6046378Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T00:13:04.6046732Z 
2025-08-17T00:13:04.8147800Z <a id="__init__"></a>
2025-08-17T00:13:04.8148153Z 
2025-08-17T00:13:04.8148319Z # \_\_init\_\_
2025-08-17T00:13:04.8148579Z 
2025-08-17T00:13:04.8148745Z <a id="api"></a>
2025-08-17T00:13:04.8149015Z 
2025-08-17T00:13:04.8150770Z # api
2025-08-17T00:13:04.8151037Z 
2025-08-17T00:13:04.8151269Z <a id="api.tests.test_llm"></a>
2025-08-17T00:13:04.8151636Z 
2025-08-17T00:13:04.8151822Z # api.tests.test\_llm
2025-08-17T00:13:04.8152126Z 
2025-08-17T00:13:04.8152344Z <a id="api.tests.test_imports"></a>
2025-08-17T00:13:04.8152747Z 
2025-08-17T00:13:04.8152936Z # api.tests.test\_imports
2025-08-17T00:13:04.8153258Z 
2025-08-17T00:13:04.8153477Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T00:13:04.8154278Z 
2025-08-17T00:13:04.8154499Z # api.tests.test\_entrypoint
2025-08-17T00:13:04.8154853Z 
2025-08-17T00:13:04.8155059Z <a id="api.tests.test_health"></a>
2025-08-17T00:13:04.8155398Z 
2025-08-17T00:13:04.8155565Z # api.tests.test\_health
2025-08-17T00:13:04.8155777Z 
2025-08-17T00:13:04.8155914Z <a id="api.migrations.env"></a>
2025-08-17T00:13:04.8156159Z 
2025-08-17T00:13:04.8156291Z # api.migrations.env
2025-08-17T00:13:04.8156450Z 
2025-08-17T00:13:04.8156678Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T00:13:04.8156915Z 
2025-08-17T00:13:04.8157042Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T00:13:04.8157262Z 
2025-08-17T00:13:04.8157614Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T00:13:04.8157844Z 
2025-08-17T00:13:04.8157953Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T00:13:04.8158158Z 
2025-08-17T00:13:04.8158330Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T00:13:04.8158593Z 
2025-08-17T00:13:04.8158761Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T00:13:04.8159005Z 
2025-08-17T00:13:04.8159137Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T00:13:04.8159364Z 
2025-08-17T00:13:04.8159483Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T00:13:04.8159688Z 
2025-08-17T00:13:04.8159823Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T00:13:04.8160040Z 
2025-08-17T00:13:04.8160150Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T00:13:04.8160351Z 
2025-08-17T00:13:04.8160490Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T00:13:04.8160712Z 
2025-08-17T00:13:04.8160828Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T00:13:04.8161041Z 
2025-08-17T00:13:04.8161166Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T00:13:04.8161378Z 
2025-08-17T00:13:04.8161497Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T00:13:04.8161697Z 
2025-08-17T00:13:04.8161830Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T00:13:04.8162300Z 
2025-08-17T00:13:04.8162414Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T00:13:04.8162614Z 
2025-08-17T00:13:04.8162742Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T00:13:04.8162968Z 
2025-08-17T00:13:04.8163080Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T00:13:04.8163283Z 
2025-08-17T00:13:04.8163406Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T00:13:04.8163614Z 
2025-08-17T00:13:04.8163714Z # api.migrations.versions.0001\_baseline
2025-08-17T00:13:04.8163904Z 
2025-08-17T00:13:04.8163999Z <a id="api.migrations.versions"></a>
2025-08-17T00:13:04.8164174Z 
2025-08-17T00:13:04.8164262Z # api.migrations.versions
2025-08-17T00:13:04.8164408Z 
2025-08-17T00:13:04.8164492Z <a id="api.migrations"></a>
2025-08-17T00:13:04.8164635Z 
2025-08-17T00:13:04.8164713Z # api.migrations
2025-08-17T00:13:04.8164828Z 
2025-08-17T00:13:04.8164902Z <a id="api.db"></a>
2025-08-17T00:13:04.8165028Z 
2025-08-17T00:13:04.8165103Z # api.db
2025-08-17T00:13:04.8165200Z 
2025-08-17T00:13:04.8165288Z <a id="api.routes.stats"></a>
2025-08-17T00:13:04.8165451Z 
2025-08-17T00:13:04.8165527Z # api.routes.stats
2025-08-17T00:13:04.8165653Z 
2025-08-17T00:13:04.8165754Z <a id="api.routes.stats.kpi"></a>
2025-08-17T00:13:04.8165920Z 
2025-08-17T00:13:04.8165988Z #### kpi
2025-08-17T00:13:04.8166083Z 
2025-08-17T00:13:04.8166160Z ```python
2025-08-17T00:13:04.8166343Z @router.get("/stats/kpi")
2025-08-17T00:13:04.8166592Z def kpi() -> List[Dict[str, int]]
2025-08-17T00:13:04.8166791Z ```
2025-08-17T00:13:04.8166878Z 
2025-08-17T00:13:04.8166955Z Return KPI metrics (mock).
2025-08-17T00:13:04.8167084Z 
2025-08-17T00:13:04.8167192Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T00:13:04.8167495Z 
2025-08-17T00:13:04.8167567Z #### roi\_by\_vendor
2025-08-17T00:13:04.8167680Z 
2025-08-17T00:13:04.8167751Z ```python
2025-08-17T00:13:04.8167920Z @router.get("/stats/roi_by_vendor")
2025-08-17T00:13:04.8168294Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T00:13:04.8168519Z ```
2025-08-17T00:13:04.8168607Z 
2025-08-17T00:13:04.8168688Z Return ROI percent by vendor.
2025-08-17T00:13:04.8168828Z 
2025-08-17T00:13:04.8168921Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T00:13:04.8169083Z 
2025-08-17T00:13:04.8169146Z #### roi\_trend
2025-08-17T00:13:04.8169243Z 
2025-08-17T00:13:04.8169311Z ```python
2025-08-17T00:13:04.8169472Z @router.get("/stats/roi_trend")
2025-08-17T00:13:04.8169704Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T00:13:04.8169929Z ```
2025-08-17T00:13:04.8170013Z 
2025-08-17T00:13:04.8170087Z Return 30-day ROI trend.
2025-08-17T00:13:04.8170210Z 
2025-08-17T00:13:04.8170295Z <a id="api.routes.roi"></a>
2025-08-17T00:13:04.8170426Z 
2025-08-17T00:13:04.8170494Z # api.routes.roi
2025-08-17T00:13:04.8170681Z 
2025-08-17T00:13:04.8170768Z <a id="api.routes.health"></a>
2025-08-17T00:13:04.8170934Z 
2025-08-17T00:13:04.8171014Z # api.routes.health
2025-08-17T00:13:04.8171128Z 
2025-08-17T00:13:04.8171221Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T00:13:04.8171383Z 
2025-08-17T00:13:04.8171453Z #### MAX\_SKEW
2025-08-17T00:13:04.8171551Z 
2025-08-17T00:13:04.8171613Z seconds
2025-08-17T00:13:04.8171703Z 
2025-08-17T00:13:04.8171791Z <a id="api.routes.health.health"></a>
2025-08-17T00:13:04.8171948Z 
2025-08-17T00:13:04.8172015Z #### health
2025-08-17T00:13:04.8172104Z 
2025-08-17T00:13:04.8172166Z ```python
2025-08-17T00:13:04.8172358Z @router.get("/health", include_in_schema=False)
2025-08-17T00:13:04.8172722Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T00:13:04.8173055Z ```
2025-08-17T00:13:04.8173135Z 
2025-08-17T00:13:04.8173250Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T00:13:04.8173448Z 
2025-08-17T00:13:04.8173533Z <a id="api.routes.repository"></a>
2025-08-17T00:13:04.8173683Z 
2025-08-17T00:13:04.8173763Z # api.routes.repository
2025-08-17T00:13:04.8173885Z 
2025-08-17T00:13:04.8173987Z <a id="api.routes"></a>
2025-08-17T00:13:04.8174507Z 
2025-08-17T00:13:04.8174633Z # api.routes
2025-08-17T00:13:04.8174799Z 
2025-08-17T00:13:04.8174934Z <a id="api.models.fee"></a>
2025-08-17T00:13:04.8175175Z 
2025-08-17T00:13:04.8175292Z # api.models.fee
2025-08-17T00:13:04.8175471Z 
2025-08-17T00:13:04.8175596Z <a id="api.models"></a>
2025-08-17T00:13:04.8175809Z 
2025-08-17T00:13:04.8175919Z # api.models
2025-08-17T00:13:04.8176075Z 
2025-08-17T00:13:04.8176218Z <a id="api.roi_repository"></a>
2025-08-17T00:13:04.8176451Z 
2025-08-17T00:13:04.8176570Z # api.roi\_repository
2025-08-17T00:13:04.8176768Z 
2025-08-17T00:13:04.8176885Z <a id="api.main"></a>
2025-08-17T00:13:04.8177073Z 
2025-08-17T00:13:04.8177184Z # api.main
2025-08-17T00:13:04.8177339Z 
2025-08-17T00:13:04.8177622Z <a id="api.main.ready"></a>
2025-08-17T00:13:04.8177770Z 
2025-08-17T00:13:04.8177838Z #### ready
2025-08-17T00:13:04.8177926Z 
2025-08-17T00:13:04.8177990Z ```python
2025-08-17T00:13:04.8178268Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T00:13:04.8178726Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T00:13:04.8179088Z                                                                       str]
2025-08-17T00:13:04.8179314Z ```
2025-08-17T00:13:04.8179402Z 
2025-08-17T00:13:04.8179499Z Return 200 only when migrations are at head.
2025-08-17T00:13:04.8179671Z 
2025-08-17T00:13:04.8179752Z <a id="api.config"></a>
2025-08-17T00:13:04.8179871Z 
2025-08-17T00:13:04.8179935Z # api.config
2025-08-17T00:13:04.8180032Z 
2025-08-17T00:13:04.8180110Z <a id="etl"></a>
2025-08-17T00:13:04.8180217Z 
2025-08-17T00:13:04.8180277Z # etl
2025-08-17T00:13:04.8180361Z 
2025-08-17T00:13:04.8180443Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T00:13:04.8180598Z 
2025-08-17T00:13:04.8180669Z # etl.fba\_fee\_ingestor
2025-08-17T00:13:04.8180795Z 
2025-08-17T00:13:04.8180883Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T00:13:04.8181023Z 
2025-08-17T00:13:04.8181100Z # etl.sp\_fees\_ingestor
2025-08-17T00:13:04.8181366Z 
2025-08-17T00:13:04.8181450Z <a id="etl.keepa_ingestor"></a>
2025-08-17T00:13:04.8181590Z 
2025-08-17T00:13:04.8181658Z # etl.keepa\_ingestor
2025-08-17T00:13:04.8181777Z 
2025-08-17T00:13:04.8181842Z <a id="etl.db"></a>
2025-08-17T00:13:04.8181947Z 
2025-08-17T00:13:04.8182014Z # etl.db
2025-08-17T00:13:04.8182104Z 
2025-08-17T00:13:04.8182209Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T00:13:04.8182392Z 
2025-08-17T00:13:04.8182488Z # etl.dialects.amazon\_reimbursements
2025-08-17T00:13:04.8182647Z 
2025-08-17T00:13:04.8182742Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T00:13:04.8182914Z 
2025-08-17T00:13:04.8182994Z # etl.dialects.amazon\_returns
2025-08-17T00:13:04.8183133Z 
2025-08-17T00:13:04.8183212Z <a id="etl.dialects"></a>
2025-08-17T00:13:04.8183337Z 
2025-08-17T00:13:04.8183401Z # etl.dialects
2025-08-17T00:13:04.8183497Z 
2025-08-17T00:13:04.8183570Z <a id="ingest"></a>
2025-08-17T00:13:04.8183674Z 
2025-08-17T00:13:04.8183740Z # ingest
2025-08-17T00:13:04.8183835Z 
2025-08-17T00:13:04.8183919Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T00:13:04.8184072Z 
2025-08-17T00:13:04.8184149Z # ingest.tests.test\_smoke
2025-08-17T00:13:04.8184281Z 
2025-08-17T00:13:04.8184353Z <a id="ingest.tests"></a>
2025-08-17T00:13:04.8184474Z 
2025-08-17T00:13:04.8184544Z # ingest.tests
2025-08-17T00:13:04.8184639Z 
2025-08-17T00:13:04.8184721Z <a id="ingest.upload_router"></a>
2025-08-17T00:13:04.8184868Z 
2025-08-17T00:13:04.8184939Z # ingest.upload\_router
2025-08-17T00:13:04.8185059Z 
2025-08-17T00:13:04.8185137Z <a id="ingest.email_watcher"></a>
2025-08-17T00:13:04.8185285Z 
2025-08-17T00:13:04.8185355Z # ingest.email\_watcher
2025-08-17T00:13:04.8185468Z 
2025-08-17T00:13:04.8185559Z <a id="ingest.email_watcher.main"></a>
2025-08-17T00:13:04.8185723Z 
2025-08-17T00:13:04.8185784Z #### main
2025-08-17T00:13:04.8185870Z 
2025-08-17T00:13:04.8185938Z ```python
2025-08-17T00:13:04.8186104Z def main() -> dict[str, str]
2025-08-17T00:13:04.8186300Z ```
2025-08-17T00:13:04.8186381Z 
2025-08-17T00:13:04.8186639Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T00:13:04.8186863Z 
2025-08-17T00:13:04.8186989Z Returns {"status": "success"} when processing completes.
2025-08-17T00:13:04.8187195Z 
2025-08-17T00:13:04.8187282Z <a id="ingest.ingest_router"></a>
2025-08-17T00:13:04.8187542Z 
2025-08-17T00:13:04.8187617Z # ingest.ingest\_router
2025-08-17T00:13:04.8187738Z 
2025-08-17T00:13:04.8187811Z <a id="logistics_etl"></a>
2025-08-17T00:13:04.8187936Z 
2025-08-17T00:13:04.8188003Z # logistics\_etl
2025-08-17T00:13:04.8188112Z 
2025-08-17T00:13:04.8188186Z Daily logistics ETL job.
2025-08-17T00:13:04.8188307Z 
2025-08-17T00:13:04.8188393Z <a id="logistics_etl.__main__"></a>
2025-08-17T00:13:04.8188543Z 
2025-08-17T00:13:04.8188619Z # logistics\_etl.\_\_main\_\_
2025-08-17T00:13:04.8188758Z 
2025-08-17T00:13:04.8188851Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T00:13:04.8189016Z 
2025-08-17T00:13:04.8189097Z # logistics\_etl.tests.conftest
2025-08-17T00:13:04.8189256Z 
2025-08-17T00:13:04.8189356Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T00:13:04.8189538Z 
2025-08-17T00:13:04.8189632Z # logistics\_etl.tests.test\_repository
2025-08-17T00:13:04.8189793Z 
2025-08-17T00:13:04.8189883Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T00:13:04.8190052Z 
2025-08-17T00:13:04.8190132Z # logistics\_etl.tests.test\_cron
2025-08-17T00:13:04.8190272Z 
2025-08-17T00:13:04.8190368Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T00:13:04.8190541Z 
2025-08-17T00:13:04.8190625Z # logistics\_etl.tests.test\_imports
2025-08-17T00:13:04.8190779Z 
2025-08-17T00:13:04.8190874Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T00:13:04.8191040Z 
2025-08-17T00:13:04.8191124Z # logistics\_etl.tests.test\_smoke
2025-08-17T00:13:04.8191276Z 
2025-08-17T00:13:04.8191367Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T00:13:04.8191532Z 
2025-08-17T00:13:04.8191610Z # logistics\_etl.tests.test\_client
2025-08-17T00:13:04.8191887Z 
2025-08-17T00:13:04.8191971Z <a id="logistics_etl.tests"></a>
2025-08-17T00:13:04.8192113Z 
2025-08-17T00:13:04.8192187Z # logistics\_etl.tests
2025-08-17T00:13:04.8192303Z 
2025-08-17T00:13:04.8192380Z <a id="logistics_etl.flow"></a>
2025-08-17T00:13:04.8192523Z 
2025-08-17T00:13:04.8192593Z # logistics\_etl.flow
2025-08-17T00:13:04.8192706Z 
2025-08-17T00:13:04.8192786Z <a id="logistics_etl.client"></a>
2025-08-17T00:13:04.8192936Z 
2025-08-17T00:13:04.8193008Z # logistics\_etl.client
2025-08-17T00:13:04.8193126Z 
2025-08-17T00:13:04.8193208Z <a id="logistics_etl.cron"></a>
2025-08-17T00:13:04.8193342Z 
2025-08-17T00:13:04.8193412Z # logistics\_etl.cron
2025-08-17T00:13:04.8193522Z 
2025-08-17T00:13:04.8193604Z <a id="logistics_etl.db"></a>
2025-08-17T00:13:04.8193743Z 
2025-08-17T00:13:04.8193814Z # logistics\_etl.db
2025-08-17T00:13:04.8193930Z 
2025-08-17T00:13:04.8194016Z <a id="logistics_etl.repository"></a>
2025-08-17T00:13:04.8194173Z 
2025-08-17T00:13:04.8194255Z # logistics\_etl.repository
2025-08-17T00:13:04.8194407Z 
2025-08-17T00:13:04.8194494Z <a id="alert_bot"></a>
2025-08-17T00:13:04.8194605Z 
2025-08-17T00:13:04.8194677Z # alert\_bot
2025-08-17T00:13:04.8194771Z 
2025-08-17T00:13:04.8194857Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T00:13:04.8195020Z 
2025-08-17T00:13:04.8195098Z # alert\_bot.tests.test\_smoke
2025-08-17T00:13:04.8195232Z 
2025-08-17T00:13:04.8195306Z <a id="alert_bot.tests"></a>
2025-08-17T00:13:04.8195441Z 
2025-08-17T00:13:04.8195507Z # alert\_bot.tests
2025-08-17T00:13:04.8195610Z 
2025-08-17T00:13:04.8195693Z <a id="alert_bot.alert_bot"></a>
2025-08-17T00:13:04.8195830Z 
2025-08-17T00:13:04.8195899Z # alert\_bot.alert\_bot
2025-08-17T00:13:04.8196027Z 
2025-08-17T00:13:04.8196100Z <a id="alert_bot.rules"></a>
2025-08-17T00:13:04.8196227Z 
2025-08-17T00:13:04.8196291Z # alert\_bot.rules
2025-08-17T00:13:04.8196396Z 
2025-08-17T00:13:04.8196460Z <a id="common"></a>
2025-08-17T00:13:04.8196563Z 
2025-08-17T00:13:04.8196629Z # common
2025-08-17T00:13:04.8196720Z 
2025-08-17T00:13:04.8196903Z <a id="common.dsn"></a>
2025-08-17T00:13:04.8197018Z 
2025-08-17T00:13:04.8197085Z # common.dsn
2025-08-17T00:13:04.8197178Z 
2025-08-17T00:13:04.8197259Z <a id="common.dsn.build_dsn"></a>
2025-08-17T00:13:04.8197609Z 
2025-08-17T00:13:04.8197687Z #### build\_dsn
2025-08-17T00:13:04.8197797Z 
2025-08-17T00:13:04.8197867Z ```python
2025-08-17T00:13:04.8198040Z def build_dsn(sync: bool = True) -> str
2025-08-17T00:13:04.8198268Z ```
2025-08-17T00:13:04.8198348Z 
2025-08-17T00:13:04.8198468Z Return a Postgres DSN, validating required variables.
2025-08-17T00:13:04.8198674Z 
2025-08-17T00:13:04.8198862Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T00:13:04.8199292Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T00:13:04.8199706Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T00:13:04.8200014Z missing.
2025-08-17T00:13:04.8200101Z 
2025-08-17T00:13:04.8200188Z <a id="common.models_vendor"></a>
2025-08-17T00:13:04.8200340Z 
2025-08-17T00:13:04.8200417Z # common.models\_vendor
2025-08-17T00:13:04.8200536Z 
2025-08-17T00:13:04.8200622Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T00:13:04.8200793Z 
2025-08-17T00:13:04.8200859Z ## Vendor Objects
2025-08-17T00:13:04.8200964Z 
2025-08-17T00:13:04.8201027Z ```python
2025-08-17T00:13:04.8201184Z class Vendor(Base)
2025-08-17T00:13:04.8201366Z ```
2025-08-17T00:13:04.8201447Z 
2025-08-17T00:13:04.8201531Z Vendor of inventory items.
2025-08-17T00:13:04.8201660Z 
2025-08-17T00:13:04.8201759Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T00:13:04.8201939Z 
2025-08-17T00:13:04.8202012Z ## VendorPrice Objects
2025-08-17T00:13:04.8202125Z 
2025-08-17T00:13:04.8202185Z ```python
2025-08-17T00:13:04.8202350Z class VendorPrice(Base)
2025-08-17T00:13:04.8202526Z ```
2025-08-17T00:13:04.8202607Z 
2025-08-17T00:13:04.8202708Z Association table linking vendors to pricing.
2025-08-17T00:13:04.8202886Z 
2025-08-17T00:13:04.8203169Z <a id="common.db_url"></a>
2025-08-17T00:13:04.8203304Z 
2025-08-17T00:13:04.8203370Z # common.db\_url
2025-08-17T00:13:04.8203479Z 
2025-08-17T00:13:04.8203560Z <a id="common.db_url.build_url"></a>
2025-08-17T00:13:04.8203713Z 
2025-08-17T00:13:04.8203776Z #### build\_url
2025-08-17T00:13:04.8203880Z 
2025-08-17T00:13:04.8203941Z ```python
2025-08-17T00:13:04.8204121Z def build_url(async_: bool = True) -> str
2025-08-17T00:13:04.8204340Z ```
2025-08-17T00:13:04.8204420Z 
2025-08-17T00:13:04.8204521Z Return Postgres DSN from env or PG_* parts.
2025-08-17T00:13:04.8204693Z 
2025-08-17T00:13:04.8204769Z <a id="common.keepa"></a>
2025-08-17T00:13:04.8204903Z 
2025-08-17T00:13:04.8204969Z # common.keepa
2025-08-17T00:13:04.8205066Z 
2025-08-17T00:13:04.8205144Z <a id="common.llm"></a>
2025-08-17T00:13:04.8205261Z 
2025-08-17T00:13:04.8205323Z # common.llm
2025-08-17T00:13:04.8205415Z 
2025-08-17T00:13:04.8205498Z <a id="common.settings"></a>
2025-08-17T00:13:04.8205635Z 
2025-08-17T00:13:04.8205707Z # common.settings
2025-08-17T00:13:04.8205819Z 
2025-08-17T00:13:04.8205886Z <a id="common.db"></a>
2025-08-17T00:13:04.8206000Z 
2025-08-17T00:13:04.8206061Z # common.db
2025-08-17T00:13:04.8206154Z 
2025-08-17T00:13:04.8206243Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T00:13:04.8206406Z 
2025-08-17T00:13:04.8206485Z #### build\_sqlalchemy\_url
2025-08-17T00:13:04.8206615Z 
2025-08-17T00:13:04.8206676Z ```python
2025-08-17T00:13:04.8206847Z def build_sqlalchemy_url() -> str
2025-08-17T00:13:04.8207048Z ```
2025-08-17T00:13:04.8207133Z 
2025-08-17T00:13:04.8207224Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T00:13:04.8207524Z 
2025-08-17T00:13:04.8207620Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T00:13:04.8207785Z 
2025-08-17T00:13:04.8207857Z #### build\_asyncpg\_dsn
2025-08-17T00:13:04.8207978Z 
2025-08-17T00:13:04.8208043Z ```python
2025-08-17T00:13:04.8208204Z def build_asyncpg_dsn() -> str
2025-08-17T00:13:04.8208403Z ```
2025-08-17T00:13:04.8208479Z 
2025-08-17T00:13:04.8208609Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T00:13:04.8209066Z 
2025-08-17T00:13:04.8209149Z <a id="common.db.refresh_mvs"></a>
2025-08-17T00:13:04.8209299Z 
2025-08-17T00:13:04.8209367Z #### refresh\_mvs
2025-08-17T00:13:04.8209469Z 
2025-08-17T00:13:04.8209530Z ```python
2025-08-17T00:13:04.8209728Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T00:13:04.8209972Z ```
2025-08-17T00:13:04.8210056Z 
2025-08-17T00:13:04.8210188Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T00:13:04.8210397Z 
2025-08-17T00:13:04.8210472Z <a id="common.config"></a>
2025-08-17T00:13:04.8210607Z 
2025-08-17T00:13:04.8210672Z # common.config
2025-08-17T00:13:04.8210773Z 
2025-08-17T00:13:04.8210853Z <a id="common.base"></a>
2025-08-17T00:13:04.8210971Z 
2025-08-17T00:13:04.8211034Z # common.base
2025-08-17T00:13:04.8211135Z 
2025-08-17T00:13:04.8211214Z <a id="common.base.Base"></a>
2025-08-17T00:13:04.8211349Z 
2025-08-17T00:13:04.8211411Z ## Base Objects
2025-08-17T00:13:04.8211519Z 
2025-08-17T00:13:04.8211587Z ```python
2025-08-17T00:13:04.8211746Z class Base(DeclarativeBase)
2025-08-17T00:13:04.8211941Z ```
2025-08-17T00:13:04.8212021Z 
2025-08-17T00:13:04.8212110Z Base class for SQLAlchemy models.
2025-08-17T00:13:04.8212256Z 
2025-08-17T00:13:04.8212327Z <a id="repricer"></a>
2025-08-17T00:13:04.8212445Z 
2025-08-17T00:13:04.8212508Z # repricer
2025-08-17T00:13:04.8212597Z 
2025-08-17T00:13:04.8212682Z <a id="repricer.app.schemas"></a>
2025-08-17T00:13:04.8212833Z 
2025-08-17T00:13:04.8212909Z # repricer.app.schemas
2025-08-17T00:13:04.8213028Z 
2025-08-17T00:13:04.8213119Z <a id="repricer.app.deps"></a>
2025-08-17T00:13:04.8213263Z 
2025-08-17T00:13:04.8213337Z # repricer.app.deps
2025-08-17T00:13:04.8213446Z 
2025-08-17T00:13:04.8213565Z Placeholder module for Keepa / SP-API clients.
2025-08-17T00:13:04.8213746Z 
2025-08-17T00:13:04.8213828Z <a id="repricer.app.logic"></a>
2025-08-17T00:13:04.8213975Z 
2025-08-17T00:13:04.8214049Z # repricer.app.logic
2025-08-17T00:13:04.8214281Z 
2025-08-17T00:13:04.8214389Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T00:13:04.8214560Z 
2025-08-17T00:13:04.8214623Z #### MIN\_MARGIN
2025-08-17T00:13:04.8214721Z 
2025-08-17T00:13:04.8214788Z 15 % ROI
2025-08-17T00:13:04.8214874Z 
2025-08-17T00:13:04.8214975Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T00:13:04.8215164Z 
2025-08-17T00:13:04.8215231Z #### compute\_price
2025-08-17T00:13:04.8215334Z 
2025-08-17T00:13:04.8215410Z ```python
2025-08-17T00:13:04.8215834Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T00:13:04.8216340Z ```
2025-08-17T00:13:04.8216485Z 
2025-08-17T00:13:04.8216664Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T00:13:04.8217125Z Replace with real competitive logic later.
2025-08-17T00:13:04.8217536Z 
2025-08-17T00:13:04.8217676Z <a id="repricer.app.main"></a>
2025-08-17T00:13:04.8217869Z 
2025-08-17T00:13:04.8217941Z # repricer.app.main
2025-08-17T00:13:04.8218048Z 
2025-08-17T00:13:04.8218137Z <a id="repricer.app"></a>
2025-08-17T00:13:04.8218264Z 
2025-08-17T00:13:04.8218332Z # repricer.app
2025-08-17T00:13:04.8218428Z 
2025-08-17T00:13:04.8218521Z <a id="repricer.tests.test_imports"></a>
2025-08-17T00:13:04.8218684Z 
2025-08-17T00:13:04.8218761Z # repricer.tests.test\_imports
2025-08-17T00:13:04.8218904Z 
2025-08-17T00:13:04.8218991Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T00:13:04.8219146Z 
2025-08-17T00:13:04.8219231Z # repricer.tests.test\_smoke
2025-08-17T00:13:04.8219365Z 
2025-08-17T00:13:04.8219440Z <a id="repricer.tests"></a>
2025-08-17T00:13:04.8219569Z 
2025-08-17T00:13:04.8219699Z # repricer.tests
2025-08-17T00:13:04.8219801Z 
2025-08-17T00:13:04.8219865Z <a id="db"></a>
2025-08-17T00:13:04.8219971Z 
2025-08-17T00:13:04.8220029Z # db
2025-08-17T00:13:04.8220111Z 
2025-08-17T00:13:04.8220184Z <a id="db.utils.views"></a>
2025-08-17T00:13:04.8220316Z 
2025-08-17T00:13:04.8220380Z # db.utils.views
2025-08-17T00:13:04.8220479Z 
2025-08-17T00:13:04.8220575Z <a id="db.utils.views.replace_view"></a>
2025-08-17T00:13:04.8220880Z 
2025-08-17T00:13:04.8220947Z #### replace\_view
2025-08-17T00:13:04.8221055Z 
2025-08-17T00:13:04.8221119Z ```python
2025-08-17T00:13:04.8221310Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T00:13:04.8221555Z ```
2025-08-17T00:13:04.8221635Z 
2025-08-17T00:13:04.8221725Z Drop and recreate a SQL view atomically.
2025-08-17T00:13:04.8221885Z 
2025-08-17T00:13:04.8221955Z <a id="db.utils"></a>
2025-08-17T00:13:04.8222067Z 
2025-08-17T00:13:04.8222134Z # db.utils
2025-08-17T00:13:04.8222222Z 
2025-08-17T00:13:04.8222299Z <a id="price_importer"></a>
2025-08-17T00:13:04.8222431Z 
2025-08-17T00:13:04.8222497Z # price\_importer
2025-08-17T00:13:04.8222599Z 
2025-08-17T00:13:04.8222701Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T00:13:04.8222888Z 
2025-08-17T00:13:04.8222975Z # price\_importer.services\_common.dsn
2025-08-17T00:13:04.8223133Z 
2025-08-17T00:13:04.8223258Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T00:13:04.8223470Z 
2025-08-17T00:13:04.8223535Z #### build\_dsn
2025-08-17T00:13:04.8223640Z 
2025-08-17T00:13:04.8223700Z ```python
2025-08-17T00:13:04.8223866Z def build_dsn(sync: bool = True) -> str
2025-08-17T00:13:04.8224194Z ```
2025-08-17T00:13:04.8224274Z 
2025-08-17T00:13:04.8224346Z Return safe DSN.
2025-08-17T00:13:04.8224448Z 
2025-08-17T00:13:04.8224802Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T00:13:04.8225006Z 
2025-08-17T00:13:04.8225141Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T00:13:04.8225344Z 
2025-08-17T00:13:04.8225453Z # price\_importer.services\_common.models\_vendor
2025-08-17T00:13:04.8225649Z 
2025-08-17T00:13:04.8225755Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T00:13:04.8225941Z 
2025-08-17T00:13:04.8226040Z # price\_importer.services\_common.db\_url
2025-08-17T00:13:04.8226211Z 
2025-08-17T00:13:04.8226344Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T00:13:04.8226687Z 
2025-08-17T00:13:04.8226759Z #### build\_url
2025-08-17T00:13:04.8226858Z 
2025-08-17T00:13:04.8226920Z ```python
2025-08-17T00:13:04.8227101Z def build_url(async_: bool = True) -> str
2025-08-17T00:13:04.8227322Z ```
2025-08-17T00:13:04.8227554Z 
2025-08-17T00:13:04.8227651Z Return Postgres DSN from env or PG_* parts.
2025-08-17T00:13:04.8227825Z 
2025-08-17T00:13:04.8227935Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T00:13:04.8228118Z 
2025-08-17T00:13:04.8228236Z # price\_importer.services\_common.keepa
2025-08-17T00:13:04.8228404Z 
2025-08-17T00:13:04.8228503Z <a id="price_importer.services_common.llm"></a>
2025-08-17T00:13:04.8228679Z 
2025-08-17T00:13:04.8228766Z # price\_importer.services\_common.llm
2025-08-17T00:13:04.8228932Z 
2025-08-17T00:13:04.8229044Z <a id="price_importer.services_common.settings"></a>
2025-08-17T00:13:04.8229234Z 
2025-08-17T00:13:04.8229334Z # price\_importer.services\_common.settings
2025-08-17T00:13:04.8229501Z 
2025-08-17T00:13:04.8229596Z <a id="price_importer.services_common.db"></a>
2025-08-17T00:13:04.8229786Z 
2025-08-17T00:13:04.8229874Z # price\_importer.services\_common.db
2025-08-17T00:13:04.8230028Z 
2025-08-17T00:13:04.8230182Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T00:13:04.8230423Z 
2025-08-17T00:13:04.8230498Z #### build\_sqlalchemy\_url
2025-08-17T00:13:04.8230630Z 
2025-08-17T00:13:04.8230698Z ```python
2025-08-17T00:13:04.8230864Z def build_sqlalchemy_url() -> str
2025-08-17T00:13:04.8231069Z ```
2025-08-17T00:13:04.8231151Z 
2025-08-17T00:13:04.8231244Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T00:13:04.8231415Z 
2025-08-17T00:13:04.8231557Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T00:13:04.8231776Z 
2025-08-17T00:13:04.8231856Z #### build\_asyncpg\_dsn
2025-08-17T00:13:04.8231980Z 
2025-08-17T00:13:04.8232041Z ```python
2025-08-17T00:13:04.8232213Z def build_asyncpg_dsn() -> str
2025-08-17T00:13:04.8232402Z ```
2025-08-17T00:13:04.8232486Z 
2025-08-17T00:13:04.8232616Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T00:13:04.8232945Z 
2025-08-17T00:13:04.8233068Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T00:13:04.8233277Z 
2025-08-17T00:13:04.8233341Z #### refresh\_mvs
2025-08-17T00:13:04.8233443Z 
2025-08-17T00:13:04.8233509Z ```python
2025-08-17T00:13:04.8233697Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T00:13:04.8233946Z ```
2025-08-17T00:13:04.8234024Z 
2025-08-17T00:13:04.8234153Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T00:13:04.8234367Z 
2025-08-17T00:13:04.8234457Z <a id="price_importer.services_common"></a>
2025-08-17T00:13:04.8234624Z 
2025-08-17T00:13:04.8234712Z # price\_importer.services\_common
2025-08-17T00:13:04.8234861Z 
2025-08-17T00:13:04.8234965Z <a id="price_importer.services_common.base"></a>
2025-08-17T00:13:04.8235143Z 
2025-08-17T00:13:04.8235233Z # price\_importer.services\_common.base
2025-08-17T00:13:04.8235394Z 
2025-08-17T00:13:04.8235484Z <a id="price_importer.normaliser"></a>
2025-08-17T00:13:04.8235652Z 
2025-08-17T00:13:04.8235738Z # price\_importer.normaliser
2025-08-17T00:13:04.8235873Z 
2025-08-17T00:13:04.8235978Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T00:13:04.8236155Z 
2025-08-17T00:13:04.8236241Z # price\_importer.common.models\_vendor
2025-08-17T00:13:04.8236400Z 
2025-08-17T00:13:04.8236495Z <a id="price_importer.common.db_url"></a>
2025-08-17T00:13:04.8236665Z 
2025-08-17T00:13:04.8236746Z # price\_importer.common.db\_url
2025-08-17T00:13:04.8236900Z 
2025-08-17T00:13:04.8237003Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T00:13:04.8237185Z 
2025-08-17T00:13:04.8237251Z #### make\_dsn
2025-08-17T00:13:04.8237347Z 
2025-08-17T00:13:04.8237544Z ```python
2025-08-17T00:13:04.8237719Z def make_dsn(async_: bool = False) -> str
2025-08-17T00:13:04.8237935Z ```
2025-08-17T00:13:04.8238018Z 
2025-08-17T00:13:04.8238134Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T00:13:04.8238489Z 
2025-08-17T00:13:04.8238602Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T00:13:04.8238793Z 
2025-08-17T00:13:04.8238854Z #### build\_url
2025-08-17T00:13:04.8238956Z 
2025-08-17T00:13:04.8239020Z ```python
2025-08-17T00:13:04.8239189Z def build_url(async_: bool = False) -> str
2025-08-17T00:13:04.8239418Z ```
2025-08-17T00:13:04.8239497Z 
2025-08-17T00:13:04.8239616Z Return Postgres DSN built from environment variables.
2025-08-17T00:13:04.8239816Z 
2025-08-17T00:13:04.8239899Z <a id="price_importer.common"></a>
2025-08-17T00:13:04.8240050Z 
2025-08-17T00:13:04.8240130Z # price\_importer.common
2025-08-17T00:13:04.8240266Z 
2025-08-17T00:13:04.8240354Z <a id="price_importer.common.base"></a>
2025-08-17T00:13:04.8240515Z 
2025-08-17T00:13:04.8240602Z # price\_importer.common.base
2025-08-17T00:13:04.8240740Z 
2025-08-17T00:13:04.8240834Z <a id="price_importer.tests.conftest"></a>
2025-08-17T00:13:04.8241014Z 
2025-08-17T00:13:04.8241095Z # price\_importer.tests.conftest
2025-08-17T00:13:04.8241244Z 
2025-08-17T00:13:04.8241345Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T00:13:04.8241524Z 
2025-08-17T00:13:04.8241608Z # price\_importer.tests.test\_reader
2025-08-17T00:13:04.8241763Z 
2025-08-17T00:13:04.8241866Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T00:13:04.8242040Z 
2025-08-17T00:13:04.8242126Z # price\_importer.tests.test\_imports
2025-08-17T00:13:04.8242287Z 
2025-08-17T00:13:04.8242379Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T00:13:04.8242547Z 
2025-08-17T00:13:04.8242630Z # price\_importer.tests.test\_smoke
2025-08-17T00:13:04.8242785Z 
2025-08-17T00:13:04.8242889Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T00:13:04.8243069Z 
2025-08-17T00:13:04.8243168Z # price\_importer.tests.test\_normaliser
2025-08-17T00:13:04.8243337Z 
2025-08-17T00:13:04.8243421Z <a id="price_importer.tests"></a>
2025-08-17T00:13:04.8243573Z 
2025-08-17T00:13:04.8243651Z # price\_importer.tests
2025-08-17T00:13:04.8243771Z 
2025-08-17T00:13:04.8243860Z <a id="price_importer.reader"></a>
2025-08-17T00:13:04.8244132Z 
2025-08-17T00:13:04.8244208Z # price\_importer.reader
2025-08-17T00:13:04.8244334Z 
2025-08-17T00:13:04.8244436Z <a id="price_importer.reader.load_file"></a>
2025-08-17T00:13:04.8244606Z 
2025-08-17T00:13:04.8244671Z #### load\_file
2025-08-17T00:13:04.8244775Z 
2025-08-17T00:13:04.8244838Z ```python
2025-08-17T00:13:04.8245008Z def load_file(path: str | Path) -> Any
2025-08-17T00:13:04.8245225Z ```
2025-08-17T00:13:04.8245304Z 
2025-08-17T00:13:04.8245391Z Return DataFrame from CSV or Excel file.
2025-08-17T00:13:04.8245558Z 
2025-08-17T00:13:04.8245661Z Raises RuntimeError if pandas is unavailable.
2025-08-17T00:13:04.8245846Z 
2025-08-17T00:13:04.8245942Z <a id="price_importer.repository"></a>
2025-08-17T00:13:04.8246100Z 
2025-08-17T00:13:04.8246183Z # price\_importer.repository
2025-08-17T00:13:04.8246328Z 
2025-08-17T00:13:04.8246413Z <a id="price_importer.import"></a>
2025-08-17T00:13:04.8246559Z 
2025-08-17T00:13:04.8246639Z # price\_importer.import
2025-08-17T00:13:04.8246774Z 
2025-08-17T00:13:04.8246844Z <a id="fees_h10"></a>
2025-08-17T00:13:04.8246955Z 
2025-08-17T00:13:04.8247031Z # fees\_h10
2025-08-17T00:13:04.8247125Z 
2025-08-17T00:13:04.8247200Z <a id="fees_h10.worker"></a>
2025-08-17T00:13:04.8247338Z 
2025-08-17T00:13:04.8247515Z # fees\_h10.worker
2025-08-17T00:13:04.8247621Z 
2025-08-17T00:13:04.8247718Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T00:13:04.8247900Z 
2025-08-17T00:13:04.8247971Z #### list\_active\_asins
2025-08-17T00:13:04.8248093Z 
2025-08-17T00:13:04.8248160Z ```python
2025-08-17T00:13:04.8248328Z def list_active_asins() -> list[str]
2025-08-17T00:13:04.8248546Z ```
2025-08-17T00:13:04.8248628Z 
2025-08-17T00:13:04.8248739Z Return known ASINs or an empty list if unavailable.
2025-08-17T00:13:04.8248936Z 
2025-08-17T00:13:04.8249019Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T00:13:04.8249179Z 
2025-08-17T00:13:04.8249261Z # fees\_h10.tests.test\_smoke
2025-08-17T00:13:04.8249532Z 
2025-08-17T00:13:04.8249612Z <a id="fees_h10.tests"></a>
2025-08-17T00:13:04.8249741Z 
2025-08-17T00:13:04.8249812Z # fees\_h10.tests
2025-08-17T00:13:04.8249914Z 
2025-08-17T00:13:04.8249988Z <a id="fees_h10.client"></a>
2025-08-17T00:13:04.8250126Z 
2025-08-17T00:13:04.8250190Z # fees\_h10.client
2025-08-17T00:13:04.8250293Z 
2025-08-17T00:13:04.8250374Z <a id="fees_h10.repository"></a>
2025-08-17T00:13:04.8250524Z 
2025-08-17T00:13:04.8250597Z # fees\_h10.repository
2025-08-17T00:13:04.8250712Z 
2025-08-17T00:13:04.8250788Z <a id="emailer"></a>
2025-08-17T00:13:04.8250899Z 
2025-08-17T00:13:04.8250965Z # emailer
2025-08-17T00:13:04.8251059Z 
2025-08-17T00:13:04.8251160Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T00:13:04.8251337Z 
2025-08-17T00:13:04.8251424Z # emailer.tests.test\_import\_emailer
2025-08-17T00:13:04.8251583Z 
2025-08-17T00:13:04.8251666Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T00:13:04.8251817Z 
2025-08-17T00:13:04.8251900Z # emailer.tests.test\_smoke
2025-08-17T00:13:04.8252038Z 
2025-08-17T00:13:04.8252119Z <a id="emailer.tests"></a>
2025-08-17T00:13:04.8252249Z 
2025-08-17T00:13:04.8252313Z # emailer.tests
2025-08-17T00:13:04.8252416Z 
2025-08-17T00:13:04.8252498Z <a id="emailer.generate_body"></a>
2025-08-17T00:13:04.8252654Z 
2025-08-17T00:13:04.8252730Z # emailer.generate\_body
2025-08-17T00:13:04.8252853Z 
2025-08-17T00:13:04.8252927Z <a id="llm_server"></a>
2025-08-17T00:13:04.8253041Z 
2025-08-17T00:13:04.8253103Z # llm\_server
2025-08-17T00:13:04.8253200Z 
2025-08-17T00:13:04.8253283Z <a id="llm_server.app"></a>
2025-08-17T00:13:04.8253410Z 
2025-08-17T00:13:04.8253476Z # llm\_server.app
2025-08-17T00:13:04.8253585Z 
