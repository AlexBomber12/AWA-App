2025-08-18T20:40:08.8020542Z ##[group]Run pydoc-markdown
2025-08-18T20:40:08.8020850Z [36;1mpydoc-markdown[0m
2025-08-18T20:40:08.8061984Z shell: /usr/bin/bash -e {0}
2025-08-18T20:40:08.8062244Z env:
2025-08-18T20:40:08.8062478Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:40:08.8062866Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T20:40:08.8063237Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:40:08.8063560Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:40:08.8063896Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:40:08.8064222Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T20:40:08.8064507Z ##[endgroup]
2025-08-18T20:40:09.1700183Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T20:40:09.1700997Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T20:40:09.1701560Z In "pydoc-markdown.yml"
2025-08-18T20:40:09.1702078Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T20:40:09.1702905Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T20:40:09.1703829Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T20:40:09.1704490Z 
2025-08-18T20:40:09.4762510Z <a id="__init__"></a>
2025-08-18T20:40:09.4762979Z 
2025-08-18T20:40:09.4763132Z # \_\_init\_\_
2025-08-18T20:40:09.4763353Z 
2025-08-18T20:40:09.4763501Z <a id="api"></a>
2025-08-18T20:40:09.4763738Z 
2025-08-18T20:40:09.4763871Z # api
2025-08-18T20:40:09.4764076Z 
2025-08-18T20:40:09.4764241Z <a id="api.errors"></a>
2025-08-18T20:40:09.4764515Z 
2025-08-18T20:40:09.4764675Z # api.errors
2025-08-18T20:40:09.4764899Z 
2025-08-18T20:40:09.4765074Z <a id="api.sentry_config"></a>
2025-08-18T20:40:09.4765381Z 
2025-08-18T20:40:09.4765583Z # api.sentry\_config
2025-08-18T20:40:09.4765885Z 
2025-08-18T20:40:09.4766133Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T20:40:09.4766560Z 
2025-08-18T20:40:09.4766780Z # api.tests.test\_sentry\_scrub
2025-08-18T20:40:09.4767220Z 
2025-08-18T20:40:09.4767413Z <a id="api.tests.test_errors_json"></a>
2025-08-18T20:40:09.4767787Z 
2025-08-18T20:40:09.4767967Z # api.tests.test\_errors\_json
2025-08-18T20:40:09.4768269Z 
2025-08-18T20:40:09.4768672Z <a id="api.tests.test_llm"></a>
2025-08-18T20:40:09.4768933Z 
2025-08-18T20:40:09.4769071Z # api.tests.test\_llm
2025-08-18T20:40:09.4769285Z 
2025-08-18T20:40:09.4769455Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T20:40:09.4769758Z 
2025-08-18T20:40:09.4769901Z # api.tests.test\_sentry\_event
2025-08-18T20:40:09.4770156Z 
2025-08-18T20:40:09.4770288Z <a id="api.tests.test_cors"></a>
2025-08-18T20:40:09.4770458Z 
2025-08-18T20:40:09.4770549Z # api.tests.test\_cors
2025-08-18T20:40:09.4770687Z 
2025-08-18T20:40:09.4770785Z <a id="api.tests.test_imports"></a>
2025-08-18T20:40:09.4770966Z 
2025-08-18T20:40:09.4771062Z # api.tests.test\_imports
2025-08-18T20:40:09.4771212Z 
2025-08-18T20:40:09.4771312Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T20:40:09.4771737Z 
2025-08-18T20:40:09.4771831Z # api.tests.test\_rate\_limit
2025-08-18T20:40:09.4771995Z 
2025-08-18T20:40:09.4772104Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T20:40:09.4772315Z 
2025-08-18T20:40:09.4772392Z #### app
2025-08-18T20:40:09.4772496Z 
2025-08-18T20:40:09.4772578Z noqa: E402
2025-08-18T20:40:09.4772684Z 
2025-08-18T20:40:09.4772785Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T20:40:09.4772978Z 
2025-08-18T20:40:09.4773076Z # api.tests.test\_entrypoint
2025-08-18T20:40:09.4773236Z 
2025-08-18T20:40:09.4773336Z <a id="api.tests.test_health"></a>
2025-08-18T20:40:09.4773520Z 
2025-08-18T20:40:09.4773608Z # api.tests.test\_health
2025-08-18T20:40:09.4773753Z 
2025-08-18T20:40:09.4773852Z <a id="api.logging_config"></a>
2025-08-18T20:40:09.4774014Z 
2025-08-18T20:40:09.4774098Z # api.logging\_config
2025-08-18T20:40:09.4774237Z 
2025-08-18T20:40:09.4774333Z <a id="api.migrations.env"></a>
2025-08-18T20:40:09.4774500Z 
2025-08-18T20:40:09.4774585Z # api.migrations.env
2025-08-18T20:40:09.4774911Z 
2025-08-18T20:40:09.4775047Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T20:40:09.4775283Z 
2025-08-18T20:40:09.4775412Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T20:40:09.4775629Z 
2025-08-18T20:40:09.4775755Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T20:40:09.4775983Z 
2025-08-18T20:40:09.4776094Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T20:40:09.4776297Z 
2025-08-18T20:40:09.4776474Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T20:40:09.4776759Z 
2025-08-18T20:40:09.4776917Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T20:40:09.4777173Z 
2025-08-18T20:40:09.4777322Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T20:40:09.4777626Z 
2025-08-18T20:40:09.4777751Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T20:40:09.4777974Z 
2025-08-18T20:40:09.4778109Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T20:40:09.4778545Z 
2025-08-18T20:40:09.4778691Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T20:40:09.4778880Z 
2025-08-18T20:40:09.4779010Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T20:40:09.4779215Z 
2025-08-18T20:40:09.4779330Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T20:40:09.4779514Z 
2025-08-18T20:40:09.4779627Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T20:40:09.4779821Z 
2025-08-18T20:40:09.4779923Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T20:40:09.4780099Z 
2025-08-18T20:40:09.4780224Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T20:40:09.4780417Z 
2025-08-18T20:40:09.4780518Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T20:40:09.4780701Z 
2025-08-18T20:40:09.4780833Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T20:40:09.4781048Z 
2025-08-18T20:40:09.4781164Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T20:40:09.4781362Z 
2025-08-18T20:40:09.4781491Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T20:40:09.4781684Z 
2025-08-18T20:40:09.4781795Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T20:40:09.4782011Z 
2025-08-18T20:40:09.4782141Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T20:40:09.4782357Z 
2025-08-18T20:40:09.4782473Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T20:40:09.4782661Z 
2025-08-18T20:40:09.4782766Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T20:40:09.4782952Z 
2025-08-18T20:40:09.4783042Z # api.migrations.versions.0001\_baseline
2025-08-18T20:40:09.4783205Z 
2025-08-18T20:40:09.4783298Z <a id="api.migrations.versions"></a>
2025-08-18T20:40:09.4783452Z 
2025-08-18T20:40:09.4783530Z # api.migrations.versions
2025-08-18T20:40:09.4783662Z 
2025-08-18T20:40:09.4783738Z <a id="api.migrations"></a>
2025-08-18T20:40:09.4783864Z 
2025-08-18T20:40:09.4783930Z # api.migrations
2025-08-18T20:40:09.4784043Z 
2025-08-18T20:40:09.4784249Z <a id="api.db"></a>
2025-08-18T20:40:09.4784357Z 
2025-08-18T20:40:09.4784425Z # api.db
2025-08-18T20:40:09.4784509Z 
2025-08-18T20:40:09.4784589Z <a id="api.routes.stats"></a>
2025-08-18T20:40:09.4784730Z 
2025-08-18T20:40:09.4784798Z # api.routes.stats
2025-08-18T20:40:09.4784920Z 
2025-08-18T20:40:09.4785012Z <a id="api.routes.stats.kpi"></a>
2025-08-18T20:40:09.4785213Z 
2025-08-18T20:40:09.4785274Z #### kpi
2025-08-18T20:40:09.4785364Z 
2025-08-18T20:40:09.4785431Z ```python
2025-08-18T20:40:09.4785598Z @router.get("/stats/kpi")
2025-08-18T20:40:09.4785823Z def kpi() -> List[Dict[str, int]]
2025-08-18T20:40:09.4786020Z ```
2025-08-18T20:40:09.4786109Z 
2025-08-18T20:40:09.4786186Z Return KPI metrics (mock).
2025-08-18T20:40:09.4786313Z 
2025-08-18T20:40:09.4786416Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T20:40:09.4786587Z 
2025-08-18T20:40:09.4786654Z #### roi\_by\_vendor
2025-08-18T20:40:09.4786766Z 
2025-08-18T20:40:09.4786829Z ```python
2025-08-18T20:40:09.4786996Z @router.get("/stats/roi_by_vendor")
2025-08-18T20:40:09.4787381Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T20:40:09.4787604Z ```
2025-08-18T20:40:09.4787689Z 
2025-08-18T20:40:09.4787768Z Return ROI percent by vendor.
2025-08-18T20:40:09.4787902Z 
2025-08-18T20:40:09.4787997Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T20:40:09.4788169Z 
2025-08-18T20:40:09.4788233Z #### roi\_trend
2025-08-18T20:40:09.4788337Z 
2025-08-18T20:40:09.4788590Z ```python
2025-08-18T20:40:09.4788759Z @router.get("/stats/roi_trend")
2025-08-18T20:40:09.4788993Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T20:40:09.4789217Z ```
2025-08-18T20:40:09.4789300Z 
2025-08-18T20:40:09.4789373Z Return 30-day ROI trend.
2025-08-18T20:40:09.4789494Z 
2025-08-18T20:40:09.4789577Z <a id="api.routes.roi"></a>
2025-08-18T20:40:09.4789706Z 
2025-08-18T20:40:09.4789772Z # api.routes.roi
2025-08-18T20:40:09.4789885Z 
2025-08-18T20:40:09.4789966Z <a id="api.routes.health"></a>
2025-08-18T20:40:09.4790099Z 
2025-08-18T20:40:09.4790182Z # api.routes.health
2025-08-18T20:40:09.4790298Z 
2025-08-18T20:40:09.4790387Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T20:40:09.4790547Z 
2025-08-18T20:40:09.4790617Z #### MAX\_SKEW
2025-08-18T20:40:09.4790712Z 
2025-08-18T20:40:09.4790773Z seconds
2025-08-18T20:40:09.4790862Z 
2025-08-18T20:40:09.4790950Z <a id="api.routes.health.health"></a>
2025-08-18T20:40:09.4791107Z 
2025-08-18T20:40:09.4791169Z #### health
2025-08-18T20:40:09.4791262Z 
2025-08-18T20:40:09.4791323Z ```python
2025-08-18T20:40:09.4791507Z @router.get("/health", include_in_schema=False)
2025-08-18T20:40:09.4791874Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T20:40:09.4792206Z ```
2025-08-18T20:40:09.4792287Z 
2025-08-18T20:40:09.4792399Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T20:40:09.4792595Z 
2025-08-18T20:40:09.4792683Z <a id="api.routes.repository"></a>
2025-08-18T20:40:09.4792831Z 
2025-08-18T20:40:09.4792907Z # api.routes.repository
2025-08-18T20:40:09.4793043Z 
2025-08-18T20:40:09.4793114Z <a id="api.routes"></a>
2025-08-18T20:40:09.4793227Z 
2025-08-18T20:40:09.4793298Z # api.routes
2025-08-18T20:40:09.4793391Z 
2025-08-18T20:40:09.4793465Z <a id="api.models.fee"></a>
2025-08-18T20:40:09.4793592Z 
2025-08-18T20:40:09.4793663Z # api.models.fee
2025-08-18T20:40:09.4793765Z 
2025-08-18T20:40:09.4793835Z <a id="api.models"></a>
2025-08-18T20:40:09.4793953Z 
2025-08-18T20:40:09.4794015Z # api.models
2025-08-18T20:40:09.4794107Z 
2025-08-18T20:40:09.4794192Z <a id="api.roi_repository"></a>
2025-08-18T20:40:09.4794330Z 
2025-08-18T20:40:09.4794399Z # api.roi\_repository
2025-08-18T20:40:09.4794513Z 
2025-08-18T20:40:09.4794588Z <a id="api.main"></a>
2025-08-18T20:40:09.4794696Z 
2025-08-18T20:40:09.4794757Z # api.main
2025-08-18T20:40:09.4794852Z 
2025-08-18T20:40:09.4794926Z <a id="api.main.ready"></a>
2025-08-18T20:40:09.4795053Z 
2025-08-18T20:40:09.4795116Z #### ready
2025-08-18T20:40:09.4795207Z 
2025-08-18T20:40:09.4795268Z ```python
2025-08-18T20:40:09.4795653Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T20:40:09.4796064Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T20:40:09.4796405Z                                                                       str]
2025-08-18T20:40:09.4796624Z ```
2025-08-18T20:40:09.4796711Z 
2025-08-18T20:40:09.4796804Z Return 200 only when migrations are at head.
2025-08-18T20:40:09.4796971Z 
2025-08-18T20:40:09.4797049Z <a id="api.config"></a>
2025-08-18T20:40:09.4797165Z 
2025-08-18T20:40:09.4797228Z # api.config
2025-08-18T20:40:09.4797319Z 
2025-08-18T20:40:09.4797388Z <a id="etl"></a>
2025-08-18T20:40:09.4797488Z 
2025-08-18T20:40:09.4797549Z # etl
2025-08-18T20:40:09.4797640Z 
2025-08-18T20:40:09.4797719Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T20:40:09.4797862Z 
2025-08-18T20:40:09.4797934Z # etl.fba\_fee\_ingestor
2025-08-18T20:40:09.4798060Z 
2025-08-18T20:40:09.4798138Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T20:40:09.4798662Z 
2025-08-18T20:40:09.4798785Z # etl.sp\_fees\_ingestor
2025-08-18T20:40:09.4798910Z 
2025-08-18T20:40:09.4798993Z <a id="etl.keepa_ingestor"></a>
2025-08-18T20:40:09.4799134Z 
2025-08-18T20:40:09.4799204Z # etl.keepa\_ingestor
2025-08-18T20:40:09.4799314Z 
2025-08-18T20:40:09.4799379Z <a id="etl.db"></a>
2025-08-18T20:40:09.4799490Z 
2025-08-18T20:40:09.4799551Z # etl.db
2025-08-18T20:40:09.4799637Z 
2025-08-18T20:40:09.4799724Z <a id="etl.dialects.schemas"></a>
2025-08-18T20:40:09.4799868Z 
2025-08-18T20:40:09.4799941Z # etl.dialects.schemas
2025-08-18T20:40:09.4800055Z 
2025-08-18T20:40:09.4800164Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T20:40:09.4800352Z 
2025-08-18T20:40:09.4800439Z # etl.dialects.amazon\_reimbursements
2025-08-18T20:40:09.4800597Z 
2025-08-18T20:40:09.4800696Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T20:40:09.4800861Z 
2025-08-18T20:40:09.4800945Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T20:40:09.4801096Z 
2025-08-18T20:40:09.4801192Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T20:40:09.4801368Z 
2025-08-18T20:40:09.4801450Z # etl.dialects.amazon\_returns
2025-08-18T20:40:09.4801594Z 
2025-08-18T20:40:09.4801687Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T20:40:09.4801852Z 
2025-08-18T20:40:09.4801941Z # etl.dialects.amazon\_fee\_preview
2025-08-18T20:40:09.4802090Z 
2025-08-18T20:40:09.4802194Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T20:40:09.4802373Z 
2025-08-18T20:40:09.4802469Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T20:40:09.4802630Z 
2025-08-18T20:40:09.4802722Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T20:40:09.4802896Z 
2025-08-18T20:40:09.4802980Z # etl.dialects.amazon\_settlements
2025-08-18T20:40:09.4803126Z 
2025-08-18T20:40:09.4803206Z <a id="etl.dialects"></a>
2025-08-18T20:40:09.4803330Z 
2025-08-18T20:40:09.4803393Z # etl.dialects
2025-08-18T20:40:09.4803490Z 
2025-08-18T20:40:09.4803564Z <a id="ingest"></a>
2025-08-18T20:40:09.4803666Z 
2025-08-18T20:40:09.4803736Z # ingest
2025-08-18T20:40:09.4803828Z 
2025-08-18T20:40:09.4803911Z <a id="ingest.maintenance"></a>
2025-08-18T20:40:09.4804051Z 
2025-08-18T20:40:09.4804122Z # ingest.maintenance
2025-08-18T20:40:09.4804240Z 
2025-08-18T20:40:09.4804319Z <a id="ingest.copy_loader"></a>
2025-08-18T20:40:09.4804451Z 
2025-08-18T20:40:09.4804531Z # ingest.copy\_loader
2025-08-18T20:40:09.4804645Z 
2025-08-18T20:40:09.4804747Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T20:40:09.4804933Z 
2025-08-18T20:40:09.4805005Z #### copy\_df\_via\_temp
2025-08-18T20:40:09.4805123Z 
2025-08-18T20:40:09.4805185Z ```python
2025-08-18T20:40:09.4805361Z def copy_df_via_temp(engine: Engine,
2025-08-18T20:40:09.4805596Z                      df: pd.DataFrame,
2025-08-18T20:40:09.4805823Z                      target_table: str,
2025-08-18T20:40:09.4806039Z                      *,
2025-08-18T20:40:09.4806240Z                      target_schema: Optional[str] = None,
2025-08-18T20:40:09.4806495Z                      columns: Sequence[str],
2025-08-18T20:40:09.4806895Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T20:40:09.4807175Z                      analyze_after: bool = False,
2025-08-18T20:40:09.4807428Z                      connection: Any | None = None) -> int
2025-08-18T20:40:09.4807660Z ```
2025-08-18T20:40:09.4807741Z 
2025-08-18T20:40:09.4807897Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T20:40:09.4808123Z 
2025-08-18T20:40:09.4808207Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T20:40:09.4808578Z 
2025-08-18T20:40:09.4808699Z # ingest.tests.test\_smoke
2025-08-18T20:40:09.4808837Z 
2025-08-18T20:40:09.4808912Z <a id="ingest.tests"></a>
2025-08-18T20:40:09.4809040Z 
2025-08-18T20:40:09.4809105Z # ingest.tests
2025-08-18T20:40:09.4809201Z 
2025-08-18T20:40:09.4809288Z <a id="ingest.upload_router"></a>
2025-08-18T20:40:09.4809433Z 
2025-08-18T20:40:09.4809509Z # ingest.upload\_router
2025-08-18T20:40:09.4809626Z 
2025-08-18T20:40:09.4809711Z <a id="ingest.email_watcher"></a>
2025-08-18T20:40:09.4809987Z 
2025-08-18T20:40:09.4810057Z # ingest.email\_watcher
2025-08-18T20:40:09.4810176Z 
2025-08-18T20:40:09.4810263Z <a id="ingest.email_watcher.main"></a>
2025-08-18T20:40:09.4810418Z 
2025-08-18T20:40:09.4810484Z #### main
2025-08-18T20:40:09.4810573Z 
2025-08-18T20:40:09.4810633Z ```python
2025-08-18T20:40:09.4810801Z def main() -> dict[str, str]
2025-08-18T20:40:09.4810986Z ```
2025-08-18T20:40:09.4811067Z 
2025-08-18T20:40:09.4811208Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T20:40:09.4811422Z 
2025-08-18T20:40:09.4811547Z Returns {"status": "success"} when processing completes.
2025-08-18T20:40:09.4811753Z 
2025-08-18T20:40:09.4811829Z <a id="ingest.tasks"></a>
2025-08-18T20:40:09.4811949Z 
2025-08-18T20:40:09.4812021Z # ingest.tasks
2025-08-18T20:40:09.4812119Z 
2025-08-18T20:40:09.4812211Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T20:40:09.4812378Z 
2025-08-18T20:40:09.4812458Z #### task\_import\_file
2025-08-18T20:40:09.4812585Z 
2025-08-18T20:40:09.4812647Z ```python
2025-08-18T20:40:09.4812855Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T20:40:09.4813121Z def task_import_file(self: Any,
2025-08-18T20:40:09.4813333Z                      uri: str,
2025-08-18T20:40:09.4813553Z                      report_type: Optional[str] = None,
2025-08-18T20:40:09.4813812Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T20:40:09.4814057Z ```
2025-08-18T20:40:09.4814146Z 
2025-08-18T20:40:09.4814272Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T20:40:09.4814472Z 
2025-08-18T20:40:09.4814551Z <a id="ingest.celery_app"></a>
2025-08-18T20:40:09.4814691Z 
2025-08-18T20:40:09.4814762Z # ingest.celery\_app
2025-08-18T20:40:09.4814872Z 
2025-08-18T20:40:09.4814958Z <a id="ingest.ingest_router"></a>
2025-08-18T20:40:09.4815099Z 
2025-08-18T20:40:09.4815171Z # ingest.ingest\_router
2025-08-18T20:40:09.4815293Z 
2025-08-18T20:40:09.4815366Z <a id="logistics_etl"></a>
2025-08-18T20:40:09.4815500Z 
2025-08-18T20:40:09.4815566Z # logistics\_etl
2025-08-18T20:40:09.4815678Z 
2025-08-18T20:40:09.4815752Z Daily logistics ETL job.
2025-08-18T20:40:09.4815872Z 
2025-08-18T20:40:09.4815957Z <a id="logistics_etl.__main__"></a>
2025-08-18T20:40:09.4816105Z 
2025-08-18T20:40:09.4816180Z # logistics\_etl.\_\_main\_\_
2025-08-18T20:40:09.4816312Z 
2025-08-18T20:40:09.4816394Z <a id="logistics_etl.dsn"></a>
2025-08-18T20:40:09.4816524Z 
2025-08-18T20:40:09.4816592Z # logistics\_etl.dsn
2025-08-18T20:40:09.4816706Z 
2025-08-18T20:40:09.4816818Z Local DSN builder to avoid cross-service dependency.
2025-08-18T20:40:09.4817012Z 
2025-08-18T20:40:09.4817106Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T20:40:09.4817265Z 
2025-08-18T20:40:09.4817327Z #### build\_dsn
2025-08-18T20:40:09.4817425Z 
2025-08-18T20:40:09.4817493Z ```python
2025-08-18T20:40:09.4817661Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:40:09.4817877Z ```
2025-08-18T20:40:09.4817957Z 
2025-08-18T20:40:09.4818098Z Return a Postgres DSN assembled from environment variables.
2025-08-18T20:40:09.4818680Z 
2025-08-18T20:40:09.4818852Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T20:40:09.4819240Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T20:40:09.4819574Z error when any required variable is missing.
2025-08-18T20:40:09.4819747Z 
2025-08-18T20:40:09.4819845Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T20:40:09.4820009Z 
2025-08-18T20:40:09.4820092Z # logistics\_etl.tests.conftest
2025-08-18T20:40:09.4820242Z 
2025-08-18T20:40:09.4820345Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T20:40:09.4820525Z 
2025-08-18T20:40:09.4820621Z # logistics\_etl.tests.test\_repository
2025-08-18T20:40:09.4820780Z 
2025-08-18T20:40:09.4820872Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T20:40:09.4821037Z 
2025-08-18T20:40:09.4821125Z # logistics\_etl.tests.test\_cron
2025-08-18T20:40:09.4821271Z 
2025-08-18T20:40:09.4821365Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T20:40:09.4821715Z 
2025-08-18T20:40:09.4821799Z # logistics\_etl.tests.test\_imports
2025-08-18T20:40:09.4821952Z 
2025-08-18T20:40:09.4822048Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T20:40:09.4822214Z 
2025-08-18T20:40:09.4822296Z # logistics\_etl.tests.test\_smoke
2025-08-18T20:40:09.4822443Z 
2025-08-18T20:40:09.4822545Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T20:40:09.4822709Z 
2025-08-18T20:40:09.4822791Z # logistics\_etl.tests.test\_client
2025-08-18T20:40:09.4822945Z 
2025-08-18T20:40:09.4823024Z <a id="logistics_etl.tests"></a>
2025-08-18T20:40:09.4823165Z 
2025-08-18T20:40:09.4823240Z # logistics\_etl.tests
2025-08-18T20:40:09.4823355Z 
2025-08-18T20:40:09.4823434Z <a id="logistics_etl.flow"></a>
2025-08-18T20:40:09.4823568Z 
2025-08-18T20:40:09.4823644Z # logistics\_etl.flow
2025-08-18T20:40:09.4823758Z 
2025-08-18T20:40:09.4823839Z <a id="logistics_etl.client"></a>
2025-08-18T20:40:09.4823988Z 
2025-08-18T20:40:09.4824059Z # logistics\_etl.client
2025-08-18T20:40:09.4824188Z 
2025-08-18T20:40:09.4824271Z <a id="logistics_etl.cron"></a>
2025-08-18T20:40:09.4824405Z 
2025-08-18T20:40:09.4824473Z # logistics\_etl.cron
2025-08-18T20:40:09.4824582Z 
2025-08-18T20:40:09.4824665Z <a id="logistics_etl.db"></a>
2025-08-18T20:40:09.4824801Z 
2025-08-18T20:40:09.4824870Z # logistics\_etl.db
2025-08-18T20:40:09.4824980Z 
2025-08-18T20:40:09.4825066Z <a id="logistics_etl.repository"></a>
2025-08-18T20:40:09.4825219Z 
2025-08-18T20:40:09.4825295Z # logistics\_etl.repository
2025-08-18T20:40:09.4825436Z 
2025-08-18T20:40:09.4825506Z <a id="alert_bot"></a>
2025-08-18T20:40:09.4825617Z 
2025-08-18T20:40:09.4825689Z # alert\_bot
2025-08-18T20:40:09.4825782Z 
2025-08-18T20:40:09.4825868Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T20:40:09.4826032Z 
2025-08-18T20:40:09.4826114Z # alert\_bot.tests.test\_smoke
2025-08-18T20:40:09.4826250Z 
2025-08-18T20:40:09.4826326Z <a id="alert_bot.tests"></a>
2025-08-18T20:40:09.4826464Z 
2025-08-18T20:40:09.4826539Z # alert\_bot.tests
2025-08-18T20:40:09.4826642Z 
2025-08-18T20:40:09.4826727Z <a id="alert_bot.alert_bot"></a>
2025-08-18T20:40:09.4826866Z 
2025-08-18T20:40:09.4868237Z # alert\_bot.alert\_bot
2025-08-18T20:40:09.4868718Z 
2025-08-18T20:40:09.4868894Z <a id="alert_bot.rules"></a>
2025-08-18T20:40:09.4869190Z 
2025-08-18T20:40:09.4869333Z # alert\_bot.rules
2025-08-18T20:40:09.4869580Z 
2025-08-18T20:40:09.4869717Z <a id="common"></a>
2025-08-18T20:40:09.4869938Z 
2025-08-18T20:40:09.4870071Z # common
2025-08-18T20:40:09.4870248Z 
2025-08-18T20:40:09.4870396Z <a id="common.dsn"></a>
2025-08-18T20:40:09.4870663Z 
2025-08-18T20:40:09.4870768Z # common.dsn
2025-08-18T20:40:09.4870886Z 
2025-08-18T20:40:09.4870994Z <a id="common.dsn.build_dsn"></a>
2025-08-18T20:40:09.4871188Z 
2025-08-18T20:40:09.4871334Z #### build\_dsn
2025-08-18T20:40:09.4871465Z 
2025-08-18T20:40:09.4871551Z ```python
2025-08-18T20:40:09.4871768Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:40:09.4872044Z ```
2025-08-18T20:40:09.4872386Z 
2025-08-18T20:40:09.4872541Z Return a Postgres DSN, validating required variables.
2025-08-18T20:40:09.4872792Z 
2025-08-18T20:40:09.4873018Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T20:40:09.4873543Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T20:40:09.4874058Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T20:40:09.4874437Z missing.
2025-08-18T20:40:09.4874544Z 
2025-08-18T20:40:09.4874645Z <a id="common.models_vendor"></a>
2025-08-18T20:40:09.4874836Z 
2025-08-18T20:40:09.4874925Z # common.models\_vendor
2025-08-18T20:40:09.4875072Z 
2025-08-18T20:40:09.4875179Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T20:40:09.4875386Z 
2025-08-18T20:40:09.4875465Z ## Vendor Objects
2025-08-18T20:40:09.4875591Z 
2025-08-18T20:40:09.4875674Z ```python
2025-08-18T20:40:09.4875855Z class Vendor(Base)
2025-08-18T20:40:09.4876060Z ```
2025-08-18T20:40:09.4876159Z 
2025-08-18T20:40:09.4876404Z Vendor of inventory items.
2025-08-18T20:40:09.4876569Z 
2025-08-18T20:40:09.4876696Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T20:40:09.4876912Z 
2025-08-18T20:40:09.4876998Z ## VendorPrice Objects
2025-08-18T20:40:09.4877147Z 
2025-08-18T20:40:09.4877220Z ```python
2025-08-18T20:40:09.4877415Z class VendorPrice(Base)
2025-08-18T20:40:09.4877623Z ```
2025-08-18T20:40:09.4877719Z 
2025-08-18T20:40:09.4877847Z Association table linking vendors to pricing.
2025-08-18T20:40:09.4878059Z 
2025-08-18T20:40:09.4878147Z <a id="common.db_url"></a>
2025-08-18T20:40:09.4878308Z 
2025-08-18T20:40:09.4878535Z # common.db\_url
2025-08-18T20:40:09.4878658Z 
2025-08-18T20:40:09.4878738Z <a id="common.db_url.build_url"></a>
2025-08-18T20:40:09.4878892Z 
2025-08-18T20:40:09.4878954Z #### build\_url
2025-08-18T20:40:09.4879051Z 
2025-08-18T20:40:09.4879117Z ```python
2025-08-18T20:40:09.4879283Z def build_url(async_: bool = True) -> str
2025-08-18T20:40:09.4879501Z ```
2025-08-18T20:40:09.4879589Z 
2025-08-18T20:40:09.4879691Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:40:09.4879866Z 
2025-08-18T20:40:09.4879940Z <a id="common.keepa"></a>
2025-08-18T20:40:09.4880065Z 
2025-08-18T20:40:09.4880133Z # common.keepa
2025-08-18T20:40:09.4880236Z 
2025-08-18T20:40:09.4880305Z <a id="common.llm"></a>
2025-08-18T20:40:09.4880417Z 
2025-08-18T20:40:09.4880484Z # common.llm
2025-08-18T20:40:09.4880578Z 
2025-08-18T20:40:09.4880656Z <a id="common.settings"></a>
2025-08-18T20:40:09.4880792Z 
2025-08-18T20:40:09.4880856Z # common.settings
2025-08-18T20:40:09.4880960Z 
2025-08-18T20:40:09.4881028Z <a id="common.db"></a>
2025-08-18T20:40:09.4881146Z 
2025-08-18T20:40:09.4881210Z # common.db
2025-08-18T20:40:09.4881299Z 
2025-08-18T20:40:09.4881397Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T20:40:09.4881561Z 
2025-08-18T20:40:09.4881635Z #### build\_sqlalchemy\_url
2025-08-18T20:40:09.4881767Z 
2025-08-18T20:40:09.4881827Z ```python
2025-08-18T20:40:09.4881996Z def build_sqlalchemy_url() -> str
2025-08-18T20:40:09.4882217Z ```
2025-08-18T20:40:09.4882301Z 
2025-08-18T20:40:09.4882397Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:40:09.4882574Z 
2025-08-18T20:40:09.4882662Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T20:40:09.4882822Z 
2025-08-18T20:40:09.4882905Z #### build\_asyncpg\_dsn
2025-08-18T20:40:09.4883030Z 
2025-08-18T20:40:09.4883094Z ```python
2025-08-18T20:40:09.4883268Z def build_asyncpg_dsn() -> str
2025-08-18T20:40:09.4883459Z ```
2025-08-18T20:40:09.4883549Z 
2025-08-18T20:40:09.4883674Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:40:09.4883880Z 
2025-08-18T20:40:09.4883969Z <a id="common.db.refresh_mvs"></a>
2025-08-18T20:40:09.4884119Z 
2025-08-18T20:40:09.4884183Z #### refresh\_mvs
2025-08-18T20:40:09.4884283Z 
2025-08-18T20:40:09.4884349Z ```python
2025-08-18T20:40:09.4884536Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:40:09.4884781Z ```
2025-08-18T20:40:09.4884860Z 
2025-08-18T20:40:09.4884990Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:40:09.4885339Z 
2025-08-18T20:40:09.4885415Z <a id="common.config"></a>
2025-08-18T20:40:09.4885542Z 
2025-08-18T20:40:09.4885612Z # common.config
2025-08-18T20:40:09.4885710Z 
2025-08-18T20:40:09.4885784Z <a id="common.base"></a>
2025-08-18T20:40:09.4885900Z 
2025-08-18T20:40:09.4885968Z # common.base
2025-08-18T20:40:09.4886062Z 
2025-08-18T20:40:09.4886139Z <a id="common.base.Base"></a>
2025-08-18T20:40:09.4886278Z 
2025-08-18T20:40:09.4886340Z ## Base Objects
2025-08-18T20:40:09.4886435Z 
2025-08-18T20:40:09.4886502Z ```python
2025-08-18T20:40:09.4886660Z class Base(DeclarativeBase)
2025-08-18T20:40:09.4886850Z ```
2025-08-18T20:40:09.4886929Z 
2025-08-18T20:40:09.4887009Z Base class for SQLAlchemy models.
2025-08-18T20:40:09.4887153Z 
2025-08-18T20:40:09.4887228Z <a id="repricer"></a>
2025-08-18T20:40:09.4887340Z 
2025-08-18T20:40:09.4887402Z # repricer
2025-08-18T20:40:09.4887494Z 
2025-08-18T20:40:09.4887578Z <a id="repricer.app.schemas"></a>
2025-08-18T20:40:09.4887844Z 
2025-08-18T20:40:09.4887925Z # repricer.app.schemas
2025-08-18T20:40:09.4888041Z 
2025-08-18T20:40:09.4888121Z <a id="repricer.app.deps"></a>
2025-08-18T20:40:09.4888256Z 
2025-08-18T20:40:09.4888333Z # repricer.app.deps
2025-08-18T20:40:09.4888543Z 
2025-08-18T20:40:09.4888652Z Placeholder module for Keepa / SP-API clients.
2025-08-18T20:40:09.4888837Z 
2025-08-18T20:40:09.4888916Z <a id="repricer.app.logic"></a>
2025-08-18T20:40:09.4889054Z 
2025-08-18T20:40:09.4889132Z # repricer.app.logic
2025-08-18T20:40:09.4889245Z 
2025-08-18T20:40:09.4889341Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T20:40:09.4889505Z 
2025-08-18T20:40:09.4889574Z #### MIN\_MARGIN
2025-08-18T20:40:09.4889672Z 
2025-08-18T20:40:09.4889734Z 15 % ROI
2025-08-18T20:40:09.4889823Z 
2025-08-18T20:40:09.4889922Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T20:40:09.4890094Z 
2025-08-18T20:40:09.4890160Z #### compute\_price
2025-08-18T20:40:09.4890270Z 
2025-08-18T20:40:09.4890338Z ```python
2025-08-18T20:40:09.4890586Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T20:40:09.4890872Z ```
2025-08-18T20:40:09.4890951Z 
2025-08-18T20:40:09.4891062Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T20:40:09.4891327Z Replace with real competitive logic later.
2025-08-18T20:40:09.4891498Z 
2025-08-18T20:40:09.4891578Z <a id="repricer.app.main"></a>
2025-08-18T20:40:09.4891713Z 
2025-08-18T20:40:09.4891783Z # repricer.app.main
2025-08-18T20:40:09.4891894Z 
2025-08-18T20:40:09.4891967Z <a id="repricer.app"></a>
2025-08-18T20:40:09.4892092Z 
2025-08-18T20:40:09.4892164Z # repricer.app
2025-08-18T20:40:09.4892263Z 
2025-08-18T20:40:09.4892351Z <a id="repricer.tests.test_imports"></a>
2025-08-18T20:40:09.4892520Z 
2025-08-18T20:40:09.4892598Z # repricer.tests.test\_imports
2025-08-18T20:40:09.4892732Z 
2025-08-18T20:40:09.4892818Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T20:40:09.4892980Z 
2025-08-18T20:40:09.4893060Z # repricer.tests.test\_smoke
2025-08-18T20:40:09.4893203Z 
2025-08-18T20:40:09.4893287Z <a id="repricer.tests"></a>
2025-08-18T20:40:09.4893413Z 
2025-08-18T20:40:09.4893479Z # repricer.tests
2025-08-18T20:40:09.4893585Z 
2025-08-18T20:40:09.4893648Z <a id="db"></a>
2025-08-18T20:40:09.4893744Z 
2025-08-18T20:40:09.4893803Z # db
2025-08-18T20:40:09.4893891Z 
2025-08-18T20:40:09.4893963Z <a id="db.utils.views"></a>
2025-08-18T20:40:09.4894085Z 
2025-08-18T20:40:09.4894156Z # db.utils.views
2025-08-18T20:40:09.4894254Z 
2025-08-18T20:40:09.4894344Z <a id="db.utils.views.replace_view"></a>
2025-08-18T20:40:09.4894509Z 
2025-08-18T20:40:09.4894580Z #### replace\_view
2025-08-18T20:40:09.4894682Z 
2025-08-18T20:40:09.4894744Z ```python
2025-08-18T20:40:09.4894937Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T20:40:09.4895174Z ```
2025-08-18T20:40:09.4895262Z 
2025-08-18T20:40:09.4895351Z Drop and recreate a SQL view atomically.
2025-08-18T20:40:09.4895509Z 
2025-08-18T20:40:09.4895581Z <a id="db.utils"></a>
2025-08-18T20:40:09.4895822Z 
2025-08-18T20:40:09.4895883Z # db.utils
2025-08-18T20:40:09.4895975Z 
2025-08-18T20:40:09.4896051Z <a id="price_importer"></a>
2025-08-18T20:40:09.4896176Z 
2025-08-18T20:40:09.4896241Z # price\_importer
2025-08-18T20:40:09.4896349Z 
2025-08-18T20:40:09.4896447Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T20:40:09.4896623Z 
2025-08-18T20:40:09.4896714Z # price\_importer.services\_common.dsn
2025-08-18T20:40:09.4896868Z 
2025-08-18T20:40:09.4896989Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T20:40:09.4897192Z 
2025-08-18T20:40:09.4897253Z #### build\_dsn
2025-08-18T20:40:09.4897347Z 
2025-08-18T20:40:09.4897411Z ```python
2025-08-18T20:40:09.4897580Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:40:09.4897790Z ```
2025-08-18T20:40:09.4897875Z 
2025-08-18T20:40:09.4897939Z Return safe DSN.
2025-08-18T20:40:09.4898042Z 
2025-08-18T20:40:09.4898498Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T20:40:09.4898698Z 
2025-08-18T20:40:09.4898949Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T20:40:09.4899150Z 
2025-08-18T20:40:09.4899256Z # price\_importer.services\_common.models\_vendor
2025-08-18T20:40:09.4899438Z 
2025-08-18T20:40:09.4899545Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T20:40:09.4899734Z 
2025-08-18T20:40:09.4899828Z # price\_importer.services\_common.db\_url
2025-08-18T20:40:09.4899993Z 
2025-08-18T20:40:09.4900129Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T20:40:09.4900336Z 
2025-08-18T20:40:09.4900401Z #### build\_url
2025-08-18T20:40:09.4900503Z 
2025-08-18T20:40:09.4900566Z ```python
2025-08-18T20:40:09.4900735Z def build_url(async_: bool = True) -> str
2025-08-18T20:40:09.4900954Z ```
2025-08-18T20:40:09.4901036Z 
2025-08-18T20:40:09.4901135Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:40:09.4901304Z 
2025-08-18T20:40:09.4901406Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T20:40:09.4901590Z 
2025-08-18T20:40:09.4901697Z # price\_importer.services\_common.keepa
2025-08-18T20:40:09.4901864Z 
2025-08-18T20:40:09.4901963Z <a id="price_importer.services_common.llm"></a>
2025-08-18T20:40:09.4902142Z 
2025-08-18T20:40:09.4902229Z # price\_importer.services\_common.llm
2025-08-18T20:40:09.4902383Z 
2025-08-18T20:40:09.4902499Z <a id="price_importer.services_common.settings"></a>
2025-08-18T20:40:09.4902682Z 
2025-08-18T20:40:09.4902773Z # price\_importer.services\_common.settings
2025-08-18T20:40:09.4902939Z 
2025-08-18T20:40:09.4903042Z <a id="price_importer.services_common.db"></a>
2025-08-18T20:40:09.4903213Z 
2025-08-18T20:40:09.4903303Z # price\_importer.services\_common.db
2025-08-18T20:40:09.4903465Z 
2025-08-18T20:40:09.4903617Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T20:40:09.4903848Z 
2025-08-18T20:40:09.4903927Z #### build\_sqlalchemy\_url
2025-08-18T20:40:09.4904054Z 
2025-08-18T20:40:09.4904115Z ```python
2025-08-18T20:40:09.4904290Z def build_sqlalchemy_url() -> str
2025-08-18T20:40:09.4904501Z ```
2025-08-18T20:40:09.4904586Z 
2025-08-18T20:40:09.4904678Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:40:09.4904842Z 
2025-08-18T20:40:09.4904981Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T20:40:09.4905210Z 
2025-08-18T20:40:09.4905284Z #### build\_asyncpg\_dsn
2025-08-18T20:40:09.4905406Z 
2025-08-18T20:40:09.4905476Z ```python
2025-08-18T20:40:09.4905639Z def build_asyncpg_dsn() -> str
2025-08-18T20:40:09.4905834Z ```
2025-08-18T20:40:09.4905912Z 
2025-08-18T20:40:09.4906036Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:40:09.4906243Z 
2025-08-18T20:40:09.4906364Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T20:40:09.4906564Z 
2025-08-18T20:40:09.4906636Z #### refresh\_mvs
2025-08-18T20:40:09.4906738Z 
2025-08-18T20:40:09.4906800Z ```python
2025-08-18T20:40:09.4906991Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:40:09.4907227Z ```
2025-08-18T20:40:09.4907311Z 
2025-08-18T20:40:09.4907565Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:40:09.4907772Z 
2025-08-18T20:40:09.4907863Z <a id="price_importer.services_common"></a>
2025-08-18T20:40:09.4908030Z 
2025-08-18T20:40:09.4908113Z # price\_importer.services\_common
2025-08-18T20:40:09.4908261Z 
2025-08-18T20:40:09.4908486Z <a id="price_importer.services_common.base"></a>
2025-08-18T20:40:09.4908666Z 
2025-08-18T20:40:09.4908751Z # price\_importer.services\_common.base
2025-08-18T20:40:09.4908913Z 
2025-08-18T20:40:09.4908999Z <a id="price_importer.normaliser"></a>
2025-08-18T20:40:09.4909154Z 
2025-08-18T20:40:09.4909234Z # price\_importer.normaliser
2025-08-18T20:40:09.4909374Z 
2025-08-18T20:40:09.4909474Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T20:40:09.4909648Z 
2025-08-18T20:40:09.4909740Z # price\_importer.common.models\_vendor
2025-08-18T20:40:09.4909897Z 
2025-08-18T20:40:09.4909989Z <a id="price_importer.common.db_url"></a>
2025-08-18T20:40:09.4910158Z 
2025-08-18T20:40:09.4910365Z # price\_importer.common.db\_url
2025-08-18T20:40:09.4910509Z 
2025-08-18T20:40:09.4910610Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T20:40:09.4910793Z 
2025-08-18T20:40:09.4910856Z #### make\_dsn
2025-08-18T20:40:09.4910951Z 
2025-08-18T20:40:09.4911020Z ```python
2025-08-18T20:40:09.4911184Z def make_dsn(async_: bool = False) -> str
2025-08-18T20:40:09.4911400Z ```
2025-08-18T20:40:09.4911479Z 
2025-08-18T20:40:09.4911595Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T20:40:09.4911791Z 
2025-08-18T20:40:09.4911895Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T20:40:09.4912077Z 
2025-08-18T20:40:09.4912139Z #### build\_url
2025-08-18T20:40:09.4912248Z 
2025-08-18T20:40:09.4912311Z ```python
2025-08-18T20:40:09.4912491Z def build_url(async_: bool = False) -> str
2025-08-18T20:40:09.4912712Z ```
2025-08-18T20:40:09.4912796Z 
2025-08-18T20:40:09.4912924Z Return Postgres DSN built from environment variables.
2025-08-18T20:40:09.4913120Z 
2025-08-18T20:40:09.4913217Z <a id="price_importer.common"></a>
2025-08-18T20:40:09.4913374Z 
2025-08-18T20:40:09.4913452Z # price\_importer.common
2025-08-18T20:40:09.4913577Z 
2025-08-18T20:40:09.4913671Z <a id="price_importer.common.base"></a>
2025-08-18T20:40:09.4913833Z 
2025-08-18T20:40:09.4913915Z # price\_importer.common.base
2025-08-18T20:40:09.4914053Z 
2025-08-18T20:40:09.4914153Z <a id="price_importer.tests.conftest"></a>
2025-08-18T20:40:09.4914321Z 
2025-08-18T20:40:09.4914406Z # price\_importer.tests.conftest
2025-08-18T20:40:09.4914561Z 
2025-08-18T20:40:09.4914658Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T20:40:09.4914828Z 
2025-08-18T20:40:09.4914919Z # price\_importer.tests.test\_reader
2025-08-18T20:40:09.4915071Z 
2025-08-18T20:40:09.4915168Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T20:40:09.4915340Z 
2025-08-18T20:40:09.4915434Z # price\_importer.tests.test\_imports
2025-08-18T20:40:09.4915587Z 
2025-08-18T20:40:09.4915686Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T20:40:09.4915868Z 
2025-08-18T20:40:09.4915952Z # price\_importer.tests.test\_smoke
2025-08-18T20:40:09.4916114Z 
2025-08-18T20:40:09.4916224Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T20:40:09.4916404Z 
2025-08-18T20:40:09.4916493Z # price\_importer.tests.test\_normaliser
2025-08-18T20:40:09.4916654Z 
2025-08-18T20:40:09.4916745Z <a id="price_importer.tests"></a>
2025-08-18T20:40:09.4916890Z 
2025-08-18T20:40:09.4916964Z # price\_importer.tests
2025-08-18T20:40:09.4917091Z 
2025-08-18T20:40:09.4917174Z <a id="price_importer.reader"></a>
2025-08-18T20:40:09.4917342Z 
2025-08-18T20:40:09.4917423Z # price\_importer.reader
2025-08-18T20:40:09.4917544Z 
2025-08-18T20:40:09.4917631Z <a id="price_importer.repository"></a>
2025-08-18T20:40:09.4917788Z 
2025-08-18T20:40:09.4917873Z # price\_importer.repository
2025-08-18T20:40:09.4918006Z 
2025-08-18T20:40:09.4918088Z <a id="price_importer.import"></a>
2025-08-18T20:40:09.4918237Z 
2025-08-18T20:40:09.4918311Z # price\_importer.import
2025-08-18T20:40:09.4918706Z 
2025-08-18T20:40:09.4918786Z <a id="fees_h10"></a>
2025-08-18T20:40:09.4918904Z 
2025-08-18T20:40:09.4918968Z # fees\_h10
2025-08-18T20:40:09.4919059Z 
2025-08-18T20:40:09.4919139Z <a id="fees_h10.worker"></a>
2025-08-18T20:40:09.4919267Z 
2025-08-18T20:40:09.4919332Z # fees\_h10.worker
2025-08-18T20:40:09.4919441Z 
2025-08-18T20:40:09.4919537Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T20:40:09.4919707Z 
2025-08-18T20:40:09.4919786Z #### list\_active\_asins
2025-08-18T20:40:09.4919902Z 
2025-08-18T20:40:09.4919966Z ```python
2025-08-18T20:40:09.4920137Z def list_active_asins() -> list[str]
2025-08-18T20:40:09.4920340Z ```
2025-08-18T20:40:09.4920419Z 
2025-08-18T20:40:09.4920534Z Return known ASINs or an empty list if unavailable.
2025-08-18T20:40:09.4920720Z 
2025-08-18T20:40:09.4920801Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T20:40:09.4920957Z 
2025-08-18T20:40:09.4921035Z # fees\_h10.tests.test\_smoke
2025-08-18T20:40:09.4921205Z 
2025-08-18T20:40:09.4921406Z <a id="fees_h10.tests"></a>
2025-08-18T20:40:09.4921535Z 
2025-08-18T20:40:09.4921599Z # fees\_h10.tests
2025-08-18T20:40:09.4921703Z 
2025-08-18T20:40:09.4921781Z <a id="fees_h10.client"></a>
2025-08-18T20:40:09.4921907Z 
2025-08-18T20:40:09.4921971Z # fees\_h10.client
2025-08-18T20:40:09.4922077Z 
2025-08-18T20:40:09.4922155Z <a id="fees_h10.repository"></a>
2025-08-18T20:40:09.4922295Z 
2025-08-18T20:40:09.4922371Z # fees\_h10.repository
2025-08-18T20:40:09.4922484Z 
2025-08-18T20:40:09.4922551Z <a id="emailer"></a>
2025-08-18T20:40:09.4922659Z 
2025-08-18T20:40:09.4922724Z # emailer
2025-08-18T20:40:09.4922811Z 
2025-08-18T20:40:09.4922908Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T20:40:09.4923085Z 
2025-08-18T20:40:09.4923172Z # emailer.tests.test\_import\_emailer
2025-08-18T20:40:09.4923323Z 
2025-08-18T20:40:09.4923407Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T20:40:09.4923562Z 
2025-08-18T20:40:09.4923639Z # emailer.tests.test\_smoke
2025-08-18T20:40:09.4923775Z 
2025-08-18T20:40:09.4923860Z <a id="emailer.tests"></a>
2025-08-18T20:40:09.4923986Z 
2025-08-18T20:40:09.4924052Z # emailer.tests
2025-08-18T20:40:09.4924158Z 
2025-08-18T20:40:09.4924240Z <a id="emailer.generate_body"></a>
2025-08-18T20:40:09.4924386Z 
2025-08-18T20:40:09.4924461Z # emailer.generate\_body
2025-08-18T20:40:09.4924589Z 
2025-08-18T20:40:09.4924659Z <a id="llm_server"></a>
2025-08-18T20:40:09.4924774Z 
2025-08-18T20:40:09.4924842Z # llm\_server
2025-08-18T20:40:09.4924936Z 
2025-08-18T20:40:09.4925011Z <a id="llm_server.app"></a>
2025-08-18T20:40:09.4925143Z 
2025-08-18T20:40:09.4925208Z # llm\_server.app
2025-08-18T20:40:09.4925311Z 
