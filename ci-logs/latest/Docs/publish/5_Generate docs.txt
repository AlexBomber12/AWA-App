2025-08-20T14:05:50.9159985Z ##[group]Run pydoc-markdown
2025-08-20T14:05:50.9160278Z [36;1mpydoc-markdown[0m
2025-08-20T14:05:50.9201008Z shell: /usr/bin/bash -e {0}
2025-08-20T14:05:50.9201225Z env:
2025-08-20T14:05:50.9201457Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:05:50.9201856Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T14:05:50.9202247Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:05:50.9202590Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:05:50.9202931Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:05:50.9203261Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T14:05:50.9203539Z ##[endgroup]
2025-08-20T14:05:51.2990507Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T14:05:51.2991459Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T14:05:51.2991856Z In "pydoc-markdown.yml"
2025-08-20T14:05:51.2992240Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T14:05:51.2992807Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T14:05:51.2993432Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T14:05:51.2993868Z 
2025-08-20T14:05:51.6654710Z <a id="__init__"></a>
2025-08-20T14:05:51.6655130Z 
2025-08-20T14:05:51.6655255Z # \_\_init\_\_
2025-08-20T14:05:51.6655447Z 
2025-08-20T14:05:51.6655582Z <a id="api"></a>
2025-08-20T14:05:51.6655778Z 
2025-08-20T14:05:51.6655888Z # api
2025-08-20T14:05:51.6656063Z 
2025-08-20T14:05:51.6656205Z <a id="api.errors"></a>
2025-08-20T14:05:51.6656684Z 
2025-08-20T14:05:51.6656818Z # api.errors
2025-08-20T14:05:51.6657008Z 
2025-08-20T14:05:51.6657159Z <a id="api.sentry_config"></a>
2025-08-20T14:05:51.6657423Z 
2025-08-20T14:05:51.6657566Z # api.sentry\_config
2025-08-20T14:05:51.6657783Z 
2025-08-20T14:05:51.6657961Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T14:05:51.6658303Z 
2025-08-20T14:05:51.6658877Z # api.tests.test\_stats\_contracts
2025-08-20T14:05:51.6659200Z 
2025-08-20T14:05:51.6659367Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T14:05:51.6659689Z 
2025-08-20T14:05:51.6659839Z # api.tests.test\_sentry\_scrub
2025-08-20T14:05:51.6660106Z 
2025-08-20T14:05:51.6660284Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T14:05:51.6660609Z 
2025-08-20T14:05:51.6660760Z # api.tests.test\_roi\_basic\_auth
2025-08-20T14:05:51.6661053Z 
2025-08-20T14:05:51.6661215Z <a id="api.tests.test_errors_json"></a>
2025-08-20T14:05:51.6661522Z 
2025-08-20T14:05:51.6661665Z # api.tests.test\_errors\_json
2025-08-20T14:05:51.6661938Z 
2025-08-20T14:05:51.6662084Z <a id="api.tests.test_llm"></a>
2025-08-20T14:05:51.6662356Z 
2025-08-20T14:05:51.6662501Z # api.tests.test\_llm
2025-08-20T14:05:51.6662723Z 
2025-08-20T14:05:51.6662884Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T14:05:51.6663201Z 
2025-08-20T14:05:51.6663344Z # api.tests.test\_roi\_filters
2025-08-20T14:05:51.6663608Z 
2025-08-20T14:05:51.6663788Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T14:05:51.6664129Z 
2025-08-20T14:05:51.6664285Z # api.tests.test\_sentry\_event
2025-08-20T14:05:51.6664545Z 
2025-08-20T14:05:51.6664781Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T14:05:51.6665170Z 
2025-08-20T14:05:51.6665315Z ## DummyTransport Objects
2025-08-20T14:05:51.6665560Z 
2025-08-20T14:05:51.6665679Z ```python
2025-08-20T14:05:51.6665977Z class DummyTransport()
2025-08-20T14:05:51.6666313Z ```
2025-08-20T14:05:51.6666681Z 
2025-08-20T14:05:51.6667018Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T14:05:51.6667505Z 
2025-08-20T14:05:51.6667641Z #### capture\_envelope
2025-08-20T14:05:51.6667860Z 
2025-08-20T14:05:51.6667980Z ```python
2025-08-20T14:05:51.6668299Z def capture_envelope(envelope)
2025-08-20T14:05:51.6668677Z ```
2025-08-20T14:05:51.6668834Z 
2025-08-20T14:05:51.6669071Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T14:05:51.6669482Z 
2025-08-20T14:05:51.6669641Z <a id="api.tests.test_cors"></a>
2025-08-20T14:05:51.6670258Z 
2025-08-20T14:05:51.6670405Z # api.tests.test\_cors
2025-08-20T14:05:51.6670627Z 
2025-08-20T14:05:51.6670783Z <a id="api.tests.test_imports"></a>
2025-08-20T14:05:51.6671081Z 
2025-08-20T14:05:51.6671225Z # api.tests.test\_imports
2025-08-20T14:05:51.6671462Z 
2025-08-20T14:05:51.6671618Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T14:05:51.6671932Z 
2025-08-20T14:05:51.6672079Z # api.tests.test\_rate\_limit
2025-08-20T14:05:51.6672337Z 
2025-08-20T14:05:51.6672521Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T14:05:51.6672845Z 
2025-08-20T14:05:51.6672960Z #### app
2025-08-20T14:05:51.6673126Z 
2025-08-20T14:05:51.6673250Z noqa: E402
2025-08-20T14:05:51.6673419Z 
2025-08-20T14:05:51.6673575Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T14:05:51.6673882Z 
2025-08-20T14:05:51.6674029Z # api.tests.test\_stats\_sql
2025-08-20T14:05:51.6674291Z 
2025-08-20T14:05:51.6674465Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T14:05:51.6674797Z 
2025-08-20T14:05:51.6674945Z # api.tests.test\_entrypoint
2025-08-20T14:05:51.6675203Z 
2025-08-20T14:05:51.6675408Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T14:05:51.6675765Z 
2025-08-20T14:05:51.6675935Z # api.tests.test\_stats\_future\_contracts
2025-08-20T14:05:51.6676263Z 
2025-08-20T14:05:51.6676600Z <a id="api.tests.test_health"></a>
2025-08-20T14:05:51.6676906Z 
2025-08-20T14:05:51.6677054Z # api.tests.test\_health
2025-08-20T14:05:51.6677290Z 
2025-08-20T14:05:51.6677441Z <a id="api.tests.test_score"></a>
2025-08-20T14:05:51.6677716Z 
2025-08-20T14:05:51.6677861Z # api.tests.test\_score
2025-08-20T14:05:51.6678088Z 
2025-08-20T14:05:51.6678231Z <a id="api.logging_config"></a>
2025-08-20T14:05:51.6678499Z 
2025-08-20T14:05:51.6678629Z # api.logging\_config
2025-08-20T14:05:51.6678845Z 
2025-08-20T14:05:51.6678992Z <a id="api.migrations.env"></a>
2025-08-20T14:05:51.6679264Z 
2025-08-20T14:05:51.6679395Z # api.migrations.env
2025-08-20T14:05:51.6679851Z 
2025-08-20T14:05:51.6680084Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T14:05:51.6680460Z 
2025-08-20T14:05:51.6680652Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T14:05:51.6681006Z 
2025-08-20T14:05:51.6681206Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T14:05:51.6681562Z 
2025-08-20T14:05:51.6681731Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T14:05:51.6682052Z 
2025-08-20T14:05:51.6682337Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T14:05:51.6682781Z 
2025-08-20T14:05:51.6683043Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T14:05:51.6683448Z 
2025-08-20T14:05:51.6683677Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T14:05:51.6684072Z 
2025-08-20T14:05:51.6684278Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T14:05:51.6684632Z 
2025-08-20T14:05:51.6684866Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T14:05:51.6685359Z 
2025-08-20T14:05:51.6685561Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T14:05:51.6685965Z 
2025-08-20T14:05:51.6686196Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T14:05:51.6686762Z 
2025-08-20T14:05:51.6686983Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T14:05:51.6687344Z 
2025-08-20T14:05:51.6687563Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T14:05:51.6687942Z 
2025-08-20T14:05:51.6688135Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T14:05:51.6688484Z 
2025-08-20T14:05:51.6688711Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T14:05:51.6689112Z 
2025-08-20T14:05:51.6689314Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T14:05:51.6689664Z 
2025-08-20T14:05:51.6689934Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T14:05:51.6690355Z 
2025-08-20T14:05:51.6690583Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T14:05:51.6690966Z 
2025-08-20T14:05:51.6691205Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T14:05:51.6691840Z 
2025-08-20T14:05:51.6692056Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T14:05:51.6692411Z 
2025-08-20T14:05:51.6692660Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T14:05:51.6693075Z 
2025-08-20T14:05:51.6693292Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T14:05:51.6693662Z 
2025-08-20T14:05:51.6693862Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T14:05:51.6694225Z 
2025-08-20T14:05:51.6694395Z # api.migrations.versions.0001\_baseline
2025-08-20T14:05:51.6694856Z 
2025-08-20T14:05:51.6695026Z <a id="api.migrations.versions"></a>
2025-08-20T14:05:51.6695333Z 
2025-08-20T14:05:51.6695480Z # api.migrations.versions
2025-08-20T14:05:51.6695735Z 
2025-08-20T14:05:51.6695884Z <a id="api.migrations"></a>
2025-08-20T14:05:51.6696138Z 
2025-08-20T14:05:51.6696265Z # api.migrations
2025-08-20T14:05:51.6696650Z 
2025-08-20T14:05:51.6696798Z <a id="api.db"></a>
2025-08-20T14:05:51.6697009Z 
2025-08-20T14:05:51.6697133Z # api.db
2025-08-20T14:05:51.6697293Z 
2025-08-20T14:05:51.6697439Z <a id="api.routes.score"></a>
2025-08-20T14:05:51.6697695Z 
2025-08-20T14:05:51.6697827Z # api.routes.score
2025-08-20T14:05:51.6698027Z 
2025-08-20T14:05:51.6698170Z <a id="api.routes.stats"></a>
2025-08-20T14:05:51.6698433Z 
2025-08-20T14:05:51.6698558Z # api.routes.stats
2025-08-20T14:05:51.6698758Z 
2025-08-20T14:05:51.6698894Z <a id="api.routes.roi"></a>
2025-08-20T14:05:51.6699152Z 
2025-08-20T14:05:51.6699274Z # api.routes.roi
2025-08-20T14:05:51.6699470Z 
2025-08-20T14:05:51.6699626Z <a id="api.routes.health"></a>
2025-08-20T14:05:51.6699885Z 
2025-08-20T14:05:51.6700014Z # api.routes.health
2025-08-20T14:05:51.6700223Z 
2025-08-20T14:05:51.6700389Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T14:05:51.6700703Z 
2025-08-20T14:05:51.6700818Z #### MAX\_SKEW
2025-08-20T14:05:51.6701008Z 
2025-08-20T14:05:51.6701119Z seconds
2025-08-20T14:05:51.6701492Z 
2025-08-20T14:05:51.6701666Z <a id="api.routes.health.health"></a>
2025-08-20T14:05:51.6701982Z 
2025-08-20T14:05:51.6702093Z #### health
2025-08-20T14:05:51.6702266Z 
2025-08-20T14:05:51.6702379Z ```python
2025-08-20T14:05:51.6702732Z @router.get("/health", include_in_schema=False)
2025-08-20T14:05:51.6703463Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T14:05:51.6704094Z ```
2025-08-20T14:05:51.6704253Z 
2025-08-20T14:05:51.6704468Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T14:05:51.6704843Z 
2025-08-20T14:05:51.6705016Z <a id="api.routes.repository"></a>
2025-08-20T14:05:51.6705314Z 
2025-08-20T14:05:51.6705453Z # api.routes.repository
2025-08-20T14:05:51.6705694Z 
2025-08-20T14:05:51.6705827Z <a id="api.routes"></a>
2025-08-20T14:05:51.6706043Z 
2025-08-20T14:05:51.6706159Z # api.routes
2025-08-20T14:05:51.6706345Z 
2025-08-20T14:05:51.6706677Z <a id="api.models.fee"></a>
2025-08-20T14:05:51.6706933Z 
2025-08-20T14:05:51.6707067Z # api.models.fee
2025-08-20T14:05:51.6707283Z 
2025-08-20T14:05:51.6707418Z <a id="api.models"></a>
2025-08-20T14:05:51.6707646Z 
2025-08-20T14:05:51.6707762Z # api.models
2025-08-20T14:05:51.6707935Z 
2025-08-20T14:05:51.6708081Z <a id="api.roi_repository"></a>
2025-08-20T14:05:51.6708356Z 
2025-08-20T14:05:51.6708487Z # api.roi\_repository
2025-08-20T14:05:51.6708704Z 
2025-08-20T14:05:51.6708839Z <a id="api.main"></a>
2025-08-20T14:05:51.6709048Z 
2025-08-20T14:05:51.6709165Z # api.main
2025-08-20T14:05:51.6709305Z 
2025-08-20T14:05:51.6709426Z <a id="api.main.ready"></a>
2025-08-20T14:05:51.6709623Z 
2025-08-20T14:05:51.6709714Z #### ready
2025-08-20T14:05:51.6709855Z 
2025-08-20T14:05:51.6709945Z ```python
2025-08-20T14:05:51.6710333Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T14:05:51.6711069Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T14:05:51.6711607Z                                                                       str]
2025-08-20T14:05:51.6711980Z ```
2025-08-20T14:05:51.6712318Z 
2025-08-20T14:05:51.6712472Z Return 200 only when migrations are at head.
2025-08-20T14:05:51.6712762Z 
2025-08-20T14:05:51.6712878Z <a id="api.config"></a>
2025-08-20T14:05:51.6713070Z 
2025-08-20T14:05:51.6713171Z # api.config
2025-08-20T14:05:51.6713334Z 
2025-08-20T14:05:51.6713460Z <a id="api.security"></a>
2025-08-20T14:05:51.6713669Z 
2025-08-20T14:05:51.6713783Z # api.security
2025-08-20T14:05:51.6713941Z 
2025-08-20T14:05:51.6714073Z <a id="etl"></a>
2025-08-20T14:05:51.6714248Z 
2025-08-20T14:05:51.6714347Z # etl
2025-08-20T14:05:51.6714496Z 
2025-08-20T14:05:51.6714626Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T14:05:51.6714854Z 
2025-08-20T14:05:51.6714963Z # etl.fba\_fee\_ingestor
2025-08-20T14:05:51.6715153Z 
2025-08-20T14:05:51.6715281Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T14:05:51.6715513Z 
2025-08-20T14:05:51.6715630Z # etl.sp\_fees\_ingestor
2025-08-20T14:05:51.6715841Z 
2025-08-20T14:05:51.6715978Z <a id="etl.keepa_ingestor"></a>
2025-08-20T14:05:51.6716247Z 
2025-08-20T14:05:51.6716544Z # etl.keepa\_ingestor
2025-08-20T14:05:51.6716759Z 
2025-08-20T14:05:51.6716860Z <a id="etl.db"></a>
2025-08-20T14:05:51.6717023Z 
2025-08-20T14:05:51.6717109Z # etl.db
2025-08-20T14:05:51.6717237Z 
2025-08-20T14:05:51.6717369Z <a id="etl.dialects.schemas"></a>
2025-08-20T14:05:51.6717603Z 
2025-08-20T14:05:51.6717712Z # etl.dialects.schemas
2025-08-20T14:05:51.6717908Z 
2025-08-20T14:05:51.6718074Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T14:05:51.6718381Z 
2025-08-20T14:05:51.6718531Z # etl.dialects.amazon\_reimbursements
2025-08-20T14:05:51.6718828Z 
2025-08-20T14:05:51.6718988Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T14:05:51.6719258Z 
2025-08-20T14:05:51.6719393Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T14:05:51.6719634Z 
2025-08-20T14:05:51.6719767Z <a id="etl.dialects.test_generic"></a>
2025-08-20T14:05:51.6720036Z 
2025-08-20T14:05:51.6720172Z # etl.dialects.test\_generic
2025-08-20T14:05:51.6720572Z 
2025-08-20T14:05:51.6720733Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T14:05:51.6721031Z 
2025-08-20T14:05:51.6721162Z # etl.dialects.amazon\_returns
2025-08-20T14:05:51.6721382Z 
2025-08-20T14:05:51.6721531Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T14:05:51.6721799Z 
2025-08-20T14:05:51.6721918Z # etl.dialects.amazon\_fee\_preview
2025-08-20T14:05:51.6722146Z 
2025-08-20T14:05:51.6722293Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T14:05:51.6722556Z 
2025-08-20T14:05:51.6722679Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T14:05:51.6722935Z 
2025-08-20T14:05:51.6723092Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T14:05:51.6723390Z 
2025-08-20T14:05:51.6723537Z # etl.dialects.amazon\_settlements
2025-08-20T14:05:51.6723798Z 
2025-08-20T14:05:51.6723923Z <a id="etl.dialects"></a>
2025-08-20T14:05:51.6724146Z 
2025-08-20T14:05:51.6724254Z # etl.dialects
2025-08-20T14:05:51.6724422Z 
2025-08-20T14:05:51.6724531Z <a id="ingest"></a>
2025-08-20T14:05:51.6724723Z 
2025-08-20T14:05:51.6724829Z # ingest
2025-08-20T14:05:51.6724971Z 
2025-08-20T14:05:51.6725111Z <a id="ingest.maintenance"></a>
2025-08-20T14:05:51.6725357Z 
2025-08-20T14:05:51.6725485Z # ingest.maintenance
2025-08-20T14:05:51.6725697Z 
2025-08-20T14:05:51.6725849Z <a id="ingest.copy_loader"></a>
2025-08-20T14:05:51.6726115Z 
2025-08-20T14:05:51.6726246Z # ingest.copy\_loader
2025-08-20T14:05:51.6726635Z 
2025-08-20T14:05:51.6726834Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T14:05:51.6727184Z 
2025-08-20T14:05:51.6727336Z #### copy\_df\_via\_temp
2025-08-20T14:05:51.6727571Z 
2025-08-20T14:05:51.6727689Z ```python
2025-08-20T14:05:51.6728013Z def copy_df_via_temp(engine: Engine,
2025-08-20T14:05:51.6728450Z                      df: pd.DataFrame,
2025-08-20T14:05:51.6728886Z                      target_table: str,
2025-08-20T14:05:51.6729287Z                      *,
2025-08-20T14:05:51.6729669Z                      target_schema: Optional[str] = None,
2025-08-20T14:05:51.6730160Z                      columns: Sequence[str],
2025-08-20T14:05:51.6730896Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T14:05:51.6731422Z                      analyze_after: bool = False,
2025-08-20T14:05:51.6731908Z                      connection: Any | None = None) -> int
2025-08-20T14:05:51.6732352Z ```
2025-08-20T14:05:51.6732506Z 
2025-08-20T14:05:51.6732791Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T14:05:51.6733228Z 
2025-08-20T14:05:51.6733383Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T14:05:51.6733681Z 
2025-08-20T14:05:51.6733824Z # ingest.tests.test\_smoke
2025-08-20T14:05:51.6734071Z 
2025-08-20T14:05:51.6734206Z <a id="ingest.tests"></a>
2025-08-20T14:05:51.6734441Z 
2025-08-20T14:05:51.6734571Z # ingest.tests
2025-08-20T14:05:51.6734759Z 
2025-08-20T14:05:51.6734913Z <a id="ingest.upload_router"></a>
2025-08-20T14:05:51.6735199Z 
2025-08-20T14:05:51.6735334Z # ingest.upload\_router
2025-08-20T14:05:51.6735627Z 
2025-08-20T14:05:51.6735786Z <a id="ingest.email_watcher"></a>
2025-08-20T14:05:51.6736066Z 
2025-08-20T14:05:51.6736197Z # ingest.email\_watcher
2025-08-20T14:05:51.6736582Z 
2025-08-20T14:05:51.6736760Z <a id="ingest.email_watcher.main"></a>
2025-08-20T14:05:51.6737071Z 
2025-08-20T14:05:51.6737182Z #### main
2025-08-20T14:05:51.6737353Z 
2025-08-20T14:05:51.6737470Z ```python
2025-08-20T14:05:51.6737771Z def main() -> dict[str, str]
2025-08-20T14:05:51.6738133Z ```
2025-08-20T14:05:51.6738287Z 
2025-08-20T14:05:51.6738542Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T14:05:51.6738965Z 
2025-08-20T14:05:51.6739200Z Returns {"status": "success"} when processing completes.
2025-08-20T14:05:51.6739601Z 
2025-08-20T14:05:51.6739751Z <a id="ingest.tasks"></a>
2025-08-20T14:05:51.6739990Z 
2025-08-20T14:05:51.6740112Z # ingest.tasks
2025-08-20T14:05:51.6740333Z 
2025-08-20T14:05:51.6740510Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T14:05:51.6740850Z 
2025-08-20T14:05:51.6741345Z #### task\_import\_file
2025-08-20T14:05:51.6741585Z 
2025-08-20T14:05:51.6741708Z ```python
2025-08-20T14:05:51.6742091Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T14:05:51.6742623Z def task_import_file(self: Any,
2025-08-20T14:05:51.6743044Z                      uri: str,
2025-08-20T14:05:51.6743458Z                      report_type: str | None = None,
2025-08-20T14:05:51.6743948Z                      force: bool = False) -> dict[str, Any]
2025-08-20T14:05:51.6744394Z ```
2025-08-20T14:05:51.6744547Z 
2025-08-20T14:05:51.6744792Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T14:05:51.6745189Z 
2025-08-20T14:05:51.6745335Z <a id="ingest.celery_app"></a>
2025-08-20T14:05:51.6745597Z 
2025-08-20T14:05:51.6745734Z # ingest.celery\_app
2025-08-20T14:05:51.6745944Z 
2025-08-20T14:05:51.6746092Z <a id="ingest.ingest_router"></a>
2025-08-20T14:05:51.6746558Z 
2025-08-20T14:05:51.6746699Z # ingest.ingest\_router
2025-08-20T14:05:51.6746931Z 
2025-08-20T14:05:51.6747086Z <a id="logistics_etl"></a>
2025-08-20T14:05:51.6747337Z 
2025-08-20T14:05:51.6747459Z # logistics\_etl
2025-08-20T14:05:51.6747655Z 
2025-08-20T14:05:51.6747799Z Daily logistics ETL job.
2025-08-20T14:05:51.6748030Z 
2025-08-20T14:05:51.6748178Z <a id="logistics_etl.__main__"></a>
2025-08-20T14:05:51.6748468Z 
2025-08-20T14:05:51.6748605Z # logistics\_etl.\_\_main\_\_
2025-08-20T14:05:51.6748857Z 
2025-08-20T14:05:51.6749001Z <a id="logistics_etl.dsn"></a>
2025-08-20T14:05:51.6749264Z 
2025-08-20T14:05:51.6749392Z # logistics\_etl.dsn
2025-08-20T14:05:51.6749600Z 
2025-08-20T14:05:51.6749823Z Local DSN builder to avoid cross-service dependency.
2025-08-20T14:05:51.6750209Z 
2025-08-20T14:05:51.6750378Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T14:05:51.6750704Z 
2025-08-20T14:05:51.6750827Z #### build\_dsn
2025-08-20T14:05:51.6751021Z 
2025-08-20T14:05:51.6751138Z ```python
2025-08-20T14:05:51.6751467Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:05:51.6751876Z ```
2025-08-20T14:05:51.6752048Z 
2025-08-20T14:05:51.6752797Z Return a Postgres DSN assembled from environment variables.
2025-08-20T14:05:51.6753229Z 
2025-08-20T14:05:51.6753515Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T14:05:51.6754236Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T14:05:51.6754879Z error when any required variable is missing.
2025-08-20T14:05:51.6755212Z 
2025-08-20T14:05:51.6755383Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T14:05:51.6755708Z 
2025-08-20T14:05:51.6755857Z # logistics\_etl.tests.conftest
2025-08-20T14:05:51.6756121Z 
2025-08-20T14:05:51.6756317Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T14:05:51.6756871Z 
2025-08-20T14:05:51.6757041Z # logistics\_etl.tests.test\_repository
2025-08-20T14:05:51.6757358Z 
2025-08-20T14:05:51.6757533Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T14:05:51.6757852Z 
2025-08-20T14:05:51.6758004Z # logistics\_etl.tests.test\_cron
2025-08-20T14:05:51.6758297Z 
2025-08-20T14:05:51.6758479Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T14:05:51.6758820Z 
2025-08-20T14:05:51.6758980Z # logistics\_etl.tests.test\_imports
2025-08-20T14:05:51.6759274Z 
2025-08-20T14:05:51.6759445Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T14:05:51.6759764Z 
2025-08-20T14:05:51.6759919Z # logistics\_etl.tests.test\_smoke
2025-08-20T14:05:51.6760209Z 
2025-08-20T14:05:51.6760394Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T14:05:51.6760749Z 
2025-08-20T14:05:51.6760907Z # logistics\_etl.tests.test\_client
2025-08-20T14:05:51.6761200Z 
2025-08-20T14:05:51.6761356Z <a id="logistics_etl.tests"></a>
2025-08-20T14:05:51.6761630Z 
2025-08-20T14:05:51.6761763Z # logistics\_etl.tests
2025-08-20T14:05:51.6761987Z 
2025-08-20T14:05:51.6762128Z <a id="logistics_etl.flow"></a>
2025-08-20T14:05:51.6762385Z 
2025-08-20T14:05:51.6762511Z # logistics\_etl.flow
2025-08-20T14:05:51.6762735Z 
2025-08-20T14:05:51.6762883Z <a id="logistics_etl.client"></a>
2025-08-20T14:05:51.6763474Z 
2025-08-20T14:05:51.6829533Z # logistics\_etl.client
2025-08-20T14:05:51.6829847Z 
2025-08-20T14:05:51.6829984Z <a id="logistics_etl.cron"></a>
2025-08-20T14:05:51.6830219Z 
2025-08-20T14:05:51.6830333Z # logistics\_etl.cron
2025-08-20T14:05:51.6830520Z 
2025-08-20T14:05:51.6830644Z <a id="logistics_etl.db"></a>
2025-08-20T14:05:51.6830865Z 
2025-08-20T14:05:51.6830975Z # logistics\_etl.db
2025-08-20T14:05:51.6831164Z 
2025-08-20T14:05:51.6831308Z <a id="logistics_etl.repository"></a>
2025-08-20T14:05:51.6831571Z 
2025-08-20T14:05:51.6831698Z # logistics\_etl.repository
2025-08-20T14:05:51.6831912Z 
2025-08-20T14:05:51.6832017Z <a id="alert_bot"></a>
2025-08-20T14:05:51.6832205Z 
2025-08-20T14:05:51.6832312Z # alert\_bot
2025-08-20T14:05:51.6832456Z 
2025-08-20T14:05:51.6832592Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T14:05:51.6832864Z 
2025-08-20T14:05:51.6832981Z # alert\_bot.tests.test\_smoke
2025-08-20T14:05:51.6833205Z 
2025-08-20T14:05:51.6833325Z <a id="alert_bot.tests"></a>
2025-08-20T14:05:51.6833555Z 
2025-08-20T14:05:51.6833662Z # alert\_bot.tests
2025-08-20T14:05:51.6833824Z 
2025-08-20T14:05:51.6833953Z <a id="alert_bot.alert_bot"></a>
2025-08-20T14:05:51.6834170Z 
2025-08-20T14:05:51.6834276Z # alert\_bot.alert\_bot
2025-08-20T14:05:51.6834472Z 
2025-08-20T14:05:51.6834586Z <a id="alert_bot.rules"></a>
2025-08-20T14:05:51.6834789Z 
2025-08-20T14:05:51.6834888Z # alert\_bot.rules
2025-08-20T14:05:51.6835054Z 
2025-08-20T14:05:51.6835158Z <a id="common"></a>
2025-08-20T14:05:51.6835319Z 
2025-08-20T14:05:51.6835460Z # common
2025-08-20T14:05:51.6835595Z 
2025-08-20T14:05:51.6835700Z <a id="common.dsn"></a>
2025-08-20T14:05:51.6835887Z 
2025-08-20T14:05:51.6835986Z # common.dsn
2025-08-20T14:05:51.6836136Z 
2025-08-20T14:05:51.6836263Z <a id="common.dsn.build_dsn"></a>
2025-08-20T14:05:51.6836755Z 
2025-08-20T14:05:51.6836856Z #### build\_dsn
2025-08-20T14:05:51.6837017Z 
2025-08-20T14:05:51.6837126Z ```python
2025-08-20T14:05:51.6837389Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:05:51.6837743Z ```
2025-08-20T14:05:51.6838121Z 
2025-08-20T14:05:51.6838312Z Return a Postgres DSN, validating required variables.
2025-08-20T14:05:51.6838638Z 
2025-08-20T14:05:51.6838956Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T14:05:51.6839660Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T14:05:51.6840325Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T14:05:51.6840840Z missing.
2025-08-20T14:05:51.6840975Z 
2025-08-20T14:05:51.6841096Z <a id="common.models_vendor"></a>
2025-08-20T14:05:51.6841324Z 
2025-08-20T14:05:51.6841442Z # common.models\_vendor
2025-08-20T14:05:51.6841620Z 
2025-08-20T14:05:51.6841764Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T14:05:51.6842051Z 
2025-08-20T14:05:51.6842153Z ## Vendor Objects
2025-08-20T14:05:51.6842325Z 
2025-08-20T14:05:51.6842420Z ```python
2025-08-20T14:05:51.6842660Z class Vendor(Base)
2025-08-20T14:05:51.6842919Z ```
2025-08-20T14:05:51.6843050Z 
2025-08-20T14:05:51.6843166Z Vendor of inventory items.
2025-08-20T14:05:51.6843373Z 
2025-08-20T14:05:51.6843528Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T14:05:51.6843800Z 
2025-08-20T14:05:51.6843909Z ## VendorPrice Objects
2025-08-20T14:05:51.6844098Z 
2025-08-20T14:05:51.6844192Z ```python
2025-08-20T14:05:51.6844429Z class VendorPrice(Base)
2025-08-20T14:05:51.6844704Z ```
2025-08-20T14:05:51.6844823Z 
2025-08-20T14:05:51.6844980Z Association table linking vendors to pricing.
2025-08-20T14:05:51.6845267Z 
2025-08-20T14:05:51.6845379Z <a id="common.db_url"></a>
2025-08-20T14:05:51.6845586Z 
2025-08-20T14:05:51.6845689Z # common.db\_url
2025-08-20T14:05:51.6845846Z 
2025-08-20T14:05:51.6845967Z <a id="common.db_url.build_url"></a>
2025-08-20T14:05:51.6846215Z 
2025-08-20T14:05:51.6846312Z #### build\_url
2025-08-20T14:05:51.6846621Z 
2025-08-20T14:05:51.6846720Z ```python
2025-08-20T14:05:51.6846991Z def build_url(async_: bool = True) -> str
2025-08-20T14:05:51.6847534Z ```
2025-08-20T14:05:51.6847656Z 
2025-08-20T14:05:51.6847801Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:05:51.6848069Z 
2025-08-20T14:05:51.6848183Z <a id="common.keepa"></a>
2025-08-20T14:05:51.6848374Z 
2025-08-20T14:05:51.6848470Z # common.keepa
2025-08-20T14:05:51.6848629Z 
2025-08-20T14:05:51.6848732Z <a id="common.llm"></a>
2025-08-20T14:05:51.6848906Z 
2025-08-20T14:05:51.6849008Z # common.llm
2025-08-20T14:05:51.6849147Z 
2025-08-20T14:05:51.6849262Z <a id="common.settings"></a>
2025-08-20T14:05:51.6849469Z 
2025-08-20T14:05:51.6849573Z # common.settings
2025-08-20T14:05:51.6849731Z 
2025-08-20T14:05:51.6849831Z <a id="common.db"></a>
2025-08-20T14:05:51.6850005Z 
2025-08-20T14:05:51.6850096Z # common.db
2025-08-20T14:05:51.6850230Z 
2025-08-20T14:05:51.6850369Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T14:05:51.6850625Z 
2025-08-20T14:05:51.6850738Z #### build\_sqlalchemy\_url
2025-08-20T14:05:51.6850936Z 
2025-08-20T14:05:51.6851111Z ```python
2025-08-20T14:05:51.6851369Z def build_sqlalchemy_url() -> str
2025-08-20T14:05:51.6851691Z ```
2025-08-20T14:05:51.6851812Z 
2025-08-20T14:05:51.6851954Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:05:51.6852222Z 
2025-08-20T14:05:51.6852347Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T14:05:51.6852594Z 
2025-08-20T14:05:51.6852707Z #### build\_asyncpg\_dsn
2025-08-20T14:05:51.6852892Z 
2025-08-20T14:05:51.6852981Z ```python
2025-08-20T14:05:51.6853232Z def build_asyncpg_dsn() -> str
2025-08-20T14:05:51.6853526Z ```
2025-08-20T14:05:51.6853650Z 
2025-08-20T14:05:51.6853841Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:05:51.6854167Z 
2025-08-20T14:05:51.6854286Z <a id="common.db.refresh_mvs"></a>
2025-08-20T14:05:51.6854521Z 
2025-08-20T14:05:51.6854616Z #### refresh\_mvs
2025-08-20T14:05:51.6854769Z 
2025-08-20T14:05:51.6854867Z ```python
2025-08-20T14:05:51.6855153Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:05:51.6855545Z ```
2025-08-20T14:05:51.6855671Z 
2025-08-20T14:05:51.6856073Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:05:51.6856570Z 
2025-08-20T14:05:51.6856705Z <a id="common.config"></a>
2025-08-20T14:05:51.6856915Z 
2025-08-20T14:05:51.6857032Z # common.config
2025-08-20T14:05:51.6857185Z 
2025-08-20T14:05:51.6857293Z <a id="common.base"></a>
2025-08-20T14:05:51.6857477Z 
2025-08-20T14:05:51.6857578Z # common.base
2025-08-20T14:05:51.6857725Z 
2025-08-20T14:05:51.6857843Z <a id="common.base.Base"></a>
2025-08-20T14:05:51.6858062Z 
2025-08-20T14:05:51.6858158Z ## Base Objects
2025-08-20T14:05:51.6858304Z 
2025-08-20T14:05:51.6858394Z ```python
2025-08-20T14:05:51.6858652Z class Base(DeclarativeBase)
2025-08-20T14:05:51.6858946Z ```
2025-08-20T14:05:51.6859072Z 
2025-08-20T14:05:51.6859194Z Base class for SQLAlchemy models.
2025-08-20T14:05:51.6859424Z 
2025-08-20T14:05:51.6859538Z <a id="repricer"></a>
2025-08-20T14:05:51.6859719Z 
2025-08-20T14:05:51.6859810Z # repricer
2025-08-20T14:05:51.6859950Z 
2025-08-20T14:05:51.6860086Z <a id="repricer.app.schemas"></a>
2025-08-20T14:05:51.6860328Z 
2025-08-20T14:05:51.6860441Z # repricer.app.schemas
2025-08-20T14:05:51.6860624Z 
2025-08-20T14:05:51.6860746Z <a id="repricer.app.deps"></a>
2025-08-20T14:05:51.6860967Z 
2025-08-20T14:05:51.6861079Z # repricer.app.deps
2025-08-20T14:05:51.6861249Z 
2025-08-20T14:05:51.6861425Z Placeholder module for Keepa / SP-API clients.
2025-08-20T14:05:51.6861710Z 
2025-08-20T14:05:51.6861832Z <a id="repricer.app.logic"></a>
2025-08-20T14:05:51.6862044Z 
2025-08-20T14:05:51.6862150Z # repricer.app.logic
2025-08-20T14:05:51.6862325Z 
2025-08-20T14:05:51.6862471Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T14:05:51.6862730Z 
2025-08-20T14:05:51.6862832Z #### MIN\_MARGIN
2025-08-20T14:05:51.6862980Z 
2025-08-20T14:05:51.6863067Z 15 % ROI
2025-08-20T14:05:51.6863202Z 
2025-08-20T14:05:51.6863352Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T14:05:51.6863620Z 
2025-08-20T14:05:51.6863719Z #### compute\_price
2025-08-20T14:05:51.6864064Z 
2025-08-20T14:05:51.6864167Z ```python
2025-08-20T14:05:51.6864541Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T14:05:51.6864995Z ```
2025-08-20T14:05:51.6865117Z 
2025-08-20T14:05:51.6865287Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T14:05:51.6865706Z Replace with real competitive logic later.
2025-08-20T14:05:51.6865980Z 
2025-08-20T14:05:51.6866106Z <a id="repricer.app.main"></a>
2025-08-20T14:05:51.6866321Z 
2025-08-20T14:05:51.6866576Z # repricer.app.main
2025-08-20T14:05:51.6866763Z 
2025-08-20T14:05:51.6866880Z <a id="repricer.app"></a>
2025-08-20T14:05:51.6867073Z 
2025-08-20T14:05:51.6867180Z # repricer.app
2025-08-20T14:05:51.6867334Z 
2025-08-20T14:05:51.6867474Z <a id="repricer.tests.test_imports"></a>
2025-08-20T14:05:51.6867740Z 
2025-08-20T14:05:51.6867864Z # repricer.tests.test\_imports
2025-08-20T14:05:51.6868085Z 
2025-08-20T14:05:51.6868218Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T14:05:51.6868472Z 
2025-08-20T14:05:51.6868606Z # repricer.tests.test\_smoke
2025-08-20T14:05:51.6868823Z 
2025-08-20T14:05:51.6868949Z <a id="repricer.tests"></a>
2025-08-20T14:05:51.6869156Z 
2025-08-20T14:05:51.6869258Z # repricer.tests
2025-08-20T14:05:51.6869428Z 
2025-08-20T14:05:51.6869525Z <a id="db"></a>
2025-08-20T14:05:51.6869676Z 
2025-08-20T14:05:51.6869764Z # db
2025-08-20T14:05:51.6869896Z 
2025-08-20T14:05:51.6870008Z <a id="db.utils.views"></a>
2025-08-20T14:05:51.6870204Z 
2025-08-20T14:05:51.6870306Z # db.utils.views
2025-08-20T14:05:51.6870462Z 
2025-08-20T14:05:51.6870595Z <a id="db.utils.views.replace_view"></a>
2025-08-20T14:05:51.6870846Z 
2025-08-20T14:05:51.6870951Z #### replace\_view
2025-08-20T14:05:51.6871111Z 
2025-08-20T14:05:51.6871208Z ```python
2025-08-20T14:05:51.6871500Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T14:05:51.6871865Z ```
2025-08-20T14:05:51.6871990Z 
2025-08-20T14:05:51.6872122Z Drop and recreate a SQL view atomically.
2025-08-20T14:05:51.6872377Z 
2025-08-20T14:05:51.6872494Z <a id="db.utils"></a>
2025-08-20T14:05:51.6872846Z 
2025-08-20T14:05:51.6872938Z # db.utils
2025-08-20T14:05:51.6873074Z 
2025-08-20T14:05:51.6873197Z <a id="price_importer"></a>
2025-08-20T14:05:51.6873399Z 
2025-08-20T14:05:51.6873506Z # price\_importer
2025-08-20T14:05:51.6873676Z 
2025-08-20T14:05:51.6873833Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T14:05:51.6874107Z 
2025-08-20T14:05:51.6874246Z # price\_importer.services\_common.dsn
2025-08-20T14:05:51.6874495Z 
2025-08-20T14:05:51.6874674Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T14:05:51.6874996Z 
2025-08-20T14:05:51.6875099Z #### build\_dsn
2025-08-20T14:05:51.6875250Z 
2025-08-20T14:05:51.6875346Z ```python
2025-08-20T14:05:51.6875611Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:05:51.6875957Z ```
2025-08-20T14:05:51.6876088Z 
2025-08-20T14:05:51.6876187Z Return safe DSN.
2025-08-20T14:05:51.6876341Z 
2025-08-20T14:05:51.6876987Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T14:05:51.6877309Z 
2025-08-20T14:05:51.6877508Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T14:05:51.6877834Z 
2025-08-20T14:05:51.6878003Z # price\_importer.services\_common.models\_vendor
2025-08-20T14:05:51.6878287Z 
2025-08-20T14:05:51.6878443Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T14:05:51.6878730Z 
2025-08-20T14:05:51.6878872Z # price\_importer.services\_common.db\_url
2025-08-20T14:05:51.6879130Z 
2025-08-20T14:05:51.6879347Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T14:05:51.6879679Z 
2025-08-20T14:05:51.6879780Z #### build\_url
2025-08-20T14:05:51.6879943Z 
2025-08-20T14:05:51.6880041Z ```python
2025-08-20T14:05:51.6880297Z def build_url(async_: bool = True) -> str
2025-08-20T14:05:51.6880639Z ```
2025-08-20T14:05:51.6880761Z 
2025-08-20T14:05:51.6880906Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:05:51.6881179Z 
2025-08-20T14:05:51.6881339Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T14:05:51.6881824Z 
2025-08-20T14:05:51.6881983Z # price\_importer.services\_common.keepa
2025-08-20T14:05:51.6882254Z 
2025-08-20T14:05:51.6882414Z <a id="price_importer.services_common.llm"></a>
2025-08-20T14:05:51.6882701Z 
2025-08-20T14:05:51.6882834Z # price\_importer.services\_common.llm
2025-08-20T14:05:51.6883084Z 
2025-08-20T14:05:51.6883258Z <a id="price_importer.services_common.settings"></a>
2025-08-20T14:05:51.6883558Z 
2025-08-20T14:05:51.6883703Z # price\_importer.services\_common.settings
2025-08-20T14:05:51.6883964Z 
2025-08-20T14:05:51.6884124Z <a id="price_importer.services_common.db"></a>
2025-08-20T14:05:51.6884395Z 
2025-08-20T14:05:51.6884526Z # price\_importer.services\_common.db
2025-08-20T14:05:51.6884768Z 
2025-08-20T14:05:51.6885001Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T14:05:51.6885360Z 
2025-08-20T14:05:51.6885482Z #### build\_sqlalchemy\_url
2025-08-20T14:05:51.6885684Z 
2025-08-20T14:05:51.6885776Z ```python
2025-08-20T14:05:51.6886042Z def build_sqlalchemy_url() -> str
2025-08-20T14:05:51.6886358Z ```
2025-08-20T14:05:51.6886634Z 
2025-08-20T14:05:51.6886775Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:05:51.6887049Z 
2025-08-20T14:05:51.6887263Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T14:05:51.6887605Z 
2025-08-20T14:05:51.6887717Z #### build\_asyncpg\_dsn
2025-08-20T14:05:51.6887903Z 
2025-08-20T14:05:51.6888008Z ```python
2025-08-20T14:05:51.6888254Z def build_asyncpg_dsn() -> str
2025-08-20T14:05:51.6888548Z ```
2025-08-20T14:05:51.6888668Z 
2025-08-20T14:05:51.6888857Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:05:51.6889181Z 
2025-08-20T14:05:51.6889372Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T14:05:51.6889697Z 
2025-08-20T14:05:51.6889801Z #### refresh\_mvs
2025-08-20T14:05:51.6889959Z 
2025-08-20T14:05:51.6890053Z ```python
2025-08-20T14:05:51.6890358Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:05:51.6890758Z ```
2025-08-20T14:05:51.6891060Z 
2025-08-20T14:05:51.6891284Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:05:51.6891625Z 
2025-08-20T14:05:51.6891778Z <a id="price_importer.services_common"></a>
2025-08-20T14:05:51.6892060Z 
2025-08-20T14:05:51.6892185Z # price\_importer.services\_common
2025-08-20T14:05:51.6892412Z 
2025-08-20T14:05:51.6892575Z <a id="price_importer.services_common.base"></a>
2025-08-20T14:05:51.6892854Z 
2025-08-20T14:05:51.6892988Z # price\_importer.services\_common.base
2025-08-20T14:05:51.6893247Z 
2025-08-20T14:05:51.6893380Z <a id="price_importer.normaliser"></a>
2025-08-20T14:05:51.6893625Z 
2025-08-20T14:05:51.6893741Z # price\_importer.normaliser
2025-08-20T14:05:51.6893953Z 
2025-08-20T14:05:51.6894105Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T14:05:51.6894380Z 
2025-08-20T14:05:51.6894519Z # price\_importer.common.models\_vendor
2025-08-20T14:05:51.6894764Z 
2025-08-20T14:05:51.6894898Z <a id="price_importer.common.db_url"></a>
2025-08-20T14:05:51.6895176Z 
2025-08-20T14:05:51.6895311Z # price\_importer.common.db\_url
2025-08-20T14:05:51.6895531Z 
2025-08-20T14:05:51.6895685Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T14:05:51.6895965Z 
2025-08-20T14:05:51.6896060Z #### make\_dsn
2025-08-20T14:05:51.6896209Z 
2025-08-20T14:05:51.6896304Z ```python
2025-08-20T14:05:51.6896706Z def make_dsn(async_: bool = False) -> str
2025-08-20T14:05:51.6897049Z ```
2025-08-20T14:05:51.6897167Z 
2025-08-20T14:05:51.6897339Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T14:05:51.6897641Z 
2025-08-20T14:05:51.6897804Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T14:05:51.6898105Z 
2025-08-20T14:05:51.6898202Z #### build\_url
2025-08-20T14:05:51.6898364Z 
2025-08-20T14:05:51.6898455Z ```python
2025-08-20T14:05:51.6898727Z def build_url(async_: bool = False) -> str
2025-08-20T14:05:51.6899077Z ```
2025-08-20T14:05:51.6899205Z 
2025-08-20T14:05:51.6899405Z Return Postgres DSN built from environment variables.
2025-08-20T14:05:51.6899900Z 
2025-08-20T14:05:51.6900036Z <a id="price_importer.common"></a>
2025-08-20T14:05:51.6900293Z 
2025-08-20T14:05:51.6900423Z # price\_importer.common
2025-08-20T14:05:51.6900639Z 
2025-08-20T14:05:51.6900791Z <a id="price_importer.common.base"></a>
2025-08-20T14:05:51.6901066Z 
2025-08-20T14:05:51.6901198Z # price\_importer.common.base
2025-08-20T14:05:51.6901432Z 
2025-08-20T14:05:51.6901594Z <a id="price_importer.tests.conftest"></a>
2025-08-20T14:05:51.6901861Z 
2025-08-20T14:05:51.6901996Z # price\_importer.tests.conftest
2025-08-20T14:05:51.6902239Z 
2025-08-20T14:05:51.6902396Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T14:05:51.6902676Z 
2025-08-20T14:05:51.6902816Z # price\_importer.tests.test\_reader
2025-08-20T14:05:51.6903072Z 
2025-08-20T14:05:51.6903231Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T14:05:51.6903558Z 
2025-08-20T14:05:51.6903705Z # price\_importer.tests.test\_imports
2025-08-20T14:05:51.6903948Z 
2025-08-20T14:05:51.6904112Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T14:05:51.6904410Z 
2025-08-20T14:05:51.6904542Z # price\_importer.tests.test\_smoke
2025-08-20T14:05:51.6904789Z 
2025-08-20T14:05:51.6904967Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T14:05:51.6905258Z 
2025-08-20T14:05:51.6905398Z # price\_importer.tests.test\_normaliser
2025-08-20T14:05:51.6905659Z 
2025-08-20T14:05:51.6905796Z <a id="price_importer.tests"></a>
2025-08-20T14:05:51.6906025Z 
2025-08-20T14:05:51.6906141Z # price\_importer.tests
2025-08-20T14:05:51.6906337Z 
2025-08-20T14:05:51.6906610Z <a id="price_importer.reader"></a>
2025-08-20T14:05:51.6906844Z 
2025-08-20T14:05:51.6906969Z # price\_importer.reader
2025-08-20T14:05:51.6907159Z 
2025-08-20T14:05:51.6907298Z <a id="price_importer.repository"></a>
2025-08-20T14:05:51.6907568Z 
2025-08-20T14:05:51.6907699Z # price\_importer.repository
2025-08-20T14:05:51.6907924Z 
2025-08-20T14:05:51.6908055Z <a id="price_importer.import"></a>
2025-08-20T14:05:51.6908318Z 
2025-08-20T14:05:51.6908441Z # price\_importer.import
2025-08-20T14:05:51.6908810Z 
2025-08-20T14:05:51.6908922Z <a id="fees_h10"></a>
2025-08-20T14:05:51.6909104Z 
2025-08-20T14:05:51.6909205Z # fees\_h10
2025-08-20T14:05:51.6909347Z 
2025-08-20T14:05:51.6909467Z <a id="fees_h10.worker"></a>
2025-08-20T14:05:51.6909679Z 
2025-08-20T14:05:51.6909784Z # fees\_h10.worker
2025-08-20T14:05:51.6909954Z 
2025-08-20T14:05:51.6910109Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T14:05:51.6910395Z 
2025-08-20T14:05:51.6910511Z #### list\_active\_asins
2025-08-20T14:05:51.6910712Z 
2025-08-20T14:05:51.6910811Z ```python
2025-08-20T14:05:51.6911086Z def list_active_asins() -> list[str]
2025-08-20T14:05:51.6911410Z ```
2025-08-20T14:05:51.6911538Z 
2025-08-20T14:05:51.6911728Z Return known ASINs or an empty list if unavailable.
2025-08-20T14:05:51.6912045Z 
2025-08-20T14:05:51.6912178Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T14:05:51.6912438Z 
2025-08-20T14:05:51.6912560Z # fees\_h10.tests.test\_smoke
2025-08-20T14:05:51.6912781Z 
2025-08-20T14:05:51.6912910Z <a id="fees_h10.tests"></a>
2025-08-20T14:05:51.6913110Z 
2025-08-20T14:05:51.6913209Z # fees\_h10.tests
2025-08-20T14:05:51.6913371Z 
2025-08-20T14:05:51.6913498Z <a id="fees_h10.client"></a>
2025-08-20T14:05:51.6913704Z 
2025-08-20T14:05:51.6913803Z # fees\_h10.client
2025-08-20T14:05:51.6913972Z 
2025-08-20T14:05:51.6914095Z <a id="fees_h10.repository"></a>
2025-08-20T14:05:51.6914319Z 
2025-08-20T14:05:51.6914431Z # fees\_h10.repository
2025-08-20T14:05:51.6914620Z 
2025-08-20T14:05:51.6914781Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T14:05:51.6915070Z 
2025-08-20T14:05:51.6915188Z #### upsert\_fees\_raw
2025-08-20T14:05:51.6915369Z 
2025-08-20T14:05:51.6915470Z ```python
2025-08-20T14:05:51.6915741Z def upsert_fees_raw(engine: Engine,
2025-08-20T14:05:51.6916116Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T14:05:51.6916662Z                     *,
2025-08-20T14:05:51.6917028Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T14:05:51.6917621Z ```
2025-08-20T14:05:51.6917753Z 
2025-08-20T14:05:51.6917887Z Idempotent upsert for fees.
2025-08-20T14:05:51.6918098Z 
2025-08-20T14:05:51.6918336Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T14:05:51.6918869Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T14:05:51.6919346Z Only updates when one of the mutable fields changes.
2025-08-20T14:05:51.6919661Z 
2025-08-20T14:05:51.6919768Z <a id="emailer"></a>
2025-08-20T14:05:51.6919938Z 
2025-08-20T14:05:51.6920038Z # emailer
2025-08-20T14:05:51.6920172Z 
2025-08-20T14:05:51.6920330Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T14:05:51.6920621Z 
2025-08-20T14:05:51.6920760Z # emailer.tests.test\_import\_emailer
2025-08-20T14:05:51.6921018Z 
2025-08-20T14:05:51.6921155Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T14:05:51.6921407Z 
2025-08-20T14:05:51.6921530Z # emailer.tests.test\_smoke
2025-08-20T14:05:51.6921738Z 
2025-08-20T14:05:51.6921873Z <a id="emailer.tests"></a>
2025-08-20T14:05:51.6922084Z 
2025-08-20T14:05:51.6922184Z # emailer.tests
2025-08-20T14:05:51.6922348Z 
2025-08-20T14:05:51.6922488Z <a id="emailer.generate_body"></a>
2025-08-20T14:05:51.6922737Z 
2025-08-20T14:05:51.6922857Z # emailer.generate\_body
2025-08-20T14:05:51.6923069Z 
2025-08-20T14:05:51.6923186Z <a id="llm_server"></a>
2025-08-20T14:05:51.6923371Z 
2025-08-20T14:05:51.6923473Z # llm\_server
2025-08-20T14:05:51.6923636Z 
2025-08-20T14:05:51.6923756Z <a id="llm_server.app"></a>
2025-08-20T14:05:51.6923962Z 
2025-08-20T14:05:51.6924076Z # llm\_server.app
2025-08-20T14:05:51.6924239Z 
