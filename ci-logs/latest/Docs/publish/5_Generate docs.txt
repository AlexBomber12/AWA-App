2025-08-17T16:16:08.2502883Z ##[group]Run pydoc-markdown
2025-08-17T16:16:08.2503196Z [36;1mpydoc-markdown[0m
2025-08-17T16:16:08.2543041Z shell: /usr/bin/bash -e {0}
2025-08-17T16:16:08.2543285Z env:
2025-08-17T16:16:08.2543522Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:16:08.2543924Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T16:16:08.2544301Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:16:08.2544640Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:16:08.2545000Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:16:08.2545338Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T16:16:08.2545776Z ##[endgroup]
2025-08-17T16:16:08.6441157Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T16:16:08.6441875Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T16:16:08.6442371Z In "pydoc-markdown.yml"
2025-08-17T16:16:08.6442795Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T16:16:08.6443500Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T16:16:08.6444299Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T16:16:08.6444843Z 
2025-08-17T16:16:08.8627366Z <a id="__init__"></a>
2025-08-17T16:16:08.8627784Z 
2025-08-17T16:16:08.8627925Z # \_\_init\_\_
2025-08-17T16:16:08.8628146Z 
2025-08-17T16:16:08.8628295Z <a id="api"></a>
2025-08-17T16:16:08.8628521Z 
2025-08-17T16:16:08.8628646Z # api
2025-08-17T16:16:08.8628830Z 
2025-08-17T16:16:08.8629010Z <a id="api.tests.test_llm"></a>
2025-08-17T16:16:08.8629337Z 
2025-08-17T16:16:08.8629537Z # api.tests.test\_llm
2025-08-17T16:16:08.8629847Z 
2025-08-17T16:16:08.8630058Z <a id="api.tests.test_imports"></a>
2025-08-17T16:16:08.8630513Z 
2025-08-17T16:16:08.8630711Z # api.tests.test\_imports
2025-08-17T16:16:08.8631093Z 
2025-08-17T16:16:08.8631345Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T16:16:08.8631712Z 
2025-08-17T16:16:08.8631898Z # api.tests.test\_entrypoint
2025-08-17T16:16:08.8632247Z 
2025-08-17T16:16:08.8632444Z <a id="api.tests.test_health"></a>
2025-08-17T16:16:08.8632813Z 
2025-08-17T16:16:08.8632986Z # api.tests.test\_health
2025-08-17T16:16:08.8633281Z 
2025-08-17T16:16:08.8633467Z <a id="api.migrations.env"></a>
2025-08-17T16:16:08.8633810Z 
2025-08-17T16:16:08.8633974Z # api.migrations.env
2025-08-17T16:16:08.8634238Z 
2025-08-17T16:16:08.8634516Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T16:16:08.8634980Z 
2025-08-17T16:16:08.8635219Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T16:16:08.8635925Z 
2025-08-17T16:16:08.8636194Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T16:16:08.8636645Z 
2025-08-17T16:16:08.8636852Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T16:16:08.8637211Z 
2025-08-17T16:16:08.8637492Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T16:16:08.8637929Z 
2025-08-17T16:16:08.8638171Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T16:16:08.8638797Z 
2025-08-17T16:16:08.8639001Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T16:16:08.8639357Z 
2025-08-17T16:16:08.8639537Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T16:16:08.8639859Z 
2025-08-17T16:16:08.8640064Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T16:16:08.8640296Z 
2025-08-17T16:16:08.8640408Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T16:16:08.8640610Z 
2025-08-17T16:16:08.8640750Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T16:16:08.8640981Z 
2025-08-17T16:16:08.8641099Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T16:16:08.8641315Z 
2025-08-17T16:16:08.8641443Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T16:16:08.8641662Z 
2025-08-17T16:16:08.8641780Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T16:16:08.8641989Z 
2025-08-17T16:16:08.8642120Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T16:16:08.8642553Z 
2025-08-17T16:16:08.8642672Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T16:16:08.8642879Z 
2025-08-17T16:16:08.8643012Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T16:16:08.8643251Z 
2025-08-17T16:16:08.8643368Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T16:16:08.8643577Z 
2025-08-17T16:16:08.8643700Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T16:16:08.8643909Z 
2025-08-17T16:16:08.8644011Z # api.migrations.versions.0001\_baseline
2025-08-17T16:16:08.8644203Z 
2025-08-17T16:16:08.8644300Z <a id="api.migrations.versions"></a>
2025-08-17T16:16:08.8644477Z 
2025-08-17T16:16:08.8644564Z # api.migrations.versions
2025-08-17T16:16:08.8644715Z 
2025-08-17T16:16:08.8644803Z <a id="api.migrations"></a>
2025-08-17T16:16:08.8644952Z 
2025-08-17T16:16:08.8645034Z # api.migrations
2025-08-17T16:16:08.8645150Z 
2025-08-17T16:16:08.8645224Z <a id="api.db"></a>
2025-08-17T16:16:08.8645342Z 
2025-08-17T16:16:08.8645427Z # api.db
2025-08-17T16:16:08.8645522Z 
2025-08-17T16:16:08.8645611Z <a id="api.routes.stats"></a>
2025-08-17T16:16:08.8645978Z 
2025-08-17T16:16:08.8646057Z # api.routes.stats
2025-08-17T16:16:08.8646178Z 
2025-08-17T16:16:08.8646277Z <a id="api.routes.stats.kpi"></a>
2025-08-17T16:16:08.8646446Z 
2025-08-17T16:16:08.8646515Z #### kpi
2025-08-17T16:16:08.8646610Z 
2025-08-17T16:16:08.8646686Z ```python
2025-08-17T16:16:08.8646869Z @router.get("/stats/kpi")
2025-08-17T16:16:08.8647132Z def kpi() -> List[Dict[str, int]]
2025-08-17T16:16:08.8647357Z ```
2025-08-17T16:16:08.8647453Z 
2025-08-17T16:16:08.8647538Z Return KPI metrics (mock).
2025-08-17T16:16:08.8647688Z 
2025-08-17T16:16:08.8647799Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T16:16:08.8648005Z 
2025-08-17T16:16:08.8648080Z #### roi\_by\_vendor
2025-08-17T16:16:08.8648197Z 
2025-08-17T16:16:08.8648329Z ```python
2025-08-17T16:16:08.8648495Z @router.get("/stats/roi_by_vendor")
2025-08-17T16:16:08.8648755Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T16:16:08.8648990Z ```
2025-08-17T16:16:08.8649075Z 
2025-08-17T16:16:08.8649158Z Return ROI percent by vendor.
2025-08-17T16:16:08.8649299Z 
2025-08-17T16:16:08.8649398Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T16:16:08.8649571Z 
2025-08-17T16:16:08.8649638Z #### roi\_trend
2025-08-17T16:16:08.8649742Z 
2025-08-17T16:16:08.8649814Z ```python
2025-08-17T16:16:08.8649983Z @router.get("/stats/roi_trend")
2025-08-17T16:16:08.8650223Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T16:16:08.8650452Z ```
2025-08-17T16:16:08.8650538Z 
2025-08-17T16:16:08.8650611Z Return 30-day ROI trend.
2025-08-17T16:16:08.8650737Z 
2025-08-17T16:16:08.8650826Z <a id="api.routes.roi"></a>
2025-08-17T16:16:08.8650958Z 
2025-08-17T16:16:08.8651025Z # api.routes.roi
2025-08-17T16:16:08.8651209Z 
2025-08-17T16:16:08.8651294Z <a id="api.routes.health"></a>
2025-08-17T16:16:08.8651466Z 
2025-08-17T16:16:08.8651542Z # api.routes.health
2025-08-17T16:16:08.8651651Z 
2025-08-17T16:16:08.8651745Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T16:16:08.8652049Z 
2025-08-17T16:16:08.8652119Z #### MAX\_SKEW
2025-08-17T16:16:08.8652215Z 
2025-08-17T16:16:08.8652277Z seconds
2025-08-17T16:16:08.8652366Z 
2025-08-17T16:16:08.8652456Z <a id="api.routes.health.health"></a>
2025-08-17T16:16:08.8652616Z 
2025-08-17T16:16:08.8652683Z #### health
2025-08-17T16:16:08.8652768Z 
2025-08-17T16:16:08.8652829Z ```python
2025-08-17T16:16:08.8653022Z @router.get("/health", include_in_schema=False)
2025-08-17T16:16:08.8653388Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T16:16:08.8653727Z ```
2025-08-17T16:16:08.8653807Z 
2025-08-17T16:16:08.8653919Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T16:16:08.8654116Z 
2025-08-17T16:16:08.8654201Z <a id="api.routes.repository"></a>
2025-08-17T16:16:08.8654353Z 
2025-08-17T16:16:08.8654436Z # api.routes.repository
2025-08-17T16:16:08.8654558Z 
2025-08-17T16:16:08.8654628Z <a id="api.routes"></a>
2025-08-17T16:16:08.8654968Z 
2025-08-17T16:16:08.8655040Z # api.routes
2025-08-17T16:16:08.8655136Z 
2025-08-17T16:16:08.8655212Z <a id="api.models.fee"></a>
2025-08-17T16:16:08.8655351Z 
2025-08-17T16:16:08.8655417Z # api.models.fee
2025-08-17T16:16:08.8655518Z 
2025-08-17T16:16:08.8655596Z <a id="api.models"></a>
2025-08-17T16:16:08.8655893Z 
2025-08-17T16:16:08.8655962Z # api.models
2025-08-17T16:16:08.8656059Z 
2025-08-17T16:16:08.8656145Z <a id="api.roi_repository"></a>
2025-08-17T16:16:08.8656288Z 
2025-08-17T16:16:08.8656359Z # api.roi\_repository
2025-08-17T16:16:08.8656479Z 
2025-08-17T16:16:08.8656546Z <a id="api.main"></a>
2025-08-17T16:16:08.8656656Z 
2025-08-17T16:16:08.8656719Z # api.main
2025-08-17T16:16:08.8656817Z 
2025-08-17T16:16:08.8656893Z <a id="api.main.ready"></a>
2025-08-17T16:16:08.8657024Z 
2025-08-17T16:16:08.8657092Z #### ready
2025-08-17T16:16:08.8657178Z 
2025-08-17T16:16:08.8657240Z ```python
2025-08-17T16:16:08.8657500Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T16:16:08.8657933Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T16:16:08.8658284Z                                                                       str]
2025-08-17T16:16:08.8658511Z ```
2025-08-17T16:16:08.8658595Z 
2025-08-17T16:16:08.8658688Z Return 200 only when migrations are at head.
2025-08-17T16:16:08.8658858Z 
2025-08-17T16:16:08.8658936Z <a id="api.config"></a>
2025-08-17T16:16:08.8659052Z 
2025-08-17T16:16:08.8659114Z # api.config
2025-08-17T16:16:08.8659210Z 
2025-08-17T16:16:08.8659273Z <a id="etl"></a>
2025-08-17T16:16:08.8659372Z 
2025-08-17T16:16:08.8659431Z # etl
2025-08-17T16:16:08.8659519Z 
2025-08-17T16:16:08.8659598Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T16:16:08.8659746Z 
2025-08-17T16:16:08.8659823Z # etl.fba\_fee\_ingestor
2025-08-17T16:16:08.8659942Z 
2025-08-17T16:16:08.8660020Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T16:16:08.8660163Z 
2025-08-17T16:16:08.8660240Z # etl.sp\_fees\_ingestor
2025-08-17T16:16:08.8660362Z 
2025-08-17T16:16:08.8660447Z <a id="etl.keepa_ingestor"></a>
2025-08-17T16:16:08.8660589Z 
2025-08-17T16:16:08.8660659Z # etl.keepa\_ingestor
2025-08-17T16:16:08.8660771Z 
2025-08-17T16:16:08.8660847Z <a id="etl.db"></a>
2025-08-17T16:16:08.8660952Z 
2025-08-17T16:16:08.8661013Z # etl.db
2025-08-17T16:16:08.8661099Z 
2025-08-17T16:16:08.8661189Z <a id="etl.dialects.schemas"></a>
2025-08-17T16:16:08.8661333Z 
2025-08-17T16:16:08.8661405Z # etl.dialects.schemas
2025-08-17T16:16:08.8661527Z 
2025-08-17T16:16:08.8661631Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T16:16:08.8661814Z 
2025-08-17T16:16:08.8661908Z # etl.dialects.amazon\_reimbursements
2025-08-17T16:16:08.8662072Z 
2025-08-17T16:16:08.8662161Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T16:16:08.8662324Z 
2025-08-17T16:16:08.8662412Z # etl.dialects.amazon\_returns
2025-08-17T16:16:08.8662550Z 
2025-08-17T16:16:08.8662625Z <a id="etl.dialects"></a>
2025-08-17T16:16:08.8662754Z 
2025-08-17T16:16:08.8662818Z # etl.dialects
2025-08-17T16:16:08.8663047Z 
2025-08-17T16:16:08.8663114Z <a id="ingest"></a>
2025-08-17T16:16:08.8663224Z 
2025-08-17T16:16:08.8663284Z # ingest
2025-08-17T16:16:08.8663369Z 
2025-08-17T16:16:08.8663455Z <a id="ingest.copy_loader"></a>
2025-08-17T16:16:08.8663592Z 
2025-08-17T16:16:08.8663662Z # ingest.copy\_loader
2025-08-17T16:16:08.8663779Z 
2025-08-17T16:16:08.8663881Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T16:16:08.8664062Z 
2025-08-17T16:16:08.8664134Z #### copy\_df\_via\_temp
2025-08-17T16:16:08.8664261Z 
2025-08-17T16:16:08.8664324Z ```python
2025-08-17T16:16:08.8664498Z def copy_df_via_temp(engine: Engine,
2025-08-17T16:16:08.8664735Z                      df: pd.DataFrame,
2025-08-17T16:16:08.8664965Z                      target_table: str,
2025-08-17T16:16:08.8665176Z                      *,
2025-08-17T16:16:08.8665383Z                      target_schema: Optional[str] = None,
2025-08-17T16:16:08.8665823Z                      columns: Sequence[str],
2025-08-17T16:16:08.8666232Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T16:16:08.8666538Z                      analyze_after: bool = False) -> int
2025-08-17T16:16:08.8666773Z ```
2025-08-17T16:16:08.8666857Z 
2025-08-17T16:16:08.8667015Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T16:16:08.8667249Z 
2025-08-17T16:16:08.8667427Z The dataframe is first written to a TEMP table created ``LIKE`` the target
2025-08-17T16:16:08.8667864Z including defaults and generated columns.  Data is streamed via ``COPY`` and
2025-08-17T16:16:08.8668293Z then inserted into the final table.  If ``conflict_cols`` is provided an
2025-08-17T16:16:08.8668700Z ``INSERT ... ON CONFLICT DO UPDATE`` is issued for the non-conflicting
2025-08-17T16:16:08.8669036Z columns, otherwise rows are simply appended.
2025-08-17T16:16:08.8669209Z 
2025-08-17T16:16:08.8669310Z Returns the number of rows provided in ``df``.
2025-08-17T16:16:08.8669489Z 
2025-08-17T16:16:08.8669582Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T16:16:08.8669745Z 
2025-08-17T16:16:08.8669826Z # ingest.tests.test\_smoke
2025-08-17T16:16:08.8669975Z 
2025-08-17T16:16:08.8670072Z <a id="ingest.tests"></a>
2025-08-17T16:16:08.8670196Z 
2025-08-17T16:16:08.8670267Z # ingest.tests
2025-08-17T16:16:08.8670364Z 
2025-08-17T16:16:08.8670445Z <a id="ingest.upload_router"></a>
2025-08-17T16:16:08.8670592Z 
2025-08-17T16:16:08.8670671Z # ingest.upload\_router
2025-08-17T16:16:08.8670790Z 
2025-08-17T16:16:08.8670871Z <a id="ingest.email_watcher"></a>
2025-08-17T16:16:08.8671020Z 
2025-08-17T16:16:08.8671091Z # ingest.email\_watcher
2025-08-17T16:16:08.8671205Z 
2025-08-17T16:16:08.8671291Z <a id="ingest.email_watcher.main"></a>
2025-08-17T16:16:08.8671454Z 
2025-08-17T16:16:08.8671516Z #### main
2025-08-17T16:16:08.8671601Z 
2025-08-17T16:16:08.8671669Z ```python
2025-08-17T16:16:08.8671841Z def main() -> dict[str, str]
2025-08-17T16:16:08.8672029Z ```
2025-08-17T16:16:08.8672109Z 
2025-08-17T16:16:08.8672254Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T16:16:08.8672481Z 
2025-08-17T16:16:08.8672609Z Returns {"status": "success"} when processing completes.
2025-08-17T16:16:08.8672818Z 
2025-08-17T16:16:08.8672901Z <a id="ingest.ingest_router"></a>
2025-08-17T16:16:08.8673044Z 
2025-08-17T16:16:08.8673123Z # ingest.ingest\_router
2025-08-17T16:16:08.8673239Z 
2025-08-17T16:16:08.8673313Z <a id="logistics_etl"></a>
2025-08-17T16:16:08.8673439Z 
2025-08-17T16:16:08.8673512Z # logistics\_etl
2025-08-17T16:16:08.8673615Z 
2025-08-17T16:16:08.8673689Z Daily logistics ETL job.
2025-08-17T16:16:08.8673816Z 
2025-08-17T16:16:08.8673897Z <a id="logistics_etl.__main__"></a>
2025-08-17T16:16:08.8674047Z 
2025-08-17T16:16:08.8674131Z # logistics\_etl.\_\_main\_\_
2025-08-17T16:16:08.8674270Z 
2025-08-17T16:16:08.8674350Z <a id="logistics_etl.dsn"></a>
2025-08-17T16:16:08.8674485Z 
2025-08-17T16:16:08.8674565Z # logistics\_etl.dsn
2025-08-17T16:16:08.8674676Z 
2025-08-17T16:16:08.8674789Z Local DSN builder to avoid cross-service dependency.
2025-08-17T16:16:08.8675124Z 
2025-08-17T16:16:08.8675211Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T16:16:08.8675375Z 
2025-08-17T16:16:08.8675444Z #### build\_dsn
2025-08-17T16:16:08.8675543Z 
2025-08-17T16:16:08.8675606Z ```python
2025-08-17T16:16:08.8676016Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:16:08.8676237Z ```
2025-08-17T16:16:08.8676318Z 
2025-08-17T16:16:08.8676459Z Return a Postgres DSN assembled from environment variables.
2025-08-17T16:16:08.8676677Z 
2025-08-17T16:16:08.8676820Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T16:16:08.8677203Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T16:16:08.8677540Z error when any required variable is missing.
2025-08-17T16:16:08.8677709Z 
2025-08-17T16:16:08.8677800Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T16:16:08.8677966Z 
2025-08-17T16:16:08.8678055Z # logistics\_etl.tests.conftest
2025-08-17T16:16:08.8678197Z 
2025-08-17T16:16:08.8678297Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T16:16:08.8678628Z 
2025-08-17T16:16:08.8678714Z # logistics\_etl.tests.test\_repository
2025-08-17T16:16:08.8678874Z 
2025-08-17T16:16:08.8678969Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T16:16:08.8679135Z 
2025-08-17T16:16:08.8679218Z # logistics\_etl.tests.test\_cron
2025-08-17T16:16:08.8679362Z 
2025-08-17T16:16:08.8679463Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T16:16:08.8679635Z 
2025-08-17T16:16:08.8679717Z # logistics\_etl.tests.test\_imports
2025-08-17T16:16:08.8679881Z 
2025-08-17T16:16:08.8679973Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T16:16:08.8680140Z 
2025-08-17T16:16:08.8680228Z # logistics\_etl.tests.test\_smoke
2025-08-17T16:16:08.8680379Z 
2025-08-17T16:16:08.8680470Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T16:16:08.8680634Z 
2025-08-17T16:16:08.8680722Z # logistics\_etl.tests.test\_client
2025-08-17T16:16:08.8680871Z 
2025-08-17T16:16:08.8680951Z <a id="logistics_etl.tests"></a>
2025-08-17T16:16:08.8681107Z 
2025-08-17T16:16:08.8681177Z # logistics\_etl.tests
2025-08-17T16:16:08.8681293Z 
2025-08-17T16:16:08.8681375Z <a id="logistics_etl.flow"></a>
2025-08-17T16:16:08.8681512Z 
2025-08-17T16:16:08.8681580Z # logistics\_etl.flow
2025-08-17T16:16:08.8681694Z 
2025-08-17T16:16:08.8681781Z <a id="logistics_etl.client"></a>
2025-08-17T16:16:08.8681961Z 
2025-08-17T16:16:08.8682032Z # logistics\_etl.client
2025-08-17T16:16:08.8682153Z 
2025-08-17T16:16:08.8682229Z <a id="logistics_etl.cron"></a>
2025-08-17T16:16:08.8682381Z 
2025-08-17T16:16:08.8682449Z # logistics\_etl.cron
2025-08-17T16:16:08.8682562Z 
2025-08-17T16:16:08.8682644Z <a id="logistics_etl.db"></a>
2025-08-17T16:16:08.8682780Z 
2025-08-17T16:16:08.8682847Z # logistics\_etl.db
2025-08-17T16:16:08.8682959Z 
2025-08-17T16:16:08.8683045Z <a id="logistics_etl.repository"></a>
2025-08-17T16:16:08.8683200Z 
2025-08-17T16:16:08.8683278Z # logistics\_etl.repository
2025-08-17T16:16:08.8683414Z 
2025-08-17T16:16:08.8683486Z <a id="alert_bot"></a>
2025-08-17T16:16:08.8683606Z 
2025-08-17T16:16:08.8683674Z # alert\_bot
2025-08-17T16:16:08.8683767Z 
2025-08-17T16:16:08.8683851Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T16:16:08.8684010Z 
2025-08-17T16:16:08.8684096Z # alert\_bot.tests.test\_smoke
2025-08-17T16:16:08.8684232Z 
2025-08-17T16:16:08.8684307Z <a id="alert_bot.tests"></a>
2025-08-17T16:16:08.8684449Z 
2025-08-17T16:16:08.8684514Z # alert\_bot.tests
2025-08-17T16:16:08.8684619Z 
2025-08-17T16:16:08.8684704Z <a id="alert_bot.alert_bot"></a>
2025-08-17T16:16:08.8684845Z 
2025-08-17T16:16:08.8684915Z # alert\_bot.alert\_bot
2025-08-17T16:16:08.8685030Z 
2025-08-17T16:16:08.8685111Z <a id="alert_bot.rules"></a>
2025-08-17T16:16:08.8685242Z 
2025-08-17T16:16:08.8685308Z # alert\_bot.rules
2025-08-17T16:16:08.8685415Z 
2025-08-17T16:16:08.8685480Z <a id="common"></a>
2025-08-17T16:16:08.8685584Z 
2025-08-17T16:16:08.8685801Z # common
2025-08-17T16:16:08.8685909Z 
2025-08-17T16:16:08.8685983Z <a id="common.dsn"></a>
2025-08-17T16:16:08.8686305Z 
2025-08-17T16:16:08.8686375Z # common.dsn
2025-08-17T16:16:08.8686468Z 
2025-08-17T16:16:08.8686553Z <a id="common.dsn.build_dsn"></a>
2025-08-17T16:16:08.8686705Z 
2025-08-17T16:16:08.8686769Z #### build\_dsn
2025-08-17T16:16:08.8686869Z 
2025-08-17T16:16:08.8686932Z ```python
2025-08-17T16:16:08.8687110Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:16:08.8687331Z ```
2025-08-17T16:16:08.8687413Z 
2025-08-17T16:16:08.8687533Z Return a Postgres DSN, validating required variables.
2025-08-17T16:16:08.8687734Z 
2025-08-17T16:16:08.8687921Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T16:16:08.8688349Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T16:16:08.8688758Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T16:16:08.8689060Z missing.
2025-08-17T16:16:08.8689153Z 
2025-08-17T16:16:08.8689235Z <a id="common.models_vendor"></a>
2025-08-17T16:16:08.8689386Z 
2025-08-17T16:16:08.8689737Z # common.models\_vendor
2025-08-17T16:16:08.8689858Z 
2025-08-17T16:16:08.8689947Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T16:16:08.8690118Z 
2025-08-17T16:16:08.8690183Z ## Vendor Objects
2025-08-17T16:16:08.8690285Z 
2025-08-17T16:16:08.8690347Z ```python
2025-08-17T16:16:08.8690502Z class Vendor(Base)
2025-08-17T16:16:08.8690658Z ```
2025-08-17T16:16:08.8690744Z 
2025-08-17T16:16:08.8690821Z Vendor of inventory items.
2025-08-17T16:16:08.8690952Z 
2025-08-17T16:16:08.8691059Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T16:16:08.8691236Z 
2025-08-17T16:16:08.8691308Z ## VendorPrice Objects
2025-08-17T16:16:08.8691432Z 
2025-08-17T16:16:08.8691493Z ```python
2025-08-17T16:16:08.8691647Z class VendorPrice(Base)
2025-08-17T16:16:08.8691827Z ```
2025-08-17T16:16:08.8691906Z 
2025-08-17T16:16:08.8692006Z Association table linking vendors to pricing.
2025-08-17T16:16:08.8692188Z 
2025-08-17T16:16:08.8692262Z <a id="common.db_url"></a>
2025-08-17T16:16:08.8692392Z 
2025-08-17T16:16:08.8692465Z # common.db\_url
2025-08-17T16:16:08.8692568Z 
2025-08-17T16:16:08.8692653Z <a id="common.db_url.build_url"></a>
2025-08-17T16:16:08.8692811Z 
2025-08-17T16:16:08.8692875Z #### build\_url
2025-08-17T16:16:08.8692972Z 
2025-08-17T16:16:08.8693035Z ```python
2025-08-17T16:16:08.8693205Z def build_url(async_: bool = True) -> str
2025-08-17T16:16:08.8693429Z ```
2025-08-17T16:16:08.8693509Z 
2025-08-17T16:16:08.8693604Z Return Postgres DSN from env or PG_* parts.
2025-08-17T16:16:08.8693774Z 
2025-08-17T16:16:08.8693855Z <a id="common.keepa"></a>
2025-08-17T16:16:08.8693981Z 
2025-08-17T16:16:08.8694047Z # common.keepa
2025-08-17T16:16:08.8694151Z 
2025-08-17T16:16:08.8694223Z <a id="common.llm"></a>
2025-08-17T16:16:08.8694338Z 
2025-08-17T16:16:08.8694400Z # common.llm
2025-08-17T16:16:08.8694501Z 
2025-08-17T16:16:08.8694578Z <a id="common.settings"></a>
2025-08-17T16:16:08.8694711Z 
2025-08-17T16:16:08.8694784Z # common.settings
2025-08-17T16:16:08.8694887Z 
2025-08-17T16:16:08.8694967Z <a id="common.db"></a>
2025-08-17T16:16:08.8695086Z 
2025-08-17T16:16:08.8695148Z # common.db
2025-08-17T16:16:08.8695238Z 
2025-08-17T16:16:08.8695343Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T16:16:08.8695511Z 
2025-08-17T16:16:08.8695586Z #### build\_sqlalchemy\_url
2025-08-17T16:16:08.8695896Z 
2025-08-17T16:16:08.8695959Z ```python
2025-08-17T16:16:08.8716670Z def build_sqlalchemy_url() -> str
2025-08-17T16:16:08.8717073Z ```
2025-08-17T16:16:08.8717220Z 
2025-08-17T16:16:08.8717386Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T16:16:08.8717720Z 
2025-08-17T16:16:08.8717875Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T16:16:08.8718169Z 
2025-08-17T16:16:08.8718299Z #### build\_asyncpg\_dsn
2025-08-17T16:16:08.8718529Z 
2025-08-17T16:16:08.8718635Z ```python
2025-08-17T16:16:08.8718916Z def build_asyncpg_dsn() -> str
2025-08-17T16:16:08.8719243Z ```
2025-08-17T16:16:08.8719373Z 
2025-08-17T16:16:08.8719513Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T16:16:08.8719896Z 
2025-08-17T16:16:08.8719984Z <a id="common.db.refresh_mvs"></a>
2025-08-17T16:16:08.8720141Z 
2025-08-17T16:16:08.8720207Z #### refresh\_mvs
2025-08-17T16:16:08.8720310Z 
2025-08-17T16:16:08.8720377Z ```python
2025-08-17T16:16:08.8720568Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T16:16:08.8720821Z ```
2025-08-17T16:16:08.8720902Z 
2025-08-17T16:16:08.8721037Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T16:16:08.8721260Z 
2025-08-17T16:16:08.8721337Z <a id="common.config"></a>
2025-08-17T16:16:08.8721464Z 
2025-08-17T16:16:08.8721531Z # common.config
2025-08-17T16:16:08.8721639Z 
2025-08-17T16:16:08.8721712Z <a id="common.base"></a>
2025-08-17T16:16:08.8721833Z 
2025-08-17T16:16:08.8721901Z # common.base
2025-08-17T16:16:08.8721997Z 
2025-08-17T16:16:08.8722075Z <a id="common.base.Base"></a>
2025-08-17T16:16:08.8722211Z 
2025-08-17T16:16:08.8722280Z ## Base Objects
2025-08-17T16:16:08.8722378Z 
2025-08-17T16:16:08.8722441Z ```python
2025-08-17T16:16:08.8722736Z class Base(DeclarativeBase)
2025-08-17T16:16:08.8722926Z ```
2025-08-17T16:16:08.8723011Z 
2025-08-17T16:16:08.8723094Z Base class for SQLAlchemy models.
2025-08-17T16:16:08.8723241Z 
2025-08-17T16:16:08.8723318Z <a id="repricer"></a>
2025-08-17T16:16:08.8723437Z 
2025-08-17T16:16:08.8723503Z # repricer
2025-08-17T16:16:08.8723592Z 
2025-08-17T16:16:08.8723683Z <a id="repricer.app.schemas"></a>
2025-08-17T16:16:08.8723830Z 
2025-08-17T16:16:08.8723904Z # repricer.app.schemas
2025-08-17T16:16:08.8724034Z 
2025-08-17T16:16:08.8724115Z <a id="repricer.app.deps"></a>
2025-08-17T16:16:08.8724254Z 
2025-08-17T16:16:08.8724331Z # repricer.app.deps
2025-08-17T16:16:08.8724441Z 
2025-08-17T16:16:08.8724551Z Placeholder module for Keepa / SP-API clients.
2025-08-17T16:16:08.8724739Z 
2025-08-17T16:16:08.8724829Z <a id="repricer.app.logic"></a>
2025-08-17T16:16:08.8724974Z 
2025-08-17T16:16:08.8725047Z # repricer.app.logic
2025-08-17T16:16:08.8725168Z 
2025-08-17T16:16:08.8725265Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T16:16:08.8725454Z 
2025-08-17T16:16:08.8725523Z #### MIN\_MARGIN
2025-08-17T16:16:08.8725798Z 
2025-08-17T16:16:08.8725913Z 15 % ROI
2025-08-17T16:16:08.8726005Z 
2025-08-17T16:16:08.8726117Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T16:16:08.8726303Z 
2025-08-17T16:16:08.8726370Z #### compute\_price
2025-08-17T16:16:08.8726482Z 
2025-08-17T16:16:08.8726544Z ```python
2025-08-17T16:16:08.8726786Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T16:16:08.8727088Z ```
2025-08-17T16:16:08.8727168Z 
2025-08-17T16:16:08.8727280Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T16:16:08.8727555Z Replace with real competitive logic later.
2025-08-17T16:16:08.8727726Z 
2025-08-17T16:16:08.8727813Z <a id="repricer.app.main"></a>
2025-08-17T16:16:08.8727953Z 
2025-08-17T16:16:08.8728023Z # repricer.app.main
2025-08-17T16:16:08.8728136Z 
2025-08-17T16:16:08.8728213Z <a id="repricer.app"></a>
2025-08-17T16:16:08.8728339Z 
2025-08-17T16:16:08.8728416Z # repricer.app
2025-08-17T16:16:08.8728520Z 
2025-08-17T16:16:08.8728609Z <a id="repricer.tests.test_imports"></a>
2025-08-17T16:16:08.8728777Z 
2025-08-17T16:16:08.8728863Z # repricer.tests.test\_imports
2025-08-17T16:16:08.8728998Z 
2025-08-17T16:16:08.8729087Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T16:16:08.8729255Z 
2025-08-17T16:16:08.8729336Z # repricer.tests.test\_smoke
2025-08-17T16:16:08.8729471Z 
2025-08-17T16:16:08.8729548Z <a id="repricer.tests"></a>
2025-08-17T16:16:08.8729684Z 
2025-08-17T16:16:08.8729756Z # repricer.tests
2025-08-17T16:16:08.8729859Z 
2025-08-17T16:16:08.8729930Z <a id="db"></a>
2025-08-17T16:16:08.8730028Z 
2025-08-17T16:16:08.8730087Z # db
2025-08-17T16:16:08.8730174Z 
2025-08-17T16:16:08.8730249Z <a id="db.utils.views"></a>
2025-08-17T16:16:08.8730378Z 
2025-08-17T16:16:08.8730443Z # db.utils.views
2025-08-17T16:16:08.8730550Z 
2025-08-17T16:16:08.8730642Z <a id="db.utils.views.replace_view"></a>
2025-08-17T16:16:08.8730810Z 
2025-08-17T16:16:08.8731024Z #### replace\_view
2025-08-17T16:16:08.8731130Z 
2025-08-17T16:16:08.8731191Z ```python
2025-08-17T16:16:08.8731386Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T16:16:08.8731624Z ```
2025-08-17T16:16:08.8731711Z 
2025-08-17T16:16:08.8731798Z Drop and recreate a SQL view atomically.
2025-08-17T16:16:08.8731962Z 
2025-08-17T16:16:08.8732032Z <a id="db.utils"></a>
2025-08-17T16:16:08.8732150Z 
2025-08-17T16:16:08.8732211Z # db.utils
2025-08-17T16:16:08.8732300Z 
2025-08-17T16:16:08.8732381Z <a id="price_importer"></a>
2025-08-17T16:16:08.8732509Z 
2025-08-17T16:16:08.8732577Z # price\_importer
2025-08-17T16:16:08.8732679Z 
2025-08-17T16:16:08.8732787Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T16:16:08.8732970Z 
2025-08-17T16:16:08.8733058Z # price\_importer.services\_common.dsn
2025-08-17T16:16:08.8733227Z 
2025-08-17T16:16:08.8733351Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T16:16:08.8733559Z 
2025-08-17T16:16:08.8733627Z #### build\_dsn
2025-08-17T16:16:08.8733845Z 
2025-08-17T16:16:08.8733909Z ```python
2025-08-17T16:16:08.8734082Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:16:08.8734300Z ```
2025-08-17T16:16:08.8734385Z 
2025-08-17T16:16:08.8734450Z Return safe DSN.
2025-08-17T16:16:08.8734551Z 
2025-08-17T16:16:08.8734926Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T16:16:08.8735130Z 
2025-08-17T16:16:08.8735263Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T16:16:08.8735471Z 
2025-08-17T16:16:08.8735581Z # price\_importer.services\_common.models\_vendor
2025-08-17T16:16:08.8736003Z 
2025-08-17T16:16:08.8736116Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T16:16:08.8736302Z 
2025-08-17T16:16:08.8736397Z # price\_importer.services\_common.db\_url
2025-08-17T16:16:08.8736571Z 
2025-08-17T16:16:08.8736703Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T16:16:08.8736913Z 
2025-08-17T16:16:08.8736984Z #### build\_url
2025-08-17T16:16:08.8737093Z 
2025-08-17T16:16:08.8737162Z ```python
2025-08-17T16:16:08.8737339Z def build_url(async_: bool = True) -> str
2025-08-17T16:16:08.8737566Z ```
2025-08-17T16:16:08.8737653Z 
2025-08-17T16:16:08.8737749Z Return Postgres DSN from env or PG_* parts.
2025-08-17T16:16:08.8737920Z 
2025-08-17T16:16:08.8738025Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T16:16:08.8738216Z 
2025-08-17T16:16:08.8738306Z # price\_importer.services\_common.keepa
2025-08-17T16:16:08.8738472Z 
2025-08-17T16:16:08.8738578Z <a id="price_importer.services_common.llm"></a>
2025-08-17T16:16:08.8738756Z 
2025-08-17T16:16:08.8738843Z # price\_importer.services\_common.llm
2025-08-17T16:16:08.8739009Z 
2025-08-17T16:16:08.8739120Z <a id="price_importer.services_common.settings"></a>
2025-08-17T16:16:08.8739310Z 
2025-08-17T16:16:08.8739410Z # price\_importer.services\_common.settings
2025-08-17T16:16:08.8739579Z 
2025-08-17T16:16:08.8739679Z <a id="price_importer.services_common.db"></a>
2025-08-17T16:16:08.8739852Z 
2025-08-17T16:16:08.8739955Z # price\_importer.services\_common.db
2025-08-17T16:16:08.8740114Z 
2025-08-17T16:16:08.8740267Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T16:16:08.8740515Z 
2025-08-17T16:16:08.8740591Z #### build\_sqlalchemy\_url
2025-08-17T16:16:08.8740720Z 
2025-08-17T16:16:08.8740788Z ```python
2025-08-17T16:16:08.8740952Z def build_sqlalchemy_url() -> str
2025-08-17T16:16:08.8741166Z ```
2025-08-17T16:16:08.8741246Z 
2025-08-17T16:16:08.8741338Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T16:16:08.8741513Z 
2025-08-17T16:16:08.8741655Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T16:16:08.8741880Z 
2025-08-17T16:16:08.8741955Z #### build\_asyncpg\_dsn
2025-08-17T16:16:08.8742086Z 
2025-08-17T16:16:08.8742148Z ```python
2025-08-17T16:16:08.8742319Z def build_asyncpg_dsn() -> str
2025-08-17T16:16:08.8742511Z ```
2025-08-17T16:16:08.8742590Z 
2025-08-17T16:16:08.8742718Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T16:16:08.8743104Z 
2025-08-17T16:16:08.8743230Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T16:16:08.8743439Z 
2025-08-17T16:16:08.8743507Z #### refresh\_mvs
2025-08-17T16:16:08.8743609Z 
2025-08-17T16:16:08.8743669Z ```python
2025-08-17T16:16:08.8743859Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T16:16:08.8744103Z ```
2025-08-17T16:16:08.8744181Z 
2025-08-17T16:16:08.8744314Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T16:16:08.8744523Z 
2025-08-17T16:16:08.8744619Z <a id="price_importer.services_common"></a>
2025-08-17T16:16:08.8744786Z 
2025-08-17T16:16:08.8744871Z # price\_importer.services\_common
2025-08-17T16:16:08.8745028Z 
2025-08-17T16:16:08.8745130Z <a id="price_importer.services_common.base"></a>
2025-08-17T16:16:08.8745311Z 
2025-08-17T16:16:08.8745407Z # price\_importer.services\_common.base
2025-08-17T16:16:08.8745567Z 
2025-08-17T16:16:08.8745836Z <a id="price_importer.normaliser"></a>
2025-08-17T16:16:08.8746146Z 
2025-08-17T16:16:08.8746236Z # price\_importer.normaliser
2025-08-17T16:16:08.8746374Z 
2025-08-17T16:16:08.8746476Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T16:16:08.8746661Z 
2025-08-17T16:16:08.8746748Z # price\_importer.common.models\_vendor
2025-08-17T16:16:08.8746912Z 
2025-08-17T16:16:08.8747008Z <a id="price_importer.common.db_url"></a>
2025-08-17T16:16:08.8747175Z 
2025-08-17T16:16:08.8747258Z # price\_importer.common.db\_url
2025-08-17T16:16:08.8747405Z 
2025-08-17T16:16:08.8747516Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T16:16:08.8747698Z 
2025-08-17T16:16:08.8747761Z #### make\_dsn
2025-08-17T16:16:08.8747863Z 
2025-08-17T16:16:08.8747925Z ```python
2025-08-17T16:16:08.8748096Z def make_dsn(async_: bool = False) -> str
2025-08-17T16:16:08.8748315Z ```
2025-08-17T16:16:08.8748394Z 
2025-08-17T16:16:08.8748517Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T16:16:08.8748712Z 
2025-08-17T16:16:08.8748816Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T16:16:08.8749017Z 
2025-08-17T16:16:08.8749079Z #### build\_url
2025-08-17T16:16:08.8749178Z 
2025-08-17T16:16:08.8749238Z ```python
2025-08-17T16:16:08.8749412Z def build_url(async_: bool = False) -> str
2025-08-17T16:16:08.8749638Z ```
2025-08-17T16:16:08.8749716Z 
2025-08-17T16:16:08.8749835Z Return Postgres DSN built from environment variables.
2025-08-17T16:16:08.8750032Z 
2025-08-17T16:16:08.8750122Z <a id="price_importer.common"></a>
2025-08-17T16:16:08.8750273Z 
2025-08-17T16:16:08.8750350Z # price\_importer.common
2025-08-17T16:16:08.8750480Z 
2025-08-17T16:16:08.8750568Z <a id="price_importer.common.base"></a>
2025-08-17T16:16:08.8750730Z 
2025-08-17T16:16:08.8750816Z # price\_importer.common.base
2025-08-17T16:16:08.8750954Z 
2025-08-17T16:16:08.8751048Z <a id="price_importer.tests.conftest"></a>
2025-08-17T16:16:08.8751214Z 
2025-08-17T16:16:08.8751303Z # price\_importer.tests.conftest
2025-08-17T16:16:08.8751448Z 
2025-08-17T16:16:08.8751543Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T16:16:08.8751732Z 
2025-08-17T16:16:08.8751819Z # price\_importer.tests.test\_reader
2025-08-17T16:16:08.8751975Z 
2025-08-17T16:16:08.8752079Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T16:16:08.8752254Z 
2025-08-17T16:16:08.8752341Z # price\_importer.tests.test\_imports
2025-08-17T16:16:08.8752498Z 
2025-08-17T16:16:08.8752599Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T16:16:08.8752770Z 
2025-08-17T16:16:08.8752856Z # price\_importer.tests.test\_smoke
2025-08-17T16:16:08.8753015Z 
2025-08-17T16:16:08.8753117Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T16:16:08.8753299Z 
2025-08-17T16:16:08.8753396Z # price\_importer.tests.test\_normaliser
2025-08-17T16:16:08.8753560Z 
2025-08-17T16:16:08.8753643Z <a id="price_importer.tests"></a>
2025-08-17T16:16:08.8753791Z 
2025-08-17T16:16:08.8753873Z # price\_importer.tests
2025-08-17T16:16:08.8753992Z 
2025-08-17T16:16:08.8754075Z <a id="price_importer.reader"></a>
2025-08-17T16:16:08.8754235Z 
2025-08-17T16:16:08.8754427Z # price\_importer.reader
2025-08-17T16:16:08.8754550Z 
2025-08-17T16:16:08.8754637Z <a id="price_importer.repository"></a>
2025-08-17T16:16:08.8754802Z 
2025-08-17T16:16:08.8754882Z # price\_importer.repository
2025-08-17T16:16:08.8755020Z 
2025-08-17T16:16:08.8755108Z <a id="price_importer.import"></a>
2025-08-17T16:16:08.8755251Z 
2025-08-17T16:16:08.8755325Z # price\_importer.import
2025-08-17T16:16:08.8755449Z 
2025-08-17T16:16:08.8755517Z <a id="fees_h10"></a>
2025-08-17T16:16:08.8755799Z 
2025-08-17T16:16:08.8755914Z # fees\_h10
2025-08-17T16:16:08.8756015Z 
2025-08-17T16:16:08.8756088Z <a id="fees_h10.worker"></a>
2025-08-17T16:16:08.8756218Z 
2025-08-17T16:16:08.8756288Z # fees\_h10.worker
2025-08-17T16:16:08.8756390Z 
2025-08-17T16:16:08.8756484Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T16:16:08.8756660Z 
2025-08-17T16:16:08.8756730Z #### list\_active\_asins
2025-08-17T16:16:08.8756844Z 
2025-08-17T16:16:08.8756904Z ```python
2025-08-17T16:16:08.8757205Z def list_active_asins() -> list[str]
2025-08-17T16:16:08.8757419Z ```
2025-08-17T16:16:08.8757499Z 
2025-08-17T16:16:08.8757608Z Return known ASINs or an empty list if unavailable.
2025-08-17T16:16:08.8757802Z 
2025-08-17T16:16:08.8757896Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T16:16:08.8758058Z 
2025-08-17T16:16:08.8758137Z # fees\_h10.tests.test\_smoke
2025-08-17T16:16:08.8758279Z 
2025-08-17T16:16:08.8758353Z <a id="fees_h10.tests"></a>
2025-08-17T16:16:08.8758483Z 
2025-08-17T16:16:08.8758546Z # fees\_h10.tests
2025-08-17T16:16:08.8758652Z 
2025-08-17T16:16:08.8758727Z <a id="fees_h10.client"></a>
2025-08-17T16:16:08.8758858Z 
2025-08-17T16:16:08.8758927Z # fees\_h10.client
2025-08-17T16:16:08.8759028Z 
2025-08-17T16:16:08.8759108Z <a id="fees_h10.repository"></a>
2025-08-17T16:16:08.8759255Z 
2025-08-17T16:16:08.8759324Z # fees\_h10.repository
2025-08-17T16:16:08.8759437Z 
2025-08-17T16:16:08.8759504Z <a id="emailer"></a>
2025-08-17T16:16:08.8759618Z 
2025-08-17T16:16:08.8759678Z # emailer
2025-08-17T16:16:08.8759779Z 
2025-08-17T16:16:08.8759882Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T16:16:08.8760060Z 
2025-08-17T16:16:08.8760147Z # emailer.tests.test\_import\_emailer
2025-08-17T16:16:08.8760308Z 
2025-08-17T16:16:08.8760392Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T16:16:08.8760543Z 
2025-08-17T16:16:08.8760621Z # emailer.tests.test\_smoke
2025-08-17T16:16:08.8760758Z 
2025-08-17T16:16:08.8760831Z <a id="emailer.tests"></a>
2025-08-17T16:16:08.8760959Z 
2025-08-17T16:16:08.8761029Z # emailer.tests
2025-08-17T16:16:08.8761130Z 
2025-08-17T16:16:08.8761213Z <a id="emailer.generate_body"></a>
2025-08-17T16:16:08.8761364Z 
2025-08-17T16:16:08.8761444Z # emailer.generate\_body
2025-08-17T16:16:08.8761568Z 
2025-08-17T16:16:08.8761638Z <a id="llm_server"></a>
2025-08-17T16:16:08.8761761Z 
2025-08-17T16:16:08.8761824Z # llm\_server
2025-08-17T16:16:08.8761919Z 
2025-08-17T16:16:08.8762000Z <a id="llm_server.app"></a>
2025-08-17T16:16:08.8762130Z 
2025-08-17T16:16:08.8762208Z # llm\_server.app
2025-08-17T16:16:08.8762312Z 
