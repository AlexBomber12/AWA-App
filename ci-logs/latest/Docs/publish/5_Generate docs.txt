2025-08-20T16:21:20.3618788Z ##[group]Run pydoc-markdown
2025-08-20T16:21:20.3619243Z [36;1mpydoc-markdown[0m
2025-08-20T16:21:20.3658272Z shell: /usr/bin/bash -e {0}
2025-08-20T16:21:20.3658498Z env:
2025-08-20T16:21:20.3658733Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:21:20.3659250Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T16:21:20.3659652Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:21:20.3660022Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:21:20.3660373Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:21:20.3660729Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T16:21:20.3661018Z ##[endgroup]
2025-08-20T16:21:20.6631482Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T16:21:20.6632262Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T16:21:20.6632744Z In "pydoc-markdown.yml"
2025-08-20T16:21:20.6633174Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T16:21:20.6633849Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T16:21:20.6634633Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T16:21:20.6635170Z 
2025-08-20T16:21:21.0270043Z <a id="__init__"></a>
2025-08-20T16:21:21.0270445Z 
2025-08-20T16:21:21.0270607Z # \_\_init\_\_
2025-08-20T16:21:21.0270863Z 
2025-08-20T16:21:21.0271028Z <a id="api"></a>
2025-08-20T16:21:21.0271291Z 
2025-08-20T16:21:21.0271437Z # api
2025-08-20T16:21:21.0271644Z 
2025-08-20T16:21:21.0271825Z <a id="api.errors"></a>
2025-08-20T16:21:21.0272117Z 
2025-08-20T16:21:21.0272271Z # api.errors
2025-08-20T16:21:21.0272506Z 
2025-08-20T16:21:21.0272698Z <a id="api.sentry_config"></a>
2025-08-20T16:21:21.0273043Z 
2025-08-20T16:21:21.0273218Z # api.sentry\_config
2025-08-20T16:21:21.0273485Z 
2025-08-20T16:21:21.0273751Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T16:21:21.0274211Z 
2025-08-20T16:21:21.0274393Z # api.tests.test\_stats\_contracts
2025-08-20T16:21:21.0274782Z 
2025-08-20T16:21:21.0274982Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T16:21:21.0275453Z 
2025-08-20T16:21:21.0275647Z # api.tests.test\_sentry\_scrub
2025-08-20T16:21:21.0275993Z 
2025-08-20T16:21:21.0276163Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T16:21:21.0276486Z 
2025-08-20T16:21:21.0276639Z # api.tests.test\_roi\_basic\_auth
2025-08-20T16:21:21.0276919Z 
2025-08-20T16:21:21.0277075Z <a id="api.tests.test_errors_json"></a>
2025-08-20T16:21:21.0277282Z 
2025-08-20T16:21:21.0277378Z # api.tests.test\_errors\_json
2025-08-20T16:21:21.0277546Z 
2025-08-20T16:21:21.0277639Z <a id="api.tests.test_llm"></a>
2025-08-20T16:21:21.0277810Z 
2025-08-20T16:21:21.0277896Z # api.tests.test\_llm
2025-08-20T16:21:21.0278040Z 
2025-08-20T16:21:21.0278148Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T16:21:21.0278348Z 
2025-08-20T16:21:21.0278442Z # api.tests.test\_roi\_filters
2025-08-20T16:21:21.0278610Z 
2025-08-20T16:21:21.0278721Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T16:21:21.0279400Z 
2025-08-20T16:21:21.0279502Z # api.tests.test\_sentry\_event
2025-08-20T16:21:21.0279687Z 
2025-08-20T16:21:21.0279842Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T16:21:21.0280100Z 
2025-08-20T16:21:21.0280198Z ## DummyTransport Objects
2025-08-20T16:21:21.0280355Z 
2025-08-20T16:21:21.0280434Z ```python
2025-08-20T16:21:21.0280643Z class DummyTransport()
2025-08-20T16:21:21.0280865Z ```
2025-08-20T16:21:21.0280970Z 
2025-08-20T16:21:21.0281189Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T16:21:21.0281517Z 
2025-08-20T16:21:21.0281605Z #### capture\_envelope
2025-08-20T16:21:21.0281756Z 
2025-08-20T16:21:21.0281834Z ```python
2025-08-20T16:21:21.0282050Z def capture_envelope(envelope)
2025-08-20T16:21:21.0282295Z ```
2025-08-20T16:21:21.0282394Z 
2025-08-20T16:21:21.0282553Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T16:21:21.0282809Z 
2025-08-20T16:21:21.0282908Z <a id="api.tests.test_cors"></a>
2025-08-20T16:21:21.0283326Z 
2025-08-20T16:21:21.0283415Z # api.tests.test\_cors
2025-08-20T16:21:21.0283559Z 
2025-08-20T16:21:21.0283659Z <a id="api.tests.test_imports"></a>
2025-08-20T16:21:21.0283857Z 
2025-08-20T16:21:21.0283956Z # api.tests.test\_imports
2025-08-20T16:21:21.0284112Z 
2025-08-20T16:21:21.0284223Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T16:21:21.0284422Z 
2025-08-20T16:21:21.0284515Z # api.tests.test\_rate\_limit
2025-08-20T16:21:21.0284688Z 
2025-08-20T16:21:21.0284800Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T16:21:21.0284974Z 
2025-08-20T16:21:21.0285037Z #### app
2025-08-20T16:21:21.0285135Z 
2025-08-20T16:21:21.0285198Z noqa: E402
2025-08-20T16:21:21.0285287Z 
2025-08-20T16:21:21.0285378Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T16:21:21.0285549Z 
2025-08-20T16:21:21.0285633Z # api.tests.test\_stats\_sql
2025-08-20T16:21:21.0285781Z 
2025-08-20T16:21:21.0285871Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T16:21:21.0286043Z 
2025-08-20T16:21:21.0286129Z # api.tests.test\_entrypoint
2025-08-20T16:21:21.0286277Z 
2025-08-20T16:21:21.0286385Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T16:21:21.0286583Z 
2025-08-20T16:21:21.0286686Z # api.tests.test\_stats\_future\_contracts
2025-08-20T16:21:21.0286861Z 
2025-08-20T16:21:21.0286947Z <a id="api.tests.test_health"></a>
2025-08-20T16:21:21.0287105Z 
2025-08-20T16:21:21.0287181Z # api.tests.test\_health
2025-08-20T16:21:21.0287306Z 
2025-08-20T16:21:21.0287387Z <a id="api.tests.test_score"></a>
2025-08-20T16:21:21.0287536Z 
2025-08-20T16:21:21.0287609Z # api.tests.test\_score
2025-08-20T16:21:21.0287732Z 
2025-08-20T16:21:21.0287823Z <a id="api.logging_config"></a>
2025-08-20T16:21:21.0287965Z 
2025-08-20T16:21:21.0288035Z # api.logging\_config
2025-08-20T16:21:21.0288162Z 
2025-08-20T16:21:21.0288241Z <a id="api.migrations.env"></a>
2025-08-20T16:21:21.0288381Z 
2025-08-20T16:21:21.0288453Z # api.migrations.env
2025-08-20T16:21:21.0288578Z 
2025-08-20T16:21:21.0288706Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T16:21:21.0288914Z 
2025-08-20T16:21:21.0289025Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T16:21:21.0289361Z 
2025-08-20T16:21:21.0289471Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T16:21:21.0289669Z 
2025-08-20T16:21:21.0289763Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T16:21:21.0289933Z 
2025-08-20T16:21:21.0290084Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T16:21:21.0290325Z 
2025-08-20T16:21:21.0290460Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T16:21:21.0290676Z 
2025-08-20T16:21:21.0290802Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T16:21:21.0291002Z 
2025-08-20T16:21:21.0291107Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T16:21:21.0291294Z 
2025-08-20T16:21:21.0291410Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T16:21:21.0291674Z 
2025-08-20T16:21:21.0291785Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T16:21:21.0292135Z 
2025-08-20T16:21:21.0292264Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T16:21:21.0292475Z 
2025-08-20T16:21:21.0292583Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T16:21:21.0292771Z 
2025-08-20T16:21:21.0292894Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T16:21:21.0293088Z 
2025-08-20T16:21:21.0293193Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T16:21:21.0293382Z 
2025-08-20T16:21:21.0293503Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T16:21:21.0293702Z 
2025-08-20T16:21:21.0293805Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T16:21:21.0294003Z 
2025-08-20T16:21:21.0294139Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T16:21:21.0294359Z 
2025-08-20T16:21:21.0294485Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T16:21:21.0294685Z 
2025-08-20T16:21:21.0294806Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T16:21:21.0295145Z 
2025-08-20T16:21:21.0295255Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T16:21:21.0295441Z 
2025-08-20T16:21:21.0295573Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T16:21:21.0295797Z 
2025-08-20T16:21:21.0295914Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T16:21:21.0296110Z 
2025-08-20T16:21:21.0296224Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T16:21:21.0296414Z 
2025-08-20T16:21:21.0296510Z # api.migrations.versions.0001\_baseline
2025-08-20T16:21:21.0296762Z 
2025-08-20T16:21:21.0296854Z <a id="api.migrations.versions"></a>
2025-08-20T16:21:21.0297016Z 
2025-08-20T16:21:21.0297100Z # api.migrations.versions
2025-08-20T16:21:21.0297230Z 
2025-08-20T16:21:21.0297306Z <a id="api.migrations"></a>
2025-08-20T16:21:21.0297439Z 
2025-08-20T16:21:21.0297513Z # api.migrations
2025-08-20T16:21:21.0297617Z 
2025-08-20T16:21:21.0297685Z <a id="api.db"></a>
2025-08-20T16:21:21.0297813Z 
2025-08-20T16:21:21.0297876Z # api.db
2025-08-20T16:21:21.0297964Z 
2025-08-20T16:21:21.0298044Z <a id="api.routes.score"></a>
2025-08-20T16:21:21.0298194Z 
2025-08-20T16:21:21.0298264Z # api.routes.score
2025-08-20T16:21:21.0298374Z 
2025-08-20T16:21:21.0298460Z <a id="api.routes.stats"></a>
2025-08-20T16:21:21.0298593Z 
2025-08-20T16:21:21.0298661Z # api.routes.stats
2025-08-20T16:21:21.0298777Z 
2025-08-20T16:21:21.0298853Z <a id="api.routes.roi"></a>
2025-08-20T16:21:21.0298981Z 
2025-08-20T16:21:21.0299048Z # api.routes.roi
2025-08-20T16:21:21.0299279Z 
2025-08-20T16:21:21.0299362Z <a id="api.routes.health"></a>
2025-08-20T16:21:21.0299506Z 
2025-08-20T16:21:21.0299582Z # api.routes.health
2025-08-20T16:21:21.0299691Z 
2025-08-20T16:21:21.0299782Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T16:21:21.0299946Z 
2025-08-20T16:21:21.0300017Z #### MAX\_SKEW
2025-08-20T16:21:21.0300114Z 
2025-08-20T16:21:21.0300175Z seconds
2025-08-20T16:21:21.0300269Z 
2025-08-20T16:21:21.0300359Z <a id="api.routes.health.health"></a>
2025-08-20T16:21:21.0300533Z 
2025-08-20T16:21:21.0300600Z #### health
2025-08-20T16:21:21.0300689Z 
2025-08-20T16:21:21.0300753Z ```python
2025-08-20T16:21:21.0300951Z @router.get("/health", include_in_schema=False)
2025-08-20T16:21:21.0301351Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T16:21:21.0301695Z ```
2025-08-20T16:21:21.0301780Z 
2025-08-20T16:21:21.0301894Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T16:21:21.0302094Z 
2025-08-20T16:21:21.0302187Z <a id="api.routes.repository"></a>
2025-08-20T16:21:21.0302342Z 
2025-08-20T16:21:21.0302423Z # api.routes.repository
2025-08-20T16:21:21.0302544Z 
2025-08-20T16:21:21.0302617Z <a id="api.routes"></a>
2025-08-20T16:21:21.0302732Z 
2025-08-20T16:21:21.0302804Z # api.routes
2025-08-20T16:21:21.0302902Z 
2025-08-20T16:21:21.0302980Z <a id="api.models.fee"></a>
2025-08-20T16:21:21.0303117Z 
2025-08-20T16:21:21.0303184Z # api.models.fee
2025-08-20T16:21:21.0303292Z 
2025-08-20T16:21:21.0303484Z <a id="api.models"></a>
2025-08-20T16:21:21.0303605Z 
2025-08-20T16:21:21.0303668Z # api.models
2025-08-20T16:21:21.0303769Z 
2025-08-20T16:21:21.0303855Z <a id="api.roi_repository"></a>
2025-08-20T16:21:21.0303998Z 
2025-08-20T16:21:21.0304069Z # api.roi\_repository
2025-08-20T16:21:21.0304188Z 
2025-08-20T16:21:21.0304258Z <a id="api.main"></a>
2025-08-20T16:21:21.0304368Z 
2025-08-20T16:21:21.0304430Z # api.main
2025-08-20T16:21:21.0304527Z 
2025-08-20T16:21:21.0304602Z <a id="api.main.ready"></a>
2025-08-20T16:21:21.0304730Z 
2025-08-20T16:21:21.0304799Z #### ready
2025-08-20T16:21:21.0304886Z 
2025-08-20T16:21:21.0304949Z ```python
2025-08-20T16:21:21.0305216Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T16:21:21.0305650Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T16:21:21.0306125Z                                                                       str]
2025-08-20T16:21:21.0306524Z ```
2025-08-20T16:21:21.0306861Z 
2025-08-20T16:21:21.0307027Z Return 200 only when migrations are at head.
2025-08-20T16:21:21.0307301Z 
2025-08-20T16:21:21.0307424Z <a id="api.config"></a>
2025-08-20T16:21:21.0307614Z 
2025-08-20T16:21:21.0307722Z # api.config
2025-08-20T16:21:21.0307898Z 
2025-08-20T16:21:21.0308034Z <a id="api.security"></a>
2025-08-20T16:21:21.0308252Z 
2025-08-20T16:21:21.0308361Z # api.security
2025-08-20T16:21:21.0308521Z 
2025-08-20T16:21:21.0308622Z <a id="etl"></a>
2025-08-20T16:21:21.0308782Z 
2025-08-20T16:21:21.0308883Z # etl
2025-08-20T16:21:21.0309017Z 
2025-08-20T16:21:21.0309323Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T16:21:21.0309572Z 
2025-08-20T16:21:21.0309716Z # etl.fba\_fee\_ingestor
2025-08-20T16:21:21.0309950Z 
2025-08-20T16:21:21.0310099Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T16:21:21.0310380Z 
2025-08-20T16:21:21.0310519Z # etl.sp\_fees\_ingestor
2025-08-20T16:21:21.0310744Z 
2025-08-20T16:21:21.0310914Z <a id="etl.keepa_ingestor"></a>
2025-08-20T16:21:21.0311191Z 
2025-08-20T16:21:21.0311317Z # etl.keepa\_ingestor
2025-08-20T16:21:21.0311537Z 
2025-08-20T16:21:21.0311655Z <a id="etl.db"></a>
2025-08-20T16:21:21.0311839Z 
2025-08-20T16:21:21.0311945Z # etl.db
2025-08-20T16:21:21.0312105Z 
2025-08-20T16:21:21.0312254Z <a id="etl.dialects.schemas"></a>
2025-08-20T16:21:21.0312533Z 
2025-08-20T16:21:21.0312622Z # etl.dialects.schemas
2025-08-20T16:21:21.0312747Z 
2025-08-20T16:21:21.0312860Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T16:21:21.0313061Z 
2025-08-20T16:21:21.0313153Z # etl.dialects.amazon\_reimbursements
2025-08-20T16:21:21.0313320Z 
2025-08-20T16:21:21.0313421Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T16:21:21.0313607Z 
2025-08-20T16:21:21.0313696Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T16:21:21.0313866Z 
2025-08-20T16:21:21.0313962Z <a id="etl.dialects.test_generic"></a>
2025-08-20T16:21:21.0314123Z 
2025-08-20T16:21:21.0314205Z # etl.dialects.test\_generic
2025-08-20T16:21:21.0314349Z 
2025-08-20T16:21:21.0314455Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T16:21:21.0314623Z 
2025-08-20T16:21:21.0314707Z # etl.dialects.amazon\_returns
2025-08-20T16:21:21.0314862Z 
2025-08-20T16:21:21.0314969Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T16:21:21.0315148Z 
2025-08-20T16:21:21.0315242Z # etl.dialects.amazon\_fee\_preview
2025-08-20T16:21:21.0315404Z 
2025-08-20T16:21:21.0315515Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T16:21:21.0315711Z 
2025-08-20T16:21:21.0315803Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T16:21:21.0315967Z 
2025-08-20T16:21:21.0316061Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T16:21:21.0316238Z 
2025-08-20T16:21:21.0316329Z # etl.dialects.amazon\_settlements
2025-08-20T16:21:21.0316481Z 
2025-08-20T16:21:21.0316564Z <a id="etl.dialects"></a>
2025-08-20T16:21:21.0316691Z 
2025-08-20T16:21:21.0316757Z # etl.dialects
2025-08-20T16:21:21.0316860Z 
2025-08-20T16:21:21.0316928Z <a id="ingest"></a>
2025-08-20T16:21:21.0317034Z 
2025-08-20T16:21:21.0317303Z # ingest
2025-08-20T16:21:21.0317400Z 
2025-08-20T16:21:21.0317485Z <a id="ingest.maintenance"></a>
2025-08-20T16:21:21.0317628Z 
2025-08-20T16:21:21.0317707Z # ingest.maintenance
2025-08-20T16:21:21.0317821Z 
2025-08-20T16:21:21.0317904Z <a id="ingest.copy_loader"></a>
2025-08-20T16:21:21.0318048Z 
2025-08-20T16:21:21.0318124Z # ingest.copy\_loader
2025-08-20T16:21:21.0318240Z 
2025-08-20T16:21:21.0318344Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T16:21:21.0318585Z 
2025-08-20T16:21:21.0318661Z #### copy\_df\_via\_temp
2025-08-20T16:21:21.0318785Z 
2025-08-20T16:21:21.0318856Z ```python
2025-08-20T16:21:21.0319027Z def copy_df_via_temp(engine: Engine,
2025-08-20T16:21:21.0319465Z                      df: pd.DataFrame,
2025-08-20T16:21:21.0319702Z                      target_table: str,
2025-08-20T16:21:21.0319924Z                      *,
2025-08-20T16:21:21.0320131Z                      target_schema: Optional[str] = None,
2025-08-20T16:21:21.0320397Z                      columns: Sequence[str],
2025-08-20T16:21:21.0320818Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T16:21:21.0321111Z                      analyze_after: bool = False,
2025-08-20T16:21:21.0321382Z                      connection: Any | None = None) -> int
2025-08-20T16:21:21.0321620Z ```
2025-08-20T16:21:21.0321707Z 
2025-08-20T16:21:21.0321871Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T16:21:21.0322109Z 
2025-08-20T16:21:21.0322198Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T16:21:21.0322362Z 
2025-08-20T16:21:21.0322442Z # ingest.tests.test\_smoke
2025-08-20T16:21:21.0322761Z 
2025-08-20T16:21:21.0323040Z <a id="ingest.tests"></a>
2025-08-20T16:21:21.0323224Z 
2025-08-20T16:21:21.0323294Z # ingest.tests
2025-08-20T16:21:21.0323396Z 
2025-08-20T16:21:21.0323487Z <a id="ingest.upload_router"></a>
2025-08-20T16:21:21.0323636Z 
2025-08-20T16:21:21.0323712Z # ingest.upload\_router
2025-08-20T16:21:21.0323839Z 
2025-08-20T16:21:21.0323927Z <a id="ingest.email_watcher"></a>
2025-08-20T16:21:21.0324085Z 
2025-08-20T16:21:21.0324160Z # ingest.email\_watcher
2025-08-20T16:21:21.0324285Z 
2025-08-20T16:21:21.0324371Z <a id="ingest.email_watcher.main"></a>
2025-08-20T16:21:21.0324534Z 
2025-08-20T16:21:21.0324606Z #### main
2025-08-20T16:21:21.0324696Z 
2025-08-20T16:21:21.0324762Z ```python
2025-08-20T16:21:21.0324933Z def main() -> dict[str, str]
2025-08-20T16:21:21.0325126Z ```
2025-08-20T16:21:21.0325216Z 
2025-08-20T16:21:21.0325357Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T16:21:21.0325583Z 
2025-08-20T16:21:21.0325717Z Returns {"status": "success"} when processing completes.
2025-08-20T16:21:21.0325929Z 
2025-08-20T16:21:21.0326007Z <a id="ingest.tasks"></a>
2025-08-20T16:21:21.0326133Z 
2025-08-20T16:21:21.0326209Z # ingest.tasks
2025-08-20T16:21:21.0326313Z 
2025-08-20T16:21:21.0326411Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T16:21:21.0326592Z 
2025-08-20T16:21:21.0326665Z #### task\_import\_file
2025-08-20T16:21:21.0326792Z 
2025-08-20T16:21:21.0326861Z ```python
2025-08-20T16:21:21.0327067Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T16:21:21.0327355Z def task_import_file(self: Any,
2025-08-20T16:21:21.0327564Z                      uri: str,
2025-08-20T16:21:21.0327792Z                      report_type: str | None = None,
2025-08-20T16:21:21.0328058Z                      force: bool = False) -> dict[str, Any]
2025-08-20T16:21:21.0328297Z ```
2025-08-20T16:21:21.0328381Z 
2025-08-20T16:21:21.0328523Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T16:21:21.0328745Z 
2025-08-20T16:21:21.0328830Z <a id="ingest.celery_app"></a>
2025-08-20T16:21:21.0328972Z 
2025-08-20T16:21:21.0329240Z # ingest.celery\_app
2025-08-20T16:21:21.0329445Z 
2025-08-20T16:21:21.0329581Z <a id="ingest.ingest_router"></a>
2025-08-20T16:21:21.0329827Z 
2025-08-20T16:21:21.0329945Z # ingest.ingest\_router
2025-08-20T16:21:21.0330144Z 
2025-08-20T16:21:21.0330292Z <a id="logistics_etl"></a>
2025-08-20T16:21:21.0330631Z 
2025-08-20T16:21:21.0330702Z # logistics\_etl
2025-08-20T16:21:21.0330813Z 
2025-08-20T16:21:21.0330900Z Daily logistics ETL job.
2025-08-20T16:21:21.0331032Z 
2025-08-20T16:21:21.0331127Z <a id="logistics_etl.__main__"></a>
2025-08-20T16:21:21.0331291Z 
2025-08-20T16:21:21.0331381Z # logistics\_etl.\_\_main\_\_
2025-08-20T16:21:21.0331520Z 
2025-08-20T16:21:21.0331601Z <a id="logistics_etl.dsn"></a>
2025-08-20T16:21:21.0331749Z 
2025-08-20T16:21:21.0331821Z # logistics\_etl.dsn
2025-08-20T16:21:21.0331937Z 
2025-08-20T16:21:21.0332063Z Local DSN builder to avoid cross-service dependency.
2025-08-20T16:21:21.0332270Z 
2025-08-20T16:21:21.0332363Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T16:21:21.0332530Z 
2025-08-20T16:21:21.0332603Z #### build\_dsn
2025-08-20T16:21:21.0332705Z 
2025-08-20T16:21:21.0332769Z ```python
2025-08-20T16:21:21.0332961Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:21:21.0333188Z ```
2025-08-20T16:21:21.0333279Z 
2025-08-20T16:21:21.0333546Z Return a Postgres DSN assembled from environment variables.
2025-08-20T16:21:21.0333777Z 
2025-08-20T16:21:21.0333944Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T16:21:21.0334348Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T16:21:21.0334702Z error when any required variable is missing.
2025-08-20T16:21:21.0334881Z 
2025-08-20T16:21:21.0334976Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T16:21:21.0335155Z 
2025-08-20T16:21:21.0335243Z # logistics\_etl.tests.conftest
2025-08-20T16:21:21.0335390Z 
2025-08-20T16:21:21.0335501Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T16:21:21.0335690Z 
2025-08-20T16:21:21.0335782Z # logistics\_etl.tests.test\_repository
2025-08-20T16:21:21.0335947Z 
2025-08-20T16:21:21.0336045Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T16:21:21.0336215Z 
2025-08-20T16:21:21.0336300Z # logistics\_etl.tests.test\_cron
2025-08-20T16:21:21.0336456Z 
2025-08-20T16:21:21.0336556Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T16:21:21.0336741Z 
2025-08-20T16:21:21.0336832Z # logistics\_etl.tests.test\_imports
2025-08-20T16:21:21.0336990Z 
2025-08-20T16:21:21.0337081Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T16:21:21.0337263Z 
2025-08-20T16:21:21.0337351Z # logistics\_etl.tests.test\_smoke
2025-08-20T16:21:21.0337503Z 
2025-08-20T16:21:21.0337596Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T16:21:21.0337772Z 
2025-08-20T16:21:21.0337857Z # logistics\_etl.tests.test\_client
2025-08-20T16:21:21.0338010Z 
2025-08-20T16:21:21.0338102Z <a id="logistics_etl.tests"></a>
2025-08-20T16:21:21.0338248Z 
2025-08-20T16:21:21.0338321Z # logistics\_etl.tests
2025-08-20T16:21:21.0338439Z 
2025-08-20T16:21:21.0338525Z <a id="logistics_etl.flow"></a>
2025-08-20T16:21:21.0338663Z 
2025-08-20T16:21:21.0338736Z # logistics\_etl.flow
2025-08-20T16:21:21.0338859Z 
2025-08-20T16:21:21.0338944Z <a id="logistics_etl.client"></a>
2025-08-20T16:21:21.0339300Z 
2025-08-20T16:21:21.0447204Z # logistics\_etl.client
2025-08-20T16:21:21.0447451Z 
2025-08-20T16:21:21.0447624Z <a id="logistics_etl.cron"></a>
2025-08-20T16:21:21.0447882Z 
2025-08-20T16:21:21.0448006Z # logistics\_etl.cron
2025-08-20T16:21:21.0448216Z 
2025-08-20T16:21:21.0448352Z <a id="logistics_etl.db"></a>
2025-08-20T16:21:21.0448593Z 
2025-08-20T16:21:21.0448720Z # logistics\_etl.db
2025-08-20T16:21:21.0448907Z 
2025-08-20T16:21:21.0449194Z <a id="logistics_etl.repository"></a>
2025-08-20T16:21:21.0449486Z 
2025-08-20T16:21:21.0449630Z # logistics\_etl.repository
2025-08-20T16:21:21.0449864Z 
2025-08-20T16:21:21.0449992Z <a id="alert_bot"></a>
2025-08-20T16:21:21.0450207Z 
2025-08-20T16:21:21.0450316Z # alert\_bot
2025-08-20T16:21:21.0450470Z 
2025-08-20T16:21:21.0450567Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T16:21:21.0450760Z 
2025-08-20T16:21:21.0450852Z # alert\_bot.tests.test\_smoke
2025-08-20T16:21:21.0451000Z 
2025-08-20T16:21:21.0451084Z <a id="alert_bot.tests"></a>
2025-08-20T16:21:21.0451242Z 
2025-08-20T16:21:21.0451622Z # alert\_bot.tests
2025-08-20T16:21:21.0451742Z 
2025-08-20T16:21:21.0451908Z <a id="alert_bot.alert_bot"></a>
2025-08-20T16:21:21.0452212Z 
2025-08-20T16:21:21.0452346Z # alert\_bot.alert\_bot
2025-08-20T16:21:21.0452556Z 
2025-08-20T16:21:21.0452685Z <a id="alert_bot.rules"></a>
2025-08-20T16:21:21.0452928Z 
2025-08-20T16:21:21.0453047Z # alert\_bot.rules
2025-08-20T16:21:21.0453234Z 
2025-08-20T16:21:21.0453347Z <a id="common"></a>
2025-08-20T16:21:21.0453541Z 
2025-08-20T16:21:21.0453648Z # common
2025-08-20T16:21:21.0453799Z 
2025-08-20T16:21:21.0453925Z <a id="common.dsn"></a>
2025-08-20T16:21:21.0454137Z 
2025-08-20T16:21:21.0454254Z # common.dsn
2025-08-20T16:21:21.0454412Z 
2025-08-20T16:21:21.0454566Z <a id="common.dsn.build_dsn"></a>
2025-08-20T16:21:21.0454828Z 
2025-08-20T16:21:21.0454943Z #### build\_dsn
2025-08-20T16:21:21.0455133Z 
2025-08-20T16:21:21.0455201Z ```python
2025-08-20T16:21:21.0455425Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:21:21.0455833Z ```
2025-08-20T16:21:21.0456204Z 
2025-08-20T16:21:21.0456440Z Return a Postgres DSN, validating required variables.
2025-08-20T16:21:21.0456813Z 
2025-08-20T16:21:21.0457154Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T16:21:21.0457958Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T16:21:21.0458704Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T16:21:21.0459457Z missing.
2025-08-20T16:21:21.0459629Z 
2025-08-20T16:21:21.0459788Z <a id="common.models_vendor"></a>
2025-08-20T16:21:21.0460071Z 
2025-08-20T16:21:21.0460218Z # common.models\_vendor
2025-08-20T16:21:21.0460436Z 
2025-08-20T16:21:21.0460598Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T16:21:21.0460895Z 
2025-08-20T16:21:21.0461017Z ## Vendor Objects
2025-08-20T16:21:21.0461215Z 
2025-08-20T16:21:21.0461325Z ```python
2025-08-20T16:21:21.0461594Z class Vendor(Base)
2025-08-20T16:21:21.0461887Z ```
2025-08-20T16:21:21.0462049Z 
2025-08-20T16:21:21.0462206Z Vendor of inventory items.
2025-08-20T16:21:21.0462439Z 
2025-08-20T16:21:21.0462626Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T16:21:21.0462950Z 
2025-08-20T16:21:21.0463089Z ## VendorPrice Objects
2025-08-20T16:21:21.0463292Z 
2025-08-20T16:21:21.0463400Z ```python
2025-08-20T16:21:21.0463685Z class VendorPrice(Base)
2025-08-20T16:21:21.0463989Z ```
2025-08-20T16:21:21.0464137Z 
2025-08-20T16:21:21.0464291Z Association table linking vendors to pricing.
2025-08-20T16:21:21.0464503Z 
2025-08-20T16:21:21.0464591Z <a id="common.db_url"></a>
2025-08-20T16:21:21.0464726Z 
2025-08-20T16:21:21.0464796Z # common.db\_url
2025-08-20T16:21:21.0464902Z 
2025-08-20T16:21:21.0464992Z <a id="common.db_url.build_url"></a>
2025-08-20T16:21:21.0465153Z 
2025-08-20T16:21:21.0465219Z #### build\_url
2025-08-20T16:21:21.0465326Z 
2025-08-20T16:21:21.0465391Z ```python
2025-08-20T16:21:21.0465567Z def build_url(async_: bool = True) -> str
2025-08-20T16:21:21.0465801Z ```
2025-08-20T16:21:21.0465900Z 
2025-08-20T16:21:21.0466016Z Return Postgres DSN from environment variables.
2025-08-20T16:21:21.0466211Z 
2025-08-20T16:21:21.0466291Z <a id="common.keepa"></a>
2025-08-20T16:21:21.0466436Z 
2025-08-20T16:21:21.0466505Z # common.keepa
2025-08-20T16:21:21.0466611Z 
2025-08-20T16:21:21.0466686Z <a id="common.llm"></a>
2025-08-20T16:21:21.0466813Z 
2025-08-20T16:21:21.0466878Z # common.llm
2025-08-20T16:21:21.0466974Z 
2025-08-20T16:21:21.0467062Z <a id="common.settings"></a>
2025-08-20T16:21:21.0467200Z 
2025-08-20T16:21:21.0467268Z # common.settings
2025-08-20T16:21:21.0467376Z 
2025-08-20T16:21:21.0467455Z <a id="common.db"></a>
2025-08-20T16:21:21.0467570Z 
2025-08-20T16:21:21.0467632Z # common.db
2025-08-20T16:21:21.0467728Z 
2025-08-20T16:21:21.0467824Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T16:21:21.0468001Z 
2025-08-20T16:21:21.0468082Z #### build\_sqlalchemy\_url
2025-08-20T16:21:21.0468213Z 
2025-08-20T16:21:21.0468275Z ```python
2025-08-20T16:21:21.0468457Z def build_sqlalchemy_url() -> str
2025-08-20T16:21:21.0468838Z ```
2025-08-20T16:21:21.0468924Z 
2025-08-20T16:21:21.0469029Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T16:21:21.0469404Z 
2025-08-20T16:21:21.0469502Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T16:21:21.0469680Z 
2025-08-20T16:21:21.0469758Z #### build\_asyncpg\_dsn
2025-08-20T16:21:21.0469884Z 
2025-08-20T16:21:21.0469954Z ```python
2025-08-20T16:21:21.0470131Z def build_asyncpg_dsn() -> str
2025-08-20T16:21:21.0470338Z ```
2025-08-20T16:21:21.0470422Z 
2025-08-20T16:21:21.0470553Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T16:21:21.0470774Z 
2025-08-20T16:21:21.0470860Z <a id="common.db.refresh_mvs"></a>
2025-08-20T16:21:21.0471014Z 
2025-08-20T16:21:21.0471080Z #### refresh\_mvs
2025-08-20T16:21:21.0471191Z 
2025-08-20T16:21:21.0471254Z ```python
2025-08-20T16:21:21.0471457Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T16:21:21.0471707Z ```
2025-08-20T16:21:21.0471789Z 
2025-08-20T16:21:21.0472081Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T16:21:21.0472300Z 
2025-08-20T16:21:21.0472380Z <a id="common.config"></a>
2025-08-20T16:21:21.0472512Z 
2025-08-20T16:21:21.0472581Z # common.config
2025-08-20T16:21:21.0472685Z 
2025-08-20T16:21:21.0472760Z <a id="common.base"></a>
2025-08-20T16:21:21.0472887Z 
2025-08-20T16:21:21.0472950Z # common.base
2025-08-20T16:21:21.0473047Z 
2025-08-20T16:21:21.0473133Z <a id="common.base.Base"></a>
2025-08-20T16:21:21.0473273Z 
2025-08-20T16:21:21.0473339Z ## Base Objects
2025-08-20T16:21:21.0473446Z 
2025-08-20T16:21:21.0473508Z ```python
2025-08-20T16:21:21.0473674Z class Base(DeclarativeBase)
2025-08-20T16:21:21.0473895Z ```
2025-08-20T16:21:21.0473987Z 
2025-08-20T16:21:21.0474076Z Base class for SQLAlchemy models.
2025-08-20T16:21:21.0474232Z 
2025-08-20T16:21:21.0474305Z <a id="repricer"></a>
2025-08-20T16:21:21.0474424Z 
2025-08-20T16:21:21.0474493Z # repricer
2025-08-20T16:21:21.0474583Z 
2025-08-20T16:21:21.0474673Z <a id="repricer.app.schemas"></a>
2025-08-20T16:21:21.0474839Z 
2025-08-20T16:21:21.0474916Z # repricer.app.schemas
2025-08-20T16:21:21.0475038Z 
2025-08-20T16:21:21.0475122Z <a id="repricer.app.deps"></a>
2025-08-20T16:21:21.0475270Z 
2025-08-20T16:21:21.0475343Z # repricer.app.deps
2025-08-20T16:21:21.0475454Z 
2025-08-20T16:21:21.0475576Z Placeholder module for Keepa / SP-API clients.
2025-08-20T16:21:21.0475764Z 
2025-08-20T16:21:21.0475850Z <a id="repricer.app.logic"></a>
2025-08-20T16:21:21.0476000Z 
2025-08-20T16:21:21.0476075Z # repricer.app.logic
2025-08-20T16:21:21.0476245Z 
2025-08-20T16:21:21.0476346Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T16:21:21.0476531Z 
2025-08-20T16:21:21.0476598Z #### MIN\_MARGIN
2025-08-20T16:21:21.0476703Z 
2025-08-20T16:21:21.0476770Z 15 % ROI
2025-08-20T16:21:21.0476861Z 
2025-08-20T16:21:21.0476966Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T16:21:21.0477158Z 
2025-08-20T16:21:21.0477229Z #### compute\_price
2025-08-20T16:21:21.0477338Z 
2025-08-20T16:21:21.0477412Z ```python
2025-08-20T16:21:21.0477669Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T16:21:21.0477980Z ```
2025-08-20T16:21:21.0478064Z 
2025-08-20T16:21:21.0478170Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T16:21:21.0478459Z Replace with real competitive logic later.
2025-08-20T16:21:21.0478630Z 
2025-08-20T16:21:21.0478714Z <a id="repricer.app.main"></a>
2025-08-20T16:21:21.0478861Z 
2025-08-20T16:21:21.0478931Z # repricer.app.main
2025-08-20T16:21:21.0479039Z 
2025-08-20T16:21:21.0479385Z <a id="repricer.app"></a>
2025-08-20T16:21:21.0479537Z 
2025-08-20T16:21:21.0479607Z # repricer.app
2025-08-20T16:21:21.0479709Z 
2025-08-20T16:21:21.0479809Z <a id="repricer.tests.test_imports"></a>
2025-08-20T16:21:21.0479981Z 
2025-08-20T16:21:21.0480064Z # repricer.tests.test\_imports
2025-08-20T16:21:21.0480211Z 
2025-08-20T16:21:21.0480300Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T16:21:21.0480463Z 
2025-08-20T16:21:21.0480546Z # repricer.tests.test\_smoke
2025-08-20T16:21:21.0480834Z 
2025-08-20T16:21:21.0480915Z <a id="repricer.tests"></a>
2025-08-20T16:21:21.0481049Z 
2025-08-20T16:21:21.0481124Z # repricer.tests
2025-08-20T16:21:21.0481230Z 
2025-08-20T16:21:21.0481299Z <a id="db"></a>
2025-08-20T16:21:21.0481398Z 
2025-08-20T16:21:21.0481465Z # db
2025-08-20T16:21:21.0481548Z 
2025-08-20T16:21:21.0481625Z <a id="db.utils.views"></a>
2025-08-20T16:21:21.0481762Z 
2025-08-20T16:21:21.0481828Z # db.utils.views
2025-08-20T16:21:21.0481933Z 
2025-08-20T16:21:21.0482030Z <a id="db.utils.views.replace_view"></a>
2025-08-20T16:21:21.0482200Z 
2025-08-20T16:21:21.0482266Z #### replace\_view
2025-08-20T16:21:21.0482370Z 
2025-08-20T16:21:21.0482440Z ```python
2025-08-20T16:21:21.0482640Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T16:21:21.0482892Z ```
2025-08-20T16:21:21.0482976Z 
2025-08-20T16:21:21.0483066Z Drop and recreate a SQL view atomically.
2025-08-20T16:21:21.0483239Z 
2025-08-20T16:21:21.0483310Z <a id="db.utils"></a>
2025-08-20T16:21:21.0483544Z 
2025-08-20T16:21:21.0483613Z # db.utils
2025-08-20T16:21:21.0483701Z 
2025-08-20T16:21:21.0483778Z <a id="price_importer"></a>
2025-08-20T16:21:21.0483909Z 
2025-08-20T16:21:21.0483985Z # price\_importer
2025-08-20T16:21:21.0484091Z 
2025-08-20T16:21:21.0484200Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T16:21:21.0484394Z 
2025-08-20T16:21:21.0484494Z # price\_importer.services\_common.dsn
2025-08-20T16:21:21.0484657Z 
2025-08-20T16:21:21.0484786Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T16:21:21.0484997Z 
2025-08-20T16:21:21.0485062Z #### build\_dsn
2025-08-20T16:21:21.0485161Z 
2025-08-20T16:21:21.0485228Z ```python
2025-08-20T16:21:21.0485403Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:21:21.0485630Z ```
2025-08-20T16:21:21.0485715Z 
2025-08-20T16:21:21.0485781Z Return safe DSN.
2025-08-20T16:21:21.0485893Z 
2025-08-20T16:21:21.0486079Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T16:21:21.0486462Z Falls back to individual PG_* variables.
2025-08-20T16:21:21.0486980Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T16:21:21.0487191Z 
2025-08-20T16:21:21.0487332Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T16:21:21.0487547Z 
2025-08-20T16:21:21.0487662Z # price\_importer.services\_common.models\_vendor
2025-08-20T16:21:21.0487867Z 
2025-08-20T16:21:21.0487975Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T16:21:21.0488166Z 
2025-08-20T16:21:21.0488270Z # price\_importer.services\_common.db\_url
2025-08-20T16:21:21.0488444Z 
2025-08-20T16:21:21.0488579Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T16:21:21.0488803Z 
2025-08-20T16:21:21.0488869Z #### build\_url
2025-08-20T16:21:21.0488972Z 
2025-08-20T16:21:21.0489037Z ```python
2025-08-20T16:21:21.0489420Z def build_url(async_: bool = True) -> str
2025-08-20T16:21:21.0489654Z ```
2025-08-20T16:21:21.0489745Z 
2025-08-20T16:21:21.0489854Z Return Postgres DSN from environment variables.
2025-08-20T16:21:21.0490073Z 
2025-08-20T16:21:21.0490189Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T16:21:21.0490380Z 
2025-08-20T16:21:21.0490475Z # price\_importer.services\_common.keepa
2025-08-20T16:21:21.0490652Z 
2025-08-20T16:21:21.0490754Z <a id="price_importer.services_common.llm"></a>
2025-08-20T16:21:21.0490935Z 
2025-08-20T16:21:21.0491027Z # price\_importer.services\_common.llm
2025-08-20T16:21:21.0491199Z 
2025-08-20T16:21:21.0491314Z <a id="price_importer.services_common.settings"></a>
2025-08-20T16:21:21.0491509Z 
2025-08-20T16:21:21.0491611Z # price\_importer.services\_common.settings
2025-08-20T16:21:21.0491786Z 
2025-08-20T16:21:21.0491888Z <a id="price_importer.services_common.db"></a>
2025-08-20T16:21:21.0492073Z 
2025-08-20T16:21:21.0492164Z # price\_importer.services\_common.db
2025-08-20T16:21:21.0492328Z 
2025-08-20T16:21:21.0492485Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T16:21:21.0492732Z 
2025-08-20T16:21:21.0492948Z #### build\_sqlalchemy\_url
2025-08-20T16:21:21.0493080Z 
2025-08-20T16:21:21.0493149Z ```python
2025-08-20T16:21:21.0493321Z def build_sqlalchemy_url() -> str
2025-08-20T16:21:21.0493532Z ```
2025-08-20T16:21:21.0493617Z 
2025-08-20T16:21:21.0493712Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T16:21:21.0493894Z 
2025-08-20T16:21:21.0494040Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T16:21:21.0494268Z 
2025-08-20T16:21:21.0494356Z #### build\_asyncpg\_dsn
2025-08-20T16:21:21.0494482Z 
2025-08-20T16:21:21.0494543Z ```python
2025-08-20T16:21:21.0494716Z def build_asyncpg_dsn() -> str
2025-08-20T16:21:21.0494914Z ```
2025-08-20T16:21:21.0495001Z 
2025-08-20T16:21:21.0495129Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T16:21:21.0495343Z 
2025-08-20T16:21:21.0495470Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T16:21:21.0495689Z 
2025-08-20T16:21:21.0495757Z #### refresh\_mvs
2025-08-20T16:21:21.0495979Z 
2025-08-20T16:21:21.0496047Z ```python
2025-08-20T16:21:21.0496240Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T16:21:21.0496496Z ```
2025-08-20T16:21:21.0496576Z 
2025-08-20T16:21:21.0496710Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T16:21:21.0496935Z 
2025-08-20T16:21:21.0497031Z <a id="price_importer.services_common"></a>
2025-08-20T16:21:21.0497209Z 
2025-08-20T16:21:21.0497307Z # price\_importer.services\_common
2025-08-20T16:21:21.0497467Z 
2025-08-20T16:21:21.0497579Z <a id="price_importer.services_common.base"></a>
2025-08-20T16:21:21.0497768Z 
2025-08-20T16:21:21.0497867Z # price\_importer.services\_common.base
2025-08-20T16:21:21.0498034Z 
2025-08-20T16:21:21.0498125Z <a id="price_importer.normaliser"></a>
2025-08-20T16:21:21.0498296Z 
2025-08-20T16:21:21.0498380Z # price\_importer.normaliser
2025-08-20T16:21:21.0498522Z 
2025-08-20T16:21:21.0498633Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T16:21:21.0498821Z 
2025-08-20T16:21:21.0498924Z # price\_importer.common.models\_vendor
2025-08-20T16:21:21.0499254Z 
2025-08-20T16:21:21.0499361Z <a id="price_importer.common.db_url"></a>
2025-08-20T16:21:21.0499536Z 
2025-08-20T16:21:21.0499621Z # price\_importer.common.db\_url
2025-08-20T16:21:21.0499774Z 
2025-08-20T16:21:21.0499881Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T16:21:21.0500067Z 
2025-08-20T16:21:21.0500135Z #### make\_dsn
2025-08-20T16:21:21.0500236Z 
2025-08-20T16:21:21.0500298Z ```python
2025-08-20T16:21:21.0500482Z def make_dsn(async_: bool = False) -> str
2025-08-20T16:21:21.0500707Z ```
2025-08-20T16:21:21.0500794Z 
2025-08-20T16:21:21.0500874Z Return DSN using shared builder.
2025-08-20T16:21:21.0501022Z 
2025-08-20T16:21:21.0501131Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T16:21:21.0501333Z 
2025-08-20T16:21:21.0501400Z #### build\_url
2025-08-20T16:21:21.0501499Z 
2025-08-20T16:21:21.0501567Z ```python
2025-08-20T16:21:21.0501743Z def build_url(async_: bool = False) -> str
2025-08-20T16:21:21.0501987Z ```
2025-08-20T16:21:21.0502067Z 
2025-08-20T16:21:21.0502193Z Return Postgres DSN built from environment variables.
2025-08-20T16:21:21.0502403Z 
2025-08-20T16:21:21.0502493Z <a id="price_importer.common"></a>
2025-08-20T16:21:21.0502648Z 
2025-08-20T16:21:21.0502726Z # price\_importer.common
2025-08-20T16:21:21.0502861Z 
2025-08-20T16:21:21.0502953Z <a id="price_importer.common.base"></a>
2025-08-20T16:21:21.0503120Z 
2025-08-20T16:21:21.0503209Z # price\_importer.common.base
2025-08-20T16:21:21.0503351Z 
2025-08-20T16:21:21.0503448Z <a id="price_importer.tests.conftest"></a>
2025-08-20T16:21:21.0503630Z 
2025-08-20T16:21:21.0503717Z # price\_importer.tests.conftest
2025-08-20T16:21:21.0503863Z 
2025-08-20T16:21:21.0503970Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T16:21:21.0504155Z 
2025-08-20T16:21:21.0504242Z # price\_importer.tests.test\_reader
2025-08-20T16:21:21.0504399Z 
2025-08-20T16:21:21.0504506Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T16:21:21.0504858Z 
2025-08-20T16:21:21.0504950Z # price\_importer.tests.test\_imports
2025-08-20T16:21:21.0505117Z 
2025-08-20T16:21:21.0505215Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T16:21:21.0505388Z 
2025-08-20T16:21:21.0505474Z # price\_importer.tests.test\_smoke
2025-08-20T16:21:21.0505634Z 
2025-08-20T16:21:21.0505739Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T16:21:21.0505928Z 
2025-08-20T16:21:21.0506025Z # price\_importer.tests.test\_normaliser
2025-08-20T16:21:21.0506192Z 
2025-08-20T16:21:21.0506278Z <a id="price_importer.tests"></a>
2025-08-20T16:21:21.0506433Z 
2025-08-20T16:21:21.0506509Z # price\_importer.tests
2025-08-20T16:21:21.0506632Z 
2025-08-20T16:21:21.0506718Z <a id="price_importer.reader"></a>
2025-08-20T16:21:21.0506877Z 
2025-08-20T16:21:21.0506955Z # price\_importer.reader
2025-08-20T16:21:21.0507081Z 
2025-08-20T16:21:21.0507175Z <a id="price_importer.repository"></a>
2025-08-20T16:21:21.0507338Z 
2025-08-20T16:21:21.0507421Z # price\_importer.repository
2025-08-20T16:21:21.0507686Z 
2025-08-20T16:21:21.0507772Z <a id="price_importer.import"></a>
2025-08-20T16:21:21.0507924Z 
2025-08-20T16:21:21.0508003Z # price\_importer.import
2025-08-20T16:21:21.0508134Z 
2025-08-20T16:21:21.0508205Z <a id="fees_h10"></a>
2025-08-20T16:21:21.0508319Z 
2025-08-20T16:21:21.0508390Z # fees\_h10
2025-08-20T16:21:21.0508484Z 
2025-08-20T16:21:21.0508559Z <a id="fees_h10.worker"></a>
2025-08-20T16:21:21.0508691Z 
2025-08-20T16:21:21.0508764Z # fees\_h10.worker
2025-08-20T16:21:21.0508870Z 
2025-08-20T16:21:21.0508970Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T16:21:21.0509324Z 
2025-08-20T16:21:21.0509399Z #### list\_active\_asins
2025-08-20T16:21:21.0509524Z 
2025-08-20T16:21:21.0509593Z ```python
2025-08-20T16:21:21.0509764Z def list_active_asins() -> list[str]
2025-08-20T16:21:21.0509984Z ```
2025-08-20T16:21:21.0510066Z 
2025-08-20T16:21:21.0510180Z Return known ASINs or an empty list if unavailable.
2025-08-20T16:21:21.0510380Z 
2025-08-20T16:21:21.0510475Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T16:21:21.0510634Z 
2025-08-20T16:21:21.0510713Z # fees\_h10.tests.test\_smoke
2025-08-20T16:21:21.0510857Z 
2025-08-20T16:21:21.0510932Z <a id="fees_h10.tests"></a>
2025-08-20T16:21:21.0511061Z 
2025-08-20T16:21:21.0511132Z # fees\_h10.tests
2025-08-20T16:21:21.0511235Z 
2025-08-20T16:21:21.0511310Z <a id="fees_h10.client"></a>
2025-08-20T16:21:21.0511446Z 
2025-08-20T16:21:21.0511513Z # fees\_h10.client
2025-08-20T16:21:21.0511617Z 
2025-08-20T16:21:21.0511698Z <a id="fees_h10.repository"></a>
2025-08-20T16:21:21.0511848Z 
2025-08-20T16:21:21.0511919Z # fees\_h10.repository
2025-08-20T16:21:21.0512036Z 
2025-08-20T16:21:21.0512146Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T16:21:21.0512333Z 
2025-08-20T16:21:21.0512403Z #### upsert\_fees\_raw
2025-08-20T16:21:21.0512519Z 
2025-08-20T16:21:21.0512590Z ```python
2025-08-20T16:21:21.0512757Z def upsert_fees_raw(engine: Engine,
2025-08-20T16:21:21.0513007Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T16:21:21.0513260Z                     *,
2025-08-20T16:21:21.0513491Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T16:21:21.0513762Z ```
2025-08-20T16:21:21.0513844Z 
2025-08-20T16:21:21.0513923Z Idempotent upsert for fees.
2025-08-20T16:21:21.0514060Z 
2025-08-20T16:21:21.0514218Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T16:21:21.0514564Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T16:21:21.0514879Z Only updates when one of the mutable fields changes.
2025-08-20T16:21:21.0515081Z 
2025-08-20T16:21:21.0515152Z <a id="emailer"></a>
2025-08-20T16:21:21.0515269Z 
2025-08-20T16:21:21.0515332Z # emailer
2025-08-20T16:21:21.0515421Z 
2025-08-20T16:21:21.0515532Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T16:21:21.0515710Z 
2025-08-20T16:21:21.0515799Z # emailer.tests.test\_import\_emailer
2025-08-20T16:21:21.0515963Z 
2025-08-20T16:21:21.0516050Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T16:21:21.0516343Z 
2025-08-20T16:21:21.0516422Z # emailer.tests.test\_smoke
2025-08-20T16:21:21.0516561Z 
2025-08-20T16:21:21.0516641Z <a id="emailer.tests"></a>
2025-08-20T16:21:21.0516770Z 
2025-08-20T16:21:21.0516843Z # emailer.tests
2025-08-20T16:21:21.0516947Z 
2025-08-20T16:21:21.0517032Z <a id="emailer.generate_body"></a>
2025-08-20T16:21:21.0517188Z 
2025-08-20T16:21:21.0517264Z # emailer.generate\_body
2025-08-20T16:21:21.0517388Z 
2025-08-20T16:21:21.0517460Z <a id="llm_server"></a>
2025-08-20T16:21:21.0517585Z 
2025-08-20T16:21:21.0517652Z # llm\_server
2025-08-20T16:21:21.0517749Z 
2025-08-20T16:21:21.0517831Z <a id="llm_server.app"></a>
2025-08-20T16:21:21.0517991Z 
2025-08-20T16:21:21.0518058Z # llm\_server.app
2025-08-20T16:21:21.0518162Z 
