2025-08-20T07:45:21.7035898Z ##[group]Run pydoc-markdown
2025-08-20T07:45:21.7036361Z [36;1mpydoc-markdown[0m
2025-08-20T07:45:21.7080181Z shell: /usr/bin/bash -e {0}
2025-08-20T07:45:21.7080571Z env:
2025-08-20T07:45:21.7080973Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T07:45:21.7081691Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T07:45:21.7082391Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T07:45:21.7082998Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T07:45:21.7083612Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T07:45:21.7084331Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T07:45:21.7084840Z ##[endgroup]
2025-08-20T07:45:22.0884911Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T07:45:22.0885843Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T07:45:22.0886369Z In "pydoc-markdown.yml"
2025-08-20T07:45:22.0886754Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T07:45:22.0887264Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T07:45:22.0887810Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T07:45:22.0888186Z 
2025-08-20T07:45:22.4425750Z <a id="__init__"></a>
2025-08-20T07:45:22.4426203Z 
2025-08-20T07:45:22.4426366Z # \_\_init\_\_
2025-08-20T07:45:22.4426610Z 
2025-08-20T07:45:22.4426786Z <a id="api"></a>
2025-08-20T07:45:22.4427046Z 
2025-08-20T07:45:22.4427198Z # api
2025-08-20T07:45:22.4427418Z 
2025-08-20T07:45:22.4427596Z <a id="api.errors"></a>
2025-08-20T07:45:22.4427901Z 
2025-08-20T07:45:22.4428068Z # api.errors
2025-08-20T07:45:22.4428308Z 
2025-08-20T07:45:22.4428503Z <a id="api.sentry_config"></a>
2025-08-20T07:45:22.4428833Z 
2025-08-20T07:45:22.4429006Z # api.sentry\_config
2025-08-20T07:45:22.4429278Z 
2025-08-20T07:45:22.4429500Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T07:45:22.4429925Z 
2025-08-20T07:45:22.4430135Z # api.tests.test\_stats\_contracts
2025-08-20T07:45:22.4430535Z 
2025-08-20T07:45:22.4430748Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T07:45:22.4431166Z 
2025-08-20T07:45:22.4431352Z # api.tests.test\_sentry\_scrub
2025-08-20T07:45:22.4431685Z 
2025-08-20T07:45:22.4431919Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T07:45:22.4432339Z 
2025-08-20T07:45:22.4432529Z # api.tests.test\_roi\_basic\_auth
2025-08-20T07:45:22.4432895Z 
2025-08-20T07:45:22.4433116Z <a id="api.tests.test_errors_json"></a>
2025-08-20T07:45:22.4433522Z 
2025-08-20T07:45:22.4433700Z # api.tests.test\_errors\_json
2025-08-20T07:45:22.4434471Z 
2025-08-20T07:45:22.4434674Z <a id="api.tests.test_llm"></a>
2025-08-20T07:45:22.4435024Z 
2025-08-20T07:45:22.4435202Z # api.tests.test\_llm
2025-08-20T07:45:22.4435465Z 
2025-08-20T07:45:22.4435660Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T07:45:22.4436011Z 
2025-08-20T07:45:22.4436194Z # api.tests.test\_roi\_filters
2025-08-20T07:45:22.4436522Z 
2025-08-20T07:45:22.4436733Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T07:45:22.4437486Z 
2025-08-20T07:45:22.4437678Z # api.tests.test\_sentry\_event
2025-08-20T07:45:22.4438009Z 
2025-08-20T07:45:22.4438302Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T07:45:22.4438783Z 
2025-08-20T07:45:22.4438945Z ## DummyTransport Objects
2025-08-20T07:45:22.4439215Z 
2025-08-20T07:45:22.4439361Z ```python
2025-08-20T07:45:22.4439711Z class DummyTransport()
2025-08-20T07:45:22.4440100Z ```
2025-08-20T07:45:22.4440279Z 
2025-08-20T07:45:22.4440638Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T07:45:22.4441241Z 
2025-08-20T07:45:22.4441387Z #### capture\_envelope
2025-08-20T07:45:22.4441619Z 
2025-08-20T07:45:22.4441745Z ```python
2025-08-20T07:45:22.4442090Z def capture_envelope(envelope)
2025-08-20T07:45:22.4442534Z ```
2025-08-20T07:45:22.4442712Z 
2025-08-20T07:45:22.4442983Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T07:45:22.4443445Z 
2025-08-20T07:45:22.4443616Z <a id="api.tests.test_cors"></a>
2025-08-20T07:45:22.4444478Z 
2025-08-20T07:45:22.4444638Z # api.tests.test\_cors
2025-08-20T07:45:22.4444903Z 
2025-08-20T07:45:22.4445087Z <a id="api.tests.test_imports"></a>
2025-08-20T07:45:22.4445464Z 
2025-08-20T07:45:22.4445635Z # api.tests.test\_imports
2025-08-20T07:45:22.4445919Z 
2025-08-20T07:45:22.4446095Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T07:45:22.4446457Z 
2025-08-20T07:45:22.4446627Z # api.tests.test\_rate\_limit
2025-08-20T07:45:22.4446927Z 
2025-08-20T07:45:22.4447118Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T07:45:22.4447474Z 
2025-08-20T07:45:22.4447593Z #### app
2025-08-20T07:45:22.4447771Z 
2025-08-20T07:45:22.4447909Z noqa: E402
2025-08-20T07:45:22.4448100Z 
2025-08-20T07:45:22.4448283Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T07:45:22.4448645Z 
2025-08-20T07:45:22.4448803Z # api.tests.test\_stats\_sql
2025-08-20T07:45:22.4449085Z 
2025-08-20T07:45:22.4449256Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T07:45:22.4449608Z 
2025-08-20T07:45:22.4449774Z # api.tests.test\_entrypoint
2025-08-20T07:45:22.4450056Z 
2025-08-20T07:45:22.4450274Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T07:45:22.4450650Z 
2025-08-20T07:45:22.4450825Z # api.tests.test\_stats\_future\_contracts
2025-08-20T07:45:22.4451171Z 
2025-08-20T07:45:22.4451340Z <a id="api.tests.test_health"></a>
2025-08-20T07:45:22.4451647Z 
2025-08-20T07:45:22.4451795Z # api.tests.test\_health
2025-08-20T07:45:22.4452051Z 
2025-08-20T07:45:22.4452215Z <a id="api.tests.test_score"></a>
2025-08-20T07:45:22.4452512Z 
2025-08-20T07:45:22.4452669Z # api.tests.test\_score
2025-08-20T07:45:22.4452904Z 
2025-08-20T07:45:22.4453056Z <a id="api.logging_config"></a>
2025-08-20T07:45:22.4453343Z 
2025-08-20T07:45:22.4453493Z # api.logging\_config
2025-08-20T07:45:22.4453897Z 
2025-08-20T07:45:22.4454058Z <a id="api.migrations.env"></a>
2025-08-20T07:45:22.4454350Z 
2025-08-20T07:45:22.4454497Z # api.migrations.env
2025-08-20T07:45:22.4454735Z 
2025-08-20T07:45:22.4454994Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T07:45:22.4455387Z 
2025-08-20T07:45:22.4455599Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T07:45:22.4455975Z 
2025-08-20T07:45:22.4456205Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T07:45:22.4456584Z 
2025-08-20T07:45:22.4456766Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T07:45:22.4457120Z 
2025-08-20T07:45:22.4457404Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T07:45:22.4457886Z 
2025-08-20T07:45:22.4458165Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T07:45:22.4458620Z 
2025-08-20T07:45:22.4458858Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T07:45:22.4459253Z 
2025-08-20T07:45:22.4459452Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T07:45:22.4459802Z 
2025-08-20T07:45:22.4460019Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T07:45:22.4460430Z 
2025-08-20T07:45:22.4460622Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T07:45:22.4461289Z 
2025-08-20T07:45:22.4461534Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T07:45:22.4461928Z 
2025-08-20T07:45:22.4462142Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T07:45:22.4462512Z 
2025-08-20T07:45:22.4462733Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T07:45:22.4463106Z 
2025-08-20T07:45:22.4463318Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T07:45:22.4463677Z 
2025-08-20T07:45:22.4464081Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T07:45:22.4464490Z 
2025-08-20T07:45:22.4464689Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T07:45:22.4465040Z 
2025-08-20T07:45:22.4465308Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T07:45:22.4465730Z 
2025-08-20T07:45:22.4465950Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T07:45:22.4466341Z 
2025-08-20T07:45:22.4466573Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T07:45:22.4467220Z 
2025-08-20T07:45:22.4467429Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T07:45:22.4467803Z 
2025-08-20T07:45:22.4468059Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T07:45:22.4468478Z 
2025-08-20T07:45:22.4468708Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T07:45:22.4469079Z 
2025-08-20T07:45:22.4469285Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T07:45:22.4469662Z 
2025-08-20T07:45:22.4469839Z # api.migrations.versions.0001\_baseline
2025-08-20T07:45:22.4470183Z 
2025-08-20T07:45:22.4470348Z <a id="api.migrations.versions"></a>
2025-08-20T07:45:22.4470666Z 
2025-08-20T07:45:22.4470816Z # api.migrations.versions
2025-08-20T07:45:22.4471059Z 
2025-08-20T07:45:22.4471213Z <a id="api.migrations"></a>
2025-08-20T07:45:22.4471470Z 
2025-08-20T07:45:22.4471593Z # api.migrations
2025-08-20T07:45:22.4471796Z 
2025-08-20T07:45:22.4471919Z <a id="api.db"></a>
2025-08-20T07:45:22.4472134Z 
2025-08-20T07:45:22.4472249Z # api.db
2025-08-20T07:45:22.4472421Z 
2025-08-20T07:45:22.4472568Z <a id="api.routes.score"></a>
2025-08-20T07:45:22.4472829Z 
2025-08-20T07:45:22.4472967Z # api.routes.score
2025-08-20T07:45:22.4473168Z 
2025-08-20T07:45:22.4473311Z <a id="api.routes.stats"></a>
2025-08-20T07:45:22.4473566Z 
2025-08-20T07:45:22.4473702Z # api.routes.stats
2025-08-20T07:45:22.4474118Z 
2025-08-20T07:45:22.4474265Z <a id="api.routes.roi"></a>
2025-08-20T07:45:22.4474520Z 
2025-08-20T07:45:22.4474646Z # api.routes.roi
2025-08-20T07:45:22.4474841Z 
2025-08-20T07:45:22.4475000Z <a id="api.routes.health"></a>
2025-08-20T07:45:22.4475263Z 
2025-08-20T07:45:22.4475392Z # api.routes.health
2025-08-20T07:45:22.4475595Z 
2025-08-20T07:45:22.4475775Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T07:45:22.4476093Z 
2025-08-20T07:45:22.4476214Z #### MAX\_SKEW
2025-08-20T07:45:22.4476403Z 
2025-08-20T07:45:22.4476513Z seconds
2025-08-20T07:45:22.4476679Z 
2025-08-20T07:45:22.4476844Z <a id="api.routes.health.health"></a>
2025-08-20T07:45:22.4477184Z 
2025-08-20T07:45:22.4477299Z #### health
2025-08-20T07:45:22.4477466Z 
2025-08-20T07:45:22.4477590Z ```python
2025-08-20T07:45:22.4477940Z @router.get("/health", include_in_schema=False)
2025-08-20T07:45:22.4478690Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T07:45:22.4479336Z ```
2025-08-20T07:45:22.4479498Z 
2025-08-20T07:45:22.4479710Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T07:45:22.4480081Z 
2025-08-20T07:45:22.4480254Z <a id="api.routes.repository"></a>
2025-08-20T07:45:22.4480551Z 
2025-08-20T07:45:22.4480691Z # api.routes.repository
2025-08-20T07:45:22.4480928Z 
2025-08-20T07:45:22.4481131Z <a id="api.routes"></a>
2025-08-20T07:45:22.4481367Z 
2025-08-20T07:45:22.4481487Z # api.routes
2025-08-20T07:45:22.4481665Z 
2025-08-20T07:45:22.4481807Z <a id="api.models.fee"></a>
2025-08-20T07:45:22.4482065Z 
2025-08-20T07:45:22.4482186Z # api.models.fee
2025-08-20T07:45:22.4482393Z 
2025-08-20T07:45:22.4482727Z <a id="api.models"></a>
2025-08-20T07:45:22.4482917Z 
2025-08-20T07:45:22.4483014Z # api.models
2025-08-20T07:45:22.4483159Z 
2025-08-20T07:45:22.4483293Z <a id="api.roi_repository"></a>
2025-08-20T07:45:22.4483531Z 
2025-08-20T07:45:22.4483665Z # api.roi\_repository
2025-08-20T07:45:22.4484070Z 
2025-08-20T07:45:22.4484198Z <a id="api.main"></a>
2025-08-20T07:45:22.4484410Z 
2025-08-20T07:45:22.4484532Z # api.main
2025-08-20T07:45:22.4484690Z 
2025-08-20T07:45:22.4484827Z <a id="api.main.ready"></a>
2025-08-20T07:45:22.4485068Z 
2025-08-20T07:45:22.4485189Z #### ready
2025-08-20T07:45:22.4485342Z 
2025-08-20T07:45:22.4485454Z ```python
2025-08-20T07:45:22.4485874Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T07:45:22.4486539Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T07:45:22.4487167Z                                                                       str]
2025-08-20T07:45:22.4487590Z ```
2025-08-20T07:45:22.4487881Z 
2025-08-20T07:45:22.4488016Z Return 200 only when migrations are at head.
2025-08-20T07:45:22.4488269Z 
2025-08-20T07:45:22.4488382Z <a id="api.config"></a>
2025-08-20T07:45:22.4488556Z 
2025-08-20T07:45:22.4488650Z # api.config
2025-08-20T07:45:22.4488810Z 
2025-08-20T07:45:22.4488926Z <a id="api.security"></a>
2025-08-20T07:45:22.4489124Z 
2025-08-20T07:45:22.4489235Z # api.security
2025-08-20T07:45:22.4489402Z 
2025-08-20T07:45:22.4489509Z <a id="etl"></a>
2025-08-20T07:45:22.4489676Z 
2025-08-20T07:45:22.4489783Z # etl
2025-08-20T07:45:22.4489908Z 
2025-08-20T07:45:22.4490025Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T07:45:22.4490241Z 
2025-08-20T07:45:22.4490345Z # etl.fba\_fee\_ingestor
2025-08-20T07:45:22.4490528Z 
2025-08-20T07:45:22.4490646Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T07:45:22.4490870Z 
2025-08-20T07:45:22.4490998Z # etl.sp\_fees\_ingestor
2025-08-20T07:45:22.4491229Z 
2025-08-20T07:45:22.4491382Z <a id="etl.keepa_ingestor"></a>
2025-08-20T07:45:22.4491657Z 
2025-08-20T07:45:22.4491785Z # etl.keepa\_ingestor
2025-08-20T07:45:22.4491995Z 
2025-08-20T07:45:22.4492096Z <a id="etl.db"></a>
2025-08-20T07:45:22.4492255Z 
2025-08-20T07:45:22.4492350Z # etl.db
2025-08-20T07:45:22.4492478Z 
2025-08-20T07:45:22.4492598Z <a id="etl.dialects.schemas"></a>
2025-08-20T07:45:22.4492817Z 
2025-08-20T07:45:22.4492919Z # etl.dialects.schemas
2025-08-20T07:45:22.4493083Z 
2025-08-20T07:45:22.4493228Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T07:45:22.4493492Z 
2025-08-20T07:45:22.4493615Z # etl.dialects.amazon\_reimbursements
2025-08-20T07:45:22.4494007Z 
2025-08-20T07:45:22.4494186Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T07:45:22.4494512Z 
2025-08-20T07:45:22.4494666Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T07:45:22.4494965Z 
2025-08-20T07:45:22.4495121Z <a id="etl.dialects.test_generic"></a>
2025-08-20T07:45:22.4495416Z 
2025-08-20T07:45:22.4495557Z # etl.dialects.test\_generic
2025-08-20T07:45:22.4495816Z 
2025-08-20T07:45:22.4495987Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T07:45:22.4496287Z 
2025-08-20T07:45:22.4496435Z # etl.dialects.amazon\_returns
2025-08-20T07:45:22.4496689Z 
2025-08-20T07:45:22.4496864Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T07:45:22.4497196Z 
2025-08-20T07:45:22.4497358Z # etl.dialects.amazon\_fee\_preview
2025-08-20T07:45:22.4497651Z 
2025-08-20T07:45:22.4497846Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T07:45:22.4498207Z 
2025-08-20T07:45:22.4498381Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T07:45:22.4498712Z 
2025-08-20T07:45:22.4498914Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T07:45:22.4499267Z 
2025-08-20T07:45:22.4499441Z # etl.dialects.amazon\_settlements
2025-08-20T07:45:22.4499760Z 
2025-08-20T07:45:22.4499914Z <a id="etl.dialects"></a>
2025-08-20T07:45:22.4500176Z 
2025-08-20T07:45:22.4500303Z # etl.dialects
2025-08-20T07:45:22.4500510Z 
2025-08-20T07:45:22.4500647Z <a id="ingest"></a>
2025-08-20T07:45:22.4500867Z 
2025-08-20T07:45:22.4501209Z # ingest
2025-08-20T07:45:22.4501392Z 
2025-08-20T07:45:22.4501557Z <a id="ingest.maintenance"></a>
2025-08-20T07:45:22.4501848Z 
2025-08-20T07:45:22.4502004Z # ingest.maintenance
2025-08-20T07:45:22.4502221Z 
2025-08-20T07:45:22.4502371Z <a id="ingest.copy_loader"></a>
2025-08-20T07:45:22.4502666Z 
2025-08-20T07:45:22.4502807Z # ingest.copy\_loader
2025-08-20T07:45:22.4503183Z 
2025-08-20T07:45:22.4503617Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T07:45:22.4504269Z 
2025-08-20T07:45:22.4504422Z #### copy\_df\_via\_temp
2025-08-20T07:45:22.4504665Z 
2025-08-20T07:45:22.4504797Z ```python
2025-08-20T07:45:22.4505132Z def copy_df_via_temp(engine: Engine,
2025-08-20T07:45:22.4505593Z                      df: pd.DataFrame,
2025-08-20T07:45:22.4506035Z                      target_table: str,
2025-08-20T07:45:22.4506480Z                      *,
2025-08-20T07:45:22.4506878Z                      target_schema: Optional[str] = None,
2025-08-20T07:45:22.4507391Z                      columns: Sequence[str],
2025-08-20T07:45:22.4508159Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T07:45:22.4508710Z                      analyze_after: bool = False,
2025-08-20T07:45:22.4509204Z                      connection: Any | None = None) -> int
2025-08-20T07:45:22.4509653Z ```
2025-08-20T07:45:22.4509820Z 
2025-08-20T07:45:22.4510101Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T07:45:22.4510527Z 
2025-08-20T07:45:22.4510690Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T07:45:22.4511011Z 
2025-08-20T07:45:22.4511155Z # ingest.tests.test\_smoke
2025-08-20T07:45:22.4511401Z 
2025-08-20T07:45:22.4511554Z <a id="ingest.tests"></a>
2025-08-20T07:45:22.4511790Z 
2025-08-20T07:45:22.4511930Z # ingest.tests
2025-08-20T07:45:22.4512182Z 
2025-08-20T07:45:22.4512332Z <a id="ingest.upload_router"></a>
2025-08-20T07:45:22.4512611Z 
2025-08-20T07:45:22.4512752Z # ingest.upload\_router
2025-08-20T07:45:22.4512979Z 
2025-08-20T07:45:22.4513144Z <a id="ingest.email_watcher"></a>
2025-08-20T07:45:22.4513429Z 
2025-08-20T07:45:22.4513574Z # ingest.email\_watcher
2025-08-20T07:45:22.4514010Z 
2025-08-20T07:45:22.4514177Z <a id="ingest.email_watcher.main"></a>
2025-08-20T07:45:22.4514497Z 
2025-08-20T07:45:22.4514614Z #### main
2025-08-20T07:45:22.4514782Z 
2025-08-20T07:45:22.4514896Z ```python
2025-08-20T07:45:22.4515210Z def main() -> dict[str, str]
2025-08-20T07:45:22.4515564Z ```
2025-08-20T07:45:22.4515726Z 
2025-08-20T07:45:22.4515992Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T07:45:22.4516410Z 
2025-08-20T07:45:22.4516654Z Returns {"status": "success"} when processing completes.
2025-08-20T07:45:22.4517050Z 
2025-08-20T07:45:22.4517189Z <a id="ingest.tasks"></a>
2025-08-20T07:45:22.4517435Z 
2025-08-20T07:45:22.4517558Z # ingest.tasks
2025-08-20T07:45:22.4517767Z 
2025-08-20T07:45:22.4517948Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T07:45:22.4518277Z 
2025-08-20T07:45:22.4518421Z #### task\_import\_file
2025-08-20T07:45:22.4518657Z 
2025-08-20T07:45:22.4518773Z ```python
2025-08-20T07:45:22.4519165Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T07:45:22.4519695Z def task_import_file(self: Any,
2025-08-20T07:45:22.4520087Z                      uri: str,
2025-08-20T07:45:22.4520500Z                      report_type: str | None = None,
2025-08-20T07:45:22.4521010Z                      force: bool = False) -> dict[str, Any]
2025-08-20T07:45:22.4521461Z ```
2025-08-20T07:45:22.4521615Z 
2025-08-20T07:45:22.4521855Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T07:45:22.4522247Z 
2025-08-20T07:45:22.4522415Z <a id="ingest.celery_app"></a>
2025-08-20T07:45:22.4522684Z 
2025-08-20T07:45:22.4522821Z # ingest.celery\_app
2025-08-20T07:45:22.4523044Z 
2025-08-20T07:45:22.4523200Z <a id="ingest.ingest_router"></a>
2025-08-20T07:45:22.4523479Z 
2025-08-20T07:45:22.4523615Z # ingest.ingest\_router
2025-08-20T07:45:22.4524018Z 
2025-08-20T07:45:22.4524161Z <a id="logistics_etl"></a>
2025-08-20T07:45:22.4524660Z 
2025-08-20T07:45:22.4524796Z # logistics\_etl
2025-08-20T07:45:22.4524990Z 
2025-08-20T07:45:22.4525132Z Daily logistics ETL job.
2025-08-20T07:45:22.4525374Z 
2025-08-20T07:45:22.4525525Z <a id="logistics_etl.__main__"></a>
2025-08-20T07:45:22.4525806Z 
2025-08-20T07:45:22.4525947Z # logistics\_etl.\_\_main\_\_
2025-08-20T07:45:22.4526212Z 
2025-08-20T07:45:22.4526355Z <a id="logistics_etl.dsn"></a>
2025-08-20T07:45:22.4526611Z 
2025-08-20T07:45:22.4526752Z # logistics\_etl.dsn
2025-08-20T07:45:22.4526962Z 
2025-08-20T07:45:22.4527174Z Local DSN builder to avoid cross-service dependency.
2025-08-20T07:45:22.4527555Z 
2025-08-20T07:45:22.4527717Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T07:45:22.4528040Z 
2025-08-20T07:45:22.4528160Z #### build\_dsn
2025-08-20T07:45:22.4528350Z 
2025-08-20T07:45:22.4528461Z ```python
2025-08-20T07:45:22.4528783Z def build_dsn(sync: bool = True) -> str
2025-08-20T07:45:22.4529182Z ```
2025-08-20T07:45:22.4529326Z 
2025-08-20T07:45:22.4529798Z Return a Postgres DSN assembled from environment variables.
2025-08-20T07:45:22.4530219Z 
2025-08-20T07:45:22.4530499Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T07:45:22.4531231Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T07:45:22.4531877Z error when any required variable is missing.
2025-08-20T07:45:22.4532224Z 
2025-08-20T07:45:22.4532396Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T07:45:22.4532711Z 
2025-08-20T07:45:22.4532867Z # logistics\_etl.tests.conftest
2025-08-20T07:45:22.4533133Z 
2025-08-20T07:45:22.4533324Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T07:45:22.4533673Z 
2025-08-20T07:45:22.4534008Z # logistics\_etl.tests.test\_repository
2025-08-20T07:45:22.4534323Z 
2025-08-20T07:45:22.4534495Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T07:45:22.4534821Z 
2025-08-20T07:45:22.4534968Z # logistics\_etl.tests.test\_cron
2025-08-20T07:45:22.4535245Z 
2025-08-20T07:45:22.4535432Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T07:45:22.4535786Z 
2025-08-20T07:45:22.4535938Z # logistics\_etl.tests.test\_imports
2025-08-20T07:45:22.4536239Z 
2025-08-20T07:45:22.4536405Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T07:45:22.4536723Z 
2025-08-20T07:45:22.4536872Z # logistics\_etl.tests.test\_smoke
2025-08-20T07:45:22.4537161Z 
2025-08-20T07:45:22.4537332Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T07:45:22.4537653Z 
2025-08-20T07:45:22.4537810Z # logistics\_etl.tests.test\_client
2025-08-20T07:45:22.4538097Z 
2025-08-20T07:45:22.4538248Z <a id="logistics_etl.tests"></a>
2025-08-20T07:45:22.4538529Z 
2025-08-20T07:45:22.4538662Z # logistics\_etl.tests
2025-08-20T07:45:22.4538884Z 
2025-08-20T07:45:22.4539025Z <a id="logistics_etl.flow"></a>
2025-08-20T07:45:22.4539298Z 
2025-08-20T07:45:22.4539430Z # logistics\_etl.flow
2025-08-20T07:45:22.4539649Z 
2025-08-20T07:45:22.4539809Z <a id="logistics_etl.client"></a>
2025-08-20T07:45:22.4540089Z 
2025-08-20T07:45:22.4601972Z # logistics\_etl.client
2025-08-20T07:45:22.4602275Z 
2025-08-20T07:45:22.4602408Z <a id="logistics_etl.cron"></a>
2025-08-20T07:45:22.4602646Z 
2025-08-20T07:45:22.4602762Z # logistics\_etl.cron
2025-08-20T07:45:22.4602945Z 
2025-08-20T07:45:22.4603067Z <a id="logistics_etl.db"></a>
2025-08-20T07:45:22.4603309Z 
2025-08-20T07:45:22.4603416Z # logistics\_etl.db
2025-08-20T07:45:22.4603585Z 
2025-08-20T07:45:22.4603899Z <a id="logistics_etl.repository"></a>
2025-08-20T07:45:22.4604173Z 
2025-08-20T07:45:22.4604301Z # logistics\_etl.repository
2025-08-20T07:45:22.4604523Z 
2025-08-20T07:45:22.4604639Z <a id="alert_bot"></a>
2025-08-20T07:45:22.4604817Z 
2025-08-20T07:45:22.4604919Z # alert\_bot
2025-08-20T07:45:22.4605074Z 
2025-08-20T07:45:22.4605215Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T07:45:22.4605476Z 
2025-08-20T07:45:22.4605597Z # alert\_bot.tests.test\_smoke
2025-08-20T07:45:22.4605829Z 
2025-08-20T07:45:22.4605938Z <a id="alert_bot.tests"></a>
2025-08-20T07:45:22.4606132Z 
2025-08-20T07:45:22.4606464Z # alert\_bot.tests
2025-08-20T07:45:22.4606641Z 
2025-08-20T07:45:22.4606771Z <a id="alert_bot.alert_bot"></a>
2025-08-20T07:45:22.4606990Z 
2025-08-20T07:45:22.4607106Z # alert\_bot.alert\_bot
2025-08-20T07:45:22.4607289Z 
2025-08-20T07:45:22.4607400Z <a id="alert_bot.rules"></a>
2025-08-20T07:45:22.4607612Z 
2025-08-20T07:45:22.4607708Z # alert\_bot.rules
2025-08-20T07:45:22.4607865Z 
2025-08-20T07:45:22.4607970Z <a id="common"></a>
2025-08-20T07:45:22.4608134Z 
2025-08-20T07:45:22.4608237Z # common
2025-08-20T07:45:22.4608370Z 
2025-08-20T07:45:22.4608488Z <a id="common.dsn"></a>
2025-08-20T07:45:22.4608683Z 
2025-08-20T07:45:22.4608780Z # common.dsn
2025-08-20T07:45:22.4608930Z 
2025-08-20T07:45:22.4609056Z <a id="common.dsn.build_dsn"></a>
2025-08-20T07:45:22.4609282Z 
2025-08-20T07:45:22.4609378Z #### build\_dsn
2025-08-20T07:45:22.4609548Z 
2025-08-20T07:45:22.4609650Z ```python
2025-08-20T07:45:22.4609929Z def build_dsn(sync: bool = True) -> str
2025-08-20T07:45:22.4610259Z ```
2025-08-20T07:45:22.4610605Z 
2025-08-20T07:45:22.4610809Z Return a Postgres DSN, validating required variables.
2025-08-20T07:45:22.4611139Z 
2025-08-20T07:45:22.4611422Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T07:45:22.4612078Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T07:45:22.4612709Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T07:45:22.4613270Z missing.
2025-08-20T07:45:22.4613406Z 
2025-08-20T07:45:22.4613542Z <a id="common.models_vendor"></a>
2025-08-20T07:45:22.4613919Z 
2025-08-20T07:45:22.4614033Z # common.models\_vendor
2025-08-20T07:45:22.4614224Z 
2025-08-20T07:45:22.4614359Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T07:45:22.4614608Z 
2025-08-20T07:45:22.4614703Z ## Vendor Objects
2025-08-20T07:45:22.4614858Z 
2025-08-20T07:45:22.4614947Z ```python
2025-08-20T07:45:22.4615182Z class Vendor(Base)
2025-08-20T07:45:22.4615429Z ```
2025-08-20T07:45:22.4615562Z 
2025-08-20T07:45:22.4615692Z Vendor of inventory items.
2025-08-20T07:45:22.4615893Z 
2025-08-20T07:45:22.4616040Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T07:45:22.4616312Z 
2025-08-20T07:45:22.4616417Z ## VendorPrice Objects
2025-08-20T07:45:22.4616591Z 
2025-08-20T07:45:22.4616686Z ```python
2025-08-20T07:45:22.4616931Z class VendorPrice(Base)
2025-08-20T07:45:22.4617209Z ```
2025-08-20T07:45:22.4617329Z 
2025-08-20T07:45:22.4617480Z Association table linking vendors to pricing.
2025-08-20T07:45:22.4617753Z 
2025-08-20T07:45:22.4617867Z <a id="common.db_url"></a>
2025-08-20T07:45:22.4618051Z 
2025-08-20T07:45:22.4618148Z # common.db\_url
2025-08-20T07:45:22.4618310Z 
2025-08-20T07:45:22.4618432Z <a id="common.db_url.build_url"></a>
2025-08-20T07:45:22.4618669Z 
2025-08-20T07:45:22.4618777Z #### build\_url
2025-08-20T07:45:22.4618951Z 
2025-08-20T07:45:22.4619082Z ```python
2025-08-20T07:45:22.4619411Z def build_url(async_: bool = True) -> str
2025-08-20T07:45:22.4619796Z ```
2025-08-20T07:45:22.4619966Z 
2025-08-20T07:45:22.4620119Z Return Postgres DSN from env or PG_* parts.
2025-08-20T07:45:22.4620388Z 
2025-08-20T07:45:22.4620505Z <a id="common.keepa"></a>
2025-08-20T07:45:22.4620720Z 
2025-08-20T07:45:22.4620828Z # common.keepa
2025-08-20T07:45:22.4620973Z 
2025-08-20T07:45:22.4621095Z <a id="common.llm"></a>
2025-08-20T07:45:22.4621267Z 
2025-08-20T07:45:22.4621367Z # common.llm
2025-08-20T07:45:22.4621522Z 
2025-08-20T07:45:22.4621658Z <a id="common.settings"></a>
2025-08-20T07:45:22.4621867Z 
2025-08-20T07:45:22.4621970Z # common.settings
2025-08-20T07:45:22.4622144Z 
2025-08-20T07:45:22.4622248Z <a id="common.db"></a>
2025-08-20T07:45:22.4622426Z 
2025-08-20T07:45:22.4622532Z # common.db
2025-08-20T07:45:22.4622668Z 
2025-08-20T07:45:22.4622805Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T07:45:22.4623088Z 
2025-08-20T07:45:22.4623216Z #### build\_sqlalchemy\_url
2025-08-20T07:45:22.4623413Z 
2025-08-20T07:45:22.4623512Z ```python
2025-08-20T07:45:22.4623955Z def build_sqlalchemy_url() -> str
2025-08-20T07:45:22.4624482Z ```
2025-08-20T07:45:22.4624626Z 
2025-08-20T07:45:22.4624771Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T07:45:22.4625034Z 
2025-08-20T07:45:22.4625168Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T07:45:22.4625424Z 
2025-08-20T07:45:22.4625535Z #### build\_asyncpg\_dsn
2025-08-20T07:45:22.4625719Z 
2025-08-20T07:45:22.4625824Z ```python
2025-08-20T07:45:22.4626062Z def build_asyncpg_dsn() -> str
2025-08-20T07:45:22.4626367Z ```
2025-08-20T07:45:22.4626485Z 
2025-08-20T07:45:22.4626686Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T07:45:22.4627022Z 
2025-08-20T07:45:22.4627147Z <a id="common.db.refresh_mvs"></a>
2025-08-20T07:45:22.4627379Z 
2025-08-20T07:45:22.4627487Z #### refresh\_mvs
2025-08-20T07:45:22.4627659Z 
2025-08-20T07:45:22.4627762Z ```python
2025-08-20T07:45:22.4628069Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T07:45:22.4628438Z ```
2025-08-20T07:45:22.4628577Z 
2025-08-20T07:45:22.4628963Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T07:45:22.4629362Z 
2025-08-20T07:45:22.4629475Z <a id="common.config"></a>
2025-08-20T07:45:22.4629688Z 
2025-08-20T07:45:22.4629802Z # common.config
2025-08-20T07:45:22.4629968Z 
2025-08-20T07:45:22.4630091Z <a id="common.base"></a>
2025-08-20T07:45:22.4630281Z 
2025-08-20T07:45:22.4630389Z # common.base
2025-08-20T07:45:22.4630553Z 
2025-08-20T07:45:22.4630689Z <a id="common.base.Base"></a>
2025-08-20T07:45:22.4630907Z 
2025-08-20T07:45:22.4631006Z ## Base Objects
2025-08-20T07:45:22.4631168Z 
2025-08-20T07:45:22.4631265Z ```python
2025-08-20T07:45:22.4631524Z class Base(DeclarativeBase)
2025-08-20T07:45:22.4631822Z ```
2025-08-20T07:45:22.4631959Z 
2025-08-20T07:45:22.4632096Z Base class for SQLAlchemy models.
2025-08-20T07:45:22.4632337Z 
2025-08-20T07:45:22.4632453Z <a id="repricer"></a>
2025-08-20T07:45:22.4632633Z 
2025-08-20T07:45:22.4632727Z # repricer
2025-08-20T07:45:22.4632859Z 
2025-08-20T07:45:22.4632989Z <a id="repricer.app.schemas"></a>
2025-08-20T07:45:22.4633242Z 
2025-08-20T07:45:22.4633351Z # repricer.app.schemas
2025-08-20T07:45:22.4633544Z 
2025-08-20T07:45:22.4633677Z <a id="repricer.app.deps"></a>
2025-08-20T07:45:22.4634050Z 
2025-08-20T07:45:22.4634164Z # repricer.app.deps
2025-08-20T07:45:22.4634331Z 
2025-08-20T07:45:22.4634503Z Placeholder module for Keepa / SP-API clients.
2025-08-20T07:45:22.4634788Z 
2025-08-20T07:45:22.4634916Z <a id="repricer.app.logic"></a>
2025-08-20T07:45:22.4635144Z 
2025-08-20T07:45:22.4635260Z # repricer.app.logic
2025-08-20T07:45:22.4635439Z 
2025-08-20T07:45:22.4635592Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T07:45:22.4635879Z 
2025-08-20T07:45:22.4635977Z #### MIN\_MARGIN
2025-08-20T07:45:22.4636150Z 
2025-08-20T07:45:22.4636257Z 15 % ROI
2025-08-20T07:45:22.4636405Z 
2025-08-20T07:45:22.4636558Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T07:45:22.4636843Z 
2025-08-20T07:45:22.4636950Z #### compute\_price
2025-08-20T07:45:22.4637118Z 
2025-08-20T07:45:22.4637231Z ```python
2025-08-20T07:45:22.4637616Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T07:45:22.4638084Z ```
2025-08-20T07:45:22.4638227Z 
2025-08-20T07:45:22.4638401Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T07:45:22.4638848Z Replace with real competitive logic later.
2025-08-20T07:45:22.4639118Z 
2025-08-20T07:45:22.4639234Z <a id="repricer.app.main"></a>
2025-08-20T07:45:22.4639457Z 
2025-08-20T07:45:22.4639565Z # repricer.app.main
2025-08-20T07:45:22.4639734Z 
2025-08-20T07:45:22.4639852Z <a id="repricer.app"></a>
2025-08-20T07:45:22.4640064Z 
2025-08-20T07:45:22.4640171Z # repricer.app
2025-08-20T07:45:22.4640325Z 
2025-08-20T07:45:22.4640464Z <a id="repricer.tests.test_imports"></a>
2025-08-20T07:45:22.4640730Z 
2025-08-20T07:45:22.4640855Z # repricer.tests.test\_imports
2025-08-20T07:45:22.4641083Z 
2025-08-20T07:45:22.4641222Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T07:45:22.4641475Z 
2025-08-20T07:45:22.4641614Z # repricer.tests.test\_smoke
2025-08-20T07:45:22.4642073Z 
2025-08-20T07:45:22.4642202Z <a id="repricer.tests"></a>
2025-08-20T07:45:22.4642408Z 
2025-08-20T07:45:22.4642518Z # repricer.tests
2025-08-20T07:45:22.4642685Z 
2025-08-20T07:45:22.4642781Z <a id="db"></a>
2025-08-20T07:45:22.4642940Z 
2025-08-20T07:45:22.4643040Z # db
2025-08-20T07:45:22.4643168Z 
2025-08-20T07:45:22.4643290Z <a id="db.utils.views"></a>
2025-08-20T07:45:22.4643506Z 
2025-08-20T07:45:22.4643617Z # db.utils.views
2025-08-20T07:45:22.4643997Z 
2025-08-20T07:45:22.4644168Z <a id="db.utils.views.replace_view"></a>
2025-08-20T07:45:22.4644469Z 
2025-08-20T07:45:22.4644574Z #### replace\_view
2025-08-20T07:45:22.4644743Z 
2025-08-20T07:45:22.4644846Z ```python
2025-08-20T07:45:22.4645153Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T07:45:22.4645592Z ```
2025-08-20T07:45:22.4645723Z 
2025-08-20T07:45:22.4645860Z Drop and recreate a SQL view atomically.
2025-08-20T07:45:22.4646137Z 
2025-08-20T07:45:22.4646251Z <a id="db.utils"></a>
2025-08-20T07:45:22.4646603Z 
2025-08-20T07:45:22.4646703Z # db.utils
2025-08-20T07:45:22.4646843Z 
2025-08-20T07:45:22.4646978Z <a id="price_importer"></a>
2025-08-20T07:45:22.4647195Z 
2025-08-20T07:45:22.4647300Z # price\_importer
2025-08-20T07:45:22.4647473Z 
2025-08-20T07:45:22.4647646Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T07:45:22.4647965Z 
2025-08-20T07:45:22.4648108Z # price\_importer.services\_common.dsn
2025-08-20T07:45:22.4648374Z 
2025-08-20T07:45:22.4648583Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T07:45:22.4648909Z 
2025-08-20T07:45:22.4648998Z #### build\_dsn
2025-08-20T07:45:22.4649171Z 
2025-08-20T07:45:22.4649280Z ```python
2025-08-20T07:45:22.4649550Z def build_dsn(sync: bool = True) -> str
2025-08-20T07:45:22.4649881Z ```
2025-08-20T07:45:22.4650004Z 
2025-08-20T07:45:22.4650111Z Return safe DSN.
2025-08-20T07:45:22.4650277Z 
2025-08-20T07:45:22.4650761Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T07:45:22.4651089Z 
2025-08-20T07:45:22.4651306Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T07:45:22.4651667Z 
2025-08-20T07:45:22.4651873Z # price\_importer.services\_common.models\_vendor
2025-08-20T07:45:22.4652212Z 
2025-08-20T07:45:22.4652391Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T07:45:22.4652713Z 
2025-08-20T07:45:22.4652877Z # price\_importer.services\_common.db\_url
2025-08-20T07:45:22.4653185Z 
2025-08-20T07:45:22.4653397Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T07:45:22.4653924Z 
2025-08-20T07:45:22.4654046Z #### build\_url
2025-08-20T07:45:22.4654215Z 
2025-08-20T07:45:22.4654318Z ```python
2025-08-20T07:45:22.4654624Z def build_url(async_: bool = True) -> str
2025-08-20T07:45:22.4655035Z ```
2025-08-20T07:45:22.4655197Z 
2025-08-20T07:45:22.4655391Z Return Postgres DSN from env or PG_* parts.
2025-08-20T07:45:22.4655696Z 
2025-08-20T07:45:22.4655898Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T07:45:22.4656267Z 
2025-08-20T07:45:22.4656454Z # price\_importer.services\_common.keepa
2025-08-20T07:45:22.4656814Z 
2025-08-20T07:45:22.4657021Z <a id="price_importer.services_common.llm"></a>
2025-08-20T07:45:22.4657428Z 
2025-08-20T07:45:22.4657612Z # price\_importer.services\_common.llm
2025-08-20T07:45:22.4657973Z 
2025-08-20T07:45:22.4658217Z <a id="price_importer.services_common.settings"></a>
2025-08-20T07:45:22.4658658Z 
2025-08-20T07:45:22.4658882Z # price\_importer.services\_common.settings
2025-08-20T07:45:22.4659222Z 
2025-08-20T07:45:22.4659428Z <a id="price_importer.services_common.db"></a>
2025-08-20T07:45:22.4659780Z 
2025-08-20T07:45:22.4659940Z # price\_importer.services\_common.db
2025-08-20T07:45:22.4660249Z 
2025-08-20T07:45:22.4660541Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T07:45:22.4661007Z 
2025-08-20T07:45:22.4661159Z #### build\_sqlalchemy\_url
2025-08-20T07:45:22.4661401Z 
2025-08-20T07:45:22.4661531Z ```python
2025-08-20T07:45:22.4661845Z def build_sqlalchemy_url() -> str
2025-08-20T07:45:22.4662437Z ```
2025-08-20T07:45:22.4662602Z 
2025-08-20T07:45:22.4662786Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T07:45:22.4663118Z 
2025-08-20T07:45:22.4663382Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T07:45:22.4663997Z 
2025-08-20T07:45:22.4664150Z #### build\_asyncpg\_dsn
2025-08-20T07:45:22.4664393Z 
2025-08-20T07:45:22.4664518Z ```python
2025-08-20T07:45:22.4664853Z def build_asyncpg_dsn() -> str
2025-08-20T07:45:22.4665227Z ```
2025-08-20T07:45:22.4665390Z 
2025-08-20T07:45:22.4665633Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T07:45:22.4666057Z 
2025-08-20T07:45:22.4666302Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T07:45:22.4666734Z 
2025-08-20T07:45:22.4666858Z #### refresh\_mvs
2025-08-20T07:45:22.4667064Z 
2025-08-20T07:45:22.4667188Z ```python
2025-08-20T07:45:22.4667605Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T07:45:22.4668094Z ```
2025-08-20T07:45:22.4668421Z 
2025-08-20T07:45:22.4668699Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T07:45:22.4669130Z 
2025-08-20T07:45:22.4669374Z <a id="price_importer.services_common"></a>
2025-08-20T07:45:22.4669719Z 
2025-08-20T07:45:22.4669885Z # price\_importer.services\_common
2025-08-20T07:45:22.4670199Z 
2025-08-20T07:45:22.4670396Z <a id="price_importer.services_common.base"></a>
2025-08-20T07:45:22.4670762Z 
2025-08-20T07:45:22.4670948Z # price\_importer.services\_common.base
2025-08-20T07:45:22.4671269Z 
2025-08-20T07:45:22.4671450Z <a id="price_importer.normaliser"></a>
2025-08-20T07:45:22.4671794Z 
2025-08-20T07:45:22.4671952Z # price\_importer.normaliser
2025-08-20T07:45:22.4672191Z 
2025-08-20T07:45:22.4672381Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T07:45:22.4672740Z 
2025-08-20T07:45:22.4672909Z # price\_importer.common.models\_vendor
2025-08-20T07:45:22.4673203Z 
2025-08-20T07:45:22.4673374Z <a id="price_importer.common.db_url"></a>
2025-08-20T07:45:22.4673705Z 
2025-08-20T07:45:22.4674095Z # price\_importer.common.db\_url
2025-08-20T07:45:22.4674432Z 
2025-08-20T07:45:22.4674623Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T07:45:22.4674979Z 
2025-08-20T07:45:22.4675111Z #### make\_dsn
2025-08-20T07:45:22.4675315Z 
2025-08-20T07:45:22.4675453Z ```python
2025-08-20T07:45:22.4675823Z def make_dsn(async_: bool = False) -> str
2025-08-20T07:45:22.4676276Z ```
2025-08-20T07:45:22.4676430Z 
2025-08-20T07:45:22.4676662Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T07:45:22.4677059Z 
2025-08-20T07:45:22.4677255Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T07:45:22.4677644Z 
2025-08-20T07:45:22.4677785Z #### build\_url
2025-08-20T07:45:22.4677973Z 
2025-08-20T07:45:22.4678113Z ```python
2025-08-20T07:45:22.4678472Z def build_url(async_: bool = False) -> str
2025-08-20T07:45:22.4678919Z ```
2025-08-20T07:45:22.4679081Z 
2025-08-20T07:45:22.4679288Z Return Postgres DSN built from environment variables.
2025-08-20T07:45:22.4679725Z 
2025-08-20T07:45:22.4679927Z <a id="price_importer.common"></a>
2025-08-20T07:45:22.4680210Z 
2025-08-20T07:45:22.4680350Z # price\_importer.common
2025-08-20T07:45:22.4680611Z 
2025-08-20T07:45:22.4680781Z <a id="price_importer.common.base"></a>
2025-08-20T07:45:22.4681105Z 
2025-08-20T07:45:22.4681262Z # price\_importer.common.base
2025-08-20T07:45:22.4681522Z 
2025-08-20T07:45:22.4681680Z <a id="price_importer.tests.conftest"></a>
2025-08-20T07:45:22.4681953Z 
2025-08-20T07:45:22.4682078Z # price\_importer.tests.conftest
2025-08-20T07:45:22.4682300Z 
2025-08-20T07:45:22.4682442Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T07:45:22.4682718Z 
2025-08-20T07:45:22.4682842Z # price\_importer.tests.test\_reader
2025-08-20T07:45:22.4683075Z 
2025-08-20T07:45:22.4683226Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T07:45:22.4683544Z 
2025-08-20T07:45:22.4683712Z # price\_importer.tests.test\_imports
2025-08-20T07:45:22.4684161Z 
2025-08-20T07:45:22.4684341Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T07:45:22.4684858Z 
2025-08-20T07:45:22.4685026Z # price\_importer.tests.test\_smoke
2025-08-20T07:45:22.4685340Z 
2025-08-20T07:45:22.4685514Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T07:45:22.4685823Z 
2025-08-20T07:45:22.4685977Z # price\_importer.tests.test\_normaliser
2025-08-20T07:45:22.4686255Z 
2025-08-20T07:45:22.4686390Z <a id="price_importer.tests"></a>
2025-08-20T07:45:22.4686640Z 
2025-08-20T07:45:22.4686763Z # price\_importer.tests
2025-08-20T07:45:22.4686952Z 
2025-08-20T07:45:22.4687088Z <a id="price_importer.reader"></a>
2025-08-20T07:45:22.4687345Z 
2025-08-20T07:45:22.4687470Z # price\_importer.reader
2025-08-20T07:45:22.4687677Z 
2025-08-20T07:45:22.4687829Z <a id="price_importer.repository"></a>
2025-08-20T07:45:22.4688095Z 
2025-08-20T07:45:22.4688227Z # price\_importer.repository
2025-08-20T07:45:22.4688461Z 
2025-08-20T07:45:22.4688599Z <a id="price_importer.import"></a>
2025-08-20T07:45:22.4688841Z 
2025-08-20T07:45:22.4688962Z # price\_importer.import
2025-08-20T07:45:22.4689439Z 
2025-08-20T07:45:22.4689555Z <a id="fees_h10"></a>
2025-08-20T07:45:22.4689741Z 
2025-08-20T07:45:22.4689847Z # fees\_h10
2025-08-20T07:45:22.4689977Z 
2025-08-20T07:45:22.4690090Z <a id="fees_h10.worker"></a>
2025-08-20T07:45:22.4690322Z 
2025-08-20T07:45:22.4690436Z # fees\_h10.worker
2025-08-20T07:45:22.4690611Z 
2025-08-20T07:45:22.4690769Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T07:45:22.4691076Z 
2025-08-20T07:45:22.4691196Z #### list\_active\_asins
2025-08-20T07:45:22.4691398Z 
2025-08-20T07:45:22.4691511Z ```python
2025-08-20T07:45:22.4691784Z def list_active_asins() -> list[str]
2025-08-20T07:45:22.4692140Z ```
2025-08-20T07:45:22.4692276Z 
2025-08-20T07:45:22.4692457Z Return known ASINs or an empty list if unavailable.
2025-08-20T07:45:22.4692786Z 
2025-08-20T07:45:22.4692924Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T07:45:22.4693185Z 
2025-08-20T07:45:22.4693312Z # fees\_h10.tests.test\_smoke
2025-08-20T07:45:22.4693546Z 
2025-08-20T07:45:22.4693682Z <a id="fees_h10.tests"></a>
2025-08-20T07:45:22.4694060Z 
2025-08-20T07:45:22.4694178Z # fees\_h10.tests
2025-08-20T07:45:22.4694348Z 
2025-08-20T07:45:22.4694470Z <a id="fees_h10.client"></a>
2025-08-20T07:45:22.4694695Z 
2025-08-20T07:45:22.4694800Z # fees\_h10.client
2025-08-20T07:45:22.4694966Z 
2025-08-20T07:45:22.4695097Z <a id="fees_h10.repository"></a>
2025-08-20T07:45:22.4695327Z 
2025-08-20T07:45:22.4695432Z # fees\_h10.repository
2025-08-20T07:45:22.4695605Z 
2025-08-20T07:45:22.4695766Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T07:45:22.4696031Z 
2025-08-20T07:45:22.4696134Z #### upsert\_fees\_raw
2025-08-20T07:45:22.4696294Z 
2025-08-20T07:45:22.4696391Z ```python
2025-08-20T07:45:22.4696622Z def upsert_fees_raw(engine: Engine,
2025-08-20T07:45:22.4696965Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T07:45:22.4697294Z                     *,
2025-08-20T07:45:22.4697616Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T07:45:22.4698005Z ```
2025-08-20T07:45:22.4698123Z 
2025-08-20T07:45:22.4698233Z Idempotent upsert for fees.
2025-08-20T07:45:22.4698420Z 
2025-08-20T07:45:22.4698638Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T07:45:22.4699110Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T07:45:22.4699542Z Only updates when one of the mutable fields changes.
2025-08-20T07:45:22.4699813Z 
2025-08-20T07:45:22.4699913Z <a id="emailer"></a>
2025-08-20T07:45:22.4700069Z 
2025-08-20T07:45:22.4700153Z # emailer
2025-08-20T07:45:22.4700282Z 
2025-08-20T07:45:22.4700434Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T07:45:22.4700699Z 
2025-08-20T07:45:22.4700827Z # emailer.tests.test\_import\_emailer
2025-08-20T07:45:22.4701068Z 
2025-08-20T07:45:22.4701190Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T07:45:22.4701424Z 
2025-08-20T07:45:22.4701540Z # emailer.tests.test\_smoke
2025-08-20T07:45:22.4701759Z 
2025-08-20T07:45:22.4701885Z <a id="emailer.tests"></a>
2025-08-20T07:45:22.4702281Z 
2025-08-20T07:45:22.4702399Z # emailer.tests
2025-08-20T07:45:22.4702561Z 
2025-08-20T07:45:22.4702698Z <a id="emailer.generate_body"></a>
2025-08-20T07:45:22.4702945Z 
2025-08-20T07:45:22.4703071Z # emailer.generate\_body
2025-08-20T07:45:22.4703286Z 
2025-08-20T07:45:22.4703403Z <a id="llm_server"></a>
2025-08-20T07:45:22.4703610Z 
2025-08-20T07:45:22.4703722Z # llm\_server
2025-08-20T07:45:22.4704040Z 
2025-08-20T07:45:22.4704178Z <a id="llm_server.app"></a>
2025-08-20T07:45:22.4704421Z 
2025-08-20T07:45:22.4704535Z # llm\_server.app
2025-08-20T07:45:22.4704718Z 
