2025-08-16T23:50:05.4770554Z ##[group]Run pydoc-markdown
2025-08-16T23:50:05.4770864Z [36;1mpydoc-markdown[0m
2025-08-16T23:50:05.4811675Z shell: /usr/bin/bash -e {0}
2025-08-16T23:50:05.4811922Z env:
2025-08-16T23:50:05.4812163Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:50:05.4812598Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T23:50:05.4813005Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:50:05.4813373Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:50:05.4813730Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:50:05.4814076Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T23:50:05.4814372Z ##[endgroup]
2025-08-16T23:50:05.9782437Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T23:50:05.9783438Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T23:50:05.9783933Z In "pydoc-markdown.yml"
2025-08-16T23:50:05.9784357Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T23:50:05.9785063Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T23:50:05.9785833Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T23:50:05.9786378Z 
2025-08-16T23:50:06.1823608Z <a id="__init__"></a>
2025-08-16T23:50:06.1823971Z 
2025-08-16T23:50:06.1824117Z # \_\_init\_\_
2025-08-16T23:50:06.1824350Z 
2025-08-16T23:50:06.1824500Z <a id="api"></a>
2025-08-16T23:50:06.1824735Z 
2025-08-16T23:50:06.1824885Z # api
2025-08-16T23:50:06.1825089Z 
2025-08-16T23:50:06.1825277Z <a id="api.tests.test_llm"></a>
2025-08-16T23:50:06.1825633Z 
2025-08-16T23:50:06.1825810Z # api.tests.test\_llm
2025-08-16T23:50:06.1826094Z 
2025-08-16T23:50:06.1826295Z <a id="api.tests.test_imports"></a>
2025-08-16T23:50:06.1826676Z 
2025-08-16T23:50:06.1826862Z # api.tests.test\_imports
2025-08-16T23:50:06.1827165Z 
2025-08-16T23:50:06.1827385Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T23:50:06.1827775Z 
2025-08-16T23:50:06.1827965Z # api.tests.test\_entrypoint
2025-08-16T23:50:06.1828616Z 
2025-08-16T23:50:06.1828820Z <a id="api.tests.test_health"></a>
2025-08-16T23:50:06.1829180Z 
2025-08-16T23:50:06.1829353Z # api.tests.test\_health
2025-08-16T23:50:06.1829651Z 
2025-08-16T23:50:06.1829833Z <a id="api.migrations.env"></a>
2025-08-16T23:50:06.1830169Z 
2025-08-16T23:50:06.1830349Z # api.migrations.env
2025-08-16T23:50:06.1830620Z 
2025-08-16T23:50:06.1830884Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T23:50:06.1831332Z 
2025-08-16T23:50:06.1831567Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T23:50:06.1832002Z 
2025-08-16T23:50:06.1832228Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T23:50:06.1832611Z 
2025-08-16T23:50:06.1832767Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T23:50:06.1833075Z 
2025-08-16T23:50:06.1833376Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T23:50:06.1833842Z 
2025-08-16T23:50:06.1834106Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T23:50:06.1834865Z 
2025-08-16T23:50:06.1835102Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T23:50:06.1835473Z 
2025-08-16T23:50:06.1835667Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T23:50:06.1836004Z 
2025-08-16T23:50:06.1836204Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T23:50:06.1836549Z 
2025-08-16T23:50:06.1836734Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T23:50:06.1837047Z 
2025-08-16T23:50:06.1837257Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T23:50:06.1837619Z 
2025-08-16T23:50:06.1837803Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T23:50:06.1838330Z 
2025-08-16T23:50:06.1838462Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T23:50:06.1838678Z 
2025-08-16T23:50:06.1838788Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T23:50:06.1838989Z 
2025-08-16T23:50:06.1839132Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T23:50:06.1839607Z 
2025-08-16T23:50:06.1839718Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T23:50:06.1839920Z 
2025-08-16T23:50:06.1840049Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T23:50:06.1840543Z 
2025-08-16T23:50:06.1840794Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T23:50:06.1841095Z 
2025-08-16T23:50:06.1841209Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T23:50:06.1841413Z 
2025-08-16T23:50:06.1841508Z # api.migrations.versions.0001\_baseline
2025-08-16T23:50:06.1841686Z 
2025-08-16T23:50:06.1841779Z <a id="api.migrations.versions"></a>
2025-08-16T23:50:06.1841954Z 
2025-08-16T23:50:06.1842037Z # api.migrations.versions
2025-08-16T23:50:06.1842174Z 
2025-08-16T23:50:06.1842260Z <a id="api.migrations"></a>
2025-08-16T23:50:06.1842398Z 
2025-08-16T23:50:06.1842468Z # api.migrations
2025-08-16T23:50:06.1842583Z 
2025-08-16T23:50:06.1842650Z <a id="api.db"></a>
2025-08-16T23:50:06.1842761Z 
2025-08-16T23:50:06.1842836Z # api.db
2025-08-16T23:50:06.1842930Z 
2025-08-16T23:50:06.1843011Z <a id="api.routes.stats"></a>
2025-08-16T23:50:06.1843151Z 
2025-08-16T23:50:06.1843224Z # api.routes.stats
2025-08-16T23:50:06.1843331Z 
2025-08-16T23:50:06.1843417Z <a id="api.routes.stats.kpi"></a>
2025-08-16T23:50:06.1843569Z 
2025-08-16T23:50:06.1843636Z #### kpi
2025-08-16T23:50:06.1843720Z 
2025-08-16T23:50:06.1843785Z ```python
2025-08-16T23:50:06.1843959Z @router.get("/stats/kpi")
2025-08-16T23:50:06.1844207Z def kpi() -> List[Dict[str, int]]
2025-08-16T23:50:06.1844414Z ```
2025-08-16T23:50:06.1844498Z 
2025-08-16T23:50:06.1844580Z Return KPI metrics (mock).
2025-08-16T23:50:06.1844711Z 
2025-08-16T23:50:06.1844814Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T23:50:06.1844996Z 
2025-08-16T23:50:06.1845071Z #### roi\_by\_vendor
2025-08-16T23:50:06.1845181Z 
2025-08-16T23:50:06.1845245Z ```python
2025-08-16T23:50:06.1845418Z @router.get("/stats/roi_by_vendor")
2025-08-16T23:50:06.1845663Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T23:50:06.1845909Z ```
2025-08-16T23:50:06.1845989Z 
2025-08-16T23:50:06.1846074Z Return ROI percent by vendor.
2025-08-16T23:50:06.1846214Z 
2025-08-16T23:50:06.1846305Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T23:50:06.1846475Z 
2025-08-16T23:50:06.1846544Z #### roi\_trend
2025-08-16T23:50:06.1846644Z 
2025-08-16T23:50:06.1846709Z ```python
2025-08-16T23:50:06.1846875Z @router.get("/stats/roi_trend")
2025-08-16T23:50:06.1847106Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T23:50:06.1847341Z ```
2025-08-16T23:50:06.1847419Z 
2025-08-16T23:50:06.1847491Z Return 30-day ROI trend.
2025-08-16T23:50:06.1847622Z 
2025-08-16T23:50:06.1847698Z <a id="api.routes.roi"></a>
2025-08-16T23:50:06.1847831Z 
2025-08-16T23:50:06.1847902Z # api.routes.roi
2025-08-16T23:50:06.1848266Z 
2025-08-16T23:50:06.1848370Z <a id="api.routes.health"></a>
2025-08-16T23:50:06.1848552Z 
2025-08-16T23:50:06.1848622Z # api.routes.health
2025-08-16T23:50:06.1848734Z 
2025-08-16T23:50:06.1848841Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T23:50:06.1849170Z 
2025-08-16T23:50:06.1849235Z #### MAX\_SKEW
2025-08-16T23:50:06.1849336Z 
2025-08-16T23:50:06.1849398Z seconds
2025-08-16T23:50:06.1849481Z 
2025-08-16T23:50:06.1849568Z <a id="api.routes.health.health"></a>
2025-08-16T23:50:06.1849739Z 
2025-08-16T23:50:06.1849799Z #### health
2025-08-16T23:50:06.1849885Z 
2025-08-16T23:50:06.1849953Z ```python
2025-08-16T23:50:06.1850141Z @router.get("/health", include_in_schema=False)
2025-08-16T23:50:06.1850524Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T23:50:06.1850862Z ```
2025-08-16T23:50:06.1850950Z 
2025-08-16T23:50:06.1851065Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T23:50:06.1851261Z 
2025-08-16T23:50:06.1851353Z <a id="api.routes.repository"></a>
2025-08-16T23:50:06.1851510Z 
2025-08-16T23:50:06.1851587Z # api.routes.repository
2025-08-16T23:50:06.1851710Z 
2025-08-16T23:50:06.1851787Z <a id="api.routes"></a>
2025-08-16T23:50:06.1852239Z 
2025-08-16T23:50:06.1852363Z # api.routes
2025-08-16T23:50:06.1852558Z 
2025-08-16T23:50:06.1852702Z <a id="api.models.fee"></a>
2025-08-16T23:50:06.1852950Z 
2025-08-16T23:50:06.1853080Z # api.models.fee
2025-08-16T23:50:06.1853283Z 
2025-08-16T23:50:06.1853415Z <a id="api.models"></a>
2025-08-16T23:50:06.1853636Z 
2025-08-16T23:50:06.1853759Z # api.models
2025-08-16T23:50:06.1853938Z 
2025-08-16T23:50:06.1854088Z <a id="api.roi_repository"></a>
2025-08-16T23:50:06.1854252Z 
2025-08-16T23:50:06.1854323Z # api.roi\_repository
2025-08-16T23:50:06.1854440Z 
2025-08-16T23:50:06.1854510Z <a id="api.main"></a>
2025-08-16T23:50:06.1854628Z 
2025-08-16T23:50:06.1854691Z # api.main
2025-08-16T23:50:06.1854782Z 
2025-08-16T23:50:06.1854867Z <a id="api.main.ready"></a>
2025-08-16T23:50:06.1854999Z 
2025-08-16T23:50:06.1855060Z #### ready
2025-08-16T23:50:06.1855148Z 
2025-08-16T23:50:06.1855216Z ```python
2025-08-16T23:50:06.1855474Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T23:50:06.1855934Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T23:50:06.1856282Z                                                                       str]
2025-08-16T23:50:06.1856519Z ```
2025-08-16T23:50:06.1856601Z 
2025-08-16T23:50:06.1856706Z Return 200 only when migrations are at head.
2025-08-16T23:50:06.1856877Z 
2025-08-16T23:50:06.1856949Z <a id="api.config"></a>
2025-08-16T23:50:06.1857077Z 
2025-08-16T23:50:06.1857142Z # api.config
2025-08-16T23:50:06.1857237Z 
2025-08-16T23:50:06.1857302Z <a id="etl"></a>
2025-08-16T23:50:06.1857409Z 
2025-08-16T23:50:06.1857467Z # etl
2025-08-16T23:50:06.1857553Z 
2025-08-16T23:50:06.1857637Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T23:50:06.1857783Z 
2025-08-16T23:50:06.1857856Z # etl.fba\_fee\_ingestor
2025-08-16T23:50:06.1858181Z 
2025-08-16T23:50:06.1858281Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T23:50:06.1858427Z 
2025-08-16T23:50:06.1858498Z # etl.sp\_fees\_ingestor
2025-08-16T23:50:06.1858633Z 
2025-08-16T23:50:06.1858713Z <a id="etl.keepa_ingestor"></a>
2025-08-16T23:50:06.1858850Z 
2025-08-16T23:50:06.1858923Z # etl.keepa\_ingestor
2025-08-16T23:50:06.1859038Z 
2025-08-16T23:50:06.1859102Z <a id="etl.db"></a>
2025-08-16T23:50:06.1859208Z 
2025-08-16T23:50:06.1859274Z # etl.db
2025-08-16T23:50:06.1859362Z 
2025-08-16T23:50:06.1859470Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T23:50:06.1859661Z 
2025-08-16T23:50:06.1859748Z # etl.dialects.amazon\_reimbursements
2025-08-16T23:50:06.1859909Z 
2025-08-16T23:50:06.1859995Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T23:50:06.1860169Z 
2025-08-16T23:50:06.1860256Z # etl.dialects.amazon\_returns
2025-08-16T23:50:06.1860394Z 
2025-08-16T23:50:06.1860467Z <a id="etl.dialects"></a>
2025-08-16T23:50:06.1860598Z 
2025-08-16T23:50:06.1860663Z # etl.dialects
2025-08-16T23:50:06.1860762Z 
2025-08-16T23:50:06.1860833Z <a id="ingest"></a>
2025-08-16T23:50:06.1860938Z 
2025-08-16T23:50:06.1860998Z # ingest
2025-08-16T23:50:06.1861086Z 
2025-08-16T23:50:06.1861354Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T23:50:06.1861510Z 
2025-08-16T23:50:06.1861587Z # ingest.tests.test\_smoke
2025-08-16T23:50:06.1861720Z 
2025-08-16T23:50:06.1861791Z <a id="ingest.tests"></a>
2025-08-16T23:50:06.1861912Z 
2025-08-16T23:50:06.1861978Z # ingest.tests
2025-08-16T23:50:06.1862085Z 
2025-08-16T23:50:06.1862167Z <a id="ingest.upload_router"></a>
2025-08-16T23:50:06.1862312Z 
2025-08-16T23:50:06.1862391Z # ingest.upload\_router
2025-08-16T23:50:06.1862507Z 
2025-08-16T23:50:06.1862585Z <a id="ingest.email_watcher"></a>
2025-08-16T23:50:06.1862733Z 
2025-08-16T23:50:06.1862802Z # ingest.email\_watcher
2025-08-16T23:50:06.1862914Z 
2025-08-16T23:50:06.1862999Z <a id="ingest.email_watcher.main"></a>
2025-08-16T23:50:06.1863166Z 
2025-08-16T23:50:06.1863227Z #### main
2025-08-16T23:50:06.1863313Z 
2025-08-16T23:50:06.1863379Z ```python
2025-08-16T23:50:06.1863546Z def main() -> dict[str, str]
2025-08-16T23:50:06.1863741Z ```
2025-08-16T23:50:06.1863825Z 
2025-08-16T23:50:06.1864084Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T23:50:06.1864313Z 
2025-08-16T23:50:06.1864440Z Returns {"status": "success"} when processing completes.
2025-08-16T23:50:06.1864646Z 
2025-08-16T23:50:06.1864730Z <a id="ingest.ingest_router"></a>
2025-08-16T23:50:06.1864883Z 
2025-08-16T23:50:06.1864954Z # ingest.ingest\_router
2025-08-16T23:50:06.1865069Z 
2025-08-16T23:50:06.1865153Z <a id="logistics_etl"></a>
2025-08-16T23:50:06.1865281Z 
2025-08-16T23:50:06.1865345Z # logistics\_etl
2025-08-16T23:50:06.1865669Z 
2025-08-16T23:50:06.1865814Z Daily logistics ETL job.
2025-08-16T23:50:06.1865974Z 
2025-08-16T23:50:06.1866054Z <a id="logistics_etl.__main__"></a>
2025-08-16T23:50:06.1866344Z 
2025-08-16T23:50:06.1866454Z # logistics\_etl.\_\_main\_\_
2025-08-16T23:50:06.1866588Z 
2025-08-16T23:50:06.1866688Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T23:50:06.1866854Z 
2025-08-16T23:50:06.1866933Z # logistics\_etl.tests.conftest
2025-08-16T23:50:06.1867092Z 
2025-08-16T23:50:06.1867192Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T23:50:06.1867374Z 
2025-08-16T23:50:06.1867464Z # logistics\_etl.tests.test\_repository
2025-08-16T23:50:06.1867633Z 
2025-08-16T23:50:06.1867721Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T23:50:06.1867888Z 
2025-08-16T23:50:06.1868160Z # logistics\_etl.tests.test\_cron
2025-08-16T23:50:06.1868328Z 
2025-08-16T23:50:06.1868433Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T23:50:06.1868620Z 
2025-08-16T23:50:06.1868701Z # logistics\_etl.tests.test\_imports
2025-08-16T23:50:06.1868856Z 
2025-08-16T23:50:06.1868948Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T23:50:06.1869126Z 
2025-08-16T23:50:06.1869211Z # logistics\_etl.tests.test\_smoke
2025-08-16T23:50:06.1869365Z 
2025-08-16T23:50:06.1869465Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T23:50:06.1869637Z 
2025-08-16T23:50:06.1869722Z # logistics\_etl.tests.test\_client
2025-08-16T23:50:06.1869878Z 
2025-08-16T23:50:06.1869970Z <a id="logistics_etl.tests"></a>
2025-08-16T23:50:06.1870113Z 
2025-08-16T23:50:06.1870183Z # logistics\_etl.tests
2025-08-16T23:50:06.1870308Z 
2025-08-16T23:50:06.1870385Z <a id="logistics_etl.flow"></a>
2025-08-16T23:50:06.1870521Z 
2025-08-16T23:50:06.1870599Z # logistics\_etl.flow
2025-08-16T23:50:06.1870711Z 
2025-08-16T23:50:06.1870793Z <a id="logistics_etl.client"></a>
2025-08-16T23:50:06.1870945Z 
2025-08-16T23:50:06.1871017Z # logistics\_etl.client
2025-08-16T23:50:06.1871134Z 
2025-08-16T23:50:06.1871211Z <a id="logistics_etl.cron"></a>
2025-08-16T23:50:06.1871353Z 
2025-08-16T23:50:06.1871425Z # logistics\_etl.cron
2025-08-16T23:50:06.1871536Z 
2025-08-16T23:50:06.1871617Z <a id="logistics_etl.db"></a>
2025-08-16T23:50:06.1871752Z 
2025-08-16T23:50:06.1871817Z # logistics\_etl.db
2025-08-16T23:50:06.1871926Z 
2025-08-16T23:50:06.1872019Z <a id="logistics_etl.repository"></a>
2025-08-16T23:50:06.1872176Z 
2025-08-16T23:50:06.1872255Z # logistics\_etl.repository
2025-08-16T23:50:06.1872398Z 
2025-08-16T23:50:06.1872590Z <a id="alert_bot"></a>
2025-08-16T23:50:06.1872704Z 
2025-08-16T23:50:06.1872771Z # alert\_bot
2025-08-16T23:50:06.1872868Z 
2025-08-16T23:50:06.1872951Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T23:50:06.1873111Z 
2025-08-16T23:50:06.1873195Z # alert\_bot.tests.test\_smoke
2025-08-16T23:50:06.1873333Z 
2025-08-16T23:50:06.1873407Z <a id="alert_bot.tests"></a>
2025-08-16T23:50:06.1873545Z 
2025-08-16T23:50:06.1873613Z # alert\_bot.tests
2025-08-16T23:50:06.1873718Z 
2025-08-16T23:50:06.1873796Z <a id="alert_bot.alert_bot"></a>
2025-08-16T23:50:06.1873942Z 
2025-08-16T23:50:06.1874012Z # alert\_bot.alert\_bot
2025-08-16T23:50:06.1874132Z 
2025-08-16T23:50:06.1874211Z <a id="alert_bot.rules"></a>
2025-08-16T23:50:06.1874342Z 
2025-08-16T23:50:06.1874408Z # alert\_bot.rules
2025-08-16T23:50:06.1874517Z 
2025-08-16T23:50:06.1874583Z <a id="common"></a>
2025-08-16T23:50:06.1874687Z 
2025-08-16T23:50:06.1874749Z # common
2025-08-16T23:50:06.1874843Z 
2025-08-16T23:50:06.1875030Z <a id="common.dsn"></a>
2025-08-16T23:50:06.1875147Z 
2025-08-16T23:50:06.1875215Z # common.dsn
2025-08-16T23:50:06.1875307Z 
2025-08-16T23:50:06.1875388Z <a id="common.dsn.build_dsn"></a>
2025-08-16T23:50:06.1875534Z 
2025-08-16T23:50:06.1875602Z #### build\_dsn
2025-08-16T23:50:06.1875703Z 
2025-08-16T23:50:06.1875765Z ```python
2025-08-16T23:50:06.1875941Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:50:06.1876159Z ```
2025-08-16T23:50:06.1876247Z 
2025-08-16T23:50:06.1876369Z Return a Postgres DSN, validating required variables.
2025-08-16T23:50:06.1876573Z 
2025-08-16T23:50:06.1876779Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T23:50:06.1877227Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T23:50:06.1877650Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T23:50:06.1877956Z missing.
2025-08-16T23:50:06.1878227Z 
2025-08-16T23:50:06.1878312Z <a id="common.models_vendor"></a>
2025-08-16T23:50:06.1878474Z 
2025-08-16T23:50:06.1878555Z # common.models\_vendor
2025-08-16T23:50:06.1878675Z 
2025-08-16T23:50:06.1878764Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T23:50:06.1878931Z 
2025-08-16T23:50:06.1879005Z ## Vendor Objects
2025-08-16T23:50:06.1879110Z 
2025-08-16T23:50:06.1879171Z ```python
2025-08-16T23:50:06.1879327Z class Vendor(Base)
2025-08-16T23:50:06.1879513Z ```
2025-08-16T23:50:06.1879596Z 
2025-08-16T23:50:06.1879676Z Vendor of inventory items.
2025-08-16T23:50:06.1879806Z 
2025-08-16T23:50:06.1879906Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T23:50:06.1880086Z 
2025-08-16T23:50:06.1880163Z ## VendorPrice Objects
2025-08-16T23:50:06.1880278Z 
2025-08-16T23:50:06.1880338Z ```python
2025-08-16T23:50:06.1880502Z class VendorPrice(Base)
2025-08-16T23:50:06.1880673Z ```
2025-08-16T23:50:06.1880759Z 
2025-08-16T23:50:06.1880860Z Association table linking vendors to pricing.
2025-08-16T23:50:06.1881036Z 
2025-08-16T23:50:06.1881113Z <a id="common.db_url"></a>
2025-08-16T23:50:06.1881249Z 
2025-08-16T23:50:06.1881313Z # common.db\_url
2025-08-16T23:50:06.1881415Z 
2025-08-16T23:50:06.1881504Z <a id="common.db_url.build_url"></a>
2025-08-16T23:50:06.1881655Z 
2025-08-16T23:50:06.1881717Z #### build\_url
2025-08-16T23:50:06.1881822Z 
2025-08-16T23:50:06.1881889Z ```python
2025-08-16T23:50:06.1882058Z def build_url(async_: bool = True) -> str
2025-08-16T23:50:06.1882283Z ```
2025-08-16T23:50:06.1882361Z 
2025-08-16T23:50:06.1882461Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:50:06.1882634Z 
2025-08-16T23:50:06.1882709Z <a id="common.keepa"></a>
2025-08-16T23:50:06.1882835Z 
2025-08-16T23:50:06.1882907Z # common.keepa
2025-08-16T23:50:06.1883008Z 
2025-08-16T23:50:06.1883082Z <a id="common.llm"></a>
2025-08-16T23:50:06.1883205Z 
2025-08-16T23:50:06.1883267Z # common.llm
2025-08-16T23:50:06.1883361Z 
2025-08-16T23:50:06.1883446Z <a id="common.settings"></a>
2025-08-16T23:50:06.1883580Z 
2025-08-16T23:50:06.1883647Z # common.settings
2025-08-16T23:50:06.1884178Z 
2025-08-16T23:50:06.1884325Z <a id="common.db"></a>
2025-08-16T23:50:06.1884553Z 
2025-08-16T23:50:06.1884677Z # common.db
2025-08-16T23:50:06.1884861Z 
2025-08-16T23:50:06.1885035Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T23:50:06.1885370Z 
2025-08-16T23:50:06.1885522Z #### build\_sqlalchemy\_url
2025-08-16T23:50:06.1885698Z 
2025-08-16T23:50:06.1885764Z ```python
2025-08-16T23:50:06.1885951Z def build_sqlalchemy_url() -> str
2025-08-16T23:50:06.1886158Z ```
2025-08-16T23:50:06.1886240Z 
2025-08-16T23:50:06.1886345Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:50:06.1886523Z 
2025-08-16T23:50:06.1886613Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T23:50:06.1886786Z 
2025-08-16T23:50:06.1886860Z #### build\_asyncpg\_dsn
2025-08-16T23:50:06.1886986Z 
2025-08-16T23:50:06.1887055Z ```python
2025-08-16T23:50:06.1887221Z def build_asyncpg_dsn() -> str
2025-08-16T23:50:06.1887423Z ```
2025-08-16T23:50:06.1887503Z 
2025-08-16T23:50:06.1887631Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:50:06.1888464Z 
2025-08-16T23:50:06.1888561Z <a id="common.db.refresh_mvs"></a>
2025-08-16T23:50:06.1888725Z 
2025-08-16T23:50:06.1888792Z #### refresh\_mvs
2025-08-16T23:50:06.1888909Z 
2025-08-16T23:50:06.1888975Z ```python
2025-08-16T23:50:06.1889182Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:50:06.1889434Z ```
2025-08-16T23:50:06.1889517Z 
2025-08-16T23:50:06.1889656Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:50:06.1889886Z 
2025-08-16T23:50:06.1889962Z <a id="common.config"></a>
2025-08-16T23:50:06.1890093Z 
2025-08-16T23:50:06.1890158Z # common.config
2025-08-16T23:50:06.1890268Z 
2025-08-16T23:50:06.1890341Z <a id="common.base"></a>
2025-08-16T23:50:06.1890466Z 
2025-08-16T23:50:06.1890537Z # common.base
2025-08-16T23:50:06.1890634Z 
2025-08-16T23:50:06.1890713Z <a id="common.base.Base"></a>
2025-08-16T23:50:06.1890852Z 
2025-08-16T23:50:06.1890922Z ## Base Objects
2025-08-16T23:50:06.1891023Z 
2025-08-16T23:50:06.1891097Z ```python
2025-08-16T23:50:06.1891273Z class Base(DeclarativeBase)
2025-08-16T23:50:06.1891466Z ```
2025-08-16T23:50:06.1891557Z 
2025-08-16T23:50:06.1891642Z Base class for SQLAlchemy models.
2025-08-16T23:50:06.1891796Z 
2025-08-16T23:50:06.1891909Z <a id="repricer"></a>
2025-08-16T23:50:06.1892120Z 
2025-08-16T23:50:06.1892228Z # repricer
2025-08-16T23:50:06.1892388Z 
2025-08-16T23:50:06.1892551Z <a id="repricer.app.schemas"></a>
2025-08-16T23:50:06.1892824Z 
2025-08-16T23:50:06.1892953Z # repricer.app.schemas
2025-08-16T23:50:06.1893171Z 
2025-08-16T23:50:06.1893300Z <a id="repricer.app.deps"></a>
2025-08-16T23:50:06.1893543Z 
2025-08-16T23:50:06.1893670Z # repricer.app.deps
2025-08-16T23:50:06.1893855Z 
2025-08-16T23:50:06.1894043Z Placeholder module for Keepa / SP-API clients.
2025-08-16T23:50:06.1894344Z 
2025-08-16T23:50:06.1894436Z <a id="repricer.app.logic"></a>
2025-08-16T23:50:06.1894582Z 
2025-08-16T23:50:06.1894656Z # repricer.app.logic
2025-08-16T23:50:06.1894776Z 
2025-08-16T23:50:06.1894887Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T23:50:06.1895066Z 
2025-08-16T23:50:06.1895137Z #### MIN\_MARGIN
2025-08-16T23:50:06.1895243Z 
2025-08-16T23:50:06.1895304Z 15 % ROI
2025-08-16T23:50:06.1895393Z 
2025-08-16T23:50:06.1895506Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T23:50:06.1895694Z 
2025-08-16T23:50:06.1895762Z #### compute\_price
2025-08-16T23:50:06.1895874Z 
2025-08-16T23:50:06.1895936Z ```python
2025-08-16T23:50:06.1896184Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T23:50:06.1896487Z ```
2025-08-16T23:50:06.1896571Z 
2025-08-16T23:50:06.1896683Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T23:50:06.1896957Z Replace with real competitive logic later.
2025-08-16T23:50:06.1897127Z 
2025-08-16T23:50:06.1897214Z <a id="repricer.app.main"></a>
2025-08-16T23:50:06.1897355Z 
2025-08-16T23:50:06.1897425Z # repricer.app.main
2025-08-16T23:50:06.1897537Z 
2025-08-16T23:50:06.1897612Z <a id="repricer.app"></a>
2025-08-16T23:50:06.1897894Z 
2025-08-16T23:50:06.1897959Z # repricer.app
2025-08-16T23:50:06.1898310Z 
2025-08-16T23:50:06.1898406Z <a id="repricer.tests.test_imports"></a>
2025-08-16T23:50:06.1898574Z 
2025-08-16T23:50:06.1898660Z # repricer.tests.test\_imports
2025-08-16T23:50:06.1898799Z 
2025-08-16T23:50:06.1898884Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T23:50:06.1899050Z 
2025-08-16T23:50:06.1899128Z # repricer.tests.test\_smoke
2025-08-16T23:50:06.1899262Z 
2025-08-16T23:50:06.1899338Z <a id="repricer.tests"></a>
2025-08-16T23:50:06.1899472Z 
2025-08-16T23:50:06.1899591Z # repricer.tests
2025-08-16T23:50:06.1899699Z 
2025-08-16T23:50:06.1899772Z <a id="db"></a>
2025-08-16T23:50:06.1899874Z 
2025-08-16T23:50:06.1899934Z # db
2025-08-16T23:50:06.1900021Z 
2025-08-16T23:50:06.1900097Z <a id="db.utils.views"></a>
2025-08-16T23:50:06.1900262Z 
2025-08-16T23:50:06.1900325Z # db.utils.views
2025-08-16T23:50:06.1900434Z 
2025-08-16T23:50:06.1900525Z <a id="db.utils.views.replace_view"></a>
2025-08-16T23:50:06.1900831Z 
2025-08-16T23:50:06.1900906Z #### replace\_view
2025-08-16T23:50:06.1901011Z 
2025-08-16T23:50:06.1901073Z ```python
2025-08-16T23:50:06.1901272Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T23:50:06.1901513Z ```
2025-08-16T23:50:06.1901602Z 
2025-08-16T23:50:06.1901690Z Drop and recreate a SQL view atomically.
2025-08-16T23:50:06.1901852Z 
2025-08-16T23:50:06.1901923Z <a id="db.utils"></a>
2025-08-16T23:50:06.1902043Z 
2025-08-16T23:50:06.1902105Z # db.utils
2025-08-16T23:50:06.1902193Z 
2025-08-16T23:50:06.1902274Z <a id="price_importer"></a>
2025-08-16T23:50:06.1902412Z 
2025-08-16T23:50:06.1902479Z # price\_importer
2025-08-16T23:50:06.1902590Z 
2025-08-16T23:50:06.1902696Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T23:50:06.1902880Z 
2025-08-16T23:50:06.1902969Z # price\_importer.services\_common.dsn
2025-08-16T23:50:06.1903136Z 
2025-08-16T23:50:06.1903262Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T23:50:06.1903474Z 
2025-08-16T23:50:06.1903552Z #### build\_dsn
2025-08-16T23:50:06.1903653Z 
2025-08-16T23:50:06.1903714Z ```python
2025-08-16T23:50:06.1903891Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:50:06.1904108Z ```
2025-08-16T23:50:06.1904196Z 
2025-08-16T23:50:06.1904263Z Return safe DSN.
2025-08-16T23:50:06.1904366Z 
2025-08-16T23:50:06.1904701Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T23:50:06.1904910Z 
2025-08-16T23:50:06.1905034Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T23:50:06.1905237Z 
2025-08-16T23:50:06.1905351Z # price\_importer.services\_common.models\_vendor
2025-08-16T23:50:06.1905537Z 
2025-08-16T23:50:06.1905641Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T23:50:06.1905831Z 
2025-08-16T23:50:06.1905927Z # price\_importer.services\_common.db\_url
2025-08-16T23:50:06.1906096Z 
2025-08-16T23:50:06.1906231Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T23:50:06.1906440Z 
2025-08-16T23:50:06.1906514Z #### build\_url
2025-08-16T23:50:06.1906617Z 
2025-08-16T23:50:06.1906683Z ```python
2025-08-16T23:50:06.1906855Z def build_url(async_: bool = True) -> str
2025-08-16T23:50:06.1907079Z ```
2025-08-16T23:50:06.1907160Z 
2025-08-16T23:50:06.1907254Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:50:06.1907430Z 
2025-08-16T23:50:06.1907535Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T23:50:06.1907718Z 
2025-08-16T23:50:06.1907814Z # price\_importer.services\_common.keepa
2025-08-16T23:50:06.1908146Z 
2025-08-16T23:50:06.1908299Z <a id="price_importer.services_common.llm"></a>
2025-08-16T23:50:06.1908490Z 
2025-08-16T23:50:06.1908580Z # price\_importer.services\_common.llm
2025-08-16T23:50:06.1908741Z 
2025-08-16T23:50:06.1908854Z <a id="price_importer.services_common.settings"></a>
2025-08-16T23:50:06.1909052Z 
2025-08-16T23:50:06.1909147Z # price\_importer.services\_common.settings
2025-08-16T23:50:06.1909314Z 
2025-08-16T23:50:06.1909417Z <a id="price_importer.services_common.db"></a>
2025-08-16T23:50:06.1909729Z 
2025-08-16T23:50:06.1909818Z # price\_importer.services\_common.db
2025-08-16T23:50:06.1909981Z 
2025-08-16T23:50:06.1910135Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T23:50:06.1910367Z 
2025-08-16T23:50:06.1910441Z #### build\_sqlalchemy\_url
2025-08-16T23:50:06.1910577Z 
2025-08-16T23:50:06.1910637Z ```python
2025-08-16T23:50:06.1910814Z def build_sqlalchemy_url() -> str
2025-08-16T23:50:06.1911017Z ```
2025-08-16T23:50:06.1911098Z 
2025-08-16T23:50:06.1911194Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:50:06.1911364Z 
2025-08-16T23:50:06.1911505Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T23:50:06.1911737Z 
2025-08-16T23:50:06.1911809Z #### build\_asyncpg\_dsn
2025-08-16T23:50:06.1911933Z 
2025-08-16T23:50:06.1911999Z ```python
2025-08-16T23:50:06.1912171Z def build_asyncpg_dsn() -> str
2025-08-16T23:50:06.1912378Z ```
2025-08-16T23:50:06.1912462Z 
2025-08-16T23:50:06.1912594Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:50:06.1912941Z 
2025-08-16T23:50:06.1913067Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T23:50:06.1913272Z 
2025-08-16T23:50:06.1913338Z #### refresh\_mvs
2025-08-16T23:50:06.1913453Z 
2025-08-16T23:50:06.1913516Z ```python
2025-08-16T23:50:06.1913715Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:50:06.1913965Z ```
2025-08-16T23:50:06.1914049Z 
2025-08-16T23:50:06.1914194Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:50:06.1914408Z 
2025-08-16T23:50:06.1914504Z <a id="price_importer.services_common"></a>
2025-08-16T23:50:06.1914681Z 
2025-08-16T23:50:06.1914767Z # price\_importer.services\_common
2025-08-16T23:50:06.1914924Z 
2025-08-16T23:50:06.1915029Z <a id="price_importer.services_common.base"></a>
2025-08-16T23:50:06.1915219Z 
2025-08-16T23:50:06.1915309Z # price\_importer.services\_common.base
2025-08-16T23:50:06.1915473Z 
2025-08-16T23:50:06.1915572Z <a id="price_importer.normaliser"></a>
2025-08-16T23:50:06.1915745Z 
2025-08-16T23:50:06.1915827Z # price\_importer.normaliser
2025-08-16T23:50:06.1915975Z 
2025-08-16T23:50:06.1916079Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T23:50:06.1916263Z 
2025-08-16T23:50:06.1916351Z # price\_importer.common.models\_vendor
2025-08-16T23:50:06.1916520Z 
2025-08-16T23:50:06.1916611Z <a id="price_importer.common.db_url"></a>
2025-08-16T23:50:06.1916780Z 
2025-08-16T23:50:06.1916871Z # price\_importer.common.db\_url
2025-08-16T23:50:06.1917017Z 
2025-08-16T23:50:06.1917118Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T23:50:06.1917310Z 
2025-08-16T23:50:06.1917372Z #### make\_dsn
2025-08-16T23:50:06.1917471Z 
2025-08-16T23:50:06.1917531Z ```python
2025-08-16T23:50:06.1917704Z def make_dsn(async_: bool = False) -> str
2025-08-16T23:50:06.1917930Z ```
2025-08-16T23:50:06.1918121Z 
2025-08-16T23:50:06.1918242Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T23:50:06.1918442Z 
2025-08-16T23:50:06.1918565Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T23:50:06.1918750Z 
2025-08-16T23:50:06.1918812Z #### build\_url
2025-08-16T23:50:06.1918914Z 
2025-08-16T23:50:06.1918974Z ```python
2025-08-16T23:50:06.1919142Z def build_url(async_: bool = False) -> str
2025-08-16T23:50:06.1919369Z ```
2025-08-16T23:50:06.1919449Z 
2025-08-16T23:50:06.1919573Z Return Postgres DSN built from environment variables.
2025-08-16T23:50:06.1919773Z 
2025-08-16T23:50:06.1919855Z <a id="price_importer.common"></a>
2025-08-16T23:50:06.1920015Z 
2025-08-16T23:50:06.1920090Z # price\_importer.common
2025-08-16T23:50:06.1920217Z 
2025-08-16T23:50:06.1920305Z <a id="price_importer.common.base"></a>
2025-08-16T23:50:06.1920477Z 
2025-08-16T23:50:06.1920558Z # price\_importer.common.base
2025-08-16T23:50:06.1920699Z 
2025-08-16T23:50:06.1920803Z <a id="price_importer.tests.conftest"></a>
2025-08-16T23:50:06.1920974Z 
2025-08-16T23:50:06.1921057Z # price\_importer.tests.conftest
2025-08-16T23:50:06.1921210Z 
2025-08-16T23:50:06.1921433Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T23:50:06.1921608Z 
2025-08-16T23:50:06.1921693Z # price\_importer.tests.test\_reader
2025-08-16T23:50:06.1921857Z 
2025-08-16T23:50:06.1921955Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T23:50:06.1922132Z 
2025-08-16T23:50:06.1922227Z # price\_importer.tests.test\_imports
2025-08-16T23:50:06.1922385Z 
2025-08-16T23:50:06.1922479Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T23:50:06.1922655Z 
2025-08-16T23:50:06.1922738Z # price\_importer.tests.test\_smoke
2025-08-16T23:50:06.1922893Z 
2025-08-16T23:50:06.1922997Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T23:50:06.1923185Z 
2025-08-16T23:50:06.1923274Z # price\_importer.tests.test\_normaliser
2025-08-16T23:50:06.1923437Z 
2025-08-16T23:50:06.1923526Z <a id="price_importer.tests"></a>
2025-08-16T23:50:06.1923674Z 
2025-08-16T23:50:06.1923749Z # price\_importer.tests
2025-08-16T23:50:06.1923875Z 
2025-08-16T23:50:06.1923956Z <a id="price_importer.reader"></a>
2025-08-16T23:50:06.1924224Z 
2025-08-16T23:50:06.1924301Z # price\_importer.reader
2025-08-16T23:50:06.1924431Z 
2025-08-16T23:50:06.1924527Z <a id="price_importer.reader.load_file"></a>
2025-08-16T23:50:06.1924696Z 
2025-08-16T23:50:06.1924766Z #### load\_file
2025-08-16T23:50:06.1924879Z 
2025-08-16T23:50:06.1924943Z ```python
2025-08-16T23:50:06.1925122Z def load_file(path: str | Path) -> Any
2025-08-16T23:50:06.1925339Z ```
2025-08-16T23:50:06.1925426Z 
2025-08-16T23:50:06.1925512Z Return DataFrame from CSV or Excel file.
2025-08-16T23:50:06.1925674Z 
2025-08-16T23:50:06.1925778Z Raises RuntimeError if pandas is unavailable.
2025-08-16T23:50:06.1925965Z 
2025-08-16T23:50:06.1926052Z <a id="price_importer.repository"></a>
2025-08-16T23:50:06.1926210Z 
2025-08-16T23:50:06.1926299Z # price\_importer.repository
2025-08-16T23:50:06.1926438Z 
2025-08-16T23:50:06.1926521Z <a id="price_importer.import"></a>
2025-08-16T23:50:06.1926676Z 
2025-08-16T23:50:06.1926751Z # price\_importer.import
2025-08-16T23:50:06.1926886Z 
2025-08-16T23:50:06.1926958Z <a id="fees_h10"></a>
2025-08-16T23:50:06.1927078Z 
2025-08-16T23:50:06.1927140Z # fees\_h10
2025-08-16T23:50:06.1927233Z 
2025-08-16T23:50:06.1927314Z <a id="fees_h10.worker"></a>
2025-08-16T23:50:06.1927444Z 
2025-08-16T23:50:06.1927509Z # fees\_h10.worker
2025-08-16T23:50:06.1927617Z 
2025-08-16T23:50:06.1927715Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-16T23:50:06.1927890Z 
2025-08-16T23:50:06.1927961Z #### list\_active\_asins
2025-08-16T23:50:06.1928306Z 
2025-08-16T23:50:06.1928373Z ```python
2025-08-16T23:50:06.1928549Z def list_active_asins() -> list[str]
2025-08-16T23:50:06.1928756Z ```
2025-08-16T23:50:06.1928835Z 
2025-08-16T23:50:06.1928952Z Return known ASINs or an empty list if unavailable.
2025-08-16T23:50:06.1929143Z 
2025-08-16T23:50:06.1929223Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T23:50:06.1929381Z 
2025-08-16T23:50:06.1929457Z # fees\_h10.tests.test\_smoke
2025-08-16T23:50:06.1929592Z 
2025-08-16T23:50:06.1929672Z <a id="fees_h10.tests"></a>
2025-08-16T23:50:06.1929809Z 
2025-08-16T23:50:06.1929871Z # fees\_h10.tests
2025-08-16T23:50:06.1929972Z 
2025-08-16T23:50:06.1930049Z <a id="fees_h10.client"></a>
2025-08-16T23:50:06.1930176Z 
2025-08-16T23:50:06.1930239Z # fees\_h10.client
2025-08-16T23:50:06.1930344Z 
2025-08-16T23:50:06.1930421Z <a id="fees_h10.repository"></a>
2025-08-16T23:50:06.1930561Z 
2025-08-16T23:50:06.1930629Z # fees\_h10.repository
2025-08-16T23:50:06.1930746Z 
2025-08-16T23:50:06.1930813Z <a id="emailer"></a>
2025-08-16T23:50:06.1930922Z 
2025-08-16T23:50:06.1930990Z # emailer
2025-08-16T23:50:06.1931075Z 
2025-08-16T23:50:06.1931175Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T23:50:06.1931350Z 
2025-08-16T23:50:06.1931442Z # emailer.tests.test\_import\_emailer
2025-08-16T23:50:06.1931601Z 
2025-08-16T23:50:06.1931685Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T23:50:06.1931842Z 
2025-08-16T23:50:06.1931919Z # emailer.tests.test\_smoke
2025-08-16T23:50:06.1932051Z 
2025-08-16T23:50:06.1932262Z <a id="emailer.tests"></a>
2025-08-16T23:50:06.1932399Z 
2025-08-16T23:50:06.1932465Z # emailer.tests
2025-08-16T23:50:06.1932565Z 
2025-08-16T23:50:06.1932654Z <a id="emailer.generate_body"></a>
2025-08-16T23:50:06.1932802Z 
2025-08-16T23:50:06.1932876Z # emailer.generate\_body
2025-08-16T23:50:06.1933005Z 
2025-08-16T23:50:06.1933076Z <a id="llm_server"></a>
2025-08-16T23:50:06.1933191Z 
2025-08-16T23:50:06.1933259Z # llm\_server
2025-08-16T23:50:06.1933354Z 
2025-08-16T23:50:06.1933431Z <a id="llm_server.app"></a>
2025-08-16T23:50:06.1933560Z 
2025-08-16T23:50:06.1933632Z # llm\_server.app
2025-08-16T23:50:06.1933735Z 
