2025-08-19T08:18:12.9165726Z ##[group]Run pydoc-markdown
2025-08-19T08:18:12.9166253Z [36;1mpydoc-markdown[0m
2025-08-19T08:18:12.9205949Z shell: /usr/bin/bash -e {0}
2025-08-19T08:18:12.9206180Z env:
2025-08-19T08:18:12.9206410Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:18:12.9206818Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T08:18:12.9207219Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:18:12.9207562Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:18:12.9207903Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:18:12.9208236Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T08:18:12.9208517Z ##[endgroup]
2025-08-19T08:18:13.3000468Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T08:18:13.3001347Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T08:18:13.3001934Z In "pydoc-markdown.yml"
2025-08-19T08:18:13.3002433Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T08:18:13.3003258Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T08:18:13.3003984Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T08:18:13.3004343Z 
2025-08-19T08:18:13.6384529Z <a id="__init__"></a>
2025-08-19T08:18:13.6384972Z 
2025-08-19T08:18:13.6385098Z # \_\_init\_\_
2025-08-19T08:18:13.6385296Z 
2025-08-19T08:18:13.6385430Z <a id="api"></a>
2025-08-19T08:18:13.6385631Z 
2025-08-19T08:18:13.6385740Z # api
2025-08-19T08:18:13.6386159Z 
2025-08-19T08:18:13.6386315Z <a id="api.errors"></a>
2025-08-19T08:18:13.6386556Z 
2025-08-19T08:18:13.6386686Z # api.errors
2025-08-19T08:18:13.6386872Z 
2025-08-19T08:18:13.6387025Z <a id="api.sentry_config"></a>
2025-08-19T08:18:13.6387299Z 
2025-08-19T08:18:13.6387439Z # api.sentry\_config
2025-08-19T08:18:13.6387658Z 
2025-08-19T08:18:13.6387827Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T08:18:13.6388155Z 
2025-08-19T08:18:13.6388309Z # api.tests.test\_sentry\_scrub
2025-08-19T08:18:13.6388626Z 
2025-08-19T08:18:13.6388789Z <a id="api.tests.test_errors_json"></a>
2025-08-19T08:18:13.6389105Z 
2025-08-19T08:18:13.6389252Z # api.tests.test\_errors\_json
2025-08-19T08:18:13.6389520Z 
2025-08-19T08:18:13.6389672Z <a id="api.tests.test_llm"></a>
2025-08-19T08:18:13.6389934Z 
2025-08-19T08:18:13.6390070Z # api.tests.test\_llm
2025-08-19T08:18:13.6390296Z 
2025-08-19T08:18:13.6390459Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T08:18:13.6390771Z 
2025-08-19T08:18:13.6390917Z # api.tests.test\_sentry\_event
2025-08-19T08:18:13.6391187Z 
2025-08-19T08:18:13.6391416Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T08:18:13.6391804Z 
2025-08-19T08:18:13.6391955Z ## DummyTransport Objects
2025-08-19T08:18:13.6392197Z 
2025-08-19T08:18:13.6392374Z ```python
2025-08-19T08:18:13.6392691Z class DummyTransport()
2025-08-19T08:18:13.6393019Z ```
2025-08-19T08:18:13.6393180Z 
2025-08-19T08:18:13.6393496Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T08:18:13.6394395Z 
2025-08-19T08:18:13.6394553Z #### capture\_envelope
2025-08-19T08:18:13.6394783Z 
2025-08-19T08:18:13.6394901Z ```python
2025-08-19T08:18:13.6395227Z def capture_envelope(envelope)
2025-08-19T08:18:13.6395598Z ```
2025-08-19T08:18:13.6395757Z 
2025-08-19T08:18:13.6396248Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T08:18:13.6396646Z 
2025-08-19T08:18:13.6396803Z <a id="api.tests.test_cors"></a>
2025-08-19T08:18:13.6397100Z 
2025-08-19T08:18:13.6397234Z # api.tests.test\_cors
2025-08-19T08:18:13.6397457Z 
2025-08-19T08:18:13.6397616Z <a id="api.tests.test_imports"></a>
2025-08-19T08:18:13.6397907Z 
2025-08-19T08:18:13.6398053Z # api.tests.test\_imports
2025-08-19T08:18:13.6398300Z 
2025-08-19T08:18:13.6398470Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T08:18:13.6398775Z 
2025-08-19T08:18:13.6398924Z # api.tests.test\_rate\_limit
2025-08-19T08:18:13.6399203Z 
2025-08-19T08:18:13.6399381Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T08:18:13.6400104Z 
2025-08-19T08:18:13.6400232Z #### app
2025-08-19T08:18:13.6400397Z 
2025-08-19T08:18:13.6400512Z noqa: E402
2025-08-19T08:18:13.6400680Z 
2025-08-19T08:18:13.6400853Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T08:18:13.6401157Z 
2025-08-19T08:18:13.6401305Z # api.tests.test\_entrypoint
2025-08-19T08:18:13.6401568Z 
2025-08-19T08:18:13.6401718Z <a id="api.tests.test_health"></a>
2025-08-19T08:18:13.6401998Z 
2025-08-19T08:18:13.6402143Z # api.tests.test\_health
2025-08-19T08:18:13.6402377Z 
2025-08-19T08:18:13.6402521Z <a id="api.logging_config"></a>
2025-08-19T08:18:13.6402780Z 
2025-08-19T08:18:13.6402920Z # api.logging\_config
2025-08-19T08:18:13.6403139Z 
2025-08-19T08:18:13.6403287Z <a id="api.migrations.env"></a>
2025-08-19T08:18:13.6403557Z 
2025-08-19T08:18:13.6403693Z # api.migrations.env
2025-08-19T08:18:13.6403906Z 
2025-08-19T08:18:13.6404128Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T08:18:13.6404513Z 
2025-08-19T08:18:13.6404710Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T08:18:13.6405081Z 
2025-08-19T08:18:13.6405291Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T08:18:13.6405654Z 
2025-08-19T08:18:13.6406021Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T08:18:13.6406365Z 
2025-08-19T08:18:13.6406651Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T08:18:13.6407104Z 
2025-08-19T08:18:13.6407367Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T08:18:13.6407780Z 
2025-08-19T08:18:13.6408001Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T08:18:13.6408379Z 
2025-08-19T08:18:13.6408587Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T08:18:13.6408935Z 
2025-08-19T08:18:13.6409156Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T08:18:13.6409539Z 
2025-08-19T08:18:13.6409728Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T08:18:13.6410068Z 
2025-08-19T08:18:13.6410306Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T08:18:13.6410710Z 
2025-08-19T08:18:13.6410910Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T08:18:13.6411274Z 
2025-08-19T08:18:13.6411497Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T08:18:13.6411867Z 
2025-08-19T08:18:13.6412065Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T08:18:13.6412426Z 
2025-08-19T08:18:13.6412656Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T08:18:13.6413043Z 
2025-08-19T08:18:13.6413253Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T08:18:13.6413609Z 
2025-08-19T08:18:13.6413866Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T08:18:13.6414295Z 
2025-08-19T08:18:13.6414533Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T08:18:13.6414917Z 
2025-08-19T08:18:13.6415147Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T08:18:13.6415540Z 
2025-08-19T08:18:13.6415743Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T08:18:13.6416553Z 
2025-08-19T08:18:13.6416829Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T08:18:13.6417340Z 
2025-08-19T08:18:13.6417575Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T08:18:13.6417994Z 
2025-08-19T08:18:13.6418197Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T08:18:13.6418575Z 
2025-08-19T08:18:13.6418752Z # api.migrations.versions.0001\_baseline
2025-08-19T08:18:13.6419157Z 
2025-08-19T08:18:13.6419319Z <a id="api.migrations.versions"></a>
2025-08-19T08:18:13.6419633Z 
2025-08-19T08:18:13.6419785Z # api.migrations.versions
2025-08-19T08:18:13.6420039Z 
2025-08-19T08:18:13.6420196Z <a id="api.migrations"></a>
2025-08-19T08:18:13.6420450Z 
2025-08-19T08:18:13.6420576Z # api.migrations
2025-08-19T08:18:13.6420785Z 
2025-08-19T08:18:13.6420911Z <a id="api.db"></a>
2025-08-19T08:18:13.6421109Z 
2025-08-19T08:18:13.6421220Z # api.db
2025-08-19T08:18:13.6421390Z 
2025-08-19T08:18:13.6421535Z <a id="api.routes.stats"></a>
2025-08-19T08:18:13.6422066Z 
2025-08-19T08:18:13.6422208Z # api.routes.stats
2025-08-19T08:18:13.6422409Z 
2025-08-19T08:18:13.6422565Z <a id="api.routes.stats.kpi"></a>
2025-08-19T08:18:13.6422847Z 
2025-08-19T08:18:13.6422965Z #### kpi
2025-08-19T08:18:13.6423126Z 
2025-08-19T08:18:13.6423239Z ```python
2025-08-19T08:18:13.6423544Z @router.get("/stats/kpi")
2025-08-19T08:18:13.6424094Z def kpi() -> List[Dict[str, int]]
2025-08-19T08:18:13.6424482Z ```
2025-08-19T08:18:13.6424635Z 
2025-08-19T08:18:13.6424783Z Return KPI metrics (mock).
2025-08-19T08:18:13.6425034Z 
2025-08-19T08:18:13.6425216Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T08:18:13.6425547Z 
2025-08-19T08:18:13.6425687Z #### roi\_by\_vendor
2025-08-19T08:18:13.6426206Z 
2025-08-19T08:18:13.6426335Z ```python
2025-08-19T08:18:13.6426662Z @router.get("/stats/roi_by_vendor")
2025-08-19T08:18:13.6427125Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T08:18:13.6427556Z ```
2025-08-19T08:18:13.6427705Z 
2025-08-19T08:18:13.6427876Z Return ROI percent by vendor.
2025-08-19T08:18:13.6428140Z 
2025-08-19T08:18:13.6428303Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T08:18:13.6428615Z 
2025-08-19T08:18:13.6428742Z #### roi\_trend
2025-08-19T08:18:13.6428926Z 
2025-08-19T08:18:13.6429041Z ```python
2025-08-19T08:18:13.6429343Z @router.get("/stats/roi_trend")
2025-08-19T08:18:13.6429777Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T08:18:13.6430211Z ```
2025-08-19T08:18:13.6430357Z 
2025-08-19T08:18:13.6430490Z Return 30-day ROI trend.
2025-08-19T08:18:13.6430732Z 
2025-08-19T08:18:13.6430874Z <a id="api.routes.roi"></a>
2025-08-19T08:18:13.6431123Z 
2025-08-19T08:18:13.6431256Z # api.routes.roi
2025-08-19T08:18:13.6431452Z 
2025-08-19T08:18:13.6431601Z <a id="api.routes.health"></a>
2025-08-19T08:18:13.6431870Z 
2025-08-19T08:18:13.6431996Z # api.routes.health
2025-08-19T08:18:13.6432199Z 
2025-08-19T08:18:13.6432366Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T08:18:13.6432687Z 
2025-08-19T08:18:13.6432813Z #### MAX\_SKEW
2025-08-19T08:18:13.6432993Z 
2025-08-19T08:18:13.6433109Z seconds
2025-08-19T08:18:13.6433268Z 
2025-08-19T08:18:13.6433429Z <a id="api.routes.health.health"></a>
2025-08-19T08:18:13.6433739Z 
2025-08-19T08:18:13.6433853Z #### health
2025-08-19T08:18:13.6434019Z 
2025-08-19T08:18:13.6434129Z ```python
2025-08-19T08:18:13.6434478Z @router.get("/health", include_in_schema=False)
2025-08-19T08:18:13.6435178Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T08:18:13.6435993Z ```
2025-08-19T08:18:13.6436158Z 
2025-08-19T08:18:13.6436388Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T08:18:13.6436755Z 
2025-08-19T08:18:13.6436917Z <a id="api.routes.repository"></a>
2025-08-19T08:18:13.6437212Z 
2025-08-19T08:18:13.6437354Z # api.routes.repository
2025-08-19T08:18:13.6437583Z 
2025-08-19T08:18:13.6437713Z <a id="api.routes"></a>
2025-08-19T08:18:13.6437935Z 
2025-08-19T08:18:13.6438051Z # api.routes
2025-08-19T08:18:13.6438227Z 
2025-08-19T08:18:13.6438622Z <a id="api.models.fee"></a>
2025-08-19T08:18:13.6438875Z 
2025-08-19T08:18:13.6438997Z # api.models.fee
2025-08-19T08:18:13.6439198Z 
2025-08-19T08:18:13.6439331Z <a id="api.models"></a>
2025-08-19T08:18:13.6439549Z 
2025-08-19T08:18:13.6439659Z # api.models
2025-08-19T08:18:13.6439823Z 
2025-08-19T08:18:13.6439959Z <a id="api.roi_repository"></a>
2025-08-19T08:18:13.6440201Z 
2025-08-19T08:18:13.6440324Z # api.roi\_repository
2025-08-19T08:18:13.6440527Z 
2025-08-19T08:18:13.6440650Z <a id="api.main"></a>
2025-08-19T08:18:13.6440857Z 
2025-08-19T08:18:13.6440980Z # api.main
2025-08-19T08:18:13.6441148Z 
2025-08-19T08:18:13.6441289Z <a id="api.main.ready"></a>
2025-08-19T08:18:13.6441547Z 
2025-08-19T08:18:13.6441663Z #### ready
2025-08-19T08:18:13.6441828Z 
2025-08-19T08:18:13.6441943Z ```python
2025-08-19T08:18:13.6442423Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T08:18:13.6443319Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T08:18:13.6444225Z                                                                       str]
2025-08-19T08:18:13.6444661Z ```
2025-08-19T08:18:13.6444814Z 
2025-08-19T08:18:13.6444999Z Return 200 only when migrations are at head.
2025-08-19T08:18:13.6445340Z 
2025-08-19T08:18:13.6445474Z <a id="api.config"></a>
2025-08-19T08:18:13.6445695Z 
2025-08-19T08:18:13.6445996Z # api.config
2025-08-19T08:18:13.6446187Z 
2025-08-19T08:18:13.6446307Z <a id="etl"></a>
2025-08-19T08:18:13.6446493Z 
2025-08-19T08:18:13.6446610Z # etl
2025-08-19T08:18:13.6446764Z 
2025-08-19T08:18:13.6446910Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T08:18:13.6447197Z 
2025-08-19T08:18:13.6447332Z # etl.fba\_fee\_ingestor
2025-08-19T08:18:13.6447560Z 
2025-08-19T08:18:13.6447706Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T08:18:13.6447981Z 
2025-08-19T08:18:13.6448111Z # etl.sp\_fees\_ingestor
2025-08-19T08:18:13.6448331Z 
2025-08-19T08:18:13.6448482Z <a id="etl.keepa_ingestor"></a>
2025-08-19T08:18:13.6448751Z 
2025-08-19T08:18:13.6448891Z # etl.keepa\_ingestor
2025-08-19T08:18:13.6449107Z 
2025-08-19T08:18:13.6449225Z <a id="etl.db"></a>
2025-08-19T08:18:13.6449423Z 
2025-08-19T08:18:13.6449534Z # etl.db
2025-08-19T08:18:13.6449705Z 
2025-08-19T08:18:13.6449856Z <a id="etl.dialects.schemas"></a>
2025-08-19T08:18:13.6450132Z 
2025-08-19T08:18:13.6450270Z # etl.dialects.schemas
2025-08-19T08:18:13.6450490Z 
2025-08-19T08:18:13.6450681Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T08:18:13.6451035Z 
2025-08-19T08:18:13.6451196Z # etl.dialects.amazon\_reimbursements
2025-08-19T08:18:13.6451500Z 
2025-08-19T08:18:13.6451674Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T08:18:13.6452008Z 
2025-08-19T08:18:13.6452165Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T08:18:13.6452460Z 
2025-08-19T08:18:13.6452632Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T08:18:13.6452947Z 
2025-08-19T08:18:13.6453096Z # etl.dialects.amazon\_returns
2025-08-19T08:18:13.6453366Z 
2025-08-19T08:18:13.6453556Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T08:18:13.6453882Z 
2025-08-19T08:18:13.6454040Z # etl.dialects.amazon\_fee\_preview
2025-08-19T08:18:13.6454353Z 
2025-08-19T08:18:13.6454554Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T08:18:13.6454910Z 
2025-08-19T08:18:13.6455094Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T08:18:13.6455415Z 
2025-08-19T08:18:13.6455596Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T08:18:13.6456118Z 
2025-08-19T08:18:13.6456279Z # etl.dialects.amazon\_settlements
2025-08-19T08:18:13.6456573Z 
2025-08-19T08:18:13.6456709Z <a id="etl.dialects"></a>
2025-08-19T08:18:13.6456950Z 
2025-08-19T08:18:13.6457068Z # etl.dialects
2025-08-19T08:18:13.6457250Z 
2025-08-19T08:18:13.6457377Z <a id="ingest"></a>
2025-08-19T08:18:13.6457574Z 
2025-08-19T08:18:13.6457686Z # ingest
2025-08-19T08:18:13.6457842Z 
2025-08-19T08:18:13.6457997Z <a id="ingest.maintenance"></a>
2025-08-19T08:18:13.6458263Z 
2025-08-19T08:18:13.6458391Z # ingest.maintenance
2025-08-19T08:18:13.6458847Z 
2025-08-19T08:18:13.6458994Z <a id="ingest.copy_loader"></a>
2025-08-19T08:18:13.6459257Z 
2025-08-19T08:18:13.6459396Z # ingest.copy\_loader
2025-08-19T08:18:13.6459610Z 
2025-08-19T08:18:13.6459793Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T08:18:13.6460131Z 
2025-08-19T08:18:13.6460270Z #### copy\_df\_via\_temp
2025-08-19T08:18:13.6460496Z 
2025-08-19T08:18:13.6460609Z ```python
2025-08-19T08:18:13.6460923Z def copy_df_via_temp(engine: Engine,
2025-08-19T08:18:13.6461350Z                      df: pd.DataFrame,
2025-08-19T08:18:13.6461778Z                      target_table: str,
2025-08-19T08:18:13.6462174Z                      *,
2025-08-19T08:18:13.6462552Z                      target_schema: Optional[str] = None,
2025-08-19T08:18:13.6463039Z                      columns: Sequence[str],
2025-08-19T08:18:13.6463536Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T08:18:13.6464061Z                      analyze_after: bool = False,
2025-08-19T08:18:13.6464917Z                      connection: Any | None = None) -> int
2025-08-19T08:18:13.6465376Z ```
2025-08-19T08:18:13.6465537Z 
2025-08-19T08:18:13.6466066Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T08:18:13.6466540Z 
2025-08-19T08:18:13.6466700Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T08:18:13.6466998Z 
2025-08-19T08:18:13.6467152Z # ingest.tests.test\_smoke
2025-08-19T08:18:13.6467402Z 
2025-08-19T08:18:13.6467543Z <a id="ingest.tests"></a>
2025-08-19T08:18:13.6467790Z 
2025-08-19T08:18:13.6467911Z # ingest.tests
2025-08-19T08:18:13.6468098Z 
2025-08-19T08:18:13.6468246Z <a id="ingest.upload_router"></a>
2025-08-19T08:18:13.6468537Z 
2025-08-19T08:18:13.6468670Z # ingest.upload\_router
2025-08-19T08:18:13.6468896Z 
2025-08-19T08:18:13.6469050Z <a id="ingest.email_watcher"></a>
2025-08-19T08:18:13.6469322Z 
2025-08-19T08:18:13.6469458Z # ingest.email\_watcher
2025-08-19T08:18:13.6469684Z 
2025-08-19T08:18:13.6469846Z <a id="ingest.email_watcher.main"></a>
2025-08-19T08:18:13.6470164Z 
2025-08-19T08:18:13.6470276Z #### main
2025-08-19T08:18:13.6470448Z 
2025-08-19T08:18:13.6470562Z ```python
2025-08-19T08:18:13.6470864Z def main() -> dict[str, str]
2025-08-19T08:18:13.6471216Z ```
2025-08-19T08:18:13.6471367Z 
2025-08-19T08:18:13.6471632Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T08:18:13.6472086Z 
2025-08-19T08:18:13.6472327Z Returns {"status": "success"} when processing completes.
2025-08-19T08:18:13.6472717Z 
2025-08-19T08:18:13.6472856Z <a id="ingest.tasks"></a>
2025-08-19T08:18:13.6473098Z 
2025-08-19T08:18:13.6473219Z # ingest.tasks
2025-08-19T08:18:13.6473403Z 
2025-08-19T08:18:13.6473586Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T08:18:13.6473905Z 
2025-08-19T08:18:13.6474032Z #### task\_import\_file
2025-08-19T08:18:13.6474240Z 
2025-08-19T08:18:13.6474366Z ```python
2025-08-19T08:18:13.6474741Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T08:18:13.6475278Z def task_import_file(self: Any,
2025-08-19T08:18:13.6475689Z                      uri: str,
2025-08-19T08:18:13.6476303Z                      report_type: Optional[str] = None,
2025-08-19T08:18:13.6476818Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T08:18:13.6477256Z ```
2025-08-19T08:18:13.6477408Z 
2025-08-19T08:18:13.6477658Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T08:18:13.6478048Z 
2025-08-19T08:18:13.6478198Z <a id="ingest.celery_app"></a>
2025-08-19T08:18:13.6478469Z 
2025-08-19T08:18:13.6478599Z # ingest.celery\_app
2025-08-19T08:18:13.6478813Z 
2025-08-19T08:18:13.6478964Z <a id="ingest.ingest_router"></a>
2025-08-19T08:18:13.6479245Z 
2025-08-19T08:18:13.6479378Z # ingest.ingest\_router
2025-08-19T08:18:13.6479601Z 
2025-08-19T08:18:13.6479756Z <a id="logistics_etl"></a>
2025-08-19T08:18:13.6480000Z 
2025-08-19T08:18:13.6480121Z # logistics\_etl
2025-08-19T08:18:13.6480321Z 
2025-08-19T08:18:13.6480458Z Daily logistics ETL job.
2025-08-19T08:18:13.6480701Z 
2025-08-19T08:18:13.6481305Z <a id="logistics_etl.__main__"></a>
2025-08-19T08:18:13.6481617Z 
2025-08-19T08:18:13.6481762Z # logistics\_etl.\_\_main\_\_
2025-08-19T08:18:13.6482020Z 
2025-08-19T08:18:13.6482174Z <a id="logistics_etl.dsn"></a>
2025-08-19T08:18:13.6482430Z 
2025-08-19T08:18:13.6482559Z # logistics\_etl.dsn
2025-08-19T08:18:13.6482779Z 
2025-08-19T08:18:13.6482995Z Local DSN builder to avoid cross-service dependency.
2025-08-19T08:18:13.6483377Z 
2025-08-19T08:18:13.6483543Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T08:18:13.6483864Z 
2025-08-19T08:18:13.6483986Z #### build\_dsn
2025-08-19T08:18:13.6484177Z 
2025-08-19T08:18:13.6484300Z ```python
2025-08-19T08:18:13.6484626Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:18:13.6485054Z ```
2025-08-19T08:18:13.6485207Z 
2025-08-19T08:18:13.6485470Z Return a Postgres DSN assembled from environment variables.
2025-08-19T08:18:13.6486208Z 
2025-08-19T08:18:13.6486509Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T08:18:13.6487488Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T08:18:13.6488137Z error when any required variable is missing.
2025-08-19T08:18:13.6488468Z 
2025-08-19T08:18:13.6488649Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T08:18:13.6488972Z 
2025-08-19T08:18:13.6489120Z # logistics\_etl.tests.conftest
2025-08-19T08:18:13.6489394Z 
2025-08-19T08:18:13.6489587Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T08:18:13.6489945Z 
2025-08-19T08:18:13.6490104Z # logistics\_etl.tests.test\_repository
2025-08-19T08:18:13.6490420Z 
2025-08-19T08:18:13.6490594Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T08:18:13.6490914Z 
2025-08-19T08:18:13.6491080Z # logistics\_etl.tests.test\_cron
2025-08-19T08:18:13.6491366Z 
2025-08-19T08:18:13.6491548Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T08:18:13.6491890Z 
2025-08-19T08:18:13.6492044Z # logistics\_etl.tests.test\_imports
2025-08-19T08:18:13.6492401Z 
2025-08-19T08:18:13.6492585Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T08:18:13.6492926Z 
2025-08-19T08:18:13.6493078Z # logistics\_etl.tests.test\_smoke
2025-08-19T08:18:13.6493356Z 
2025-08-19T08:18:13.6493540Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T08:18:13.6493861Z 
2025-08-19T08:18:13.6494017Z # logistics\_etl.tests.test\_client
2025-08-19T08:18:13.6494317Z 
2025-08-19T08:18:13.6494465Z <a id="logistics_etl.tests"></a>
2025-08-19T08:18:13.6494733Z 
2025-08-19T08:18:13.6494866Z # logistics\_etl.tests
2025-08-19T08:18:13.6495095Z 
2025-08-19T08:18:13.6495239Z <a id="logistics_etl.flow"></a>
2025-08-19T08:18:13.6495502Z 
2025-08-19T08:18:13.6495638Z # logistics\_etl.flow
2025-08-19T08:18:13.6496025Z 
2025-08-19T08:18:13.6496176Z <a id="logistics_etl.client"></a>
2025-08-19T08:18:13.6496471Z 
2025-08-19T08:18:13.6496607Z # logistics\_etl.client
2025-08-19T08:18:13.6496831Z 
2025-08-19T08:18:13.6496976Z <a id="logistics_etl.cron"></a>
2025-08-19T08:18:13.6497255Z 
2025-08-19T08:18:13.6497385Z # logistics\_etl.cron
2025-08-19T08:18:13.6497615Z 
2025-08-19T08:18:13.6497762Z <a id="logistics_etl.db"></a>
2025-08-19T08:18:13.6498019Z 
2025-08-19T08:18:13.6526516Z # logistics\_etl.db
2025-08-19T08:18:13.6526804Z 
2025-08-19T08:18:13.6526968Z <a id="logistics_etl.repository"></a>
2025-08-19T08:18:13.6527246Z 
2025-08-19T08:18:13.6527393Z # logistics\_etl.repository
2025-08-19T08:18:13.6527607Z 
2025-08-19T08:18:13.6527729Z <a id="alert_bot"></a>
2025-08-19T08:18:13.6527923Z 
2025-08-19T08:18:13.6528030Z # alert\_bot
2025-08-19T08:18:13.6528181Z 
2025-08-19T08:18:13.6528325Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T08:18:13.6528587Z 
2025-08-19T08:18:13.6528708Z # alert\_bot.tests.test\_smoke
2025-08-19T08:18:13.6528933Z 
2025-08-19T08:18:13.6529053Z <a id="alert_bot.tests"></a>
2025-08-19T08:18:13.6529269Z 
2025-08-19T08:18:13.6529385Z # alert\_bot.tests
2025-08-19T08:18:13.6529557Z 
2025-08-19T08:18:13.6529683Z <a id="alert_bot.alert_bot"></a>
2025-08-19T08:18:13.6529909Z 
2025-08-19T08:18:13.6530041Z # alert\_bot.alert\_bot
2025-08-19T08:18:13.6530444Z 
2025-08-19T08:18:13.6530558Z <a id="alert_bot.rules"></a>
2025-08-19T08:18:13.6530772Z 
2025-08-19T08:18:13.6530874Z # alert\_bot.rules
2025-08-19T08:18:13.6531032Z 
2025-08-19T08:18:13.6531136Z <a id="common"></a>
2025-08-19T08:18:13.6531310Z 
2025-08-19T08:18:13.6531401Z # common
2025-08-19T08:18:13.6531533Z 
2025-08-19T08:18:13.6531648Z <a id="common.dsn"></a>
2025-08-19T08:18:13.6531819Z 
2025-08-19T08:18:13.6531914Z # common.dsn
2025-08-19T08:18:13.6532062Z 
2025-08-19T08:18:13.6532182Z <a id="common.dsn.build_dsn"></a>
2025-08-19T08:18:13.6532410Z 
2025-08-19T08:18:13.6532510Z #### build\_dsn
2025-08-19T08:18:13.6532676Z 
2025-08-19T08:18:13.6532772Z ```python
2025-08-19T08:18:13.6533049Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:18:13.6533389Z ```
2025-08-19T08:18:13.6533516Z 
2025-08-19T08:18:13.6533708Z Return a Postgres DSN, validating required variables.
2025-08-19T08:18:13.6534024Z 
2025-08-19T08:18:13.6534320Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T08:18:13.6535209Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T08:18:13.6536055Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T08:18:13.6536549Z missing.
2025-08-19T08:18:13.6536692Z 
2025-08-19T08:18:13.6536833Z <a id="common.models_vendor"></a>
2025-08-19T08:18:13.6537059Z 
2025-08-19T08:18:13.6537169Z # common.models\_vendor
2025-08-19T08:18:13.6537343Z 
2025-08-19T08:18:13.6537482Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T08:18:13.6537748Z 
2025-08-19T08:18:13.6537857Z ## Vendor Objects
2025-08-19T08:18:13.6538027Z 
2025-08-19T08:18:13.6538120Z ```python
2025-08-19T08:18:13.6538359Z class Vendor(Base)
2025-08-19T08:18:13.6538605Z ```
2025-08-19T08:18:13.6538725Z 
2025-08-19T08:18:13.6538847Z Vendor of inventory items.
2025-08-19T08:18:13.6539050Z 
2025-08-19T08:18:13.6539201Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T08:18:13.6539487Z 
2025-08-19T08:18:13.6539602Z ## VendorPrice Objects
2025-08-19T08:18:13.6539775Z 
2025-08-19T08:18:13.6539865Z ```python
2025-08-19T08:18:13.6540113Z class VendorPrice(Base)
2025-08-19T08:18:13.6540375Z ```
2025-08-19T08:18:13.6540503Z 
2025-08-19T08:18:13.6540657Z Association table linking vendors to pricing.
2025-08-19T08:18:13.6540934Z 
2025-08-19T08:18:13.6541062Z <a id="common.db_url"></a>
2025-08-19T08:18:13.6541260Z 
2025-08-19T08:18:13.6541358Z # common.db\_url
2025-08-19T08:18:13.6541522Z 
2025-08-19T08:18:13.6541648Z <a id="common.db_url.build_url"></a>
2025-08-19T08:18:13.6541886Z 
2025-08-19T08:18:13.6541986Z #### build\_url
2025-08-19T08:18:13.6542145Z 
2025-08-19T08:18:13.6542244Z ```python
2025-08-19T08:18:13.6542513Z def build_url(async_: bool = True) -> str
2025-08-19T08:18:13.6542852Z ```
2025-08-19T08:18:13.6542970Z 
2025-08-19T08:18:13.6543119Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:18:13.6543381Z 
2025-08-19T08:18:13.6543493Z <a id="common.keepa"></a>
2025-08-19T08:18:13.6543700Z 
2025-08-19T08:18:13.6543800Z # common.keepa
2025-08-19T08:18:13.6543948Z 
2025-08-19T08:18:13.6544053Z <a id="common.llm"></a>
2025-08-19T08:18:13.6544234Z 
2025-08-19T08:18:13.6544328Z # common.llm
2025-08-19T08:18:13.6544469Z 
2025-08-19T08:18:13.6544588Z <a id="common.settings"></a>
2025-08-19T08:18:13.6544800Z 
2025-08-19T08:18:13.6544910Z # common.settings
2025-08-19T08:18:13.6545083Z 
2025-08-19T08:18:13.6545189Z <a id="common.db"></a>
2025-08-19T08:18:13.6545360Z 
2025-08-19T08:18:13.6545456Z # common.db
2025-08-19T08:18:13.6545604Z 
2025-08-19T08:18:13.6545748Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T08:18:13.6546174Z 
2025-08-19T08:18:13.6546301Z #### build\_sqlalchemy\_url
2025-08-19T08:18:13.6546502Z 
2025-08-19T08:18:13.6546598Z ```python
2025-08-19T08:18:13.6546862Z def build_sqlalchemy_url() -> str
2025-08-19T08:18:13.6547176Z ```
2025-08-19T08:18:13.6547305Z 
2025-08-19T08:18:13.6547447Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:18:13.6547712Z 
2025-08-19T08:18:13.6548109Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T08:18:13.6548378Z 
2025-08-19T08:18:13.6548489Z #### build\_asyncpg\_dsn
2025-08-19T08:18:13.6548676Z 
2025-08-19T08:18:13.6548782Z ```python
2025-08-19T08:18:13.6549037Z def build_asyncpg_dsn() -> str
2025-08-19T08:18:13.6549346Z ```
2025-08-19T08:18:13.6549468Z 
2025-08-19T08:18:13.6549665Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:18:13.6550001Z 
2025-08-19T08:18:13.6550131Z <a id="common.db.refresh_mvs"></a>
2025-08-19T08:18:13.6550369Z 
2025-08-19T08:18:13.6550477Z #### refresh\_mvs
2025-08-19T08:18:13.6550634Z 
2025-08-19T08:18:13.6550725Z ```python
2025-08-19T08:18:13.6551024Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:18:13.6551394Z ```
2025-08-19T08:18:13.6551520Z 
2025-08-19T08:18:13.6551724Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:18:13.6552050Z 
2025-08-19T08:18:13.6552167Z <a id="common.config"></a>
2025-08-19T08:18:13.6552359Z 
2025-08-19T08:18:13.6552628Z # common.config
2025-08-19T08:18:13.6552779Z 
2025-08-19T08:18:13.6552896Z <a id="common.base"></a>
2025-08-19T08:18:13.6553083Z 
2025-08-19T08:18:13.6553179Z # common.base
2025-08-19T08:18:13.6553324Z 
2025-08-19T08:18:13.6553449Z <a id="common.base.Base"></a>
2025-08-19T08:18:13.6553652Z 
2025-08-19T08:18:13.6553747Z ## Base Objects
2025-08-19T08:18:13.6553895Z 
2025-08-19T08:18:13.6553986Z ```python
2025-08-19T08:18:13.6554223Z class Base(DeclarativeBase)
2025-08-19T08:18:13.6554512Z ```
2025-08-19T08:18:13.6554633Z 
2025-08-19T08:18:13.6554762Z Base class for SQLAlchemy models.
2025-08-19T08:18:13.6554991Z 
2025-08-19T08:18:13.6555097Z <a id="repricer"></a>
2025-08-19T08:18:13.6555268Z 
2025-08-19T08:18:13.6555373Z # repricer
2025-08-19T08:18:13.6555508Z 
2025-08-19T08:18:13.6555642Z <a id="repricer.app.schemas"></a>
2025-08-19T08:18:13.6556028Z 
2025-08-19T08:18:13.6556147Z # repricer.app.schemas
2025-08-19T08:18:13.6556334Z 
2025-08-19T08:18:13.6556461Z <a id="repricer.app.deps"></a>
2025-08-19T08:18:13.6556689Z 
2025-08-19T08:18:13.6556799Z # repricer.app.deps
2025-08-19T08:18:13.6556972Z 
2025-08-19T08:18:13.6557155Z Placeholder module for Keepa / SP-API clients.
2025-08-19T08:18:13.6557442Z 
2025-08-19T08:18:13.6557566Z <a id="repricer.app.logic"></a>
2025-08-19T08:18:13.6557798Z 
2025-08-19T08:18:13.6557911Z # repricer.app.logic
2025-08-19T08:18:13.6558087Z 
2025-08-19T08:18:13.6558244Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T08:18:13.6558515Z 
2025-08-19T08:18:13.6558613Z #### MIN\_MARGIN
2025-08-19T08:18:13.6558767Z 
2025-08-19T08:18:13.6558866Z 15 % ROI
2025-08-19T08:18:13.6558998Z 
2025-08-19T08:18:13.6559159Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T08:18:13.6559452Z 
2025-08-19T08:18:13.6559556Z #### compute\_price
2025-08-19T08:18:13.6559720Z 
2025-08-19T08:18:13.6559815Z ```python
2025-08-19T08:18:13.6560188Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T08:18:13.6560652Z ```
2025-08-19T08:18:13.6560777Z 
2025-08-19T08:18:13.6560953Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T08:18:13.6561389Z Replace with real competitive logic later.
2025-08-19T08:18:13.6561645Z 
2025-08-19T08:18:13.6561771Z <a id="repricer.app.main"></a>
2025-08-19T08:18:13.6561990Z 
2025-08-19T08:18:13.6562102Z # repricer.app.main
2025-08-19T08:18:13.6562265Z 
2025-08-19T08:18:13.6562377Z <a id="repricer.app"></a>
2025-08-19T08:18:13.6562576Z 
2025-08-19T08:18:13.6562674Z # repricer.app
2025-08-19T08:18:13.6562824Z 
2025-08-19T08:18:13.6562970Z <a id="repricer.tests.test_imports"></a>
2025-08-19T08:18:13.6563233Z 
2025-08-19T08:18:13.6563354Z # repricer.tests.test\_imports
2025-08-19T08:18:13.6563581Z 
2025-08-19T08:18:13.6563714Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T08:18:13.6563963Z 
2025-08-19T08:18:13.6564083Z # repricer.tests.test\_smoke
2025-08-19T08:18:13.6564299Z 
2025-08-19T08:18:13.6564414Z <a id="repricer.tests"></a>
2025-08-19T08:18:13.6564612Z 
2025-08-19T08:18:13.6564718Z # repricer.tests
2025-08-19T08:18:13.6565052Z 
2025-08-19T08:18:13.6565150Z <a id="db"></a>
2025-08-19T08:18:13.6565309Z 
2025-08-19T08:18:13.6565397Z # db
2025-08-19T08:18:13.6565522Z 
2025-08-19T08:18:13.6565636Z <a id="db.utils.views"></a>
2025-08-19T08:18:13.6565989Z 
2025-08-19T08:18:13.6566097Z # db.utils.views
2025-08-19T08:18:13.6566256Z 
2025-08-19T08:18:13.6566402Z <a id="db.utils.views.replace_view"></a>
2025-08-19T08:18:13.6566652Z 
2025-08-19T08:18:13.6566751Z #### replace\_view
2025-08-19T08:18:13.6566909Z 
2025-08-19T08:18:13.6567011Z ```python
2025-08-19T08:18:13.6567290Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T08:18:13.6567670Z ```
2025-08-19T08:18:13.6567788Z 
2025-08-19T08:18:13.6567921Z Drop and recreate a SQL view atomically.
2025-08-19T08:18:13.6568184Z 
2025-08-19T08:18:13.6568291Z <a id="db.utils"></a>
2025-08-19T08:18:13.6568456Z 
2025-08-19T08:18:13.6568557Z # db.utils
2025-08-19T08:18:13.6568691Z 
2025-08-19T08:18:13.6568804Z <a id="price_importer"></a>
2025-08-19T08:18:13.6569007Z 
2025-08-19T08:18:13.6569357Z # price\_importer
2025-08-19T08:18:13.6569523Z 
2025-08-19T08:18:13.6569682Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T08:18:13.6569972Z 
2025-08-19T08:18:13.6570113Z # price\_importer.services\_common.dsn
2025-08-19T08:18:13.6570376Z 
2025-08-19T08:18:13.6570573Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T08:18:13.6570887Z 
2025-08-19T08:18:13.6570984Z #### build\_dsn
2025-08-19T08:18:13.6571144Z 
2025-08-19T08:18:13.6571243Z ```python
2025-08-19T08:18:13.6571494Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:18:13.6571828Z ```
2025-08-19T08:18:13.6571951Z 
2025-08-19T08:18:13.6572053Z Return safe DSN.
2025-08-19T08:18:13.6572220Z 
2025-08-19T08:18:13.6572673Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T08:18:13.6572989Z 
2025-08-19T08:18:13.6573189Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T08:18:13.6573512Z 
2025-08-19T08:18:13.6573680Z # price\_importer.services\_common.models\_vendor
2025-08-19T08:18:13.6573995Z 
2025-08-19T08:18:13.6574156Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T08:18:13.6574441Z 
2025-08-19T08:18:13.6574584Z # price\_importer.services\_common.db\_url
2025-08-19T08:18:13.6574854Z 
2025-08-19T08:18:13.6575052Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T08:18:13.6575373Z 
2025-08-19T08:18:13.6575478Z #### build\_url
2025-08-19T08:18:13.6575627Z 
2025-08-19T08:18:13.6575721Z ```python
2025-08-19T08:18:13.6576152Z def build_url(async_: bool = True) -> str
2025-08-19T08:18:13.6576501Z ```
2025-08-19T08:18:13.6576632Z 
2025-08-19T08:18:13.6576776Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:18:13.6577039Z 
2025-08-19T08:18:13.6577205Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T08:18:13.6577493Z 
2025-08-19T08:18:13.6577634Z # price\_importer.services\_common.keepa
2025-08-19T08:18:13.6577893Z 
2025-08-19T08:18:13.6578047Z <a id="price_importer.services_common.llm"></a>
2025-08-19T08:18:13.6578327Z 
2025-08-19T08:18:13.6578468Z # price\_importer.services\_common.llm
2025-08-19T08:18:13.6578721Z 
2025-08-19T08:18:13.6578891Z <a id="price_importer.services_common.settings"></a>
2025-08-19T08:18:13.6579183Z 
2025-08-19T08:18:13.6579335Z # price\_importer.services\_common.settings
2025-08-19T08:18:13.6579590Z 
2025-08-19T08:18:13.6579739Z <a id="price_importer.services_common.db"></a>
2025-08-19T08:18:13.6580026Z 
2025-08-19T08:18:13.6580161Z # price\_importer.services\_common.db
2025-08-19T08:18:13.6580407Z 
2025-08-19T08:18:13.6580649Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T08:18:13.6581032Z 
2025-08-19T08:18:13.6581149Z #### build\_sqlalchemy\_url
2025-08-19T08:18:13.6581367Z 
2025-08-19T08:18:13.6581472Z ```python
2025-08-19T08:18:13.6581728Z def build_sqlalchemy_url() -> str
2025-08-19T08:18:13.6582053Z ```
2025-08-19T08:18:13.6582179Z 
2025-08-19T08:18:13.6582325Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:18:13.6582604Z 
2025-08-19T08:18:13.6582830Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T08:18:13.6583368Z 
2025-08-19T08:18:13.6583480Z #### build\_asyncpg\_dsn
2025-08-19T08:18:13.6583671Z 
2025-08-19T08:18:13.6583765Z ```python
2025-08-19T08:18:13.6584028Z def build_asyncpg_dsn() -> str
2025-08-19T08:18:13.6584331Z ```
2025-08-19T08:18:13.6584453Z 
2025-08-19T08:18:13.6584660Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:18:13.6585013Z 
2025-08-19T08:18:13.6585209Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T08:18:13.6585549Z 
2025-08-19T08:18:13.6585654Z #### refresh\_mvs
2025-08-19T08:18:13.6586009Z 
2025-08-19T08:18:13.6586126Z ```python
2025-08-19T08:18:13.6586445Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:18:13.6586836Z ```
2025-08-19T08:18:13.6586967Z 
2025-08-19T08:18:13.6587178Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:18:13.6587556Z 
2025-08-19T08:18:13.6587709Z <a id="price_importer.services_common"></a>
2025-08-19T08:18:13.6588172Z 
2025-08-19T08:18:13.6588307Z # price\_importer.services\_common
2025-08-19T08:18:13.6588552Z 
2025-08-19T08:18:13.6588714Z <a id="price_importer.services_common.base"></a>
2025-08-19T08:18:13.6588999Z 
2025-08-19T08:18:13.6589141Z # price\_importer.services\_common.base
2025-08-19T08:18:13.6589391Z 
2025-08-19T08:18:13.6589530Z <a id="price_importer.normaliser"></a>
2025-08-19T08:18:13.6589790Z 
2025-08-19T08:18:13.6589917Z # price\_importer.normaliser
2025-08-19T08:18:13.6590136Z 
2025-08-19T08:18:13.6590290Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T08:18:13.6590588Z 
2025-08-19T08:18:13.6590721Z # price\_importer.common.models\_vendor
2025-08-19T08:18:13.6590972Z 
2025-08-19T08:18:13.6591127Z <a id="price_importer.common.db_url"></a>
2025-08-19T08:18:13.6591397Z 
2025-08-19T08:18:13.6591523Z # price\_importer.common.db\_url
2025-08-19T08:18:13.6591757Z 
2025-08-19T08:18:13.6591920Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T08:18:13.6592223Z 
2025-08-19T08:18:13.6592372Z #### make\_dsn
2025-08-19T08:18:13.6592524Z 
2025-08-19T08:18:13.6592619Z ```python
2025-08-19T08:18:13.6592882Z def make_dsn(async_: bool = False) -> str
2025-08-19T08:18:13.6593218Z ```
2025-08-19T08:18:13.6593340Z 
2025-08-19T08:18:13.6593526Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T08:18:13.6593831Z 
2025-08-19T08:18:13.6593995Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T08:18:13.6594287Z 
2025-08-19T08:18:13.6594386Z #### build\_url
2025-08-19T08:18:13.6594535Z 
2025-08-19T08:18:13.6594628Z ```python
2025-08-19T08:18:13.6594907Z def build_url(async_: bool = False) -> str
2025-08-19T08:18:13.6595251Z ```
2025-08-19T08:18:13.6595375Z 
2025-08-19T08:18:13.6595555Z Return Postgres DSN built from environment variables.
2025-08-19T08:18:13.6596015Z 
2025-08-19T08:18:13.6596158Z <a id="price_importer.common"></a>
2025-08-19T08:18:13.6596400Z 
2025-08-19T08:18:13.6596517Z # price\_importer.common
2025-08-19T08:18:13.6596716Z 
2025-08-19T08:18:13.6596862Z <a id="price_importer.common.base"></a>
2025-08-19T08:18:13.6597119Z 
2025-08-19T08:18:13.6597267Z # price\_importer.common.base
2025-08-19T08:18:13.6597481Z 
2025-08-19T08:18:13.6597633Z <a id="price_importer.tests.conftest"></a>
2025-08-19T08:18:13.6597900Z 
2025-08-19T08:18:13.6598038Z # price\_importer.tests.conftest
2025-08-19T08:18:13.6598317Z 
2025-08-19T08:18:13.6598474Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T08:18:13.6598759Z 
2025-08-19T08:18:13.6598891Z # price\_importer.tests.test\_reader
2025-08-19T08:18:13.6599143Z 
2025-08-19T08:18:13.6599306Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T08:18:13.6599585Z 
2025-08-19T08:18:13.6599720Z # price\_importer.tests.test\_imports
2025-08-19T08:18:13.6599978Z 
2025-08-19T08:18:13.6600129Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T08:18:13.6600404Z 
2025-08-19T08:18:13.6600535Z # price\_importer.tests.test\_smoke
2025-08-19T08:18:13.6600787Z 
2025-08-19T08:18:13.6600953Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T08:18:13.6601425Z 
2025-08-19T08:18:13.6601575Z # price\_importer.tests.test\_normaliser
2025-08-19T08:18:13.6601833Z 
2025-08-19T08:18:13.6601961Z <a id="price_importer.tests"></a>
2025-08-19T08:18:13.6602197Z 
2025-08-19T08:18:13.6602318Z # price\_importer.tests
2025-08-19T08:18:13.6602502Z 
2025-08-19T08:18:13.6602624Z <a id="price_importer.reader"></a>
2025-08-19T08:18:13.6602862Z 
2025-08-19T08:18:13.6602977Z # price\_importer.reader
2025-08-19T08:18:13.6603166Z 
2025-08-19T08:18:13.6603308Z <a id="price_importer.repository"></a>
2025-08-19T08:18:13.6603558Z 
2025-08-19T08:18:13.6603685Z # price\_importer.repository
2025-08-19T08:18:13.6603902Z 
2025-08-19T08:18:13.6604030Z <a id="price_importer.import"></a>
2025-08-19T08:18:13.6604268Z 
2025-08-19T08:18:13.6604382Z # price\_importer.import
2025-08-19T08:18:13.6604581Z 
2025-08-19T08:18:13.6604691Z <a id="fees_h10"></a>
2025-08-19T08:18:13.6604870Z 
2025-08-19T08:18:13.6604974Z # fees\_h10
2025-08-19T08:18:13.6605276Z 
2025-08-19T08:18:13.6605390Z <a id="fees_h10.worker"></a>
2025-08-19T08:18:13.6605593Z 
2025-08-19T08:18:13.6605702Z # fees\_h10.worker
2025-08-19T08:18:13.6606006Z 
2025-08-19T08:18:13.6606159Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T08:18:13.6606454Z 
2025-08-19T08:18:13.6606567Z #### list\_active\_asins
2025-08-19T08:18:13.6606759Z 
2025-08-19T08:18:13.6606860Z ```python
2025-08-19T08:18:13.6607120Z def list_active_asins() -> list[str]
2025-08-19T08:18:13.6607460Z ```
2025-08-19T08:18:13.6607581Z 
2025-08-19T08:18:13.6607749Z Return known ASINs or an empty list if unavailable.
2025-08-19T08:18:13.6608056Z 
2025-08-19T08:18:13.6608180Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T08:18:13.6608424Z 
2025-08-19T08:18:13.6608546Z # fees\_h10.tests.test\_smoke
2025-08-19T08:18:13.6608757Z 
2025-08-19T08:18:13.6608872Z <a id="fees_h10.tests"></a>
2025-08-19T08:18:13.6609074Z 
2025-08-19T08:18:13.6609180Z # fees\_h10.tests
2025-08-19T08:18:13.6609336Z 
2025-08-19T08:18:13.6609464Z <a id="fees_h10.client"></a>
2025-08-19T08:18:13.6609672Z 
2025-08-19T08:18:13.6609779Z # fees\_h10.client
2025-08-19T08:18:13.6609948Z 
2025-08-19T08:18:13.6610067Z <a id="fees_h10.repository"></a>
2025-08-19T08:18:13.6610299Z 
2025-08-19T08:18:13.6610409Z # fees\_h10.repository
2025-08-19T08:18:13.6610588Z 
2025-08-19T08:18:13.6610701Z <a id="emailer"></a>
2025-08-19T08:18:13.6610874Z 
2025-08-19T08:18:13.6610971Z # emailer
2025-08-19T08:18:13.6611109Z 
2025-08-19T08:18:13.6611271Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T08:18:13.6611545Z 
2025-08-19T08:18:13.6611680Z # emailer.tests.test\_import\_emailer
2025-08-19T08:18:13.6611929Z 
2025-08-19T08:18:13.6612061Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T08:18:13.6612303Z 
2025-08-19T08:18:13.6612420Z # emailer.tests.test\_smoke
2025-08-19T08:18:13.6612637Z 
2025-08-19T08:18:13.6612758Z <a id="emailer.tests"></a>
2025-08-19T08:18:13.6612960Z 
2025-08-19T08:18:13.6613074Z # emailer.tests
2025-08-19T08:18:13.6613235Z 
2025-08-19T08:18:13.6613376Z <a id="emailer.generate_body"></a>
2025-08-19T08:18:13.6613623Z 
2025-08-19T08:18:13.6613737Z # emailer.generate\_body
2025-08-19T08:18:13.6613931Z 
2025-08-19T08:18:13.6614039Z <a id="llm_server"></a>
2025-08-19T08:18:13.6614228Z 
2025-08-19T08:18:13.6614324Z # llm\_server
2025-08-19T08:18:13.6614472Z 
2025-08-19T08:18:13.6614599Z <a id="llm_server.app"></a>
2025-08-19T08:18:13.6614798Z 
2025-08-19T08:18:13.6614902Z # llm\_server.app
2025-08-19T08:18:13.6615069Z 
