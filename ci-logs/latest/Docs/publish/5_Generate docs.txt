2025-08-19T10:52:24.2274852Z ##[group]Run pydoc-markdown
2025-08-19T10:52:24.2275219Z [36;1mpydoc-markdown[0m
2025-08-19T10:52:24.2316933Z shell: /usr/bin/bash -e {0}
2025-08-19T10:52:24.2317230Z env:
2025-08-19T10:52:24.2317558Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:52:24.2318280Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T10:52:24.2318836Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:52:24.2319327Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:52:24.2319812Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:52:24.2320312Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T10:52:24.2320712Z ##[endgroup]
2025-08-19T10:52:24.5663293Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T10:52:24.5664689Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T10:52:24.5665363Z In "pydoc-markdown.yml"
2025-08-19T10:52:24.5665974Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T10:52:24.5666859Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T10:52:24.5667935Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T10:52:24.5668881Z 
2025-08-19T10:52:24.8787159Z <a id="__init__"></a>
2025-08-19T10:52:24.8787792Z 
2025-08-19T10:52:24.8787955Z # \_\_init\_\_
2025-08-19T10:52:24.8788291Z 
2025-08-19T10:52:24.8788402Z <a id="api"></a>
2025-08-19T10:52:24.8788573Z 
2025-08-19T10:52:24.8788687Z # api
2025-08-19T10:52:24.8788831Z 
2025-08-19T10:52:24.8788958Z <a id="api.errors"></a>
2025-08-19T10:52:24.8789168Z 
2025-08-19T10:52:24.8789275Z # api.errors
2025-08-19T10:52:24.8789429Z 
2025-08-19T10:52:24.8789565Z <a id="api.sentry_config"></a>
2025-08-19T10:52:24.8789808Z 
2025-08-19T10:52:24.8789927Z # api.sentry\_config
2025-08-19T10:52:24.8790117Z 
2025-08-19T10:52:24.8790270Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T10:52:24.8790545Z 
2025-08-19T10:52:24.8790994Z # api.tests.test\_sentry\_scrub
2025-08-19T10:52:24.8791251Z 
2025-08-19T10:52:24.8791390Z <a id="api.tests.test_errors_json"></a>
2025-08-19T10:52:24.8791653Z 
2025-08-19T10:52:24.8791779Z # api.tests.test\_errors\_json
2025-08-19T10:52:24.8792010Z 
2025-08-19T10:52:24.8792134Z <a id="api.tests.test_llm"></a>
2025-08-19T10:52:24.8792356Z 
2025-08-19T10:52:24.8792477Z # api.tests.test\_llm
2025-08-19T10:52:24.8792664Z 
2025-08-19T10:52:24.8792803Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T10:52:24.8793073Z 
2025-08-19T10:52:24.8793199Z # api.tests.test\_sentry\_event
2025-08-19T10:52:24.8793420Z 
2025-08-19T10:52:24.8793616Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T10:52:24.8793954Z 
2025-08-19T10:52:24.8794077Z ## DummyTransport Objects
2025-08-19T10:52:24.8794280Z 
2025-08-19T10:52:24.8794389Z ```python
2025-08-19T10:52:24.8794652Z class DummyTransport()
2025-08-19T10:52:24.8794945Z ```
2025-08-19T10:52:24.8795076Z 
2025-08-19T10:52:24.8795351Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T10:52:24.8795787Z 
2025-08-19T10:52:24.8795908Z #### capture\_envelope
2025-08-19T10:52:24.8796091Z 
2025-08-19T10:52:24.8796190Z ```python
2025-08-19T10:52:24.8796473Z def capture_envelope(envelope)
2025-08-19T10:52:24.8796796Z ```
2025-08-19T10:52:24.8796925Z 
2025-08-19T10:52:24.8797124Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T10:52:24.8797454Z 
2025-08-19T10:52:24.8797594Z <a id="api.tests.test_cors"></a>
2025-08-19T10:52:24.8797827Z 
2025-08-19T10:52:24.8797945Z # api.tests.test\_cors
2025-08-19T10:52:24.8798416Z 
2025-08-19T10:52:24.8798551Z <a id="api.tests.test_imports"></a>
2025-08-19T10:52:24.8798801Z 
2025-08-19T10:52:24.8798935Z # api.tests.test\_imports
2025-08-19T10:52:24.8799143Z 
2025-08-19T10:52:24.8799279Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T10:52:24.8799534Z 
2025-08-19T10:52:24.8799671Z # api.tests.test\_rate\_limit
2025-08-19T10:52:24.8799892Z 
2025-08-19T10:52:24.8800042Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T10:52:24.8800583Z 
2025-08-19T10:52:24.8800685Z #### app
2025-08-19T10:52:24.8800824Z 
2025-08-19T10:52:24.8800932Z noqa: E402
2025-08-19T10:52:24.8801075Z 
2025-08-19T10:52:24.8801213Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T10:52:24.8801469Z 
2025-08-19T10:52:24.8801608Z # api.tests.test\_entrypoint
2025-08-19T10:52:24.8801826Z 
2025-08-19T10:52:24.8801958Z <a id="api.tests.test_health"></a>
2025-08-19T10:52:24.8802210Z 
2025-08-19T10:52:24.8802329Z # api.tests.test\_health
2025-08-19T10:52:24.8802530Z 
2025-08-19T10:52:24.8802655Z <a id="api.logging_config"></a>
2025-08-19T10:52:24.8802884Z 
2025-08-19T10:52:24.8802998Z # api.logging\_config
2025-08-19T10:52:24.8803187Z 
2025-08-19T10:52:24.8803323Z <a id="api.migrations.env"></a>
2025-08-19T10:52:24.8803550Z 
2025-08-19T10:52:24.8803667Z # api.migrations.env
2025-08-19T10:52:24.8803859Z 
2025-08-19T10:52:24.8804040Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T10:52:24.8804363Z 
2025-08-19T10:52:24.8804530Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T10:52:24.8804836Z 
2025-08-19T10:52:24.8805004Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T10:52:24.8805308Z 
2025-08-19T10:52:24.8805461Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T10:52:24.8805736Z 
2025-08-19T10:52:24.8805977Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T10:52:24.8806360Z 
2025-08-19T10:52:24.8806572Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T10:52:24.8806922Z 
2025-08-19T10:52:24.8807114Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T10:52:24.8807445Z 
2025-08-19T10:52:24.8807603Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T10:52:24.8807842Z 
2025-08-19T10:52:24.8808151Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T10:52:24.8808447Z 
2025-08-19T10:52:24.8808599Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T10:52:24.8808846Z 
2025-08-19T10:52:24.8809147Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T10:52:24.8809431Z 
2025-08-19T10:52:24.8809582Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T10:52:24.8809837Z 
2025-08-19T10:52:24.8809988Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T10:52:24.8810248Z 
2025-08-19T10:52:24.8810391Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T10:52:24.8810631Z 
2025-08-19T10:52:24.8810790Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T10:52:24.8811060Z 
2025-08-19T10:52:24.8811193Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T10:52:24.8811431Z 
2025-08-19T10:52:24.8811614Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T10:52:24.8811901Z 
2025-08-19T10:52:24.8812052Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T10:52:24.8812314Z 
2025-08-19T10:52:24.8812469Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T10:52:24.8812734Z 
2025-08-19T10:52:24.8812880Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T10:52:24.8813140Z 
2025-08-19T10:52:24.8813313Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T10:52:24.8813625Z 
2025-08-19T10:52:24.8813773Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T10:52:24.8814094Z 
2025-08-19T10:52:24.8814237Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T10:52:24.8814482Z 
2025-08-19T10:52:24.8814601Z # api.migrations.versions.0001\_baseline
2025-08-19T10:52:24.8814821Z 
2025-08-19T10:52:24.8814941Z <a id="api.migrations.versions"></a>
2025-08-19T10:52:24.8815149Z 
2025-08-19T10:52:24.8815256Z # api.migrations.versions
2025-08-19T10:52:24.8815429Z 
2025-08-19T10:52:24.8815530Z <a id="api.migrations"></a>
2025-08-19T10:52:24.8815701Z 
2025-08-19T10:52:24.8815798Z # api.migrations
2025-08-19T10:52:24.8815935Z 
2025-08-19T10:52:24.8816024Z <a id="api.db"></a>
2025-08-19T10:52:24.8816164Z 
2025-08-19T10:52:24.8816267Z # api.db
2025-08-19T10:52:24.8816381Z 
2025-08-19T10:52:24.8816493Z <a id="api.routes.stats"></a>
2025-08-19T10:52:24.8816822Z 
2025-08-19T10:52:24.8816915Z # api.routes.stats
2025-08-19T10:52:24.8817056Z 
2025-08-19T10:52:24.8817167Z <a id="api.routes.stats.kpi"></a>
2025-08-19T10:52:24.8817373Z 
2025-08-19T10:52:24.8817454Z #### kpi
2025-08-19T10:52:24.8817561Z 
2025-08-19T10:52:24.8817641Z ```python
2025-08-19T10:52:24.8817827Z @router.get("/stats/kpi")
2025-08-19T10:52:24.8818271Z def kpi() -> List[Dict[str, int]]
2025-08-19T10:52:24.8818509Z ```
2025-08-19T10:52:24.8818610Z 
2025-08-19T10:52:24.8818698Z Return KPI metrics (mock).
2025-08-19T10:52:24.8818849Z 
2025-08-19T10:52:24.8818963Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T10:52:24.8819167Z 
2025-08-19T10:52:24.8819245Z #### roi\_by\_vendor
2025-08-19T10:52:24.8819370Z 
2025-08-19T10:52:24.8819455Z ```python
2025-08-19T10:52:24.8819666Z @router.get("/stats/roi_by_vendor")
2025-08-19T10:52:24.8819947Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T10:52:24.8820205Z ```
2025-08-19T10:52:24.8820315Z 
2025-08-19T10:52:24.8820415Z Return ROI percent by vendor.
2025-08-19T10:52:24.8820572Z 
2025-08-19T10:52:24.8820676Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T10:52:24.8820871Z 
2025-08-19T10:52:24.8820945Z #### roi\_trend
2025-08-19T10:52:24.8821059Z 
2025-08-19T10:52:24.8821141Z ```python
2025-08-19T10:52:24.8821325Z @router.get("/stats/roi_trend")
2025-08-19T10:52:24.8821598Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T10:52:24.8821864Z ```
2025-08-19T10:52:24.8821965Z 
2025-08-19T10:52:24.8822050Z Return 30-day ROI trend.
2025-08-19T10:52:24.8822190Z 
2025-08-19T10:52:24.8822279Z <a id="api.routes.roi"></a>
2025-08-19T10:52:24.8822439Z 
2025-08-19T10:52:24.8822517Z # api.routes.roi
2025-08-19T10:52:24.8822634Z 
2025-08-19T10:52:24.8822729Z <a id="api.routes.health"></a>
2025-08-19T10:52:24.8822885Z 
2025-08-19T10:52:24.8822964Z # api.routes.health
2025-08-19T10:52:24.8823093Z 
2025-08-19T10:52:24.8823194Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T10:52:24.8823510Z 
2025-08-19T10:52:24.8823592Z #### MAX\_SKEW
2025-08-19T10:52:24.8823718Z 
2025-08-19T10:52:24.8823793Z seconds
2025-08-19T10:52:24.8823891Z 
2025-08-19T10:52:24.8824003Z <a id="api.routes.health.health"></a>
2025-08-19T10:52:24.8824188Z 
2025-08-19T10:52:24.8824261Z #### health
2025-08-19T10:52:24.8824365Z 
2025-08-19T10:52:24.8824455Z ```python
2025-08-19T10:52:24.8824673Z @router.get("/health", include_in_schema=False)
2025-08-19T10:52:24.8825110Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T10:52:24.8825499Z ```
2025-08-19T10:52:24.8825607Z 
2025-08-19T10:52:24.8825737Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T10:52:24.8825960Z 
2025-08-19T10:52:24.8826067Z <a id="api.routes.repository"></a>
2025-08-19T10:52:24.8826242Z 
2025-08-19T10:52:24.8826334Z # api.routes.repository
2025-08-19T10:52:24.8826485Z 
2025-08-19T10:52:24.8826569Z <a id="api.routes"></a>
2025-08-19T10:52:24.8826704Z 
2025-08-19T10:52:24.8826780Z # api.routes
2025-08-19T10:52:24.8826904Z 
2025-08-19T10:52:24.8827000Z <a id="api.models.fee"></a>
2025-08-19T10:52:24.8827149Z 
2025-08-19T10:52:24.8827241Z # api.models.fee
2025-08-19T10:52:24.8827358Z 
2025-08-19T10:52:24.8827441Z <a id="api.models"></a>
2025-08-19T10:52:24.8827574Z 
2025-08-19T10:52:24.8827661Z # api.models
2025-08-19T10:52:24.8827768Z 
2025-08-19T10:52:24.8827853Z <a id="api.roi_repository"></a>
2025-08-19T10:52:24.8828119Z 
2025-08-19T10:52:24.8828204Z # api.roi\_repository
2025-08-19T10:52:24.8828331Z 
2025-08-19T10:52:24.8828408Z <a id="api.main"></a>
2025-08-19T10:52:24.8828536Z 
2025-08-19T10:52:24.8828605Z # api.main
2025-08-19T10:52:24.8828703Z 
2025-08-19T10:52:24.8828797Z <a id="api.main.ready"></a>
2025-08-19T10:52:24.8828935Z 
2025-08-19T10:52:24.8829003Z #### ready
2025-08-19T10:52:24.8829109Z 
2025-08-19T10:52:24.8829177Z ```python
2025-08-19T10:52:24.8829440Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T10:52:24.8829898Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T10:52:24.8830401Z                                                                       str]
2025-08-19T10:52:24.8830647Z ```
2025-08-19T10:52:24.8830737Z 
2025-08-19T10:52:24.8830844Z Return 200 only when migrations are at head.
2025-08-19T10:52:24.8831044Z 
2025-08-19T10:52:24.8831122Z <a id="api.config"></a>
2025-08-19T10:52:24.8831245Z 
2025-08-19T10:52:24.8831314Z # api.config
2025-08-19T10:52:24.8831423Z 
2025-08-19T10:52:24.8831494Z <a id="etl"></a>
2025-08-19T10:52:24.8831601Z 
2025-08-19T10:52:24.8831675Z # etl
2025-08-19T10:52:24.8831766Z 
2025-08-19T10:52:24.8831855Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T10:52:24.8832008Z 
2025-08-19T10:52:24.8832095Z # etl.fba\_fee\_ingestor
2025-08-19T10:52:24.8832225Z 
2025-08-19T10:52:24.8832313Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T10:52:24.8832474Z 
2025-08-19T10:52:24.8832552Z # etl.sp\_fees\_ingestor
2025-08-19T10:52:24.8832677Z 
2025-08-19T10:52:24.8832761Z <a id="etl.keepa_ingestor"></a>
2025-08-19T10:52:24.8832927Z 
2025-08-19T10:52:24.8833002Z # etl.keepa\_ingestor
2025-08-19T10:52:24.8833121Z 
2025-08-19T10:52:24.8833202Z <a id="etl.db"></a>
2025-08-19T10:52:24.8833314Z 
2025-08-19T10:52:24.8833381Z # etl.db
2025-08-19T10:52:24.8833479Z 
2025-08-19T10:52:24.8833566Z <a id="etl.dialects.schemas"></a>
2025-08-19T10:52:24.8833721Z 
2025-08-19T10:52:24.8833799Z # etl.dialects.schemas
2025-08-19T10:52:24.8833931Z 
2025-08-19T10:52:24.8834040Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T10:52:24.8834233Z 
2025-08-19T10:52:24.8834338Z # etl.dialects.amazon\_reimbursements
2025-08-19T10:52:24.8834514Z 
2025-08-19T10:52:24.8834617Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T10:52:24.8834808Z 
2025-08-19T10:52:24.8834897Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T10:52:24.8835064Z 
2025-08-19T10:52:24.8835158Z <a id="etl.dialects.test_generic"></a>
2025-08-19T10:52:24.8835333Z 
2025-08-19T10:52:24.8835418Z # etl.dialects.test\_generic
2025-08-19T10:52:24.8835695Z 
2025-08-19T10:52:24.8835811Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T10:52:24.8835991Z 
2025-08-19T10:52:24.8836077Z # etl.dialects.amazon\_returns
2025-08-19T10:52:24.8836234Z 
2025-08-19T10:52:24.8836337Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T10:52:24.8836520Z 
2025-08-19T10:52:24.8836612Z # etl.dialects.amazon\_fee\_preview
2025-08-19T10:52:24.8836784Z 
2025-08-19T10:52:24.8836898Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T10:52:24.8837102Z 
2025-08-19T10:52:24.8837208Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T10:52:24.8837386Z 
2025-08-19T10:52:24.8837489Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T10:52:24.8837675Z 
2025-08-19T10:52:24.8837764Z # etl.dialects.amazon\_settlements
2025-08-19T10:52:24.8837919Z 
2025-08-19T10:52:24.8837998Z <a id="etl.dialects"></a>
2025-08-19T10:52:24.8838237Z 
2025-08-19T10:52:24.8838305Z # etl.dialects
2025-08-19T10:52:24.8838408Z 
2025-08-19T10:52:24.8838485Z <a id="ingest"></a>
2025-08-19T10:52:24.8838601Z 
2025-08-19T10:52:24.8838671Z # ingest
2025-08-19T10:52:24.8838762Z 
2025-08-19T10:52:24.8838856Z <a id="ingest.maintenance"></a>
2025-08-19T10:52:24.8839000Z 
2025-08-19T10:52:24.8839075Z # ingest.maintenance
2025-08-19T10:52:24.8839198Z 
2025-08-19T10:52:24.8839279Z <a id="ingest.copy_loader"></a>
2025-08-19T10:52:24.8839421Z 
2025-08-19T10:52:24.8839503Z # ingest.copy\_loader
2025-08-19T10:52:24.8839621Z 
2025-08-19T10:52:24.8839727Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T10:52:24.8839915Z 
2025-08-19T10:52:24.8839999Z #### copy\_df\_via\_temp
2025-08-19T10:52:24.8840126Z 
2025-08-19T10:52:24.8840194Z ```python
2025-08-19T10:52:24.8840380Z def copy_df_via_temp(engine: Engine,
2025-08-19T10:52:24.8840633Z                      df: pd.DataFrame,
2025-08-19T10:52:24.8840888Z                      target_table: str,
2025-08-19T10:52:24.8841123Z                      *,
2025-08-19T10:52:24.8841341Z                      target_schema: Optional[str] = None,
2025-08-19T10:52:24.8841629Z                      columns: Sequence[str],
2025-08-19T10:52:24.8842040Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T10:52:24.8842347Z                      analyze_after: bool = False,
2025-08-19T10:52:24.8842622Z                      connection: Any | None = None) -> int
2025-08-19T10:52:24.8842882Z ```
2025-08-19T10:52:24.8842969Z 
2025-08-19T10:52:24.8843128Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T10:52:24.8843377Z 
2025-08-19T10:52:24.8843468Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T10:52:24.8843629Z 
2025-08-19T10:52:24.8843723Z # ingest.tests.test\_smoke
2025-08-19T10:52:24.8843859Z 
2025-08-19T10:52:24.8843941Z <a id="ingest.tests"></a>
2025-08-19T10:52:24.8844079Z 
2025-08-19T10:52:24.8844151Z # ingest.tests
2025-08-19T10:52:24.8844258Z 
2025-08-19T10:52:24.8844348Z <a id="ingest.upload_router"></a>
2025-08-19T10:52:24.8844518Z 
2025-08-19T10:52:24.8844599Z # ingest.upload\_router
2025-08-19T10:52:24.8844728Z 
2025-08-19T10:52:24.8844822Z <a id="ingest.email_watcher"></a>
2025-08-19T10:52:24.8844982Z 
2025-08-19T10:52:24.8845055Z # ingest.email\_watcher
2025-08-19T10:52:24.8845180Z 
2025-08-19T10:52:24.8845271Z <a id="ingest.email_watcher.main"></a>
2025-08-19T10:52:24.8845433Z 
2025-08-19T10:52:24.8845497Z #### main
2025-08-19T10:52:24.8845595Z 
2025-08-19T10:52:24.8845659Z ```python
2025-08-19T10:52:24.8845834Z def main() -> dict[str, str]
2025-08-19T10:52:24.8846046Z ```
2025-08-19T10:52:24.8846134Z 
2025-08-19T10:52:24.8846274Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T10:52:24.8846507Z 
2025-08-19T10:52:24.8846636Z Returns {"status": "success"} when processing completes.
2025-08-19T10:52:24.8846849Z 
2025-08-19T10:52:24.8846926Z <a id="ingest.tasks"></a>
2025-08-19T10:52:24.8847058Z 
2025-08-19T10:52:24.8847127Z # ingest.tasks
2025-08-19T10:52:24.8847231Z 
2025-08-19T10:52:24.8847336Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T10:52:24.8847511Z 
2025-08-19T10:52:24.8847718Z #### task\_import\_file
2025-08-19T10:52:24.8847844Z 
2025-08-19T10:52:24.8847910Z ```python
2025-08-19T10:52:24.8848218Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T10:52:24.8848503Z def task_import_file(self: Any,
2025-08-19T10:52:24.8848711Z                      uri: str,
2025-08-19T10:52:24.8848932Z                      report_type: str | None = None,
2025-08-19T10:52:24.8849204Z                      force: bool = False) -> dict[str, Any]
2025-08-19T10:52:24.8849444Z ```
2025-08-19T10:52:24.8849531Z 
2025-08-19T10:52:24.8849671Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T10:52:24.8849879Z 
2025-08-19T10:52:24.8849962Z <a id="ingest.celery_app"></a>
2025-08-19T10:52:24.8850107Z 
2025-08-19T10:52:24.8850180Z # ingest.celery\_app
2025-08-19T10:52:24.8850293Z 
2025-08-19T10:52:24.8850386Z <a id="ingest.ingest_router"></a>
2025-08-19T10:52:24.8850537Z 
2025-08-19T10:52:24.8850612Z # ingest.ingest\_router
2025-08-19T10:52:24.8850730Z 
2025-08-19T10:52:24.8850822Z <a id="logistics_etl"></a>
2025-08-19T10:52:24.8850960Z 
2025-08-19T10:52:24.8851027Z # logistics\_etl
2025-08-19T10:52:24.8851137Z 
2025-08-19T10:52:24.8851214Z Daily logistics ETL job.
2025-08-19T10:52:24.8851337Z 
2025-08-19T10:52:24.8851419Z <a id="logistics_etl.__main__"></a>
2025-08-19T10:52:24.8851574Z 
2025-08-19T10:52:24.8851650Z # logistics\_etl.\_\_main\_\_
2025-08-19T10:52:24.8851789Z 
2025-08-19T10:52:24.8851876Z <a id="logistics_etl.dsn"></a>
2025-08-19T10:52:24.8852011Z 
2025-08-19T10:52:24.8852082Z # logistics\_etl.dsn
2025-08-19T10:52:24.8852202Z 
2025-08-19T10:52:24.8852320Z Local DSN builder to avoid cross-service dependency.
2025-08-19T10:52:24.8852520Z 
2025-08-19T10:52:24.8852611Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T10:52:24.8852784Z 
2025-08-19T10:52:24.8852854Z #### build\_dsn
2025-08-19T10:52:24.8852960Z 
2025-08-19T10:52:24.8853041Z ```python
2025-08-19T10:52:24.8853222Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:52:24.8853455Z ```
2025-08-19T10:52:24.8853542Z 
2025-08-19T10:52:24.8853809Z Return a Postgres DSN assembled from environment variables.
2025-08-19T10:52:24.8854036Z 
2025-08-19T10:52:24.8854185Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T10:52:24.8854566Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T10:52:24.8854910Z error when any required variable is missing.
2025-08-19T10:52:24.8855081Z 
2025-08-19T10:52:24.8855190Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T10:52:24.8855367Z 
2025-08-19T10:52:24.8855455Z # logistics\_etl.tests.conftest
2025-08-19T10:52:24.8855607Z 
2025-08-19T10:52:24.8855714Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T10:52:24.8855899Z 
2025-08-19T10:52:24.8855991Z # logistics\_etl.tests.test\_repository
2025-08-19T10:52:24.8856166Z 
2025-08-19T10:52:24.8856262Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T10:52:24.8856435Z 
2025-08-19T10:52:24.8856529Z # logistics\_etl.tests.test\_cron
2025-08-19T10:52:24.8856679Z 
2025-08-19T10:52:24.8856783Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T10:52:24.8856970Z 
2025-08-19T10:52:24.8857058Z # logistics\_etl.tests.test\_imports
2025-08-19T10:52:24.8857213Z 
2025-08-19T10:52:24.8857306Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T10:52:24.8857487Z 
2025-08-19T10:52:24.8857575Z # logistics\_etl.tests.test\_smoke
2025-08-19T10:52:24.8857727Z 
2025-08-19T10:52:24.8857830Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T10:52:24.8858119Z 
2025-08-19T10:52:24.8858207Z # logistics\_etl.tests.test\_client
2025-08-19T10:52:24.8858369Z 
2025-08-19T10:52:24.8858452Z <a id="logistics_etl.tests"></a>
2025-08-19T10:52:24.8858595Z 
2025-08-19T10:52:24.8858669Z # logistics\_etl.tests
2025-08-19T10:52:24.8858795Z 
2025-08-19T10:52:24.8858877Z <a id="logistics_etl.flow"></a>
2025-08-19T10:52:24.8859017Z 
2025-08-19T10:52:24.8859099Z # logistics\_etl.flow
2025-08-19T10:52:24.8859214Z 
2025-08-19T10:52:24.8859296Z <a id="logistics_etl.client"></a>
2025-08-19T10:52:24.8859576Z 
2025-08-19T10:52:24.8888203Z # logistics\_etl.client
2025-08-19T10:52:24.8888500Z 
2025-08-19T10:52:24.8888680Z <a id="logistics_etl.cron"></a>
2025-08-19T10:52:24.8889000Z 
2025-08-19T10:52:24.8889150Z # logistics\_etl.cron
2025-08-19T10:52:24.8889407Z 
2025-08-19T10:52:24.8889543Z <a id="logistics_etl.db"></a>
2025-08-19T10:52:24.8889722Z 
2025-08-19T10:52:24.8889810Z # logistics\_etl.db
2025-08-19T10:52:24.8889953Z 
2025-08-19T10:52:24.8890072Z <a id="logistics_etl.repository"></a>
2025-08-19T10:52:24.8890286Z 
2025-08-19T10:52:24.8890471Z # logistics\_etl.repository
2025-08-19T10:52:24.8890643Z 
2025-08-19T10:52:24.8890736Z <a id="alert_bot"></a>
2025-08-19T10:52:24.8890885Z 
2025-08-19T10:52:24.8890975Z # alert\_bot
2025-08-19T10:52:24.8891097Z 
2025-08-19T10:52:24.8891209Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T10:52:24.8891426Z 
2025-08-19T10:52:24.8891531Z # alert\_bot.tests.test\_smoke
2025-08-19T10:52:24.8891709Z 
2025-08-19T10:52:24.8891806Z <a id="alert_bot.tests"></a>
2025-08-19T10:52:24.8892001Z 
2025-08-19T10:52:24.8892094Z # alert\_bot.tests
2025-08-19T10:52:24.8892225Z 
2025-08-19T10:52:24.8892338Z <a id="alert_bot.alert_bot"></a>
2025-08-19T10:52:24.8892517Z 
2025-08-19T10:52:24.8892607Z # alert\_bot.alert\_bot
2025-08-19T10:52:24.8892767Z 
2025-08-19T10:52:24.8892862Z <a id="alert_bot.rules"></a>
2025-08-19T10:52:24.8893025Z 
2025-08-19T10:52:24.8893110Z # alert\_bot.rules
2025-08-19T10:52:24.8893250Z 
2025-08-19T10:52:24.8893334Z <a id="common"></a>
2025-08-19T10:52:24.8893469Z 
2025-08-19T10:52:24.8893559Z # common
2025-08-19T10:52:24.8893670Z 
2025-08-19T10:52:24.8893763Z <a id="common.dsn"></a>
2025-08-19T10:52:24.8893909Z 
2025-08-19T10:52:24.8894000Z # common.dsn
2025-08-19T10:52:24.8894116Z 
2025-08-19T10:52:24.8894222Z <a id="common.dsn.build_dsn"></a>
2025-08-19T10:52:24.8894418Z 
2025-08-19T10:52:24.8894501Z #### build\_dsn
2025-08-19T10:52:24.8894625Z 
2025-08-19T10:52:24.8894716Z ```python
2025-08-19T10:52:24.8894936Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:52:24.8895225Z ```
2025-08-19T10:52:24.8895514Z 
2025-08-19T10:52:24.8895672Z Return a Postgres DSN, validating required variables.
2025-08-19T10:52:24.8895940Z 
2025-08-19T10:52:24.8896179Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T10:52:24.8896723Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T10:52:24.8897230Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T10:52:24.8897565Z missing.
2025-08-19T10:52:24.8897659Z 
2025-08-19T10:52:24.8897749Z <a id="common.models_vendor"></a>
2025-08-19T10:52:24.8897908Z 
2025-08-19T10:52:24.8897996Z # common.models\_vendor
2025-08-19T10:52:24.8898269Z 
2025-08-19T10:52:24.8898366Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T10:52:24.8898553Z 
2025-08-19T10:52:24.8898623Z ## Vendor Objects
2025-08-19T10:52:24.8898736Z 
2025-08-19T10:52:24.8898812Z ```python
2025-08-19T10:52:24.8898976Z class Vendor(Base)
2025-08-19T10:52:24.8899167Z ```
2025-08-19T10:52:24.8899256Z 
2025-08-19T10:52:24.8899347Z Vendor of inventory items.
2025-08-19T10:52:24.8899485Z 
2025-08-19T10:52:24.8899604Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T10:52:24.8899796Z 
2025-08-19T10:52:24.8899872Z ## VendorPrice Objects
2025-08-19T10:52:24.8900005Z 
2025-08-19T10:52:24.8900072Z ```python
2025-08-19T10:52:24.8900238Z class VendorPrice(Base)
2025-08-19T10:52:24.8900430Z ```
2025-08-19T10:52:24.8900514Z 
2025-08-19T10:52:24.8900627Z Association table linking vendors to pricing.
2025-08-19T10:52:24.8900818Z 
2025-08-19T10:52:24.8900898Z <a id="common.db_url"></a>
2025-08-19T10:52:24.8901043Z 
2025-08-19T10:52:24.8901113Z # common.db\_url
2025-08-19T10:52:24.8901221Z 
2025-08-19T10:52:24.8901307Z <a id="common.db_url.build_url"></a>
2025-08-19T10:52:24.8901478Z 
2025-08-19T10:52:24.8901547Z #### build\_url
2025-08-19T10:52:24.8901652Z 
2025-08-19T10:52:24.8901725Z ```python
2025-08-19T10:52:24.8901905Z def build_url(async_: bool = True) -> str
2025-08-19T10:52:24.8902275Z ```
2025-08-19T10:52:24.8902372Z 
2025-08-19T10:52:24.8902472Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:52:24.8902663Z 
2025-08-19T10:52:24.8902741Z <a id="common.keepa"></a>
2025-08-19T10:52:24.8902874Z 
2025-08-19T10:52:24.8902945Z # common.keepa
2025-08-19T10:52:24.8903056Z 
2025-08-19T10:52:24.8903131Z <a id="common.llm"></a>
2025-08-19T10:52:24.8903253Z 
2025-08-19T10:52:24.8903330Z # common.llm
2025-08-19T10:52:24.8903428Z 
2025-08-19T10:52:24.8903512Z <a id="common.settings"></a>
2025-08-19T10:52:24.8903653Z 
2025-08-19T10:52:24.8903731Z # common.settings
2025-08-19T10:52:24.8903844Z 
2025-08-19T10:52:24.8903920Z <a id="common.db"></a>
2025-08-19T10:52:24.8904049Z 
2025-08-19T10:52:24.8904118Z # common.db
2025-08-19T10:52:24.8904212Z 
2025-08-19T10:52:24.8904316Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T10:52:24.8904494Z 
2025-08-19T10:52:24.8904574Z #### build\_sqlalchemy\_url
2025-08-19T10:52:24.8904712Z 
2025-08-19T10:52:24.8904787Z ```python
2025-08-19T10:52:24.8904972Z def build_sqlalchemy_url() -> str
2025-08-19T10:52:24.8905199Z ```
2025-08-19T10:52:24.8905284Z 
2025-08-19T10:52:24.8905386Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:52:24.8905574Z 
2025-08-19T10:52:24.8905665Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T10:52:24.8905840Z 
2025-08-19T10:52:24.8905924Z #### build\_asyncpg\_dsn
2025-08-19T10:52:24.8906055Z 
2025-08-19T10:52:24.8906121Z ```python
2025-08-19T10:52:24.8906307Z def build_asyncpg_dsn() -> str
2025-08-19T10:52:24.8906516Z ```
2025-08-19T10:52:24.8906609Z 
2025-08-19T10:52:24.8906745Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:52:24.8906967Z 
2025-08-19T10:52:24.8907056Z <a id="common.db.refresh_mvs"></a>
2025-08-19T10:52:24.8907226Z 
2025-08-19T10:52:24.8907298Z #### refresh\_mvs
2025-08-19T10:52:24.8907408Z 
2025-08-19T10:52:24.8907483Z ```python
2025-08-19T10:52:24.8907684Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:52:24.8907951Z ```
2025-08-19T10:52:24.8908147Z 
2025-08-19T10:52:24.8908287Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:52:24.8908650Z 
2025-08-19T10:52:24.8908731Z <a id="common.config"></a>
2025-08-19T10:52:24.8908863Z 
2025-08-19T10:52:24.8908947Z # common.config
2025-08-19T10:52:24.8909055Z 
2025-08-19T10:52:24.8909133Z <a id="common.base"></a>
2025-08-19T10:52:24.8909257Z 
2025-08-19T10:52:24.8909333Z # common.base
2025-08-19T10:52:24.8909432Z 
2025-08-19T10:52:24.8909514Z <a id="common.base.Base"></a>
2025-08-19T10:52:24.8909663Z 
2025-08-19T10:52:24.8909731Z ## Base Objects
2025-08-19T10:52:24.8909837Z 
2025-08-19T10:52:24.8909904Z ```python
2025-08-19T10:52:24.8910086Z class Base(DeclarativeBase)
2025-08-19T10:52:24.8910294Z ```
2025-08-19T10:52:24.8910376Z 
2025-08-19T10:52:24.8910461Z Base class for SQLAlchemy models.
2025-08-19T10:52:24.8910609Z 
2025-08-19T10:52:24.8910689Z <a id="repricer"></a>
2025-08-19T10:52:24.8910806Z 
2025-08-19T10:52:24.8910870Z # repricer
2025-08-19T10:52:24.8910966Z 
2025-08-19T10:52:24.8911058Z <a id="repricer.app.schemas"></a>
2025-08-19T10:52:24.8911217Z 
2025-08-19T10:52:24.8911293Z # repricer.app.schemas
2025-08-19T10:52:24.8911453Z 
2025-08-19T10:52:24.8911539Z <a id="repricer.app.deps"></a>
2025-08-19T10:52:24.8911686Z 
2025-08-19T10:52:24.8911766Z # repricer.app.deps
2025-08-19T10:52:24.8911880Z 
2025-08-19T10:52:24.8911996Z Placeholder module for Keepa / SP-API clients.
2025-08-19T10:52:24.8912193Z 
2025-08-19T10:52:24.8912278Z <a id="repricer.app.logic"></a>
2025-08-19T10:52:24.8912423Z 
2025-08-19T10:52:24.8912498Z # repricer.app.logic
2025-08-19T10:52:24.8912621Z 
2025-08-19T10:52:24.8912720Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T10:52:24.8912895Z 
2025-08-19T10:52:24.8912965Z #### MIN\_MARGIN
2025-08-19T10:52:24.8913068Z 
2025-08-19T10:52:24.8913132Z 15 % ROI
2025-08-19T10:52:24.8913227Z 
2025-08-19T10:52:24.8913331Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T10:52:24.8913512Z 
2025-08-19T10:52:24.8913583Z #### compute\_price
2025-08-19T10:52:24.8913819Z 
2025-08-19T10:52:24.8913891Z ```python
2025-08-19T10:52:24.8914143Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T10:52:24.8914450Z ```
2025-08-19T10:52:24.8914535Z 
2025-08-19T10:52:24.8914651Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T10:52:24.8914938Z Replace with real competitive logic later.
2025-08-19T10:52:24.8915120Z 
2025-08-19T10:52:24.8915205Z <a id="repricer.app.main"></a>
2025-08-19T10:52:24.8915349Z 
2025-08-19T10:52:24.8915422Z # repricer.app.main
2025-08-19T10:52:24.8915546Z 
2025-08-19T10:52:24.8915626Z <a id="repricer.app"></a>
2025-08-19T10:52:24.8915759Z 
2025-08-19T10:52:24.8915839Z # repricer.app
2025-08-19T10:52:24.8915941Z 
2025-08-19T10:52:24.8916036Z <a id="repricer.tests.test_imports"></a>
2025-08-19T10:52:24.8916215Z 
2025-08-19T10:52:24.8916297Z # repricer.tests.test\_imports
2025-08-19T10:52:24.8916444Z 
2025-08-19T10:52:24.8916534Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T10:52:24.8916706Z 
2025-08-19T10:52:24.8916810Z # repricer.tests.test\_smoke
2025-08-19T10:52:24.8916957Z 
2025-08-19T10:52:24.8917046Z <a id="repricer.tests"></a>
2025-08-19T10:52:24.8917181Z 
2025-08-19T10:52:24.8917251Z # repricer.tests
2025-08-19T10:52:24.8917359Z 
2025-08-19T10:52:24.8917436Z <a id="db"></a>
2025-08-19T10:52:24.8917544Z 
2025-08-19T10:52:24.8917626Z # db
2025-08-19T10:52:24.8917723Z 
2025-08-19T10:52:24.8917803Z <a id="db.utils.views"></a>
2025-08-19T10:52:24.8917933Z 
2025-08-19T10:52:24.8918096Z # db.utils.views
2025-08-19T10:52:24.8918210Z 
2025-08-19T10:52:24.8918305Z <a id="db.utils.views.replace_view"></a>
2025-08-19T10:52:24.8918474Z 
2025-08-19T10:52:24.8918549Z #### replace\_view
2025-08-19T10:52:24.8918658Z 
2025-08-19T10:52:24.8918721Z ```python
2025-08-19T10:52:24.8918922Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T10:52:24.8919171Z ```
2025-08-19T10:52:24.8919262Z 
2025-08-19T10:52:24.8919350Z Drop and recreate a SQL view atomically.
2025-08-19T10:52:24.8919519Z 
2025-08-19T10:52:24.8919606Z <a id="db.utils"></a>
2025-08-19T10:52:24.8919897Z 
2025-08-19T10:52:24.8919965Z # db.utils
2025-08-19T10:52:24.8920058Z 
2025-08-19T10:52:24.8920147Z <a id="price_importer"></a>
2025-08-19T10:52:24.8920283Z 
2025-08-19T10:52:24.8920354Z # price\_importer
2025-08-19T10:52:24.8920471Z 
2025-08-19T10:52:24.8920576Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T10:52:24.8920764Z 
2025-08-19T10:52:24.8920855Z # price\_importer.services\_common.dsn
2025-08-19T10:52:24.8921031Z 
2025-08-19T10:52:24.8921160Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T10:52:24.8921371Z 
2025-08-19T10:52:24.8921450Z #### build\_dsn
2025-08-19T10:52:24.8921555Z 
2025-08-19T10:52:24.8921620Z ```python
2025-08-19T10:52:24.8921806Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:52:24.8922029Z ```
2025-08-19T10:52:24.8922126Z 
2025-08-19T10:52:24.8922196Z Return safe DSN.
2025-08-19T10:52:24.8922305Z 
2025-08-19T10:52:24.8922717Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T10:52:24.8922929Z 
2025-08-19T10:52:24.8923070Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T10:52:24.8923279Z 
2025-08-19T10:52:24.8923403Z # price\_importer.services\_common.models\_vendor
2025-08-19T10:52:24.8923596Z 
2025-08-19T10:52:24.8923703Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T10:52:24.8923896Z 
2025-08-19T10:52:24.8923990Z # price\_importer.services\_common.db\_url
2025-08-19T10:52:24.8924164Z 
2025-08-19T10:52:24.8924308Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T10:52:24.8924524Z 
2025-08-19T10:52:24.8924592Z #### build\_url
2025-08-19T10:52:24.8924708Z 
2025-08-19T10:52:24.8924774Z ```python
2025-08-19T10:52:24.8924953Z def build_url(async_: bool = True) -> str
2025-08-19T10:52:24.8925194Z ```
2025-08-19T10:52:24.8925280Z 
2025-08-19T10:52:24.8925377Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:52:24.8925563Z 
2025-08-19T10:52:24.8925671Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T10:52:24.8925998Z 
2025-08-19T10:52:24.8926113Z # price\_importer.services\_common.keepa
2025-08-19T10:52:24.8926286Z 
2025-08-19T10:52:24.8926390Z <a id="price_importer.services_common.llm"></a>
2025-08-19T10:52:24.8926581Z 
2025-08-19T10:52:24.8926669Z # price\_importer.services\_common.llm
2025-08-19T10:52:24.8926832Z 
2025-08-19T10:52:24.8926947Z <a id="price_importer.services_common.settings"></a>
2025-08-19T10:52:24.8927164Z 
2025-08-19T10:52:24.8927266Z # price\_importer.services\_common.settings
2025-08-19T10:52:24.8927449Z 
2025-08-19T10:52:24.8927565Z <a id="price_importer.services_common.db"></a>
2025-08-19T10:52:24.8927754Z 
2025-08-19T10:52:24.8927849Z # price\_importer.services\_common.db
2025-08-19T10:52:24.8928133Z 
2025-08-19T10:52:24.8928295Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T10:52:24.8928545Z 
2025-08-19T10:52:24.8928637Z #### build\_sqlalchemy\_url
2025-08-19T10:52:24.8928773Z 
2025-08-19T10:52:24.8928842Z ```python
2025-08-19T10:52:24.8929044Z def build_sqlalchemy_url() -> str
2025-08-19T10:52:24.8929261Z ```
2025-08-19T10:52:24.8929348Z 
2025-08-19T10:52:24.8929458Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:52:24.8929634Z 
2025-08-19T10:52:24.8929781Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T10:52:24.8930020Z 
2025-08-19T10:52:24.8930098Z #### build\_asyncpg\_dsn
2025-08-19T10:52:24.8930224Z 
2025-08-19T10:52:24.8930294Z ```python
2025-08-19T10:52:24.8930465Z def build_asyncpg_dsn() -> str
2025-08-19T10:52:24.8930676Z ```
2025-08-19T10:52:24.8930759Z 
2025-08-19T10:52:24.8930887Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:52:24.8931109Z 
2025-08-19T10:52:24.8931240Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T10:52:24.8931451Z 
2025-08-19T10:52:24.8931521Z #### refresh\_mvs
2025-08-19T10:52:24.8931636Z 
2025-08-19T10:52:24.8931704Z ```python
2025-08-19T10:52:24.8931912Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:52:24.8932172Z ```
2025-08-19T10:52:24.8932256Z 
2025-08-19T10:52:24.8932527Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:52:24.8932746Z 
2025-08-19T10:52:24.8932844Z <a id="price_importer.services_common"></a>
2025-08-19T10:52:24.8933029Z 
2025-08-19T10:52:24.8933117Z # price\_importer.services\_common
2025-08-19T10:52:24.8933275Z 
2025-08-19T10:52:24.8933388Z <a id="price_importer.services_common.base"></a>
2025-08-19T10:52:24.8933580Z 
2025-08-19T10:52:24.8933672Z # price\_importer.services\_common.base
2025-08-19T10:52:24.8933840Z 
2025-08-19T10:52:24.8933941Z <a id="price_importer.normaliser"></a>
2025-08-19T10:52:24.8934107Z 
2025-08-19T10:52:24.8934191Z # price\_importer.normaliser
2025-08-19T10:52:24.8934340Z 
2025-08-19T10:52:24.8934443Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T10:52:24.8934631Z 
2025-08-19T10:52:24.8934731Z # price\_importer.common.models\_vendor
2025-08-19T10:52:24.8934898Z 
2025-08-19T10:52:24.8934993Z <a id="price_importer.common.db_url"></a>
2025-08-19T10:52:24.8935171Z 
2025-08-19T10:52:24.8935272Z # price\_importer.common.db\_url
2025-08-19T10:52:24.8935424Z 
2025-08-19T10:52:24.8935531Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T10:52:24.8935727Z 
2025-08-19T10:52:24.8935793Z #### make\_dsn
2025-08-19T10:52:24.8935896Z 
2025-08-19T10:52:24.8935967Z ```python
2025-08-19T10:52:24.8936143Z def make_dsn(async_: bool = False) -> str
2025-08-19T10:52:24.8936374Z ```
2025-08-19T10:52:24.8936457Z 
2025-08-19T10:52:24.8936577Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T10:52:24.8936787Z 
2025-08-19T10:52:24.8936895Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T10:52:24.8937085Z 
2025-08-19T10:52:24.8937148Z #### build\_url
2025-08-19T10:52:24.8937256Z 
2025-08-19T10:52:24.8937319Z ```python
2025-08-19T10:52:24.8937502Z def build_url(async_: bool = False) -> str
2025-08-19T10:52:24.8937729Z ```
2025-08-19T10:52:24.8937809Z 
2025-08-19T10:52:24.8937937Z Return Postgres DSN built from environment variables.
2025-08-19T10:52:24.8938417Z 
2025-08-19T10:52:24.8938505Z <a id="price_importer.common"></a>
2025-08-19T10:52:24.8938663Z 
2025-08-19T10:52:24.8938741Z # price\_importer.common
2025-08-19T10:52:24.8938866Z 
2025-08-19T10:52:24.8938958Z <a id="price_importer.common.base"></a>
2025-08-19T10:52:24.8939129Z 
2025-08-19T10:52:24.8939213Z # price\_importer.common.base
2025-08-19T10:52:24.8939372Z 
2025-08-19T10:52:24.8939477Z <a id="price_importer.tests.conftest"></a>
2025-08-19T10:52:24.8939650Z 
2025-08-19T10:52:24.8939737Z # price\_importer.tests.conftest
2025-08-19T10:52:24.8939894Z 
2025-08-19T10:52:24.8939994Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T10:52:24.8940174Z 
2025-08-19T10:52:24.8940269Z # price\_importer.tests.test\_reader
2025-08-19T10:52:24.8940430Z 
2025-08-19T10:52:24.8940532Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T10:52:24.8940709Z 
2025-08-19T10:52:24.8940807Z # price\_importer.tests.test\_imports
2025-08-19T10:52:24.8940966Z 
2025-08-19T10:52:24.8941070Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T10:52:24.8941257Z 
2025-08-19T10:52:24.8941346Z # price\_importer.tests.test\_smoke
2025-08-19T10:52:24.8941502Z 
2025-08-19T10:52:24.8941617Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T10:52:24.8941801Z 
2025-08-19T10:52:24.8941893Z # price\_importer.tests.test\_normaliser
2025-08-19T10:52:24.8942060Z 
2025-08-19T10:52:24.8942155Z <a id="price_importer.tests"></a>
2025-08-19T10:52:24.8942307Z 
2025-08-19T10:52:24.8942385Z # price\_importer.tests
2025-08-19T10:52:24.8942516Z 
2025-08-19T10:52:24.8942601Z <a id="price_importer.reader"></a>
2025-08-19T10:52:24.8942753Z 
2025-08-19T10:52:24.8942839Z # price\_importer.reader
2025-08-19T10:52:24.8942968Z 
2025-08-19T10:52:24.8943060Z <a id="price_importer.repository"></a>
2025-08-19T10:52:24.8943224Z 
2025-08-19T10:52:24.8943318Z # price\_importer.repository
2025-08-19T10:52:24.8943457Z 
2025-08-19T10:52:24.8943541Z <a id="price_importer.import"></a>
2025-08-19T10:52:24.8943699Z 
2025-08-19T10:52:24.8943782Z # price\_importer.import
2025-08-19T10:52:24.8944027Z 
2025-08-19T10:52:24.8944100Z <a id="fees_h10"></a>
2025-08-19T10:52:24.8944218Z 
2025-08-19T10:52:24.8944282Z # fees\_h10
2025-08-19T10:52:24.8944375Z 
2025-08-19T10:52:24.8944462Z <a id="fees_h10.worker"></a>
2025-08-19T10:52:24.8944595Z 
2025-08-19T10:52:24.8944663Z # fees\_h10.worker
2025-08-19T10:52:24.8944777Z 
2025-08-19T10:52:24.8944874Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T10:52:24.8945050Z 
2025-08-19T10:52:24.8945123Z #### list\_active\_asins
2025-08-19T10:52:24.8945250Z 
2025-08-19T10:52:24.8945314Z ```python
2025-08-19T10:52:24.8945490Z def list_active_asins() -> list[str]
2025-08-19T10:52:24.8945703Z ```
2025-08-19T10:52:24.8945784Z 
2025-08-19T10:52:24.8945904Z Return known ASINs or an empty list if unavailable.
2025-08-19T10:52:24.8946098Z 
2025-08-19T10:52:24.8946181Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T10:52:24.8946348Z 
2025-08-19T10:52:24.8946429Z # fees\_h10.tests.test\_smoke
2025-08-19T10:52:24.8946572Z 
2025-08-19T10:52:24.8946654Z <a id="fees_h10.tests"></a>
2025-08-19T10:52:24.8946792Z 
2025-08-19T10:52:24.8946859Z # fees\_h10.tests
2025-08-19T10:52:24.8946965Z 
2025-08-19T10:52:24.8947049Z <a id="fees_h10.client"></a>
2025-08-19T10:52:24.8947179Z 
2025-08-19T10:52:24.8947246Z # fees\_h10.client
2025-08-19T10:52:24.8947359Z 
2025-08-19T10:52:24.8947441Z <a id="fees_h10.repository"></a>
2025-08-19T10:52:24.8947586Z 
2025-08-19T10:52:24.8947662Z # fees\_h10.repository
2025-08-19T10:52:24.8947784Z 
2025-08-19T10:52:24.8947854Z <a id="emailer"></a>
2025-08-19T10:52:24.8947966Z 
2025-08-19T10:52:24.8948139Z # emailer
2025-08-19T10:52:24.8948231Z 
2025-08-19T10:52:24.8948332Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T10:52:24.8948513Z 
2025-08-19T10:52:24.8948604Z # emailer.tests.test\_import\_emailer
2025-08-19T10:52:24.8948760Z 
2025-08-19T10:52:24.8948847Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T10:52:24.8949007Z 
2025-08-19T10:52:24.8949088Z # emailer.tests.test\_smoke
2025-08-19T10:52:24.8949353Z 
2025-08-19T10:52:24.8949439Z <a id="emailer.tests"></a>
2025-08-19T10:52:24.8949568Z 
2025-08-19T10:52:24.8949636Z # emailer.tests
2025-08-19T10:52:24.8949739Z 
2025-08-19T10:52:24.8949830Z <a id="emailer.generate_body"></a>
2025-08-19T10:52:24.8949980Z 
2025-08-19T10:52:24.8950057Z # emailer.generate\_body
2025-08-19T10:52:24.8950187Z 
2025-08-19T10:52:24.8950258Z <a id="llm_server"></a>
2025-08-19T10:52:24.8950375Z 
2025-08-19T10:52:24.8950447Z # llm\_server
2025-08-19T10:52:24.8950545Z 
2025-08-19T10:52:24.8950625Z <a id="llm_server.app"></a>
2025-08-19T10:52:24.8950755Z 
2025-08-19T10:52:24.8950830Z # llm\_server.app
2025-08-19T10:52:24.8950936Z 
