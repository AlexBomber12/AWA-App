2025-08-19T10:58:35.8318534Z ##[group]Run pydoc-markdown
2025-08-19T10:58:35.8318850Z [36;1mpydoc-markdown[0m
2025-08-19T10:58:35.8361866Z shell: /usr/bin/bash -e {0}
2025-08-19T10:58:35.8362103Z env:
2025-08-19T10:58:35.8362342Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:58:35.8362741Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T10:58:35.8363327Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:58:35.8363667Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:58:35.8364015Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:58:35.8364358Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T10:58:35.8364636Z ##[endgroup]
2025-08-19T10:58:36.4375309Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T10:58:36.4375987Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T10:58:36.4376437Z In "pydoc-markdown.yml"
2025-08-19T10:58:36.4376825Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T10:58:36.4377565Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T10:58:36.4378265Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T10:58:36.4378724Z 
2025-08-19T10:58:36.7665292Z <a id="__init__"></a>
2025-08-19T10:58:36.7665885Z 
2025-08-19T10:58:36.7666030Z # \_\_init\_\_
2025-08-19T10:58:36.7666226Z 
2025-08-19T10:58:36.7666344Z <a id="api"></a>
2025-08-19T10:58:36.7666525Z 
2025-08-19T10:58:36.7666629Z # api
2025-08-19T10:58:36.7666784Z 
2025-08-19T10:58:36.7666916Z <a id="api.errors"></a>
2025-08-19T10:58:36.7667108Z 
2025-08-19T10:58:36.7667189Z # api.errors
2025-08-19T10:58:36.7667307Z 
2025-08-19T10:58:36.7667402Z <a id="api.sentry_config"></a>
2025-08-19T10:58:36.7667572Z 
2025-08-19T10:58:36.7667656Z # api.sentry\_config
2025-08-19T10:58:36.7667787Z 
2025-08-19T10:58:36.7667891Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T10:58:36.7668094Z 
2025-08-19T10:58:36.7668189Z # api.tests.test\_sentry\_scrub
2025-08-19T10:58:36.7668390Z 
2025-08-19T10:58:36.7668497Z <a id="api.tests.test_errors_json"></a>
2025-08-19T10:58:36.7668687Z 
2025-08-19T10:58:36.7668774Z # api.tests.test\_errors\_json
2025-08-19T10:58:36.7668935Z 
2025-08-19T10:58:36.7669023Z <a id="api.tests.test_llm"></a>
2025-08-19T10:58:36.7669176Z 
2025-08-19T10:58:36.7669255Z # api.tests.test\_llm
2025-08-19T10:58:36.7669390Z 
2025-08-19T10:58:36.7669487Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T10:58:36.7669672Z 
2025-08-19T10:58:36.7669763Z # api.tests.test\_sentry\_event
2025-08-19T10:58:36.7669917Z 
2025-08-19T10:58:36.7670054Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T10:58:36.7670298Z 
2025-08-19T10:58:36.7670387Z ## DummyTransport Objects
2025-08-19T10:58:36.7670540Z 
2025-08-19T10:58:36.7670611Z ```python
2025-08-19T10:58:36.7670802Z class DummyTransport()
2025-08-19T10:58:36.7671002Z ```
2025-08-19T10:58:36.7671101Z 
2025-08-19T10:58:36.7671297Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T10:58:36.7671878Z 
2025-08-19T10:58:36.7671965Z #### capture\_envelope
2025-08-19T10:58:36.7672096Z 
2025-08-19T10:58:36.7672166Z ```python
2025-08-19T10:58:36.7672361Z def capture_envelope(envelope)
2025-08-19T10:58:36.7672582Z ```
2025-08-19T10:58:36.7672679Z 
2025-08-19T10:58:36.7672993Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T10:58:36.7673230Z 
2025-08-19T10:58:36.7673329Z <a id="api.tests.test_cors"></a>
2025-08-19T10:58:36.7673491Z 
2025-08-19T10:58:36.7673572Z # api.tests.test\_cors
2025-08-19T10:58:36.7673699Z 
2025-08-19T10:58:36.7673797Z <a id="api.tests.test_imports"></a>
2025-08-19T10:58:36.7673970Z 
2025-08-19T10:58:36.7674053Z # api.tests.test\_imports
2025-08-19T10:58:36.7674202Z 
2025-08-19T10:58:36.7674298Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T10:58:36.7674478Z 
2025-08-19T10:58:36.7674563Z # api.tests.test\_rate\_limit
2025-08-19T10:58:36.7674722Z 
2025-08-19T10:58:36.7674826Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T10:58:36.7675251Z 
2025-08-19T10:58:36.7675328Z #### app
2025-08-19T10:58:36.7675424Z 
2025-08-19T10:58:36.7675494Z noqa: E402
2025-08-19T10:58:36.7675600Z 
2025-08-19T10:58:36.7675693Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T10:58:36.7675876Z 
2025-08-19T10:58:36.7675966Z # api.tests.test\_entrypoint
2025-08-19T10:58:36.7676129Z 
2025-08-19T10:58:36.7676220Z <a id="api.tests.test_health"></a>
2025-08-19T10:58:36.7676388Z 
2025-08-19T10:58:36.7676476Z # api.tests.test\_health
2025-08-19T10:58:36.7676614Z 
2025-08-19T10:58:36.7676702Z <a id="api.logging_config"></a>
2025-08-19T10:58:36.7676866Z 
2025-08-19T10:58:36.7676945Z # api.logging\_config
2025-08-19T10:58:36.7677073Z 
2025-08-19T10:58:36.7677162Z <a id="api.migrations.env"></a>
2025-08-19T10:58:36.7677325Z 
2025-08-19T10:58:36.7677406Z # api.migrations.env
2025-08-19T10:58:36.7677531Z 
2025-08-19T10:58:36.7677661Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T10:58:36.7677884Z 
2025-08-19T10:58:36.7677998Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T10:58:36.7678220Z 
2025-08-19T10:58:36.7678341Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T10:58:36.7678553Z 
2025-08-19T10:58:36.7678655Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T10:58:36.7678854Z 
2025-08-19T10:58:36.7679020Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T10:58:36.7679285Z 
2025-08-19T10:58:36.7679438Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T10:58:36.7679680Z 
2025-08-19T10:58:36.7679812Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T10:58:36.7680042Z 
2025-08-19T10:58:36.7680158Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T10:58:36.7680361Z 
2025-08-19T10:58:36.7680486Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T10:58:36.7680723Z 
2025-08-19T10:58:36.7680834Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T10:58:36.7681035Z 
2025-08-19T10:58:36.7681170Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T10:58:36.7681379Z 
2025-08-19T10:58:36.7681487Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T10:58:36.7681678Z 
2025-08-19T10:58:36.7681792Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T10:58:36.7681983Z 
2025-08-19T10:58:36.7682096Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T10:58:36.7682278Z 
2025-08-19T10:58:36.7682394Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T10:58:36.7682588Z 
2025-08-19T10:58:36.7682698Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T10:58:36.7683010Z 
2025-08-19T10:58:36.7683144Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T10:58:36.7683364Z 
2025-08-19T10:58:36.7683481Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T10:58:36.7683675Z 
2025-08-19T10:58:36.7683800Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T10:58:36.7683998Z 
2025-08-19T10:58:36.7684103Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T10:58:36.7684423Z 
2025-08-19T10:58:36.7684556Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T10:58:36.7684787Z 
2025-08-19T10:58:36.7684911Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T10:58:36.7685199Z 
2025-08-19T10:58:36.7685306Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T10:58:36.7685496Z 
2025-08-19T10:58:36.7685589Z # api.migrations.versions.0001\_baseline
2025-08-19T10:58:36.7685755Z 
2025-08-19T10:58:36.7685848Z <a id="api.migrations.versions"></a>
2025-08-19T10:58:36.7686005Z 
2025-08-19T10:58:36.7686086Z # api.migrations.versions
2025-08-19T10:58:36.7686215Z 
2025-08-19T10:58:36.7686301Z <a id="api.migrations"></a>
2025-08-19T10:58:36.7686436Z 
2025-08-19T10:58:36.7686505Z # api.migrations
2025-08-19T10:58:36.7686618Z 
2025-08-19T10:58:36.7686684Z <a id="api.db"></a>
2025-08-19T10:58:36.7686789Z 
2025-08-19T10:58:36.7686852Z # api.db
2025-08-19T10:58:36.7686945Z 
2025-08-19T10:58:36.7687027Z <a id="api.routes.stats"></a>
2025-08-19T10:58:36.7687301Z 
2025-08-19T10:58:36.7687377Z # api.routes.stats
2025-08-19T10:58:36.7687482Z 
2025-08-19T10:58:36.7687568Z <a id="api.routes.stats.kpi"></a>
2025-08-19T10:58:36.7687722Z 
2025-08-19T10:58:36.7687784Z #### kpi
2025-08-19T10:58:36.7687867Z 
2025-08-19T10:58:36.7687930Z ```python
2025-08-19T10:58:36.7688096Z @router.get("/stats/kpi")
2025-08-19T10:58:36.7688342Z def kpi() -> List[Dict[str, int]]
2025-08-19T10:58:36.7688548Z ```
2025-08-19T10:58:36.7688632Z 
2025-08-19T10:58:36.7688716Z Return KPI metrics (mock).
2025-08-19T10:58:36.7688845Z 
2025-08-19T10:58:36.7688941Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T10:58:36.7689122Z 
2025-08-19T10:58:36.7689189Z #### roi\_by\_vendor
2025-08-19T10:58:36.7689297Z 
2025-08-19T10:58:36.7689359Z ```python
2025-08-19T10:58:36.7689532Z @router.get("/stats/roi_by_vendor")
2025-08-19T10:58:36.7689772Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T10:58:36.7690002Z ```
2025-08-19T10:58:36.7690083Z 
2025-08-19T10:58:36.7690180Z Return ROI percent by vendor.
2025-08-19T10:58:36.7690321Z 
2025-08-19T10:58:36.7690411Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T10:58:36.7690586Z 
2025-08-19T10:58:36.7690650Z #### roi\_trend
2025-08-19T10:58:36.7690749Z 
2025-08-19T10:58:36.7690809Z ```python
2025-08-19T10:58:36.7690978Z @router.get("/stats/roi_trend")
2025-08-19T10:58:36.7691212Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T10:58:36.7691448Z ```
2025-08-19T10:58:36.7691528Z 
2025-08-19T10:58:36.7691608Z Return 30-day ROI trend.
2025-08-19T10:58:36.7691731Z 
2025-08-19T10:58:36.7691812Z <a id="api.routes.roi"></a>
2025-08-19T10:58:36.7691947Z 
2025-08-19T10:58:36.7692015Z # api.routes.roi
2025-08-19T10:58:36.7692116Z 
2025-08-19T10:58:36.7692196Z <a id="api.routes.health"></a>
2025-08-19T10:58:36.7692337Z 
2025-08-19T10:58:36.7692408Z # api.routes.health
2025-08-19T10:58:36.7692518Z 
2025-08-19T10:58:36.7692612Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T10:58:36.7692780Z 
2025-08-19T10:58:36.7692978Z #### MAX\_SKEW
2025-08-19T10:58:36.7693083Z 
2025-08-19T10:58:36.7693156Z seconds
2025-08-19T10:58:36.7693241Z 
2025-08-19T10:58:36.7693334Z <a id="api.routes.health.health"></a>
2025-08-19T10:58:36.7693505Z 
2025-08-19T10:58:36.7693566Z #### health
2025-08-19T10:58:36.7693655Z 
2025-08-19T10:58:36.7693718Z ```python
2025-08-19T10:58:36.7693911Z @router.get("/health", include_in_schema=False)
2025-08-19T10:58:36.7694294Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T10:58:36.7694630Z ```
2025-08-19T10:58:36.7694714Z 
2025-08-19T10:58:36.7694837Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T10:58:36.7695035Z 
2025-08-19T10:58:36.7695124Z <a id="api.routes.repository"></a>
2025-08-19T10:58:36.7695286Z 
2025-08-19T10:58:36.7695405Z # api.routes.repository
2025-08-19T10:58:36.7695614Z 
2025-08-19T10:58:36.7695728Z <a id="api.routes"></a>
2025-08-19T10:58:36.7695914Z 
2025-08-19T10:58:36.7696015Z # api.routes
2025-08-19T10:58:36.7696165Z 
2025-08-19T10:58:36.7696493Z <a id="api.models.fee"></a>
2025-08-19T10:58:36.7696714Z 
2025-08-19T10:58:36.7696822Z # api.models.fee
2025-08-19T10:58:36.7696998Z 
2025-08-19T10:58:36.7697113Z <a id="api.models"></a>
2025-08-19T10:58:36.7697307Z 
2025-08-19T10:58:36.7697413Z # api.models
2025-08-19T10:58:36.7697574Z 
2025-08-19T10:58:36.7697705Z <a id="api.roi_repository"></a>
2025-08-19T10:58:36.7697941Z 
2025-08-19T10:58:36.7698068Z # api.roi\_repository
2025-08-19T10:58:36.7698269Z 
2025-08-19T10:58:36.7698392Z <a id="api.main"></a>
2025-08-19T10:58:36.7698609Z 
2025-08-19T10:58:36.7698712Z # api.main
2025-08-19T10:58:36.7698864Z 
2025-08-19T10:58:36.7698994Z <a id="api.main.ready"></a>
2025-08-19T10:58:36.7699221Z 
2025-08-19T10:58:36.7699320Z #### ready
2025-08-19T10:58:36.7699520Z 
2025-08-19T10:58:36.7699631Z ```python
2025-08-19T10:58:36.7700045Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T10:58:36.7700495Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T10:58:36.7701039Z                                                                       str]
2025-08-19T10:58:36.7701276Z ```
2025-08-19T10:58:36.7701362Z 
2025-08-19T10:58:36.7701568Z Return 200 only when migrations are at head.
2025-08-19T10:58:36.7701755Z 
2025-08-19T10:58:36.7701830Z <a id="api.config"></a>
2025-08-19T10:58:36.7701948Z 
2025-08-19T10:58:36.7702020Z # api.config
2025-08-19T10:58:36.7702115Z 
2025-08-19T10:58:36.7702179Z <a id="etl"></a>
2025-08-19T10:58:36.7702286Z 
2025-08-19T10:58:36.7702350Z # etl
2025-08-19T10:58:36.7702435Z 
2025-08-19T10:58:36.7702517Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T10:58:36.7702681Z 
2025-08-19T10:58:36.7702755Z # etl.fba\_fee\_ingestor
2025-08-19T10:58:36.7703139Z 
2025-08-19T10:58:36.7703287Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T10:58:36.7703549Z 
2025-08-19T10:58:36.7703685Z # etl.sp\_fees\_ingestor
2025-08-19T10:58:36.7703903Z 
2025-08-19T10:58:36.7704050Z <a id="etl.keepa_ingestor"></a>
2025-08-19T10:58:36.7704286Z 
2025-08-19T10:58:36.7704367Z # etl.keepa\_ingestor
2025-08-19T10:58:36.7704485Z 
2025-08-19T10:58:36.7704557Z <a id="etl.db"></a>
2025-08-19T10:58:36.7704670Z 
2025-08-19T10:58:36.7704732Z # etl.db
2025-08-19T10:58:36.7704821Z 
2025-08-19T10:58:36.7704912Z <a id="etl.dialects.schemas"></a>
2025-08-19T10:58:36.7705060Z 
2025-08-19T10:58:36.7705136Z # etl.dialects.schemas
2025-08-19T10:58:36.7705260Z 
2025-08-19T10:58:36.7705369Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T10:58:36.7705556Z 
2025-08-19T10:58:36.7705647Z # etl.dialects.amazon\_reimbursements
2025-08-19T10:58:36.7705816Z 
2025-08-19T10:58:36.7705913Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T10:58:36.7706087Z 
2025-08-19T10:58:36.7706180Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T10:58:36.7706334Z 
2025-08-19T10:58:36.7706420Z <a id="etl.dialects.test_generic"></a>
2025-08-19T10:58:36.7706583Z 
2025-08-19T10:58:36.7706663Z # etl.dialects.test\_generic
2025-08-19T10:58:36.7706804Z 
2025-08-19T10:58:36.7706903Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T10:58:36.7707081Z 
2025-08-19T10:58:36.7707163Z # etl.dialects.amazon\_returns
2025-08-19T10:58:36.7707302Z 
2025-08-19T10:58:36.7707403Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T10:58:36.7707574Z 
2025-08-19T10:58:36.7707658Z # etl.dialects.amazon\_fee\_preview
2025-08-19T10:58:36.7707814Z 
2025-08-19T10:58:36.7707918Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T10:58:36.7708101Z 
2025-08-19T10:58:36.7708190Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T10:58:36.7708358Z 
2025-08-19T10:58:36.7708455Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T10:58:36.7708626Z 
2025-08-19T10:58:36.7708718Z # etl.dialects.amazon\_settlements
2025-08-19T10:58:36.7708869Z 
2025-08-19T10:58:36.7708946Z <a id="etl.dialects"></a>
2025-08-19T10:58:36.7709078Z 
2025-08-19T10:58:36.7709146Z # etl.dialects
2025-08-19T10:58:36.7709244Z 
2025-08-19T10:58:36.7709312Z <a id="ingest"></a>
2025-08-19T10:58:36.7709425Z 
2025-08-19T10:58:36.7709665Z # ingest
2025-08-19T10:58:36.7709757Z 
2025-08-19T10:58:36.7709846Z <a id="ingest.maintenance"></a>
2025-08-19T10:58:36.7709992Z 
2025-08-19T10:58:36.7710063Z # ingest.maintenance
2025-08-19T10:58:36.7710178Z 
2025-08-19T10:58:36.7710262Z <a id="ingest.copy_loader"></a>
2025-08-19T10:58:36.7710399Z 
2025-08-19T10:58:36.7710468Z # ingest.copy\_loader
2025-08-19T10:58:36.7710589Z 
2025-08-19T10:58:36.7710688Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T10:58:36.7710876Z 
2025-08-19T10:58:36.7710954Z #### copy\_df\_via\_temp
2025-08-19T10:58:36.7711074Z 
2025-08-19T10:58:36.7711136Z ```python
2025-08-19T10:58:36.7711308Z def copy_df_via_temp(engine: Engine,
2025-08-19T10:58:36.7711541Z                      df: pd.DataFrame,
2025-08-19T10:58:36.7711775Z                      target_table: str,
2025-08-19T10:58:36.7711988Z                      *,
2025-08-19T10:58:36.7712200Z                      target_schema: Optional[str] = None,
2025-08-19T10:58:36.7712459Z                      columns: Sequence[str],
2025-08-19T10:58:36.7713023Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T10:58:36.7713312Z                      analyze_after: bool = False,
2025-08-19T10:58:36.7713571Z                      connection: Any | None = None) -> int
2025-08-19T10:58:36.7713812Z ```
2025-08-19T10:58:36.7713899Z 
2025-08-19T10:58:36.7714055Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T10:58:36.7714289Z 
2025-08-19T10:58:36.7714374Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T10:58:36.7714649Z 
2025-08-19T10:58:36.7714850Z # ingest.tests.test\_smoke
2025-08-19T10:58:36.7715047Z 
2025-08-19T10:58:36.7715140Z <a id="ingest.tests"></a>
2025-08-19T10:58:36.7715295Z 
2025-08-19T10:58:36.7715376Z # ingest.tests
2025-08-19T10:58:36.7715495Z 
2025-08-19T10:58:36.7715591Z <a id="ingest.upload_router"></a>
2025-08-19T10:58:36.7715778Z 
2025-08-19T10:58:36.7715862Z # ingest.upload\_router
2025-08-19T10:58:36.7716000Z 
2025-08-19T10:58:36.7716090Z <a id="ingest.email_watcher"></a>
2025-08-19T10:58:36.7716323Z 
2025-08-19T10:58:36.7716409Z # ingest.email\_watcher
2025-08-19T10:58:36.7716551Z 
2025-08-19T10:58:36.7716649Z <a id="ingest.email_watcher.main"></a>
2025-08-19T10:58:36.7716834Z 
2025-08-19T10:58:36.7716910Z #### main
2025-08-19T10:58:36.7717008Z 
2025-08-19T10:58:36.7717079Z ```python
2025-08-19T10:58:36.7717271Z def main() -> dict[str, str]
2025-08-19T10:58:36.7717517Z ```
2025-08-19T10:58:36.7717610Z 
2025-08-19T10:58:36.7717772Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T10:58:36.7718034Z 
2025-08-19T10:58:36.7718179Z Returns {"status": "success"} when processing completes.
2025-08-19T10:58:36.7718483Z 
2025-08-19T10:58:36.7718614Z <a id="ingest.tasks"></a>
2025-08-19T10:58:36.7718838Z 
2025-08-19T10:58:36.7718948Z # ingest.tasks
2025-08-19T10:58:36.7719113Z 
2025-08-19T10:58:36.7719276Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T10:58:36.7719684Z 
2025-08-19T10:58:36.7719819Z #### task\_import\_file
2025-08-19T10:58:36.7720079Z 
2025-08-19T10:58:36.7720188Z ```python
2025-08-19T10:58:36.7720561Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T10:58:36.7721050Z def task_import_file(self: Any,
2025-08-19T10:58:36.7721395Z                      uri: str,
2025-08-19T10:58:36.7721756Z                      report_type: str | None = None,
2025-08-19T10:58:36.7722367Z                      force: bool = False) -> dict[str, Any]
2025-08-19T10:58:36.7723038Z ```
2025-08-19T10:58:36.7723214Z 
2025-08-19T10:58:36.7723509Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T10:58:36.7723944Z 
2025-08-19T10:58:36.7724126Z <a id="ingest.celery_app"></a>
2025-08-19T10:58:36.7724452Z 
2025-08-19T10:58:36.7724613Z # ingest.celery\_app
2025-08-19T10:58:36.7724869Z 
2025-08-19T10:58:36.7725009Z <a id="ingest.ingest_router"></a>
2025-08-19T10:58:36.7725266Z 
2025-08-19T10:58:36.7725395Z # ingest.ingest\_router
2025-08-19T10:58:36.7725614Z 
2025-08-19T10:58:36.7725778Z <a id="logistics_etl"></a>
2025-08-19T10:58:36.7726340Z 
2025-08-19T10:58:36.7726492Z # logistics\_etl
2025-08-19T10:58:36.7726689Z 
2025-08-19T10:58:36.7726825Z Daily logistics ETL job.
2025-08-19T10:58:36.7727055Z 
2025-08-19T10:58:36.7727206Z <a id="logistics_etl.__main__"></a>
2025-08-19T10:58:36.7727430Z 
2025-08-19T10:58:36.7727517Z # logistics\_etl.\_\_main\_\_
2025-08-19T10:58:36.7727672Z 
2025-08-19T10:58:36.7727763Z <a id="logistics_etl.dsn"></a>
2025-08-19T10:58:36.7727917Z 
2025-08-19T10:58:36.7727992Z # logistics\_etl.dsn
2025-08-19T10:58:36.7728123Z 
2025-08-19T10:58:36.7728259Z Local DSN builder to avoid cross-service dependency.
2025-08-19T10:58:36.7728540Z 
2025-08-19T10:58:36.7728674Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T10:58:36.7728875Z 
2025-08-19T10:58:36.7728948Z #### build\_dsn
2025-08-19T10:58:36.7729065Z 
2025-08-19T10:58:36.7729141Z ```python
2025-08-19T10:58:36.7729337Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:58:36.7729587Z ```
2025-08-19T10:58:36.7729719Z 
2025-08-19T10:58:36.7730241Z Return a Postgres DSN assembled from environment variables.
2025-08-19T10:58:36.7730648Z 
2025-08-19T10:58:36.7730850Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T10:58:36.7731317Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T10:58:36.7731713Z error when any required variable is missing.
2025-08-19T10:58:36.7731890Z 
2025-08-19T10:58:36.7731992Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T10:58:36.7732165Z 
2025-08-19T10:58:36.7732249Z # logistics\_etl.tests.conftest
2025-08-19T10:58:36.7732403Z 
2025-08-19T10:58:36.7732507Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T10:58:36.7732694Z 
2025-08-19T10:58:36.7732786Z # logistics\_etl.tests.test\_repository
2025-08-19T10:58:36.7733167Z 
2025-08-19T10:58:36.7733263Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T10:58:36.7733431Z 
2025-08-19T10:58:36.7733524Z # logistics\_etl.tests.test\_cron
2025-08-19T10:58:36.7733683Z 
2025-08-19T10:58:36.7733793Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T10:58:36.7734000Z 
2025-08-19T10:58:36.7734086Z # logistics\_etl.tests.test\_imports
2025-08-19T10:58:36.7734244Z 
2025-08-19T10:58:36.7734345Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T10:58:36.7734517Z 
2025-08-19T10:58:36.7734629Z # logistics\_etl.tests.test\_smoke
2025-08-19T10:58:36.7734783Z 
2025-08-19T10:58:36.7734902Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T10:58:36.7735071Z 
2025-08-19T10:58:36.7735156Z # logistics\_etl.tests.test\_client
2025-08-19T10:58:36.7735321Z 
2025-08-19T10:58:36.7735401Z <a id="logistics_etl.tests"></a>
2025-08-19T10:58:36.7735546Z 
2025-08-19T10:58:36.7735617Z # logistics\_etl.tests
2025-08-19T10:58:36.7735750Z 
2025-08-19T10:58:36.7735829Z <a id="logistics_etl.flow"></a>
2025-08-19T10:58:36.7735972Z 
2025-08-19T10:58:36.7736048Z # logistics\_etl.flow
2025-08-19T10:58:36.7736164Z 
2025-08-19T10:58:36.7736244Z <a id="logistics_etl.client"></a>
2025-08-19T10:58:36.7736398Z 
2025-08-19T10:58:36.7773911Z # logistics\_etl.client
2025-08-19T10:58:36.7774279Z 
2025-08-19T10:58:36.7774428Z <a id="logistics_etl.cron"></a>
2025-08-19T10:58:36.7774680Z 
2025-08-19T10:58:36.7774812Z # logistics\_etl.cron
2025-08-19T10:58:36.7775011Z 
2025-08-19T10:58:36.7775144Z <a id="logistics_etl.db"></a>
2025-08-19T10:58:36.7775385Z 
2025-08-19T10:58:36.7775499Z # logistics\_etl.db
2025-08-19T10:58:36.7775684Z 
2025-08-19T10:58:36.7775836Z <a id="logistics_etl.repository"></a>
2025-08-19T10:58:36.7776082Z 
2025-08-19T10:58:36.7776170Z # logistics\_etl.repository
2025-08-19T10:58:36.7776312Z 
2025-08-19T10:58:36.7776393Z <a id="alert_bot"></a>
2025-08-19T10:58:36.7776515Z 
2025-08-19T10:58:36.7776581Z # alert\_bot
2025-08-19T10:58:36.7776690Z 
2025-08-19T10:58:36.7776782Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T10:58:36.7776957Z 
2025-08-19T10:58:36.7777039Z # alert\_bot.tests.test\_smoke
2025-08-19T10:58:36.7777189Z 
2025-08-19T10:58:36.7777273Z <a id="alert_bot.tests"></a>
2025-08-19T10:58:36.7777411Z 
2025-08-19T10:58:36.7777788Z # alert\_bot.tests
2025-08-19T10:58:36.7777900Z 
2025-08-19T10:58:36.7777982Z <a id="alert_bot.alert_bot"></a>
2025-08-19T10:58:36.7778127Z 
2025-08-19T10:58:36.7778204Z # alert\_bot.alert\_bot
2025-08-19T10:58:36.7778325Z 
2025-08-19T10:58:36.7778400Z <a id="alert_bot.rules"></a>
2025-08-19T10:58:36.7778536Z 
2025-08-19T10:58:36.7778602Z # alert\_bot.rules
2025-08-19T10:58:36.7778708Z 
2025-08-19T10:58:36.7778779Z <a id="common"></a>
2025-08-19T10:58:36.7778883Z 
2025-08-19T10:58:36.7778945Z # common
2025-08-19T10:58:36.7779034Z 
2025-08-19T10:58:36.7779110Z <a id="common.dsn"></a>
2025-08-19T10:58:36.7779225Z 
2025-08-19T10:58:36.7779289Z # common.dsn
2025-08-19T10:58:36.7779420Z 
2025-08-19T10:58:36.7779505Z <a id="common.dsn.build_dsn"></a>
2025-08-19T10:58:36.7779656Z 
2025-08-19T10:58:36.7779724Z #### build\_dsn
2025-08-19T10:58:36.7779834Z 
2025-08-19T10:58:36.7779901Z ```python
2025-08-19T10:58:36.7780088Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:58:36.7780311Z ```
2025-08-19T10:58:36.7780531Z 
2025-08-19T10:58:36.7780664Z Return a Postgres DSN, validating required variables.
2025-08-19T10:58:36.7780876Z 
2025-08-19T10:58:36.7781068Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T10:58:36.7781529Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T10:58:36.7782090Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T10:58:36.7782604Z missing.
2025-08-19T10:58:36.7782755Z 
2025-08-19T10:58:36.7783069Z <a id="common.models_vendor"></a>
2025-08-19T10:58:36.7783338Z 
2025-08-19T10:58:36.7783472Z # common.models\_vendor
2025-08-19T10:58:36.7783694Z 
2025-08-19T10:58:36.7783843Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T10:58:36.7784127Z 
2025-08-19T10:58:36.7784243Z ## Vendor Objects
2025-08-19T10:58:36.7784427Z 
2025-08-19T10:58:36.7784533Z ```python
2025-08-19T10:58:36.7784806Z class Vendor(Base)
2025-08-19T10:58:36.7785088Z ```
2025-08-19T10:58:36.7785229Z 
2025-08-19T10:58:36.7785409Z Vendor of inventory items.
2025-08-19T10:58:36.7785645Z 
2025-08-19T10:58:36.7785829Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T10:58:36.7786156Z 
2025-08-19T10:58:36.7786289Z ## VendorPrice Objects
2025-08-19T10:58:36.7786493Z 
2025-08-19T10:58:36.7786601Z ```python
2025-08-19T10:58:36.7786888Z class VendorPrice(Base)
2025-08-19T10:58:36.7787203Z ```
2025-08-19T10:58:36.7787357Z 
2025-08-19T10:58:36.7787552Z Association table linking vendors to pricing.
2025-08-19T10:58:36.7787893Z 
2025-08-19T10:58:36.7788040Z <a id="common.db_url"></a>
2025-08-19T10:58:36.7788291Z 
2025-08-19T10:58:36.7788418Z # common.db\_url
2025-08-19T10:58:36.7788619Z 
2025-08-19T10:58:36.7788769Z <a id="common.db_url.build_url"></a>
2025-08-19T10:58:36.7789057Z 
2025-08-19T10:58:36.7789179Z #### build\_url
2025-08-19T10:58:36.7789380Z 
2025-08-19T10:58:36.7789499Z ```python
2025-08-19T10:58:36.7789816Z def build_url(async_: bool = True) -> str
2025-08-19T10:58:36.7790203Z ```
2025-08-19T10:58:36.7790370Z 
2025-08-19T10:58:36.7790547Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:58:36.7790876Z 
2025-08-19T10:58:36.7791016Z <a id="common.keepa"></a>
2025-08-19T10:58:36.7791263Z 
2025-08-19T10:58:36.7791382Z # common.keepa
2025-08-19T10:58:36.7791571Z 
2025-08-19T10:58:36.7791698Z <a id="common.llm"></a>
2025-08-19T10:58:36.7791923Z 
2025-08-19T10:58:36.7792039Z # common.llm
2025-08-19T10:58:36.7792216Z 
2025-08-19T10:58:36.7792375Z <a id="common.settings"></a>
2025-08-19T10:58:36.7792623Z 
2025-08-19T10:58:36.7792743Z # common.settings
2025-08-19T10:58:36.7793169Z 
2025-08-19T10:58:36.7793296Z <a id="common.db"></a>
2025-08-19T10:58:36.7793501Z 
2025-08-19T10:58:36.7793619Z # common.db
2025-08-19T10:58:36.7793763Z 
2025-08-19T10:58:36.7793863Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T10:58:36.7794038Z 
2025-08-19T10:58:36.7794120Z #### build\_sqlalchemy\_url
2025-08-19T10:58:36.7794253Z 
2025-08-19T10:58:36.7794317Z ```python
2025-08-19T10:58:36.7794495Z def build_sqlalchemy_url() -> str
2025-08-19T10:58:36.7794990Z ```
2025-08-19T10:58:36.7795083Z 
2025-08-19T10:58:36.7795179Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:58:36.7795357Z 
2025-08-19T10:58:36.7795447Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T10:58:36.7795762Z 
2025-08-19T10:58:36.7795899Z #### build\_asyncpg\_dsn
2025-08-19T10:58:36.7796128Z 
2025-08-19T10:58:36.7796250Z ```python
2025-08-19T10:58:36.7796565Z def build_asyncpg_dsn() -> str
2025-08-19T10:58:36.7796848Z ```
2025-08-19T10:58:36.7796994Z 
2025-08-19T10:58:36.7797131Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:58:36.7797350Z 
2025-08-19T10:58:36.7797435Z <a id="common.db.refresh_mvs"></a>
2025-08-19T10:58:36.7797588Z 
2025-08-19T10:58:36.7797658Z #### refresh\_mvs
2025-08-19T10:58:36.7797761Z 
2025-08-19T10:58:36.7797824Z ```python
2025-08-19T10:58:36.7798024Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:58:36.7798272Z ```
2025-08-19T10:58:36.7798360Z 
2025-08-19T10:58:36.7798496Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:58:36.7798902Z 
2025-08-19T10:58:36.7798981Z <a id="common.config"></a>
2025-08-19T10:58:36.7799116Z 
2025-08-19T10:58:36.7799187Z # common.config
2025-08-19T10:58:36.7799291Z 
2025-08-19T10:58:36.7799377Z <a id="common.base"></a>
2025-08-19T10:58:36.7799502Z 
2025-08-19T10:58:36.7799566Z # common.base
2025-08-19T10:58:36.7799672Z 
2025-08-19T10:58:36.7799821Z <a id="common.base.Base"></a>
2025-08-19T10:58:36.7800082Z 
2025-08-19T10:58:36.7800209Z ## Base Objects
2025-08-19T10:58:36.7800411Z 
2025-08-19T10:58:36.7800532Z ```python
2025-08-19T10:58:36.7800843Z class Base(DeclarativeBase)
2025-08-19T10:58:36.7801214Z ```
2025-08-19T10:58:36.7801370Z 
2025-08-19T10:58:36.7801533Z Base class for SQLAlchemy models.
2025-08-19T10:58:36.7801814Z 
2025-08-19T10:58:36.7801950Z <a id="repricer"></a>
2025-08-19T10:58:36.7802173Z 
2025-08-19T10:58:36.7802295Z # repricer
2025-08-19T10:58:36.7802448Z 
2025-08-19T10:58:36.7802590Z <a id="repricer.app.schemas"></a>
2025-08-19T10:58:36.7803089Z 
2025-08-19T10:58:36.7803237Z # repricer.app.schemas
2025-08-19T10:58:36.7803476Z 
2025-08-19T10:58:36.7803643Z <a id="repricer.app.deps"></a>
2025-08-19T10:58:36.7803930Z 
2025-08-19T10:58:36.7804081Z # repricer.app.deps
2025-08-19T10:58:36.7804301Z 
2025-08-19T10:58:36.7804541Z Placeholder module for Keepa / SP-API clients.
2025-08-19T10:58:36.7804751Z 
2025-08-19T10:58:36.7804840Z <a id="repricer.app.logic"></a>
2025-08-19T10:58:36.7804993Z 
2025-08-19T10:58:36.7805068Z # repricer.app.logic
2025-08-19T10:58:36.7805188Z 
2025-08-19T10:58:36.7805352Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T10:58:36.7805578Z 
2025-08-19T10:58:36.7805647Z #### MIN\_MARGIN
2025-08-19T10:58:36.7805754Z 
2025-08-19T10:58:36.7805823Z 15 % ROI
2025-08-19T10:58:36.7805913Z 
2025-08-19T10:58:36.7806015Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T10:58:36.7806282Z 
2025-08-19T10:58:36.7806417Z #### compute\_price
2025-08-19T10:58:36.7806623Z 
2025-08-19T10:58:36.7806856Z ```python
2025-08-19T10:58:36.7807247Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T10:58:36.7807560Z ```
2025-08-19T10:58:36.7807644Z 
2025-08-19T10:58:36.7807753Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T10:58:36.7808038Z Replace with real competitive logic later.
2025-08-19T10:58:36.7808212Z 
2025-08-19T10:58:36.7808296Z <a id="repricer.app.main"></a>
2025-08-19T10:58:36.7808444Z 
2025-08-19T10:58:36.7808517Z # repricer.app.main
2025-08-19T10:58:36.7808625Z 
2025-08-19T10:58:36.7808707Z <a id="repricer.app"></a>
2025-08-19T10:58:36.7808836Z 
2025-08-19T10:58:36.7808907Z # repricer.app
2025-08-19T10:58:36.7809007Z 
2025-08-19T10:58:36.7809103Z <a id="repricer.tests.test_imports"></a>
2025-08-19T10:58:36.7809277Z 
2025-08-19T10:58:36.7809359Z # repricer.tests.test\_imports
2025-08-19T10:58:36.7809504Z 
2025-08-19T10:58:36.7809593Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T10:58:36.7809756Z 
2025-08-19T10:58:36.7809843Z # repricer.tests.test\_smoke
2025-08-19T10:58:36.7810200Z 
2025-08-19T10:58:36.7810277Z <a id="repricer.tests"></a>
2025-08-19T10:58:36.7810410Z 
2025-08-19T10:58:36.7810487Z # repricer.tests
2025-08-19T10:58:36.7810592Z 
2025-08-19T10:58:36.7810655Z <a id="db"></a>
2025-08-19T10:58:36.7810761Z 
2025-08-19T10:58:36.7810827Z # db
2025-08-19T10:58:36.7810911Z 
2025-08-19T10:58:36.7810987Z <a id="db.utils.views"></a>
2025-08-19T10:58:36.7811122Z 
2025-08-19T10:58:36.7811188Z # db.utils.views
2025-08-19T10:58:36.7811291Z 
2025-08-19T10:58:36.7811393Z <a id="db.utils.views.replace_view"></a>
2025-08-19T10:58:36.7811558Z 
2025-08-19T10:58:36.7811627Z #### replace\_view
2025-08-19T10:58:36.7811740Z 
2025-08-19T10:58:36.7811803Z ```python
2025-08-19T10:58:36.7811996Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T10:58:36.7812247Z ```
2025-08-19T10:58:36.7812331Z 
2025-08-19T10:58:36.7812421Z Drop and recreate a SQL view atomically.
2025-08-19T10:58:36.7812605Z 
2025-08-19T10:58:36.7812735Z <a id="db.utils"></a>
2025-08-19T10:58:36.7813416Z 
2025-08-19T10:58:36.7813548Z # db.utils
2025-08-19T10:58:36.7813729Z 
2025-08-19T10:58:36.7813883Z <a id="price_importer"></a>
2025-08-19T10:58:36.7814156Z 
2025-08-19T10:58:36.7814290Z # price\_importer
2025-08-19T10:58:36.7814496Z 
2025-08-19T10:58:36.7814698Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T10:58:36.7815048Z 
2025-08-19T10:58:36.7815208Z # price\_importer.services\_common.dsn
2025-08-19T10:58:36.7815491Z 
2025-08-19T10:58:36.7815733Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T10:58:36.7816103Z 
2025-08-19T10:58:36.7816223Z #### build\_dsn
2025-08-19T10:58:36.7816408Z 
2025-08-19T10:58:36.7816521Z ```python
2025-08-19T10:58:36.7816802Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:58:36.7817166Z ```
2025-08-19T10:58:36.7817256Z 
2025-08-19T10:58:36.7817322Z Return safe DSN.
2025-08-19T10:58:36.7817435Z 
2025-08-19T10:58:36.7817783Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T10:58:36.7817990Z 
2025-08-19T10:58:36.7818156Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T10:58:36.7818369Z 
2025-08-19T10:58:36.7818480Z # price\_importer.services\_common.models\_vendor
2025-08-19T10:58:36.7818674Z 
2025-08-19T10:58:36.7818785Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T10:58:36.7818970Z 
2025-08-19T10:58:36.7819070Z # price\_importer.services\_common.db\_url
2025-08-19T10:58:36.7819239Z 
2025-08-19T10:58:36.7819369Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T10:58:36.7819581Z 
2025-08-19T10:58:36.7819648Z #### build\_url
2025-08-19T10:58:36.7819748Z 
2025-08-19T10:58:36.7819811Z ```python
2025-08-19T10:58:36.7819990Z def build_url(async_: bool = True) -> str
2025-08-19T10:58:36.7820214Z ```
2025-08-19T10:58:36.7820304Z 
2025-08-19T10:58:36.7820399Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:58:36.7820573Z 
2025-08-19T10:58:36.7820688Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T10:58:36.7820881Z 
2025-08-19T10:58:36.7820987Z # price\_importer.services\_common.keepa
2025-08-19T10:58:36.7821160Z 
2025-08-19T10:58:36.7821261Z <a id="price_importer.services_common.llm"></a>
2025-08-19T10:58:36.7821445Z 
2025-08-19T10:58:36.7821537Z # price\_importer.services\_common.llm
2025-08-19T10:58:36.7821707Z 
2025-08-19T10:58:36.7821824Z <a id="price_importer.services_common.settings"></a>
2025-08-19T10:58:36.7822019Z 
2025-08-19T10:58:36.7822121Z # price\_importer.services\_common.settings
2025-08-19T10:58:36.7822294Z 
2025-08-19T10:58:36.7822399Z <a id="price_importer.services_common.db"></a>
2025-08-19T10:58:36.7822641Z 
2025-08-19T10:58:36.7822728Z # price\_importer.services\_common.db
2025-08-19T10:58:36.7823096Z 
2025-08-19T10:58:36.7823255Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T10:58:36.7823499Z 
2025-08-19T10:58:36.7823574Z #### build\_sqlalchemy\_url
2025-08-19T10:58:36.7823705Z 
2025-08-19T10:58:36.7823772Z ```python
2025-08-19T10:58:36.7823941Z def build_sqlalchemy_url() -> str
2025-08-19T10:58:36.7824329Z ```
2025-08-19T10:58:36.7824411Z 
2025-08-19T10:58:36.7824507Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:58:36.7824682Z 
2025-08-19T10:58:36.7824821Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T10:58:36.7825046Z 
2025-08-19T10:58:36.7825125Z #### build\_asyncpg\_dsn
2025-08-19T10:58:36.7825249Z 
2025-08-19T10:58:36.7825311Z ```python
2025-08-19T10:58:36.7825487Z def build_asyncpg_dsn() -> str
2025-08-19T10:58:36.7825680Z ```
2025-08-19T10:58:36.7825765Z 
2025-08-19T10:58:36.7825892Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:58:36.7826098Z 
2025-08-19T10:58:36.7826222Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T10:58:36.7826432Z 
2025-08-19T10:58:36.7826495Z #### refresh\_mvs
2025-08-19T10:58:36.7826599Z 
2025-08-19T10:58:36.7826666Z ```python
2025-08-19T10:58:36.7826859Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:58:36.7827105Z ```
2025-08-19T10:58:36.7827185Z 
2025-08-19T10:58:36.7827442Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:58:36.7827659Z 
2025-08-19T10:58:36.7827754Z <a id="price_importer.services_common"></a>
2025-08-19T10:58:36.7827922Z 
2025-08-19T10:58:36.7828006Z # price\_importer.services\_common
2025-08-19T10:58:36.7828161Z 
2025-08-19T10:58:36.7828265Z <a id="price_importer.services_common.base"></a>
2025-08-19T10:58:36.7828444Z 
2025-08-19T10:58:36.7828535Z # price\_importer.services\_common.base
2025-08-19T10:58:36.7828698Z 
2025-08-19T10:58:36.7828785Z <a id="price_importer.normaliser"></a>
2025-08-19T10:58:36.7828951Z 
2025-08-19T10:58:36.7829031Z # price\_importer.normaliser
2025-08-19T10:58:36.7829166Z 
2025-08-19T10:58:36.7829268Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T10:58:36.7829453Z 
2025-08-19T10:58:36.7829538Z # price\_importer.common.models\_vendor
2025-08-19T10:58:36.7829695Z 
2025-08-19T10:58:36.7829790Z <a id="price_importer.common.db_url"></a>
2025-08-19T10:58:36.7829955Z 
2025-08-19T10:58:36.7830050Z # price\_importer.common.db\_url
2025-08-19T10:58:36.7830221Z 
2025-08-19T10:58:36.7830326Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T10:58:36.7830509Z 
2025-08-19T10:58:36.7830570Z #### make\_dsn
2025-08-19T10:58:36.7830675Z 
2025-08-19T10:58:36.7830737Z ```python
2025-08-19T10:58:36.7830912Z def make_dsn(async_: bool = False) -> str
2025-08-19T10:58:36.7831129Z ```
2025-08-19T10:58:36.7831208Z 
2025-08-19T10:58:36.7831331Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T10:58:36.7831531Z 
2025-08-19T10:58:36.7831638Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T10:58:36.7831835Z 
2025-08-19T10:58:36.7831897Z #### build\_url
2025-08-19T10:58:36.7831997Z 
2025-08-19T10:58:36.7832064Z ```python
2025-08-19T10:58:36.7832235Z def build_url(async_: bool = False) -> str
2025-08-19T10:58:36.7832461Z ```
2025-08-19T10:58:36.7832543Z 
2025-08-19T10:58:36.7832660Z Return Postgres DSN built from environment variables.
2025-08-19T10:58:36.7833097Z 
2025-08-19T10:58:36.7833201Z <a id="price_importer.common"></a>
2025-08-19T10:58:36.7833352Z 
2025-08-19T10:58:36.7833428Z # price\_importer.common
2025-08-19T10:58:36.7833561Z 
2025-08-19T10:58:36.7833649Z <a id="price_importer.common.base"></a>
2025-08-19T10:58:36.7833810Z 
2025-08-19T10:58:36.7833902Z # price\_importer.common.base
2025-08-19T10:58:36.7834082Z 
2025-08-19T10:58:36.7834177Z <a id="price_importer.tests.conftest"></a>
2025-08-19T10:58:36.7834354Z 
2025-08-19T10:58:36.7834438Z # price\_importer.tests.conftest
2025-08-19T10:58:36.7834584Z 
2025-08-19T10:58:36.7834681Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T10:58:36.7834859Z 
2025-08-19T10:58:36.7834943Z # price\_importer.tests.test\_reader
2025-08-19T10:58:36.7835127Z 
2025-08-19T10:58:36.7835236Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T10:58:36.7835412Z 
2025-08-19T10:58:36.7835497Z # price\_importer.tests.test\_imports
2025-08-19T10:58:36.7835655Z 
2025-08-19T10:58:36.7835750Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T10:58:36.7836085Z 
2025-08-19T10:58:36.7836174Z # price\_importer.tests.test\_smoke
2025-08-19T10:58:36.7836339Z 
2025-08-19T10:58:36.7836445Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T10:58:36.7836629Z 
2025-08-19T10:58:36.7836727Z # price\_importer.tests.test\_normaliser
2025-08-19T10:58:36.7836893Z 
2025-08-19T10:58:36.7836977Z <a id="price_importer.tests"></a>
2025-08-19T10:58:36.7837131Z 
2025-08-19T10:58:36.7837207Z # price\_importer.tests
2025-08-19T10:58:36.7837327Z 
2025-08-19T10:58:36.7837409Z <a id="price_importer.reader"></a>
2025-08-19T10:58:36.7837564Z 
2025-08-19T10:58:36.7837638Z # price\_importer.reader
2025-08-19T10:58:36.7837761Z 
2025-08-19T10:58:36.7837857Z <a id="price_importer.repository"></a>
2025-08-19T10:58:36.7838020Z 
2025-08-19T10:58:36.7838102Z # price\_importer.repository
2025-08-19T10:58:36.7838247Z 
2025-08-19T10:58:36.7838330Z <a id="price_importer.import"></a>
2025-08-19T10:58:36.7838475Z 
2025-08-19T10:58:36.7838549Z # price\_importer.import
2025-08-19T10:58:36.7838793Z 
2025-08-19T10:58:36.7838866Z <a id="fees_h10"></a>
2025-08-19T10:58:36.7838982Z 
2025-08-19T10:58:36.7839051Z # fees\_h10
2025-08-19T10:58:36.7839143Z 
2025-08-19T10:58:36.7839217Z <a id="fees_h10.worker"></a>
2025-08-19T10:58:36.7839350Z 
2025-08-19T10:58:36.7839416Z # fees\_h10.worker
2025-08-19T10:58:36.7839522Z 
2025-08-19T10:58:36.7839617Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T10:58:36.7839799Z 
2025-08-19T10:58:36.7839873Z #### list\_active\_asins
2025-08-19T10:58:36.7839990Z 
2025-08-19T10:58:36.7840062Z ```python
2025-08-19T10:58:36.7840226Z def list_active_asins() -> list[str]
2025-08-19T10:58:36.7840442Z ```
2025-08-19T10:58:36.7840522Z 
2025-08-19T10:58:36.7840633Z Return known ASINs or an empty list if unavailable.
2025-08-19T10:58:36.7840832Z 
2025-08-19T10:58:36.7840914Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T10:58:36.7841071Z 
2025-08-19T10:58:36.7841152Z # fees\_h10.tests.test\_smoke
2025-08-19T10:58:36.7841297Z 
2025-08-19T10:58:36.7841382Z <a id="fees_h10.tests"></a>
2025-08-19T10:58:36.7841512Z 
2025-08-19T10:58:36.7841583Z # fees\_h10.tests
2025-08-19T10:58:36.7841687Z 
2025-08-19T10:58:36.7841762Z <a id="fees_h10.client"></a>
2025-08-19T10:58:36.7841903Z 
2025-08-19T10:58:36.7841967Z # fees\_h10.client
2025-08-19T10:58:36.7842070Z 
2025-08-19T10:58:36.7842151Z <a id="fees_h10.repository"></a>
2025-08-19T10:58:36.7842301Z 
2025-08-19T10:58:36.7842372Z # fees\_h10.repository
2025-08-19T10:58:36.7842487Z 
2025-08-19T10:58:36.7842563Z <a id="emailer"></a>
2025-08-19T10:58:36.7842673Z 
2025-08-19T10:58:36.7842734Z # emailer
2025-08-19T10:58:36.7843012Z 
2025-08-19T10:58:36.7843129Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T10:58:36.7843311Z 
2025-08-19T10:58:36.7843399Z # emailer.tests.test\_import\_emailer
2025-08-19T10:58:36.7843567Z 
2025-08-19T10:58:36.7843657Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T10:58:36.7843812Z 
2025-08-19T10:58:36.7843896Z # emailer.tests.test\_smoke
2025-08-19T10:58:36.7844048Z 
2025-08-19T10:58:36.7844128Z <a id="emailer.tests"></a>
2025-08-19T10:58:36.7844257Z 
2025-08-19T10:58:36.7844329Z # emailer.tests
2025-08-19T10:58:36.7844433Z 
2025-08-19T10:58:36.7844518Z <a id="emailer.generate_body"></a>
2025-08-19T10:58:36.7844673Z 
2025-08-19T10:58:36.7844748Z # emailer.generate\_body
2025-08-19T10:58:36.7844872Z 
2025-08-19T10:58:36.7844942Z <a id="llm_server"></a>
2025-08-19T10:58:36.7845066Z 
2025-08-19T10:58:36.7845129Z # llm\_server
2025-08-19T10:58:36.7845225Z 
2025-08-19T10:58:36.7845308Z <a id="llm_server.app"></a>
2025-08-19T10:58:36.7845437Z 
2025-08-19T10:58:36.7845503Z # llm\_server.app
2025-08-19T10:58:36.7845609Z 
