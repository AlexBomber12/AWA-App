2025-08-20T00:33:58.6803764Z ##[group]Run pydoc-markdown
2025-08-20T00:33:58.6804056Z [36;1mpydoc-markdown[0m
2025-08-20T00:33:58.6844886Z shell: /usr/bin/bash -e {0}
2025-08-20T00:33:58.6845135Z env:
2025-08-20T00:33:58.6845374Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:33:58.6845785Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T00:33:58.6846202Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:33:58.6846555Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:33:58.6846907Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:33:58.6847257Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T00:33:58.6847551Z ##[endgroup]
2025-08-20T00:33:59.1269919Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T00:33:59.1270992Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T00:33:59.1271469Z In "pydoc-markdown.yml"
2025-08-20T00:33:59.1271915Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T00:33:59.1272559Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T00:33:59.1273276Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T00:33:59.1273745Z 
2025-08-20T00:33:59.4847675Z <a id="__init__"></a>
2025-08-20T00:33:59.4848218Z 
2025-08-20T00:33:59.4848405Z # \_\_init\_\_
2025-08-20T00:33:59.4848885Z 
2025-08-20T00:33:59.4849052Z <a id="api"></a>
2025-08-20T00:33:59.4849278Z 
2025-08-20T00:33:59.4849416Z # api
2025-08-20T00:33:59.4849557Z 
2025-08-20T00:33:59.4849674Z <a id="api.errors"></a>
2025-08-20T00:33:59.4849867Z 
2025-08-20T00:33:59.4849976Z # api.errors
2025-08-20T00:33:59.4850133Z 
2025-08-20T00:33:59.4850262Z <a id="api.sentry_config"></a>
2025-08-20T00:33:59.4850486Z 
2025-08-20T00:33:59.4850582Z # api.sentry\_config
2025-08-20T00:33:59.4850732Z 
2025-08-20T00:33:59.4850858Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T00:33:59.4851095Z 
2025-08-20T00:33:59.4851508Z # api.tests.test\_stats\_contracts
2025-08-20T00:33:59.4851720Z 
2025-08-20T00:33:59.4851840Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T00:33:59.4852057Z 
2025-08-20T00:33:59.4852160Z # api.tests.test\_sentry\_scrub
2025-08-20T00:33:59.4852351Z 
2025-08-20T00:33:59.4852470Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T00:33:59.4852688Z 
2025-08-20T00:33:59.4852792Z # api.tests.test\_roi\_basic\_auth
2025-08-20T00:33:59.4852988Z 
2025-08-20T00:33:59.4853098Z <a id="api.tests.test_errors_json"></a>
2025-08-20T00:33:59.4853310Z 
2025-08-20T00:33:59.4853416Z # api.tests.test\_errors\_json
2025-08-20T00:33:59.4853594Z 
2025-08-20T00:33:59.4853695Z <a id="api.tests.test_llm"></a>
2025-08-20T00:33:59.4853879Z 
2025-08-20T00:33:59.4853971Z # api.tests.test\_llm
2025-08-20T00:33:59.4854120Z 
2025-08-20T00:33:59.4854228Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T00:33:59.4854441Z 
2025-08-20T00:33:59.4854543Z # api.tests.test\_roi\_filters
2025-08-20T00:33:59.4854722Z 
2025-08-20T00:33:59.4854845Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T00:33:59.4855062Z 
2025-08-20T00:33:59.4855163Z # api.tests.test\_sentry\_event
2025-08-20T00:33:59.4855341Z 
2025-08-20T00:33:59.4855509Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T00:33:59.4855773Z 
2025-08-20T00:33:59.4855873Z ## DummyTransport Objects
2025-08-20T00:33:59.4856047Z 
2025-08-20T00:33:59.4856131Z ```python
2025-08-20T00:33:59.4856357Z class DummyTransport()
2025-08-20T00:33:59.4856589Z ```
2025-08-20T00:33:59.4856696Z 
2025-08-20T00:33:59.4856922Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T00:33:59.4857259Z 
2025-08-20T00:33:59.4857350Z #### capture\_envelope
2025-08-20T00:33:59.4857502Z 
2025-08-20T00:33:59.4857584Z ```python
2025-08-20T00:33:59.4857804Z def capture_envelope(envelope)
2025-08-20T00:33:59.4858067Z ```
2025-08-20T00:33:59.4858170Z 
2025-08-20T00:33:59.4858325Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T00:33:59.4858602Z 
2025-08-20T00:33:59.4858861Z <a id="api.tests.test_cors"></a>
2025-08-20T00:33:59.4859270Z 
2025-08-20T00:33:59.4859368Z # api.tests.test\_cors
2025-08-20T00:33:59.4859520Z 
2025-08-20T00:33:59.4859626Z <a id="api.tests.test_imports"></a>
2025-08-20T00:33:59.4859834Z 
2025-08-20T00:33:59.4859931Z # api.tests.test\_imports
2025-08-20T00:33:59.4860094Z 
2025-08-20T00:33:59.4860203Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T00:33:59.4860423Z 
2025-08-20T00:33:59.4860525Z # api.tests.test\_rate\_limit
2025-08-20T00:33:59.4860706Z 
2025-08-20T00:33:59.4860833Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T00:33:59.4861053Z 
2025-08-20T00:33:59.4861134Z #### app
2025-08-20T00:33:59.4861243Z 
2025-08-20T00:33:59.4861305Z noqa: E402
2025-08-20T00:33:59.4861394Z 
2025-08-20T00:33:59.4861476Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T00:33:59.4861638Z 
2025-08-20T00:33:59.4861719Z # api.tests.test\_stats\_sql
2025-08-20T00:33:59.4861862Z 
2025-08-20T00:33:59.4861956Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T00:33:59.4862131Z 
2025-08-20T00:33:59.4862209Z # api.tests.test\_entrypoint
2025-08-20T00:33:59.4862348Z 
2025-08-20T00:33:59.4862459Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T00:33:59.4862650Z 
2025-08-20T00:33:59.4862742Z # api.tests.test\_stats\_future\_contracts
2025-08-20T00:33:59.4862911Z 
2025-08-20T00:33:59.4862992Z <a id="api.tests.test_health"></a>
2025-08-20T00:33:59.4863140Z 
2025-08-20T00:33:59.4863221Z # api.tests.test\_health
2025-08-20T00:33:59.4863343Z 
2025-08-20T00:33:59.4863427Z <a id="api.tests.test_score"></a>
2025-08-20T00:33:59.4863585Z 
2025-08-20T00:33:59.4863659Z # api.tests.test\_score
2025-08-20T00:33:59.4863777Z 
2025-08-20T00:33:59.4863855Z <a id="api.logging_config"></a>
2025-08-20T00:33:59.4863996Z 
2025-08-20T00:33:59.4864066Z # api.logging\_config
2025-08-20T00:33:59.4864180Z 
2025-08-20T00:33:59.4864264Z <a id="api.migrations.env"></a>
2025-08-20T00:33:59.4864400Z 
2025-08-20T00:33:59.4864474Z # api.migrations.env
2025-08-20T00:33:59.4864710Z 
2025-08-20T00:33:59.4864844Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T00:33:59.4865042Z 
2025-08-20T00:33:59.4865143Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T00:33:59.4865324Z 
2025-08-20T00:33:59.4865429Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T00:33:59.4865611Z 
2025-08-20T00:33:59.4865710Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T00:33:59.4865877Z 
2025-08-20T00:33:59.4866026Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T00:33:59.4866260Z 
2025-08-20T00:33:59.4866392Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T00:33:59.4866602Z 
2025-08-20T00:33:59.4866720Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T00:33:59.4866922Z 
2025-08-20T00:33:59.4867027Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T00:33:59.4867209Z 
2025-08-20T00:33:59.4867335Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T00:33:59.4867553Z 
2025-08-20T00:33:59.4867665Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T00:33:59.4867964Z 
2025-08-20T00:33:59.4868090Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T00:33:59.4868294Z 
2025-08-20T00:33:59.4868407Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T00:33:59.4868941Z 
2025-08-20T00:33:59.4869139Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T00:33:59.4869376Z 
2025-08-20T00:33:59.4869483Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T00:33:59.4869665Z 
2025-08-20T00:33:59.4869794Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T00:33:59.4869989Z 
2025-08-20T00:33:59.4870095Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T00:33:59.4870281Z 
2025-08-20T00:33:59.4870417Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T00:33:59.4870639Z 
2025-08-20T00:33:59.4870755Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T00:33:59.4870961Z 
2025-08-20T00:33:59.4871089Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T00:33:59.4871442Z 
2025-08-20T00:33:59.4871556Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T00:33:59.4871739Z 
2025-08-20T00:33:59.4871870Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T00:33:59.4872088Z 
2025-08-20T00:33:59.4872201Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T00:33:59.4872390Z 
2025-08-20T00:33:59.4872497Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T00:33:59.4872685Z 
2025-08-20T00:33:59.4872775Z # api.migrations.versions.0001\_baseline
2025-08-20T00:33:59.4872955Z 
2025-08-20T00:33:59.4873051Z <a id="api.migrations.versions"></a>
2025-08-20T00:33:59.4873207Z 
2025-08-20T00:33:59.4873285Z # api.migrations.versions
2025-08-20T00:33:59.4873418Z 
2025-08-20T00:33:59.4873494Z <a id="api.migrations"></a>
2025-08-20T00:33:59.4873628Z 
2025-08-20T00:33:59.4873696Z # api.migrations
2025-08-20T00:33:59.4873805Z 
2025-08-20T00:33:59.4873877Z <a id="api.db"></a>
2025-08-20T00:33:59.4873989Z 
2025-08-20T00:33:59.4874056Z # api.db
2025-08-20T00:33:59.4874143Z 
2025-08-20T00:33:59.4874221Z <a id="api.routes.score"></a>
2025-08-20T00:33:59.4874363Z 
2025-08-20T00:33:59.4874431Z # api.routes.score
2025-08-20T00:33:59.4874535Z 
2025-08-20T00:33:59.4874612Z <a id="api.routes.stats"></a>
2025-08-20T00:33:59.4874749Z 
2025-08-20T00:33:59.4874817Z # api.routes.stats
2025-08-20T00:33:59.4874922Z 
2025-08-20T00:33:59.4875003Z <a id="api.routes.roi"></a>
2025-08-20T00:33:59.4875135Z 
2025-08-20T00:33:59.4875201Z # api.routes.roi
2025-08-20T00:33:59.4875311Z 
2025-08-20T00:33:59.4875393Z <a id="api.routes.health"></a>
2025-08-20T00:33:59.4875532Z 
2025-08-20T00:33:59.4875603Z # api.routes.health
2025-08-20T00:33:59.4875714Z 
2025-08-20T00:33:59.4875804Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T00:33:59.4875966Z 
2025-08-20T00:33:59.4876034Z #### MAX\_SKEW
2025-08-20T00:33:59.4876131Z 
2025-08-20T00:33:59.4876192Z seconds
2025-08-20T00:33:59.4876390Z 
2025-08-20T00:33:59.4876524Z <a id="api.routes.health.health"></a>
2025-08-20T00:33:59.4876810Z 
2025-08-20T00:33:59.4876878Z #### health
2025-08-20T00:33:59.4876976Z 
2025-08-20T00:33:59.4877039Z ```python
2025-08-20T00:33:59.4877240Z @router.get("/health", include_in_schema=False)
2025-08-20T00:33:59.4877657Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T00:33:59.4877998Z ```
2025-08-20T00:33:59.4878081Z 
2025-08-20T00:33:59.4878195Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T00:33:59.4878386Z 
2025-08-20T00:33:59.4878481Z <a id="api.routes.repository"></a>
2025-08-20T00:33:59.4878632Z 
2025-08-20T00:33:59.4878852Z # api.routes.repository
2025-08-20T00:33:59.4878983Z 
2025-08-20T00:33:59.4879055Z <a id="api.routes"></a>
2025-08-20T00:33:59.4879168Z 
2025-08-20T00:33:59.4879239Z # api.routes
2025-08-20T00:33:59.4879334Z 
2025-08-20T00:33:59.4879411Z <a id="api.models.fee"></a>
2025-08-20T00:33:59.4879643Z 
2025-08-20T00:33:59.4879761Z # api.models.fee
2025-08-20T00:33:59.4879957Z 
2025-08-20T00:33:59.4880062Z <a id="api.models"></a>
2025-08-20T00:33:59.4880186Z 
2025-08-20T00:33:59.4880251Z # api.models
2025-08-20T00:33:59.4880351Z 
2025-08-20T00:33:59.4880430Z <a id="api.roi_repository"></a>
2025-08-20T00:33:59.4880574Z 
2025-08-20T00:33:59.4880645Z # api.roi\_repository
2025-08-20T00:33:59.4880763Z 
2025-08-20T00:33:59.4880841Z <a id="api.main"></a>
2025-08-20T00:33:59.4880955Z 
2025-08-20T00:33:59.4881017Z # api.main
2025-08-20T00:33:59.4881115Z 
2025-08-20T00:33:59.4881190Z <a id="api.main.ready"></a>
2025-08-20T00:33:59.4881320Z 
2025-08-20T00:33:59.4881381Z #### ready
2025-08-20T00:33:59.4881480Z 
2025-08-20T00:33:59.4881544Z ```python
2025-08-20T00:33:59.4881807Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T00:33:59.4882236Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T00:33:59.4882587Z                                                                       str]
2025-08-20T00:33:59.4882816Z ```
2025-08-20T00:33:59.4883056Z 
2025-08-20T00:33:59.4883152Z Return 200 only when migrations are at head.
2025-08-20T00:33:59.4883332Z 
2025-08-20T00:33:59.4883404Z <a id="api.config"></a>
2025-08-20T00:33:59.4883517Z 
2025-08-20T00:33:59.4883588Z # api.config
2025-08-20T00:33:59.4883681Z 
2025-08-20T00:33:59.4883756Z <a id="api.security"></a>
2025-08-20T00:33:59.4883887Z 
2025-08-20T00:33:59.4883951Z # api.security
2025-08-20T00:33:59.4884049Z 
2025-08-20T00:33:59.4884113Z <a id="etl"></a>
2025-08-20T00:33:59.4884219Z 
2025-08-20T00:33:59.4884279Z # etl
2025-08-20T00:33:59.4884379Z 
2025-08-20T00:33:59.4884463Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T00:33:59.4884608Z 
2025-08-20T00:33:59.4884690Z # etl.fba\_fee\_ingestor
2025-08-20T00:33:59.4884811Z 
2025-08-20T00:33:59.4884888Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T00:33:59.4885032Z 
2025-08-20T00:33:59.4885109Z # etl.sp\_fees\_ingestor
2025-08-20T00:33:59.4885227Z 
2025-08-20T00:33:59.4885306Z <a id="etl.keepa_ingestor"></a>
2025-08-20T00:33:59.4885460Z 
2025-08-20T00:33:59.4885528Z # etl.keepa\_ingestor
2025-08-20T00:33:59.4885642Z 
2025-08-20T00:33:59.4885708Z <a id="etl.db"></a>
2025-08-20T00:33:59.4885823Z 
2025-08-20T00:33:59.4885886Z # etl.db
2025-08-20T00:33:59.4885973Z 
2025-08-20T00:33:59.4886061Z <a id="etl.dialects.schemas"></a>
2025-08-20T00:33:59.4886206Z 
2025-08-20T00:33:59.4886279Z # etl.dialects.schemas
2025-08-20T00:33:59.4886401Z 
2025-08-20T00:33:59.4886509Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T00:33:59.4886690Z 
2025-08-20T00:33:59.4886779Z # etl.dialects.amazon\_reimbursements
2025-08-20T00:33:59.4886945Z 
2025-08-20T00:33:59.4887038Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T00:33:59.4887205Z 
2025-08-20T00:33:59.4887295Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T00:33:59.4887446Z 
2025-08-20T00:33:59.4887531Z <a id="etl.dialects.test_generic"></a>
2025-08-20T00:33:59.4887693Z 
2025-08-20T00:33:59.4887770Z # etl.dialects.test\_generic
2025-08-20T00:33:59.4888027Z 
2025-08-20T00:33:59.4888124Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T00:33:59.4888289Z 
2025-08-20T00:33:59.4888369Z # etl.dialects.amazon\_returns
2025-08-20T00:33:59.4888506Z 
2025-08-20T00:33:59.4888603Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T00:33:59.4888897Z 
2025-08-20T00:33:59.4888982Z # etl.dialects.amazon\_fee\_preview
2025-08-20T00:33:59.4889137Z 
2025-08-20T00:33:59.4889241Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T00:33:59.4889421Z 
2025-08-20T00:33:59.4889509Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T00:33:59.4889677Z 
2025-08-20T00:33:59.4889767Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T00:33:59.4889931Z 
2025-08-20T00:33:59.4890022Z # etl.dialects.amazon\_settlements
2025-08-20T00:33:59.4890168Z 
2025-08-20T00:33:59.4890243Z <a id="etl.dialects"></a>
2025-08-20T00:33:59.4890373Z 
2025-08-20T00:33:59.4890440Z # etl.dialects
2025-08-20T00:33:59.4890538Z 
2025-08-20T00:33:59.4890607Z <a id="ingest"></a>
2025-08-20T00:33:59.4890723Z 
2025-08-20T00:33:59.4890790Z # ingest
2025-08-20T00:33:59.4890909Z 
2025-08-20T00:33:59.4890992Z <a id="ingest.maintenance"></a>
2025-08-20T00:33:59.4891131Z 
2025-08-20T00:33:59.4891210Z # ingest.maintenance
2025-08-20T00:33:59.4891321Z 
2025-08-20T00:33:59.4891398Z <a id="ingest.copy_loader"></a>
2025-08-20T00:33:59.4891538Z 
2025-08-20T00:33:59.4891608Z # ingest.copy\_loader
2025-08-20T00:33:59.4891719Z 
2025-08-20T00:33:59.4891826Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T00:33:59.4892005Z 
2025-08-20T00:33:59.4892078Z #### copy\_df\_via\_temp
2025-08-20T00:33:59.4892196Z 
2025-08-20T00:33:59.4892264Z ```python
2025-08-20T00:33:59.4892430Z def copy_df_via_temp(engine: Engine,
2025-08-20T00:33:59.4892664Z                      df: pd.DataFrame,
2025-08-20T00:33:59.4892888Z                      target_table: str,
2025-08-20T00:33:59.4893109Z                      *,
2025-08-20T00:33:59.4893312Z                      target_schema: Optional[str] = None,
2025-08-20T00:33:59.4893579Z                      columns: Sequence[str],
2025-08-20T00:33:59.4893969Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T00:33:59.4894243Z                      analyze_after: bool = False,
2025-08-20T00:33:59.4894512Z                      connection: Any | None = None) -> int
2025-08-20T00:33:59.4894743Z ```
2025-08-20T00:33:59.4894830Z 
2025-08-20T00:33:59.4894980Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T00:33:59.4895207Z 
2025-08-20T00:33:59.4895291Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T00:33:59.4895458Z 
2025-08-20T00:33:59.4895535Z # ingest.tests.test\_smoke
2025-08-20T00:33:59.4895660Z 
2025-08-20T00:33:59.4895743Z <a id="ingest.tests"></a>
2025-08-20T00:33:59.4895869Z 
2025-08-20T00:33:59.4895936Z # ingest.tests
2025-08-20T00:33:59.4896038Z 
2025-08-20T00:33:59.4896122Z <a id="ingest.upload_router"></a>
2025-08-20T00:33:59.4896266Z 
2025-08-20T00:33:59.4896339Z # ingest.upload\_router
2025-08-20T00:33:59.4896469Z 
2025-08-20T00:33:59.4896556Z <a id="ingest.email_watcher"></a>
2025-08-20T00:33:59.4896696Z 
2025-08-20T00:33:59.4896777Z # ingest.email\_watcher
2025-08-20T00:33:59.4896889Z 
2025-08-20T00:33:59.4896974Z <a id="ingest.email_watcher.main"></a>
2025-08-20T00:33:59.4897140Z 
2025-08-20T00:33:59.4897201Z #### main
2025-08-20T00:33:59.4897288Z 
2025-08-20T00:33:59.4897352Z ```python
2025-08-20T00:33:59.4897521Z def main() -> dict[str, str]
2025-08-20T00:33:59.4897709Z ```
2025-08-20T00:33:59.4897797Z 
2025-08-20T00:33:59.4897933Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T00:33:59.4898150Z 
2025-08-20T00:33:59.4898284Z Returns {"status": "success"} when processing completes.
2025-08-20T00:33:59.4898491Z 
2025-08-20T00:33:59.4898566Z <a id="ingest.tasks"></a>
2025-08-20T00:33:59.4898848Z 
2025-08-20T00:33:59.4898915Z # ingest.tasks
2025-08-20T00:33:59.4899026Z 
2025-08-20T00:33:59.4899119Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T00:33:59.4899289Z 
2025-08-20T00:33:59.4899490Z #### task\_import\_file
2025-08-20T00:33:59.4899613Z 
2025-08-20T00:33:59.4899674Z ```python
2025-08-20T00:33:59.4899882Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T00:33:59.4900153Z def task_import_file(self: Any,
2025-08-20T00:33:59.4900361Z                      uri: str,
2025-08-20T00:33:59.4900573Z                      report_type: str | None = None,
2025-08-20T00:33:59.4900835Z                      force: bool = False) -> dict[str, Any]
2025-08-20T00:33:59.4901067Z ```
2025-08-20T00:33:59.4901148Z 
2025-08-20T00:33:59.4901278Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T00:33:59.4901482Z 
2025-08-20T00:33:59.4901567Z <a id="ingest.celery_app"></a>
2025-08-20T00:33:59.4901705Z 
2025-08-20T00:33:59.4901779Z # ingest.celery\_app
2025-08-20T00:33:59.4901894Z 
2025-08-20T00:33:59.4901976Z <a id="ingest.ingest_router"></a>
2025-08-20T00:33:59.4902118Z 
2025-08-20T00:33:59.4902190Z # ingest.ingest\_router
2025-08-20T00:33:59.4902310Z 
2025-08-20T00:33:59.4902390Z <a id="logistics_etl"></a>
2025-08-20T00:33:59.4902519Z 
2025-08-20T00:33:59.4902592Z # logistics\_etl
2025-08-20T00:33:59.4902696Z 
2025-08-20T00:33:59.4902769Z Daily logistics ETL job.
2025-08-20T00:33:59.4902893Z 
2025-08-20T00:33:59.4902972Z <a id="logistics_etl.__main__"></a>
2025-08-20T00:33:59.4903120Z 
2025-08-20T00:33:59.4903196Z # logistics\_etl.\_\_main\_\_
2025-08-20T00:33:59.4903332Z 
2025-08-20T00:33:59.4903409Z <a id="logistics_etl.dsn"></a>
2025-08-20T00:33:59.4903539Z 
2025-08-20T00:33:59.4903613Z # logistics\_etl.dsn
2025-08-20T00:33:59.4903722Z 
2025-08-20T00:33:59.4903835Z Local DSN builder to avoid cross-service dependency.
2025-08-20T00:33:59.4904037Z 
2025-08-20T00:33:59.4904125Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T00:33:59.4904287Z 
2025-08-20T00:33:59.4904351Z #### build\_dsn
2025-08-20T00:33:59.4904458Z 
2025-08-20T00:33:59.4904521Z ```python
2025-08-20T00:33:59.4904696Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:33:59.4904910Z ```
2025-08-20T00:33:59.4904994Z 
2025-08-20T00:33:59.4905273Z Return a Postgres DSN assembled from environment variables.
2025-08-20T00:33:59.4905488Z 
2025-08-20T00:33:59.4905631Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T00:33:59.4906023Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T00:33:59.4906360Z error when any required variable is missing.
2025-08-20T00:33:59.4906540Z 
2025-08-20T00:33:59.4906634Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T00:33:59.4906804Z 
2025-08-20T00:33:59.4906891Z # logistics\_etl.tests.conftest
2025-08-20T00:33:59.4907032Z 
2025-08-20T00:33:59.4907132Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T00:33:59.4907324Z 
2025-08-20T00:33:59.4907419Z # logistics\_etl.tests.test\_repository
2025-08-20T00:33:59.4907586Z 
2025-08-20T00:33:59.4907682Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T00:33:59.4907860Z 
2025-08-20T00:33:59.4907948Z # logistics\_etl.tests.test\_cron
2025-08-20T00:33:59.4908106Z 
2025-08-20T00:33:59.4908214Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T00:33:59.4908395Z 
2025-08-20T00:33:59.4908519Z # logistics\_etl.tests.test\_imports
2025-08-20T00:33:59.4908781Z 
2025-08-20T00:33:59.4908881Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T00:33:59.4909054Z 
2025-08-20T00:33:59.4909143Z # logistics\_etl.tests.test\_smoke
2025-08-20T00:33:59.4909305Z 
2025-08-20T00:33:59.4909402Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T00:33:59.4909571Z 
2025-08-20T00:33:59.4909668Z # logistics\_etl.tests.test\_client
2025-08-20T00:33:59.4909822Z 
2025-08-20T00:33:59.4909908Z <a id="logistics_etl.tests"></a>
2025-08-20T00:33:59.4910059Z 
2025-08-20T00:33:59.4910136Z # logistics\_etl.tests
2025-08-20T00:33:59.4910260Z 
2025-08-20T00:33:59.4910350Z <a id="logistics_etl.flow"></a>
2025-08-20T00:33:59.4910501Z 
2025-08-20T00:33:59.4910577Z # logistics\_etl.flow
2025-08-20T00:33:59.4910695Z 
2025-08-20T00:33:59.4910787Z <a id="logistics_etl.client"></a>
2025-08-20T00:33:59.4911057Z 
2025-08-20T00:33:59.4985618Z # logistics\_etl.client
2025-08-20T00:33:59.4985894Z 
2025-08-20T00:33:59.4986077Z <a id="logistics_etl.cron"></a>
2025-08-20T00:33:59.4986319Z 
2025-08-20T00:33:59.4986434Z # logistics\_etl.cron
2025-08-20T00:33:59.4986621Z 
2025-08-20T00:33:59.4986748Z <a id="logistics_etl.db"></a>
2025-08-20T00:33:59.4986965Z 
2025-08-20T00:33:59.4987071Z # logistics\_etl.db
2025-08-20T00:33:59.4987247Z 
2025-08-20T00:33:59.4987389Z <a id="logistics_etl.repository"></a>
2025-08-20T00:33:59.4987651Z 
2025-08-20T00:33:59.4987770Z # logistics\_etl.repository
2025-08-20T00:33:59.4987986Z 
2025-08-20T00:33:59.4988089Z <a id="alert_bot"></a>
2025-08-20T00:33:59.4988272Z 
2025-08-20T00:33:59.4988373Z # alert\_bot
2025-08-20T00:33:59.4988516Z 
2025-08-20T00:33:59.4988649Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T00:33:59.4989132Z 
2025-08-20T00:33:59.4989271Z # alert\_bot.tests.test\_smoke
2025-08-20T00:33:59.4989492Z 
2025-08-20T00:33:59.4989610Z <a id="alert_bot.tests"></a>
2025-08-20T00:33:59.4989842Z 
2025-08-20T00:33:59.4989949Z # alert\_bot.tests
2025-08-20T00:33:59.4990106Z 
2025-08-20T00:33:59.4990231Z <a id="alert_bot.alert_bot"></a>
2025-08-20T00:33:59.4990450Z 
2025-08-20T00:33:59.4990599Z # alert\_bot.alert\_bot
2025-08-20T00:33:59.4990780Z 
2025-08-20T00:33:59.4990899Z <a id="alert_bot.rules"></a>
2025-08-20T00:33:59.4991101Z 
2025-08-20T00:33:59.4991202Z # alert\_bot.rules
2025-08-20T00:33:59.4991363Z 
2025-08-20T00:33:59.4991464Z <a id="common"></a>
2025-08-20T00:33:59.4991618Z 
2025-08-20T00:33:59.4991708Z # common
2025-08-20T00:33:59.4991845Z 
2025-08-20T00:33:59.4991947Z <a id="common.dsn"></a>
2025-08-20T00:33:59.4992119Z 
2025-08-20T00:33:59.4992221Z # common.dsn
2025-08-20T00:33:59.4992361Z 
2025-08-20T00:33:59.4992488Z <a id="common.dsn.build_dsn"></a>
2025-08-20T00:33:59.4992730Z 
2025-08-20T00:33:59.4992826Z #### build\_dsn
2025-08-20T00:33:59.4992974Z 
2025-08-20T00:33:59.4993076Z ```python
2025-08-20T00:33:59.4993355Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:33:59.4993694Z ```
2025-08-20T00:33:59.4994076Z 
2025-08-20T00:33:59.4994265Z Return a Postgres DSN, validating required variables.
2025-08-20T00:33:59.4994579Z 
2025-08-20T00:33:59.4994886Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T00:33:59.4995579Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T00:33:59.4996222Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T00:33:59.4996694Z missing.
2025-08-20T00:33:59.4996844Z 
2025-08-20T00:33:59.4996971Z <a id="common.models_vendor"></a>
2025-08-20T00:33:59.4997203Z 
2025-08-20T00:33:59.4997319Z # common.models\_vendor
2025-08-20T00:33:59.4997492Z 
2025-08-20T00:33:59.4997626Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T00:33:59.4997876Z 
2025-08-20T00:33:59.4997973Z ## Vendor Objects
2025-08-20T00:33:59.4998132Z 
2025-08-20T00:33:59.4998236Z ```python
2025-08-20T00:33:59.4998485Z class Vendor(Base)
2025-08-20T00:33:59.4998943Z ```
2025-08-20T00:33:59.4999085Z 
2025-08-20T00:33:59.4999202Z Vendor of inventory items.
2025-08-20T00:33:59.4999404Z 
2025-08-20T00:33:59.4999560Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T00:33:59.4999828Z 
2025-08-20T00:33:59.4999935Z ## VendorPrice Objects
2025-08-20T00:33:59.5000113Z 
2025-08-20T00:33:59.5000207Z ```python
2025-08-20T00:33:59.5000442Z class VendorPrice(Base)
2025-08-20T00:33:59.5000707Z ```
2025-08-20T00:33:59.5000829Z 
2025-08-20T00:33:59.5000992Z Association table linking vendors to pricing.
2025-08-20T00:33:59.5001277Z 
2025-08-20T00:33:59.5001388Z <a id="common.db_url"></a>
2025-08-20T00:33:59.5001579Z 
2025-08-20T00:33:59.5001686Z # common.db\_url
2025-08-20T00:33:59.5001839Z 
2025-08-20T00:33:59.5001965Z <a id="common.db_url.build_url"></a>
2025-08-20T00:33:59.5002215Z 
2025-08-20T00:33:59.5002310Z #### build\_url
2025-08-20T00:33:59.5002460Z 
2025-08-20T00:33:59.5002553Z ```python
2025-08-20T00:33:59.5002817Z def build_url(async_: bool = True) -> str
2025-08-20T00:33:59.5003353Z ```
2025-08-20T00:33:59.5003491Z 
2025-08-20T00:33:59.5003634Z Return Postgres DSN from env or PG_* parts.
2025-08-20T00:33:59.5003891Z 
2025-08-20T00:33:59.5004009Z <a id="common.keepa"></a>
2025-08-20T00:33:59.5004197Z 
2025-08-20T00:33:59.5004296Z # common.keepa
2025-08-20T00:33:59.5004448Z 
2025-08-20T00:33:59.5004554Z <a id="common.llm"></a>
2025-08-20T00:33:59.5004731Z 
2025-08-20T00:33:59.5004824Z # common.llm
2025-08-20T00:33:59.5004976Z 
2025-08-20T00:33:59.5005094Z <a id="common.settings"></a>
2025-08-20T00:33:59.5005298Z 
2025-08-20T00:33:59.5005403Z # common.settings
2025-08-20T00:33:59.5005556Z 
2025-08-20T00:33:59.5005656Z <a id="common.db"></a>
2025-08-20T00:33:59.5005832Z 
2025-08-20T00:33:59.5005922Z # common.db
2025-08-20T00:33:59.5006055Z 
2025-08-20T00:33:59.5006192Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T00:33:59.5006446Z 
2025-08-20T00:33:59.5006558Z #### build\_sqlalchemy\_url
2025-08-20T00:33:59.5006747Z 
2025-08-20T00:33:59.5006846Z ```python
2025-08-20T00:33:59.5007104Z def build_sqlalchemy_url() -> str
2025-08-20T00:33:59.5007423Z ```
2025-08-20T00:33:59.5007542Z 
2025-08-20T00:33:59.5007683Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T00:33:59.5007942Z 
2025-08-20T00:33:59.5008071Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T00:33:59.5008310Z 
2025-08-20T00:33:59.5008416Z #### build\_asyncpg\_dsn
2025-08-20T00:33:59.5008601Z 
2025-08-20T00:33:59.5008841Z ```python
2025-08-20T00:33:59.5009101Z def build_asyncpg_dsn() -> str
2025-08-20T00:33:59.5009385Z ```
2025-08-20T00:33:59.5009508Z 
2025-08-20T00:33:59.5009704Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T00:33:59.5010018Z 
2025-08-20T00:33:59.5010137Z <a id="common.db.refresh_mvs"></a>
2025-08-20T00:33:59.5010368Z 
2025-08-20T00:33:59.5010461Z #### refresh\_mvs
2025-08-20T00:33:59.5010616Z 
2025-08-20T00:33:59.5010704Z ```python
2025-08-20T00:33:59.5011016Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T00:33:59.5011392Z ```
2025-08-20T00:33:59.5011525Z 
2025-08-20T00:33:59.5011898Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T00:33:59.5012212Z 
2025-08-20T00:33:59.5012332Z <a id="common.config"></a>
2025-08-20T00:33:59.5012524Z 
2025-08-20T00:33:59.5012628Z # common.config
2025-08-20T00:33:59.5012788Z 
2025-08-20T00:33:59.5012896Z <a id="common.base"></a>
2025-08-20T00:33:59.5013077Z 
2025-08-20T00:33:59.5013188Z # common.base
2025-08-20T00:33:59.5013333Z 
2025-08-20T00:33:59.5013449Z <a id="common.base.Base"></a>
2025-08-20T00:33:59.5013651Z 
2025-08-20T00:33:59.5013752Z ## Base Objects
2025-08-20T00:33:59.5013899Z 
2025-08-20T00:33:59.5013993Z ```python
2025-08-20T00:33:59.5014239Z class Base(DeclarativeBase)
2025-08-20T00:33:59.5014525Z ```
2025-08-20T00:33:59.5014718Z 
2025-08-20T00:33:59.5014842Z Base class for SQLAlchemy models.
2025-08-20T00:33:59.5015068Z 
2025-08-20T00:33:59.5015181Z <a id="repricer"></a>
2025-08-20T00:33:59.5015348Z 
2025-08-20T00:33:59.5015440Z # repricer
2025-08-20T00:33:59.5015576Z 
2025-08-20T00:33:59.5015720Z <a id="repricer.app.schemas"></a>
2025-08-20T00:33:59.5015952Z 
2025-08-20T00:33:59.5016065Z # repricer.app.schemas
2025-08-20T00:33:59.5016244Z 
2025-08-20T00:33:59.5016365Z <a id="repricer.app.deps"></a>
2025-08-20T00:33:59.5016570Z 
2025-08-20T00:33:59.5016684Z # repricer.app.deps
2025-08-20T00:33:59.5016847Z 
2025-08-20T00:33:59.5017009Z Placeholder module for Keepa / SP-API clients.
2025-08-20T00:33:59.5017279Z 
2025-08-20T00:33:59.5017405Z <a id="repricer.app.logic"></a>
2025-08-20T00:33:59.5017614Z 
2025-08-20T00:33:59.5017720Z # repricer.app.logic
2025-08-20T00:33:59.5017891Z 
2025-08-20T00:33:59.5018036Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T00:33:59.5018284Z 
2025-08-20T00:33:59.5018388Z #### MIN\_MARGIN
2025-08-20T00:33:59.5018543Z 
2025-08-20T00:33:59.5018634Z 15 % ROI
2025-08-20T00:33:59.5018915Z 
2025-08-20T00:33:59.5019077Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T00:33:59.5019340Z 
2025-08-20T00:33:59.5019440Z #### compute\_price
2025-08-20T00:33:59.5019777Z 
2025-08-20T00:33:59.5019882Z ```python
2025-08-20T00:33:59.5020241Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T00:33:59.5020683Z ```
2025-08-20T00:33:59.5020807Z 
2025-08-20T00:33:59.5020976Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T00:33:59.5021381Z Replace with real competitive logic later.
2025-08-20T00:33:59.5021637Z 
2025-08-20T00:33:59.5021763Z <a id="repricer.app.main"></a>
2025-08-20T00:33:59.5021977Z 
2025-08-20T00:33:59.5022084Z # repricer.app.main
2025-08-20T00:33:59.5022253Z 
2025-08-20T00:33:59.5022369Z <a id="repricer.app"></a>
2025-08-20T00:33:59.5022558Z 
2025-08-20T00:33:59.5022663Z # repricer.app
2025-08-20T00:33:59.5022815Z 
2025-08-20T00:33:59.5022955Z <a id="repricer.tests.test_imports"></a>
2025-08-20T00:33:59.5023205Z 
2025-08-20T00:33:59.5023331Z # repricer.tests.test\_imports
2025-08-20T00:33:59.5023543Z 
2025-08-20T00:33:59.5023675Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T00:33:59.5023925Z 
2025-08-20T00:33:59.5024056Z # repricer.tests.test\_smoke
2025-08-20T00:33:59.5024275Z 
2025-08-20T00:33:59.5024390Z <a id="repricer.tests"></a>
2025-08-20T00:33:59.5024596Z 
2025-08-20T00:33:59.5024698Z # repricer.tests
2025-08-20T00:33:59.5024850Z 
2025-08-20T00:33:59.5024952Z <a id="db"></a>
2025-08-20T00:33:59.5025105Z 
2025-08-20T00:33:59.5025191Z # db
2025-08-20T00:33:59.5025326Z 
2025-08-20T00:33:59.5025438Z <a id="db.utils.views"></a>
2025-08-20T00:33:59.5025634Z 
2025-08-20T00:33:59.5025735Z # db.utils.views
2025-08-20T00:33:59.5025893Z 
2025-08-20T00:33:59.5026027Z <a id="db.utils.views.replace_view"></a>
2025-08-20T00:33:59.5026281Z 
2025-08-20T00:33:59.5026387Z #### replace\_view
2025-08-20T00:33:59.5026543Z 
2025-08-20T00:33:59.5026638Z ```python
2025-08-20T00:33:59.5026930Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T00:33:59.5027292Z ```
2025-08-20T00:33:59.5027420Z 
2025-08-20T00:33:59.5027552Z Drop and recreate a SQL view atomically.
2025-08-20T00:33:59.5027793Z 
2025-08-20T00:33:59.5027905Z <a id="db.utils"></a>
2025-08-20T00:33:59.5028249Z 
2025-08-20T00:33:59.5028345Z # db.utils
2025-08-20T00:33:59.5028484Z 
2025-08-20T00:33:59.5028606Z <a id="price_importer"></a>
2025-08-20T00:33:59.5028965Z 
2025-08-20T00:33:59.5029069Z # price\_importer
2025-08-20T00:33:59.5029229Z 
2025-08-20T00:33:59.5029386Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T00:33:59.5029661Z 
2025-08-20T00:33:59.5029787Z # price\_importer.services\_common.dsn
2025-08-20T00:33:59.5030043Z 
2025-08-20T00:33:59.5030228Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T00:33:59.5030537Z 
2025-08-20T00:33:59.5030640Z #### build\_dsn
2025-08-20T00:33:59.5030794Z 
2025-08-20T00:33:59.5030891Z ```python
2025-08-20T00:33:59.5031161Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:33:59.5031482Z ```
2025-08-20T00:33:59.5031611Z 
2025-08-20T00:33:59.5031709Z Return safe DSN.
2025-08-20T00:33:59.5031857Z 
2025-08-20T00:33:59.5032314Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T00:33:59.5032631Z 
2025-08-20T00:33:59.5032833Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T00:33:59.5033134Z 
2025-08-20T00:33:59.5033300Z # price\_importer.services\_common.models\_vendor
2025-08-20T00:33:59.5033573Z 
2025-08-20T00:33:59.5033727Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T00:33:59.5034001Z 
2025-08-20T00:33:59.5034144Z # price\_importer.services\_common.db\_url
2025-08-20T00:33:59.5034411Z 
2025-08-20T00:33:59.5034618Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T00:33:59.5034951Z 
2025-08-20T00:33:59.5035049Z #### build\_url
2025-08-20T00:33:59.5035200Z 
2025-08-20T00:33:59.5035298Z ```python
2025-08-20T00:33:59.5035553Z def build_url(async_: bool = True) -> str
2025-08-20T00:33:59.5035885Z ```
2025-08-20T00:33:59.5036006Z 
2025-08-20T00:33:59.5036148Z Return Postgres DSN from env or PG_* parts.
2025-08-20T00:33:59.5036413Z 
2025-08-20T00:33:59.5036574Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T00:33:59.5037033Z 
2025-08-20T00:33:59.5037193Z # price\_importer.services\_common.keepa
2025-08-20T00:33:59.5037441Z 
2025-08-20T00:33:59.5037593Z <a id="price_importer.services_common.llm"></a>
2025-08-20T00:33:59.5037869Z 
2025-08-20T00:33:59.5037999Z # price\_importer.services\_common.llm
2025-08-20T00:33:59.5038243Z 
2025-08-20T00:33:59.5038408Z <a id="price_importer.services_common.settings"></a>
2025-08-20T00:33:59.5038877Z 
2025-08-20T00:33:59.5039032Z # price\_importer.services\_common.settings
2025-08-20T00:33:59.5039295Z 
2025-08-20T00:33:59.5039464Z <a id="price_importer.services_common.db"></a>
2025-08-20T00:33:59.5039725Z 
2025-08-20T00:33:59.5039857Z # price\_importer.services\_common.db
2025-08-20T00:33:59.5040099Z 
2025-08-20T00:33:59.5040326Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T00:33:59.5040682Z 
2025-08-20T00:33:59.5040797Z #### build\_sqlalchemy\_url
2025-08-20T00:33:59.5040996Z 
2025-08-20T00:33:59.5041094Z ```python
2025-08-20T00:33:59.5041363Z def build_sqlalchemy_url() -> str
2025-08-20T00:33:59.5041681Z ```
2025-08-20T00:33:59.5041806Z 
2025-08-20T00:33:59.5041959Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T00:33:59.5042202Z 
2025-08-20T00:33:59.5042409Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T00:33:59.5042745Z 
2025-08-20T00:33:59.5042855Z #### build\_asyncpg\_dsn
2025-08-20T00:33:59.5043036Z 
2025-08-20T00:33:59.5043131Z ```python
2025-08-20T00:33:59.5043387Z def build_asyncpg_dsn() -> str
2025-08-20T00:33:59.5043675Z ```
2025-08-20T00:33:59.5043795Z 
2025-08-20T00:33:59.5043984Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T00:33:59.5044295Z 
2025-08-20T00:33:59.5044486Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T00:33:59.5044796Z 
2025-08-20T00:33:59.5044896Z #### refresh\_mvs
2025-08-20T00:33:59.5045061Z 
2025-08-20T00:33:59.5045163Z ```python
2025-08-20T00:33:59.5045458Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T00:33:59.5045845Z ```
2025-08-20T00:33:59.5046148Z 
2025-08-20T00:33:59.5046357Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T00:33:59.5046688Z 
2025-08-20T00:33:59.5046832Z <a id="price_importer.services_common"></a>
2025-08-20T00:33:59.5047087Z 
2025-08-20T00:33:59.5047211Z # price\_importer.services\_common
2025-08-20T00:33:59.5047438Z 
2025-08-20T00:33:59.5047589Z <a id="price_importer.services_common.base"></a>
2025-08-20T00:33:59.5047866Z 
2025-08-20T00:33:59.5047999Z # price\_importer.services\_common.base
2025-08-20T00:33:59.5048235Z 
2025-08-20T00:33:59.5048373Z <a id="price_importer.normaliser"></a>
2025-08-20T00:33:59.5048606Z 
2025-08-20T00:33:59.5048874Z # price\_importer.normaliser
2025-08-20T00:33:59.5049091Z 
2025-08-20T00:33:59.5049248Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T00:33:59.5049516Z 
2025-08-20T00:33:59.5049649Z # price\_importer.common.models\_vendor
2025-08-20T00:33:59.5049899Z 
2025-08-20T00:33:59.5050035Z <a id="price_importer.common.db_url"></a>
2025-08-20T00:33:59.5050291Z 
2025-08-20T00:33:59.5050430Z # price\_importer.common.db\_url
2025-08-20T00:33:59.5050647Z 
2025-08-20T00:33:59.5050798Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T00:33:59.5051074Z 
2025-08-20T00:33:59.5051175Z #### make\_dsn
2025-08-20T00:33:59.5051333Z 
2025-08-20T00:33:59.5051436Z ```python
2025-08-20T00:33:59.5051728Z def make_dsn(async_: bool = False) -> str
2025-08-20T00:33:59.5052105Z ```
2025-08-20T00:33:59.5052242Z 
2025-08-20T00:33:59.5052438Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T00:33:59.5052763Z 
2025-08-20T00:33:59.5052949Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T00:33:59.5053256Z 
2025-08-20T00:33:59.5053365Z #### build\_url
2025-08-20T00:33:59.5053537Z 
2025-08-20T00:33:59.5053642Z ```python
2025-08-20T00:33:59.5053922Z def build_url(async_: bool = False) -> str
2025-08-20T00:33:59.5054282Z ```
2025-08-20T00:33:59.5054409Z 
2025-08-20T00:33:59.5054601Z Return Postgres DSN built from environment variables.
2025-08-20T00:33:59.5055095Z 
2025-08-20T00:33:59.5055233Z <a id="price_importer.common"></a>
2025-08-20T00:33:59.5055481Z 
2025-08-20T00:33:59.5055600Z # price\_importer.common
2025-08-20T00:33:59.5055800Z 
2025-08-20T00:33:59.5055945Z <a id="price_importer.common.base"></a>
2025-08-20T00:33:59.5056213Z 
2025-08-20T00:33:59.5056344Z # price\_importer.common.base
2025-08-20T00:33:59.5056569Z 
2025-08-20T00:33:59.5056730Z <a id="price_importer.tests.conftest"></a>
2025-08-20T00:33:59.5056998Z 
2025-08-20T00:33:59.5057129Z # price\_importer.tests.conftest
2025-08-20T00:33:59.5057361Z 
2025-08-20T00:33:59.5057517Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T00:33:59.5057792Z 
2025-08-20T00:33:59.5057923Z # price\_importer.tests.test\_reader
2025-08-20T00:33:59.5058171Z 
2025-08-20T00:33:59.5058334Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T00:33:59.5058643Z 
2025-08-20T00:33:59.5058975Z # price\_importer.tests.test\_imports
2025-08-20T00:33:59.5059245Z 
2025-08-20T00:33:59.5059410Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T00:33:59.5059694Z 
2025-08-20T00:33:59.5059829Z # price\_importer.tests.test\_smoke
2025-08-20T00:33:59.5060076Z 
2025-08-20T00:33:59.5060245Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T00:33:59.5060552Z 
2025-08-20T00:33:59.5060705Z # price\_importer.tests.test\_normaliser
2025-08-20T00:33:59.5060978Z 
2025-08-20T00:33:59.5061123Z <a id="price_importer.tests"></a>
2025-08-20T00:33:59.5061365Z 
2025-08-20T00:33:59.5061487Z # price\_importer.tests
2025-08-20T00:33:59.5061697Z 
2025-08-20T00:33:59.5061836Z <a id="price_importer.reader"></a>
2025-08-20T00:33:59.5062088Z 
2025-08-20T00:33:59.5062213Z # price\_importer.reader
2025-08-20T00:33:59.5062422Z 
2025-08-20T00:33:59.5062565Z <a id="price_importer.repository"></a>
2025-08-20T00:33:59.5062824Z 
2025-08-20T00:33:59.5062961Z # price\_importer.repository
2025-08-20T00:33:59.5063185Z 
2025-08-20T00:33:59.5063316Z <a id="price_importer.import"></a>
2025-08-20T00:33:59.5063579Z 
2025-08-20T00:33:59.5063700Z # price\_importer.import
2025-08-20T00:33:59.5064085Z 
2025-08-20T00:33:59.5064204Z <a id="fees_h10"></a>
2025-08-20T00:33:59.5064395Z 
2025-08-20T00:33:59.5064499Z # fees\_h10
2025-08-20T00:33:59.5064650Z 
2025-08-20T00:33:59.5064778Z <a id="fees_h10.worker"></a>
2025-08-20T00:33:59.5064988Z 
2025-08-20T00:33:59.5065095Z # fees\_h10.worker
2025-08-20T00:33:59.5065272Z 
2025-08-20T00:33:59.5065436Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T00:33:59.5065722Z 
2025-08-20T00:33:59.5065844Z #### list\_active\_asins
2025-08-20T00:33:59.5066046Z 
2025-08-20T00:33:59.5066150Z ```python
2025-08-20T00:33:59.5066418Z def list_active_asins() -> list[str]
2025-08-20T00:33:59.5066752Z ```
2025-08-20T00:33:59.5066886Z 
2025-08-20T00:33:59.5067073Z Return known ASINs or an empty list if unavailable.
2025-08-20T00:33:59.5067388Z 
2025-08-20T00:33:59.5067523Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T00:33:59.5067790Z 
2025-08-20T00:33:59.5067922Z # fees\_h10.tests.test\_smoke
2025-08-20T00:33:59.5068162Z 
2025-08-20T00:33:59.5068295Z <a id="fees_h10.tests"></a>
2025-08-20T00:33:59.5068514Z 
2025-08-20T00:33:59.5068621Z # fees\_h10.tests
2025-08-20T00:33:59.5068948Z 
2025-08-20T00:33:59.5069080Z <a id="fees_h10.client"></a>
2025-08-20T00:33:59.5069298Z 
2025-08-20T00:33:59.5069409Z # fees\_h10.client
2025-08-20T00:33:59.5069585Z 
2025-08-20T00:33:59.5069727Z <a id="fees_h10.repository"></a>
2025-08-20T00:33:59.5069963Z 
2025-08-20T00:33:59.5070083Z # fees\_h10.repository
2025-08-20T00:33:59.5070284Z 
2025-08-20T00:33:59.5070448Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T00:33:59.5070751Z 
2025-08-20T00:33:59.5070874Z #### upsert\_fees\_raw
2025-08-20T00:33:59.5071058Z 
2025-08-20T00:33:59.5071159Z ```python
2025-08-20T00:33:59.5071437Z def upsert_fees_raw(engine: Engine,
2025-08-20T00:33:59.5071834Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T00:33:59.5072230Z                     *,
2025-08-20T00:33:59.5072596Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T00:33:59.5073217Z ```
2025-08-20T00:33:59.5073353Z 
2025-08-20T00:33:59.5073478Z Idempotent upsert for fees.
2025-08-20T00:33:59.5073712Z 
2025-08-20T00:33:59.5073958Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T00:33:59.5074533Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T00:33:59.5075048Z Only updates when one of the mutable fields changes.
2025-08-20T00:33:59.5075370Z 
2025-08-20T00:33:59.5075475Z <a id="emailer"></a>
2025-08-20T00:33:59.5075638Z 
2025-08-20T00:33:59.5075726Z # emailer
2025-08-20T00:33:59.5075869Z 
2025-08-20T00:33:59.5076015Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T00:33:59.5076283Z 
2025-08-20T00:33:59.5076420Z # emailer.tests.test\_import\_emailer
2025-08-20T00:33:59.5076660Z 
2025-08-20T00:33:59.5076783Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T00:33:59.5077035Z 
2025-08-20T00:33:59.5077164Z # emailer.tests.test\_smoke
2025-08-20T00:33:59.5077384Z 
2025-08-20T00:33:59.5077519Z <a id="emailer.tests"></a>
2025-08-20T00:33:59.5077783Z 
2025-08-20T00:33:59.5077891Z # emailer.tests
2025-08-20T00:33:59.5078060Z 
2025-08-20T00:33:59.5078204Z <a id="emailer.generate_body"></a>
2025-08-20T00:33:59.5078457Z 
2025-08-20T00:33:59.5078583Z # emailer.generate\_body
2025-08-20T00:33:59.5079102Z 
2025-08-20T00:33:59.5079227Z <a id="llm_server"></a>
2025-08-20T00:33:59.5079420Z 
2025-08-20T00:33:59.5079518Z # llm\_server
2025-08-20T00:33:59.5079679Z 
2025-08-20T00:33:59.5079800Z <a id="llm_server.app"></a>
2025-08-20T00:33:59.5080010Z 
2025-08-20T00:33:59.5080124Z # llm\_server.app
2025-08-20T00:33:59.5080287Z 
