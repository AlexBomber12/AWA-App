2025-08-18T13:01:17.3137155Z ##[group]Run pydoc-markdown
2025-08-18T13:01:17.3137470Z [36;1mpydoc-markdown[0m
2025-08-18T13:01:17.3177998Z shell: /usr/bin/bash -e {0}
2025-08-18T13:01:17.3178256Z env:
2025-08-18T13:01:17.3178515Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:01:17.3178967Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T13:01:17.3179529Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:01:17.3179907Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:01:17.3180278Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:01:17.3180646Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T13:01:17.3180959Z ##[endgroup]
2025-08-18T13:01:17.6579751Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T13:01:17.6580443Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T13:01:17.6580897Z In "pydoc-markdown.yml"
2025-08-18T13:01:17.6581352Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T13:01:17.6582004Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T13:01:17.6582757Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T13:01:17.6583279Z 
2025-08-18T13:01:17.9445624Z <a id="__init__"></a>
2025-08-18T13:01:17.9446078Z 
2025-08-18T13:01:17.9446288Z # \_\_init\_\_
2025-08-18T13:01:17.9446574Z 
2025-08-18T13:01:17.9446754Z <a id="api"></a>
2025-08-18T13:01:17.9447023Z 
2025-08-18T13:01:17.9447176Z # api
2025-08-18T13:01:17.9447397Z 
2025-08-18T13:01:17.9447582Z <a id="api.errors"></a>
2025-08-18T13:01:17.9447829Z 
2025-08-18T13:01:17.9447940Z # api.errors
2025-08-18T13:01:17.9448111Z 
2025-08-18T13:01:17.9448263Z <a id="api.tests.test_errors_json"></a>
2025-08-18T13:01:17.9448546Z 
2025-08-18T13:01:17.9448686Z # api.tests.test\_errors\_json
2025-08-18T13:01:17.9448922Z 
2025-08-18T13:01:17.9449053Z <a id="api.tests.test_llm"></a>
2025-08-18T13:01:17.9449545Z 
2025-08-18T13:01:17.9449958Z # api.tests.test\_llm
2025-08-18T13:01:17.9450168Z 
2025-08-18T13:01:17.9450305Z <a id="api.tests.test_imports"></a>
2025-08-18T13:01:17.9450567Z 
2025-08-18T13:01:17.9450690Z # api.tests.test\_imports
2025-08-18T13:01:17.9450903Z 
2025-08-18T13:01:17.9451034Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T13:01:17.9451244Z 
2025-08-18T13:01:17.9451347Z # api.tests.test\_entrypoint
2025-08-18T13:01:17.9451525Z 
2025-08-18T13:01:17.9451641Z <a id="api.tests.test_health"></a>
2025-08-18T13:01:17.9451835Z 
2025-08-18T13:01:17.9451931Z # api.tests.test\_health
2025-08-18T13:01:17.9452097Z 
2025-08-18T13:01:17.9452274Z <a id="api.logging_config"></a>
2025-08-18T13:01:17.9452452Z 
2025-08-18T13:01:17.9452546Z # api.logging\_config
2025-08-18T13:01:17.9452697Z 
2025-08-18T13:01:17.9452799Z <a id="api.migrations.env"></a>
2025-08-18T13:01:17.9452975Z 
2025-08-18T13:01:17.9453076Z # api.migrations.env
2025-08-18T13:01:17.9453221Z 
2025-08-18T13:01:17.9453373Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T13:01:17.9453656Z 
2025-08-18T13:01:17.9453798Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T13:01:17.9454042Z 
2025-08-18T13:01:17.9454191Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T13:01:17.9454441Z 
2025-08-18T13:01:17.9454562Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T13:01:17.9454789Z 
2025-08-18T13:01:17.9454984Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T13:01:17.9455294Z 
2025-08-18T13:01:17.9455467Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T13:01:17.9455756Z 
2025-08-18T13:01:17.9455910Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T13:01:17.9456168Z 
2025-08-18T13:01:17.9456311Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T13:01:17.9456548Z 
2025-08-18T13:01:17.9456694Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T13:01:17.9456953Z 
2025-08-18T13:01:17.9457082Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T13:01:17.9457319Z 
2025-08-18T13:01:17.9457677Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T13:01:17.9457951Z 
2025-08-18T13:01:17.9458088Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T13:01:17.9458333Z 
2025-08-18T13:01:17.9458486Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T13:01:17.9458737Z 
2025-08-18T13:01:17.9458871Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T13:01:17.9459112Z 
2025-08-18T13:01:17.9459378Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T13:01:17.9459639Z 
2025-08-18T13:01:17.9459776Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T13:01:17.9460011Z 
2025-08-18T13:01:17.9460185Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T13:01:17.9460468Z 
2025-08-18T13:01:17.9460629Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T13:01:17.9460892Z 
2025-08-18T13:01:17.9461048Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T13:01:17.9461320Z 
2025-08-18T13:01:17.9461460Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T13:01:17.9461668Z 
2025-08-18T13:01:17.9461817Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T13:01:17.9462035Z 
2025-08-18T13:01:17.9462153Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T13:01:17.9462355Z 
2025-08-18T13:01:17.9462465Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T13:01:17.9462658Z 
2025-08-18T13:01:17.9462752Z # api.migrations.versions.0001\_baseline
2025-08-18T13:01:17.9462927Z 
2025-08-18T13:01:17.9463017Z <a id="api.migrations.versions"></a>
2025-08-18T13:01:17.9463174Z 
2025-08-18T13:01:17.9463261Z # api.migrations.versions
2025-08-18T13:01:17.9463389Z 
2025-08-18T13:01:17.9463470Z <a id="api.migrations"></a>
2025-08-18T13:01:17.9463605Z 
2025-08-18T13:01:17.9463672Z # api.migrations
2025-08-18T13:01:17.9463782Z 
2025-08-18T13:01:17.9463850Z <a id="api.db"></a>
2025-08-18T13:01:17.9463962Z 
2025-08-18T13:01:17.9464145Z # api.db
2025-08-18T13:01:17.9464237Z 
2025-08-18T13:01:17.9464320Z <a id="api.routes.stats"></a>
2025-08-18T13:01:17.9464456Z 
2025-08-18T13:01:17.9464525Z # api.routes.stats
2025-08-18T13:01:17.9464629Z 
2025-08-18T13:01:17.9464720Z <a id="api.routes.stats.kpi"></a>
2025-08-18T13:01:17.9464868Z 
2025-08-18T13:01:17.9464929Z #### kpi
2025-08-18T13:01:17.9465021Z 
2025-08-18T13:01:17.9465085Z ```python
2025-08-18T13:01:17.9465255Z @router.get("/stats/kpi")
2025-08-18T13:01:17.9465496Z def kpi() -> List[Dict[str, int]]
2025-08-18T13:01:17.9465704Z ```
2025-08-18T13:01:17.9465789Z 
2025-08-18T13:01:17.9465868Z Return KPI metrics (mock).
2025-08-18T13:01:17.9465998Z 
2025-08-18T13:01:17.9466107Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T13:01:17.9466284Z 
2025-08-18T13:01:17.9466353Z #### roi\_by\_vendor
2025-08-18T13:01:17.9466470Z 
2025-08-18T13:01:17.9466534Z ```python
2025-08-18T13:01:17.9466704Z @router.get("/stats/roi_by_vendor")
2025-08-18T13:01:17.9466949Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T13:01:17.9467183Z ```
2025-08-18T13:01:17.9467278Z 
2025-08-18T13:01:17.9467360Z Return ROI percent by vendor.
2025-08-18T13:01:17.9467598Z 
2025-08-18T13:01:17.9467690Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T13:01:17.9467860Z 
2025-08-18T13:01:17.9467931Z #### roi\_trend
2025-08-18T13:01:17.9468032Z 
2025-08-18T13:01:17.9468097Z ```python
2025-08-18T13:01:17.9468268Z @router.get("/stats/roi_trend")
2025-08-18T13:01:17.9468499Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T13:01:17.9468732Z ```
2025-08-18T13:01:17.9468813Z 
2025-08-18T13:01:17.9468887Z Return 30-day ROI trend.
2025-08-18T13:01:17.9469018Z 
2025-08-18T13:01:17.9469097Z <a id="api.routes.roi"></a>
2025-08-18T13:01:17.9469333Z 
2025-08-18T13:01:17.9469409Z # api.routes.roi
2025-08-18T13:01:17.9469514Z 
2025-08-18T13:01:17.9469598Z <a id="api.routes.health"></a>
2025-08-18T13:01:17.9469741Z 
2025-08-18T13:01:17.9469817Z # api.routes.health
2025-08-18T13:01:17.9469927Z 
2025-08-18T13:01:17.9470023Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T13:01:17.9470336Z 
2025-08-18T13:01:17.9470403Z #### MAX\_SKEW
2025-08-18T13:01:17.9470501Z 
2025-08-18T13:01:17.9470563Z seconds
2025-08-18T13:01:17.9470669Z 
2025-08-18T13:01:17.9470760Z <a id="api.routes.health.health"></a>
2025-08-18T13:01:17.9470920Z 
2025-08-18T13:01:17.9470989Z #### health
2025-08-18T13:01:17.9471097Z 
2025-08-18T13:01:17.9471160Z ```python
2025-08-18T13:01:17.9471355Z @router.get("/health", include_in_schema=False)
2025-08-18T13:01:17.9471719Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T13:01:17.9472069Z ```
2025-08-18T13:01:17.9472167Z 
2025-08-18T13:01:17.9472289Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T13:01:17.9472483Z 
2025-08-18T13:01:17.9472570Z <a id="api.routes.repository"></a>
2025-08-18T13:01:17.9472723Z 
2025-08-18T13:01:17.9472808Z # api.routes.repository
2025-08-18T13:01:17.9472933Z 
2025-08-18T13:01:17.9473008Z <a id="api.routes"></a>
2025-08-18T13:01:17.9473137Z 
2025-08-18T13:01:17.9473207Z # api.routes
2025-08-18T13:01:17.9473303Z 
2025-08-18T13:01:17.9473392Z <a id="api.models.fee"></a>
2025-08-18T13:01:17.9473522Z 
2025-08-18T13:01:17.9473588Z # api.models.fee
2025-08-18T13:01:17.9473692Z 
2025-08-18T13:01:17.9473770Z <a id="api.models"></a>
2025-08-18T13:01:17.9473885Z 
2025-08-18T13:01:17.9473948Z # api.models
2025-08-18T13:01:17.9474047Z 
2025-08-18T13:01:17.9474126Z <a id="api.roi_repository"></a>
2025-08-18T13:01:17.9474268Z 
2025-08-18T13:01:17.9474339Z # api.roi\_repository
2025-08-18T13:01:17.9474460Z 
2025-08-18T13:01:17.9474529Z <a id="api.main"></a>
2025-08-18T13:01:17.9474637Z 
2025-08-18T13:01:17.9474707Z # api.main
2025-08-18T13:01:17.9474796Z 
2025-08-18T13:01:17.9474872Z <a id="api.main.ready"></a>
2025-08-18T13:01:17.9475010Z 
2025-08-18T13:01:17.9475070Z #### ready
2025-08-18T13:01:17.9475157Z 
2025-08-18T13:01:17.9475220Z ```python
2025-08-18T13:01:17.9475497Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T13:01:17.9476058Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T13:01:17.9476412Z                                                                       str]
2025-08-18T13:01:17.9476641Z ```
2025-08-18T13:01:17.9476728Z 
2025-08-18T13:01:17.9476828Z Return 200 only when migrations are at head.
2025-08-18T13:01:17.9477004Z 
2025-08-18T13:01:17.9477078Z <a id="api.config"></a>
2025-08-18T13:01:17.9477198Z 
2025-08-18T13:01:17.9477263Z # api.config
2025-08-18T13:01:17.9477365Z 
2025-08-18T13:01:17.9477429Z <a id="etl"></a>
2025-08-18T13:01:17.9477532Z 
2025-08-18T13:01:17.9477597Z # etl
2025-08-18T13:01:17.9477683Z 
2025-08-18T13:01:17.9477766Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T13:01:17.9477922Z 
2025-08-18T13:01:17.9477998Z # etl.fba\_fee\_ingestor
2025-08-18T13:01:17.9478120Z 
2025-08-18T13:01:17.9478201Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T13:01:17.9478349Z 
2025-08-18T13:01:17.9478422Z # etl.sp\_fees\_ingestor
2025-08-18T13:01:17.9478544Z 
2025-08-18T13:01:17.9478628Z <a id="etl.keepa_ingestor"></a>
2025-08-18T13:01:17.9478768Z 
2025-08-18T13:01:17.9478839Z # etl.keepa\_ingestor
2025-08-18T13:01:17.9478951Z 
2025-08-18T13:01:17.9479024Z <a id="etl.db"></a>
2025-08-18T13:01:17.9479131Z 
2025-08-18T13:01:17.9479292Z # etl.db
2025-08-18T13:01:17.9479391Z 
2025-08-18T13:01:17.9479474Z <a id="etl.dialects.schemas"></a>
2025-08-18T13:01:17.9479617Z 
2025-08-18T13:01:17.9479691Z # etl.dialects.schemas
2025-08-18T13:01:17.9479815Z 
2025-08-18T13:01:17.9479923Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T13:01:17.9480112Z 
2025-08-18T13:01:17.9480206Z # etl.dialects.amazon\_reimbursements
2025-08-18T13:01:17.9480372Z 
2025-08-18T13:01:17.9480474Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T13:01:17.9480657Z 
2025-08-18T13:01:17.9480743Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T13:01:17.9480900Z 
2025-08-18T13:01:17.9480989Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T13:01:17.9481158Z 
2025-08-18T13:01:17.9481243Z # etl.dialects.amazon\_returns
2025-08-18T13:01:17.9481505Z 
2025-08-18T13:01:17.9481607Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T13:01:17.9481775Z 
2025-08-18T13:01:17.9481861Z # etl.dialects.amazon\_fee\_preview
2025-08-18T13:01:17.9482019Z 
2025-08-18T13:01:17.9482125Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T13:01:17.9482312Z 
2025-08-18T13:01:17.9482406Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T13:01:17.9482571Z 
2025-08-18T13:01:17.9482666Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T13:01:17.9482833Z 
2025-08-18T13:01:17.9482946Z # etl.dialects.amazon\_settlements
2025-08-18T13:01:17.9483095Z 
2025-08-18T13:01:17.9483172Z <a id="etl.dialects"></a>
2025-08-18T13:01:17.9483306Z 
2025-08-18T13:01:17.9483372Z # etl.dialects
2025-08-18T13:01:17.9483473Z 
2025-08-18T13:01:17.9483540Z <a id="ingest"></a>
2025-08-18T13:01:17.9483653Z 
2025-08-18T13:01:17.9483715Z # ingest
2025-08-18T13:01:17.9483801Z 
2025-08-18T13:01:17.9483891Z <a id="ingest.maintenance"></a>
2025-08-18T13:01:17.9484039Z 
2025-08-18T13:01:17.9484111Z # ingest.maintenance
2025-08-18T13:01:17.9484232Z 
2025-08-18T13:01:17.9484315Z <a id="ingest.copy_loader"></a>
2025-08-18T13:01:17.9484450Z 
2025-08-18T13:01:17.9484522Z # ingest.copy\_loader
2025-08-18T13:01:17.9484642Z 
2025-08-18T13:01:17.9484743Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T13:01:17.9484923Z 
2025-08-18T13:01:17.9485005Z #### copy\_df\_via\_temp
2025-08-18T13:01:17.9485127Z 
2025-08-18T13:01:17.9485193Z ```python
2025-08-18T13:01:17.9485368Z def copy_df_via_temp(engine: Engine,
2025-08-18T13:01:17.9485597Z                      df: pd.DataFrame,
2025-08-18T13:01:17.9485828Z                      target_table: str,
2025-08-18T13:01:17.9486039Z                      *,
2025-08-18T13:01:17.9486247Z                      target_schema: Optional[str] = None,
2025-08-18T13:01:17.9486510Z                      columns: Sequence[str],
2025-08-18T13:01:17.9486772Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T13:01:17.9487169Z                      analyze_after: bool = False,
2025-08-18T13:01:17.9487429Z                      connection: Any | None = None) -> int
2025-08-18T13:01:17.9487664Z ```
2025-08-18T13:01:17.9487746Z 
2025-08-18T13:01:17.9487902Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T13:01:17.9488135Z 
2025-08-18T13:01:17.9488221Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T13:01:17.9488376Z 
2025-08-18T13:01:17.9488460Z # ingest.tests.test\_smoke
2025-08-18T13:01:17.9488589Z 
2025-08-18T13:01:17.9488663Z <a id="ingest.tests"></a>
2025-08-18T13:01:17.9488787Z 
2025-08-18T13:01:17.9488857Z # ingest.tests
2025-08-18T13:01:17.9488958Z 
2025-08-18T13:01:17.9489041Z <a id="ingest.upload_router"></a>
2025-08-18T13:01:17.9489361Z 
2025-08-18T13:01:17.9489474Z # ingest.upload\_router
2025-08-18T13:01:17.9489600Z 
2025-08-18T13:01:17.9489686Z <a id="ingest.email_watcher"></a>
2025-08-18T13:01:17.9489829Z 
2025-08-18T13:01:17.9489901Z # ingest.email\_watcher
2025-08-18T13:01:17.9490027Z 
2025-08-18T13:01:17.9490119Z <a id="ingest.email_watcher.main"></a>
2025-08-18T13:01:17.9490279Z 
2025-08-18T13:01:17.9490339Z #### main
2025-08-18T13:01:17.9490433Z 
2025-08-18T13:01:17.9490495Z ```python
2025-08-18T13:01:17.9490661Z def main() -> dict[str, str]
2025-08-18T13:01:17.9490866Z ```
2025-08-18T13:01:17.9490947Z 
2025-08-18T13:01:17.9491093Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T13:01:17.9491313Z 
2025-08-18T13:01:17.9491441Z Returns {"status": "success"} when processing completes.
2025-08-18T13:01:17.9491655Z 
2025-08-18T13:01:17.9491732Z <a id="ingest.tasks"></a>
2025-08-18T13:01:17.9491857Z 
2025-08-18T13:01:17.9491921Z # ingest.tasks
2025-08-18T13:01:17.9492028Z 
2025-08-18T13:01:17.9492123Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T13:01:17.9492294Z 
2025-08-18T13:01:17.9492372Z #### task\_import\_file
2025-08-18T13:01:17.9492486Z 
2025-08-18T13:01:17.9492552Z ```python
2025-08-18T13:01:17.9492763Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T13:01:17.9493172Z def task_import_file(self,
2025-08-18T13:01:17.9493370Z                      uri: str,
2025-08-18T13:01:17.9493587Z                      report_type: Optional[str] = None,
2025-08-18T13:01:17.9493861Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T13:01:17.9494091Z ```
2025-08-18T13:01:17.9494178Z 
2025-08-18T13:01:17.9494310Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T13:01:17.9494518Z 
2025-08-18T13:01:17.9494608Z <a id="ingest.celery_app"></a>
2025-08-18T13:01:17.9494745Z 
2025-08-18T13:01:17.9494818Z # ingest.celery\_app
2025-08-18T13:01:17.9494938Z 
2025-08-18T13:01:17.9495019Z <a id="ingest.ingest_router"></a>
2025-08-18T13:01:17.9495167Z 
2025-08-18T13:01:17.9495241Z # ingest.ingest\_router
2025-08-18T13:01:17.9495362Z 
2025-08-18T13:01:17.9495436Z <a id="logistics_etl"></a>
2025-08-18T13:01:17.9495561Z 
2025-08-18T13:01:17.9495634Z # logistics\_etl
2025-08-18T13:01:17.9495746Z 
2025-08-18T13:01:17.9495823Z Daily logistics ETL job.
2025-08-18T13:01:17.9495955Z 
2025-08-18T13:01:17.9496037Z <a id="logistics_etl.__main__"></a>
2025-08-18T13:01:17.9496186Z 
2025-08-18T13:01:17.9496263Z # logistics\_etl.\_\_main\_\_
2025-08-18T13:01:17.9496408Z 
2025-08-18T13:01:17.9496483Z <a id="logistics_etl.dsn"></a>
2025-08-18T13:01:17.9496616Z 
2025-08-18T13:01:17.9496690Z # logistics\_etl.dsn
2025-08-18T13:01:17.9496813Z 
2025-08-18T13:01:17.9496936Z Local DSN builder to avoid cross-service dependency.
2025-08-18T13:01:17.9497133Z 
2025-08-18T13:01:17.9497221Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T13:01:17.9497390Z 
2025-08-18T13:01:17.9497453Z #### build\_dsn
2025-08-18T13:01:17.9497553Z 
2025-08-18T13:01:17.9497615Z ```python
2025-08-18T13:01:17.9497791Z def build_dsn(sync: bool = True) -> str
2025-08-18T13:01:17.9498010Z ```
2025-08-18T13:01:17.9498088Z 
2025-08-18T13:01:17.9498223Z Return a Postgres DSN assembled from environment variables.
2025-08-18T13:01:17.9498438Z 
2025-08-18T13:01:17.9498706Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T13:01:17.9499086Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T13:01:17.9499543Z error when any required variable is missing.
2025-08-18T13:01:17.9499717Z 
2025-08-18T13:01:17.9499813Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T13:01:17.9499982Z 
2025-08-18T13:01:17.9500064Z # logistics\_etl.tests.conftest
2025-08-18T13:01:17.9500208Z 
2025-08-18T13:01:17.9500318Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T13:01:17.9500498Z 
2025-08-18T13:01:17.9500586Z # logistics\_etl.tests.test\_repository
2025-08-18T13:01:17.9500753Z 
2025-08-18T13:01:17.9500845Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T13:01:17.9501010Z 
2025-08-18T13:01:17.9501106Z # logistics\_etl.tests.test\_cron
2025-08-18T13:01:17.9501257Z 
2025-08-18T13:01:17.9501355Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T13:01:17.9501530Z 
2025-08-18T13:01:17.9501622Z # logistics\_etl.tests.test\_imports
2025-08-18T13:01:17.9501786Z 
2025-08-18T13:01:17.9501878Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T13:01:17.9502071Z 
2025-08-18T13:01:17.9502155Z # logistics\_etl.tests.test\_smoke
2025-08-18T13:01:17.9502311Z 
2025-08-18T13:01:17.9502413Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T13:01:17.9502582Z 
2025-08-18T13:01:17.9502665Z # logistics\_etl.tests.test\_client
2025-08-18T13:01:17.9502816Z 
2025-08-18T13:01:17.9502905Z <a id="logistics_etl.tests"></a>
2025-08-18T13:01:17.9503049Z 
2025-08-18T13:01:17.9503121Z # logistics\_etl.tests
2025-08-18T13:01:17.9503245Z 
2025-08-18T13:01:17.9503325Z <a id="logistics_etl.flow"></a>
2025-08-18T13:01:17.9503462Z 
2025-08-18T13:01:17.9503538Z # logistics\_etl.flow
2025-08-18T13:01:17.9503653Z 
2025-08-18T13:01:17.9503735Z <a id="logistics_etl.client"></a>
2025-08-18T13:01:17.9503882Z 
2025-08-18T13:01:17.9503963Z # logistics\_etl.client
2025-08-18T13:01:17.9504082Z 
2025-08-18T13:01:17.9504159Z <a id="logistics_etl.cron"></a>
2025-08-18T13:01:17.9504432Z 
2025-08-18T13:01:17.9504502Z # logistics\_etl.cron
2025-08-18T13:01:17.9504616Z 
2025-08-18T13:01:17.9504694Z <a id="logistics_etl.db"></a>
2025-08-18T13:01:17.9504834Z 
2025-08-18T13:01:17.9504901Z # logistics\_etl.db
2025-08-18T13:01:17.9505008Z 
2025-08-18T13:01:17.9505103Z <a id="logistics_etl.repository"></a>
2025-08-18T13:01:17.9505261Z 
2025-08-18T13:01:17.9505342Z # logistics\_etl.repository
2025-08-18T13:01:17.9505479Z 
2025-08-18T13:01:17.9505551Z <a id="alert_bot"></a>
2025-08-18T13:01:17.9505665Z 
2025-08-18T13:01:17.9505729Z # alert\_bot
2025-08-18T13:01:17.9505829Z 
2025-08-18T13:01:17.9505917Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T13:01:17.9506077Z 
2025-08-18T13:01:17.9506167Z # alert\_bot.tests.test\_smoke
2025-08-18T13:01:17.9506307Z 
2025-08-18T13:01:17.9506385Z <a id="alert_bot.tests"></a>
2025-08-18T13:01:17.9506523Z 
2025-08-18T13:01:17.9506590Z # alert\_bot.tests
2025-08-18T13:01:17.9506695Z 
2025-08-18T13:01:17.9506775Z <a id="alert_bot.alert_bot"></a>
2025-08-18T13:01:17.9506931Z 
2025-08-18T13:01:17.9507004Z # alert\_bot.alert\_bot
2025-08-18T13:01:17.9507120Z 
2025-08-18T13:01:17.9507201Z <a id="alert_bot.rules"></a>
2025-08-18T13:01:17.9507332Z 
2025-08-18T13:01:17.9507399Z # alert\_bot.rules
2025-08-18T13:01:17.9507502Z 
2025-08-18T13:01:17.9507576Z <a id="common"></a>
2025-08-18T13:01:17.9507682Z 
2025-08-18T13:01:17.9507744Z # common
2025-08-18T13:01:17.9507838Z 
2025-08-18T13:01:17.9507911Z <a id="common.dsn"></a>
2025-08-18T13:01:17.9508026Z 
2025-08-18T13:01:17.9508096Z # common.dsn
2025-08-18T13:01:17.9508189Z 
2025-08-18T13:01:17.9508273Z <a id="common.dsn.build_dsn"></a>
2025-08-18T13:01:17.9508421Z 
2025-08-18T13:01:17.9508490Z #### build\_dsn
2025-08-18T13:01:17.9508590Z 
2025-08-18T13:01:17.9508652Z ```python
2025-08-18T13:01:17.9508830Z def build_dsn(sync: bool = True) -> str
2025-08-18T13:01:17.9509043Z ```
2025-08-18T13:01:17.9509132Z 
2025-08-18T13:01:17.9509352Z Return a Postgres DSN, validating required variables.
2025-08-18T13:01:17.9509675Z 
2025-08-18T13:01:17.9509867Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T13:01:17.9510296Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T13:01:17.9510703Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T13:01:17.9548723Z missing.
2025-08-18T13:01:17.9549005Z 
2025-08-18T13:01:17.9549352Z <a id="common.models_vendor"></a>
2025-08-18T13:01:17.9549761Z 
2025-08-18T13:01:17.9549920Z # common.models\_vendor
2025-08-18T13:01:17.9550167Z 
2025-08-18T13:01:17.9550359Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T13:01:17.9550707Z 
2025-08-18T13:01:17.9550850Z ## Vendor Objects
2025-08-18T13:01:17.9551059Z 
2025-08-18T13:01:17.9551141Z ```python
2025-08-18T13:01:17.9551339Z class Vendor(Base)
2025-08-18T13:01:17.9551549Z ```
2025-08-18T13:01:17.9551653Z 
2025-08-18T13:01:17.9551753Z Vendor of inventory items.
2025-08-18T13:01:17.9551926Z 
2025-08-18T13:01:17.9552065Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T13:01:17.9552298Z 
2025-08-18T13:01:17.9552396Z ## VendorPrice Objects
2025-08-18T13:01:17.9552543Z 
2025-08-18T13:01:17.9552621Z ```python
2025-08-18T13:01:17.9552823Z class VendorPrice(Base)
2025-08-18T13:01:17.9553039Z ```
2025-08-18T13:01:17.9553145Z 
2025-08-18T13:01:17.9553273Z Association table linking vendors to pricing.
2025-08-18T13:01:17.9553496Z 
2025-08-18T13:01:17.9553593Z <a id="common.db_url"></a>
2025-08-18T13:01:17.9553749Z 
2025-08-18T13:01:17.9553832Z # common.db\_url
2025-08-18T13:01:17.9553961Z 
2025-08-18T13:01:17.9554071Z <a id="common.db_url.build_url"></a>
2025-08-18T13:01:17.9554263Z 
2025-08-18T13:01:17.9554341Z #### build\_url
2025-08-18T13:01:17.9554471Z 
2025-08-18T13:01:17.9554547Z ```python
2025-08-18T13:01:17.9554760Z def build_url(async_: bool = True) -> str
2025-08-18T13:01:17.9555040Z ```
2025-08-18T13:01:17.9555141Z 
2025-08-18T13:01:17.9555267Z Return Postgres DSN from env or PG_* parts.
2025-08-18T13:01:17.9555489Z 
2025-08-18T13:01:17.9555764Z <a id="common.keepa"></a>
2025-08-18T13:01:17.9555924Z 
2025-08-18T13:01:17.9556013Z # common.keepa
2025-08-18T13:01:17.9556138Z 
2025-08-18T13:01:17.9556229Z <a id="common.llm"></a>
2025-08-18T13:01:17.9556381Z 
2025-08-18T13:01:17.9556465Z # common.llm
2025-08-18T13:01:17.9576797Z 
2025-08-18T13:01:17.9576970Z <a id="common.settings"></a>
2025-08-18T13:01:17.9577219Z 
2025-08-18T13:01:17.9577331Z # common.settings
2025-08-18T13:01:17.9577514Z 
2025-08-18T13:01:17.9577640Z <a id="common.db"></a>
2025-08-18T13:01:17.9577825Z 
2025-08-18T13:01:17.9577923Z # common.db
2025-08-18T13:01:17.9578067Z 
2025-08-18T13:01:17.9578225Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T13:01:17.9578520Z 
2025-08-18T13:01:17.9578651Z #### build\_sqlalchemy\_url
2025-08-18T13:01:17.9578878Z 
2025-08-18T13:01:17.9578992Z ```python
2025-08-18T13:01:17.9579460Z def build_sqlalchemy_url() -> str
2025-08-18T13:01:17.9579800Z ```
2025-08-18T13:01:17.9579932Z 
2025-08-18T13:01:17.9580103Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T13:01:17.9580383Z 
2025-08-18T13:01:17.9580529Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T13:01:17.9580805Z 
2025-08-18T13:01:17.9580952Z #### build\_asyncpg\_dsn
2025-08-18T13:01:17.9581168Z 
2025-08-18T13:01:17.9581277Z ```python
2025-08-18T13:01:17.9581566Z def build_asyncpg_dsn() -> str
2025-08-18T13:01:17.9581899Z ```
2025-08-18T13:01:17.9582046Z 
2025-08-18T13:01:17.9582265Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T13:01:17.9582625Z 
2025-08-18T13:01:17.9582792Z <a id="common.db.refresh_mvs"></a>
2025-08-18T13:01:17.9583071Z 
2025-08-18T13:01:17.9583194Z #### refresh\_mvs
2025-08-18T13:01:17.9583393Z 
2025-08-18T13:01:17.9583512Z ```python
2025-08-18T13:01:17.9583854Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T13:01:17.9584286Z ```
2025-08-18T13:01:17.9584427Z 
2025-08-18T13:01:17.9584669Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T13:01:17.9585057Z 
2025-08-18T13:01:17.9585431Z <a id="common.config"></a>
2025-08-18T13:01:17.9585675Z 
2025-08-18T13:01:17.9585800Z # common.config
2025-08-18T13:01:17.9585982Z 
2025-08-18T13:01:17.9586114Z <a id="common.base"></a>
2025-08-18T13:01:17.9586341Z 
2025-08-18T13:01:17.9586449Z # common.base
2025-08-18T13:01:17.9586620Z 
2025-08-18T13:01:17.9586758Z <a id="common.base.Base"></a>
2025-08-18T13:01:17.9587014Z 
2025-08-18T13:01:17.9587124Z ## Base Objects
2025-08-18T13:01:17.9587293Z 
2025-08-18T13:01:17.9587409Z ```python
2025-08-18T13:01:17.9587691Z class Base(DeclarativeBase)
2025-08-18T13:01:17.9588027Z ```
2025-08-18T13:01:17.9588167Z 
2025-08-18T13:01:17.9588309Z Base class for SQLAlchemy models.
2025-08-18T13:01:17.9588580Z 
2025-08-18T13:01:17.9588711Z <a id="repricer"></a>
2025-08-18T13:01:17.9588912Z 
2025-08-18T13:01:17.9589024Z # repricer
2025-08-18T13:01:17.9589392Z 
2025-08-18T13:01:17.9589552Z <a id="repricer.app.schemas"></a>
2025-08-18T13:01:17.9589823Z 
2025-08-18T13:01:17.9589961Z # repricer.app.schemas
2025-08-18T13:01:17.9590184Z 
2025-08-18T13:01:17.9590338Z <a id="repricer.app.deps"></a>
2025-08-18T13:01:17.9590602Z 
2025-08-18T13:01:17.9590720Z # repricer.app.deps
2025-08-18T13:01:17.9590909Z 
2025-08-18T13:01:17.9591113Z Placeholder module for Keepa / SP-API clients.
2025-08-18T13:01:17.9591466Z 
2025-08-18T13:01:17.9591619Z <a id="repricer.app.logic"></a>
2025-08-18T13:01:17.9591866Z 
2025-08-18T13:01:17.9592030Z # repricer.app.logic
2025-08-18T13:01:17.9592205Z 
2025-08-18T13:01:17.9592353Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T13:01:17.9592700Z 
2025-08-18T13:01:17.9592832Z #### MIN\_MARGIN
2025-08-18T13:01:17.9593006Z 
2025-08-18T13:01:17.9593113Z 15 % ROI
2025-08-18T13:01:17.9593275Z 
2025-08-18T13:01:17.9593439Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T13:01:17.9593635Z 
2025-08-18T13:01:17.9593713Z #### compute\_price
2025-08-18T13:01:17.9593822Z 
2025-08-18T13:01:17.9593889Z ```python
2025-08-18T13:01:17.9594158Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T13:01:17.9594736Z ```
2025-08-18T13:01:17.9594829Z 
2025-08-18T13:01:17.9594942Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T13:01:17.9595226Z Replace with real competitive logic later.
2025-08-18T13:01:17.9595406Z 
2025-08-18T13:01:17.9595492Z <a id="repricer.app.main"></a>
2025-08-18T13:01:17.9595634Z 
2025-08-18T13:01:17.9595718Z # repricer.app.main
2025-08-18T13:01:17.9595829Z 
2025-08-18T13:01:17.9595908Z <a id="repricer.app"></a>
2025-08-18T13:01:17.9596039Z 
2025-08-18T13:01:17.9596119Z # repricer.app
2025-08-18T13:01:17.9596223Z 
2025-08-18T13:01:17.9596317Z <a id="repricer.tests.test_imports"></a>
2025-08-18T13:01:17.9596489Z 
2025-08-18T13:01:17.9596570Z # repricer.tests.test\_imports
2025-08-18T13:01:17.9596709Z 
2025-08-18T13:01:17.9596822Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T13:01:17.9596989Z 
2025-08-18T13:01:17.9597071Z # repricer.tests.test\_smoke
2025-08-18T13:01:17.9597206Z 
2025-08-18T13:01:17.9597313Z <a id="repricer.tests"></a>
2025-08-18T13:01:17.9597467Z 
2025-08-18T13:01:17.9597540Z # repricer.tests
2025-08-18T13:01:17.9597657Z 
2025-08-18T13:01:17.9597722Z <a id="db"></a>
2025-08-18T13:01:17.9597821Z 
2025-08-18T13:01:17.9597883Z # db
2025-08-18T13:01:17.9597979Z 
2025-08-18T13:01:17.9598057Z <a id="db.utils.views"></a>
2025-08-18T13:01:17.9598183Z 
2025-08-18T13:01:17.9598256Z # db.utils.views
2025-08-18T13:01:17.9598356Z 
2025-08-18T13:01:17.9598448Z <a id="db.utils.views.replace_view"></a>
2025-08-18T13:01:17.9598627Z 
2025-08-18T13:01:17.9598696Z #### replace\_view
2025-08-18T13:01:17.9598802Z 
2025-08-18T13:01:17.9598867Z ```python
2025-08-18T13:01:17.9599065Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T13:01:17.9599573Z ```
2025-08-18T13:01:17.9599665Z 
2025-08-18T13:01:17.9599758Z Drop and recreate a SQL view atomically.
2025-08-18T13:01:17.9599920Z 
2025-08-18T13:01:17.9600000Z <a id="db.utils"></a>
2025-08-18T13:01:17.9600115Z 
2025-08-18T13:01:17.9600178Z # db.utils
2025-08-18T13:01:17.9600277Z 
2025-08-18T13:01:17.9600487Z <a id="price_importer"></a>
2025-08-18T13:01:17.9600623Z 
2025-08-18T13:01:17.9600692Z # price\_importer
2025-08-18T13:01:17.9600802Z 
2025-08-18T13:01:17.9600904Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T13:01:17.9601097Z 
2025-08-18T13:01:17.9601201Z # price\_importer.services\_common.dsn
2025-08-18T13:01:17.9601370Z 
2025-08-18T13:01:17.9601498Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T13:01:17.9601720Z 
2025-08-18T13:01:17.9601786Z #### build\_dsn
2025-08-18T13:01:17.9601888Z 
2025-08-18T13:01:17.9601953Z ```python
2025-08-18T13:01:17.9602138Z def build_dsn(sync: bool = True) -> str
2025-08-18T13:01:17.9602365Z ```
2025-08-18T13:01:17.9602446Z 
2025-08-18T13:01:17.9602511Z Return safe DSN.
2025-08-18T13:01:17.9602616Z 
2025-08-18T13:01:17.9602959Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T13:01:17.9603161Z 
2025-08-18T13:01:17.9603306Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T13:01:17.9603520Z 
2025-08-18T13:01:17.9603629Z # price\_importer.services\_common.models\_vendor
2025-08-18T13:01:17.9603829Z 
2025-08-18T13:01:17.9603935Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T13:01:17.9604118Z 
2025-08-18T13:01:17.9604213Z # price\_importer.services\_common.db\_url
2025-08-18T13:01:17.9604387Z 
2025-08-18T13:01:17.9604517Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T13:01:17.9604731Z 
2025-08-18T13:01:17.9604804Z #### build\_url
2025-08-18T13:01:17.9604906Z 
2025-08-18T13:01:17.9604969Z ```python
2025-08-18T13:01:17.9605148Z def build_url(async_: bool = True) -> str
2025-08-18T13:01:17.9605408Z ```
2025-08-18T13:01:17.9605490Z 
2025-08-18T13:01:17.9605587Z Return Postgres DSN from env or PG_* parts.
2025-08-18T13:01:17.9605763Z 
2025-08-18T13:01:17.9605869Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T13:01:17.9606050Z 
2025-08-18T13:01:17.9606148Z # price\_importer.services\_common.keepa
2025-08-18T13:01:17.9606313Z 
2025-08-18T13:01:17.9606418Z <a id="price_importer.services_common.llm"></a>
2025-08-18T13:01:17.9606723Z 
2025-08-18T13:01:17.9606813Z # price\_importer.services\_common.llm
2025-08-18T13:01:17.9606972Z 
2025-08-18T13:01:17.9607084Z <a id="price_importer.services_common.settings"></a>
2025-08-18T13:01:17.9607278Z 
2025-08-18T13:01:17.9607375Z # price\_importer.services\_common.settings
2025-08-18T13:01:17.9607540Z 
2025-08-18T13:01:17.9607645Z <a id="price_importer.services_common.db"></a>
2025-08-18T13:01:17.9607816Z 
2025-08-18T13:01:17.9607904Z # price\_importer.services\_common.db
2025-08-18T13:01:17.9608067Z 
2025-08-18T13:01:17.9608220Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T13:01:17.9608456Z 
2025-08-18T13:01:17.9608541Z #### build\_sqlalchemy\_url
2025-08-18T13:01:17.9608674Z 
2025-08-18T13:01:17.9608738Z ```python
2025-08-18T13:01:17.9608916Z def build_sqlalchemy_url() -> str
2025-08-18T13:01:17.9609125Z ```
2025-08-18T13:01:17.9609416Z 
2025-08-18T13:01:17.9609527Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T13:01:17.9609713Z 
2025-08-18T13:01:17.9609856Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T13:01:17.9610086Z 
2025-08-18T13:01:17.9610161Z #### build\_asyncpg\_dsn
2025-08-18T13:01:17.9610285Z 
2025-08-18T13:01:17.9610355Z ```python
2025-08-18T13:01:17.9610526Z def build_asyncpg_dsn() -> str
2025-08-18T13:01:17.9610722Z ```
2025-08-18T13:01:17.9610804Z 
2025-08-18T13:01:17.9610930Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T13:01:17.9611143Z 
2025-08-18T13:01:17.9611269Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T13:01:17.9611475Z 
2025-08-18T13:01:17.9611541Z #### refresh\_mvs
2025-08-18T13:01:17.9611654Z 
2025-08-18T13:01:17.9611717Z ```python
2025-08-18T13:01:17.9611913Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T13:01:17.9612155Z ```
2025-08-18T13:01:17.9612235Z 
2025-08-18T13:01:17.9612375Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T13:01:17.9612711Z 
2025-08-18T13:01:17.9612810Z <a id="price_importer.services_common"></a>
2025-08-18T13:01:17.9612987Z 
2025-08-18T13:01:17.9613072Z # price\_importer.services\_common
2025-08-18T13:01:17.9613222Z 
2025-08-18T13:01:17.9613331Z <a id="price_importer.services_common.base"></a>
2025-08-18T13:01:17.9613513Z 
2025-08-18T13:01:17.9613601Z # price\_importer.services\_common.base
2025-08-18T13:01:17.9613764Z 
2025-08-18T13:01:17.9613859Z <a id="price_importer.normaliser"></a>
2025-08-18T13:01:17.9614020Z 
2025-08-18T13:01:17.9614102Z # price\_importer.normaliser
2025-08-18T13:01:17.9614247Z 
2025-08-18T13:01:17.9614349Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T13:01:17.9614526Z 
2025-08-18T13:01:17.9614620Z # price\_importer.common.models\_vendor
2025-08-18T13:01:17.9614778Z 
2025-08-18T13:01:17.9614870Z <a id="price_importer.common.db_url"></a>
2025-08-18T13:01:17.9615039Z 
2025-08-18T13:01:17.9615127Z # price\_importer.common.db\_url
2025-08-18T13:01:17.9615273Z 
2025-08-18T13:01:17.9615379Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T13:01:17.9615572Z 
2025-08-18T13:01:17.9615636Z #### make\_dsn
2025-08-18T13:01:17.9615736Z 
2025-08-18T13:01:17.9615803Z ```python
2025-08-18T13:01:17.9615975Z def make_dsn(async_: bool = False) -> str
2025-08-18T13:01:17.9616199Z ```
2025-08-18T13:01:17.9616281Z 
2025-08-18T13:01:17.9616401Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T13:01:17.9616605Z 
2025-08-18T13:01:17.9616716Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T13:01:17.9616902Z 
2025-08-18T13:01:17.9616966Z #### build\_url
2025-08-18T13:01:17.9617072Z 
2025-08-18T13:01:17.9617134Z ```python
2025-08-18T13:01:17.9617315Z def build_url(async_: bool = False) -> str
2025-08-18T13:01:17.9617535Z ```
2025-08-18T13:01:17.9617615Z 
2025-08-18T13:01:17.9617742Z Return Postgres DSN built from environment variables.
2025-08-18T13:01:17.9617939Z 
2025-08-18T13:01:17.9618024Z <a id="price_importer.common"></a>
2025-08-18T13:01:17.9618183Z 
2025-08-18T13:01:17.9618266Z # price\_importer.common
2025-08-18T13:01:17.9618511Z 
2025-08-18T13:01:17.9618601Z <a id="price_importer.common.base"></a>
2025-08-18T13:01:17.9618769Z 
2025-08-18T13:01:17.9618853Z # price\_importer.common.base
2025-08-18T13:01:17.9618994Z 
2025-08-18T13:01:17.9619097Z <a id="price_importer.tests.conftest"></a>
2025-08-18T13:01:17.9619436Z 
2025-08-18T13:01:17.9619525Z # price\_importer.tests.conftest
2025-08-18T13:01:17.9619681Z 
2025-08-18T13:01:17.9619784Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T13:01:17.9619958Z 
2025-08-18T13:01:17.9620044Z # price\_importer.tests.test\_reader
2025-08-18T13:01:17.9620209Z 
2025-08-18T13:01:17.9620309Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T13:01:17.9620484Z 
2025-08-18T13:01:17.9620578Z # price\_importer.tests.test\_imports
2025-08-18T13:01:17.9620737Z 
2025-08-18T13:01:17.9620833Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T13:01:17.9621008Z 
2025-08-18T13:01:17.9621095Z # price\_importer.tests.test\_smoke
2025-08-18T13:01:17.9621261Z 
2025-08-18T13:01:17.9621370Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T13:01:17.9621561Z 
2025-08-18T13:01:17.9621654Z # price\_importer.tests.test\_normaliser
2025-08-18T13:01:17.9621818Z 
2025-08-18T13:01:17.9621909Z <a id="price_importer.tests"></a>
2025-08-18T13:01:17.9622061Z 
2025-08-18T13:01:17.9622142Z # price\_importer.tests
2025-08-18T13:01:17.9622268Z 
2025-08-18T13:01:17.9622350Z <a id="price_importer.reader"></a>
2025-08-18T13:01:17.9622498Z 
2025-08-18T13:01:17.9622575Z # price\_importer.reader
2025-08-18T13:01:17.9622704Z 
2025-08-18T13:01:17.9622792Z <a id="price_importer.repository"></a>
2025-08-18T13:01:17.9622951Z 
2025-08-18T13:01:17.9623038Z # price\_importer.repository
2025-08-18T13:01:17.9623174Z 
2025-08-18T13:01:17.9623255Z <a id="price_importer.import"></a>
2025-08-18T13:01:17.9623407Z 
2025-08-18T13:01:17.9623483Z # price\_importer.import
2025-08-18T13:01:17.9623604Z 
2025-08-18T13:01:17.9623674Z <a id="fees_h10"></a>
2025-08-18T13:01:17.9623911Z 
2025-08-18T13:01:17.9623980Z # fees\_h10
2025-08-18T13:01:17.9624069Z 
2025-08-18T13:01:17.9624150Z <a id="fees_h10.worker"></a>
2025-08-18T13:01:17.9624279Z 
2025-08-18T13:01:17.9624345Z # fees\_h10.worker
2025-08-18T13:01:17.9624454Z 
2025-08-18T13:01:17.9624549Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T13:01:17.9624721Z 
2025-08-18T13:01:17.9624793Z #### list\_active\_asins
2025-08-18T13:01:17.9624916Z 
2025-08-18T13:01:17.9624980Z ```python
2025-08-18T13:01:17.9625152Z def list_active_asins() -> list[str]
2025-08-18T13:01:17.9625381Z ```
2025-08-18T13:01:17.9625462Z 
2025-08-18T13:01:17.9625578Z Return known ASINs or an empty list if unavailable.
2025-08-18T13:01:17.9625770Z 
2025-08-18T13:01:17.9625853Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T13:01:17.9626013Z 
2025-08-18T13:01:17.9626095Z # fees\_h10.tests.test\_smoke
2025-08-18T13:01:17.9626234Z 
2025-08-18T13:01:17.9626311Z <a id="fees_h10.tests"></a>
2025-08-18T13:01:17.9626445Z 
2025-08-18T13:01:17.9626515Z # fees\_h10.tests
2025-08-18T13:01:17.9626622Z 
2025-08-18T13:01:17.9626703Z <a id="fees_h10.client"></a>
2025-08-18T13:01:17.9626833Z 
2025-08-18T13:01:17.9626900Z # fees\_h10.client
2025-08-18T13:01:17.9627009Z 
2025-08-18T13:01:17.9627090Z <a id="fees_h10.repository"></a>
2025-08-18T13:01:17.9627231Z 
2025-08-18T13:01:17.9627305Z # fees\_h10.repository
2025-08-18T13:01:17.9627429Z 
2025-08-18T13:01:17.9627497Z <a id="emailer"></a>
2025-08-18T13:01:17.9627610Z 
2025-08-18T13:01:17.9627676Z # emailer
2025-08-18T13:01:17.9627763Z 
2025-08-18T13:01:17.9627866Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T13:01:17.9628050Z 
2025-08-18T13:01:17.9628136Z # emailer.tests.test\_import\_emailer
2025-08-18T13:01:17.9628296Z 
2025-08-18T13:01:17.9628381Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T13:01:17.9628541Z 
2025-08-18T13:01:17.9628620Z # emailer.tests.test\_smoke
2025-08-18T13:01:17.9628754Z 
2025-08-18T13:01:17.9628834Z <a id="emailer.tests"></a>
2025-08-18T13:01:17.9628964Z 
2025-08-18T13:01:17.9629033Z # emailer.tests
2025-08-18T13:01:17.9629416Z 
2025-08-18T13:01:17.9629513Z <a id="emailer.generate_body"></a>
2025-08-18T13:01:17.9629669Z 
2025-08-18T13:01:17.9629747Z # emailer.generate\_body
2025-08-18T13:01:17.9629882Z 
2025-08-18T13:01:17.9629953Z <a id="llm_server"></a>
2025-08-18T13:01:17.9630071Z 
2025-08-18T13:01:17.9630143Z # llm\_server
2025-08-18T13:01:17.9630240Z 
2025-08-18T13:01:17.9630318Z <a id="llm_server.app"></a>
2025-08-18T13:01:17.9630448Z 
2025-08-18T13:01:17.9630521Z # llm\_server.app
2025-08-18T13:01:17.9630627Z 
