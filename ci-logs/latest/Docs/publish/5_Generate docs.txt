2025-08-18T18:41:06.4809643Z ##[group]Run pydoc-markdown
2025-08-18T18:41:06.4809926Z [36;1mpydoc-markdown[0m
2025-08-18T18:41:06.4850381Z shell: /usr/bin/bash -e {0}
2025-08-18T18:41:06.4850622Z env:
2025-08-18T18:41:06.4850855Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:41:06.4851255Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T18:41:06.4851662Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:41:06.4852001Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:41:06.4852343Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:41:06.4852672Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T18:41:06.4852951Z ##[endgroup]
2025-08-18T18:41:06.8126829Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T18:41:06.8127693Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T18:41:06.8128313Z In "pydoc-markdown.yml"
2025-08-18T18:41:06.8128821Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T18:41:06.8129762Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T18:41:06.8130775Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T18:41:06.8131483Z 
2025-08-18T18:41:07.1098213Z <a id="__init__"></a>
2025-08-18T18:41:07.1098677Z 
2025-08-18T18:41:07.1098816Z # \_\_init\_\_
2025-08-18T18:41:07.1099024Z 
2025-08-18T18:41:07.1099187Z <a id="api"></a>
2025-08-18T18:41:07.1099398Z 
2025-08-18T18:41:07.1099524Z # api
2025-08-18T18:41:07.1099723Z 
2025-08-18T18:41:07.1099895Z <a id="api.errors"></a>
2025-08-18T18:41:07.1100174Z 
2025-08-18T18:41:07.1100323Z # api.errors
2025-08-18T18:41:07.1100559Z 
2025-08-18T18:41:07.1100774Z <a id="api.tests.test_errors_json"></a>
2025-08-18T18:41:07.1101180Z 
2025-08-18T18:41:07.1101390Z # api.tests.test\_errors\_json
2025-08-18T18:41:07.1101737Z 
2025-08-18T18:41:07.1101924Z <a id="api.tests.test_llm"></a>
2025-08-18T18:41:07.1102255Z 
2025-08-18T18:41:07.1102840Z # api.tests.test\_llm
2025-08-18T18:41:07.1103162Z 
2025-08-18T18:41:07.1103363Z <a id="api.tests.test_cors"></a>
2025-08-18T18:41:07.1103738Z 
2025-08-18T18:41:07.1103920Z # api.tests.test\_cors
2025-08-18T18:41:07.1104461Z 
2025-08-18T18:41:07.1104665Z <a id="api.tests.test_imports"></a>
2025-08-18T18:41:07.1105022Z 
2025-08-18T18:41:07.1105188Z # api.tests.test\_imports
2025-08-18T18:41:07.1105484Z 
2025-08-18T18:41:07.1105716Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T18:41:07.1106080Z 
2025-08-18T18:41:07.1106247Z # api.tests.test\_rate\_limit
2025-08-18T18:41:07.1106556Z 
2025-08-18T18:41:07.1106766Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T18:41:07.1107169Z 
2025-08-18T18:41:07.1107296Z #### app
2025-08-18T18:41:07.1107453Z 
2025-08-18T18:41:07.1107568Z noqa: E402
2025-08-18T18:41:07.1107730Z 
2025-08-18T18:41:07.1107892Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T18:41:07.1108207Z 
2025-08-18T18:41:07.1108365Z # api.tests.test\_entrypoint
2025-08-18T18:41:07.1108678Z 
2025-08-18T18:41:07.1108850Z <a id="api.tests.test_health"></a>
2025-08-18T18:41:07.1109144Z 
2025-08-18T18:41:07.1109281Z # api.tests.test\_health
2025-08-18T18:41:07.1109508Z 
2025-08-18T18:41:07.1109644Z <a id="api.logging_config"></a>
2025-08-18T18:41:07.1109897Z 
2025-08-18T18:41:07.1110035Z # api.logging\_config
2025-08-18T18:41:07.1110237Z 
2025-08-18T18:41:07.1110377Z <a id="api.migrations.env"></a>
2025-08-18T18:41:07.1110633Z 
2025-08-18T18:41:07.1110761Z # api.migrations.env
2025-08-18T18:41:07.1110954Z 
2025-08-18T18:41:07.1111159Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T18:41:07.1111513Z 
2025-08-18T18:41:07.1111690Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T18:41:07.1112011Z 
2025-08-18T18:41:07.1112202Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T18:41:07.1112531Z 
2025-08-18T18:41:07.1112689Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T18:41:07.1112991Z 
2025-08-18T18:41:07.1113252Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T18:41:07.1114228Z 
2025-08-18T18:41:07.1114495Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T18:41:07.1114889Z 
2025-08-18T18:41:07.1115110Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T18:41:07.1115457Z 
2025-08-18T18:41:07.1115643Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T18:41:07.1115923Z 
2025-08-18T18:41:07.1116056Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T18:41:07.1116282Z 
2025-08-18T18:41:07.1116394Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T18:41:07.1116595Z 
2025-08-18T18:41:07.1116739Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T18:41:07.1116970Z 
2025-08-18T18:41:07.1117097Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T18:41:07.1117308Z 
2025-08-18T18:41:07.1117444Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T18:41:07.1117645Z 
2025-08-18T18:41:07.1117751Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T18:41:07.1117963Z 
2025-08-18T18:41:07.1118094Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T18:41:07.1118301Z 
2025-08-18T18:41:07.1118418Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T18:41:07.1118602Z 
2025-08-18T18:41:07.1118741Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T18:41:07.1118975Z 
2025-08-18T18:41:07.1119097Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T18:41:07.1119292Z 
2025-08-18T18:41:07.1119420Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T18:41:07.1119636Z 
2025-08-18T18:41:07.1119745Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T18:41:07.1119936Z 
2025-08-18T18:41:07.1120077Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T18:41:07.1120288Z 
2025-08-18T18:41:07.1120405Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T18:41:07.1120616Z 
2025-08-18T18:41:07.1120732Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T18:41:07.1121087Z 
2025-08-18T18:41:07.1121182Z # api.migrations.versions.0001\_baseline
2025-08-18T18:41:07.1121357Z 
2025-08-18T18:41:07.1121444Z <a id="api.migrations.versions"></a>
2025-08-18T18:41:07.1121602Z 
2025-08-18T18:41:07.1121688Z # api.migrations.versions
2025-08-18T18:41:07.1121822Z 
2025-08-18T18:41:07.1121898Z <a id="api.migrations"></a>
2025-08-18T18:41:07.1122033Z 
2025-08-18T18:41:07.1122100Z # api.migrations
2025-08-18T18:41:07.1122204Z 
2025-08-18T18:41:07.1122271Z <a id="api.db"></a>
2025-08-18T18:41:07.1122381Z 
2025-08-18T18:41:07.1122443Z # api.db
2025-08-18T18:41:07.1122528Z 
2025-08-18T18:41:07.1122614Z <a id="api.routes.stats"></a>
2025-08-18T18:41:07.1122751Z 
2025-08-18T18:41:07.1122819Z # api.routes.stats
2025-08-18T18:41:07.1122928Z 
2025-08-18T18:41:07.1123014Z <a id="api.routes.stats.kpi"></a>
2025-08-18T18:41:07.1123162Z 
2025-08-18T18:41:07.1123225Z #### kpi
2025-08-18T18:41:07.1123315Z 
2025-08-18T18:41:07.1123380Z ```python
2025-08-18T18:41:07.1123557Z @router.get("/stats/kpi")
2025-08-18T18:41:07.1123794Z def kpi() -> List[Dict[str, int]]
2025-08-18T18:41:07.1124204Z ```
2025-08-18T18:41:07.1124369Z 
2025-08-18T18:41:07.1124450Z Return KPI metrics (mock).
2025-08-18T18:41:07.1124618Z 
2025-08-18T18:41:07.1124717Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T18:41:07.1124892Z 
2025-08-18T18:41:07.1124967Z #### roi\_by\_vendor
2025-08-18T18:41:07.1125075Z 
2025-08-18T18:41:07.1125136Z ```python
2025-08-18T18:41:07.1125308Z @router.get("/stats/roi_by_vendor")
2025-08-18T18:41:07.1125543Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T18:41:07.1125770Z ```
2025-08-18T18:41:07.1125848Z 
2025-08-18T18:41:07.1125929Z Return ROI percent by vendor.
2025-08-18T18:41:07.1126069Z 
2025-08-18T18:41:07.1126156Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T18:41:07.1126319Z 
2025-08-18T18:41:07.1126388Z #### roi\_trend
2025-08-18T18:41:07.1126486Z 
2025-08-18T18:41:07.1126546Z ```python
2025-08-18T18:41:07.1126708Z @router.get("/stats/roi_trend")
2025-08-18T18:41:07.1127086Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T18:41:07.1127316Z ```
2025-08-18T18:41:07.1127393Z 
2025-08-18T18:41:07.1127465Z Return 30-day ROI trend.
2025-08-18T18:41:07.1127790Z 
2025-08-18T18:41:07.1127938Z <a id="api.routes.roi"></a>
2025-08-18T18:41:07.1128185Z 
2025-08-18T18:41:07.1128316Z # api.routes.roi
2025-08-18T18:41:07.1128508Z 
2025-08-18T18:41:07.1128655Z <a id="api.routes.health"></a>
2025-08-18T18:41:07.1128918Z 
2025-08-18T18:41:07.1129045Z # api.routes.health
2025-08-18T18:41:07.1129245Z 
2025-08-18T18:41:07.1129407Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T18:41:07.1129689Z 
2025-08-18T18:41:07.1129756Z #### MAX\_SKEW
2025-08-18T18:41:07.1129859Z 
2025-08-18T18:41:07.1129929Z seconds
2025-08-18T18:41:07.1130011Z 
2025-08-18T18:41:07.1130099Z <a id="api.routes.health.health"></a>
2025-08-18T18:41:07.1130259Z 
2025-08-18T18:41:07.1130327Z #### health
2025-08-18T18:41:07.1130414Z 
2025-08-18T18:41:07.1130474Z ```python
2025-08-18T18:41:07.1130680Z @router.get("/health", include_in_schema=False)
2025-08-18T18:41:07.1131054Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T18:41:07.1131388Z ```
2025-08-18T18:41:07.1131469Z 
2025-08-18T18:41:07.1131591Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T18:41:07.1131782Z 
2025-08-18T18:41:07.1131869Z <a id="api.routes.repository"></a>
2025-08-18T18:41:07.1132027Z 
2025-08-18T18:41:07.1132105Z # api.routes.repository
2025-08-18T18:41:07.1132227Z 
2025-08-18T18:41:07.1132297Z <a id="api.routes"></a>
2025-08-18T18:41:07.1132417Z 
2025-08-18T18:41:07.1132480Z # api.routes
2025-08-18T18:41:07.1132577Z 
2025-08-18T18:41:07.1132659Z <a id="api.models.fee"></a>
2025-08-18T18:41:07.1132788Z 
2025-08-18T18:41:07.1132853Z # api.models.fee
2025-08-18T18:41:07.1132955Z 
2025-08-18T18:41:07.1133031Z <a id="api.models"></a>
2025-08-18T18:41:07.1133140Z 
2025-08-18T18:41:07.1133202Z # api.models
2025-08-18T18:41:07.1133302Z 
2025-08-18T18:41:07.1133557Z <a id="api.roi_repository"></a>
2025-08-18T18:41:07.1133701Z 
2025-08-18T18:41:07.1133781Z # api.roi\_repository
2025-08-18T18:41:07.1133902Z 
2025-08-18T18:41:07.1134186Z <a id="api.main"></a>
2025-08-18T18:41:07.1134320Z 
2025-08-18T18:41:07.1134393Z # api.main
2025-08-18T18:41:07.1134486Z 
2025-08-18T18:41:07.1134564Z <a id="api.main.ready"></a>
2025-08-18T18:41:07.1134702Z 
2025-08-18T18:41:07.1134764Z #### ready
2025-08-18T18:41:07.1134851Z 
2025-08-18T18:41:07.1134913Z ```python
2025-08-18T18:41:07.1135180Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T18:41:07.1135612Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T18:41:07.1135958Z                                                                       str]
2025-08-18T18:41:07.1136186Z ```
2025-08-18T18:41:07.1136272Z 
2025-08-18T18:41:07.1136369Z Return 200 only when migrations are at head.
2025-08-18T18:41:07.1136549Z 
2025-08-18T18:41:07.1136626Z <a id="api.config"></a>
2025-08-18T18:41:07.1136755Z 
2025-08-18T18:41:07.1136825Z # api.config
2025-08-18T18:41:07.1136927Z 
2025-08-18T18:41:07.1136992Z <a id="etl"></a>
2025-08-18T18:41:07.1137102Z 
2025-08-18T18:41:07.1137171Z # etl
2025-08-18T18:41:07.1137257Z 
2025-08-18T18:41:07.1137337Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T18:41:07.1137489Z 
2025-08-18T18:41:07.1137563Z # etl.fba\_fee\_ingestor
2025-08-18T18:41:07.1137684Z 
2025-08-18T18:41:07.1137763Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T18:41:07.1137911Z 
2025-08-18T18:41:07.1137984Z # etl.sp\_fees\_ingestor
2025-08-18T18:41:07.1138101Z 
2025-08-18T18:41:07.1138187Z <a id="etl.keepa_ingestor"></a>
2025-08-18T18:41:07.1138330Z 
2025-08-18T18:41:07.1138399Z # etl.keepa\_ingestor
2025-08-18T18:41:07.1138526Z 
2025-08-18T18:41:07.1138592Z <a id="etl.db"></a>
2025-08-18T18:41:07.1138705Z 
2025-08-18T18:41:07.1138765Z # etl.db
2025-08-18T18:41:07.1138852Z 
2025-08-18T18:41:07.1138939Z <a id="etl.dialects.schemas"></a>
2025-08-18T18:41:07.1139081Z 
2025-08-18T18:41:07.1139158Z # etl.dialects.schemas
2025-08-18T18:41:07.1139404Z 
2025-08-18T18:41:07.1139518Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T18:41:07.1139745Z 
2025-08-18T18:41:07.1139835Z # etl.dialects.amazon\_reimbursements
2025-08-18T18:41:07.1139995Z 
2025-08-18T18:41:07.1140088Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T18:41:07.1140261Z 
2025-08-18T18:41:07.1140346Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T18:41:07.1140499Z 
2025-08-18T18:41:07.1140594Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T18:41:07.1140755Z 
2025-08-18T18:41:07.1140837Z # etl.dialects.amazon\_returns
2025-08-18T18:41:07.1140981Z 
2025-08-18T18:41:07.1141071Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T18:41:07.1141236Z 
2025-08-18T18:41:07.1141321Z # etl.dialects.amazon\_fee\_preview
2025-08-18T18:41:07.1141479Z 
2025-08-18T18:41:07.1141582Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T18:41:07.1141767Z 
2025-08-18T18:41:07.1141864Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T18:41:07.1142037Z 
2025-08-18T18:41:07.1142130Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T18:41:07.1142303Z 
2025-08-18T18:41:07.1142388Z # etl.dialects.amazon\_settlements
2025-08-18T18:41:07.1142539Z 
2025-08-18T18:41:07.1142620Z <a id="etl.dialects"></a>
2025-08-18T18:41:07.1142743Z 
2025-08-18T18:41:07.1142806Z # etl.dialects
2025-08-18T18:41:07.1142904Z 
2025-08-18T18:41:07.1142975Z <a id="ingest"></a>
2025-08-18T18:41:07.1143078Z 
2025-08-18T18:41:07.1143138Z # ingest
2025-08-18T18:41:07.1143224Z 
2025-08-18T18:41:07.1143304Z <a id="ingest.maintenance"></a>
2025-08-18T18:41:07.1143442Z 
2025-08-18T18:41:07.1143512Z # ingest.maintenance
2025-08-18T18:41:07.1143630Z 
2025-08-18T18:41:07.1143707Z <a id="ingest.copy_loader"></a>
2025-08-18T18:41:07.1143842Z 
2025-08-18T18:41:07.1143918Z # ingest.copy\_loader
2025-08-18T18:41:07.1144246Z 
2025-08-18T18:41:07.1144351Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T18:41:07.1144539Z 
2025-08-18T18:41:07.1144735Z #### copy\_df\_via\_temp
2025-08-18T18:41:07.1144861Z 
2025-08-18T18:41:07.1144924Z ```python
2025-08-18T18:41:07.1145094Z def copy_df_via_temp(engine: Engine,
2025-08-18T18:41:07.1145320Z                      df: pd.DataFrame,
2025-08-18T18:41:07.1145553Z                      target_table: str,
2025-08-18T18:41:07.1145768Z                      *,
2025-08-18T18:41:07.1145967Z                      target_schema: Optional[str] = None,
2025-08-18T18:41:07.1146226Z                      columns: Sequence[str],
2025-08-18T18:41:07.1146487Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T18:41:07.1146766Z                      analyze_after: bool = False,
2025-08-18T18:41:07.1147026Z                      connection: Any | None = None) -> int
2025-08-18T18:41:07.1147261Z ```
2025-08-18T18:41:07.1147344Z 
2025-08-18T18:41:07.1147502Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T18:41:07.1147732Z 
2025-08-18T18:41:07.1147817Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T18:41:07.1147980Z 
2025-08-18T18:41:07.1148066Z # ingest.tests.test\_smoke
2025-08-18T18:41:07.1148193Z 
2025-08-18T18:41:07.1148266Z <a id="ingest.tests"></a>
2025-08-18T18:41:07.1148395Z 
2025-08-18T18:41:07.1148463Z # ingest.tests
2025-08-18T18:41:07.1148567Z 
2025-08-18T18:41:07.1148659Z <a id="ingest.upload_router"></a>
2025-08-18T18:41:07.1148811Z 
2025-08-18T18:41:07.1148887Z # ingest.upload\_router
2025-08-18T18:41:07.1149007Z 
2025-08-18T18:41:07.1149093Z <a id="ingest.email_watcher"></a>
2025-08-18T18:41:07.1149238Z 
2025-08-18T18:41:07.1149311Z # ingest.email\_watcher
2025-08-18T18:41:07.1149434Z 
2025-08-18T18:41:07.1149520Z <a id="ingest.email_watcher.main"></a>
2025-08-18T18:41:07.1149682Z 
2025-08-18T18:41:07.1149753Z #### main
2025-08-18T18:41:07.1149840Z 
2025-08-18T18:41:07.1149902Z ```python
2025-08-18T18:41:07.1150074Z def main() -> dict[str, str]
2025-08-18T18:41:07.1150267Z ```
2025-08-18T18:41:07.1150349Z 
2025-08-18T18:41:07.1150494Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T18:41:07.1150848Z 
2025-08-18T18:41:07.1150981Z Returns {"status": "success"} when processing completes.
2025-08-18T18:41:07.1151192Z 
2025-08-18T18:41:07.1151276Z <a id="ingest.tasks"></a>
2025-08-18T18:41:07.1151404Z 
2025-08-18T18:41:07.1151478Z # ingest.tasks
2025-08-18T18:41:07.1151583Z 
2025-08-18T18:41:07.1151679Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T18:41:07.1151853Z 
2025-08-18T18:41:07.1151932Z #### task\_import\_file
2025-08-18T18:41:07.1152046Z 
2025-08-18T18:41:07.1152109Z ```python
2025-08-18T18:41:07.1152319Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T18:41:07.1152596Z def task_import_file(self: Any,
2025-08-18T18:41:07.1152806Z                      uri: str,
2025-08-18T18:41:07.1153030Z                      report_type: Optional[str] = None,
2025-08-18T18:41:07.1153295Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T18:41:07.1153532Z ```
2025-08-18T18:41:07.1153613Z 
2025-08-18T18:41:07.1153746Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T18:41:07.1154122Z 
2025-08-18T18:41:07.1154230Z <a id="ingest.celery_app"></a>
2025-08-18T18:41:07.1154381Z 
2025-08-18T18:41:07.1154453Z # ingest.celery\_app
2025-08-18T18:41:07.1154575Z 
2025-08-18T18:41:07.1154661Z <a id="ingest.ingest_router"></a>
2025-08-18T18:41:07.1154813Z 
2025-08-18T18:41:07.1154894Z # ingest.ingest\_router
2025-08-18T18:41:07.1155032Z 
2025-08-18T18:41:07.1155113Z <a id="logistics_etl"></a>
2025-08-18T18:41:07.1155242Z 
2025-08-18T18:41:07.1155308Z # logistics\_etl
2025-08-18T18:41:07.1155417Z 
2025-08-18T18:41:07.1155493Z Daily logistics ETL job.
2025-08-18T18:41:07.1155616Z 
2025-08-18T18:41:07.1155703Z <a id="logistics_etl.__main__"></a>
2025-08-18T18:41:07.1155856Z 
2025-08-18T18:41:07.1155937Z # logistics\_etl.\_\_main\_\_
2025-08-18T18:41:07.1156074Z 
2025-08-18T18:41:07.1156158Z <a id="logistics_etl.dsn"></a>
2025-08-18T18:41:07.1156293Z 
2025-08-18T18:41:07.1156363Z # logistics\_etl.dsn
2025-08-18T18:41:07.1156836Z 
2025-08-18T18:41:07.1157063Z Local DSN builder to avoid cross-service dependency.
2025-08-18T18:41:07.1157442Z 
2025-08-18T18:41:07.1157610Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T18:41:07.1157924Z 
2025-08-18T18:41:07.1158048Z #### build\_dsn
2025-08-18T18:41:07.1158179Z 
2025-08-18T18:41:07.1158252Z ```python
2025-08-18T18:41:07.1158432Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:41:07.1158661Z ```
2025-08-18T18:41:07.1158743Z 
2025-08-18T18:41:07.1158884Z Return a Postgres DSN assembled from environment variables.
2025-08-18T18:41:07.1159112Z 
2025-08-18T18:41:07.1159260Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T18:41:07.1159644Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T18:41:07.1159978Z error when any required variable is missing.
2025-08-18T18:41:07.1160150Z 
2025-08-18T18:41:07.1160254Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T18:41:07.1160427Z 
2025-08-18T18:41:07.1160522Z # logistics\_etl.tests.conftest
2025-08-18T18:41:07.1160677Z 
2025-08-18T18:41:07.1160782Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T18:41:07.1160966Z 
2025-08-18T18:41:07.1161059Z # logistics\_etl.tests.test\_repository
2025-08-18T18:41:07.1161218Z 
2025-08-18T18:41:07.1161309Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T18:41:07.1161476Z 
2025-08-18T18:41:07.1161566Z # logistics\_etl.tests.test\_cron
2025-08-18T18:41:07.1161713Z 
2025-08-18T18:41:07.1161809Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T18:41:07.1161986Z 
2025-08-18T18:41:07.1162069Z # logistics\_etl.tests.test\_imports
2025-08-18T18:41:07.1162221Z 
2025-08-18T18:41:07.1162320Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T18:41:07.1162486Z 
2025-08-18T18:41:07.1162568Z # logistics\_etl.tests.test\_smoke
2025-08-18T18:41:07.1162715Z 
2025-08-18T18:41:07.1162814Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T18:41:07.1162978Z 
2025-08-18T18:41:07.1163059Z # logistics\_etl.tests.test\_client
2025-08-18T18:41:07.1163225Z 
2025-08-18T18:41:07.1163714Z <a id="logistics_etl.tests"></a>
2025-08-18T18:41:07.1163877Z 
2025-08-18T18:41:07.1164120Z # logistics\_etl.tests
2025-08-18T18:41:07.1164283Z 
2025-08-18T18:41:07.1164366Z <a id="logistics_etl.flow"></a>
2025-08-18T18:41:07.1164509Z 
2025-08-18T18:41:07.1164587Z # logistics\_etl.flow
2025-08-18T18:41:07.1164702Z 
2025-08-18T18:41:07.1164786Z <a id="logistics_etl.client"></a>
2025-08-18T18:41:07.1164938Z 
2025-08-18T18:41:07.1165011Z # logistics\_etl.client
2025-08-18T18:41:07.1165129Z 
2025-08-18T18:41:07.1165208Z <a id="logistics_etl.cron"></a>
2025-08-18T18:41:07.1165347Z 
2025-08-18T18:41:07.1165417Z # logistics\_etl.cron
2025-08-18T18:41:07.1165528Z 
2025-08-18T18:41:07.1165612Z <a id="logistics_etl.db"></a>
2025-08-18T18:41:07.1165747Z 
2025-08-18T18:41:07.1165815Z # logistics\_etl.db
2025-08-18T18:41:07.1165927Z 
2025-08-18T18:41:07.1166016Z <a id="logistics_etl.repository"></a>
2025-08-18T18:41:07.1166176Z 
2025-08-18T18:41:07.1166260Z # logistics\_etl.repository
2025-08-18T18:41:07.1166404Z 
2025-08-18T18:41:07.1166473Z <a id="alert_bot"></a>
2025-08-18T18:41:07.1166584Z 
2025-08-18T18:41:07.1166656Z # alert\_bot
2025-08-18T18:41:07.1166750Z 
2025-08-18T18:41:07.1166837Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T18:41:07.1167002Z 
2025-08-18T18:41:07.1167081Z # alert\_bot.tests.test\_smoke
2025-08-18T18:41:07.1167216Z 
2025-08-18T18:41:07.1167291Z <a id="alert_bot.tests"></a>
2025-08-18T18:41:07.1167428Z 
2025-08-18T18:41:07.1167495Z # alert\_bot.tests
2025-08-18T18:41:07.1167599Z 
2025-08-18T18:41:07.1167684Z <a id="alert_bot.alert_bot"></a>
2025-08-18T18:41:07.1167819Z 
2025-08-18T18:41:07.1167889Z # alert\_bot.alert\_bot
2025-08-18T18:41:07.1168009Z 
2025-08-18T18:41:07.1168085Z <a id="alert_bot.rules"></a>
2025-08-18T18:41:07.1168210Z 
2025-08-18T18:41:07.1168276Z # alert\_bot.rules
2025-08-18T18:41:07.1168385Z 
2025-08-18T18:41:07.1168449Z <a id="common"></a>
2025-08-18T18:41:07.1168553Z 
2025-08-18T18:41:07.1168619Z # common
2025-08-18T18:41:07.1168840Z 
2025-08-18T18:41:07.1168915Z <a id="common.dsn"></a>
2025-08-18T18:41:07.1169029Z 
2025-08-18T18:41:07.1169100Z # common.dsn
2025-08-18T18:41:07.1169192Z 
2025-08-18T18:41:07.1169273Z <a id="common.dsn.build_dsn"></a>
2025-08-18T18:41:07.1169423Z 
2025-08-18T18:41:07.1169487Z #### build\_dsn
2025-08-18T18:41:07.1169589Z 
2025-08-18T18:41:07.1169653Z ```python
2025-08-18T18:41:07.1198922Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:41:07.1199324Z ```
2025-08-18T18:41:07.1199473Z 
2025-08-18T18:41:07.1199687Z Return a Postgres DSN, validating required variables.
2025-08-18T18:41:07.1200053Z 
2025-08-18T18:41:07.1200376Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T18:41:07.1201125Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T18:41:07.1201829Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T18:41:07.1202358Z missing.
2025-08-18T18:41:07.1202505Z 
2025-08-18T18:41:07.1202655Z <a id="common.models_vendor"></a>
2025-08-18T18:41:07.1202928Z 
2025-08-18T18:41:07.1203051Z # common.models\_vendor
2025-08-18T18:41:07.1203212Z 
2025-08-18T18:41:07.1203307Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T18:41:07.1203482Z 
2025-08-18T18:41:07.1203548Z ## Vendor Objects
2025-08-18T18:41:07.1203654Z 
2025-08-18T18:41:07.1203727Z ```python
2025-08-18T18:41:07.1203878Z class Vendor(Base)
2025-08-18T18:41:07.1204326Z ```
2025-08-18T18:41:07.1204418Z 
2025-08-18T18:41:07.1204504Z Vendor of inventory items.
2025-08-18T18:41:07.1204648Z 
2025-08-18T18:41:07.1204755Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T18:41:07.1204941Z 
2025-08-18T18:41:07.1205013Z ## VendorPrice Objects
2025-08-18T18:41:07.1205139Z 
2025-08-18T18:41:07.1205202Z ```python
2025-08-18T18:41:07.1205367Z class VendorPrice(Base)
2025-08-18T18:41:07.1205539Z ```
2025-08-18T18:41:07.1205620Z 
2025-08-18T18:41:07.1205733Z Association table linking vendors to pricing.
2025-08-18T18:41:07.1205919Z 
2025-08-18T18:41:07.1206152Z <a id="common.db_url"></a>
2025-08-18T18:41:07.1206288Z 
2025-08-18T18:41:07.1206356Z # common.db\_url
2025-08-18T18:41:07.1206459Z 
2025-08-18T18:41:07.1206541Z <a id="common.db_url.build_url"></a>
2025-08-18T18:41:07.1206703Z 
2025-08-18T18:41:07.1206769Z #### build\_url
2025-08-18T18:41:07.1206872Z 
2025-08-18T18:41:07.1206941Z ```python
2025-08-18T18:41:07.1207110Z def build_url(async_: bool = True) -> str
2025-08-18T18:41:07.1207347Z ```
2025-08-18T18:41:07.1207426Z 
2025-08-18T18:41:07.1207523Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:41:07.1207701Z 
2025-08-18T18:41:07.1207781Z <a id="common.keepa"></a>
2025-08-18T18:41:07.1207906Z 
2025-08-18T18:41:07.1207977Z # common.keepa
2025-08-18T18:41:07.1208077Z 
2025-08-18T18:41:07.1208148Z <a id="common.llm"></a>
2025-08-18T18:41:07.1208263Z 
2025-08-18T18:41:07.1208331Z # common.llm
2025-08-18T18:41:07.1208423Z 
2025-08-18T18:41:07.1208505Z <a id="common.settings"></a>
2025-08-18T18:41:07.1208645Z 
2025-08-18T18:41:07.1208715Z # common.settings
2025-08-18T18:41:07.1208825Z 
2025-08-18T18:41:07.1208892Z <a id="common.db"></a>
2025-08-18T18:41:07.1209011Z 
2025-08-18T18:41:07.1209072Z # common.db
2025-08-18T18:41:07.1209160Z 
2025-08-18T18:41:07.1209257Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T18:41:07.1209423Z 
2025-08-18T18:41:07.1209496Z #### build\_sqlalchemy\_url
2025-08-18T18:41:07.1209628Z 
2025-08-18T18:41:07.1209689Z ```python
2025-08-18T18:41:07.1209852Z def build_sqlalchemy_url() -> str
2025-08-18T18:41:07.1210057Z ```
2025-08-18T18:41:07.1210139Z 
2025-08-18T18:41:07.1210232Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:41:07.1210405Z 
2025-08-18T18:41:07.1210494Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T18:41:07.1210656Z 
2025-08-18T18:41:07.1210734Z #### build\_asyncpg\_dsn
2025-08-18T18:41:07.1210856Z 
2025-08-18T18:41:07.1210919Z ```python
2025-08-18T18:41:07.1211093Z def build_asyncpg_dsn() -> str
2025-08-18T18:41:07.1211285Z ```
2025-08-18T18:41:07.1211492Z 
2025-08-18T18:41:07.1211618Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:41:07.1211834Z 
2025-08-18T18:41:07.1211924Z <a id="common.db.refresh_mvs"></a>
2025-08-18T18:41:07.1212111Z 
2025-08-18T18:41:07.1212175Z #### refresh\_mvs
2025-08-18T18:41:07.1212279Z 
2025-08-18T18:41:07.1212346Z ```python
2025-08-18T18:41:07.1212533Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:41:07.1212784Z ```
2025-08-18T18:41:07.1212863Z 
2025-08-18T18:41:07.1212996Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:41:07.1213213Z 
2025-08-18T18:41:07.1213287Z <a id="common.config"></a>
2025-08-18T18:41:07.1213412Z 
2025-08-18T18:41:07.1213484Z # common.config
2025-08-18T18:41:07.1213583Z 
2025-08-18T18:41:07.1213654Z <a id="common.base"></a>
2025-08-18T18:41:07.1213772Z 
2025-08-18T18:41:07.1213842Z # common.base
2025-08-18T18:41:07.1213937Z 
2025-08-18T18:41:07.1214158Z <a id="common.base.Base"></a>
2025-08-18T18:41:07.1214303Z 
2025-08-18T18:41:07.1214373Z ## Base Objects
2025-08-18T18:41:07.1214475Z 
2025-08-18T18:41:07.1214539Z ```python
2025-08-18T18:41:07.1214697Z class Base(DeclarativeBase)
2025-08-18T18:41:07.1214888Z ```
2025-08-18T18:41:07.1214966Z 
2025-08-18T18:41:07.1215049Z Base class for SQLAlchemy models.
2025-08-18T18:41:07.1215201Z 
2025-08-18T18:41:07.1215276Z <a id="repricer"></a>
2025-08-18T18:41:07.1215391Z 
2025-08-18T18:41:07.1215454Z # repricer
2025-08-18T18:41:07.1215556Z 
2025-08-18T18:41:07.1215641Z <a id="repricer.app.schemas"></a>
2025-08-18T18:41:07.1215788Z 
2025-08-18T18:41:07.1215869Z # repricer.app.schemas
2025-08-18T18:41:07.1215989Z 
2025-08-18T18:41:07.1216074Z <a id="repricer.app.deps"></a>
2025-08-18T18:41:07.1216216Z 
2025-08-18T18:41:07.1216295Z # repricer.app.deps
2025-08-18T18:41:07.1216403Z 
2025-08-18T18:41:07.1216517Z Placeholder module for Keepa / SP-API clients.
2025-08-18T18:41:07.1216705Z 
2025-08-18T18:41:07.1216788Z <a id="repricer.app.logic"></a>
2025-08-18T18:41:07.1216927Z 
2025-08-18T18:41:07.1217011Z # repricer.app.logic
2025-08-18T18:41:07.1217257Z 
2025-08-18T18:41:07.1217353Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T18:41:07.1217522Z 
2025-08-18T18:41:07.1217593Z #### MIN\_MARGIN
2025-08-18T18:41:07.1217694Z 
2025-08-18T18:41:07.1217753Z 15 % ROI
2025-08-18T18:41:07.1217849Z 
2025-08-18T18:41:07.1217950Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T18:41:07.1218134Z 
2025-08-18T18:41:07.1218204Z #### compute\_price
2025-08-18T18:41:07.1218318Z 
2025-08-18T18:41:07.1218379Z ```python
2025-08-18T18:41:07.1218626Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T18:41:07.1218915Z ```
2025-08-18T18:41:07.1218996Z 
2025-08-18T18:41:07.1219108Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T18:41:07.1219380Z Replace with real competitive logic later.
2025-08-18T18:41:07.1219553Z 
2025-08-18T18:41:07.1219636Z <a id="repricer.app.main"></a>
2025-08-18T18:41:07.1219774Z 
2025-08-18T18:41:07.1219851Z # repricer.app.main
2025-08-18T18:41:07.1219962Z 
2025-08-18T18:41:07.1220044Z <a id="repricer.app"></a>
2025-08-18T18:41:07.1220167Z 
2025-08-18T18:41:07.1220238Z # repricer.app
2025-08-18T18:41:07.1220335Z 
2025-08-18T18:41:07.1220425Z <a id="repricer.tests.test_imports"></a>
2025-08-18T18:41:07.1220596Z 
2025-08-18T18:41:07.1220676Z # repricer.tests.test\_imports
2025-08-18T18:41:07.1220809Z 
2025-08-18T18:41:07.1220896Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T18:41:07.1221058Z 
2025-08-18T18:41:07.1221139Z # repricer.tests.test\_smoke
2025-08-18T18:41:07.1221274Z 
2025-08-18T18:41:07.1221357Z <a id="repricer.tests"></a>
2025-08-18T18:41:07.1221486Z 
2025-08-18T18:41:07.1221552Z # repricer.tests
2025-08-18T18:41:07.1221661Z 
2025-08-18T18:41:07.1221722Z <a id="db"></a>
2025-08-18T18:41:07.1221820Z 
2025-08-18T18:41:07.1221877Z # db
2025-08-18T18:41:07.1221965Z 
2025-08-18T18:41:07.1222039Z <a id="db.utils.views"></a>
2025-08-18T18:41:07.1222164Z 
2025-08-18T18:41:07.1222235Z # db.utils.views
2025-08-18T18:41:07.1222336Z 
2025-08-18T18:41:07.1222583Z <a id="db.utils.views.replace_view"></a>
2025-08-18T18:41:07.1222755Z 
2025-08-18T18:41:07.1222825Z #### replace\_view
2025-08-18T18:41:07.1222929Z 
2025-08-18T18:41:07.1222990Z ```python
2025-08-18T18:41:07.1223179Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T18:41:07.1223417Z ```
2025-08-18T18:41:07.1223503Z 
2025-08-18T18:41:07.1223590Z Drop and recreate a SQL view atomically.
2025-08-18T18:41:07.1223749Z 
2025-08-18T18:41:07.1223822Z <a id="db.utils"></a>
2025-08-18T18:41:07.1223935Z 
2025-08-18T18:41:07.1224135Z # db.utils
2025-08-18T18:41:07.1224229Z 
2025-08-18T18:41:07.1224306Z <a id="price_importer"></a>
2025-08-18T18:41:07.1224433Z 
2025-08-18T18:41:07.1224500Z # price\_importer
2025-08-18T18:41:07.1224610Z 
2025-08-18T18:41:07.1224711Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T18:41:07.1224891Z 
2025-08-18T18:41:07.1224987Z # price\_importer.services\_common.dsn
2025-08-18T18:41:07.1225144Z 
2025-08-18T18:41:07.1225266Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T18:41:07.1225487Z 
2025-08-18T18:41:07.1225550Z #### build\_dsn
2025-08-18T18:41:07.1225646Z 
2025-08-18T18:41:07.1225707Z ```python
2025-08-18T18:41:07.1225882Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:41:07.1226094Z ```
2025-08-18T18:41:07.1226181Z 
2025-08-18T18:41:07.1226247Z Return safe DSN.
2025-08-18T18:41:07.1226348Z 
2025-08-18T18:41:07.1226691Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T18:41:07.1226890Z 
2025-08-18T18:41:07.1227016Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T18:41:07.1227230Z 
2025-08-18T18:41:07.1227338Z # price\_importer.services\_common.models\_vendor
2025-08-18T18:41:07.1227534Z 
2025-08-18T18:41:07.1227640Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T18:41:07.1227833Z 
2025-08-18T18:41:07.1227928Z # price\_importer.services\_common.db\_url
2025-08-18T18:41:07.1228101Z 
2025-08-18T18:41:07.1228237Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T18:41:07.1228455Z 
2025-08-18T18:41:07.1228646Z #### build\_url
2025-08-18T18:41:07.1228752Z 
2025-08-18T18:41:07.1228815Z ```python
2025-08-18T18:41:07.1228982Z def build_url(async_: bool = True) -> str
2025-08-18T18:41:07.1229204Z ```
2025-08-18T18:41:07.1229285Z 
2025-08-18T18:41:07.1229387Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:41:07.1229558Z 
2025-08-18T18:41:07.1229661Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T18:41:07.1229842Z 
2025-08-18T18:41:07.1229938Z # price\_importer.services\_common.keepa
2025-08-18T18:41:07.1230099Z 
2025-08-18T18:41:07.1230195Z <a id="price_importer.services_common.llm"></a>
2025-08-18T18:41:07.1230383Z 
2025-08-18T18:41:07.1230476Z # price\_importer.services\_common.llm
2025-08-18T18:41:07.1230636Z 
2025-08-18T18:41:07.1230755Z <a id="price_importer.services_common.settings"></a>
2025-08-18T18:41:07.1230951Z 
2025-08-18T18:41:07.1231047Z # price\_importer.services\_common.settings
2025-08-18T18:41:07.1231220Z 
2025-08-18T18:41:07.1231327Z <a id="price_importer.services_common.db"></a>
2025-08-18T18:41:07.1231504Z 
2025-08-18T18:41:07.1231592Z # price\_importer.services\_common.db
2025-08-18T18:41:07.1231753Z 
2025-08-18T18:41:07.1231904Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T18:41:07.1232140Z 
2025-08-18T18:41:07.1232219Z #### build\_sqlalchemy\_url
2025-08-18T18:41:07.1232347Z 
2025-08-18T18:41:07.1232409Z ```python
2025-08-18T18:41:07.1232578Z def build_sqlalchemy_url() -> str
2025-08-18T18:41:07.1232779Z ```
2025-08-18T18:41:07.1232864Z 
2025-08-18T18:41:07.1232957Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:41:07.1233124Z 
2025-08-18T18:41:07.1233265Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T18:41:07.1233490Z 
2025-08-18T18:41:07.1233562Z #### build\_asyncpg\_dsn
2025-08-18T18:41:07.1233682Z 
2025-08-18T18:41:07.1233748Z ```python
2025-08-18T18:41:07.1233911Z def build_asyncpg_dsn() -> str
2025-08-18T18:41:07.1234219Z ```
2025-08-18T18:41:07.1234418Z 
2025-08-18T18:41:07.1234548Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:41:07.1234759Z 
2025-08-18T18:41:07.1234883Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T18:41:07.1235087Z 
2025-08-18T18:41:07.1235159Z #### refresh\_mvs
2025-08-18T18:41:07.1235262Z 
2025-08-18T18:41:07.1235323Z ```python
2025-08-18T18:41:07.1235519Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:41:07.1235763Z ```
2025-08-18T18:41:07.1235846Z 
2025-08-18T18:41:07.1235978Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:41:07.1236188Z 
2025-08-18T18:41:07.1236281Z <a id="price_importer.services_common"></a>
2025-08-18T18:41:07.1236455Z 
2025-08-18T18:41:07.1236540Z # price\_importer.services\_common
2025-08-18T18:41:07.1236689Z 
2025-08-18T18:41:07.1236796Z <a id="price_importer.services_common.base"></a>
2025-08-18T18:41:07.1236977Z 
2025-08-18T18:41:07.1237065Z # price\_importer.services\_common.base
2025-08-18T18:41:07.1237247Z 
2025-08-18T18:41:07.1237337Z <a id="price_importer.normaliser"></a>
2025-08-18T18:41:07.1237502Z 
2025-08-18T18:41:07.1237583Z # price\_importer.normaliser
2025-08-18T18:41:07.1237729Z 
2025-08-18T18:41:07.1237831Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T18:41:07.1238011Z 
2025-08-18T18:41:07.1238106Z # price\_importer.common.models\_vendor
2025-08-18T18:41:07.1238264Z 
2025-08-18T18:41:07.1238354Z <a id="price_importer.common.db_url"></a>
2025-08-18T18:41:07.1238525Z 
2025-08-18T18:41:07.1238608Z # price\_importer.common.db\_url
2025-08-18T18:41:07.1238752Z 
2025-08-18T18:41:07.1238854Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T18:41:07.1239042Z 
2025-08-18T18:41:07.1239106Z #### make\_dsn
2025-08-18T18:41:07.1239203Z 
2025-08-18T18:41:07.1239273Z ```python
2025-08-18T18:41:07.1239440Z def make_dsn(async_: bool = False) -> str
2025-08-18T18:41:07.1239664Z ```
2025-08-18T18:41:07.1239744Z 
2025-08-18T18:41:07.1239860Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T18:41:07.1240067Z 
2025-08-18T18:41:07.1240293Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T18:41:07.1240482Z 
2025-08-18T18:41:07.1240553Z #### build\_url
2025-08-18T18:41:07.1240656Z 
2025-08-18T18:41:07.1240719Z ```python
2025-08-18T18:41:07.1240896Z def build_url(async_: bool = False) -> str
2025-08-18T18:41:07.1241111Z ```
2025-08-18T18:41:07.1241191Z 
2025-08-18T18:41:07.1241315Z Return Postgres DSN built from environment variables.
2025-08-18T18:41:07.1241511Z 
2025-08-18T18:41:07.1241597Z <a id="price_importer.common"></a>
2025-08-18T18:41:07.1241754Z 
2025-08-18T18:41:07.1241834Z # price\_importer.common
2025-08-18T18:41:07.1241959Z 
2025-08-18T18:41:07.1242056Z <a id="price_importer.common.base"></a>
2025-08-18T18:41:07.1242215Z 
2025-08-18T18:41:07.1242298Z # price\_importer.common.base
2025-08-18T18:41:07.1242436Z 
2025-08-18T18:41:07.1242536Z <a id="price_importer.tests.conftest"></a>
2025-08-18T18:41:07.1242701Z 
2025-08-18T18:41:07.1242787Z # price\_importer.tests.conftest
2025-08-18T18:41:07.1242950Z 
2025-08-18T18:41:07.1243047Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T18:41:07.1243224Z 
2025-08-18T18:41:07.1243313Z # price\_importer.tests.test\_reader
2025-08-18T18:41:07.1243468Z 
2025-08-18T18:41:07.1243568Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T18:41:07.1243741Z 
2025-08-18T18:41:07.1243835Z # price\_importer.tests.test\_imports
2025-08-18T18:41:07.1244112Z 
2025-08-18T18:41:07.1244211Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T18:41:07.1244386Z 
2025-08-18T18:41:07.1244473Z # price\_importer.tests.test\_smoke
2025-08-18T18:41:07.1244624Z 
2025-08-18T18:41:07.1244731Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T18:41:07.1244914Z 
2025-08-18T18:41:07.1245006Z # price\_importer.tests.test\_normaliser
2025-08-18T18:41:07.1245176Z 
2025-08-18T18:41:07.1245263Z <a id="price_importer.tests"></a>
2025-08-18T18:41:07.1245409Z 
2025-08-18T18:41:07.1245482Z # price\_importer.tests
2025-08-18T18:41:07.1245730Z 
2025-08-18T18:41:07.1245824Z <a id="price_importer.reader"></a>
2025-08-18T18:41:07.1245973Z 
2025-08-18T18:41:07.1246055Z # price\_importer.reader
2025-08-18T18:41:07.1246178Z 
2025-08-18T18:41:07.1246266Z <a id="price_importer.repository"></a>
2025-08-18T18:41:07.1246427Z 
2025-08-18T18:41:07.1246514Z # price\_importer.repository
2025-08-18T18:41:07.1246649Z 
2025-08-18T18:41:07.1246731Z <a id="price_importer.import"></a>
2025-08-18T18:41:07.1246883Z 
2025-08-18T18:41:07.1246958Z # price\_importer.import
2025-08-18T18:41:07.1247080Z 
2025-08-18T18:41:07.1247154Z <a id="fees_h10"></a>
2025-08-18T18:41:07.1247294Z 
2025-08-18T18:41:07.1247357Z # fees\_h10
2025-08-18T18:41:07.1247454Z 
2025-08-18T18:41:07.1247534Z <a id="fees_h10.worker"></a>
2025-08-18T18:41:07.1247665Z 
2025-08-18T18:41:07.1247731Z # fees\_h10.worker
2025-08-18T18:41:07.1247839Z 
2025-08-18T18:41:07.1247935Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T18:41:07.1248108Z 
2025-08-18T18:41:07.1248186Z #### list\_active\_asins
2025-08-18T18:41:07.1248310Z 
2025-08-18T18:41:07.1248377Z ```python
2025-08-18T18:41:07.1248548Z def list_active_asins() -> list[str]
2025-08-18T18:41:07.1248754Z ```
2025-08-18T18:41:07.1248836Z 
2025-08-18T18:41:07.1248956Z Return known ASINs or an empty list if unavailable.
2025-08-18T18:41:07.1249147Z 
2025-08-18T18:41:07.1249230Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T18:41:07.1249390Z 
2025-08-18T18:41:07.1249468Z # fees\_h10.tests.test\_smoke
2025-08-18T18:41:07.1249605Z 
2025-08-18T18:41:07.1249685Z <a id="fees_h10.tests"></a>
2025-08-18T18:41:07.1249815Z 
2025-08-18T18:41:07.1249879Z # fees\_h10.tests
2025-08-18T18:41:07.1249981Z 
2025-08-18T18:41:07.1250061Z <a id="fees_h10.client"></a>
2025-08-18T18:41:07.1250191Z 
2025-08-18T18:41:07.1250254Z # fees\_h10.client
2025-08-18T18:41:07.1250360Z 
2025-08-18T18:41:07.1250439Z <a id="fees_h10.repository"></a>
2025-08-18T18:41:07.1250582Z 
2025-08-18T18:41:07.1250659Z # fees\_h10.repository
2025-08-18T18:41:07.1250774Z 
2025-08-18T18:41:07.1250849Z <a id="emailer"></a>
2025-08-18T18:41:07.1251083Z 
2025-08-18T18:41:07.1251151Z # emailer
2025-08-18T18:41:07.1251240Z 
2025-08-18T18:41:07.1251340Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T18:41:07.1251519Z 
2025-08-18T18:41:07.1251609Z # emailer.tests.test\_import\_emailer
2025-08-18T18:41:07.1251771Z 
2025-08-18T18:41:07.1251856Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T18:41:07.1252016Z 
2025-08-18T18:41:07.1252096Z # emailer.tests.test\_smoke
2025-08-18T18:41:07.1252230Z 
2025-08-18T18:41:07.1252314Z <a id="emailer.tests"></a>
2025-08-18T18:41:07.1252442Z 
2025-08-18T18:41:07.1252508Z # emailer.tests
2025-08-18T18:41:07.1252618Z 
2025-08-18T18:41:07.1252700Z <a id="emailer.generate_body"></a>
2025-08-18T18:41:07.1252848Z 
2025-08-18T18:41:07.1252924Z # emailer.generate\_body
2025-08-18T18:41:07.1253054Z 
2025-08-18T18:41:07.1253123Z <a id="llm_server"></a>
2025-08-18T18:41:07.1253239Z 
2025-08-18T18:41:07.1253309Z # llm\_server
2025-08-18T18:41:07.1253404Z 
2025-08-18T18:41:07.1253483Z <a id="llm_server.app"></a>
2025-08-18T18:41:07.1253626Z 
2025-08-18T18:41:07.1253691Z # llm\_server.app
2025-08-18T18:41:07.1253796Z 
