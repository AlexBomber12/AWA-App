2025-08-17T13:14:19.7536310Z ##[group]Run pydoc-markdown
2025-08-17T13:14:19.7536612Z [36;1mpydoc-markdown[0m
2025-08-17T13:14:19.7579874Z shell: /usr/bin/bash -e {0}
2025-08-17T13:14:19.7580118Z env:
2025-08-17T13:14:19.7580363Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:14:19.7580766Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T13:14:19.7581162Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:14:19.7581510Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:14:19.7581845Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:14:19.7582183Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T13:14:19.7582476Z ##[endgroup]
2025-08-17T13:14:20.2326055Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T13:14:20.2326558Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T13:14:20.2326887Z In "pydoc-markdown.yml"
2025-08-17T13:14:20.2327194Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T13:14:20.2328075Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T13:14:20.2329041Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T13:14:20.2329700Z 
2025-08-17T13:14:20.4364637Z <a id="__init__"></a>
2025-08-17T13:14:20.4365468Z 
2025-08-17T13:14:20.4365622Z # \_\_init\_\_
2025-08-17T13:14:20.4365866Z 
2025-08-17T13:14:20.4366029Z <a id="api"></a>
2025-08-17T13:14:20.4366264Z 
2025-08-17T13:14:20.4366396Z # api
2025-08-17T13:14:20.4366519Z 
2025-08-17T13:14:20.4366636Z <a id="api.tests.test_llm"></a>
2025-08-17T13:14:20.4366837Z 
2025-08-17T13:14:20.4366936Z # api.tests.test\_llm
2025-08-17T13:14:20.4367099Z 
2025-08-17T13:14:20.4367210Z <a id="api.tests.test_imports"></a>
2025-08-17T13:14:20.4367421Z 
2025-08-17T13:14:20.4367530Z # api.tests.test\_imports
2025-08-17T13:14:20.4367698Z 
2025-08-17T13:14:20.4367815Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T13:14:20.4368373Z 
2025-08-17T13:14:20.4368488Z # api.tests.test\_entrypoint
2025-08-17T13:14:20.4368683Z 
2025-08-17T13:14:20.4368793Z <a id="api.tests.test_health"></a>
2025-08-17T13:14:20.4369007Z 
2025-08-17T13:14:20.4369103Z # api.tests.test\_health
2025-08-17T13:14:20.4369269Z 
2025-08-17T13:14:20.4369377Z <a id="api.migrations.env"></a>
2025-08-17T13:14:20.4369563Z 
2025-08-17T13:14:20.4369656Z # api.migrations.env
2025-08-17T13:14:20.4369806Z 
2025-08-17T13:14:20.4369964Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T13:14:20.4370229Z 
2025-08-17T13:14:20.4370367Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T13:14:20.4370611Z 
2025-08-17T13:14:20.4370747Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T13:14:20.4370997Z 
2025-08-17T13:14:20.4371123Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T13:14:20.4371348Z 
2025-08-17T13:14:20.4371543Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T13:14:20.4371869Z 
2025-08-17T13:14:20.4372056Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T13:14:20.4372346Z 
2025-08-17T13:14:20.4372499Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T13:14:20.4372766Z 
2025-08-17T13:14:20.4372901Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T13:14:20.4373143Z 
2025-08-17T13:14:20.4373300Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T13:14:20.4373563Z 
2025-08-17T13:14:20.4373696Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T13:14:20.4373940Z 
2025-08-17T13:14:20.4374100Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T13:14:20.4374371Z 
2025-08-17T13:14:20.4374510Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T13:14:20.4374772Z 
2025-08-17T13:14:20.4374896Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T13:14:20.4375254Z 
2025-08-17T13:14:20.4375371Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T13:14:20.4375562Z 
2025-08-17T13:14:20.4375683Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T13:14:20.4376097Z 
2025-08-17T13:14:20.4376200Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T13:14:20.4376383Z 
2025-08-17T13:14:20.4376504Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T13:14:20.4376715Z 
2025-08-17T13:14:20.4376820Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T13:14:20.4377011Z 
2025-08-17T13:14:20.4377126Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T13:14:20.4377316Z 
2025-08-17T13:14:20.4377410Z # api.migrations.versions.0001\_baseline
2025-08-17T13:14:20.4377592Z 
2025-08-17T13:14:20.4377683Z <a id="api.migrations.versions"></a>
2025-08-17T13:14:20.4377848Z 
2025-08-17T13:14:20.4377935Z # api.migrations.versions
2025-08-17T13:14:20.4378064Z 
2025-08-17T13:14:20.4378143Z <a id="api.migrations"></a>
2025-08-17T13:14:20.4378277Z 
2025-08-17T13:14:20.4378352Z # api.migrations
2025-08-17T13:14:20.4378458Z 
2025-08-17T13:14:20.4378528Z <a id="api.db"></a>
2025-08-17T13:14:20.4378646Z 
2025-08-17T13:14:20.4378715Z # api.db
2025-08-17T13:14:20.4378803Z 
2025-08-17T13:14:20.4378883Z <a id="api.routes.stats"></a>
2025-08-17T13:14:20.4379031Z 
2025-08-17T13:14:20.4379100Z # api.routes.stats
2025-08-17T13:14:20.4379207Z 
2025-08-17T13:14:20.4379299Z <a id="api.routes.stats.kpi"></a>
2025-08-17T13:14:20.4379452Z 
2025-08-17T13:14:20.4379516Z #### kpi
2025-08-17T13:14:20.4379606Z 
2025-08-17T13:14:20.4379670Z ```python
2025-08-17T13:14:20.4379837Z @router.get("/stats/kpi")
2025-08-17T13:14:20.4380083Z def kpi() -> List[Dict[str, int]]
2025-08-17T13:14:20.4380295Z ```
2025-08-17T13:14:20.4380385Z 
2025-08-17T13:14:20.4380464Z Return KPI metrics (mock).
2025-08-17T13:14:20.4380596Z 
2025-08-17T13:14:20.4380700Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T13:14:20.4380883Z 
2025-08-17T13:14:20.4380951Z #### roi\_by\_vendor
2025-08-17T13:14:20.4381072Z 
2025-08-17T13:14:20.4381135Z ```python
2025-08-17T13:14:20.4381307Z @router.get("/stats/roi_by_vendor")
2025-08-17T13:14:20.4381678Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T13:14:20.4381912Z ```
2025-08-17T13:14:20.4381999Z 
2025-08-17T13:14:20.4382078Z Return ROI percent by vendor.
2025-08-17T13:14:20.4382216Z 
2025-08-17T13:14:20.4382313Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T13:14:20.4382485Z 
2025-08-17T13:14:20.4382548Z #### roi\_trend
2025-08-17T13:14:20.4382652Z 
2025-08-17T13:14:20.4382718Z ```python
2025-08-17T13:14:20.4382911Z @router.get("/stats/roi_trend")
2025-08-17T13:14:20.4383231Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T13:14:20.4383474Z ```
2025-08-17T13:14:20.4383555Z 
2025-08-17T13:14:20.4383629Z Return 30-day ROI trend.
2025-08-17T13:14:20.4383761Z 
2025-08-17T13:14:20.4383841Z <a id="api.routes.roi"></a>
2025-08-17T13:14:20.4383974Z 
2025-08-17T13:14:20.4384045Z # api.routes.roi
2025-08-17T13:14:20.4384157Z 
2025-08-17T13:14:20.4384237Z <a id="api.routes.health"></a>
2025-08-17T13:14:20.4384378Z 
2025-08-17T13:14:20.4384453Z # api.routes.health
2025-08-17T13:14:20.4384569Z 
2025-08-17T13:14:20.4384668Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T13:14:20.4384850Z 
2025-08-17T13:14:20.4384914Z #### MAX\_SKEW
2025-08-17T13:14:20.4385012Z 
2025-08-17T13:14:20.4385184Z seconds
2025-08-17T13:14:20.4385276Z 
2025-08-17T13:14:20.4385365Z <a id="api.routes.health.health"></a>
2025-08-17T13:14:20.4385529Z 
2025-08-17T13:14:20.4385600Z #### health
2025-08-17T13:14:20.4385690Z 
2025-08-17T13:14:20.4385754Z ```python
2025-08-17T13:14:20.4385947Z @router.get("/health", include_in_schema=False)
2025-08-17T13:14:20.4386332Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T13:14:20.4386677Z ```
2025-08-17T13:14:20.4386759Z 
2025-08-17T13:14:20.4386873Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T13:14:20.4387076Z 
2025-08-17T13:14:20.4387163Z <a id="api.routes.repository"></a>
2025-08-17T13:14:20.4387317Z 
2025-08-17T13:14:20.4387399Z # api.routes.repository
2025-08-17T13:14:20.4387522Z 
2025-08-17T13:14:20.4387600Z <a id="api.routes"></a>
2025-08-17T13:14:20.4387851Z 
2025-08-17T13:14:20.4387918Z # api.routes
2025-08-17T13:14:20.4388014Z 
2025-08-17T13:14:20.4388091Z <a id="api.models.fee"></a>
2025-08-17T13:14:20.4388228Z 
2025-08-17T13:14:20.4388295Z # api.models.fee
2025-08-17T13:14:20.4388398Z 
2025-08-17T13:14:20.4388476Z <a id="api.models"></a>
2025-08-17T13:14:20.4388590Z 
2025-08-17T13:14:20.4388655Z # api.models
2025-08-17T13:14:20.4388747Z 
2025-08-17T13:14:20.4388833Z <a id="api.roi_repository"></a>
2025-08-17T13:14:20.4388972Z 
2025-08-17T13:14:20.4389043Z # api.roi\_repository
2025-08-17T13:14:20.4389164Z 
2025-08-17T13:14:20.4389233Z <a id="api.main"></a>
2025-08-17T13:14:20.4389341Z 
2025-08-17T13:14:20.4389410Z # api.main
2025-08-17T13:14:20.4389503Z 
2025-08-17T13:14:20.4389578Z <a id="api.main.ready"></a>
2025-08-17T13:14:20.4389706Z 
2025-08-17T13:14:20.4389773Z #### ready
2025-08-17T13:14:20.4389860Z 
2025-08-17T13:14:20.4389923Z ```python
2025-08-17T13:14:20.4390186Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T13:14:20.4390616Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T13:14:20.4390971Z                                                                       str]
2025-08-17T13:14:20.4391202Z ```
2025-08-17T13:14:20.4391282Z 
2025-08-17T13:14:20.4391376Z Return 200 only when migrations are at head.
2025-08-17T13:14:20.4391546Z 
2025-08-17T13:14:20.4391623Z <a id="api.config"></a>
2025-08-17T13:14:20.4391737Z 
2025-08-17T13:14:20.4391800Z # api.config
2025-08-17T13:14:20.4391899Z 
2025-08-17T13:14:20.4391961Z <a id="etl"></a>
2025-08-17T13:14:20.4392061Z 
2025-08-17T13:14:20.4392119Z # etl
2025-08-17T13:14:20.4392206Z 
2025-08-17T13:14:20.4392286Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T13:14:20.4392432Z 
2025-08-17T13:14:20.4392509Z # etl.fba\_fee\_ingestor
2025-08-17T13:14:20.4392629Z 
2025-08-17T13:14:20.4392708Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T13:14:20.4392856Z 
2025-08-17T13:14:20.4392977Z # etl.sp\_fees\_ingestor
2025-08-17T13:14:20.4393221Z 
2025-08-17T13:14:20.4393302Z <a id="etl.keepa_ingestor"></a>
2025-08-17T13:14:20.4393447Z 
2025-08-17T13:14:20.4393516Z # etl.keepa\_ingestor
2025-08-17T13:14:20.4393629Z 
2025-08-17T13:14:20.4393704Z <a id="etl.db"></a>
2025-08-17T13:14:20.4393808Z 
2025-08-17T13:14:20.4393871Z # etl.db
2025-08-17T13:14:20.4393963Z 
2025-08-17T13:14:20.4394070Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T13:14:20.4394256Z 
2025-08-17T13:14:20.4394345Z # etl.dialects.amazon\_reimbursements
2025-08-17T13:14:20.4394513Z 
2025-08-17T13:14:20.4394600Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T13:14:20.4394766Z 
2025-08-17T13:14:20.4394864Z # etl.dialects.amazon\_returns
2025-08-17T13:14:20.4395007Z 
2025-08-17T13:14:20.4395180Z <a id="etl.dialects"></a>
2025-08-17T13:14:20.4395323Z 
2025-08-17T13:14:20.4395389Z # etl.dialects
2025-08-17T13:14:20.4395489Z 
2025-08-17T13:14:20.4395563Z <a id="ingest"></a>
2025-08-17T13:14:20.4395668Z 
2025-08-17T13:14:20.4395735Z # ingest
2025-08-17T13:14:20.4395830Z 
2025-08-17T13:14:20.4395915Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T13:14:20.4396073Z 
2025-08-17T13:14:20.4396152Z # ingest.tests.test\_smoke
2025-08-17T13:14:20.4396288Z 
2025-08-17T13:14:20.4396360Z <a id="ingest.tests"></a>
2025-08-17T13:14:20.4396482Z 
2025-08-17T13:14:20.4396557Z # ingest.tests
2025-08-17T13:14:20.4396654Z 
2025-08-17T13:14:20.4396738Z <a id="ingest.upload_router"></a>
2025-08-17T13:14:20.4396892Z 
2025-08-17T13:14:20.4396967Z # ingest.upload\_router
2025-08-17T13:14:20.4397086Z 
2025-08-17T13:14:20.4397166Z <a id="ingest.email_watcher"></a>
2025-08-17T13:14:20.4397312Z 
2025-08-17T13:14:20.4397385Z # ingest.email\_watcher
2025-08-17T13:14:20.4397499Z 
2025-08-17T13:14:20.4397593Z <a id="ingest.email_watcher.main"></a>
2025-08-17T13:14:20.4397751Z 
2025-08-17T13:14:20.4397812Z #### main
2025-08-17T13:14:20.4397898Z 
2025-08-17T13:14:20.4397965Z ```python
2025-08-17T13:14:20.4398129Z def main() -> dict[str, str]
2025-08-17T13:14:20.4398328Z ```
2025-08-17T13:14:20.4398411Z 
2025-08-17T13:14:20.4398666Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T13:14:20.4398898Z 
2025-08-17T13:14:20.4399023Z Returns {"status": "success"} when processing completes.
2025-08-17T13:14:20.4399226Z 
2025-08-17T13:14:20.4399319Z <a id="ingest.ingest_router"></a>
2025-08-17T13:14:20.4399464Z 
2025-08-17T13:14:20.4399536Z # ingest.ingest\_router
2025-08-17T13:14:20.4399658Z 
2025-08-17T13:14:20.4399730Z <a id="logistics_etl"></a>
2025-08-17T13:14:20.4399894Z 
2025-08-17T13:14:20.4399958Z # logistics\_etl
2025-08-17T13:14:20.4400060Z 
2025-08-17T13:14:20.4400140Z Daily logistics ETL job.
2025-08-17T13:14:20.4400261Z 
2025-08-17T13:14:20.4400340Z <a id="logistics_etl.__main__"></a>
2025-08-17T13:14:20.4400489Z 
2025-08-17T13:14:20.4400570Z # logistics\_etl.\_\_main\_\_
2025-08-17T13:14:20.4400705Z 
2025-08-17T13:14:20.4400784Z <a id="logistics_etl.dsn"></a>
2025-08-17T13:14:20.4400925Z 
2025-08-17T13:14:20.4400992Z # logistics\_etl.dsn
2025-08-17T13:14:20.4401107Z 
2025-08-17T13:14:20.4401231Z Local DSN builder to avoid cross-service dependency.
2025-08-17T13:14:20.4401429Z 
2025-08-17T13:14:20.4401515Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T13:14:20.4401679Z 
2025-08-17T13:14:20.4401748Z #### build\_dsn
2025-08-17T13:14:20.4401846Z 
2025-08-17T13:14:20.4401909Z ```python
2025-08-17T13:14:20.4402081Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:14:20.4402295Z ```
2025-08-17T13:14:20.4402381Z 
2025-08-17T13:14:20.4402518Z Return a Postgres DSN assembled from environment variables.
2025-08-17T13:14:20.4402736Z 
2025-08-17T13:14:20.4402903Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T13:14:20.4403289Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T13:14:20.4403625Z error when any required variable is missing.
2025-08-17T13:14:20.4403798Z 
2025-08-17T13:14:20.4403888Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T13:14:20.4404060Z 
2025-08-17T13:14:20.4404253Z # logistics\_etl.tests.conftest
2025-08-17T13:14:20.4404400Z 
2025-08-17T13:14:20.4404508Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T13:14:20.4404693Z 
2025-08-17T13:14:20.4404781Z # logistics\_etl.tests.test\_repository
2025-08-17T13:14:20.4404945Z 
2025-08-17T13:14:20.4405163Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T13:14:20.4405335Z 
2025-08-17T13:14:20.4405417Z # logistics\_etl.tests.test\_cron
2025-08-17T13:14:20.4405570Z 
2025-08-17T13:14:20.4405664Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T13:14:20.4405836Z 
2025-08-17T13:14:20.4405924Z # logistics\_etl.tests.test\_imports
2025-08-17T13:14:20.4406077Z 
2025-08-17T13:14:20.4406167Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T13:14:20.4406334Z 
2025-08-17T13:14:20.4406422Z # logistics\_etl.tests.test\_smoke
2025-08-17T13:14:20.4406571Z 
2025-08-17T13:14:20.4406663Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T13:14:20.4406835Z 
2025-08-17T13:14:20.4406917Z # logistics\_etl.tests.test\_client
2025-08-17T13:14:20.4407082Z 
2025-08-17T13:14:20.4407167Z <a id="logistics_etl.tests"></a>
2025-08-17T13:14:20.4407309Z 
2025-08-17T13:14:20.4407380Z # logistics\_etl.tests
2025-08-17T13:14:20.4407495Z 
2025-08-17T13:14:20.4407576Z <a id="logistics_etl.flow"></a>
2025-08-17T13:14:20.4407712Z 
2025-08-17T13:14:20.4407780Z # logistics\_etl.flow
2025-08-17T13:14:20.4407897Z 
2025-08-17T13:14:20.4407977Z <a id="logistics_etl.client"></a>
2025-08-17T13:14:20.4408121Z 
2025-08-17T13:14:20.4408202Z # logistics\_etl.client
2025-08-17T13:14:20.4408322Z 
2025-08-17T13:14:20.4408398Z <a id="logistics_etl.cron"></a>
2025-08-17T13:14:20.4408531Z 
2025-08-17T13:14:20.4408607Z # logistics\_etl.cron
2025-08-17T13:14:20.4408719Z 
2025-08-17T13:14:20.4408797Z <a id="logistics_etl.db"></a>
2025-08-17T13:14:20.4408937Z 
2025-08-17T13:14:20.4409004Z # logistics\_etl.db
2025-08-17T13:14:20.4409110Z 
2025-08-17T13:14:20.4409196Z <a id="logistics_etl.repository"></a>
2025-08-17T13:14:20.4409363Z 
2025-08-17T13:14:20.4409449Z # logistics\_etl.repository
2025-08-17T13:14:20.4409697Z 
2025-08-17T13:14:20.4409771Z <a id="alert_bot"></a>
2025-08-17T13:14:20.4409883Z 
2025-08-17T13:14:20.4409945Z # alert\_bot
2025-08-17T13:14:20.4410045Z 
2025-08-17T13:14:20.4410128Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T13:14:20.4410287Z 
2025-08-17T13:14:20.4410365Z # alert\_bot.tests.test\_smoke
2025-08-17T13:14:20.4410506Z 
2025-08-17T13:14:20.4410583Z <a id="alert_bot.tests"></a>
2025-08-17T13:14:20.4410713Z 
2025-08-17T13:14:20.4410784Z # alert\_bot.tests
2025-08-17T13:14:20.4410888Z 
2025-08-17T13:14:20.4410966Z <a id="alert_bot.alert_bot"></a>
2025-08-17T13:14:20.4411111Z 
2025-08-17T13:14:20.4411183Z # alert\_bot.alert\_bot
2025-08-17T13:14:20.4411298Z 
2025-08-17T13:14:20.4411371Z <a id="alert_bot.rules"></a>
2025-08-17T13:14:20.4411505Z 
2025-08-17T13:14:20.4411570Z # alert\_bot.rules
2025-08-17T13:14:20.4411671Z 
2025-08-17T13:14:20.4411740Z <a id="common"></a>
2025-08-17T13:14:20.4411842Z 
2025-08-17T13:14:20.4411903Z # common
2025-08-17T13:14:20.4412006Z 
2025-08-17T13:14:20.4412083Z <a id="common.dsn"></a>
2025-08-17T13:14:20.4412205Z 
2025-08-17T13:14:20.4412268Z # common.dsn
2025-08-17T13:14:20.4412359Z 
2025-08-17T13:14:20.4412439Z <a id="common.dsn.build_dsn"></a>
2025-08-17T13:14:20.4412588Z 
2025-08-17T13:14:20.4412651Z #### build\_dsn
2025-08-17T13:14:20.4412749Z 
2025-08-17T13:14:20.4412817Z ```python
2025-08-17T13:14:20.4412986Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:14:20.4413207Z ```
2025-08-17T13:14:20.4413289Z 
2025-08-17T13:14:20.4413406Z Return a Postgres DSN, validating required variables.
2025-08-17T13:14:20.4413615Z 
2025-08-17T13:14:20.4413800Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T13:14:20.4414225Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T13:14:20.4414633Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T13:14:20.4414940Z missing.
2025-08-17T13:14:20.4415287Z 
2025-08-17T13:14:20.4415371Z <a id="common.models_vendor"></a>
2025-08-17T13:14:20.4415529Z 
2025-08-17T13:14:20.4415603Z # common.models\_vendor
2025-08-17T13:14:20.4415719Z 
2025-08-17T13:14:20.4415808Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T13:14:20.4415980Z 
2025-08-17T13:14:20.4416046Z ## Vendor Objects
2025-08-17T13:14:20.4416149Z 
2025-08-17T13:14:20.4416216Z ```python
2025-08-17T13:14:20.4416366Z class Vendor(Base)
2025-08-17T13:14:20.4416528Z ```
2025-08-17T13:14:20.4416610Z 
2025-08-17T13:14:20.4416687Z Vendor of inventory items.
2025-08-17T13:14:20.4416820Z 
2025-08-17T13:14:20.4416922Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T13:14:20.4417100Z 
2025-08-17T13:14:20.4417174Z ## VendorPrice Objects
2025-08-17T13:14:20.4417294Z 
2025-08-17T13:14:20.4417355Z ```python
2025-08-17T13:14:20.4417515Z class VendorPrice(Base)
2025-08-17T13:14:20.4417688Z ```
2025-08-17T13:14:20.4417767Z 
2025-08-17T13:14:20.4417875Z Association table linking vendors to pricing.
2025-08-17T13:14:20.4418059Z 
2025-08-17T13:14:20.4418141Z <a id="common.db_url"></a>
2025-08-17T13:14:20.4418273Z 
2025-08-17T13:14:20.4418340Z # common.db\_url
2025-08-17T13:14:20.4418445Z 
2025-08-17T13:14:20.4418527Z <a id="common.db_url.build_url"></a>
2025-08-17T13:14:20.4418686Z 
2025-08-17T13:14:20.4418751Z #### build\_url
2025-08-17T13:14:20.4418849Z 
2025-08-17T13:14:20.4418916Z ```python
2025-08-17T13:14:20.4419084Z def build_url(async_: bool = True) -> str
2025-08-17T13:14:20.4419306Z ```
2025-08-17T13:14:20.4419387Z 
2025-08-17T13:14:20.4419481Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:14:20.4419662Z 
2025-08-17T13:14:20.4419741Z <a id="common.keepa"></a>
2025-08-17T13:14:20.4419869Z 
2025-08-17T13:14:20.4419936Z # common.keepa
2025-08-17T13:14:20.4420046Z 
2025-08-17T13:14:20.4420118Z <a id="common.llm"></a>
2025-08-17T13:14:20.4420234Z 
2025-08-17T13:14:20.4420303Z # common.llm
2025-08-17T13:14:20.4420396Z 
2025-08-17T13:14:20.4420473Z <a id="common.settings"></a>
2025-08-17T13:14:20.4420609Z 
2025-08-17T13:14:20.4420680Z # common.settings
2025-08-17T13:14:20.4420915Z 
2025-08-17T13:14:20.4420984Z <a id="common.db"></a>
2025-08-17T13:14:20.4421102Z 
2025-08-17T13:14:20.4421164Z # common.db
2025-08-17T13:14:20.4421255Z 
2025-08-17T13:14:20.4421353Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T13:14:20.4421519Z 
2025-08-17T13:14:20.4421594Z #### build\_sqlalchemy\_url
2025-08-17T13:14:20.4421726Z 
2025-08-17T13:14:20.4421787Z ```python
2025-08-17T13:14:20.4421950Z def build_sqlalchemy_url() -> str
2025-08-17T13:14:20.4422156Z ```
2025-08-17T13:14:20.4422234Z 
2025-08-17T13:14:20.4422326Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:14:20.4422500Z 
2025-08-17T13:14:20.4422584Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T13:14:20.4422749Z 
2025-08-17T13:14:20.4422831Z #### build\_asyncpg\_dsn
2025-08-17T13:14:20.4422953Z 
2025-08-17T13:14:20.4423015Z ```python
2025-08-17T13:14:20.4423181Z def build_asyncpg_dsn() -> str
2025-08-17T13:14:20.4423405Z ```
2025-08-17T13:14:20.4423495Z 
2025-08-17T13:14:20.4423624Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:14:20.4423833Z 
2025-08-17T13:14:20.4423921Z <a id="common.db.refresh_mvs"></a>
2025-08-17T13:14:20.4424072Z 
2025-08-17T13:14:20.4424136Z #### refresh\_mvs
2025-08-17T13:14:20.4424238Z 
2025-08-17T13:14:20.4424304Z ```python
2025-08-17T13:14:20.4424490Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:14:20.4424740Z ```
2025-08-17T13:14:20.4424822Z 
2025-08-17T13:14:20.4424956Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:14:20.4425272Z 
2025-08-17T13:14:20.4425348Z <a id="common.config"></a>
2025-08-17T13:14:20.4425476Z 
2025-08-17T13:14:20.4425547Z # common.config
2025-08-17T13:14:20.4425650Z 
2025-08-17T13:14:20.4425723Z <a id="common.base"></a>
2025-08-17T13:14:20.4425842Z 
2025-08-17T13:14:20.4425913Z # common.base
2025-08-17T13:14:20.4426010Z 
2025-08-17T13:14:20.4426090Z <a id="common.base.Base"></a>
2025-08-17T13:14:20.4426231Z 
2025-08-17T13:14:20.4426411Z ## Base Objects
2025-08-17T13:14:20.4426516Z 
2025-08-17T13:14:20.4426582Z ```python
2025-08-17T13:14:20.4426743Z class Base(DeclarativeBase)
2025-08-17T13:14:20.4426938Z ```
2025-08-17T13:14:20.4427021Z 
2025-08-17T13:14:20.4427103Z Base class for SQLAlchemy models.
2025-08-17T13:14:20.4427247Z 
2025-08-17T13:14:20.4427323Z <a id="repricer"></a>
2025-08-17T13:14:20.4427434Z 
2025-08-17T13:14:20.4427496Z # repricer
2025-08-17T13:14:20.4427590Z 
2025-08-17T13:14:20.4427675Z <a id="repricer.app.schemas"></a>
2025-08-17T13:14:20.4427822Z 
2025-08-17T13:14:20.4427905Z # repricer.app.schemas
2025-08-17T13:14:20.4428022Z 
2025-08-17T13:14:20.4428103Z <a id="repricer.app.deps"></a>
2025-08-17T13:14:20.4428242Z 
2025-08-17T13:14:20.4428325Z # repricer.app.deps
2025-08-17T13:14:20.4428434Z 
2025-08-17T13:14:20.4428543Z Placeholder module for Keepa / SP-API clients.
2025-08-17T13:14:20.4428732Z 
2025-08-17T13:14:20.4428814Z <a id="repricer.app.logic"></a>
2025-08-17T13:14:20.4428954Z 
2025-08-17T13:14:20.4429039Z # repricer.app.logic
2025-08-17T13:14:20.4429157Z 
2025-08-17T13:14:20.4429253Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T13:14:20.4429427Z 
2025-08-17T13:14:20.4429498Z #### MIN\_MARGIN
2025-08-17T13:14:20.4429596Z 
2025-08-17T13:14:20.4429658Z 15 % ROI
2025-08-17T13:14:20.4429750Z 
2025-08-17T13:14:20.4429850Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T13:14:20.4430026Z 
2025-08-17T13:14:20.4436781Z #### compute\_price
2025-08-17T13:14:20.4437019Z 
2025-08-17T13:14:20.4437135Z ```python
2025-08-17T13:14:20.4437589Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T13:14:20.4438073Z ```
2025-08-17T13:14:20.4438167Z 
2025-08-17T13:14:20.4438282Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T13:14:20.4438574Z Replace with real competitive logic later.
2025-08-17T13:14:20.4438762Z 
2025-08-17T13:14:20.4438850Z <a id="repricer.app.main"></a>
2025-08-17T13:14:20.4439044Z 
2025-08-17T13:14:20.4439122Z # repricer.app.main
2025-08-17T13:14:20.4439248Z 
2025-08-17T13:14:20.4439505Z <a id="repricer.app"></a>
2025-08-17T13:14:20.4439642Z 
2025-08-17T13:14:20.4439709Z # repricer.app
2025-08-17T13:14:20.4439810Z 
2025-08-17T13:14:20.4439903Z <a id="repricer.tests.test_imports"></a>
2025-08-17T13:14:20.4440083Z 
2025-08-17T13:14:20.4440166Z # repricer.tests.test\_imports
2025-08-17T13:14:20.4440311Z 
2025-08-17T13:14:20.4440403Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T13:14:20.4440566Z 
2025-08-17T13:14:20.4440647Z # repricer.tests.test\_smoke
2025-08-17T13:14:20.4440787Z 
2025-08-17T13:14:20.4440864Z <a id="repricer.tests"></a>
2025-08-17T13:14:20.4440995Z 
2025-08-17T13:14:20.4441062Z # repricer.tests
2025-08-17T13:14:20.4441172Z 
2025-08-17T13:14:20.4441235Z <a id="db"></a>
2025-08-17T13:14:20.4441336Z 
2025-08-17T13:14:20.4441402Z # db
2025-08-17T13:14:20.4441484Z 
2025-08-17T13:14:20.4441559Z <a id="db.utils.views"></a>
2025-08-17T13:14:20.4441686Z 
2025-08-17T13:14:20.4441759Z # db.utils.views
2025-08-17T13:14:20.4441859Z 
2025-08-17T13:14:20.4441956Z <a id="db.utils.views.replace_view"></a>
2025-08-17T13:14:20.4442137Z 
2025-08-17T13:14:20.4442204Z #### replace\_view
2025-08-17T13:14:20.4442311Z 
2025-08-17T13:14:20.4442375Z ```python
2025-08-17T13:14:20.4442578Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T13:14:20.4442825Z ```
2025-08-17T13:14:20.4442908Z 
2025-08-17T13:14:20.4442997Z Drop and recreate a SQL view atomically.
2025-08-17T13:14:20.4443168Z 
2025-08-17T13:14:20.4443248Z <a id="db.utils"></a>
2025-08-17T13:14:20.4443364Z 
2025-08-17T13:14:20.4443428Z # db.utils
2025-08-17T13:14:20.4443529Z 
2025-08-17T13:14:20.4443609Z <a id="price_importer"></a>
2025-08-17T13:14:20.4443753Z 
2025-08-17T13:14:20.4443838Z # price\_importer
2025-08-17T13:14:20.4443947Z 
2025-08-17T13:14:20.4444051Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T13:14:20.4444233Z 
2025-08-17T13:14:20.4444332Z # price\_importer.services\_common.dsn
2025-08-17T13:14:20.4444495Z 
2025-08-17T13:14:20.4444622Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T13:14:20.4444960Z 
2025-08-17T13:14:20.4445199Z #### build\_dsn
2025-08-17T13:14:20.4445309Z 
2025-08-17T13:14:20.4445373Z ```python
2025-08-17T13:14:20.4445552Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:14:20.4445776Z ```
2025-08-17T13:14:20.4445862Z 
2025-08-17T13:14:20.4445929Z Return safe DSN.
2025-08-17T13:14:20.4446033Z 
2025-08-17T13:14:20.4446586Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T13:14:20.4446791Z 
2025-08-17T13:14:20.4446917Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T13:14:20.4447128Z 
2025-08-17T13:14:20.4447237Z # price\_importer.services\_common.models\_vendor
2025-08-17T13:14:20.4447426Z 
2025-08-17T13:14:20.4447537Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T13:14:20.4447725Z 
2025-08-17T13:14:20.4447820Z # price\_importer.services\_common.db\_url
2025-08-17T13:14:20.4447997Z 
2025-08-17T13:14:20.4448128Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T13:14:20.4448352Z 
2025-08-17T13:14:20.4448426Z #### build\_url
2025-08-17T13:14:20.4448532Z 
2025-08-17T13:14:20.4448595Z ```python
2025-08-17T13:14:20.4448775Z def build_url(async_: bool = True) -> str
2025-08-17T13:14:20.4448996Z ```
2025-08-17T13:14:20.4449078Z 
2025-08-17T13:14:20.4449179Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:14:20.4449349Z 
2025-08-17T13:14:20.4449453Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T13:14:20.4449640Z 
2025-08-17T13:14:20.4449736Z # price\_importer.services\_common.keepa
2025-08-17T13:14:20.4449913Z 
2025-08-17T13:14:20.4450015Z <a id="price_importer.services_common.llm"></a>
2025-08-17T13:14:20.4450207Z 
2025-08-17T13:14:20.4450298Z # price\_importer.services\_common.llm
2025-08-17T13:14:20.4450461Z 
2025-08-17T13:14:20.4450580Z <a id="price_importer.services_common.settings"></a>
2025-08-17T13:14:20.4450773Z 
2025-08-17T13:14:20.4450867Z # price\_importer.services\_common.settings
2025-08-17T13:14:20.4451045Z 
2025-08-17T13:14:20.4451151Z <a id="price_importer.services_common.db"></a>
2025-08-17T13:14:20.4451465Z 
2025-08-17T13:14:20.4451559Z # price\_importer.services\_common.db
2025-08-17T13:14:20.4451714Z 
2025-08-17T13:14:20.4451867Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T13:14:20.4452106Z 
2025-08-17T13:14:20.4452187Z #### build\_sqlalchemy\_url
2025-08-17T13:14:20.4452320Z 
2025-08-17T13:14:20.4452383Z ```python
2025-08-17T13:14:20.4452570Z def build_sqlalchemy_url() -> str
2025-08-17T13:14:20.4452775Z ```
2025-08-17T13:14:20.4452864Z 
2025-08-17T13:14:20.4452963Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:14:20.4453133Z 
2025-08-17T13:14:20.4453279Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T13:14:20.4453506Z 
2025-08-17T13:14:20.4453580Z #### build\_asyncpg\_dsn
2025-08-17T13:14:20.4453710Z 
2025-08-17T13:14:20.4453773Z ```python
2025-08-17T13:14:20.4453941Z def build_asyncpg_dsn() -> str
2025-08-17T13:14:20.4454144Z ```
2025-08-17T13:14:20.4454231Z 
2025-08-17T13:14:20.4454365Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:14:20.4454582Z 
2025-08-17T13:14:20.4454707Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T13:14:20.4454914Z 
2025-08-17T13:14:20.4454987Z #### refresh\_mvs
2025-08-17T13:14:20.4455343Z 
2025-08-17T13:14:20.4455458Z ```python
2025-08-17T13:14:20.4455672Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:14:20.4455918Z ```
2025-08-17T13:14:20.4456008Z 
2025-08-17T13:14:20.4456143Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:14:20.4456358Z 
2025-08-17T13:14:20.4456457Z <a id="price_importer.services_common"></a>
2025-08-17T13:14:20.4456631Z 
2025-08-17T13:14:20.4456720Z # price\_importer.services\_common
2025-08-17T13:14:20.4456872Z 
2025-08-17T13:14:20.4456980Z <a id="price_importer.services_common.base"></a>
2025-08-17T13:14:20.4457163Z 
2025-08-17T13:14:20.4457252Z # price\_importer.services\_common.base
2025-08-17T13:14:20.4457591Z 
2025-08-17T13:14:20.4457681Z <a id="price_importer.normaliser"></a>
2025-08-17T13:14:20.4457849Z 
2025-08-17T13:14:20.4457938Z # price\_importer.normaliser
2025-08-17T13:14:20.4458079Z 
2025-08-17T13:14:20.4458188Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T13:14:20.4458371Z 
2025-08-17T13:14:20.4458465Z # price\_importer.common.models\_vendor
2025-08-17T13:14:20.4458628Z 
2025-08-17T13:14:20.4458720Z <a id="price_importer.common.db_url"></a>
2025-08-17T13:14:20.4458895Z 
2025-08-17T13:14:20.4458981Z # price\_importer.common.db\_url
2025-08-17T13:14:20.4459127Z 
2025-08-17T13:14:20.4459238Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T13:14:20.4459420Z 
2025-08-17T13:14:20.4459485Z #### make\_dsn
2025-08-17T13:14:20.4459585Z 
2025-08-17T13:14:20.4459657Z ```python
2025-08-17T13:14:20.4459828Z def make_dsn(async_: bool = False) -> str
2025-08-17T13:14:20.4460053Z ```
2025-08-17T13:14:20.4460135Z 
2025-08-17T13:14:20.4460255Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T13:14:20.4460465Z 
2025-08-17T13:14:20.4460576Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T13:14:20.4460764Z 
2025-08-17T13:14:20.4460836Z #### build\_url
2025-08-17T13:14:20.4460936Z 
2025-08-17T13:14:20.4460999Z ```python
2025-08-17T13:14:20.4461179Z def build_url(async_: bool = False) -> str
2025-08-17T13:14:20.4461398Z ```
2025-08-17T13:14:20.4461486Z 
2025-08-17T13:14:20.4461604Z Return Postgres DSN built from environment variables.
2025-08-17T13:14:20.4461800Z 
2025-08-17T13:14:20.4461890Z <a id="price_importer.common"></a>
2025-08-17T13:14:20.4462044Z 
2025-08-17T13:14:20.4462123Z # price\_importer.common
2025-08-17T13:14:20.4462249Z 
2025-08-17T13:14:20.4462343Z <a id="price_importer.common.base"></a>
2025-08-17T13:14:20.4462506Z 
2025-08-17T13:14:20.4462587Z # price\_importer.common.base
2025-08-17T13:14:20.4462732Z 
2025-08-17T13:14:20.4462826Z <a id="price_importer.tests.conftest"></a>
2025-08-17T13:14:20.4462997Z 
2025-08-17T13:14:20.4463082Z # price\_importer.tests.conftest
2025-08-17T13:14:20.4463357Z 
2025-08-17T13:14:20.4463456Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T13:14:20.4463629Z 
2025-08-17T13:14:20.4463718Z # price\_importer.tests.test\_reader
2025-08-17T13:14:20.4463874Z 
2025-08-17T13:14:20.4463973Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T13:14:20.4464156Z 
2025-08-17T13:14:20.4464243Z # price\_importer.tests.test\_imports
2025-08-17T13:14:20.4464400Z 
2025-08-17T13:14:20.4464494Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T13:14:20.4464666Z 
2025-08-17T13:14:20.4464750Z # price\_importer.tests.test\_smoke
2025-08-17T13:14:20.4464903Z 
2025-08-17T13:14:20.4465010Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T13:14:20.4465449Z 
2025-08-17T13:14:20.4465541Z # price\_importer.tests.test\_normaliser
2025-08-17T13:14:20.4465712Z 
2025-08-17T13:14:20.4465795Z <a id="price_importer.tests"></a>
2025-08-17T13:14:20.4465946Z 
2025-08-17T13:14:20.4466025Z # price\_importer.tests
2025-08-17T13:14:20.4466151Z 
2025-08-17T13:14:20.4466240Z <a id="price_importer.reader"></a>
2025-08-17T13:14:20.4466389Z 
2025-08-17T13:14:20.4466470Z # price\_importer.reader
2025-08-17T13:14:20.4466593Z 
2025-08-17T13:14:20.4466687Z <a id="price_importer.reader.load_file"></a>
2025-08-17T13:14:20.4466864Z 
2025-08-17T13:14:20.4466928Z #### load\_file
2025-08-17T13:14:20.4467028Z 
2025-08-17T13:14:20.4467090Z ```python
2025-08-17T13:14:20.4467268Z def load_file(path: str | Path) -> Any
2025-08-17T13:14:20.4467486Z ```
2025-08-17T13:14:20.4467566Z 
2025-08-17T13:14:20.4467652Z Return DataFrame from CSV or Excel file.
2025-08-17T13:14:20.4467814Z 
2025-08-17T13:14:20.4467926Z Raises RuntimeError if pandas is unavailable.
2025-08-17T13:14:20.4468105Z 
2025-08-17T13:14:20.4468192Z <a id="price_importer.repository"></a>
2025-08-17T13:14:20.4468357Z 
2025-08-17T13:14:20.4468440Z # price\_importer.repository
2025-08-17T13:14:20.4468578Z 
2025-08-17T13:14:20.4468666Z <a id="price_importer.import"></a>
2025-08-17T13:14:20.4468816Z 
2025-08-17T13:14:20.4469019Z # price\_importer.import
2025-08-17T13:14:20.4469147Z 
2025-08-17T13:14:20.4469221Z <a id="fees_h10"></a>
2025-08-17T13:14:20.4469333Z 
2025-08-17T13:14:20.4469395Z # fees\_h10
2025-08-17T13:14:20.4469491Z 
2025-08-17T13:14:20.4469566Z <a id="fees_h10.worker"></a>
2025-08-17T13:14:20.4469697Z 
2025-08-17T13:14:20.4469763Z # fees\_h10.worker
2025-08-17T13:14:20.4469872Z 
2025-08-17T13:14:20.4469970Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T13:14:20.4470141Z 
2025-08-17T13:14:20.4470220Z #### list\_active\_asins
2025-08-17T13:14:20.4470339Z 
2025-08-17T13:14:20.4470400Z ```python
2025-08-17T13:14:20.4470569Z def list_active_asins() -> list[str]
2025-08-17T13:14:20.4470774Z ```
2025-08-17T13:14:20.4470859Z 
2025-08-17T13:14:20.4470970Z Return known ASINs or an empty list if unavailable.
2025-08-17T13:14:20.4471166Z 
2025-08-17T13:14:20.4471255Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T13:14:20.4471410Z 
2025-08-17T13:14:20.4471489Z # fees\_h10.tests.test\_smoke
2025-08-17T13:14:20.4471631Z 
2025-08-17T13:14:20.4471717Z <a id="fees_h10.tests"></a>
2025-08-17T13:14:20.4471846Z 
2025-08-17T13:14:20.4471914Z # fees\_h10.tests
2025-08-17T13:14:20.4472024Z 
2025-08-17T13:14:20.4472098Z <a id="fees_h10.client"></a>
2025-08-17T13:14:20.4472227Z 
2025-08-17T13:14:20.4472293Z # fees\_h10.client
2025-08-17T13:14:20.4472405Z 
2025-08-17T13:14:20.4472486Z <a id="fees_h10.repository"></a>
2025-08-17T13:14:20.4472628Z 
2025-08-17T13:14:20.4472708Z # fees\_h10.repository
2025-08-17T13:14:20.4472825Z 
2025-08-17T13:14:20.4472897Z <a id="emailer"></a>
2025-08-17T13:14:20.4473015Z 
2025-08-17T13:14:20.4473078Z # emailer
2025-08-17T13:14:20.4473166Z 
2025-08-17T13:14:20.4473265Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T13:14:20.4473452Z 
2025-08-17T13:14:20.4473540Z # emailer.tests.test\_import\_emailer
2025-08-17T13:14:20.4473697Z 
2025-08-17T13:14:20.4473787Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T13:14:20.4473940Z 
2025-08-17T13:14:20.4474019Z # emailer.tests.test\_smoke
2025-08-17T13:14:20.4474286Z 
2025-08-17T13:14:20.4474364Z <a id="emailer.tests"></a>
2025-08-17T13:14:20.4474493Z 
2025-08-17T13:14:20.4474558Z # emailer.tests
2025-08-17T13:14:20.4474666Z 
2025-08-17T13:14:20.4474749Z <a id="emailer.generate_body"></a>
2025-08-17T13:14:20.4474898Z 
2025-08-17T13:14:20.4474981Z # emailer.generate\_body
2025-08-17T13:14:20.4475220Z 
2025-08-17T13:14:20.4475292Z <a id="llm_server"></a>
2025-08-17T13:14:20.4475419Z 
2025-08-17T13:14:20.4475482Z # llm\_server
2025-08-17T13:14:20.4475578Z 
2025-08-17T13:14:20.4475656Z <a id="llm_server.app"></a>
2025-08-17T13:14:20.4475789Z 
2025-08-17T13:14:20.4475855Z # llm\_server.app
2025-08-17T13:14:20.4475959Z 
