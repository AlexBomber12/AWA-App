2025-08-18T21:49:44.2494896Z ##[group]Run pydoc-markdown
2025-08-18T21:49:44.2495181Z [36;1mpydoc-markdown[0m
2025-08-18T21:49:44.2534730Z shell: /usr/bin/bash -e {0}
2025-08-18T21:49:44.2534955Z env:
2025-08-18T21:49:44.2535190Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:49:44.2535604Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T21:49:44.2535992Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:49:44.2536331Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:49:44.2536684Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:49:44.2537027Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T21:49:44.2537528Z ##[endgroup]
2025-08-18T21:49:44.5898732Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T21:49:44.5899469Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T21:49:44.5899842Z In "pydoc-markdown.yml"
2025-08-18T21:49:44.5900196Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T21:49:44.5900754Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T21:49:44.5901358Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T21:49:44.5901766Z 
2025-08-18T21:49:44.9073438Z <a id="__init__"></a>
2025-08-18T21:49:44.9074074Z 
2025-08-18T21:49:44.9074214Z # \_\_init\_\_
2025-08-18T21:49:44.9074421Z 
2025-08-18T21:49:44.9074548Z <a id="api"></a>
2025-08-18T21:49:44.9074751Z 
2025-08-18T21:49:44.9074866Z # api
2025-08-18T21:49:44.9075044Z 
2025-08-18T21:49:44.9075187Z <a id="api.errors"></a>
2025-08-18T21:49:44.9075420Z 
2025-08-18T21:49:44.9075552Z # api.errors
2025-08-18T21:49:44.9075737Z 
2025-08-18T21:49:44.9075884Z <a id="api.sentry_config"></a>
2025-08-18T21:49:44.9076166Z 
2025-08-18T21:49:44.9076306Z # api.sentry\_config
2025-08-18T21:49:44.9076522Z 
2025-08-18T21:49:44.9076691Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T21:49:44.9077022Z 
2025-08-18T21:49:44.9077831Z # api.tests.test\_sentry\_scrub
2025-08-18T21:49:44.9078141Z 
2025-08-18T21:49:44.9078326Z <a id="api.tests.test_errors_json"></a>
2025-08-18T21:49:44.9078646Z 
2025-08-18T21:49:44.9078798Z # api.tests.test\_errors\_json
2025-08-18T21:49:44.9079080Z 
2025-08-18T21:49:44.9079227Z <a id="api.tests.test_llm"></a>
2025-08-18T21:49:44.9079503Z 
2025-08-18T21:49:44.9079640Z # api.tests.test\_llm
2025-08-18T21:49:44.9079873Z 
2025-08-18T21:49:44.9080042Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T21:49:44.9080366Z 
2025-08-18T21:49:44.9080527Z # api.tests.test\_sentry\_event
2025-08-18T21:49:44.9080795Z 
2025-08-18T21:49:44.9081029Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T21:49:44.9081434Z 
2025-08-18T21:49:44.9081584Z ## DummyTransport Objects
2025-08-18T21:49:44.9081836Z 
2025-08-18T21:49:44.9081963Z ```python
2025-08-18T21:49:44.9082291Z class DummyTransport()
2025-08-18T21:49:44.9082626Z ```
2025-08-18T21:49:44.9082789Z 
2025-08-18T21:49:44.9083116Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T21:49:44.9083631Z 
2025-08-18T21:49:44.9083778Z #### capture\_envelope
2025-08-18T21:49:44.9083998Z 
2025-08-18T21:49:44.9084116Z ```python
2025-08-18T21:49:44.9084448Z def capture_envelope(envelope)
2025-08-18T21:49:44.9084821Z ```
2025-08-18T21:49:44.9084988Z 
2025-08-18T21:49:44.9085225Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T21:49:44.9085626Z 
2025-08-18T21:49:44.9085791Z <a id="api.tests.test_cors"></a>
2025-08-18T21:49:44.9086077Z 
2025-08-18T21:49:44.9086214Z # api.tests.test\_cors
2025-08-18T21:49:44.9086438Z 
2025-08-18T21:49:44.9086603Z <a id="api.tests.test_imports"></a>
2025-08-18T21:49:44.9086907Z 
2025-08-18T21:49:44.9087060Z # api.tests.test\_imports
2025-08-18T21:49:44.9087549Z 
2025-08-18T21:49:44.9087722Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T21:49:44.9088036Z 
2025-08-18T21:49:44.9088184Z # api.tests.test\_rate\_limit
2025-08-18T21:49:44.9088459Z 
2025-08-18T21:49:44.9088642Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T21:49:44.9089353Z 
2025-08-18T21:49:44.9089482Z #### app
2025-08-18T21:49:44.9089653Z 
2025-08-18T21:49:44.9089772Z noqa: E402
2025-08-18T21:49:44.9089952Z 
2025-08-18T21:49:44.9090126Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T21:49:44.9090442Z 
2025-08-18T21:49:44.9090592Z # api.tests.test\_entrypoint
2025-08-18T21:49:44.9090863Z 
2025-08-18T21:49:44.9091019Z <a id="api.tests.test_health"></a>
2025-08-18T21:49:44.9091306Z 
2025-08-18T21:49:44.9091454Z # api.tests.test\_health
2025-08-18T21:49:44.9091695Z 
2025-08-18T21:49:44.9091845Z <a id="api.logging_config"></a>
2025-08-18T21:49:44.9092120Z 
2025-08-18T21:49:44.9092260Z # api.logging\_config
2025-08-18T21:49:44.9092488Z 
2025-08-18T21:49:44.9092647Z <a id="api.migrations.env"></a>
2025-08-18T21:49:44.9092927Z 
2025-08-18T21:49:44.9093065Z # api.migrations.env
2025-08-18T21:49:44.9093287Z 
2025-08-18T21:49:44.9093512Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T21:49:44.9093900Z 
2025-08-18T21:49:44.9094095Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T21:49:44.9094457Z 
2025-08-18T21:49:44.9094654Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T21:49:44.9095017Z 
2025-08-18T21:49:44.9095189Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T21:49:44.9095524Z 
2025-08-18T21:49:44.9095806Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T21:49:44.9096253Z 
2025-08-18T21:49:44.9096511Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T21:49:44.9096920Z 
2025-08-18T21:49:44.9097316Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T21:49:44.9097720Z 
2025-08-18T21:49:44.9097924Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T21:49:44.9098281Z 
2025-08-18T21:49:44.9098508Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T21:49:44.9098902Z 
2025-08-18T21:49:44.9099096Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T21:49:44.9099445Z 
2025-08-18T21:49:44.9099905Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T21:49:44.9100309Z 
2025-08-18T21:49:44.9100513Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T21:49:44.9100884Z 
2025-08-18T21:49:44.9101107Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T21:49:44.9101485Z 
2025-08-18T21:49:44.9101695Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T21:49:44.9102056Z 
2025-08-18T21:49:44.9102300Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T21:49:44.9102695Z 
2025-08-18T21:49:44.9102906Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T21:49:44.9103257Z 
2025-08-18T21:49:44.9103514Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T21:49:44.9103941Z 
2025-08-18T21:49:44.9104165Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T21:49:44.9104544Z 
2025-08-18T21:49:44.9104787Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T21:49:44.9105171Z 
2025-08-18T21:49:44.9105385Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T21:49:44.9105758Z 
2025-08-18T21:49:44.9106018Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T21:49:44.9106450Z 
2025-08-18T21:49:44.9106680Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T21:49:44.9107307Z 
2025-08-18T21:49:44.9107528Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T21:49:44.9107918Z 
2025-08-18T21:49:44.9108104Z # api.migrations.versions.0001\_baseline
2025-08-18T21:49:44.9108436Z 
2025-08-18T21:49:44.9108613Z <a id="api.migrations.versions"></a>
2025-08-18T21:49:44.9108924Z 
2025-08-18T21:49:44.9109072Z # api.migrations.versions
2025-08-18T21:49:44.9109322Z 
2025-08-18T21:49:44.9109480Z <a id="api.migrations"></a>
2025-08-18T21:49:44.9109730Z 
2025-08-18T21:49:44.9109856Z # api.migrations
2025-08-18T21:49:44.9110063Z 
2025-08-18T21:49:44.9110191Z <a id="api.db"></a>
2025-08-18T21:49:44.9110390Z 
2025-08-18T21:49:44.9110503Z # api.db
2025-08-18T21:49:44.9110677Z 
2025-08-18T21:49:44.9110835Z <a id="api.routes.stats"></a>
2025-08-18T21:49:44.9111354Z 
2025-08-18T21:49:44.9111493Z # api.routes.stats
2025-08-18T21:49:44.9111700Z 
2025-08-18T21:49:44.9111859Z <a id="api.routes.stats.kpi"></a>
2025-08-18T21:49:44.9112161Z 
2025-08-18T21:49:44.9112279Z #### kpi
2025-08-18T21:49:44.9112443Z 
2025-08-18T21:49:44.9112559Z ```python
2025-08-18T21:49:44.9112875Z @router.get("/stats/kpi")
2025-08-18T21:49:44.9113318Z def kpi() -> List[Dict[str, int]]
2025-08-18T21:49:44.9113731Z ```
2025-08-18T21:49:44.9113893Z 
2025-08-18T21:49:44.9114113Z Return KPI metrics (mock).
2025-08-18T21:49:44.9114368Z 
2025-08-18T21:49:44.9114551Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T21:49:44.9114890Z 
2025-08-18T21:49:44.9115020Z #### roi\_by\_vendor
2025-08-18T21:49:44.9115230Z 
2025-08-18T21:49:44.9115348Z ```python
2025-08-18T21:49:44.9115679Z @router.get("/stats/roi_by_vendor")
2025-08-18T21:49:44.9116141Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T21:49:44.9116578Z ```
2025-08-18T21:49:44.9116742Z 
2025-08-18T21:49:44.9116909Z Return ROI percent by vendor.
2025-08-18T21:49:44.9117395Z 
2025-08-18T21:49:44.9117570Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T21:49:44.9117893Z 
2025-08-18T21:49:44.9118011Z #### roi\_trend
2025-08-18T21:49:44.9118204Z 
2025-08-18T21:49:44.9118321Z ```python
2025-08-18T21:49:44.9118638Z @router.get("/stats/roi_trend")
2025-08-18T21:49:44.9119085Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T21:49:44.9119535Z ```
2025-08-18T21:49:44.9119688Z 
2025-08-18T21:49:44.9119835Z Return 30-day ROI trend.
2025-08-18T21:49:44.9120074Z 
2025-08-18T21:49:44.9120219Z <a id="api.routes.roi"></a>
2025-08-18T21:49:44.9120480Z 
2025-08-18T21:49:44.9120605Z # api.routes.roi
2025-08-18T21:49:44.9120822Z 
2025-08-18T21:49:44.9121031Z <a id="api.routes.health"></a>
2025-08-18T21:49:44.9121305Z 
2025-08-18T21:49:44.9121437Z # api.routes.health
2025-08-18T21:49:44.9121646Z 
2025-08-18T21:49:44.9121844Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T21:49:44.9122409Z 
2025-08-18T21:49:44.9122542Z #### MAX\_SKEW
2025-08-18T21:49:44.9122745Z 
2025-08-18T21:49:44.9122863Z seconds
2025-08-18T21:49:44.9123033Z 
2025-08-18T21:49:44.9123207Z <a id="api.routes.health.health"></a>
2025-08-18T21:49:44.9123540Z 
2025-08-18T21:49:44.9123653Z #### health
2025-08-18T21:49:44.9123823Z 
2025-08-18T21:49:44.9123944Z ```python
2025-08-18T21:49:44.9124307Z @router.get("/health", include_in_schema=False)
2025-08-18T21:49:44.9125026Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T21:49:44.9125727Z ```
2025-08-18T21:49:44.9125892Z 
2025-08-18T21:49:44.9126112Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T21:49:44.9126485Z 
2025-08-18T21:49:44.9126653Z <a id="api.routes.repository"></a>
2025-08-18T21:49:44.9126952Z 
2025-08-18T21:49:44.9127089Z # api.routes.repository
2025-08-18T21:49:44.9127471Z 
2025-08-18T21:49:44.9127606Z <a id="api.routes"></a>
2025-08-18T21:49:44.9127814Z 
2025-08-18T21:49:44.9127926Z # api.routes
2025-08-18T21:49:44.9128110Z 
2025-08-18T21:49:44.9128256Z <a id="api.models.fee"></a>
2025-08-18T21:49:44.9128516Z 
2025-08-18T21:49:44.9128641Z # api.models.fee
2025-08-18T21:49:44.9128860Z 
2025-08-18T21:49:44.9128996Z <a id="api.models"></a>
2025-08-18T21:49:44.9129224Z 
2025-08-18T21:49:44.9129352Z # api.models
2025-08-18T21:49:44.9129535Z 
2025-08-18T21:49:44.9129687Z <a id="api.roi_repository"></a>
2025-08-18T21:49:44.9129970Z 
2025-08-18T21:49:44.9130111Z # api.roi\_repository
2025-08-18T21:49:44.9130334Z 
2025-08-18T21:49:44.9130468Z <a id="api.main"></a>
2025-08-18T21:49:44.9130687Z 
2025-08-18T21:49:44.9130800Z # api.main
2025-08-18T21:49:44.9130970Z 
2025-08-18T21:49:44.9131119Z <a id="api.main.ready"></a>
2025-08-18T21:49:44.9131372Z 
2025-08-18T21:49:44.9131488Z #### ready
2025-08-18T21:49:44.9131655Z 
2025-08-18T21:49:44.9131777Z ```python
2025-08-18T21:49:44.9132255Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T21:49:44.9133086Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T21:49:44.9134000Z                                                                       str]
2025-08-18T21:49:44.9134449Z ```
2025-08-18T21:49:44.9134607Z 
2025-08-18T21:49:44.9134794Z Return 200 only when migrations are at head.
2025-08-18T21:49:44.9135123Z 
2025-08-18T21:49:44.9135258Z <a id="api.config"></a>
2025-08-18T21:49:44.9135491Z 
2025-08-18T21:49:44.9135609Z # api.config
2025-08-18T21:49:44.9135790Z 
2025-08-18T21:49:44.9135908Z <a id="etl"></a>
2025-08-18T21:49:44.9136108Z 
2025-08-18T21:49:44.9136218Z # etl
2025-08-18T21:49:44.9136377Z 
2025-08-18T21:49:44.9136531Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T21:49:44.9136815Z 
2025-08-18T21:49:44.9136950Z # etl.fba\_fee\_ingestor
2025-08-18T21:49:44.9137352Z 
2025-08-18T21:49:44.9137526Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T21:49:44.9137811Z 
2025-08-18T21:49:44.9137948Z # etl.sp\_fees\_ingestor
2025-08-18T21:49:44.9138188Z 
2025-08-18T21:49:44.9138335Z <a id="etl.keepa_ingestor"></a>
2025-08-18T21:49:44.9138621Z 
2025-08-18T21:49:44.9138761Z # etl.keepa\_ingestor
2025-08-18T21:49:44.9138979Z 
2025-08-18T21:49:44.9139101Z <a id="etl.db"></a>
2025-08-18T21:49:44.9139302Z 
2025-08-18T21:49:44.9139420Z # etl.db
2025-08-18T21:49:44.9139582Z 
2025-08-18T21:49:44.9139738Z <a id="etl.dialects.schemas"></a>
2025-08-18T21:49:44.9140030Z 
2025-08-18T21:49:44.9140165Z # etl.dialects.schemas
2025-08-18T21:49:44.9140390Z 
2025-08-18T21:49:44.9140587Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T21:49:44.9140954Z 
2025-08-18T21:49:44.9141118Z # etl.dialects.amazon\_reimbursements
2025-08-18T21:49:44.9141425Z 
2025-08-18T21:49:44.9141613Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T21:49:44.9141953Z 
2025-08-18T21:49:44.9142112Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T21:49:44.9142417Z 
2025-08-18T21:49:44.9142590Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T21:49:44.9142919Z 
2025-08-18T21:49:44.9143075Z # etl.dialects.amazon\_returns
2025-08-18T21:49:44.9143587Z 
2025-08-18T21:49:44.9143790Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T21:49:44.9144129Z 
2025-08-18T21:49:44.9144295Z # etl.dialects.amazon\_fee\_preview
2025-08-18T21:49:44.9144599Z 
2025-08-18T21:49:44.9144799Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T21:49:44.9145162Z 
2025-08-18T21:49:44.9145330Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T21:49:44.9145649Z 
2025-08-18T21:49:44.9145826Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T21:49:44.9146167Z 
2025-08-18T21:49:44.9146325Z # etl.dialects.amazon\_settlements
2025-08-18T21:49:44.9146611Z 
2025-08-18T21:49:44.9146761Z <a id="etl.dialects"></a>
2025-08-18T21:49:44.9147002Z 
2025-08-18T21:49:44.9147124Z # etl.dialects
2025-08-18T21:49:44.9147489Z 
2025-08-18T21:49:44.9147611Z <a id="ingest"></a>
2025-08-18T21:49:44.9147813Z 
2025-08-18T21:49:44.9147925Z # ingest
2025-08-18T21:49:44.9148094Z 
2025-08-18T21:49:44.9148245Z <a id="ingest.maintenance"></a>
2025-08-18T21:49:44.9148513Z 
2025-08-18T21:49:44.9148667Z # ingest.maintenance
2025-08-18T21:49:44.9148894Z 
2025-08-18T21:49:44.9149046Z <a id="ingest.copy_loader"></a>
2025-08-18T21:49:44.9149325Z 
2025-08-18T21:49:44.9149456Z # ingest.copy\_loader
2025-08-18T21:49:44.9149673Z 
2025-08-18T21:49:44.9149866Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T21:49:44.9150229Z 
2025-08-18T21:49:44.9150367Z #### copy\_df\_via\_temp
2025-08-18T21:49:44.9150596Z 
2025-08-18T21:49:44.9150717Z ```python
2025-08-18T21:49:44.9151032Z def copy_df_via_temp(engine: Engine,
2025-08-18T21:49:44.9151480Z                      df: pd.DataFrame,
2025-08-18T21:49:44.9151910Z                      target_table: str,
2025-08-18T21:49:44.9152323Z                      *,
2025-08-18T21:49:44.9152715Z                      target_schema: Optional[str] = None,
2025-08-18T21:49:44.9153225Z                      columns: Sequence[str],
2025-08-18T21:49:44.9153753Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T21:49:44.9154304Z                      analyze_after: bool = False,
2025-08-18T21:49:44.9155050Z                      connection: Any | None = None) -> int
2025-08-18T21:49:44.9155499Z ```
2025-08-18T21:49:44.9155656Z 
2025-08-18T21:49:44.9155958Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T21:49:44.9156397Z 
2025-08-18T21:49:44.9156559Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T21:49:44.9156868Z 
2025-08-18T21:49:44.9157009Z # ingest.tests.test\_smoke
2025-08-18T21:49:44.9157478Z 
2025-08-18T21:49:44.9157628Z <a id="ingest.tests"></a>
2025-08-18T21:49:44.9157872Z 
2025-08-18T21:49:44.9157995Z # ingest.tests
2025-08-18T21:49:44.9158182Z 
2025-08-18T21:49:44.9158346Z <a id="ingest.upload_router"></a>
2025-08-18T21:49:44.9158631Z 
2025-08-18T21:49:44.9158771Z # ingest.upload\_router
2025-08-18T21:49:44.9159008Z 
2025-08-18T21:49:44.9159157Z <a id="ingest.email_watcher"></a>
2025-08-18T21:49:44.9159436Z 
2025-08-18T21:49:44.9159572Z # ingest.email\_watcher
2025-08-18T21:49:44.9159798Z 
2025-08-18T21:49:44.9159965Z <a id="ingest.email_watcher.main"></a>
2025-08-18T21:49:44.9160286Z 
2025-08-18T21:49:44.9160409Z #### main
2025-08-18T21:49:44.9160574Z 
2025-08-18T21:49:44.9160689Z ```python
2025-08-18T21:49:44.9160998Z def main() -> dict[str, str]
2025-08-18T21:49:44.9161356Z ```
2025-08-18T21:49:44.9161514Z 
2025-08-18T21:49:44.9161769Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T21:49:44.9162226Z 
2025-08-18T21:49:44.9162476Z Returns {"status": "success"} when processing completes.
2025-08-18T21:49:44.9162883Z 
2025-08-18T21:49:44.9163039Z <a id="ingest.tasks"></a>
2025-08-18T21:49:44.9163274Z 
2025-08-18T21:49:44.9163393Z # ingest.tasks
2025-08-18T21:49:44.9163586Z 
2025-08-18T21:49:44.9163762Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T21:49:44.9164093Z 
2025-08-18T21:49:44.9164225Z #### task\_import\_file
2025-08-18T21:49:44.9164455Z 
2025-08-18T21:49:44.9164570Z ```python
2025-08-18T21:49:44.9164958Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T21:49:44.9165726Z def task_import_file(self: Any,
2025-08-18T21:49:44.9166135Z                      uri: str,
2025-08-18T21:49:44.9166549Z                      report_type: Optional[str] = None,
2025-08-18T21:49:44.9167060Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T21:49:44.9167686Z ```
2025-08-18T21:49:44.9167854Z 
2025-08-18T21:49:44.9168101Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T21:49:44.9168508Z 
2025-08-18T21:49:44.9168666Z <a id="ingest.celery_app"></a>
2025-08-18T21:49:44.9168940Z 
2025-08-18T21:49:44.9169076Z # ingest.celery\_app
2025-08-18T21:49:44.9169291Z 
2025-08-18T21:49:44.9169450Z <a id="ingest.ingest_router"></a>
2025-08-18T21:49:44.9169733Z 
2025-08-18T21:49:44.9169875Z # ingest.ingest\_router
2025-08-18T21:49:44.9170107Z 
2025-08-18T21:49:44.9170246Z <a id="logistics_etl"></a>
2025-08-18T21:49:44.9170492Z 
2025-08-18T21:49:44.9170622Z # logistics\_etl
2025-08-18T21:49:44.9170823Z 
2025-08-18T21:49:44.9170961Z Daily logistics ETL job.
2025-08-18T21:49:44.9171215Z 
2025-08-18T21:49:44.9171379Z <a id="logistics_etl.__main__"></a>
2025-08-18T21:49:44.9171673Z 
2025-08-18T21:49:44.9171822Z # logistics\_etl.\_\_main\_\_
2025-08-18T21:49:44.9172099Z 
2025-08-18T21:49:44.9172246Z <a id="logistics_etl.dsn"></a>
2025-08-18T21:49:44.9172510Z 
2025-08-18T21:49:44.9172639Z # logistics\_etl.dsn
2025-08-18T21:49:44.9172860Z 
2025-08-18T21:49:44.9173080Z Local DSN builder to avoid cross-service dependency.
2025-08-18T21:49:44.9173464Z 
2025-08-18T21:49:44.9173638Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T21:49:44.9173962Z 
2025-08-18T21:49:44.9174082Z #### build\_dsn
2025-08-18T21:49:44.9174281Z 
2025-08-18T21:49:44.9174398Z ```python
2025-08-18T21:49:44.9174719Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:49:44.9175135Z ```
2025-08-18T21:49:44.9175290Z 
2025-08-18T21:49:44.9175560Z Return a Postgres DSN assembled from environment variables.
2025-08-18T21:49:44.9175991Z 
2025-08-18T21:49:44.9176272Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T21:49:44.9177423Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T21:49:44.9178089Z error when any required variable is missing.
2025-08-18T21:49:44.9178442Z 
2025-08-18T21:49:44.9178618Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T21:49:44.9178947Z 
2025-08-18T21:49:44.9179101Z # logistics\_etl.tests.conftest
2025-08-18T21:49:44.9179383Z 
2025-08-18T21:49:44.9179575Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T21:49:44.9179931Z 
2025-08-18T21:49:44.9180136Z # logistics\_etl.tests.test\_repository
2025-08-18T21:49:44.9180447Z 
2025-08-18T21:49:44.9180619Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T21:49:44.9180952Z 
2025-08-18T21:49:44.9181105Z # logistics\_etl.tests.test\_cron
2025-08-18T21:49:44.9181389Z 
2025-08-18T21:49:44.9181579Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T21:49:44.9181915Z 
2025-08-18T21:49:44.9182070Z # logistics\_etl.tests.test\_imports
2025-08-18T21:49:44.9182388Z 
2025-08-18T21:49:44.9182572Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T21:49:44.9182899Z 
2025-08-18T21:49:44.9183053Z # logistics\_etl.tests.test\_smoke
2025-08-18T21:49:44.9183353Z 
2025-08-18T21:49:44.9183537Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T21:49:44.9183873Z 
2025-08-18T21:49:44.9184043Z # logistics\_etl.tests.test\_client
2025-08-18T21:49:44.9184337Z 
2025-08-18T21:49:44.9184488Z <a id="logistics_etl.tests"></a>
2025-08-18T21:49:44.9184770Z 
2025-08-18T21:49:44.9184905Z # logistics\_etl.tests
2025-08-18T21:49:44.9185125Z 
2025-08-18T21:49:44.9185273Z <a id="logistics_etl.flow"></a>
2025-08-18T21:49:44.9185544Z 
2025-08-18T21:49:44.9185674Z # logistics\_etl.flow
2025-08-18T21:49:44.9185889Z 
2025-08-18T21:49:44.9186050Z <a id="logistics_etl.client"></a>
2025-08-18T21:49:44.9186327Z 
2025-08-18T21:49:44.9186463Z # logistics\_etl.client
2025-08-18T21:49:44.9186674Z 
2025-08-18T21:49:44.9186810Z <a id="logistics_etl.cron"></a>
2025-08-18T21:49:44.9187440Z 
2025-08-18T21:49:44.9187563Z # logistics\_etl.cron
2025-08-18T21:49:44.9187798Z 
2025-08-18T21:49:44.9187943Z <a id="logistics_etl.db"></a>
2025-08-18T21:49:44.9188201Z 
2025-08-18T21:49:44.9214215Z # logistics\_etl.db
2025-08-18T21:49:44.9214481Z 
2025-08-18T21:49:44.9214644Z <a id="logistics_etl.repository"></a>
2025-08-18T21:49:44.9214942Z 
2025-08-18T21:49:44.9215073Z # logistics\_etl.repository
2025-08-18T21:49:44.9215305Z 
2025-08-18T21:49:44.9215423Z <a id="alert_bot"></a>
2025-08-18T21:49:44.9215611Z 
2025-08-18T21:49:44.9215717Z # alert\_bot
2025-08-18T21:49:44.9215868Z 
2025-08-18T21:49:44.9216027Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T21:49:44.9216302Z 
2025-08-18T21:49:44.9216429Z # alert\_bot.tests.test\_smoke
2025-08-18T21:49:44.9216656Z 
2025-08-18T21:49:44.9216779Z <a id="alert_bot.tests"></a>
2025-08-18T21:49:44.9216982Z 
2025-08-18T21:49:44.9217092Z # alert\_bot.tests
2025-08-18T21:49:44.9217486Z 
2025-08-18T21:49:44.9217619Z <a id="alert_bot.alert_bot"></a>
2025-08-18T21:49:44.9217872Z 
2025-08-18T21:49:44.9218001Z # alert\_bot.alert\_bot
2025-08-18T21:49:44.9218185Z 
2025-08-18T21:49:44.9218302Z <a id="alert_bot.rules"></a>
2025-08-18T21:49:44.9218524Z 
2025-08-18T21:49:44.9218624Z # alert\_bot.rules
2025-08-18T21:49:44.9218792Z 
2025-08-18T21:49:44.9218895Z <a id="common"></a>
2025-08-18T21:49:44.9219065Z 
2025-08-18T21:49:44.9219162Z # common
2025-08-18T21:49:44.9219302Z 
2025-08-18T21:49:44.9219420Z <a id="common.dsn"></a>
2025-08-18T21:49:44.9219607Z 
2025-08-18T21:49:44.9219706Z # common.dsn
2025-08-18T21:49:44.9219857Z 
2025-08-18T21:49:44.9219987Z <a id="common.dsn.build_dsn"></a>
2025-08-18T21:49:44.9220215Z 
2025-08-18T21:49:44.9220315Z #### build\_dsn
2025-08-18T21:49:44.9220478Z 
2025-08-18T21:49:44.9220575Z ```python
2025-08-18T21:49:44.9220850Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:49:44.9221213Z ```
2025-08-18T21:49:44.9221343Z 
2025-08-18T21:49:44.9221549Z Return a Postgres DSN, validating required variables.
2025-08-18T21:49:44.9221891Z 
2025-08-18T21:49:44.9222206Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T21:49:44.9223129Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T21:49:44.9223838Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T21:49:44.9224345Z missing.
2025-08-18T21:49:44.9224486Z 
2025-08-18T21:49:44.9224625Z <a id="common.models_vendor"></a>
2025-08-18T21:49:44.9224869Z 
2025-08-18T21:49:44.9224990Z # common.models\_vendor
2025-08-18T21:49:44.9225245Z 
2025-08-18T21:49:44.9225404Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T21:49:44.9225659Z 
2025-08-18T21:49:44.9225759Z ## Vendor Objects
2025-08-18T21:49:44.9225927Z 
2025-08-18T21:49:44.9226024Z ```python
2025-08-18T21:49:44.9226269Z class Vendor(Base)
2025-08-18T21:49:44.9226526Z ```
2025-08-18T21:49:44.9226666Z 
2025-08-18T21:49:44.9226878Z Vendor of inventory items.
2025-08-18T21:49:44.9227098Z 
2025-08-18T21:49:44.9227399Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T21:49:44.9227709Z 
2025-08-18T21:49:44.9227827Z ## VendorPrice Objects
2025-08-18T21:49:44.9228007Z 
2025-08-18T21:49:44.9228103Z ```python
2025-08-18T21:49:44.9228351Z class VendorPrice(Base)
2025-08-18T21:49:44.9228640Z ```
2025-08-18T21:49:44.9228770Z 
2025-08-18T21:49:44.9228938Z Association table linking vendors to pricing.
2025-08-18T21:49:44.9229225Z 
2025-08-18T21:49:44.9229358Z <a id="common.db_url"></a>
2025-08-18T21:49:44.9229569Z 
2025-08-18T21:49:44.9229673Z # common.db\_url
2025-08-18T21:49:44.9229851Z 
2025-08-18T21:49:44.9229978Z <a id="common.db_url.build_url"></a>
2025-08-18T21:49:44.9230228Z 
2025-08-18T21:49:44.9230330Z #### build\_url
2025-08-18T21:49:44.9230493Z 
2025-08-18T21:49:44.9230593Z ```python
2025-08-18T21:49:44.9230868Z def build_url(async_: bool = True) -> str
2025-08-18T21:49:44.9231229Z ```
2025-08-18T21:49:44.9231351Z 
2025-08-18T21:49:44.9231511Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:49:44.9231784Z 
2025-08-18T21:49:44.9231908Z <a id="common.keepa"></a>
2025-08-18T21:49:44.9232311Z 
2025-08-18T21:49:44.9232413Z # common.keepa
2025-08-18T21:49:44.9232566Z 
2025-08-18T21:49:44.9232682Z <a id="common.llm"></a>
2025-08-18T21:49:44.9232860Z 
2025-08-18T21:49:44.9232957Z # common.llm
2025-08-18T21:49:44.9233107Z 
2025-08-18T21:49:44.9233236Z <a id="common.settings"></a>
2025-08-18T21:49:44.9233443Z 
2025-08-18T21:49:44.9233548Z # common.settings
2025-08-18T21:49:44.9233717Z 
2025-08-18T21:49:44.9233827Z <a id="common.db"></a>
2025-08-18T21:49:44.9234009Z 
2025-08-18T21:49:44.9234107Z # common.db
2025-08-18T21:49:44.9234253Z 
2025-08-18T21:49:44.9234393Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T21:49:44.9234656Z 
2025-08-18T21:49:44.9234785Z #### build\_sqlalchemy\_url
2025-08-18T21:49:44.9234994Z 
2025-08-18T21:49:44.9235092Z ```python
2025-08-18T21:49:44.9235363Z def build_sqlalchemy_url() -> str
2025-08-18T21:49:44.9235690Z ```
2025-08-18T21:49:44.9235828Z 
2025-08-18T21:49:44.9235980Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:49:44.9236258Z 
2025-08-18T21:49:44.9236410Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T21:49:44.9236687Z 
2025-08-18T21:49:44.9236809Z #### build\_asyncpg\_dsn
2025-08-18T21:49:44.9236999Z 
2025-08-18T21:49:44.9237102Z ```python
2025-08-18T21:49:44.9237517Z def build_asyncpg_dsn() -> str
2025-08-18T21:49:44.9237835Z ```
2025-08-18T21:49:44.9237963Z 
2025-08-18T21:49:44.9238168Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:49:44.9238506Z 
2025-08-18T21:49:44.9238640Z <a id="common.db.refresh_mvs"></a>
2025-08-18T21:49:44.9238880Z 
2025-08-18T21:49:44.9238985Z #### refresh\_mvs
2025-08-18T21:49:44.9239148Z 
2025-08-18T21:49:44.9239250Z ```python
2025-08-18T21:49:44.9239564Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:49:44.9239950Z ```
2025-08-18T21:49:44.9240089Z 
2025-08-18T21:49:44.9240301Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:49:44.9240636Z 
2025-08-18T21:49:44.9240757Z <a id="common.config"></a>
2025-08-18T21:49:44.9240969Z 
2025-08-18T21:49:44.9241259Z # common.config
2025-08-18T21:49:44.9241422Z 
2025-08-18T21:49:44.9241548Z <a id="common.base"></a>
2025-08-18T21:49:44.9241741Z 
2025-08-18T21:49:44.9241840Z # common.base
2025-08-18T21:49:44.9241997Z 
2025-08-18T21:49:44.9242118Z <a id="common.base.Base"></a>
2025-08-18T21:49:44.9242330Z 
2025-08-18T21:49:44.9242430Z ## Base Objects
2025-08-18T21:49:44.9242597Z 
2025-08-18T21:49:44.9242697Z ```python
2025-08-18T21:49:44.9242950Z class Base(DeclarativeBase)
2025-08-18T21:49:44.9243259Z ```
2025-08-18T21:49:44.9243388Z 
2025-08-18T21:49:44.9243519Z Base class for SQLAlchemy models.
2025-08-18T21:49:44.9243745Z 
2025-08-18T21:49:44.9243851Z <a id="repricer"></a>
2025-08-18T21:49:44.9244037Z 
2025-08-18T21:49:44.9244136Z # repricer
2025-08-18T21:49:44.9244274Z 
2025-08-18T21:49:44.9244412Z <a id="repricer.app.schemas"></a>
2025-08-18T21:49:44.9244655Z 
2025-08-18T21:49:44.9244775Z # repricer.app.schemas
2025-08-18T21:49:44.9244965Z 
2025-08-18T21:49:44.9245106Z <a id="repricer.app.deps"></a>
2025-08-18T21:49:44.9245338Z 
2025-08-18T21:49:44.9245451Z # repricer.app.deps
2025-08-18T21:49:44.9245622Z 
2025-08-18T21:49:44.9245811Z Placeholder module for Keepa / SP-API clients.
2025-08-18T21:49:44.9246104Z 
2025-08-18T21:49:44.9246235Z <a id="repricer.app.logic"></a>
2025-08-18T21:49:44.9246464Z 
2025-08-18T21:49:44.9246578Z # repricer.app.logic
2025-08-18T21:49:44.9246761Z 
2025-08-18T21:49:44.9246920Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T21:49:44.9247340Z 
2025-08-18T21:49:44.9247446Z #### MIN\_MARGIN
2025-08-18T21:49:44.9247609Z 
2025-08-18T21:49:44.9247714Z 15 % ROI
2025-08-18T21:49:44.9247855Z 
2025-08-18T21:49:44.9248019Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T21:49:44.9248318Z 
2025-08-18T21:49:44.9248427Z #### compute\_price
2025-08-18T21:49:44.9248595Z 
2025-08-18T21:49:44.9248694Z ```python
2025-08-18T21:49:44.9249083Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T21:49:44.9249568Z ```
2025-08-18T21:49:44.9249951Z 
2025-08-18T21:49:44.9250134Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T21:49:44.9250578Z Replace with real competitive logic later.
2025-08-18T21:49:44.9250847Z 
2025-08-18T21:49:44.9250974Z <a id="repricer.app.main"></a>
2025-08-18T21:49:44.9251200Z 
2025-08-18T21:49:44.9251311Z # repricer.app.main
2025-08-18T21:49:44.9251485Z 
2025-08-18T21:49:44.9251606Z <a id="repricer.app"></a>
2025-08-18T21:49:44.9251800Z 
2025-08-18T21:49:44.9251906Z # repricer.app
2025-08-18T21:49:44.9252061Z 
2025-08-18T21:49:44.9252209Z <a id="repricer.tests.test_imports"></a>
2025-08-18T21:49:44.9252481Z 
2025-08-18T21:49:44.9252611Z # repricer.tests.test\_imports
2025-08-18T21:49:44.9252838Z 
2025-08-18T21:49:44.9252978Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T21:49:44.9253234Z 
2025-08-18T21:49:44.9253370Z # repricer.tests.test\_smoke
2025-08-18T21:49:44.9253589Z 
2025-08-18T21:49:44.9253711Z <a id="repricer.tests"></a>
2025-08-18T21:49:44.9253926Z 
2025-08-18T21:49:44.9254051Z # repricer.tests
2025-08-18T21:49:44.9254224Z 
2025-08-18T21:49:44.9254325Z <a id="db"></a>
2025-08-18T21:49:44.9254480Z 
2025-08-18T21:49:44.9254570Z # db
2025-08-18T21:49:44.9254699Z 
2025-08-18T21:49:44.9254815Z <a id="db.utils.views"></a>
2025-08-18T21:49:44.9255024Z 
2025-08-18T21:49:44.9255124Z # db.utils.views
2025-08-18T21:49:44.9255287Z 
2025-08-18T21:49:44.9255437Z <a id="db.utils.views.replace_view"></a>
2025-08-18T21:49:44.9255706Z 
2025-08-18T21:49:44.9255810Z #### replace\_view
2025-08-18T21:49:44.9255983Z 
2025-08-18T21:49:44.9256082Z ```python
2025-08-18T21:49:44.9256393Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T21:49:44.9256778Z ```
2025-08-18T21:49:44.9256904Z 
2025-08-18T21:49:44.9257042Z Drop and recreate a SQL view atomically.
2025-08-18T21:49:44.9257502Z 
2025-08-18T21:49:44.9257614Z <a id="db.utils"></a>
2025-08-18T21:49:44.9257792Z 
2025-08-18T21:49:44.9257897Z # db.utils
2025-08-18T21:49:44.9258033Z 
2025-08-18T21:49:44.9258155Z <a id="price_importer"></a>
2025-08-18T21:49:44.9258379Z 
2025-08-18T21:49:44.9258676Z # price\_importer
2025-08-18T21:49:44.9258846Z 
2025-08-18T21:49:44.9259012Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T21:49:44.9259303Z 
2025-08-18T21:49:44.9259448Z # price\_importer.services\_common.dsn
2025-08-18T21:49:44.9259703Z 
2025-08-18T21:49:44.9259909Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T21:49:44.9260241Z 
2025-08-18T21:49:44.9260344Z #### build\_dsn
2025-08-18T21:49:44.9260517Z 
2025-08-18T21:49:44.9260633Z ```python
2025-08-18T21:49:44.9260908Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:49:44.9261260Z ```
2025-08-18T21:49:44.9261389Z 
2025-08-18T21:49:44.9261493Z Return safe DSN.
2025-08-18T21:49:44.9261659Z 
2025-08-18T21:49:44.9262114Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T21:49:44.9262436Z 
2025-08-18T21:49:44.9262644Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T21:49:44.9262980Z 
2025-08-18T21:49:44.9263157Z # price\_importer.services\_common.models\_vendor
2025-08-18T21:49:44.9263488Z 
2025-08-18T21:49:44.9263657Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T21:49:44.9263953Z 
2025-08-18T21:49:44.9264104Z # price\_importer.services\_common.db\_url
2025-08-18T21:49:44.9264370Z 
2025-08-18T21:49:44.9264577Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T21:49:44.9264912Z 
2025-08-18T21:49:44.9265019Z #### build\_url
2025-08-18T21:49:44.9265181Z 
2025-08-18T21:49:44.9265281Z ```python
2025-08-18T21:49:44.9265558Z def build_url(async_: bool = True) -> str
2025-08-18T21:49:44.9265903Z ```
2025-08-18T21:49:44.9266041Z 
2025-08-18T21:49:44.9266192Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:49:44.9266462Z 
2025-08-18T21:49:44.9266633Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T21:49:44.9266933Z 
2025-08-18T21:49:44.9267082Z # price\_importer.services\_common.keepa
2025-08-18T21:49:44.9267528Z 
2025-08-18T21:49:44.9267689Z <a id="price_importer.services_common.llm"></a>
2025-08-18T21:49:44.9268187Z 
2025-08-18T21:49:44.9268331Z # price\_importer.services\_common.llm
2025-08-18T21:49:44.9268594Z 
2025-08-18T21:49:44.9268772Z <a id="price_importer.services_common.settings"></a>
2025-08-18T21:49:44.9269064Z 
2025-08-18T21:49:44.9269217Z # price\_importer.services\_common.settings
2025-08-18T21:49:44.9269488Z 
2025-08-18T21:49:44.9269641Z <a id="price_importer.services_common.db"></a>
2025-08-18T21:49:44.9269927Z 
2025-08-18T21:49:44.9270060Z # price\_importer.services\_common.db
2025-08-18T21:49:44.9270308Z 
2025-08-18T21:49:44.9270544Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T21:49:44.9270930Z 
2025-08-18T21:49:44.9271049Z #### build\_sqlalchemy\_url
2025-08-18T21:49:44.9271254Z 
2025-08-18T21:49:44.9271357Z ```python
2025-08-18T21:49:44.9271623Z def build_sqlalchemy_url() -> str
2025-08-18T21:49:44.9271945Z ```
2025-08-18T21:49:44.9272078Z 
2025-08-18T21:49:44.9272235Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:49:44.9272533Z 
2025-08-18T21:49:44.9272769Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T21:49:44.9273134Z 
2025-08-18T21:49:44.9273260Z #### build\_asyncpg\_dsn
2025-08-18T21:49:44.9273453Z 
2025-08-18T21:49:44.9273548Z ```python
2025-08-18T21:49:44.9273831Z def build_asyncpg_dsn() -> str
2025-08-18T21:49:44.9274128Z ```
2025-08-18T21:49:44.9274254Z 
2025-08-18T21:49:44.9274453Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:49:44.9274775Z 
2025-08-18T21:49:44.9274973Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T21:49:44.9275311Z 
2025-08-18T21:49:44.9275415Z #### refresh\_mvs
2025-08-18T21:49:44.9275579Z 
2025-08-18T21:49:44.9275685Z ```python
2025-08-18T21:49:44.9276006Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:49:44.9276409Z ```
2025-08-18T21:49:44.9276541Z 
2025-08-18T21:49:44.9276763Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:49:44.9277285Z 
2025-08-18T21:49:44.9277462Z <a id="price_importer.services_common"></a>
2025-08-18T21:49:44.9278037Z 
2025-08-18T21:49:44.9278179Z # price\_importer.services\_common
2025-08-18T21:49:44.9278433Z 
2025-08-18T21:49:44.9278597Z <a id="price_importer.services_common.base"></a>
2025-08-18T21:49:44.9278897Z 
2025-08-18T21:49:44.9279049Z # price\_importer.services\_common.base
2025-08-18T21:49:44.9279308Z 
2025-08-18T21:49:44.9279447Z <a id="price_importer.normaliser"></a>
2025-08-18T21:49:44.9279713Z 
2025-08-18T21:49:44.9279846Z # price\_importer.normaliser
2025-08-18T21:49:44.9280068Z 
2025-08-18T21:49:44.9280234Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T21:49:44.9280535Z 
2025-08-18T21:49:44.9280677Z # price\_importer.common.models\_vendor
2025-08-18T21:49:44.9280944Z 
2025-08-18T21:49:44.9281099Z <a id="price_importer.common.db_url"></a>
2025-08-18T21:49:44.9281371Z 
2025-08-18T21:49:44.9281500Z # price\_importer.common.db\_url
2025-08-18T21:49:44.9281742Z 
2025-08-18T21:49:44.9281903Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T21:49:44.9282219Z 
2025-08-18T21:49:44.9282320Z #### make\_dsn
2025-08-18T21:49:44.9282483Z 
2025-08-18T21:49:44.9282582Z ```python
2025-08-18T21:49:44.9282854Z def make_dsn(async_: bool = False) -> str
2025-08-18T21:49:44.9283214Z ```
2025-08-18T21:49:44.9283343Z 
2025-08-18T21:49:44.9283538Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T21:49:44.9283863Z 
2025-08-18T21:49:44.9284034Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T21:49:44.9284336Z 
2025-08-18T21:49:44.9284438Z #### build\_url
2025-08-18T21:49:44.9284595Z 
2025-08-18T21:49:44.9284698Z ```python
2025-08-18T21:49:44.9284969Z def build_url(async_: bool = False) -> str
2025-08-18T21:49:44.9285320Z ```
2025-08-18T21:49:44.9285448Z 
2025-08-18T21:49:44.9285631Z Return Postgres DSN built from environment variables.
2025-08-18T21:49:44.9285960Z 
2025-08-18T21:49:44.9286093Z <a id="price_importer.common"></a>
2025-08-18T21:49:44.9286332Z 
2025-08-18T21:49:44.9286455Z # price\_importer.common
2025-08-18T21:49:44.9286840Z 
2025-08-18T21:49:44.9286990Z <a id="price_importer.common.base"></a>
2025-08-18T21:49:44.9287408Z 
2025-08-18T21:49:44.9287547Z # price\_importer.common.base
2025-08-18T21:49:44.9287765Z 
2025-08-18T21:49:44.9287915Z <a id="price_importer.tests.conftest"></a>
2025-08-18T21:49:44.9288193Z 
2025-08-18T21:49:44.9288322Z # price\_importer.tests.conftest
2025-08-18T21:49:44.9288590Z 
2025-08-18T21:49:44.9288750Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T21:49:44.9289044Z 
2025-08-18T21:49:44.9289178Z # price\_importer.tests.test\_reader
2025-08-18T21:49:44.9289433Z 
2025-08-18T21:49:44.9289601Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T21:49:44.9289891Z 
2025-08-18T21:49:44.9290031Z # price\_importer.tests.test\_imports
2025-08-18T21:49:44.9290296Z 
2025-08-18T21:49:44.9290449Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T21:49:44.9290725Z 
2025-08-18T21:49:44.9290857Z # price\_importer.tests.test\_smoke
2025-08-18T21:49:44.9291119Z 
2025-08-18T21:49:44.9291290Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T21:49:44.9291600Z 
2025-08-18T21:49:44.9291751Z # price\_importer.tests.test\_normaliser
2025-08-18T21:49:44.9292020Z 
2025-08-18T21:49:44.9292154Z <a id="price_importer.tests"></a>
2025-08-18T21:49:44.9292394Z 
2025-08-18T21:49:44.9292511Z # price\_importer.tests
2025-08-18T21:49:44.9292702Z 
2025-08-18T21:49:44.9292832Z <a id="price_importer.reader"></a>
2025-08-18T21:49:44.9293077Z 
2025-08-18T21:49:44.9293198Z # price\_importer.reader
2025-08-18T21:49:44.9293401Z 
2025-08-18T21:49:44.9293551Z <a id="price_importer.repository"></a>
2025-08-18T21:49:44.9293808Z 
2025-08-18T21:49:44.9293932Z # price\_importer.repository
2025-08-18T21:49:44.9294156Z 
2025-08-18T21:49:44.9294287Z <a id="price_importer.import"></a>
2025-08-18T21:49:44.9294526Z 
2025-08-18T21:49:44.9294645Z # price\_importer.import
2025-08-18T21:49:44.9294845Z 
2025-08-18T21:49:44.9294955Z <a id="fees_h10"></a>
2025-08-18T21:49:44.9295134Z 
2025-08-18T21:49:44.9295251Z # fees\_h10
2025-08-18T21:49:44.9295574Z 
2025-08-18T21:49:44.9295692Z <a id="fees_h10.worker"></a>
2025-08-18T21:49:44.9295908Z 
2025-08-18T21:49:44.9296018Z # fees\_h10.worker
2025-08-18T21:49:44.9296185Z 
2025-08-18T21:49:44.9296336Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T21:49:44.9296619Z 
2025-08-18T21:49:44.9296733Z #### list\_active\_asins
2025-08-18T21:49:44.9296926Z 
2025-08-18T21:49:44.9297034Z ```python
2025-08-18T21:49:44.9297482Z def list_active_asins() -> list[str]
2025-08-18T21:49:44.9297827Z ```
2025-08-18T21:49:44.9297958Z 
2025-08-18T21:49:44.9298131Z Return known ASINs or an empty list if unavailable.
2025-08-18T21:49:44.9298457Z 
2025-08-18T21:49:44.9298591Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T21:49:44.9298842Z 
2025-08-18T21:49:44.9298965Z # fees\_h10.tests.test\_smoke
2025-08-18T21:49:44.9299191Z 
2025-08-18T21:49:44.9299307Z <a id="fees_h10.tests"></a>
2025-08-18T21:49:44.9299503Z 
2025-08-18T21:49:44.9299617Z # fees\_h10.tests
2025-08-18T21:49:44.9299790Z 
2025-08-18T21:49:44.9299915Z <a id="fees_h10.client"></a>
2025-08-18T21:49:44.9300131Z 
2025-08-18T21:49:44.9300237Z # fees\_h10.client
2025-08-18T21:49:44.9300408Z 
2025-08-18T21:49:44.9300532Z <a id="fees_h10.repository"></a>
2025-08-18T21:49:44.9300771Z 
2025-08-18T21:49:44.9300887Z # fees\_h10.repository
2025-08-18T21:49:44.9301068Z 
2025-08-18T21:49:44.9301182Z <a id="emailer"></a>
2025-08-18T21:49:44.9301357Z 
2025-08-18T21:49:44.9301455Z # emailer
2025-08-18T21:49:44.9301596Z 
2025-08-18T21:49:44.9301769Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T21:49:44.9302060Z 
2025-08-18T21:49:44.9302195Z # emailer.tests.test\_import\_emailer
2025-08-18T21:49:44.9302465Z 
2025-08-18T21:49:44.9302605Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T21:49:44.9302852Z 
2025-08-18T21:49:44.9302982Z # emailer.tests.test\_smoke
2025-08-18T21:49:44.9303193Z 
2025-08-18T21:49:44.9303311Z <a id="emailer.tests"></a>
2025-08-18T21:49:44.9303513Z 
2025-08-18T21:49:44.9303629Z # emailer.tests
2025-08-18T21:49:44.9303984Z 
2025-08-18T21:49:44.9304129Z <a id="emailer.generate_body"></a>
2025-08-18T21:49:44.9362956Z 
2025-08-18T21:49:44.9363118Z # emailer.generate\_body
2025-08-18T21:49:44.9363297Z 
2025-08-18T21:49:44.9363385Z <a id="llm_server"></a>
2025-08-18T21:49:44.9363528Z 
2025-08-18T21:49:44.9363602Z # llm\_server
2025-08-18T21:49:44.9363714Z 
2025-08-18T21:49:44.9363810Z <a id="llm_server.app"></a>
2025-08-18T21:49:44.9363957Z 
2025-08-18T21:49:44.9364029Z # llm\_server.app
2025-08-18T21:49:44.9364149Z 
