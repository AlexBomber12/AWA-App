2025-08-17T13:39:08.2174524Z ##[group]Run pydoc-markdown
2025-08-17T13:39:08.2174941Z [36;1mpydoc-markdown[0m
2025-08-17T13:39:08.2215171Z shell: /usr/bin/bash -e {0}
2025-08-17T13:39:08.2215505Z env:
2025-08-17T13:39:08.2215844Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:39:08.2216316Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T13:39:08.2216777Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:39:08.2217236Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:39:08.2217678Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:39:08.2218117Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T13:39:08.2218503Z ##[endgroup]
2025-08-17T13:39:08.5615334Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T13:39:08.5616345Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T13:39:08.5616941Z In "pydoc-markdown.yml"
2025-08-17T13:39:08.5617448Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T13:39:08.5618325Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T13:39:08.5619306Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T13:39:08.5620004Z 
2025-08-17T13:39:08.7720540Z <a id="__init__"></a>
2025-08-17T13:39:08.7720901Z 
2025-08-17T13:39:08.7721033Z # \_\_init\_\_
2025-08-17T13:39:08.7721231Z 
2025-08-17T13:39:08.7721366Z <a id="api"></a>
2025-08-17T13:39:08.7721590Z 
2025-08-17T13:39:08.7721714Z # api
2025-08-17T13:39:08.7721898Z 
2025-08-17T13:39:08.7722073Z <a id="api.tests.test_llm"></a>
2025-08-17T13:39:08.7722369Z 
2025-08-17T13:39:08.7722521Z # api.tests.test\_llm
2025-08-17T13:39:08.7722757Z 
2025-08-17T13:39:08.7722939Z <a id="api.tests.test_imports"></a>
2025-08-17T13:39:08.7723258Z 
2025-08-17T13:39:08.7723414Z # api.tests.test\_imports
2025-08-17T13:39:08.7723669Z 
2025-08-17T13:39:08.7723840Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T13:39:08.7724175Z 
2025-08-17T13:39:08.7724351Z # api.tests.test\_entrypoint
2025-08-17T13:39:08.7724696Z 
2025-08-17T13:39:08.7724879Z <a id="api.tests.test_health"></a>
2025-08-17T13:39:08.7725682Z 
2025-08-17T13:39:08.7725869Z # api.tests.test\_health
2025-08-17T13:39:08.7726147Z 
2025-08-17T13:39:08.7726329Z <a id="api.migrations.env"></a>
2025-08-17T13:39:08.7726644Z 
2025-08-17T13:39:08.7726804Z # api.migrations.env
2025-08-17T13:39:08.7727051Z 
2025-08-17T13:39:08.7727310Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T13:39:08.7727761Z 
2025-08-17T13:39:08.7727990Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T13:39:08.7728388Z 
2025-08-17T13:39:08.7728645Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T13:39:08.7729069Z 
2025-08-17T13:39:08.7729397Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T13:39:08.7729759Z 
2025-08-17T13:39:08.7729985Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T13:39:08.7730256Z 
2025-08-17T13:39:08.7730409Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T13:39:08.7730928Z 
2025-08-17T13:39:08.7731060Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T13:39:08.7731282Z 
2025-08-17T13:39:08.7731399Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T13:39:08.7731593Z 
2025-08-17T13:39:08.7731713Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T13:39:08.7731929Z 
2025-08-17T13:39:08.7732034Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T13:39:08.7732226Z 
2025-08-17T13:39:08.7732359Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T13:39:08.7732577Z 
2025-08-17T13:39:08.7732688Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T13:39:08.7732894Z 
2025-08-17T13:39:08.7733015Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T13:39:08.7733222Z 
2025-08-17T13:39:08.7733334Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T13:39:08.7733534Z 
2025-08-17T13:39:08.7733659Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T13:39:08.7734076Z 
2025-08-17T13:39:08.7734189Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T13:39:08.7734382Z 
2025-08-17T13:39:08.7734509Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T13:39:08.7734728Z 
2025-08-17T13:39:08.7734840Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T13:39:08.7735284Z 
2025-08-17T13:39:08.7735403Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T13:39:08.7735611Z 
2025-08-17T13:39:08.7735706Z # api.migrations.versions.0001\_baseline
2025-08-17T13:39:08.7735885Z 
2025-08-17T13:39:08.7735983Z <a id="api.migrations.versions"></a>
2025-08-17T13:39:08.7736155Z 
2025-08-17T13:39:08.7736238Z # api.migrations.versions
2025-08-17T13:39:08.7736380Z 
2025-08-17T13:39:08.7736459Z <a id="api.migrations"></a>
2025-08-17T13:39:08.7736598Z 
2025-08-17T13:39:08.7736668Z # api.migrations
2025-08-17T13:39:08.7736785Z 
2025-08-17T13:39:08.7736854Z <a id="api.db"></a>
2025-08-17T13:39:08.7736966Z 
2025-08-17T13:39:08.7737052Z # api.db
2025-08-17T13:39:08.7737145Z 
2025-08-17T13:39:08.7737228Z <a id="api.routes.stats"></a>
2025-08-17T13:39:08.7737381Z 
2025-08-17T13:39:08.7737453Z # api.routes.stats
2025-08-17T13:39:08.7737565Z 
2025-08-17T13:39:08.7737653Z <a id="api.routes.stats.kpi"></a>
2025-08-17T13:39:08.7737817Z 
2025-08-17T13:39:08.7737885Z #### kpi
2025-08-17T13:39:08.7737975Z 
2025-08-17T13:39:08.7738048Z ```python
2025-08-17T13:39:08.7738224Z @router.get("/stats/kpi")
2025-08-17T13:39:08.7738474Z def kpi() -> List[Dict[str, int]]
2025-08-17T13:39:08.7738689Z ```
2025-08-17T13:39:08.7738775Z 
2025-08-17T13:39:08.7738861Z Return KPI metrics (mock).
2025-08-17T13:39:08.7738997Z 
2025-08-17T13:39:08.7739100Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T13:39:08.7739294Z 
2025-08-17T13:39:08.7739363Z #### roi\_by\_vendor
2025-08-17T13:39:08.7739478Z 
2025-08-17T13:39:08.7739549Z ```python
2025-08-17T13:39:08.7739719Z @router.get("/stats/roi_by_vendor")
2025-08-17T13:39:08.7739975Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T13:39:08.7740221Z ```
2025-08-17T13:39:08.7740307Z 
2025-08-17T13:39:08.7740393Z Return ROI percent by vendor.
2025-08-17T13:39:08.7740539Z 
2025-08-17T13:39:08.7740629Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T13:39:08.7740800Z 
2025-08-17T13:39:08.7740861Z #### roi\_trend
2025-08-17T13:39:08.7740963Z 
2025-08-17T13:39:08.7741027Z ```python
2025-08-17T13:39:08.7741189Z @router.get("/stats/roi_trend")
2025-08-17T13:39:08.7741426Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T13:39:08.7741653Z ```
2025-08-17T13:39:08.7741731Z 
2025-08-17T13:39:08.7741812Z Return 30-day ROI trend.
2025-08-17T13:39:08.7741937Z 
2025-08-17T13:39:08.7742015Z <a id="api.routes.roi"></a>
2025-08-17T13:39:08.7742151Z 
2025-08-17T13:39:08.7742218Z # api.routes.roi
2025-08-17T13:39:08.7742408Z 
2025-08-17T13:39:08.7742492Z <a id="api.routes.health"></a>
2025-08-17T13:39:08.7742665Z 
2025-08-17T13:39:08.7742736Z # api.routes.health
2025-08-17T13:39:08.7742852Z 
2025-08-17T13:39:08.7742945Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T13:39:08.7743249Z 
2025-08-17T13:39:08.7743318Z #### MAX\_SKEW
2025-08-17T13:39:08.7743415Z 
2025-08-17T13:39:08.7743476Z seconds
2025-08-17T13:39:08.7743559Z 
2025-08-17T13:39:08.7743653Z <a id="api.routes.health.health"></a>
2025-08-17T13:39:08.7743814Z 
2025-08-17T13:39:08.7743875Z #### health
2025-08-17T13:39:08.7743971Z 
2025-08-17T13:39:08.7744034Z ```python
2025-08-17T13:39:08.7744221Z @router.get("/health", include_in_schema=False)
2025-08-17T13:39:08.7744600Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T13:39:08.7744944Z ```
2025-08-17T13:39:08.7745139Z 
2025-08-17T13:39:08.7745256Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T13:39:08.7745461Z 
2025-08-17T13:39:08.7745548Z <a id="api.routes.repository"></a>
2025-08-17T13:39:08.7745704Z 
2025-08-17T13:39:08.7745779Z # api.routes.repository
2025-08-17T13:39:08.7745907Z 
2025-08-17T13:39:08.7745979Z <a id="api.routes"></a>
2025-08-17T13:39:08.7746422Z 
2025-08-17T13:39:08.7746555Z # api.routes
2025-08-17T13:39:08.7746726Z 
2025-08-17T13:39:08.7746869Z <a id="api.models.fee"></a>
2025-08-17T13:39:08.7747114Z 
2025-08-17T13:39:08.7747245Z # api.models.fee
2025-08-17T13:39:08.7747436Z 
2025-08-17T13:39:08.7747566Z <a id="api.models"></a>
2025-08-17T13:39:08.7747790Z 
2025-08-17T13:39:08.7747907Z # api.models
2025-08-17T13:39:08.7748075Z 
2025-08-17T13:39:08.7748224Z <a id="api.roi_repository"></a>
2025-08-17T13:39:08.7748483Z 
2025-08-17T13:39:08.7748559Z # api.roi\_repository
2025-08-17T13:39:08.7748678Z 
2025-08-17T13:39:08.7748753Z <a id="api.main"></a>
2025-08-17T13:39:08.7748863Z 
2025-08-17T13:39:08.7748924Z # api.main
2025-08-17T13:39:08.7749018Z 
2025-08-17T13:39:08.7749094Z <a id="api.main.ready"></a>
2025-08-17T13:39:08.7749223Z 
2025-08-17T13:39:08.7749287Z #### ready
2025-08-17T13:39:08.7749377Z 
2025-08-17T13:39:08.7749439Z ```python
2025-08-17T13:39:08.7749714Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T13:39:08.7750172Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T13:39:08.7750525Z                                                                       str]
2025-08-17T13:39:08.7750759Z ```
2025-08-17T13:39:08.7750847Z 
2025-08-17T13:39:08.7750943Z Return 200 only when migrations are at head.
2025-08-17T13:39:08.7751115Z 
2025-08-17T13:39:08.7751187Z <a id="api.config"></a>
2025-08-17T13:39:08.7751310Z 
2025-08-17T13:39:08.7751372Z # api.config
2025-08-17T13:39:08.7751469Z 
2025-08-17T13:39:08.7751536Z <a id="etl"></a>
2025-08-17T13:39:08.7751638Z 
2025-08-17T13:39:08.7751695Z # etl
2025-08-17T13:39:08.7751783Z 
2025-08-17T13:39:08.7751862Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T13:39:08.7752008Z 
2025-08-17T13:39:08.7752079Z # etl.fba\_fee\_ingestor
2025-08-17T13:39:08.7752205Z 
2025-08-17T13:39:08.7752284Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T13:39:08.7752426Z 
2025-08-17T13:39:08.7752503Z # etl.sp\_fees\_ingestor
2025-08-17T13:39:08.7752624Z 
2025-08-17T13:39:08.7752706Z <a id="etl.keepa_ingestor"></a>
2025-08-17T13:39:08.7752845Z 
2025-08-17T13:39:08.7752919Z # etl.keepa\_ingestor
2025-08-17T13:39:08.7753032Z 
2025-08-17T13:39:08.7753098Z <a id="etl.db"></a>
2025-08-17T13:39:08.7753210Z 
2025-08-17T13:39:08.7753269Z # etl.db
2025-08-17T13:39:08.7753355Z 
2025-08-17T13:39:08.7753465Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T13:39:08.7753649Z 
2025-08-17T13:39:08.7753735Z # etl.dialects.amazon\_reimbursements
2025-08-17T13:39:08.7753895Z 
2025-08-17T13:39:08.7753988Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T13:39:08.7754152Z 
2025-08-17T13:39:08.7754231Z # etl.dialects.amazon\_returns
2025-08-17T13:39:08.7754377Z 
2025-08-17T13:39:08.7754458Z <a id="etl.dialects"></a>
2025-08-17T13:39:08.7754584Z 
2025-08-17T13:39:08.7754647Z # etl.dialects
2025-08-17T13:39:08.7754755Z 
2025-08-17T13:39:08.7754824Z <a id="ingest"></a>
2025-08-17T13:39:08.7754928Z 
2025-08-17T13:39:08.7755137Z # ingest
2025-08-17T13:39:08.7755229Z 
2025-08-17T13:39:08.7755481Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T13:39:08.7755636Z 
2025-08-17T13:39:08.7755717Z # ingest.tests.test\_smoke
2025-08-17T13:39:08.7755843Z 
2025-08-17T13:39:08.7755915Z <a id="ingest.tests"></a>
2025-08-17T13:39:08.7756043Z 
2025-08-17T13:39:08.7756106Z # ingest.tests
2025-08-17T13:39:08.7756201Z 
2025-08-17T13:39:08.7756281Z <a id="ingest.upload_router"></a>
2025-08-17T13:39:08.7756435Z 
2025-08-17T13:39:08.7756508Z # ingest.upload\_router
2025-08-17T13:39:08.7756626Z 
2025-08-17T13:39:08.7756709Z <a id="ingest.email_watcher"></a>
2025-08-17T13:39:08.7756851Z 
2025-08-17T13:39:08.7756922Z # ingest.email\_watcher
2025-08-17T13:39:08.7757042Z 
2025-08-17T13:39:08.7757128Z <a id="ingest.email_watcher.main"></a>
2025-08-17T13:39:08.7757287Z 
2025-08-17T13:39:08.7757347Z #### main
2025-08-17T13:39:08.7757438Z 
2025-08-17T13:39:08.7757499Z ```python
2025-08-17T13:39:08.7757665Z def main() -> dict[str, str]
2025-08-17T13:39:08.7757854Z ```
2025-08-17T13:39:08.7757933Z 
2025-08-17T13:39:08.7758197Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T13:39:08.7758429Z 
2025-08-17T13:39:08.7758555Z Returns {"status": "success"} when processing completes.
2025-08-17T13:39:08.7758769Z 
2025-08-17T13:39:08.7758849Z <a id="ingest.ingest_router"></a>
2025-08-17T13:39:08.7759148Z 
2025-08-17T13:39:08.7759293Z # ingest.ingest\_router
2025-08-17T13:39:08.7759452Z 
2025-08-17T13:39:08.7759524Z <a id="logistics_etl"></a>
2025-08-17T13:39:08.7759652Z 
2025-08-17T13:39:08.7759722Z # logistics\_etl
2025-08-17T13:39:08.7759826Z 
2025-08-17T13:39:08.7759899Z Daily logistics ETL job.
2025-08-17T13:39:08.7760027Z 
2025-08-17T13:39:08.7760107Z <a id="logistics_etl.__main__"></a>
2025-08-17T13:39:08.7760255Z 
2025-08-17T13:39:08.7760329Z # logistics\_etl.\_\_main\_\_
2025-08-17T13:39:08.7760469Z 
2025-08-17T13:39:08.7760545Z <a id="logistics_etl.dsn"></a>
2025-08-17T13:39:08.7760677Z 
2025-08-17T13:39:08.7760750Z # logistics\_etl.dsn
2025-08-17T13:39:08.7760861Z 
2025-08-17T13:39:08.7760987Z Local DSN builder to avoid cross-service dependency.
2025-08-17T13:39:08.7761192Z 
2025-08-17T13:39:08.7761278Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T13:39:08.7761442Z 
2025-08-17T13:39:08.7761504Z #### build\_dsn
2025-08-17T13:39:08.7761610Z 
2025-08-17T13:39:08.7761671Z ```python
2025-08-17T13:39:08.7761847Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:39:08.7762060Z ```
2025-08-17T13:39:08.7762138Z 
2025-08-17T13:39:08.7762279Z Return a Postgres DSN assembled from environment variables.
2025-08-17T13:39:08.7762505Z 
2025-08-17T13:39:08.7762659Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T13:39:08.7763056Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T13:39:08.7763400Z error when any required variable is missing.
2025-08-17T13:39:08.7763580Z 
2025-08-17T13:39:08.7763674Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T13:39:08.7763844Z 
2025-08-17T13:39:08.7763932Z # logistics\_etl.tests.conftest
2025-08-17T13:39:08.7764085Z 
2025-08-17T13:39:08.7764186Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T13:39:08.7764377Z 
2025-08-17T13:39:08.7764464Z # logistics\_etl.tests.test\_repository
2025-08-17T13:39:08.7764629Z 
2025-08-17T13:39:08.7764720Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T13:39:08.7764898Z 
2025-08-17T13:39:08.7765170Z # logistics\_etl.tests.test\_cron
2025-08-17T13:39:08.7765368Z 
2025-08-17T13:39:08.7765474Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T13:39:08.7765650Z 
2025-08-17T13:39:08.7765732Z # logistics\_etl.tests.test\_imports
2025-08-17T13:39:08.7765892Z 
2025-08-17T13:39:08.7765983Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T13:39:08.7766150Z 
2025-08-17T13:39:08.7766232Z # logistics\_etl.tests.test\_smoke
2025-08-17T13:39:08.7766391Z 
2025-08-17T13:39:08.7766482Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T13:39:08.7766648Z 
2025-08-17T13:39:08.7766737Z # logistics\_etl.tests.test\_client
2025-08-17T13:39:08.7766893Z 
2025-08-17T13:39:08.7767106Z <a id="logistics_etl.tests"></a>
2025-08-17T13:39:08.7767254Z 
2025-08-17T13:39:08.7767327Z # logistics\_etl.tests
2025-08-17T13:39:08.7767444Z 
2025-08-17T13:39:08.7767519Z <a id="logistics_etl.flow"></a>
2025-08-17T13:39:08.7767661Z 
2025-08-17T13:39:08.7767729Z # logistics\_etl.flow
2025-08-17T13:39:08.7767842Z 
2025-08-17T13:39:08.7767927Z <a id="logistics_etl.client"></a>
2025-08-17T13:39:08.7768071Z 
2025-08-17T13:39:08.7768143Z # logistics\_etl.client
2025-08-17T13:39:08.7768263Z 
2025-08-17T13:39:08.7768339Z <a id="logistics_etl.cron"></a>
2025-08-17T13:39:08.7768472Z 
2025-08-17T13:39:08.7768540Z # logistics\_etl.cron
2025-08-17T13:39:08.7768653Z 
2025-08-17T13:39:08.7768728Z <a id="logistics_etl.db"></a>
2025-08-17T13:39:08.7768862Z 
2025-08-17T13:39:08.7768932Z # logistics\_etl.db
2025-08-17T13:39:08.7769037Z 
2025-08-17T13:39:08.7769122Z <a id="logistics_etl.repository"></a>
2025-08-17T13:39:08.7769286Z 
2025-08-17T13:39:08.7769362Z # logistics\_etl.repository
2025-08-17T13:39:08.7769868Z 
2025-08-17T13:39:08.7769998Z <a id="alert_bot"></a>
2025-08-17T13:39:08.7770221Z 
2025-08-17T13:39:08.7770335Z # alert\_bot
2025-08-17T13:39:08.7770511Z 
2025-08-17T13:39:08.7770676Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T13:39:08.7770986Z 
2025-08-17T13:39:08.7771135Z # alert\_bot.tests.test\_smoke
2025-08-17T13:39:08.7771370Z 
2025-08-17T13:39:08.7771454Z <a id="alert_bot.tests"></a>
2025-08-17T13:39:08.7771586Z 
2025-08-17T13:39:08.7771652Z # alert\_bot.tests
2025-08-17T13:39:08.7771765Z 
2025-08-17T13:39:08.7771845Z <a id="alert_bot.alert_bot"></a>
2025-08-17T13:39:08.7771987Z 
2025-08-17T13:39:08.7772061Z # alert\_bot.alert\_bot
2025-08-17T13:39:08.7772179Z 
2025-08-17T13:39:08.7772252Z <a id="alert_bot.rules"></a>
2025-08-17T13:39:08.7772381Z 
2025-08-17T13:39:08.7772454Z # alert\_bot.rules
2025-08-17T13:39:08.7772558Z 
2025-08-17T13:39:08.7772622Z <a id="common"></a>
2025-08-17T13:39:08.7772736Z 
2025-08-17T13:39:08.7772796Z # common
2025-08-17T13:39:08.7772882Z 
2025-08-17T13:39:08.7772967Z <a id="common.dsn"></a>
2025-08-17T13:39:08.7773089Z 
2025-08-17T13:39:08.7773152Z # common.dsn
2025-08-17T13:39:08.7773247Z 
2025-08-17T13:39:08.7773335Z <a id="common.dsn.build_dsn"></a>
2025-08-17T13:39:08.7773486Z 
2025-08-17T13:39:08.7773550Z #### build\_dsn
2025-08-17T13:39:08.7773655Z 
2025-08-17T13:39:08.7773719Z ```python
2025-08-17T13:39:08.7773889Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:39:08.7774129Z ```
2025-08-17T13:39:08.7774218Z 
2025-08-17T13:39:08.7774338Z Return a Postgres DSN, validating required variables.
2025-08-17T13:39:08.7774545Z 
2025-08-17T13:39:08.7774739Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T13:39:08.7775339Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T13:39:08.7775761Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T13:39:08.7776066Z missing.
2025-08-17T13:39:08.7776158Z 
2025-08-17T13:39:08.7776240Z <a id="common.models_vendor"></a>
2025-08-17T13:39:08.7776400Z 
2025-08-17T13:39:08.7776478Z # common.models\_vendor
2025-08-17T13:39:08.7776599Z 
2025-08-17T13:39:08.7776690Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T13:39:08.7776858Z 
2025-08-17T13:39:08.7776931Z ## Vendor Objects
2025-08-17T13:39:08.7777035Z 
2025-08-17T13:39:08.7777097Z ```python
2025-08-17T13:39:08.7777254Z class Vendor(Base)
2025-08-17T13:39:08.7777413Z ```
2025-08-17T13:39:08.7777505Z 
2025-08-17T13:39:08.7777580Z Vendor of inventory items.
2025-08-17T13:39:08.7777711Z 
2025-08-17T13:39:08.7777818Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T13:39:08.7777999Z 
2025-08-17T13:39:08.7778070Z ## VendorPrice Objects
2025-08-17T13:39:08.7778186Z 
2025-08-17T13:39:08.7778252Z ```python
2025-08-17T13:39:08.7778409Z class VendorPrice(Base)
2025-08-17T13:39:08.7778586Z ```
2025-08-17T13:39:08.7778666Z 
2025-08-17T13:39:08.7778767Z Association table linking vendors to pricing.
2025-08-17T13:39:08.7778951Z 
2025-08-17T13:39:08.7779033Z <a id="common.db_url"></a>
2025-08-17T13:39:08.7779627Z 
2025-08-17T13:39:08.7779706Z # common.db\_url
2025-08-17T13:39:08.7779816Z 
2025-08-17T13:39:08.7779903Z <a id="common.db_url.build_url"></a>
2025-08-17T13:39:08.7780062Z 
2025-08-17T13:39:08.7780134Z #### build\_url
2025-08-17T13:39:08.7780235Z 
2025-08-17T13:39:08.7780299Z ```python
2025-08-17T13:39:08.7780476Z def build_url(async_: bool = True) -> str
2025-08-17T13:39:08.7780697Z ```
2025-08-17T13:39:08.7780784Z 
2025-08-17T13:39:08.7780881Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:39:08.7781056Z 
2025-08-17T13:39:08.7781139Z <a id="common.keepa"></a>
2025-08-17T13:39:08.7781268Z 
2025-08-17T13:39:08.7781333Z # common.keepa
2025-08-17T13:39:08.7781438Z 
2025-08-17T13:39:08.7781509Z <a id="common.llm"></a>
2025-08-17T13:39:08.7781625Z 
2025-08-17T13:39:08.7781686Z # common.llm
2025-08-17T13:39:08.7781785Z 
2025-08-17T13:39:08.7781865Z <a id="common.settings"></a>
2025-08-17T13:39:08.7782003Z 
2025-08-17T13:39:08.7782074Z # common.settings
2025-08-17T13:39:08.7782307Z 
2025-08-17T13:39:08.7782375Z <a id="common.db"></a>
2025-08-17T13:39:08.7782489Z 
2025-08-17T13:39:08.7782558Z # common.db
2025-08-17T13:39:08.7782650Z 
2025-08-17T13:39:08.7782742Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T13:39:08.7782918Z 
2025-08-17T13:39:08.7782990Z #### build\_sqlalchemy\_url
2025-08-17T13:39:08.7783120Z 
2025-08-17T13:39:08.7783186Z ```python
2025-08-17T13:39:08.7783351Z def build_sqlalchemy_url() -> str
2025-08-17T13:39:08.7783559Z ```
2025-08-17T13:39:08.7783641Z 
2025-08-17T13:39:08.7783734Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:39:08.7783903Z 
2025-08-17T13:39:08.7783995Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T13:39:08.7784160Z 
2025-08-17T13:39:08.7784233Z #### build\_asyncpg\_dsn
2025-08-17T13:39:08.7784362Z 
2025-08-17T13:39:08.7784423Z ```python
2025-08-17T13:39:08.7784585Z def build_asyncpg_dsn() -> str
2025-08-17T13:39:08.7784786Z ```
2025-08-17T13:39:08.7784878Z 
2025-08-17T13:39:08.7785127Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:39:08.7785355Z 
2025-08-17T13:39:08.7785438Z <a id="common.db.refresh_mvs"></a>
2025-08-17T13:39:08.7785590Z 
2025-08-17T13:39:08.7785666Z #### refresh\_mvs
2025-08-17T13:39:08.7785766Z 
2025-08-17T13:39:08.7785826Z ```python
2025-08-17T13:39:08.7786023Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:39:08.7786268Z ```
2025-08-17T13:39:08.7786354Z 
2025-08-17T13:39:08.7786489Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:39:08.7786705Z 
2025-08-17T13:39:08.7786787Z <a id="common.config"></a>
2025-08-17T13:39:08.7786913Z 
2025-08-17T13:39:08.7786978Z # common.config
2025-08-17T13:39:08.7787080Z 
2025-08-17T13:39:08.7787159Z <a id="common.base"></a>
2025-08-17T13:39:08.7787281Z 
2025-08-17T13:39:08.7787343Z # common.base
2025-08-17T13:39:08.7787444Z 
2025-08-17T13:39:08.7787521Z <a id="common.base.Base"></a>
2025-08-17T13:39:08.7787658Z 
2025-08-17T13:39:08.7787730Z ## Base Objects
2025-08-17T13:39:08.7787836Z 
2025-08-17T13:39:08.7787896Z ```python
2025-08-17T13:39:08.7788064Z class Base(DeclarativeBase)
2025-08-17T13:39:08.7788250Z ```
2025-08-17T13:39:08.7788330Z 
2025-08-17T13:39:08.7788424Z Base class for SQLAlchemy models.
2025-08-17T13:39:08.7788571Z 
2025-08-17T13:39:08.7788642Z <a id="repricer"></a>
2025-08-17T13:39:08.7788760Z 
2025-08-17T13:39:08.7788823Z # repricer
2025-08-17T13:39:08.7788912Z 
2025-08-17T13:39:08.7789002Z <a id="repricer.app.schemas"></a>
2025-08-17T13:39:08.7789148Z 
2025-08-17T13:39:08.7789221Z # repricer.app.schemas
2025-08-17T13:39:08.7789341Z 
2025-08-17T13:39:08.7789428Z <a id="repricer.app.deps"></a>
2025-08-17T13:39:08.7789568Z 
2025-08-17T13:39:08.7789638Z # repricer.app.deps
2025-08-17T13:39:08.7789751Z 
2025-08-17T13:39:08.7789865Z Placeholder module for Keepa / SP-API clients.
2025-08-17T13:39:08.7790048Z 
2025-08-17T13:39:08.7790134Z <a id="repricer.app.logic"></a>
2025-08-17T13:39:08.7790275Z 
2025-08-17T13:39:08.7790346Z # repricer.app.logic
2025-08-17T13:39:08.7790585Z 
2025-08-17T13:39:08.7790688Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T13:39:08.7790861Z 
2025-08-17T13:39:08.7790924Z #### MIN\_MARGIN
2025-08-17T13:39:08.7791029Z 
2025-08-17T13:39:08.7791088Z 15 % ROI
2025-08-17T13:39:08.7791173Z 
2025-08-17T13:39:08.7791275Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T13:39:08.7791460Z 
2025-08-17T13:39:08.7792763Z #### compute\_price
2025-08-17T13:39:08.7792972Z 
2025-08-17T13:39:08.7793081Z ```python
2025-08-17T13:39:08.7793503Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T13:39:08.7794016Z ```
2025-08-17T13:39:08.7794150Z 
2025-08-17T13:39:08.7794335Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T13:39:08.7794690Z Replace with real competitive logic later.
2025-08-17T13:39:08.7794866Z 
2025-08-17T13:39:08.7795132Z <a id="repricer.app.main"></a>
2025-08-17T13:39:08.7795298Z 
2025-08-17T13:39:08.7795374Z # repricer.app.main
2025-08-17T13:39:08.7795488Z 
2025-08-17T13:39:08.7795719Z <a id="repricer.app"></a>
2025-08-17T13:39:08.7795856Z 
2025-08-17T13:39:08.7795921Z # repricer.app
2025-08-17T13:39:08.7796030Z 
2025-08-17T13:39:08.7796124Z <a id="repricer.tests.test_imports"></a>
2025-08-17T13:39:08.7796297Z 
2025-08-17T13:39:08.7796383Z # repricer.tests.test\_imports
2025-08-17T13:39:08.7796524Z 
2025-08-17T13:39:08.7796610Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T13:39:08.7796778Z 
2025-08-17T13:39:08.7796860Z # repricer.tests.test\_smoke
2025-08-17T13:39:08.7796998Z 
2025-08-17T13:39:08.7797075Z <a id="repricer.tests"></a>
2025-08-17T13:39:08.7797210Z 
2025-08-17T13:39:08.7797276Z # repricer.tests
2025-08-17T13:39:08.7797382Z 
2025-08-17T13:39:08.7797448Z <a id="db"></a>
2025-08-17T13:39:08.7797546Z 
2025-08-17T13:39:08.7797602Z # db
2025-08-17T13:39:08.7797684Z 
2025-08-17T13:39:08.7797765Z <a id="db.utils.views"></a>
2025-08-17T13:39:08.7797891Z 
2025-08-17T13:39:08.7797958Z # db.utils.views
2025-08-17T13:39:08.7798065Z 
2025-08-17T13:39:08.7798157Z <a id="db.utils.views.replace_view"></a>
2025-08-17T13:39:08.7798336Z 
2025-08-17T13:39:08.7798408Z #### replace\_view
2025-08-17T13:39:08.7798515Z 
2025-08-17T13:39:08.7798575Z ```python
2025-08-17T13:39:08.7798806Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T13:39:08.7799054Z ```
2025-08-17T13:39:08.7799138Z 
2025-08-17T13:39:08.7799228Z Drop and recreate a SQL view atomically.
2025-08-17T13:39:08.7799403Z 
2025-08-17T13:39:08.7799472Z <a id="db.utils"></a>
2025-08-17T13:39:08.7799584Z 
2025-08-17T13:39:08.7799648Z # db.utils
2025-08-17T13:39:08.7799736Z 
2025-08-17T13:39:08.7799811Z <a id="price_importer"></a>
2025-08-17T13:39:08.7799939Z 
2025-08-17T13:39:08.7800010Z # price\_importer
2025-08-17T13:39:08.7800113Z 
2025-08-17T13:39:08.7800215Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T13:39:08.7800404Z 
2025-08-17T13:39:08.7800493Z # price\_importer.services\_common.dsn
2025-08-17T13:39:08.7800652Z 
2025-08-17T13:39:08.7800774Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T13:39:08.7800995Z 
2025-08-17T13:39:08.7801056Z #### build\_dsn
2025-08-17T13:39:08.7801154Z 
2025-08-17T13:39:08.7801221Z ```python
2025-08-17T13:39:08.7801387Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:39:08.7801603Z ```
2025-08-17T13:39:08.7801683Z 
2025-08-17T13:39:08.7801750Z Return safe DSN.
2025-08-17T13:39:08.7801863Z 
2025-08-17T13:39:08.7802202Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T13:39:08.7802409Z 
2025-08-17T13:39:08.7802542Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T13:39:08.7802752Z 
2025-08-17T13:39:08.7802861Z # price\_importer.services\_common.models\_vendor
2025-08-17T13:39:08.7803054Z 
2025-08-17T13:39:08.7803166Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T13:39:08.7803353Z 
2025-08-17T13:39:08.7803447Z # price\_importer.services\_common.db\_url
2025-08-17T13:39:08.7803625Z 
2025-08-17T13:39:08.7803761Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T13:39:08.7803981Z 
2025-08-17T13:39:08.7804300Z #### build\_url
2025-08-17T13:39:08.7804427Z 
2025-08-17T13:39:08.7804491Z ```python
2025-08-17T13:39:08.7804667Z def build_url(async_: bool = True) -> str
2025-08-17T13:39:08.7804888Z ```
2025-08-17T13:39:08.7805147Z 
2025-08-17T13:39:08.7805280Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:39:08.7805463Z 
2025-08-17T13:39:08.7805573Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T13:39:08.7805803Z 
2025-08-17T13:39:08.7805895Z # price\_importer.services\_common.keepa
2025-08-17T13:39:08.7806063Z 
2025-08-17T13:39:08.7806167Z <a id="price_importer.services_common.llm"></a>
2025-08-17T13:39:08.7806345Z 
2025-08-17T13:39:08.7806433Z # price\_importer.services\_common.llm
2025-08-17T13:39:08.7806600Z 
2025-08-17T13:39:08.7806715Z <a id="price_importer.services_common.settings"></a>
2025-08-17T13:39:08.7806909Z 
2025-08-17T13:39:08.7807001Z # price\_importer.services\_common.settings
2025-08-17T13:39:08.7807183Z 
2025-08-17T13:39:08.7807280Z <a id="price_importer.services_common.db"></a>
2025-08-17T13:39:08.7807596Z 
2025-08-17T13:39:08.7807693Z # price\_importer.services\_common.db
2025-08-17T13:39:08.7807853Z 
2025-08-17T13:39:08.7808007Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T13:39:08.7808252Z 
2025-08-17T13:39:08.7808328Z #### build\_sqlalchemy\_url
2025-08-17T13:39:08.7808458Z 
2025-08-17T13:39:08.7808525Z ```python
2025-08-17T13:39:08.7808694Z def build_sqlalchemy_url() -> str
2025-08-17T13:39:08.7808901Z ```
2025-08-17T13:39:08.7808983Z 
2025-08-17T13:39:08.7809076Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:39:08.7809248Z 
2025-08-17T13:39:08.7809395Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T13:39:08.7809632Z 
2025-08-17T13:39:08.7809704Z #### build\_asyncpg\_dsn
2025-08-17T13:39:08.7809837Z 
2025-08-17T13:39:08.7809901Z ```python
2025-08-17T13:39:08.7810082Z def build_asyncpg_dsn() -> str
2025-08-17T13:39:08.7810279Z ```
2025-08-17T13:39:08.7810362Z 
2025-08-17T13:39:08.7810505Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:39:08.7810721Z 
2025-08-17T13:39:08.7810848Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T13:39:08.7811062Z 
2025-08-17T13:39:08.7811128Z #### refresh\_mvs
2025-08-17T13:39:08.7811234Z 
2025-08-17T13:39:08.7811295Z ```python
2025-08-17T13:39:08.7811498Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:39:08.7811750Z ```
2025-08-17T13:39:08.7811833Z 
2025-08-17T13:39:08.7811967Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:39:08.7812186Z 
2025-08-17T13:39:08.7812288Z <a id="price_importer.services_common"></a>
2025-08-17T13:39:08.7812467Z 
2025-08-17T13:39:08.7812553Z # price\_importer.services\_common
2025-08-17T13:39:08.7812718Z 
2025-08-17T13:39:08.7812822Z <a id="price_importer.services_common.base"></a>
2025-08-17T13:39:08.7813010Z 
2025-08-17T13:39:08.7813107Z # price\_importer.services\_common.base
2025-08-17T13:39:08.7813273Z 
2025-08-17T13:39:08.7813364Z <a id="price_importer.normaliser"></a>
2025-08-17T13:39:08.7813539Z 
2025-08-17T13:39:08.7813626Z # price\_importer.normaliser
2025-08-17T13:39:08.7813765Z 
2025-08-17T13:39:08.7813868Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T13:39:08.7814055Z 
2025-08-17T13:39:08.7814143Z # price\_importer.common.models\_vendor
2025-08-17T13:39:08.7814307Z 
2025-08-17T13:39:08.7814405Z <a id="price_importer.common.db_url"></a>
2025-08-17T13:39:08.7814578Z 
2025-08-17T13:39:08.7814662Z # price\_importer.common.db\_url
2025-08-17T13:39:08.7814808Z 
2025-08-17T13:39:08.7814916Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T13:39:08.7815309Z 
2025-08-17T13:39:08.7815376Z #### make\_dsn
2025-08-17T13:39:08.7815480Z 
2025-08-17T13:39:08.7815543Z ```python
2025-08-17T13:39:08.7815715Z def make_dsn(async_: bool = False) -> str
2025-08-17T13:39:08.7815939Z ```
2025-08-17T13:39:08.7816018Z 
2025-08-17T13:39:08.7816141Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T13:39:08.7816338Z 
2025-08-17T13:39:08.7816578Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T13:39:08.7816771Z 
2025-08-17T13:39:08.7816833Z #### build\_url
2025-08-17T13:39:08.7816931Z 
2025-08-17T13:39:08.7816992Z ```python
2025-08-17T13:39:08.7817169Z def build_url(async_: bool = False) -> str
2025-08-17T13:39:08.7817390Z ```
2025-08-17T13:39:08.7817475Z 
2025-08-17T13:39:08.7817594Z Return Postgres DSN built from environment variables.
2025-08-17T13:39:08.7817794Z 
2025-08-17T13:39:08.7817885Z <a id="price_importer.common"></a>
2025-08-17T13:39:08.7818038Z 
2025-08-17T13:39:08.7818116Z # price\_importer.common
2025-08-17T13:39:08.7818248Z 
2025-08-17T13:39:08.7818339Z <a id="price_importer.common.base"></a>
2025-08-17T13:39:08.7818507Z 
2025-08-17T13:39:08.7818588Z # price\_importer.common.base
2025-08-17T13:39:08.7818733Z 
2025-08-17T13:39:08.7818831Z <a id="price_importer.tests.conftest"></a>
2025-08-17T13:39:08.7819005Z 
2025-08-17T13:39:08.7819098Z # price\_importer.tests.conftest
2025-08-17T13:39:08.7819366Z 
2025-08-17T13:39:08.7819480Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T13:39:08.7819662Z 
2025-08-17T13:39:08.7819749Z # price\_importer.tests.test\_reader
2025-08-17T13:39:08.7819909Z 
2025-08-17T13:39:08.7820009Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T13:39:08.7820191Z 
2025-08-17T13:39:08.7820279Z # price\_importer.tests.test\_imports
2025-08-17T13:39:08.7820438Z 
2025-08-17T13:39:08.7820541Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T13:39:08.7820715Z 
2025-08-17T13:39:08.7820803Z # price\_importer.tests.test\_smoke
2025-08-17T13:39:08.7820962Z 
2025-08-17T13:39:08.7821066Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T13:39:08.7821252Z 
2025-08-17T13:39:08.7821343Z # price\_importer.tests.test\_normaliser
2025-08-17T13:39:08.7821516Z 
2025-08-17T13:39:08.7821600Z <a id="price_importer.tests"></a>
2025-08-17T13:39:08.7821749Z 
2025-08-17T13:39:08.7821830Z # price\_importer.tests
2025-08-17T13:39:08.7821951Z 
2025-08-17T13:39:08.7822042Z <a id="price_importer.reader"></a>
2025-08-17T13:39:08.7822203Z 
2025-08-17T13:39:08.7822279Z # price\_importer.reader
2025-08-17T13:39:08.7822404Z 
2025-08-17T13:39:08.7822502Z <a id="price_importer.reader.load_file"></a>
2025-08-17T13:39:08.7822682Z 
2025-08-17T13:39:08.7822746Z #### load\_file
2025-08-17T13:39:08.7822848Z 
2025-08-17T13:39:08.7822929Z ```python
2025-08-17T13:39:08.7823122Z def load_file(path: str | Path) -> Any
2025-08-17T13:39:08.7823344Z ```
2025-08-17T13:39:08.7823425Z 
2025-08-17T13:39:08.7823514Z Return DataFrame from CSV or Excel file.
2025-08-17T13:39:08.7823685Z 
2025-08-17T13:39:08.7823787Z Raises RuntimeError if pandas is unavailable.
2025-08-17T13:39:08.7823966Z 
2025-08-17T13:39:08.7824059Z <a id="price_importer.repository"></a>
2025-08-17T13:39:08.7824223Z 
2025-08-17T13:39:08.7824307Z # price\_importer.repository
2025-08-17T13:39:08.7824445Z 
2025-08-17T13:39:08.7824535Z <a id="price_importer.import"></a>
2025-08-17T13:39:08.7824689Z 
2025-08-17T13:39:08.7824765Z # price\_importer.import
2025-08-17T13:39:08.7824904Z 
2025-08-17T13:39:08.7825081Z <a id="fees_h10"></a>
2025-08-17T13:39:08.7825198Z 
2025-08-17T13:39:08.7825262Z # fees\_h10
2025-08-17T13:39:08.7825359Z 
2025-08-17T13:39:08.7825431Z <a id="fees_h10.worker"></a>
2025-08-17T13:39:08.7825559Z 
2025-08-17T13:39:08.7825628Z # fees\_h10.worker
2025-08-17T13:39:08.7825730Z 
2025-08-17T13:39:08.7825825Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T13:39:08.7826001Z 
2025-08-17T13:39:08.7826070Z #### list\_active\_asins
2025-08-17T13:39:08.7826187Z 
2025-08-17T13:39:08.7826246Z ```python
2025-08-17T13:39:08.7826417Z def list_active_asins() -> list[str]
2025-08-17T13:39:08.7826623Z ```
2025-08-17T13:39:08.7826702Z 
2025-08-17T13:39:08.7826811Z Return known ASINs or an empty list if unavailable.
2025-08-17T13:39:08.7827006Z 
2025-08-17T13:39:08.7827093Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T13:39:08.7827247Z 
2025-08-17T13:39:08.7827325Z # fees\_h10.tests.test\_smoke
2025-08-17T13:39:08.7827467Z 
2025-08-17T13:39:08.7827665Z <a id="fees_h10.tests"></a>
2025-08-17T13:39:08.7827794Z 
2025-08-17T13:39:08.7827863Z # fees\_h10.tests
2025-08-17T13:39:08.7827969Z 
2025-08-17T13:39:08.7828043Z <a id="fees_h10.client"></a>
2025-08-17T13:39:08.7828172Z 
2025-08-17T13:39:08.7828245Z # fees\_h10.client
2025-08-17T13:39:08.7828347Z 
2025-08-17T13:39:08.7828427Z <a id="fees_h10.repository"></a>
2025-08-17T13:39:08.7828575Z 
2025-08-17T13:39:08.7828644Z # fees\_h10.repository
2025-08-17T13:39:08.7828759Z 
2025-08-17T13:39:08.7828826Z <a id="emailer"></a>
2025-08-17T13:39:08.7828944Z 
2025-08-17T13:39:08.7829004Z # emailer
2025-08-17T13:39:08.7829093Z 
2025-08-17T13:39:08.7829198Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T13:39:08.7829372Z 
2025-08-17T13:39:08.7829459Z # emailer.tests.test\_import\_emailer
2025-08-17T13:39:08.7829622Z 
2025-08-17T13:39:08.7829712Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T13:39:08.7829868Z 
2025-08-17T13:39:08.7829946Z # emailer.tests.test\_smoke
2025-08-17T13:39:08.7830203Z 
2025-08-17T13:39:08.7830279Z <a id="emailer.tests"></a>
2025-08-17T13:39:08.7830407Z 
2025-08-17T13:39:08.7830478Z # emailer.tests
2025-08-17T13:39:08.7830580Z 
2025-08-17T13:39:08.7830663Z <a id="emailer.generate_body"></a>
2025-08-17T13:39:08.7830820Z 
2025-08-17T13:39:08.7830895Z # emailer.generate\_body
2025-08-17T13:39:08.7831020Z 
2025-08-17T13:39:08.7831090Z <a id="llm_server"></a>
2025-08-17T13:39:08.7831212Z 
2025-08-17T13:39:08.7831274Z # llm\_server
2025-08-17T13:39:08.7831372Z 
2025-08-17T13:39:08.7831454Z <a id="llm_server.app"></a>
2025-08-17T13:39:08.7831582Z 
2025-08-17T13:39:08.7831647Z # llm\_server.app
2025-08-17T13:39:08.7831751Z 
