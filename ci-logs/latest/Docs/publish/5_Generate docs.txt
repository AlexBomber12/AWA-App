2025-08-19T23:11:35.9150815Z ##[group]Run pydoc-markdown
2025-08-19T23:11:35.9151102Z [36;1mpydoc-markdown[0m
2025-08-19T23:11:35.9191150Z shell: /usr/bin/bash -e {0}
2025-08-19T23:11:35.9191386Z env:
2025-08-19T23:11:35.9191614Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:11:35.9192029Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T23:11:35.9192425Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:11:35.9192767Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:11:35.9193123Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:11:35.9193465Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T23:11:35.9193751Z ##[endgroup]
2025-08-19T23:11:36.2636423Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T23:11:36.2637155Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T23:11:36.2637638Z In "pydoc-markdown.yml"
2025-08-19T23:11:36.2638084Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T23:11:36.2638846Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T23:11:36.2639627Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T23:11:36.2640161Z 
2025-08-19T23:11:36.6264244Z <a id="__init__"></a>
2025-08-19T23:11:36.6264579Z 
2025-08-19T23:11:36.6264719Z # \_\_init\_\_
2025-08-19T23:11:36.6264910Z 
2025-08-19T23:11:36.6265035Z <a id="api"></a>
2025-08-19T23:11:36.6265232Z 
2025-08-19T23:11:36.6265357Z # api
2025-08-19T23:11:36.6265520Z 
2025-08-19T23:11:36.6265660Z <a id="api.errors"></a>
2025-08-19T23:11:36.6265903Z 
2025-08-19T23:11:36.6266023Z # api.errors
2025-08-19T23:11:36.6266209Z 
2025-08-19T23:11:36.6266364Z <a id="api.sentry_config"></a>
2025-08-19T23:11:36.6266634Z 
2025-08-19T23:11:36.6266775Z # api.sentry\_config
2025-08-19T23:11:36.6266989Z 
2025-08-19T23:11:36.6267176Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T23:11:36.6267512Z 
2025-08-19T23:11:36.6268032Z # api.tests.test\_stats\_contracts
2025-08-19T23:11:36.6268346Z 
2025-08-19T23:11:36.6268508Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T23:11:36.6268822Z 
2025-08-19T23:11:36.6268967Z # api.tests.test\_sentry\_scrub
2025-08-19T23:11:36.6269241Z 
2025-08-19T23:11:36.6269414Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T23:11:36.6269738Z 
2025-08-19T23:11:36.6269895Z # api.tests.test\_roi\_basic\_auth
2025-08-19T23:11:36.6270175Z 
2025-08-19T23:11:36.6270334Z <a id="api.tests.test_errors_json"></a>
2025-08-19T23:11:36.6270757Z 
2025-08-19T23:11:36.6270904Z # api.tests.test\_errors\_json
2025-08-19T23:11:36.6271169Z 
2025-08-19T23:11:36.6271315Z <a id="api.tests.test_llm"></a>
2025-08-19T23:11:36.6271576Z 
2025-08-19T23:11:36.6271707Z # api.tests.test\_llm
2025-08-19T23:11:36.6271924Z 
2025-08-19T23:11:36.6272088Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T23:11:36.6272397Z 
2025-08-19T23:11:36.6272536Z # api.tests.test\_roi\_filters
2025-08-19T23:11:36.6272804Z 
2025-08-19T23:11:36.6272982Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T23:11:36.6273305Z 
2025-08-19T23:11:36.6273467Z # api.tests.test\_sentry\_event
2025-08-19T23:11:36.6273735Z 
2025-08-19T23:11:36.6274168Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T23:11:36.6274561Z 
2025-08-19T23:11:36.6274715Z ## DummyTransport Objects
2025-08-19T23:11:36.6274958Z 
2025-08-19T23:11:36.6275073Z ```python
2025-08-19T23:11:36.6275375Z class DummyTransport()
2025-08-19T23:11:36.6275695Z ```
2025-08-19T23:11:36.6275850Z 
2025-08-19T23:11:36.6276174Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T23:11:36.6276672Z 
2025-08-19T23:11:36.6276811Z #### capture\_envelope
2025-08-19T23:11:36.6277033Z 
2025-08-19T23:11:36.6277146Z ```python
2025-08-19T23:11:36.6277475Z def capture_envelope(envelope)
2025-08-19T23:11:36.6277840Z ```
2025-08-19T23:11:36.6277996Z 
2025-08-19T23:11:36.6278228Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T23:11:36.6278623Z 
2025-08-19T23:11:36.6278776Z <a id="api.tests.test_cors"></a>
2025-08-19T23:11:36.6279423Z 
2025-08-19T23:11:36.6279562Z # api.tests.test\_cors
2025-08-19T23:11:36.6279786Z 
2025-08-19T23:11:36.6279948Z <a id="api.tests.test_imports"></a>
2025-08-19T23:11:36.6280244Z 
2025-08-19T23:11:36.6280386Z # api.tests.test\_imports
2025-08-19T23:11:36.6280630Z 
2025-08-19T23:11:36.6280791Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T23:11:36.6281094Z 
2025-08-19T23:11:36.6281238Z # api.tests.test\_rate\_limit
2025-08-19T23:11:36.6281501Z 
2025-08-19T23:11:36.6281675Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T23:11:36.6281995Z 
2025-08-19T23:11:36.6282116Z #### app
2025-08-19T23:11:36.6282276Z 
2025-08-19T23:11:36.6282387Z noqa: E402
2025-08-19T23:11:36.6282560Z 
2025-08-19T23:11:36.6282715Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T23:11:36.6283014Z 
2025-08-19T23:11:36.6283157Z # api.tests.test\_stats\_sql
2025-08-19T23:11:36.6283425Z 
2025-08-19T23:11:36.6283590Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T23:11:36.6284104Z 
2025-08-19T23:11:36.6284270Z # api.tests.test\_entrypoint
2025-08-19T23:11:36.6284536Z 
2025-08-19T23:11:36.6284736Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T23:11:36.6285105Z 
2025-08-19T23:11:36.6285276Z # api.tests.test\_stats\_future\_contracts
2025-08-19T23:11:36.6285595Z 
2025-08-19T23:11:36.6285747Z <a id="api.tests.test_health"></a>
2025-08-19T23:11:36.6286041Z 
2025-08-19T23:11:36.6286179Z # api.tests.test\_health
2025-08-19T23:11:36.6286413Z 
2025-08-19T23:11:36.6286570Z <a id="api.tests.test_score"></a>
2025-08-19T23:11:36.6286850Z 
2025-08-19T23:11:36.6286985Z # api.tests.test\_score
2025-08-19T23:11:36.6287210Z 
2025-08-19T23:11:36.6287365Z <a id="api.logging_config"></a>
2025-08-19T23:11:36.6287623Z 
2025-08-19T23:11:36.6287751Z # api.logging\_config
2025-08-19T23:11:36.6287974Z 
2025-08-19T23:11:36.6288120Z <a id="api.migrations.env"></a>
2025-08-19T23:11:36.6288379Z 
2025-08-19T23:11:36.6288517Z # api.migrations.env
2025-08-19T23:11:36.6288955Z 
2025-08-19T23:11:36.6289178Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T23:11:36.6289546Z 
2025-08-19T23:11:36.6289744Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T23:11:36.6290087Z 
2025-08-19T23:11:36.6290281Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T23:11:36.6290642Z 
2025-08-19T23:11:36.6290813Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T23:11:36.6291136Z 
2025-08-19T23:11:36.6291427Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T23:11:36.6291876Z 
2025-08-19T23:11:36.6292123Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T23:11:36.6292543Z 
2025-08-19T23:11:36.6292766Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T23:11:36.6293143Z 
2025-08-19T23:11:36.6293340Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T23:11:36.6293692Z 
2025-08-19T23:11:36.6294107Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T23:11:36.6294614Z 
2025-08-19T23:11:36.6294816Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T23:11:36.6295206Z 
2025-08-19T23:11:36.6295447Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T23:11:36.6295834Z 
2025-08-19T23:11:36.6296033Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T23:11:36.6296385Z 
2025-08-19T23:11:36.6296611Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T23:11:36.6296980Z 
2025-08-19T23:11:36.6297173Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T23:11:36.6297533Z 
2025-08-19T23:11:36.6297762Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T23:11:36.6298148Z 
2025-08-19T23:11:36.6298351Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T23:11:36.6298698Z 
2025-08-19T23:11:36.6298952Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T23:11:36.6299378Z 
2025-08-19T23:11:36.6299603Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T23:11:36.6299989Z 
2025-08-19T23:11:36.6300232Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T23:11:36.6300880Z 
2025-08-19T23:11:36.6301082Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T23:11:36.6301431Z 
2025-08-19T23:11:36.6301687Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T23:11:36.6302094Z 
2025-08-19T23:11:36.6302301Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T23:11:36.6302679Z 
2025-08-19T23:11:36.6302883Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T23:11:36.6303244Z 
2025-08-19T23:11:36.6303414Z # api.migrations.versions.0001\_baseline
2025-08-19T23:11:36.6304049Z 
2025-08-19T23:11:36.6304216Z <a id="api.migrations.versions"></a>
2025-08-19T23:11:36.6304522Z 
2025-08-19T23:11:36.6304672Z # api.migrations.versions
2025-08-19T23:11:36.6304920Z 
2025-08-19T23:11:36.6305062Z <a id="api.migrations"></a>
2025-08-19T23:11:36.6305320Z 
2025-08-19T23:11:36.6305446Z # api.migrations
2025-08-19T23:11:36.6305645Z 
2025-08-19T23:11:36.6305780Z <a id="api.db"></a>
2025-08-19T23:11:36.6306003Z 
2025-08-19T23:11:36.6306115Z # api.db
2025-08-19T23:11:36.6306277Z 
2025-08-19T23:11:36.6306429Z <a id="api.routes.score"></a>
2025-08-19T23:11:36.6306697Z 
2025-08-19T23:11:36.6306825Z # api.routes.score
2025-08-19T23:11:36.6307028Z 
2025-08-19T23:11:36.6307181Z <a id="api.routes.stats"></a>
2025-08-19T23:11:36.6307443Z 
2025-08-19T23:11:36.6307567Z # api.routes.stats
2025-08-19T23:11:36.6307779Z 
2025-08-19T23:11:36.6307921Z <a id="api.routes.roi"></a>
2025-08-19T23:11:36.6308167Z 
2025-08-19T23:11:36.6308296Z # api.routes.roi
2025-08-19T23:11:36.6308492Z 
2025-08-19T23:11:36.6308636Z <a id="api.routes.health"></a>
2025-08-19T23:11:36.6308902Z 
2025-08-19T23:11:36.6309038Z # api.routes.health
2025-08-19T23:11:36.6309241Z 
2025-08-19T23:11:36.6309403Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T23:11:36.6309728Z 
2025-08-19T23:11:36.6309845Z #### MAX\_SKEW
2025-08-19T23:11:36.6310026Z 
2025-08-19T23:11:36.6310135Z seconds
2025-08-19T23:11:36.6310518Z 
2025-08-19T23:11:36.6310681Z <a id="api.routes.health.health"></a>
2025-08-19T23:11:36.6311003Z 
2025-08-19T23:11:36.6311123Z #### health
2025-08-19T23:11:36.6311290Z 
2025-08-19T23:11:36.6311403Z ```python
2025-08-19T23:11:36.6311766Z @router.get("/health", include_in_schema=False)
2025-08-19T23:11:36.6312490Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T23:11:36.6313131Z ```
2025-08-19T23:11:36.6313281Z 
2025-08-19T23:11:36.6313506Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T23:11:36.6314097Z 
2025-08-19T23:11:36.6314266Z <a id="api.routes.repository"></a>
2025-08-19T23:11:36.6314565Z 
2025-08-19T23:11:36.6314719Z # api.routes.repository
2025-08-19T23:11:36.6314956Z 
2025-08-19T23:11:36.6315087Z <a id="api.routes"></a>
2025-08-19T23:11:36.6315315Z 
2025-08-19T23:11:36.6315429Z # api.routes
2025-08-19T23:11:36.6315606Z 
2025-08-19T23:11:36.6315753Z <a id="api.models.fee"></a>
2025-08-19T23:11:36.6316011Z 
2025-08-19T23:11:36.6316129Z # api.models.fee
2025-08-19T23:11:36.6316339Z 
2025-08-19T23:11:36.6316477Z <a id="api.models"></a>
2025-08-19T23:11:36.6316697Z 
2025-08-19T23:11:36.6316811Z # api.models
2025-08-19T23:11:36.6316989Z 
2025-08-19T23:11:36.6317132Z <a id="api.roi_repository"></a>
2025-08-19T23:11:36.6317397Z 
2025-08-19T23:11:36.6317525Z # api.roi\_repository
2025-08-19T23:11:36.6317747Z 
2025-08-19T23:11:36.6317890Z <a id="api.main"></a>
2025-08-19T23:11:36.6318107Z 
2025-08-19T23:11:36.6318217Z # api.main
2025-08-19T23:11:36.6318386Z 
2025-08-19T23:11:36.6318509Z <a id="api.main.ready"></a>
2025-08-19T23:11:36.6318726Z 
2025-08-19T23:11:36.6318817Z #### ready
2025-08-19T23:11:36.6318950Z 
2025-08-19T23:11:36.6319049Z ```python
2025-08-19T23:11:36.6319443Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T23:11:36.6320194Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T23:11:36.6320808Z                                                                       str]
2025-08-19T23:11:36.6321217Z ```
2025-08-19T23:11:36.6321555Z 
2025-08-19T23:11:36.6321707Z Return 200 only when migrations are at head.
2025-08-19T23:11:36.6321984Z 
2025-08-19T23:11:36.6322095Z <a id="api.config"></a>
2025-08-19T23:11:36.6322285Z 
2025-08-19T23:11:36.6322390Z # api.config
2025-08-19T23:11:36.6322537Z 
2025-08-19T23:11:36.6322655Z <a id="api.security"></a>
2025-08-19T23:11:36.6322877Z 
2025-08-19T23:11:36.6322994Z # api.security
2025-08-19T23:11:36.6323162Z 
2025-08-19T23:11:36.6323274Z <a id="etl"></a>
2025-08-19T23:11:36.6323458Z 
2025-08-19T23:11:36.6323561Z # etl
2025-08-19T23:11:36.6323692Z 
2025-08-19T23:11:36.6323984Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T23:11:36.6324229Z 
2025-08-19T23:11:36.6324337Z # etl.fba\_fee\_ingestor
2025-08-19T23:11:36.6324521Z 
2025-08-19T23:11:36.6324644Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T23:11:36.6324875Z 
2025-08-19T23:11:36.6324989Z # etl.sp\_fees\_ingestor
2025-08-19T23:11:36.6325188Z 
2025-08-19T23:11:36.6325319Z <a id="etl.keepa_ingestor"></a>
2025-08-19T23:11:36.6325585Z 
2025-08-19T23:11:36.6325709Z # etl.keepa\_ingestor
2025-08-19T23:11:36.6325940Z 
2025-08-19T23:11:36.6326038Z <a id="etl.db"></a>
2025-08-19T23:11:36.6326199Z 
2025-08-19T23:11:36.6326294Z # etl.db
2025-08-19T23:11:36.6326427Z 
2025-08-19T23:11:36.6326547Z <a id="etl.dialects.schemas"></a>
2025-08-19T23:11:36.6326789Z 
2025-08-19T23:11:36.6326900Z # etl.dialects.schemas
2025-08-19T23:11:36.6327095Z 
2025-08-19T23:11:36.6327274Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T23:11:36.6327612Z 
2025-08-19T23:11:36.6327765Z # etl.dialects.amazon\_reimbursements
2025-08-19T23:11:36.6328052Z 
2025-08-19T23:11:36.6328214Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T23:11:36.6328485Z 
2025-08-19T23:11:36.6328610Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T23:11:36.6328852Z 
2025-08-19T23:11:36.6328973Z <a id="etl.dialects.test_generic"></a>
2025-08-19T23:11:36.6329205Z 
2025-08-19T23:11:36.6329316Z # etl.dialects.test\_generic
2025-08-19T23:11:36.6329676Z 
2025-08-19T23:11:36.6329808Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T23:11:36.6330064Z 
2025-08-19T23:11:36.6330209Z # etl.dialects.amazon\_returns
2025-08-19T23:11:36.6330454Z 
2025-08-19T23:11:36.6330618Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T23:11:36.6330928Z 
2025-08-19T23:11:36.6331071Z # etl.dialects.amazon\_fee\_preview
2025-08-19T23:11:36.6331341Z 
2025-08-19T23:11:36.6331524Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T23:11:36.6331862Z 
2025-08-19T23:11:36.6332014Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T23:11:36.6332309Z 
2025-08-19T23:11:36.6332480Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T23:11:36.6332803Z 
2025-08-19T23:11:36.6332956Z # etl.dialects.amazon\_settlements
2025-08-19T23:11:36.6333246Z 
2025-08-19T23:11:36.6333382Z <a id="etl.dialects"></a>
2025-08-19T23:11:36.6333621Z 
2025-08-19T23:11:36.6333738Z # etl.dialects
2025-08-19T23:11:36.6334096Z 
2025-08-19T23:11:36.6334225Z <a id="ingest"></a>
2025-08-19T23:11:36.6334440Z 
2025-08-19T23:11:36.6334568Z # ingest
2025-08-19T23:11:36.6334728Z 
2025-08-19T23:11:36.6334877Z <a id="ingest.maintenance"></a>
2025-08-19T23:11:36.6335149Z 
2025-08-19T23:11:36.6335290Z # ingest.maintenance
2025-08-19T23:11:36.6335500Z 
2025-08-19T23:11:36.6335644Z <a id="ingest.copy_loader"></a>
2025-08-19T23:11:36.6335914Z 
2025-08-19T23:11:36.6336047Z # ingest.copy\_loader
2025-08-19T23:11:36.6336264Z 
2025-08-19T23:11:36.6336458Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T23:11:36.6336802Z 
2025-08-19T23:11:36.6336939Z #### copy\_df\_via\_temp
2025-08-19T23:11:36.6337167Z 
2025-08-19T23:11:36.6337288Z ```python
2025-08-19T23:11:36.6337597Z def copy_df_via_temp(engine: Engine,
2025-08-19T23:11:36.6338037Z                      df: pd.DataFrame,
2025-08-19T23:11:36.6338454Z                      target_table: str,
2025-08-19T23:11:36.6338858Z                      *,
2025-08-19T23:11:36.6339232Z                      target_schema: Optional[str] = None,
2025-08-19T23:11:36.6339730Z                      columns: Sequence[str],
2025-08-19T23:11:36.6340441Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T23:11:36.6340961Z                      analyze_after: bool = False,
2025-08-19T23:11:36.6341451Z                      connection: Any | None = None) -> int
2025-08-19T23:11:36.6341883Z ```
2025-08-19T23:11:36.6342042Z 
2025-08-19T23:11:36.6342320Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T23:11:36.6342746Z 
2025-08-19T23:11:36.6342901Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T23:11:36.6343205Z 
2025-08-19T23:11:36.6343346Z # ingest.tests.test\_smoke
2025-08-19T23:11:36.6343586Z 
2025-08-19T23:11:36.6343730Z <a id="ingest.tests"></a>
2025-08-19T23:11:36.6344141Z 
2025-08-19T23:11:36.6344261Z # ingest.tests
2025-08-19T23:11:36.6344453Z 
2025-08-19T23:11:36.6344607Z <a id="ingest.upload_router"></a>
2025-08-19T23:11:36.6344892Z 
2025-08-19T23:11:36.6345025Z # ingest.upload\_router
2025-08-19T23:11:36.6345264Z 
2025-08-19T23:11:36.6345422Z <a id="ingest.email_watcher"></a>
2025-08-19T23:11:36.6345693Z 
2025-08-19T23:11:36.6345829Z # ingest.email\_watcher
2025-08-19T23:11:36.6346049Z 
2025-08-19T23:11:36.6346208Z <a id="ingest.email_watcher.main"></a>
2025-08-19T23:11:36.6346517Z 
2025-08-19T23:11:36.6346628Z #### main
2025-08-19T23:11:36.6346790Z 
2025-08-19T23:11:36.6346902Z ```python
2025-08-19T23:11:36.6347207Z def main() -> dict[str, str]
2025-08-19T23:11:36.6347567Z ```
2025-08-19T23:11:36.6347725Z 
2025-08-19T23:11:36.6347987Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T23:11:36.6348406Z 
2025-08-19T23:11:36.6348655Z Returns {"status": "success"} when processing completes.
2025-08-19T23:11:36.6349046Z 
2025-08-19T23:11:36.6349184Z <a id="ingest.tasks"></a>
2025-08-19T23:11:36.6349428Z 
2025-08-19T23:11:36.6349545Z # ingest.tasks
2025-08-19T23:11:36.6349763Z 
2025-08-19T23:11:36.6349989Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T23:11:36.6350323Z 
2025-08-19T23:11:36.6350821Z #### task\_import\_file
2025-08-19T23:11:36.6351064Z 
2025-08-19T23:11:36.6351179Z ```python
2025-08-19T23:11:36.6351574Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T23:11:36.6352097Z def task_import_file(self: Any,
2025-08-19T23:11:36.6352488Z                      uri: str,
2025-08-19T23:11:36.6352884Z                      report_type: str | None = None,
2025-08-19T23:11:36.6353383Z                      force: bool = False) -> dict[str, Any]
2025-08-19T23:11:36.6354009Z ```
2025-08-19T23:11:36.6354188Z 
2025-08-19T23:11:36.6354440Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T23:11:36.6354849Z 
2025-08-19T23:11:36.6355003Z <a id="ingest.celery_app"></a>
2025-08-19T23:11:36.6355266Z 
2025-08-19T23:11:36.6355394Z # ingest.celery\_app
2025-08-19T23:11:36.6355616Z 
2025-08-19T23:11:36.6355766Z <a id="ingest.ingest_router"></a>
2025-08-19T23:11:36.6356050Z 
2025-08-19T23:11:36.6356184Z # ingest.ingest\_router
2025-08-19T23:11:36.6356419Z 
2025-08-19T23:11:36.6356564Z <a id="logistics_etl"></a>
2025-08-19T23:11:36.6356810Z 
2025-08-19T23:11:36.6356937Z # logistics\_etl
2025-08-19T23:11:36.6357136Z 
2025-08-19T23:11:36.6357273Z Daily logistics ETL job.
2025-08-19T23:11:36.6357515Z 
2025-08-19T23:11:36.6357665Z <a id="logistics_etl.__main__"></a>
2025-08-19T23:11:36.6357954Z 
2025-08-19T23:11:36.6358096Z # logistics\_etl.\_\_main\_\_
2025-08-19T23:11:36.6358361Z 
2025-08-19T23:11:36.6358506Z <a id="logistics_etl.dsn"></a>
2025-08-19T23:11:36.6358763Z 
2025-08-19T23:11:36.6358895Z # logistics\_etl.dsn
2025-08-19T23:11:36.6359104Z 
2025-08-19T23:11:36.6359322Z Local DSN builder to avoid cross-service dependency.
2025-08-19T23:11:36.6359711Z 
2025-08-19T23:11:36.6359878Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T23:11:36.6360193Z 
2025-08-19T23:11:36.6360306Z #### build\_dsn
2025-08-19T23:11:36.6360504Z 
2025-08-19T23:11:36.6360620Z ```python
2025-08-19T23:11:36.6360939Z def build_dsn(sync: bool = True) -> str
2025-08-19T23:11:36.6361349Z ```
2025-08-19T23:11:36.6361508Z 
2025-08-19T23:11:36.6362235Z Return a Postgres DSN assembled from environment variables.
2025-08-19T23:11:36.6362658Z 
2025-08-19T23:11:36.6362941Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T23:11:36.6363677Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T23:11:36.6364489Z error when any required variable is missing.
2025-08-19T23:11:36.6364833Z 
2025-08-19T23:11:36.6365004Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T23:11:36.6365323Z 
2025-08-19T23:11:36.6365483Z # logistics\_etl.tests.conftest
2025-08-19T23:11:36.6365752Z 
2025-08-19T23:11:36.6365943Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T23:11:36.6366297Z 
2025-08-19T23:11:36.6366456Z # logistics\_etl.tests.test\_repository
2025-08-19T23:11:36.6366767Z 
2025-08-19T23:11:36.6366938Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T23:11:36.6367273Z 
2025-08-19T23:11:36.6367432Z # logistics\_etl.tests.test\_cron
2025-08-19T23:11:36.6367734Z 
2025-08-19T23:11:36.6367924Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T23:11:36.6368273Z 
2025-08-19T23:11:36.6368425Z # logistics\_etl.tests.test\_imports
2025-08-19T23:11:36.6368726Z 
2025-08-19T23:11:36.6368895Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T23:11:36.6369217Z 
2025-08-19T23:11:36.6369368Z # logistics\_etl.tests.test\_smoke
2025-08-19T23:11:36.6369663Z 
2025-08-19T23:11:36.6369838Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T23:11:36.6370156Z 
2025-08-19T23:11:36.6370319Z # logistics\_etl.tests.test\_client
2025-08-19T23:11:36.6370607Z 
2025-08-19T23:11:36.6370755Z <a id="logistics_etl.tests"></a>
2025-08-19T23:11:36.6371037Z 
2025-08-19T23:11:36.6371168Z # logistics\_etl.tests
2025-08-19T23:11:36.6371382Z 
2025-08-19T23:11:36.6371522Z <a id="logistics_etl.flow"></a>
2025-08-19T23:11:36.6371791Z 
2025-08-19T23:11:36.6371918Z # logistics\_etl.flow
2025-08-19T23:11:36.6372130Z 
2025-08-19T23:11:36.6372287Z <a id="logistics_etl.client"></a>
2025-08-19T23:11:36.6372826Z 
2025-08-19T23:11:36.6437062Z # logistics\_etl.client
2025-08-19T23:11:36.6437470Z 
2025-08-19T23:11:36.6437608Z <a id="logistics_etl.cron"></a>
2025-08-19T23:11:36.6437844Z 
2025-08-19T23:11:36.6437961Z # logistics\_etl.cron
2025-08-19T23:11:36.6438146Z 
2025-08-19T23:11:36.6438273Z <a id="logistics_etl.db"></a>
2025-08-19T23:11:36.6438508Z 
2025-08-19T23:11:36.6438628Z # logistics\_etl.db
2025-08-19T23:11:36.6438798Z 
2025-08-19T23:11:36.6438943Z <a id="logistics_etl.repository"></a>
2025-08-19T23:11:36.6439201Z 
2025-08-19T23:11:36.6439330Z # logistics\_etl.repository
2025-08-19T23:11:36.6439542Z 
2025-08-19T23:11:36.6439661Z <a id="alert_bot"></a>
2025-08-19T23:11:36.6439854Z 
2025-08-19T23:11:36.6439958Z # alert\_bot
2025-08-19T23:11:36.6440118Z 
2025-08-19T23:11:36.6440254Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T23:11:36.6440513Z 
2025-08-19T23:11:36.6440633Z # alert\_bot.tests.test\_smoke
2025-08-19T23:11:36.6440861Z 
2025-08-19T23:11:36.6440981Z <a id="alert_bot.tests"></a>
2025-08-19T23:11:36.6441200Z 
2025-08-19T23:11:36.6441312Z # alert\_bot.tests
2025-08-19T23:11:36.6441475Z 
2025-08-19T23:11:36.6441600Z <a id="alert_bot.alert_bot"></a>
2025-08-19T23:11:36.6441825Z 
2025-08-19T23:11:36.6441934Z # alert\_bot.alert\_bot
2025-08-19T23:11:36.6442121Z 
2025-08-19T23:11:36.6442237Z <a id="alert_bot.rules"></a>
2025-08-19T23:11:36.6442448Z 
2025-08-19T23:11:36.6442548Z # alert\_bot.rules
2025-08-19T23:11:36.6442708Z 
2025-08-19T23:11:36.6442814Z <a id="common"></a>
2025-08-19T23:11:36.6442972Z 
2025-08-19T23:11:36.6443065Z # common
2025-08-19T23:11:36.6443204Z 
2025-08-19T23:11:36.6443309Z <a id="common.dsn"></a>
2025-08-19T23:11:36.6443493Z 
2025-08-19T23:11:36.6443597Z # common.dsn
2025-08-19T23:11:36.6443763Z 
2025-08-19T23:11:36.6444120Z <a id="common.dsn.build_dsn"></a>
2025-08-19T23:11:36.6444379Z 
2025-08-19T23:11:36.6444482Z #### build\_dsn
2025-08-19T23:11:36.6444638Z 
2025-08-19T23:11:36.6444735Z ```python
2025-08-19T23:11:36.6445002Z def build_dsn(sync: bool = True) -> str
2025-08-19T23:11:36.6445352Z ```
2025-08-19T23:11:36.6445699Z 
2025-08-19T23:11:36.6445891Z Return a Postgres DSN, validating required variables.
2025-08-19T23:11:36.6446216Z 
2025-08-19T23:11:36.6446530Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T23:11:36.6447249Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T23:11:36.6447907Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T23:11:36.6448407Z missing.
2025-08-19T23:11:36.6448537Z 
2025-08-19T23:11:36.6448664Z <a id="common.models_vendor"></a>
2025-08-19T23:11:36.6448900Z 
2025-08-19T23:11:36.6449010Z # common.models\_vendor
2025-08-19T23:11:36.6449192Z 
2025-08-19T23:11:36.6449328Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T23:11:36.6449599Z 
2025-08-19T23:11:36.6449707Z ## Vendor Objects
2025-08-19T23:11:36.6449875Z 
2025-08-19T23:11:36.6450019Z ```python
2025-08-19T23:11:36.6450257Z class Vendor(Base)
2025-08-19T23:11:36.6450506Z ```
2025-08-19T23:11:36.6450631Z 
2025-08-19T23:11:36.6450755Z Vendor of inventory items.
2025-08-19T23:11:36.6450949Z 
2025-08-19T23:11:36.6451099Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T23:11:36.6451386Z 
2025-08-19T23:11:36.6451500Z ## VendorPrice Objects
2025-08-19T23:11:36.6451674Z 
2025-08-19T23:11:36.6451771Z ```python
2025-08-19T23:11:36.6452012Z class VendorPrice(Base)
2025-08-19T23:11:36.6452283Z ```
2025-08-19T23:11:36.6452411Z 
2025-08-19T23:11:36.6452570Z Association table linking vendors to pricing.
2025-08-19T23:11:36.6452867Z 
2025-08-19T23:11:36.6452987Z <a id="common.db_url"></a>
2025-08-19T23:11:36.6453191Z 
2025-08-19T23:11:36.6453288Z # common.db\_url
2025-08-19T23:11:36.6453459Z 
2025-08-19T23:11:36.6453583Z <a id="common.db_url.build_url"></a>
2025-08-19T23:11:36.6453973Z 
2025-08-19T23:11:36.6454085Z #### build\_url
2025-08-19T23:11:36.6454242Z 
2025-08-19T23:11:36.6454337Z ```python
2025-08-19T23:11:36.6454619Z def build_url(async_: bool = True) -> str
2025-08-19T23:11:36.6455126Z ```
2025-08-19T23:11:36.6455261Z 
2025-08-19T23:11:36.6455404Z Return Postgres DSN from env or PG_* parts.
2025-08-19T23:11:36.6455664Z 
2025-08-19T23:11:36.6455777Z <a id="common.keepa"></a>
2025-08-19T23:11:36.6455981Z 
2025-08-19T23:11:36.6456163Z # common.keepa
2025-08-19T23:11:36.6456319Z 
2025-08-19T23:11:36.6456437Z <a id="common.llm"></a>
2025-08-19T23:11:36.6456620Z 
2025-08-19T23:11:36.6456714Z # common.llm
2025-08-19T23:11:36.6456858Z 
2025-08-19T23:11:36.6456972Z <a id="common.settings"></a>
2025-08-19T23:11:36.6457172Z 
2025-08-19T23:11:36.6457272Z # common.settings
2025-08-19T23:11:36.6457436Z 
2025-08-19T23:11:36.6457540Z <a id="common.db"></a>
2025-08-19T23:11:36.6457710Z 
2025-08-19T23:11:36.6457810Z # common.db
2025-08-19T23:11:36.6457946Z 
2025-08-19T23:11:36.6458085Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T23:11:36.6458347Z 
2025-08-19T23:11:36.6458470Z #### build\_sqlalchemy\_url
2025-08-19T23:11:36.6458664Z 
2025-08-19T23:11:36.6458759Z ```python
2025-08-19T23:11:36.6459026Z def build_sqlalchemy_url() -> str
2025-08-19T23:11:36.6459338Z ```
2025-08-19T23:11:36.6459471Z 
2025-08-19T23:11:36.6459614Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T23:11:36.6460068Z 
2025-08-19T23:11:36.6460212Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T23:11:36.6460464Z 
2025-08-19T23:11:36.6460572Z #### build\_asyncpg\_dsn
2025-08-19T23:11:36.6460761Z 
2025-08-19T23:11:36.6460855Z ```python
2025-08-19T23:11:36.6461099Z def build_asyncpg_dsn() -> str
2025-08-19T23:11:36.6461401Z ```
2025-08-19T23:11:36.6461523Z 
2025-08-19T23:11:36.6461719Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T23:11:36.6462058Z 
2025-08-19T23:11:36.6462191Z <a id="common.db.refresh_mvs"></a>
2025-08-19T23:11:36.6462425Z 
2025-08-19T23:11:36.6462533Z #### refresh\_mvs
2025-08-19T23:11:36.6462697Z 
2025-08-19T23:11:36.6462791Z ```python
2025-08-19T23:11:36.6463101Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T23:11:36.6463484Z ```
2025-08-19T23:11:36.6463623Z 
2025-08-19T23:11:36.6464236Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T23:11:36.6464576Z 
2025-08-19T23:11:36.6464700Z <a id="common.config"></a>
2025-08-19T23:11:36.6464905Z 
2025-08-19T23:11:36.6465007Z # common.config
2025-08-19T23:11:36.6465163Z 
2025-08-19T23:11:36.6465284Z <a id="common.base"></a>
2025-08-19T23:11:36.6465469Z 
2025-08-19T23:11:36.6465563Z # common.base
2025-08-19T23:11:36.6465720Z 
2025-08-19T23:11:36.6465841Z <a id="common.base.Base"></a>
2025-08-19T23:11:36.6466044Z 
2025-08-19T23:11:36.6466150Z ## Base Objects
2025-08-19T23:11:36.6466309Z 
2025-08-19T23:11:36.6466403Z ```python
2025-08-19T23:11:36.6466668Z class Base(DeclarativeBase)
2025-08-19T23:11:36.6466960Z ```
2025-08-19T23:11:36.6467090Z 
2025-08-19T23:11:36.6467220Z Base class for SQLAlchemy models.
2025-08-19T23:11:36.6467450Z 
2025-08-19T23:11:36.6467552Z <a id="repricer"></a>
2025-08-19T23:11:36.6467737Z 
2025-08-19T23:11:36.6467831Z # repricer
2025-08-19T23:11:36.6467964Z 
2025-08-19T23:11:36.6468111Z <a id="repricer.app.schemas"></a>
2025-08-19T23:11:36.6468341Z 
2025-08-19T23:11:36.6468452Z # repricer.app.schemas
2025-08-19T23:11:36.6468630Z 
2025-08-19T23:11:36.6468754Z <a id="repricer.app.deps"></a>
2025-08-19T23:11:36.6468969Z 
2025-08-19T23:11:36.6469075Z # repricer.app.deps
2025-08-19T23:11:36.6469245Z 
2025-08-19T23:11:36.6469421Z Placeholder module for Keepa / SP-API clients.
2025-08-19T23:11:36.6469701Z 
2025-08-19T23:11:36.6469825Z <a id="repricer.app.logic"></a>
2025-08-19T23:11:36.6470049Z 
2025-08-19T23:11:36.6470158Z # repricer.app.logic
2025-08-19T23:11:36.6470331Z 
2025-08-19T23:11:36.6470485Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T23:11:36.6470751Z 
2025-08-19T23:11:36.6470852Z #### MIN\_MARGIN
2025-08-19T23:11:36.6471013Z 
2025-08-19T23:11:36.6471109Z 15 % ROI
2025-08-19T23:11:36.6471241Z 
2025-08-19T23:11:36.6471396Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T23:11:36.6471680Z 
2025-08-19T23:11:36.6471783Z #### compute\_price
2025-08-19T23:11:36.6472121Z 
2025-08-19T23:11:36.6472234Z ```python
2025-08-19T23:11:36.6472601Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T23:11:36.6473069Z ```
2025-08-19T23:11:36.6473198Z 
2025-08-19T23:11:36.6473367Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T23:11:36.6473953Z Replace with real competitive logic later.
2025-08-19T23:11:36.6474240Z 
2025-08-19T23:11:36.6474369Z <a id="repricer.app.main"></a>
2025-08-19T23:11:36.6474592Z 
2025-08-19T23:11:36.6474699Z # repricer.app.main
2025-08-19T23:11:36.6474863Z 
2025-08-19T23:11:36.6474986Z <a id="repricer.app"></a>
2025-08-19T23:11:36.6475186Z 
2025-08-19T23:11:36.6475291Z # repricer.app
2025-08-19T23:11:36.6475449Z 
2025-08-19T23:11:36.6475591Z <a id="repricer.tests.test_imports"></a>
2025-08-19T23:11:36.6475851Z 
2025-08-19T23:11:36.6475973Z # repricer.tests.test\_imports
2025-08-19T23:11:36.6476191Z 
2025-08-19T23:11:36.6476320Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T23:11:36.6476566Z 
2025-08-19T23:11:36.6476704Z # repricer.tests.test\_smoke
2025-08-19T23:11:36.6476919Z 
2025-08-19T23:11:36.6477036Z <a id="repricer.tests"></a>
2025-08-19T23:11:36.6477244Z 
2025-08-19T23:11:36.6477356Z # repricer.tests
2025-08-19T23:11:36.6477516Z 
2025-08-19T23:11:36.6477613Z <a id="db"></a>
2025-08-19T23:11:36.6477769Z 
2025-08-19T23:11:36.6477858Z # db
2025-08-19T23:11:36.6477981Z 
2025-08-19T23:11:36.6478097Z <a id="db.utils.views"></a>
2025-08-19T23:11:36.6478291Z 
2025-08-19T23:11:36.6478390Z # db.utils.views
2025-08-19T23:11:36.6478542Z 
2025-08-19T23:11:36.6478685Z <a id="db.utils.views.replace_view"></a>
2025-08-19T23:11:36.6478946Z 
2025-08-19T23:11:36.6479049Z #### replace\_view
2025-08-19T23:11:36.6479217Z 
2025-08-19T23:11:36.6479318Z ```python
2025-08-19T23:11:36.6479606Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T23:11:36.6479997Z ```
2025-08-19T23:11:36.6480123Z 
2025-08-19T23:11:36.6480260Z Drop and recreate a SQL view atomically.
2025-08-19T23:11:36.6480515Z 
2025-08-19T23:11:36.6480626Z <a id="db.utils"></a>
2025-08-19T23:11:36.6481032Z 
2025-08-19T23:11:36.6481128Z # db.utils
2025-08-19T23:11:36.6481267Z 
2025-08-19T23:11:36.6481382Z <a id="price_importer"></a>
2025-08-19T23:11:36.6481592Z 
2025-08-19T23:11:36.6481691Z # price\_importer
2025-08-19T23:11:36.6481857Z 
2025-08-19T23:11:36.6482025Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T23:11:36.6482311Z 
2025-08-19T23:11:36.6482441Z # price\_importer.services\_common.dsn
2025-08-19T23:11:36.6482687Z 
2025-08-19T23:11:36.6482879Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T23:11:36.6483183Z 
2025-08-19T23:11:36.6483283Z #### build\_dsn
2025-08-19T23:11:36.6483439Z 
2025-08-19T23:11:36.6483534Z ```python
2025-08-19T23:11:36.6483792Z def build_dsn(sync: bool = True) -> str
2025-08-19T23:11:36.6484331Z ```
2025-08-19T23:11:36.6484455Z 
2025-08-19T23:11:36.6484560Z Return safe DSN.
2025-08-19T23:11:36.6484714Z 
2025-08-19T23:11:36.6485188Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T23:11:36.6485520Z 
2025-08-19T23:11:36.6485728Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T23:11:36.6486059Z 
2025-08-19T23:11:36.6486232Z # price\_importer.services\_common.models\_vendor
2025-08-19T23:11:36.6486532Z 
2025-08-19T23:11:36.6486693Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T23:11:36.6486980Z 
2025-08-19T23:11:36.6487130Z # price\_importer.services\_common.db\_url
2025-08-19T23:11:36.6487395Z 
2025-08-19T23:11:36.6487596Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T23:11:36.6487935Z 
2025-08-19T23:11:36.6488035Z #### build\_url
2025-08-19T23:11:36.6488189Z 
2025-08-19T23:11:36.6488284Z ```python
2025-08-19T23:11:36.6488561Z def build_url(async_: bool = True) -> str
2025-08-19T23:11:36.6488911Z ```
2025-08-19T23:11:36.6489038Z 
2025-08-19T23:11:36.6489182Z Return Postgres DSN from env or PG_* parts.
2025-08-19T23:11:36.6489453Z 
2025-08-19T23:11:36.6489624Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T23:11:36.6490091Z 
2025-08-19T23:11:36.6490241Z # price\_importer.services\_common.keepa
2025-08-19T23:11:36.6490513Z 
2025-08-19T23:11:36.6490669Z <a id="price_importer.services_common.llm"></a>
2025-08-19T23:11:36.6490947Z 
2025-08-19T23:11:36.6491082Z # price\_importer.services\_common.llm
2025-08-19T23:11:36.6491329Z 
2025-08-19T23:11:36.6491499Z <a id="price_importer.services_common.settings"></a>
2025-08-19T23:11:36.6491795Z 
2025-08-19T23:11:36.6491949Z # price\_importer.services\_common.settings
2025-08-19T23:11:36.6492218Z 
2025-08-19T23:11:36.6492370Z <a id="price_importer.services_common.db"></a>
2025-08-19T23:11:36.6492653Z 
2025-08-19T23:11:36.6492786Z # price\_importer.services\_common.db
2025-08-19T23:11:36.6493027Z 
2025-08-19T23:11:36.6493266Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T23:11:36.6493630Z 
2025-08-19T23:11:36.6493744Z #### build\_sqlalchemy\_url
2025-08-19T23:11:36.6494092Z 
2025-08-19T23:11:36.6494196Z ```python
2025-08-19T23:11:36.6494469Z def build_sqlalchemy_url() -> str
2025-08-19T23:11:36.6494783Z ```
2025-08-19T23:11:36.6494905Z 
2025-08-19T23:11:36.6495048Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T23:11:36.6495316Z 
2025-08-19T23:11:36.6495530Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T23:11:36.6495886Z 
2025-08-19T23:11:36.6496011Z #### build\_asyncpg\_dsn
2025-08-19T23:11:36.6496198Z 
2025-08-19T23:11:36.6496290Z ```python
2025-08-19T23:11:36.6496557Z def build_asyncpg_dsn() -> str
2025-08-19T23:11:36.6496860Z ```
2025-08-19T23:11:36.6497006Z 
2025-08-19T23:11:36.6497204Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T23:11:36.6497535Z 
2025-08-19T23:11:36.6497738Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T23:11:36.6498079Z 
2025-08-19T23:11:36.6498180Z #### refresh\_mvs
2025-08-19T23:11:36.6498349Z 
2025-08-19T23:11:36.6498454Z ```python
2025-08-19T23:11:36.6498740Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T23:11:36.6499119Z ```
2025-08-19T23:11:36.6499419Z 
2025-08-19T23:11:36.6499624Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T23:11:36.6499956Z 
2025-08-19T23:11:36.6500096Z <a id="price_importer.services_common"></a>
2025-08-19T23:11:36.6500351Z 
2025-08-19T23:11:36.6500483Z # price\_importer.services\_common
2025-08-19T23:11:36.6500716Z 
2025-08-19T23:11:36.6500871Z <a id="price_importer.services_common.base"></a>
2025-08-19T23:11:36.6501158Z 
2025-08-19T23:11:36.6501292Z # price\_importer.services\_common.base
2025-08-19T23:11:36.6501548Z 
2025-08-19T23:11:36.6501686Z <a id="price_importer.normaliser"></a>
2025-08-19T23:11:36.6501945Z 
2025-08-19T23:11:36.6502065Z # price\_importer.normaliser
2025-08-19T23:11:36.6502273Z 
2025-08-19T23:11:36.6502437Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T23:11:36.6502718Z 
2025-08-19T23:11:36.6502853Z # price\_importer.common.models\_vendor
2025-08-19T23:11:36.6503105Z 
2025-08-19T23:11:36.6503248Z <a id="price_importer.common.db_url"></a>
2025-08-19T23:11:36.6503532Z 
2025-08-19T23:11:36.6503673Z # price\_importer.common.db\_url
2025-08-19T23:11:36.6504091Z 
2025-08-19T23:11:36.6504267Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T23:11:36.6504597Z 
2025-08-19T23:11:36.6504708Z #### make\_dsn
2025-08-19T23:11:36.6504875Z 
2025-08-19T23:11:36.6504977Z ```python
2025-08-19T23:11:36.6505265Z def make_dsn(async_: bool = False) -> str
2025-08-19T23:11:36.6505639Z ```
2025-08-19T23:11:36.6505779Z 
2025-08-19T23:11:36.6505978Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T23:11:36.6506315Z 
2025-08-19T23:11:36.6506488Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T23:11:36.6506798Z 
2025-08-19T23:11:36.6506909Z #### build\_url
2025-08-19T23:11:36.6507063Z 
2025-08-19T23:11:36.6507165Z ```python
2025-08-19T23:11:36.6507437Z def build_url(async_: bool = False) -> str
2025-08-19T23:11:36.6507799Z ```
2025-08-19T23:11:36.6507931Z 
2025-08-19T23:11:36.6508126Z Return Postgres DSN built from environment variables.
2025-08-19T23:11:36.6508644Z 
2025-08-19T23:11:36.6508782Z <a id="price_importer.common"></a>
2025-08-19T23:11:36.6509026Z 
2025-08-19T23:11:36.6509157Z # price\_importer.common
2025-08-19T23:11:36.6509363Z 
2025-08-19T23:11:36.6509508Z <a id="price_importer.common.base"></a>
2025-08-19T23:11:36.6509775Z 
2025-08-19T23:11:36.6509913Z # price\_importer.common.base
2025-08-19T23:11:36.6510141Z 
2025-08-19T23:11:36.6510294Z <a id="price_importer.tests.conftest"></a>
2025-08-19T23:11:36.6510577Z 
2025-08-19T23:11:36.6510711Z # price\_importer.tests.conftest
2025-08-19T23:11:36.6510947Z 
2025-08-19T23:11:36.6511110Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T23:11:36.6511403Z 
2025-08-19T23:11:36.6511543Z # price\_importer.tests.test\_reader
2025-08-19T23:11:36.6511803Z 
2025-08-19T23:11:36.6511972Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T23:11:36.6512319Z 
2025-08-19T23:11:36.6512460Z # price\_importer.tests.test\_imports
2025-08-19T23:11:36.6512724Z 
2025-08-19T23:11:36.6512889Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T23:11:36.6513179Z 
2025-08-19T23:11:36.6513327Z # price\_importer.tests.test\_smoke
2025-08-19T23:11:36.6513590Z 
2025-08-19T23:11:36.6513765Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T23:11:36.6514239Z 
2025-08-19T23:11:36.6514400Z # price\_importer.tests.test\_normaliser
2025-08-19T23:11:36.6514678Z 
2025-08-19T23:11:36.6514813Z <a id="price_importer.tests"></a>
2025-08-19T23:11:36.6515074Z 
2025-08-19T23:11:36.6515195Z # price\_importer.tests
2025-08-19T23:11:36.6515399Z 
2025-08-19T23:11:36.6515544Z <a id="price_importer.reader"></a>
2025-08-19T23:11:36.6515796Z 
2025-08-19T23:11:36.6515916Z # price\_importer.reader
2025-08-19T23:11:36.6516119Z 
2025-08-19T23:11:36.6516274Z <a id="price_importer.repository"></a>
2025-08-19T23:11:36.6516545Z 
2025-08-19T23:11:36.6516680Z # price\_importer.repository
2025-08-19T23:11:36.6516913Z 
2025-08-19T23:11:36.6517047Z <a id="price_importer.import"></a>
2025-08-19T23:11:36.6517303Z 
2025-08-19T23:11:36.6517432Z # price\_importer.import
2025-08-19T23:11:36.6517819Z 
2025-08-19T23:11:36.6517929Z <a id="fees_h10"></a>
2025-08-19T23:11:36.6518125Z 
2025-08-19T23:11:36.6518234Z # fees\_h10
2025-08-19T23:11:36.6518377Z 
2025-08-19T23:11:36.6518498Z <a id="fees_h10.worker"></a>
2025-08-19T23:11:36.6518730Z 
2025-08-19T23:11:36.6518835Z # fees\_h10.worker
2025-08-19T23:11:36.6519011Z 
2025-08-19T23:11:36.6519171Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T23:11:36.6519483Z 
2025-08-19T23:11:36.6519604Z #### list\_active\_asins
2025-08-19T23:11:36.6519809Z 
2025-08-19T23:11:36.6519915Z ```python
2025-08-19T23:11:36.6520178Z def list_active_asins() -> list[str]
2025-08-19T23:11:36.6520528Z ```
2025-08-19T23:11:36.6520668Z 
2025-08-19T23:11:36.6520855Z Return known ASINs or an empty list if unavailable.
2025-08-19T23:11:36.6521185Z 
2025-08-19T23:11:36.6521322Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T23:11:36.6521595Z 
2025-08-19T23:11:36.6521733Z # fees\_h10.tests.test\_smoke
2025-08-19T23:11:36.6521986Z 
2025-08-19T23:11:36.6522116Z <a id="fees_h10.tests"></a>
2025-08-19T23:11:36.6522328Z 
2025-08-19T23:11:36.6522439Z # fees\_h10.tests
2025-08-19T23:11:36.6522616Z 
2025-08-19T23:11:36.6522739Z <a id="fees_h10.client"></a>
2025-08-19T23:11:36.6522967Z 
2025-08-19T23:11:36.6523077Z # fees\_h10.client
2025-08-19T23:11:36.6523254Z 
2025-08-19T23:11:36.6523391Z <a id="fees_h10.repository"></a>
2025-08-19T23:11:36.6523644Z 
2025-08-19T23:11:36.6523765Z # fees\_h10.repository
2025-08-19T23:11:36.6524123Z 
2025-08-19T23:11:36.6524311Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T23:11:36.6524627Z 
2025-08-19T23:11:36.6524745Z #### upsert\_fees\_raw
2025-08-19T23:11:36.6524944Z 
2025-08-19T23:11:36.6525045Z ```python
2025-08-19T23:11:36.6525319Z def upsert_fees_raw(engine: Engine,
2025-08-19T23:11:36.6525737Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T23:11:36.6526144Z                     *,
2025-08-19T23:11:36.6526523Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T23:11:36.6527146Z ```
2025-08-19T23:11:36.6527285Z 
2025-08-19T23:11:36.6527414Z Idempotent upsert for fees.
2025-08-19T23:11:36.6527658Z 
2025-08-19T23:11:36.6527919Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T23:11:36.6528527Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T23:11:36.6529065Z Only updates when one of the mutable fields changes.
2025-08-19T23:11:36.6529386Z 
2025-08-19T23:11:36.6529499Z <a id="emailer"></a>
2025-08-19T23:11:36.6529667Z 
2025-08-19T23:11:36.6529757Z # emailer
2025-08-19T23:11:36.6529888Z 
2025-08-19T23:11:36.6530044Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T23:11:36.6530321Z 
2025-08-19T23:11:36.6530447Z # emailer.tests.test\_import\_emailer
2025-08-19T23:11:36.6530695Z 
2025-08-19T23:11:36.6530829Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T23:11:36.6531099Z 
2025-08-19T23:11:36.6531234Z # emailer.tests.test\_smoke
2025-08-19T23:11:36.6531465Z 
2025-08-19T23:11:36.6531602Z <a id="emailer.tests"></a>
2025-08-19T23:11:36.6531826Z 
2025-08-19T23:11:36.6531945Z # emailer.tests
2025-08-19T23:11:36.6532122Z 
2025-08-19T23:11:36.6532265Z <a id="emailer.generate_body"></a>
2025-08-19T23:11:36.6532535Z 
2025-08-19T23:11:36.6532660Z # emailer.generate\_body
2025-08-19T23:11:36.6532873Z 
2025-08-19T23:11:36.6532988Z <a id="llm_server"></a>
2025-08-19T23:11:36.6533188Z 
2025-08-19T23:11:36.6533294Z # llm\_server
2025-08-19T23:11:36.6533450Z 
2025-08-19T23:11:36.6558744Z <a id="llm_server.app"></a>
2025-08-19T23:11:36.6559013Z 
2025-08-19T23:11:36.6559116Z # llm\_server.app
2025-08-19T23:11:36.6559276Z 
