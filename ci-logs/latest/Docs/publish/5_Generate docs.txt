2025-08-18T21:14:16.6885453Z ##[group]Run pydoc-markdown
2025-08-18T21:14:16.6885762Z [36;1mpydoc-markdown[0m
2025-08-18T21:14:16.6928351Z shell: /usr/bin/bash -e {0}
2025-08-18T21:14:16.6928571Z env:
2025-08-18T21:14:16.6928816Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:14:16.6929215Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T21:14:16.6929624Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:14:16.6929964Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:14:16.6930317Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:14:16.6930661Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T21:14:16.6930939Z ##[endgroup]
2025-08-18T21:14:17.0715503Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T21:14:17.0716459Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T21:14:17.0716845Z In "pydoc-markdown.yml"
2025-08-18T21:14:17.0717197Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T21:14:17.0717755Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T21:14:17.0718370Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T21:14:17.0718782Z 
2025-08-18T21:14:17.3843302Z <a id="__init__"></a>
2025-08-18T21:14:17.3843695Z 
2025-08-18T21:14:17.3843864Z # \_\_init\_\_
2025-08-18T21:14:17.3844126Z 
2025-08-18T21:14:17.3844302Z <a id="api"></a>
2025-08-18T21:14:17.3844534Z 
2025-08-18T21:14:17.3844664Z # api
2025-08-18T21:14:17.3844855Z 
2025-08-18T21:14:17.3845025Z <a id="api.errors"></a>
2025-08-18T21:14:17.3845289Z 
2025-08-18T21:14:17.3845387Z # api.errors
2025-08-18T21:14:17.3845534Z 
2025-08-18T21:14:17.3845661Z <a id="api.sentry_config"></a>
2025-08-18T21:14:17.3845867Z 
2025-08-18T21:14:17.3846005Z # api.sentry\_config
2025-08-18T21:14:17.3846274Z 
2025-08-18T21:14:17.3846492Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T21:14:17.3846883Z 
2025-08-18T21:14:17.3847071Z # api.tests.test\_sentry\_scrub
2025-08-18T21:14:17.3847459Z 
2025-08-18T21:14:17.3847659Z <a id="api.tests.test_errors_json"></a>
2025-08-18T21:14:17.3848035Z 
2025-08-18T21:14:17.3848231Z # api.tests.test\_errors\_json
2025-08-18T21:14:17.3848539Z 
2025-08-18T21:14:17.3848719Z <a id="api.tests.test_llm"></a>
2025-08-18T21:14:17.3849035Z 
2025-08-18T21:14:17.3849208Z # api.tests.test\_llm
2025-08-18T21:14:17.3849466Z 
2025-08-18T21:14:17.3849622Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T21:14:17.3849922Z 
2025-08-18T21:14:17.3850060Z # api.tests.test\_sentry\_event
2025-08-18T21:14:17.3850302Z 
2025-08-18T21:14:17.3850530Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T21:14:17.3850899Z 
2025-08-18T21:14:17.3851035Z ## DummyTransport Objects
2025-08-18T21:14:17.3851260Z 
2025-08-18T21:14:17.3851389Z ```python
2025-08-18T21:14:17.3851681Z class DummyTransport()
2025-08-18T21:14:17.3851997Z ```
2025-08-18T21:14:17.3852448Z 
2025-08-18T21:14:17.3852758Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T21:14:17.3853535Z 
2025-08-18T21:14:17.3853663Z #### capture\_envelope
2025-08-18T21:14:17.3853870Z 
2025-08-18T21:14:17.3853989Z ```python
2025-08-18T21:14:17.3854289Z def capture_envelope(envelope)
2025-08-18T21:14:17.3854638Z ```
2025-08-18T21:14:17.3854779Z 
2025-08-18T21:14:17.3854991Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T21:14:17.3855359Z 
2025-08-18T21:14:17.3855499Z <a id="api.tests.test_cors"></a>
2025-08-18T21:14:17.3855752Z 
2025-08-18T21:14:17.3855879Z # api.tests.test\_cors
2025-08-18T21:14:17.3856074Z 
2025-08-18T21:14:17.3856236Z <a id="api.tests.test_imports"></a>
2025-08-18T21:14:17.3856413Z 
2025-08-18T21:14:17.3856507Z # api.tests.test\_imports
2025-08-18T21:14:17.3856651Z 
2025-08-18T21:14:17.3856751Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T21:14:17.3856942Z 
2025-08-18T21:14:17.3857029Z # api.tests.test\_rate\_limit
2025-08-18T21:14:17.3857186Z 
2025-08-18T21:14:17.3857299Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T21:14:17.3857695Z 
2025-08-18T21:14:17.3857767Z #### app
2025-08-18T21:14:17.3857867Z 
2025-08-18T21:14:17.3857945Z noqa: E402
2025-08-18T21:14:17.3858046Z 
2025-08-18T21:14:17.3858143Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T21:14:17.3858329Z 
2025-08-18T21:14:17.3858418Z # api.tests.test\_entrypoint
2025-08-18T21:14:17.3858573Z 
2025-08-18T21:14:17.3858668Z <a id="api.tests.test_health"></a>
2025-08-18T21:14:17.3858846Z 
2025-08-18T21:14:17.3858930Z # api.tests.test\_health
2025-08-18T21:14:17.3859069Z 
2025-08-18T21:14:17.3859172Z <a id="api.logging_config"></a>
2025-08-18T21:14:17.3859331Z 
2025-08-18T21:14:17.3859409Z # api.logging\_config
2025-08-18T21:14:17.3859542Z 
2025-08-18T21:14:17.3859634Z <a id="api.migrations.env"></a>
2025-08-18T21:14:17.3859791Z 
2025-08-18T21:14:17.3859871Z # api.migrations.env
2025-08-18T21:14:17.3859991Z 
2025-08-18T21:14:17.3860107Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T21:14:17.3860310Z 
2025-08-18T21:14:17.3860418Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T21:14:17.3860612Z 
2025-08-18T21:14:17.3860717Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T21:14:17.3860916Z 
2025-08-18T21:14:17.3861013Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T21:14:17.3861186Z 
2025-08-18T21:14:17.3861343Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T21:14:17.3861589Z 
2025-08-18T21:14:17.3861726Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T21:14:17.3861944Z 
2025-08-18T21:14:17.3862295Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T21:14:17.3862510Z 
2025-08-18T21:14:17.3862618Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T21:14:17.3862805Z 
2025-08-18T21:14:17.3862921Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T21:14:17.3863116Z 
2025-08-18T21:14:17.3863250Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T21:14:17.3863426Z 
2025-08-18T21:14:17.3863549Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T21:14:17.3863760Z 
2025-08-18T21:14:17.3863874Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T21:14:17.3864058Z 
2025-08-18T21:14:17.3864178Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T21:14:17.3864380Z 
2025-08-18T21:14:17.3864488Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T21:14:17.3864671Z 
2025-08-18T21:14:17.3864800Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T21:14:17.3864999Z 
2025-08-18T21:14:17.3865105Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T21:14:17.3865291Z 
2025-08-18T21:14:17.3865426Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T21:14:17.3865641Z 
2025-08-18T21:14:17.3865760Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T21:14:17.3865959Z 
2025-08-18T21:14:17.3866086Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T21:14:17.3866298Z 
2025-08-18T21:14:17.3866419Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T21:14:17.3866749Z 
2025-08-18T21:14:17.3866886Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T21:14:17.3867123Z 
2025-08-18T21:14:17.3867243Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T21:14:17.3867522Z 
2025-08-18T21:14:17.3867642Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T21:14:17.3867832Z 
2025-08-18T21:14:17.3867925Z # api.migrations.versions.0001\_baseline
2025-08-18T21:14:17.3868102Z 
2025-08-18T21:14:17.3868192Z <a id="api.migrations.versions"></a>
2025-08-18T21:14:17.3868351Z 
2025-08-18T21:14:17.3868440Z # api.migrations.versions
2025-08-18T21:14:17.3868573Z 
2025-08-18T21:14:17.3868651Z <a id="api.migrations"></a>
2025-08-18T21:14:17.3868783Z 
2025-08-18T21:14:17.3868857Z # api.migrations
2025-08-18T21:14:17.3868965Z 
2025-08-18T21:14:17.3869033Z <a id="api.db"></a>
2025-08-18T21:14:17.3869146Z 
2025-08-18T21:14:17.3869208Z # api.db
2025-08-18T21:14:17.3869296Z 
2025-08-18T21:14:17.3869375Z <a id="api.routes.stats"></a>
2025-08-18T21:14:17.3869656Z 
2025-08-18T21:14:17.3869725Z # api.routes.stats
2025-08-18T21:14:17.3869832Z 
2025-08-18T21:14:17.3869925Z <a id="api.routes.stats.kpi"></a>
2025-08-18T21:14:17.3870076Z 
2025-08-18T21:14:17.3870141Z #### kpi
2025-08-18T21:14:17.3870231Z 
2025-08-18T21:14:17.3870294Z ```python
2025-08-18T21:14:17.3870460Z @router.get("/stats/kpi")
2025-08-18T21:14:17.3870717Z def kpi() -> List[Dict[str, int]]
2025-08-18T21:14:17.3870921Z ```
2025-08-18T21:14:17.3871011Z 
2025-08-18T21:14:17.3871091Z Return KPI metrics (mock).
2025-08-18T21:14:17.3871220Z 
2025-08-18T21:14:17.3871326Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T21:14:17.3871504Z 
2025-08-18T21:14:17.3871572Z #### roi\_by\_vendor
2025-08-18T21:14:17.3871687Z 
2025-08-18T21:14:17.3871751Z ```python
2025-08-18T21:14:17.3871919Z @router.get("/stats/roi_by_vendor")
2025-08-18T21:14:17.3872380Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T21:14:17.3872608Z ```
2025-08-18T21:14:17.3872696Z 
2025-08-18T21:14:17.3872792Z Return ROI percent by vendor.
2025-08-18T21:14:17.3872931Z 
2025-08-18T21:14:17.3873031Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T21:14:17.3873207Z 
2025-08-18T21:14:17.3873272Z #### roi\_trend
2025-08-18T21:14:17.3873381Z 
2025-08-18T21:14:17.3873446Z ```python
2025-08-18T21:14:17.3873614Z @router.get("/stats/roi_trend")
2025-08-18T21:14:17.3873856Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T21:14:17.3874085Z ```
2025-08-18T21:14:17.3874171Z 
2025-08-18T21:14:17.3874245Z Return 30-day ROI trend.
2025-08-18T21:14:17.3874371Z 
2025-08-18T21:14:17.3874460Z <a id="api.routes.roi"></a>
2025-08-18T21:14:17.3874592Z 
2025-08-18T21:14:17.3874658Z # api.routes.roi
2025-08-18T21:14:17.3874767Z 
2025-08-18T21:14:17.3874850Z <a id="api.routes.health"></a>
2025-08-18T21:14:17.3874989Z 
2025-08-18T21:14:17.3875058Z # api.routes.health
2025-08-18T21:14:17.3875172Z 
2025-08-18T21:14:17.3875260Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T21:14:17.3875422Z 
2025-08-18T21:14:17.3875497Z #### MAX\_SKEW
2025-08-18T21:14:17.3875597Z 
2025-08-18T21:14:17.3875659Z seconds
2025-08-18T21:14:17.3875743Z 
2025-08-18T21:14:17.3875840Z <a id="api.routes.health.health"></a>
2025-08-18T21:14:17.3876005Z 
2025-08-18T21:14:17.3876070Z #### health
2025-08-18T21:14:17.3876165Z 
2025-08-18T21:14:17.3876226Z ```python
2025-08-18T21:14:17.3876415Z @router.get("/health", include_in_schema=False)
2025-08-18T21:14:17.3876792Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T21:14:17.3877130Z ```
2025-08-18T21:14:17.3877211Z 
2025-08-18T21:14:17.3877324Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T21:14:17.3877524Z 
2025-08-18T21:14:17.3877612Z <a id="api.routes.repository"></a>
2025-08-18T21:14:17.3877767Z 
2025-08-18T21:14:17.3877843Z # api.routes.repository
2025-08-18T21:14:17.3877972Z 
2025-08-18T21:14:17.3878043Z <a id="api.routes"></a>
2025-08-18T21:14:17.3878159Z 
2025-08-18T21:14:17.3878229Z # api.routes
2025-08-18T21:14:17.3878325Z 
2025-08-18T21:14:17.3878537Z <a id="api.models.fee"></a>
2025-08-18T21:14:17.3878672Z 
2025-08-18T21:14:17.3878746Z # api.models.fee
2025-08-18T21:14:17.3878850Z 
2025-08-18T21:14:17.3878921Z <a id="api.models"></a>
2025-08-18T21:14:17.3879049Z 
2025-08-18T21:14:17.3879112Z # api.models
2025-08-18T21:14:17.3879206Z 
2025-08-18T21:14:17.3879286Z <a id="api.roi_repository"></a>
2025-08-18T21:14:17.3879432Z 
2025-08-18T21:14:17.3879504Z # api.roi\_repository
2025-08-18T21:14:17.3879618Z 
2025-08-18T21:14:17.3879692Z <a id="api.main"></a>
2025-08-18T21:14:17.3879809Z 
2025-08-18T21:14:17.3879872Z # api.main
2025-08-18T21:14:17.3879968Z 
2025-08-18T21:14:17.3880047Z <a id="api.main.ready"></a>
2025-08-18T21:14:17.3880178Z 
2025-08-18T21:14:17.3880239Z #### ready
2025-08-18T21:14:17.3880333Z 
2025-08-18T21:14:17.3880395Z ```python
2025-08-18T21:14:17.3880655Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T21:14:17.3881075Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T21:14:17.3881542Z                                                                       str]
2025-08-18T21:14:17.3881767Z ```
2025-08-18T21:14:17.3881857Z 
2025-08-18T21:14:17.3881953Z Return 200 only when migrations are at head.
2025-08-18T21:14:17.3882361Z 
2025-08-18T21:14:17.3882468Z <a id="api.config"></a>
2025-08-18T21:14:17.3882597Z 
2025-08-18T21:14:17.3882663Z # api.config
2025-08-18T21:14:17.3882758Z 
2025-08-18T21:14:17.3882831Z <a id="etl"></a>
2025-08-18T21:14:17.3882932Z 
2025-08-18T21:14:17.3882991Z # etl
2025-08-18T21:14:17.3883087Z 
2025-08-18T21:14:17.3883168Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T21:14:17.3883316Z 
2025-08-18T21:14:17.3883390Z # etl.fba\_fee\_ingestor
2025-08-18T21:14:17.3883527Z 
2025-08-18T21:14:17.3883607Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T21:14:17.3883751Z 
2025-08-18T21:14:17.3883830Z # etl.sp\_fees\_ingestor
2025-08-18T21:14:17.3883951Z 
2025-08-18T21:14:17.3884029Z <a id="etl.keepa_ingestor"></a>
2025-08-18T21:14:17.3884180Z 
2025-08-18T21:14:17.3884254Z # etl.keepa\_ingestor
2025-08-18T21:14:17.3884367Z 
2025-08-18T21:14:17.3884434Z <a id="etl.db"></a>
2025-08-18T21:14:17.3884545Z 
2025-08-18T21:14:17.3884606Z # etl.db
2025-08-18T21:14:17.3884692Z 
2025-08-18T21:14:17.3884781Z <a id="etl.dialects.schemas"></a>
2025-08-18T21:14:17.3884930Z 
2025-08-18T21:14:17.3885003Z # etl.dialects.schemas
2025-08-18T21:14:17.3885127Z 
2025-08-18T21:14:17.3885233Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T21:14:17.3885417Z 
2025-08-18T21:14:17.3885506Z # etl.dialects.amazon\_reimbursements
2025-08-18T21:14:17.3885676Z 
2025-08-18T21:14:17.3885772Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T21:14:17.3885947Z 
2025-08-18T21:14:17.3886039Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T21:14:17.3886198Z 
2025-08-18T21:14:17.3886288Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T21:14:17.3886458Z 
2025-08-18T21:14:17.3886540Z # etl.dialects.amazon\_returns
2025-08-18T21:14:17.3886682Z 
2025-08-18T21:14:17.3886784Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T21:14:17.3886959Z 
2025-08-18T21:14:17.3887044Z # etl.dialects.amazon\_fee\_preview
2025-08-18T21:14:17.3887197Z 
2025-08-18T21:14:17.3887308Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T21:14:17.3887494Z 
2025-08-18T21:14:17.3887583Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T21:14:17.3887754Z 
2025-08-18T21:14:17.3887852Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T21:14:17.3888023Z 
2025-08-18T21:14:17.3888108Z # etl.dialects.amazon\_settlements
2025-08-18T21:14:17.3888265Z 
2025-08-18T21:14:17.3888340Z <a id="etl.dialects"></a>
2025-08-18T21:14:17.3888468Z 
2025-08-18T21:14:17.3888544Z # etl.dialects
2025-08-18T21:14:17.3888643Z 
2025-08-18T21:14:17.3888710Z <a id="ingest"></a>
2025-08-18T21:14:17.3888818Z 
2025-08-18T21:14:17.3888887Z # ingest
2025-08-18T21:14:17.3888975Z 
2025-08-18T21:14:17.3889061Z <a id="ingest.maintenance"></a>
2025-08-18T21:14:17.3889210Z 
2025-08-18T21:14:17.3889282Z # ingest.maintenance
2025-08-18T21:14:17.3889531Z 
2025-08-18T21:14:17.3889621Z <a id="ingest.copy_loader"></a>
2025-08-18T21:14:17.3889760Z 
2025-08-18T21:14:17.3889835Z # ingest.copy\_loader
2025-08-18T21:14:17.3889952Z 
2025-08-18T21:14:17.3890060Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T21:14:17.3890241Z 
2025-08-18T21:14:17.3890314Z #### copy\_df\_via\_temp
2025-08-18T21:14:17.3890442Z 
2025-08-18T21:14:17.3890505Z ```python
2025-08-18T21:14:17.3890673Z def copy_df_via_temp(engine: Engine,
2025-08-18T21:14:17.3890911Z                      df: pd.DataFrame,
2025-08-18T21:14:17.3891148Z                      target_table: str,
2025-08-18T21:14:17.3891360Z                      *,
2025-08-18T21:14:17.3891570Z                      target_schema: Optional[str] = None,
2025-08-18T21:14:17.3891830Z                      columns: Sequence[str],
2025-08-18T21:14:17.3892320Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T21:14:17.3892608Z                      analyze_after: bool = False,
2025-08-18T21:14:17.3893011Z                      connection: Any | None = None) -> int
2025-08-18T21:14:17.3893242Z ```
2025-08-18T21:14:17.3893333Z 
2025-08-18T21:14:17.3893491Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T21:14:17.3893721Z 
2025-08-18T21:14:17.3893814Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T21:14:17.3893969Z 
2025-08-18T21:14:17.3894048Z # ingest.tests.test\_smoke
2025-08-18T21:14:17.3894184Z 
2025-08-18T21:14:17.3894259Z <a id="ingest.tests"></a>
2025-08-18T21:14:17.3894382Z 
2025-08-18T21:14:17.3894448Z # ingest.tests
2025-08-18T21:14:17.3894553Z 
2025-08-18T21:14:17.3894636Z <a id="ingest.upload_router"></a>
2025-08-18T21:14:17.3894783Z 
2025-08-18T21:14:17.3894865Z # ingest.upload\_router
2025-08-18T21:14:17.3894987Z 
2025-08-18T21:14:17.3895070Z <a id="ingest.email_watcher"></a>
2025-08-18T21:14:17.3895219Z 
2025-08-18T21:14:17.3895291Z # ingest.email\_watcher
2025-08-18T21:14:17.3895405Z 
2025-08-18T21:14:17.3895490Z <a id="ingest.email_watcher.main"></a>
2025-08-18T21:14:17.3895664Z 
2025-08-18T21:14:17.3895726Z #### main
2025-08-18T21:14:17.3895815Z 
2025-08-18T21:14:17.3895887Z ```python
2025-08-18T21:14:17.3896047Z def main() -> dict[str, str]
2025-08-18T21:14:17.3896242Z ```
2025-08-18T21:14:17.3896325Z 
2025-08-18T21:14:17.3896464Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T21:14:17.3896700Z 
2025-08-18T21:14:17.3896828Z Returns {"status": "success"} when processing completes.
2025-08-18T21:14:17.3897043Z 
2025-08-18T21:14:17.3897117Z <a id="ingest.tasks"></a>
2025-08-18T21:14:17.3897242Z 
2025-08-18T21:14:17.3897312Z # ingest.tasks
2025-08-18T21:14:17.3897412Z 
2025-08-18T21:14:17.3897508Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T21:14:17.3897685Z 
2025-08-18T21:14:17.3897756Z #### task\_import\_file
2025-08-18T21:14:17.3897870Z 
2025-08-18T21:14:17.3897931Z ```python
2025-08-18T21:14:17.3898143Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T21:14:17.3898417Z def task_import_file(self: Any,
2025-08-18T21:14:17.3898641Z                      uri: str,
2025-08-18T21:14:17.3898864Z                      report_type: Optional[str] = None,
2025-08-18T21:14:17.3899137Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T21:14:17.3899376Z ```
2025-08-18T21:14:17.3899458Z 
2025-08-18T21:14:17.3899589Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T21:14:17.3899803Z 
2025-08-18T21:14:17.3899884Z <a id="ingest.celery_app"></a>
2025-08-18T21:14:17.3900024Z 
2025-08-18T21:14:17.3900095Z # ingest.celery\_app
2025-08-18T21:14:17.3900218Z 
2025-08-18T21:14:17.3900298Z <a id="ingest.ingest_router"></a>
2025-08-18T21:14:17.3900446Z 
2025-08-18T21:14:17.3900527Z # ingest.ingest\_router
2025-08-18T21:14:17.3900643Z 
2025-08-18T21:14:17.3900717Z <a id="logistics_etl"></a>
2025-08-18T21:14:17.3900848Z 
2025-08-18T21:14:17.3900918Z # logistics\_etl
2025-08-18T21:14:17.3901022Z 
2025-08-18T21:14:17.3901100Z Daily logistics ETL job.
2025-08-18T21:14:17.3901236Z 
2025-08-18T21:14:17.3901434Z <a id="logistics_etl.__main__"></a>
2025-08-18T21:14:17.3901588Z 
2025-08-18T21:14:17.3901673Z # logistics\_etl.\_\_main\_\_
2025-08-18T21:14:17.3901809Z 
2025-08-18T21:14:17.3901890Z <a id="logistics_etl.dsn"></a>
2025-08-18T21:14:17.3902240Z 
2025-08-18T21:14:17.3902382Z # logistics\_etl.dsn
2025-08-18T21:14:17.3902526Z 
2025-08-18T21:14:17.3902646Z Local DSN builder to avoid cross-service dependency.
2025-08-18T21:14:17.3902854Z 
2025-08-18T21:14:17.3902944Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T21:14:17.3903113Z 
2025-08-18T21:14:17.3903184Z #### build\_dsn
2025-08-18T21:14:17.3903286Z 
2025-08-18T21:14:17.3903350Z ```python
2025-08-18T21:14:17.3903533Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:14:17.3903749Z ```
2025-08-18T21:14:17.3903838Z 
2025-08-18T21:14:17.3903977Z Return a Postgres DSN assembled from environment variables.
2025-08-18T21:14:17.3904205Z 
2025-08-18T21:14:17.3904356Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T21:14:17.3904905Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T21:14:17.3905256Z error when any required variable is missing.
2025-08-18T21:14:17.3905431Z 
2025-08-18T21:14:17.3905526Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T21:14:17.3905702Z 
2025-08-18T21:14:17.3905784Z # logistics\_etl.tests.conftest
2025-08-18T21:14:17.3905928Z 
2025-08-18T21:14:17.3906031Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T21:14:17.3906224Z 
2025-08-18T21:14:17.3906312Z # logistics\_etl.tests.test\_repository
2025-08-18T21:14:17.3906477Z 
2025-08-18T21:14:17.3906573Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T21:14:17.3906742Z 
2025-08-18T21:14:17.3906824Z # logistics\_etl.tests.test\_cron
2025-08-18T21:14:17.3906977Z 
2025-08-18T21:14:17.3907076Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T21:14:17.3907253Z 
2025-08-18T21:14:17.3907337Z # logistics\_etl.tests.test\_imports
2025-08-18T21:14:17.3907497Z 
2025-08-18T21:14:17.3907595Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T21:14:17.3907770Z 
2025-08-18T21:14:17.3907858Z # logistics\_etl.tests.test\_smoke
2025-08-18T21:14:17.3908008Z 
2025-08-18T21:14:17.3908101Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T21:14:17.3908275Z 
2025-08-18T21:14:17.3908359Z # logistics\_etl.tests.test\_client
2025-08-18T21:14:17.3908510Z 
2025-08-18T21:14:17.3908592Z <a id="logistics_etl.tests"></a>
2025-08-18T21:14:17.3908741Z 
2025-08-18T21:14:17.3908812Z # logistics\_etl.tests
2025-08-18T21:14:17.3908929Z 
2025-08-18T21:14:17.3909012Z <a id="logistics_etl.flow"></a>
2025-08-18T21:14:17.3909149Z 
2025-08-18T21:14:17.3909218Z # logistics\_etl.flow
2025-08-18T21:14:17.3909338Z 
2025-08-18T21:14:17.3909418Z <a id="logistics_etl.client"></a>
2025-08-18T21:14:17.3909564Z 
2025-08-18T21:14:17.3909636Z # logistics\_etl.client
2025-08-18T21:14:17.3909760Z 
2025-08-18T21:14:17.3909837Z <a id="logistics_etl.cron"></a>
2025-08-18T21:14:17.3909973Z 
2025-08-18T21:14:17.3910049Z # logistics\_etl.cron
2025-08-18T21:14:17.3910169Z 
2025-08-18T21:14:17.3910247Z <a id="logistics_etl.db"></a>
2025-08-18T21:14:17.3910383Z 
2025-08-18T21:14:17.3950393Z # logistics\_etl.db
2025-08-18T21:14:17.3950668Z 
2025-08-18T21:14:17.3950882Z <a id="logistics_etl.repository"></a>
2025-08-18T21:14:17.3951259Z 
2025-08-18T21:14:17.3951430Z # logistics\_etl.repository
2025-08-18T21:14:17.3951723Z 
2025-08-18T21:14:17.3951882Z <a id="alert_bot"></a>
2025-08-18T21:14:17.3952321Z 
2025-08-18T21:14:17.3952457Z # alert\_bot
2025-08-18T21:14:17.3952663Z 
2025-08-18T21:14:17.3952842Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T21:14:17.3953159Z 
2025-08-18T21:14:17.3953264Z # alert\_bot.tests.test\_smoke
2025-08-18T21:14:17.3953449Z 
2025-08-18T21:14:17.3953545Z <a id="alert_bot.tests"></a>
2025-08-18T21:14:17.3953714Z 
2025-08-18T21:14:17.3953808Z # alert\_bot.tests
2025-08-18T21:14:17.3953941Z 
2025-08-18T21:14:17.3954048Z <a id="alert_bot.alert_bot"></a>
2025-08-18T21:14:17.3954230Z 
2025-08-18T21:14:17.3954333Z # alert\_bot.alert\_bot
2025-08-18T21:14:17.3954692Z 
2025-08-18T21:14:17.3954795Z <a id="alert_bot.rules"></a>
2025-08-18T21:14:17.3954974Z 
2025-08-18T21:14:17.3955058Z # alert\_bot.rules
2025-08-18T21:14:17.3955191Z 
2025-08-18T21:14:17.3955279Z <a id="common"></a>
2025-08-18T21:14:17.3955409Z 
2025-08-18T21:14:17.3955485Z # common
2025-08-18T21:14:17.3955668Z 
2025-08-18T21:14:17.3955767Z <a id="common.dsn"></a>
2025-08-18T21:14:17.3955913Z 
2025-08-18T21:14:17.3955992Z # common.dsn
2025-08-18T21:14:17.3956117Z 
2025-08-18T21:14:17.3956220Z <a id="common.dsn.build_dsn"></a>
2025-08-18T21:14:17.3956407Z 
2025-08-18T21:14:17.3956489Z #### build\_dsn
2025-08-18T21:14:17.3956614Z 
2025-08-18T21:14:17.3956692Z ```python
2025-08-18T21:14:17.3956928Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:14:17.3957208Z ```
2025-08-18T21:14:17.3957318Z 
2025-08-18T21:14:17.3957474Z Return a Postgres DSN, validating required variables.
2025-08-18T21:14:17.3957730Z 
2025-08-18T21:14:17.3957966Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T21:14:17.3958669Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T21:14:17.3959192Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T21:14:17.3959508Z missing.
2025-08-18T21:14:17.3959596Z 
2025-08-18T21:14:17.3959686Z <a id="common.models_vendor"></a>
2025-08-18T21:14:17.3959835Z 
2025-08-18T21:14:17.3959910Z # common.models\_vendor
2025-08-18T21:14:17.3960037Z 
2025-08-18T21:14:17.3960127Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T21:14:17.3960293Z 
2025-08-18T21:14:17.3960364Z ## Vendor Objects
2025-08-18T21:14:17.3960474Z 
2025-08-18T21:14:17.3960539Z ```python
2025-08-18T21:14:17.3960699Z class Vendor(Base)
2025-08-18T21:14:17.3960860Z ```
2025-08-18T21:14:17.3960944Z 
2025-08-18T21:14:17.3961031Z Vendor of inventory items.
2025-08-18T21:14:17.3961163Z 
2025-08-18T21:14:17.3961266Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T21:14:17.3961458Z 
2025-08-18T21:14:17.3961535Z ## VendorPrice Objects
2025-08-18T21:14:17.3961651Z 
2025-08-18T21:14:17.3961720Z ```python
2025-08-18T21:14:17.3961879Z class VendorPrice(Base)
2025-08-18T21:14:17.3962199Z ```
2025-08-18T21:14:17.3962283Z 
2025-08-18T21:14:17.3962385Z Association table linking vendors to pricing.
2025-08-18T21:14:17.3962581Z 
2025-08-18T21:14:17.3962659Z <a id="common.db_url"></a>
2025-08-18T21:14:17.3962788Z 
2025-08-18T21:14:17.3962855Z # common.db\_url
2025-08-18T21:14:17.3962970Z 
2025-08-18T21:14:17.3963056Z <a id="common.db_url.build_url"></a>
2025-08-18T21:14:17.3963212Z 
2025-08-18T21:14:17.3963282Z #### build\_url
2025-08-18T21:14:17.3963381Z 
2025-08-18T21:14:17.3963444Z ```python
2025-08-18T21:14:17.3963621Z def build_url(async_: bool = True) -> str
2025-08-18T21:14:17.3963843Z ```
2025-08-18T21:14:17.3963928Z 
2025-08-18T21:14:17.3964026Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:14:17.3964201Z 
2025-08-18T21:14:17.3964278Z <a id="common.keepa"></a>
2025-08-18T21:14:17.3964427Z 
2025-08-18T21:14:17.3964494Z # common.keepa
2025-08-18T21:14:17.3964594Z 
2025-08-18T21:14:17.3964674Z <a id="common.llm"></a>
2025-08-18T21:14:17.3964789Z 
2025-08-18T21:14:17.3964852Z # common.llm
2025-08-18T21:14:17.3964947Z 
2025-08-18T21:14:17.3965034Z <a id="common.settings"></a>
2025-08-18T21:14:17.3965174Z 
2025-08-18T21:14:17.3965241Z # common.settings
2025-08-18T21:14:17.3965355Z 
2025-08-18T21:14:17.3965425Z <a id="common.db"></a>
2025-08-18T21:14:17.3965540Z 
2025-08-18T21:14:17.3965609Z # common.db
2025-08-18T21:14:17.3965701Z 
2025-08-18T21:14:17.3965794Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T21:14:17.3965964Z 
2025-08-18T21:14:17.3966048Z #### build\_sqlalchemy\_url
2025-08-18T21:14:17.3966181Z 
2025-08-18T21:14:17.3966243Z ```python
2025-08-18T21:14:17.3966417Z def build_sqlalchemy_url() -> str
2025-08-18T21:14:17.3966620Z ```
2025-08-18T21:14:17.3966708Z 
2025-08-18T21:14:17.3966804Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:14:17.3966974Z 
2025-08-18T21:14:17.3967229Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T21:14:17.3967395Z 
2025-08-18T21:14:17.3967469Z #### build\_asyncpg\_dsn
2025-08-18T21:14:17.3967592Z 
2025-08-18T21:14:17.3967660Z ```python
2025-08-18T21:14:17.3967829Z def build_asyncpg_dsn() -> str
2025-08-18T21:14:17.3968028Z ```
2025-08-18T21:14:17.3968108Z 
2025-08-18T21:14:17.3968238Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:14:17.3968454Z 
2025-08-18T21:14:17.3968538Z <a id="common.db.refresh_mvs"></a>
2025-08-18T21:14:17.3968687Z 
2025-08-18T21:14:17.3968758Z #### refresh\_mvs
2025-08-18T21:14:17.3968864Z 
2025-08-18T21:14:17.3968925Z ```python
2025-08-18T21:14:17.3969123Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:14:17.3969367Z ```
2025-08-18T21:14:17.3969452Z 
2025-08-18T21:14:17.3969587Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:14:17.3969801Z 
2025-08-18T21:14:17.3969877Z <a id="common.config"></a>
2025-08-18T21:14:17.3970012Z 
2025-08-18T21:14:17.3970200Z # common.config
2025-08-18T21:14:17.3970304Z 
2025-08-18T21:14:17.3970384Z <a id="common.base"></a>
2025-08-18T21:14:17.3970507Z 
2025-08-18T21:14:17.3970572Z # common.base
2025-08-18T21:14:17.3970674Z 
2025-08-18T21:14:17.3970754Z <a id="common.base.Base"></a>
2025-08-18T21:14:17.3970889Z 
2025-08-18T21:14:17.3970952Z ## Base Objects
2025-08-18T21:14:17.3971056Z 
2025-08-18T21:14:17.3971118Z ```python
2025-08-18T21:14:17.3971286Z class Base(DeclarativeBase)
2025-08-18T21:14:17.3971473Z ```
2025-08-18T21:14:17.3971552Z 
2025-08-18T21:14:17.3971640Z Base class for SQLAlchemy models.
2025-08-18T21:14:17.3971786Z 
2025-08-18T21:14:17.3971857Z <a id="repricer"></a>
2025-08-18T21:14:17.3971979Z 
2025-08-18T21:14:17.3972141Z # repricer
2025-08-18T21:14:17.3972235Z 
2025-08-18T21:14:17.3972323Z <a id="repricer.app.schemas"></a>
2025-08-18T21:14:17.3972480Z 
2025-08-18T21:14:17.3972558Z # repricer.app.schemas
2025-08-18T21:14:17.3972678Z 
2025-08-18T21:14:17.3972765Z <a id="repricer.app.deps"></a>
2025-08-18T21:14:17.3972917Z 
2025-08-18T21:14:17.3972992Z # repricer.app.deps
2025-08-18T21:14:17.3973109Z 
2025-08-18T21:14:17.3973227Z Placeholder module for Keepa / SP-API clients.
2025-08-18T21:14:17.3973411Z 
2025-08-18T21:14:17.3973494Z <a id="repricer.app.logic"></a>
2025-08-18T21:14:17.3973641Z 
2025-08-18T21:14:17.3973715Z # repricer.app.logic
2025-08-18T21:14:17.3973829Z 
2025-08-18T21:14:17.3973935Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T21:14:17.3974107Z 
2025-08-18T21:14:17.3974170Z #### MIN\_MARGIN
2025-08-18T21:14:17.3974276Z 
2025-08-18T21:14:17.3974337Z 15 % ROI
2025-08-18T21:14:17.3974423Z 
2025-08-18T21:14:17.3974526Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T21:14:17.3974710Z 
2025-08-18T21:14:17.3974778Z #### compute\_price
2025-08-18T21:14:17.3974882Z 
2025-08-18T21:14:17.3974956Z ```python
2025-08-18T21:14:17.3975198Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T21:14:17.3975499Z ```
2025-08-18T21:14:17.3975582Z 
2025-08-18T21:14:17.3975704Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T21:14:17.3975995Z Replace with real competitive logic later.
2025-08-18T21:14:17.3976167Z 
2025-08-18T21:14:17.3976254Z <a id="repricer.app.main"></a>
2025-08-18T21:14:17.3976405Z 
2025-08-18T21:14:17.3976480Z # repricer.app.main
2025-08-18T21:14:17.3976598Z 
2025-08-18T21:14:17.3976686Z <a id="repricer.app"></a>
2025-08-18T21:14:17.3976819Z 
2025-08-18T21:14:17.3976888Z # repricer.app
2025-08-18T21:14:17.3976991Z 
2025-08-18T21:14:17.3977095Z <a id="repricer.tests.test_imports"></a>
2025-08-18T21:14:17.3977271Z 
2025-08-18T21:14:17.3977354Z # repricer.tests.test\_imports
2025-08-18T21:14:17.3977506Z 
2025-08-18T21:14:17.3977596Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T21:14:17.3977761Z 
2025-08-18T21:14:17.3977851Z # repricer.tests.test\_smoke
2025-08-18T21:14:17.3977988Z 
2025-08-18T21:14:17.3978069Z <a id="repricer.tests"></a>
2025-08-18T21:14:17.3978201Z 
2025-08-18T21:14:17.3978274Z # repricer.tests
2025-08-18T21:14:17.3978502Z 
2025-08-18T21:14:17.3978567Z <a id="db"></a>
2025-08-18T21:14:17.3978673Z 
2025-08-18T21:14:17.3978732Z # db
2025-08-18T21:14:17.3978815Z 
2025-08-18T21:14:17.3978891Z <a id="db.utils.views"></a>
2025-08-18T21:14:17.3979029Z 
2025-08-18T21:14:17.3979095Z # db.utils.views
2025-08-18T21:14:17.3979198Z 
2025-08-18T21:14:17.3979305Z <a id="db.utils.views.replace_view"></a>
2025-08-18T21:14:17.3979514Z 
2025-08-18T21:14:17.3979582Z #### replace\_view
2025-08-18T21:14:17.3979692Z 
2025-08-18T21:14:17.3979755Z ```python
2025-08-18T21:14:17.3979956Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T21:14:17.3980206Z ```
2025-08-18T21:14:17.3980290Z 
2025-08-18T21:14:17.3980385Z Drop and recreate a SQL view atomically.
2025-08-18T21:14:17.3980550Z 
2025-08-18T21:14:17.3980624Z <a id="db.utils"></a>
2025-08-18T21:14:17.3980743Z 
2025-08-18T21:14:17.3980813Z # db.utils
2025-08-18T21:14:17.3980903Z 
2025-08-18T21:14:17.3980981Z <a id="price_importer"></a>
2025-08-18T21:14:17.3981116Z 
2025-08-18T21:14:17.3981300Z # price\_importer
2025-08-18T21:14:17.3981406Z 
2025-08-18T21:14:17.3981510Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T21:14:17.3981701Z 
2025-08-18T21:14:17.3981791Z # price\_importer.services\_common.dsn
2025-08-18T21:14:17.3981957Z 
2025-08-18T21:14:17.3982192Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T21:14:17.3982405Z 
2025-08-18T21:14:17.3982469Z #### build\_dsn
2025-08-18T21:14:17.3982574Z 
2025-08-18T21:14:17.3982637Z ```python
2025-08-18T21:14:17.3982810Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:14:17.3983034Z ```
2025-08-18T21:14:17.3983119Z 
2025-08-18T21:14:17.3983191Z Return safe DSN.
2025-08-18T21:14:17.3983296Z 
2025-08-18T21:14:17.3983636Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T21:14:17.3983840Z 
2025-08-18T21:14:17.3983975Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T21:14:17.3984180Z 
2025-08-18T21:14:17.3984290Z # price\_importer.services\_common.models\_vendor
2025-08-18T21:14:17.3984503Z 
2025-08-18T21:14:17.3984610Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T21:14:17.3984803Z 
2025-08-18T21:14:17.3984906Z # price\_importer.services\_common.db\_url
2025-08-18T21:14:17.3985079Z 
2025-08-18T21:14:17.3985210Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T21:14:17.3985431Z 
2025-08-18T21:14:17.3985496Z #### build\_url
2025-08-18T21:14:17.3985598Z 
2025-08-18T21:14:17.3985661Z ```python
2025-08-18T21:14:17.3985839Z def build_url(async_: bool = True) -> str
2025-08-18T21:14:17.3986063Z ```
2025-08-18T21:14:17.3986156Z 
2025-08-18T21:14:17.3986255Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:14:17.3986430Z 
2025-08-18T21:14:17.3986544Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T21:14:17.3986729Z 
2025-08-18T21:14:17.3986822Z # price\_importer.services\_common.keepa
2025-08-18T21:14:17.3986998Z 
2025-08-18T21:14:17.3987100Z <a id="price_importer.services_common.llm"></a>
2025-08-18T21:14:17.3987285Z 
2025-08-18T21:14:17.3987379Z # price\_importer.services\_common.llm
2025-08-18T21:14:17.3987548Z 
2025-08-18T21:14:17.3987663Z <a id="price_importer.services_common.settings"></a>
2025-08-18T21:14:17.3987858Z 
2025-08-18T21:14:17.3987962Z # price\_importer.services\_common.settings
2025-08-18T21:14:17.3988137Z 
2025-08-18T21:14:17.3988237Z <a id="price_importer.services_common.db"></a>
2025-08-18T21:14:17.3988427Z 
2025-08-18T21:14:17.3988517Z # price\_importer.services\_common.db
2025-08-18T21:14:17.3988678Z 
2025-08-18T21:14:17.3988832Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T21:14:17.3989077Z 
2025-08-18T21:14:17.3989156Z #### build\_sqlalchemy\_url
2025-08-18T21:14:17.3989285Z 
2025-08-18T21:14:17.3989354Z ```python
2025-08-18T21:14:17.3989535Z def build_sqlalchemy_url() -> str
2025-08-18T21:14:17.3989748Z ```
2025-08-18T21:14:17.3989831Z 
2025-08-18T21:14:17.3989924Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:14:17.3990103Z 
2025-08-18T21:14:17.3990251Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T21:14:17.3990600Z 
2025-08-18T21:14:17.3990681Z #### build\_asyncpg\_dsn
2025-08-18T21:14:17.3990806Z 
2025-08-18T21:14:17.3990868Z ```python
2025-08-18T21:14:17.3991038Z def build_asyncpg_dsn() -> str
2025-08-18T21:14:17.3991232Z ```
2025-08-18T21:14:17.3991316Z 
2025-08-18T21:14:17.3991442Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:14:17.3991651Z 
2025-08-18T21:14:17.3991776Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T21:14:17.3991988Z 
2025-08-18T21:14:17.3992154Z #### refresh\_mvs
2025-08-18T21:14:17.3992261Z 
2025-08-18T21:14:17.3992328Z ```python
2025-08-18T21:14:17.3992523Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:14:17.3992776Z ```
2025-08-18T21:14:17.3992858Z 
2025-08-18T21:14:17.3992995Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:14:17.3993223Z 
2025-08-18T21:14:17.3993320Z <a id="price_importer.services_common"></a>
2025-08-18T21:14:17.3993621Z 
2025-08-18T21:14:17.3993714Z # price\_importer.services\_common
2025-08-18T21:14:17.3993869Z 
2025-08-18T21:14:17.3993972Z <a id="price_importer.services_common.base"></a>
2025-08-18T21:14:17.3994158Z 
2025-08-18T21:14:17.3994255Z # price\_importer.services\_common.base
2025-08-18T21:14:17.3994421Z 
2025-08-18T21:14:17.3994511Z <a id="price_importer.normaliser"></a>
2025-08-18T21:14:17.3994679Z 
2025-08-18T21:14:17.3994761Z # price\_importer.normaliser
2025-08-18T21:14:17.3994901Z 
2025-08-18T21:14:17.3995012Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T21:14:17.3995196Z 
2025-08-18T21:14:17.3995286Z # price\_importer.common.models\_vendor
2025-08-18T21:14:17.3995448Z 
2025-08-18T21:14:17.3995547Z <a id="price_importer.common.db_url"></a>
2025-08-18T21:14:17.3995717Z 
2025-08-18T21:14:17.3995803Z # price\_importer.common.db\_url
2025-08-18T21:14:17.3995958Z 
2025-08-18T21:14:17.3996063Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T21:14:17.3996259Z 
2025-08-18T21:14:17.3996328Z #### make\_dsn
2025-08-18T21:14:17.3996429Z 
2025-08-18T21:14:17.3996491Z ```python
2025-08-18T21:14:17.3996671Z def make_dsn(async_: bool = False) -> str
2025-08-18T21:14:17.3996893Z ```
2025-08-18T21:14:17.3996981Z 
2025-08-18T21:14:17.3997101Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T21:14:17.3997301Z 
2025-08-18T21:14:17.3997409Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T21:14:17.3997610Z 
2025-08-18T21:14:17.3997676Z #### build\_url
2025-08-18T21:14:17.3997778Z 
2025-08-18T21:14:17.3997847Z ```python
2025-08-18T21:14:17.3998024Z def build_url(async_: bool = False) -> str
2025-08-18T21:14:17.3998251Z ```
2025-08-18T21:14:17.3998333Z 
2025-08-18T21:14:17.3998452Z Return Postgres DSN built from environment variables.
2025-08-18T21:14:17.3998656Z 
2025-08-18T21:14:17.3998744Z <a id="price_importer.common"></a>
2025-08-18T21:14:17.3998899Z 
2025-08-18T21:14:17.3998975Z # price\_importer.common
2025-08-18T21:14:17.3999115Z 
2025-08-18T21:14:17.3999218Z <a id="price_importer.common.base"></a>
2025-08-18T21:14:17.3999391Z 
2025-08-18T21:14:17.3999493Z # price\_importer.common.base
2025-08-18T21:14:17.3999639Z 
2025-08-18T21:14:17.3999737Z <a id="price_importer.tests.conftest"></a>
2025-08-18T21:14:17.3999918Z 
2025-08-18T21:14:17.4000003Z # price\_importer.tests.conftest
2025-08-18T21:14:17.4000174Z 
2025-08-18T21:14:17.4000274Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T21:14:17.4000459Z 
2025-08-18T21:14:17.4000547Z # price\_importer.tests.test\_reader
2025-08-18T21:14:17.4000706Z 
2025-08-18T21:14:17.4000811Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T21:14:17.4000989Z 
2025-08-18T21:14:17.4001080Z # price\_importer.tests.test\_imports
2025-08-18T21:14:17.4001247Z 
2025-08-18T21:14:17.4001347Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T21:14:17.4001521Z 
2025-08-18T21:14:17.4001607Z # price\_importer.tests.test\_smoke
2025-08-18T21:14:17.4001772Z 
2025-08-18T21:14:17.4001876Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T21:14:17.4002321Z 
2025-08-18T21:14:17.4002422Z # price\_importer.tests.test\_normaliser
2025-08-18T21:14:17.4002590Z 
2025-08-18T21:14:17.4002676Z <a id="price_importer.tests"></a>
2025-08-18T21:14:17.4002834Z 
2025-08-18T21:14:17.4002910Z # price\_importer.tests
2025-08-18T21:14:17.4003032Z 
2025-08-18T21:14:17.4003118Z <a id="price_importer.reader"></a>
2025-08-18T21:14:17.4003274Z 
2025-08-18T21:14:17.4003349Z # price\_importer.reader
2025-08-18T21:14:17.4003475Z 
2025-08-18T21:14:17.4003569Z <a id="price_importer.repository"></a>
2025-08-18T21:14:17.4003733Z 
2025-08-18T21:14:17.4003817Z # price\_importer.repository
2025-08-18T21:14:17.4003965Z 
2025-08-18T21:14:17.4004047Z <a id="price_importer.import"></a>
2025-08-18T21:14:17.4004195Z 
2025-08-18T21:14:17.4004276Z # price\_importer.import
2025-08-18T21:14:17.4004407Z 
2025-08-18T21:14:17.4004482Z <a id="fees_h10"></a>
2025-08-18T21:14:17.4004595Z 
2025-08-18T21:14:17.4004662Z # fees\_h10
2025-08-18T21:14:17.4004883Z 
2025-08-18T21:14:17.4004961Z <a id="fees_h10.worker"></a>
2025-08-18T21:14:17.4005100Z 
2025-08-18T21:14:17.4005165Z # fees\_h10.worker
2025-08-18T21:14:17.4005269Z 
2025-08-18T21:14:17.4005367Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T21:14:17.4005551Z 
2025-08-18T21:14:17.4005623Z #### list\_active\_asins
2025-08-18T21:14:17.4005745Z 
2025-08-18T21:14:17.4005814Z ```python
2025-08-18T21:14:17.4005984Z def list_active_asins() -> list[str]
2025-08-18T21:14:17.4006197Z ```
2025-08-18T21:14:17.4006279Z 
2025-08-18T21:14:17.4006391Z Return known ASINs or an empty list if unavailable.
2025-08-18T21:14:17.4006591Z 
2025-08-18T21:14:17.4006676Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T21:14:17.4006834Z 
2025-08-18T21:14:17.4006917Z # fees\_h10.tests.test\_smoke
2025-08-18T21:14:17.4007058Z 
2025-08-18T21:14:17.4007132Z <a id="fees_h10.tests"></a>
2025-08-18T21:14:17.4007261Z 
2025-08-18T21:14:17.4007332Z # fees\_h10.tests
2025-08-18T21:14:17.4007434Z 
2025-08-18T21:14:17.4007515Z <a id="fees_h10.client"></a>
2025-08-18T21:14:17.4007655Z 
2025-08-18T21:14:17.4007722Z # fees\_h10.client
2025-08-18T21:14:17.4007826Z 
2025-08-18T21:14:17.4007908Z <a id="fees_h10.repository"></a>
2025-08-18T21:14:17.4008058Z 
2025-08-18T21:14:17.4008132Z # fees\_h10.repository
2025-08-18T21:14:17.4008249Z 
2025-08-18T21:14:17.4008322Z <a id="emailer"></a>
2025-08-18T21:14:17.4008433Z 
2025-08-18T21:14:17.4008494Z # emailer
2025-08-18T21:14:17.4008588Z 
2025-08-18T21:14:17.4008691Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T21:14:17.4008870Z 
2025-08-18T21:14:17.4008959Z # emailer.tests.test\_import\_emailer
2025-08-18T21:14:17.4009125Z 
2025-08-18T21:14:17.4009208Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T21:14:17.4009363Z 
2025-08-18T21:14:17.4009448Z # emailer.tests.test\_smoke
2025-08-18T21:14:17.4009582Z 
2025-08-18T21:14:17.4009658Z <a id="emailer.tests"></a>
2025-08-18T21:14:17.4009785Z 
2025-08-18T21:14:17.4009860Z # emailer.tests
2025-08-18T21:14:17.4009965Z 
2025-08-18T21:14:17.4010058Z <a id="emailer.generate_body"></a>
2025-08-18T21:14:17.4010217Z 
2025-08-18T21:14:17.4010293Z # emailer.generate\_body
2025-08-18T21:14:17.4010416Z 
2025-08-18T21:14:17.4010493Z <a id="llm_server"></a>
2025-08-18T21:14:17.4010610Z 
2025-08-18T21:14:17.4010675Z # llm\_server
2025-08-18T21:14:17.4010771Z 
2025-08-18T21:14:17.4010858Z <a id="llm_server.app"></a>
2025-08-18T21:14:17.4010989Z 
2025-08-18T21:14:17.4011057Z # llm\_server.app
2025-08-18T21:14:17.4011168Z 
