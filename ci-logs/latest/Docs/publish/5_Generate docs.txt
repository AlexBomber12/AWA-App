2025-08-19T14:21:51.9432070Z ##[group]Run pydoc-markdown
2025-08-19T14:21:51.9432361Z [36;1mpydoc-markdown[0m
2025-08-19T14:21:51.9475215Z shell: /usr/bin/bash -e {0}
2025-08-19T14:21:51.9475460Z env:
2025-08-19T14:21:51.9475689Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:21:51.9476098Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T14:21:51.9476486Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:21:51.9476822Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:21:51.9477158Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:21:51.9477489Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T14:21:51.9477771Z ##[endgroup]
2025-08-19T14:21:52.2732248Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T14:21:52.2733086Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T14:21:52.2733539Z In "pydoc-markdown.yml"
2025-08-19T14:21:52.2733979Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T14:21:52.2734635Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T14:21:52.2735508Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T14:21:52.2735821Z 
2025-08-19T14:21:52.6108738Z <a id="__init__"></a>
2025-08-19T14:21:52.6109172Z 
2025-08-19T14:21:52.6109358Z # \_\_init\_\_
2025-08-19T14:21:52.6109598Z 
2025-08-19T14:21:52.6109734Z <a id="api"></a>
2025-08-19T14:21:52.6109958Z 
2025-08-19T14:21:52.6110085Z # api
2025-08-19T14:21:52.6110265Z 
2025-08-19T14:21:52.6110433Z <a id="api.errors"></a>
2025-08-19T14:21:52.6110703Z 
2025-08-19T14:21:52.6110853Z # api.errors
2025-08-19T14:21:52.6111071Z 
2025-08-19T14:21:52.6111261Z <a id="api.sentry_config"></a>
2025-08-19T14:21:52.6111511Z 
2025-08-19T14:21:52.6111650Z # api.sentry\_config
2025-08-19T14:21:52.6111871Z 
2025-08-19T14:21:52.6112036Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T14:21:52.6112334Z 
2025-08-19T14:21:52.6112979Z # api.tests.test\_stats\_contracts
2025-08-19T14:21:52.6113285Z 
2025-08-19T14:21:52.6113444Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T14:21:52.6113786Z 
2025-08-19T14:21:52.6113925Z # api.tests.test\_sentry\_scrub
2025-08-19T14:21:52.6114211Z 
2025-08-19T14:21:52.6114385Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T14:21:52.6114711Z 
2025-08-19T14:21:52.6115057Z # api.tests.test\_roi\_basic\_auth
2025-08-19T14:21:52.6115344Z 
2025-08-19T14:21:52.6115480Z <a id="api.tests.test_errors_json"></a>
2025-08-19T14:21:52.6115678Z 
2025-08-19T14:21:52.6115773Z # api.tests.test\_errors\_json
2025-08-19T14:21:52.6115943Z 
2025-08-19T14:21:52.6116037Z <a id="api.tests.test_llm"></a>
2025-08-19T14:21:52.6116201Z 
2025-08-19T14:21:52.6116286Z # api.tests.test\_llm
2025-08-19T14:21:52.6116431Z 
2025-08-19T14:21:52.6116534Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T14:21:52.6116731Z 
2025-08-19T14:21:52.6116831Z # api.tests.test\_roi\_filters
2025-08-19T14:21:52.6116994Z 
2025-08-19T14:21:52.6117106Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T14:21:52.6117314Z 
2025-08-19T14:21:52.6117407Z # api.tests.test\_sentry\_event
2025-08-19T14:21:52.6117571Z 
2025-08-19T14:21:52.6117717Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T14:21:52.6117988Z 
2025-08-19T14:21:52.6118083Z ## DummyTransport Objects
2025-08-19T14:21:52.6118244Z 
2025-08-19T14:21:52.6118328Z ```python
2025-08-19T14:21:52.6118532Z class DummyTransport()
2025-08-19T14:21:52.6118759Z ```
2025-08-19T14:21:52.6118862Z 
2025-08-19T14:21:52.6119077Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T14:21:52.6119409Z 
2025-08-19T14:21:52.6119495Z #### capture\_envelope
2025-08-19T14:21:52.6119636Z 
2025-08-19T14:21:52.6119711Z ```python
2025-08-19T14:21:52.6119926Z def capture_envelope(envelope)
2025-08-19T14:21:52.6120175Z ```
2025-08-19T14:21:52.6120273Z 
2025-08-19T14:21:52.6120423Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T14:21:52.6120684Z 
2025-08-19T14:21:52.6120789Z <a id="api.tests.test_cors"></a>
2025-08-19T14:21:52.6121216Z 
2025-08-19T14:21:52.6121304Z # api.tests.test\_cors
2025-08-19T14:21:52.6121451Z 
2025-08-19T14:21:52.6121549Z <a id="api.tests.test_imports"></a>
2025-08-19T14:21:52.6121747Z 
2025-08-19T14:21:52.6121843Z # api.tests.test\_imports
2025-08-19T14:21:52.6121996Z 
2025-08-19T14:21:52.6122098Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T14:21:52.6122296Z 
2025-08-19T14:21:52.6122395Z # api.tests.test\_rate\_limit
2025-08-19T14:21:52.6122541Z 
2025-08-19T14:21:52.6122643Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T14:21:52.6122826Z 
2025-08-19T14:21:52.6122890Z #### app
2025-08-19T14:21:52.6122980Z 
2025-08-19T14:21:52.6123050Z noqa: E402
2025-08-19T14:21:52.6123139Z 
2025-08-19T14:21:52.6123225Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T14:21:52.6123383Z 
2025-08-19T14:21:52.6123470Z # api.tests.test\_entrypoint
2025-08-19T14:21:52.6123605Z 
2025-08-19T14:21:52.6123687Z <a id="api.tests.test_health"></a>
2025-08-19T14:21:52.6123851Z 
2025-08-19T14:21:52.6123928Z # api.tests.test\_health
2025-08-19T14:21:52.6124050Z 
2025-08-19T14:21:52.6124129Z <a id="api.tests.test_score"></a>
2025-08-19T14:21:52.6124281Z 
2025-08-19T14:21:52.6124352Z # api.tests.test\_score
2025-08-19T14:21:52.6124473Z 
2025-08-19T14:21:52.6124557Z <a id="api.logging_config"></a>
2025-08-19T14:21:52.6124693Z 
2025-08-19T14:21:52.6124939Z # api.logging\_config
2025-08-19T14:21:52.6125106Z 
2025-08-19T14:21:52.6125188Z <a id="api.migrations.env"></a>
2025-08-19T14:21:52.6125326Z 
2025-08-19T14:21:52.6125398Z # api.migrations.env
2025-08-19T14:21:52.6125517Z 
2025-08-19T14:21:52.6125634Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T14:21:52.6125837Z 
2025-08-19T14:21:52.6125948Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T14:21:52.6126132Z 
2025-08-19T14:21:52.6126241Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T14:21:52.6126436Z 
2025-08-19T14:21:52.6126529Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T14:21:52.6126841Z 
2025-08-19T14:21:52.6126996Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T14:21:52.6127237Z 
2025-08-19T14:21:52.6127372Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T14:21:52.6127588Z 
2025-08-19T14:21:52.6127714Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T14:21:52.6127916Z 
2025-08-19T14:21:52.6128021Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T14:21:52.6128210Z 
2025-08-19T14:21:52.6128324Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T14:21:52.6128518Z 
2025-08-19T14:21:52.6128623Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T14:21:52.6128800Z 
2025-08-19T14:21:52.6128955Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T14:21:52.6129159Z 
2025-08-19T14:21:52.6129274Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T14:21:52.6129461Z 
2025-08-19T14:21:52.6129575Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T14:21:52.6129801Z 
2025-08-19T14:21:52.6129905Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T14:21:52.6130187Z 
2025-08-19T14:21:52.6130307Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T14:21:52.6130506Z 
2025-08-19T14:21:52.6130608Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T14:21:52.6130800Z 
2025-08-19T14:21:52.6130933Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T14:21:52.6131153Z 
2025-08-19T14:21:52.6131280Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T14:21:52.6131479Z 
2025-08-19T14:21:52.6131600Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T14:21:52.6131808Z 
2025-08-19T14:21:52.6131914Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T14:21:52.6132101Z 
2025-08-19T14:21:52.6132241Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T14:21:52.6132455Z 
2025-08-19T14:21:52.6132568Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T14:21:52.6132899Z 
2025-08-19T14:21:52.6133013Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T14:21:52.6133200Z 
2025-08-19T14:21:52.6133291Z # api.migrations.versions.0001\_baseline
2025-08-19T14:21:52.6133466Z 
2025-08-19T14:21:52.6133553Z <a id="api.migrations.versions"></a>
2025-08-19T14:21:52.6133713Z 
2025-08-19T14:21:52.6133799Z # api.migrations.versions
2025-08-19T14:21:52.6133926Z 
2025-08-19T14:21:52.6134002Z <a id="api.migrations"></a>
2025-08-19T14:21:52.6134132Z 
2025-08-19T14:21:52.6134208Z # api.migrations
2025-08-19T14:21:52.6134324Z 
2025-08-19T14:21:52.6134389Z <a id="api.db"></a>
2025-08-19T14:21:52.6134502Z 
2025-08-19T14:21:52.6134564Z # api.db
2025-08-19T14:21:52.6134650Z 
2025-08-19T14:21:52.6134731Z <a id="api.routes.score"></a>
2025-08-19T14:21:52.6135062Z 
2025-08-19T14:21:52.6135134Z # api.routes.score
2025-08-19T14:21:52.6135241Z 
2025-08-19T14:21:52.6135327Z <a id="api.routes.stats"></a>
2025-08-19T14:21:52.6135462Z 
2025-08-19T14:21:52.6135537Z # api.routes.stats
2025-08-19T14:21:52.6135651Z 
2025-08-19T14:21:52.6135726Z <a id="api.routes.roi"></a>
2025-08-19T14:21:52.6135854Z 
2025-08-19T14:21:52.6135919Z # api.routes.roi
2025-08-19T14:21:52.6136030Z 
2025-08-19T14:21:52.6136111Z <a id="api.routes.health"></a>
2025-08-19T14:21:52.6136247Z 
2025-08-19T14:21:52.6136321Z # api.routes.health
2025-08-19T14:21:52.6136428Z 
2025-08-19T14:21:52.6136518Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T14:21:52.6136689Z 
2025-08-19T14:21:52.6136752Z #### MAX\_SKEW
2025-08-19T14:21:52.6136849Z 
2025-08-19T14:21:52.6136913Z seconds
2025-08-19T14:21:52.6137004Z 
2025-08-19T14:21:52.6137092Z <a id="api.routes.health.health"></a>
2025-08-19T14:21:52.6137250Z 
2025-08-19T14:21:52.6137316Z #### health
2025-08-19T14:21:52.6137404Z 
2025-08-19T14:21:52.6137466Z ```python
2025-08-19T14:21:52.6137660Z @router.get("/health", include_in_schema=False)
2025-08-19T14:21:52.6138057Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T14:21:52.6138523Z ```
2025-08-19T14:21:52.6138613Z 
2025-08-19T14:21:52.6138724Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T14:21:52.6138929Z 
2025-08-19T14:21:52.6139016Z <a id="api.routes.repository"></a>
2025-08-19T14:21:52.6139171Z 
2025-08-19T14:21:52.6139253Z # api.routes.repository
2025-08-19T14:21:52.6139374Z 
2025-08-19T14:21:52.6139444Z <a id="api.routes"></a>
2025-08-19T14:21:52.6139568Z 
2025-08-19T14:21:52.6139632Z # api.routes
2025-08-19T14:21:52.6139726Z 
2025-08-19T14:21:52.6139800Z <a id="api.models.fee"></a>
2025-08-19T14:21:52.6139933Z 
2025-08-19T14:21:52.6139998Z # api.models.fee
2025-08-19T14:21:52.6140098Z 
2025-08-19T14:21:52.6140172Z <a id="api.models"></a>
2025-08-19T14:21:52.6140285Z 
2025-08-19T14:21:52.6140347Z # api.models
2025-08-19T14:21:52.6140440Z 
2025-08-19T14:21:52.6140524Z <a id="api.roi_repository"></a>
2025-08-19T14:21:52.6140662Z 
2025-08-19T14:21:52.6140732Z # api.roi\_repository
2025-08-19T14:21:52.6140849Z 
2025-08-19T14:21:52.6140924Z <a id="api.main"></a>
2025-08-19T14:21:52.6141039Z 
2025-08-19T14:21:52.6141102Z # api.main
2025-08-19T14:21:52.6141196Z 
2025-08-19T14:21:52.6141271Z <a id="api.main.ready"></a>
2025-08-19T14:21:52.6141400Z 
2025-08-19T14:21:52.6141467Z #### ready
2025-08-19T14:21:52.6141553Z 
2025-08-19T14:21:52.6141621Z ```python
2025-08-19T14:21:52.6141880Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T14:21:52.6142309Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T14:21:52.6142664Z                                                                       str]
2025-08-19T14:21:52.6142908Z ```
2025-08-19T14:21:52.6142994Z 
2025-08-19T14:21:52.6143087Z Return 200 only when migrations are at head.
2025-08-19T14:21:52.6143257Z 
2025-08-19T14:21:52.6143335Z <a id="api.config"></a>
2025-08-19T14:21:52.6143452Z 
2025-08-19T14:21:52.6143514Z # api.config
2025-08-19T14:21:52.6143608Z 
2025-08-19T14:21:52.6143688Z <a id="api.security"></a>
2025-08-19T14:21:52.6143819Z 
2025-08-19T14:21:52.6144003Z # api.security
2025-08-19T14:21:52.6144113Z 
2025-08-19T14:21:52.6144176Z <a id="etl"></a>
2025-08-19T14:21:52.6144276Z 
2025-08-19T14:21:52.6144342Z # etl
2025-08-19T14:21:52.6144426Z 
2025-08-19T14:21:52.6144506Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T14:21:52.6144650Z 
2025-08-19T14:21:52.6144729Z # etl.fba\_fee\_ingestor
2025-08-19T14:21:52.6145020Z 
2025-08-19T14:21:52.6145105Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T14:21:52.6145257Z 
2025-08-19T14:21:52.6145329Z # etl.sp\_fees\_ingestor
2025-08-19T14:21:52.6145449Z 
2025-08-19T14:21:52.6145525Z <a id="etl.keepa_ingestor"></a>
2025-08-19T14:21:52.6145668Z 
2025-08-19T14:21:52.6145738Z # etl.keepa\_ingestor
2025-08-19T14:21:52.6145849Z 
2025-08-19T14:21:52.6145920Z <a id="etl.db"></a>
2025-08-19T14:21:52.6146024Z 
2025-08-19T14:21:52.6146084Z # etl.db
2025-08-19T14:21:52.6146173Z 
2025-08-19T14:21:52.6146254Z <a id="etl.dialects.schemas"></a>
2025-08-19T14:21:52.6146398Z 
2025-08-19T14:21:52.6146477Z # etl.dialects.schemas
2025-08-19T14:21:52.6146603Z 
2025-08-19T14:21:52.6146707Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T14:21:52.6146889Z 
2025-08-19T14:21:52.6146982Z # etl.dialects.amazon\_reimbursements
2025-08-19T14:21:52.6147140Z 
2025-08-19T14:21:52.6147233Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T14:21:52.6147412Z 
2025-08-19T14:21:52.6147496Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T14:21:52.6147648Z 
2025-08-19T14:21:52.6147733Z <a id="etl.dialects.test_generic"></a>
2025-08-19T14:21:52.6147895Z 
2025-08-19T14:21:52.6147976Z # etl.dialects.test\_generic
2025-08-19T14:21:52.6148109Z 
2025-08-19T14:21:52.6148202Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T14:21:52.6148365Z 
2025-08-19T14:21:52.6148442Z # etl.dialects.amazon\_returns
2025-08-19T14:21:52.6148586Z 
2025-08-19T14:21:52.6148680Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T14:21:52.6148884Z 
2025-08-19T14:21:52.6148967Z # etl.dialects.amazon\_fee\_preview
2025-08-19T14:21:52.6149244Z 
2025-08-19T14:21:52.6149358Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T14:21:52.6149542Z 
2025-08-19T14:21:52.6149629Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T14:21:52.6149793Z 
2025-08-19T14:21:52.6149893Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T14:21:52.6150061Z 
2025-08-19T14:21:52.6150149Z # etl.dialects.amazon\_settlements
2025-08-19T14:21:52.6150305Z 
2025-08-19T14:21:52.6150378Z <a id="etl.dialects"></a>
2025-08-19T14:21:52.6150503Z 
2025-08-19T14:21:52.6150576Z # etl.dialects
2025-08-19T14:21:52.6150673Z 
2025-08-19T14:21:52.6150738Z <a id="ingest"></a>
2025-08-19T14:21:52.6150842Z 
2025-08-19T14:21:52.6150907Z # ingest
2025-08-19T14:21:52.6150991Z 
2025-08-19T14:21:52.6151071Z <a id="ingest.maintenance"></a>
2025-08-19T14:21:52.6151216Z 
2025-08-19T14:21:52.6151288Z # ingest.maintenance
2025-08-19T14:21:52.6151401Z 
2025-08-19T14:21:52.6151486Z <a id="ingest.copy_loader"></a>
2025-08-19T14:21:52.6151630Z 
2025-08-19T14:21:52.6151700Z # ingest.copy\_loader
2025-08-19T14:21:52.6151832Z 
2025-08-19T14:21:52.6151945Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T14:21:52.6152134Z 
2025-08-19T14:21:52.6152208Z #### copy\_df\_via\_temp
2025-08-19T14:21:52.6152337Z 
2025-08-19T14:21:52.6152403Z ```python
2025-08-19T14:21:52.6152569Z def copy_df_via_temp(engine: Engine,
2025-08-19T14:21:52.6152805Z                      df: pd.DataFrame,
2025-08-19T14:21:52.6153037Z                      target_table: str,
2025-08-19T14:21:52.6153258Z                      *,
2025-08-19T14:21:52.6153464Z                      target_schema: Optional[str] = None,
2025-08-19T14:21:52.6153722Z                      columns: Sequence[str],
2025-08-19T14:21:52.6153998Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T14:21:52.6154280Z                      analyze_after: bool = False,
2025-08-19T14:21:52.6154546Z                      connection: Any | None = None) -> int
2025-08-19T14:21:52.6154990Z ```
2025-08-19T14:21:52.6155114Z 
2025-08-19T14:21:52.6155281Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T14:21:52.6155641Z 
2025-08-19T14:21:52.6155734Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T14:21:52.6155892Z 
2025-08-19T14:21:52.6155973Z # ingest.tests.test\_smoke
2025-08-19T14:21:52.6156106Z 
2025-08-19T14:21:52.6156179Z <a id="ingest.tests"></a>
2025-08-19T14:21:52.6156301Z 
2025-08-19T14:21:52.6156366Z # ingest.tests
2025-08-19T14:21:52.6156471Z 
2025-08-19T14:21:52.6156561Z <a id="ingest.upload_router"></a>
2025-08-19T14:21:52.6156717Z 
2025-08-19T14:21:52.6156795Z # ingest.upload\_router
2025-08-19T14:21:52.6156913Z 
2025-08-19T14:21:52.6156992Z <a id="ingest.email_watcher"></a>
2025-08-19T14:21:52.6157133Z 
2025-08-19T14:21:52.6157206Z # ingest.email\_watcher
2025-08-19T14:21:52.6157319Z 
2025-08-19T14:21:52.6157403Z <a id="ingest.email_watcher.main"></a>
2025-08-19T14:21:52.6157566Z 
2025-08-19T14:21:52.6157626Z #### main
2025-08-19T14:21:52.6157711Z 
2025-08-19T14:21:52.6157778Z ```python
2025-08-19T14:21:52.6157944Z def main() -> dict[str, str]
2025-08-19T14:21:52.6158142Z ```
2025-08-19T14:21:52.6158221Z 
2025-08-19T14:21:52.6158357Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T14:21:52.6158586Z 
2025-08-19T14:21:52.6158710Z Returns {"status": "success"} when processing completes.
2025-08-19T14:21:52.6158916Z 
2025-08-19T14:21:52.6158989Z <a id="ingest.tasks"></a>
2025-08-19T14:21:52.6159115Z 
2025-08-19T14:21:52.6159178Z # ingest.tasks
2025-08-19T14:21:52.6159275Z 
2025-08-19T14:21:52.6159374Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T14:21:52.6159545Z 
2025-08-19T14:21:52.6159614Z #### task\_import\_file
2025-08-19T14:21:52.6159733Z 
2025-08-19T14:21:52.6159794Z ```python
2025-08-19T14:21:52.6159999Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T14:21:52.6160287Z def task_import_file(self: Any,
2025-08-19T14:21:52.6160499Z                      uri: str,
2025-08-19T14:21:52.6160717Z                      report_type: str | None = None,
2025-08-19T14:21:52.6161100Z                      force: bool = False) -> dict[str, Any]
2025-08-19T14:21:52.6161347Z ```
2025-08-19T14:21:52.6161429Z 
2025-08-19T14:21:52.6161557Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T14:21:52.6161777Z 
2025-08-19T14:21:52.6161857Z <a id="ingest.celery_app"></a>
2025-08-19T14:21:52.6161993Z 
2025-08-19T14:21:52.6162064Z # ingest.celery\_app
2025-08-19T14:21:52.6162182Z 
2025-08-19T14:21:52.6162261Z <a id="ingest.ingest_router"></a>
2025-08-19T14:21:52.6162405Z 
2025-08-19T14:21:52.6162483Z # ingest.ingest\_router
2025-08-19T14:21:52.6162599Z 
2025-08-19T14:21:52.6162675Z <a id="logistics_etl"></a>
2025-08-19T14:21:52.6162805Z 
2025-08-19T14:21:52.6162871Z # logistics\_etl
2025-08-19T14:21:52.6162974Z 
2025-08-19T14:21:52.6163048Z Daily logistics ETL job.
2025-08-19T14:21:52.6163175Z 
2025-08-19T14:21:52.6163254Z <a id="logistics_etl.__main__"></a>
2025-08-19T14:21:52.6163404Z 
2025-08-19T14:21:52.6163484Z # logistics\_etl.\_\_main\_\_
2025-08-19T14:21:52.6163622Z 
2025-08-19T14:21:52.6163701Z <a id="logistics_etl.dsn"></a>
2025-08-19T14:21:52.6163833Z 
2025-08-19T14:21:52.6163910Z # logistics\_etl.dsn
2025-08-19T14:21:52.6164020Z 
2025-08-19T14:21:52.6164133Z Local DSN builder to avoid cross-service dependency.
2025-08-19T14:21:52.6164336Z 
2025-08-19T14:21:52.6164422Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T14:21:52.6164588Z 
2025-08-19T14:21:52.6164656Z #### build\_dsn
2025-08-19T14:21:52.6164912Z 
2025-08-19T14:21:52.6165028Z ```python
2025-08-19T14:21:52.6165219Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:21:52.6165438Z ```
2025-08-19T14:21:52.6165524Z 
2025-08-19T14:21:52.6165663Z Return a Postgres DSN assembled from environment variables.
2025-08-19T14:21:52.6165884Z 
2025-08-19T14:21:52.6166030Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T14:21:52.6166419Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T14:21:52.6166765Z error when any required variable is missing.
2025-08-19T14:21:52.6166945Z 
2025-08-19T14:21:52.6167169Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T14:21:52.6167346Z 
2025-08-19T14:21:52.6167433Z # logistics\_etl.tests.conftest
2025-08-19T14:21:52.6167583Z 
2025-08-19T14:21:52.6167685Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T14:21:52.6167873Z 
2025-08-19T14:21:52.6167961Z # logistics\_etl.tests.test\_repository
2025-08-19T14:21:52.6168135Z 
2025-08-19T14:21:52.6168236Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T14:21:52.6168404Z 
2025-08-19T14:21:52.6168486Z # logistics\_etl.tests.test\_cron
2025-08-19T14:21:52.6168638Z 
2025-08-19T14:21:52.6168733Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T14:21:52.6168908Z 
2025-08-19T14:21:52.6168991Z # logistics\_etl.tests.test\_imports
2025-08-19T14:21:52.6169150Z 
2025-08-19T14:21:52.6169240Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T14:21:52.6169411Z 
2025-08-19T14:21:52.6169497Z # logistics\_etl.tests.test\_smoke
2025-08-19T14:21:52.6169652Z 
2025-08-19T14:21:52.6169744Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T14:21:52.6169923Z 
2025-08-19T14:21:52.6170004Z # logistics\_etl.tests.test\_client
2025-08-19T14:21:52.6170154Z 
2025-08-19T14:21:52.6170232Z <a id="logistics_etl.tests"></a>
2025-08-19T14:21:52.6170380Z 
2025-08-19T14:21:52.6170450Z # logistics\_etl.tests
2025-08-19T14:21:52.6170565Z 
2025-08-19T14:21:52.6170647Z <a id="logistics_etl.flow"></a>
2025-08-19T14:21:52.6170785Z 
2025-08-19T14:21:52.6170856Z # logistics\_etl.flow
2025-08-19T14:21:52.6170968Z 
2025-08-19T14:21:52.6171052Z <a id="logistics_etl.client"></a>
2025-08-19T14:21:52.6171193Z 
2025-08-19T14:21:52.6171265Z # logistics\_etl.client
2025-08-19T14:21:52.6171396Z 
2025-08-19T14:21:52.6171470Z <a id="logistics_etl.cron"></a>
2025-08-19T14:21:52.6171604Z 
2025-08-19T14:21:52.6171677Z # logistics\_etl.cron
2025-08-19T14:21:52.6171787Z 
2025-08-19T14:21:52.6171863Z <a id="logistics_etl.db"></a>
2025-08-19T14:21:52.6171999Z 
2025-08-19T14:21:52.6172073Z # logistics\_etl.db
2025-08-19T14:21:52.6172325Z 
2025-08-19T14:21:52.6172421Z <a id="logistics_etl.repository"></a>
2025-08-19T14:21:52.6172583Z 
2025-08-19T14:21:52.6214203Z # logistics\_etl.repository
2025-08-19T14:21:52.6214532Z 
2025-08-19T14:21:52.6214691Z <a id="alert_bot"></a>
2025-08-19T14:21:52.6215143Z 
2025-08-19T14:21:52.6215280Z # alert\_bot
2025-08-19T14:21:52.6215496Z 
2025-08-19T14:21:52.6215684Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T14:21:52.6216040Z 
2025-08-19T14:21:52.6216211Z # alert\_bot.tests.test\_smoke
2025-08-19T14:21:52.6216519Z 
2025-08-19T14:21:52.6216679Z <a id="alert_bot.tests"></a>
2025-08-19T14:21:52.6216964Z 
2025-08-19T14:21:52.6217110Z # alert\_bot.tests
2025-08-19T14:21:52.6217334Z 
2025-08-19T14:21:52.6217499Z <a id="alert_bot.alert_bot"></a>
2025-08-19T14:21:52.6217802Z 
2025-08-19T14:21:52.6217965Z # alert\_bot.alert\_bot
2025-08-19T14:21:52.6218216Z 
2025-08-19T14:21:52.6218371Z <a id="alert_bot.rules"></a>
2025-08-19T14:21:52.6218660Z 
2025-08-19T14:21:52.6218811Z # alert\_bot.rules
2025-08-19T14:21:52.6219038Z 
2025-08-19T14:21:52.6219187Z <a id="common"></a>
2025-08-19T14:21:52.6219426Z 
2025-08-19T14:21:52.6219523Z # common
2025-08-19T14:21:52.6219637Z 
2025-08-19T14:21:52.6219734Z <a id="common.dsn"></a>
2025-08-19T14:21:52.6219878Z 
2025-08-19T14:21:52.6219954Z # common.dsn
2025-08-19T14:21:52.6220073Z 
2025-08-19T14:21:52.6220175Z <a id="common.dsn.build_dsn"></a>
2025-08-19T14:21:52.6220441Z 
2025-08-19T14:21:52.6220527Z #### build\_dsn
2025-08-19T14:21:52.6220653Z 
2025-08-19T14:21:52.6220731Z ```python
2025-08-19T14:21:52.6220950Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:21:52.6221222Z ```
2025-08-19T14:21:52.6221328Z 
2025-08-19T14:21:52.6221464Z Return a Postgres DSN, validating required variables.
2025-08-19T14:21:52.6221669Z 
2025-08-19T14:21:52.6221854Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T14:21:52.6222294Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T14:21:52.6222718Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T14:21:52.6223187Z missing.
2025-08-19T14:21:52.6223275Z 
2025-08-19T14:21:52.6223367Z <a id="common.models_vendor"></a>
2025-08-19T14:21:52.6223515Z 
2025-08-19T14:21:52.6223587Z # common.models\_vendor
2025-08-19T14:21:52.6223708Z 
2025-08-19T14:21:52.6223796Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T14:21:52.6223960Z 
2025-08-19T14:21:52.6224026Z ## Vendor Objects
2025-08-19T14:21:52.6224136Z 
2025-08-19T14:21:52.6224197Z ```python
2025-08-19T14:21:52.6224355Z class Vendor(Base)
2025-08-19T14:21:52.6224513Z ```
2025-08-19T14:21:52.6224593Z 
2025-08-19T14:21:52.6224674Z Vendor of inventory items.
2025-08-19T14:21:52.6224945Z 
2025-08-19T14:21:52.6225048Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T14:21:52.6225232Z 
2025-08-19T14:21:52.6225302Z ## VendorPrice Objects
2025-08-19T14:21:52.6225416Z 
2025-08-19T14:21:52.6225476Z ```python
2025-08-19T14:21:52.6225634Z class VendorPrice(Base)
2025-08-19T14:21:52.6225816Z ```
2025-08-19T14:21:52.6225900Z 
2025-08-19T14:21:52.6225999Z Association table linking vendors to pricing.
2025-08-19T14:21:52.6226175Z 
2025-08-19T14:21:52.6226252Z <a id="common.db_url"></a>
2025-08-19T14:21:52.6226376Z 
2025-08-19T14:21:52.6226439Z # common.db\_url
2025-08-19T14:21:52.6226547Z 
2025-08-19T14:21:52.6226627Z <a id="common.db_url.build_url"></a>
2025-08-19T14:21:52.6226783Z 
2025-08-19T14:21:52.6226852Z #### build\_url
2025-08-19T14:21:52.6226948Z 
2025-08-19T14:21:52.6227008Z ```python
2025-08-19T14:21:52.6227178Z def build_url(async_: bool = True) -> str
2025-08-19T14:21:52.6227394Z ```
2025-08-19T14:21:52.6227473Z 
2025-08-19T14:21:52.6227574Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:21:52.6227746Z 
2025-08-19T14:21:52.6227821Z <a id="common.keepa"></a>
2025-08-19T14:21:52.6227953Z 
2025-08-19T14:21:52.6228022Z # common.keepa
2025-08-19T14:21:52.6228121Z 
2025-08-19T14:21:52.6228198Z <a id="common.llm"></a>
2025-08-19T14:21:52.6228438Z 
2025-08-19T14:21:52.6228499Z # common.llm
2025-08-19T14:21:52.6228596Z 
2025-08-19T14:21:52.6228683Z <a id="common.settings"></a>
2025-08-19T14:21:52.6228817Z 
2025-08-19T14:21:52.6228882Z # common.settings
2025-08-19T14:21:52.6228990Z 
2025-08-19T14:21:52.6229058Z <a id="common.db"></a>
2025-08-19T14:21:52.6229171Z 
2025-08-19T14:21:52.6229232Z # common.db
2025-08-19T14:21:52.6229324Z 
2025-08-19T14:21:52.6229414Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T14:21:52.6229581Z 
2025-08-19T14:21:52.6229659Z #### build\_sqlalchemy\_url
2025-08-19T14:21:52.6229787Z 
2025-08-19T14:21:52.6229847Z ```python
2025-08-19T14:21:52.6230013Z def build_sqlalchemy_url() -> str
2025-08-19T14:21:52.6230212Z ```
2025-08-19T14:21:52.6230298Z 
2025-08-19T14:21:52.6230389Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:21:52.6230559Z 
2025-08-19T14:21:52.6230650Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T14:21:52.6230815Z 
2025-08-19T14:21:52.6230888Z #### build\_asyncpg\_dsn
2025-08-19T14:21:52.6231013Z 
2025-08-19T14:21:52.6231089Z ```python
2025-08-19T14:21:52.6231251Z def build_asyncpg_dsn() -> str
2025-08-19T14:21:52.6231456Z ```
2025-08-19T14:21:52.6231535Z 
2025-08-19T14:21:52.6231659Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:21:52.6231877Z 
2025-08-19T14:21:52.6231959Z <a id="common.db.refresh_mvs"></a>
2025-08-19T14:21:52.6232110Z 
2025-08-19T14:21:52.6232187Z #### refresh\_mvs
2025-08-19T14:21:52.6232289Z 
2025-08-19T14:21:52.6232350Z ```python
2025-08-19T14:21:52.6232547Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:21:52.6232794Z ```
2025-08-19T14:21:52.6232880Z 
2025-08-19T14:21:52.6233011Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:21:52.6233226Z 
2025-08-19T14:21:52.6233299Z <a id="common.config"></a>
2025-08-19T14:21:52.6233433Z 
2025-08-19T14:21:52.6233498Z # common.config
2025-08-19T14:21:52.6233598Z 
2025-08-19T14:21:52.6233675Z <a id="common.base"></a>
2025-08-19T14:21:52.6233794Z 
2025-08-19T14:21:52.6233862Z # common.base
2025-08-19T14:21:52.6234081Z 
2025-08-19T14:21:52.6234162Z <a id="common.base.Base"></a>
2025-08-19T14:21:52.6234304Z 
2025-08-19T14:21:52.6234368Z ## Base Objects
2025-08-19T14:21:52.6234474Z 
2025-08-19T14:21:52.6234535Z ```python
2025-08-19T14:21:52.6234700Z class Base(DeclarativeBase)
2025-08-19T14:21:52.6234987Z ```
2025-08-19T14:21:52.6235072Z 
2025-08-19T14:21:52.6235157Z Base class for SQLAlchemy models.
2025-08-19T14:21:52.6235304Z 
2025-08-19T14:21:52.6235377Z <a id="repricer"></a>
2025-08-19T14:21:52.6235496Z 
2025-08-19T14:21:52.6235557Z # repricer
2025-08-19T14:21:52.6235647Z 
2025-08-19T14:21:52.6235734Z <a id="repricer.app.schemas"></a>
2025-08-19T14:21:52.6235885Z 
2025-08-19T14:21:52.6235959Z # repricer.app.schemas
2025-08-19T14:21:52.6236079Z 
2025-08-19T14:21:52.6236164Z <a id="repricer.app.deps"></a>
2025-08-19T14:21:52.6236302Z 
2025-08-19T14:21:52.6236374Z # repricer.app.deps
2025-08-19T14:21:52.6236488Z 
2025-08-19T14:21:52.6236604Z Placeholder module for Keepa / SP-API clients.
2025-08-19T14:21:52.6236803Z 
2025-08-19T14:21:52.6236883Z <a id="repricer.app.logic"></a>
2025-08-19T14:21:52.6237031Z 
2025-08-19T14:21:52.6237103Z # repricer.app.logic
2025-08-19T14:21:52.6237217Z 
2025-08-19T14:21:52.6237317Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T14:21:52.6237491Z 
2025-08-19T14:21:52.6237554Z #### MIN\_MARGIN
2025-08-19T14:21:52.6237653Z 
2025-08-19T14:21:52.6237719Z 15 % ROI
2025-08-19T14:21:52.6237803Z 
2025-08-19T14:21:52.6237904Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T14:21:52.6238090Z 
2025-08-19T14:21:52.6238155Z #### compute\_price
2025-08-19T14:21:52.6238259Z 
2025-08-19T14:21:52.6238327Z ```python
2025-08-19T14:21:52.6238569Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T14:21:52.6238875Z ```
2025-08-19T14:21:52.6238957Z 
2025-08-19T14:21:52.6239061Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T14:21:52.6239341Z Replace with real competitive logic later.
2025-08-19T14:21:52.6239637Z 
2025-08-19T14:21:52.6239721Z <a id="repricer.app.main"></a>
2025-08-19T14:21:52.6239871Z 
2025-08-19T14:21:52.6239940Z # repricer.app.main
2025-08-19T14:21:52.6240045Z 
2025-08-19T14:21:52.6240124Z <a id="repricer.app"></a>
2025-08-19T14:21:52.6240250Z 
2025-08-19T14:21:52.6240316Z # repricer.app
2025-08-19T14:21:52.6240415Z 
2025-08-19T14:21:52.6240511Z <a id="repricer.tests.test_imports"></a>
2025-08-19T14:21:52.6240677Z 
2025-08-19T14:21:52.6240757Z # repricer.tests.test\_imports
2025-08-19T14:21:52.6240902Z 
2025-08-19T14:21:52.6240991Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T14:21:52.6241150Z 
2025-08-19T14:21:52.6241234Z # repricer.tests.test\_smoke
2025-08-19T14:21:52.6241372Z 
2025-08-19T14:21:52.6241452Z <a id="repricer.tests"></a>
2025-08-19T14:21:52.6241580Z 
2025-08-19T14:21:52.6241653Z # repricer.tests
2025-08-19T14:21:52.6241756Z 
2025-08-19T14:21:52.6241820Z <a id="db"></a>
2025-08-19T14:21:52.6241923Z 
2025-08-19T14:21:52.6241982Z # db
2025-08-19T14:21:52.6242064Z 
2025-08-19T14:21:52.6242145Z <a id="db.utils.views"></a>
2025-08-19T14:21:52.6242284Z 
2025-08-19T14:21:52.6242350Z # db.utils.views
2025-08-19T14:21:52.6242451Z 
2025-08-19T14:21:52.6242547Z <a id="db.utils.views.replace_view"></a>
2025-08-19T14:21:52.6242713Z 
2025-08-19T14:21:52.6242778Z #### replace\_view
2025-08-19T14:21:52.6242888Z 
2025-08-19T14:21:52.6242949Z ```python
2025-08-19T14:21:52.6243138Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T14:21:52.6243384Z ```
2025-08-19T14:21:52.6243467Z 
2025-08-19T14:21:52.6243552Z Drop and recreate a SQL view atomically.
2025-08-19T14:21:52.6243722Z 
2025-08-19T14:21:52.6243791Z <a id="db.utils"></a>
2025-08-19T14:21:52.6243909Z 
2025-08-19T14:21:52.6243978Z # db.utils
2025-08-19T14:21:52.6244065Z 
2025-08-19T14:21:52.6244140Z <a id="price_importer"></a>
2025-08-19T14:21:52.6244272Z 
2025-08-19T14:21:52.6244339Z # price\_importer
2025-08-19T14:21:52.6244447Z 
2025-08-19T14:21:52.6244545Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T14:21:52.6244745Z 
2025-08-19T14:21:52.6244931Z # price\_importer.services\_common.dsn
2025-08-19T14:21:52.6245246Z 
2025-08-19T14:21:52.6245374Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T14:21:52.6245580Z 
2025-08-19T14:21:52.6245642Z #### build\_dsn
2025-08-19T14:21:52.6245748Z 
2025-08-19T14:21:52.6245810Z ```python
2025-08-19T14:21:52.6245978Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:21:52.6246199Z ```
2025-08-19T14:21:52.6246278Z 
2025-08-19T14:21:52.6246346Z Return safe DSN.
2025-08-19T14:21:52.6246447Z 
2025-08-19T14:21:52.6246786Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T14:21:52.6246988Z 
2025-08-19T14:21:52.6247119Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T14:21:52.6247323Z 
2025-08-19T14:21:52.6247430Z # price\_importer.services\_common.models\_vendor
2025-08-19T14:21:52.6247625Z 
2025-08-19T14:21:52.6247728Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T14:21:52.6247918Z 
2025-08-19T14:21:52.6248026Z # price\_importer.services\_common.db\_url
2025-08-19T14:21:52.6248205Z 
2025-08-19T14:21:52.6248336Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T14:21:52.6248551Z 
2025-08-19T14:21:52.6248622Z #### build\_url
2025-08-19T14:21:52.6248722Z 
2025-08-19T14:21:52.6248784Z ```python
2025-08-19T14:21:52.6248956Z def build_url(async_: bool = True) -> str
2025-08-19T14:21:52.6249175Z ```
2025-08-19T14:21:52.6249262Z 
2025-08-19T14:21:52.6249356Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:21:52.6249527Z 
2025-08-19T14:21:52.6249639Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T14:21:52.6249825Z 
2025-08-19T14:21:52.6249914Z # price\_importer.services\_common.keepa
2025-08-19T14:21:52.6250084Z 
2025-08-19T14:21:52.6250183Z <a id="price_importer.services_common.llm"></a>
2025-08-19T14:21:52.6250360Z 
2025-08-19T14:21:52.6250449Z # price\_importer.services\_common.llm
2025-08-19T14:21:52.6250614Z 
2025-08-19T14:21:52.6250725Z <a id="price_importer.services_common.settings"></a>
2025-08-19T14:21:52.6251051Z 
2025-08-19T14:21:52.6251150Z # price\_importer.services\_common.settings
2025-08-19T14:21:52.6251321Z 
2025-08-19T14:21:52.6251418Z <a id="price_importer.services_common.db"></a>
2025-08-19T14:21:52.6251604Z 
2025-08-19T14:21:52.6251690Z # price\_importer.services\_common.db
2025-08-19T14:21:52.6251847Z 
2025-08-19T14:21:52.6251999Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T14:21:52.6252245Z 
2025-08-19T14:21:52.6252321Z #### build\_sqlalchemy\_url
2025-08-19T14:21:52.6252454Z 
2025-08-19T14:21:52.6252523Z ```python
2025-08-19T14:21:52.6252695Z def build_sqlalchemy_url() -> str
2025-08-19T14:21:52.6252907Z ```
2025-08-19T14:21:52.6252989Z 
2025-08-19T14:21:52.6253084Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:21:52.6253266Z 
2025-08-19T14:21:52.6253415Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T14:21:52.6253643Z 
2025-08-19T14:21:52.6253723Z #### build\_asyncpg\_dsn
2025-08-19T14:21:52.6253855Z 
2025-08-19T14:21:52.6253922Z ```python
2025-08-19T14:21:52.6254100Z def build_asyncpg_dsn() -> str
2025-08-19T14:21:52.6254292Z ```
2025-08-19T14:21:52.6254377Z 
2025-08-19T14:21:52.6254503Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:21:52.6254715Z 
2025-08-19T14:21:52.6254937Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T14:21:52.6255155Z 
2025-08-19T14:21:52.6255220Z #### refresh\_mvs
2025-08-19T14:21:52.6255323Z 
2025-08-19T14:21:52.6255392Z ```python
2025-08-19T14:21:52.6255585Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:21:52.6255843Z ```
2025-08-19T14:21:52.6255924Z 
2025-08-19T14:21:52.6256057Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:21:52.6256284Z 
2025-08-19T14:21:52.6256380Z <a id="price_importer.services_common"></a>
2025-08-19T14:21:52.6256556Z 
2025-08-19T14:21:52.6256641Z # price\_importer.services\_common
2025-08-19T14:21:52.6256799Z 
2025-08-19T14:21:52.6256902Z <a id="price_importer.services_common.base"></a>
2025-08-19T14:21:52.6257216Z 
2025-08-19T14:21:52.6257313Z # price\_importer.services\_common.base
2025-08-19T14:21:52.6257477Z 
2025-08-19T14:21:52.6257566Z <a id="price_importer.normaliser"></a>
2025-08-19T14:21:52.6257734Z 
2025-08-19T14:21:52.6257815Z # price\_importer.normaliser
2025-08-19T14:21:52.6257954Z 
2025-08-19T14:21:52.6258058Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T14:21:52.6258245Z 
2025-08-19T14:21:52.6258334Z # price\_importer.common.models\_vendor
2025-08-19T14:21:52.6258496Z 
2025-08-19T14:21:52.6258590Z <a id="price_importer.common.db_url"></a>
2025-08-19T14:21:52.6258758Z 
2025-08-19T14:21:52.6258840Z # price\_importer.common.db\_url
2025-08-19T14:21:52.6258990Z 
2025-08-19T14:21:52.6259094Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T14:21:52.6259281Z 
2025-08-19T14:21:52.6259350Z #### make\_dsn
2025-08-19T14:21:52.6259448Z 
2025-08-19T14:21:52.6259510Z ```python
2025-08-19T14:21:52.6259683Z def make_dsn(async_: bool = False) -> str
2025-08-19T14:21:52.6259918Z ```
2025-08-19T14:21:52.6259999Z 
2025-08-19T14:21:52.6260123Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T14:21:52.6260325Z 
2025-08-19T14:21:52.6260430Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T14:21:52.6260622Z 
2025-08-19T14:21:52.6260685Z #### build\_url
2025-08-19T14:21:52.6260784Z 
2025-08-19T14:21:52.6260852Z ```python
2025-08-19T14:21:52.6261022Z def build_url(async_: bool = False) -> str
2025-08-19T14:21:52.6261249Z ```
2025-08-19T14:21:52.6261328Z 
2025-08-19T14:21:52.6261449Z Return Postgres DSN built from environment variables.
2025-08-19T14:21:52.6261654Z 
2025-08-19T14:21:52.6261739Z <a id="price_importer.common"></a>
2025-08-19T14:21:52.6261890Z 
2025-08-19T14:21:52.6261967Z # price\_importer.common
2025-08-19T14:21:52.6262102Z 
2025-08-19T14:21:52.6262191Z <a id="price_importer.common.base"></a>
2025-08-19T14:21:52.6262356Z 
2025-08-19T14:21:52.6262444Z # price\_importer.common.base
2025-08-19T14:21:52.6262701Z 
2025-08-19T14:21:52.6262803Z <a id="price_importer.tests.conftest"></a>
2025-08-19T14:21:52.6262980Z 
2025-08-19T14:21:52.6263064Z # price\_importer.tests.conftest
2025-08-19T14:21:52.6263209Z 
2025-08-19T14:21:52.6263307Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T14:21:52.6263488Z 
2025-08-19T14:21:52.6263574Z # price\_importer.tests.test\_reader
2025-08-19T14:21:52.6263729Z 
2025-08-19T14:21:52.6263836Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T14:21:52.6264026Z 
2025-08-19T14:21:52.6264114Z # price\_importer.tests.test\_imports
2025-08-19T14:21:52.6264277Z 
2025-08-19T14:21:52.6264372Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T14:21:52.6264544Z 
2025-08-19T14:21:52.6264627Z # price\_importer.tests.test\_smoke
2025-08-19T14:21:52.6264910Z 
2025-08-19T14:21:52.6265017Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T14:21:52.6265220Z 
2025-08-19T14:21:52.6265317Z # price\_importer.tests.test\_normaliser
2025-08-19T14:21:52.6265482Z 
2025-08-19T14:21:52.6265572Z <a id="price_importer.tests"></a>
2025-08-19T14:21:52.6265734Z 
2025-08-19T14:21:52.6265809Z # price\_importer.tests
2025-08-19T14:21:52.6265931Z 
2025-08-19T14:21:52.6266015Z <a id="price_importer.reader"></a>
2025-08-19T14:21:52.6266170Z 
2025-08-19T14:21:52.6266245Z # price\_importer.reader
2025-08-19T14:21:52.6266369Z 
2025-08-19T14:21:52.6266462Z <a id="price_importer.repository"></a>
2025-08-19T14:21:52.6266622Z 
2025-08-19T14:21:52.6266703Z # price\_importer.repository
2025-08-19T14:21:52.6266842Z 
2025-08-19T14:21:52.6266925Z <a id="price_importer.import"></a>
2025-08-19T14:21:52.6267072Z 
2025-08-19T14:21:52.6267146Z # price\_importer.import
2025-08-19T14:21:52.6267276Z 
2025-08-19T14:21:52.6267345Z <a id="fees_h10"></a>
2025-08-19T14:21:52.6267460Z 
2025-08-19T14:21:52.6267529Z # fees\_h10
2025-08-19T14:21:52.6267618Z 
2025-08-19T14:21:52.6267692Z <a id="fees_h10.worker"></a>
2025-08-19T14:21:52.6267828Z 
2025-08-19T14:21:52.6267894Z # fees\_h10.worker
2025-08-19T14:21:52.6268004Z 
2025-08-19T14:21:52.6268219Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T14:21:52.6268404Z 
2025-08-19T14:21:52.6268476Z #### list\_active\_asins
2025-08-19T14:21:52.6268595Z 
2025-08-19T14:21:52.6268666Z ```python
2025-08-19T14:21:52.6268830Z def list_active_asins() -> list[str]
2025-08-19T14:21:52.6269044Z ```
2025-08-19T14:21:52.6269157Z 
2025-08-19T14:21:52.6269266Z Return known ASINs or an empty list if unavailable.
2025-08-19T14:21:52.6269466Z 
2025-08-19T14:21:52.6269547Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T14:21:52.6269702Z 
2025-08-19T14:21:52.6269781Z # fees\_h10.tests.test\_smoke
2025-08-19T14:21:52.6269921Z 
2025-08-19T14:21:52.6269995Z <a id="fees_h10.tests"></a>
2025-08-19T14:21:52.6270123Z 
2025-08-19T14:21:52.6270193Z # fees\_h10.tests
2025-08-19T14:21:52.6270294Z 
2025-08-19T14:21:52.6270366Z <a id="fees_h10.client"></a>
2025-08-19T14:21:52.6270498Z 
2025-08-19T14:21:52.6270561Z # fees\_h10.client
2025-08-19T14:21:52.6270662Z 
2025-08-19T14:21:52.6270746Z <a id="fees_h10.repository"></a>
2025-08-19T14:21:52.6270895Z 
2025-08-19T14:21:52.6270965Z # fees\_h10.repository
2025-08-19T14:21:52.6271081Z 
2025-08-19T14:21:52.6271154Z <a id="emailer"></a>
2025-08-19T14:21:52.6271265Z 
2025-08-19T14:21:52.6271333Z # emailer
2025-08-19T14:21:52.6271420Z 
2025-08-19T14:21:52.6271523Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T14:21:52.6271701Z 
2025-08-19T14:21:52.6271787Z # emailer.tests.test\_import\_emailer
2025-08-19T14:21:52.6271950Z 
2025-08-19T14:21:52.6272032Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T14:21:52.6272186Z 
2025-08-19T14:21:52.6272267Z # emailer.tests.test\_smoke
2025-08-19T14:21:52.6272399Z 
2025-08-19T14:21:52.6272474Z <a id="emailer.tests"></a>
2025-08-19T14:21:52.6272599Z 
2025-08-19T14:21:52.6272672Z # emailer.tests
2025-08-19T14:21:52.6272773Z 
2025-08-19T14:21:52.6272856Z <a id="emailer.generate_body"></a>
2025-08-19T14:21:52.6273009Z 
2025-08-19T14:21:52.6273083Z # emailer.generate\_body
2025-08-19T14:21:52.6273206Z 
2025-08-19T14:21:52.6273402Z <a id="llm_server"></a>
2025-08-19T14:21:52.6273525Z 
2025-08-19T14:21:52.6273590Z # llm\_server
2025-08-19T14:21:52.6273687Z 
2025-08-19T14:21:52.6273769Z <a id="llm_server.app"></a>
2025-08-19T14:21:52.6273898Z 
2025-08-19T14:21:52.6273963Z # llm\_server.app
2025-08-19T14:21:52.6274072Z 
