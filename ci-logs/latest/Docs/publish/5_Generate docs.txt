2025-08-18T20:04:24.9935584Z ##[group]Run pydoc-markdown
2025-08-18T20:04:24.9935901Z [36;1mpydoc-markdown[0m
2025-08-18T20:04:24.9975976Z shell: /usr/bin/bash -e {0}
2025-08-18T20:04:24.9976195Z env:
2025-08-18T20:04:24.9976438Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:04:24.9976840Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T20:04:24.9977235Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:04:24.9977577Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:04:24.9977912Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:04:24.9978265Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T20:04:24.9978548Z ##[endgroup]
2025-08-18T20:04:25.3887413Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T20:04:25.3888162Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T20:04:25.3888646Z In "pydoc-markdown.yml"
2025-08-18T20:04:25.3889077Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T20:04:25.3889792Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T20:04:25.3890769Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T20:04:25.3891317Z 
2025-08-18T20:04:25.6986709Z <a id="__init__"></a>
2025-08-18T20:04:25.6987134Z 
2025-08-18T20:04:25.6987271Z # \_\_init\_\_
2025-08-18T20:04:25.6987466Z 
2025-08-18T20:04:25.6987593Z <a id="api"></a>
2025-08-18T20:04:25.6987807Z 
2025-08-18T20:04:25.6987920Z # api
2025-08-18T20:04:25.6988087Z 
2025-08-18T20:04:25.6988234Z <a id="api.errors"></a>
2025-08-18T20:04:25.6988477Z 
2025-08-18T20:04:25.6988598Z # api.errors
2025-08-18T20:04:25.6988785Z 
2025-08-18T20:04:25.6988945Z <a id="api.sentry_config"></a>
2025-08-18T20:04:25.6989215Z 
2025-08-18T20:04:25.6989346Z # api.sentry\_config
2025-08-18T20:04:25.6989561Z 
2025-08-18T20:04:25.6989743Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T20:04:25.6990073Z 
2025-08-18T20:04:25.6990224Z # api.tests.test\_sentry\_scrub
2025-08-18T20:04:25.6990796Z 
2025-08-18T20:04:25.6990978Z <a id="api.tests.test_errors_json"></a>
2025-08-18T20:04:25.6991295Z 
2025-08-18T20:04:25.6991449Z # api.tests.test\_errors\_json
2025-08-18T20:04:25.6991712Z 
2025-08-18T20:04:25.6991862Z <a id="api.tests.test_llm"></a>
2025-08-18T20:04:25.6992128Z 
2025-08-18T20:04:25.6992269Z # api.tests.test\_llm
2025-08-18T20:04:25.6992487Z 
2025-08-18T20:04:25.6992652Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T20:04:25.6992977Z 
2025-08-18T20:04:25.6993131Z # api.tests.test\_sentry\_event
2025-08-18T20:04:25.6993401Z 
2025-08-18T20:04:25.6993565Z <a id="api.tests.test_cors"></a>
2025-08-18T20:04:25.6993841Z 
2025-08-18T20:04:25.6993977Z # api.tests.test\_cors
2025-08-18T20:04:25.6994203Z 
2025-08-18T20:04:25.6994374Z <a id="api.tests.test_imports"></a>
2025-08-18T20:04:25.6994668Z 
2025-08-18T20:04:25.6994818Z # api.tests.test\_imports
2025-08-18T20:04:25.6995078Z 
2025-08-18T20:04:25.6995243Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T20:04:25.6995949Z 
2025-08-18T20:04:25.6996104Z # api.tests.test\_rate\_limit
2025-08-18T20:04:25.6996381Z 
2025-08-18T20:04:25.6996564Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T20:04:25.6996900Z 
2025-08-18T20:04:25.6997031Z #### app
2025-08-18T20:04:25.6997195Z 
2025-08-18T20:04:25.6997311Z noqa: E402
2025-08-18T20:04:25.6997492Z 
2025-08-18T20:04:25.6997660Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T20:04:25.6997973Z 
2025-08-18T20:04:25.6998122Z # api.tests.test\_entrypoint
2025-08-18T20:04:25.6998393Z 
2025-08-18T20:04:25.6998544Z <a id="api.tests.test_health"></a>
2025-08-18T20:04:25.6998827Z 
2025-08-18T20:04:25.6998979Z # api.tests.test\_health
2025-08-18T20:04:25.6999214Z 
2025-08-18T20:04:25.6999364Z <a id="api.logging_config"></a>
2025-08-18T20:04:25.6999638Z 
2025-08-18T20:04:25.6999771Z # api.logging\_config
2025-08-18T20:04:25.6999996Z 
2025-08-18T20:04:25.7000151Z <a id="api.migrations.env"></a>
2025-08-18T20:04:25.7000446Z 
2025-08-18T20:04:25.7000798Z # api.migrations.env
2025-08-18T20:04:25.7001398Z 
2025-08-18T20:04:25.7001637Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T20:04:25.7002024Z 
2025-08-18T20:04:25.7002220Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T20:04:25.7002580Z 
2025-08-18T20:04:25.7002782Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T20:04:25.7003134Z 
2025-08-18T20:04:25.7003306Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T20:04:25.7003640Z 
2025-08-18T20:04:25.7003927Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T20:04:25.7004376Z 
2025-08-18T20:04:25.7004641Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T20:04:25.7005056Z 
2025-08-18T20:04:25.7005290Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T20:04:25.7005685Z 
2025-08-18T20:04:25.7005891Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T20:04:25.7006253Z 
2025-08-18T20:04:25.7006489Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T20:04:25.7006896Z 
2025-08-18T20:04:25.7007095Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T20:04:25.7007443Z 
2025-08-18T20:04:25.7007695Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T20:04:25.7008085Z 
2025-08-18T20:04:25.7008290Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T20:04:25.7008662Z 
2025-08-18T20:04:25.7008885Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T20:04:25.7009265Z 
2025-08-18T20:04:25.7009471Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T20:04:25.7009814Z 
2025-08-18T20:04:25.7010043Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T20:04:25.7010418Z 
2025-08-18T20:04:25.7010819Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T20:04:25.7011183Z 
2025-08-18T20:04:25.7011442Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T20:04:25.7011863Z 
2025-08-18T20:04:25.7012089Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T20:04:25.7012470Z 
2025-08-18T20:04:25.7012724Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T20:04:25.7013112Z 
2025-08-18T20:04:25.7013315Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T20:04:25.7013681Z 
2025-08-18T20:04:25.7013935Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T20:04:25.7014354Z 
2025-08-18T20:04:25.7014573Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T20:04:25.7014954Z 
2025-08-18T20:04:25.7015159Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T20:04:25.7015521Z 
2025-08-18T20:04:25.7015716Z # api.migrations.versions.0001\_baseline
2025-08-18T20:04:25.7016044Z 
2025-08-18T20:04:25.7016211Z <a id="api.migrations.versions"></a>
2025-08-18T20:04:25.7016526Z 
2025-08-18T20:04:25.7016672Z # api.migrations.versions
2025-08-18T20:04:25.7016921Z 
2025-08-18T20:04:25.7017064Z <a id="api.migrations"></a>
2025-08-18T20:04:25.7017319Z 
2025-08-18T20:04:25.7017444Z # api.migrations
2025-08-18T20:04:25.7017650Z 
2025-08-18T20:04:25.7018025Z <a id="api.db"></a>
2025-08-18T20:04:25.7018232Z 
2025-08-18T20:04:25.7018347Z # api.db
2025-08-18T20:04:25.7018518Z 
2025-08-18T20:04:25.7018667Z <a id="api.routes.stats"></a>
2025-08-18T20:04:25.7018933Z 
2025-08-18T20:04:25.7019063Z # api.routes.stats
2025-08-18T20:04:25.7019364Z 
2025-08-18T20:04:25.7019529Z <a id="api.routes.stats.kpi"></a>
2025-08-18T20:04:25.7019871Z 
2025-08-18T20:04:25.7019985Z #### kpi
2025-08-18T20:04:25.7020148Z 
2025-08-18T20:04:25.7020265Z ```python
2025-08-18T20:04:25.7020749Z @router.get("/stats/kpi")
2025-08-18T20:04:25.7021202Z def kpi() -> List[Dict[str, int]]
2025-08-18T20:04:25.7021594Z ```
2025-08-18T20:04:25.7021756Z 
2025-08-18T20:04:25.7021917Z Return KPI metrics (mock).
2025-08-18T20:04:25.7022169Z 
2025-08-18T20:04:25.7022352Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T20:04:25.7022696Z 
2025-08-18T20:04:25.7022823Z #### roi\_by\_vendor
2025-08-18T20:04:25.7023039Z 
2025-08-18T20:04:25.7023157Z ```python
2025-08-18T20:04:25.7023482Z @router.get("/stats/roi_by_vendor")
2025-08-18T20:04:25.7024263Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T20:04:25.7024694Z ```
2025-08-18T20:04:25.7024848Z 
2025-08-18T20:04:25.7025004Z Return ROI percent by vendor.
2025-08-18T20:04:25.7025330Z 
2025-08-18T20:04:25.7025501Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T20:04:25.7025956Z 
2025-08-18T20:04:25.7026078Z #### roi\_trend
2025-08-18T20:04:25.7026264Z 
2025-08-18T20:04:25.7026377Z ```python
2025-08-18T20:04:25.7026691Z @router.get("/stats/roi_trend")
2025-08-18T20:04:25.7027131Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T20:04:25.7027585Z ```
2025-08-18T20:04:25.7027742Z 
2025-08-18T20:04:25.7027893Z Return 30-day ROI trend.
2025-08-18T20:04:25.7028133Z 
2025-08-18T20:04:25.7028281Z <a id="api.routes.roi"></a>
2025-08-18T20:04:25.7028545Z 
2025-08-18T20:04:25.7028672Z # api.routes.roi
2025-08-18T20:04:25.7028867Z 
2025-08-18T20:04:25.7029016Z <a id="api.routes.health"></a>
2025-08-18T20:04:25.7029293Z 
2025-08-18T20:04:25.7029438Z # api.routes.health
2025-08-18T20:04:25.7029641Z 
2025-08-18T20:04:25.7029817Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T20:04:25.7030129Z 
2025-08-18T20:04:25.7030248Z #### MAX\_SKEW
2025-08-18T20:04:25.7030430Z 
2025-08-18T20:04:25.7030724Z seconds
2025-08-18T20:04:25.7030899Z 
2025-08-18T20:04:25.7031066Z <a id="api.routes.health.health"></a>
2025-08-18T20:04:25.7031383Z 
2025-08-18T20:04:25.7031498Z #### health
2025-08-18T20:04:25.7031664Z 
2025-08-18T20:04:25.7031784Z ```python
2025-08-18T20:04:25.7032134Z @router.get("/health", include_in_schema=False)
2025-08-18T20:04:25.7032843Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T20:04:25.7033474Z ```
2025-08-18T20:04:25.7033629Z 
2025-08-18T20:04:25.7033853Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T20:04:25.7034221Z 
2025-08-18T20:04:25.7034382Z <a id="api.routes.repository"></a>
2025-08-18T20:04:25.7034681Z 
2025-08-18T20:04:25.7034820Z # api.routes.repository
2025-08-18T20:04:25.7035064Z 
2025-08-18T20:04:25.7035204Z <a id="api.routes"></a>
2025-08-18T20:04:25.7035425Z 
2025-08-18T20:04:25.7035541Z # api.routes
2025-08-18T20:04:25.7035721Z 
2025-08-18T20:04:25.7035890Z <a id="api.models.fee"></a>
2025-08-18T20:04:25.7036158Z 
2025-08-18T20:04:25.7036285Z # api.models.fee
2025-08-18T20:04:25.7036495Z 
2025-08-18T20:04:25.7036632Z <a id="api.models"></a>
2025-08-18T20:04:25.7036854Z 
2025-08-18T20:04:25.7036973Z # api.models
2025-08-18T20:04:25.7037168Z 
2025-08-18T20:04:25.7037317Z <a id="api.roi_repository"></a>
2025-08-18T20:04:25.7037588Z 
2025-08-18T20:04:25.7037728Z # api.roi\_repository
2025-08-18T20:04:25.7037941Z 
2025-08-18T20:04:25.7038073Z <a id="api.main"></a>
2025-08-18T20:04:25.7038291Z 
2025-08-18T20:04:25.7038408Z # api.main
2025-08-18T20:04:25.7038576Z 
2025-08-18T20:04:25.7038710Z <a id="api.main.ready"></a>
2025-08-18T20:04:25.7038953Z 
2025-08-18T20:04:25.7039064Z #### ready
2025-08-18T20:04:25.7039222Z 
2025-08-18T20:04:25.7039339Z ```python
2025-08-18T20:04:25.7040036Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T20:04:25.7041043Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T20:04:25.7041716Z                                                                       str]
2025-08-18T20:04:25.7042150Z ```
2025-08-18T20:04:25.7042298Z 
2025-08-18T20:04:25.7042554Z Return 200 only when migrations are at head.
2025-08-18T20:04:25.7042880Z 
2025-08-18T20:04:25.7043025Z <a id="api.config"></a>
2025-08-18T20:04:25.7043250Z 
2025-08-18T20:04:25.7043372Z # api.config
2025-08-18T20:04:25.7043556Z 
2025-08-18T20:04:25.7043704Z <a id="etl"></a>
2025-08-18T20:04:25.7043900Z 
2025-08-18T20:04:25.7044014Z # etl
2025-08-18T20:04:25.7044188Z 
2025-08-18T20:04:25.7044341Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T20:04:25.7044626Z 
2025-08-18T20:04:25.7044769Z # etl.fba\_fee\_ingestor
2025-08-18T20:04:25.7045003Z 
2025-08-18T20:04:25.7045151Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T20:04:25.7045662Z 
2025-08-18T20:04:25.7045807Z # etl.sp\_fees\_ingestor
2025-08-18T20:04:25.7046039Z 
2025-08-18T20:04:25.7046188Z <a id="etl.keepa_ingestor"></a>
2025-08-18T20:04:25.7046468Z 
2025-08-18T20:04:25.7046601Z # etl.keepa\_ingestor
2025-08-18T20:04:25.7046813Z 
2025-08-18T20:04:25.7046936Z <a id="etl.db"></a>
2025-08-18T20:04:25.7047144Z 
2025-08-18T20:04:25.7047255Z # etl.db
2025-08-18T20:04:25.7047413Z 
2025-08-18T20:04:25.7047573Z <a id="etl.dialects.schemas"></a>
2025-08-18T20:04:25.7047857Z 
2025-08-18T20:04:25.7047995Z # etl.dialects.schemas
2025-08-18T20:04:25.7048229Z 
2025-08-18T20:04:25.7048425Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T20:04:25.7048771Z 
2025-08-18T20:04:25.7048936Z # etl.dialects.amazon\_reimbursements
2025-08-18T20:04:25.7049256Z 
2025-08-18T20:04:25.7049440Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T20:04:25.7049761Z 
2025-08-18T20:04:25.7049921Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T20:04:25.7050214Z 
2025-08-18T20:04:25.7050378Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T20:04:25.7050933Z 
2025-08-18T20:04:25.7051089Z # etl.dialects.amazon\_returns
2025-08-18T20:04:25.7051356Z 
2025-08-18T20:04:25.7051535Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T20:04:25.7051870Z 
2025-08-18T20:04:25.7052023Z # etl.dialects.amazon\_fee\_preview
2025-08-18T20:04:25.7052306Z 
2025-08-18T20:04:25.7052505Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T20:04:25.7052857Z 
2025-08-18T20:04:25.7053024Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T20:04:25.7053351Z 
2025-08-18T20:04:25.7053535Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T20:04:25.7053858Z 
2025-08-18T20:04:25.7054021Z # etl.dialects.amazon\_settlements
2025-08-18T20:04:25.7054312Z 
2025-08-18T20:04:25.7054451Z <a id="etl.dialects"></a>
2025-08-18T20:04:25.7054690Z 
2025-08-18T20:04:25.7054819Z # etl.dialects
2025-08-18T20:04:25.7055005Z 
2025-08-18T20:04:25.7055130Z <a id="ingest"></a>
2025-08-18T20:04:25.7055341Z 
2025-08-18T20:04:25.7055465Z # ingest
2025-08-18T20:04:25.7055624Z 
2025-08-18T20:04:25.7055772Z <a id="ingest.maintenance"></a>
2025-08-18T20:04:25.7056044Z 
2025-08-18T20:04:25.7056180Z # ingest.maintenance
2025-08-18T20:04:25.7056399Z 
2025-08-18T20:04:25.7056559Z <a id="ingest.copy_loader"></a>
2025-08-18T20:04:25.7056825Z 
2025-08-18T20:04:25.7056967Z # ingest.copy\_loader
2025-08-18T20:04:25.7057199Z 
2025-08-18T20:04:25.7057396Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T20:04:25.7057751Z 
2025-08-18T20:04:25.7057884Z #### copy\_df\_via\_temp
2025-08-18T20:04:25.7058120Z 
2025-08-18T20:04:25.7058235Z ```python
2025-08-18T20:04:25.7058554Z def copy_df_via_temp(engine: Engine,
2025-08-18T20:04:25.7058993Z                      df: pd.DataFrame,
2025-08-18T20:04:25.7059433Z                      target_table: str,
2025-08-18T20:04:25.7059834Z                      *,
2025-08-18T20:04:25.7060220Z                      target_schema: Optional[str] = None,
2025-08-18T20:04:25.7060898Z                      columns: Sequence[str],
2025-08-18T20:04:25.7061771Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T20:04:25.7062291Z                      analyze_after: bool = False,
2025-08-18T20:04:25.7062790Z                      connection: Any | None = None) -> int
2025-08-18T20:04:25.7063249Z ```
2025-08-18T20:04:25.7063402Z 
2025-08-18T20:04:25.7063687Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T20:04:25.7064126Z 
2025-08-18T20:04:25.7064285Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T20:04:25.7064583Z 
2025-08-18T20:04:25.7064724Z # ingest.tests.test\_smoke
2025-08-18T20:04:25.7064979Z 
2025-08-18T20:04:25.7065114Z <a id="ingest.tests"></a>
2025-08-18T20:04:25.7065351Z 
2025-08-18T20:04:25.7065483Z # ingest.tests
2025-08-18T20:04:25.7065674Z 
2025-08-18T20:04:25.7065824Z <a id="ingest.upload_router"></a>
2025-08-18T20:04:25.7066111Z 
2025-08-18T20:04:25.7066257Z # ingest.upload\_router
2025-08-18T20:04:25.7066481Z 
2025-08-18T20:04:25.7066630Z <a id="ingest.email_watcher"></a>
2025-08-18T20:04:25.7067381Z 
2025-08-18T20:04:25.7067532Z # ingest.email\_watcher
2025-08-18T20:04:25.7067771Z 
2025-08-18T20:04:25.7067948Z <a id="ingest.email_watcher.main"></a>
2025-08-18T20:04:25.7068267Z 
2025-08-18T20:04:25.7068382Z #### main
2025-08-18T20:04:25.7068544Z 
2025-08-18T20:04:25.7068667Z ```python
2025-08-18T20:04:25.7068973Z def main() -> dict[str, str]
2025-08-18T20:04:25.7069341Z ```
2025-08-18T20:04:25.7069494Z 
2025-08-18T20:04:25.7069757Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T20:04:25.7070189Z 
2025-08-18T20:04:25.7070434Z Returns {"status": "success"} when processing completes.
2025-08-18T20:04:25.7071008Z 
2025-08-18T20:04:25.7071167Z <a id="ingest.tasks"></a>
2025-08-18T20:04:25.7071408Z 
2025-08-18T20:04:25.7071528Z # ingest.tasks
2025-08-18T20:04:25.7071721Z 
2025-08-18T20:04:25.7071895Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T20:04:25.7072215Z 
2025-08-18T20:04:25.7072347Z #### task\_import\_file
2025-08-18T20:04:25.7072591Z 
2025-08-18T20:04:25.7072707Z ```python
2025-08-18T20:04:25.7073104Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T20:04:25.7073635Z def task_import_file(self: Any,
2025-08-18T20:04:25.7074037Z                      uri: str,
2025-08-18T20:04:25.7074447Z                      report_type: Optional[str] = None,
2025-08-18T20:04:25.7074953Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T20:04:25.7075417Z ```
2025-08-18T20:04:25.7075569Z 
2025-08-18T20:04:25.7075819Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T20:04:25.7076281Z 
2025-08-18T20:04:25.7076434Z <a id="ingest.celery_app"></a>
2025-08-18T20:04:25.7076702Z 
2025-08-18T20:04:25.7076846Z # ingest.celery\_app
2025-08-18T20:04:25.7077065Z 
2025-08-18T20:04:25.7077222Z <a id="ingest.ingest_router"></a>
2025-08-18T20:04:25.7077516Z 
2025-08-18T20:04:25.7077654Z # ingest.ingest\_router
2025-08-18T20:04:25.7077880Z 
2025-08-18T20:04:25.7078021Z <a id="logistics_etl"></a>
2025-08-18T20:04:25.7078281Z 
2025-08-18T20:04:25.7078402Z # logistics\_etl
2025-08-18T20:04:25.7078595Z 
2025-08-18T20:04:25.7078744Z Daily logistics ETL job.
2025-08-18T20:04:25.7078979Z 
2025-08-18T20:04:25.7079129Z <a id="logistics_etl.__main__"></a>
2025-08-18T20:04:25.7079417Z 
2025-08-18T20:04:25.7079568Z # logistics\_etl.\_\_main\_\_
2025-08-18T20:04:25.7079819Z 
2025-08-18T20:04:25.7079967Z <a id="logistics_etl.dsn"></a>
2025-08-18T20:04:25.7080235Z 
2025-08-18T20:04:25.7080363Z # logistics\_etl.dsn
2025-08-18T20:04:25.7080740Z 
2025-08-18T20:04:25.7080981Z Local DSN builder to avoid cross-service dependency.
2025-08-18T20:04:25.7081359Z 
2025-08-18T20:04:25.7081524Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T20:04:25.7081837Z 
2025-08-18T20:04:25.7081967Z #### build\_dsn
2025-08-18T20:04:25.7082164Z 
2025-08-18T20:04:25.7082280Z ```python
2025-08-18T20:04:25.7082600Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:04:25.7083008Z ```
2025-08-18T20:04:25.7083170Z 
2025-08-18T20:04:25.7083437Z Return a Postgres DSN assembled from environment variables.
2025-08-18T20:04:25.7084099Z 
2025-08-18T20:04:25.7084402Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T20:04:25.7085140Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T20:04:25.7085797Z error when any required variable is missing.
2025-08-18T20:04:25.7086128Z 
2025-08-18T20:04:25.7086305Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T20:04:25.7086638Z 
2025-08-18T20:04:25.7086796Z # logistics\_etl.tests.conftest
2025-08-18T20:04:25.7087070Z 
2025-08-18T20:04:25.7087277Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T20:04:25.7087632Z 
2025-08-18T20:04:25.7087794Z # logistics\_etl.tests.test\_repository
2025-08-18T20:04:25.7088099Z 
2025-08-18T20:04:25.7088282Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T20:04:25.7088603Z 
2025-08-18T20:04:25.7088761Z # logistics\_etl.tests.test\_cron
2025-08-18T20:04:25.7089053Z 
2025-08-18T20:04:25.7089234Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T20:04:25.7089792Z 
2025-08-18T20:04:25.7089956Z # logistics\_etl.tests.test\_imports
2025-08-18T20:04:25.7090254Z 
2025-08-18T20:04:25.7090428Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T20:04:25.7090977Z 
2025-08-18T20:04:25.7091140Z # logistics\_etl.tests.test\_smoke
2025-08-18T20:04:25.7091429Z 
2025-08-18T20:04:25.7091605Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T20:04:25.7091935Z 
2025-08-18T20:04:25.7092089Z # logistics\_etl.tests.test\_client
2025-08-18T20:04:25.7092378Z 
2025-08-18T20:04:25.7092541Z <a id="logistics_etl.tests"></a>
2025-08-18T20:04:25.7092826Z 
2025-08-18T20:04:25.7092976Z # logistics\_etl.tests
2025-08-18T20:04:25.7093205Z 
2025-08-18T20:04:25.7093359Z <a id="logistics_etl.flow"></a>
2025-08-18T20:04:25.7093625Z 
2025-08-18T20:04:25.7093757Z # logistics\_etl.flow
2025-08-18T20:04:25.7093977Z 
2025-08-18T20:04:25.7094125Z <a id="logistics_etl.client"></a>
2025-08-18T20:04:25.7094402Z 
2025-08-18T20:04:25.7094549Z # logistics\_etl.client
2025-08-18T20:04:25.7094796Z 
2025-08-18T20:04:25.7094940Z <a id="logistics_etl.cron"></a>
2025-08-18T20:04:25.7095200Z 
2025-08-18T20:04:25.7095336Z # logistics\_etl.cron
2025-08-18T20:04:25.7095548Z 
2025-08-18T20:04:25.7095686Z <a id="logistics_etl.db"></a>
2025-08-18T20:04:25.7095952Z 
2025-08-18T20:04:25.7096076Z # logistics\_etl.db
2025-08-18T20:04:25.7096261Z 
2025-08-18T20:04:25.7096416Z <a id="logistics_etl.repository"></a>
2025-08-18T20:04:25.7096712Z 
2025-08-18T20:04:25.7096849Z # logistics\_etl.repository
2025-08-18T20:04:25.7097089Z 
2025-08-18T20:04:25.7097229Z <a id="alert_bot"></a>
2025-08-18T20:04:25.7097444Z 
2025-08-18T20:04:25.7097558Z # alert\_bot
2025-08-18T20:04:25.7097745Z 
2025-08-18T20:04:25.7097907Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T20:04:25.7098217Z 
2025-08-18T20:04:25.7098364Z # alert\_bot.tests.test\_smoke
2025-08-18T20:04:25.7098638Z 
2025-08-18T20:04:25.7098779Z <a id="alert_bot.tests"></a>
2025-08-18T20:04:25.7099036Z 
2025-08-18T20:04:25.7099187Z # alert\_bot.tests
2025-08-18T20:04:25.7099388Z 
2025-08-18T20:04:25.7099539Z <a id="alert_bot.alert_bot"></a>
2025-08-18T20:04:25.7099835Z 
2025-08-18T20:04:25.7128339Z # alert\_bot.alert\_bot
2025-08-18T20:04:25.7128619Z 
2025-08-18T20:04:25.7128752Z <a id="alert_bot.rules"></a>
2025-08-18T20:04:25.7128998Z 
2025-08-18T20:04:25.7129107Z # alert\_bot.rules
2025-08-18T20:04:25.7129292Z 
2025-08-18T20:04:25.7129408Z <a id="common"></a>
2025-08-18T20:04:25.7129599Z 
2025-08-18T20:04:25.7129696Z # common
2025-08-18T20:04:25.7129840Z 
2025-08-18T20:04:25.7129963Z <a id="common.dsn"></a>
2025-08-18T20:04:25.7130156Z 
2025-08-18T20:04:25.7130257Z # common.dsn
2025-08-18T20:04:25.7130414Z 
2025-08-18T20:04:25.7130737Z <a id="common.dsn.build_dsn"></a>
2025-08-18T20:04:25.7130998Z 
2025-08-18T20:04:25.7131106Z #### build\_dsn
2025-08-18T20:04:25.7131272Z 
2025-08-18T20:04:25.7131372Z ```python
2025-08-18T20:04:25.7131659Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:04:25.7132021Z ```
2025-08-18T20:04:25.7132392Z 
2025-08-18T20:04:25.7132595Z Return a Postgres DSN, validating required variables.
2025-08-18T20:04:25.7132918Z 
2025-08-18T20:04:25.7133217Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T20:04:25.7133929Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T20:04:25.7134585Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T20:04:25.7135077Z missing.
2025-08-18T20:04:25.7135214Z 
2025-08-18T20:04:25.7135354Z <a id="common.models_vendor"></a>
2025-08-18T20:04:25.7135597Z 
2025-08-18T20:04:25.7135718Z # common.models\_vendor
2025-08-18T20:04:25.7135912Z 
2025-08-18T20:04:25.7136056Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T20:04:25.7136327Z 
2025-08-18T20:04:25.7136440Z ## Vendor Objects
2025-08-18T20:04:25.7136612Z 
2025-08-18T20:04:25.7136718Z ```python
2025-08-18T20:04:25.7136977Z class Vendor(Base)
2025-08-18T20:04:25.7137238Z ```
2025-08-18T20:04:25.7137365Z 
2025-08-18T20:04:25.7137732Z Vendor of inventory items.
2025-08-18T20:04:25.7137960Z 
2025-08-18T20:04:25.7138116Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T20:04:25.7138418Z 
2025-08-18T20:04:25.7138531Z ## VendorPrice Objects
2025-08-18T20:04:25.7138721Z 
2025-08-18T20:04:25.7138820Z ```python
2025-08-18T20:04:25.7139068Z class VendorPrice(Base)
2025-08-18T20:04:25.7139354Z ```
2025-08-18T20:04:25.7139481Z 
2025-08-18T20:04:25.7139642Z Association table linking vendors to pricing.
2025-08-18T20:04:25.7139941Z 
2025-08-18T20:04:25.7140063Z <a id="common.db_url"></a>
2025-08-18T20:04:25.7140264Z 
2025-08-18T20:04:25.7140365Z # common.db\_url
2025-08-18T20:04:25.7140532Z 
2025-08-18T20:04:25.7140816Z <a id="common.db_url.build_url"></a>
2025-08-18T20:04:25.7141079Z 
2025-08-18T20:04:25.7141191Z #### build\_url
2025-08-18T20:04:25.7141347Z 
2025-08-18T20:04:25.7141449Z ```python
2025-08-18T20:04:25.7141733Z def build_url(async_: bool = True) -> str
2025-08-18T20:04:25.7142102Z ```
2025-08-18T20:04:25.7142250Z 
2025-08-18T20:04:25.7142406Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:04:25.7142681Z 
2025-08-18T20:04:25.7142799Z <a id="common.keepa"></a>
2025-08-18T20:04:25.7143009Z 
2025-08-18T20:04:25.7143109Z # common.keepa
2025-08-18T20:04:25.7143264Z 
2025-08-18T20:04:25.7143381Z <a id="common.llm"></a>
2025-08-18T20:04:25.7143574Z 
2025-08-18T20:04:25.7143748Z # common.llm
2025-08-18T20:04:25.7143906Z 
2025-08-18T20:04:25.7144025Z <a id="common.settings"></a>
2025-08-18T20:04:25.7144258Z 
2025-08-18T20:04:25.7144369Z # common.settings
2025-08-18T20:04:25.7144543Z 
2025-08-18T20:04:25.7144659Z <a id="common.db"></a>
2025-08-18T20:04:25.7144845Z 
2025-08-18T20:04:25.7144953Z # common.db
2025-08-18T20:04:25.7145099Z 
2025-08-18T20:04:25.7145242Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T20:04:25.7145510Z 
2025-08-18T20:04:25.7145634Z #### build\_sqlalchemy\_url
2025-08-18T20:04:25.7145844Z 
2025-08-18T20:04:25.7145947Z ```python
2025-08-18T20:04:25.7146220Z def build_sqlalchemy_url() -> str
2025-08-18T20:04:25.7146549Z ```
2025-08-18T20:04:25.7146679Z 
2025-08-18T20:04:25.7146834Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:04:25.7147109Z 
2025-08-18T20:04:25.7147260Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T20:04:25.7147518Z 
2025-08-18T20:04:25.7147636Z #### build\_asyncpg\_dsn
2025-08-18T20:04:25.7147823Z 
2025-08-18T20:04:25.7147930Z ```python
2025-08-18T20:04:25.7148203Z def build_asyncpg_dsn() -> str
2025-08-18T20:04:25.7148528Z ```
2025-08-18T20:04:25.7148655Z 
2025-08-18T20:04:25.7148862Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:04:25.7149207Z 
2025-08-18T20:04:25.7149337Z <a id="common.db.refresh_mvs"></a>
2025-08-18T20:04:25.7149566Z 
2025-08-18T20:04:25.7149676Z #### refresh\_mvs
2025-08-18T20:04:25.7149831Z 
2025-08-18T20:04:25.7149926Z ```python
2025-08-18T20:04:25.7150223Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:04:25.7150753Z ```
2025-08-18T20:04:25.7150891Z 
2025-08-18T20:04:25.7151100Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:04:25.7151621Z 
2025-08-18T20:04:25.7151753Z <a id="common.config"></a>
2025-08-18T20:04:25.7151959Z 
2025-08-18T20:04:25.7152060Z # common.config
2025-08-18T20:04:25.7152216Z 
2025-08-18T20:04:25.7152335Z <a id="common.base"></a>
2025-08-18T20:04:25.7152530Z 
2025-08-18T20:04:25.7152629Z # common.base
2025-08-18T20:04:25.7152781Z 
2025-08-18T20:04:25.7152914Z <a id="common.base.Base"></a>
2025-08-18T20:04:25.7153135Z 
2025-08-18T20:04:25.7153236Z ## Base Objects
2025-08-18T20:04:25.7153396Z 
2025-08-18T20:04:25.7153493Z ```python
2025-08-18T20:04:25.7153749Z class Base(DeclarativeBase)
2025-08-18T20:04:25.7154044Z ```
2025-08-18T20:04:25.7154172Z 
2025-08-18T20:04:25.7154303Z Base class for SQLAlchemy models.
2025-08-18T20:04:25.7154532Z 
2025-08-18T20:04:25.7154643Z <a id="repricer"></a>
2025-08-18T20:04:25.7154832Z 
2025-08-18T20:04:25.7154930Z # repricer
2025-08-18T20:04:25.7155078Z 
2025-08-18T20:04:25.7155213Z <a id="repricer.app.schemas"></a>
2025-08-18T20:04:25.7155629Z 
2025-08-18T20:04:25.7155749Z # repricer.app.schemas
2025-08-18T20:04:25.7155940Z 
2025-08-18T20:04:25.7156080Z <a id="repricer.app.deps"></a>
2025-08-18T20:04:25.7156297Z 
2025-08-18T20:04:25.7156434Z # repricer.app.deps
2025-08-18T20:04:25.7156627Z 
2025-08-18T20:04:25.7156804Z Placeholder module for Keepa / SP-API clients.
2025-08-18T20:04:25.7157102Z 
2025-08-18T20:04:25.7157234Z <a id="repricer.app.logic"></a>
2025-08-18T20:04:25.7157473Z 
2025-08-18T20:04:25.7157588Z # repricer.app.logic
2025-08-18T20:04:25.7157769Z 
2025-08-18T20:04:25.7157930Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T20:04:25.7158196Z 
2025-08-18T20:04:25.7158292Z #### MIN\_MARGIN
2025-08-18T20:04:25.7158453Z 
2025-08-18T20:04:25.7158545Z 15 % ROI
2025-08-18T20:04:25.7158676Z 
2025-08-18T20:04:25.7158829Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T20:04:25.7159118Z 
2025-08-18T20:04:25.7159227Z #### compute\_price
2025-08-18T20:04:25.7159394Z 
2025-08-18T20:04:25.7159504Z ```python
2025-08-18T20:04:25.7159884Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T20:04:25.7160349Z ```
2025-08-18T20:04:25.7160475Z 
2025-08-18T20:04:25.7160801Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T20:04:25.7161247Z Replace with real competitive logic later.
2025-08-18T20:04:25.7161520Z 
2025-08-18T20:04:25.7161647Z <a id="repricer.app.main"></a>
2025-08-18T20:04:25.7161882Z 
2025-08-18T20:04:25.7161999Z # repricer.app.main
2025-08-18T20:04:25.7162164Z 
2025-08-18T20:04:25.7162285Z <a id="repricer.app"></a>
2025-08-18T20:04:25.7162485Z 
2025-08-18T20:04:25.7162590Z # repricer.app
2025-08-18T20:04:25.7162755Z 
2025-08-18T20:04:25.7162892Z <a id="repricer.tests.test_imports"></a>
2025-08-18T20:04:25.7163166Z 
2025-08-18T20:04:25.7163292Z # repricer.tests.test\_imports
2025-08-18T20:04:25.7163529Z 
2025-08-18T20:04:25.7163664Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T20:04:25.7163933Z 
2025-08-18T20:04:25.7164070Z # repricer.tests.test\_smoke
2025-08-18T20:04:25.7164297Z 
2025-08-18T20:04:25.7164413Z <a id="repricer.tests"></a>
2025-08-18T20:04:25.7164615Z 
2025-08-18T20:04:25.7164732Z # repricer.tests
2025-08-18T20:04:25.7164889Z 
2025-08-18T20:04:25.7164984Z <a id="db"></a>
2025-08-18T20:04:25.7165143Z 
2025-08-18T20:04:25.7165237Z # db
2025-08-18T20:04:25.7165366Z 
2025-08-18T20:04:25.7165485Z <a id="db.utils.views"></a>
2025-08-18T20:04:25.7165694Z 
2025-08-18T20:04:25.7165798Z # db.utils.views
2025-08-18T20:04:25.7165958Z 
2025-08-18T20:04:25.7166109Z <a id="db.utils.views.replace_view"></a>
2025-08-18T20:04:25.7166371Z 
2025-08-18T20:04:25.7166478Z #### replace\_view
2025-08-18T20:04:25.7166671Z 
2025-08-18T20:04:25.7166765Z ```python
2025-08-18T20:04:25.7167058Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T20:04:25.7167457Z ```
2025-08-18T20:04:25.7167590Z 
2025-08-18T20:04:25.7167745Z Drop and recreate a SQL view atomically.
2025-08-18T20:04:25.7168015Z 
2025-08-18T20:04:25.7168125Z <a id="db.utils"></a>
2025-08-18T20:04:25.7168489Z 
2025-08-18T20:04:25.7168591Z # db.utils
2025-08-18T20:04:25.7168726Z 
2025-08-18T20:04:25.7168848Z <a id="price_importer"></a>
2025-08-18T20:04:25.7169061Z 
2025-08-18T20:04:25.7169165Z # price\_importer
2025-08-18T20:04:25.7169330Z 
2025-08-18T20:04:25.7169491Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T20:04:25.7169849Z 
2025-08-18T20:04:25.7170010Z # price\_importer.services\_common.dsn
2025-08-18T20:04:25.7170278Z 
2025-08-18T20:04:25.7170477Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T20:04:25.7170961Z 
2025-08-18T20:04:25.7171070Z #### build\_dsn
2025-08-18T20:04:25.7171234Z 
2025-08-18T20:04:25.7171332Z ```python
2025-08-18T20:04:25.7171601Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:04:25.7171948Z ```
2025-08-18T20:04:25.7172078Z 
2025-08-18T20:04:25.7172189Z Return safe DSN.
2025-08-18T20:04:25.7172349Z 
2025-08-18T20:04:25.7172807Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T20:04:25.7173116Z 
2025-08-18T20:04:25.7173515Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T20:04:25.7173840Z 
2025-08-18T20:04:25.7174012Z # price\_importer.services\_common.models\_vendor
2025-08-18T20:04:25.7174318Z 
2025-08-18T20:04:25.7174487Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T20:04:25.7174782Z 
2025-08-18T20:04:25.7174938Z # price\_importer.services\_common.db\_url
2025-08-18T20:04:25.7175193Z 
2025-08-18T20:04:25.7175396Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T20:04:25.7175732Z 
2025-08-18T20:04:25.7175832Z #### build\_url
2025-08-18T20:04:25.7175982Z 
2025-08-18T20:04:25.7176077Z ```python
2025-08-18T20:04:25.7176352Z def build_url(async_: bool = True) -> str
2025-08-18T20:04:25.7176689Z ```
2025-08-18T20:04:25.7176824Z 
2025-08-18T20:04:25.7176978Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:04:25.7177245Z 
2025-08-18T20:04:25.7177409Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T20:04:25.7177709Z 
2025-08-18T20:04:25.7177862Z # price\_importer.services\_common.keepa
2025-08-18T20:04:25.7178154Z 
2025-08-18T20:04:25.7178322Z <a id="price_importer.services_common.llm"></a>
2025-08-18T20:04:25.7178611Z 
2025-08-18T20:04:25.7178757Z # price\_importer.services\_common.llm
2025-08-18T20:04:25.7179031Z 
2025-08-18T20:04:25.7179215Z <a id="price_importer.services_common.settings"></a>
2025-08-18T20:04:25.7179529Z 
2025-08-18T20:04:25.7179688Z # price\_importer.services\_common.settings
2025-08-18T20:04:25.7179969Z 
2025-08-18T20:04:25.7180136Z <a id="price_importer.services_common.db"></a>
2025-08-18T20:04:25.7180462Z 
2025-08-18T20:04:25.7181001Z # price\_importer.services\_common.db
2025-08-18T20:04:25.7181312Z 
2025-08-18T20:04:25.7181550Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T20:04:25.7181899Z 
2025-08-18T20:04:25.7182005Z #### build\_sqlalchemy\_url
2025-08-18T20:04:25.7182185Z 
2025-08-18T20:04:25.7182280Z ```python
2025-08-18T20:04:25.7182522Z def build_sqlalchemy_url() -> str
2025-08-18T20:04:25.7182828Z ```
2025-08-18T20:04:25.7182939Z 
2025-08-18T20:04:25.7183071Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:04:25.7183327Z 
2025-08-18T20:04:25.7183528Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T20:04:25.7183841Z 
2025-08-18T20:04:25.7183948Z #### build\_asyncpg\_dsn
2025-08-18T20:04:25.7184114Z 
2025-08-18T20:04:25.7184198Z ```python
2025-08-18T20:04:25.7184433Z def build_asyncpg_dsn() -> str
2025-08-18T20:04:25.7184695Z ```
2025-08-18T20:04:25.7184810Z 
2025-08-18T20:04:25.7184982Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:04:25.7185266Z 
2025-08-18T20:04:25.7185437Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T20:04:25.7185723Z 
2025-08-18T20:04:25.7185812Z #### refresh\_mvs
2025-08-18T20:04:25.7185951Z 
2025-08-18T20:04:25.7186040Z ```python
2025-08-18T20:04:25.7186299Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:04:25.7186637Z ```
2025-08-18T20:04:25.7186745Z 
2025-08-18T20:04:25.7187129Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:04:25.7187428Z 
2025-08-18T20:04:25.7187555Z <a id="price_importer.services_common"></a>
2025-08-18T20:04:25.7187791Z 
2025-08-18T20:04:25.7187908Z # price\_importer.services\_common
2025-08-18T20:04:25.7188115Z 
2025-08-18T20:04:25.7188250Z <a id="price_importer.services_common.base"></a>
2025-08-18T20:04:25.7188496Z 
2025-08-18T20:04:25.7188620Z # price\_importer.services\_common.base
2025-08-18T20:04:25.7188846Z 
2025-08-18T20:04:25.7188969Z <a id="price_importer.normaliser"></a>
2025-08-18T20:04:25.7189200Z 
2025-08-18T20:04:25.7189309Z # price\_importer.normaliser
2025-08-18T20:04:25.7189499Z 
2025-08-18T20:04:25.7189645Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T20:04:25.7189899Z 
2025-08-18T20:04:25.7190017Z # price\_importer.common.models\_vendor
2025-08-18T20:04:25.7190239Z 
2025-08-18T20:04:25.7190367Z <a id="price_importer.common.db_url"></a>
2025-08-18T20:04:25.7190743Z 
2025-08-18T20:04:25.7190989Z # price\_importer.common.db\_url
2025-08-18T20:04:25.7191235Z 
2025-08-18T20:04:25.7191387Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T20:04:25.7191653Z 
2025-08-18T20:04:25.7191743Z #### make\_dsn
2025-08-18T20:04:25.7191875Z 
2025-08-18T20:04:25.7191960Z ```python
2025-08-18T20:04:25.7192200Z def make_dsn(async_: bool = False) -> str
2025-08-18T20:04:25.7192508Z ```
2025-08-18T20:04:25.7192623Z 
2025-08-18T20:04:25.7192785Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T20:04:25.7193057Z 
2025-08-18T20:04:25.7193203Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T20:04:25.7193469Z 
2025-08-18T20:04:25.7193555Z #### build\_url
2025-08-18T20:04:25.7193669Z 
2025-08-18T20:04:25.7193739Z ```python
2025-08-18T20:04:25.7193924Z def build_url(async_: bool = False) -> str
2025-08-18T20:04:25.7194160Z ```
2025-08-18T20:04:25.7194244Z 
2025-08-18T20:04:25.7194371Z Return Postgres DSN built from environment variables.
2025-08-18T20:04:25.7194585Z 
2025-08-18T20:04:25.7194688Z <a id="price_importer.common"></a>
2025-08-18T20:04:25.7194848Z 
2025-08-18T20:04:25.7194926Z # price\_importer.common
2025-08-18T20:04:25.7195064Z 
2025-08-18T20:04:25.7195159Z <a id="price_importer.common.base"></a>
2025-08-18T20:04:25.7195333Z 
2025-08-18T20:04:25.7195428Z # price\_importer.common.base
2025-08-18T20:04:25.7195572Z 
2025-08-18T20:04:25.7195671Z <a id="price_importer.tests.conftest"></a>
2025-08-18T20:04:25.7195849Z 
2025-08-18T20:04:25.7195937Z # price\_importer.tests.conftest
2025-08-18T20:04:25.7196089Z 
2025-08-18T20:04:25.7196190Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T20:04:25.7196381Z 
2025-08-18T20:04:25.7196469Z # price\_importer.tests.test\_reader
2025-08-18T20:04:25.7196641Z 
2025-08-18T20:04:25.7196751Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T20:04:25.7196935Z 
2025-08-18T20:04:25.7197025Z # price\_importer.tests.test\_imports
2025-08-18T20:04:25.7197194Z 
2025-08-18T20:04:25.7197294Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T20:04:25.7197477Z 
2025-08-18T20:04:25.7197564Z # price\_importer.tests.test\_smoke
2025-08-18T20:04:25.7197731Z 
2025-08-18T20:04:25.7197840Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T20:04:25.7198028Z 
2025-08-18T20:04:25.7198130Z # price\_importer.tests.test\_normaliser
2025-08-18T20:04:25.7198300Z 
2025-08-18T20:04:25.7198388Z <a id="price_importer.tests"></a>
2025-08-18T20:04:25.7198554Z 
2025-08-18T20:04:25.7198639Z # price\_importer.tests
2025-08-18T20:04:25.7198766Z 
2025-08-18T20:04:25.7198852Z <a id="price_importer.reader"></a>
2025-08-18T20:04:25.7199078Z 
2025-08-18T20:04:25.7199159Z # price\_importer.reader
2025-08-18T20:04:25.7199290Z 
2025-08-18T20:04:25.7199389Z <a id="price_importer.repository"></a>
2025-08-18T20:04:25.7199555Z 
2025-08-18T20:04:25.7199638Z # price\_importer.repository
2025-08-18T20:04:25.7199784Z 
2025-08-18T20:04:25.7199868Z <a id="price_importer.import"></a>
2025-08-18T20:04:25.7200019Z 
2025-08-18T20:04:25.7200096Z # price\_importer.import
2025-08-18T20:04:25.7200354Z 
2025-08-18T20:04:25.7200425Z <a id="fees_h10"></a>
2025-08-18T20:04:25.7200544Z 
2025-08-18T20:04:25.7200719Z # fees\_h10
2025-08-18T20:04:25.7200814Z 
2025-08-18T20:04:25.7200890Z <a id="fees_h10.worker"></a>
2025-08-18T20:04:25.7201028Z 
2025-08-18T20:04:25.7201099Z # fees\_h10.worker
2025-08-18T20:04:25.7201207Z 
2025-08-18T20:04:25.7201307Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T20:04:25.7201492Z 
2025-08-18T20:04:25.7201566Z #### list\_active\_asins
2025-08-18T20:04:25.7201687Z 
2025-08-18T20:04:25.7201758Z ```python
2025-08-18T20:04:25.7201931Z def list_active_asins() -> list[str]
2025-08-18T20:04:25.7202150Z ```
2025-08-18T20:04:25.7202232Z 
2025-08-18T20:04:25.7202346Z Return known ASINs or an empty list if unavailable.
2025-08-18T20:04:25.7202547Z 
2025-08-18T20:04:25.7202633Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T20:04:25.7202793Z 
2025-08-18T20:04:25.7202875Z # fees\_h10.tests.test\_smoke
2025-08-18T20:04:25.7203021Z 
2025-08-18T20:04:25.7203231Z <a id="fees_h10.tests"></a>
2025-08-18T20:04:25.7203366Z 
2025-08-18T20:04:25.7203442Z # fees\_h10.tests
2025-08-18T20:04:25.7203547Z 
2025-08-18T20:04:25.7203625Z <a id="fees_h10.client"></a>
2025-08-18T20:04:25.7203763Z 
2025-08-18T20:04:25.7203828Z # fees\_h10.client
2025-08-18T20:04:25.7203934Z 
2025-08-18T20:04:25.7204020Z <a id="fees_h10.repository"></a>
2025-08-18T20:04:25.7204169Z 
2025-08-18T20:04:25.7204243Z # fees\_h10.repository
2025-08-18T20:04:25.7204359Z 
2025-08-18T20:04:25.7204435Z <a id="emailer"></a>
2025-08-18T20:04:25.7204549Z 
2025-08-18T20:04:25.7204612Z # emailer
2025-08-18T20:04:25.7204708Z 
2025-08-18T20:04:25.7204811Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T20:04:25.7204990Z 
2025-08-18T20:04:25.7205080Z # emailer.tests.test\_import\_emailer
2025-08-18T20:04:25.7205247Z 
2025-08-18T20:04:25.7205334Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T20:04:25.7205490Z 
2025-08-18T20:04:25.7205577Z # emailer.tests.test\_smoke
2025-08-18T20:04:25.7205720Z 
2025-08-18T20:04:25.7205804Z <a id="emailer.tests"></a>
2025-08-18T20:04:25.7205944Z 
2025-08-18T20:04:25.7206013Z # emailer.tests
2025-08-18T20:04:25.7206120Z 
2025-08-18T20:04:25.7206206Z <a id="emailer.generate_body"></a>
2025-08-18T20:04:25.7206363Z 
2025-08-18T20:04:25.7206439Z # emailer.generate\_body
2025-08-18T20:04:25.7206565Z 
2025-08-18T20:04:25.7206644Z <a id="llm_server"></a>
2025-08-18T20:04:25.7206764Z 
2025-08-18T20:04:25.7206831Z # llm\_server
2025-08-18T20:04:25.7206932Z 
2025-08-18T20:04:25.7207017Z <a id="llm_server.app"></a>
2025-08-18T20:04:25.7207153Z 
2025-08-18T20:04:25.7207223Z # llm\_server.app
2025-08-18T20:04:25.7207335Z 
