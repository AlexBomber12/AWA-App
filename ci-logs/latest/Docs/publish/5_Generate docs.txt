2025-08-18T18:47:18.4524394Z ##[group]Run pydoc-markdown
2025-08-18T18:47:18.4524706Z [36;1mpydoc-markdown[0m
2025-08-18T18:47:18.4564329Z shell: /usr/bin/bash -e {0}
2025-08-18T18:47:18.4564556Z env:
2025-08-18T18:47:18.4564799Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:47:18.4565207Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T18:47:18.4565592Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:47:18.4565977Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:47:18.4566311Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:47:18.4566651Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T18:47:18.4566925Z ##[endgroup]
2025-08-18T18:47:18.8017768Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T18:47:18.8018639Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T18:47:18.8019042Z In "pydoc-markdown.yml"
2025-08-18T18:47:18.8019402Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T18:47:18.8020587Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T18:47:18.8021709Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T18:47:18.8022488Z 
2025-08-18T18:47:19.1071563Z <a id="__init__"></a>
2025-08-18T18:47:19.1071970Z 
2025-08-18T18:47:19.1072094Z # \_\_init\_\_
2025-08-18T18:47:19.1072289Z 
2025-08-18T18:47:19.1072429Z <a id="api"></a>
2025-08-18T18:47:19.1072634Z 
2025-08-18T18:47:19.1072744Z # api
2025-08-18T18:47:19.1072915Z 
2025-08-18T18:47:19.1073052Z <a id="api.errors"></a>
2025-08-18T18:47:19.1073290Z 
2025-08-18T18:47:19.1073424Z # api.errors
2025-08-18T18:47:19.1073611Z 
2025-08-18T18:47:19.1073781Z <a id="api.tests.test_errors_json"></a>
2025-08-18T18:47:19.1074106Z 
2025-08-18T18:47:19.1074273Z # api.tests.test\_errors\_json
2025-08-18T18:47:19.1074541Z 
2025-08-18T18:47:19.1074689Z <a id="api.tests.test_llm"></a>
2025-08-18T18:47:19.1074967Z 
2025-08-18T18:47:19.1075102Z # api.tests.test\_llm
2025-08-18T18:47:19.1075368Z 
2025-08-18T18:47:19.1075517Z <a id="api.tests.test_cors"></a>
2025-08-18T18:47:19.1075808Z 
2025-08-18T18:47:19.1075945Z # api.tests.test\_cors
2025-08-18T18:47:19.1076170Z 
2025-08-18T18:47:19.1076344Z <a id="api.tests.test_imports"></a>
2025-08-18T18:47:19.1076641Z 
2025-08-18T18:47:19.1076789Z # api.tests.test\_imports
2025-08-18T18:47:19.1077041Z 
2025-08-18T18:47:19.1077202Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T18:47:19.1077508Z 
2025-08-18T18:47:19.1077653Z # api.tests.test\_rate\_limit
2025-08-18T18:47:19.1077927Z 
2025-08-18T18:47:19.1078108Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T18:47:19.1078429Z 
2025-08-18T18:47:19.1078552Z #### app
2025-08-18T18:47:19.1078717Z 
2025-08-18T18:47:19.1078832Z noqa: E402
2025-08-18T18:47:19.1079011Z 
2025-08-18T18:47:19.1079176Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T18:47:19.1079485Z 
2025-08-18T18:47:19.1079858Z # api.tests.test\_entrypoint
2025-08-18T18:47:19.1080139Z 
2025-08-18T18:47:19.1080659Z <a id="api.tests.test_health"></a>
2025-08-18T18:47:19.1080958Z 
2025-08-18T18:47:19.1081108Z # api.tests.test\_health
2025-08-18T18:47:19.1081351Z 
2025-08-18T18:47:19.1081503Z <a id="api.logging_config"></a>
2025-08-18T18:47:19.1081796Z 
2025-08-18T18:47:19.1081938Z # api.logging\_config
2025-08-18T18:47:19.1082161Z 
2025-08-18T18:47:19.1082313Z <a id="api.migrations.env"></a>
2025-08-18T18:47:19.1082587Z 
2025-08-18T18:47:19.1082724Z # api.migrations.env
2025-08-18T18:47:19.1082942Z 
2025-08-18T18:47:19.1083176Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T18:47:19.1083564Z 
2025-08-18T18:47:19.1083765Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T18:47:19.1084122Z 
2025-08-18T18:47:19.1084328Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T18:47:19.1084689Z 
2025-08-18T18:47:19.1084861Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T18:47:19.1085200Z 
2025-08-18T18:47:19.1085484Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T18:47:19.1086279Z 
2025-08-18T18:47:19.1086552Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T18:47:19.1086961Z 
2025-08-18T18:47:19.1087189Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T18:47:19.1087581Z 
2025-08-18T18:47:19.1087779Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T18:47:19.1088128Z 
2025-08-18T18:47:19.1088350Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T18:47:19.1088734Z 
2025-08-18T18:47:19.1088923Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T18:47:19.1089262Z 
2025-08-18T18:47:19.1089505Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T18:47:19.1090086Z 
2025-08-18T18:47:19.1090298Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T18:47:19.1090666Z 
2025-08-18T18:47:19.1090896Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T18:47:19.1091268Z 
2025-08-18T18:47:19.1091472Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T18:47:19.1091858Z 
2025-08-18T18:47:19.1092100Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T18:47:19.1092486Z 
2025-08-18T18:47:19.1092695Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T18:47:19.1093040Z 
2025-08-18T18:47:19.1093297Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T18:47:19.1093722Z 
2025-08-18T18:47:19.1093947Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T18:47:19.1094326Z 
2025-08-18T18:47:19.1094569Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T18:47:19.1094964Z 
2025-08-18T18:47:19.1095170Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T18:47:19.1095532Z 
2025-08-18T18:47:19.1095785Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T18:47:19.1096200Z 
2025-08-18T18:47:19.1096420Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T18:47:19.1096803Z 
2025-08-18T18:47:19.1097012Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T18:47:19.1097395Z 
2025-08-18T18:47:19.1097584Z # api.migrations.versions.0001\_baseline
2025-08-18T18:47:19.1097911Z 
2025-08-18T18:47:19.1098075Z <a id="api.migrations.versions"></a>
2025-08-18T18:47:19.1098388Z 
2025-08-18T18:47:19.1098543Z # api.migrations.versions
2025-08-18T18:47:19.1098790Z 
2025-08-18T18:47:19.1098928Z <a id="api.migrations"></a>
2025-08-18T18:47:19.1099187Z 
2025-08-18T18:47:19.1099309Z # api.migrations
2025-08-18T18:47:19.1099503Z 
2025-08-18T18:47:19.1099800Z <a id="api.db"></a>
2025-08-18T18:47:19.1100011Z 
2025-08-18T18:47:19.1100128Z # api.db
2025-08-18T18:47:19.1100288Z 
2025-08-18T18:47:19.1100441Z <a id="api.routes.stats"></a>
2025-08-18T18:47:19.1100706Z 
2025-08-18T18:47:19.1100831Z # api.routes.stats
2025-08-18T18:47:19.1101042Z 
2025-08-18T18:47:19.1101200Z <a id="api.routes.stats.kpi"></a>
2025-08-18T18:47:19.1101485Z 
2025-08-18T18:47:19.1101607Z #### kpi
2025-08-18T18:47:19.1101775Z 
2025-08-18T18:47:19.1101890Z ```python
2025-08-18T18:47:19.1102197Z @router.get("/stats/kpi")
2025-08-18T18:47:19.1102854Z def kpi() -> List[Dict[str, int]]
2025-08-18T18:47:19.1103254Z ```
2025-08-18T18:47:19.1103498Z 
2025-08-18T18:47:19.1103662Z Return KPI metrics (mock).
2025-08-18T18:47:19.1103948Z 
2025-08-18T18:47:19.1104130Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T18:47:19.1104472Z 
2025-08-18T18:47:19.1104598Z #### roi\_by\_vendor
2025-08-18T18:47:19.1104806Z 
2025-08-18T18:47:19.1104920Z ```python
2025-08-18T18:47:19.1105240Z @router.get("/stats/roi_by_vendor")
2025-08-18T18:47:19.1105704Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T18:47:19.1106127Z ```
2025-08-18T18:47:19.1106278Z 
2025-08-18T18:47:19.1106432Z Return ROI percent by vendor.
2025-08-18T18:47:19.1106695Z 
2025-08-18T18:47:19.1106865Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T18:47:19.1107182Z 
2025-08-18T18:47:19.1107299Z #### roi\_trend
2025-08-18T18:47:19.1107487Z 
2025-08-18T18:47:19.1107603Z ```python
2025-08-18T18:47:19.1107914Z @router.get("/stats/roi_trend")
2025-08-18T18:47:19.1108619Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T18:47:19.1109058Z ```
2025-08-18T18:47:19.1109214Z 
2025-08-18T18:47:19.1109359Z Return 30-day ROI trend.
2025-08-18T18:47:19.1109890Z 
2025-08-18T18:47:19.1110041Z <a id="api.routes.roi"></a>
2025-08-18T18:47:19.1110292Z 
2025-08-18T18:47:19.1110424Z # api.routes.roi
2025-08-18T18:47:19.1110627Z 
2025-08-18T18:47:19.1110776Z <a id="api.routes.health"></a>
2025-08-18T18:47:19.1111051Z 
2025-08-18T18:47:19.1111181Z # api.routes.health
2025-08-18T18:47:19.1111385Z 
2025-08-18T18:47:19.1111560Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T18:47:19.1111888Z 
2025-08-18T18:47:19.1112006Z #### MAX\_SKEW
2025-08-18T18:47:19.1112193Z 
2025-08-18T18:47:19.1112319Z seconds
2025-08-18T18:47:19.1112485Z 
2025-08-18T18:47:19.1112635Z <a id="api.routes.health.health"></a>
2025-08-18T18:47:19.1112939Z 
2025-08-18T18:47:19.1113045Z #### health
2025-08-18T18:47:19.1113208Z 
2025-08-18T18:47:19.1113313Z ```python
2025-08-18T18:47:19.1113667Z @router.get("/health", include_in_schema=False)
2025-08-18T18:47:19.1114404Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T18:47:19.1115041Z ```
2025-08-18T18:47:19.1115200Z 
2025-08-18T18:47:19.1115423Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T18:47:19.1115792Z 
2025-08-18T18:47:19.1115954Z <a id="api.routes.repository"></a>
2025-08-18T18:47:19.1116258Z 
2025-08-18T18:47:19.1116401Z # api.routes.repository
2025-08-18T18:47:19.1116711Z 
2025-08-18T18:47:19.1116855Z <a id="api.routes"></a>
2025-08-18T18:47:19.1117078Z 
2025-08-18T18:47:19.1117195Z # api.routes
2025-08-18T18:47:19.1117375Z 
2025-08-18T18:47:19.1117527Z <a id="api.models.fee"></a>
2025-08-18T18:47:19.1117773Z 
2025-08-18T18:47:19.1117899Z # api.models.fee
2025-08-18T18:47:19.1118102Z 
2025-08-18T18:47:19.1118237Z <a id="api.models"></a>
2025-08-18T18:47:19.1118456Z 
2025-08-18T18:47:19.1118582Z # api.models
2025-08-18T18:47:19.1118764Z 
2025-08-18T18:47:19.1118914Z <a id="api.roi_repository"></a>
2025-08-18T18:47:19.1119207Z 
2025-08-18T18:47:19.1119354Z # api.roi\_repository
2025-08-18T18:47:19.1119753Z 
2025-08-18T18:47:19.1119892Z <a id="api.main"></a>
2025-08-18T18:47:19.1120121Z 
2025-08-18T18:47:19.1120234Z # api.main
2025-08-18T18:47:19.1120406Z 
2025-08-18T18:47:19.1120548Z <a id="api.main.ready"></a>
2025-08-18T18:47:19.1120807Z 
2025-08-18T18:47:19.1120920Z #### ready
2025-08-18T18:47:19.1121087Z 
2025-08-18T18:47:19.1121208Z ```python
2025-08-18T18:47:19.1121687Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T18:47:19.1122505Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T18:47:19.1123155Z                                                                       str]
2025-08-18T18:47:19.1123588Z ```
2025-08-18T18:47:19.1123739Z 
2025-08-18T18:47:19.1123920Z Return 200 only when migrations are at head.
2025-08-18T18:47:19.1124253Z 
2025-08-18T18:47:19.1124387Z <a id="api.config"></a>
2025-08-18T18:47:19.1124610Z 
2025-08-18T18:47:19.1124971Z # api.config
2025-08-18T18:47:19.1125155Z 
2025-08-18T18:47:19.1125274Z <a id="etl"></a>
2025-08-18T18:47:19.1125477Z 
2025-08-18T18:47:19.1125585Z # etl
2025-08-18T18:47:19.1125742Z 
2025-08-18T18:47:19.1125890Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T18:47:19.1126173Z 
2025-08-18T18:47:19.1126307Z # etl.fba\_fee\_ingestor
2025-08-18T18:47:19.1126537Z 
2025-08-18T18:47:19.1126695Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T18:47:19.1126972Z 
2025-08-18T18:47:19.1127106Z # etl.sp\_fees\_ingestor
2025-08-18T18:47:19.1127333Z 
2025-08-18T18:47:19.1127487Z <a id="etl.keepa_ingestor"></a>
2025-08-18T18:47:19.1127752Z 
2025-08-18T18:47:19.1127885Z # etl.keepa\_ingestor
2025-08-18T18:47:19.1128111Z 
2025-08-18T18:47:19.1128231Z <a id="etl.db"></a>
2025-08-18T18:47:19.1128431Z 
2025-08-18T18:47:19.1128549Z # etl.db
2025-08-18T18:47:19.1128710Z 
2025-08-18T18:47:19.1128861Z <a id="etl.dialects.schemas"></a>
2025-08-18T18:47:19.1129145Z 
2025-08-18T18:47:19.1129279Z # etl.dialects.schemas
2025-08-18T18:47:19.1129891Z 
2025-08-18T18:47:19.1130096Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T18:47:19.1130465Z 
2025-08-18T18:47:19.1130628Z # etl.dialects.amazon\_reimbursements
2025-08-18T18:47:19.1130933Z 
2025-08-18T18:47:19.1131122Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T18:47:19.1131461Z 
2025-08-18T18:47:19.1131620Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T18:47:19.1131934Z 
2025-08-18T18:47:19.1132107Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T18:47:19.1132430Z 
2025-08-18T18:47:19.1132586Z # etl.dialects.amazon\_returns
2025-08-18T18:47:19.1132867Z 
2025-08-18T18:47:19.1133048Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T18:47:19.1133375Z 
2025-08-18T18:47:19.1133547Z # etl.dialects.amazon\_fee\_preview
2025-08-18T18:47:19.1133850Z 
2025-08-18T18:47:19.1134054Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T18:47:19.1134420Z 
2025-08-18T18:47:19.1134596Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T18:47:19.1134932Z 
2025-08-18T18:47:19.1135118Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T18:47:19.1135454Z 
2025-08-18T18:47:19.1135617Z # etl.dialects.amazon\_settlements
2025-08-18T18:47:19.1135904Z 
2025-08-18T18:47:19.1136056Z <a id="etl.dialects"></a>
2025-08-18T18:47:19.1136296Z 
2025-08-18T18:47:19.1136417Z # etl.dialects
2025-08-18T18:47:19.1136610Z 
2025-08-18T18:47:19.1136731Z <a id="ingest"></a>
2025-08-18T18:47:19.1136928Z 
2025-08-18T18:47:19.1137041Z # ingest
2025-08-18T18:47:19.1137208Z 
2025-08-18T18:47:19.1137419Z <a id="ingest.maintenance"></a>
2025-08-18T18:47:19.1137688Z 
2025-08-18T18:47:19.1137828Z # ingest.maintenance
2025-08-18T18:47:19.1138046Z 
2025-08-18T18:47:19.1138193Z <a id="ingest.copy_loader"></a>
2025-08-18T18:47:19.1138462Z 
2025-08-18T18:47:19.1138605Z # ingest.copy\_loader
2025-08-18T18:47:19.1138817Z 
2025-08-18T18:47:19.1139002Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T18:47:19.1139358Z 
2025-08-18T18:47:19.1139494Z #### copy\_df\_via\_temp
2025-08-18T18:47:19.1139908Z 
2025-08-18T18:47:19.1140033Z ```python
2025-08-18T18:47:19.1140340Z def copy_df_via_temp(engine: Engine,
2025-08-18T18:47:19.1140782Z                      df: pd.DataFrame,
2025-08-18T18:47:19.1141404Z                      target_table: str,
2025-08-18T18:47:19.1141996Z                      *,
2025-08-18T18:47:19.1142391Z                      target_schema: Optional[str] = None,
2025-08-18T18:47:19.1142892Z                      columns: Sequence[str],
2025-08-18T18:47:19.1143413Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T18:47:19.1143941Z                      analyze_after: bool = False,
2025-08-18T18:47:19.1144434Z                      connection: Any | None = None) -> int
2025-08-18T18:47:19.1144866Z ```
2025-08-18T18:47:19.1145019Z 
2025-08-18T18:47:19.1145312Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T18:47:19.1145735Z 
2025-08-18T18:47:19.1145894Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T18:47:19.1146447Z 
2025-08-18T18:47:19.1146596Z # ingest.tests.test\_smoke
2025-08-18T18:47:19.1146846Z 
2025-08-18T18:47:19.1146987Z <a id="ingest.tests"></a>
2025-08-18T18:47:19.1147233Z 
2025-08-18T18:47:19.1147353Z # ingest.tests
2025-08-18T18:47:19.1147540Z 
2025-08-18T18:47:19.1147700Z <a id="ingest.upload_router"></a>
2025-08-18T18:47:19.1147976Z 
2025-08-18T18:47:19.1148114Z # ingest.upload\_router
2025-08-18T18:47:19.1148349Z 
2025-08-18T18:47:19.1148498Z <a id="ingest.email_watcher"></a>
2025-08-18T18:47:19.1148773Z 
2025-08-18T18:47:19.1148909Z # ingest.email\_watcher
2025-08-18T18:47:19.1149140Z 
2025-08-18T18:47:19.1149298Z <a id="ingest.email_watcher.main"></a>
2025-08-18T18:47:19.1149776Z 
2025-08-18T18:47:19.1149905Z #### main
2025-08-18T18:47:19.1150070Z 
2025-08-18T18:47:19.1150184Z ```python
2025-08-18T18:47:19.1150494Z def main() -> dict[str, str]
2025-08-18T18:47:19.1150846Z ```
2025-08-18T18:47:19.1151005Z 
2025-08-18T18:47:19.1151263Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T18:47:19.1152046Z 
2025-08-18T18:47:19.1152301Z Returns {"status": "success"} when processing completes.
2025-08-18T18:47:19.1152722Z 
2025-08-18T18:47:19.1152869Z <a id="ingest.tasks"></a>
2025-08-18T18:47:19.1153113Z 
2025-08-18T18:47:19.1153245Z # ingest.tasks
2025-08-18T18:47:19.1153437Z 
2025-08-18T18:47:19.1153614Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T18:47:19.1153955Z 
2025-08-18T18:47:19.1154088Z #### task\_import\_file
2025-08-18T18:47:19.1154307Z 
2025-08-18T18:47:19.1154422Z ```python
2025-08-18T18:47:19.1154812Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T18:47:19.1155347Z def task_import_file(self: Any,
2025-08-18T18:47:19.1155739Z                      uri: str,
2025-08-18T18:47:19.1156157Z                      report_type: Optional[str] = None,
2025-08-18T18:47:19.1156656Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T18:47:19.1157111Z ```
2025-08-18T18:47:19.1157263Z 
2025-08-18T18:47:19.1157514Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T18:47:19.1157950Z 
2025-08-18T18:47:19.1158100Z <a id="ingest.celery_app"></a>
2025-08-18T18:47:19.1158362Z 
2025-08-18T18:47:19.1158505Z # ingest.celery\_app
2025-08-18T18:47:19.1158721Z 
2025-08-18T18:47:19.1158871Z <a id="ingest.ingest_router"></a>
2025-08-18T18:47:19.1159151Z 
2025-08-18T18:47:19.1159295Z # ingest.ingest\_router
2025-08-18T18:47:19.1159547Z 
2025-08-18T18:47:19.1159866Z <a id="logistics_etl"></a>
2025-08-18T18:47:19.1160112Z 
2025-08-18T18:47:19.1160235Z # logistics\_etl
2025-08-18T18:47:19.1160442Z 
2025-08-18T18:47:19.1160581Z Daily logistics ETL job.
2025-08-18T18:47:19.1160810Z 
2025-08-18T18:47:19.1160967Z <a id="logistics_etl.__main__"></a>
2025-08-18T18:47:19.1161256Z 
2025-08-18T18:47:19.1161399Z # logistics\_etl.\_\_main\_\_
2025-08-18T18:47:19.1161664Z 
2025-08-18T18:47:19.1161812Z <a id="logistics_etl.dsn"></a>
2025-08-18T18:47:19.1162075Z 
2025-08-18T18:47:19.1162208Z # logistics\_etl.dsn
2025-08-18T18:47:19.1162433Z 
2025-08-18T18:47:19.1162673Z Local DSN builder to avoid cross-service dependency.
2025-08-18T18:47:19.1163050Z 
2025-08-18T18:47:19.1163223Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T18:47:19.1163537Z 
2025-08-18T18:47:19.1163655Z #### build\_dsn
2025-08-18T18:47:19.1163849Z 
2025-08-18T18:47:19.1163963Z ```python
2025-08-18T18:47:19.1164284Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:47:19.1164697Z ```
2025-08-18T18:47:19.1164847Z 
2025-08-18T18:47:19.1165106Z Return a Postgres DSN assembled from environment variables.
2025-08-18T18:47:19.1165540Z 
2025-08-18T18:47:19.1165830Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T18:47:19.1166581Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T18:47:19.1167221Z error when any required variable is missing.
2025-08-18T18:47:19.1167573Z 
2025-08-18T18:47:19.1167753Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T18:47:19.1168083Z 
2025-08-18T18:47:19.1168237Z # logistics\_etl.tests.conftest
2025-08-18T18:47:19.1168961Z 
2025-08-18T18:47:19.1169153Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T18:47:19.1169496Z 
2025-08-18T18:47:19.1169855Z # logistics\_etl.tests.test\_repository
2025-08-18T18:47:19.1170170Z 
2025-08-18T18:47:19.1170347Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T18:47:19.1170677Z 
2025-08-18T18:47:19.1170829Z # logistics\_etl.tests.test\_cron
2025-08-18T18:47:19.1171110Z 
2025-08-18T18:47:19.1171290Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T18:47:19.1171642Z 
2025-08-18T18:47:19.1171799Z # logistics\_etl.tests.test\_imports
2025-08-18T18:47:19.1172101Z 
2025-08-18T18:47:19.1172285Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T18:47:19.1172611Z 
2025-08-18T18:47:19.1172770Z # logistics\_etl.tests.test\_smoke
2025-08-18T18:47:19.1173066Z 
2025-08-18T18:47:19.1173243Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T18:47:19.1173566Z 
2025-08-18T18:47:19.1173752Z # logistics\_etl.tests.test\_client
2025-08-18T18:47:19.1174043Z 
2025-08-18T18:47:19.1174434Z <a id="logistics_etl.tests"></a>
2025-08-18T18:47:19.1174732Z 
2025-08-18T18:47:19.1174877Z # logistics\_etl.tests
2025-08-18T18:47:19.1175103Z 
2025-08-18T18:47:19.1175261Z <a id="logistics_etl.flow"></a>
2025-08-18T18:47:19.1175527Z 
2025-08-18T18:47:19.1175658Z # logistics\_etl.flow
2025-08-18T18:47:19.1175874Z 
2025-08-18T18:47:19.1176033Z <a id="logistics_etl.client"></a>
2025-08-18T18:47:19.1176318Z 
2025-08-18T18:47:19.1176452Z # logistics\_etl.client
2025-08-18T18:47:19.1176691Z 
2025-08-18T18:47:19.1176835Z <a id="logistics_etl.cron"></a>
2025-08-18T18:47:19.1177096Z 
2025-08-18T18:47:19.1177227Z # logistics\_etl.cron
2025-08-18T18:47:19.1177454Z 
2025-08-18T18:47:19.1177594Z <a id="logistics_etl.db"></a>
2025-08-18T18:47:19.1177850Z 
2025-08-18T18:47:19.1177981Z # logistics\_etl.db
2025-08-18T18:47:19.1178184Z 
2025-08-18T18:47:19.1178343Z <a id="logistics_etl.repository"></a>
2025-08-18T18:47:19.1178659Z 
2025-08-18T18:47:19.1178805Z # logistics\_etl.repository
2025-08-18T18:47:19.1179071Z 
2025-08-18T18:47:19.1179201Z <a id="alert_bot"></a>
2025-08-18T18:47:19.1179427Z 
2025-08-18T18:47:19.1179543Z # alert\_bot
2025-08-18T18:47:19.1179902Z 
2025-08-18T18:47:19.1180079Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T18:47:19.1180412Z 
2025-08-18T18:47:19.1180563Z # alert\_bot.tests.test\_smoke
2025-08-18T18:47:19.1180819Z 
2025-08-18T18:47:19.1180968Z <a id="alert_bot.tests"></a>
2025-08-18T18:47:19.1181222Z 
2025-08-18T18:47:19.1181343Z # alert\_bot.tests
2025-08-18T18:47:19.1181537Z 
2025-08-18T18:47:19.1181692Z <a id="alert_bot.alert_bot"></a>
2025-08-18T18:47:19.1181958Z 
2025-08-18T18:47:19.1182092Z # alert\_bot.alert\_bot
2025-08-18T18:47:19.1182321Z 
2025-08-18T18:47:19.1182459Z <a id="alert_bot.rules"></a>
2025-08-18T18:47:19.1182712Z 
2025-08-18T18:47:19.1182834Z # alert\_bot.rules
2025-08-18T18:47:19.1183038Z 
2025-08-18T18:47:19.1183159Z <a id="common"></a>
2025-08-18T18:47:19.1183354Z 
2025-08-18T18:47:19.1183477Z # common
2025-08-18T18:47:19.1183636Z 
2025-08-18T18:47:19.1183784Z <a id="common.dsn"></a>
2025-08-18T18:47:19.1184013Z 
2025-08-18T18:47:19.1184133Z # common.dsn
2025-08-18T18:47:19.1184316Z 
2025-08-18T18:47:19.1184475Z <a id="common.dsn.build_dsn"></a>
2025-08-18T18:47:19.1184771Z 
2025-08-18T18:47:19.1184892Z #### build\_dsn
2025-08-18T18:47:19.1185079Z 
2025-08-18T18:47:19.1185204Z ```python
2025-08-18T18:47:19.1206605Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:47:19.1207084Z ```
2025-08-18T18:47:19.1207239Z 
2025-08-18T18:47:19.1207445Z Return a Postgres DSN, validating required variables.
2025-08-18T18:47:19.1207801Z 
2025-08-18T18:47:19.1208106Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T18:47:19.1208822Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T18:47:19.1209495Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T18:47:19.1210174Z missing.
2025-08-18T18:47:19.1210310Z 
2025-08-18T18:47:19.1210448Z <a id="common.models_vendor"></a>
2025-08-18T18:47:19.1210929Z 
2025-08-18T18:47:19.1211050Z # common.models\_vendor
2025-08-18T18:47:19.1211248Z 
2025-08-18T18:47:19.1211388Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T18:47:19.1211654Z 
2025-08-18T18:47:19.1211764Z ## Vendor Objects
2025-08-18T18:47:19.1211926Z 
2025-08-18T18:47:19.1212023Z ```python
2025-08-18T18:47:19.1212286Z class Vendor(Base)
2025-08-18T18:47:19.1212540Z ```
2025-08-18T18:47:19.1212678Z 
2025-08-18T18:47:19.1212801Z Vendor of inventory items.
2025-08-18T18:47:19.1213011Z 
2025-08-18T18:47:19.1213178Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T18:47:19.1213472Z 
2025-08-18T18:47:19.1213583Z ## VendorPrice Objects
2025-08-18T18:47:19.1213762Z 
2025-08-18T18:47:19.1213863Z ```python
2025-08-18T18:47:19.1214125Z class VendorPrice(Base)
2025-08-18T18:47:19.1214403Z ```
2025-08-18T18:47:19.1214528Z 
2025-08-18T18:47:19.1214683Z Association table linking vendors to pricing.
2025-08-18T18:47:19.1214978Z 
2025-08-18T18:47:19.1215276Z <a id="common.db_url"></a>
2025-08-18T18:47:19.1215485Z 
2025-08-18T18:47:19.1215586Z # common.db\_url
2025-08-18T18:47:19.1215761Z 
2025-08-18T18:47:19.1215890Z <a id="common.db_url.build_url"></a>
2025-08-18T18:47:19.1216135Z 
2025-08-18T18:47:19.1216251Z #### build\_url
2025-08-18T18:47:19.1216411Z 
2025-08-18T18:47:19.1216506Z ```python
2025-08-18T18:47:19.1216784Z def build_url(async_: bool = True) -> str
2025-08-18T18:47:19.1217152Z ```
2025-08-18T18:47:19.1217285Z 
2025-08-18T18:47:19.1217437Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:47:19.1217713Z 
2025-08-18T18:47:19.1217833Z <a id="common.keepa"></a>
2025-08-18T18:47:19.1218040Z 
2025-08-18T18:47:19.1218144Z # common.keepa
2025-08-18T18:47:19.1218300Z 
2025-08-18T18:47:19.1218423Z <a id="common.llm"></a>
2025-08-18T18:47:19.1218626Z 
2025-08-18T18:47:19.1218730Z # common.llm
2025-08-18T18:47:19.1218888Z 
2025-08-18T18:47:19.1219022Z <a id="common.settings"></a>
2025-08-18T18:47:19.1219244Z 
2025-08-18T18:47:19.1219352Z # common.settings
2025-08-18T18:47:19.1219540Z 
2025-08-18T18:47:19.1219811Z <a id="common.db"></a>
2025-08-18T18:47:19.1219999Z 
2025-08-18T18:47:19.1220103Z # common.db
2025-08-18T18:47:19.1220249Z 
2025-08-18T18:47:19.1220397Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T18:47:19.1220674Z 
2025-08-18T18:47:19.1220801Z #### build\_sqlalchemy\_url
2025-08-18T18:47:19.1221008Z 
2025-08-18T18:47:19.1221108Z ```python
2025-08-18T18:47:19.1221383Z def build_sqlalchemy_url() -> str
2025-08-18T18:47:19.1221702Z ```
2025-08-18T18:47:19.1221840Z 
2025-08-18T18:47:19.1221986Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:47:19.1222261Z 
2025-08-18T18:47:19.1222409Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T18:47:19.1222672Z 
2025-08-18T18:47:19.1222788Z #### build\_asyncpg\_dsn
2025-08-18T18:47:19.1222998Z 
2025-08-18T18:47:19.1223094Z ```python
2025-08-18T18:47:19.1223354Z def build_asyncpg_dsn() -> str
2025-08-18T18:47:19.1223665Z ```
2025-08-18T18:47:19.1223792Z 
2025-08-18T18:47:19.1223991Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:47:19.1224337Z 
2025-08-18T18:47:19.1224471Z <a id="common.db.refresh_mvs"></a>
2025-08-18T18:47:19.1224710Z 
2025-08-18T18:47:19.1224817Z #### refresh\_mvs
2025-08-18T18:47:19.1224980Z 
2025-08-18T18:47:19.1225078Z ```python
2025-08-18T18:47:19.1225385Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:47:19.1225773Z ```
2025-08-18T18:47:19.1225907Z 
2025-08-18T18:47:19.1226115Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:47:19.1226457Z 
2025-08-18T18:47:19.1226589Z <a id="common.config"></a>
2025-08-18T18:47:19.1226802Z 
2025-08-18T18:47:19.1226902Z # common.config
2025-08-18T18:47:19.1227060Z 
2025-08-18T18:47:19.1227185Z <a id="common.base"></a>
2025-08-18T18:47:19.1227377Z 
2025-08-18T18:47:19.1227477Z # common.base
2025-08-18T18:47:19.1227641Z 
2025-08-18T18:47:19.1227760Z <a id="common.base.Base"></a>
2025-08-18T18:47:19.1227978Z 
2025-08-18T18:47:19.1228079Z ## Base Objects
2025-08-18T18:47:19.1228482Z 
2025-08-18T18:47:19.1228584Z ```python
2025-08-18T18:47:19.1228844Z class Base(DeclarativeBase)
2025-08-18T18:47:19.1229147Z ```
2025-08-18T18:47:19.1229279Z 
2025-08-18T18:47:19.1229416Z Base class for SQLAlchemy models.
2025-08-18T18:47:19.1229809Z 
2025-08-18T18:47:19.1229924Z <a id="repricer"></a>
2025-08-18T18:47:19.1230116Z 
2025-08-18T18:47:19.1230212Z # repricer
2025-08-18T18:47:19.1230357Z 
2025-08-18T18:47:19.1230491Z <a id="repricer.app.schemas"></a>
2025-08-18T18:47:19.1230749Z 
2025-08-18T18:47:19.1230868Z # repricer.app.schemas
2025-08-18T18:47:19.1231057Z 
2025-08-18T18:47:19.1231193Z <a id="repricer.app.deps"></a>
2025-08-18T18:47:19.1231410Z 
2025-08-18T18:47:19.1231526Z # repricer.app.deps
2025-08-18T18:47:19.1231708Z 
2025-08-18T18:47:19.1231879Z Placeholder module for Keepa / SP-API clients.
2025-08-18T18:47:19.1232165Z 
2025-08-18T18:47:19.1232300Z <a id="repricer.app.logic"></a>
2025-08-18T18:47:19.1232528Z 
2025-08-18T18:47:19.1232639Z # repricer.app.logic
2025-08-18T18:47:19.1233030Z 
2025-08-18T18:47:19.1233196Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T18:47:19.1233473Z 
2025-08-18T18:47:19.1233574Z #### MIN\_MARGIN
2025-08-18T18:47:19.1233737Z 
2025-08-18T18:47:19.1233833Z 15 % ROI
2025-08-18T18:47:19.1233973Z 
2025-08-18T18:47:19.1234130Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T18:47:19.1234429Z 
2025-08-18T18:47:19.1234540Z #### compute\_price
2025-08-18T18:47:19.1234708Z 
2025-08-18T18:47:19.1234810Z ```python
2025-08-18T18:47:19.1235192Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T18:47:19.1235663Z ```
2025-08-18T18:47:19.1235795Z 
2025-08-18T18:47:19.1235967Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T18:47:19.1236423Z Replace with real competitive logic later.
2025-08-18T18:47:19.1236700Z 
2025-08-18T18:47:19.1236832Z <a id="repricer.app.main"></a>
2025-08-18T18:47:19.1237062Z 
2025-08-18T18:47:19.1237169Z # repricer.app.main
2025-08-18T18:47:19.1237388Z 
2025-08-18T18:47:19.1237519Z <a id="repricer.app"></a>
2025-08-18T18:47:19.1237725Z 
2025-08-18T18:47:19.1237825Z # repricer.app
2025-08-18T18:47:19.1237993Z 
2025-08-18T18:47:19.1238136Z <a id="repricer.tests.test_imports"></a>
2025-08-18T18:47:19.1238397Z 
2025-08-18T18:47:19.1238529Z # repricer.tests.test\_imports
2025-08-18T18:47:19.1238761Z 
2025-08-18T18:47:19.1238897Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T18:47:19.1239149Z 
2025-08-18T18:47:19.1239284Z # repricer.tests.test\_smoke
2025-08-18T18:47:19.1239504Z 
2025-08-18T18:47:19.1239778Z <a id="repricer.tests"></a>
2025-08-18T18:47:19.1240004Z 
2025-08-18T18:47:19.1240118Z # repricer.tests
2025-08-18T18:47:19.1240290Z 
2025-08-18T18:47:19.1240388Z <a id="db"></a>
2025-08-18T18:47:19.1240551Z 
2025-08-18T18:47:19.1240646Z # db
2025-08-18T18:47:19.1240773Z 
2025-08-18T18:47:19.1240893Z <a id="db.utils.views"></a>
2025-08-18T18:47:19.1241098Z 
2025-08-18T18:47:19.1241206Z # db.utils.views
2025-08-18T18:47:19.1241363Z 
2025-08-18T18:47:19.1241517Z <a id="db.utils.views.replace_view"></a>
2025-08-18T18:47:19.1241802Z 
2025-08-18T18:47:19.1241910Z #### replace\_view
2025-08-18T18:47:19.1242087Z 
2025-08-18T18:47:19.1242189Z ```python
2025-08-18T18:47:19.1242495Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T18:47:19.1242893Z ```
2025-08-18T18:47:19.1243024Z 
2025-08-18T18:47:19.1243172Z Drop and recreate a SQL view atomically.
2025-08-18T18:47:19.1243437Z 
2025-08-18T18:47:19.1243549Z <a id="db.utils"></a>
2025-08-18T18:47:19.1243725Z 
2025-08-18T18:47:19.1243829Z # db.utils
2025-08-18T18:47:19.1243966Z 
2025-08-18T18:47:19.1244091Z <a id="price_importer"></a>
2025-08-18T18:47:19.1244299Z 
2025-08-18T18:47:19.1244400Z # price\_importer
2025-08-18T18:47:19.1244564Z 
2025-08-18T18:47:19.1244738Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T18:47:19.1245031Z 
2025-08-18T18:47:19.1245179Z # price\_importer.services\_common.dsn
2025-08-18T18:47:19.1245441Z 
2025-08-18T18:47:19.1245649Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T18:47:19.1246162Z 
2025-08-18T18:47:19.1246263Z #### build\_dsn
2025-08-18T18:47:19.1246430Z 
2025-08-18T18:47:19.1246523Z ```python
2025-08-18T18:47:19.1246780Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:47:19.1247126Z ```
2025-08-18T18:47:19.1247254Z 
2025-08-18T18:47:19.1247363Z Return safe DSN.
2025-08-18T18:47:19.1247521Z 
2025-08-18T18:47:19.1247995Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T18:47:19.1248326Z 
2025-08-18T18:47:19.1248523Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T18:47:19.1248853Z 
2025-08-18T18:47:19.1249031Z # price\_importer.services\_common.models\_vendor
2025-08-18T18:47:19.1249354Z 
2025-08-18T18:47:19.1249529Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T18:47:19.1250043Z 
2025-08-18T18:47:19.1250204Z # price\_importer.services\_common.db\_url
2025-08-18T18:47:19.1250480Z 
2025-08-18T18:47:19.1250699Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T18:47:19.1251078Z 
2025-08-18T18:47:19.1251376Z #### build\_url
2025-08-18T18:47:19.1251547Z 
2025-08-18T18:47:19.1251650Z ```python
2025-08-18T18:47:19.1251946Z def build_url(async_: bool = True) -> str
2025-08-18T18:47:19.1252349Z ```
2025-08-18T18:47:19.1252492Z 
2025-08-18T18:47:19.1252652Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:47:19.1252953Z 
2025-08-18T18:47:19.1253151Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T18:47:19.1253470Z 
2025-08-18T18:47:19.1253630Z # price\_importer.services\_common.keepa
2025-08-18T18:47:19.1253928Z 
2025-08-18T18:47:19.1254104Z <a id="price_importer.services_common.llm"></a>
2025-08-18T18:47:19.1254407Z 
2025-08-18T18:47:19.1254562Z # price\_importer.services\_common.llm
2025-08-18T18:47:19.1254842Z 
2025-08-18T18:47:19.1255031Z <a id="price_importer.services_common.settings"></a>
2025-08-18T18:47:19.1255358Z 
2025-08-18T18:47:19.1255525Z # price\_importer.services\_common.settings
2025-08-18T18:47:19.1255813Z 
2025-08-18T18:47:19.1255978Z <a id="price_importer.services_common.db"></a>
2025-08-18T18:47:19.1256308Z 
2025-08-18T18:47:19.1256454Z # price\_importer.services\_common.db
2025-08-18T18:47:19.1256731Z 
2025-08-18T18:47:19.1256990Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T18:47:19.1257384Z 
2025-08-18T18:47:19.1257508Z #### build\_sqlalchemy\_url
2025-08-18T18:47:19.1257725Z 
2025-08-18T18:47:19.1257833Z ```python
2025-08-18T18:47:19.1258160Z def build_sqlalchemy_url() -> str
2025-08-18T18:47:19.1258491Z ```
2025-08-18T18:47:19.1258636Z 
2025-08-18T18:47:19.1258791Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:47:19.1259079Z 
2025-08-18T18:47:19.1259328Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T18:47:19.1259868Z 
2025-08-18T18:47:19.1259993Z #### build\_asyncpg\_dsn
2025-08-18T18:47:19.1260194Z 
2025-08-18T18:47:19.1260306Z ```python
2025-08-18T18:47:19.1260576Z def build_asyncpg_dsn() -> str
2025-08-18T18:47:19.1260900Z ```
2025-08-18T18:47:19.1261038Z 
2025-08-18T18:47:19.1261257Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:47:19.1261630Z 
2025-08-18T18:47:19.1261842Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T18:47:19.1262190Z 
2025-08-18T18:47:19.1262307Z #### refresh\_mvs
2025-08-18T18:47:19.1262482Z 
2025-08-18T18:47:19.1262585Z ```python
2025-08-18T18:47:19.1262910Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:47:19.1263314Z ```
2025-08-18T18:47:19.1263457Z 
2025-08-18T18:47:19.1263680Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:47:19.1264041Z 
2025-08-18T18:47:19.1264209Z <a id="price_importer.services_common"></a>
2025-08-18T18:47:19.1264496Z 
2025-08-18T18:47:19.1264635Z # price\_importer.services\_common
2025-08-18T18:47:19.1264889Z 
2025-08-18T18:47:19.1265070Z <a id="price_importer.services_common.base"></a>
2025-08-18T18:47:19.1265379Z 
2025-08-18T18:47:19.1265532Z # price\_importer.services\_common.base
2025-08-18T18:47:19.1265811Z 
2025-08-18T18:47:19.1265959Z <a id="price_importer.normaliser"></a>
2025-08-18T18:47:19.1266419Z 
2025-08-18T18:47:19.1266563Z # price\_importer.normaliser
2025-08-18T18:47:19.1266794Z 
2025-08-18T18:47:19.1266965Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T18:47:19.1267281Z 
2025-08-18T18:47:19.1267436Z # price\_importer.common.models\_vendor
2025-08-18T18:47:19.1267706Z 
2025-08-18T18:47:19.1267854Z <a id="price_importer.common.db_url"></a>
2025-08-18T18:47:19.1268139Z 
2025-08-18T18:47:19.1268283Z # price\_importer.common.db\_url
2025-08-18T18:47:19.1268525Z 
2025-08-18T18:47:19.1268705Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T18:47:19.1269016Z 
2025-08-18T18:47:19.1269122Z #### make\_dsn
2025-08-18T18:47:19.1269286Z 
2025-08-18T18:47:19.1269398Z ```python
2025-08-18T18:47:19.1269866Z def make_dsn(async_: bool = False) -> str
2025-08-18T18:47:19.1270249Z ```
2025-08-18T18:47:19.1270381Z 
2025-08-18T18:47:19.1270574Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T18:47:19.1270911Z 
2025-08-18T18:47:19.1271277Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T18:47:19.1271605Z 
2025-08-18T18:47:19.1271718Z #### build\_url
2025-08-18T18:47:19.1271883Z 
2025-08-18T18:47:19.1271988Z ```python
2025-08-18T18:47:19.1272297Z def build_url(async_: bool = False) -> str
2025-08-18T18:47:19.1272670Z ```
2025-08-18T18:47:19.1272817Z 
2025-08-18T18:47:19.1273019Z Return Postgres DSN built from environment variables.
2025-08-18T18:47:19.1273349Z 
2025-08-18T18:47:19.1273494Z <a id="price_importer.common"></a>
2025-08-18T18:47:19.1273767Z 
2025-08-18T18:47:19.1273898Z # price\_importer.common
2025-08-18T18:47:19.1274114Z 
2025-08-18T18:47:19.1274270Z <a id="price_importer.common.base"></a>
2025-08-18T18:47:19.1274548Z 
2025-08-18T18:47:19.1274688Z # price\_importer.common.base
2025-08-18T18:47:19.1274921Z 
2025-08-18T18:47:19.1275081Z <a id="price_importer.tests.conftest"></a>
2025-08-18T18:47:19.1275381Z 
2025-08-18T18:47:19.1275525Z # price\_importer.tests.conftest
2025-08-18T18:47:19.1275783Z 
2025-08-18T18:47:19.1275958Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T18:47:19.1276256Z 
2025-08-18T18:47:19.1276413Z # price\_importer.tests.test\_reader
2025-08-18T18:47:19.1276689Z 
2025-08-18T18:47:19.1276866Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T18:47:19.1277183Z 
2025-08-18T18:47:19.1277333Z # price\_importer.tests.test\_imports
2025-08-18T18:47:19.1277611Z 
2025-08-18T18:47:19.1277760Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T18:47:19.1278037Z 
2025-08-18T18:47:19.1278170Z # price\_importer.tests.test\_smoke
2025-08-18T18:47:19.1278421Z 
2025-08-18T18:47:19.1278602Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T18:47:19.1278930Z 
2025-08-18T18:47:19.1279088Z # price\_importer.tests.test\_normaliser
2025-08-18T18:47:19.1279397Z 
2025-08-18T18:47:19.1279546Z <a id="price_importer.tests"></a>
2025-08-18T18:47:19.1279961Z 
2025-08-18T18:47:19.1280096Z # price\_importer.tests
2025-08-18T18:47:19.1280303Z 
2025-08-18T18:47:19.1280458Z <a id="price_importer.reader"></a>
2025-08-18T18:47:19.1280726Z 
2025-08-18T18:47:19.1280864Z # price\_importer.reader
2025-08-18T18:47:19.1281076Z 
2025-08-18T18:47:19.1281230Z <a id="price_importer.repository"></a>
2025-08-18T18:47:19.1281509Z 
2025-08-18T18:47:19.1281647Z # price\_importer.repository
2025-08-18T18:47:19.1281881Z 
2025-08-18T18:47:19.1282031Z <a id="price_importer.import"></a>
2025-08-18T18:47:19.1282297Z 
2025-08-18T18:47:19.1282427Z # price\_importer.import
2025-08-18T18:47:19.1282641Z 
2025-08-18T18:47:19.1282760Z <a id="fees_h10"></a>
2025-08-18T18:47:19.1282997Z 
2025-08-18T18:47:19.1283106Z # fees\_h10
2025-08-18T18:47:19.1283263Z 
2025-08-18T18:47:19.1283385Z <a id="fees_h10.worker"></a>
2025-08-18T18:47:19.1283600Z 
2025-08-18T18:47:19.1283707Z # fees\_h10.worker
2025-08-18T18:47:19.1283893Z 
2025-08-18T18:47:19.1284056Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T18:47:19.1284349Z 
2025-08-18T18:47:19.1284477Z #### list\_active\_asins
2025-08-18T18:47:19.1284663Z 
2025-08-18T18:47:19.1284958Z ```python
2025-08-18T18:47:19.1285253Z def list_active_asins() -> list[str]
2025-08-18T18:47:19.1285615Z ```
2025-08-18T18:47:19.1285758Z 
2025-08-18T18:47:19.1285946Z Return known ASINs or an empty list if unavailable.
2025-08-18T18:47:19.1286278Z 
2025-08-18T18:47:19.1286421Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T18:47:19.1286701Z 
2025-08-18T18:47:19.1286832Z # fees\_h10.tests.test\_smoke
2025-08-18T18:47:19.1287068Z 
2025-08-18T18:47:19.1287199Z <a id="fees_h10.tests"></a>
2025-08-18T18:47:19.1287417Z 
2025-08-18T18:47:19.1287530Z # fees\_h10.tests
2025-08-18T18:47:19.1287719Z 
2025-08-18T18:47:19.1287851Z <a id="fees_h10.client"></a>
2025-08-18T18:47:19.1288073Z 
2025-08-18T18:47:19.1288186Z # fees\_h10.client
2025-08-18T18:47:19.1288366Z 
2025-08-18T18:47:19.1288502Z <a id="fees_h10.repository"></a>
2025-08-18T18:47:19.1288742Z 
2025-08-18T18:47:19.1288869Z # fees\_h10.repository
2025-08-18T18:47:19.1289063Z 
2025-08-18T18:47:19.1289178Z <a id="emailer"></a>
2025-08-18T18:47:19.1289554Z 
2025-08-18T18:47:19.1289806Z # emailer
2025-08-18T18:47:19.1289951Z 
2025-08-18T18:47:19.1290108Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T18:47:19.1290407Z 
2025-08-18T18:47:19.1290551Z # emailer.tests.test\_import\_emailer
2025-08-18T18:47:19.1290793Z 
2025-08-18T18:47:19.1290927Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T18:47:19.1291158Z 
2025-08-18T18:47:19.1291275Z # emailer.tests.test\_smoke
2025-08-18T18:47:19.1291473Z 
2025-08-18T18:47:19.1291589Z <a id="emailer.tests"></a>
2025-08-18T18:47:19.1291773Z 
2025-08-18T18:47:19.1291869Z # emailer.tests
2025-08-18T18:47:19.1292026Z 
2025-08-18T18:47:19.1292146Z <a id="emailer.generate_body"></a>
2025-08-18T18:47:19.1292361Z 
2025-08-18T18:47:19.1292477Z # emailer.generate\_body
2025-08-18T18:47:19.1292663Z 
2025-08-18T18:47:19.1292768Z <a id="llm_server"></a>
2025-08-18T18:47:19.1292941Z 
2025-08-18T18:47:19.1293039Z # llm\_server
2025-08-18T18:47:19.1293176Z 
2025-08-18T18:47:19.1293287Z <a id="llm_server.app"></a>
2025-08-18T18:47:19.1293498Z 
2025-08-18T18:47:19.1293597Z # llm\_server.app
2025-08-18T18:47:19.1293748Z 
