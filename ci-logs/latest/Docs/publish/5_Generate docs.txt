2025-08-16T20:39:09.8691784Z ##[group]Run pydoc-markdown
2025-08-16T20:39:09.8692102Z [36;1mpydoc-markdown[0m
2025-08-16T20:39:09.8733060Z shell: /usr/bin/bash -e {0}
2025-08-16T20:39:09.8733309Z env:
2025-08-16T20:39:09.8733553Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T20:39:09.8733960Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T20:39:09.8734340Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T20:39:09.8734683Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T20:39:09.8735257Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T20:39:09.8735607Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T20:39:09.8735898Z ##[endgroup]
2025-08-16T20:39:10.2640997Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T20:39:10.2641957Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T20:39:10.2642356Z In "pydoc-markdown.yml"
2025-08-16T20:39:10.2642705Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T20:39:10.2643275Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T20:39:10.2643899Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T20:39:10.2644321Z 
2025-08-16T20:39:10.4705566Z <a id="__init__"></a>
2025-08-16T20:39:10.4706094Z 
2025-08-16T20:39:10.4706238Z # \_\_init\_\_
2025-08-16T20:39:10.4706491Z 
2025-08-16T20:39:10.4706644Z <a id="api"></a>
2025-08-16T20:39:10.4706876Z 
2025-08-16T20:39:10.4706970Z # api
2025-08-16T20:39:10.4707093Z 
2025-08-16T20:39:10.4707212Z <a id="api.tests.test_llm"></a>
2025-08-16T20:39:10.4707428Z 
2025-08-16T20:39:10.4707537Z # api.tests.test\_llm
2025-08-16T20:39:10.4707706Z 
2025-08-16T20:39:10.4707828Z <a id="api.tests.test_imports"></a>
2025-08-16T20:39:10.4708058Z 
2025-08-16T20:39:10.4708165Z # api.tests.test\_imports
2025-08-16T20:39:10.4708348Z 
2025-08-16T20:39:10.4708477Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T20:39:10.4708707Z 
2025-08-16T20:39:10.4708819Z # api.tests.test\_entrypoint
2025-08-16T20:39:10.4709056Z 
2025-08-16T20:39:10.4709169Z <a id="api.tests.test_health"></a>
2025-08-16T20:39:10.4709378Z 
2025-08-16T20:39:10.4709480Z # api.tests.test\_health
2025-08-16T20:39:10.4709657Z 
2025-08-16T20:39:10.4709770Z <a id="api.migrations.env"></a>
2025-08-16T20:39:10.4709967Z 
2025-08-16T20:39:10.4710073Z # api.migrations.env
2025-08-16T20:39:10.4710231Z 
2025-08-16T20:39:10.4710394Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T20:39:10.4710681Z 
2025-08-16T20:39:10.4710824Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T20:39:10.4711076Z 
2025-08-16T20:39:10.4711222Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T20:39:10.4711493Z 
2025-08-16T20:39:10.4711620Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T20:39:10.4711854Z 
2025-08-16T20:39:10.4712088Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T20:39:10.4712420Z 
2025-08-16T20:39:10.4712602Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T20:39:10.4713227Z 
2025-08-16T20:39:10.4713393Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T20:39:10.4713671Z 
2025-08-16T20:39:10.4713818Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T20:39:10.4714072Z 
2025-08-16T20:39:10.4714228Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T20:39:10.4714500Z 
2025-08-16T20:39:10.4714643Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T20:39:10.4715104Z 
2025-08-16T20:39:10.4715281Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T20:39:10.4715599Z 
2025-08-16T20:39:10.4715758Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T20:39:10.4716047Z 
2025-08-16T20:39:10.4716196Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T20:39:10.4716431Z 
2025-08-16T20:39:10.4716557Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T20:39:10.4716787Z 
2025-08-16T20:39:10.4716934Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T20:39:10.4717403Z 
2025-08-16T20:39:10.4717527Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T20:39:10.4717755Z 
2025-08-16T20:39:10.4717899Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T20:39:10.4718141Z 
2025-08-16T20:39:10.4718276Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T20:39:10.4718505Z 
2025-08-16T20:39:10.4718632Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T20:39:10.4718866Z 
2025-08-16T20:39:10.4718977Z # api.migrations.versions.0001\_baseline
2025-08-16T20:39:10.4719180Z 
2025-08-16T20:39:10.4719283Z <a id="api.migrations.versions"></a>
2025-08-16T20:39:10.4719482Z 
2025-08-16T20:39:10.4719578Z # api.migrations.versions
2025-08-16T20:39:10.4719733Z 
2025-08-16T20:39:10.4719829Z <a id="api.migrations"></a>
2025-08-16T20:39:10.4719990Z 
2025-08-16T20:39:10.4720073Z # api.migrations
2025-08-16T20:39:10.4720202Z 
2025-08-16T20:39:10.4720286Z <a id="api.db"></a>
2025-08-16T20:39:10.4720413Z 
2025-08-16T20:39:10.4720498Z # api.db
2025-08-16T20:39:10.4720609Z 
2025-08-16T20:39:10.4720702Z <a id="api.routes.stats"></a>
2025-08-16T20:39:10.4720868Z 
2025-08-16T20:39:10.4720958Z # api.routes.stats
2025-08-16T20:39:10.4721084Z 
2025-08-16T20:39:10.4721185Z <a id="api.routes.stats.kpi"></a>
2025-08-16T20:39:10.4721366Z 
2025-08-16T20:39:10.4721448Z #### kpi
2025-08-16T20:39:10.4721552Z 
2025-08-16T20:39:10.4721627Z ```python
2025-08-16T20:39:10.4721850Z @router.get("/stats/kpi")
2025-08-16T20:39:10.4722142Z def kpi() -> List[Dict[str, int]]
2025-08-16T20:39:10.4722394Z ```
2025-08-16T20:39:10.4722494Z 
2025-08-16T20:39:10.4722593Z Return KPI metrics (mock).
2025-08-16T20:39:10.4722749Z 
2025-08-16T20:39:10.4722865Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T20:39:10.4723085Z 
2025-08-16T20:39:10.4723172Z #### roi\_by\_vendor
2025-08-16T20:39:10.4723305Z 
2025-08-16T20:39:10.4723381Z ```python
2025-08-16T20:39:10.4723591Z @router.get("/stats/roi_by_vendor")
2025-08-16T20:39:10.4723885Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T20:39:10.4724173Z ```
2025-08-16T20:39:10.4724271Z 
2025-08-16T20:39:10.4724370Z Return ROI percent by vendor.
2025-08-16T20:39:10.4724539Z 
2025-08-16T20:39:10.4724645Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T20:39:10.4724963Z 
2025-08-16T20:39:10.4725047Z #### roi\_trend
2025-08-16T20:39:10.4725167Z 
2025-08-16T20:39:10.4725241Z ```python
2025-08-16T20:39:10.4725451Z @router.get("/stats/roi_trend")
2025-08-16T20:39:10.4725733Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T20:39:10.4726018Z ```
2025-08-16T20:39:10.4726115Z 
2025-08-16T20:39:10.4726208Z Return 30-day ROI trend.
2025-08-16T20:39:10.4726357Z 
2025-08-16T20:39:10.4726450Z <a id="api.routes.roi"></a>
2025-08-16T20:39:10.4726601Z 
2025-08-16T20:39:10.4726674Z # api.routes.roi
2025-08-16T20:39:10.4726805Z 
2025-08-16T20:39:10.4726897Z <a id="api.routes.health"></a>
2025-08-16T20:39:10.4727142Z 
2025-08-16T20:39:10.4727215Z # api.routes.health
2025-08-16T20:39:10.4727329Z 
2025-08-16T20:39:10.4727433Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T20:39:10.4727737Z 
2025-08-16T20:39:10.4727803Z #### MAX\_SKEW
2025-08-16T20:39:10.4727909Z 
2025-08-16T20:39:10.4727972Z seconds
2025-08-16T20:39:10.4728059Z 
2025-08-16T20:39:10.4728155Z <a id="api.routes.health.health"></a>
2025-08-16T20:39:10.4728317Z 
2025-08-16T20:39:10.4728380Z #### health
2025-08-16T20:39:10.4728469Z 
2025-08-16T20:39:10.4728540Z ```python
2025-08-16T20:39:10.4728728Z @router.get("/health", include_in_schema=False)
2025-08-16T20:39:10.4729117Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T20:39:10.4729468Z ```
2025-08-16T20:39:10.4729559Z 
2025-08-16T20:39:10.4729674Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T20:39:10.4729871Z 
2025-08-16T20:39:10.4729965Z <a id="api.routes.repository"></a>
2025-08-16T20:39:10.4730122Z 
2025-08-16T20:39:10.4730200Z # api.routes.repository
2025-08-16T20:39:10.4730328Z 
2025-08-16T20:39:10.4730408Z <a id="api.routes"></a>
2025-08-16T20:39:10.4730751Z 
2025-08-16T20:39:10.4730815Z # api.routes
2025-08-16T20:39:10.4730920Z 
2025-08-16T20:39:10.4730998Z <a id="api.models.fee"></a>
2025-08-16T20:39:10.4731132Z 
2025-08-16T20:39:10.4731200Z # api.models.fee
2025-08-16T20:39:10.4731310Z 
2025-08-16T20:39:10.4731382Z <a id="api.models"></a>
2025-08-16T20:39:10.4731501Z 
2025-08-16T20:39:10.4731571Z # api.models
2025-08-16T20:39:10.4731664Z 
2025-08-16T20:39:10.4731745Z <a id="api.roi_repository"></a>
2025-08-16T20:39:10.4731890Z 
2025-08-16T20:39:10.4731963Z # api.roi\_repository
2025-08-16T20:39:10.4732079Z 
2025-08-16T20:39:10.4732149Z <a id="api.main"></a>
2025-08-16T20:39:10.4732265Z 
2025-08-16T20:39:10.4732328Z # api.main
2025-08-16T20:39:10.4732419Z 
2025-08-16T20:39:10.4732500Z <a id="api.main.ready"></a>
2025-08-16T20:39:10.4732631Z 
2025-08-16T20:39:10.4732693Z #### ready
2025-08-16T20:39:10.4732785Z 
2025-08-16T20:39:10.4732847Z ```python
2025-08-16T20:39:10.4733100Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T20:39:10.4733542Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T20:39:10.4733888Z                                                                       str]
2025-08-16T20:39:10.4734127Z ```
2025-08-16T20:39:10.4734209Z 
2025-08-16T20:39:10.4734314Z Return 200 only when migrations are at head.
2025-08-16T20:39:10.4734489Z 
2025-08-16T20:39:10.4734562Z <a id="api.config"></a>
2025-08-16T20:39:10.4734687Z 
2025-08-16T20:39:10.4734750Z # api.config
2025-08-16T20:39:10.4734967Z 
2025-08-16T20:39:10.4735033Z <a id="etl"></a>
2025-08-16T20:39:10.4735142Z 
2025-08-16T20:39:10.4735202Z # etl
2025-08-16T20:39:10.4735289Z 
2025-08-16T20:39:10.4735375Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T20:39:10.4735524Z 
2025-08-16T20:39:10.4735598Z # etl.fba\_fee\_ingestor
2025-08-16T20:39:10.4735721Z 
2025-08-16T20:39:10.4735808Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T20:39:10.4735960Z 
2025-08-16T20:39:10.4736033Z # etl.sp\_fees\_ingestor
2025-08-16T20:39:10.4736168Z 
2025-08-16T20:39:10.4736248Z <a id="etl.keepa_ingestor"></a>
2025-08-16T20:39:10.4736386Z 
2025-08-16T20:39:10.4736464Z # etl.keepa\_ingestor
2025-08-16T20:39:10.4736579Z 
2025-08-16T20:39:10.4736646Z <a id="etl.db"></a>
2025-08-16T20:39:10.4736752Z 
2025-08-16T20:39:10.4736821Z # etl.db
2025-08-16T20:39:10.4736908Z 
2025-08-16T20:39:10.4737014Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T20:39:10.4737205Z 
2025-08-16T20:39:10.4737296Z # etl.dialects.amazon\_reimbursements
2025-08-16T20:39:10.4737458Z 
2025-08-16T20:39:10.4737548Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T20:39:10.4737727Z 
2025-08-16T20:39:10.4737809Z # etl.dialects.amazon\_returns
2025-08-16T20:39:10.4737950Z 
2025-08-16T20:39:10.4738034Z <a id="etl.dialects"></a>
2025-08-16T20:39:10.4738159Z 
2025-08-16T20:39:10.4738224Z # etl.dialects
2025-08-16T20:39:10.4738330Z 
2025-08-16T20:39:10.4738397Z <a id="ingest"></a>
2025-08-16T20:39:10.4738507Z 
2025-08-16T20:39:10.4738569Z # ingest
2025-08-16T20:39:10.4738664Z 
2025-08-16T20:39:10.4738870Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T20:39:10.4739027Z 
2025-08-16T20:39:10.4739112Z # ingest.tests.test\_smoke
2025-08-16T20:39:10.4739242Z 
2025-08-16T20:39:10.4739316Z <a id="ingest.tests"></a>
2025-08-16T20:39:10.4739446Z 
2025-08-16T20:39:10.4739512Z # ingest.tests
2025-08-16T20:39:10.4739612Z 
2025-08-16T20:39:10.4739694Z <a id="ingest.upload_router"></a>
2025-08-16T20:39:10.4739848Z 
2025-08-16T20:39:10.4739922Z # ingest.upload\_router
2025-08-16T20:39:10.4740042Z 
2025-08-16T20:39:10.4740127Z <a id="ingest.email_watcher"></a>
2025-08-16T20:39:10.4740272Z 
2025-08-16T20:39:10.4740345Z # ingest.email\_watcher
2025-08-16T20:39:10.4740462Z 
2025-08-16T20:39:10.4740555Z <a id="ingest.email_watcher.main"></a>
2025-08-16T20:39:10.4740714Z 
2025-08-16T20:39:10.4740778Z #### main
2025-08-16T20:39:10.4740874Z 
2025-08-16T20:39:10.4740938Z ```python
2025-08-16T20:39:10.4741105Z def main() -> dict[str, str]
2025-08-16T20:39:10.4741302Z ```
2025-08-16T20:39:10.4741385Z 
2025-08-16T20:39:10.4741651Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T20:39:10.4741874Z 
2025-08-16T20:39:10.4742003Z Returns {"status": "success"} when processing completes.
2025-08-16T20:39:10.4742215Z 
2025-08-16T20:39:10.4742298Z <a id="ingest.ingest_router"></a>
2025-08-16T20:39:10.4742445Z 
2025-08-16T20:39:10.4742521Z # ingest.ingest\_router
2025-08-16T20:39:10.4742646Z 
2025-08-16T20:39:10.4742721Z <a id="logistics_etl"></a>
2025-08-16T20:39:10.4742852Z 
2025-08-16T20:39:10.4742924Z # logistics\_etl
2025-08-16T20:39:10.4743027Z 
2025-08-16T20:39:10.4743102Z Daily logistics ETL job.
2025-08-16T20:39:10.4743232Z 
2025-08-16T20:39:10.4743313Z <a id="logistics_etl.__main__"></a>
2025-08-16T20:39:10.4743464Z 
2025-08-16T20:39:10.4743541Z # logistics\_etl.\_\_main\_\_
2025-08-16T20:39:10.4743681Z 
2025-08-16T20:39:10.4743776Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T20:39:10.4743946Z 
2025-08-16T20:39:10.4744032Z # logistics\_etl.tests.conftest
2025-08-16T20:39:10.4744185Z 
2025-08-16T20:39:10.4744287Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T20:39:10.4744481Z 
2025-08-16T20:39:10.4744569Z # logistics\_etl.tests.test\_repository
2025-08-16T20:39:10.4744733Z 
2025-08-16T20:39:10.4744960Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T20:39:10.4745133Z 
2025-08-16T20:39:10.4745215Z # logistics\_etl.tests.test\_cron
2025-08-16T20:39:10.4745363Z 
2025-08-16T20:39:10.4745464Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T20:39:10.4745646Z 
2025-08-16T20:39:10.4745730Z # logistics\_etl.tests.test\_imports
2025-08-16T20:39:10.4745890Z 
2025-08-16T20:39:10.4745981Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T20:39:10.4746151Z 
2025-08-16T20:39:10.4746238Z # logistics\_etl.tests.test\_smoke
2025-08-16T20:39:10.4746390Z 
2025-08-16T20:39:10.4746481Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T20:39:10.4746653Z 
2025-08-16T20:39:10.4746741Z # logistics\_etl.tests.test\_client
2025-08-16T20:39:10.4746891Z 
2025-08-16T20:39:10.4746980Z <a id="logistics_etl.tests"></a>
2025-08-16T20:39:10.4747129Z 
2025-08-16T20:39:10.4747200Z # logistics\_etl.tests
2025-08-16T20:39:10.4747319Z 
2025-08-16T20:39:10.4747403Z <a id="logistics_etl.flow"></a>
2025-08-16T20:39:10.4747542Z 
2025-08-16T20:39:10.4747611Z # logistics\_etl.flow
2025-08-16T20:39:10.4747728Z 
2025-08-16T20:39:10.4747814Z <a id="logistics_etl.client"></a>
2025-08-16T20:39:10.4747961Z 
2025-08-16T20:39:10.4748034Z # logistics\_etl.client
2025-08-16T20:39:10.4748162Z 
2025-08-16T20:39:10.4748239Z <a id="logistics_etl.cron"></a>
2025-08-16T20:39:10.4748376Z 
2025-08-16T20:39:10.4748451Z # logistics\_etl.cron
2025-08-16T20:39:10.4748565Z 
2025-08-16T20:39:10.4748643Z <a id="logistics_etl.db"></a>
2025-08-16T20:39:10.4748781Z 
2025-08-16T20:39:10.4748855Z # logistics\_etl.db
2025-08-16T20:39:10.4748963Z 
2025-08-16T20:39:10.4749052Z <a id="logistics_etl.repository"></a>
2025-08-16T20:39:10.4749218Z 
2025-08-16T20:39:10.4749296Z # logistics\_etl.repository
2025-08-16T20:39:10.4749433Z 
2025-08-16T20:39:10.4749624Z <a id="alert_bot"></a>
2025-08-16T20:39:10.4749746Z 
2025-08-16T20:39:10.4749811Z # alert\_bot
2025-08-16T20:39:10.4749906Z 
2025-08-16T20:39:10.4749996Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T20:39:10.4750157Z 
2025-08-16T20:39:10.4750237Z # alert\_bot.tests.test\_smoke
2025-08-16T20:39:10.4750380Z 
2025-08-16T20:39:10.4750458Z <a id="alert_bot.tests"></a>
2025-08-16T20:39:10.4750591Z 
2025-08-16T20:39:10.4750658Z # alert\_bot.tests
2025-08-16T20:39:10.4750772Z 
2025-08-16T20:39:10.4750852Z <a id="alert_bot.alert_bot"></a>
2025-08-16T20:39:10.4750993Z 
2025-08-16T20:39:10.4751072Z # alert\_bot.alert\_bot
2025-08-16T20:39:10.4751190Z 
2025-08-16T20:39:10.4751265Z <a id="alert_bot.rules"></a>
2025-08-16T20:39:10.4751400Z 
2025-08-16T20:39:10.4751467Z # alert\_bot.rules
2025-08-16T20:39:10.4751571Z 
2025-08-16T20:39:10.4751641Z <a id="common"></a>
2025-08-16T20:39:10.4751751Z 
2025-08-16T20:39:10.4751813Z # common
2025-08-16T20:39:10.4751902Z 
2025-08-16T20:39:10.4752101Z <a id="common.dsn"></a>
2025-08-16T20:39:10.4752220Z 
2025-08-16T20:39:10.4752284Z # common.dsn
2025-08-16T20:39:10.4752379Z 
2025-08-16T20:39:10.4752467Z <a id="common.dsn.build_dsn"></a>
2025-08-16T20:39:10.4752614Z 
2025-08-16T20:39:10.4752680Z #### build\_dsn
2025-08-16T20:39:10.4752788Z 
2025-08-16T20:39:10.4752851Z ```python
2025-08-16T20:39:10.4753024Z def build_dsn(sync: bool = True) -> str
2025-08-16T20:39:10.4753247Z ```
2025-08-16T20:39:10.4753330Z 
2025-08-16T20:39:10.4753457Z Return a Postgres DSN, validating required variables.
2025-08-16T20:39:10.4753661Z 
2025-08-16T20:39:10.4753852Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T20:39:10.4754302Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T20:39:10.4754720Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T20:39:10.4755160Z missing.
2025-08-16T20:39:10.4755252Z 
2025-08-16T20:39:10.4755336Z <a id="common.models_vendor"></a>
2025-08-16T20:39:10.4755501Z 
2025-08-16T20:39:10.4755575Z # common.models\_vendor
2025-08-16T20:39:10.4755695Z 
2025-08-16T20:39:10.4755788Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T20:39:10.4755954Z 
2025-08-16T20:39:10.4756020Z ## Vendor Objects
2025-08-16T20:39:10.4756131Z 
2025-08-16T20:39:10.4756195Z ```python
2025-08-16T20:39:10.4756349Z class Vendor(Base)
2025-08-16T20:39:10.4756524Z ```
2025-08-16T20:39:10.4756613Z 
2025-08-16T20:39:10.4756690Z Vendor of inventory items.
2025-08-16T20:39:10.4756823Z 
2025-08-16T20:39:10.4756930Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T20:39:10.4757111Z 
2025-08-16T20:39:10.4757185Z ## VendorPrice Objects
2025-08-16T20:39:10.4757308Z 
2025-08-16T20:39:10.4757369Z ```python
2025-08-16T20:39:10.4757528Z class VendorPrice(Base)
2025-08-16T20:39:10.4757709Z ```
2025-08-16T20:39:10.4757790Z 
2025-08-16T20:39:10.4757889Z Association table linking vendors to pricing.
2025-08-16T20:39:10.4758074Z 
2025-08-16T20:39:10.4758148Z <a id="common.db_url"></a>
2025-08-16T20:39:10.4758289Z 
2025-08-16T20:39:10.4758361Z # common.db\_url
2025-08-16T20:39:10.4758465Z 
2025-08-16T20:39:10.4758548Z <a id="common.db_url.build_url"></a>
2025-08-16T20:39:10.4758708Z 
2025-08-16T20:39:10.4758771Z #### build\_url
2025-08-16T20:39:10.4758871Z 
2025-08-16T20:39:10.4758931Z ```python
2025-08-16T20:39:10.4759109Z def build_url(async_: bool = True) -> str
2025-08-16T20:39:10.4759338Z ```
2025-08-16T20:39:10.4759417Z 
2025-08-16T20:39:10.4759513Z Return Postgres DSN from env or PG_* parts.
2025-08-16T20:39:10.4759687Z 
2025-08-16T20:39:10.4759768Z <a id="common.keepa"></a>
2025-08-16T20:39:10.4759897Z 
2025-08-16T20:39:10.4759964Z # common.keepa
2025-08-16T20:39:10.4760074Z 
2025-08-16T20:39:10.4760145Z <a id="common.llm"></a>
2025-08-16T20:39:10.4760265Z 
2025-08-16T20:39:10.4760330Z # common.llm
2025-08-16T20:39:10.4760431Z 
2025-08-16T20:39:10.4760514Z <a id="common.settings"></a>
2025-08-16T20:39:10.4760650Z 
2025-08-16T20:39:10.4760723Z # common.settings
2025-08-16T20:39:10.4760968Z 
2025-08-16T20:39:10.4761040Z <a id="common.db"></a>
2025-08-16T20:39:10.4761161Z 
2025-08-16T20:39:10.4761228Z # common.db
2025-08-16T20:39:10.4761322Z 
2025-08-16T20:39:10.4761414Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T20:39:10.4761590Z 
2025-08-16T20:39:10.4761667Z #### build\_sqlalchemy\_url
2025-08-16T20:39:10.4761831Z 
2025-08-16T20:39:10.4761896Z ```python
2025-08-16T20:39:10.4762064Z def build_sqlalchemy_url() -> str
2025-08-16T20:39:10.4762281Z ```
2025-08-16T20:39:10.4762362Z 
2025-08-16T20:39:10.4762464Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T20:39:10.4762635Z 
2025-08-16T20:39:10.4762724Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T20:39:10.4762956Z 
2025-08-16T20:39:10.4763099Z #### build\_asyncpg\_dsn
2025-08-16T20:39:10.4763317Z 
2025-08-16T20:39:10.4763427Z ```python
2025-08-16T20:39:10.4763727Z def build_asyncpg_dsn() -> str
2025-08-16T20:39:10.4764040Z ```
2025-08-16T20:39:10.4764134Z 
2025-08-16T20:39:10.4764264Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T20:39:10.4764626Z 
2025-08-16T20:39:10.4764721Z <a id="common.db.refresh_mvs"></a>
2025-08-16T20:39:10.4764994Z 
2025-08-16T20:39:10.4765060Z #### refresh\_mvs
2025-08-16T20:39:10.4765177Z 
2025-08-16T20:39:10.4765240Z ```python
2025-08-16T20:39:10.4765435Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T20:39:10.4765689Z ```
2025-08-16T20:39:10.4765772Z 
2025-08-16T20:39:10.4765910Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T20:39:10.4766133Z 
2025-08-16T20:39:10.4766210Z <a id="common.config"></a>
2025-08-16T20:39:10.4766341Z 
2025-08-16T20:39:10.4766414Z # common.config
2025-08-16T20:39:10.4766517Z 
2025-08-16T20:39:10.4766590Z <a id="common.base"></a>
2025-08-16T20:39:10.4766720Z 
2025-08-16T20:39:10.4766785Z # common.base
2025-08-16T20:39:10.4766884Z 
2025-08-16T20:39:10.4766966Z <a id="common.base.Base"></a>
2025-08-16T20:39:10.4767112Z 
2025-08-16T20:39:10.4767177Z ## Base Objects
2025-08-16T20:39:10.4767275Z 
2025-08-16T20:39:10.4767352Z ```python
2025-08-16T20:39:10.4767517Z class Base(DeclarativeBase)
2025-08-16T20:39:10.4767715Z ```
2025-08-16T20:39:10.4767795Z 
2025-08-16T20:39:10.4767880Z Base class for SQLAlchemy models.
2025-08-16T20:39:10.4768033Z 
2025-08-16T20:39:10.4768105Z <a id="repricer"></a>
2025-08-16T20:39:10.4768222Z 
2025-08-16T20:39:10.4768285Z # repricer
2025-08-16T20:39:10.4768381Z 
2025-08-16T20:39:10.4768468Z <a id="repricer.app.schemas"></a>
2025-08-16T20:39:10.4768633Z 
2025-08-16T20:39:10.4768710Z # repricer.app.schemas
2025-08-16T20:39:10.4768838Z 
2025-08-16T20:39:10.4768923Z <a id="repricer.app.deps"></a>
2025-08-16T20:39:10.4769065Z 
2025-08-16T20:39:10.4769142Z # repricer.app.deps
2025-08-16T20:39:10.4769252Z 
2025-08-16T20:39:10.4769363Z Placeholder module for Keepa / SP-API clients.
2025-08-16T20:39:10.4769550Z 
2025-08-16T20:39:10.4769638Z <a id="repricer.app.logic"></a>
2025-08-16T20:39:10.4769783Z 
2025-08-16T20:39:10.4769860Z # repricer.app.logic
2025-08-16T20:39:10.4769982Z 
2025-08-16T20:39:10.4770086Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T20:39:10.4770262Z 
2025-08-16T20:39:10.4770332Z #### MIN\_MARGIN
2025-08-16T20:39:10.4770436Z 
2025-08-16T20:39:10.4770497Z 15 % ROI
2025-08-16T20:39:10.4770585Z 
2025-08-16T20:39:10.4770693Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T20:39:10.4770876Z 
2025-08-16T20:39:10.4770945Z #### compute\_price
2025-08-16T20:39:10.4771055Z 
2025-08-16T20:39:10.4771118Z ```python
2025-08-16T20:39:10.4771363Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T20:39:10.4771666Z ```
2025-08-16T20:39:10.4771749Z 
2025-08-16T20:39:10.4771861Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T20:39:10.4772140Z Replace with real competitive logic later.
2025-08-16T20:39:10.4772314Z 
2025-08-16T20:39:10.4772402Z <a id="repricer.app.main"></a>
2025-08-16T20:39:10.4772545Z 
2025-08-16T20:39:10.4772615Z # repricer.app.main
2025-08-16T20:39:10.4772731Z 
2025-08-16T20:39:10.4772809Z <a id="repricer.app"></a>
2025-08-16T20:39:10.4773081Z 
2025-08-16T20:39:10.4773159Z # repricer.app
2025-08-16T20:39:10.4773261Z 
2025-08-16T20:39:10.4773352Z <a id="repricer.tests.test_imports"></a>
2025-08-16T20:39:10.4773522Z 
2025-08-16T20:39:10.4773607Z # repricer.tests.test\_imports
2025-08-16T20:39:10.4773745Z 
2025-08-16T20:39:10.4773834Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T20:39:10.4774002Z 
2025-08-16T20:39:10.4774083Z # repricer.tests.test\_smoke
2025-08-16T20:39:10.4774222Z 
2025-08-16T20:39:10.4774305Z <a id="repricer.tests"></a>
2025-08-16T20:39:10.4774437Z 
2025-08-16T20:39:10.4774548Z # repricer.tests
2025-08-16T20:39:10.4774655Z 
2025-08-16T20:39:10.4774719Z <a id="db"></a>
2025-08-16T20:39:10.4774926Z 
2025-08-16T20:39:10.4774986Z # db
2025-08-16T20:39:10.4775073Z 
2025-08-16T20:39:10.4775149Z <a id="db.utils.views"></a>
2025-08-16T20:39:10.4775285Z 
2025-08-16T20:39:10.4775352Z # db.utils.views
2025-08-16T20:39:10.4775455Z 
2025-08-16T20:39:10.4775554Z <a id="db.utils.views.replace_view"></a>
2025-08-16T20:39:10.4775885Z 
2025-08-16T20:39:10.4775954Z #### replace\_view
2025-08-16T20:39:10.4776059Z 
2025-08-16T20:39:10.4776129Z ```python
2025-08-16T20:39:10.4776321Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T20:39:10.4776571Z ```
2025-08-16T20:39:10.4776653Z 
2025-08-16T20:39:10.4776741Z Drop and recreate a SQL view atomically.
2025-08-16T20:39:10.4776909Z 
2025-08-16T20:39:10.4776981Z <a id="db.utils"></a>
2025-08-16T20:39:10.4777096Z 
2025-08-16T20:39:10.4777164Z # db.utils
2025-08-16T20:39:10.4777254Z 
2025-08-16T20:39:10.4777331Z <a id="price_importer"></a>
2025-08-16T20:39:10.4777466Z 
2025-08-16T20:39:10.4777534Z # price\_importer
2025-08-16T20:39:10.4777639Z 
2025-08-16T20:39:10.4777742Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T20:39:10.4777934Z 
2025-08-16T20:39:10.4778025Z # price\_importer.services\_common.dsn
2025-08-16T20:39:10.4778188Z 
2025-08-16T20:39:10.4778317Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T20:39:10.4778529Z 
2025-08-16T20:39:10.4778598Z #### build\_dsn
2025-08-16T20:39:10.4778704Z 
2025-08-16T20:39:10.4778768Z ```python
2025-08-16T20:39:10.4778941Z def build_dsn(sync: bool = True) -> str
2025-08-16T20:39:10.4779168Z ```
2025-08-16T20:39:10.4779250Z 
2025-08-16T20:39:10.4779320Z Return safe DSN.
2025-08-16T20:39:10.4779431Z 
2025-08-16T20:39:10.4779779Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T20:39:10.4779985Z 
2025-08-16T20:39:10.4780116Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T20:39:10.4780324Z 
2025-08-16T20:39:10.4780434Z # price\_importer.services\_common.models\_vendor
2025-08-16T20:39:10.4780630Z 
2025-08-16T20:39:10.4780735Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T20:39:10.4780924Z 
2025-08-16T20:39:10.4781019Z # price\_importer.services\_common.db\_url
2025-08-16T20:39:10.4781199Z 
2025-08-16T20:39:10.4781330Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T20:39:10.4781545Z 
2025-08-16T20:39:10.4781627Z #### build\_url
2025-08-16T20:39:10.4781734Z 
2025-08-16T20:39:10.4781799Z ```python
2025-08-16T20:39:10.4781979Z def build_url(async_: bool = True) -> str
2025-08-16T20:39:10.4782204Z ```
2025-08-16T20:39:10.4782298Z 
2025-08-16T20:39:10.4782393Z Return Postgres DSN from env or PG_* parts.
2025-08-16T20:39:10.4782568Z 
2025-08-16T20:39:10.4782680Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T20:39:10.4782867Z 
2025-08-16T20:39:10.4782962Z # price\_importer.services\_common.keepa
2025-08-16T20:39:10.4783130Z 
2025-08-16T20:39:10.4783238Z <a id="price_importer.services_common.llm"></a>
2025-08-16T20:39:10.4783420Z 
2025-08-16T20:39:10.4783509Z # price\_importer.services\_common.llm
2025-08-16T20:39:10.4783676Z 
2025-08-16T20:39:10.4783789Z <a id="price_importer.services_common.settings"></a>
2025-08-16T20:39:10.4783982Z 
2025-08-16T20:39:10.4784082Z # price\_importer.services\_common.settings
2025-08-16T20:39:10.4784254Z 
2025-08-16T20:39:10.4784352Z <a id="price_importer.services_common.db"></a>
2025-08-16T20:39:10.4784667Z 
2025-08-16T20:39:10.4784756Z # price\_importer.services\_common.db
2025-08-16T20:39:10.4785059Z 
2025-08-16T20:39:10.4785216Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T20:39:10.4785457Z 
2025-08-16T20:39:10.4785535Z #### build\_sqlalchemy\_url
2025-08-16T20:39:10.4785667Z 
2025-08-16T20:39:10.4785735Z ```python
2025-08-16T20:39:10.4785906Z def build_sqlalchemy_url() -> str
2025-08-16T20:39:10.4786116Z ```
2025-08-16T20:39:10.4786198Z 
2025-08-16T20:39:10.4786292Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T20:39:10.4786468Z 
2025-08-16T20:39:10.4786611Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T20:39:10.4786838Z 
2025-08-16T20:39:10.4786912Z #### build\_asyncpg\_dsn
2025-08-16T20:39:10.4787047Z 
2025-08-16T20:39:10.4787110Z ```python
2025-08-16T20:39:10.4787279Z def build_asyncpg_dsn() -> str
2025-08-16T20:39:10.4787474Z ```
2025-08-16T20:39:10.4787554Z 
2025-08-16T20:39:10.4787687Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T20:39:10.4788026Z 
2025-08-16T20:39:10.4788153Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T20:39:10.4788365Z 
2025-08-16T20:39:10.4788430Z #### refresh\_mvs
2025-08-16T20:39:10.4788534Z 
2025-08-16T20:39:10.4788602Z ```python
2025-08-16T20:39:10.4788793Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T20:39:10.4789044Z ```
2025-08-16T20:39:10.4789125Z 
2025-08-16T20:39:10.4789259Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T20:39:10.4789484Z 
2025-08-16T20:39:10.4789577Z <a id="price_importer.services_common"></a>
2025-08-16T20:39:10.4789750Z 
2025-08-16T20:39:10.4789837Z # price\_importer.services\_common
2025-08-16T20:39:10.4789996Z 
2025-08-16T20:39:10.4790098Z <a id="price_importer.services_common.base"></a>
2025-08-16T20:39:10.4790284Z 
2025-08-16T20:39:10.4790381Z # price\_importer.services\_common.base
2025-08-16T20:39:10.4790548Z 
2025-08-16T20:39:10.4790636Z <a id="price_importer.normaliser"></a>
2025-08-16T20:39:10.4790817Z 
2025-08-16T20:39:10.4790901Z # price\_importer.normaliser
2025-08-16T20:39:10.4791038Z 
2025-08-16T20:39:10.4791142Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T20:39:10.4791333Z 
2025-08-16T20:39:10.4791423Z # price\_importer.common.models\_vendor
2025-08-16T20:39:10.4791592Z 
2025-08-16T20:39:10.4791689Z <a id="price_importer.common.db_url"></a>
2025-08-16T20:39:10.4791859Z 
2025-08-16T20:39:10.4791944Z # price\_importer.common.db\_url
2025-08-16T20:39:10.4792095Z 
2025-08-16T20:39:10.4792199Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T20:39:10.4792385Z 
2025-08-16T20:39:10.4792449Z #### make\_dsn
2025-08-16T20:39:10.4792554Z 
2025-08-16T20:39:10.4792617Z ```python
2025-08-16T20:39:10.4792796Z def make_dsn(async_: bool = False) -> str
2025-08-16T20:39:10.4793021Z ```
2025-08-16T20:39:10.4793102Z 
2025-08-16T20:39:10.4793227Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T20:39:10.4793429Z 
2025-08-16T20:39:10.4793546Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T20:39:10.4793747Z 
2025-08-16T20:39:10.4793813Z #### build\_url
2025-08-16T20:39:10.4793913Z 
2025-08-16T20:39:10.4793976Z ```python
2025-08-16T20:39:10.4794158Z def build_url(async_: bool = False) -> str
2025-08-16T20:39:10.4794390Z ```
2025-08-16T20:39:10.4794471Z 
2025-08-16T20:39:10.4794590Z Return Postgres DSN built from environment variables.
2025-08-16T20:39:10.4794914Z 
2025-08-16T20:39:10.4795011Z <a id="price_importer.common"></a>
2025-08-16T20:39:10.4795169Z 
2025-08-16T20:39:10.4795250Z # price\_importer.common
2025-08-16T20:39:10.4795385Z 
2025-08-16T20:39:10.4795476Z <a id="price_importer.common.base"></a>
2025-08-16T20:39:10.4795640Z 
2025-08-16T20:39:10.4795730Z # price\_importer.common.base
2025-08-16T20:39:10.4795871Z 
2025-08-16T20:39:10.4795975Z <a id="price_importer.tests.conftest"></a>
2025-08-16T20:39:10.4796149Z 
2025-08-16T20:39:10.4796239Z # price\_importer.tests.conftest
2025-08-16T20:39:10.4796385Z 
2025-08-16T20:39:10.4796614Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T20:39:10.4796798Z 
2025-08-16T20:39:10.4796884Z # price\_importer.tests.test\_reader
2025-08-16T20:39:10.4797041Z 
2025-08-16T20:39:10.4797147Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T20:39:10.4797326Z 
2025-08-16T20:39:10.4797417Z # price\_importer.tests.test\_imports
2025-08-16T20:39:10.4797576Z 
2025-08-16T20:39:10.4797677Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T20:39:10.4797849Z 
2025-08-16T20:39:10.4797933Z # price\_importer.tests.test\_smoke
2025-08-16T20:39:10.4798091Z 
2025-08-16T20:39:10.4798196Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T20:39:10.4798392Z 
2025-08-16T20:39:10.4798490Z # price\_importer.tests.test\_normaliser
2025-08-16T20:39:10.4798656Z 
2025-08-16T20:39:10.4798738Z <a id="price_importer.tests"></a>
2025-08-16T20:39:10.4798920Z 
2025-08-16T20:39:10.4799005Z # price\_importer.tests
2025-08-16T20:39:10.4799136Z 
2025-08-16T20:39:10.4799226Z <a id="price_importer.reader"></a>
2025-08-16T20:39:10.4799545Z 
2025-08-16T20:39:10.4799622Z # price\_importer.reader
2025-08-16T20:39:10.4799746Z 
2025-08-16T20:39:10.4799849Z <a id="price_importer.reader.load_file"></a>
2025-08-16T20:39:10.4800021Z 
2025-08-16T20:39:10.4800085Z #### load\_file
2025-08-16T20:39:10.4800187Z 
2025-08-16T20:39:10.4800255Z ```python
2025-08-16T20:39:10.4800428Z def load_file(path: str | Path) -> Any
2025-08-16T20:39:10.4800653Z ```
2025-08-16T20:39:10.4800735Z 
2025-08-16T20:39:10.4800827Z Return DataFrame from CSV or Excel file.
2025-08-16T20:39:10.4801000Z 
2025-08-16T20:39:10.4801104Z Raises RuntimeError if pandas is unavailable.
2025-08-16T20:39:10.4801283Z 
2025-08-16T20:39:10.4801377Z <a id="price_importer.repository"></a>
2025-08-16T20:39:10.4801539Z 
2025-08-16T20:39:10.4801622Z # price\_importer.repository
2025-08-16T20:39:10.4801766Z 
2025-08-16T20:39:10.4801849Z <a id="price_importer.import"></a>
2025-08-16T20:39:10.4802001Z 
2025-08-16T20:39:10.4802078Z # price\_importer.import
2025-08-16T20:39:10.4802220Z 
2025-08-16T20:39:10.4802293Z <a id="fees_h10"></a>
2025-08-16T20:39:10.4802408Z 
2025-08-16T20:39:10.4802479Z # fees\_h10
2025-08-16T20:39:10.4802572Z 
2025-08-16T20:39:10.4802649Z <a id="fees_h10.worker"></a>
2025-08-16T20:39:10.4802781Z 
2025-08-16T20:39:10.4802853Z # fees\_h10.worker
2025-08-16T20:39:10.4802958Z 
2025-08-16T20:39:10.4803042Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T20:39:10.4803204Z 
2025-08-16T20:39:10.4803282Z # fees\_h10.tests.test\_smoke
2025-08-16T20:39:10.4803417Z 
2025-08-16T20:39:10.4803497Z <a id="fees_h10.tests"></a>
2025-08-16T20:39:10.4803627Z 
2025-08-16T20:39:10.4803693Z # fees\_h10.tests
2025-08-16T20:39:10.4803796Z 
2025-08-16T20:39:10.4803877Z <a id="fees_h10.client"></a>
2025-08-16T20:39:10.4804006Z 
2025-08-16T20:39:10.4804072Z # fees\_h10.client
2025-08-16T20:39:10.4804181Z 
2025-08-16T20:39:10.4804262Z <a id="fees_h10.repository"></a>
2025-08-16T20:39:10.4804403Z 
2025-08-16T20:39:10.4804480Z # fees\_h10.repository
2025-08-16T20:39:10.4804611Z 
2025-08-16T20:39:10.4804682Z <a id="emailer"></a>
2025-08-16T20:39:10.4804899Z 
2025-08-16T20:39:10.4804971Z # emailer
2025-08-16T20:39:10.4805062Z 
2025-08-16T20:39:10.4805164Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T20:39:10.4805349Z 
2025-08-16T20:39:10.4805438Z # emailer.tests.test\_import\_emailer
2025-08-16T20:39:10.4805605Z 
2025-08-16T20:39:10.4805689Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T20:39:10.4805851Z 
2025-08-16T20:39:10.4805930Z # emailer.tests.test\_smoke
2025-08-16T20:39:10.4806064Z 
2025-08-16T20:39:10.4806150Z <a id="emailer.tests"></a>
2025-08-16T20:39:10.4806283Z 
2025-08-16T20:39:10.4806351Z # emailer.tests
2025-08-16T20:39:10.4806463Z 
2025-08-16T20:39:10.4806547Z <a id="emailer.generate_body"></a>
2025-08-16T20:39:10.4806695Z 
2025-08-16T20:39:10.4806771Z # emailer.generate\_body
2025-08-16T20:39:10.4806906Z 
2025-08-16T20:39:10.4806978Z <a id="llm_server"></a>
2025-08-16T20:39:10.4807096Z 
2025-08-16T20:39:10.4807166Z # llm\_server
2025-08-16T20:39:10.4807387Z 
2025-08-16T20:39:10.4807463Z <a id="llm_server.app"></a>
2025-08-16T20:39:10.4807592Z 
2025-08-16T20:39:10.4807665Z # llm\_server.app
2025-08-16T20:39:10.4807768Z 
