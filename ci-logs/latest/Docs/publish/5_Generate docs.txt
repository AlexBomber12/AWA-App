2025-08-18T20:35:42.2602407Z ##[group]Run pydoc-markdown
2025-08-18T20:35:42.2602709Z [36;1mpydoc-markdown[0m
2025-08-18T20:35:42.2642657Z shell: /usr/bin/bash -e {0}
2025-08-18T20:35:42.2642890Z env:
2025-08-18T20:35:42.2643128Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:35:42.2643545Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T20:35:42.2643947Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:35:42.2644297Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:35:42.2644647Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:35:42.2644989Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T20:35:42.2645279Z ##[endgroup]
2025-08-18T20:35:42.5853869Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T20:35:42.5854387Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T20:35:42.5854733Z In "pydoc-markdown.yml"
2025-08-18T20:35:42.5855052Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T20:35:42.5855530Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T20:35:42.5856055Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T20:35:42.5856403Z 
2025-08-18T20:35:42.9015475Z <a id="__init__"></a>
2025-08-18T20:35:42.9015873Z 
2025-08-18T20:35:42.9016050Z # \_\_init\_\_
2025-08-18T20:35:42.9016301Z 
2025-08-18T20:35:42.9016493Z <a id="api"></a>
2025-08-18T20:35:42.9016754Z 
2025-08-18T20:35:42.9016894Z # api
2025-08-18T20:35:42.9017085Z 
2025-08-18T20:35:42.9017245Z <a id="api.errors"></a>
2025-08-18T20:35:42.9017501Z 
2025-08-18T20:35:42.9017649Z # api.errors
2025-08-18T20:35:42.9017891Z 
2025-08-18T20:35:42.9018067Z <a id="api.sentry_config"></a>
2025-08-18T20:35:42.9018378Z 
2025-08-18T20:35:42.9018550Z # api.sentry\_config
2025-08-18T20:35:42.9018803Z 
2025-08-18T20:35:42.9019003Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T20:35:42.9019662Z 
2025-08-18T20:35:42.9020270Z # api.tests.test\_sentry\_scrub
2025-08-18T20:35:42.9020629Z 
2025-08-18T20:35:42.9020848Z <a id="api.tests.test_errors_json"></a>
2025-08-18T20:35:42.9021257Z 
2025-08-18T20:35:42.9021447Z # api.tests.test\_errors\_json
2025-08-18T20:35:42.9021777Z 
2025-08-18T20:35:42.9021984Z <a id="api.tests.test_llm"></a>
2025-08-18T20:35:42.9022318Z 
2025-08-18T20:35:42.9022495Z # api.tests.test\_llm
2025-08-18T20:35:42.9022789Z 
2025-08-18T20:35:42.9023003Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T20:35:42.9023424Z 
2025-08-18T20:35:42.9023752Z # api.tests.test\_sentry\_event
2025-08-18T20:35:42.9024095Z 
2025-08-18T20:35:42.9024297Z <a id="api.tests.test_cors"></a>
2025-08-18T20:35:42.9024601Z 
2025-08-18T20:35:42.9024714Z # api.tests.test\_cors
2025-08-18T20:35:42.9024885Z 
2025-08-18T20:35:42.9025009Z <a id="api.tests.test_imports"></a>
2025-08-18T20:35:42.9025365Z 
2025-08-18T20:35:42.9025554Z # api.tests.test\_imports
2025-08-18T20:35:42.9025860Z 
2025-08-18T20:35:42.9026055Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T20:35:42.9026454Z 
2025-08-18T20:35:42.9026650Z # api.tests.test\_rate\_limit
2025-08-18T20:35:42.9026963Z 
2025-08-18T20:35:42.9027138Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T20:35:42.9027443Z 
2025-08-18T20:35:42.9027555Z #### app
2025-08-18T20:35:42.9027720Z 
2025-08-18T20:35:42.9027799Z noqa: E402
2025-08-18T20:35:42.9027895Z 
2025-08-18T20:35:42.9027987Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T20:35:42.9028166Z 
2025-08-18T20:35:42.9028250Z # api.tests.test\_entrypoint
2025-08-18T20:35:42.9028395Z 
2025-08-18T20:35:42.9028498Z <a id="api.tests.test_health"></a>
2025-08-18T20:35:42.9028664Z 
2025-08-18T20:35:42.9028744Z # api.tests.test\_health
2025-08-18T20:35:42.9028888Z 
2025-08-18T20:35:42.9028973Z <a id="api.logging_config"></a>
2025-08-18T20:35:42.9029125Z 
2025-08-18T20:35:42.9029202Z # api.logging\_config
2025-08-18T20:35:42.9029559Z 
2025-08-18T20:35:42.9029657Z <a id="api.migrations.env"></a>
2025-08-18T20:35:42.9029810Z 
2025-08-18T20:35:42.9029905Z # api.migrations.env
2025-08-18T20:35:42.9030296Z 
2025-08-18T20:35:42.9030428Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T20:35:42.9030647Z 
2025-08-18T20:35:42.9030765Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T20:35:42.9030962Z 
2025-08-18T20:35:42.9031074Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T20:35:42.9031296Z 
2025-08-18T20:35:42.9031396Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T20:35:42.9031585Z 
2025-08-18T20:35:42.9031757Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T20:35:42.9032010Z 
2025-08-18T20:35:42.9032153Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T20:35:42.9032387Z 
2025-08-18T20:35:42.9032514Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T20:35:42.9032729Z 
2025-08-18T20:35:42.9032839Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T20:35:42.9033079Z 
2025-08-18T20:35:42.9033201Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T20:35:42.9033419Z 
2025-08-18T20:35:42.9033531Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T20:35:42.9033722Z 
2025-08-18T20:35:42.9033850Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T20:35:42.9034070Z 
2025-08-18T20:35:42.9034185Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T20:35:42.9034388Z 
2025-08-18T20:35:42.9034511Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T20:35:42.9034733Z 
2025-08-18T20:35:42.9034848Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T20:35:42.9035049Z 
2025-08-18T20:35:42.9035190Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T20:35:42.9035411Z 
2025-08-18T20:35:42.9035521Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T20:35:42.9035724Z 
2025-08-18T20:35:42.9035869Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T20:35:42.9036103Z 
2025-08-18T20:35:42.9036235Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T20:35:42.9036573Z 
2025-08-18T20:35:42.9036707Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T20:35:42.9036930Z 
2025-08-18T20:35:42.9037049Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T20:35:42.9037248Z 
2025-08-18T20:35:42.9037389Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T20:35:42.9037611Z 
2025-08-18T20:35:42.9037728Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T20:35:42.9037923Z 
2025-08-18T20:35:42.9038040Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T20:35:42.9038227Z 
2025-08-18T20:35:42.9038323Z # api.migrations.versions.0001\_baseline
2025-08-18T20:35:42.9038502Z 
2025-08-18T20:35:42.9038593Z <a id="api.migrations.versions"></a>
2025-08-18T20:35:42.9038753Z 
2025-08-18T20:35:42.9038837Z # api.migrations.versions
2025-08-18T20:35:42.9038976Z 
2025-08-18T20:35:42.9039056Z <a id="api.migrations"></a>
2025-08-18T20:35:42.9039190Z 
2025-08-18T20:35:42.9039270Z # api.migrations
2025-08-18T20:35:42.9039621Z 
2025-08-18T20:35:42.9039722Z <a id="api.db"></a>
2025-08-18T20:35:42.9039834Z 
2025-08-18T20:35:42.9039908Z # api.db
2025-08-18T20:35:42.9039997Z 
2025-08-18T20:35:42.9040079Z <a id="api.routes.stats"></a>
2025-08-18T20:35:42.9040223Z 
2025-08-18T20:35:42.9040297Z # api.routes.stats
2025-08-18T20:35:42.9040503Z 
2025-08-18T20:35:42.9040593Z <a id="api.routes.stats.kpi"></a>
2025-08-18T20:35:42.9040774Z 
2025-08-18T20:35:42.9040839Z #### kpi
2025-08-18T20:35:42.9040931Z 
2025-08-18T20:35:42.9040997Z ```python
2025-08-18T20:35:42.9041173Z @router.get("/stats/kpi")
2025-08-18T20:35:42.9041409Z def kpi() -> List[Dict[str, int]]
2025-08-18T20:35:42.9041620Z ```
2025-08-18T20:35:42.9041707Z 
2025-08-18T20:35:42.9041791Z Return KPI metrics (mock).
2025-08-18T20:35:42.9041921Z 
2025-08-18T20:35:42.9042031Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T20:35:42.9042209Z 
2025-08-18T20:35:42.9042281Z #### roi\_by\_vendor
2025-08-18T20:35:42.9042403Z 
2025-08-18T20:35:42.9042467Z ```python
2025-08-18T20:35:42.9042646Z @router.get("/stats/roi_by_vendor")
2025-08-18T20:35:42.9043047Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T20:35:42.9043279Z ```
2025-08-18T20:35:42.9043361Z 
2025-08-18T20:35:42.9043445Z Return ROI percent by vendor.
2025-08-18T20:35:42.9043585Z 
2025-08-18T20:35:42.9043683Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T20:35:42.9043865Z 
2025-08-18T20:35:42.9043934Z #### roi\_trend
2025-08-18T20:35:42.9044046Z 
2025-08-18T20:35:42.9044111Z ```python
2025-08-18T20:35:42.9044279Z @router.get("/stats/roi_trend")
2025-08-18T20:35:42.9044520Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T20:35:42.9044754Z ```
2025-08-18T20:35:42.9044833Z 
2025-08-18T20:35:42.9044907Z Return 30-day ROI trend.
2025-08-18T20:35:42.9045034Z 
2025-08-18T20:35:42.9045121Z <a id="api.routes.roi"></a>
2025-08-18T20:35:42.9045251Z 
2025-08-18T20:35:42.9045322Z # api.routes.roi
2025-08-18T20:35:42.9045433Z 
2025-08-18T20:35:42.9045516Z <a id="api.routes.health"></a>
2025-08-18T20:35:42.9045662Z 
2025-08-18T20:35:42.9045749Z # api.routes.health
2025-08-18T20:35:42.9045859Z 
2025-08-18T20:35:42.9045950Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T20:35:42.9046116Z 
2025-08-18T20:35:42.9046186Z #### MAX\_SKEW
2025-08-18T20:35:42.9046284Z 
2025-08-18T20:35:42.9046348Z seconds
2025-08-18T20:35:42.9046441Z 
2025-08-18T20:35:42.9046531Z <a id="api.routes.health.health"></a>
2025-08-18T20:35:42.9046693Z 
2025-08-18T20:35:42.9046757Z #### health
2025-08-18T20:35:42.9046863Z 
2025-08-18T20:35:42.9046926Z ```python
2025-08-18T20:35:42.9047120Z @router.get("/health", include_in_schema=False)
2025-08-18T20:35:42.9047492Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T20:35:42.9047833Z ```
2025-08-18T20:35:42.9047914Z 
2025-08-18T20:35:42.9048034Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T20:35:42.9048238Z 
2025-08-18T20:35:42.9048328Z <a id="api.routes.repository"></a>
2025-08-18T20:35:42.9048482Z 
2025-08-18T20:35:42.9048689Z # api.routes.repository
2025-08-18T20:35:42.9048820Z 
2025-08-18T20:35:42.9048894Z <a id="api.routes"></a>
2025-08-18T20:35:42.9049011Z 
2025-08-18T20:35:42.9049084Z # api.routes
2025-08-18T20:35:42.9049182Z 
2025-08-18T20:35:42.9049261Z <a id="api.models.fee"></a>
2025-08-18T20:35:42.9049586Z 
2025-08-18T20:35:42.9049659Z # api.models.fee
2025-08-18T20:35:42.9049769Z 
2025-08-18T20:35:42.9049860Z <a id="api.models"></a>
2025-08-18T20:35:42.9049983Z 
2025-08-18T20:35:42.9050050Z # api.models
2025-08-18T20:35:42.9050147Z 
2025-08-18T20:35:42.9050231Z <a id="api.roi_repository"></a>
2025-08-18T20:35:42.9050378Z 
2025-08-18T20:35:42.9050453Z # api.roi\_repository
2025-08-18T20:35:42.9050569Z 
2025-08-18T20:35:42.9050650Z <a id="api.main"></a>
2025-08-18T20:35:42.9050761Z 
2025-08-18T20:35:42.9050826Z # api.main
2025-08-18T20:35:42.9050927Z 
2025-08-18T20:35:42.9051006Z <a id="api.main.ready"></a>
2025-08-18T20:35:42.9051137Z 
2025-08-18T20:35:42.9051202Z #### ready
2025-08-18T20:35:42.9051302Z 
2025-08-18T20:35:42.9051376Z ```python
2025-08-18T20:35:42.9051651Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T20:35:42.9052079Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T20:35:42.9052439Z                                                                       str]
2025-08-18T20:35:42.9052671Z ```
2025-08-18T20:35:42.9052759Z 
2025-08-18T20:35:42.9052855Z Return 200 only when migrations are at head.
2025-08-18T20:35:42.9053028Z 
2025-08-18T20:35:42.9053102Z <a id="api.config"></a>
2025-08-18T20:35:42.9053225Z 
2025-08-18T20:35:42.9053289Z # api.config
2025-08-18T20:35:42.9053385Z 
2025-08-18T20:35:42.9053458Z <a id="etl"></a>
2025-08-18T20:35:42.9053560Z 
2025-08-18T20:35:42.9053622Z # etl
2025-08-18T20:35:42.9053712Z 
2025-08-18T20:35:42.9053794Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T20:35:42.9053942Z 
2025-08-18T20:35:42.9054014Z # etl.fba\_fee\_ingestor
2025-08-18T20:35:42.9054147Z 
2025-08-18T20:35:42.9054229Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T20:35:42.9054503Z 
2025-08-18T20:35:42.9054585Z # etl.sp\_fees\_ingestor
2025-08-18T20:35:42.9054706Z 
2025-08-18T20:35:42.9054785Z <a id="etl.keepa_ingestor"></a>
2025-08-18T20:35:42.9054923Z 
2025-08-18T20:35:42.9054999Z # etl.keepa\_ingestor
2025-08-18T20:35:42.9055112Z 
2025-08-18T20:35:42.9055182Z <a id="etl.db"></a>
2025-08-18T20:35:42.9055294Z 
2025-08-18T20:35:42.9055359Z # etl.db
2025-08-18T20:35:42.9055447Z 
2025-08-18T20:35:42.9055539Z <a id="etl.dialects.schemas"></a>
2025-08-18T20:35:42.9055688Z 
2025-08-18T20:35:42.9055764Z # etl.dialects.schemas
2025-08-18T20:35:42.9055881Z 
2025-08-18T20:35:42.9055993Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T20:35:42.9056177Z 
2025-08-18T20:35:42.9056268Z # etl.dialects.amazon\_reimbursements
2025-08-18T20:35:42.9056434Z 
2025-08-18T20:35:42.9056532Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T20:35:42.9056706Z 
2025-08-18T20:35:42.9056801Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T20:35:42.9056960Z 
2025-08-18T20:35:42.9057049Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T20:35:42.9057220Z 
2025-08-18T20:35:42.9057309Z # etl.dialects.amazon\_returns
2025-08-18T20:35:42.9057449Z 
2025-08-18T20:35:42.9057545Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T20:35:42.9057719Z 
2025-08-18T20:35:42.9057805Z # etl.dialects.amazon\_fee\_preview
2025-08-18T20:35:42.9057959Z 
2025-08-18T20:35:42.9058071Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T20:35:42.9058257Z 
2025-08-18T20:35:42.9058347Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T20:35:42.9058512Z 
2025-08-18T20:35:42.9058614Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T20:35:42.9058783Z 
2025-08-18T20:35:42.9058869Z # etl.dialects.amazon\_settlements
2025-08-18T20:35:42.9059027Z 
2025-08-18T20:35:42.9059104Z <a id="etl.dialects"></a>
2025-08-18T20:35:42.9059233Z 
2025-08-18T20:35:42.9059502Z # etl.dialects
2025-08-18T20:35:42.9059695Z 
2025-08-18T20:35:42.9059772Z <a id="ingest"></a>
2025-08-18T20:35:42.9060020Z 
2025-08-18T20:35:42.9060098Z # ingest
2025-08-18T20:35:42.9060186Z 
2025-08-18T20:35:42.9060273Z <a id="ingest.maintenance"></a>
2025-08-18T20:35:42.9060427Z 
2025-08-18T20:35:42.9060501Z # ingest.maintenance
2025-08-18T20:35:42.9060616Z 
2025-08-18T20:35:42.9060697Z <a id="ingest.copy_loader"></a>
2025-08-18T20:35:42.9060844Z 
2025-08-18T20:35:42.9060917Z # ingest.copy\_loader
2025-08-18T20:35:42.9061035Z 
2025-08-18T20:35:42.9061144Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T20:35:42.9061328Z 
2025-08-18T20:35:42.9061406Z #### copy\_df\_via\_temp
2025-08-18T20:35:42.9061536Z 
2025-08-18T20:35:42.9061605Z ```python
2025-08-18T20:35:42.9061784Z def copy_df_via_temp(engine: Engine,
2025-08-18T20:35:42.9062033Z                      df: pd.DataFrame,
2025-08-18T20:35:42.9062270Z                      target_table: str,
2025-08-18T20:35:42.9062493Z                      *,
2025-08-18T20:35:42.9062710Z                      target_schema: Optional[str] = None,
2025-08-18T20:35:42.9062980Z                      columns: Sequence[str],
2025-08-18T20:35:42.9063263Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T20:35:42.9063550Z                      analyze_after: bool = False,
2025-08-18T20:35:42.9063824Z                      connection: Any | None = None) -> int
2025-08-18T20:35:42.9064065Z ```
2025-08-18T20:35:42.9064158Z 
2025-08-18T20:35:42.9064313Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T20:35:42.9064547Z 
2025-08-18T20:35:42.9064643Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T20:35:42.9064802Z 
2025-08-18T20:35:42.9064882Z # ingest.tests.test\_smoke
2025-08-18T20:35:42.9065021Z 
2025-08-18T20:35:42.9065097Z <a id="ingest.tests"></a>
2025-08-18T20:35:42.9065223Z 
2025-08-18T20:35:42.9065290Z # ingest.tests
2025-08-18T20:35:42.9065398Z 
2025-08-18T20:35:42.9065485Z <a id="ingest.upload_router"></a>
2025-08-18T20:35:42.9065633Z 
2025-08-18T20:35:42.9065712Z # ingest.upload\_router
2025-08-18T20:35:42.9065833Z 
2025-08-18T20:35:42.9065920Z <a id="ingest.email_watcher"></a>
2025-08-18T20:35:42.9066193Z 
2025-08-18T20:35:42.9066274Z # ingest.email\_watcher
2025-08-18T20:35:42.9066390Z 
2025-08-18T20:35:42.9066478Z <a id="ingest.email_watcher.main"></a>
2025-08-18T20:35:42.9066643Z 
2025-08-18T20:35:42.9066706Z #### main
2025-08-18T20:35:42.9066799Z 
2025-08-18T20:35:42.9066868Z ```python
2025-08-18T20:35:42.9067038Z def main() -> dict[str, str]
2025-08-18T20:35:42.9067242Z ```
2025-08-18T20:35:42.9067325Z 
2025-08-18T20:35:42.9067467Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T20:35:42.9067698Z 
2025-08-18T20:35:42.9067828Z Returns {"status": "success"} when processing completes.
2025-08-18T20:35:42.9068034Z 
2025-08-18T20:35:42.9068111Z <a id="ingest.tasks"></a>
2025-08-18T20:35:42.9068243Z 
2025-08-18T20:35:42.9068310Z # ingest.tasks
2025-08-18T20:35:42.9068411Z 
2025-08-18T20:35:42.9068514Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T20:35:42.9068690Z 
2025-08-18T20:35:42.9068767Z #### task\_import\_file
2025-08-18T20:35:42.9068888Z 
2025-08-18T20:35:42.9068959Z ```python
2025-08-18T20:35:42.9069169Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T20:35:42.9069674Z def task_import_file(self: Any,
2025-08-18T20:35:42.9069890Z                      uri: str,
2025-08-18T20:35:42.9070118Z                      report_type: Optional[str] = None,
2025-08-18T20:35:42.9070394Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T20:35:42.9070663Z ```
2025-08-18T20:35:42.9070749Z 
2025-08-18T20:35:42.9070887Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T20:35:42.9071104Z 
2025-08-18T20:35:42.9071190Z <a id="ingest.celery_app"></a>
2025-08-18T20:35:42.9071333Z 
2025-08-18T20:35:42.9071411Z # ingest.celery\_app
2025-08-18T20:35:42.9071535Z 
2025-08-18T20:35:42.9071618Z <a id="ingest.ingest_router"></a>
2025-08-18T20:35:42.9071765Z 
2025-08-18T20:35:42.9071846Z # ingest.ingest\_router
2025-08-18T20:35:42.9071964Z 
2025-08-18T20:35:42.9072172Z <a id="logistics_etl"></a>
2025-08-18T20:35:42.9072309Z 
2025-08-18T20:35:42.9072385Z # logistics\_etl
2025-08-18T20:35:42.9072491Z 
2025-08-18T20:35:42.9072569Z Daily logistics ETL job.
2025-08-18T20:35:42.9072701Z 
2025-08-18T20:35:42.9072784Z <a id="logistics_etl.__main__"></a>
2025-08-18T20:35:42.9072936Z 
2025-08-18T20:35:42.9073021Z # logistics\_etl.\_\_main\_\_
2025-08-18T20:35:42.9073157Z 
2025-08-18T20:35:42.9073234Z <a id="logistics_etl.dsn"></a>
2025-08-18T20:35:42.9073371Z 
2025-08-18T20:35:42.9073447Z # logistics\_etl.dsn
2025-08-18T20:35:42.9073560Z 
2025-08-18T20:35:42.9073680Z Local DSN builder to avoid cross-service dependency.
2025-08-18T20:35:42.9073888Z 
2025-08-18T20:35:42.9073981Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T20:35:42.9074150Z 
2025-08-18T20:35:42.9074221Z #### build\_dsn
2025-08-18T20:35:42.9074325Z 
2025-08-18T20:35:42.9074390Z ```python
2025-08-18T20:35:42.9074575Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:35:42.9074798Z ```
2025-08-18T20:35:42.9074887Z 
2025-08-18T20:35:42.9075045Z Return a Postgres DSN assembled from environment variables.
2025-08-18T20:35:42.9075268Z 
2025-08-18T20:35:42.9075424Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T20:35:42.9075833Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T20:35:42.9076181Z error when any required variable is missing.
2025-08-18T20:35:42.9076358Z 
2025-08-18T20:35:42.9076455Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T20:35:42.9076628Z 
2025-08-18T20:35:42.9076715Z # logistics\_etl.tests.conftest
2025-08-18T20:35:42.9076861Z 
2025-08-18T20:35:42.9076966Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T20:35:42.9077160Z 
2025-08-18T20:35:42.9077248Z # logistics\_etl.tests.test\_repository
2025-08-18T20:35:42.9077412Z 
2025-08-18T20:35:42.9077508Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T20:35:42.9077678Z 
2025-08-18T20:35:42.9077761Z # logistics\_etl.tests.test\_cron
2025-08-18T20:35:42.9077907Z 
2025-08-18T20:35:42.9078014Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T20:35:42.9078309Z 
2025-08-18T20:35:42.9078394Z # logistics\_etl.tests.test\_imports
2025-08-18T20:35:42.9078557Z 
2025-08-18T20:35:42.9078649Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T20:35:42.9078819Z 
2025-08-18T20:35:42.9078912Z # logistics\_etl.tests.test\_smoke
2025-08-18T20:35:42.9079062Z 
2025-08-18T20:35:42.9079154Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T20:35:42.9079508Z 
2025-08-18T20:35:42.9079612Z # logistics\_etl.tests.test\_client
2025-08-18T20:35:42.9079768Z 
2025-08-18T20:35:42.9079852Z <a id="logistics_etl.tests"></a>
2025-08-18T20:35:42.9080008Z 
2025-08-18T20:35:42.9080081Z # logistics\_etl.tests
2025-08-18T20:35:42.9080202Z 
2025-08-18T20:35:42.9080289Z <a id="logistics_etl.flow"></a>
2025-08-18T20:35:42.9080429Z 
2025-08-18T20:35:42.9080501Z # logistics\_etl.flow
2025-08-18T20:35:42.9080618Z 
2025-08-18T20:35:42.9080708Z <a id="logistics_etl.client"></a>
2025-08-18T20:35:42.9080866Z 
2025-08-18T20:35:42.9080942Z # logistics\_etl.client
2025-08-18T20:35:42.9081078Z 
2025-08-18T20:35:42.9081165Z <a id="logistics_etl.cron"></a>
2025-08-18T20:35:42.9081309Z 
2025-08-18T20:35:42.9081386Z # logistics\_etl.cron
2025-08-18T20:35:42.9081499Z 
2025-08-18T20:35:42.9081579Z <a id="logistics_etl.db"></a>
2025-08-18T20:35:42.9081719Z 
2025-08-18T20:35:42.9081796Z # logistics\_etl.db
2025-08-18T20:35:42.9081906Z 
2025-08-18T20:35:42.9081995Z <a id="logistics_etl.repository"></a>
2025-08-18T20:35:42.9082161Z 
2025-08-18T20:35:42.9082241Z # logistics\_etl.repository
2025-08-18T20:35:42.9082375Z 
2025-08-18T20:35:42.9082444Z <a id="alert_bot"></a>
2025-08-18T20:35:42.9082567Z 
2025-08-18T20:35:42.9082634Z # alert\_bot
2025-08-18T20:35:42.9082731Z 
2025-08-18T20:35:42.9082827Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T20:35:42.9082992Z 
2025-08-18T20:35:42.9083073Z # alert\_bot.tests.test\_smoke
2025-08-18T20:35:42.9083218Z 
2025-08-18T20:35:42.9083296Z <a id="alert_bot.tests"></a>
2025-08-18T20:35:42.9083554Z 
2025-08-18T20:35:42.9083628Z # alert\_bot.tests
2025-08-18T20:35:42.9083741Z 
2025-08-18T20:35:42.9083825Z <a id="alert_bot.alert_bot"></a>
2025-08-18T20:35:42.9083967Z 
2025-08-18T20:35:42.9122685Z # alert\_bot.alert\_bot
2025-08-18T20:35:42.9122971Z 
2025-08-18T20:35:42.9123134Z <a id="alert_bot.rules"></a>
2025-08-18T20:35:42.9123436Z 
2025-08-18T20:35:42.9123591Z # alert\_bot.rules
2025-08-18T20:35:42.9123827Z 
2025-08-18T20:35:42.9123950Z <a id="common"></a>
2025-08-18T20:35:42.9124091Z 
2025-08-18T20:35:42.9124172Z # common
2025-08-18T20:35:42.9124292Z 
2025-08-18T20:35:42.9124393Z <a id="common.dsn"></a>
2025-08-18T20:35:42.9124545Z 
2025-08-18T20:35:42.9124628Z # common.dsn
2025-08-18T20:35:42.9124756Z 
2025-08-18T20:35:42.9124861Z <a id="common.dsn.build_dsn"></a>
2025-08-18T20:35:42.9125050Z 
2025-08-18T20:35:42.9125132Z #### build\_dsn
2025-08-18T20:35:42.9125265Z 
2025-08-18T20:35:42.9125347Z ```python
2025-08-18T20:35:42.9125574Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:35:42.9125860Z ```
2025-08-18T20:35:42.9125971Z 
2025-08-18T20:35:42.9126135Z Return a Postgres DSN, validating required variables.
2025-08-18T20:35:42.9126398Z 
2025-08-18T20:35:42.9126633Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T20:35:42.9127166Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T20:35:42.9127589Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T20:35:42.9127899Z missing.
2025-08-18T20:35:42.9127987Z 
2025-08-18T20:35:42.9128078Z <a id="common.models_vendor"></a>
2025-08-18T20:35:42.9128226Z 
2025-08-18T20:35:42.9128301Z # common.models\_vendor
2025-08-18T20:35:42.9128429Z 
2025-08-18T20:35:42.9128519Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T20:35:42.9128685Z 
2025-08-18T20:35:42.9128753Z ## Vendor Objects
2025-08-18T20:35:42.9128868Z 
2025-08-18T20:35:42.9128932Z ```python
2025-08-18T20:35:42.9129091Z class Vendor(Base)
2025-08-18T20:35:42.9129257Z ```
2025-08-18T20:35:42.9129572Z 
2025-08-18T20:35:42.9129831Z Vendor of inventory items.
2025-08-18T20:35:42.9129980Z 
2025-08-18T20:35:42.9130091Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T20:35:42.9130286Z 
2025-08-18T20:35:42.9130362Z ## VendorPrice Objects
2025-08-18T20:35:42.9130480Z 
2025-08-18T20:35:42.9130545Z ```python
2025-08-18T20:35:42.9130712Z class VendorPrice(Base)
2025-08-18T20:35:42.9130893Z ```
2025-08-18T20:35:42.9131028Z 
2025-08-18T20:35:42.9131134Z Association table linking vendors to pricing.
2025-08-18T20:35:42.9131320Z 
2025-08-18T20:35:42.9131398Z <a id="common.db_url"></a>
2025-08-18T20:35:42.9131529Z 
2025-08-18T20:35:42.9131598Z # common.db\_url
2025-08-18T20:35:42.9131713Z 
2025-08-18T20:35:42.9131800Z <a id="common.db_url.build_url"></a>
2025-08-18T20:35:42.9131956Z 
2025-08-18T20:35:42.9132027Z #### build\_url
2025-08-18T20:35:42.9132128Z 
2025-08-18T20:35:42.9132191Z ```python
2025-08-18T20:35:42.9132377Z def build_url(async_: bool = True) -> str
2025-08-18T20:35:42.9132606Z ```
2025-08-18T20:35:42.9132697Z 
2025-08-18T20:35:42.9132796Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:35:42.9132970Z 
2025-08-18T20:35:42.9133049Z <a id="common.keepa"></a>
2025-08-18T20:35:42.9133183Z 
2025-08-18T20:35:42.9133253Z # common.keepa
2025-08-18T20:35:42.9133355Z 
2025-08-18T20:35:42.9133435Z <a id="common.llm"></a>
2025-08-18T20:35:42.9133552Z 
2025-08-18T20:35:42.9133617Z # common.llm
2025-08-18T20:35:42.9133713Z 
2025-08-18T20:35:42.9133801Z <a id="common.settings"></a>
2025-08-18T20:35:42.9133937Z 
2025-08-18T20:35:42.9134007Z # common.settings
2025-08-18T20:35:42.9134123Z 
2025-08-18T20:35:42.9134195Z <a id="common.db"></a>
2025-08-18T20:35:42.9134311Z 
2025-08-18T20:35:42.9134382Z # common.db
2025-08-18T20:35:42.9134473Z 
2025-08-18T20:35:42.9134567Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T20:35:42.9134736Z 
2025-08-18T20:35:42.9134820Z #### build\_sqlalchemy\_url
2025-08-18T20:35:42.9134954Z 
2025-08-18T20:35:42.9135020Z ```python
2025-08-18T20:35:42.9135316Z def build_sqlalchemy_url() -> str
2025-08-18T20:35:42.9135525Z ```
2025-08-18T20:35:42.9135615Z 
2025-08-18T20:35:42.9135713Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:35:42.9135885Z 
2025-08-18T20:35:42.9135986Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T20:35:42.9136153Z 
2025-08-18T20:35:42.9136229Z #### build\_asyncpg\_dsn
2025-08-18T20:35:42.9136354Z 
2025-08-18T20:35:42.9136428Z ```python
2025-08-18T20:35:42.9136600Z def build_asyncpg_dsn() -> str
2025-08-18T20:35:42.9136806Z ```
2025-08-18T20:35:42.9136889Z 
2025-08-18T20:35:42.9137029Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:35:42.9137248Z 
2025-08-18T20:35:42.9137334Z <a id="common.db.refresh_mvs"></a>
2025-08-18T20:35:42.9137488Z 
2025-08-18T20:35:42.9137565Z #### refresh\_mvs
2025-08-18T20:35:42.9137670Z 
2025-08-18T20:35:42.9137768Z ```python
2025-08-18T20:35:42.9137977Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:35:42.9138227Z ```
2025-08-18T20:35:42.9138320Z 
2025-08-18T20:35:42.9138457Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:35:42.9138677Z 
2025-08-18T20:35:42.9138755Z <a id="common.config"></a>
2025-08-18T20:35:42.9138890Z 
2025-08-18T20:35:42.9138959Z # common.config
2025-08-18T20:35:42.9139063Z 
2025-08-18T20:35:42.9139145Z <a id="common.base"></a>
2025-08-18T20:35:42.9139267Z 
2025-08-18T20:35:42.9139431Z # common.base
2025-08-18T20:35:42.9139537Z 
2025-08-18T20:35:42.9139619Z <a id="common.base.Base"></a>
2025-08-18T20:35:42.9139758Z 
2025-08-18T20:35:42.9139824Z ## Base Objects
2025-08-18T20:35:42.9139929Z 
2025-08-18T20:35:42.9139997Z ```python
2025-08-18T20:35:42.9140167Z class Base(DeclarativeBase)
2025-08-18T20:35:42.9140359Z ```
2025-08-18T20:35:42.9140440Z 
2025-08-18T20:35:42.9140532Z Base class for SQLAlchemy models.
2025-08-18T20:35:42.9140680Z 
2025-08-18T20:35:42.9140753Z <a id="repricer"></a>
2025-08-18T20:35:42.9140876Z 
2025-08-18T20:35:42.9140942Z # repricer
2025-08-18T20:35:42.9141034Z 
2025-08-18T20:35:42.9141126Z <a id="repricer.app.schemas"></a>
2025-08-18T20:35:42.9141402Z 
2025-08-18T20:35:42.9141482Z # repricer.app.schemas
2025-08-18T20:35:42.9141603Z 
2025-08-18T20:35:42.9141693Z <a id="repricer.app.deps"></a>
2025-08-18T20:35:42.9141835Z 
2025-08-18T20:35:42.9141910Z # repricer.app.deps
2025-08-18T20:35:42.9142029Z 
2025-08-18T20:35:42.9142143Z Placeholder module for Keepa / SP-API clients.
2025-08-18T20:35:42.9142329Z 
2025-08-18T20:35:42.9142415Z <a id="repricer.app.logic"></a>
2025-08-18T20:35:42.9142568Z 
2025-08-18T20:35:42.9142645Z # repricer.app.logic
2025-08-18T20:35:42.9142763Z 
2025-08-18T20:35:42.9142874Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T20:35:42.9143053Z 
2025-08-18T20:35:42.9143120Z #### MIN\_MARGIN
2025-08-18T20:35:42.9143231Z 
2025-08-18T20:35:42.9143295Z 15 % ROI
2025-08-18T20:35:42.9143382Z 
2025-08-18T20:35:42.9143486Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T20:35:42.9143674Z 
2025-08-18T20:35:42.9143746Z #### compute\_price
2025-08-18T20:35:42.9143859Z 
2025-08-18T20:35:42.9143933Z ```python
2025-08-18T20:35:42.9144181Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T20:35:42.9144486Z ```
2025-08-18T20:35:42.9144570Z 
2025-08-18T20:35:42.9144678Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T20:35:42.9144960Z Replace with real competitive logic later.
2025-08-18T20:35:42.9145130Z 
2025-08-18T20:35:42.9145216Z <a id="repricer.app.main"></a>
2025-08-18T20:35:42.9145365Z 
2025-08-18T20:35:42.9145439Z # repricer.app.main
2025-08-18T20:35:42.9145550Z 
2025-08-18T20:35:42.9145635Z <a id="repricer.app"></a>
2025-08-18T20:35:42.9145762Z 
2025-08-18T20:35:42.9145831Z # repricer.app
2025-08-18T20:35:42.9145933Z 
2025-08-18T20:35:42.9146033Z <a id="repricer.tests.test_imports"></a>
2025-08-18T20:35:42.9146204Z 
2025-08-18T20:35:42.9146287Z # repricer.tests.test\_imports
2025-08-18T20:35:42.9146434Z 
2025-08-18T20:35:42.9146523Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T20:35:42.9146686Z 
2025-08-18T20:35:42.9146936Z # repricer.tests.test\_smoke
2025-08-18T20:35:42.9147087Z 
2025-08-18T20:35:42.9147168Z <a id="repricer.tests"></a>
2025-08-18T20:35:42.9147301Z 
2025-08-18T20:35:42.9147377Z # repricer.tests
2025-08-18T20:35:42.9147484Z 
2025-08-18T20:35:42.9147550Z <a id="db"></a>
2025-08-18T20:35:42.9147656Z 
2025-08-18T20:35:42.9147717Z # db
2025-08-18T20:35:42.9147801Z 
2025-08-18T20:35:42.9147879Z <a id="db.utils.views"></a>
2025-08-18T20:35:42.9148014Z 
2025-08-18T20:35:42.9148082Z # db.utils.views
2025-08-18T20:35:42.9148185Z 
2025-08-18T20:35:42.9148288Z <a id="db.utils.views.replace_view"></a>
2025-08-18T20:35:42.9148457Z 
2025-08-18T20:35:42.9148528Z #### replace\_view
2025-08-18T20:35:42.9148644Z 
2025-08-18T20:35:42.9148709Z ```python
2025-08-18T20:35:42.9148907Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T20:35:42.9149159Z ```
2025-08-18T20:35:42.9149247Z 
2025-08-18T20:35:42.9149445Z Drop and recreate a SQL view atomically.
2025-08-18T20:35:42.9149614Z 
2025-08-18T20:35:42.9149691Z <a id="db.utils"></a>
2025-08-18T20:35:42.9149809Z 
2025-08-18T20:35:42.9149881Z # db.utils
2025-08-18T20:35:42.9149976Z 
2025-08-18T20:35:42.9150056Z <a id="price_importer"></a>
2025-08-18T20:35:42.9150200Z 
2025-08-18T20:35:42.9150271Z # price\_importer
2025-08-18T20:35:42.9150381Z 
2025-08-18T20:35:42.9150493Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T20:35:42.9150688Z 
2025-08-18T20:35:42.9150781Z # price\_importer.services\_common.dsn
2025-08-18T20:35:42.9150946Z 
2025-08-18T20:35:42.9151079Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T20:35:42.9151287Z 
2025-08-18T20:35:42.9151354Z #### build\_dsn
2025-08-18T20:35:42.9151460Z 
2025-08-18T20:35:42.9151524Z ```python
2025-08-18T20:35:42.9151699Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:35:42.9151923Z ```
2025-08-18T20:35:42.9152007Z 
2025-08-18T20:35:42.9152079Z Return safe DSN.
2025-08-18T20:35:42.9152184Z 
2025-08-18T20:35:42.9152541Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T20:35:42.9152754Z 
2025-08-18T20:35:42.9153028Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T20:35:42.9153233Z 
2025-08-18T20:35:42.9153343Z # price\_importer.services\_common.models\_vendor
2025-08-18T20:35:42.9153540Z 
2025-08-18T20:35:42.9153647Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T20:35:42.9153835Z 
2025-08-18T20:35:42.9153937Z # price\_importer.services\_common.db\_url
2025-08-18T20:35:42.9154109Z 
2025-08-18T20:35:42.9154242Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T20:35:42.9154462Z 
2025-08-18T20:35:42.9154529Z #### build\_url
2025-08-18T20:35:42.9154630Z 
2025-08-18T20:35:42.9154695Z ```python
2025-08-18T20:35:42.9154878Z def build_url(async_: bool = True) -> str
2025-08-18T20:35:42.9155103Z ```
2025-08-18T20:35:42.9155195Z 
2025-08-18T20:35:42.9155296Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:35:42.9155472Z 
2025-08-18T20:35:42.9155584Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T20:35:42.9155775Z 
2025-08-18T20:35:42.9155874Z # price\_importer.services\_common.keepa
2025-08-18T20:35:42.9156049Z 
2025-08-18T20:35:42.9156152Z <a id="price_importer.services_common.llm"></a>
2025-08-18T20:35:42.9156334Z 
2025-08-18T20:35:42.9156426Z # price\_importer.services\_common.llm
2025-08-18T20:35:42.9156594Z 
2025-08-18T20:35:42.9156708Z <a id="price_importer.services_common.settings"></a>
2025-08-18T20:35:42.9156904Z 
2025-08-18T20:35:42.9157007Z # price\_importer.services\_common.settings
2025-08-18T20:35:42.9157177Z 
2025-08-18T20:35:42.9157278Z <a id="price_importer.services_common.db"></a>
2025-08-18T20:35:42.9157462Z 
2025-08-18T20:35:42.9157555Z # price\_importer.services\_common.db
2025-08-18T20:35:42.9157718Z 
2025-08-18T20:35:42.9157873Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T20:35:42.9158119Z 
2025-08-18T20:35:42.9158197Z #### build\_sqlalchemy\_url
2025-08-18T20:35:42.9158331Z 
2025-08-18T20:35:42.9158402Z ```python
2025-08-18T20:35:42.9158572Z def build_sqlalchemy_url() -> str
2025-08-18T20:35:42.9158905Z ```
2025-08-18T20:35:42.9158990Z 
2025-08-18T20:35:42.9159085Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:35:42.9159263Z 
2025-08-18T20:35:42.9159514Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T20:35:42.9159743Z 
2025-08-18T20:35:42.9159831Z #### build\_asyncpg\_dsn
2025-08-18T20:35:42.9159963Z 
2025-08-18T20:35:42.9160028Z ```python
2025-08-18T20:35:42.9160211Z def build_asyncpg_dsn() -> str
2025-08-18T20:35:42.9160412Z ```
2025-08-18T20:35:42.9160503Z 
2025-08-18T20:35:42.9160633Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:35:42.9160845Z 
2025-08-18T20:35:42.9160974Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T20:35:42.9161189Z 
2025-08-18T20:35:42.9161258Z #### refresh\_mvs
2025-08-18T20:35:42.9161365Z 
2025-08-18T20:35:42.9161438Z ```python
2025-08-18T20:35:42.9161634Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:35:42.9161896Z ```
2025-08-18T20:35:42.9161979Z 
2025-08-18T20:35:42.9162119Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:35:42.9162340Z 
2025-08-18T20:35:42.9162435Z <a id="price_importer.services_common"></a>
2025-08-18T20:35:42.9162606Z 
2025-08-18T20:35:42.9162699Z # price\_importer.services\_common
2025-08-18T20:35:42.9162853Z 
2025-08-18T20:35:42.9162957Z <a id="price_importer.services_common.base"></a>
2025-08-18T20:35:42.9163139Z 
2025-08-18T20:35:42.9163237Z # price\_importer.services\_common.base
2025-08-18T20:35:42.9163404Z 
2025-08-18T20:35:42.9163494Z <a id="price_importer.normaliser"></a>
2025-08-18T20:35:42.9163665Z 
2025-08-18T20:35:42.9163751Z # price\_importer.normaliser
2025-08-18T20:35:42.9163891Z 
2025-08-18T20:35:42.9164001Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T20:35:42.9164184Z 
2025-08-18T20:35:42.9164272Z # price\_importer.common.models\_vendor
2025-08-18T20:35:42.9164433Z 
2025-08-18T20:35:42.9164533Z <a id="price_importer.common.db_url"></a>
2025-08-18T20:35:42.9164706Z 
2025-08-18T20:35:42.9164911Z # price\_importer.common.db\_url
2025-08-18T20:35:42.9165066Z 
2025-08-18T20:35:42.9165172Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T20:35:42.9165359Z 
2025-08-18T20:35:42.9165430Z #### make\_dsn
2025-08-18T20:35:42.9165532Z 
2025-08-18T20:35:42.9165596Z ```python
2025-08-18T20:35:42.9165777Z def make_dsn(async_: bool = False) -> str
2025-08-18T20:35:42.9166001Z ```
2025-08-18T20:35:42.9166090Z 
2025-08-18T20:35:42.9166210Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T20:35:42.9166407Z 
2025-08-18T20:35:42.9166516Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T20:35:42.9166713Z 
2025-08-18T20:35:42.9166778Z #### build\_url
2025-08-18T20:35:42.9166880Z 
2025-08-18T20:35:42.9166950Z ```python
2025-08-18T20:35:42.9167137Z def build_url(async_: bool = False) -> str
2025-08-18T20:35:42.9167368Z ```
2025-08-18T20:35:42.9167450Z 
2025-08-18T20:35:42.9167575Z Return Postgres DSN built from environment variables.
2025-08-18T20:35:42.9167785Z 
2025-08-18T20:35:42.9167877Z <a id="price_importer.common"></a>
2025-08-18T20:35:42.9168033Z 
2025-08-18T20:35:42.9168113Z # price\_importer.common
2025-08-18T20:35:42.9168247Z 
2025-08-18T20:35:42.9168337Z <a id="price_importer.common.base"></a>
2025-08-18T20:35:42.9168501Z 
2025-08-18T20:35:42.9168592Z # price\_importer.common.base
2025-08-18T20:35:42.9168736Z 
2025-08-18T20:35:42.9168832Z <a id="price_importer.tests.conftest"></a>
2025-08-18T20:35:42.9169009Z 
2025-08-18T20:35:42.9169096Z # price\_importer.tests.conftest
2025-08-18T20:35:42.9169244Z 
2025-08-18T20:35:42.9169529Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T20:35:42.9169735Z 
2025-08-18T20:35:42.9169827Z # price\_importer.tests.test\_reader
2025-08-18T20:35:42.9169986Z 
2025-08-18T20:35:42.9170094Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T20:35:42.9170273Z 
2025-08-18T20:35:42.9170363Z # price\_importer.tests.test\_imports
2025-08-18T20:35:42.9170529Z 
2025-08-18T20:35:42.9170754Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T20:35:42.9170933Z 
2025-08-18T20:35:42.9171020Z # price\_importer.tests.test\_smoke
2025-08-18T20:35:42.9171186Z 
2025-08-18T20:35:42.9171292Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T20:35:42.9171480Z 
2025-08-18T20:35:42.9171580Z # price\_importer.tests.test\_normaliser
2025-08-18T20:35:42.9171746Z 
2025-08-18T20:35:42.9171834Z <a id="price_importer.tests"></a>
2025-08-18T20:35:42.9171989Z 
2025-08-18T20:35:42.9172066Z # price\_importer.tests
2025-08-18T20:35:42.9172191Z 
2025-08-18T20:35:42.9172277Z <a id="price_importer.reader"></a>
2025-08-18T20:35:42.9172468Z 
2025-08-18T20:35:42.9172547Z # price\_importer.reader
2025-08-18T20:35:42.9172673Z 
2025-08-18T20:35:42.9172772Z <a id="price_importer.repository"></a>
2025-08-18T20:35:42.9172937Z 
2025-08-18T20:35:42.9173022Z # price\_importer.repository
2025-08-18T20:35:42.9173169Z 
2025-08-18T20:35:42.9173254Z <a id="price_importer.import"></a>
2025-08-18T20:35:42.9173404Z 
2025-08-18T20:35:42.9173486Z # price\_importer.import
2025-08-18T20:35:42.9173627Z 
2025-08-18T20:35:42.9173701Z <a id="fees_h10"></a>
2025-08-18T20:35:42.9173819Z 
2025-08-18T20:35:42.9173894Z # fees\_h10
2025-08-18T20:35:42.9173988Z 
2025-08-18T20:35:42.9174066Z <a id="fees_h10.worker"></a>
2025-08-18T20:35:42.9174205Z 
2025-08-18T20:35:42.9174274Z # fees\_h10.worker
2025-08-18T20:35:42.9174384Z 
2025-08-18T20:35:42.9174482Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T20:35:42.9174666Z 
2025-08-18T20:35:42.9174740Z #### list\_active\_asins
2025-08-18T20:35:42.9174864Z 
2025-08-18T20:35:42.9174935Z ```python
2025-08-18T20:35:42.9175108Z def list_active_asins() -> list[str]
2025-08-18T20:35:42.9175325Z ```
2025-08-18T20:35:42.9175407Z 
2025-08-18T20:35:42.9175523Z Return known ASINs or an empty list if unavailable.
2025-08-18T20:35:42.9175724Z 
2025-08-18T20:35:42.9175809Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T20:35:42.9175965Z 
2025-08-18T20:35:42.9176045Z # fees\_h10.tests.test\_smoke
2025-08-18T20:35:42.9176193Z 
2025-08-18T20:35:42.9176392Z <a id="fees_h10.tests"></a>
2025-08-18T20:35:42.9176524Z 
2025-08-18T20:35:42.9176596Z # fees\_h10.tests
2025-08-18T20:35:42.9176702Z 
2025-08-18T20:35:42.9176778Z <a id="fees_h10.client"></a>
2025-08-18T20:35:42.9176914Z 
2025-08-18T20:35:42.9176981Z # fees\_h10.client
2025-08-18T20:35:42.9177086Z 
2025-08-18T20:35:42.9177167Z <a id="fees_h10.repository"></a>
2025-08-18T20:35:42.9177319Z 
2025-08-18T20:35:42.9177392Z # fees\_h10.repository
2025-08-18T20:35:42.9177511Z 
2025-08-18T20:35:42.9177589Z <a id="emailer"></a>
2025-08-18T20:35:42.9177703Z 
2025-08-18T20:35:42.9177766Z # emailer
2025-08-18T20:35:42.9177857Z 
2025-08-18T20:35:42.9177965Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T20:35:42.9178142Z 
2025-08-18T20:35:42.9178233Z # emailer.tests.test\_import\_emailer
2025-08-18T20:35:42.9178398Z 
2025-08-18T20:35:42.9178484Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T20:35:42.9178641Z 
2025-08-18T20:35:42.9178729Z # emailer.tests.test\_smoke
2025-08-18T20:35:42.9178871Z 
2025-08-18T20:35:42.9178950Z <a id="emailer.tests"></a>
2025-08-18T20:35:42.9179081Z 
2025-08-18T20:35:42.9179156Z # emailer.tests
2025-08-18T20:35:42.9179261Z 
2025-08-18T20:35:42.9179452Z <a id="emailer.generate_body"></a>
2025-08-18T20:35:42.9179615Z 
2025-08-18T20:35:42.9179692Z # emailer.generate\_body
2025-08-18T20:35:42.9179821Z 
2025-08-18T20:35:42.9179899Z <a id="llm_server"></a>
2025-08-18T20:35:42.9180018Z 
2025-08-18T20:35:42.9180085Z # llm\_server
2025-08-18T20:35:42.9180183Z 
2025-08-18T20:35:42.9180268Z <a id="llm_server.app"></a>
2025-08-18T20:35:42.9180400Z 
2025-08-18T20:35:42.9180470Z # llm\_server.app
2025-08-18T20:35:42.9180584Z 
