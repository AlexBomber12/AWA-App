2025-08-19T20:27:00.8282211Z ##[group]Run pydoc-markdown
2025-08-19T20:27:00.8282530Z [36;1mpydoc-markdown[0m
2025-08-19T20:27:00.8323620Z shell: /usr/bin/bash -e {0}
2025-08-19T20:27:00.8323866Z env:
2025-08-19T20:27:00.8324111Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:27:00.8324558Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T20:27:00.8324979Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:27:00.8325343Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:27:00.8325706Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:27:00.8326059Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T20:27:00.8326358Z ##[endgroup]
2025-08-19T20:27:01.1525434Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T20:27:01.1526117Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T20:27:01.1526564Z In "pydoc-markdown.yml"
2025-08-19T20:27:01.1527229Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T20:27:01.1527928Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T20:27:01.1528677Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T20:27:01.1529188Z 
2025-08-19T20:27:01.4938313Z <a id="__init__"></a>
2025-08-19T20:27:01.4938812Z 
2025-08-19T20:27:01.4938940Z # \_\_init\_\_
2025-08-19T20:27:01.4939115Z 
2025-08-19T20:27:01.4939233Z <a id="api"></a>
2025-08-19T20:27:01.4939440Z 
2025-08-19T20:27:01.4939571Z # api
2025-08-19T20:27:01.4939748Z 
2025-08-19T20:27:01.4939886Z <a id="api.errors"></a>
2025-08-19T20:27:01.4940105Z 
2025-08-19T20:27:01.4940229Z # api.errors
2025-08-19T20:27:01.4940419Z 
2025-08-19T20:27:01.4940560Z <a id="api.sentry_config"></a>
2025-08-19T20:27:01.4940832Z 
2025-08-19T20:27:01.4940967Z # api.sentry\_config
2025-08-19T20:27:01.4941185Z 
2025-08-19T20:27:01.4941379Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T20:27:01.4941689Z 
2025-08-19T20:27:01.4941839Z # api.tests.test\_stats\_contracts
2025-08-19T20:27:01.4942208Z 
2025-08-19T20:27:01.4942371Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T20:27:01.4942737Z 
2025-08-19T20:27:01.4942933Z # api.tests.test\_sentry\_scrub
2025-08-19T20:27:01.4943270Z 
2025-08-19T20:27:01.4943481Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T20:27:01.4943886Z 
2025-08-19T20:27:01.4944086Z # api.tests.test\_roi\_basic\_auth
2025-08-19T20:27:01.4944436Z 
2025-08-19T20:27:01.4944632Z <a id="api.tests.test_errors_json"></a>
2025-08-19T20:27:01.4945021Z 
2025-08-19T20:27:01.4945208Z # api.tests.test\_errors\_json
2025-08-19T20:27:01.4945495Z 
2025-08-19T20:27:01.4945656Z <a id="api.tests.test_llm"></a>
2025-08-19T20:27:01.4945943Z 
2025-08-19T20:27:01.4946086Z # api.tests.test\_llm
2025-08-19T20:27:01.4946321Z 
2025-08-19T20:27:01.4946508Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T20:27:01.4947243Z 
2025-08-19T20:27:01.4947407Z # api.tests.test\_roi\_filters
2025-08-19T20:27:01.4947616Z 
2025-08-19T20:27:01.4947728Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T20:27:01.4948301Z 
2025-08-19T20:27:01.4948410Z # api.tests.test\_sentry\_event
2025-08-19T20:27:01.4948591Z 
2025-08-19T20:27:01.4948750Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T20:27:01.4949017Z 
2025-08-19T20:27:01.4949125Z ## DummyTransport Objects
2025-08-19T20:27:01.4949292Z 
2025-08-19T20:27:01.4949377Z ```python
2025-08-19T20:27:01.4949597Z class DummyTransport()
2025-08-19T20:27:01.4949826Z ```
2025-08-19T20:27:01.4949938Z 
2025-08-19T20:27:01.4950160Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T20:27:01.4950500Z 
2025-08-19T20:27:01.4950599Z #### capture\_envelope
2025-08-19T20:27:01.4950750Z 
2025-08-19T20:27:01.4950831Z ```python
2025-08-19T20:27:01.4951060Z def capture_envelope(envelope)
2025-08-19T20:27:01.4951318Z ```
2025-08-19T20:27:01.4951431Z 
2025-08-19T20:27:01.4951589Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T20:27:01.4951862Z 
2025-08-19T20:27:01.4951968Z <a id="api.tests.test_cors"></a>
2025-08-19T20:27:01.4952395Z 
2025-08-19T20:27:01.4952488Z # api.tests.test\_cors
2025-08-19T20:27:01.4952638Z 
2025-08-19T20:27:01.4952750Z <a id="api.tests.test_imports"></a>
2025-08-19T20:27:01.4952950Z 
2025-08-19T20:27:01.4953049Z # api.tests.test\_imports
2025-08-19T20:27:01.4953219Z 
2025-08-19T20:27:01.4953328Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T20:27:01.4953535Z 
2025-08-19T20:27:01.4953636Z # api.tests.test\_rate\_limit
2025-08-19T20:27:01.4953822Z 
2025-08-19T20:27:01.4953943Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T20:27:01.4954139Z 
2025-08-19T20:27:01.4954209Z #### app
2025-08-19T20:27:01.4954301Z 
2025-08-19T20:27:01.4954363Z noqa: E402
2025-08-19T20:27:01.4954457Z 
2025-08-19T20:27:01.4954543Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T20:27:01.4954715Z 
2025-08-19T20:27:01.4954801Z # api.tests.test\_entrypoint
2025-08-19T20:27:01.4954947Z 
2025-08-19T20:27:01.4955032Z <a id="api.tests.test_health"></a>
2025-08-19T20:27:01.4955197Z 
2025-08-19T20:27:01.4955285Z # api.tests.test\_health
2025-08-19T20:27:01.4955415Z 
2025-08-19T20:27:01.4955497Z <a id="api.tests.test_score"></a>
2025-08-19T20:27:01.4955648Z 
2025-08-19T20:27:01.4955721Z # api.tests.test\_score
2025-08-19T20:27:01.4955840Z 
2025-08-19T20:27:01.4955919Z <a id="api.logging_config"></a>
2025-08-19T20:27:01.4956065Z 
2025-08-19T20:27:01.4956134Z # api.logging\_config
2025-08-19T20:27:01.4956249Z 
2025-08-19T20:27:01.4956336Z <a id="api.migrations.env"></a>
2025-08-19T20:27:01.4956474Z 
2025-08-19T20:27:01.4956546Z # api.migrations.env
2025-08-19T20:27:01.4956814Z 
2025-08-19T20:27:01.4956943Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T20:27:01.4957140Z 
2025-08-19T20:27:01.4957245Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T20:27:01.4957432Z 
2025-08-19T20:27:01.4957537Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T20:27:01.4957720Z 
2025-08-19T20:27:01.4957819Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T20:27:01.4957996Z 
2025-08-19T20:27:01.4958143Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T20:27:01.4958379Z 
2025-08-19T20:27:01.4958511Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T20:27:01.4958721Z 
2025-08-19T20:27:01.4958840Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T20:27:01.4959040Z 
2025-08-19T20:27:01.4959144Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T20:27:01.4959321Z 
2025-08-19T20:27:01.4959439Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T20:27:01.4959628Z 
2025-08-19T20:27:01.4959729Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T20:27:01.4959907Z 
2025-08-19T20:27:01.4960031Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T20:27:01.4960227Z 
2025-08-19T20:27:01.4960334Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T20:27:01.4960529Z 
2025-08-19T20:27:01.4960655Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T20:27:01.4961118Z 
2025-08-19T20:27:01.4961234Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T20:27:01.4961465Z 
2025-08-19T20:27:01.4961596Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T20:27:01.4961797Z 
2025-08-19T20:27:01.4961906Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T20:27:01.4962094Z 
2025-08-19T20:27:01.4962234Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T20:27:01.4962451Z 
2025-08-19T20:27:01.4962570Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T20:27:01.4962772Z 
2025-08-19T20:27:01.4962896Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T20:27:01.4963096Z 
2025-08-19T20:27:01.4963212Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T20:27:01.4963396Z 
2025-08-19T20:27:01.4963530Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T20:27:01.4963744Z 
2025-08-19T20:27:01.4963860Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T20:27:01.4964222Z 
2025-08-19T20:27:01.4964333Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T20:27:01.4964525Z 
2025-08-19T20:27:01.4964618Z # api.migrations.versions.0001\_baseline
2025-08-19T20:27:01.4964785Z 
2025-08-19T20:27:01.4964880Z <a id="api.migrations.versions"></a>
2025-08-19T20:27:01.4965038Z 
2025-08-19T20:27:01.4965119Z # api.migrations.versions
2025-08-19T20:27:01.4965253Z 
2025-08-19T20:27:01.4965331Z <a id="api.migrations"></a>
2025-08-19T20:27:01.4965463Z 
2025-08-19T20:27:01.4965531Z # api.migrations
2025-08-19T20:27:01.4965823Z 
2025-08-19T20:27:01.4965949Z <a id="api.db"></a>
2025-08-19T20:27:01.4966135Z 
2025-08-19T20:27:01.4966261Z # api.db
2025-08-19T20:27:01.4966420Z 
2025-08-19T20:27:01.4966568Z <a id="api.routes.score"></a>
2025-08-19T20:27:01.4967029Z 
2025-08-19T20:27:01.4967159Z # api.routes.score
2025-08-19T20:27:01.4967399Z 
2025-08-19T20:27:01.4967541Z <a id="api.routes.stats"></a>
2025-08-19T20:27:01.4967794Z 
2025-08-19T20:27:01.4967930Z # api.routes.stats
2025-08-19T20:27:01.4968155Z 
2025-08-19T20:27:01.4968253Z <a id="api.routes.roi"></a>
2025-08-19T20:27:01.4968388Z 
2025-08-19T20:27:01.4968456Z # api.routes.roi
2025-08-19T20:27:01.4968562Z 
2025-08-19T20:27:01.4968652Z <a id="api.routes.health"></a>
2025-08-19T20:27:01.4968789Z 
2025-08-19T20:27:01.4968862Z # api.routes.health
2025-08-19T20:27:01.4968975Z 
2025-08-19T20:27:01.4969067Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T20:27:01.4969236Z 
2025-08-19T20:27:01.4969307Z #### MAX\_SKEW
2025-08-19T20:27:01.4969407Z 
2025-08-19T20:27:01.4969469Z seconds
2025-08-19T20:27:01.4969557Z 
2025-08-19T20:27:01.4969655Z <a id="api.routes.health.health"></a>
2025-08-19T20:27:01.4969814Z 
2025-08-19T20:27:01.4969878Z #### health
2025-08-19T20:27:01.4969975Z 
2025-08-19T20:27:01.4970040Z ```python
2025-08-19T20:27:01.4970238Z @router.get("/health", include_in_schema=False)
2025-08-19T20:27:01.4970642Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T20:27:01.4970985Z ```
2025-08-19T20:27:01.4971081Z 
2025-08-19T20:27:01.4971198Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T20:27:01.4971393Z 
2025-08-19T20:27:01.4971489Z <a id="api.routes.repository"></a>
2025-08-19T20:27:01.4971643Z 
2025-08-19T20:27:01.4971722Z # api.routes.repository
2025-08-19T20:27:01.4971850Z 
2025-08-19T20:27:01.4971923Z <a id="api.routes"></a>
2025-08-19T20:27:01.4972037Z 
2025-08-19T20:27:01.4972106Z # api.routes
2025-08-19T20:27:01.4972203Z 
2025-08-19T20:27:01.4972282Z <a id="api.models.fee"></a>
2025-08-19T20:27:01.4972411Z 
2025-08-19T20:27:01.4972486Z # api.models.fee
2025-08-19T20:27:01.4972588Z 
2025-08-19T20:27:01.4972661Z <a id="api.models"></a>
2025-08-19T20:27:01.4972783Z 
2025-08-19T20:27:01.4972848Z # api.models
2025-08-19T20:27:01.4972941Z 
2025-08-19T20:27:01.4973020Z <a id="api.roi_repository"></a>
2025-08-19T20:27:01.4973167Z 
2025-08-19T20:27:01.4973239Z # api.roi\_repository
2025-08-19T20:27:01.4973353Z 
2025-08-19T20:27:01.4973433Z <a id="api.main"></a>
2025-08-19T20:27:01.4973751Z 
2025-08-19T20:27:01.4973816Z # api.main
2025-08-19T20:27:01.4973915Z 
2025-08-19T20:27:01.4973993Z <a id="api.main.ready"></a>
2025-08-19T20:27:01.4974120Z 
2025-08-19T20:27:01.4974184Z #### ready
2025-08-19T20:27:01.4974280Z 
2025-08-19T20:27:01.4974344Z ```python
2025-08-19T20:27:01.4974608Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T20:27:01.4975044Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T20:27:01.4975395Z                                                                       str]
2025-08-19T20:27:01.4975621Z ```
2025-08-19T20:27:01.4975711Z 
2025-08-19T20:27:01.4975807Z Return 200 only when migrations are at head.
2025-08-19T20:27:01.4975978Z 
2025-08-19T20:27:01.4976051Z <a id="api.config"></a>
2025-08-19T20:27:01.4976174Z 
2025-08-19T20:27:01.4976238Z # api.config
2025-08-19T20:27:01.4976332Z 
2025-08-19T20:27:01.4976413Z <a id="api.security"></a>
2025-08-19T20:27:01.4976538Z 
2025-08-19T20:27:01.4976905Z # api.security
2025-08-19T20:27:01.4977013Z 
2025-08-19T20:27:01.4977086Z <a id="etl"></a>
2025-08-19T20:27:01.4977190Z 
2025-08-19T20:27:01.4977253Z # etl
2025-08-19T20:27:01.4977348Z 
2025-08-19T20:27:01.4977430Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T20:27:01.4977579Z 
2025-08-19T20:27:01.4977659Z # etl.fba\_fee\_ingestor
2025-08-19T20:27:01.4977785Z 
2025-08-19T20:27:01.4977865Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T20:27:01.4978008Z 
2025-08-19T20:27:01.4978088Z # etl.sp\_fees\_ingestor
2025-08-19T20:27:01.4978207Z 
2025-08-19T20:27:01.4978287Z <a id="etl.keepa_ingestor"></a>
2025-08-19T20:27:01.4978431Z 
2025-08-19T20:27:01.4978502Z # etl.keepa\_ingestor
2025-08-19T20:27:01.4978613Z 
2025-08-19T20:27:01.4978692Z <a id="etl.db"></a>
2025-08-19T20:27:01.4978800Z 
2025-08-19T20:27:01.4978862Z # etl.db
2025-08-19T20:27:01.4978956Z 
2025-08-19T20:27:01.4979040Z <a id="etl.dialects.schemas"></a>
2025-08-19T20:27:01.4979182Z 
2025-08-19T20:27:01.4979400Z # etl.dialects.schemas
2025-08-19T20:27:01.4979695Z 
2025-08-19T20:27:01.4979843Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T20:27:01.4980030Z 
2025-08-19T20:27:01.4980127Z # etl.dialects.amazon\_reimbursements
2025-08-19T20:27:01.4980290Z 
2025-08-19T20:27:01.4980388Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T20:27:01.4980565Z 
2025-08-19T20:27:01.4980652Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T20:27:01.4980805Z 
2025-08-19T20:27:01.4980893Z <a id="etl.dialects.test_generic"></a>
2025-08-19T20:27:01.4981058Z 
2025-08-19T20:27:01.4981138Z # etl.dialects.test\_generic
2025-08-19T20:27:01.4981273Z 
2025-08-19T20:27:01.4981370Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T20:27:01.4981532Z 
2025-08-19T20:27:01.4981616Z # etl.dialects.amazon\_returns
2025-08-19T20:27:01.4981758Z 
2025-08-19T20:27:01.4981854Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T20:27:01.4982023Z 
2025-08-19T20:27:01.4982108Z # etl.dialects.amazon\_fee\_preview
2025-08-19T20:27:01.4982267Z 
2025-08-19T20:27:01.4982377Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T20:27:01.4982565Z 
2025-08-19T20:27:01.4982661Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T20:27:01.4982823Z 
2025-08-19T20:27:01.4982920Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T20:27:01.4983092Z 
2025-08-19T20:27:01.4983179Z # etl.dialects.amazon\_settlements
2025-08-19T20:27:01.4983327Z 
2025-08-19T20:27:01.4983404Z <a id="etl.dialects"></a>
2025-08-19T20:27:01.4983537Z 
2025-08-19T20:27:01.4983603Z # etl.dialects
2025-08-19T20:27:01.4983702Z 
2025-08-19T20:27:01.4983778Z <a id="ingest"></a>
2025-08-19T20:27:01.4983885Z 
2025-08-19T20:27:01.4983948Z # ingest
2025-08-19T20:27:01.4984044Z 
2025-08-19T20:27:01.4984127Z <a id="ingest.maintenance"></a>
2025-08-19T20:27:01.4984268Z 
2025-08-19T20:27:01.4984342Z # ingest.maintenance
2025-08-19T20:27:01.4984463Z 
2025-08-19T20:27:01.4984544Z <a id="ingest.copy_loader"></a>
2025-08-19T20:27:01.4984680Z 
2025-08-19T20:27:01.4984758Z # ingest.copy\_loader
2025-08-19T20:27:01.4984877Z 
2025-08-19T20:27:01.4985120Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T20:27:01.4985306Z 
2025-08-19T20:27:01.4985384Z #### copy\_df\_via\_temp
2025-08-19T20:27:01.4985510Z 
2025-08-19T20:27:01.4985574Z ```python
2025-08-19T20:27:01.4985754Z def copy_df_via_temp(engine: Engine,
2025-08-19T20:27:01.4985988Z                      df: pd.DataFrame,
2025-08-19T20:27:01.4986222Z                      target_table: str,
2025-08-19T20:27:01.4986447Z                      *,
2025-08-19T20:27:01.4986654Z                      target_schema: Optional[str] = None,
2025-08-19T20:27:01.4987063Z                      columns: Sequence[str],
2025-08-19T20:27:01.4987327Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T20:27:01.4987611Z                      analyze_after: bool = False,
2025-08-19T20:27:01.4987872Z                      connection: Any | None = None) -> int
2025-08-19T20:27:01.4988109Z ```
2025-08-19T20:27:01.4988193Z 
2025-08-19T20:27:01.4988353Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T20:27:01.4988713Z 
2025-08-19T20:27:01.4988799Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T20:27:01.4988953Z 
2025-08-19T20:27:01.4989039Z # ingest.tests.test\_smoke
2025-08-19T20:27:01.4989168Z 
2025-08-19T20:27:01.4989243Z <a id="ingest.tests"></a>
2025-08-19T20:27:01.4989371Z 
2025-08-19T20:27:01.4989438Z # ingest.tests
2025-08-19T20:27:01.4989541Z 
2025-08-19T20:27:01.4989631Z <a id="ingest.upload_router"></a>
2025-08-19T20:27:01.4989778Z 
2025-08-19T20:27:01.4989851Z # ingest.upload\_router
2025-08-19T20:27:01.4989969Z 
2025-08-19T20:27:01.4990056Z <a id="ingest.email_watcher"></a>
2025-08-19T20:27:01.4990198Z 
2025-08-19T20:27:01.4990272Z # ingest.email\_watcher
2025-08-19T20:27:01.4990392Z 
2025-08-19T20:27:01.4990479Z <a id="ingest.email_watcher.main"></a>
2025-08-19T20:27:01.4990640Z 
2025-08-19T20:27:01.4990703Z #### main
2025-08-19T20:27:01.4990801Z 
2025-08-19T20:27:01.4990866Z ```python
2025-08-19T20:27:01.4991037Z def main() -> dict[str, str]
2025-08-19T20:27:01.4991244Z ```
2025-08-19T20:27:01.4991326Z 
2025-08-19T20:27:01.4991474Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T20:27:01.4991696Z 
2025-08-19T20:27:01.4991825Z Returns {"status": "success"} when processing completes.
2025-08-19T20:27:01.4992036Z 
2025-08-19T20:27:01.4992113Z <a id="ingest.tasks"></a>
2025-08-19T20:27:01.4992239Z 
2025-08-19T20:27:01.4992311Z # ingest.tasks
2025-08-19T20:27:01.4992415Z 
2025-08-19T20:27:01.4992513Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T20:27:01.4992686Z 
2025-08-19T20:27:01.4992765Z #### task\_import\_file
2025-08-19T20:27:01.4992879Z 
2025-08-19T20:27:01.4992943Z ```python
2025-08-19T20:27:01.4993159Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T20:27:01.4993459Z def task_import_file(self: Any,
2025-08-19T20:27:01.4993670Z                      uri: str,
2025-08-19T20:27:01.4993894Z                      report_type: str | None = None,
2025-08-19T20:27:01.4994165Z                      force: bool = False) -> dict[str, Any]
2025-08-19T20:27:01.4994410Z ```
2025-08-19T20:27:01.4994493Z 
2025-08-19T20:27:01.4994629Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T20:27:01.4994831Z 
2025-08-19T20:27:01.4994914Z <a id="ingest.celery_app"></a>
2025-08-19T20:27:01.4995059Z 
2025-08-19T20:27:01.4995132Z # ingest.celery\_app
2025-08-19T20:27:01.4995245Z 
2025-08-19T20:27:01.4995332Z <a id="ingest.ingest_router"></a>
2025-08-19T20:27:01.4995479Z 
2025-08-19T20:27:01.4995554Z # ingest.ingest\_router
2025-08-19T20:27:01.4995674Z 
2025-08-19T20:27:01.4995756Z <a id="logistics_etl"></a>
2025-08-19T20:27:01.4995883Z 
2025-08-19T20:27:01.4995951Z # logistics\_etl
2025-08-19T20:27:01.4996060Z 
2025-08-19T20:27:01.4996136Z Daily logistics ETL job.
2025-08-19T20:27:01.4996258Z 
2025-08-19T20:27:01.4996345Z <a id="logistics_etl.__main__"></a>
2025-08-19T20:27:01.4996494Z 
2025-08-19T20:27:01.4996572Z # logistics\_etl.\_\_main\_\_
2025-08-19T20:27:01.4996820Z 
2025-08-19T20:27:01.4997248Z <a id="logistics_etl.dsn"></a>
2025-08-19T20:27:01.4997503Z 
2025-08-19T20:27:01.4997635Z # logistics\_etl.dsn
2025-08-19T20:27:01.4997847Z 
2025-08-19T20:27:01.4998062Z Local DSN builder to avoid cross-service dependency.
2025-08-19T20:27:01.4998425Z 
2025-08-19T20:27:01.4998595Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T20:27:01.4998864Z 
2025-08-19T20:27:01.4998933Z #### build\_dsn
2025-08-19T20:27:01.4999041Z 
2025-08-19T20:27:01.4999114Z ```python
2025-08-19T20:27:01.4999293Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:27:01.4999526Z ```
2025-08-19T20:27:01.4999609Z 
2025-08-19T20:27:01.4999752Z Return a Postgres DSN assembled from environment variables.
2025-08-19T20:27:01.4999981Z 
2025-08-19T20:27:01.5000138Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T20:27:01.5000543Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T20:27:01.5000887Z error when any required variable is missing.
2025-08-19T20:27:01.5001062Z 
2025-08-19T20:27:01.5001630Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T20:27:01.5001819Z 
2025-08-19T20:27:01.5001906Z # logistics\_etl.tests.conftest
2025-08-19T20:27:01.5002061Z 
2025-08-19T20:27:01.5002171Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T20:27:01.5002366Z 
2025-08-19T20:27:01.5002463Z # logistics\_etl.tests.test\_repository
2025-08-19T20:27:01.5002630Z 
2025-08-19T20:27:01.5002728Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T20:27:01.5002900Z 
2025-08-19T20:27:01.5002991Z # logistics\_etl.tests.test\_cron
2025-08-19T20:27:01.5003139Z 
2025-08-19T20:27:01.5003236Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T20:27:01.5003416Z 
2025-08-19T20:27:01.5003503Z # logistics\_etl.tests.test\_imports
2025-08-19T20:27:01.5003658Z 
2025-08-19T20:27:01.5003758Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T20:27:01.5003929Z 
2025-08-19T20:27:01.5004011Z # logistics\_etl.tests.test\_smoke
2025-08-19T20:27:01.5004166Z 
2025-08-19T20:27:01.5004268Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T20:27:01.5004450Z 
2025-08-19T20:27:01.5004533Z # logistics\_etl.tests.test\_client
2025-08-19T20:27:01.5004692Z 
2025-08-19T20:27:01.5004777Z <a id="logistics_etl.tests"></a>
2025-08-19T20:27:01.5004920Z 
2025-08-19T20:27:01.5005000Z # logistics\_etl.tests
2025-08-19T20:27:01.5005118Z 
2025-08-19T20:27:01.5005199Z <a id="logistics_etl.flow"></a>
2025-08-19T20:27:01.5005338Z 
2025-08-19T20:27:01.5005415Z # logistics\_etl.flow
2025-08-19T20:27:01.5005533Z 
2025-08-19T20:27:01.5005617Z <a id="logistics_etl.client"></a>
2025-08-19T20:27:01.5005770Z 
2025-08-19T20:27:01.5005843Z # logistics\_etl.client
2025-08-19T20:27:01.5005963Z 
2025-08-19T20:27:01.5006043Z <a id="logistics_etl.cron"></a>
2025-08-19T20:27:01.5006186Z 
2025-08-19T20:27:01.5006261Z # logistics\_etl.cron
2025-08-19T20:27:01.5006373Z 
2025-08-19T20:27:01.5006459Z <a id="logistics_etl.db"></a>
2025-08-19T20:27:01.5006595Z 
2025-08-19T20:27:01.5006794Z # logistics\_etl.db
2025-08-19T20:27:01.5006918Z 
2025-08-19T20:27:01.5007010Z <a id="logistics_etl.repository"></a>
2025-08-19T20:27:01.5007171Z 
2025-08-19T20:27:01.5079642Z # logistics\_etl.repository
2025-08-19T20:27:01.5080059Z 
2025-08-19T20:27:01.5080226Z <a id="alert_bot"></a>
2025-08-19T20:27:01.5080490Z 
2025-08-19T20:27:01.5080626Z # alert\_bot
2025-08-19T20:27:01.5080838Z 
2025-08-19T20:27:01.5081019Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T20:27:01.5081369Z 
2025-08-19T20:27:01.5081534Z # alert\_bot.tests.test\_smoke
2025-08-19T20:27:01.5081831Z 
2025-08-19T20:27:01.5081934Z <a id="alert_bot.tests"></a>
2025-08-19T20:27:01.5082138Z 
2025-08-19T20:27:01.5082229Z # alert\_bot.tests
2025-08-19T20:27:01.5082366Z 
2025-08-19T20:27:01.5082470Z <a id="alert_bot.alert_bot"></a>
2025-08-19T20:27:01.5082652Z 
2025-08-19T20:27:01.5082750Z # alert\_bot.alert\_bot
2025-08-19T20:27:01.5082896Z 
2025-08-19T20:27:01.5082993Z <a id="alert_bot.rules"></a>
2025-08-19T20:27:01.5083166Z 
2025-08-19T20:27:01.5083249Z # alert\_bot.rules
2025-08-19T20:27:01.5083623Z 
2025-08-19T20:27:01.5083710Z <a id="common"></a>
2025-08-19T20:27:01.5083859Z 
2025-08-19T20:27:01.5083925Z # common
2025-08-19T20:27:01.5084015Z 
2025-08-19T20:27:01.5084094Z <a id="common.dsn"></a>
2025-08-19T20:27:01.5084211Z 
2025-08-19T20:27:01.5084275Z # common.dsn
2025-08-19T20:27:01.5084377Z 
2025-08-19T20:27:01.5084460Z <a id="common.dsn.build_dsn"></a>
2025-08-19T20:27:01.5084608Z 
2025-08-19T20:27:01.5084673Z #### build\_dsn
2025-08-19T20:27:01.5084779Z 
2025-08-19T20:27:01.5084847Z ```python
2025-08-19T20:27:01.5085026Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:27:01.5085246Z ```
2025-08-19T20:27:01.5085330Z 
2025-08-19T20:27:01.5085465Z Return a Postgres DSN, validating required variables.
2025-08-19T20:27:01.5085667Z 
2025-08-19T20:27:01.5085851Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T20:27:01.5086288Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T20:27:01.5086858Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T20:27:01.5087350Z missing.
2025-08-19T20:27:01.5087442Z 
2025-08-19T20:27:01.5087530Z <a id="common.models_vendor"></a>
2025-08-19T20:27:01.5087676Z 
2025-08-19T20:27:01.5087750Z # common.models\_vendor
2025-08-19T20:27:01.5087874Z 
2025-08-19T20:27:01.5087962Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T20:27:01.5088126Z 
2025-08-19T20:27:01.5088191Z ## Vendor Objects
2025-08-19T20:27:01.5088302Z 
2025-08-19T20:27:01.5088365Z ```python
2025-08-19T20:27:01.5088527Z class Vendor(Base)
2025-08-19T20:27:01.5088692Z ```
2025-08-19T20:27:01.5088773Z 
2025-08-19T20:27:01.5088855Z Vendor of inventory items.
2025-08-19T20:27:01.5088984Z 
2025-08-19T20:27:01.5089087Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T20:27:01.5089269Z 
2025-08-19T20:27:01.5089342Z ## VendorPrice Objects
2025-08-19T20:27:01.5089458Z 
2025-08-19T20:27:01.5089520Z ```python
2025-08-19T20:27:01.5089686Z class VendorPrice(Base)
2025-08-19T20:27:01.5089859Z ```
2025-08-19T20:27:01.5089956Z 
2025-08-19T20:27:01.5090059Z Association table linking vendors to pricing.
2025-08-19T20:27:01.5090240Z 
2025-08-19T20:27:01.5090324Z <a id="common.db_url"></a>
2025-08-19T20:27:01.5090453Z 
2025-08-19T20:27:01.5090519Z # common.db\_url
2025-08-19T20:27:01.5090628Z 
2025-08-19T20:27:01.5090711Z <a id="common.db_url.build_url"></a>
2025-08-19T20:27:01.5090865Z 
2025-08-19T20:27:01.5090928Z #### build\_url
2025-08-19T20:27:01.5091034Z 
2025-08-19T20:27:01.5091096Z ```python
2025-08-19T20:27:01.5091272Z def build_url(async_: bool = True) -> str
2025-08-19T20:27:01.5091491Z ```
2025-08-19T20:27:01.5091571Z 
2025-08-19T20:27:01.5091674Z Return Postgres DSN from env or PG_* parts.
2025-08-19T20:27:01.5091845Z 
2025-08-19T20:27:01.5091923Z <a id="common.keepa"></a>
2025-08-19T20:27:01.5092060Z 
2025-08-19T20:27:01.5092127Z # common.keepa
2025-08-19T20:27:01.5092231Z 
2025-08-19T20:27:01.5092305Z <a id="common.llm"></a>
2025-08-19T20:27:01.5092431Z 
2025-08-19T20:27:01.5092499Z # common.llm
2025-08-19T20:27:01.5092603Z 
2025-08-19T20:27:01.5092687Z <a id="common.settings"></a>
2025-08-19T20:27:01.5092821Z 
2025-08-19T20:27:01.5092889Z # common.settings
2025-08-19T20:27:01.5092999Z 
2025-08-19T20:27:01.5093069Z <a id="common.db"></a>
2025-08-19T20:27:01.5093182Z 
2025-08-19T20:27:01.5093245Z # common.db
2025-08-19T20:27:01.5093342Z 
2025-08-19T20:27:01.5093436Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T20:27:01.5093604Z 
2025-08-19T20:27:01.5093686Z #### build\_sqlalchemy\_url
2025-08-19T20:27:01.5093823Z 
2025-08-19T20:27:01.5093885Z ```python
2025-08-19T20:27:01.5094063Z def build_sqlalchemy_url() -> str
2025-08-19T20:27:01.5094268Z ```
2025-08-19T20:27:01.5094357Z 
2025-08-19T20:27:01.5094453Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T20:27:01.5094619Z 
2025-08-19T20:27:01.5094708Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T20:27:01.5094882Z 
2025-08-19T20:27:01.5094956Z #### build\_asyncpg\_dsn
2025-08-19T20:27:01.5095081Z 
2025-08-19T20:27:01.5095155Z ```python
2025-08-19T20:27:01.5095459Z def build_asyncpg_dsn() -> str
2025-08-19T20:27:01.5095662Z ```
2025-08-19T20:27:01.5095746Z 
2025-08-19T20:27:01.5095874Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T20:27:01.5096095Z 
2025-08-19T20:27:01.5096181Z <a id="common.db.refresh_mvs"></a>
2025-08-19T20:27:01.5096331Z 
2025-08-19T20:27:01.5096395Z #### refresh\_mvs
2025-08-19T20:27:01.5096503Z 
2025-08-19T20:27:01.5096563Z ```python
2025-08-19T20:27:01.5096872Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T20:27:01.5097113Z ```
2025-08-19T20:27:01.5097195Z 
2025-08-19T20:27:01.5097336Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T20:27:01.5097546Z 
2025-08-19T20:27:01.5097623Z <a id="common.config"></a>
2025-08-19T20:27:01.5097754Z 
2025-08-19T20:27:01.5097821Z # common.config
2025-08-19T20:27:01.5097921Z 
2025-08-19T20:27:01.5097998Z <a id="common.base"></a>
2025-08-19T20:27:01.5098119Z 
2025-08-19T20:27:01.5098183Z # common.base
2025-08-19T20:27:01.5098405Z 
2025-08-19T20:27:01.5098490Z <a id="common.base.Base"></a>
2025-08-19T20:27:01.5098625Z 
2025-08-19T20:27:01.5098690Z ## Base Objects
2025-08-19T20:27:01.5098796Z 
2025-08-19T20:27:01.5098857Z ```python
2025-08-19T20:27:01.5099020Z class Base(DeclarativeBase)
2025-08-19T20:27:01.5099213Z ```
2025-08-19T20:27:01.5099293Z 
2025-08-19T20:27:01.5099380Z Base class for SQLAlchemy models.
2025-08-19T20:27:01.5099525Z 
2025-08-19T20:27:01.5099596Z <a id="repricer"></a>
2025-08-19T20:27:01.5099710Z 
2025-08-19T20:27:01.5099780Z # repricer
2025-08-19T20:27:01.5099870Z 
2025-08-19T20:27:01.5099956Z <a id="repricer.app.schemas"></a>
2025-08-19T20:27:01.5100109Z 
2025-08-19T20:27:01.5100185Z # repricer.app.schemas
2025-08-19T20:27:01.5100304Z 
2025-08-19T20:27:01.5100390Z <a id="repricer.app.deps"></a>
2025-08-19T20:27:01.5100528Z 
2025-08-19T20:27:01.5100601Z # repricer.app.deps
2025-08-19T20:27:01.5100711Z 
2025-08-19T20:27:01.5100831Z Placeholder module for Keepa / SP-API clients.
2025-08-19T20:27:01.5101021Z 
2025-08-19T20:27:01.5101102Z <a id="repricer.app.logic"></a>
2025-08-19T20:27:01.5101249Z 
2025-08-19T20:27:01.5101324Z # repricer.app.logic
2025-08-19T20:27:01.5101443Z 
2025-08-19T20:27:01.5101543Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T20:27:01.5101721Z 
2025-08-19T20:27:01.5101785Z #### MIN\_MARGIN
2025-08-19T20:27:01.5101886Z 
2025-08-19T20:27:01.5101955Z 15 % ROI
2025-08-19T20:27:01.5102043Z 
2025-08-19T20:27:01.5102145Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T20:27:01.5102328Z 
2025-08-19T20:27:01.5102396Z #### compute\_price
2025-08-19T20:27:01.5102501Z 
2025-08-19T20:27:01.5102564Z ```python
2025-08-19T20:27:01.5102814Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T20:27:01.5103116Z ```
2025-08-19T20:27:01.5103200Z 
2025-08-19T20:27:01.5103310Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T20:27:01.5103595Z Replace with real competitive logic later.
2025-08-19T20:27:01.5103763Z 
2025-08-19T20:27:01.5103844Z <a id="repricer.app.main"></a>
2025-08-19T20:27:01.5103999Z 
2025-08-19T20:27:01.5104071Z # repricer.app.main
2025-08-19T20:27:01.5104177Z 
2025-08-19T20:27:01.5104253Z <a id="repricer.app"></a>
2025-08-19T20:27:01.5104387Z 
2025-08-19T20:27:01.5104453Z # repricer.app
2025-08-19T20:27:01.5104556Z 
2025-08-19T20:27:01.5104655Z <a id="repricer.tests.test_imports"></a>
2025-08-19T20:27:01.5104821Z 
2025-08-19T20:27:01.5104902Z # repricer.tests.test\_imports
2025-08-19T20:27:01.5105045Z 
2025-08-19T20:27:01.5105133Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T20:27:01.5105292Z 
2025-08-19T20:27:01.5105373Z # repricer.tests.test\_smoke
2025-08-19T20:27:01.5105518Z 
2025-08-19T20:27:01.5105597Z <a id="repricer.tests"></a>
2025-08-19T20:27:01.5105727Z 
2025-08-19T20:27:01.5105801Z # repricer.tests
2025-08-19T20:27:01.5105910Z 
2025-08-19T20:27:01.5105974Z <a id="db"></a>
2025-08-19T20:27:01.5106085Z 
2025-08-19T20:27:01.5106145Z # db
2025-08-19T20:27:01.5106229Z 
2025-08-19T20:27:01.5106304Z <a id="db.utils.views"></a>
2025-08-19T20:27:01.5106577Z 
2025-08-19T20:27:01.5106644Z # db.utils.views
2025-08-19T20:27:01.5106899Z 
2025-08-19T20:27:01.5107001Z <a id="db.utils.views.replace_view"></a>
2025-08-19T20:27:01.5107166Z 
2025-08-19T20:27:01.5107232Z #### replace\_view
2025-08-19T20:27:01.5107339Z 
2025-08-19T20:27:01.5107407Z ```python
2025-08-19T20:27:01.5107600Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T20:27:01.5107843Z ```
2025-08-19T20:27:01.5107926Z 
2025-08-19T20:27:01.5108015Z Drop and recreate a SQL view atomically.
2025-08-19T20:27:01.5108179Z 
2025-08-19T20:27:01.5108248Z <a id="db.utils"></a>
2025-08-19T20:27:01.5108360Z 
2025-08-19T20:27:01.5108427Z # db.utils
2025-08-19T20:27:01.5108516Z 
2025-08-19T20:27:01.5108592Z <a id="price_importer"></a>
2025-08-19T20:27:01.5108723Z 
2025-08-19T20:27:01.5108792Z # price\_importer
2025-08-19T20:27:01.5108895Z 
2025-08-19T20:27:01.5108997Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T20:27:01.5109182Z 
2025-08-19T20:27:01.5109272Z # price\_importer.services\_common.dsn
2025-08-19T20:27:01.5109570Z 
2025-08-19T20:27:01.5109709Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T20:27:01.5109920Z 
2025-08-19T20:27:01.5109983Z #### build\_dsn
2025-08-19T20:27:01.5110089Z 
2025-08-19T20:27:01.5110152Z ```python
2025-08-19T20:27:01.5110323Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:27:01.5110547Z ```
2025-08-19T20:27:01.5110628Z 
2025-08-19T20:27:01.5110694Z Return safe DSN.
2025-08-19T20:27:01.5110803Z 
2025-08-19T20:27:01.5111154Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T20:27:01.5111357Z 
2025-08-19T20:27:01.5111488Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T20:27:01.5111692Z 
2025-08-19T20:27:01.5111799Z # price\_importer.services\_common.models\_vendor
2025-08-19T20:27:01.5111994Z 
2025-08-19T20:27:01.5112101Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T20:27:01.5112287Z 
2025-08-19T20:27:01.5112380Z # price\_importer.services\_common.db\_url
2025-08-19T20:27:01.5112569Z 
2025-08-19T20:27:01.5112700Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T20:27:01.5112914Z 
2025-08-19T20:27:01.5112985Z #### build\_url
2025-08-19T20:27:01.5113088Z 
2025-08-19T20:27:01.5113151Z ```python
2025-08-19T20:27:01.5113334Z def build_url(async_: bool = True) -> str
2025-08-19T20:27:01.5113555Z ```
2025-08-19T20:27:01.5113643Z 
2025-08-19T20:27:01.5113738Z Return Postgres DSN from env or PG_* parts.
2025-08-19T20:27:01.5113920Z 
2025-08-19T20:27:01.5114036Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T20:27:01.5114224Z 
2025-08-19T20:27:01.5114316Z # price\_importer.services\_common.keepa
2025-08-19T20:27:01.5114481Z 
2025-08-19T20:27:01.5114590Z <a id="price_importer.services_common.llm"></a>
2025-08-19T20:27:01.5114768Z 
2025-08-19T20:27:01.5114858Z # price\_importer.services\_common.llm
2025-08-19T20:27:01.5115025Z 
2025-08-19T20:27:01.5115136Z <a id="price_importer.services_common.settings"></a>
2025-08-19T20:27:01.5115334Z 
2025-08-19T20:27:01.5115441Z # price\_importer.services\_common.settings
2025-08-19T20:27:01.5115612Z 
2025-08-19T20:27:01.5115712Z <a id="price_importer.services_common.db"></a>
2025-08-19T20:27:01.5115893Z 
2025-08-19T20:27:01.5115981Z # price\_importer.services\_common.db
2025-08-19T20:27:01.5116138Z 
2025-08-19T20:27:01.5116293Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T20:27:01.5116538Z 
2025-08-19T20:27:01.5116616Z #### build\_sqlalchemy\_url
2025-08-19T20:27:01.5116859Z 
2025-08-19T20:27:01.5116930Z ```python
2025-08-19T20:27:01.5117103Z def build_sqlalchemy_url() -> str
2025-08-19T20:27:01.5117317Z ```
2025-08-19T20:27:01.5117399Z 
2025-08-19T20:27:01.5117497Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T20:27:01.5117674Z 
2025-08-19T20:27:01.5117817Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T20:27:01.5118039Z 
2025-08-19T20:27:01.5118114Z #### build\_asyncpg\_dsn
2025-08-19T20:27:01.5118247Z 
2025-08-19T20:27:01.5118463Z ```python
2025-08-19T20:27:01.5118640Z def build_asyncpg_dsn() -> str
2025-08-19T20:27:01.5118836Z ```
2025-08-19T20:27:01.5118918Z 
2025-08-19T20:27:01.5119052Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T20:27:01.5119267Z 
2025-08-19T20:27:01.5119395Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T20:27:01.5119610Z 
2025-08-19T20:27:01.5119676Z #### refresh\_mvs
2025-08-19T20:27:01.5119781Z 
2025-08-19T20:27:01.5119847Z ```python
2025-08-19T20:27:01.5120036Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T20:27:01.5120287Z ```
2025-08-19T20:27:01.5120367Z 
2025-08-19T20:27:01.5120502Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T20:27:01.5120717Z 
2025-08-19T20:27:01.5120811Z <a id="price_importer.services_common"></a>
2025-08-19T20:27:01.5120978Z 
2025-08-19T20:27:01.5121066Z # price\_importer.services\_common
2025-08-19T20:27:01.5121225Z 
2025-08-19T20:27:01.5121329Z <a id="price_importer.services_common.base"></a>
2025-08-19T20:27:01.5121627Z 
2025-08-19T20:27:01.5121721Z # price\_importer.services\_common.base
2025-08-19T20:27:01.5121884Z 
2025-08-19T20:27:01.5121973Z <a id="price_importer.normaliser"></a>
2025-08-19T20:27:01.5122142Z 
2025-08-19T20:27:01.5122223Z # price\_importer.normaliser
2025-08-19T20:27:01.5122359Z 
2025-08-19T20:27:01.5122462Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T20:27:01.5122651Z 
2025-08-19T20:27:01.5122739Z # price\_importer.common.models\_vendor
2025-08-19T20:27:01.5122899Z 
2025-08-19T20:27:01.5122996Z <a id="price_importer.common.db_url"></a>
2025-08-19T20:27:01.5123166Z 
2025-08-19T20:27:01.5123251Z # price\_importer.common.db\_url
2025-08-19T20:27:01.5123401Z 
2025-08-19T20:27:01.5123506Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T20:27:01.5123686Z 
2025-08-19T20:27:01.5123748Z #### make\_dsn
2025-08-19T20:27:01.5123854Z 
2025-08-19T20:27:01.5123916Z ```python
2025-08-19T20:27:01.5124095Z def make_dsn(async_: bool = False) -> str
2025-08-19T20:27:01.5124321Z ```
2025-08-19T20:27:01.5124405Z 
2025-08-19T20:27:01.5124529Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T20:27:01.5124727Z 
2025-08-19T20:27:01.5124834Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T20:27:01.5125025Z 
2025-08-19T20:27:01.5125089Z #### build\_url
2025-08-19T20:27:01.5125188Z 
2025-08-19T20:27:01.5125258Z ```python
2025-08-19T20:27:01.5125429Z def build_url(async_: bool = False) -> str
2025-08-19T20:27:01.5125657Z ```
2025-08-19T20:27:01.5125737Z 
2025-08-19T20:27:01.5125858Z Return Postgres DSN built from environment variables.
2025-08-19T20:27:01.5126061Z 
2025-08-19T20:27:01.5126146Z <a id="price_importer.common"></a>
2025-08-19T20:27:01.5126297Z 
2025-08-19T20:27:01.5126376Z # price\_importer.common
2025-08-19T20:27:01.5126509Z 
2025-08-19T20:27:01.5126598Z <a id="price_importer.common.base"></a>
2025-08-19T20:27:01.5126885Z 
2025-08-19T20:27:01.5126977Z # price\_importer.common.base
2025-08-19T20:27:01.5127117Z 
2025-08-19T20:27:01.5127222Z <a id="price_importer.tests.conftest"></a>
2025-08-19T20:27:01.5127397Z 
2025-08-19T20:27:01.5127482Z # price\_importer.tests.conftest
2025-08-19T20:27:01.5127629Z 
2025-08-19T20:27:01.5127727Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T20:27:01.5127906Z 
2025-08-19T20:27:01.5127993Z # price\_importer.tests.test\_reader
2025-08-19T20:27:01.5128151Z 
2025-08-19T20:27:01.5128256Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T20:27:01.5128432Z 
2025-08-19T20:27:01.5128523Z # price\_importer.tests.test\_imports
2025-08-19T20:27:01.5128695Z 
2025-08-19T20:27:01.5128795Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T20:27:01.5128965Z 
2025-08-19T20:27:01.5129048Z # price\_importer.tests.test\_smoke
2025-08-19T20:27:01.5129207Z 
2025-08-19T20:27:01.5129310Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T20:27:01.5129533Z 
2025-08-19T20:27:01.5129633Z # price\_importer.tests.test\_normaliser
2025-08-19T20:27:01.5129798Z 
2025-08-19T20:27:01.5129882Z <a id="price_importer.tests"></a>
2025-08-19T20:27:01.5130172Z 
2025-08-19T20:27:01.5130250Z # price\_importer.tests
2025-08-19T20:27:01.5130373Z 
2025-08-19T20:27:01.5130457Z <a id="price_importer.reader"></a>
2025-08-19T20:27:01.5130616Z 
2025-08-19T20:27:01.5130693Z # price\_importer.reader
2025-08-19T20:27:01.5130820Z 
2025-08-19T20:27:01.5130919Z <a id="price_importer.repository"></a>
2025-08-19T20:27:01.5131079Z 
2025-08-19T20:27:01.5131161Z # price\_importer.repository
2025-08-19T20:27:01.5131308Z 
2025-08-19T20:27:01.5131390Z <a id="price_importer.import"></a>
2025-08-19T20:27:01.5131537Z 
2025-08-19T20:27:01.5131614Z # price\_importer.import
2025-08-19T20:27:01.5131741Z 
2025-08-19T20:27:01.5131811Z <a id="fees_h10"></a>
2025-08-19T20:27:01.5131923Z 
2025-08-19T20:27:01.5131990Z # fees\_h10
2025-08-19T20:27:01.5132082Z 
2025-08-19T20:27:01.5132158Z <a id="fees_h10.worker"></a>
2025-08-19T20:27:01.5132288Z 
2025-08-19T20:27:01.5132360Z # fees\_h10.worker
2025-08-19T20:27:01.5132464Z 
2025-08-19T20:27:01.5132675Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T20:27:01.5132857Z 
2025-08-19T20:27:01.5132929Z #### list\_active\_asins
2025-08-19T20:27:01.5133046Z 
2025-08-19T20:27:01.5133113Z ```python
2025-08-19T20:27:01.5133281Z def list_active_asins() -> list[str]
2025-08-19T20:27:01.5133492Z ```
2025-08-19T20:27:01.5133571Z 
2025-08-19T20:27:01.5133681Z Return known ASINs or an empty list if unavailable.
2025-08-19T20:27:01.5133877Z 
2025-08-19T20:27:01.5133959Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T20:27:01.5134113Z 
2025-08-19T20:27:01.5134192Z # fees\_h10.tests.test\_smoke
2025-08-19T20:27:01.5134334Z 
2025-08-19T20:27:01.5134409Z <a id="fees_h10.tests"></a>
2025-08-19T20:27:01.5134538Z 
2025-08-19T20:27:01.5134610Z # fees\_h10.tests
2025-08-19T20:27:01.5134710Z 
2025-08-19T20:27:01.5134783Z <a id="fees_h10.client"></a>
2025-08-19T20:27:01.5134913Z 
2025-08-19T20:27:01.5134984Z # fees\_h10.client
2025-08-19T20:27:01.5135087Z 
2025-08-19T20:27:01.5135167Z <a id="fees_h10.repository"></a>
2025-08-19T20:27:01.5135324Z 
2025-08-19T20:27:01.5135398Z # fees\_h10.repository
2025-08-19T20:27:01.5135513Z 
2025-08-19T20:27:01.5135621Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T20:27:01.5135800Z 
2025-08-19T20:27:01.5135872Z #### upsert\_fees\_raw
2025-08-19T20:27:01.5135985Z 
2025-08-19T20:27:01.5136053Z ```python
2025-08-19T20:27:01.5136221Z def upsert_fees_raw(engine: Engine,
2025-08-19T20:27:01.5136470Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T20:27:01.5136807Z                     *,
2025-08-19T20:27:01.5137037Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T20:27:01.5137306Z ```
2025-08-19T20:27:01.5137387Z 
2025-08-19T20:27:01.5137465Z Idempotent upsert for fees.
2025-08-19T20:27:01.5137597Z 
2025-08-19T20:27:01.5137755Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T20:27:01.5138092Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T20:27:01.5138429Z Only updates when one of the mutable fields changes.
2025-08-19T20:27:01.5138637Z 
2025-08-19T20:27:01.5138706Z <a id="emailer"></a>
2025-08-19T20:27:01.5138823Z 
2025-08-19T20:27:01.5138884Z # emailer
2025-08-19T20:27:01.5138972Z 
2025-08-19T20:27:01.5139078Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T20:27:01.5139252Z 
2025-08-19T20:27:01.5139341Z # emailer.tests.test\_import\_emailer
2025-08-19T20:27:01.5139503Z 
2025-08-19T20:27:01.5139586Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T20:27:01.5139739Z 
2025-08-19T20:27:01.5139818Z # emailer.tests.test\_smoke
2025-08-19T20:27:01.5139955Z 
2025-08-19T20:27:01.5140033Z <a id="emailer.tests"></a>
2025-08-19T20:27:01.5140160Z 
2025-08-19T20:27:01.5140233Z # emailer.tests
2025-08-19T20:27:01.5140339Z 
2025-08-19T20:27:01.5140425Z <a id="emailer.generate_body"></a>
2025-08-19T20:27:01.5140577Z 
2025-08-19T20:27:01.5140660Z # emailer.generate\_body
2025-08-19T20:27:01.5140785Z 
2025-08-19T20:27:01.5140857Z <a id="llm_server"></a>
2025-08-19T20:27:01.5140983Z 
2025-08-19T20:27:01.5141192Z # llm\_server
2025-08-19T20:27:01.5141291Z 
2025-08-19T20:27:01.5141373Z <a id="llm_server.app"></a>
2025-08-19T20:27:01.5141500Z 
2025-08-19T20:27:01.5141566Z # llm\_server.app
2025-08-19T20:27:01.5141671Z 
