2025-08-19T10:30:13.2710722Z ##[group]Run pydoc-markdown
2025-08-19T10:30:13.2711030Z [36;1mpydoc-markdown[0m
2025-08-19T10:30:13.2752277Z shell: /usr/bin/bash -e {0}
2025-08-19T10:30:13.2752509Z env:
2025-08-19T10:30:13.2752758Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:30:13.2753162Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T10:30:13.2753550Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:30:13.2753904Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:30:13.2754250Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:30:13.2754592Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T10:30:13.2754871Z ##[endgroup]
2025-08-19T10:30:13.7688916Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T10:30:13.7689635Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T10:30:13.7690115Z In "pydoc-markdown.yml"
2025-08-19T10:30:13.7690569Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T10:30:13.7691254Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T10:30:13.7692050Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T10:30:13.7692605Z 
2025-08-19T10:30:14.0839490Z <a id="__init__"></a>
2025-08-19T10:30:14.0839949Z 
2025-08-19T10:30:14.0840090Z # \_\_init\_\_
2025-08-19T10:30:14.0841256Z 
2025-08-19T10:30:14.0841405Z <a id="api"></a>
2025-08-19T10:30:14.0841633Z 
2025-08-19T10:30:14.0841764Z # api
2025-08-19T10:30:14.0841964Z 
2025-08-19T10:30:14.0842120Z <a id="api.errors"></a>
2025-08-19T10:30:14.0842381Z 
2025-08-19T10:30:14.0842525Z # api.errors
2025-08-19T10:30:14.0842732Z 
2025-08-19T10:30:14.0842903Z <a id="api.sentry_config"></a>
2025-08-19T10:30:14.0843207Z 
2025-08-19T10:30:14.0843369Z # api.sentry\_config
2025-08-19T10:30:14.0843625Z 
2025-08-19T10:30:14.0843822Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T10:30:14.0844203Z 
2025-08-19T10:30:14.0844803Z # api.tests.test\_sentry\_scrub
2025-08-19T10:30:14.0845145Z 
2025-08-19T10:30:14.0845340Z <a id="api.tests.test_errors_json"></a>
2025-08-19T10:30:14.0846045Z 
2025-08-19T10:30:14.0846218Z # api.tests.test\_errors\_json
2025-08-19T10:30:14.0846522Z 
2025-08-19T10:30:14.0846712Z <a id="api.tests.test_llm"></a>
2025-08-19T10:30:14.0847035Z 
2025-08-19T10:30:14.0847197Z # api.tests.test\_llm
2025-08-19T10:30:14.0847475Z 
2025-08-19T10:30:14.0847687Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T10:30:14.0848084Z 
2025-08-19T10:30:14.0848283Z # api.tests.test\_sentry\_event
2025-08-19T10:30:14.0848606Z 
2025-08-19T10:30:14.0848873Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T10:30:14.0849288Z 
2025-08-19T10:30:14.0849444Z ## DummyTransport Objects
2025-08-19T10:30:14.0849610Z 
2025-08-19T10:30:14.0849680Z ```python
2025-08-19T10:30:14.0849879Z class DummyTransport()
2025-08-19T10:30:14.0850218Z ```
2025-08-19T10:30:14.0850382Z 
2025-08-19T10:30:14.0850692Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T10:30:14.0851175Z 
2025-08-19T10:30:14.0851308Z #### capture\_envelope
2025-08-19T10:30:14.0851512Z 
2025-08-19T10:30:14.0851618Z ```python
2025-08-19T10:30:14.0851810Z def capture_envelope(envelope)
2025-08-19T10:30:14.0852013Z ```
2025-08-19T10:30:14.0852103Z 
2025-08-19T10:30:14.0852227Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T10:30:14.0852433Z 
2025-08-19T10:30:14.0852521Z <a id="api.tests.test_cors"></a>
2025-08-19T10:30:14.0852675Z 
2025-08-19T10:30:14.0852751Z # api.tests.test\_cors
2025-08-19T10:30:14.0852868Z 
2025-08-19T10:30:14.0852963Z <a id="api.tests.test_imports"></a>
2025-08-19T10:30:14.0853120Z 
2025-08-19T10:30:14.0853197Z # api.tests.test\_imports
2025-08-19T10:30:14.0853331Z 
2025-08-19T10:30:14.0853419Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T10:30:14.0853580Z 
2025-08-19T10:30:14.0853663Z # api.tests.test\_rate\_limit
2025-08-19T10:30:14.0853808Z 
2025-08-19T10:30:14.0853904Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T10:30:14.0854354Z 
2025-08-19T10:30:14.0854428Z #### app
2025-08-19T10:30:14.0854523Z 
2025-08-19T10:30:14.0854589Z noqa: E402
2025-08-19T10:30:14.0854686Z 
2025-08-19T10:30:14.0854778Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T10:30:14.0854943Z 
2025-08-19T10:30:14.0855026Z # api.tests.test\_entrypoint
2025-08-19T10:30:14.0855169Z 
2025-08-19T10:30:14.0855255Z <a id="api.tests.test_health"></a>
2025-08-19T10:30:14.0855408Z 
2025-08-19T10:30:14.0855491Z # api.tests.test\_health
2025-08-19T10:30:14.0855919Z 
2025-08-19T10:30:14.0856047Z <a id="api.logging_config"></a>
2025-08-19T10:30:14.0856275Z 
2025-08-19T10:30:14.0856387Z # api.logging\_config
2025-08-19T10:30:14.0856591Z 
2025-08-19T10:30:14.0856687Z <a id="api.migrations.env"></a>
2025-08-19T10:30:14.0856836Z 
2025-08-19T10:30:14.0856911Z # api.migrations.env
2025-08-19T10:30:14.0857028Z 
2025-08-19T10:30:14.0857152Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T10:30:14.0857358Z 
2025-08-19T10:30:14.0857464Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T10:30:14.0857662Z 
2025-08-19T10:30:14.0857772Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T10:30:14.0857963Z 
2025-08-19T10:30:14.0858059Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T10:30:14.0858236Z 
2025-08-19T10:30:14.0858391Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T10:30:14.0858625Z 
2025-08-19T10:30:14.0858767Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T10:30:14.0858982Z 
2025-08-19T10:30:14.0859112Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T10:30:14.0859318Z 
2025-08-19T10:30:14.0859427Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T10:30:14.0859610Z 
2025-08-19T10:30:14.0859727Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T10:30:14.0859927Z 
2025-08-19T10:30:14.0860029Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T10:30:14.0860209Z 
2025-08-19T10:30:14.0860493Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T10:30:14.0860710Z 
2025-08-19T10:30:14.0860820Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T10:30:14.0861014Z 
2025-08-19T10:30:14.0861131Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T10:30:14.0861329Z 
2025-08-19T10:30:14.0861443Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T10:30:14.0861627Z 
2025-08-19T10:30:14.0861750Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T10:30:14.0861951Z 
2025-08-19T10:30:14.0862062Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T10:30:14.0862246Z 
2025-08-19T10:30:14.0862382Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T10:30:14.0862607Z 
2025-08-19T10:30:14.0862728Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T10:30:14.0862926Z 
2025-08-19T10:30:14.0863053Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T10:30:14.0863252Z 
2025-08-19T10:30:14.0863367Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T10:30:14.0863566Z 
2025-08-19T10:30:14.0863701Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T10:30:14.0864000Z 
2025-08-19T10:30:14.0864123Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T10:30:14.0864346Z 
2025-08-19T10:30:14.0864458Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T10:30:14.0864650Z 
2025-08-19T10:30:14.0864745Z # api.migrations.versions.0001\_baseline
2025-08-19T10:30:14.0864914Z 
2025-08-19T10:30:14.0865005Z <a id="api.migrations.versions"></a>
2025-08-19T10:30:14.0865171Z 
2025-08-19T10:30:14.0865254Z # api.migrations.versions
2025-08-19T10:30:14.0865384Z 
2025-08-19T10:30:14.0865470Z <a id="api.migrations"></a>
2025-08-19T10:30:14.0865823Z 
2025-08-19T10:30:14.0865899Z # api.migrations
2025-08-19T10:30:14.0866018Z 
2025-08-19T10:30:14.0866150Z <a id="api.db"></a>
2025-08-19T10:30:14.0866260Z 
2025-08-19T10:30:14.0866324Z # api.db
2025-08-19T10:30:14.0866420Z 
2025-08-19T10:30:14.0866513Z <a id="api.routes.stats"></a>
2025-08-19T10:30:14.0866806Z 
2025-08-19T10:30:14.0866884Z # api.routes.stats
2025-08-19T10:30:14.0866993Z 
2025-08-19T10:30:14.0867081Z <a id="api.routes.stats.kpi"></a>
2025-08-19T10:30:14.0867240Z 
2025-08-19T10:30:14.0867306Z #### kpi
2025-08-19T10:30:14.0867393Z 
2025-08-19T10:30:14.0867461Z ```python
2025-08-19T10:30:14.0867638Z @router.get("/stats/kpi")
2025-08-19T10:30:14.0868135Z def kpi() -> List[Dict[str, int]]
2025-08-19T10:30:14.0868530Z ```
2025-08-19T10:30:14.0868695Z 
2025-08-19T10:30:14.0868859Z Return KPI metrics (mock).
2025-08-19T10:30:14.0869109Z 
2025-08-19T10:30:14.0869300Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T10:30:14.0869638Z 
2025-08-19T10:30:14.0869771Z #### roi\_by\_vendor
2025-08-19T10:30:14.0869983Z 
2025-08-19T10:30:14.0870054Z ```python
2025-08-19T10:30:14.0870240Z @router.get("/stats/roi_by_vendor")
2025-08-19T10:30:14.0870494Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T10:30:14.0870726Z ```
2025-08-19T10:30:14.0870819Z 
2025-08-19T10:30:14.0870915Z Return ROI percent by vendor.
2025-08-19T10:30:14.0871054Z 
2025-08-19T10:30:14.0871148Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T10:30:14.0871322Z 
2025-08-19T10:30:14.0871388Z #### roi\_trend
2025-08-19T10:30:14.0871491Z 
2025-08-19T10:30:14.0871557Z ```python
2025-08-19T10:30:14.0871729Z @router.get("/stats/roi_trend")
2025-08-19T10:30:14.0871962Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T10:30:14.0872202Z ```
2025-08-19T10:30:14.0872307Z 
2025-08-19T10:30:14.0872384Z Return 30-day ROI trend.
2025-08-19T10:30:14.0872512Z 
2025-08-19T10:30:14.0872593Z <a id="api.routes.roi"></a>
2025-08-19T10:30:14.0872732Z 
2025-08-19T10:30:14.0872802Z # api.routes.roi
2025-08-19T10:30:14.0872909Z 
2025-08-19T10:30:14.0872999Z <a id="api.routes.health"></a>
2025-08-19T10:30:14.0873141Z 
2025-08-19T10:30:14.0873214Z # api.routes.health
2025-08-19T10:30:14.0873335Z 
2025-08-19T10:30:14.0873424Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T10:30:14.0873795Z 
2025-08-19T10:30:14.0873869Z #### MAX\_SKEW
2025-08-19T10:30:14.0873980Z 
2025-08-19T10:30:14.0874044Z seconds
2025-08-19T10:30:14.0874131Z 
2025-08-19T10:30:14.0874231Z <a id="api.routes.health.health"></a>
2025-08-19T10:30:14.0874392Z 
2025-08-19T10:30:14.0874457Z #### health
2025-08-19T10:30:14.0874547Z 
2025-08-19T10:30:14.0874618Z ```python
2025-08-19T10:30:14.0874812Z @router.get("/health", include_in_schema=False)
2025-08-19T10:30:14.0875187Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T10:30:14.0875523Z ```
2025-08-19T10:30:14.0875902Z 
2025-08-19T10:30:14.0876025Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T10:30:14.0876223Z 
2025-08-19T10:30:14.0876319Z <a id="api.routes.repository"></a>
2025-08-19T10:30:14.0876478Z 
2025-08-19T10:30:14.0876561Z # api.routes.repository
2025-08-19T10:30:14.0876687Z 
2025-08-19T10:30:14.0876769Z <a id="api.routes"></a>
2025-08-19T10:30:14.0876887Z 
2025-08-19T10:30:14.0876954Z # api.routes
2025-08-19T10:30:14.0877069Z 
2025-08-19T10:30:14.0877153Z <a id="api.models.fee"></a>
2025-08-19T10:30:14.0877285Z 
2025-08-19T10:30:14.0877361Z # api.models.fee
2025-08-19T10:30:14.0877467Z 
2025-08-19T10:30:14.0877541Z <a id="api.models"></a>
2025-08-19T10:30:14.0877656Z 
2025-08-19T10:30:14.0877771Z # api.models
2025-08-19T10:30:14.0877937Z 
2025-08-19T10:30:14.0878082Z <a id="api.roi_repository"></a>
2025-08-19T10:30:14.0878253Z 
2025-08-19T10:30:14.0878329Z # api.roi\_repository
2025-08-19T10:30:14.0878444Z 
2025-08-19T10:30:14.0878516Z <a id="api.main"></a>
2025-08-19T10:30:14.0878636Z 
2025-08-19T10:30:14.0878702Z # api.main
2025-08-19T10:30:14.0878793Z 
2025-08-19T10:30:14.0878878Z <a id="api.main.ready"></a>
2025-08-19T10:30:14.0879016Z 
2025-08-19T10:30:14.0879084Z #### ready
2025-08-19T10:30:14.0879179Z 
2025-08-19T10:30:14.0879244Z ```python
2025-08-19T10:30:14.0879502Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T10:30:14.0879974Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T10:30:14.0880482Z                                                                       str]
2025-08-19T10:30:14.0880717Z ```
2025-08-19T10:30:14.0880803Z 
2025-08-19T10:30:14.0880900Z Return 200 only when migrations are at head.
2025-08-19T10:30:14.0881076Z 
2025-08-19T10:30:14.0881151Z <a id="api.config"></a>
2025-08-19T10:30:14.0881268Z 
2025-08-19T10:30:14.0881337Z # api.config
2025-08-19T10:30:14.0881436Z 
2025-08-19T10:30:14.0881504Z <a id="etl"></a>
2025-08-19T10:30:14.0881606Z 
2025-08-19T10:30:14.0881676Z # etl
2025-08-19T10:30:14.0881763Z 
2025-08-19T10:30:14.0881849Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T10:30:14.0881998Z 
2025-08-19T10:30:14.0882080Z # etl.fba\_fee\_ingestor
2025-08-19T10:30:14.0882205Z 
2025-08-19T10:30:14.0882287Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T10:30:14.0882437Z 
2025-08-19T10:30:14.0882512Z # etl.sp\_fees\_ingestor
2025-08-19T10:30:14.0882633Z 
2025-08-19T10:30:14.0882718Z <a id="etl.keepa_ingestor"></a>
2025-08-19T10:30:14.0882866Z 
2025-08-19T10:30:14.0882937Z # etl.keepa\_ingestor
2025-08-19T10:30:14.0883049Z 
2025-08-19T10:30:14.0883123Z <a id="etl.db"></a>
2025-08-19T10:30:14.0883229Z 
2025-08-19T10:30:14.0883292Z # etl.db
2025-08-19T10:30:14.0883388Z 
2025-08-19T10:30:14.0883473Z <a id="etl.dialects.schemas"></a>
2025-08-19T10:30:14.0883619Z 
2025-08-19T10:30:14.0883694Z # etl.dialects.schemas
2025-08-19T10:30:14.0883821Z 
2025-08-19T10:30:14.0883928Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T10:30:14.0884112Z 
2025-08-19T10:30:14.0884210Z # etl.dialects.amazon\_reimbursements
2025-08-19T10:30:14.0884370Z 
2025-08-19T10:30:14.0884467Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T10:30:14.0884645Z 
2025-08-19T10:30:14.0884734Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T10:30:14.0884891Z 
2025-08-19T10:30:14.0884981Z <a id="etl.dialects.test_generic"></a>
2025-08-19T10:30:14.0885146Z 
2025-08-19T10:30:14.0885226Z # etl.dialects.test\_generic
2025-08-19T10:30:14.0885482Z 
2025-08-19T10:30:14.0885808Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T10:30:14.0886004Z 
2025-08-19T10:30:14.0886092Z # etl.dialects.amazon\_returns
2025-08-19T10:30:14.0886240Z 
2025-08-19T10:30:14.0886340Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T10:30:14.0886516Z 
2025-08-19T10:30:14.0886602Z # etl.dialects.amazon\_fee\_preview
2025-08-19T10:30:14.0886763Z 
2025-08-19T10:30:14.0886870Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T10:30:14.0887056Z 
2025-08-19T10:30:14.0887151Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T10:30:14.0887316Z 
2025-08-19T10:30:14.0887410Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T10:30:14.0887584Z 
2025-08-19T10:30:14.0887672Z # etl.dialects.amazon\_settlements
2025-08-19T10:30:14.0887825Z 
2025-08-19T10:30:14.0887902Z <a id="etl.dialects"></a>
2025-08-19T10:30:14.0888037Z 
2025-08-19T10:30:14.0888102Z # etl.dialects
2025-08-19T10:30:14.0888202Z 
2025-08-19T10:30:14.0888276Z <a id="ingest"></a>
2025-08-19T10:30:14.0888391Z 
2025-08-19T10:30:14.0888463Z # ingest
2025-08-19T10:30:14.0888553Z 
2025-08-19T10:30:14.0888635Z <a id="ingest.maintenance"></a>
2025-08-19T10:30:14.0888779Z 
2025-08-19T10:30:14.0888852Z # ingest.maintenance
2025-08-19T10:30:14.0888971Z 
2025-08-19T10:30:14.0889050Z <a id="ingest.copy_loader"></a>
2025-08-19T10:30:14.0889188Z 
2025-08-19T10:30:14.0889266Z # ingest.copy\_loader
2025-08-19T10:30:14.0889381Z 
2025-08-19T10:30:14.0889481Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T10:30:14.0889661Z 
2025-08-19T10:30:14.0889741Z #### copy\_df\_via\_temp
2025-08-19T10:30:14.0889864Z 
2025-08-19T10:30:14.0889929Z ```python
2025-08-19T10:30:14.0890108Z def copy_df_via_temp(engine: Engine,
2025-08-19T10:30:14.0890350Z                      df: pd.DataFrame,
2025-08-19T10:30:14.0890587Z                      target_table: str,
2025-08-19T10:30:14.0890811Z                      *,
2025-08-19T10:30:14.0891017Z                      target_schema: Optional[str] = None,
2025-08-19T10:30:14.0891286Z                      columns: Sequence[str],
2025-08-19T10:30:14.0891685Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T10:30:14.0891972Z                      analyze_after: bool = False,
2025-08-19T10:30:14.0892231Z                      connection: Any | None = None) -> int
2025-08-19T10:30:14.0892471Z ```
2025-08-19T10:30:14.0892556Z 
2025-08-19T10:30:14.0892717Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T10:30:14.0892955Z 
2025-08-19T10:30:14.0893047Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T10:30:14.0893212Z 
2025-08-19T10:30:14.0893299Z # ingest.tests.test\_smoke
2025-08-19T10:30:14.0893431Z 
2025-08-19T10:30:14.0893509Z <a id="ingest.tests"></a>
2025-08-19T10:30:14.0893647Z 
2025-08-19T10:30:14.0893716Z # ingest.tests
2025-08-19T10:30:14.0893817Z 
2025-08-19T10:30:14.0893903Z <a id="ingest.upload_router"></a>
2025-08-19T10:30:14.0894061Z 
2025-08-19T10:30:14.0894139Z # ingest.upload\_router
2025-08-19T10:30:14.0894268Z 
2025-08-19T10:30:14.0894358Z <a id="ingest.email_watcher"></a>
2025-08-19T10:30:14.0894507Z 
2025-08-19T10:30:14.0894582Z # ingest.email\_watcher
2025-08-19T10:30:14.0894705Z 
2025-08-19T10:30:14.0894793Z <a id="ingest.email_watcher.main"></a>
2025-08-19T10:30:14.0894954Z 
2025-08-19T10:30:14.0895019Z #### main
2025-08-19T10:30:14.0895114Z 
2025-08-19T10:30:14.0895178Z ```python
2025-08-19T10:30:14.0895349Z def main() -> dict[str, str]
2025-08-19T10:30:14.0895699Z ```
2025-08-19T10:30:14.0895789Z 
2025-08-19T10:30:14.0895931Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T10:30:14.0896162Z 
2025-08-19T10:30:14.0896292Z Returns {"status": "success"} when processing completes.
2025-08-19T10:30:14.0896501Z 
2025-08-19T10:30:14.0896579Z <a id="ingest.tasks"></a>
2025-08-19T10:30:14.0896717Z 
2025-08-19T10:30:14.0896784Z # ingest.tasks
2025-08-19T10:30:14.0896886Z 
2025-08-19T10:30:14.0896993Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T10:30:14.0897168Z 
2025-08-19T10:30:14.0897553Z #### task\_import\_file
2025-08-19T10:30:14.0897796Z 
2025-08-19T10:30:14.0897917Z ```python
2025-08-19T10:30:14.0898315Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T10:30:14.0898864Z def task_import_file(self: Any,
2025-08-19T10:30:14.0899195Z                      uri: str,
2025-08-19T10:30:14.0899431Z                      report_type: str | None = None,
2025-08-19T10:30:14.0899708Z                      force: bool = False) -> dict[str, Any]
2025-08-19T10:30:14.0899951Z ```
2025-08-19T10:30:14.0900037Z 
2025-08-19T10:30:14.0900178Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T10:30:14.0900385Z 
2025-08-19T10:30:14.0900469Z <a id="ingest.celery_app"></a>
2025-08-19T10:30:14.0900617Z 
2025-08-19T10:30:14.0900690Z # ingest.celery\_app
2025-08-19T10:30:14.0900808Z 
2025-08-19T10:30:14.0900900Z <a id="ingest.ingest_router"></a>
2025-08-19T10:30:14.0901053Z 
2025-08-19T10:30:14.0901133Z # ingest.ingest\_router
2025-08-19T10:30:14.0901256Z 
2025-08-19T10:30:14.0901354Z <a id="logistics_etl"></a>
2025-08-19T10:30:14.0901488Z 
2025-08-19T10:30:14.0901558Z # logistics\_etl
2025-08-19T10:30:14.0901670Z 
2025-08-19T10:30:14.0901748Z Daily logistics ETL job.
2025-08-19T10:30:14.0901873Z 
2025-08-19T10:30:14.0901958Z <a id="logistics_etl.__main__"></a>
2025-08-19T10:30:14.0902117Z 
2025-08-19T10:30:14.0902196Z # logistics\_etl.\_\_main\_\_
2025-08-19T10:30:14.0902334Z 
2025-08-19T10:30:14.0902417Z <a id="logistics_etl.dsn"></a>
2025-08-19T10:30:14.0902552Z 
2025-08-19T10:30:14.0902622Z # logistics\_etl.dsn
2025-08-19T10:30:14.0902740Z 
2025-08-19T10:30:14.0902858Z Local DSN builder to avoid cross-service dependency.
2025-08-19T10:30:14.0903058Z 
2025-08-19T10:30:14.0903150Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T10:30:14.0903322Z 
2025-08-19T10:30:14.0903389Z #### build\_dsn
2025-08-19T10:30:14.0903491Z 
2025-08-19T10:30:14.0903562Z ```python
2025-08-19T10:30:14.0903738Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:30:14.0903966Z ```
2025-08-19T10:30:14.0904055Z 
2025-08-19T10:30:14.0904685Z Return a Postgres DSN assembled from environment variables.
2025-08-19T10:30:14.0904930Z 
2025-08-19T10:30:14.0905087Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T10:30:14.0905481Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T10:30:14.0905964Z error when any required variable is missing.
2025-08-19T10:30:14.0906142Z 
2025-08-19T10:30:14.0906245Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T10:30:14.0906417Z 
2025-08-19T10:30:14.0906504Z # logistics\_etl.tests.conftest
2025-08-19T10:30:14.0906657Z 
2025-08-19T10:30:14.0906764Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T10:30:14.0906958Z 
2025-08-19T10:30:14.0907052Z # logistics\_etl.tests.test\_repository
2025-08-19T10:30:14.0907229Z 
2025-08-19T10:30:14.0907325Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T10:30:14.0907497Z 
2025-08-19T10:30:14.0907591Z # logistics\_etl.tests.test\_cron
2025-08-19T10:30:14.0907744Z 
2025-08-19T10:30:14.0907853Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T10:30:14.0908040Z 
2025-08-19T10:30:14.0908127Z # logistics\_etl.tests.test\_imports
2025-08-19T10:30:14.0908285Z 
2025-08-19T10:30:14.0908379Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T10:30:14.0908556Z 
2025-08-19T10:30:14.0908640Z # logistics\_etl.tests.test\_smoke
2025-08-19T10:30:14.0908792Z 
2025-08-19T10:30:14.0908892Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T10:30:14.0909061Z 
2025-08-19T10:30:14.0909146Z # logistics\_etl.tests.test\_client
2025-08-19T10:30:14.0909303Z 
2025-08-19T10:30:14.0909387Z <a id="logistics_etl.tests"></a>
2025-08-19T10:30:14.0909530Z 
2025-08-19T10:30:14.0909603Z # logistics\_etl.tests
2025-08-19T10:30:14.0909729Z 
2025-08-19T10:30:14.0909810Z <a id="logistics_etl.flow"></a>
2025-08-19T10:30:14.0909952Z 
2025-08-19T10:30:14.0910032Z # logistics\_etl.flow
2025-08-19T10:30:14.0910145Z 
2025-08-19T10:30:14.0910229Z <a id="logistics_etl.client"></a>
2025-08-19T10:30:14.0910512Z 
2025-08-19T10:30:14.0941833Z # logistics\_etl.client
2025-08-19T10:30:14.0942077Z 
2025-08-19T10:30:14.0942227Z <a id="logistics_etl.cron"></a>
2025-08-19T10:30:14.0942474Z 
2025-08-19T10:30:14.0942645Z # logistics\_etl.cron
2025-08-19T10:30:14.0942844Z 
2025-08-19T10:30:14.0942986Z <a id="logistics_etl.db"></a>
2025-08-19T10:30:14.0943233Z 
2025-08-19T10:30:14.0943362Z # logistics\_etl.db
2025-08-19T10:30:14.0943558Z 
2025-08-19T10:30:14.0943710Z <a id="logistics_etl.repository"></a>
2025-08-19T10:30:14.0943990Z 
2025-08-19T10:30:14.0944132Z # logistics\_etl.repository
2025-08-19T10:30:14.0944364Z 
2025-08-19T10:30:14.0944485Z <a id="alert_bot"></a>
2025-08-19T10:30:14.0944683Z 
2025-08-19T10:30:14.0944800Z # alert\_bot
2025-08-19T10:30:14.0944965Z 
2025-08-19T10:30:14.0945112Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T10:30:14.0945440Z 
2025-08-19T10:30:14.0945834Z # alert\_bot.tests.test\_smoke
2025-08-19T10:30:14.0946140Z 
2025-08-19T10:30:14.0946309Z <a id="alert_bot.tests"></a>
2025-08-19T10:30:14.0946620Z 
2025-08-19T10:30:14.0946779Z # alert\_bot.tests
2025-08-19T10:30:14.0946919Z 
2025-08-19T10:30:14.0947104Z <a id="alert_bot.alert_bot"></a>
2025-08-19T10:30:14.0947283Z 
2025-08-19T10:30:14.0947374Z # alert\_bot.alert\_bot
2025-08-19T10:30:14.0947527Z 
2025-08-19T10:30:14.0947622Z <a id="alert_bot.rules"></a>
2025-08-19T10:30:14.0947785Z 
2025-08-19T10:30:14.0947869Z # alert\_bot.rules
2025-08-19T10:30:14.0948006Z 
2025-08-19T10:30:14.0948089Z <a id="common"></a>
2025-08-19T10:30:14.0948220Z 
2025-08-19T10:30:14.0948306Z # common
2025-08-19T10:30:14.0948419Z 
2025-08-19T10:30:14.0948508Z <a id="common.dsn"></a>
2025-08-19T10:30:14.0948659Z 
2025-08-19T10:30:14.0948741Z # common.dsn
2025-08-19T10:30:14.0948862Z 
2025-08-19T10:30:14.0948967Z <a id="common.dsn.build_dsn"></a>
2025-08-19T10:30:14.0949162Z 
2025-08-19T10:30:14.0949243Z #### build\_dsn
2025-08-19T10:30:14.0949367Z 
2025-08-19T10:30:14.0949456Z ```python
2025-08-19T10:30:14.0949678Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:30:14.0949965Z ```
2025-08-19T10:30:14.0950256Z 
2025-08-19T10:30:14.0950449Z Return a Postgres DSN, validating required variables.
2025-08-19T10:30:14.0950713Z 
2025-08-19T10:30:14.0950951Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T10:30:14.0951493Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T10:30:14.0952012Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T10:30:14.0952404Z missing.
2025-08-19T10:30:14.0952514Z 
2025-08-19T10:30:14.0952619Z <a id="common.models_vendor"></a>
2025-08-19T10:30:14.0952810Z 
2025-08-19T10:30:14.0952903Z # common.models\_vendor
2025-08-19T10:30:14.0953052Z 
2025-08-19T10:30:14.0953160Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T10:30:14.0953374Z 
2025-08-19T10:30:14.0953457Z ## Vendor Objects
2025-08-19T10:30:14.0953588Z 
2025-08-19T10:30:14.0953672Z ```python
2025-08-19T10:30:14.0953864Z class Vendor(Base)
2025-08-19T10:30:14.0954081Z ```
2025-08-19T10:30:14.0954185Z 
2025-08-19T10:30:14.0954290Z Vendor of inventory items.
2025-08-19T10:30:14.0954465Z 
2025-08-19T10:30:14.0954592Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T10:30:14.0954814Z 
2025-08-19T10:30:14.0954906Z ## VendorPrice Objects
2025-08-19T10:30:14.0955057Z 
2025-08-19T10:30:14.0955135Z ```python
2025-08-19T10:30:14.0955338Z class VendorPrice(Base)
2025-08-19T10:30:14.0955939Z ```
2025-08-19T10:30:14.0956045Z 
2025-08-19T10:30:14.0956162Z Association table linking vendors to pricing.
2025-08-19T10:30:14.0956344Z 
2025-08-19T10:30:14.0956421Z <a id="common.db_url"></a>
2025-08-19T10:30:14.0956561Z 
2025-08-19T10:30:14.0956628Z # common.db\_url
2025-08-19T10:30:14.0956733Z 
2025-08-19T10:30:14.0956818Z <a id="common.db_url.build_url"></a>
2025-08-19T10:30:14.0956981Z 
2025-08-19T10:30:14.0957047Z #### build\_url
2025-08-19T10:30:14.0957149Z 
2025-08-19T10:30:14.0957217Z ```python
2025-08-19T10:30:14.0957393Z def build_url(async_: bool = True) -> str
2025-08-19T10:30:14.0957774Z ```
2025-08-19T10:30:14.0957863Z 
2025-08-19T10:30:14.0957963Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:30:14.0958142Z 
2025-08-19T10:30:14.0958221Z <a id="common.keepa"></a>
2025-08-19T10:30:14.0958351Z 
2025-08-19T10:30:14.0958420Z # common.keepa
2025-08-19T10:30:14.0958530Z 
2025-08-19T10:30:14.0958602Z <a id="common.llm"></a>
2025-08-19T10:30:14.0958719Z 
2025-08-19T10:30:14.0958790Z # common.llm
2025-08-19T10:30:14.0958886Z 
2025-08-19T10:30:14.0958965Z <a id="common.settings"></a>
2025-08-19T10:30:14.0959107Z 
2025-08-19T10:30:14.0959177Z # common.settings
2025-08-19T10:30:14.0959284Z 
2025-08-19T10:30:14.0959354Z <a id="common.db"></a>
2025-08-19T10:30:14.0959474Z 
2025-08-19T10:30:14.0959539Z # common.db
2025-08-19T10:30:14.0959630Z 
2025-08-19T10:30:14.0959727Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T10:30:14.0959896Z 
2025-08-19T10:30:14.0959971Z #### build\_sqlalchemy\_url
2025-08-19T10:30:14.0960108Z 
2025-08-19T10:30:14.0960172Z ```python
2025-08-19T10:30:14.0960351Z def build_sqlalchemy_url() -> str
2025-08-19T10:30:14.0960567Z ```
2025-08-19T10:30:14.0960648Z 
2025-08-19T10:30:14.0960744Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:30:14.0960918Z 
2025-08-19T10:30:14.0961015Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T10:30:14.0961182Z 
2025-08-19T10:30:14.0961261Z #### build\_asyncpg\_dsn
2025-08-19T10:30:14.0961384Z 
2025-08-19T10:30:14.0961447Z ```python
2025-08-19T10:30:14.0961618Z def build_asyncpg_dsn() -> str
2025-08-19T10:30:14.0961813Z ```
2025-08-19T10:30:14.0961900Z 
2025-08-19T10:30:14.0962029Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:30:14.0962239Z 
2025-08-19T10:30:14.0962329Z <a id="common.db.refresh_mvs"></a>
2025-08-19T10:30:14.0962485Z 
2025-08-19T10:30:14.0962554Z #### refresh\_mvs
2025-08-19T10:30:14.0962660Z 
2025-08-19T10:30:14.0962729Z ```python
2025-08-19T10:30:14.0962925Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:30:14.0963178Z ```
2025-08-19T10:30:14.0963264Z 
2025-08-19T10:30:14.0963403Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:30:14.0963808Z 
2025-08-19T10:30:14.0963886Z <a id="common.config"></a>
2025-08-19T10:30:14.0964016Z 
2025-08-19T10:30:14.0964090Z # common.config
2025-08-19T10:30:14.0964194Z 
2025-08-19T10:30:14.0964267Z <a id="common.base"></a>
2025-08-19T10:30:14.0964391Z 
2025-08-19T10:30:14.0964462Z # common.base
2025-08-19T10:30:14.0964561Z 
2025-08-19T10:30:14.0964642Z <a id="common.base.Base"></a>
2025-08-19T10:30:14.0964788Z 
2025-08-19T10:30:14.0964852Z ## Base Objects
2025-08-19T10:30:14.0964953Z 
2025-08-19T10:30:14.0965015Z ```python
2025-08-19T10:30:14.0965188Z class Base(DeclarativeBase)
2025-08-19T10:30:14.0965386Z ```
2025-08-19T10:30:14.0965468Z 
2025-08-19T10:30:14.0965750Z Base class for SQLAlchemy models.
2025-08-19T10:30:14.0965957Z 
2025-08-19T10:30:14.0966039Z <a id="repricer"></a>
2025-08-19T10:30:14.0966157Z 
2025-08-19T10:30:14.0966222Z # repricer
2025-08-19T10:30:14.0966319Z 
2025-08-19T10:30:14.0966414Z <a id="repricer.app.schemas"></a>
2025-08-19T10:30:14.0966571Z 
2025-08-19T10:30:14.0966654Z # repricer.app.schemas
2025-08-19T10:30:14.0966775Z 
2025-08-19T10:30:14.0966859Z <a id="repricer.app.deps"></a>
2025-08-19T10:30:14.0967004Z 
2025-08-19T10:30:14.0967087Z # repricer.app.deps
2025-08-19T10:30:14.0967199Z 
2025-08-19T10:30:14.0967317Z Placeholder module for Keepa / SP-API clients.
2025-08-19T10:30:14.0967511Z 
2025-08-19T10:30:14.0967594Z <a id="repricer.app.logic"></a>
2025-08-19T10:30:14.0967738Z 
2025-08-19T10:30:14.0967815Z # repricer.app.logic
2025-08-19T10:30:14.0967938Z 
2025-08-19T10:30:14.0968035Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T10:30:14.0968211Z 
2025-08-19T10:30:14.0968286Z #### MIN\_MARGIN
2025-08-19T10:30:14.0968387Z 
2025-08-19T10:30:14.0968450Z 15 % ROI
2025-08-19T10:30:14.0968546Z 
2025-08-19T10:30:14.0968650Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T10:30:14.0968829Z 
2025-08-19T10:30:14.0968900Z #### compute\_price
2025-08-19T10:30:14.0969147Z 
2025-08-19T10:30:14.0969217Z ```python
2025-08-19T10:30:14.0969469Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T10:30:14.0969763Z ```
2025-08-19T10:30:14.0969844Z 
2025-08-19T10:30:14.0969958Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T10:30:14.0970238Z Replace with real competitive logic later.
2025-08-19T10:30:14.0970412Z 
2025-08-19T10:30:14.0970494Z <a id="repricer.app.main"></a>
2025-08-19T10:30:14.0970637Z 
2025-08-19T10:30:14.0970708Z # repricer.app.main
2025-08-19T10:30:14.0970822Z 
2025-08-19T10:30:14.0970900Z <a id="repricer.app"></a>
2025-08-19T10:30:14.0971026Z 
2025-08-19T10:30:14.0971100Z # repricer.app
2025-08-19T10:30:14.0971201Z 
2025-08-19T10:30:14.0971294Z <a id="repricer.tests.test_imports"></a>
2025-08-19T10:30:14.0971467Z 
2025-08-19T10:30:14.0971550Z # repricer.tests.test\_imports
2025-08-19T10:30:14.0971689Z 
2025-08-19T10:30:14.0971778Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T10:30:14.0971947Z 
2025-08-19T10:30:14.0972034Z # repricer.tests.test\_smoke
2025-08-19T10:30:14.0972176Z 
2025-08-19T10:30:14.0972258Z <a id="repricer.tests"></a>
2025-08-19T10:30:14.0972391Z 
2025-08-19T10:30:14.0972461Z # repricer.tests
2025-08-19T10:30:14.0972572Z 
2025-08-19T10:30:14.0972637Z <a id="db"></a>
2025-08-19T10:30:14.0972737Z 
2025-08-19T10:30:14.0972798Z # db
2025-08-19T10:30:14.0972886Z 
2025-08-19T10:30:14.0972964Z <a id="db.utils.views"></a>
2025-08-19T10:30:14.0973093Z 
2025-08-19T10:30:14.0973164Z # db.utils.views
2025-08-19T10:30:14.0973267Z 
2025-08-19T10:30:14.0973359Z <a id="db.utils.views.replace_view"></a>
2025-08-19T10:30:14.0973526Z 
2025-08-19T10:30:14.0973600Z #### replace\_view
2025-08-19T10:30:14.0973706Z 
2025-08-19T10:30:14.0973769Z ```python
2025-08-19T10:30:14.0973969Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T10:30:14.0974211Z ```
2025-08-19T10:30:14.0974301Z 
2025-08-19T10:30:14.0974390Z Drop and recreate a SQL view atomically.
2025-08-19T10:30:14.0974553Z 
2025-08-19T10:30:14.0974633Z <a id="db.utils"></a>
2025-08-19T10:30:14.0974876Z 
2025-08-19T10:30:14.0974939Z # db.utils
2025-08-19T10:30:14.0975030Z 
2025-08-19T10:30:14.0975113Z <a id="price_importer"></a>
2025-08-19T10:30:14.0975241Z 
2025-08-19T10:30:14.0975311Z # price\_importer
2025-08-19T10:30:14.0975422Z 
2025-08-19T10:30:14.0975524Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T10:30:14.0975843Z 
2025-08-19T10:30:14.0975941Z # price\_importer.services\_common.dsn
2025-08-19T10:30:14.0976104Z 
2025-08-19T10:30:14.0976230Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T10:30:14.0976434Z 
2025-08-19T10:30:14.0976504Z #### build\_dsn
2025-08-19T10:30:14.0976604Z 
2025-08-19T10:30:14.0976668Z ```python
2025-08-19T10:30:14.0976845Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:30:14.0977065Z ```
2025-08-19T10:30:14.0977153Z 
2025-08-19T10:30:14.0977221Z Return safe DSN.
2025-08-19T10:30:14.0977324Z 
2025-08-19T10:30:14.0977665Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T10:30:14.0977875Z 
2025-08-19T10:30:14.0978008Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T10:30:14.0978220Z 
2025-08-19T10:30:14.0978330Z # price\_importer.services\_common.models\_vendor
2025-08-19T10:30:14.0978519Z 
2025-08-19T10:30:14.0978625Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T10:30:14.0978816Z 
2025-08-19T10:30:14.0978912Z # price\_importer.services\_common.db\_url
2025-08-19T10:30:14.0979083Z 
2025-08-19T10:30:14.0979222Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T10:30:14.0979435Z 
2025-08-19T10:30:14.0979502Z #### build\_url
2025-08-19T10:30:14.0979608Z 
2025-08-19T10:30:14.0979671Z ```python
2025-08-19T10:30:14.0979846Z def build_url(async_: bool = True) -> str
2025-08-19T10:30:14.0980080Z ```
2025-08-19T10:30:14.0980161Z 
2025-08-19T10:30:14.0980263Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:30:14.0980441Z 
2025-08-19T10:30:14.0980550Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T10:30:14.0980867Z 
2025-08-19T10:30:14.0980973Z # price\_importer.services\_common.keepa
2025-08-19T10:30:14.0981139Z 
2025-08-19T10:30:14.0981239Z <a id="price_importer.services_common.llm"></a>
2025-08-19T10:30:14.0981431Z 
2025-08-19T10:30:14.0981526Z # price\_importer.services\_common.llm
2025-08-19T10:30:14.0981696Z 
2025-08-19T10:30:14.0981818Z <a id="price_importer.services_common.settings"></a>
2025-08-19T10:30:14.0982015Z 
2025-08-19T10:30:14.0982111Z # price\_importer.services\_common.settings
2025-08-19T10:30:14.0982285Z 
2025-08-19T10:30:14.0982395Z <a id="price_importer.services_common.db"></a>
2025-08-19T10:30:14.0982574Z 
2025-08-19T10:30:14.0982663Z # price\_importer.services\_common.db
2025-08-19T10:30:14.0982831Z 
2025-08-19T10:30:14.0982984Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T10:30:14.0983225Z 
2025-08-19T10:30:14.0983307Z #### build\_sqlalchemy\_url
2025-08-19T10:30:14.0983439Z 
2025-08-19T10:30:14.0983502Z ```python
2025-08-19T10:30:14.0983688Z def build_sqlalchemy_url() -> str
2025-08-19T10:30:14.0983898Z ```
2025-08-19T10:30:14.0983986Z 
2025-08-19T10:30:14.0984079Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:30:14.0984254Z 
2025-08-19T10:30:14.0984398Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T10:30:14.0984630Z 
2025-08-19T10:30:14.0984706Z #### build\_asyncpg\_dsn
2025-08-19T10:30:14.0984834Z 
2025-08-19T10:30:14.0984905Z ```python
2025-08-19T10:30:14.0985072Z def build_asyncpg_dsn() -> str
2025-08-19T10:30:14.0985277Z ```
2025-08-19T10:30:14.0985358Z 
2025-08-19T10:30:14.0985485Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:30:14.0985937Z 
2025-08-19T10:30:14.0986073Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T10:30:14.0986285Z 
2025-08-19T10:30:14.0986360Z #### refresh\_mvs
2025-08-19T10:30:14.0986467Z 
2025-08-19T10:30:14.0986529Z ```python
2025-08-19T10:30:14.0986729Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:30:14.0986982Z ```
2025-08-19T10:30:14.0987069Z 
2025-08-19T10:30:14.0987330Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:30:14.0987546Z 
2025-08-19T10:30:14.0987642Z <a id="price_importer.services_common"></a>
2025-08-19T10:30:14.0987819Z 
2025-08-19T10:30:14.0987907Z # price\_importer.services\_common
2025-08-19T10:30:14.0988062Z 
2025-08-19T10:30:14.0988172Z <a id="price_importer.services_common.base"></a>
2025-08-19T10:30:14.0988357Z 
2025-08-19T10:30:14.0988447Z # price\_importer.services\_common.base
2025-08-19T10:30:14.0988617Z 
2025-08-19T10:30:14.0988707Z <a id="price_importer.normaliser"></a>
2025-08-19T10:30:14.0988870Z 
2025-08-19T10:30:14.0988954Z # price\_importer.normaliser
2025-08-19T10:30:14.0989099Z 
2025-08-19T10:30:14.0989203Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T10:30:14.0989393Z 
2025-08-19T10:30:14.0989491Z # price\_importer.common.models\_vendor
2025-08-19T10:30:14.0989655Z 
2025-08-19T10:30:14.0989750Z <a id="price_importer.common.db_url"></a>
2025-08-19T10:30:14.0989934Z 
2025-08-19T10:30:14.0990028Z # price\_importer.common.db\_url
2025-08-19T10:30:14.0990175Z 
2025-08-19T10:30:14.0990282Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T10:30:14.0990475Z 
2025-08-19T10:30:14.0990541Z #### make\_dsn
2025-08-19T10:30:14.0990641Z 
2025-08-19T10:30:14.0990710Z ```python
2025-08-19T10:30:14.0990884Z def make_dsn(async_: bool = False) -> str
2025-08-19T10:30:14.0991113Z ```
2025-08-19T10:30:14.0991195Z 
2025-08-19T10:30:14.0991317Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T10:30:14.0991525Z 
2025-08-19T10:30:14.0991634Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T10:30:14.0991823Z 
2025-08-19T10:30:14.0991889Z #### build\_url
2025-08-19T10:30:14.0992000Z 
2025-08-19T10:30:14.0992062Z ```python
2025-08-19T10:30:14.0992245Z def build_url(async_: bool = False) -> str
2025-08-19T10:30:14.0992467Z ```
2025-08-19T10:30:14.0992547Z 
2025-08-19T10:30:14.0992671Z Return Postgres DSN built from environment variables.
2025-08-19T10:30:14.0993002Z 
2025-08-19T10:30:14.0993086Z <a id="price_importer.common"></a>
2025-08-19T10:30:14.0993249Z 
2025-08-19T10:30:14.0993331Z # price\_importer.common
2025-08-19T10:30:14.0993461Z 
2025-08-19T10:30:14.0993557Z <a id="price_importer.common.base"></a>
2025-08-19T10:30:14.0993725Z 
2025-08-19T10:30:14.0993813Z # price\_importer.common.base
2025-08-19T10:30:14.0993989Z 
2025-08-19T10:30:14.0994094Z <a id="price_importer.tests.conftest"></a>
2025-08-19T10:30:14.0994267Z 
2025-08-19T10:30:14.0994352Z # price\_importer.tests.conftest
2025-08-19T10:30:14.0994506Z 
2025-08-19T10:30:14.0994605Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T10:30:14.0994782Z 
2025-08-19T10:30:14.0994877Z # price\_importer.tests.test\_reader
2025-08-19T10:30:14.0995034Z 
2025-08-19T10:30:14.0995134Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T10:30:14.0995312Z 
2025-08-19T10:30:14.0995408Z # price\_importer.tests.test\_imports
2025-08-19T10:30:14.0995701Z 
2025-08-19T10:30:14.0995808Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T10:30:14.0995993Z 
2025-08-19T10:30:14.0996081Z # price\_importer.tests.test\_smoke
2025-08-19T10:30:14.0996237Z 
2025-08-19T10:30:14.0996347Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T10:30:14.0996531Z 
2025-08-19T10:30:14.0996626Z # price\_importer.tests.test\_normaliser
2025-08-19T10:30:14.0996796Z 
2025-08-19T10:30:14.0996880Z <a id="price_importer.tests"></a>
2025-08-19T10:30:14.0997031Z 
2025-08-19T10:30:14.0997106Z # price\_importer.tests
2025-08-19T10:30:14.0997234Z 
2025-08-19T10:30:14.0997320Z <a id="price_importer.reader"></a>
2025-08-19T10:30:14.0997473Z 
2025-08-19T10:30:14.0997554Z # price\_importer.reader
2025-08-19T10:30:14.0997683Z 
2025-08-19T10:30:14.0997776Z <a id="price_importer.repository"></a>
2025-08-19T10:30:14.0997940Z 
2025-08-19T10:30:14.0998028Z # price\_importer.repository
2025-08-19T10:30:14.0998169Z 
2025-08-19T10:30:14.0998255Z <a id="price_importer.import"></a>
2025-08-19T10:30:14.0998409Z 
2025-08-19T10:30:14.0998492Z # price\_importer.import
2025-08-19T10:30:14.0998743Z 
2025-08-19T10:30:14.0998819Z <a id="fees_h10"></a>
2025-08-19T10:30:14.0998932Z 
2025-08-19T10:30:14.0998997Z # fees\_h10
2025-08-19T10:30:14.0999088Z 
2025-08-19T10:30:14.0999169Z <a id="fees_h10.worker"></a>
2025-08-19T10:30:14.0999300Z 
2025-08-19T10:30:14.0999368Z # fees\_h10.worker
2025-08-19T10:30:14.0999479Z 
2025-08-19T10:30:14.0999579Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T10:30:14.0999751Z 
2025-08-19T10:30:14.0999825Z #### list\_active\_asins
2025-08-19T10:30:14.0999955Z 
2025-08-19T10:30:14.1000019Z ```python
2025-08-19T10:30:14.1000194Z def list_active_asins() -> list[str]
2025-08-19T10:30:14.1000406Z ```
2025-08-19T10:30:14.1000490Z 
2025-08-19T10:30:14.1000608Z Return known ASINs or an empty list if unavailable.
2025-08-19T10:30:14.1000801Z 
2025-08-19T10:30:14.1000886Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T10:30:14.1001050Z 
2025-08-19T10:30:14.1001129Z # fees\_h10.tests.test\_smoke
2025-08-19T10:30:14.1001275Z 
2025-08-19T10:30:14.1001361Z <a id="fees_h10.tests"></a>
2025-08-19T10:30:14.1001491Z 
2025-08-19T10:30:14.1001557Z # fees\_h10.tests
2025-08-19T10:30:14.1001662Z 
2025-08-19T10:30:14.1001747Z <a id="fees_h10.client"></a>
2025-08-19T10:30:14.1001880Z 
2025-08-19T10:30:14.1001946Z # fees\_h10.client
2025-08-19T10:30:14.1002057Z 
2025-08-19T10:30:14.1002139Z <a id="fees_h10.repository"></a>
2025-08-19T10:30:14.1002282Z 
2025-08-19T10:30:14.1002355Z # fees\_h10.repository
2025-08-19T10:30:14.1002482Z 
2025-08-19T10:30:14.1002552Z <a id="emailer"></a>
2025-08-19T10:30:14.1002668Z 
2025-08-19T10:30:14.1054640Z # emailer
2025-08-19T10:30:14.1054927Z 
2025-08-19T10:30:14.1055113Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T10:30:14.1055410Z 
2025-08-19T10:30:14.1055732Z # emailer.tests.test\_import\_emailer
2025-08-19T10:30:14.1056044Z 
2025-08-19T10:30:14.1056190Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T10:30:14.1056463Z 
2025-08-19T10:30:14.1056595Z # emailer.tests.test\_smoke
2025-08-19T10:30:14.1057046Z 
2025-08-19T10:30:14.1057130Z <a id="emailer.tests"></a>
2025-08-19T10:30:14.1057274Z 
2025-08-19T10:30:14.1057346Z # emailer.tests
2025-08-19T10:30:14.1057456Z 
2025-08-19T10:30:14.1057550Z <a id="emailer.generate_body"></a>
2025-08-19T10:30:14.1057713Z 
2025-08-19T10:30:14.1057796Z # emailer.generate\_body
2025-08-19T10:30:14.1057938Z 
2025-08-19T10:30:14.1058016Z <a id="llm_server"></a>
2025-08-19T10:30:14.1058140Z 
2025-08-19T10:30:14.1058207Z # llm\_server
2025-08-19T10:30:14.1058320Z 
2025-08-19T10:30:14.1058403Z <a id="llm_server.app"></a>
2025-08-19T10:30:14.1058542Z 
2025-08-19T10:30:14.1058621Z # llm\_server.app
2025-08-19T10:30:14.1058733Z 
