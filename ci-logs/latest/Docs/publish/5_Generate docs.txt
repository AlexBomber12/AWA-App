2025-08-16T22:56:40.0765858Z ##[group]Run pydoc-markdown
2025-08-16T22:56:40.0766151Z [36;1mpydoc-markdown[0m
2025-08-16T22:56:40.0806477Z shell: /usr/bin/bash -e {0}
2025-08-16T22:56:40.0806721Z env:
2025-08-16T22:56:40.0806960Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:56:40.0807376Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T22:56:40.0807782Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:56:40.0808125Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:56:40.0808466Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:56:40.0808802Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T22:56:40.0809086Z ##[endgroup]
2025-08-16T22:56:40.4072569Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T22:56:40.4073516Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T22:56:40.4075143Z In "pydoc-markdown.yml"
2025-08-16T22:56:40.4075629Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T22:56:40.4076302Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T22:56:40.4077137Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T22:56:40.4077675Z 
2025-08-16T22:56:40.6085657Z <a id="__init__"></a>
2025-08-16T22:56:40.6085994Z 
2025-08-16T22:56:40.6086139Z # \_\_init\_\_
2025-08-16T22:56:40.6086380Z 
2025-08-16T22:56:40.6086526Z <a id="api"></a>
2025-08-16T22:56:40.6086757Z 
2025-08-16T22:56:40.6086897Z # api
2025-08-16T22:56:40.6087086Z 
2025-08-16T22:56:40.6087265Z <a id="api.tests.test_llm"></a>
2025-08-16T22:56:40.6087604Z 
2025-08-16T22:56:40.6087769Z # api.tests.test\_llm
2025-08-16T22:56:40.6088030Z 
2025-08-16T22:56:40.6088213Z <a id="api.tests.test_imports"></a>
2025-08-16T22:56:40.6088555Z 
2025-08-16T22:56:40.6088711Z # api.tests.test\_imports
2025-08-16T22:56:40.6088984Z 
2025-08-16T22:56:40.6089180Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T22:56:40.6090141Z 
2025-08-16T22:56:40.6090322Z # api.tests.test\_entrypoint
2025-08-16T22:56:40.6090638Z 
2025-08-16T22:56:40.6090822Z <a id="api.tests.test_health"></a>
2025-08-16T22:56:40.6091165Z 
2025-08-16T22:56:40.6091274Z # api.tests.test\_health
2025-08-16T22:56:40.6091470Z 
2025-08-16T22:56:40.6091579Z <a id="api.migrations.env"></a>
2025-08-16T22:56:40.6091765Z 
2025-08-16T22:56:40.6091862Z # api.migrations.env
2025-08-16T22:56:40.6092018Z 
2025-08-16T22:56:40.6092181Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T22:56:40.6092460Z 
2025-08-16T22:56:40.6092609Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T22:56:40.6092848Z 
2025-08-16T22:56:40.6092993Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T22:56:40.6093260Z 
2025-08-16T22:56:40.6093583Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T22:56:40.6093810Z 
2025-08-16T22:56:40.6094017Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T22:56:40.6094332Z 
2025-08-16T22:56:40.6094521Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T22:56:40.6094814Z 
2025-08-16T22:56:40.6094973Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T22:56:40.6095234Z 
2025-08-16T22:56:40.6095368Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T22:56:40.6095607Z 
2025-08-16T22:56:40.6095752Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T22:56:40.6096049Z 
2025-08-16T22:56:40.6096190Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T22:56:40.6096426Z 
2025-08-16T22:56:40.6096581Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T22:56:40.6096833Z 
2025-08-16T22:56:40.6096943Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T22:56:40.6097137Z 
2025-08-16T22:56:40.6097257Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T22:56:40.6097464Z 
2025-08-16T22:56:40.6097569Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T22:56:40.6097757Z 
2025-08-16T22:56:40.6097888Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T22:56:40.6098333Z 
2025-08-16T22:56:40.6098443Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T22:56:40.6098640Z 
2025-08-16T22:56:40.6098765Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T22:56:40.6098973Z 
2025-08-16T22:56:40.6099088Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T22:56:40.6099281Z 
2025-08-16T22:56:40.6099391Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T22:56:40.6099583Z 
2025-08-16T22:56:40.6099685Z # api.migrations.versions.0001\_baseline
2025-08-16T22:56:40.6100089Z 
2025-08-16T22:56:40.6100188Z <a id="api.migrations.versions"></a>
2025-08-16T22:56:40.6100366Z 
2025-08-16T22:56:40.6100447Z # api.migrations.versions
2025-08-16T22:56:40.6100580Z 
2025-08-16T22:56:40.6100666Z <a id="api.migrations"></a>
2025-08-16T22:56:40.6100802Z 
2025-08-16T22:56:40.6100869Z # api.migrations
2025-08-16T22:56:40.6100976Z 
2025-08-16T22:56:40.6101052Z <a id="api.db"></a>
2025-08-16T22:56:40.6101164Z 
2025-08-16T22:56:40.6101232Z # api.db
2025-08-16T22:56:40.6101326Z 
2025-08-16T22:56:40.6101407Z <a id="api.routes.stats"></a>
2025-08-16T22:56:40.6101549Z 
2025-08-16T22:56:40.6101618Z # api.routes.stats
2025-08-16T22:56:40.6101733Z 
2025-08-16T22:56:40.6101824Z <a id="api.routes.stats.kpi"></a>
2025-08-16T22:56:40.6101989Z 
2025-08-16T22:56:40.6102056Z #### kpi
2025-08-16T22:56:40.6102147Z 
2025-08-16T22:56:40.6102210Z ```python
2025-08-16T22:56:40.6102391Z @router.get("/stats/kpi")
2025-08-16T22:56:40.6102635Z def kpi() -> List[Dict[str, int]]
2025-08-16T22:56:40.6102844Z ```
2025-08-16T22:56:40.6102930Z 
2025-08-16T22:56:40.6103008Z Return KPI metrics (mock).
2025-08-16T22:56:40.6103151Z 
2025-08-16T22:56:40.6103253Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T22:56:40.6103439Z 
2025-08-16T22:56:40.6103513Z #### roi\_by\_vendor
2025-08-16T22:56:40.6103628Z 
2025-08-16T22:56:40.6103688Z ```python
2025-08-16T22:56:40.6103861Z @router.get("/stats/roi_by_vendor")
2025-08-16T22:56:40.6104252Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T22:56:40.6104484Z ```
2025-08-16T22:56:40.6104564Z 
2025-08-16T22:56:40.6104644Z Return ROI percent by vendor.
2025-08-16T22:56:40.6104793Z 
2025-08-16T22:56:40.6104883Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T22:56:40.6105054Z 
2025-08-16T22:56:40.6105126Z #### roi\_trend
2025-08-16T22:56:40.6105227Z 
2025-08-16T22:56:40.6105286Z ```python
2025-08-16T22:56:40.6105452Z @router.get("/stats/roi_trend")
2025-08-16T22:56:40.6105687Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T22:56:40.6105927Z ```
2025-08-16T22:56:40.6106008Z 
2025-08-16T22:56:40.6106084Z Return 30-day ROI trend.
2025-08-16T22:56:40.6106230Z 
2025-08-16T22:56:40.6106309Z <a id="api.routes.roi"></a>
2025-08-16T22:56:40.6106444Z 
2025-08-16T22:56:40.6106517Z # api.routes.roi
2025-08-16T22:56:40.6106645Z 
2025-08-16T22:56:40.6106733Z <a id="api.routes.health"></a>
2025-08-16T22:56:40.6106928Z 
2025-08-16T22:56:40.6106997Z # api.routes.health
2025-08-16T22:56:40.6107114Z 
2025-08-16T22:56:40.6107215Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T22:56:40.6107387Z 
2025-08-16T22:56:40.6107450Z #### MAX\_SKEW
2025-08-16T22:56:40.6107555Z 
2025-08-16T22:56:40.6107616Z seconds
2025-08-16T22:56:40.6107702Z 
2025-08-16T22:56:40.6107794Z <a id="api.routes.health.health"></a>
2025-08-16T22:56:40.6107968Z 
2025-08-16T22:56:40.6108030Z #### health
2025-08-16T22:56:40.6108120Z 
2025-08-16T22:56:40.6108187Z ```python
2025-08-16T22:56:40.6108379Z @router.get("/health", include_in_schema=False)
2025-08-16T22:56:40.6108764Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T22:56:40.6109108Z ```
2025-08-16T22:56:40.6109199Z 
2025-08-16T22:56:40.6109316Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T22:56:40.6109516Z 
2025-08-16T22:56:40.6109605Z <a id="api.routes.repository"></a>
2025-08-16T22:56:40.6109966Z 
2025-08-16T22:56:40.6110072Z # api.routes.repository
2025-08-16T22:56:40.6110204Z 
2025-08-16T22:56:40.6110294Z <a id="api.routes"></a>
2025-08-16T22:56:40.6110571Z 
2025-08-16T22:56:40.6110635Z # api.routes
2025-08-16T22:56:40.6110739Z 
2025-08-16T22:56:40.6110819Z <a id="api.models.fee"></a>
2025-08-16T22:56:40.6110956Z 
2025-08-16T22:56:40.6111024Z # api.models.fee
2025-08-16T22:56:40.6111136Z 
2025-08-16T22:56:40.6111207Z <a id="api.models"></a>
2025-08-16T22:56:40.6111323Z 
2025-08-16T22:56:40.6111392Z # api.models
2025-08-16T22:56:40.6111486Z 
2025-08-16T22:56:40.6111567Z <a id="api.roi_repository"></a>
2025-08-16T22:56:40.6111717Z 
2025-08-16T22:56:40.6111788Z # api.roi\_repository
2025-08-16T22:56:40.6111904Z 
2025-08-16T22:56:40.6111972Z <a id="api.main"></a>
2025-08-16T22:56:40.6112096Z 
2025-08-16T22:56:40.6112158Z # api.main
2025-08-16T22:56:40.6112251Z 
2025-08-16T22:56:40.6112332Z <a id="api.main.ready"></a>
2025-08-16T22:56:40.6112464Z 
2025-08-16T22:56:40.6112525Z #### ready
2025-08-16T22:56:40.6112611Z 
2025-08-16T22:56:40.6112678Z ```python
2025-08-16T22:56:40.6112939Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T22:56:40.6113400Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T22:56:40.6113755Z                                                                       str]
2025-08-16T22:56:40.6113988Z ```
2025-08-16T22:56:40.6114069Z 
2025-08-16T22:56:40.6114170Z Return 200 only when migrations are at head.
2025-08-16T22:56:40.6114343Z 
2025-08-16T22:56:40.6114414Z <a id="api.config"></a>
2025-08-16T22:56:40.6114532Z 
2025-08-16T22:56:40.6114601Z # api.config
2025-08-16T22:56:40.6114696Z 
2025-08-16T22:56:40.6114759Z <a id="etl"></a>
2025-08-16T22:56:40.6114866Z 
2025-08-16T22:56:40.6114924Z # etl
2025-08-16T22:56:40.6115011Z 
2025-08-16T22:56:40.6115097Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T22:56:40.6115248Z 
2025-08-16T22:56:40.6115320Z # etl.fba\_fee\_ingestor
2025-08-16T22:56:40.6115448Z 
2025-08-16T22:56:40.6115534Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T22:56:40.6115687Z 
2025-08-16T22:56:40.6115758Z # etl.sp\_fees\_ingestor
2025-08-16T22:56:40.6116011Z 
2025-08-16T22:56:40.6116092Z <a id="etl.keepa_ingestor"></a>
2025-08-16T22:56:40.6116237Z 
2025-08-16T22:56:40.6116305Z # etl.keepa\_ingestor
2025-08-16T22:56:40.6116431Z 
2025-08-16T22:56:40.6116498Z <a id="etl.db"></a>
2025-08-16T22:56:40.6116603Z 
2025-08-16T22:56:40.6116669Z # etl.db
2025-08-16T22:56:40.6116756Z 
2025-08-16T22:56:40.6116865Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T22:56:40.6117062Z 
2025-08-16T22:56:40.6117153Z # etl.dialects.amazon\_reimbursements
2025-08-16T22:56:40.6117320Z 
2025-08-16T22:56:40.6117408Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T22:56:40.6117582Z 
2025-08-16T22:56:40.6117680Z # etl.dialects.amazon\_returns
2025-08-16T22:56:40.6117831Z 
2025-08-16T22:56:40.6117908Z <a id="etl.dialects"></a>
2025-08-16T22:56:40.6118035Z 
2025-08-16T22:56:40.6118104Z # etl.dialects
2025-08-16T22:56:40.6118205Z 
2025-08-16T22:56:40.6118270Z <a id="ingest"></a>
2025-08-16T22:56:40.6118378Z 
2025-08-16T22:56:40.6118451Z # ingest
2025-08-16T22:56:40.6118542Z 
2025-08-16T22:56:40.6118627Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T22:56:40.6118792Z 
2025-08-16T22:56:40.6118869Z # ingest.tests.test\_smoke
2025-08-16T22:56:40.6119003Z 
2025-08-16T22:56:40.6119083Z <a id="ingest.tests"></a>
2025-08-16T22:56:40.6119209Z 
2025-08-16T22:56:40.6119276Z # ingest.tests
2025-08-16T22:56:40.6119375Z 
2025-08-16T22:56:40.6119464Z <a id="ingest.upload_router"></a>
2025-08-16T22:56:40.6119612Z 
2025-08-16T22:56:40.6119685Z # ingest.upload\_router
2025-08-16T22:56:40.6119930Z 
2025-08-16T22:56:40.6120013Z <a id="ingest.email_watcher"></a>
2025-08-16T22:56:40.6120159Z 
2025-08-16T22:56:40.6120231Z # ingest.email\_watcher
2025-08-16T22:56:40.6120354Z 
2025-08-16T22:56:40.6120439Z <a id="ingest.email_watcher.main"></a>
2025-08-16T22:56:40.6120603Z 
2025-08-16T22:56:40.6120669Z #### main
2025-08-16T22:56:40.6120759Z 
2025-08-16T22:56:40.6120822Z ```python
2025-08-16T22:56:40.6120993Z def main() -> dict[str, str]
2025-08-16T22:56:40.6121188Z ```
2025-08-16T22:56:40.6121274Z 
2025-08-16T22:56:40.6121547Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T22:56:40.6121777Z 
2025-08-16T22:56:40.6121915Z Returns {"status": "success"} when processing completes.
2025-08-16T22:56:40.6122132Z 
2025-08-16T22:56:40.6122214Z <a id="ingest.ingest_router"></a>
2025-08-16T22:56:40.6122361Z 
2025-08-16T22:56:40.6122443Z # ingest.ingest\_router
2025-08-16T22:56:40.6122561Z 
2025-08-16T22:56:40.6122642Z <a id="logistics_etl"></a>
2025-08-16T22:56:40.6122778Z 
2025-08-16T22:56:40.6122843Z # logistics\_etl
2025-08-16T22:56:40.6122947Z 
2025-08-16T22:56:40.6123021Z Daily logistics ETL job.
2025-08-16T22:56:40.6123154Z 
2025-08-16T22:56:40.6123235Z <a id="logistics_etl.__main__"></a>
2025-08-16T22:56:40.6123387Z 
2025-08-16T22:56:40.6123469Z # logistics\_etl.\_\_main\_\_
2025-08-16T22:56:40.6123604Z 
2025-08-16T22:56:40.6123696Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T22:56:40.6123875Z 
2025-08-16T22:56:40.6123957Z # logistics\_etl.tests.conftest
2025-08-16T22:56:40.6124116Z 
2025-08-16T22:56:40.6124222Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T22:56:40.6124420Z 
2025-08-16T22:56:40.6124510Z # logistics\_etl.tests.test\_repository
2025-08-16T22:56:40.6124679Z 
2025-08-16T22:56:40.6124778Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T22:56:40.6124954Z 
2025-08-16T22:56:40.6125038Z # logistics\_etl.tests.test\_cron
2025-08-16T22:56:40.6125196Z 
2025-08-16T22:56:40.6125295Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T22:56:40.6125473Z 
2025-08-16T22:56:40.6125556Z # logistics\_etl.tests.test\_imports
2025-08-16T22:56:40.6125720Z 
2025-08-16T22:56:40.6125813Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T22:56:40.6125985Z 
2025-08-16T22:56:40.6126077Z # logistics\_etl.tests.test\_smoke
2025-08-16T22:56:40.6126228Z 
2025-08-16T22:56:40.6126322Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T22:56:40.6126498Z 
2025-08-16T22:56:40.6126582Z # logistics\_etl.tests.test\_client
2025-08-16T22:56:40.6126857Z 
2025-08-16T22:56:40.6126944Z <a id="logistics_etl.tests"></a>
2025-08-16T22:56:40.6127099Z 
2025-08-16T22:56:40.6127169Z # logistics\_etl.tests
2025-08-16T22:56:40.6127287Z 
2025-08-16T22:56:40.6127371Z <a id="logistics_etl.flow"></a>
2025-08-16T22:56:40.6127511Z 
2025-08-16T22:56:40.6127581Z # logistics\_etl.flow
2025-08-16T22:56:40.6127704Z 
2025-08-16T22:56:40.6127784Z <a id="logistics_etl.client"></a>
2025-08-16T22:56:40.6127933Z 
2025-08-16T22:56:40.6128004Z # logistics\_etl.client
2025-08-16T22:56:40.6128131Z 
2025-08-16T22:56:40.6128212Z <a id="logistics_etl.cron"></a>
2025-08-16T22:56:40.6128349Z 
2025-08-16T22:56:40.6128424Z # logistics\_etl.cron
2025-08-16T22:56:40.6128537Z 
2025-08-16T22:56:40.6128614Z <a id="logistics_etl.db"></a>
2025-08-16T22:56:40.6128759Z 
2025-08-16T22:56:40.6128826Z # logistics\_etl.db
2025-08-16T22:56:40.6128935Z 
2025-08-16T22:56:40.6129025Z <a id="logistics_etl.repository"></a>
2025-08-16T22:56:40.6129196Z 
2025-08-16T22:56:40.6129273Z # logistics\_etl.repository
2025-08-16T22:56:40.6129418Z 
2025-08-16T22:56:40.6129493Z <a id="alert_bot"></a>
2025-08-16T22:56:40.6129608Z 
2025-08-16T22:56:40.6129672Z # alert\_bot
2025-08-16T22:56:40.6129868Z 
2025-08-16T22:56:40.6129965Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T22:56:40.6130131Z 
2025-08-16T22:56:40.6130212Z # alert\_bot.tests.test\_smoke
2025-08-16T22:56:40.6130359Z 
2025-08-16T22:56:40.6130435Z <a id="alert_bot.tests"></a>
2025-08-16T22:56:40.6130571Z 
2025-08-16T22:56:40.6130644Z # alert\_bot.tests
2025-08-16T22:56:40.6130752Z 
2025-08-16T22:56:40.6130834Z <a id="alert_bot.alert_bot"></a>
2025-08-16T22:56:40.6130976Z 
2025-08-16T22:56:40.6131057Z # alert\_bot.alert\_bot
2025-08-16T22:56:40.6131175Z 
2025-08-16T22:56:40.6131254Z <a id="alert_bot.rules"></a>
2025-08-16T22:56:40.6131394Z 
2025-08-16T22:56:40.6131459Z # alert\_bot.rules
2025-08-16T22:56:40.6131566Z 
2025-08-16T22:56:40.6131632Z <a id="common"></a>
2025-08-16T22:56:40.6131743Z 
2025-08-16T22:56:40.6131802Z # common
2025-08-16T22:56:40.6131897Z 
2025-08-16T22:56:40.6132093Z <a id="common.dsn"></a>
2025-08-16T22:56:40.6132210Z 
2025-08-16T22:56:40.6132272Z # common.dsn
2025-08-16T22:56:40.6132370Z 
2025-08-16T22:56:40.6132452Z <a id="common.dsn.build_dsn"></a>
2025-08-16T22:56:40.6132601Z 
2025-08-16T22:56:40.6132664Z #### build\_dsn
2025-08-16T22:56:40.6132770Z 
2025-08-16T22:56:40.6132831Z ```python
2025-08-16T22:56:40.6133008Z def build_dsn(sync: bool = True) -> str
2025-08-16T22:56:40.6133224Z ```
2025-08-16T22:56:40.6133306Z 
2025-08-16T22:56:40.6133435Z Return a Postgres DSN, validating required variables.
2025-08-16T22:56:40.6133641Z 
2025-08-16T22:56:40.6133839Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T22:56:40.6134295Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T22:56:40.6134715Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T22:56:40.6135033Z missing.
2025-08-16T22:56:40.6135120Z 
2025-08-16T22:56:40.6135217Z <a id="common.models_vendor"></a>
2025-08-16T22:56:40.6135371Z 
2025-08-16T22:56:40.6135442Z # common.models\_vendor
2025-08-16T22:56:40.6135567Z 
2025-08-16T22:56:40.6135655Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T22:56:40.6135825Z 
2025-08-16T22:56:40.6135889Z ## Vendor Objects
2025-08-16T22:56:40.6136004Z 
2025-08-16T22:56:40.6136065Z ```python
2025-08-16T22:56:40.6136222Z class Vendor(Base)
2025-08-16T22:56:40.6136399Z ```
2025-08-16T22:56:40.6136484Z 
2025-08-16T22:56:40.6136562Z Vendor of inventory items.
2025-08-16T22:56:40.6136693Z 
2025-08-16T22:56:40.6136800Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T22:56:40.6136980Z 
2025-08-16T22:56:40.6137052Z ## VendorPrice Objects
2025-08-16T22:56:40.6137176Z 
2025-08-16T22:56:40.6137237Z ```python
2025-08-16T22:56:40.6137396Z class VendorPrice(Base)
2025-08-16T22:56:40.6137574Z ```
2025-08-16T22:56:40.6137654Z 
2025-08-16T22:56:40.6137764Z Association table linking vendors to pricing.
2025-08-16T22:56:40.6137944Z 
2025-08-16T22:56:40.6138149Z <a id="common.db_url"></a>
2025-08-16T22:56:40.6138289Z 
2025-08-16T22:56:40.6138354Z # common.db\_url
2025-08-16T22:56:40.6138459Z 
2025-08-16T22:56:40.6138543Z <a id="common.db_url.build_url"></a>
2025-08-16T22:56:40.6138705Z 
2025-08-16T22:56:40.6138769Z #### build\_url
2025-08-16T22:56:40.6138869Z 
2025-08-16T22:56:40.6138937Z ```python
2025-08-16T22:56:40.6139109Z def build_url(async_: bool = True) -> str
2025-08-16T22:56:40.6139338Z ```
2025-08-16T22:56:40.6139419Z 
2025-08-16T22:56:40.6139518Z Return Postgres DSN from env or PG_* parts.
2025-08-16T22:56:40.6139700Z 
2025-08-16T22:56:40.6139878Z <a id="common.keepa"></a>
2025-08-16T22:56:40.6140012Z 
2025-08-16T22:56:40.6140078Z # common.keepa
2025-08-16T22:56:40.6140190Z 
2025-08-16T22:56:40.6140262Z <a id="common.llm"></a>
2025-08-16T22:56:40.6140380Z 
2025-08-16T22:56:40.6140450Z # common.llm
2025-08-16T22:56:40.6140546Z 
2025-08-16T22:56:40.6140626Z <a id="common.settings"></a>
2025-08-16T22:56:40.6140763Z 
2025-08-16T22:56:40.6140843Z # common.settings
2025-08-16T22:56:40.6140955Z 
2025-08-16T22:56:40.6141024Z <a id="common.db"></a>
2025-08-16T22:56:40.6141147Z 
2025-08-16T22:56:40.6141211Z # common.db
2025-08-16T22:56:40.6141304Z 
2025-08-16T22:56:40.6141405Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T22:56:40.6141578Z 
2025-08-16T22:56:40.6141652Z #### build\_sqlalchemy\_url
2025-08-16T22:56:40.6141785Z 
2025-08-16T22:56:40.6141858Z ```python
2025-08-16T22:56:40.6142031Z def build_sqlalchemy_url() -> str
2025-08-16T22:56:40.6142241Z ```
2025-08-16T22:56:40.6142321Z 
2025-08-16T22:56:40.6142418Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T22:56:40.6142597Z 
2025-08-16T22:56:40.6142685Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T22:56:40.6142851Z 
2025-08-16T22:56:40.6142929Z #### build\_asyncpg\_dsn
2025-08-16T22:56:40.6143054Z 
2025-08-16T22:56:40.6143114Z ```python
2025-08-16T22:56:40.6143286Z def build_asyncpg_dsn() -> str
2025-08-16T22:56:40.6143480Z ```
2025-08-16T22:56:40.6143563Z 
2025-08-16T22:56:40.6143696Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T22:56:40.6144038Z 
2025-08-16T22:56:40.6144122Z <a id="common.db.refresh_mvs"></a>
2025-08-16T22:56:40.6144280Z 
2025-08-16T22:56:40.6144344Z #### refresh\_mvs
2025-08-16T22:56:40.6144448Z 
2025-08-16T22:56:40.6144515Z ```python
2025-08-16T22:56:40.6144708Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T22:56:40.6144963Z ```
2025-08-16T22:56:40.6145041Z 
2025-08-16T22:56:40.6145176Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T22:56:40.6145401Z 
2025-08-16T22:56:40.6145477Z <a id="common.config"></a>
2025-08-16T22:56:40.6145609Z 
2025-08-16T22:56:40.6145683Z # common.config
2025-08-16T22:56:40.6145787Z 
2025-08-16T22:56:40.6145892Z <a id="common.base"></a>
2025-08-16T22:56:40.6146019Z 
2025-08-16T22:56:40.6146089Z # common.base
2025-08-16T22:56:40.6146188Z 
2025-08-16T22:56:40.6146265Z <a id="common.base.Base"></a>
2025-08-16T22:56:40.6146411Z 
2025-08-16T22:56:40.6146525Z ## Base Objects
2025-08-16T22:56:40.6146706Z 
2025-08-16T22:56:40.6146826Z ```python
2025-08-16T22:56:40.6147109Z class Base(DeclarativeBase)
2025-08-16T22:56:40.6147434Z ```
2025-08-16T22:56:40.6147571Z 
2025-08-16T22:56:40.6147715Z Base class for SQLAlchemy models.
2025-08-16T22:56:40.6147975Z 
2025-08-16T22:56:40.6148097Z <a id="repricer"></a>
2025-08-16T22:56:40.6148290Z 
2025-08-16T22:56:40.6148394Z # repricer
2025-08-16T22:56:40.6148560Z 
2025-08-16T22:56:40.6148662Z <a id="repricer.app.schemas"></a>
2025-08-16T22:56:40.6148820Z 
2025-08-16T22:56:40.6148896Z # repricer.app.schemas
2025-08-16T22:56:40.6149023Z 
2025-08-16T22:56:40.6149106Z <a id="repricer.app.deps"></a>
2025-08-16T22:56:40.6149250Z 
2025-08-16T22:56:40.6149328Z # repricer.app.deps
2025-08-16T22:56:40.6149441Z 
2025-08-16T22:56:40.6149561Z Placeholder module for Keepa / SP-API clients.
2025-08-16T22:56:40.6149935Z 
2025-08-16T22:56:40.6150052Z <a id="repricer.app.logic"></a>
2025-08-16T22:56:40.6150204Z 
2025-08-16T22:56:40.6150281Z # repricer.app.logic
2025-08-16T22:56:40.6150563Z 
2025-08-16T22:56:40.6150667Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T22:56:40.6150845Z 
2025-08-16T22:56:40.6150914Z #### MIN\_MARGIN
2025-08-16T22:56:40.6151016Z 
2025-08-16T22:56:40.6151077Z 15 % ROI
2025-08-16T22:56:40.6151170Z 
2025-08-16T22:56:40.6151272Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T22:56:40.6151458Z 
2025-08-16T22:56:40.6151526Z #### compute\_price
2025-08-16T22:56:40.6151641Z 
2025-08-16T22:56:40.6151703Z ```python
2025-08-16T22:56:40.6151960Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T22:56:40.6152264Z ```
2025-08-16T22:56:40.6152348Z 
2025-08-16T22:56:40.6152463Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T22:56:40.6152753Z Replace with real competitive logic later.
2025-08-16T22:56:40.6152939Z 
2025-08-16T22:56:40.6153022Z <a id="repricer.app.main"></a>
2025-08-16T22:56:40.6153169Z 
2025-08-16T22:56:40.6153241Z # repricer.app.main
2025-08-16T22:56:40.6153357Z 
2025-08-16T22:56:40.6153441Z <a id="repricer.app"></a>
2025-08-16T22:56:40.6153574Z 
2025-08-16T22:56:40.6153647Z # repricer.app
2025-08-16T22:56:40.6153750Z 
2025-08-16T22:56:40.6153845Z <a id="repricer.tests.test_imports"></a>
2025-08-16T22:56:40.6154023Z 
2025-08-16T22:56:40.6154104Z # repricer.tests.test\_imports
2025-08-16T22:56:40.6154247Z 
2025-08-16T22:56:40.6154336Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T22:56:40.6154509Z 
2025-08-16T22:56:40.6154588Z # repricer.tests.test\_smoke
2025-08-16T22:56:40.6154727Z 
2025-08-16T22:56:40.6154812Z <a id="repricer.tests"></a>
2025-08-16T22:56:40.6154944Z 
2025-08-16T22:56:40.6155053Z # repricer.tests
2025-08-16T22:56:40.6155159Z 
2025-08-16T22:56:40.6155220Z <a id="db"></a>
2025-08-16T22:56:40.6155326Z 
2025-08-16T22:56:40.6155384Z # db
2025-08-16T22:56:40.6155468Z 
2025-08-16T22:56:40.6155543Z <a id="db.utils.views"></a>
2025-08-16T22:56:40.6155682Z 
2025-08-16T22:56:40.6155746Z # db.utils.views
2025-08-16T22:56:40.6155847Z 
2025-08-16T22:56:40.6155945Z <a id="db.utils.views.replace_view"></a>
2025-08-16T22:56:40.6156249Z 
2025-08-16T22:56:40.6156317Z #### replace\_view
2025-08-16T22:56:40.6156433Z 
2025-08-16T22:56:40.6156493Z ```python
2025-08-16T22:56:40.6156692Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T22:56:40.6156947Z ```
2025-08-16T22:56:40.6157030Z 
2025-08-16T22:56:40.6157119Z Drop and recreate a SQL view atomically.
2025-08-16T22:56:40.6157291Z 
2025-08-16T22:56:40.6157360Z <a id="db.utils"></a>
2025-08-16T22:56:40.6157476Z 
2025-08-16T22:56:40.6157544Z # db.utils
2025-08-16T22:56:40.6157634Z 
2025-08-16T22:56:40.6157710Z <a id="price_importer"></a>
2025-08-16T22:56:40.6157850Z 
2025-08-16T22:56:40.6157918Z # price\_importer
2025-08-16T22:56:40.6158024Z 
2025-08-16T22:56:40.6158129Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T22:56:40.6158323Z 
2025-08-16T22:56:40.6158414Z # price\_importer.services\_common.dsn
2025-08-16T22:56:40.6158579Z 
2025-08-16T22:56:40.6158713Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T22:56:40.6158934Z 
2025-08-16T22:56:40.6158998Z #### build\_dsn
2025-08-16T22:56:40.6159102Z 
2025-08-16T22:56:40.6159162Z ```python
2025-08-16T22:56:40.6159333Z def build_dsn(sync: bool = True) -> str
2025-08-16T22:56:40.6159558Z ```
2025-08-16T22:56:40.6159639Z 
2025-08-16T22:56:40.6159710Z Return safe DSN.
2025-08-16T22:56:40.6159940Z 
2025-08-16T22:56:40.6160275Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T22:56:40.6160480Z 
2025-08-16T22:56:40.6160614Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T22:56:40.6160823Z 
2025-08-16T22:56:40.6160933Z # price\_importer.services\_common.models\_vendor
2025-08-16T22:56:40.6161131Z 
2025-08-16T22:56:40.6161237Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T22:56:40.6161424Z 
2025-08-16T22:56:40.6161524Z # price\_importer.services\_common.db\_url
2025-08-16T22:56:40.6161697Z 
2025-08-16T22:56:40.6161836Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T22:56:40.6162184Z 
2025-08-16T22:56:40.6162262Z #### build\_url
2025-08-16T22:56:40.6162363Z 
2025-08-16T22:56:40.6162429Z ```python
2025-08-16T22:56:40.6162609Z def build_url(async_: bool = True) -> str
2025-08-16T22:56:40.6162832Z ```
2025-08-16T22:56:40.6162919Z 
2025-08-16T22:56:40.6163017Z Return Postgres DSN from env or PG_* parts.
2025-08-16T22:56:40.6163191Z 
2025-08-16T22:56:40.6163303Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T22:56:40.6163598Z 
2025-08-16T22:56:40.6163695Z # price\_importer.services\_common.keepa
2025-08-16T22:56:40.6163871Z 
2025-08-16T22:56:40.6163972Z <a id="price_importer.services_common.llm"></a>
2025-08-16T22:56:40.6164153Z 
2025-08-16T22:56:40.6164243Z # price\_importer.services\_common.llm
2025-08-16T22:56:40.6164414Z 
2025-08-16T22:56:40.6164528Z <a id="price_importer.services_common.settings"></a>
2025-08-16T22:56:40.6164725Z 
2025-08-16T22:56:40.6164829Z # price\_importer.services\_common.settings
2025-08-16T22:56:40.6165004Z 
2025-08-16T22:56:40.6165104Z <a id="price_importer.services_common.db"></a>
2025-08-16T22:56:40.6165303Z 
2025-08-16T22:56:40.6165392Z # price\_importer.services\_common.db
2025-08-16T22:56:40.6165556Z 
2025-08-16T22:56:40.6165713Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T22:56:40.6165963Z 
2025-08-16T22:56:40.6166042Z #### build\_sqlalchemy\_url
2025-08-16T22:56:40.6166177Z 
2025-08-16T22:56:40.6166245Z ```python
2025-08-16T22:56:40.6166425Z def build_sqlalchemy_url() -> str
2025-08-16T22:56:40.6166638Z ```
2025-08-16T22:56:40.6166719Z 
2025-08-16T22:56:40.6166814Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T22:56:40.6166995Z 
2025-08-16T22:56:40.6167140Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T22:56:40.6167368Z 
2025-08-16T22:56:40.6167446Z #### build\_asyncpg\_dsn
2025-08-16T22:56:40.6167575Z 
2025-08-16T22:56:40.6167634Z ```python
2025-08-16T22:56:40.6167804Z def build_asyncpg_dsn() -> str
2025-08-16T22:56:40.6167999Z ```
2025-08-16T22:56:40.6168083Z 
2025-08-16T22:56:40.6168216Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T22:56:40.6168568Z 
2025-08-16T22:56:40.6168695Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T22:56:40.6168911Z 
2025-08-16T22:56:40.6168975Z #### refresh\_mvs
2025-08-16T22:56:40.6169080Z 
2025-08-16T22:56:40.6169146Z ```python
2025-08-16T22:56:40.6169340Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T22:56:40.6169592Z ```
2025-08-16T22:56:40.6169672Z 
2025-08-16T22:56:40.6169951Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T22:56:40.6170183Z 
2025-08-16T22:56:40.6170280Z <a id="price_importer.services_common"></a>
2025-08-16T22:56:40.6170455Z 
2025-08-16T22:56:40.6170546Z # price\_importer.services\_common
2025-08-16T22:56:40.6170701Z 
2025-08-16T22:56:40.6170804Z <a id="price_importer.services_common.base"></a>
2025-08-16T22:56:40.6170990Z 
2025-08-16T22:56:40.6171086Z # price\_importer.services\_common.base
2025-08-16T22:56:40.6171251Z 
2025-08-16T22:56:40.6171346Z <a id="price_importer.normaliser"></a>
2025-08-16T22:56:40.6171521Z 
2025-08-16T22:56:40.6171605Z # price\_importer.normaliser
2025-08-16T22:56:40.6171745Z 
2025-08-16T22:56:40.6171858Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T22:56:40.6172045Z 
2025-08-16T22:56:40.6172134Z # price\_importer.common.models\_vendor
2025-08-16T22:56:40.6172297Z 
2025-08-16T22:56:40.6172396Z <a id="price_importer.common.db_url"></a>
2025-08-16T22:56:40.6172568Z 
2025-08-16T22:56:40.6172654Z # price\_importer.common.db\_url
2025-08-16T22:56:40.6172807Z 
2025-08-16T22:56:40.6172912Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T22:56:40.6173101Z 
2025-08-16T22:56:40.6173171Z #### make\_dsn
2025-08-16T22:56:40.6173271Z 
2025-08-16T22:56:40.6173331Z ```python
2025-08-16T22:56:40.6173512Z def make_dsn(async_: bool = False) -> str
2025-08-16T22:56:40.6173734Z ```
2025-08-16T22:56:40.6173816Z 
2025-08-16T22:56:40.6173945Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T22:56:40.6174313Z 
2025-08-16T22:56:40.6174433Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T22:56:40.6174631Z 
2025-08-16T22:56:40.6174694Z #### build\_url
2025-08-16T22:56:40.6174795Z 
2025-08-16T22:56:40.6174866Z ```python
2025-08-16T22:56:40.6175045Z def build_url(async_: bool = False) -> str
2025-08-16T22:56:40.6175278Z ```
2025-08-16T22:56:40.6175358Z 
2025-08-16T22:56:40.6175481Z Return Postgres DSN built from environment variables.
2025-08-16T22:56:40.6175687Z 
2025-08-16T22:56:40.6175772Z <a id="price_importer.common"></a>
2025-08-16T22:56:40.6175927Z 
2025-08-16T22:56:40.6176004Z # price\_importer.common
2025-08-16T22:56:40.6176143Z 
2025-08-16T22:56:40.6176233Z <a id="price_importer.common.base"></a>
2025-08-16T22:56:40.6176400Z 
2025-08-16T22:56:40.6176491Z # price\_importer.common.base
2025-08-16T22:56:40.6176632Z 
2025-08-16T22:56:40.6176730Z <a id="price_importer.tests.conftest"></a>
2025-08-16T22:56:40.6176912Z 
2025-08-16T22:56:40.6176998Z # price\_importer.tests.conftest
2025-08-16T22:56:40.6177158Z 
2025-08-16T22:56:40.6177264Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T22:56:40.6177450Z 
2025-08-16T22:56:40.6177537Z # price\_importer.tests.test\_reader
2025-08-16T22:56:40.6177698Z 
2025-08-16T22:56:40.6177807Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T22:56:40.6177987Z 
2025-08-16T22:56:40.6178075Z # price\_importer.tests.test\_imports
2025-08-16T22:56:40.6178247Z 
2025-08-16T22:56:40.6178345Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T22:56:40.6178526Z 
2025-08-16T22:56:40.6178612Z # price\_importer.tests.test\_smoke
2025-08-16T22:56:40.6178776Z 
2025-08-16T22:56:40.6178882Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T22:56:40.6179070Z 
2025-08-16T22:56:40.6179167Z # price\_importer.tests.test\_normaliser
2025-08-16T22:56:40.6179334Z 
2025-08-16T22:56:40.6179417Z <a id="price_importer.tests"></a>
2025-08-16T22:56:40.6179571Z 
2025-08-16T22:56:40.6179647Z # price\_importer.tests
2025-08-16T22:56:40.6179895Z 
2025-08-16T22:56:40.6179986Z <a id="price_importer.reader"></a>
2025-08-16T22:56:40.6180270Z 
2025-08-16T22:56:40.6180349Z # price\_importer.reader
2025-08-16T22:56:40.6180477Z 
2025-08-16T22:56:40.6180583Z <a id="price_importer.reader.load_file"></a>
2025-08-16T22:56:40.6180758Z 
2025-08-16T22:56:40.6180819Z #### load\_file
2025-08-16T22:56:40.6180925Z 
2025-08-16T22:56:40.6180986Z ```python
2025-08-16T22:56:40.6181162Z def load_file(path: str | Path) -> Any
2025-08-16T22:56:40.6181385Z ```
2025-08-16T22:56:40.6181466Z 
2025-08-16T22:56:40.6181557Z Return DataFrame from CSV or Excel file.
2025-08-16T22:56:40.6181729Z 
2025-08-16T22:56:40.6181839Z Raises RuntimeError if pandas is unavailable.
2025-08-16T22:56:40.6182026Z 
2025-08-16T22:56:40.6182121Z <a id="price_importer.repository"></a>
2025-08-16T22:56:40.6182287Z 
2025-08-16T22:56:40.6182371Z # price\_importer.repository
2025-08-16T22:56:40.6182526Z 
2025-08-16T22:56:40.6182614Z <a id="price_importer.import"></a>
2025-08-16T22:56:40.6182766Z 
2025-08-16T22:56:40.6182848Z # price\_importer.import
2025-08-16T22:56:40.6182990Z 
2025-08-16T22:56:40.6183059Z <a id="fees_h10"></a>
2025-08-16T22:56:40.6183183Z 
2025-08-16T22:56:40.6183250Z # fees\_h10
2025-08-16T22:56:40.6183343Z 
2025-08-16T22:56:40.6183418Z <a id="fees_h10.worker"></a>
2025-08-16T22:56:40.6183555Z 
2025-08-16T22:56:40.6183619Z # fees\_h10.worker
2025-08-16T22:56:40.6183727Z 
2025-08-16T22:56:40.6183809Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T22:56:40.6183973Z 
2025-08-16T22:56:40.6184051Z # fees\_h10.tests.test\_smoke
2025-08-16T22:56:40.6184189Z 
2025-08-16T22:56:40.6184269Z <a id="fees_h10.tests"></a>
2025-08-16T22:56:40.6184400Z 
2025-08-16T22:56:40.6184464Z # fees\_h10.tests
2025-08-16T22:56:40.6184576Z 
2025-08-16T22:56:40.6184651Z <a id="fees_h10.client"></a>
2025-08-16T22:56:40.6184781Z 
2025-08-16T22:56:40.6184845Z # fees\_h10.client
2025-08-16T22:56:40.6184954Z 
2025-08-16T22:56:40.6185033Z <a id="fees_h10.repository"></a>
2025-08-16T22:56:40.6185178Z 
2025-08-16T22:56:40.6185260Z # fees\_h10.repository
2025-08-16T22:56:40.6185500Z 
2025-08-16T22:56:40.6185569Z <a id="emailer"></a>
2025-08-16T22:56:40.6185684Z 
2025-08-16T22:56:40.6185751Z # emailer
2025-08-16T22:56:40.6185842Z 
2025-08-16T22:56:40.6185947Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T22:56:40.6186141Z 
2025-08-16T22:56:40.6186231Z # emailer.tests.test\_import\_emailer
2025-08-16T22:56:40.6186394Z 
2025-08-16T22:56:40.6186485Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T22:56:40.6186642Z 
2025-08-16T22:56:40.6186726Z # emailer.tests.test\_smoke
2025-08-16T22:56:40.6186864Z 
2025-08-16T22:56:40.6186947Z <a id="emailer.tests"></a>
2025-08-16T22:56:40.6187077Z 
2025-08-16T22:56:40.6187143Z # emailer.tests
2025-08-16T22:56:40.6187255Z 
2025-08-16T22:56:40.6187341Z <a id="emailer.generate_body"></a>
2025-08-16T22:56:40.6187496Z 
2025-08-16T22:56:40.6187570Z # emailer.generate\_body
2025-08-16T22:56:40.6187705Z 
2025-08-16T22:56:40.6187781Z <a id="llm_server"></a>
2025-08-16T22:56:40.6187900Z 
2025-08-16T22:56:40.6187978Z # llm\_server
2025-08-16T22:56:40.6188083Z 
2025-08-16T22:56:40.6188160Z <a id="llm_server.app"></a>
2025-08-16T22:56:40.6188298Z 
2025-08-16T22:56:40.6188366Z # llm\_server.app
2025-08-16T22:56:40.6188474Z 
