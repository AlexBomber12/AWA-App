2025-08-19T08:19:12.0029612Z ##[group]Run pydoc-markdown
2025-08-19T08:19:12.0030071Z [36;1mpydoc-markdown[0m
2025-08-19T08:19:12.0070075Z shell: /usr/bin/bash -e {0}
2025-08-19T08:19:12.0070301Z env:
2025-08-19T08:19:12.0070543Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:12.0070952Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T08:19:12.0071334Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:12.0071681Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:12.0072038Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:19:12.0072386Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T08:19:12.0072674Z ##[endgroup]
2025-08-19T08:19:12.3538435Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T08:19:12.3539198Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T08:19:12.3539539Z In "pydoc-markdown.yml"
2025-08-19T08:19:12.3539858Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T08:19:12.3540381Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T08:19:12.3540920Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T08:19:12.3541284Z 
2025-08-19T08:19:12.6671208Z <a id="__init__"></a>
2025-08-19T08:19:12.6671552Z 
2025-08-19T08:19:12.6671685Z # \_\_init\_\_
2025-08-19T08:19:12.6671889Z 
2025-08-19T08:19:12.6672066Z <a id="api"></a>
2025-08-19T08:19:12.6672273Z 
2025-08-19T08:19:12.6672397Z # api
2025-08-19T08:19:12.6672560Z 
2025-08-19T08:19:12.6672710Z <a id="api.errors"></a>
2025-08-19T08:19:12.6672973Z 
2025-08-19T08:19:12.6673106Z # api.errors
2025-08-19T08:19:12.6673304Z 
2025-08-19T08:19:12.6673471Z <a id="api.sentry_config"></a>
2025-08-19T08:19:12.6673745Z 
2025-08-19T08:19:12.6673891Z # api.sentry\_config
2025-08-19T08:19:12.6674119Z 
2025-08-19T08:19:12.6674306Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T08:19:12.6674637Z 
2025-08-19T08:19:12.6674794Z # api.tests.test\_sentry\_scrub
2025-08-19T08:19:12.6675121Z 
2025-08-19T08:19:12.6675294Z <a id="api.tests.test_errors_json"></a>
2025-08-19T08:19:12.6675617Z 
2025-08-19T08:19:12.6675781Z # api.tests.test\_errors\_json
2025-08-19T08:19:12.6676050Z 
2025-08-19T08:19:12.6676205Z <a id="api.tests.test_llm"></a>
2025-08-19T08:19:12.6676476Z 
2025-08-19T08:19:12.6676624Z # api.tests.test\_llm
2025-08-19T08:19:12.6676834Z 
2025-08-19T08:19:12.6677000Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T08:19:12.6677322Z 
2025-08-19T08:19:12.6677477Z # api.tests.test\_sentry\_event
2025-08-19T08:19:12.6677739Z 
2025-08-19T08:19:12.6677969Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T08:19:12.6678359Z 
2025-08-19T08:19:12.6678506Z ## DummyTransport Objects
2025-08-19T08:19:12.6679004Z 
2025-08-19T08:19:12.6679140Z ```python
2025-08-19T08:19:12.6679458Z class DummyTransport()
2025-08-19T08:19:12.6679807Z ```
2025-08-19T08:19:12.6679968Z 
2025-08-19T08:19:12.6680294Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T08:19:12.6681170Z 
2025-08-19T08:19:12.6681320Z #### capture\_envelope
2025-08-19T08:19:12.6681555Z 
2025-08-19T08:19:12.6681686Z ```python
2025-08-19T08:19:12.6682013Z def capture_envelope(envelope)
2025-08-19T08:19:12.6682377Z ```
2025-08-19T08:19:12.6682524Z 
2025-08-19T08:19:12.6682755Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T08:19:12.6683167Z 
2025-08-19T08:19:12.6683338Z <a id="api.tests.test_cors"></a>
2025-08-19T08:19:12.6683622Z 
2025-08-19T08:19:12.6683767Z # api.tests.test\_cors
2025-08-19T08:19:12.6684004Z 
2025-08-19T08:19:12.6684166Z <a id="api.tests.test_imports"></a>
2025-08-19T08:19:12.6684471Z 
2025-08-19T08:19:12.6684633Z # api.tests.test\_imports
2025-08-19T08:19:12.6684876Z 
2025-08-19T08:19:12.6685036Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T08:19:12.6685338Z 
2025-08-19T08:19:12.6685484Z # api.tests.test\_rate\_limit
2025-08-19T08:19:12.6685743Z 
2025-08-19T08:19:12.6685926Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T08:19:12.6686611Z 
2025-08-19T08:19:12.6686735Z #### app
2025-08-19T08:19:12.6686898Z 
2025-08-19T08:19:12.6687017Z noqa: E402
2025-08-19T08:19:12.6687179Z 
2025-08-19T08:19:12.6687341Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T08:19:12.6687634Z 
2025-08-19T08:19:12.6687788Z # api.tests.test\_entrypoint
2025-08-19T08:19:12.6688045Z 
2025-08-19T08:19:12.6688193Z <a id="api.tests.test_health"></a>
2025-08-19T08:19:12.6688483Z 
2025-08-19T08:19:12.6688629Z # api.tests.test\_health
2025-08-19T08:19:12.6689063Z 
2025-08-19T08:19:12.6689220Z <a id="api.logging_config"></a>
2025-08-19T08:19:12.6689473Z 
2025-08-19T08:19:12.6689605Z # api.logging\_config
2025-08-19T08:19:12.6689827Z 
2025-08-19T08:19:12.6689988Z <a id="api.migrations.env"></a>
2025-08-19T08:19:12.6690258Z 
2025-08-19T08:19:12.6690396Z # api.migrations.env
2025-08-19T08:19:12.6690624Z 
2025-08-19T08:19:12.6690839Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T08:19:12.6691213Z 
2025-08-19T08:19:12.6691415Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T08:19:12.6691781Z 
2025-08-19T08:19:12.6691974Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T08:19:12.6692330Z 
2025-08-19T08:19:12.6692504Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T08:19:12.6692809Z 
2025-08-19T08:19:12.6693076Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T08:19:12.6693511Z 
2025-08-19T08:19:12.6693762Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T08:19:12.6694169Z 
2025-08-19T08:19:12.6694400Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T08:19:12.6694774Z 
2025-08-19T08:19:12.6694968Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T08:19:12.6695323Z 
2025-08-19T08:19:12.6695547Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T08:19:12.6695914Z 
2025-08-19T08:19:12.6696099Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T08:19:12.6696430Z 
2025-08-19T08:19:12.6696651Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T08:19:12.6697047Z 
2025-08-19T08:19:12.6697258Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T08:19:12.6697601Z 
2025-08-19T08:19:12.6697813Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T08:19:12.6698183Z 
2025-08-19T08:19:12.6698375Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T08:19:12.6698713Z 
2025-08-19T08:19:12.6699136Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T08:19:12.6699530Z 
2025-08-19T08:19:12.6699725Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T08:19:12.6700094Z 
2025-08-19T08:19:12.6700355Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T08:19:12.6700763Z 
2025-08-19T08:19:12.6700981Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T08:19:12.6701351Z 
2025-08-19T08:19:12.6701574Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T08:19:12.6702045Z 
2025-08-19T08:19:12.6702260Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T08:19:12.6702855Z 
2025-08-19T08:19:12.6703116Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T08:19:12.6703545Z 
2025-08-19T08:19:12.6703763Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T08:19:12.6704252Z 
2025-08-19T08:19:12.6704477Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T08:19:12.6704823Z 
2025-08-19T08:19:12.6704988Z # api.migrations.versions.0001\_baseline
2025-08-19T08:19:12.6705310Z 
2025-08-19T08:19:12.6705480Z <a id="api.migrations.versions"></a>
2025-08-19T08:19:12.6705775Z 
2025-08-19T08:19:12.6705930Z # api.migrations.versions
2025-08-19T08:19:12.6706196Z 
2025-08-19T08:19:12.6706343Z <a id="api.migrations"></a>
2025-08-19T08:19:12.6706604Z 
2025-08-19T08:19:12.6706736Z # api.migrations
2025-08-19T08:19:12.6706940Z 
2025-08-19T08:19:12.6707073Z <a id="api.db"></a>
2025-08-19T08:19:12.6707290Z 
2025-08-19T08:19:12.6707418Z # api.db
2025-08-19T08:19:12.6707589Z 
2025-08-19T08:19:12.6707733Z <a id="api.routes.stats"></a>
2025-08-19T08:19:12.6708257Z 
2025-08-19T08:19:12.6708388Z # api.routes.stats
2025-08-19T08:19:12.6708601Z 
2025-08-19T08:19:12.6708984Z <a id="api.routes.stats.kpi"></a>
2025-08-19T08:19:12.6709290Z 
2025-08-19T08:19:12.6709418Z #### kpi
2025-08-19T08:19:12.6709598Z 
2025-08-19T08:19:12.6709735Z ```python
2025-08-19T08:19:12.6710052Z @router.get("/stats/kpi")
2025-08-19T08:19:12.6710507Z def kpi() -> List[Dict[str, int]]
2025-08-19T08:19:12.6710902Z ```
2025-08-19T08:19:12.6711080Z 
2025-08-19T08:19:12.6711241Z Return KPI metrics (mock).
2025-08-19T08:19:12.6711493Z 
2025-08-19T08:19:12.6711694Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T08:19:12.6712042Z 
2025-08-19T08:19:12.6712174Z #### roi\_by\_vendor
2025-08-19T08:19:12.6712383Z 
2025-08-19T08:19:12.6712510Z ```python
2025-08-19T08:19:12.6712825Z @router.get("/stats/roi_by_vendor")
2025-08-19T08:19:12.6713292Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T08:19:12.6713714Z ```
2025-08-19T08:19:12.6713890Z 
2025-08-19T08:19:12.6714065Z Return ROI percent by vendor.
2025-08-19T08:19:12.6714335Z 
2025-08-19T08:19:12.6714507Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T08:19:12.6714825Z 
2025-08-19T08:19:12.6714950Z #### roi\_trend
2025-08-19T08:19:12.6715145Z 
2025-08-19T08:19:12.6715282Z ```python
2025-08-19T08:19:12.6715604Z @router.get("/stats/roi_trend")
2025-08-19T08:19:12.6716061Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T08:19:12.6716514Z ```
2025-08-19T08:19:12.6716686Z 
2025-08-19T08:19:12.6716834Z Return 30-day ROI trend.
2025-08-19T08:19:12.6717075Z 
2025-08-19T08:19:12.6717234Z <a id="api.routes.roi"></a>
2025-08-19T08:19:12.6717487Z 
2025-08-19T08:19:12.6717620Z # api.routes.roi
2025-08-19T08:19:12.6717823Z 
2025-08-19T08:19:12.6717993Z <a id="api.routes.health"></a>
2025-08-19T08:19:12.6718263Z 
2025-08-19T08:19:12.6718397Z # api.routes.health
2025-08-19T08:19:12.6718623Z 
2025-08-19T08:19:12.6718974Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T08:19:12.6719286Z 
2025-08-19T08:19:12.6719439Z #### MAX\_SKEW
2025-08-19T08:19:12.6719618Z 
2025-08-19T08:19:12.6719731Z seconds
2025-08-19T08:19:12.6719886Z 
2025-08-19T08:19:12.6720055Z <a id="api.routes.health.health"></a>
2025-08-19T08:19:12.6720358Z 
2025-08-19T08:19:12.6720475Z #### health
2025-08-19T08:19:12.6720647Z 
2025-08-19T08:19:12.6720757Z ```python
2025-08-19T08:19:12.6721103Z @router.get("/health", include_in_schema=False)
2025-08-19T08:19:12.6721833Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T08:19:12.6722530Z ```
2025-08-19T08:19:12.6722692Z 
2025-08-19T08:19:12.6722911Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T08:19:12.6723278Z 
2025-08-19T08:19:12.6723444Z <a id="api.routes.repository"></a>
2025-08-19T08:19:12.6723724Z 
2025-08-19T08:19:12.6723861Z # api.routes.repository
2025-08-19T08:19:12.6724097Z 
2025-08-19T08:19:12.6724236Z <a id="api.routes"></a>
2025-08-19T08:19:12.6724451Z 
2025-08-19T08:19:12.6724566Z # api.routes
2025-08-19T08:19:12.6724744Z 
2025-08-19T08:19:12.6725114Z <a id="api.models.fee"></a>
2025-08-19T08:19:12.6725361Z 
2025-08-19T08:19:12.6725493Z # api.models.fee
2025-08-19T08:19:12.6725687Z 
2025-08-19T08:19:12.6725820Z <a id="api.models"></a>
2025-08-19T08:19:12.6726049Z 
2025-08-19T08:19:12.6726165Z # api.models
2025-08-19T08:19:12.6726336Z 
2025-08-19T08:19:12.6726482Z <a id="api.roi_repository"></a>
2025-08-19T08:19:12.6726753Z 
2025-08-19T08:19:12.6726881Z # api.roi\_repository
2025-08-19T08:19:12.6727089Z 
2025-08-19T08:19:12.6727231Z <a id="api.main"></a>
2025-08-19T08:19:12.6727438Z 
2025-08-19T08:19:12.6727552Z # api.main
2025-08-19T08:19:12.6727713Z 
2025-08-19T08:19:12.6727865Z <a id="api.main.ready"></a>
2025-08-19T08:19:12.6728104Z 
2025-08-19T08:19:12.6728219Z #### ready
2025-08-19T08:19:12.6728392Z 
2025-08-19T08:19:12.6728514Z ```python
2025-08-19T08:19:12.6729181Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T08:19:12.6730003Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T08:19:12.6730889Z                                                                       str]
2025-08-19T08:19:12.6731309Z ```
2025-08-19T08:19:12.6731466Z 
2025-08-19T08:19:12.6731639Z Return 200 only when migrations are at head.
2025-08-19T08:19:12.6731958Z 
2025-08-19T08:19:12.6732089Z <a id="api.config"></a>
2025-08-19T08:19:12.6732309Z 
2025-08-19T08:19:12.6732425Z # api.config
2025-08-19T08:19:12.6732597Z 
2025-08-19T08:19:12.6732705Z <a id="etl"></a>
2025-08-19T08:19:12.6732882Z 
2025-08-19T08:19:12.6732991Z # etl
2025-08-19T08:19:12.6733143Z 
2025-08-19T08:19:12.6733281Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T08:19:12.6733547Z 
2025-08-19T08:19:12.6733682Z # etl.fba\_fee\_ingestor
2025-08-19T08:19:12.6733902Z 
2025-08-19T08:19:12.6734050Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T08:19:12.6734331Z 
2025-08-19T08:19:12.6734474Z # etl.sp\_fees\_ingestor
2025-08-19T08:19:12.6734702Z 
2025-08-19T08:19:12.6734846Z <a id="etl.keepa_ingestor"></a>
2025-08-19T08:19:12.6735120Z 
2025-08-19T08:19:12.6735254Z # etl.keepa\_ingestor
2025-08-19T08:19:12.6735468Z 
2025-08-19T08:19:12.6735598Z <a id="etl.db"></a>
2025-08-19T08:19:12.6735791Z 
2025-08-19T08:19:12.6735906Z # etl.db
2025-08-19T08:19:12.6736075Z 
2025-08-19T08:19:12.6736227Z <a id="etl.dialects.schemas"></a>
2025-08-19T08:19:12.6736499Z 
2025-08-19T08:19:12.6736631Z # etl.dialects.schemas
2025-08-19T08:19:12.6736858Z 
2025-08-19T08:19:12.6737055Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T08:19:12.6737388Z 
2025-08-19T08:19:12.6737550Z # etl.dialects.amazon\_reimbursements
2025-08-19T08:19:12.6737839Z 
2025-08-19T08:19:12.6738009Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T08:19:12.6738330Z 
2025-08-19T08:19:12.6738495Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T08:19:12.6738971Z 
2025-08-19T08:19:12.6739146Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T08:19:12.6739460Z 
2025-08-19T08:19:12.6739606Z # etl.dialects.amazon\_returns
2025-08-19T08:19:12.6739858Z 
2025-08-19T08:19:12.6740056Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T08:19:12.6740373Z 
2025-08-19T08:19:12.6740531Z # etl.dialects.amazon\_fee\_preview
2025-08-19T08:19:12.6740821Z 
2025-08-19T08:19:12.6741017Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T08:19:12.6741366Z 
2025-08-19T08:19:12.6741531Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T08:19:12.6741853Z 
2025-08-19T08:19:12.6742031Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T08:19:12.6742371Z 
2025-08-19T08:19:12.6742589Z # etl.dialects.amazon\_settlements
2025-08-19T08:19:12.6742882Z 
2025-08-19T08:19:12.6743025Z <a id="etl.dialects"></a>
2025-08-19T08:19:12.6743269Z 
2025-08-19T08:19:12.6743393Z # etl.dialects
2025-08-19T08:19:12.6743576Z 
2025-08-19T08:19:12.6743705Z <a id="ingest"></a>
2025-08-19T08:19:12.6743910Z 
2025-08-19T08:19:12.6744023Z # ingest
2025-08-19T08:19:12.6744181Z 
2025-08-19T08:19:12.6744341Z <a id="ingest.maintenance"></a>
2025-08-19T08:19:12.6744604Z 
2025-08-19T08:19:12.6744738Z # ingest.maintenance
2025-08-19T08:19:12.6745155Z 
2025-08-19T08:19:12.6745309Z <a id="ingest.copy_loader"></a>
2025-08-19T08:19:12.6745568Z 
2025-08-19T08:19:12.6745697Z # ingest.copy\_loader
2025-08-19T08:19:12.6745918Z 
2025-08-19T08:19:12.6746105Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T08:19:12.6746454Z 
2025-08-19T08:19:12.6746604Z #### copy\_df\_via\_temp
2025-08-19T08:19:12.6746839Z 
2025-08-19T08:19:12.6746960Z ```python
2025-08-19T08:19:12.6747294Z def copy_df_via_temp(engine: Engine,
2025-08-19T08:19:12.6747733Z                      df: pd.DataFrame,
2025-08-19T08:19:12.6748172Z                      target_table: str,
2025-08-19T08:19:12.6748582Z                      *,
2025-08-19T08:19:12.6749159Z                      target_schema: Optional[str] = None,
2025-08-19T08:19:12.6749654Z                      columns: Sequence[str],
2025-08-19T08:19:12.6750156Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T08:19:12.6750666Z                      analyze_after: bool = False,
2025-08-19T08:19:12.6751403Z                      connection: Any | None = None) -> int
2025-08-19T08:19:12.6751882Z ```
2025-08-19T08:19:12.6752060Z 
2025-08-19T08:19:12.6752367Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T08:19:12.6752839Z 
2025-08-19T08:19:12.6753007Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T08:19:12.6753313Z 
2025-08-19T08:19:12.6753472Z # ingest.tests.test\_smoke
2025-08-19T08:19:12.6753722Z 
2025-08-19T08:19:12.6753873Z <a id="ingest.tests"></a>
2025-08-19T08:19:12.6754119Z 
2025-08-19T08:19:12.6754258Z # ingest.tests
2025-08-19T08:19:12.6754453Z 
2025-08-19T08:19:12.6754611Z <a id="ingest.upload_router"></a>
2025-08-19T08:19:12.6754908Z 
2025-08-19T08:19:12.6755059Z # ingest.upload\_router
2025-08-19T08:19:12.6755291Z 
2025-08-19T08:19:12.6755517Z <a id="ingest.email_watcher"></a>
2025-08-19T08:19:12.6755808Z 
2025-08-19T08:19:12.6755955Z # ingest.email\_watcher
2025-08-19T08:19:12.6756184Z 
2025-08-19T08:19:12.6756358Z <a id="ingest.email_watcher.main"></a>
2025-08-19T08:19:12.6756687Z 
2025-08-19T08:19:12.6756813Z #### main
2025-08-19T08:19:12.6756996Z 
2025-08-19T08:19:12.6757118Z ```python
2025-08-19T08:19:12.6757429Z def main() -> dict[str, str]
2025-08-19T08:19:12.6757805Z ```
2025-08-19T08:19:12.6757966Z 
2025-08-19T08:19:12.6758234Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T08:19:12.6758695Z 
2025-08-19T08:19:12.6759167Z Returns {"status": "success"} when processing completes.
2025-08-19T08:19:12.6759560Z 
2025-08-19T08:19:12.6759708Z <a id="ingest.tasks"></a>
2025-08-19T08:19:12.6759964Z 
2025-08-19T08:19:12.6760088Z # ingest.tasks
2025-08-19T08:19:12.6760283Z 
2025-08-19T08:19:12.6760463Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T08:19:12.6760805Z 
2025-08-19T08:19:12.6760950Z #### task\_import\_file
2025-08-19T08:19:12.6761180Z 
2025-08-19T08:19:12.6761311Z ```python
2025-08-19T08:19:12.6761702Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T08:19:12.6762244Z def task_import_file(self: Any,
2025-08-19T08:19:12.6762656Z                      uri: str,
2025-08-19T08:19:12.6763089Z                      report_type: Optional[str] = None,
2025-08-19T08:19:12.6763596Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T08:19:12.6764049Z ```
2025-08-19T08:19:12.6764202Z 
2025-08-19T08:19:12.6764449Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T08:19:12.6764836Z 
2025-08-19T08:19:12.6764990Z <a id="ingest.celery_app"></a>
2025-08-19T08:19:12.6765259Z 
2025-08-19T08:19:12.6765403Z # ingest.celery\_app
2025-08-19T08:19:12.6765619Z 
2025-08-19T08:19:12.6765772Z <a id="ingest.ingest_router"></a>
2025-08-19T08:19:12.6766054Z 
2025-08-19T08:19:12.6766186Z # ingest.ingest\_router
2025-08-19T08:19:12.6766405Z 
2025-08-19T08:19:12.6766547Z <a id="logistics_etl"></a>
2025-08-19T08:19:12.6766785Z 
2025-08-19T08:19:12.6766906Z # logistics\_etl
2025-08-19T08:19:12.6767097Z 
2025-08-19T08:19:12.6767240Z Daily logistics ETL job.
2025-08-19T08:19:12.6767479Z 
2025-08-19T08:19:12.6767863Z <a id="logistics_etl.__main__"></a>
2025-08-19T08:19:12.6768164Z 
2025-08-19T08:19:12.6768302Z # logistics\_etl.\_\_main\_\_
2025-08-19T08:19:12.6768549Z 
2025-08-19T08:19:12.6768695Z <a id="logistics_etl.dsn"></a>
2025-08-19T08:19:12.6769161Z 
2025-08-19T08:19:12.6769297Z # logistics\_etl.dsn
2025-08-19T08:19:12.6769510Z 
2025-08-19T08:19:12.6769735Z Local DSN builder to avoid cross-service dependency.
2025-08-19T08:19:12.6770104Z 
2025-08-19T08:19:12.6770269Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T08:19:12.6770585Z 
2025-08-19T08:19:12.6770705Z #### build\_dsn
2025-08-19T08:19:12.6770891Z 
2025-08-19T08:19:12.6771008Z ```python
2025-08-19T08:19:12.6771338Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:19:12.6771754Z ```
2025-08-19T08:19:12.6771908Z 
2025-08-19T08:19:12.6772195Z Return a Postgres DSN assembled from environment variables.
2025-08-19T08:19:12.6772612Z 
2025-08-19T08:19:12.6772896Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T08:19:12.6773880Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T08:19:12.6774543Z error when any required variable is missing.
2025-08-19T08:19:12.6774899Z 
2025-08-19T08:19:12.6775088Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T08:19:12.6775443Z 
2025-08-19T08:19:12.6775608Z # logistics\_etl.tests.conftest
2025-08-19T08:19:12.6775886Z 
2025-08-19T08:19:12.6776093Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T08:19:12.6776455Z 
2025-08-19T08:19:12.6776631Z # logistics\_etl.tests.test\_repository
2025-08-19T08:19:12.6776968Z 
2025-08-19T08:19:12.6777152Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T08:19:12.6777489Z 
2025-08-19T08:19:12.6777655Z # logistics\_etl.tests.test\_cron
2025-08-19T08:19:12.6777960Z 
2025-08-19T08:19:12.6778149Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T08:19:12.6778493Z 
2025-08-19T08:19:12.6778672Z # logistics\_etl.tests.test\_imports
2025-08-19T08:19:12.6779195Z 
2025-08-19T08:19:12.6779391Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T08:19:12.6779738Z 
2025-08-19T08:19:12.6779899Z # logistics\_etl.tests.test\_smoke
2025-08-19T08:19:12.6780188Z 
2025-08-19T08:19:12.6780362Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T08:19:12.6780690Z 
2025-08-19T08:19:12.6780847Z # logistics\_etl.tests.test\_client
2025-08-19T08:19:12.6781144Z 
2025-08-19T08:19:12.6781328Z <a id="logistics_etl.tests"></a>
2025-08-19T08:19:12.6781627Z 
2025-08-19T08:19:12.6781760Z # logistics\_etl.tests
2025-08-19T08:19:12.6781986Z 
2025-08-19T08:19:12.6782132Z <a id="logistics_etl.flow"></a>
2025-08-19T08:19:12.6782391Z 
2025-08-19T08:19:12.6782529Z # logistics\_etl.flow
2025-08-19T08:19:12.6782751Z 
2025-08-19T08:19:12.6782900Z <a id="logistics_etl.client"></a>
2025-08-19T08:19:12.6783174Z 
2025-08-19T08:19:12.6783325Z # logistics\_etl.client
2025-08-19T08:19:12.6783550Z 
2025-08-19T08:19:12.6783719Z <a id="logistics_etl.cron"></a>
2025-08-19T08:19:12.6783985Z 
2025-08-19T08:19:12.6784126Z # logistics\_etl.cron
2025-08-19T08:19:12.6784370Z 
2025-08-19T08:19:12.6784515Z <a id="logistics_etl.db"></a>
2025-08-19T08:19:12.6784786Z 
2025-08-19T08:19:12.6785018Z # logistics\_etl.db
2025-08-19T08:19:12.6785237Z 
2025-08-19T08:19:12.6785414Z <a id="logistics_etl.repository"></a>
2025-08-19T08:19:12.6785745Z 
2025-08-19T08:19:12.6785902Z # logistics\_etl.repository
2025-08-19T08:19:12.6786165Z 
2025-08-19T08:19:12.6786313Z <a id="alert_bot"></a>
2025-08-19T08:19:12.6786535Z 
2025-08-19T08:19:12.6786660Z # alert\_bot
2025-08-19T08:19:12.6786854Z 
2025-08-19T08:19:12.6787021Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T08:19:12.6787335Z 
2025-08-19T08:19:12.6787493Z # alert\_bot.tests.test\_smoke
2025-08-19T08:19:12.6787771Z 
2025-08-19T08:19:12.6787921Z <a id="alert_bot.tests"></a>
2025-08-19T08:19:12.6788184Z 
2025-08-19T08:19:12.6788328Z # alert\_bot.tests
2025-08-19T08:19:12.6788535Z 
2025-08-19T08:19:12.6788690Z <a id="alert_bot.alert_bot"></a>
2025-08-19T08:19:12.6789193Z 
2025-08-19T08:19:12.6789352Z # alert\_bot.alert\_bot
2025-08-19T08:19:12.6789830Z 
2025-08-19T08:19:12.6789980Z <a id="alert_bot.rules"></a>
2025-08-19T08:19:12.6790250Z 
2025-08-19T08:19:12.6790378Z # alert\_bot.rules
2025-08-19T08:19:12.6790580Z 
2025-08-19T08:19:12.6790719Z <a id="common"></a>
2025-08-19T08:19:12.6790922Z 
2025-08-19T08:19:12.6791040Z # common
2025-08-19T08:19:12.6791208Z 
2025-08-19T08:19:12.6791354Z <a id="common.dsn"></a>
2025-08-19T08:19:12.6791577Z 
2025-08-19T08:19:12.6791695Z # common.dsn
2025-08-19T08:19:12.6791883Z 
2025-08-19T08:19:12.6792040Z <a id="common.dsn.build_dsn"></a>
2025-08-19T08:19:12.6792294Z 
2025-08-19T08:19:12.6792414Z #### build\_dsn
2025-08-19T08:19:12.6792612Z 
2025-08-19T08:19:12.6792734Z ```python
2025-08-19T08:19:12.6793072Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:19:12.6793489Z ```
2025-08-19T08:19:12.6793648Z 
2025-08-19T08:19:12.6793890Z Return a Postgres DSN, validating required variables.
2025-08-19T08:19:12.6794278Z 
2025-08-19T08:19:12.6794633Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T08:19:12.6795689Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T08:19:12.6796455Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T08:19:12.6797049Z missing.
2025-08-19T08:19:12.6797217Z 
2025-08-19T08:19:12.6797382Z <a id="common.models_vendor"></a>
2025-08-19T08:19:12.6797662Z 
2025-08-19T08:19:12.6797796Z # common.models\_vendor
2025-08-19T08:19:12.6798021Z 
2025-08-19T08:19:12.6798179Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T08:19:12.6798495Z 
2025-08-19T08:19:12.6798618Z ## Vendor Objects
2025-08-19T08:19:12.6799065Z 
2025-08-19T08:19:12.6799188Z ```python
2025-08-19T08:19:12.6799485Z class Vendor(Base)
2025-08-19T08:19:12.6799788Z ```
2025-08-19T08:19:12.6799941Z 
2025-08-19T08:19:12.6800089Z Vendor of inventory items.
2025-08-19T08:19:12.6800336Z 
2025-08-19T08:19:12.6800526Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T08:19:12.6800892Z 
2025-08-19T08:19:12.6801038Z ## VendorPrice Objects
2025-08-19T08:19:12.6801260Z 
2025-08-19T08:19:12.6801376Z ```python
2025-08-19T08:19:12.6801675Z class VendorPrice(Base)
2025-08-19T08:19:12.6802012Z ```
2025-08-19T08:19:12.6802171Z 
2025-08-19T08:19:12.6802371Z Association table linking vendors to pricing.
2025-08-19T08:19:12.6802724Z 
2025-08-19T08:19:12.6802879Z <a id="common.db_url"></a>
2025-08-19T08:19:12.6803124Z 
2025-08-19T08:19:12.6803247Z # common.db\_url
2025-08-19T08:19:12.6803445Z 
2025-08-19T08:19:12.6803594Z <a id="common.db_url.build_url"></a>
2025-08-19T08:19:12.6803888Z 
2025-08-19T08:19:12.6804059Z #### build\_url
2025-08-19T08:19:12.6804274Z 
2025-08-19T08:19:12.6804401Z ```python
2025-08-19T08:19:12.6804763Z def build_url(async_: bool = True) -> str
2025-08-19T08:19:12.6805203Z ```
2025-08-19T08:19:12.6805364Z 
2025-08-19T08:19:12.6805561Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:19:12.6805904Z 
2025-08-19T08:19:12.6806058Z <a id="common.keepa"></a>
2025-08-19T08:19:12.6806335Z 
2025-08-19T08:19:12.6806467Z # common.keepa
2025-08-19T08:19:12.6806665Z 
2025-08-19T08:19:12.6806813Z <a id="common.llm"></a>
2025-08-19T08:19:12.6807045Z 
2025-08-19T08:19:12.6807172Z # common.llm
2025-08-19T08:19:12.6807358Z 
2025-08-19T08:19:12.6807514Z <a id="common.settings"></a>
2025-08-19T08:19:12.6807782Z 
2025-08-19T08:19:12.6807910Z # common.settings
2025-08-19T08:19:12.6808113Z 
2025-08-19T08:19:12.6808244Z <a id="common.db"></a>
2025-08-19T08:19:12.6808459Z 
2025-08-19T08:19:12.6808577Z # common.db
2025-08-19T08:19:12.6808965Z 
2025-08-19T08:19:12.6809151Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T08:19:12.6809477Z 
2025-08-19T08:19:12.6809623Z #### build\_sqlalchemy\_url
2025-08-19T08:19:12.6809870Z 
2025-08-19T08:19:12.6809989Z ```python
2025-08-19T08:19:12.6810314Z def build_sqlalchemy_url() -> str
2025-08-19T08:19:12.6810696Z ```
2025-08-19T08:19:12.6810858Z 
2025-08-19T08:19:12.6811039Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:19:12.6811373Z 
2025-08-19T08:19:12.6811864Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T08:19:12.6812199Z 
2025-08-19T08:19:12.6812352Z #### build\_asyncpg\_dsn
2025-08-19T08:19:12.6812598Z 
2025-08-19T08:19:12.6812736Z ```python
2025-08-19T08:19:12.6813061Z def build_asyncpg_dsn() -> str
2025-08-19T08:19:12.6813456Z ```
2025-08-19T08:19:12.6813625Z 
2025-08-19T08:19:12.6813860Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:19:12.6814251Z 
2025-08-19T08:19:12.6814416Z <a id="common.db.refresh_mvs"></a>
2025-08-19T08:19:12.6814714Z 
2025-08-19T08:19:12.6814844Z #### refresh\_mvs
2025-08-19T08:19:12.6815041Z 
2025-08-19T08:19:12.6815159Z ```python
2025-08-19T08:19:12.6815544Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:19:12.6816066Z ```
2025-08-19T08:19:12.6816262Z 
2025-08-19T08:19:12.6816535Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:19:12.6816986Z 
2025-08-19T08:19:12.6817145Z <a id="common.config"></a>
2025-08-19T08:19:12.6817409Z 
2025-08-19T08:19:12.6817810Z # common.config
2025-08-19T08:19:12.6818020Z 
2025-08-19T08:19:12.6818179Z <a id="common.base"></a>
2025-08-19T08:19:12.6818425Z 
2025-08-19T08:19:12.6818553Z # common.base
2025-08-19T08:19:12.6818937Z 
2025-08-19T08:19:12.6819090Z <a id="common.base.Base"></a>
2025-08-19T08:19:12.6819366Z 
2025-08-19T08:19:12.6819494Z ## Base Objects
2025-08-19T08:19:12.6819696Z 
2025-08-19T08:19:12.6819823Z ```python
2025-08-19T08:19:12.6820183Z class Base(DeclarativeBase)
2025-08-19T08:19:12.6820565Z ```
2025-08-19T08:19:12.6820728Z 
2025-08-19T08:19:12.6820894Z Base class for SQLAlchemy models.
2025-08-19T08:19:12.6821187Z 
2025-08-19T08:19:12.6821329Z <a id="repricer"></a>
2025-08-19T08:19:12.6821557Z 
2025-08-19T08:19:12.6821678Z # repricer
2025-08-19T08:19:12.6821853Z 
2025-08-19T08:19:12.6822017Z <a id="repricer.app.schemas"></a>
2025-08-19T08:19:12.6822387Z 
2025-08-19T08:19:12.6822542Z # repricer.app.schemas
2025-08-19T08:19:12.6822786Z 
2025-08-19T08:19:12.6822959Z <a id="repricer.app.deps"></a>
2025-08-19T08:19:12.6823248Z 
2025-08-19T08:19:12.6823394Z # repricer.app.deps
2025-08-19T08:19:12.6823618Z 
2025-08-19T08:19:12.6823837Z Placeholder module for Keepa / SP-API clients.
2025-08-19T08:19:12.6824201Z 
2025-08-19T08:19:12.6824370Z <a id="repricer.app.logic"></a>
2025-08-19T08:19:12.6824664Z 
2025-08-19T08:19:12.6824813Z # repricer.app.logic
2025-08-19T08:19:12.6825045Z 
2025-08-19T08:19:12.6825232Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T08:19:12.6825573Z 
2025-08-19T08:19:12.6825702Z #### MIN\_MARGIN
2025-08-19T08:19:12.6825904Z 
2025-08-19T08:19:12.6826033Z 15 % ROI
2025-08-19T08:19:12.6826203Z 
2025-08-19T08:19:12.6826399Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T08:19:12.6826758Z 
2025-08-19T08:19:12.6826893Z #### compute\_price
2025-08-19T08:19:12.6827101Z 
2025-08-19T08:19:12.6827227Z ```python
2025-08-19T08:19:12.6827714Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T08:19:12.6828303Z ```
2025-08-19T08:19:12.6828470Z 
2025-08-19T08:19:12.6828706Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T08:19:12.6829463Z Replace with real competitive logic later.
2025-08-19T08:19:12.6829797Z 
2025-08-19T08:19:12.6829951Z <a id="repricer.app.main"></a>
2025-08-19T08:19:12.6830235Z 
2025-08-19T08:19:12.6830375Z # repricer.app.main
2025-08-19T08:19:12.6830588Z 
2025-08-19T08:19:12.6830741Z <a id="repricer.app"></a>
2025-08-19T08:19:12.6830989Z 
2025-08-19T08:19:12.6831120Z # repricer.app
2025-08-19T08:19:12.6831305Z 
2025-08-19T08:19:12.6831485Z <a id="repricer.tests.test_imports"></a>
2025-08-19T08:19:12.6831806Z 
2025-08-19T08:19:12.6831965Z # repricer.tests.test\_imports
2025-08-19T08:19:12.6832242Z 
2025-08-19T08:19:12.6832418Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T08:19:12.6832733Z 
2025-08-19T08:19:12.6832894Z # repricer.tests.test\_smoke
2025-08-19T08:19:12.6833167Z 
2025-08-19T08:19:12.6833316Z <a id="repricer.tests"></a>
2025-08-19T08:19:12.6833571Z 
2025-08-19T08:19:12.6833709Z # repricer.tests
2025-08-19T08:19:12.6834181Z 
2025-08-19T08:19:12.6834306Z <a id="db"></a>
2025-08-19T08:19:12.6834510Z 
2025-08-19T08:19:12.6834625Z # db
2025-08-19T08:19:12.6834786Z 
2025-08-19T08:19:12.6834935Z <a id="db.utils.views"></a>
2025-08-19T08:19:12.6835204Z 
2025-08-19T08:19:12.6835336Z # db.utils.views
2025-08-19T08:19:12.6835547Z 
2025-08-19T08:19:12.6835727Z <a id="db.utils.views.replace_view"></a>
2025-08-19T08:19:12.6836046Z 
2025-08-19T08:19:12.6836178Z #### replace\_view
2025-08-19T08:19:12.6836393Z 
2025-08-19T08:19:12.6836514Z ```python
2025-08-19T08:19:12.6836898Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T08:19:12.6837434Z ```
2025-08-19T08:19:12.6837595Z 
2025-08-19T08:19:12.6837773Z Drop and recreate a SQL view atomically.
2025-08-19T08:19:12.6838104Z 
2025-08-19T08:19:12.6838240Z <a id="db.utils"></a>
2025-08-19T08:19:12.6838467Z 
2025-08-19T08:19:12.6838600Z # db.utils
2025-08-19T08:19:12.6838974Z 
2025-08-19T08:19:12.6839128Z <a id="price_importer"></a>
2025-08-19T08:19:12.6839398Z 
2025-08-19T08:19:12.6839787Z # price\_importer
2025-08-19T08:19:12.6839999Z 
2025-08-19T08:19:12.6840203Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T08:19:12.6840574Z 
2025-08-19T08:19:12.6840745Z # price\_importer.services\_common.dsn
2025-08-19T08:19:12.6841051Z 
2025-08-19T08:19:12.6841286Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T08:19:12.6841679Z 
2025-08-19T08:19:12.6841800Z #### build\_dsn
2025-08-19T08:19:12.6841993Z 
2025-08-19T08:19:12.6842112Z ```python
2025-08-19T08:19:12.6842428Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:19:12.6842852Z ```
2025-08-19T08:19:12.6843009Z 
2025-08-19T08:19:12.6843131Z Return safe DSN.
2025-08-19T08:19:12.6843337Z 
2025-08-19T08:19:12.6843877Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T08:19:12.6844276Z 
2025-08-19T08:19:12.6844530Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T08:19:12.6844940Z 
2025-08-19T08:19:12.6845151Z # price\_importer.services\_common.models\_vendor
2025-08-19T08:19:12.6845554Z 
2025-08-19T08:19:12.6845758Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T08:19:12.6846127Z 
2025-08-19T08:19:12.6846320Z # price\_importer.services\_common.db\_url
2025-08-19T08:19:12.6846659Z 
2025-08-19T08:19:12.6846915Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T08:19:12.6847329Z 
2025-08-19T08:19:12.6847464Z #### build\_url
2025-08-19T08:19:12.6847656Z 
2025-08-19T08:19:12.6847779Z ```python
2025-08-19T08:19:12.6848118Z def build_url(async_: bool = True) -> str
2025-08-19T08:19:12.6848568Z ```
2025-08-19T08:19:12.6848937Z 
2025-08-19T08:19:12.6849135Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:19:12.6849486Z 
2025-08-19T08:19:12.6849709Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T08:19:12.6850073Z 
2025-08-19T08:19:12.6850254Z # price\_importer.services\_common.keepa
2025-08-19T08:19:12.6850590Z 
2025-08-19T08:19:12.6850792Z <a id="price_importer.services_common.llm"></a>
2025-08-19T08:19:12.6851157Z 
2025-08-19T08:19:12.6851335Z # price\_importer.services\_common.llm
2025-08-19T08:19:12.6851665Z 
2025-08-19T08:19:12.6851887Z <a id="price_importer.services_common.settings"></a>
2025-08-19T08:19:12.6852269Z 
2025-08-19T08:19:12.6852463Z # price\_importer.services\_common.settings
2025-08-19T08:19:12.6852799Z 
2025-08-19T08:19:12.6852996Z <a id="price_importer.services_common.db"></a>
2025-08-19T08:19:12.6853354Z 
2025-08-19T08:19:12.6853528Z # price\_importer.services\_common.db
2025-08-19T08:19:12.6853841Z 
2025-08-19T08:19:12.6854131Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T08:19:12.6854601Z 
2025-08-19T08:19:12.6854745Z #### build\_sqlalchemy\_url
2025-08-19T08:19:12.6854991Z 
2025-08-19T08:19:12.6855120Z ```python
2025-08-19T08:19:12.6855445Z def build_sqlalchemy_url() -> str
2025-08-19T08:19:12.6855831Z ```
2025-08-19T08:19:12.6855986Z 
2025-08-19T08:19:12.6856171Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:19:12.6856505Z 
2025-08-19T08:19:12.6856782Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T08:19:12.6857466Z 
2025-08-19T08:19:12.6857624Z #### build\_asyncpg\_dsn
2025-08-19T08:19:12.6857868Z 
2025-08-19T08:19:12.6857994Z ```python
2025-08-19T08:19:12.6858324Z def build_asyncpg_dsn() -> str
2025-08-19T08:19:12.6858711Z ```
2025-08-19T08:19:12.6859070Z 
2025-08-19T08:19:12.6859334Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:19:12.6859738Z 
2025-08-19T08:19:12.6859991Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T08:19:12.6860403Z 
2025-08-19T08:19:12.6860533Z #### refresh\_mvs
2025-08-19T08:19:12.6860742Z 
2025-08-19T08:19:12.6860879Z ```python
2025-08-19T08:19:12.6861262Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:19:12.6861759Z ```
2025-08-19T08:19:12.6861926Z 
2025-08-19T08:19:12.6862186Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:19:12.6862614Z 
2025-08-19T08:19:12.6862797Z <a id="price_importer.services_common"></a>
2025-08-19T08:19:12.6863367Z 
2025-08-19T08:19:12.6863534Z # price\_importer.services\_common
2025-08-19T08:19:12.6863837Z 
2025-08-19T08:19:12.6864028Z <a id="price_importer.services_common.base"></a>
2025-08-19T08:19:12.6864383Z 
2025-08-19T08:19:12.6864559Z # price\_importer.services\_common.base
2025-08-19T08:19:12.6864875Z 
2025-08-19T08:19:12.6865043Z <a id="price_importer.normaliser"></a>
2025-08-19T08:19:12.6865359Z 
2025-08-19T08:19:12.6865516Z # price\_importer.normaliser
2025-08-19T08:19:12.6865777Z 
2025-08-19T08:19:12.6865972Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T08:19:12.6866349Z 
2025-08-19T08:19:12.6866527Z # price\_importer.common.models\_vendor
2025-08-19T08:19:12.6866854Z 
2025-08-19T08:19:12.6867082Z <a id="price_importer.common.db_url"></a>
2025-08-19T08:19:12.6867409Z 
2025-08-19T08:19:12.6867575Z # price\_importer.common.db\_url
2025-08-19T08:19:12.6867870Z 
2025-08-19T08:19:12.6868070Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T08:19:12.6868441Z 
2025-08-19T08:19:12.6868570Z #### make\_dsn
2025-08-19T08:19:12.6868961Z 
2025-08-19T08:19:12.6869085Z ```python
2025-08-19T08:19:12.6869424Z def make_dsn(async_: bool = False) -> str
2025-08-19T08:19:12.6869773Z ```
2025-08-19T08:19:12.6869903Z 
2025-08-19T08:19:12.6870093Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T08:19:12.6870421Z 
2025-08-19T08:19:12.6870633Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T08:19:12.6871011Z 
2025-08-19T08:19:12.6871138Z #### build\_url
2025-08-19T08:19:12.6871334Z 
2025-08-19T08:19:12.6871460Z ```python
2025-08-19T08:19:12.6871789Z def build_url(async_: bool = False) -> str
2025-08-19T08:19:12.6872245Z ```
2025-08-19T08:19:12.6872412Z 
2025-08-19T08:19:12.6872660Z Return Postgres DSN built from environment variables.
2025-08-19T08:19:12.6873055Z 
2025-08-19T08:19:12.6873217Z <a id="price_importer.common"></a>
2025-08-19T08:19:12.6873502Z 
2025-08-19T08:19:12.6873645Z # price\_importer.common
2025-08-19T08:19:12.6873904Z 
2025-08-19T08:19:12.6874096Z <a id="price_importer.common.base"></a>
2025-08-19T08:19:12.6874418Z 
2025-08-19T08:19:12.6874578Z # price\_importer.common.base
2025-08-19T08:19:12.6874847Z 
2025-08-19T08:19:12.6875025Z <a id="price_importer.tests.conftest"></a>
2025-08-19T08:19:12.6875359Z 
2025-08-19T08:19:12.6875526Z # price\_importer.tests.conftest
2025-08-19T08:19:12.6875851Z 
2025-08-19T08:19:12.6876046Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T08:19:12.6876388Z 
2025-08-19T08:19:12.6876549Z # price\_importer.tests.test\_reader
2025-08-19T08:19:12.6876851Z 
2025-08-19T08:19:12.6877050Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T08:19:12.6877394Z 
2025-08-19T08:19:12.6877560Z # price\_importer.tests.test\_imports
2025-08-19T08:19:12.6877871Z 
2025-08-19T08:19:12.6878048Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T08:19:12.6878372Z 
2025-08-19T08:19:12.6878534Z # price\_importer.tests.test\_smoke
2025-08-19T08:19:12.6879038Z 
2025-08-19T08:19:12.6879253Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T08:19:12.6879843Z 
2025-08-19T08:19:12.6880035Z # price\_importer.tests.test\_normaliser
2025-08-19T08:19:12.6880364Z 
2025-08-19T08:19:12.6880531Z <a id="price_importer.tests"></a>
2025-08-19T08:19:12.6880819Z 
2025-08-19T08:19:12.6880963Z # price\_importer.tests
2025-08-19T08:19:12.6881210Z 
2025-08-19T08:19:12.6881380Z <a id="price_importer.reader"></a>
2025-08-19T08:19:12.6881702Z 
2025-08-19T08:19:12.6881860Z # price\_importer.reader
2025-08-19T08:19:12.6882115Z 
2025-08-19T08:19:12.6882305Z <a id="price_importer.repository"></a>
2025-08-19T08:19:12.6882635Z 
2025-08-19T08:19:12.6882798Z # price\_importer.repository
2025-08-19T08:19:12.6883081Z 
2025-08-19T08:19:12.6883239Z <a id="price_importer.import"></a>
2025-08-19T08:19:12.6883532Z 
2025-08-19T08:19:12.6883679Z # price\_importer.import
2025-08-19T08:19:12.6883930Z 
2025-08-19T08:19:12.6884065Z <a id="fees_h10"></a>
2025-08-19T08:19:12.6884282Z 
2025-08-19T08:19:12.6884411Z # fees\_h10
2025-08-19T08:19:12.6884835Z 
2025-08-19T08:19:12.6884993Z <a id="fees_h10.worker"></a>
2025-08-19T08:19:12.6885269Z 
2025-08-19T08:19:12.6885418Z # fees\_h10.worker
2025-08-19T08:19:12.6885631Z 
2025-08-19T08:19:12.6885823Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T08:19:12.6886175Z 
2025-08-19T08:19:12.6886324Z #### list\_active\_asins
2025-08-19T08:19:12.6886562Z 
2025-08-19T08:19:12.6886694Z ```python
2025-08-19T08:19:12.6887023Z def list_active_asins() -> list[str]
2025-08-19T08:19:12.6887437Z ```
2025-08-19T08:19:12.6887598Z 
2025-08-19T08:19:12.6887814Z Return known ASINs or an empty list if unavailable.
2025-08-19T08:19:12.6888199Z 
2025-08-19T08:19:12.6888365Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T08:19:12.6888674Z 
2025-08-19T08:19:12.6889019Z # fees\_h10.tests.test\_smoke
2025-08-19T08:19:12.6889304Z 
2025-08-19T08:19:12.6889451Z <a id="fees_h10.tests"></a>
2025-08-19T08:19:12.6889696Z 
2025-08-19T08:19:12.6889840Z # fees\_h10.tests
2025-08-19T08:19:12.6890043Z 
2025-08-19T08:19:12.6890203Z <a id="fees_h10.client"></a>
2025-08-19T08:19:12.6890477Z 
2025-08-19T08:19:12.6890606Z # fees\_h10.client
2025-08-19T08:19:12.6890809Z 
2025-08-19T08:19:12.6890974Z <a id="fees_h10.repository"></a>
2025-08-19T08:19:12.6891267Z 
2025-08-19T08:19:12.6891410Z # fees\_h10.repository
2025-08-19T08:19:12.6891634Z 
2025-08-19T08:19:12.6891782Z <a id="emailer"></a>
2025-08-19T08:19:12.6892002Z 
2025-08-19T08:19:12.6892120Z # emailer
2025-08-19T08:19:12.6892285Z 
2025-08-19T08:19:12.6892480Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T08:19:12.6892830Z 
2025-08-19T08:19:12.6892994Z # emailer.tests.test\_import\_emailer
2025-08-19T08:19:12.6893302Z 
2025-08-19T08:19:12.6893461Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T08:19:12.6893760Z 
2025-08-19T08:19:12.6893917Z # emailer.tests.test\_smoke
2025-08-19T08:19:12.6894170Z 
2025-08-19T08:19:12.6894313Z <a id="emailer.tests"></a>
2025-08-19T08:19:12.6894556Z 
2025-08-19T08:19:12.6894692Z # emailer.tests
2025-08-19T08:19:12.6894888Z 
2025-08-19T08:19:12.6895070Z <a id="emailer.generate_body"></a>
2025-08-19T08:19:12.6895370Z 
2025-08-19T08:19:12.6895519Z # emailer.generate\_body
2025-08-19T08:19:12.6895772Z 
2025-08-19T08:19:12.6895913Z <a id="llm_server"></a>
2025-08-19T08:19:12.6896154Z 
2025-08-19T08:19:12.6896281Z # llm\_server
2025-08-19T08:19:12.6896464Z 
2025-08-19T08:19:12.6896625Z <a id="llm_server.app"></a>
2025-08-19T08:19:12.6896865Z 
2025-08-19T08:19:12.6897000Z # llm\_server.app
2025-08-19T08:19:12.6897215Z 
