2025-08-18T14:36:50.0120279Z ##[group]Run pydoc-markdown
2025-08-18T14:36:50.0120594Z [36;1mpydoc-markdown[0m
2025-08-18T14:36:50.0163867Z shell: /usr/bin/bash -e {0}
2025-08-18T14:36:50.0164090Z env:
2025-08-18T14:36:50.0164327Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:36:50.0164722Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T14:36:50.0165126Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:36:50.0165489Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:36:50.0165839Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:36:50.0166182Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T14:36:50.0166465Z ##[endgroup]
2025-08-18T14:36:50.3505524Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T14:36:50.3506257Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T14:36:50.3506724Z In "pydoc-markdown.yml"
2025-08-18T14:36:50.3507177Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T14:36:50.3507963Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T14:36:50.3508766Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T14:36:50.3509319Z 
2025-08-18T14:36:50.6471874Z <a id="__init__"></a>
2025-08-18T14:36:50.6472548Z 
2025-08-18T14:36:50.6472698Z # \_\_init\_\_
2025-08-18T14:36:50.6472906Z 
2025-08-18T14:36:50.6473038Z <a id="api"></a>
2025-08-18T14:36:50.6473254Z 
2025-08-18T14:36:50.6473373Z # api
2025-08-18T14:36:50.6473548Z 
2025-08-18T14:36:50.6473704Z <a id="api.errors"></a>
2025-08-18T14:36:50.6473956Z 
2025-08-18T14:36:50.6474088Z # api.errors
2025-08-18T14:36:50.6474283Z 
2025-08-18T14:36:50.6474466Z <a id="api.tests.test_errors_json"></a>
2025-08-18T14:36:50.6474807Z 
2025-08-18T14:36:50.6474972Z # api.tests.test\_errors\_json
2025-08-18T14:36:50.6475260Z 
2025-08-18T14:36:50.6475417Z <a id="api.tests.test_llm"></a>
2025-08-18T14:36:50.6475703Z 
2025-08-18T14:36:50.6475862Z # api.tests.test\_llm
2025-08-18T14:36:50.6476165Z 
2025-08-18T14:36:50.6476333Z <a id="api.tests.test_cors"></a>
2025-08-18T14:36:50.6476675Z 
2025-08-18T14:36:50.6476828Z # api.tests.test\_cors
2025-08-18T14:36:50.6477064Z 
2025-08-18T14:36:50.6477226Z <a id="api.tests.test_imports"></a>
2025-08-18T14:36:50.6477537Z 
2025-08-18T14:36:50.6477685Z # api.tests.test\_imports
2025-08-18T14:36:50.6477946Z 
2025-08-18T14:36:50.6478129Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T14:36:50.6478451Z 
2025-08-18T14:36:50.6478603Z # api.tests.test\_entrypoint
2025-08-18T14:36:50.6478876Z 
2025-08-18T14:36:50.6479052Z <a id="api.tests.test_health"></a>
2025-08-18T14:36:50.6479345Z 
2025-08-18T14:36:50.6479495Z # api.tests.test\_health
2025-08-18T14:36:50.6479746Z 
2025-08-18T14:36:50.6479899Z <a id="api.logging_config"></a>
2025-08-18T14:36:50.6480169Z 
2025-08-18T14:36:50.6480308Z # api.logging\_config
2025-08-18T14:36:50.6480544Z 
2025-08-18T14:36:50.6480700Z <a id="api.migrations.env"></a>
2025-08-18T14:36:50.6480973Z 
2025-08-18T14:36:50.6481522Z # api.migrations.env
2025-08-18T14:36:50.6481771Z 
2025-08-18T14:36:50.6482202Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T14:36:50.6482634Z 
2025-08-18T14:36:50.6482847Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T14:36:50.6483213Z 
2025-08-18T14:36:50.6483429Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T14:36:50.6483819Z 
2025-08-18T14:36:50.6484013Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T14:36:50.6484356Z 
2025-08-18T14:36:50.6484664Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T14:36:50.6485117Z 
2025-08-18T14:36:50.6485384Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T14:36:50.6485818Z 
2025-08-18T14:36:50.6486052Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T14:36:50.6486445Z 
2025-08-18T14:36:50.6486667Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T14:36:50.6487041Z 
2025-08-18T14:36:50.6487276Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T14:36:50.6488042Z 
2025-08-18T14:36:50.6488261Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T14:36:50.6488619Z 
2025-08-18T14:36:50.6488856Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T14:36:50.6489277Z 
2025-08-18T14:36:50.6489501Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T14:36:50.6489871Z 
2025-08-18T14:36:50.6490113Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T14:36:50.6490506Z 
2025-08-18T14:36:50.6490716Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T14:36:50.6491090Z 
2025-08-18T14:36:50.6491336Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T14:36:50.6491743Z 
2025-08-18T14:36:50.6492127Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T14:36:50.6492528Z 
2025-08-18T14:36:50.6492801Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T14:36:50.6493229Z 
2025-08-18T14:36:50.6493466Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T14:36:50.6493873Z 
2025-08-18T14:36:50.6494114Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T14:36:50.6494523Z 
2025-08-18T14:36:50.6494736Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T14:36:50.6495107Z 
2025-08-18T14:36:50.6495366Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T14:36:50.6495799Z 
2025-08-18T14:36:50.6496025Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T14:36:50.6496408Z 
2025-08-18T14:36:50.6496628Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T14:36:50.6497015Z 
2025-08-18T14:36:50.6497203Z # api.migrations.versions.0001\_baseline
2025-08-18T14:36:50.6497549Z 
2025-08-18T14:36:50.6497726Z <a id="api.migrations.versions"></a>
2025-08-18T14:36:50.6498044Z 
2025-08-18T14:36:50.6498213Z # api.migrations.versions
2025-08-18T14:36:50.6498475Z 
2025-08-18T14:36:50.6498626Z <a id="api.migrations"></a>
2025-08-18T14:36:50.6498888Z 
2025-08-18T14:36:50.6499029Z # api.migrations
2025-08-18T14:36:50.6499249Z 
2025-08-18T14:36:50.6499379Z <a id="api.db"></a>
2025-08-18T14:36:50.6499599Z 
2025-08-18T14:36:50.6499718Z # api.db
2025-08-18T14:36:50.6499890Z 
2025-08-18T14:36:50.6500044Z <a id="api.routes.stats"></a>
2025-08-18T14:36:50.6500329Z 
2025-08-18T14:36:50.6500464Z # api.routes.stats
2025-08-18T14:36:50.6500674Z 
2025-08-18T14:36:50.6500849Z <a id="api.routes.stats.kpi"></a>
2025-08-18T14:36:50.6501147Z 
2025-08-18T14:36:50.6501271Z #### kpi
2025-08-18T14:36:50.6501450Z 
2025-08-18T14:36:50.6501574Z ```python
2025-08-18T14:36:50.6501894Z @router.get("/stats/kpi")
2025-08-18T14:36:50.6502521Z def kpi() -> List[Dict[str, int]]
2025-08-18T14:36:50.6502932Z ```
2025-08-18T14:36:50.6503109Z 
2025-08-18T14:36:50.6503269Z Return KPI metrics (mock).
2025-08-18T14:36:50.6503534Z 
2025-08-18T14:36:50.6503739Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T14:36:50.6504087Z 
2025-08-18T14:36:50.6504224Z #### roi\_by\_vendor
2025-08-18T14:36:50.6504448Z 
2025-08-18T14:36:50.6504581Z ```python
2025-08-18T14:36:50.6505166Z @router.get("/stats/roi_by_vendor")
2025-08-18T14:36:50.6505674Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T14:36:50.6506248Z ```
2025-08-18T14:36:50.6506413Z 
2025-08-18T14:36:50.6506567Z Return ROI percent by vendor.
2025-08-18T14:36:50.6506849Z 
2025-08-18T14:36:50.6507024Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T14:36:50.6507346Z 
2025-08-18T14:36:50.6507474Z #### roi\_trend
2025-08-18T14:36:50.6507682Z 
2025-08-18T14:36:50.6507806Z ```python
2025-08-18T14:36:50.6508207Z @router.get("/stats/roi_trend")
2025-08-18T14:36:50.6508668Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T14:36:50.6509128Z ```
2025-08-18T14:36:50.6509287Z 
2025-08-18T14:36:50.6509434Z Return 30-day ROI trend.
2025-08-18T14:36:50.6509689Z 
2025-08-18T14:36:50.6509841Z <a id="api.routes.roi"></a>
2025-08-18T14:36:50.6510104Z 
2025-08-18T14:36:50.6510233Z # api.routes.roi
2025-08-18T14:36:50.6510451Z 
2025-08-18T14:36:50.6510607Z <a id="api.routes.health"></a>
2025-08-18T14:36:50.6511142Z 
2025-08-18T14:36:50.6511296Z # api.routes.health
2025-08-18T14:36:50.6511516Z 
2025-08-18T14:36:50.6511693Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T14:36:50.6512227Z 
2025-08-18T14:36:50.6512362Z #### MAX\_SKEW
2025-08-18T14:36:50.6512565Z 
2025-08-18T14:36:50.6512690Z seconds
2025-08-18T14:36:50.6512873Z 
2025-08-18T14:36:50.6513054Z <a id="api.routes.health.health"></a>
2025-08-18T14:36:50.6513380Z 
2025-08-18T14:36:50.6513513Z #### health
2025-08-18T14:36:50.6513694Z 
2025-08-18T14:36:50.6513816Z ```python
2025-08-18T14:36:50.6514197Z @router.get("/health", include_in_schema=False)
2025-08-18T14:36:50.6514895Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T14:36:50.6515514Z ```
2025-08-18T14:36:50.6515673Z 
2025-08-18T14:36:50.6515894Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T14:36:50.6516290Z 
2025-08-18T14:36:50.6516457Z <a id="api.routes.repository"></a>
2025-08-18T14:36:50.6516765Z 
2025-08-18T14:36:50.6516939Z # api.routes.repository
2025-08-18T14:36:50.6517183Z 
2025-08-18T14:36:50.6517324Z <a id="api.routes"></a>
2025-08-18T14:36:50.6517560Z 
2025-08-18T14:36:50.6517685Z # api.routes
2025-08-18T14:36:50.6517874Z 
2025-08-18T14:36:50.6518024Z <a id="api.models.fee"></a>
2025-08-18T14:36:50.6518291Z 
2025-08-18T14:36:50.6518419Z # api.models.fee
2025-08-18T14:36:50.6518627Z 
2025-08-18T14:36:50.6518778Z <a id="api.models"></a>
2025-08-18T14:36:50.6519017Z 
2025-08-18T14:36:50.6519144Z # api.models
2025-08-18T14:36:50.6519332Z 
2025-08-18T14:36:50.6519500Z <a id="api.roi_repository"></a>
2025-08-18T14:36:50.6519784Z 
2025-08-18T14:36:50.6519928Z # api.roi\_repository
2025-08-18T14:36:50.6520170Z 
2025-08-18T14:36:50.6520313Z <a id="api.main"></a>
2025-08-18T14:36:50.6520538Z 
2025-08-18T14:36:50.6520671Z # api.main
2025-08-18T14:36:50.6520847Z 
2025-08-18T14:36:50.6520994Z <a id="api.main.ready"></a>
2025-08-18T14:36:50.6521251Z 
2025-08-18T14:36:50.6521379Z #### ready
2025-08-18T14:36:50.6521550Z 
2025-08-18T14:36:50.6521685Z ```python
2025-08-18T14:36:50.6522370Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T14:36:50.6523284Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T14:36:50.6523971Z                                                                       str]
2025-08-18T14:36:50.6524434Z ```
2025-08-18T14:36:50.6524596Z 
2025-08-18T14:36:50.6524783Z Return 200 only when migrations are at head.
2025-08-18T14:36:50.6525123Z 
2025-08-18T14:36:50.6525279Z <a id="api.config"></a>
2025-08-18T14:36:50.6525510Z 
2025-08-18T14:36:50.6525638Z # api.config
2025-08-18T14:36:50.6525833Z 
2025-08-18T14:36:50.6525960Z <a id="etl"></a>
2025-08-18T14:36:50.6526165Z 
2025-08-18T14:36:50.6526285Z # etl
2025-08-18T14:36:50.6526459Z 
2025-08-18T14:36:50.6526612Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T14:36:50.6526903Z 
2025-08-18T14:36:50.6527056Z # etl.fba\_fee\_ingestor
2025-08-18T14:36:50.6527300Z 
2025-08-18T14:36:50.6527458Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T14:36:50.6528011Z 
2025-08-18T14:36:50.6528160Z # etl.sp\_fees\_ingestor
2025-08-18T14:36:50.6528399Z 
2025-08-18T14:36:50.6528550Z <a id="etl.keepa_ingestor"></a>
2025-08-18T14:36:50.6528842Z 
2025-08-18T14:36:50.6528979Z # etl.keepa\_ingestor
2025-08-18T14:36:50.6529197Z 
2025-08-18T14:36:50.6529335Z <a id="etl.db"></a>
2025-08-18T14:36:50.6529541Z 
2025-08-18T14:36:50.6529660Z # etl.db
2025-08-18T14:36:50.6529834Z 
2025-08-18T14:36:50.6530005Z <a id="etl.dialects.schemas"></a>
2025-08-18T14:36:50.6530301Z 
2025-08-18T14:36:50.6530444Z # etl.dialects.schemas
2025-08-18T14:36:50.6530683Z 
2025-08-18T14:36:50.6530886Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T14:36:50.6531250Z 
2025-08-18T14:36:50.6531440Z # etl.dialects.amazon\_reimbursements
2025-08-18T14:36:50.6531765Z 
2025-08-18T14:36:50.6532116Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T14:36:50.6532474Z 
2025-08-18T14:36:50.6532668Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T14:36:50.6533218Z 
2025-08-18T14:36:50.6533400Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T14:36:50.6533748Z 
2025-08-18T14:36:50.6533904Z # etl.dialects.amazon\_returns
2025-08-18T14:36:50.6534183Z 
2025-08-18T14:36:50.6534379Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T14:36:50.6534716Z 
2025-08-18T14:36:50.6534878Z # etl.dialects.amazon\_fee\_preview
2025-08-18T14:36:50.6535191Z 
2025-08-18T14:36:50.6535398Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T14:36:50.6535769Z 
2025-08-18T14:36:50.6535949Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T14:36:50.6536286Z 
2025-08-18T14:36:50.6536477Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T14:36:50.6536873Z 
2025-08-18T14:36:50.6537050Z # etl.dialects.amazon\_settlements
2025-08-18T14:36:50.6537347Z 
2025-08-18T14:36:50.6537494Z <a id="etl.dialects"></a>
2025-08-18T14:36:50.6537770Z 
2025-08-18T14:36:50.6537898Z # etl.dialects
2025-08-18T14:36:50.6538095Z 
2025-08-18T14:36:50.6538226Z <a id="ingest"></a>
2025-08-18T14:36:50.6538460Z 
2025-08-18T14:36:50.6538580Z # ingest
2025-08-18T14:36:50.6538753Z 
2025-08-18T14:36:50.6538917Z <a id="ingest.maintenance"></a>
2025-08-18T14:36:50.6539201Z 
2025-08-18T14:36:50.6539338Z # ingest.maintenance
2025-08-18T14:36:50.6539562Z 
2025-08-18T14:36:50.6539727Z <a id="ingest.copy_loader"></a>
2025-08-18T14:36:50.6540001Z 
2025-08-18T14:36:50.6540142Z # ingest.copy\_loader
2025-08-18T14:36:50.6540372Z 
2025-08-18T14:36:50.6540568Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T14:36:50.6540932Z 
2025-08-18T14:36:50.6541084Z #### copy\_df\_via\_temp
2025-08-18T14:36:50.6541323Z 
2025-08-18T14:36:50.6541448Z ```python
2025-08-18T14:36:50.6541783Z def copy_df_via_temp(engine: Engine,
2025-08-18T14:36:50.6542424Z                      df: pd.DataFrame,
2025-08-18T14:36:50.6542900Z                      target_table: str,
2025-08-18T14:36:50.6543329Z                      *,
2025-08-18T14:36:50.6543743Z                      target_schema: Optional[str] = None,
2025-08-18T14:36:50.6544267Z                      columns: Sequence[str],
2025-08-18T14:36:50.6544795Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T14:36:50.6545346Z                      analyze_after: bool = False,
2025-08-18T14:36:50.6545856Z                      connection: Any | None = None) -> int
2025-08-18T14:36:50.6546325Z ```
2025-08-18T14:36:50.6546490Z 
2025-08-18T14:36:50.6546793Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T14:36:50.6547253Z 
2025-08-18T14:36:50.6547424Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T14:36:50.6547806Z 
2025-08-18T14:36:50.6547961Z # ingest.tests.test\_smoke
2025-08-18T14:36:50.6548226Z 
2025-08-18T14:36:50.6548388Z <a id="ingest.tests"></a>
2025-08-18T14:36:50.6548638Z 
2025-08-18T14:36:50.6548768Z # ingest.tests
2025-08-18T14:36:50.6548973Z 
2025-08-18T14:36:50.6549139Z <a id="ingest.upload_router"></a>
2025-08-18T14:36:50.6549432Z 
2025-08-18T14:36:50.6549577Z # ingest.upload\_router
2025-08-18T14:36:50.6549831Z 
2025-08-18T14:36:50.6550215Z <a id="ingest.email_watcher"></a>
2025-08-18T14:36:50.6550514Z 
2025-08-18T14:36:50.6550665Z # ingest.email\_watcher
2025-08-18T14:36:50.6550897Z 
2025-08-18T14:36:50.6551069Z <a id="ingest.email_watcher.main"></a>
2025-08-18T14:36:50.6551395Z 
2025-08-18T14:36:50.6551517Z #### main
2025-08-18T14:36:50.6551692Z 
2025-08-18T14:36:50.6551817Z ```python
2025-08-18T14:36:50.6552434Z def main() -> dict[str, str]
2025-08-18T14:36:50.6552829Z ```
2025-08-18T14:36:50.6553011Z 
2025-08-18T14:36:50.6553291Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T14:36:50.6553770Z 
2025-08-18T14:36:50.6554030Z Returns {"status": "success"} when processing completes.
2025-08-18T14:36:50.6554437Z 
2025-08-18T14:36:50.6554585Z <a id="ingest.tasks"></a>
2025-08-18T14:36:50.6554844Z 
2025-08-18T14:36:50.6554969Z # ingest.tasks
2025-08-18T14:36:50.6555174Z 
2025-08-18T14:36:50.6555357Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T14:36:50.6555707Z 
2025-08-18T14:36:50.6556097Z #### task\_import\_file
2025-08-18T14:36:50.6556335Z 
2025-08-18T14:36:50.6556469Z ```python
2025-08-18T14:36:50.6556875Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T14:36:50.6557430Z def task_import_file(self,
2025-08-18T14:36:50.6557822Z                      uri: str,
2025-08-18T14:36:50.6558265Z                      report_type: Optional[str] = None,
2025-08-18T14:36:50.6558793Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T14:36:50.6559271Z ```
2025-08-18T14:36:50.6559438Z 
2025-08-18T14:36:50.6559705Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T14:36:50.6560126Z 
2025-08-18T14:36:50.6560290Z <a id="ingest.celery_app"></a>
2025-08-18T14:36:50.6560570Z 
2025-08-18T14:36:50.6560719Z # ingest.celery\_app
2025-08-18T14:36:50.6560951Z 
2025-08-18T14:36:50.6561109Z <a id="ingest.ingest_router"></a>
2025-08-18T14:36:50.6561419Z 
2025-08-18T14:36:50.6561571Z # ingest.ingest\_router
2025-08-18T14:36:50.6561814Z 
2025-08-18T14:36:50.6562167Z <a id="logistics_etl"></a>
2025-08-18T14:36:50.6562452Z 
2025-08-18T14:36:50.6562589Z # logistics\_etl
2025-08-18T14:36:50.6562836Z 
2025-08-18T14:36:50.6563020Z Daily logistics ETL job.
2025-08-18T14:36:50.6563269Z 
2025-08-18T14:36:50.6563425Z <a id="logistics_etl.__main__"></a>
2025-08-18T14:36:50.6563733Z 
2025-08-18T14:36:50.6563886Z # logistics\_etl.\_\_main\_\_
2025-08-18T14:36:50.6564177Z 
2025-08-18T14:36:50.6564331Z <a id="logistics_etl.dsn"></a>
2025-08-18T14:36:50.6564608Z 
2025-08-18T14:36:50.6564756Z # logistics\_etl.dsn
2025-08-18T14:36:50.6564978Z 
2025-08-18T14:36:50.6565205Z Local DSN builder to avoid cross-service dependency.
2025-08-18T14:36:50.6565609Z 
2025-08-18T14:36:50.6565788Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T14:36:50.6566113Z 
2025-08-18T14:36:50.6566238Z #### build\_dsn
2025-08-18T14:36:50.6566445Z 
2025-08-18T14:36:50.6566565Z ```python
2025-08-18T14:36:50.6566906Z def build_dsn(sync: bool = True) -> str
2025-08-18T14:36:50.6567338Z ```
2025-08-18T14:36:50.6567510Z 
2025-08-18T14:36:50.6567790Z Return a Postgres DSN assembled from environment variables.
2025-08-18T14:36:50.6568238Z 
2025-08-18T14:36:50.6568543Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T14:36:50.6569325Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T14:36:50.6569994Z error when any required variable is missing.
2025-08-18T14:36:50.6570353Z 
2025-08-18T14:36:50.6570539Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T14:36:50.6570874Z 
2025-08-18T14:36:50.6571039Z # logistics\_etl.tests.conftest
2025-08-18T14:36:50.6571323Z 
2025-08-18T14:36:50.6571522Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T14:36:50.6571881Z 
2025-08-18T14:36:50.6572214Z # logistics\_etl.tests.test\_repository
2025-08-18T14:36:50.6572523Z 
2025-08-18T14:36:50.6572692Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T14:36:50.6573023Z 
2025-08-18T14:36:50.6573183Z # logistics\_etl.tests.test\_cron
2025-08-18T14:36:50.6573478Z 
2025-08-18T14:36:50.6573926Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T14:36:50.6574279Z 
2025-08-18T14:36:50.6574444Z # logistics\_etl.tests.test\_imports
2025-08-18T14:36:50.6574772Z 
2025-08-18T14:36:50.6574962Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T14:36:50.6575306Z 
2025-08-18T14:36:50.6575473Z # logistics\_etl.tests.test\_smoke
2025-08-18T14:36:50.6575799Z 
2025-08-18T14:36:50.6575988Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T14:36:50.6576326Z 
2025-08-18T14:36:50.6576493Z # logistics\_etl.tests.test\_client
2025-08-18T14:36:50.6576794Z 
2025-08-18T14:36:50.6576950Z <a id="logistics_etl.tests"></a>
2025-08-18T14:36:50.6577242Z 
2025-08-18T14:36:50.6577386Z # logistics\_etl.tests
2025-08-18T14:36:50.6577615Z 
2025-08-18T14:36:50.6577766Z <a id="logistics_etl.flow"></a>
2025-08-18T14:36:50.6578053Z 
2025-08-18T14:36:50.6578192Z # logistics\_etl.flow
2025-08-18T14:36:50.6578419Z 
2025-08-18T14:36:50.6578585Z <a id="logistics_etl.client"></a>
2025-08-18T14:36:50.6579092Z 
2025-08-18T14:36:50.6579243Z # logistics\_etl.client
2025-08-18T14:36:50.6579488Z 
2025-08-18T14:36:50.6579641Z <a id="logistics_etl.cron"></a>
2025-08-18T14:36:50.6579917Z 
2025-08-18T14:36:50.6580055Z # logistics\_etl.cron
2025-08-18T14:36:50.6580285Z 
2025-08-18T14:36:50.6580438Z <a id="logistics_etl.db"></a>
2025-08-18T14:36:50.6580714Z 
2025-08-18T14:36:50.6580856Z # logistics\_etl.db
2025-08-18T14:36:50.6581069Z 
2025-08-18T14:36:50.6581239Z <a id="logistics_etl.repository"></a>
2025-08-18T14:36:50.6581556Z 
2025-08-18T14:36:50.6581716Z # logistics\_etl.repository
2025-08-18T14:36:50.6582148Z 
2025-08-18T14:36:50.6582295Z <a id="alert_bot"></a>
2025-08-18T14:36:50.6582534Z 
2025-08-18T14:36:50.6582661Z # alert\_bot
2025-08-18T14:36:50.6582849Z 
2025-08-18T14:36:50.6583027Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T14:36:50.6583355Z 
2025-08-18T14:36:50.6583511Z # alert\_bot.tests.test\_smoke
2025-08-18T14:36:50.6583792Z 
2025-08-18T14:36:50.6583953Z <a id="alert_bot.tests"></a>
2025-08-18T14:36:50.6584242Z 
2025-08-18T14:36:50.6584373Z # alert\_bot.tests
2025-08-18T14:36:50.6584597Z 
2025-08-18T14:36:50.6584758Z <a id="alert_bot.alert_bot"></a>
2025-08-18T14:36:50.6585044Z 
2025-08-18T14:36:50.6585188Z # alert\_bot.alert\_bot
2025-08-18T14:36:50.6585436Z 
2025-08-18T14:36:50.6585584Z <a id="alert_bot.rules"></a>
2025-08-18T14:36:50.6585849Z 
2025-08-18T14:36:50.6585985Z # alert\_bot.rules
2025-08-18T14:36:50.6586189Z 
2025-08-18T14:36:50.6586320Z <a id="common"></a>
2025-08-18T14:36:50.6586556Z 
2025-08-18T14:36:50.6586676Z # common
2025-08-18T14:36:50.6586847Z 
2025-08-18T14:36:50.6586987Z <a id="common.dsn"></a>
2025-08-18T14:36:50.6587231Z 
2025-08-18T14:36:50.6587355Z # common.dsn
2025-08-18T14:36:50.6587542Z 
2025-08-18T14:36:50.6587705Z <a id="common.dsn.build_dsn"></a>
2025-08-18T14:36:50.6587997Z 
2025-08-18T14:36:50.6588124Z #### build\_dsn
2025-08-18T14:36:50.6588328Z 
2025-08-18T14:36:50.6588454Z ```python
2025-08-18T14:36:50.6588790Z def build_dsn(sync: bool = True) -> str
2025-08-18T14:36:50.6589243Z ```
2025-08-18T14:36:50.6589406Z 
2025-08-18T14:36:50.6589652Z Return a Postgres DSN, validating required variables.
2025-08-18T14:36:50.6590057Z 
2025-08-18T14:36:50.6590427Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T14:36:50.6591285Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T14:36:50.6592256Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T14:36:50.6609456Z missing.
2025-08-18T14:36:50.6609709Z 
2025-08-18T14:36:50.6609880Z <a id="common.models_vendor"></a>
2025-08-18T14:36:50.6610170Z 
2025-08-18T14:36:50.6610307Z # common.models\_vendor
2025-08-18T14:36:50.6610540Z 
2025-08-18T14:36:50.6610700Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T14:36:50.6610991Z 
2025-08-18T14:36:50.6611118Z ## Vendor Objects
2025-08-18T14:36:50.6611312Z 
2025-08-18T14:36:50.6611425Z ```python
2025-08-18T14:36:50.6611750Z class Vendor(Base)
2025-08-18T14:36:50.6612265Z ```
2025-08-18T14:36:50.6612992Z 
2025-08-18T14:36:50.6613110Z Vendor of inventory items.
2025-08-18T14:36:50.6613278Z 
2025-08-18T14:36:50.6613409Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T14:36:50.6613629Z 
2025-08-18T14:36:50.6613716Z ## VendorPrice Objects
2025-08-18T14:36:50.6613858Z 
2025-08-18T14:36:50.6613939Z ```python
2025-08-18T14:36:50.6614129Z class VendorPrice(Base)
2025-08-18T14:36:50.6614337Z ```
2025-08-18T14:36:50.6614441Z 
2025-08-18T14:36:50.6614571Z Association table linking vendors to pricing.
2025-08-18T14:36:50.6614782Z 
2025-08-18T14:36:50.6614868Z <a id="common.db_url"></a>
2025-08-18T14:36:50.6615015Z 
2025-08-18T14:36:50.6615091Z # common.db\_url
2025-08-18T14:36:50.6615217Z 
2025-08-18T14:36:50.6615311Z <a id="common.db_url.build_url"></a>
2025-08-18T14:36:50.6615522Z 
2025-08-18T14:36:50.6615601Z #### build\_url
2025-08-18T14:36:50.6615714Z 
2025-08-18T14:36:50.6615785Z ```python
2025-08-18T14:36:50.6615990Z def build_url(async_: bool = True) -> str
2025-08-18T14:36:50.6616386Z ```
2025-08-18T14:36:50.6616488Z 
2025-08-18T14:36:50.6616599Z Return Postgres DSN from env or PG_* parts.
2025-08-18T14:36:50.6616795Z 
2025-08-18T14:36:50.6616883Z <a id="common.keepa"></a>
2025-08-18T14:36:50.6617037Z 
2025-08-18T14:36:50.6617112Z # common.keepa
2025-08-18T14:36:50.6617238Z 
2025-08-18T14:36:50.6617349Z <a id="common.llm"></a>
2025-08-18T14:36:50.6617483Z 
2025-08-18T14:36:50.6617555Z # common.llm
2025-08-18T14:36:50.6617665Z 
2025-08-18T14:36:50.6617754Z <a id="common.settings"></a>
2025-08-18T14:36:50.6617908Z 
2025-08-18T14:36:50.6617988Z # common.settings
2025-08-18T14:36:50.6618117Z 
2025-08-18T14:36:50.6618198Z <a id="common.db"></a>
2025-08-18T14:36:50.6618331Z 
2025-08-18T14:36:50.6618409Z # common.db
2025-08-18T14:36:50.6618510Z 
2025-08-18T14:36:50.6618614Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T14:36:50.6618807Z 
2025-08-18T14:36:50.6618899Z #### build\_sqlalchemy\_url
2025-08-18T14:36:50.6619044Z 
2025-08-18T14:36:50.6619116Z ```python
2025-08-18T14:36:50.6619327Z def build_sqlalchemy_url() -> str
2025-08-18T14:36:50.6619564Z ```
2025-08-18T14:36:50.6619664Z 
2025-08-18T14:36:50.6619771Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T14:36:50.6619964Z 
2025-08-18T14:36:50.6620072Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T14:36:50.6620262Z 
2025-08-18T14:36:50.6620346Z #### build\_asyncpg\_dsn
2025-08-18T14:36:50.6620496Z 
2025-08-18T14:36:50.6620569Z ```python
2025-08-18T14:36:50.6620766Z def build_asyncpg_dsn() -> str
2025-08-18T14:36:50.6620996Z ```
2025-08-18T14:36:50.6621090Z 
2025-08-18T14:36:50.6621232Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T14:36:50.6621476Z 
2025-08-18T14:36:50.6621571Z <a id="common.db.refresh_mvs"></a>
2025-08-18T14:36:50.6621745Z 
2025-08-18T14:36:50.6621827Z #### refresh\_mvs
2025-08-18T14:36:50.6622145Z 
2025-08-18T14:36:50.6622263Z ```python
2025-08-18T14:36:50.6622560Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T14:36:50.6622841Z ```
2025-08-18T14:36:50.6622947Z 
2025-08-18T14:36:50.6623107Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T14:36:50.6623350Z 
2025-08-18T14:36:50.6623441Z <a id="common.config"></a>
2025-08-18T14:36:50.6623584Z 
2025-08-18T14:36:50.6623661Z # common.config
2025-08-18T14:36:50.6623777Z 
2025-08-18T14:36:50.6623863Z <a id="common.base"></a>
2025-08-18T14:36:50.6624000Z 
2025-08-18T14:36:50.6624078Z # common.base
2025-08-18T14:36:50.6624193Z 
2025-08-18T14:36:50.6624280Z <a id="common.base.Base"></a>
2025-08-18T14:36:50.6624501Z 
2025-08-18T14:36:50.6624578Z ## Base Objects
2025-08-18T14:36:50.6624690Z 
2025-08-18T14:36:50.6624779Z ```python
2025-08-18T14:36:50.6625090Z class Base(DeclarativeBase)
2025-08-18T14:36:50.6625312Z ```
2025-08-18T14:36:50.6625410Z 
2025-08-18T14:36:50.6625506Z Base class for SQLAlchemy models.
2025-08-18T14:36:50.6625696Z 
2025-08-18T14:36:50.6625837Z <a id="repricer"></a>
2025-08-18T14:36:50.6626000Z 
2025-08-18T14:36:50.6626072Z # repricer
2025-08-18T14:36:50.6626176Z 
2025-08-18T14:36:50.6626427Z <a id="repricer.app.schemas"></a>
2025-08-18T14:36:50.6626677Z 
2025-08-18T14:36:50.6626799Z # repricer.app.schemas
2025-08-18T14:36:50.6626940Z 
2025-08-18T14:36:50.6627040Z <a id="repricer.app.deps"></a>
2025-08-18T14:36:50.6627198Z 
2025-08-18T14:36:50.6627280Z # repricer.app.deps
2025-08-18T14:36:50.6627463Z 
2025-08-18T14:36:50.6627641Z Placeholder module for Keepa / SP-API clients.
2025-08-18T14:36:50.6627855Z 
2025-08-18T14:36:50.6627954Z <a id="repricer.app.logic"></a>
2025-08-18T14:36:50.6628114Z 
2025-08-18T14:36:50.6628210Z # repricer.app.logic
2025-08-18T14:36:50.6628427Z 
2025-08-18T14:36:50.6628547Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T14:36:50.6628742Z 
2025-08-18T14:36:50.6628814Z #### MIN\_MARGIN
2025-08-18T14:36:50.6628934Z 
2025-08-18T14:36:50.6629004Z 15 % ROI
2025-08-18T14:36:50.6629170Z 
2025-08-18T14:36:50.6629322Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T14:36:50.6629539Z 
2025-08-18T14:36:50.6629619Z #### compute\_price
2025-08-18T14:36:50.6629911Z 
2025-08-18T14:36:50.6630046Z ```python
2025-08-18T14:36:50.6630355Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T14:36:50.6630695Z ```
2025-08-18T14:36:50.6630855Z 
2025-08-18T14:36:50.6631008Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T14:36:50.6631318Z Replace with real competitive logic later.
2025-08-18T14:36:50.6631508Z 
2025-08-18T14:36:50.6631667Z <a id="repricer.app.main"></a>
2025-08-18T14:36:50.6631877Z 
2025-08-18T14:36:50.6632097Z # repricer.app.main
2025-08-18T14:36:50.6632257Z 
2025-08-18T14:36:50.6632350Z <a id="repricer.app"></a>
2025-08-18T14:36:50.6632598Z 
2025-08-18T14:36:50.6632701Z # repricer.app
2025-08-18T14:36:50.6632887Z 
2025-08-18T14:36:50.6633023Z <a id="repricer.tests.test_imports"></a>
2025-08-18T14:36:50.6633343Z 
2025-08-18T14:36:50.6633509Z # repricer.tests.test\_imports
2025-08-18T14:36:50.6633767Z 
2025-08-18T14:36:50.6633928Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T14:36:50.6634151Z 
2025-08-18T14:36:50.6634339Z # repricer.tests.test\_smoke
2025-08-18T14:36:50.6634599Z 
2025-08-18T14:36:50.6634745Z <a id="repricer.tests"></a>
2025-08-18T14:36:50.6634949Z 
2025-08-18T14:36:50.6635082Z # repricer.tests
2025-08-18T14:36:50.6635288Z 
2025-08-18T14:36:50.6635386Z <a id="db"></a>
2025-08-18T14:36:50.6635566Z 
2025-08-18T14:36:50.6635664Z # db
2025-08-18T14:36:50.6635786Z 
2025-08-18T14:36:50.6635932Z <a id="db.utils.views"></a>
2025-08-18T14:36:50.6636184Z 
2025-08-18T14:36:50.6636312Z # db.utils.views
2025-08-18T14:36:50.6636467Z 
2025-08-18T14:36:50.6636649Z <a id="db.utils.views.replace_view"></a>
2025-08-18T14:36:50.6636907Z 
2025-08-18T14:36:50.6637039Z #### replace\_view
2025-08-18T14:36:50.6637206Z 
2025-08-18T14:36:50.6637280Z ```python
2025-08-18T14:36:50.6637495Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T14:36:50.6637902Z ```
2025-08-18T14:36:50.6637999Z 
2025-08-18T14:36:50.6638104Z Drop and recreate a SQL view atomically.
2025-08-18T14:36:50.6638285Z 
2025-08-18T14:36:50.6638370Z <a id="db.utils"></a>
2025-08-18T14:36:50.6638503Z 
2025-08-18T14:36:50.6638573Z # db.utils
2025-08-18T14:36:50.6638670Z 
2025-08-18T14:36:50.6638754Z <a id="price_importer"></a>
2025-08-18T14:36:50.6638901Z 
2025-08-18T14:36:50.6638976Z # price\_importer
2025-08-18T14:36:50.6639091Z 
2025-08-18T14:36:50.6639208Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T14:36:50.6639401Z 
2025-08-18T14:36:50.6639500Z # price\_importer.services\_common.dsn
2025-08-18T14:36:50.6639677Z 
2025-08-18T14:36:50.6639810Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T14:36:50.6640026Z 
2025-08-18T14:36:50.6640098Z #### build\_dsn
2025-08-18T14:36:50.6640212Z 
2025-08-18T14:36:50.6640283Z ```python
2025-08-18T14:36:50.6640473Z def build_dsn(sync: bool = True) -> str
2025-08-18T14:36:50.6640707Z ```
2025-08-18T14:36:50.6640799Z 
2025-08-18T14:36:50.6640877Z Return safe DSN.
2025-08-18T14:36:50.6640987Z 
2025-08-18T14:36:50.6641343Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T14:36:50.6641740Z 
2025-08-18T14:36:50.6641887Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T14:36:50.6642349Z 
2025-08-18T14:36:50.6642483Z # price\_importer.services\_common.models\_vendor
2025-08-18T14:36:50.6642697Z 
2025-08-18T14:36:50.6642821Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T14:36:50.6643033Z 
2025-08-18T14:36:50.6643149Z # price\_importer.services\_common.db\_url
2025-08-18T14:36:50.6643337Z 
2025-08-18T14:36:50.6643483Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T14:36:50.6643717Z 
2025-08-18T14:36:50.6643789Z #### build\_url
2025-08-18T14:36:50.6643902Z 
2025-08-18T14:36:50.6643971Z ```python
2025-08-18T14:36:50.6644168Z def build_url(async_: bool = True) -> str
2025-08-18T14:36:50.6644418Z ```
2025-08-18T14:36:50.6644511Z 
2025-08-18T14:36:50.6644615Z Return Postgres DSN from env or PG_* parts.
2025-08-18T14:36:50.6644801Z 
2025-08-18T14:36:50.6644926Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T14:36:50.6645267Z 
2025-08-18T14:36:50.6645371Z # price\_importer.services\_common.keepa
2025-08-18T14:36:50.6645557Z 
2025-08-18T14:36:50.6645668Z <a id="price_importer.services_common.llm"></a>
2025-08-18T14:36:50.6645862Z 
2025-08-18T14:36:50.6645967Z # price\_importer.services\_common.llm
2025-08-18T14:36:50.6646140Z 
2025-08-18T14:36:50.6646262Z <a id="price_importer.services_common.settings"></a>
2025-08-18T14:36:50.6646471Z 
2025-08-18T14:36:50.6646575Z # price\_importer.services\_common.settings
2025-08-18T14:36:50.6646756Z 
2025-08-18T14:36:50.6646865Z <a id="price_importer.services_common.db"></a>
2025-08-18T14:36:50.6647059Z 
2025-08-18T14:36:50.6647155Z # price\_importer.services\_common.db
2025-08-18T14:36:50.6647325Z 
2025-08-18T14:36:50.6647497Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T14:36:50.6647748Z 
2025-08-18T14:36:50.6647833Z #### build\_sqlalchemy\_url
2025-08-18T14:36:50.6647979Z 
2025-08-18T14:36:50.6648049Z ```python
2025-08-18T14:36:50.6648243Z def build_sqlalchemy_url() -> str
2025-08-18T14:36:50.6648483Z ```
2025-08-18T14:36:50.6648574Z 
2025-08-18T14:36:50.6648677Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T14:36:50.6648871Z 
2025-08-18T14:36:50.6649025Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T14:36:50.6649265Z 
2025-08-18T14:36:50.6649354Z #### build\_asyncpg\_dsn
2025-08-18T14:36:50.6649492Z 
2025-08-18T14:36:50.6649561Z ```python
2025-08-18T14:36:50.6649752Z def build_asyncpg_dsn() -> str
2025-08-18T14:36:50.6649968Z ```
2025-08-18T14:36:50.6650069Z 
2025-08-18T14:36:50.6650209Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T14:36:50.6650430Z 
2025-08-18T14:36:50.6650572Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T14:36:50.6650792Z 
2025-08-18T14:36:50.6650866Z #### refresh\_mvs
2025-08-18T14:36:50.6650980Z 
2025-08-18T14:36:50.6651056Z ```python
2025-08-18T14:36:50.6651267Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T14:36:50.6651543Z ```
2025-08-18T14:36:50.6651639Z 
2025-08-18T14:36:50.6651782Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T14:36:50.6652223Z 
2025-08-18T14:36:50.6652338Z <a id="price_importer.services_common"></a>
2025-08-18T14:36:50.6652527Z 
2025-08-18T14:36:50.6652629Z # price\_importer.services\_common
2025-08-18T14:36:50.6652795Z 
2025-08-18T14:36:50.6652909Z <a id="price_importer.services_common.base"></a>
2025-08-18T14:36:50.6653110Z 
2025-08-18T14:36:50.6653211Z # price\_importer.services\_common.base
2025-08-18T14:36:50.6653389Z 
2025-08-18T14:36:50.6653488Z <a id="price_importer.normaliser"></a>
2025-08-18T14:36:50.6653671Z 
2025-08-18T14:36:50.6653762Z # price\_importer.normaliser
2025-08-18T14:36:50.6653912Z 
2025-08-18T14:36:50.6654029Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T14:36:50.6654221Z 
2025-08-18T14:36:50.6654318Z # price\_importer.common.models\_vendor
2025-08-18T14:36:50.6654498Z 
2025-08-18T14:36:50.6654597Z <a id="price_importer.common.db_url"></a>
2025-08-18T14:36:50.6654910Z 
2025-08-18T14:36:50.6655004Z # price\_importer.common.db\_url
2025-08-18T14:36:50.6655167Z 
2025-08-18T14:36:50.6655281Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T14:36:50.6655475Z 
2025-08-18T14:36:50.6655554Z #### make\_dsn
2025-08-18T14:36:50.6655660Z 
2025-08-18T14:36:50.6655729Z ```python
2025-08-18T14:36:50.6655921Z def make_dsn(async_: bool = False) -> str
2025-08-18T14:36:50.6656163Z ```
2025-08-18T14:36:50.6656258Z 
2025-08-18T14:36:50.6656384Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T14:36:50.6656595Z 
2025-08-18T14:36:50.6656717Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T14:36:50.6656915Z 
2025-08-18T14:36:50.6656985Z #### build\_url
2025-08-18T14:36:50.6657091Z 
2025-08-18T14:36:50.6657165Z ```python
2025-08-18T14:36:50.6657352Z def build_url(async_: bool = False) -> str
2025-08-18T14:36:50.6657593Z ```
2025-08-18T14:36:50.6657692Z 
2025-08-18T14:36:50.6657819Z Return Postgres DSN built from environment variables.
2025-08-18T14:36:50.6658184Z 
2025-08-18T14:36:50.6658277Z <a id="price_importer.common"></a>
2025-08-18T14:36:50.6658440Z 
2025-08-18T14:36:50.6658529Z # price\_importer.common
2025-08-18T14:36:50.6658664Z 
2025-08-18T14:36:50.6658760Z <a id="price_importer.common.base"></a>
2025-08-18T14:36:50.6658933Z 
2025-08-18T14:36:50.6659029Z # price\_importer.common.base
2025-08-18T14:36:50.6659177Z 
2025-08-18T14:36:50.6659283Z <a id="price_importer.tests.conftest"></a>
2025-08-18T14:36:50.6659474Z 
2025-08-18T14:36:50.6659565Z # price\_importer.tests.conftest
2025-08-18T14:36:50.6659722Z 
2025-08-18T14:36:50.6659839Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T14:36:50.6660029Z 
2025-08-18T14:36:50.6660126Z # price\_importer.tests.test\_reader
2025-08-18T14:36:50.6660293Z 
2025-08-18T14:36:50.6660412Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T14:36:50.6660599Z 
2025-08-18T14:36:50.6660695Z # price\_importer.tests.test\_imports
2025-08-18T14:36:50.6660871Z 
2025-08-18T14:36:50.6660988Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T14:36:50.6661171Z 
2025-08-18T14:36:50.6661275Z # price\_importer.tests.test\_smoke
2025-08-18T14:36:50.6661443Z 
2025-08-18T14:36:50.6661558Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T14:36:50.6661771Z 
2025-08-18T14:36:50.6661870Z # price\_importer.tests.test\_normaliser
2025-08-18T14:36:50.6662155Z 
2025-08-18T14:36:50.6662250Z <a id="price_importer.tests"></a>
2025-08-18T14:36:50.6662417Z 
2025-08-18T14:36:50.6662501Z # price\_importer.tests
2025-08-18T14:36:50.6662630Z 
2025-08-18T14:36:50.6662731Z <a id="price_importer.reader"></a>
2025-08-18T14:36:50.6662891Z 
2025-08-18T14:36:50.6662976Z # price\_importer.reader
2025-08-18T14:36:50.6663114Z 
2025-08-18T14:36:50.6663219Z <a id="price_importer.repository"></a>
2025-08-18T14:36:50.6663393Z 
2025-08-18T14:36:50.6663483Z # price\_importer.repository
2025-08-18T14:36:50.6663644Z 
2025-08-18T14:36:50.6663736Z <a id="price_importer.import"></a>
2025-08-18T14:36:50.6663896Z 
2025-08-18T14:36:50.6663998Z # price\_importer.import
2025-08-18T14:36:50.6664132Z 
2025-08-18T14:36:50.6664212Z <a id="fees_h10"></a>
2025-08-18T14:36:50.6664337Z 
2025-08-18T14:36:50.6664413Z # fees\_h10
2025-08-18T14:36:50.6664515Z 
2025-08-18T14:36:50.6664597Z <a id="fees_h10.worker"></a>
2025-08-18T14:36:50.6664741Z 
2025-08-18T14:36:50.6664817Z # fees\_h10.worker
2025-08-18T14:36:50.6664933Z 
2025-08-18T14:36:50.6665039Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T14:36:50.6665227Z 
2025-08-18T14:36:50.6665306Z #### list\_active\_asins
2025-08-18T14:36:50.6665456Z 
2025-08-18T14:36:50.6665533Z ```python
2025-08-18T14:36:50.6665716Z def list_active_asins() -> list[str]
2025-08-18T14:36:50.6665947Z ```
2025-08-18T14:36:50.6666037Z 
2025-08-18T14:36:50.6666161Z Return known ASINs or an empty list if unavailable.
2025-08-18T14:36:50.6666371Z 
2025-08-18T14:36:50.6666462Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T14:36:50.6666628Z 
2025-08-18T14:36:50.6666719Z # fees\_h10.tests.test\_smoke
2025-08-18T14:36:50.6666989Z 
2025-08-18T14:36:50.6667072Z <a id="fees_h10.tests"></a>
2025-08-18T14:36:50.6667211Z 
2025-08-18T14:36:50.6667289Z # fees\_h10.tests
2025-08-18T14:36:50.6667402Z 
2025-08-18T14:36:50.6667486Z <a id="fees_h10.client"></a>
2025-08-18T14:36:50.6667633Z 
2025-08-18T14:36:50.6667705Z # fees\_h10.client
2025-08-18T14:36:50.6667816Z 
2025-08-18T14:36:50.6667913Z <a id="fees_h10.repository"></a>
2025-08-18T14:36:50.6668066Z 
2025-08-18T14:36:50.6668144Z # fees\_h10.repository
2025-08-18T14:36:50.6668271Z 
2025-08-18T14:36:50.6668359Z <a id="emailer"></a>
2025-08-18T14:36:50.6668479Z 
2025-08-18T14:36:50.6668547Z # emailer
2025-08-18T14:36:50.6668651Z 
2025-08-18T14:36:50.6668760Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T14:36:50.6668948Z 
2025-08-18T14:36:50.6669045Z # emailer.tests.test\_import\_emailer
2025-08-18T14:36:50.6669219Z 
2025-08-18T14:36:50.6669312Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T14:36:50.6669478Z 
2025-08-18T14:36:50.6669572Z # emailer.tests.test\_smoke
2025-08-18T14:36:50.6669846Z 
2025-08-18T14:36:50.6669935Z <a id="emailer.tests"></a>
2025-08-18T14:36:50.6670086Z 
2025-08-18T14:36:50.6670161Z # emailer.tests
2025-08-18T14:36:50.6670274Z 
2025-08-18T14:36:50.6670368Z <a id="emailer.generate_body"></a>
2025-08-18T14:36:50.6670538Z 
2025-08-18T14:36:50.6670620Z # emailer.generate\_body
2025-08-18T14:36:50.6670758Z 
2025-08-18T14:36:50.6670842Z <a id="llm_server"></a>
2025-08-18T14:36:50.6670970Z 
2025-08-18T14:36:50.6671040Z # llm\_server
2025-08-18T14:36:50.6671154Z 
2025-08-18T14:36:50.6671240Z <a id="llm_server.app"></a>
2025-08-18T14:36:50.6671378Z 
2025-08-18T14:36:50.6671454Z # llm\_server.app
2025-08-18T14:36:50.6671576Z 
