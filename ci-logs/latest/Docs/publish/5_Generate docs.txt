2025-08-18T23:00:37.3675369Z ##[group]Run pydoc-markdown
2025-08-18T23:00:37.3675648Z [36;1mpydoc-markdown[0m
2025-08-18T23:00:37.3715397Z shell: /usr/bin/bash -e {0}
2025-08-18T23:00:37.3715625Z env:
2025-08-18T23:00:37.3715864Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:00:37.3716275Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T23:00:37.3716659Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:00:37.3716996Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:00:37.3717349Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:00:37.3717693Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T23:00:37.3717979Z ##[endgroup]
2025-08-18T23:00:37.6716876Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T23:00:37.6717686Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T23:00:37.6718100Z In "pydoc-markdown.yml"
2025-08-18T23:00:37.6718484Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T23:00:37.6719564Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T23:00:37.6720412Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T23:00:37.6721053Z 
2025-08-18T23:00:37.9939820Z <a id="__init__"></a>
2025-08-18T23:00:37.9940161Z 
2025-08-18T23:00:37.9940290Z # \_\_init\_\_
2025-08-18T23:00:37.9940505Z 
2025-08-18T23:00:37.9940635Z <a id="api"></a>
2025-08-18T23:00:37.9940843Z 
2025-08-18T23:00:37.9940965Z # api
2025-08-18T23:00:37.9941131Z 
2025-08-18T23:00:37.9941275Z <a id="api.errors"></a>
2025-08-18T23:00:37.9941514Z 
2025-08-18T23:00:37.9941645Z # api.errors
2025-08-18T23:00:37.9941833Z 
2025-08-18T23:00:37.9941987Z <a id="api.sentry_config"></a>
2025-08-18T23:00:37.9942269Z 
2025-08-18T23:00:37.9942411Z # api.sentry\_config
2025-08-18T23:00:37.9942634Z 
2025-08-18T23:00:37.9942810Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T23:00:37.9943145Z 
2025-08-18T23:00:37.9943685Z # api.tests.test\_sentry\_scrub
2025-08-18T23:00:37.9943990Z 
2025-08-18T23:00:37.9944173Z <a id="api.tests.test_errors_json"></a>
2025-08-18T23:00:37.9944498Z 
2025-08-18T23:00:37.9944652Z # api.tests.test\_errors\_json
2025-08-18T23:00:37.9944934Z 
2025-08-18T23:00:37.9945189Z <a id="api.tests.test_llm"></a>
2025-08-18T23:00:37.9945454Z 
2025-08-18T23:00:37.9945591Z # api.tests.test\_llm
2025-08-18T23:00:37.9945819Z 
2025-08-18T23:00:37.9945990Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T23:00:37.9946313Z 
2025-08-18T23:00:37.9946470Z # api.tests.test\_sentry\_event
2025-08-18T23:00:37.9946735Z 
2025-08-18T23:00:37.9946965Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T23:00:37.9947368Z 
2025-08-18T23:00:37.9947526Z ## DummyTransport Objects
2025-08-18T23:00:37.9947785Z 
2025-08-18T23:00:37.9947908Z ```python
2025-08-18T23:00:37.9948227Z class DummyTransport()
2025-08-18T23:00:37.9948572Z ```
2025-08-18T23:00:37.9948728Z 
2025-08-18T23:00:37.9949275Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T23:00:37.9949797Z 
2025-08-18T23:00:37.9949949Z #### capture\_envelope
2025-08-18T23:00:37.9950174Z 
2025-08-18T23:00:37.9950324Z ```python
2025-08-18T23:00:37.9950657Z def capture_envelope(envelope)
2025-08-18T23:00:37.9951032Z ```
2025-08-18T23:00:37.9951194Z 
2025-08-18T23:00:37.9951434Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T23:00:37.9951829Z 
2025-08-18T23:00:37.9951993Z <a id="api.tests.test_cors"></a>
2025-08-18T23:00:37.9952273Z 
2025-08-18T23:00:37.9952414Z # api.tests.test\_cors
2025-08-18T23:00:37.9952647Z 
2025-08-18T23:00:37.9952812Z <a id="api.tests.test_imports"></a>
2025-08-18T23:00:37.9953118Z 
2025-08-18T23:00:37.9953268Z # api.tests.test\_imports
2025-08-18T23:00:37.9953526Z 
2025-08-18T23:00:37.9953686Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T23:00:37.9953992Z 
2025-08-18T23:00:37.9954148Z # api.tests.test\_rate\_limit
2025-08-18T23:00:37.9954410Z 
2025-08-18T23:00:37.9954590Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T23:00:37.9955397Z 
2025-08-18T23:00:37.9955518Z #### app
2025-08-18T23:00:37.9955694Z 
2025-08-18T23:00:37.9955814Z noqa: E402
2025-08-18T23:00:37.9955994Z 
2025-08-18T23:00:37.9956164Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T23:00:37.9956478Z 
2025-08-18T23:00:37.9956638Z # api.tests.test\_entrypoint
2025-08-18T23:00:37.9956904Z 
2025-08-18T23:00:37.9957060Z <a id="api.tests.test_health"></a>
2025-08-18T23:00:37.9957349Z 
2025-08-18T23:00:37.9957496Z # api.tests.test\_health
2025-08-18T23:00:37.9957737Z 
2025-08-18T23:00:37.9957888Z <a id="api.logging_config"></a>
2025-08-18T23:00:37.9958166Z 
2025-08-18T23:00:37.9958309Z # api.logging\_config
2025-08-18T23:00:37.9958540Z 
2025-08-18T23:00:37.9958706Z <a id="api.migrations.env"></a>
2025-08-18T23:00:37.9959205Z 
2025-08-18T23:00:37.9959352Z # api.migrations.env
2025-08-18T23:00:37.9959601Z 
2025-08-18T23:00:37.9959852Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T23:00:37.9960243Z 
2025-08-18T23:00:37.9960442Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T23:00:37.9960805Z 
2025-08-18T23:00:37.9961006Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T23:00:37.9961360Z 
2025-08-18T23:00:37.9961543Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T23:00:37.9961863Z 
2025-08-18T23:00:37.9962147Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T23:00:37.9962592Z 
2025-08-18T23:00:37.9962852Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T23:00:37.9963255Z 
2025-08-18T23:00:37.9963483Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T23:00:37.9963866Z 
2025-08-18T23:00:37.9964068Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T23:00:37.9964415Z 
2025-08-18T23:00:37.9964643Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T23:00:37.9965016Z 
2025-08-18T23:00:37.9965207Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T23:00:37.9965556Z 
2025-08-18T23:00:37.9966024Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T23:00:37.9966426Z 
2025-08-18T23:00:37.9966632Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T23:00:37.9966997Z 
2025-08-18T23:00:37.9967225Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T23:00:37.9967610Z 
2025-08-18T23:00:37.9967826Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T23:00:37.9968181Z 
2025-08-18T23:00:37.9968416Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T23:00:37.9968999Z 
2025-08-18T23:00:37.9969212Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T23:00:37.9969590Z 
2025-08-18T23:00:37.9969851Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T23:00:37.9970277Z 
2025-08-18T23:00:37.9970502Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T23:00:37.9970876Z 
2025-08-18T23:00:37.9971121Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T23:00:37.9971508Z 
2025-08-18T23:00:37.9971723Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T23:00:37.9972094Z 
2025-08-18T23:00:37.9972345Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T23:00:37.9972854Z 
2025-08-18T23:00:37.9973076Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T23:00:37.9973490Z 
2025-08-18T23:00:37.9973701Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T23:00:37.9974080Z 
2025-08-18T23:00:37.9974260Z # api.migrations.versions.0001\_baseline
2025-08-18T23:00:37.9974587Z 
2025-08-18T23:00:37.9974755Z <a id="api.migrations.versions"></a>
2025-08-18T23:00:37.9975058Z 
2025-08-18T23:00:37.9975210Z # api.migrations.versions
2025-08-18T23:00:37.9975467Z 
2025-08-18T23:00:37.9975610Z <a id="api.migrations"></a>
2025-08-18T23:00:37.9975866Z 
2025-08-18T23:00:37.9975993Z # api.migrations
2025-08-18T23:00:37.9976200Z 
2025-08-18T23:00:37.9976326Z <a id="api.db"></a>
2025-08-18T23:00:37.9976529Z 
2025-08-18T23:00:37.9976652Z # api.db
2025-08-18T23:00:37.9976819Z 
2025-08-18T23:00:37.9976975Z <a id="api.routes.stats"></a>
2025-08-18T23:00:37.9977497Z 
2025-08-18T23:00:37.9977641Z # api.routes.stats
2025-08-18T23:00:37.9977845Z 
2025-08-18T23:00:37.9978003Z <a id="api.routes.stats.kpi"></a>
2025-08-18T23:00:37.9978298Z 
2025-08-18T23:00:37.9978415Z #### kpi
2025-08-18T23:00:37.9978584Z 
2025-08-18T23:00:37.9978707Z ```python
2025-08-18T23:00:37.9979208Z @router.get("/stats/kpi")
2025-08-18T23:00:37.9979761Z def kpi() -> List[Dict[str, int]]
2025-08-18T23:00:37.9980166Z ```
2025-08-18T23:00:37.9980328Z 
2025-08-18T23:00:37.9980488Z Return KPI metrics (mock).
2025-08-18T23:00:37.9980737Z 
2025-08-18T23:00:37.9980918Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T23:00:37.9981259Z 
2025-08-18T23:00:37.9981386Z #### roi\_by\_vendor
2025-08-18T23:00:37.9981611Z 
2025-08-18T23:00:37.9981735Z ```python
2025-08-18T23:00:37.9982045Z @router.get("/stats/roi_by_vendor")
2025-08-18T23:00:37.9982504Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T23:00:37.9982922Z ```
2025-08-18T23:00:37.9983083Z 
2025-08-18T23:00:37.9983252Z Return ROI percent by vendor.
2025-08-18T23:00:37.9983518Z 
2025-08-18T23:00:37.9983684Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T23:00:37.9984003Z 
2025-08-18T23:00:37.9984125Z #### roi\_trend
2025-08-18T23:00:37.9984316Z 
2025-08-18T23:00:37.9984433Z ```python
2025-08-18T23:00:37.9984748Z @router.get("/stats/roi_trend")
2025-08-18T23:00:37.9985195Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T23:00:37.9985631Z ```
2025-08-18T23:00:37.9985787Z 
2025-08-18T23:00:37.9985930Z Return 30-day ROI trend.
2025-08-18T23:00:37.9986161Z 
2025-08-18T23:00:37.9986304Z <a id="api.routes.roi"></a>
2025-08-18T23:00:37.9986559Z 
2025-08-18T23:00:37.9986683Z # api.routes.roi
2025-08-18T23:00:37.9986882Z 
2025-08-18T23:00:37.9987031Z <a id="api.routes.health"></a>
2025-08-18T23:00:37.9987304Z 
2025-08-18T23:00:37.9987439Z # api.routes.health
2025-08-18T23:00:37.9987646Z 
2025-08-18T23:00:37.9987821Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T23:00:37.9988380Z 
2025-08-18T23:00:37.9988512Z #### MAX\_SKEW
2025-08-18T23:00:37.9988713Z 
2025-08-18T23:00:37.9989054Z seconds
2025-08-18T23:00:37.9989235Z 
2025-08-18T23:00:37.9989410Z <a id="api.routes.health.health"></a>
2025-08-18T23:00:37.9989777Z 
2025-08-18T23:00:37.9989893Z #### health
2025-08-18T23:00:37.9990060Z 
2025-08-18T23:00:37.9990187Z ```python
2025-08-18T23:00:37.9990548Z @router.get("/health", include_in_schema=False)
2025-08-18T23:00:37.9991312Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T23:00:37.9991930Z ```
2025-08-18T23:00:37.9992095Z 
2025-08-18T23:00:37.9992315Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T23:00:37.9992684Z 
2025-08-18T23:00:37.9992847Z <a id="api.routes.repository"></a>
2025-08-18T23:00:37.9993146Z 
2025-08-18T23:00:37.9993273Z # api.routes.repository
2025-08-18T23:00:37.9993493Z 
2025-08-18T23:00:37.9993627Z <a id="api.routes"></a>
2025-08-18T23:00:37.9993833Z 
2025-08-18T23:00:37.9993947Z # api.routes
2025-08-18T23:00:37.9994133Z 
2025-08-18T23:00:37.9994285Z <a id="api.models.fee"></a>
2025-08-18T23:00:37.9994539Z 
2025-08-18T23:00:37.9994664Z # api.models.fee
2025-08-18T23:00:37.9994871Z 
2025-08-18T23:00:37.9995012Z <a id="api.models"></a>
2025-08-18T23:00:37.9995247Z 
2025-08-18T23:00:37.9995379Z # api.models
2025-08-18T23:00:37.9995559Z 
2025-08-18T23:00:37.9995744Z <a id="api.roi_repository"></a>
2025-08-18T23:00:37.9996026Z 
2025-08-18T23:00:37.9996171Z # api.roi\_repository
2025-08-18T23:00:37.9996403Z 
2025-08-18T23:00:37.9996537Z <a id="api.main"></a>
2025-08-18T23:00:37.9996750Z 
2025-08-18T23:00:37.9996867Z # api.main
2025-08-18T23:00:37.9997045Z 
2025-08-18T23:00:37.9997188Z <a id="api.main.ready"></a>
2025-08-18T23:00:37.9997440Z 
2025-08-18T23:00:37.9997562Z #### ready
2025-08-18T23:00:37.9997732Z 
2025-08-18T23:00:37.9997853Z ```python
2025-08-18T23:00:37.9998344Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T23:00:37.9999337Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T23:00:38.0000256Z                                                                       str]
2025-08-18T23:00:38.0000704Z ```
2025-08-18T23:00:38.0000860Z 
2025-08-18T23:00:38.0001044Z Return 200 only when migrations are at head.
2025-08-18T23:00:38.0001376Z 
2025-08-18T23:00:38.0001519Z <a id="api.config"></a>
2025-08-18T23:00:38.0001743Z 
2025-08-18T23:00:38.0001862Z # api.config
2025-08-18T23:00:38.0002052Z 
2025-08-18T23:00:38.0002174Z <a id="etl"></a>
2025-08-18T23:00:38.0002370Z 
2025-08-18T23:00:38.0002481Z # etl
2025-08-18T23:00:38.0002646Z 
2025-08-18T23:00:38.0002797Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T23:00:38.0003230Z 
2025-08-18T23:00:38.0003390Z # etl.fba\_fee\_ingestor
2025-08-18T23:00:38.0003623Z 
2025-08-18T23:00:38.0003776Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T23:00:38.0004059Z 
2025-08-18T23:00:38.0004199Z # etl.sp\_fees\_ingestor
2025-08-18T23:00:38.0004428Z 
2025-08-18T23:00:38.0004577Z <a id="etl.keepa_ingestor"></a>
2025-08-18T23:00:38.0004922Z 
2025-08-18T23:00:38.0005061Z # etl.keepa\_ingestor
2025-08-18T23:00:38.0005274Z 
2025-08-18T23:00:38.0005406Z <a id="etl.db"></a>
2025-08-18T23:00:38.0005607Z 
2025-08-18T23:00:38.0005719Z # etl.db
2025-08-18T23:00:38.0005882Z 
2025-08-18T23:00:38.0006044Z <a id="etl.dialects.schemas"></a>
2025-08-18T23:00:38.0006325Z 
2025-08-18T23:00:38.0006464Z # etl.dialects.schemas
2025-08-18T23:00:38.0006695Z 
2025-08-18T23:00:38.0006888Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T23:00:38.0007238Z 
2025-08-18T23:00:38.0007419Z # etl.dialects.amazon\_reimbursements
2025-08-18T23:00:38.0007735Z 
2025-08-18T23:00:38.0007919Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T23:00:38.0008306Z 
2025-08-18T23:00:38.0008511Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T23:00:38.0009012Z 
2025-08-18T23:00:38.0009206Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T23:00:38.0009528Z 
2025-08-18T23:00:38.0009684Z # etl.dialects.amazon\_returns
2025-08-18T23:00:38.0010191Z 
2025-08-18T23:00:38.0010385Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T23:00:38.0010713Z 
2025-08-18T23:00:38.0010880Z # etl.dialects.amazon\_fee\_preview
2025-08-18T23:00:38.0011186Z 
2025-08-18T23:00:38.0011389Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T23:00:38.0011752Z 
2025-08-18T23:00:38.0011931Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T23:00:38.0012244Z 
2025-08-18T23:00:38.0012425Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T23:00:38.0012761Z 
2025-08-18T23:00:38.0012926Z # etl.dialects.amazon\_settlements
2025-08-18T23:00:38.0013216Z 
2025-08-18T23:00:38.0013356Z <a id="etl.dialects"></a>
2025-08-18T23:00:38.0013605Z 
2025-08-18T23:00:38.0013724Z # etl.dialects
2025-08-18T23:00:38.0013909Z 
2025-08-18T23:00:38.0014043Z <a id="ingest"></a>
2025-08-18T23:00:38.0014248Z 
2025-08-18T23:00:38.0014366Z # ingest
2025-08-18T23:00:38.0014527Z 
2025-08-18T23:00:38.0014687Z <a id="ingest.maintenance"></a>
2025-08-18T23:00:38.0014956Z 
2025-08-18T23:00:38.0015101Z # ingest.maintenance
2025-08-18T23:00:38.0015329Z 
2025-08-18T23:00:38.0015478Z <a id="ingest.copy_loader"></a>
2025-08-18T23:00:38.0015739Z 
2025-08-18T23:00:38.0015891Z # ingest.copy\_loader
2025-08-18T23:00:38.0016108Z 
2025-08-18T23:00:38.0016301Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T23:00:38.0016645Z 
2025-08-18T23:00:38.0016789Z #### copy\_df\_via\_temp
2025-08-18T23:00:38.0017019Z 
2025-08-18T23:00:38.0017137Z ```python
2025-08-18T23:00:38.0017463Z def copy_df_via_temp(engine: Engine,
2025-08-18T23:00:38.0017906Z                      df: pd.DataFrame,
2025-08-18T23:00:38.0018345Z                      target_table: str,
2025-08-18T23:00:38.0018764Z                      *,
2025-08-18T23:00:38.0019350Z                      target_schema: Optional[str] = None,
2025-08-18T23:00:38.0019865Z                      columns: Sequence[str],
2025-08-18T23:00:38.0020379Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T23:00:38.0020922Z                      analyze_after: bool = False,
2025-08-18T23:00:38.0021661Z                      connection: Any | None = None) -> int
2025-08-18T23:00:38.0022111Z ```
2025-08-18T23:00:38.0022269Z 
2025-08-18T23:00:38.0022554Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T23:00:38.0023002Z 
2025-08-18T23:00:38.0023163Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T23:00:38.0023463Z 
2025-08-18T23:00:38.0023617Z # ingest.tests.test\_smoke
2025-08-18T23:00:38.0023863Z 
2025-08-18T23:00:38.0024003Z <a id="ingest.tests"></a>
2025-08-18T23:00:38.0024250Z 
2025-08-18T23:00:38.0024411Z # ingest.tests
2025-08-18T23:00:38.0024624Z 
2025-08-18T23:00:38.0024782Z <a id="ingest.upload_router"></a>
2025-08-18T23:00:38.0025081Z 
2025-08-18T23:00:38.0025220Z # ingest.upload\_router
2025-08-18T23:00:38.0025448Z 
2025-08-18T23:00:38.0025610Z <a id="ingest.email_watcher"></a>
2025-08-18T23:00:38.0025889Z 
2025-08-18T23:00:38.0026027Z # ingest.email\_watcher
2025-08-18T23:00:38.0026256Z 
2025-08-18T23:00:38.0026423Z <a id="ingest.email_watcher.main"></a>
2025-08-18T23:00:38.0026732Z 
2025-08-18T23:00:38.0026847Z #### main
2025-08-18T23:00:38.0027030Z 
2025-08-18T23:00:38.0027148Z ```python
2025-08-18T23:00:38.0027461Z def main() -> dict[str, str]
2025-08-18T23:00:38.0027819Z ```
2025-08-18T23:00:38.0027968Z 
2025-08-18T23:00:38.0028244Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T23:00:38.0028677Z 
2025-08-18T23:00:38.0029105Z Returns {"status": "success"} when processing completes.
2025-08-18T23:00:38.0029521Z 
2025-08-18T23:00:38.0029665Z <a id="ingest.tasks"></a>
2025-08-18T23:00:38.0029903Z 
2025-08-18T23:00:38.0030026Z # ingest.tasks
2025-08-18T23:00:38.0030224Z 
2025-08-18T23:00:38.0030407Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T23:00:38.0030732Z 
2025-08-18T23:00:38.0030873Z #### task\_import\_file
2025-08-18T23:00:38.0031095Z 
2025-08-18T23:00:38.0031212Z ```python
2025-08-18T23:00:38.0031613Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T23:00:38.0032381Z def task_import_file(self: Any,
2025-08-18T23:00:38.0032790Z                      uri: str,
2025-08-18T23:00:38.0033253Z                      report_type: Optional[str] = None,
2025-08-18T23:00:38.0033768Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T23:00:38.0034221Z ```
2025-08-18T23:00:38.0034377Z 
2025-08-18T23:00:38.0034624Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T23:00:38.0035029Z 
2025-08-18T23:00:38.0035185Z <a id="ingest.celery_app"></a>
2025-08-18T23:00:38.0035449Z 
2025-08-18T23:00:38.0035583Z # ingest.celery\_app
2025-08-18T23:00:38.0035804Z 
2025-08-18T23:00:38.0035955Z <a id="ingest.ingest_router"></a>
2025-08-18T23:00:38.0036240Z 
2025-08-18T23:00:38.0036388Z # ingest.ingest\_router
2025-08-18T23:00:38.0036612Z 
2025-08-18T23:00:38.0036754Z <a id="logistics_etl"></a>
2025-08-18T23:00:38.0036994Z 
2025-08-18T23:00:38.0037127Z # logistics\_etl
2025-08-18T23:00:38.0037329Z 
2025-08-18T23:00:38.0037473Z Daily logistics ETL job.
2025-08-18T23:00:38.0037742Z 
2025-08-18T23:00:38.0037902Z <a id="logistics_etl.__main__"></a>
2025-08-18T23:00:38.0038198Z 
2025-08-18T23:00:38.0038356Z # logistics\_etl.\_\_main\_\_
2025-08-18T23:00:38.0038623Z 
2025-08-18T23:00:38.0038958Z <a id="logistics_etl.dsn"></a>
2025-08-18T23:00:38.0039236Z 
2025-08-18T23:00:38.0039380Z # logistics\_etl.dsn
2025-08-18T23:00:38.0039595Z 
2025-08-18T23:00:38.0039815Z Local DSN builder to avoid cross-service dependency.
2025-08-18T23:00:38.0040206Z 
2025-08-18T23:00:38.0040380Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T23:00:38.0040696Z 
2025-08-18T23:00:38.0040826Z #### build\_dsn
2025-08-18T23:00:38.0041013Z 
2025-08-18T23:00:38.0041131Z ```python
2025-08-18T23:00:38.0041464Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:00:38.0041880Z ```
2025-08-18T23:00:38.0042034Z 
2025-08-18T23:00:38.0042304Z Return a Postgres DSN assembled from environment variables.
2025-08-18T23:00:38.0042721Z 
2025-08-18T23:00:38.0042998Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T23:00:38.0043960Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T23:00:38.0044676Z error when any required variable is missing.
2025-08-18T23:00:38.0045015Z 
2025-08-18T23:00:38.0045193Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T23:00:38.0045516Z 
2025-08-18T23:00:38.0045678Z # logistics\_etl.tests.conftest
2025-08-18T23:00:38.0045945Z 
2025-08-18T23:00:38.0046142Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T23:00:38.0046498Z 
2025-08-18T23:00:38.0046660Z # logistics\_etl.tests.test\_repository
2025-08-18T23:00:38.0046966Z 
2025-08-18T23:00:38.0047148Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T23:00:38.0047467Z 
2025-08-18T23:00:38.0047618Z # logistics\_etl.tests.test\_cron
2025-08-18T23:00:38.0047900Z 
2025-08-18T23:00:38.0048091Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T23:00:38.0048423Z 
2025-08-18T23:00:38.0048576Z # logistics\_etl.tests.test\_imports
2025-08-18T23:00:38.0049087Z 
2025-08-18T23:00:38.0049276Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T23:00:38.0049603Z 
2025-08-18T23:00:38.0049772Z # logistics\_etl.tests.test\_smoke
2025-08-18T23:00:38.0050063Z 
2025-08-18T23:00:38.0050247Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T23:00:38.0050574Z 
2025-08-18T23:00:38.0050740Z # logistics\_etl.tests.test\_client
2025-08-18T23:00:38.0051032Z 
2025-08-18T23:00:38.0051186Z <a id="logistics_etl.tests"></a>
2025-08-18T23:00:38.0051472Z 
2025-08-18T23:00:38.0051607Z # logistics\_etl.tests
2025-08-18T23:00:38.0051828Z 
2025-08-18T23:00:38.0051983Z <a id="logistics_etl.flow"></a>
2025-08-18T23:00:38.0052247Z 
2025-08-18T23:00:38.0052380Z # logistics\_etl.flow
2025-08-18T23:00:38.0052596Z 
2025-08-18T23:00:38.0052755Z <a id="logistics_etl.client"></a>
2025-08-18T23:00:38.0053028Z 
2025-08-18T23:00:38.0053158Z # logistics\_etl.client
2025-08-18T23:00:38.0053378Z 
2025-08-18T23:00:38.0053511Z <a id="logistics_etl.cron"></a>
2025-08-18T23:00:38.0053958Z 
2025-08-18T23:00:38.0054093Z # logistics\_etl.cron
2025-08-18T23:00:38.0054327Z 
2025-08-18T23:00:38.0054475Z <a id="logistics_etl.db"></a>
2025-08-18T23:00:38.0054733Z 
2025-08-18T23:00:38.0081304Z # logistics\_etl.db
2025-08-18T23:00:38.0081563Z 
2025-08-18T23:00:38.0081828Z <a id="logistics_etl.repository"></a>
2025-08-18T23:00:38.0082121Z 
2025-08-18T23:00:38.0082311Z # logistics\_etl.repository
2025-08-18T23:00:38.0082538Z 
2025-08-18T23:00:38.0082667Z <a id="alert_bot"></a>
2025-08-18T23:00:38.0082867Z 
2025-08-18T23:00:38.0082972Z # alert\_bot
2025-08-18T23:00:38.0083132Z 
2025-08-18T23:00:38.0083271Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T23:00:38.0083524Z 
2025-08-18T23:00:38.0083647Z # alert\_bot.tests.test\_smoke
2025-08-18T23:00:38.0083876Z 
2025-08-18T23:00:38.0084005Z <a id="alert_bot.tests"></a>
2025-08-18T23:00:38.0084220Z 
2025-08-18T23:00:38.0084342Z # alert\_bot.tests
2025-08-18T23:00:38.0084518Z 
2025-08-18T23:00:38.0084645Z <a id="alert_bot.alert_bot"></a>
2025-08-18T23:00:38.0084900Z 
2025-08-18T23:00:38.0085028Z # alert\_bot.alert\_bot
2025-08-18T23:00:38.0085208Z 
2025-08-18T23:00:38.0085328Z <a id="alert_bot.rules"></a>
2025-08-18T23:00:38.0085546Z 
2025-08-18T23:00:38.0085651Z # alert\_bot.rules
2025-08-18T23:00:38.0085814Z 
2025-08-18T23:00:38.0085923Z <a id="common"></a>
2025-08-18T23:00:38.0086097Z 
2025-08-18T23:00:38.0086198Z # common
2025-08-18T23:00:38.0086332Z 
2025-08-18T23:00:38.0086449Z <a id="common.dsn"></a>
2025-08-18T23:00:38.0086629Z 
2025-08-18T23:00:38.0086732Z # common.dsn
2025-08-18T23:00:38.0086885Z 
2025-08-18T23:00:38.0087014Z <a id="common.dsn.build_dsn"></a>
2025-08-18T23:00:38.0087278Z 
2025-08-18T23:00:38.0087380Z #### build\_dsn
2025-08-18T23:00:38.0087546Z 
2025-08-18T23:00:38.0087655Z ```python
2025-08-18T23:00:38.0087934Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:00:38.0088294Z ```
2025-08-18T23:00:38.0088424Z 
2025-08-18T23:00:38.0088621Z Return a Postgres DSN, validating required variables.
2025-08-18T23:00:38.0089125Z 
2025-08-18T23:00:38.0089436Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T23:00:38.0090399Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T23:00:38.0091079Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T23:00:38.0091583Z missing.
2025-08-18T23:00:38.0091727Z 
2025-08-18T23:00:38.0091872Z <a id="common.models_vendor"></a>
2025-08-18T23:00:38.0092126Z 
2025-08-18T23:00:38.0092244Z # common.models\_vendor
2025-08-18T23:00:38.0092429Z 
2025-08-18T23:00:38.0092567Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T23:00:38.0092832Z 
2025-08-18T23:00:38.0092938Z ## Vendor Objects
2025-08-18T23:00:38.0093116Z 
2025-08-18T23:00:38.0093225Z ```python
2025-08-18T23:00:38.0093473Z class Vendor(Base)
2025-08-18T23:00:38.0093741Z ```
2025-08-18T23:00:38.0093872Z 
2025-08-18T23:00:38.0093992Z Vendor of inventory items.
2025-08-18T23:00:38.0094201Z 
2025-08-18T23:00:38.0094359Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T23:00:38.0094662Z 
2025-08-18T23:00:38.0094778Z ## VendorPrice Objects
2025-08-18T23:00:38.0094958Z 
2025-08-18T23:00:38.0095055Z ```python
2025-08-18T23:00:38.0095300Z class VendorPrice(Base)
2025-08-18T23:00:38.0095586Z ```
2025-08-18T23:00:38.0095710Z 
2025-08-18T23:00:38.0095880Z Association table linking vendors to pricing.
2025-08-18T23:00:38.0096168Z 
2025-08-18T23:00:38.0096280Z <a id="common.db_url"></a>
2025-08-18T23:00:38.0096488Z 
2025-08-18T23:00:38.0096598Z # common.db\_url
2025-08-18T23:00:38.0096767Z 
2025-08-18T23:00:38.0096892Z <a id="common.db_url.build_url"></a>
2025-08-18T23:00:38.0097151Z 
2025-08-18T23:00:38.0097247Z #### build\_url
2025-08-18T23:00:38.0097403Z 
2025-08-18T23:00:38.0097507Z ```python
2025-08-18T23:00:38.0097771Z def build_url(async_: bool = True) -> str
2025-08-18T23:00:38.0098139Z ```
2025-08-18T23:00:38.0098261Z 
2025-08-18T23:00:38.0098409Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:00:38.0098683Z 
2025-08-18T23:00:38.0098955Z <a id="common.keepa"></a>
2025-08-18T23:00:38.0099346Z 
2025-08-18T23:00:38.0099452Z # common.keepa
2025-08-18T23:00:38.0099613Z 
2025-08-18T23:00:38.0099720Z <a id="common.llm"></a>
2025-08-18T23:00:38.0099904Z 
2025-08-18T23:00:38.0100007Z # common.llm
2025-08-18T23:00:38.0100155Z 
2025-08-18T23:00:38.0100276Z <a id="common.settings"></a>
2025-08-18T23:00:38.0100507Z 
2025-08-18T23:00:38.0100621Z # common.settings
2025-08-18T23:00:38.0100786Z 
2025-08-18T23:00:38.0100902Z <a id="common.db"></a>
2025-08-18T23:00:38.0101099Z 
2025-08-18T23:00:38.0101206Z # common.db
2025-08-18T23:00:38.0101358Z 
2025-08-18T23:00:38.0101511Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T23:00:38.0101780Z 
2025-08-18T23:00:38.0101899Z #### build\_sqlalchemy\_url
2025-08-18T23:00:38.0102110Z 
2025-08-18T23:00:38.0102223Z ```python
2025-08-18T23:00:38.0102490Z def build_sqlalchemy_url() -> str
2025-08-18T23:00:38.0102827Z ```
2025-08-18T23:00:38.0102962Z 
2025-08-18T23:00:38.0103118Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:00:38.0103403Z 
2025-08-18T23:00:38.0103555Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T23:00:38.0103818Z 
2025-08-18T23:00:38.0103933Z #### build\_asyncpg\_dsn
2025-08-18T23:00:38.0104125Z 
2025-08-18T23:00:38.0104236Z ```python
2025-08-18T23:00:38.0104501Z def build_asyncpg_dsn() -> str
2025-08-18T23:00:38.0104811Z ```
2025-08-18T23:00:38.0104942Z 
2025-08-18T23:00:38.0105143Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:00:38.0105471Z 
2025-08-18T23:00:38.0105601Z <a id="common.db.refresh_mvs"></a>
2025-08-18T23:00:38.0105836Z 
2025-08-18T23:00:38.0105946Z #### refresh\_mvs
2025-08-18T23:00:38.0106110Z 
2025-08-18T23:00:38.0106205Z ```python
2025-08-18T23:00:38.0106512Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:00:38.0106891Z ```
2025-08-18T23:00:38.0107021Z 
2025-08-18T23:00:38.0107235Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:00:38.0107566Z 
2025-08-18T23:00:38.0107684Z <a id="common.config"></a>
2025-08-18T23:00:38.0107906Z 
2025-08-18T23:00:38.0108190Z # common.config
2025-08-18T23:00:38.0108349Z 
2025-08-18T23:00:38.0108468Z <a id="common.base"></a>
2025-08-18T23:00:38.0108656Z 
2025-08-18T23:00:38.0108758Z # common.base
2025-08-18T23:00:38.0109101Z 
2025-08-18T23:00:38.0109230Z <a id="common.base.Base"></a>
2025-08-18T23:00:38.0109446Z 
2025-08-18T23:00:38.0109546Z ## Base Objects
2025-08-18T23:00:38.0109705Z 
2025-08-18T23:00:38.0109803Z ```python
2025-08-18T23:00:38.0110068Z class Base(DeclarativeBase)
2025-08-18T23:00:38.0110365Z ```
2025-08-18T23:00:38.0110490Z 
2025-08-18T23:00:38.0110625Z Base class for SQLAlchemy models.
2025-08-18T23:00:38.0110856Z 
2025-08-18T23:00:38.0110969Z <a id="repricer"></a>
2025-08-18T23:00:38.0111156Z 
2025-08-18T23:00:38.0111257Z # repricer
2025-08-18T23:00:38.0111400Z 
2025-08-18T23:00:38.0111533Z <a id="repricer.app.schemas"></a>
2025-08-18T23:00:38.0111773Z 
2025-08-18T23:00:38.0111892Z # repricer.app.schemas
2025-08-18T23:00:38.0112084Z 
2025-08-18T23:00:38.0112225Z <a id="repricer.app.deps"></a>
2025-08-18T23:00:38.0112458Z 
2025-08-18T23:00:38.0112569Z # repricer.app.deps
2025-08-18T23:00:38.0112747Z 
2025-08-18T23:00:38.0112925Z Placeholder module for Keepa / SP-API clients.
2025-08-18T23:00:38.0113215Z 
2025-08-18T23:00:38.0113349Z <a id="repricer.app.logic"></a>
2025-08-18T23:00:38.0113580Z 
2025-08-18T23:00:38.0113694Z # repricer.app.logic
2025-08-18T23:00:38.0113876Z 
2025-08-18T23:00:38.0114031Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T23:00:38.0114296Z 
2025-08-18T23:00:38.0114397Z #### MIN\_MARGIN
2025-08-18T23:00:38.0114560Z 
2025-08-18T23:00:38.0114654Z 15 % ROI
2025-08-18T23:00:38.0114785Z 
2025-08-18T23:00:38.0114941Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T23:00:38.0115233Z 
2025-08-18T23:00:38.0115342Z #### compute\_price
2025-08-18T23:00:38.0115503Z 
2025-08-18T23:00:38.0115607Z ```python
2025-08-18T23:00:38.0115983Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T23:00:38.0116449Z ```
2025-08-18T23:00:38.0116754Z 
2025-08-18T23:00:38.0116935Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T23:00:38.0117380Z Replace with real competitive logic later.
2025-08-18T23:00:38.0117651Z 
2025-08-18T23:00:38.0117783Z <a id="repricer.app.main"></a>
2025-08-18T23:00:38.0118006Z 
2025-08-18T23:00:38.0118120Z # repricer.app.main
2025-08-18T23:00:38.0118293Z 
2025-08-18T23:00:38.0118419Z <a id="repricer.app"></a>
2025-08-18T23:00:38.0118611Z 
2025-08-18T23:00:38.0118716Z # repricer.app
2025-08-18T23:00:38.0119037Z 
2025-08-18T23:00:38.0119193Z <a id="repricer.tests.test_imports"></a>
2025-08-18T23:00:38.0119455Z 
2025-08-18T23:00:38.0119581Z # repricer.tests.test\_imports
2025-08-18T23:00:38.0119817Z 
2025-08-18T23:00:38.0119954Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T23:00:38.0120202Z 
2025-08-18T23:00:38.0120332Z # repricer.tests.test\_smoke
2025-08-18T23:00:38.0120544Z 
2025-08-18T23:00:38.0120665Z <a id="repricer.tests"></a>
2025-08-18T23:00:38.0120861Z 
2025-08-18T23:00:38.0120979Z # repricer.tests
2025-08-18T23:00:38.0121151Z 
2025-08-18T23:00:38.0121249Z <a id="db"></a>
2025-08-18T23:00:38.0121408Z 
2025-08-18T23:00:38.0121504Z # db
2025-08-18T23:00:38.0121634Z 
2025-08-18T23:00:38.0121751Z <a id="db.utils.views"></a>
2025-08-18T23:00:38.0121957Z 
2025-08-18T23:00:38.0122061Z # db.utils.views
2025-08-18T23:00:38.0122219Z 
2025-08-18T23:00:38.0122365Z <a id="db.utils.views.replace_view"></a>
2025-08-18T23:00:38.0122624Z 
2025-08-18T23:00:38.0122729Z #### replace\_view
2025-08-18T23:00:38.0122903Z 
2025-08-18T23:00:38.0123003Z ```python
2025-08-18T23:00:38.0123309Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T23:00:38.0123720Z ```
2025-08-18T23:00:38.0123847Z 
2025-08-18T23:00:38.0123991Z Drop and recreate a SQL view atomically.
2025-08-18T23:00:38.0124250Z 
2025-08-18T23:00:38.0124359Z <a id="db.utils"></a>
2025-08-18T23:00:38.0124538Z 
2025-08-18T23:00:38.0124640Z # db.utils
2025-08-18T23:00:38.0124775Z 
2025-08-18T23:00:38.0124895Z <a id="price_importer"></a>
2025-08-18T23:00:38.0125117Z 
2025-08-18T23:00:38.0125454Z # price\_importer
2025-08-18T23:00:38.0125626Z 
2025-08-18T23:00:38.0125795Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T23:00:38.0126095Z 
2025-08-18T23:00:38.0126236Z # price\_importer.services\_common.dsn
2025-08-18T23:00:38.0126492Z 
2025-08-18T23:00:38.0126693Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T23:00:38.0127014Z 
2025-08-18T23:00:38.0127115Z #### build\_dsn
2025-08-18T23:00:38.0127277Z 
2025-08-18T23:00:38.0127374Z ```python
2025-08-18T23:00:38.0127642Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:00:38.0127990Z ```
2025-08-18T23:00:38.0128117Z 
2025-08-18T23:00:38.0128224Z Return safe DSN.
2025-08-18T23:00:38.0128385Z 
2025-08-18T23:00:38.0129027Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T23:00:38.0129348Z 
2025-08-18T23:00:38.0129547Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T23:00:38.0129864Z 
2025-08-18T23:00:38.0130034Z # price\_importer.services\_common.models\_vendor
2025-08-18T23:00:38.0130359Z 
2025-08-18T23:00:38.0130522Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T23:00:38.0130808Z 
2025-08-18T23:00:38.0130957Z # price\_importer.services\_common.db\_url
2025-08-18T23:00:38.0131213Z 
2025-08-18T23:00:38.0131416Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T23:00:38.0131747Z 
2025-08-18T23:00:38.0131847Z #### build\_url
2025-08-18T23:00:38.0131999Z 
2025-08-18T23:00:38.0132096Z ```python
2025-08-18T23:00:38.0132364Z def build_url(async_: bool = True) -> str
2025-08-18T23:00:38.0132763Z ```
2025-08-18T23:00:38.0132893Z 
2025-08-18T23:00:38.0133048Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:00:38.0133356Z 
2025-08-18T23:00:38.0133523Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T23:00:38.0133822Z 
2025-08-18T23:00:38.0133972Z # price\_importer.services\_common.keepa
2025-08-18T23:00:38.0134240Z 
2025-08-18T23:00:38.0134404Z <a id="price_importer.services_common.llm"></a>
2025-08-18T23:00:38.0134877Z 
2025-08-18T23:00:38.0135021Z # price\_importer.services\_common.llm
2025-08-18T23:00:38.0135284Z 
2025-08-18T23:00:38.0135478Z <a id="price_importer.services_common.settings"></a>
2025-08-18T23:00:38.0135772Z 
2025-08-18T23:00:38.0135918Z # price\_importer.services\_common.settings
2025-08-18T23:00:38.0136189Z 
2025-08-18T23:00:38.0136347Z <a id="price_importer.services_common.db"></a>
2025-08-18T23:00:38.0136633Z 
2025-08-18T23:00:38.0136773Z # price\_importer.services\_common.db
2025-08-18T23:00:38.0137043Z 
2025-08-18T23:00:38.0137303Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T23:00:38.0137685Z 
2025-08-18T23:00:38.0137817Z #### build\_sqlalchemy\_url
2025-08-18T23:00:38.0138033Z 
2025-08-18T23:00:38.0138136Z ```python
2025-08-18T23:00:38.0138426Z def build_sqlalchemy_url() -> str
2025-08-18T23:00:38.0138918Z ```
2025-08-18T23:00:38.0139072Z 
2025-08-18T23:00:38.0139238Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:00:38.0139538Z 
2025-08-18T23:00:38.0139781Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T23:00:38.0140166Z 
2025-08-18T23:00:38.0140284Z #### build\_asyncpg\_dsn
2025-08-18T23:00:38.0140480Z 
2025-08-18T23:00:38.0140593Z ```python
2025-08-18T23:00:38.0140864Z def build_asyncpg_dsn() -> str
2025-08-18T23:00:38.0141183Z ```
2025-08-18T23:00:38.0141310Z 
2025-08-18T23:00:38.0141543Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:00:38.0141889Z 
2025-08-18T23:00:38.0142095Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T23:00:38.0142422Z 
2025-08-18T23:00:38.0142538Z #### refresh\_mvs
2025-08-18T23:00:38.0142704Z 
2025-08-18T23:00:38.0142807Z ```python
2025-08-18T23:00:38.0143127Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:00:38.0143526Z ```
2025-08-18T23:00:38.0143663Z 
2025-08-18T23:00:38.0143878Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:00:38.0144220Z 
2025-08-18T23:00:38.0144408Z <a id="price_importer.services_common"></a>
2025-08-18T23:00:38.0144891Z 
2025-08-18T23:00:38.0145027Z # price\_importer.services\_common
2025-08-18T23:00:38.0145270Z 
2025-08-18T23:00:38.0145440Z <a id="price_importer.services_common.base"></a>
2025-08-18T23:00:38.0145740Z 
2025-08-18T23:00:38.0145883Z # price\_importer.services\_common.base
2025-08-18T23:00:38.0146155Z 
2025-08-18T23:00:38.0146302Z <a id="price_importer.normaliser"></a>
2025-08-18T23:00:38.0146573Z 
2025-08-18T23:00:38.0146704Z # price\_importer.normaliser
2025-08-18T23:00:38.0146932Z 
2025-08-18T23:00:38.0147099Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T23:00:38.0147398Z 
2025-08-18T23:00:38.0147554Z # price\_importer.common.models\_vendor
2025-08-18T23:00:38.0147824Z 
2025-08-18T23:00:38.0147976Z <a id="price_importer.common.db_url"></a>
2025-08-18T23:00:38.0148264Z 
2025-08-18T23:00:38.0148405Z # price\_importer.common.db\_url
2025-08-18T23:00:38.0148651Z 
2025-08-18T23:00:38.0148975Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T23:00:38.0149319Z 
2025-08-18T23:00:38.0149424Z #### make\_dsn
2025-08-18T23:00:38.0149586Z 
2025-08-18T23:00:38.0149694Z ```python
2025-08-18T23:00:38.0149980Z def make_dsn(async_: bool = False) -> str
2025-08-18T23:00:38.0150357Z ```
2025-08-18T23:00:38.0150489Z 
2025-08-18T23:00:38.0150676Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T23:00:38.0151005Z 
2025-08-18T23:00:38.0151180Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T23:00:38.0151497Z 
2025-08-18T23:00:38.0151606Z #### build\_url
2025-08-18T23:00:38.0151765Z 
2025-08-18T23:00:38.0151866Z ```python
2025-08-18T23:00:38.0152156Z def build_url(async_: bool = False) -> str
2025-08-18T23:00:38.0152523Z ```
2025-08-18T23:00:38.0152666Z 
2025-08-18T23:00:38.0152871Z Return Postgres DSN built from environment variables.
2025-08-18T23:00:38.0153202Z 
2025-08-18T23:00:38.0153344Z <a id="price_importer.common"></a>
2025-08-18T23:00:38.0153599Z 
2025-08-18T23:00:38.0153726Z # price\_importer.common
2025-08-18T23:00:38.0154453Z 
2025-08-18T23:00:38.0154622Z <a id="price_importer.common.base"></a>
2025-08-18T23:00:38.0154890Z 
2025-08-18T23:00:38.0155029Z # price\_importer.common.base
2025-08-18T23:00:38.0155333Z 
2025-08-18T23:00:38.0155536Z <a id="price_importer.tests.conftest"></a>
2025-08-18T23:00:38.0155819Z 
2025-08-18T23:00:38.0155951Z # price\_importer.tests.conftest
2025-08-18T23:00:38.0156195Z 
2025-08-18T23:00:38.0156349Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T23:00:38.0156651Z 
2025-08-18T23:00:38.0156793Z # price\_importer.tests.test\_reader
2025-08-18T23:00:38.0157051Z 
2025-08-18T23:00:38.0157213Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T23:00:38.0157516Z 
2025-08-18T23:00:38.0157665Z # price\_importer.tests.test\_imports
2025-08-18T23:00:38.0157928Z 
2025-08-18T23:00:38.0158095Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T23:00:38.0158389Z 
2025-08-18T23:00:38.0158531Z # price\_importer.tests.test\_smoke
2025-08-18T23:00:38.0158968Z 
2025-08-18T23:00:38.0159168Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T23:00:38.0159522Z 
2025-08-18T23:00:38.0159674Z # price\_importer.tests.test\_normaliser
2025-08-18T23:00:38.0159957Z 
2025-08-18T23:00:38.0160097Z <a id="price_importer.tests"></a>
2025-08-18T23:00:38.0160351Z 
2025-08-18T23:00:38.0160474Z # price\_importer.tests
2025-08-18T23:00:38.0160686Z 
2025-08-18T23:00:38.0160832Z <a id="price_importer.reader"></a>
2025-08-18T23:00:38.0161085Z 
2025-08-18T23:00:38.0161217Z # price\_importer.reader
2025-08-18T23:00:38.0161419Z 
2025-08-18T23:00:38.0161567Z <a id="price_importer.repository"></a>
2025-08-18T23:00:38.0161842Z 
2025-08-18T23:00:38.0161970Z # price\_importer.repository
2025-08-18T23:00:38.0162192Z 
2025-08-18T23:00:38.0162325Z <a id="price_importer.import"></a>
2025-08-18T23:00:38.0162582Z 
2025-08-18T23:00:38.0162716Z # price\_importer.import
2025-08-18T23:00:38.0162920Z 
2025-08-18T23:00:38.0163041Z <a id="fees_h10"></a>
2025-08-18T23:00:38.0163231Z 
2025-08-18T23:00:38.0163341Z # fees\_h10
2025-08-18T23:00:38.0163664Z 
2025-08-18T23:00:38.0163796Z <a id="fees_h10.worker"></a>
2025-08-18T23:00:38.0164010Z 
2025-08-18T23:00:38.0164118Z # fees\_h10.worker
2025-08-18T23:00:38.0164296Z 
2025-08-18T23:00:38.0164448Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T23:00:38.0164734Z 
2025-08-18T23:00:38.0164857Z #### list\_active\_asins
2025-08-18T23:00:38.0165050Z 
2025-08-18T23:00:38.0165155Z ```python
2025-08-18T23:00:38.0165441Z def list_active_asins() -> list[str]
2025-08-18T23:00:38.0165789Z ```
2025-08-18T23:00:38.0165927Z 
2025-08-18T23:00:38.0166133Z Return known ASINs or an empty list if unavailable.
2025-08-18T23:00:38.0166466Z 
2025-08-18T23:00:38.0166606Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T23:00:38.0166877Z 
2025-08-18T23:00:38.0167010Z # fees\_h10.tests.test\_smoke
2025-08-18T23:00:38.0167245Z 
2025-08-18T23:00:38.0167360Z <a id="fees_h10.tests"></a>
2025-08-18T23:00:38.0167556Z 
2025-08-18T23:00:38.0167652Z # fees\_h10.tests
2025-08-18T23:00:38.0167817Z 
2025-08-18T23:00:38.0167950Z <a id="fees_h10.client"></a>
2025-08-18T23:00:38.0168158Z 
2025-08-18T23:00:38.0168262Z # fees\_h10.client
2025-08-18T23:00:38.0168433Z 
2025-08-18T23:00:38.0168567Z <a id="fees_h10.repository"></a>
2025-08-18T23:00:38.0168965Z 
2025-08-18T23:00:38.0169094Z # fees\_h10.repository
2025-08-18T23:00:38.0169289Z 
2025-08-18T23:00:38.0169404Z <a id="emailer"></a>
2025-08-18T23:00:38.0169593Z 
2025-08-18T23:00:38.0169707Z # emailer
2025-08-18T23:00:38.0169859Z 
2025-08-18T23:00:38.0170029Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T23:00:38.0170338Z 
2025-08-18T23:00:38.0170482Z # emailer.tests.test\_import\_emailer
2025-08-18T23:00:38.0170743Z 
2025-08-18T23:00:38.0170884Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T23:00:38.0171150Z 
2025-08-18T23:00:38.0171278Z # emailer.tests.test\_smoke
2025-08-18T23:00:38.0171500Z 
2025-08-18T23:00:38.0171627Z <a id="emailer.tests"></a>
2025-08-18T23:00:38.0171837Z 
2025-08-18T23:00:38.0171945Z # emailer.tests
2025-08-18T23:00:38.0172285Z 
2025-08-18T23:00:38.0172430Z <a id="emailer.generate_body"></a>
2025-08-18T23:00:38.0172680Z 
2025-08-18T23:00:38.0172807Z # emailer.generate\_body
2025-08-18T23:00:38.0173021Z 
2025-08-18T23:00:38.0173141Z <a id="llm_server"></a>
2025-08-18T23:00:38.0173332Z 
2025-08-18T23:00:38.0173442Z # llm\_server
2025-08-18T23:00:38.0173604Z 
2025-08-18T23:00:38.0173729Z <a id="llm_server.app"></a>
2025-08-18T23:00:38.0173949Z 
2025-08-18T23:00:38.0174058Z # llm\_server.app
2025-08-18T23:00:38.0174233Z 
