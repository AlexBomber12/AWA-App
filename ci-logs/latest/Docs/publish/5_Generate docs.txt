2025-08-18T21:30:31.0184804Z ##[group]Run pydoc-markdown
2025-08-18T21:30:31.0185088Z [36;1mpydoc-markdown[0m
2025-08-18T21:30:31.0225507Z shell: /usr/bin/bash -e {0}
2025-08-18T21:30:31.0225730Z env:
2025-08-18T21:30:31.0225967Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:30:31.0226384Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T21:30:31.0226779Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:30:31.0227116Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:30:31.0227453Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:30:31.0227788Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T21:30:31.0228073Z ##[endgroup]
2025-08-18T21:30:31.3635818Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T21:30:31.3636732Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T21:30:31.3637176Z In "pydoc-markdown.yml"
2025-08-18T21:30:31.3637596Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T21:30:31.3638189Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T21:30:31.3638890Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T21:30:31.3639368Z 
2025-08-18T21:30:31.6873113Z <a id="__init__"></a>
2025-08-18T21:30:31.6873476Z 
2025-08-18T21:30:31.6873632Z # \_\_init\_\_
2025-08-18T21:30:31.6873881Z 
2025-08-18T21:30:31.6874044Z <a id="api"></a>
2025-08-18T21:30:31.6874298Z 
2025-08-18T21:30:31.6874446Z # api
2025-08-18T21:30:31.6874641Z 
2025-08-18T21:30:31.6874811Z <a id="api.errors"></a>
2025-08-18T21:30:31.6875105Z 
2025-08-18T21:30:31.6875222Z # api.errors
2025-08-18T21:30:31.6875358Z 
2025-08-18T21:30:31.6875502Z <a id="api.sentry_config"></a>
2025-08-18T21:30:31.6875843Z 
2025-08-18T21:30:31.6876005Z # api.sentry\_config
2025-08-18T21:30:31.6876245Z 
2025-08-18T21:30:31.6876435Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T21:30:31.6876874Z 
2025-08-18T21:30:31.6877446Z # api.tests.test\_sentry\_scrub
2025-08-18T21:30:31.6877773Z 
2025-08-18T21:30:31.6877968Z <a id="api.tests.test_errors_json"></a>
2025-08-18T21:30:31.6878385Z 
2025-08-18T21:30:31.6878553Z # api.tests.test\_errors\_json
2025-08-18T21:30:31.6878858Z 
2025-08-18T21:30:31.6879020Z <a id="api.tests.test_llm"></a>
2025-08-18T21:30:31.6879316Z 
2025-08-18T21:30:31.6879463Z # api.tests.test\_llm
2025-08-18T21:30:31.6879716Z 
2025-08-18T21:30:31.6880016Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T21:30:31.6880370Z 
2025-08-18T21:30:31.6880751Z # api.tests.test\_sentry\_event
2025-08-18T21:30:31.6881066Z 
2025-08-18T21:30:31.6881297Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T21:30:31.6881578Z 
2025-08-18T21:30:31.6881678Z ## DummyTransport Objects
2025-08-18T21:30:31.6881846Z 
2025-08-18T21:30:31.6881929Z ```python
2025-08-18T21:30:31.6882148Z class DummyTransport()
2025-08-18T21:30:31.6882395Z ```
2025-08-18T21:30:31.6882503Z 
2025-08-18T21:30:31.6882831Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T21:30:31.6883480Z 
2025-08-18T21:30:31.6883615Z #### capture\_envelope
2025-08-18T21:30:31.6883831Z 
2025-08-18T21:30:31.6883938Z ```python
2025-08-18T21:30:31.6884155Z def capture_envelope(envelope)
2025-08-18T21:30:31.6884400Z ```
2025-08-18T21:30:31.6884501Z 
2025-08-18T21:30:31.6884648Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T21:30:31.6884898Z 
2025-08-18T21:30:31.6885003Z <a id="api.tests.test_cors"></a>
2025-08-18T21:30:31.6885181Z 
2025-08-18T21:30:31.6885265Z # api.tests.test\_cors
2025-08-18T21:30:31.6885411Z 
2025-08-18T21:30:31.6885510Z <a id="api.tests.test_imports"></a>
2025-08-18T21:30:31.6885700Z 
2025-08-18T21:30:31.6885790Z # api.tests.test\_imports
2025-08-18T21:30:31.6885948Z 
2025-08-18T21:30:31.6886049Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T21:30:31.6886250Z 
2025-08-18T21:30:31.6886347Z # api.tests.test\_rate\_limit
2025-08-18T21:30:31.6886514Z 
2025-08-18T21:30:31.6886625Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T21:30:31.6887098Z 
2025-08-18T21:30:31.6887171Z #### app
2025-08-18T21:30:31.6887276Z 
2025-08-18T21:30:31.6887351Z noqa: E402
2025-08-18T21:30:31.6887464Z 
2025-08-18T21:30:31.6887566Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T21:30:31.6887758Z 
2025-08-18T21:30:31.6887854Z # api.tests.test\_entrypoint
2025-08-18T21:30:31.6888019Z 
2025-08-18T21:30:31.6888115Z <a id="api.tests.test_health"></a>
2025-08-18T21:30:31.6888299Z 
2025-08-18T21:30:31.6888393Z # api.tests.test\_health
2025-08-18T21:30:31.6888545Z 
2025-08-18T21:30:31.6888640Z <a id="api.logging_config"></a>
2025-08-18T21:30:31.6888817Z 
2025-08-18T21:30:31.6888901Z # api.logging\_config
2025-08-18T21:30:31.6889041Z 
2025-08-18T21:30:31.6889141Z <a id="api.migrations.env"></a>
2025-08-18T21:30:31.6889314Z 
2025-08-18T21:30:31.6889401Z # api.migrations.env
2025-08-18T21:30:31.6889539Z 
2025-08-18T21:30:31.6889683Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T21:30:31.6889931Z 
2025-08-18T21:30:31.6890056Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T21:30:31.6890293Z 
2025-08-18T21:30:31.6890602Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T21:30:31.6890870Z 
2025-08-18T21:30:31.6890992Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T21:30:31.6891205Z 
2025-08-18T21:30:31.6891391Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T21:30:31.6891680Z 
2025-08-18T21:30:31.6891848Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T21:30:31.6892113Z 
2025-08-18T21:30:31.6892256Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T21:30:31.6892504Z 
2025-08-18T21:30:31.6892629Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T21:30:31.6892850Z 
2025-08-18T21:30:31.6892995Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T21:30:31.6893232Z 
2025-08-18T21:30:31.6893354Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T21:30:31.6893586Z 
2025-08-18T21:30:31.6893862Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T21:30:31.6894115Z 
2025-08-18T21:30:31.6894244Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T21:30:31.6894483Z 
2025-08-18T21:30:31.6894599Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T21:30:31.6894802Z 
2025-08-18T21:30:31.6894918Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T21:30:31.6895108Z 
2025-08-18T21:30:31.6895236Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T21:30:31.6895448Z 
2025-08-18T21:30:31.6895551Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T21:30:31.6895735Z 
2025-08-18T21:30:31.6895873Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T21:30:31.6896097Z 
2025-08-18T21:30:31.6896214Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T21:30:31.6896412Z 
2025-08-18T21:30:31.6896540Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T21:30:31.6896738Z 
2025-08-18T21:30:31.6896848Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T21:30:31.6897048Z 
2025-08-18T21:30:31.6897181Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T21:30:31.6897414Z 
2025-08-18T21:30:31.6897528Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T21:30:31.6897814Z 
2025-08-18T21:30:31.6897921Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T21:30:31.6898113Z 
2025-08-18T21:30:31.6898202Z # api.migrations.versions.0001\_baseline
2025-08-18T21:30:31.6898370Z 
2025-08-18T21:30:31.6898464Z <a id="api.migrations.versions"></a>
2025-08-18T21:30:31.6898620Z 
2025-08-18T21:30:31.6898700Z # api.migrations.versions
2025-08-18T21:30:31.6898837Z 
2025-08-18T21:30:31.6898913Z <a id="api.migrations"></a>
2025-08-18T21:30:31.6899045Z 
2025-08-18T21:30:31.6899112Z # api.migrations
2025-08-18T21:30:31.6899222Z 
2025-08-18T21:30:31.6899287Z <a id="api.db"></a>
2025-08-18T21:30:31.6899392Z 
2025-08-18T21:30:31.6899458Z # api.db
2025-08-18T21:30:31.6899543Z 
2025-08-18T21:30:31.6899626Z <a id="api.routes.stats"></a>
2025-08-18T21:30:31.6899901Z 
2025-08-18T21:30:31.6899975Z # api.routes.stats
2025-08-18T21:30:31.6900082Z 
2025-08-18T21:30:31.6900167Z <a id="api.routes.stats.kpi"></a>
2025-08-18T21:30:31.6900322Z 
2025-08-18T21:30:31.6900383Z #### kpi
2025-08-18T21:30:31.6900679Z 
2025-08-18T21:30:31.6900791Z ```python
2025-08-18T21:30:31.6900962Z @router.get("/stats/kpi")
2025-08-18T21:30:31.6901226Z def kpi() -> List[Dict[str, int]]
2025-08-18T21:30:31.6901434Z ```
2025-08-18T21:30:31.6901518Z 
2025-08-18T21:30:31.6901645Z Return KPI metrics (mock).
2025-08-18T21:30:31.6901775Z 
2025-08-18T21:30:31.6901872Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T21:30:31.6902053Z 
2025-08-18T21:30:31.6902118Z #### roi\_by\_vendor
2025-08-18T21:30:31.6902229Z 
2025-08-18T21:30:31.6902297Z ```python
2025-08-18T21:30:31.6902462Z @router.get("/stats/roi_by_vendor")
2025-08-18T21:30:31.6902708Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T21:30:31.6902932Z ```
2025-08-18T21:30:31.6903020Z 
2025-08-18T21:30:31.6903116Z Return ROI percent by vendor.
2025-08-18T21:30:31.6903252Z 
2025-08-18T21:30:31.6903342Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T21:30:31.6903513Z 
2025-08-18T21:30:31.6903576Z #### roi\_trend
2025-08-18T21:30:31.6903675Z 
2025-08-18T21:30:31.6903742Z ```python
2025-08-18T21:30:31.6903903Z @router.get("/stats/roi_trend")
2025-08-18T21:30:31.6904139Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T21:30:31.6904374Z ```
2025-08-18T21:30:31.6904454Z 
2025-08-18T21:30:31.6904532Z Return 30-day ROI trend.
2025-08-18T21:30:31.6904656Z 
2025-08-18T21:30:31.6904731Z <a id="api.routes.roi"></a>
2025-08-18T21:30:31.6904868Z 
2025-08-18T21:30:31.6904938Z # api.routes.roi
2025-08-18T21:30:31.6905041Z 
2025-08-18T21:30:31.6905127Z <a id="api.routes.health"></a>
2025-08-18T21:30:31.6905266Z 
2025-08-18T21:30:31.6905335Z # api.routes.health
2025-08-18T21:30:31.6905441Z 
2025-08-18T21:30:31.6905534Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T21:30:31.6905827Z 
2025-08-18T21:30:31.6905894Z #### MAX\_SKEW
2025-08-18T21:30:31.6905996Z 
2025-08-18T21:30:31.6906056Z seconds
2025-08-18T21:30:31.6906139Z 
2025-08-18T21:30:31.6906228Z <a id="api.routes.health.health"></a>
2025-08-18T21:30:31.6906396Z 
2025-08-18T21:30:31.6906457Z #### health
2025-08-18T21:30:31.6906564Z 
2025-08-18T21:30:31.6906626Z ```python
2025-08-18T21:30:31.6906819Z @router.get("/health", include_in_schema=False)
2025-08-18T21:30:31.6907186Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T21:30:31.6907529Z ```
2025-08-18T21:30:31.6907610Z 
2025-08-18T21:30:31.6907724Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T21:30:31.6907927Z 
2025-08-18T21:30:31.6908014Z <a id="api.routes.repository"></a>
2025-08-18T21:30:31.6908171Z 
2025-08-18T21:30:31.6908252Z # api.routes.repository
2025-08-18T21:30:31.6908376Z 
2025-08-18T21:30:31.6908446Z <a id="api.routes"></a>
2025-08-18T21:30:31.6908566Z 
2025-08-18T21:30:31.6908630Z # api.routes
2025-08-18T21:30:31.6908734Z 
2025-08-18T21:30:31.6908815Z <a id="api.models.fee"></a>
2025-08-18T21:30:31.6908959Z 
2025-08-18T21:30:31.6909025Z # api.models.fee
2025-08-18T21:30:31.6909132Z 
2025-08-18T21:30:31.6909209Z <a id="api.models"></a>
2025-08-18T21:30:31.6909323Z 
2025-08-18T21:30:31.6909384Z # api.models
2025-08-18T21:30:31.6909476Z 
2025-08-18T21:30:31.6909559Z <a id="api.roi_repository"></a>
2025-08-18T21:30:31.6909697Z 
2025-08-18T21:30:31.6909767Z # api.roi\_repository
2025-08-18T21:30:31.6909889Z 
2025-08-18T21:30:31.6909956Z <a id="api.main"></a>
2025-08-18T21:30:31.6910063Z 
2025-08-18T21:30:31.6910130Z # api.main
2025-08-18T21:30:31.6910220Z 
2025-08-18T21:30:31.6910296Z <a id="api.main.ready"></a>
2025-08-18T21:30:31.6910587Z 
2025-08-18T21:30:31.6910698Z #### ready
2025-08-18T21:30:31.6910787Z 
2025-08-18T21:30:31.6910850Z ```python
2025-08-18T21:30:31.6911107Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T21:30:31.6911530Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T21:30:31.6912015Z                                                                       str]
2025-08-18T21:30:31.6912245Z ```
2025-08-18T21:30:31.6912325Z 
2025-08-18T21:30:31.6912420Z Return 200 only when migrations are at head.
2025-08-18T21:30:31.6912589Z 
2025-08-18T21:30:31.6912667Z <a id="api.config"></a>
2025-08-18T21:30:31.6912782Z 
2025-08-18T21:30:31.6912844Z # api.config
2025-08-18T21:30:31.6912941Z 
2025-08-18T21:30:31.6913006Z <a id="etl"></a>
2025-08-18T21:30:31.6913108Z 
2025-08-18T21:30:31.6913166Z # etl
2025-08-18T21:30:31.6913255Z 
2025-08-18T21:30:31.6913334Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T21:30:31.6913487Z 
2025-08-18T21:30:31.6913568Z # etl.fba\_fee\_ingestor
2025-08-18T21:30:31.6913693Z 
2025-08-18T21:30:31.6913771Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T21:30:31.6913921Z 
2025-08-18T21:30:31.6913991Z # etl.sp\_fees\_ingestor
2025-08-18T21:30:31.6914109Z 
2025-08-18T21:30:31.6914185Z <a id="etl.keepa_ingestor"></a>
2025-08-18T21:30:31.6914340Z 
2025-08-18T21:30:31.6914409Z # etl.keepa\_ingestor
2025-08-18T21:30:31.6914523Z 
2025-08-18T21:30:31.6914594Z <a id="etl.db"></a>
2025-08-18T21:30:31.6914698Z 
2025-08-18T21:30:31.6914758Z # etl.db
2025-08-18T21:30:31.6914853Z 
2025-08-18T21:30:31.6914935Z <a id="etl.dialects.schemas"></a>
2025-08-18T21:30:31.6915079Z 
2025-08-18T21:30:31.6915152Z # etl.dialects.schemas
2025-08-18T21:30:31.6915274Z 
2025-08-18T21:30:31.6915377Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T21:30:31.6915561Z 
2025-08-18T21:30:31.6915652Z # etl.dialects.amazon\_reimbursements
2025-08-18T21:30:31.6915813Z 
2025-08-18T21:30:31.6915905Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T21:30:31.6916072Z 
2025-08-18T21:30:31.6916162Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T21:30:31.6916319Z 
2025-08-18T21:30:31.6916406Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T21:30:31.6916574Z 
2025-08-18T21:30:31.6916654Z # etl.dialects.amazon\_returns
2025-08-18T21:30:31.6916910Z 
2025-08-18T21:30:31.6917013Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T21:30:31.6917182Z 
2025-08-18T21:30:31.6917262Z # etl.dialects.amazon\_fee\_preview
2025-08-18T21:30:31.6917415Z 
2025-08-18T21:30:31.6917524Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T21:30:31.6917709Z 
2025-08-18T21:30:31.6917795Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T21:30:31.6917965Z 
2025-08-18T21:30:31.6918055Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T21:30:31.6918222Z 
2025-08-18T21:30:31.6918310Z # etl.dialects.amazon\_settlements
2025-08-18T21:30:31.6918460Z 
2025-08-18T21:30:31.6918534Z <a id="etl.dialects"></a>
2025-08-18T21:30:31.6918657Z 
2025-08-18T21:30:31.6918729Z # etl.dialects
2025-08-18T21:30:31.6918827Z 
2025-08-18T21:30:31.6918896Z <a id="ingest"></a>
2025-08-18T21:30:31.6919009Z 
2025-08-18T21:30:31.6919069Z # ingest
2025-08-18T21:30:31.6919153Z 
2025-08-18T21:30:31.6919239Z <a id="ingest.maintenance"></a>
2025-08-18T21:30:31.6919380Z 
2025-08-18T21:30:31.6919456Z # ingest.maintenance
2025-08-18T21:30:31.6919576Z 
2025-08-18T21:30:31.6919660Z <a id="ingest.copy_loader"></a>
2025-08-18T21:30:31.6919796Z 
2025-08-18T21:30:31.6919866Z # ingest.copy\_loader
2025-08-18T21:30:31.6919986Z 
2025-08-18T21:30:31.6920085Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T21:30:31.6920266Z 
2025-08-18T21:30:31.6920337Z #### copy\_df\_via\_temp
2025-08-18T21:30:31.6920714Z 
2025-08-18T21:30:31.6920834Z ```python
2025-08-18T21:30:31.6921027Z def copy_df_via_temp(engine: Engine,
2025-08-18T21:30:31.6921261Z                      df: pd.DataFrame,
2025-08-18T21:30:31.6921492Z                      target_table: str,
2025-08-18T21:30:31.6921706Z                      *,
2025-08-18T21:30:31.6921917Z                      target_schema: Optional[str] = None,
2025-08-18T21:30:31.6922171Z                      columns: Sequence[str],
2025-08-18T21:30:31.6922445Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T21:30:31.6922724Z                      analyze_after: bool = False,
2025-08-18T21:30:31.6923120Z                      connection: Any | None = None) -> int
2025-08-18T21:30:31.6923353Z ```
2025-08-18T21:30:31.6923434Z 
2025-08-18T21:30:31.6923585Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T21:30:31.6923820Z 
2025-08-18T21:30:31.6923905Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T21:30:31.6924062Z 
2025-08-18T21:30:31.6924138Z # ingest.tests.test\_smoke
2025-08-18T21:30:31.6924273Z 
2025-08-18T21:30:31.6924346Z <a id="ingest.tests"></a>
2025-08-18T21:30:31.6924470Z 
2025-08-18T21:30:31.6924540Z # ingest.tests
2025-08-18T21:30:31.6924639Z 
2025-08-18T21:30:31.6924720Z <a id="ingest.upload_router"></a>
2025-08-18T21:30:31.6924871Z 
2025-08-18T21:30:31.6924945Z # ingest.upload\_router
2025-08-18T21:30:31.6925062Z 
2025-08-18T21:30:31.6925139Z <a id="ingest.email_watcher"></a>
2025-08-18T21:30:31.6925286Z 
2025-08-18T21:30:31.6925358Z # ingest.email\_watcher
2025-08-18T21:30:31.6925472Z 
2025-08-18T21:30:31.6925566Z <a id="ingest.email_watcher.main"></a>
2025-08-18T21:30:31.6925732Z 
2025-08-18T21:30:31.6925793Z #### main
2025-08-18T21:30:31.6925880Z 
2025-08-18T21:30:31.6925948Z ```python
2025-08-18T21:30:31.6926110Z def main() -> dict[str, str]
2025-08-18T21:30:31.6926305Z ```
2025-08-18T21:30:31.6926387Z 
2025-08-18T21:30:31.6926524Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T21:30:31.6926761Z 
2025-08-18T21:30:31.6926894Z Returns {"status": "success"} when processing completes.
2025-08-18T21:30:31.6927105Z 
2025-08-18T21:30:31.6927178Z <a id="ingest.tasks"></a>
2025-08-18T21:30:31.6927303Z 
2025-08-18T21:30:31.6927373Z # ingest.tasks
2025-08-18T21:30:31.6927472Z 
2025-08-18T21:30:31.6927564Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T21:30:31.6927740Z 
2025-08-18T21:30:31.6927809Z #### task\_import\_file
2025-08-18T21:30:31.6927924Z 
2025-08-18T21:30:31.6927991Z ```python
2025-08-18T21:30:31.6928191Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T21:30:31.6928603Z def task_import_file(self: Any,
2025-08-18T21:30:31.6928818Z                      uri: str,
2025-08-18T21:30:31.6929044Z                      report_type: Optional[str] = None,
2025-08-18T21:30:31.6929313Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T21:30:31.6929550Z ```
2025-08-18T21:30:31.6929636Z 
2025-08-18T21:30:31.6929766Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T21:30:31.6929979Z 
2025-08-18T21:30:31.6930060Z <a id="ingest.celery_app"></a>
2025-08-18T21:30:31.6930201Z 
2025-08-18T21:30:31.6930280Z # ingest.celery\_app
2025-08-18T21:30:31.6930395Z 
2025-08-18T21:30:31.6930696Z <a id="ingest.ingest_router"></a>
2025-08-18T21:30:31.6930864Z 
2025-08-18T21:30:31.6930938Z # ingest.ingest\_router
2025-08-18T21:30:31.6931059Z 
2025-08-18T21:30:31.6931134Z <a id="logistics_etl"></a>
2025-08-18T21:30:31.6931268Z 
2025-08-18T21:30:31.6931332Z # logistics\_etl
2025-08-18T21:30:31.6931438Z 
2025-08-18T21:30:31.6931516Z Daily logistics ETL job.
2025-08-18T21:30:31.6931652Z 
2025-08-18T21:30:31.6931733Z <a id="logistics_etl.__main__"></a>
2025-08-18T21:30:31.6931893Z 
2025-08-18T21:30:31.6931968Z # logistics\_etl.\_\_main\_\_
2025-08-18T21:30:31.6932102Z 
2025-08-18T21:30:31.6932179Z <a id="logistics_etl.dsn"></a>
2025-08-18T21:30:31.6932320Z 
2025-08-18T21:30:31.6932390Z # logistics\_etl.dsn
2025-08-18T21:30:31.6932504Z 
2025-08-18T21:30:31.6932624Z Local DSN builder to avoid cross-service dependency.
2025-08-18T21:30:31.6932827Z 
2025-08-18T21:30:31.6932914Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T21:30:31.6933088Z 
2025-08-18T21:30:31.6933151Z #### build\_dsn
2025-08-18T21:30:31.6933251Z 
2025-08-18T21:30:31.6933311Z ```python
2025-08-18T21:30:31.6933493Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:30:31.6933710Z ```
2025-08-18T21:30:31.6933795Z 
2025-08-18T21:30:31.6933931Z Return a Postgres DSN assembled from environment variables.
2025-08-18T21:30:31.6934154Z 
2025-08-18T21:30:31.6934306Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T21:30:31.6934820Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T21:30:31.6935159Z error when any required variable is missing.
2025-08-18T21:30:31.6935331Z 
2025-08-18T21:30:31.6935421Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T21:30:31.6935591Z 
2025-08-18T21:30:31.6935671Z # logistics\_etl.tests.conftest
2025-08-18T21:30:31.6935814Z 
2025-08-18T21:30:31.6935920Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T21:30:31.6936102Z 
2025-08-18T21:30:31.6936189Z # logistics\_etl.tests.test\_repository
2025-08-18T21:30:31.6936356Z 
2025-08-18T21:30:31.6936443Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T21:30:31.6936608Z 
2025-08-18T21:30:31.6936689Z # logistics\_etl.tests.test\_cron
2025-08-18T21:30:31.6936843Z 
2025-08-18T21:30:31.6936938Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T21:30:31.6937110Z 
2025-08-18T21:30:31.6937198Z # logistics\_etl.tests.test\_imports
2025-08-18T21:30:31.6937358Z 
2025-08-18T21:30:31.6937452Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T21:30:31.6937627Z 
2025-08-18T21:30:31.6937708Z # logistics\_etl.tests.test\_smoke
2025-08-18T21:30:31.6937855Z 
2025-08-18T21:30:31.6937946Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T21:30:31.6938117Z 
2025-08-18T21:30:31.6938197Z # logistics\_etl.tests.test\_client
2025-08-18T21:30:31.6938345Z 
2025-08-18T21:30:31.6938430Z <a id="logistics_etl.tests"></a>
2025-08-18T21:30:31.6938574Z 
2025-08-18T21:30:31.6938644Z # logistics\_etl.tests
2025-08-18T21:30:31.6938766Z 
2025-08-18T21:30:31.6938845Z <a id="logistics_etl.flow"></a>
2025-08-18T21:30:31.6938981Z 
2025-08-18T21:30:31.6939051Z # logistics\_etl.flow
2025-08-18T21:30:31.6939176Z 
2025-08-18T21:30:31.6939256Z <a id="logistics_etl.client"></a>
2025-08-18T21:30:31.6939399Z 
2025-08-18T21:30:31.6939477Z # logistics\_etl.client
2025-08-18T21:30:31.6939597Z 
2025-08-18T21:30:31.6939672Z <a id="logistics_etl.cron"></a>
2025-08-18T21:30:31.6939807Z 
2025-08-18T21:30:31.6940004Z # logistics\_etl.cron
2025-08-18T21:30:31.6940121Z 
2025-08-18T21:30:31.6940199Z <a id="logistics_etl.db"></a>
2025-08-18T21:30:31.6940340Z 
2025-08-18T21:30:31.6979589Z # logistics\_etl.db
2025-08-18T21:30:31.6979858Z 
2025-08-18T21:30:31.6980048Z <a id="logistics_etl.repository"></a>
2025-08-18T21:30:31.6980600Z 
2025-08-18T21:30:31.6980786Z # logistics\_etl.repository
2025-08-18T21:30:31.6981086Z 
2025-08-18T21:30:31.6981232Z <a id="alert_bot"></a>
2025-08-18T21:30:31.6981482Z 
2025-08-18T21:30:31.6981612Z # alert\_bot
2025-08-18T21:30:31.6981826Z 
2025-08-18T21:30:31.6982011Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T21:30:31.6982368Z 
2025-08-18T21:30:31.6982543Z # alert\_bot.tests.test\_smoke
2025-08-18T21:30:31.6982841Z 
2025-08-18T21:30:31.6983012Z <a id="alert_bot.tests"></a>
2025-08-18T21:30:31.6983207Z 
2025-08-18T21:30:31.6983290Z # alert\_bot.tests
2025-08-18T21:30:31.6983429Z 
2025-08-18T21:30:31.6983533Z <a id="alert_bot.alert_bot"></a>
2025-08-18T21:30:31.6983724Z 
2025-08-18T21:30:31.6983801Z # alert\_bot.alert\_bot
2025-08-18T21:30:31.6983921Z 
2025-08-18T21:30:31.6984002Z <a id="alert_bot.rules"></a>
2025-08-18T21:30:31.6984134Z 
2025-08-18T21:30:31.6984199Z # alert\_bot.rules
2025-08-18T21:30:31.6984311Z 
2025-08-18T21:30:31.6984378Z <a id="common"></a>
2025-08-18T21:30:31.6984483Z 
2025-08-18T21:30:31.6984545Z # common
2025-08-18T21:30:31.6984639Z 
2025-08-18T21:30:31.6984710Z <a id="common.dsn"></a>
2025-08-18T21:30:31.6984826Z 
2025-08-18T21:30:31.6984897Z # common.dsn
2025-08-18T21:30:31.6984992Z 
2025-08-18T21:30:31.6985072Z <a id="common.dsn.build_dsn"></a>
2025-08-18T21:30:31.6985218Z 
2025-08-18T21:30:31.6985286Z #### build\_dsn
2025-08-18T21:30:31.6985385Z 
2025-08-18T21:30:31.6985448Z ```python
2025-08-18T21:30:31.6985694Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:30:31.6985917Z ```
2025-08-18T21:30:31.6986007Z 
2025-08-18T21:30:31.6986132Z Return a Postgres DSN, validating required variables.
2025-08-18T21:30:31.6986339Z 
2025-08-18T21:30:31.6986537Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T21:30:31.6987127Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T21:30:31.6987545Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T21:30:31.6987853Z missing.
2025-08-18T21:30:31.6987948Z 
2025-08-18T21:30:31.6988033Z <a id="common.models_vendor"></a>
2025-08-18T21:30:31.6988179Z 
2025-08-18T21:30:31.6988256Z # common.models\_vendor
2025-08-18T21:30:31.6988375Z 
2025-08-18T21:30:31.6988461Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T21:30:31.6988627Z 
2025-08-18T21:30:31.6988698Z ## Vendor Objects
2025-08-18T21:30:31.6988803Z 
2025-08-18T21:30:31.6988865Z ```python
2025-08-18T21:30:31.6989025Z class Vendor(Base)
2025-08-18T21:30:31.6989186Z ```
2025-08-18T21:30:31.6989275Z 
2025-08-18T21:30:31.6989351Z Vendor of inventory items.
2025-08-18T21:30:31.6989482Z 
2025-08-18T21:30:31.6989587Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T21:30:31.6989775Z 
2025-08-18T21:30:31.6989847Z ## VendorPrice Objects
2025-08-18T21:30:31.6989971Z 
2025-08-18T21:30:31.6990032Z ```python
2025-08-18T21:30:31.6990188Z class VendorPrice(Base)
2025-08-18T21:30:31.6990365Z ```
2025-08-18T21:30:31.6990643Z 
2025-08-18T21:30:31.6990785Z Association table linking vendors to pricing.
2025-08-18T21:30:31.6990976Z 
2025-08-18T21:30:31.6991049Z <a id="common.db_url"></a>
2025-08-18T21:30:31.6991176Z 
2025-08-18T21:30:31.6991248Z # common.db\_url
2025-08-18T21:30:31.6991355Z 
2025-08-18T21:30:31.6991437Z <a id="common.db_url.build_url"></a>
2025-08-18T21:30:31.6991597Z 
2025-08-18T21:30:31.6991662Z #### build\_url
2025-08-18T21:30:31.6991758Z 
2025-08-18T21:30:31.6991819Z ```python
2025-08-18T21:30:31.6991991Z def build_url(async_: bool = True) -> str
2025-08-18T21:30:31.6992211Z ```
2025-08-18T21:30:31.6992295Z 
2025-08-18T21:30:31.6992389Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:30:31.6992562Z 
2025-08-18T21:30:31.6992644Z <a id="common.keepa"></a>
2025-08-18T21:30:31.6992952Z 
2025-08-18T21:30:31.6993020Z # common.keepa
2025-08-18T21:30:31.6993126Z 
2025-08-18T21:30:31.6993206Z <a id="common.llm"></a>
2025-08-18T21:30:31.6993322Z 
2025-08-18T21:30:31.6993384Z # common.llm
2025-08-18T21:30:31.6993486Z 
2025-08-18T21:30:31.6993570Z <a id="common.settings"></a>
2025-08-18T21:30:31.6993705Z 
2025-08-18T21:30:31.6993780Z # common.settings
2025-08-18T21:30:31.6993883Z 
2025-08-18T21:30:31.6993953Z <a id="common.db"></a>
2025-08-18T21:30:31.6994075Z 
2025-08-18T21:30:31.6994137Z # common.db
2025-08-18T21:30:31.6994227Z 
2025-08-18T21:30:31.6994317Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T21:30:31.6994491Z 
2025-08-18T21:30:31.6994566Z #### build\_sqlalchemy\_url
2025-08-18T21:30:31.6994696Z 
2025-08-18T21:30:31.6994764Z ```python
2025-08-18T21:30:31.6994931Z def build_sqlalchemy_url() -> str
2025-08-18T21:30:31.6995139Z ```
2025-08-18T21:30:31.6995218Z 
2025-08-18T21:30:31.6995311Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:30:31.6995492Z 
2025-08-18T21:30:31.6995582Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T21:30:31.6995747Z 
2025-08-18T21:30:31.6995823Z #### build\_asyncpg\_dsn
2025-08-18T21:30:31.6995950Z 
2025-08-18T21:30:31.6996009Z ```python
2025-08-18T21:30:31.6996183Z def build_asyncpg_dsn() -> str
2025-08-18T21:30:31.6996375Z ```
2025-08-18T21:30:31.6996452Z 
2025-08-18T21:30:31.6996588Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:30:31.6996796Z 
2025-08-18T21:30:31.6996879Z <a id="common.db.refresh_mvs"></a>
2025-08-18T21:30:31.6997034Z 
2025-08-18T21:30:31.6997098Z #### refresh\_mvs
2025-08-18T21:30:31.6997202Z 
2025-08-18T21:30:31.6997263Z ```python
2025-08-18T21:30:31.6997460Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:30:31.6997708Z ```
2025-08-18T21:30:31.6997786Z 
2025-08-18T21:30:31.6997920Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:30:31.6998132Z 
2025-08-18T21:30:31.6998213Z <a id="common.config"></a>
2025-08-18T21:30:31.6998349Z 
2025-08-18T21:30:31.6998529Z # common.config
2025-08-18T21:30:31.6998637Z 
2025-08-18T21:30:31.6998709Z <a id="common.base"></a>
2025-08-18T21:30:31.6998828Z 
2025-08-18T21:30:31.6998896Z # common.base
2025-08-18T21:30:31.6998992Z 
2025-08-18T21:30:31.6999069Z <a id="common.base.Base"></a>
2025-08-18T21:30:31.6999205Z 
2025-08-18T21:30:31.6999274Z ## Base Objects
2025-08-18T21:30:31.6999371Z 
2025-08-18T21:30:31.6999430Z ```python
2025-08-18T21:30:31.6999597Z class Base(DeclarativeBase)
2025-08-18T21:30:31.6999787Z ```
2025-08-18T21:30:31.6999873Z 
2025-08-18T21:30:31.6999954Z Base class for SQLAlchemy models.
2025-08-18T21:30:31.7000103Z 
2025-08-18T21:30:31.7000178Z <a id="repricer"></a>
2025-08-18T21:30:31.7000296Z 
2025-08-18T21:30:31.7000357Z # repricer
2025-08-18T21:30:31.7000559Z 
2025-08-18T21:30:31.7000651Z <a id="repricer.app.schemas"></a>
2025-08-18T21:30:31.7000799Z 
2025-08-18T21:30:31.7000875Z # repricer.app.schemas
2025-08-18T21:30:31.7001001Z 
2025-08-18T21:30:31.7001086Z <a id="repricer.app.deps"></a>
2025-08-18T21:30:31.7001231Z 
2025-08-18T21:30:31.7001304Z # repricer.app.deps
2025-08-18T21:30:31.7001419Z 
2025-08-18T21:30:31.7001535Z Placeholder module for Keepa / SP-API clients.
2025-08-18T21:30:31.7001715Z 
2025-08-18T21:30:31.7001801Z <a id="repricer.app.logic"></a>
2025-08-18T21:30:31.7001946Z 
2025-08-18T21:30:31.7002018Z # repricer.app.logic
2025-08-18T21:30:31.7002138Z 
2025-08-18T21:30:31.7002233Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T21:30:31.7002404Z 
2025-08-18T21:30:31.7002466Z #### MIN\_MARGIN
2025-08-18T21:30:31.7002571Z 
2025-08-18T21:30:31.7002631Z 15 % ROI
2025-08-18T21:30:31.7002716Z 
2025-08-18T21:30:31.7002821Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T21:30:31.7002998Z 
2025-08-18T21:30:31.7003064Z #### compute\_price
2025-08-18T21:30:31.7003180Z 
2025-08-18T21:30:31.7003241Z ```python
2025-08-18T21:30:31.7003486Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T21:30:31.7003798Z ```
2025-08-18T21:30:31.7003998Z 
2025-08-18T21:30:31.7004116Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T21:30:31.7004389Z Replace with real competitive logic later.
2025-08-18T21:30:31.7004562Z 
2025-08-18T21:30:31.7004649Z <a id="repricer.app.main"></a>
2025-08-18T21:30:31.7004790Z 
2025-08-18T21:30:31.7004861Z # repricer.app.main
2025-08-18T21:30:31.7004977Z 
2025-08-18T21:30:31.7005052Z <a id="repricer.app"></a>
2025-08-18T21:30:31.7005179Z 
2025-08-18T21:30:31.7005245Z # repricer.app
2025-08-18T21:30:31.7005351Z 
2025-08-18T21:30:31.7005441Z <a id="repricer.tests.test_imports"></a>
2025-08-18T21:30:31.7005608Z 
2025-08-18T21:30:31.7005693Z # repricer.tests.test\_imports
2025-08-18T21:30:31.7005829Z 
2025-08-18T21:30:31.7005914Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T21:30:31.7006081Z 
2025-08-18T21:30:31.7006162Z # repricer.tests.test\_smoke
2025-08-18T21:30:31.7006298Z 
2025-08-18T21:30:31.7006373Z <a id="repricer.tests"></a>
2025-08-18T21:30:31.7006507Z 
2025-08-18T21:30:31.7006581Z # repricer.tests
2025-08-18T21:30:31.7006690Z 
2025-08-18T21:30:31.7006758Z <a id="db"></a>
2025-08-18T21:30:31.7006857Z 
2025-08-18T21:30:31.7006913Z # db
2025-08-18T21:30:31.7006994Z 
2025-08-18T21:30:31.7007074Z <a id="db.utils.views"></a>
2025-08-18T21:30:31.7007200Z 
2025-08-18T21:30:31.7007266Z # db.utils.views
2025-08-18T21:30:31.7007372Z 
2025-08-18T21:30:31.7007462Z <a id="db.utils.views.replace_view"></a>
2025-08-18T21:30:31.7007627Z 
2025-08-18T21:30:31.7007701Z #### replace\_view
2025-08-18T21:30:31.7007804Z 
2025-08-18T21:30:31.7007865Z ```python
2025-08-18T21:30:31.7008057Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T21:30:31.7008297Z ```
2025-08-18T21:30:31.7008382Z 
2025-08-18T21:30:31.7008469Z Drop and recreate a SQL view atomically.
2025-08-18T21:30:31.7008630Z 
2025-08-18T21:30:31.7008698Z <a id="db.utils"></a>
2025-08-18T21:30:31.7008817Z 
2025-08-18T21:30:31.7008877Z # db.utils
2025-08-18T21:30:31.7008965Z 
2025-08-18T21:30:31.7009044Z <a id="price_importer"></a>
2025-08-18T21:30:31.7009178Z 
2025-08-18T21:30:31.7009363Z # price\_importer
2025-08-18T21:30:31.7009468Z 
2025-08-18T21:30:31.7009576Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T21:30:31.7009756Z 
2025-08-18T21:30:31.7009843Z # price\_importer.services\_common.dsn
2025-08-18T21:30:31.7010009Z 
2025-08-18T21:30:31.7010131Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T21:30:31.7010337Z 
2025-08-18T21:30:31.7010502Z #### build\_dsn
2025-08-18T21:30:31.7010604Z 
2025-08-18T21:30:31.7010665Z ```python
2025-08-18T21:30:31.7010840Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:30:31.7011059Z ```
2025-08-18T21:30:31.7011148Z 
2025-08-18T21:30:31.7011214Z Return safe DSN.
2025-08-18T21:30:31.7011314Z 
2025-08-18T21:30:31.7011655Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T21:30:31.7011864Z 
2025-08-18T21:30:31.7011986Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T21:30:31.7012189Z 
2025-08-18T21:30:31.7012304Z # price\_importer.services\_common.models\_vendor
2025-08-18T21:30:31.7012506Z 
2025-08-18T21:30:31.7012612Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T21:30:31.7012804Z 
2025-08-18T21:30:31.7012897Z # price\_importer.services\_common.db\_url
2025-08-18T21:30:31.7013069Z 
2025-08-18T21:30:31.7013199Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T21:30:31.7013419Z 
2025-08-18T21:30:31.7013484Z #### build\_url
2025-08-18T21:30:31.7013584Z 
2025-08-18T21:30:31.7013652Z ```python
2025-08-18T21:30:31.7013823Z def build_url(async_: bool = True) -> str
2025-08-18T21:30:31.7014053Z ```
2025-08-18T21:30:31.7014134Z 
2025-08-18T21:30:31.7014229Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:30:31.7014408Z 
2025-08-18T21:30:31.7014510Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T21:30:31.7014696Z 
2025-08-18T21:30:31.7014792Z # price\_importer.services\_common.keepa
2025-08-18T21:30:31.7014960Z 
2025-08-18T21:30:31.7015059Z <a id="price_importer.services_common.llm"></a>
2025-08-18T21:30:31.7015372Z 
2025-08-18T21:30:31.7015471Z # price\_importer.services\_common.llm
2025-08-18T21:30:31.7015635Z 
2025-08-18T21:30:31.7015752Z <a id="price_importer.services_common.settings"></a>
2025-08-18T21:30:31.7015985Z 
2025-08-18T21:30:31.7016078Z # price\_importer.services\_common.settings
2025-08-18T21:30:31.7016253Z 
2025-08-18T21:30:31.7016357Z <a id="price_importer.services_common.db"></a>
2025-08-18T21:30:31.7016532Z 
2025-08-18T21:30:31.7016619Z # price\_importer.services\_common.db
2025-08-18T21:30:31.7016779Z 
2025-08-18T21:30:31.7016943Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T21:30:31.7017180Z 
2025-08-18T21:30:31.7017256Z #### build\_sqlalchemy\_url
2025-08-18T21:30:31.7017395Z 
2025-08-18T21:30:31.7017457Z ```python
2025-08-18T21:30:31.7017630Z def build_sqlalchemy_url() -> str
2025-08-18T21:30:31.7017845Z ```
2025-08-18T21:30:31.7017926Z 
2025-08-18T21:30:31.7018031Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:30:31.7018206Z 
2025-08-18T21:30:31.7018353Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T21:30:31.7018586Z 
2025-08-18T21:30:31.7018658Z #### build\_asyncpg\_dsn
2025-08-18T21:30:31.7018781Z 
2025-08-18T21:30:31.7018841Z ```python
2025-08-18T21:30:31.7019013Z def build_asyncpg_dsn() -> str
2025-08-18T21:30:31.7019212Z ```
2025-08-18T21:30:31.7019290Z 
2025-08-18T21:30:31.7019414Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:30:31.7019622Z 
2025-08-18T21:30:31.7019750Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T21:30:31.7019954Z 
2025-08-18T21:30:31.7020018Z #### refresh\_mvs
2025-08-18T21:30:31.7020126Z 
2025-08-18T21:30:31.7020186Z ```python
2025-08-18T21:30:31.7020374Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:30:31.7020724Z ```
2025-08-18T21:30:31.7020802Z 
2025-08-18T21:30:31.7020938Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:30:31.7021152Z 
2025-08-18T21:30:31.7021250Z <a id="price_importer.services_common"></a>
2025-08-18T21:30:31.7021554Z 
2025-08-18T21:30:31.7021640Z # price\_importer.services\_common
2025-08-18T21:30:31.7021795Z 
2025-08-18T21:30:31.7021895Z <a id="price_importer.services_common.base"></a>
2025-08-18T21:30:31.7022083Z 
2025-08-18T21:30:31.7022171Z # price\_importer.services\_common.base
2025-08-18T21:30:31.7022334Z 
2025-08-18T21:30:31.7022428Z <a id="price_importer.normaliser"></a>
2025-08-18T21:30:31.7022590Z 
2025-08-18T21:30:31.7022669Z # price\_importer.normaliser
2025-08-18T21:30:31.7022813Z 
2025-08-18T21:30:31.7022915Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T21:30:31.7023095Z 
2025-08-18T21:30:31.7023183Z # price\_importer.common.models\_vendor
2025-08-18T21:30:31.7023352Z 
2025-08-18T21:30:31.7023440Z <a id="price_importer.common.db_url"></a>
2025-08-18T21:30:31.7023608Z 
2025-08-18T21:30:31.7023697Z # price\_importer.common.db\_url
2025-08-18T21:30:31.7023844Z 
2025-08-18T21:30:31.7023947Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T21:30:31.7024157Z 
2025-08-18T21:30:31.7024218Z #### make\_dsn
2025-08-18T21:30:31.7024319Z 
2025-08-18T21:30:31.7024379Z ```python
2025-08-18T21:30:31.7024559Z def make_dsn(async_: bool = False) -> str
2025-08-18T21:30:31.7024777Z ```
2025-08-18T21:30:31.7024863Z 
2025-08-18T21:30:31.7024981Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T21:30:31.7025180Z 
2025-08-18T21:30:31.7025294Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T21:30:31.7025481Z 
2025-08-18T21:30:31.7025548Z #### build\_url
2025-08-18T21:30:31.7025652Z 
2025-08-18T21:30:31.7025714Z ```python
2025-08-18T21:30:31.7025883Z def build_url(async_: bool = False) -> str
2025-08-18T21:30:31.7026113Z ```
2025-08-18T21:30:31.7026193Z 
2025-08-18T21:30:31.7026320Z Return Postgres DSN built from environment variables.
2025-08-18T21:30:31.7026517Z 
2025-08-18T21:30:31.7026600Z <a id="price_importer.common"></a>
2025-08-18T21:30:31.7026751Z 
2025-08-18T21:30:31.7026833Z # price\_importer.common
2025-08-18T21:30:31.7027076Z 
2025-08-18T21:30:31.7027169Z <a id="price_importer.common.base"></a>
2025-08-18T21:30:31.7027339Z 
2025-08-18T21:30:31.7027420Z # price\_importer.common.base
2025-08-18T21:30:31.7027559Z 
2025-08-18T21:30:31.7027659Z <a id="price_importer.tests.conftest"></a>
2025-08-18T21:30:31.7027830Z 
2025-08-18T21:30:31.7027915Z # price\_importer.tests.conftest
2025-08-18T21:30:31.7028087Z 
2025-08-18T21:30:31.7028194Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T21:30:31.7028371Z 
2025-08-18T21:30:31.7028459Z # price\_importer.tests.test\_reader
2025-08-18T21:30:31.7028623Z 
2025-08-18T21:30:31.7028722Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T21:30:31.7028898Z 
2025-08-18T21:30:31.7028991Z # price\_importer.tests.test\_imports
2025-08-18T21:30:31.7029148Z 
2025-08-18T21:30:31.7029242Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T21:30:31.7029410Z 
2025-08-18T21:30:31.7029500Z # price\_importer.tests.test\_smoke
2025-08-18T21:30:31.7029656Z 
2025-08-18T21:30:31.7029772Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T21:30:31.7029967Z 
2025-08-18T21:30:31.7030058Z # price\_importer.tests.test\_normaliser
2025-08-18T21:30:31.7030223Z 
2025-08-18T21:30:31.7030312Z <a id="price_importer.tests"></a>
2025-08-18T21:30:31.7030660Z 
2025-08-18T21:30:31.7030757Z # price\_importer.tests
2025-08-18T21:30:31.7030885Z 
2025-08-18T21:30:31.7030974Z <a id="price_importer.reader"></a>
2025-08-18T21:30:31.7031124Z 
2025-08-18T21:30:31.7031199Z # price\_importer.reader
2025-08-18T21:30:31.7031328Z 
2025-08-18T21:30:31.7031414Z <a id="price_importer.repository"></a>
2025-08-18T21:30:31.7031575Z 
2025-08-18T21:30:31.7031657Z # price\_importer.repository
2025-08-18T21:30:31.7031794Z 
2025-08-18T21:30:31.7031874Z <a id="price_importer.import"></a>
2025-08-18T21:30:31.7032019Z 
2025-08-18T21:30:31.7032099Z # price\_importer.import
2025-08-18T21:30:31.7032223Z 
2025-08-18T21:30:31.7032290Z <a id="fees_h10"></a>
2025-08-18T21:30:31.7032407Z 
2025-08-18T21:30:31.7032474Z # fees\_h10
2025-08-18T21:30:31.7032693Z 
2025-08-18T21:30:31.7032767Z <a id="fees_h10.worker"></a>
2025-08-18T21:30:31.7032903Z 
2025-08-18T21:30:31.7032968Z # fees\_h10.worker
2025-08-18T21:30:31.7033071Z 
2025-08-18T21:30:31.7033171Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T21:30:31.7033339Z 
2025-08-18T21:30:31.7033409Z #### list\_active\_asins
2025-08-18T21:30:31.7033532Z 
2025-08-18T21:30:31.7033592Z ```python
2025-08-18T21:30:31.7033760Z def list_active_asins() -> list[str]
2025-08-18T21:30:31.7033971Z ```
2025-08-18T21:30:31.7034049Z 
2025-08-18T21:30:31.7034164Z Return known ASINs or an empty list if unavailable.
2025-08-18T21:30:31.7034357Z 
2025-08-18T21:30:31.7034438Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T21:30:31.7034594Z 
2025-08-18T21:30:31.7034676Z # fees\_h10.tests.test\_smoke
2025-08-18T21:30:31.7034811Z 
2025-08-18T21:30:31.7034887Z <a id="fees_h10.tests"></a>
2025-08-18T21:30:31.7035021Z 
2025-08-18T21:30:31.7035087Z # fees\_h10.tests
2025-08-18T21:30:31.7035195Z 
2025-08-18T21:30:31.7035278Z <a id="fees_h10.client"></a>
2025-08-18T21:30:31.7035409Z 
2025-08-18T21:30:31.7035472Z # fees\_h10.client
2025-08-18T21:30:31.7035580Z 
2025-08-18T21:30:31.7035667Z <a id="fees_h10.repository"></a>
2025-08-18T21:30:31.7035808Z 
2025-08-18T21:30:31.7035878Z # fees\_h10.repository
2025-08-18T21:30:31.7036000Z 
2025-08-18T21:30:31.7036070Z <a id="emailer"></a>
2025-08-18T21:30:31.7036179Z 
2025-08-18T21:30:31.7036239Z # emailer
2025-08-18T21:30:31.7036334Z 
2025-08-18T21:30:31.7036433Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T21:30:31.7036609Z 
2025-08-18T21:30:31.7036703Z # emailer.tests.test\_import\_emailer
2025-08-18T21:30:31.7036861Z 
2025-08-18T21:30:31.7036944Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T21:30:31.7037106Z 
2025-08-18T21:30:31.7037185Z # emailer.tests.test\_smoke
2025-08-18T21:30:31.7037317Z 
2025-08-18T21:30:31.7037396Z <a id="emailer.tests"></a>
2025-08-18T21:30:31.7037532Z 
2025-08-18T21:30:31.7037598Z # emailer.tests
2025-08-18T21:30:31.7037819Z 
2025-08-18T21:30:31.7037915Z <a id="emailer.generate_body"></a>
2025-08-18T21:30:31.7038065Z 
2025-08-18T21:30:31.7038139Z # emailer.generate\_body
2025-08-18T21:30:31.7038268Z 
2025-08-18T21:30:31.7038339Z <a id="llm_server"></a>
2025-08-18T21:30:31.7038455Z 
2025-08-18T21:30:31.7038516Z # llm\_server
2025-08-18T21:30:31.7038618Z 
2025-08-18T21:30:31.7038694Z <a id="llm_server.app"></a>
2025-08-18T21:30:31.7038822Z 
2025-08-18T21:30:31.7059032Z # llm\_server.app
2025-08-18T21:30:31.7059286Z 
