2025-08-18T08:30:29.0847195Z ##[group]Run pydoc-markdown
2025-08-18T08:30:29.0847514Z [36;1mpydoc-markdown[0m
2025-08-18T08:30:29.0887510Z shell: /usr/bin/bash -e {0}
2025-08-18T08:30:29.0887739Z env:
2025-08-18T08:30:29.0887972Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:30:29.0888379Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T08:30:29.0888756Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:30:29.0889092Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:30:29.0889468Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:30:29.0889821Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T08:30:29.0890110Z ##[endgroup]
2025-08-18T08:30:29.5300447Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T08:30:29.5301063Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T08:30:29.5301377Z In "pydoc-markdown.yml"
2025-08-18T08:30:29.5301637Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T08:30:29.5302532Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T08:30:29.5303309Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T08:30:29.5303821Z 
2025-08-18T08:30:29.8215498Z <a id="__init__"></a>
2025-08-18T08:30:29.8215908Z 
2025-08-18T08:30:29.8216032Z # \_\_init\_\_
2025-08-18T08:30:29.8216224Z 
2025-08-18T08:30:29.8216348Z <a id="api"></a>
2025-08-18T08:30:29.8216556Z 
2025-08-18T08:30:29.8216674Z # api
2025-08-18T08:30:29.8216837Z 
2025-08-18T08:30:29.8216988Z <a id="api.errors"></a>
2025-08-18T08:30:29.8217230Z 
2025-08-18T08:30:29.8217355Z # api.errors
2025-08-18T08:30:29.8217542Z 
2025-08-18T08:30:29.8217725Z <a id="api.tests.test_errors_json"></a>
2025-08-18T08:30:29.8218052Z 
2025-08-18T08:30:29.8218210Z # api.tests.test\_errors\_json
2025-08-18T08:30:29.8218493Z 
2025-08-18T08:30:29.8218641Z <a id="api.tests.test_llm"></a>
2025-08-18T08:30:29.8218914Z 
2025-08-18T08:30:29.8219054Z # api.tests.test\_llm
2025-08-18T08:30:29.8219343Z 
2025-08-18T08:30:29.8219509Z <a id="api.tests.test_imports"></a>
2025-08-18T08:30:29.8219811Z 
2025-08-18T08:30:29.8219964Z # api.tests.test\_imports
2025-08-18T08:30:29.8220208Z 
2025-08-18T08:30:29.8220372Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T08:30:29.8220683Z 
2025-08-18T08:30:29.8220834Z # api.tests.test\_entrypoint
2025-08-18T08:30:29.8221093Z 
2025-08-18T08:30:29.8221253Z <a id="api.tests.test_health"></a>
2025-08-18T08:30:29.8221549Z 
2025-08-18T08:30:29.8221693Z # api.tests.test\_health
2025-08-18T08:30:29.8222359Z 
2025-08-18T08:30:29.8222537Z <a id="api.logging_config"></a>
2025-08-18T08:30:29.8222811Z 
2025-08-18T08:30:29.8222943Z # api.logging\_config
2025-08-18T08:30:29.8223186Z 
2025-08-18T08:30:29.8223339Z <a id="api.migrations.env"></a>
2025-08-18T08:30:29.8223607Z 
2025-08-18T08:30:29.8223741Z # api.migrations.env
2025-08-18T08:30:29.8223968Z 
2025-08-18T08:30:29.8224190Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T08:30:29.8225014Z 
2025-08-18T08:30:29.8225232Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T08:30:29.8225589Z 
2025-08-18T08:30:29.8225801Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T08:30:29.8226179Z 
2025-08-18T08:30:29.8226355Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T08:30:29.8226681Z 
2025-08-18T08:30:29.8226971Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T08:30:29.8227427Z 
2025-08-18T08:30:29.8227691Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T08:30:29.8228102Z 
2025-08-18T08:30:29.8228344Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T08:30:29.8228737Z 
2025-08-18T08:30:29.8228937Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T08:30:29.8229292Z 
2025-08-18T08:30:29.8229512Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T08:30:29.8229883Z 
2025-08-18T08:30:29.8230083Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T08:30:29.8230424Z 
2025-08-18T08:30:29.8231021Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T08:30:29.8231416Z 
2025-08-18T08:30:29.8231629Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T08:30:29.8232193Z 
2025-08-18T08:30:29.8232429Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T08:30:29.8232817Z 
2025-08-18T08:30:29.8233011Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T08:30:29.8233362Z 
2025-08-18T08:30:29.8233604Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T08:30:29.8233988Z 
2025-08-18T08:30:29.8234183Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T08:30:29.8234541Z 
2025-08-18T08:30:29.8234809Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T08:30:29.8235236Z 
2025-08-18T08:30:29.8235477Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T08:30:29.8235881Z 
2025-08-18T08:30:29.8236120Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T08:30:29.8236513Z 
2025-08-18T08:30:29.8236765Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T08:30:29.8237129Z 
2025-08-18T08:30:29.8237387Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T08:30:29.8237799Z 
2025-08-18T08:30:29.8238018Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T08:30:29.8238385Z 
2025-08-18T08:30:29.8238587Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T08:30:29.8238956Z 
2025-08-18T08:30:29.8239130Z # api.migrations.versions.0001\_baseline
2025-08-18T08:30:29.8239455Z 
2025-08-18T08:30:29.8239627Z <a id="api.migrations.versions"></a>
2025-08-18T08:30:29.8239929Z 
2025-08-18T08:30:29.8240080Z # api.migrations.versions
2025-08-18T08:30:29.8240333Z 
2025-08-18T08:30:29.8240478Z <a id="api.migrations"></a>
2025-08-18T08:30:29.8240730Z 
2025-08-18T08:30:29.8240860Z # api.migrations
2025-08-18T08:30:29.8241071Z 
2025-08-18T08:30:29.8241199Z <a id="api.db"></a>
2025-08-18T08:30:29.8241402Z 
2025-08-18T08:30:29.8241524Z # api.db
2025-08-18T08:30:29.8241702Z 
2025-08-18T08:30:29.8241860Z <a id="api.routes.stats"></a>
2025-08-18T08:30:29.8242306Z 
2025-08-18T08:30:29.8242441Z # api.routes.stats
2025-08-18T08:30:29.8242644Z 
2025-08-18T08:30:29.8242805Z <a id="api.routes.stats.kpi"></a>
2025-08-18T08:30:29.8243102Z 
2025-08-18T08:30:29.8243218Z #### kpi
2025-08-18T08:30:29.8243382Z 
2025-08-18T08:30:29.8243508Z ```python
2025-08-18T08:30:29.8243812Z @router.get("/stats/kpi")
2025-08-18T08:30:29.8244247Z def kpi() -> List[Dict[str, int]]
2025-08-18T08:30:29.8244632Z ```
2025-08-18T08:30:29.8244787Z 
2025-08-18T08:30:29.8244945Z Return KPI metrics (mock).
2025-08-18T08:30:29.8245193Z 
2025-08-18T08:30:29.8245378Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T08:30:29.8245723Z 
2025-08-18T08:30:29.8245850Z #### roi\_by\_vendor
2025-08-18T08:30:29.8246058Z 
2025-08-18T08:30:29.8246181Z ```python
2025-08-18T08:30:29.8246495Z @router.get("/stats/roi_by_vendor")
2025-08-18T08:30:29.8246969Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T08:30:29.8247407Z ```
2025-08-18T08:30:29.8247833Z 
2025-08-18T08:30:29.8247992Z Return ROI percent by vendor.
2025-08-18T08:30:29.8248453Z 
2025-08-18T08:30:29.8248632Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T08:30:29.8248995Z 
2025-08-18T08:30:29.8249136Z #### roi\_trend
2025-08-18T08:30:29.8249336Z 
2025-08-18T08:30:29.8249455Z ```python
2025-08-18T08:30:29.8249761Z @router.get("/stats/roi_trend")
2025-08-18T08:30:29.8250215Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T08:30:29.8250653Z ```
2025-08-18T08:30:29.8250816Z 
2025-08-18T08:30:29.8250952Z Return 30-day ROI trend.
2025-08-18T08:30:29.8251186Z 
2025-08-18T08:30:29.8251342Z <a id="api.routes.roi"></a>
2025-08-18T08:30:29.8251593Z 
2025-08-18T08:30:29.8251721Z # api.routes.roi
2025-08-18T08:30:29.8252184Z 
2025-08-18T08:30:29.8252347Z <a id="api.routes.health"></a>
2025-08-18T08:30:29.8252623Z 
2025-08-18T08:30:29.8252754Z # api.routes.health
2025-08-18T08:30:29.8252972Z 
2025-08-18T08:30:29.8253140Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T08:30:29.8253720Z 
2025-08-18T08:30:29.8253848Z #### MAX\_SKEW
2025-08-18T08:30:29.8254035Z 
2025-08-18T08:30:29.8254150Z seconds
2025-08-18T08:30:29.8254335Z 
2025-08-18T08:30:29.8254504Z <a id="api.routes.health.health"></a>
2025-08-18T08:30:29.8254815Z 
2025-08-18T08:30:29.8254930Z #### health
2025-08-18T08:30:29.8255105Z 
2025-08-18T08:30:29.8255221Z ```python
2025-08-18T08:30:29.8255590Z @router.get("/health", include_in_schema=False)
2025-08-18T08:30:29.8256306Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T08:30:29.8256957Z ```
2025-08-18T08:30:29.8257109Z 
2025-08-18T08:30:29.8257318Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T08:30:29.8257680Z 
2025-08-18T08:30:29.8257832Z <a id="api.routes.repository"></a>
2025-08-18T08:30:29.8258125Z 
2025-08-18T08:30:29.8258271Z # api.routes.repository
2025-08-18T08:30:29.8258516Z 
2025-08-18T08:30:29.8258654Z <a id="api.routes"></a>
2025-08-18T08:30:29.8258876Z 
2025-08-18T08:30:29.8259017Z # api.routes
2025-08-18T08:30:29.8259210Z 
2025-08-18T08:30:29.8259354Z <a id="api.models.fee"></a>
2025-08-18T08:30:29.8259613Z 
2025-08-18T08:30:29.8259738Z # api.models.fee
2025-08-18T08:30:29.8259935Z 
2025-08-18T08:30:29.8260069Z <a id="api.models"></a>
2025-08-18T08:30:29.8260304Z 
2025-08-18T08:30:29.8260425Z # api.models
2025-08-18T08:30:29.8260604Z 
2025-08-18T08:30:29.8260762Z <a id="api.roi_repository"></a>
2025-08-18T08:30:29.8261035Z 
2025-08-18T08:30:29.8261171Z # api.roi\_repository
2025-08-18T08:30:29.8261393Z 
2025-08-18T08:30:29.8261531Z <a id="api.main"></a>
2025-08-18T08:30:29.8261743Z 
2025-08-18T08:30:29.8261860Z # api.main
2025-08-18T08:30:29.8262233Z 
2025-08-18T08:30:29.8262384Z <a id="api.main.ready"></a>
2025-08-18T08:30:29.8262639Z 
2025-08-18T08:30:29.8262756Z #### ready
2025-08-18T08:30:29.8262931Z 
2025-08-18T08:30:29.8263051Z ```python
2025-08-18T08:30:29.8263551Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T08:30:29.8264370Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T08:30:29.8265071Z                                                                       str]
2025-08-18T08:30:29.8265507Z ```
2025-08-18T08:30:29.8265674Z 
2025-08-18T08:30:29.8265861Z Return 200 only when migrations are at head.
2025-08-18T08:30:29.8266196Z 
2025-08-18T08:30:29.8266343Z <a id="api.config"></a>
2025-08-18T08:30:29.8266571Z 
2025-08-18T08:30:29.8266692Z # api.config
2025-08-18T08:30:29.8266875Z 
2025-08-18T08:30:29.8267007Z <a id="etl"></a>
2025-08-18T08:30:29.8267205Z 
2025-08-18T08:30:29.8267312Z # etl
2025-08-18T08:30:29.8267480Z 
2025-08-18T08:30:29.8267633Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T08:30:29.8267912Z 
2025-08-18T08:30:29.8268047Z # etl.fba\_fee\_ingestor
2025-08-18T08:30:29.8268288Z 
2025-08-18T08:30:29.8268440Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T08:30:29.8268717Z 
2025-08-18T08:30:29.8268866Z # etl.sp\_fees\_ingestor
2025-08-18T08:30:29.8269094Z 
2025-08-18T08:30:29.8269240Z <a id="etl.keepa_ingestor"></a>
2025-08-18T08:30:29.8269761Z 
2025-08-18T08:30:29.8269894Z # etl.keepa\_ingestor
2025-08-18T08:30:29.8270113Z 
2025-08-18T08:30:29.8270244Z <a id="etl.db"></a>
2025-08-18T08:30:29.8270455Z 
2025-08-18T08:30:29.8270571Z # etl.db
2025-08-18T08:30:29.8270740Z 
2025-08-18T08:30:29.8270900Z <a id="etl.dialects.schemas"></a>
2025-08-18T08:30:29.8271186Z 
2025-08-18T08:30:29.8271325Z # etl.dialects.schemas
2025-08-18T08:30:29.8271551Z 
2025-08-18T08:30:29.8271755Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T08:30:29.8272281Z 
2025-08-18T08:30:29.8272455Z # etl.dialects.amazon\_reimbursements
2025-08-18T08:30:29.8272771Z 
2025-08-18T08:30:29.8272955Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T08:30:29.8273284Z 
2025-08-18T08:30:29.8273451Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T08:30:29.8273747Z 
2025-08-18T08:30:29.8273913Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T08:30:29.8274229Z 
2025-08-18T08:30:29.8274387Z # etl.dialects.amazon\_returns
2025-08-18T08:30:29.8274876Z 
2025-08-18T08:30:29.8275065Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T08:30:29.8275408Z 
2025-08-18T08:30:29.8275569Z # etl.dialects.amazon\_fee\_preview
2025-08-18T08:30:29.8275865Z 
2025-08-18T08:30:29.8276074Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T08:30:29.8276430Z 
2025-08-18T08:30:29.8276600Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T08:30:29.8276922Z 
2025-08-18T08:30:29.8277118Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T08:30:29.8277452Z 
2025-08-18T08:30:29.8277612Z # etl.dialects.amazon\_settlements
2025-08-18T08:30:29.8277909Z 
2025-08-18T08:30:29.8278050Z <a id="etl.dialects"></a>
2025-08-18T08:30:29.8278297Z 
2025-08-18T08:30:29.8278418Z # etl.dialects
2025-08-18T08:30:29.8278602Z 
2025-08-18T08:30:29.8278734Z <a id="ingest"></a>
2025-08-18T08:30:29.8278935Z 
2025-08-18T08:30:29.8279054Z # ingest
2025-08-18T08:30:29.8279219Z 
2025-08-18T08:30:29.8279381Z <a id="ingest.maintenance"></a>
2025-08-18T08:30:29.8279672Z 
2025-08-18T08:30:29.8279806Z # ingest.maintenance
2025-08-18T08:30:29.8280031Z 
2025-08-18T08:30:29.8280177Z <a id="ingest.copy_loader"></a>
2025-08-18T08:30:29.8280444Z 
2025-08-18T08:30:29.8280578Z # ingest.copy\_loader
2025-08-18T08:30:29.8280804Z 
2025-08-18T08:30:29.8280994Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T08:30:29.8281399Z 
2025-08-18T08:30:29.8281548Z #### copy\_df\_via\_temp
2025-08-18T08:30:29.8281777Z 
2025-08-18T08:30:29.8281896Z ```python
2025-08-18T08:30:29.8282385Z def copy_df_via_temp(engine: Engine,
2025-08-18T08:30:29.8282824Z                      df: pd.DataFrame,
2025-08-18T08:30:29.8283261Z                      target_table: str,
2025-08-18T08:30:29.8283671Z                      *,
2025-08-18T08:30:29.8284062Z                      target_schema: Optional[str] = None,
2025-08-18T08:30:29.8284553Z                      columns: Sequence[str],
2025-08-18T08:30:29.8285059Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T08:30:29.8285603Z                      analyze_after: bool = False,
2025-08-18T08:30:29.8286098Z                      connection: Any | None = None) -> int
2025-08-18T08:30:29.8286544Z ```
2025-08-18T08:30:29.8286701Z 
2025-08-18T08:30:29.8286995Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T08:30:29.8287440Z 
2025-08-18T08:30:29.8287607Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T08:30:29.8287915Z 
2025-08-18T08:30:29.8288073Z # ingest.tests.test\_smoke
2025-08-18T08:30:29.8288329Z 
2025-08-18T08:30:29.8288470Z <a id="ingest.tests"></a>
2025-08-18T08:30:29.8288721Z 
2025-08-18T08:30:29.8288846Z # ingest.tests
2025-08-18T08:30:29.8289040Z 
2025-08-18T08:30:29.8289196Z <a id="ingest.upload_router"></a>
2025-08-18T08:30:29.8289487Z 
2025-08-18T08:30:29.8289629Z # ingest.upload\_router
2025-08-18T08:30:29.8289862Z 
2025-08-18T08:30:29.8290019Z <a id="ingest.email_watcher"></a>
2025-08-18T08:30:29.8290302Z 
2025-08-18T08:30:29.8290441Z # ingest.email\_watcher
2025-08-18T08:30:29.8290670Z 
2025-08-18T08:30:29.8291059Z <a id="ingest.email_watcher.main"></a>
2025-08-18T08:30:29.8291375Z 
2025-08-18T08:30:29.8291489Z #### main
2025-08-18T08:30:29.8291665Z 
2025-08-18T08:30:29.8291781Z ```python
2025-08-18T08:30:29.8292276Z def main() -> dict[str, str]
2025-08-18T08:30:29.8292650Z ```
2025-08-18T08:30:29.8292803Z 
2025-08-18T08:30:29.8293070Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T08:30:29.8293499Z 
2025-08-18T08:30:29.8293745Z Returns {"status": "success"} when processing completes.
2025-08-18T08:30:29.8294150Z 
2025-08-18T08:30:29.8294293Z <a id="ingest.tasks"></a>
2025-08-18T08:30:29.8294537Z 
2025-08-18T08:30:29.8294658Z # ingest.tasks
2025-08-18T08:30:29.8294854Z 
2025-08-18T08:30:29.8295030Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T08:30:29.8295353Z 
2025-08-18T08:30:29.8295495Z #### task\_import\_file
2025-08-18T08:30:29.8295717Z 
2025-08-18T08:30:29.8295835Z ```python
2025-08-18T08:30:29.8296239Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T08:30:29.8297014Z def task_import_file(self,
2025-08-18T08:30:29.8297409Z                      uri: str,
2025-08-18T08:30:29.8297835Z                      report_type: Optional[str] = None,
2025-08-18T08:30:29.8298365Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T08:30:29.8298812Z ```
2025-08-18T08:30:29.8298978Z 
2025-08-18T08:30:29.8299228Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T08:30:29.8299640Z 
2025-08-18T08:30:29.8299802Z <a id="ingest.celery_app"></a>
2025-08-18T08:30:29.8300070Z 
2025-08-18T08:30:29.8300206Z # ingest.celery\_app
2025-08-18T08:30:29.8300430Z 
2025-08-18T08:30:29.8300583Z <a id="ingest.ingest_router"></a>
2025-08-18T08:30:29.8300864Z 
2025-08-18T08:30:29.8301000Z # ingest.ingest\_router
2025-08-18T08:30:29.8301238Z 
2025-08-18T08:30:29.8301381Z <a id="logistics_etl"></a>
2025-08-18T08:30:29.8301622Z 
2025-08-18T08:30:29.8301755Z # logistics\_etl
2025-08-18T08:30:29.8302133Z 
2025-08-18T08:30:29.8302289Z Daily logistics ETL job.
2025-08-18T08:30:29.8302554Z 
2025-08-18T08:30:29.8302706Z <a id="logistics_etl.__main__"></a>
2025-08-18T08:30:29.8303011Z 
2025-08-18T08:30:29.8303155Z # logistics\_etl.\_\_main\_\_
2025-08-18T08:30:29.8303429Z 
2025-08-18T08:30:29.8303577Z <a id="logistics_etl.dsn"></a>
2025-08-18T08:30:29.8303837Z 
2025-08-18T08:30:29.8303979Z # logistics\_etl.dsn
2025-08-18T08:30:29.8304211Z 
2025-08-18T08:30:29.8304442Z Local DSN builder to avoid cross-service dependency.
2025-08-18T08:30:29.8304823Z 
2025-08-18T08:30:29.8304989Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T08:30:29.8305316Z 
2025-08-18T08:30:29.8305436Z #### build\_dsn
2025-08-18T08:30:29.8305632Z 
2025-08-18T08:30:29.8305757Z ```python
2025-08-18T08:30:29.8306079Z def build_dsn(sync: bool = True) -> str
2025-08-18T08:30:29.8306502Z ```
2025-08-18T08:30:29.8306659Z 
2025-08-18T08:30:29.8306922Z Return a Postgres DSN assembled from environment variables.
2025-08-18T08:30:29.8307358Z 
2025-08-18T08:30:29.8307658Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T08:30:29.8308435Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T08:30:29.8309109Z error when any required variable is missing.
2025-08-18T08:30:29.8309462Z 
2025-08-18T08:30:29.8309652Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T08:30:29.8309981Z 
2025-08-18T08:30:29.8310137Z # logistics\_etl.tests.conftest
2025-08-18T08:30:29.8310409Z 
2025-08-18T08:30:29.8310613Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T08:30:29.8310967Z 
2025-08-18T08:30:29.8311133Z # logistics\_etl.tests.test\_repository
2025-08-18T08:30:29.8311457Z 
2025-08-18T08:30:29.8311630Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T08:30:29.8312139Z 
2025-08-18T08:30:29.8312317Z # logistics\_etl.tests.test\_cron
2025-08-18T08:30:29.8312610Z 
2025-08-18T08:30:29.8312791Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T08:30:29.8313130Z 
2025-08-18T08:30:29.8313302Z # logistics\_etl.tests.test\_imports
2025-08-18T08:30:29.8313854Z 
2025-08-18T08:30:29.8314047Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T08:30:29.8314385Z 
2025-08-18T08:30:29.8314528Z # logistics\_etl.tests.test\_smoke
2025-08-18T08:30:29.8314775Z 
2025-08-18T08:30:29.8314930Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T08:30:29.8315215Z 
2025-08-18T08:30:29.8315345Z # logistics\_etl.tests.test\_client
2025-08-18T08:30:29.8315594Z 
2025-08-18T08:30:29.8315729Z <a id="logistics_etl.tests"></a>
2025-08-18T08:30:29.8315964Z 
2025-08-18T08:30:29.8316078Z # logistics\_etl.tests
2025-08-18T08:30:29.8316275Z 
2025-08-18T08:30:29.8316400Z <a id="logistics_etl.flow"></a>
2025-08-18T08:30:29.8316622Z 
2025-08-18T08:30:29.8316743Z # logistics\_etl.flow
2025-08-18T08:30:29.8316930Z 
2025-08-18T08:30:29.8317058Z <a id="logistics_etl.client"></a>
2025-08-18T08:30:29.8317308Z 
2025-08-18T08:30:29.8317435Z # logistics\_etl.client
2025-08-18T08:30:29.8317628Z 
2025-08-18T08:30:29.8317755Z <a id="logistics_etl.cron"></a>
2025-08-18T08:30:29.8318156Z 
2025-08-18T08:30:29.8318283Z # logistics\_etl.cron
2025-08-18T08:30:29.8318471Z 
2025-08-18T08:30:29.8318702Z <a id="logistics_etl.db"></a>
2025-08-18T08:30:29.8318934Z 
2025-08-18T08:30:29.8319050Z # logistics\_etl.db
2025-08-18T08:30:29.8319228Z 
2025-08-18T08:30:29.8319384Z <a id="logistics_etl.repository"></a>
2025-08-18T08:30:29.8319661Z 
2025-08-18T08:30:29.8319789Z # logistics\_etl.repository
2025-08-18T08:30:29.8320020Z 
2025-08-18T08:30:29.8320144Z <a id="alert_bot"></a>
2025-08-18T08:30:29.8320351Z 
2025-08-18T08:30:29.8320464Z # alert\_bot
2025-08-18T08:30:29.8320632Z 
2025-08-18T08:30:29.8320811Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T08:30:29.8321099Z 
2025-08-18T08:30:29.8321236Z # alert\_bot.tests.test\_smoke
2025-08-18T08:30:29.8321483Z 
2025-08-18T08:30:29.8321624Z <a id="alert_bot.tests"></a>
2025-08-18T08:30:29.8321860Z 
2025-08-18T08:30:29.8322167Z # alert\_bot.tests
2025-08-18T08:30:29.8322376Z 
2025-08-18T08:30:29.8322521Z <a id="alert_bot.alert_bot"></a>
2025-08-18T08:30:29.8322798Z 
2025-08-18T08:30:29.8322928Z # alert\_bot.alert\_bot
2025-08-18T08:30:29.8323130Z 
2025-08-18T08:30:29.8323254Z <a id="alert_bot.rules"></a>
2025-08-18T08:30:29.8323467Z 
2025-08-18T08:30:29.8323575Z # alert\_bot.rules
2025-08-18T08:30:29.8323748Z 
2025-08-18T08:30:29.8323860Z <a id="common"></a>
2025-08-18T08:30:29.8324038Z 
2025-08-18T08:30:29.8324140Z # common
2025-08-18T08:30:29.8324314Z 
2025-08-18T08:30:29.8324446Z <a id="common.dsn"></a>
2025-08-18T08:30:29.8324669Z 
2025-08-18T08:30:29.8324784Z # common.dsn
2025-08-18T08:30:29.8324943Z 
2025-08-18T08:30:29.8325072Z <a id="common.dsn.build_dsn"></a>
2025-08-18T08:30:29.8325327Z 
2025-08-18T08:30:29.8325452Z #### build\_dsn
2025-08-18T08:30:29.8325663Z 
2025-08-18T08:30:29.8325774Z ```python
2025-08-18T08:30:29.8326084Z def build_dsn(sync: bool = True) -> str
2025-08-18T08:30:29.8326473Z ```
2025-08-18T08:30:29.8326620Z 
2025-08-18T08:30:29.8326816Z Return a Postgres DSN, validating required variables.
2025-08-18T08:30:29.8327142Z 
2025-08-18T08:30:29.8327440Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T08:30:29.8328227Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T08:30:29.8328971Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T08:30:29.8363243Z missing.
2025-08-18T08:30:29.8363467Z 
2025-08-18T08:30:29.8363635Z <a id="common.models_vendor"></a>
2025-08-18T08:30:29.8363979Z 
2025-08-18T08:30:29.8364141Z # common.models\_vendor
2025-08-18T08:30:29.8364402Z 
2025-08-18T08:30:29.8364562Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T08:30:29.8364822Z 
2025-08-18T08:30:29.8364917Z ## Vendor Objects
2025-08-18T08:30:29.8365047Z 
2025-08-18T08:30:29.8365131Z ```python
2025-08-18T08:30:29.8365364Z class Vendor(Base)
2025-08-18T08:30:29.8365644Z ```
2025-08-18T08:30:29.8365808Z 
2025-08-18T08:30:29.8365952Z Vendor of inventory items.
2025-08-18T08:30:29.8366188Z 
2025-08-18T08:30:29.8366386Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T08:30:29.8367031Z 
2025-08-18T08:30:29.8367166Z ## VendorPrice Objects
2025-08-18T08:30:29.8367395Z 
2025-08-18T08:30:29.8367519Z ```python
2025-08-18T08:30:29.8367812Z class VendorPrice(Base)
2025-08-18T08:30:29.8368157Z ```
2025-08-18T08:30:29.8368306Z 
2025-08-18T08:30:29.8368496Z Association table linking vendors to pricing.
2025-08-18T08:30:29.8368842Z 
2025-08-18T08:30:29.8368985Z <a id="common.db_url"></a>
2025-08-18T08:30:29.8369217Z 
2025-08-18T08:30:29.8369351Z # common.db\_url
2025-08-18T08:30:29.8369537Z 
2025-08-18T08:30:29.8369686Z <a id="common.db_url.build_url"></a>
2025-08-18T08:30:29.8369981Z 
2025-08-18T08:30:29.8370103Z #### build\_url
2025-08-18T08:30:29.8370287Z 
2025-08-18T08:30:29.8370403Z ```python
2025-08-18T08:30:29.8370723Z def build_url(async_: bool = True) -> str
2025-08-18T08:30:29.8371136Z ```
2025-08-18T08:30:29.8371295Z 
2025-08-18T08:30:29.8371466Z Return Postgres DSN from env or PG_* parts.
2025-08-18T08:30:29.8371777Z 
2025-08-18T08:30:29.8372655Z <a id="common.keepa"></a>
2025-08-18T08:30:29.8372902Z 
2025-08-18T08:30:29.8373018Z # common.keepa
2025-08-18T08:30:29.8373199Z 
2025-08-18T08:30:29.8373324Z <a id="common.llm"></a>
2025-08-18T08:30:29.8373532Z 
2025-08-18T08:30:29.8373644Z # common.llm
2025-08-18T08:30:29.8373819Z 
2025-08-18T08:30:29.8374033Z <a id="common.settings"></a>
2025-08-18T08:30:29.8374255Z 
2025-08-18T08:30:29.8374352Z # common.settings
2025-08-18T08:30:29.8374488Z 
2025-08-18T08:30:29.8374579Z <a id="common.db"></a>
2025-08-18T08:30:29.8374722Z 
2025-08-18T08:30:29.8374816Z # common.db
2025-08-18T08:30:29.8374928Z 
2025-08-18T08:30:29.8375041Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T08:30:29.8375242Z 
2025-08-18T08:30:29.8375335Z #### build\_sqlalchemy\_url
2025-08-18T08:30:29.8375483Z 
2025-08-18T08:30:29.8375573Z ```python
2025-08-18T08:30:29.8375785Z def build_sqlalchemy_url() -> str
2025-08-18T08:30:29.8376034Z ```
2025-08-18T08:30:29.8376134Z 
2025-08-18T08:30:29.8376253Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T08:30:29.8376470Z 
2025-08-18T08:30:29.8376582Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T08:30:29.8376770Z 
2025-08-18T08:30:29.8376865Z #### build\_asyncpg\_dsn
2025-08-18T08:30:29.8377011Z 
2025-08-18T08:30:29.8377096Z ```python
2025-08-18T08:30:29.8377309Z def build_asyncpg_dsn() -> str
2025-08-18T08:30:29.8377543Z ```
2025-08-18T08:30:29.8377643Z 
2025-08-18T08:30:29.8377795Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T08:30:29.8378019Z 
2025-08-18T08:30:29.8378124Z <a id="common.db.refresh_mvs"></a>
2025-08-18T08:30:29.8378302Z 
2025-08-18T08:30:29.8378385Z #### refresh\_mvs
2025-08-18T08:30:29.8378508Z 
2025-08-18T08:30:29.8378595Z ```python
2025-08-18T08:30:29.8378831Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T08:30:29.8379123Z ```
2025-08-18T08:30:29.8379226Z 
2025-08-18T08:30:29.8379377Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T08:30:29.8379612Z 
2025-08-18T08:30:29.8379707Z <a id="common.config"></a>
2025-08-18T08:30:29.8379868Z 
2025-08-18T08:30:29.8379959Z # common.config
2025-08-18T08:30:29.8380084Z 
2025-08-18T08:30:29.8380177Z <a id="common.base"></a>
2025-08-18T08:30:29.8380319Z 
2025-08-18T08:30:29.8380409Z # common.base
2025-08-18T08:30:29.8380524Z 
2025-08-18T08:30:29.8380620Z <a id="common.base.Base"></a>
2025-08-18T08:30:29.8380777Z 
2025-08-18T08:30:29.8380866Z ## Base Objects
2025-08-18T08:30:29.8380985Z 
2025-08-18T08:30:29.8381065Z ```python
2025-08-18T08:30:29.8381268Z class Base(DeclarativeBase)
2025-08-18T08:30:29.8381495Z ```
2025-08-18T08:30:29.8381603Z 
2025-08-18T08:30:29.8381704Z Base class for SQLAlchemy models.
2025-08-18T08:30:29.8381867Z 
2025-08-18T08:30:29.8382151Z <a id="repricer"></a>
2025-08-18T08:30:29.8382311Z 
2025-08-18T08:30:29.8382396Z # repricer
2025-08-18T08:30:29.8382508Z 
2025-08-18T08:30:29.8382617Z <a id="repricer.app.schemas"></a>
2025-08-18T08:30:29.8382780Z 
2025-08-18T08:30:29.8382872Z # repricer.app.schemas
2025-08-18T08:30:29.8383017Z 
2025-08-18T08:30:29.8383264Z <a id="repricer.app.deps"></a>
2025-08-18T08:30:29.8383424Z 
2025-08-18T08:30:29.8383521Z # repricer.app.deps
2025-08-18T08:30:29.8383648Z 
2025-08-18T08:30:29.8383787Z Placeholder module for Keepa / SP-API clients.
2025-08-18T08:30:29.8383990Z 
2025-08-18T08:30:29.8384097Z <a id="repricer.app.logic"></a>
2025-08-18T08:30:29.8384256Z 
2025-08-18T08:30:29.8384349Z # repricer.app.logic
2025-08-18T08:30:29.8384490Z 
2025-08-18T08:30:29.8384605Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T08:30:29.8384798Z 
2025-08-18T08:30:29.8384887Z #### MIN\_MARGIN
2025-08-18T08:30:29.8385016Z 
2025-08-18T08:30:29.8385102Z 15 % ROI
2025-08-18T08:30:29.8385205Z 
2025-08-18T08:30:29.8385332Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T08:30:29.8385528Z 
2025-08-18T08:30:29.8385616Z #### compute\_price
2025-08-18T08:30:29.8385749Z 
2025-08-18T08:30:29.8385832Z ```python
2025-08-18T08:30:29.8386111Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T08:30:29.8386573Z ```
2025-08-18T08:30:29.8386679Z 
2025-08-18T08:30:29.8386808Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T08:30:29.8387115Z Replace with real competitive logic later.
2025-08-18T08:30:29.8387300Z 
2025-08-18T08:30:29.8387409Z <a id="repricer.app.main"></a>
2025-08-18T08:30:29.8387565Z 
2025-08-18T08:30:29.8387658Z # repricer.app.main
2025-08-18T08:30:29.8387794Z 
2025-08-18T08:30:29.8387887Z <a id="repricer.app"></a>
2025-08-18T08:30:29.8388032Z 
2025-08-18T08:30:29.8388119Z # repricer.app
2025-08-18T08:30:29.8388247Z 
2025-08-18T08:30:29.8388356Z <a id="repricer.tests.test_imports"></a>
2025-08-18T08:30:29.8388539Z 
2025-08-18T08:30:29.8388645Z # repricer.tests.test\_imports
2025-08-18T08:30:29.8388801Z 
2025-08-18T08:30:29.8388906Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T08:30:29.8389089Z 
2025-08-18T08:30:29.8389190Z # repricer.tests.test\_smoke
2025-08-18T08:30:29.8389342Z 
2025-08-18T08:30:29.8389438Z <a id="repricer.tests"></a>
2025-08-18T08:30:29.8389592Z 
2025-08-18T08:30:29.8389693Z # repricer.tests
2025-08-18T08:30:29.8389818Z 
2025-08-18T08:30:29.8389910Z <a id="db"></a>
2025-08-18T08:30:29.8390029Z 
2025-08-18T08:30:29.8390110Z # db
2025-08-18T08:30:29.8390215Z 
2025-08-18T08:30:29.8390311Z <a id="db.utils.views"></a>
2025-08-18T08:30:29.8390459Z 
2025-08-18T08:30:29.8390545Z # db.utils.views
2025-08-18T08:30:29.8390676Z 
2025-08-18T08:30:29.8390788Z <a id="db.utils.views.replace_view"></a>
2025-08-18T08:30:29.8390970Z 
2025-08-18T08:30:29.8391068Z #### replace\_view
2025-08-18T08:30:29.8391193Z 
2025-08-18T08:30:29.8391278Z ```python
2025-08-18T08:30:29.8391510Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T08:30:29.8391782Z ```
2025-08-18T08:30:29.8391885Z 
2025-08-18T08:30:29.8392204Z Drop and recreate a SQL view atomically.
2025-08-18T08:30:29.8392394Z 
2025-08-18T08:30:29.8392484Z <a id="db.utils"></a>
2025-08-18T08:30:29.8392619Z 
2025-08-18T08:30:29.8392699Z # db.utils
2025-08-18T08:30:29.8392808Z 
2025-08-18T08:30:29.8392911Z <a id="price_importer"></a>
2025-08-18T08:30:29.8393074Z 
2025-08-18T08:30:29.8393164Z # price\_importer
2025-08-18T08:30:29.8393288Z 
2025-08-18T08:30:29.8393415Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T08:30:29.8393625Z 
2025-08-18T08:30:29.8393730Z # price\_importer.services\_common.dsn
2025-08-18T08:30:29.8393911Z 
2025-08-18T08:30:29.8394049Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T08:30:29.8394268Z 
2025-08-18T08:30:29.8394358Z #### build\_dsn
2025-08-18T08:30:29.8394476Z 
2025-08-18T08:30:29.8394560Z ```python
2025-08-18T08:30:29.8394778Z def build_dsn(sync: bool = True) -> str
2025-08-18T08:30:29.8395028Z ```
2025-08-18T08:30:29.8395137Z 
2025-08-18T08:30:29.8395225Z Return safe DSN.
2025-08-18T08:30:29.8395346Z 
2025-08-18T08:30:29.8395704Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T08:30:29.8395933Z 
2025-08-18T08:30:29.8396078Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T08:30:29.8396299Z 
2025-08-18T08:30:29.8396433Z # price\_importer.services\_common.models\_vendor
2025-08-18T08:30:29.8396776Z 
2025-08-18T08:30:29.8396902Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T08:30:29.8397119Z 
2025-08-18T08:30:29.8397234Z # price\_importer.services\_common.db\_url
2025-08-18T08:30:29.8397427Z 
2025-08-18T08:30:29.8397577Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T08:30:29.8397816Z 
2025-08-18T08:30:29.8397901Z #### build\_url
2025-08-18T08:30:29.8398020Z 
2025-08-18T08:30:29.8398114Z ```python
2025-08-18T08:30:29.8398321Z def build_url(async_: bool = True) -> str
2025-08-18T08:30:29.8398583Z ```
2025-08-18T08:30:29.8398684Z 
2025-08-18T08:30:29.8398797Z Return Postgres DSN from env or PG_* parts.
2025-08-18T08:30:29.8398994Z 
2025-08-18T08:30:29.8399116Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T08:30:29.8399314Z 
2025-08-18T08:30:29.8399433Z # price\_importer.services\_common.keepa
2025-08-18T08:30:29.8399620Z 
2025-08-18T08:30:29.8399737Z <a id="price_importer.services_common.llm"></a>
2025-08-18T08:30:29.8400047Z 
2025-08-18T08:30:29.8400160Z # price\_importer.services\_common.llm
2025-08-18T08:30:29.8400335Z 
2025-08-18T08:30:29.8400464Z <a id="price_importer.services_common.settings"></a>
2025-08-18T08:30:29.8400674Z 
2025-08-18T08:30:29.8400786Z # price\_importer.services\_common.settings
2025-08-18T08:30:29.8400973Z 
2025-08-18T08:30:29.8401090Z <a id="price_importer.services_common.db"></a>
2025-08-18T08:30:29.8401283Z 
2025-08-18T08:30:29.8401389Z # price\_importer.services\_common.db
2025-08-18T08:30:29.8401563Z 
2025-08-18T08:30:29.8401737Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T08:30:29.8402190Z 
2025-08-18T08:30:29.8402293Z #### build\_sqlalchemy\_url
2025-08-18T08:30:29.8402456Z 
2025-08-18T08:30:29.8402537Z ```python
2025-08-18T08:30:29.8402762Z def build_sqlalchemy_url() -> str
2025-08-18T08:30:29.8403005Z ```
2025-08-18T08:30:29.8403109Z 
2025-08-18T08:30:29.8403229Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T08:30:29.8403427Z 
2025-08-18T08:30:29.8403588Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T08:30:29.8403837Z 
2025-08-18T08:30:29.8403934Z #### build\_asyncpg\_dsn
2025-08-18T08:30:29.8404073Z 
2025-08-18T08:30:29.8404156Z ```python
2025-08-18T08:30:29.8404369Z def build_asyncpg_dsn() -> str
2025-08-18T08:30:29.8404604Z ```
2025-08-18T08:30:29.8404701Z 
2025-08-18T08:30:29.8404846Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T08:30:29.8405071Z 
2025-08-18T08:30:29.8405222Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T08:30:29.8405442Z 
2025-08-18T08:30:29.8405532Z #### refresh\_mvs
2025-08-18T08:30:29.8405663Z 
2025-08-18T08:30:29.8405744Z ```python
2025-08-18T08:30:29.8405974Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T08:30:29.8406280Z ```
2025-08-18T08:30:29.8406384Z 
2025-08-18T08:30:29.8406539Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T08:30:29.8406770Z 
2025-08-18T08:30:29.8406893Z <a id="price_importer.services_common"></a>
2025-08-18T08:30:29.8407086Z 
2025-08-18T08:30:29.8407192Z # price\_importer.services\_common
2025-08-18T08:30:29.8407361Z 
2025-08-18T08:30:29.8407480Z <a id="price_importer.services_common.base"></a>
2025-08-18T08:30:29.8407681Z 
2025-08-18T08:30:29.8407787Z # price\_importer.services\_common.base
2025-08-18T08:30:29.8407967Z 
2025-08-18T08:30:29.8408075Z <a id="price_importer.normaliser"></a>
2025-08-18T08:30:29.8408254Z 
2025-08-18T08:30:29.8408351Z # price\_importer.normaliser
2025-08-18T08:30:29.8408511Z 
2025-08-18T08:30:29.8408631Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T08:30:29.8408827Z 
2025-08-18T08:30:29.8408935Z # price\_importer.common.models\_vendor
2025-08-18T08:30:29.8409116Z 
2025-08-18T08:30:29.8409227Z <a id="price_importer.common.db_url"></a>
2025-08-18T08:30:29.8409410Z 
2025-08-18T08:30:29.8409519Z # price\_importer.common.db\_url
2025-08-18T08:30:29.8409683Z 
2025-08-18T08:30:29.8409809Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T08:30:29.8410147Z 
2025-08-18T08:30:29.8410230Z #### make\_dsn
2025-08-18T08:30:29.8410349Z 
2025-08-18T08:30:29.8410433Z ```python
2025-08-18T08:30:29.8410647Z def make_dsn(async_: bool = False) -> str
2025-08-18T08:30:29.8410907Z ```
2025-08-18T08:30:29.8411004Z 
2025-08-18T08:30:29.8411137Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T08:30:29.8411348Z 
2025-08-18T08:30:29.8411479Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T08:30:29.8411680Z 
2025-08-18T08:30:29.8411764Z #### build\_url
2025-08-18T08:30:29.8411888Z 
2025-08-18T08:30:29.8412120Z ```python
2025-08-18T08:30:29.8412334Z def build_url(async_: bool = False) -> str
2025-08-18T08:30:29.8412598Z ```
2025-08-18T08:30:29.8412701Z 
2025-08-18T08:30:29.8412842Z Return Postgres DSN built from environment variables.
2025-08-18T08:30:29.8413051Z 
2025-08-18T08:30:29.8413152Z <a id="price_importer.common"></a>
2025-08-18T08:30:29.8413317Z 
2025-08-18T08:30:29.8413418Z # price\_importer.common
2025-08-18T08:30:29.8413685Z 
2025-08-18T08:30:29.8413790Z <a id="price_importer.common.base"></a>
2025-08-18T08:30:29.8413976Z 
2025-08-18T08:30:29.8414072Z # price\_importer.common.base
2025-08-18T08:30:29.8414229Z 
2025-08-18T08:30:29.8414349Z <a id="price_importer.tests.conftest"></a>
2025-08-18T08:30:29.8414536Z 
2025-08-18T08:30:29.8414644Z # price\_importer.tests.conftest
2025-08-18T08:30:29.8414808Z 
2025-08-18T08:30:29.8414930Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T08:30:29.8415119Z 
2025-08-18T08:30:29.8415223Z # price\_importer.tests.test\_reader
2025-08-18T08:30:29.8415402Z 
2025-08-18T08:30:29.8415517Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T08:30:29.8415706Z 
2025-08-18T08:30:29.8415817Z # price\_importer.tests.test\_imports
2025-08-18T08:30:29.8415995Z 
2025-08-18T08:30:29.8416113Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T08:30:29.8416306Z 
2025-08-18T08:30:29.8416433Z # price\_importer.tests.test\_smoke
2025-08-18T08:30:29.8416609Z 
2025-08-18T08:30:29.8416735Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T08:30:29.8416944Z 
2025-08-18T08:30:29.8417051Z # price\_importer.tests.test\_normaliser
2025-08-18T08:30:29.8417231Z 
2025-08-18T08:30:29.8417338Z <a id="price_importer.tests"></a>
2025-08-18T08:30:29.8417507Z 
2025-08-18T08:30:29.8417600Z # price\_importer.tests
2025-08-18T08:30:29.8417736Z 
2025-08-18T08:30:29.8417844Z <a id="price_importer.reader"></a>
2025-08-18T08:30:29.8418009Z 
2025-08-18T08:30:29.8418105Z # price\_importer.reader
2025-08-18T08:30:29.8418249Z 
2025-08-18T08:30:29.8418354Z <a id="price_importer.repository"></a>
2025-08-18T08:30:29.8418538Z 
2025-08-18T08:30:29.8418644Z # price\_importer.repository
2025-08-18T08:30:29.8418798Z 
2025-08-18T08:30:29.8418897Z <a id="price_importer.import"></a>
2025-08-18T08:30:29.8419061Z 
2025-08-18T08:30:29.8419159Z # price\_importer.import
2025-08-18T08:30:29.8419299Z 
2025-08-18T08:30:29.8419387Z <a id="fees_h10"></a>
2025-08-18T08:30:29.8419528Z 
2025-08-18T08:30:29.8419617Z # fees\_h10
2025-08-18T08:30:29.8419725Z 
2025-08-18T08:30:29.8419818Z <a id="fees_h10.worker"></a>
2025-08-18T08:30:29.8419970Z 
2025-08-18T08:30:29.8420056Z # fees\_h10.worker
2025-08-18T08:30:29.8420178Z 
2025-08-18T08:30:29.8420296Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T08:30:29.8420488Z 
2025-08-18T08:30:29.8420575Z #### list\_active\_asins
2025-08-18T08:30:29.8420719Z 
2025-08-18T08:30:29.8420800Z ```python
2025-08-18T08:30:29.8421003Z def list_active_asins() -> list[str]
2025-08-18T08:30:29.8421285Z ```
2025-08-18T08:30:29.8421384Z 
2025-08-18T08:30:29.8421517Z Return known ASINs or an empty list if unavailable.
2025-08-18T08:30:29.8421724Z 
2025-08-18T08:30:29.8421822Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T08:30:29.8422165Z 
2025-08-18T08:30:29.8422272Z # fees\_h10.tests.test\_smoke
2025-08-18T08:30:29.8422425Z 
2025-08-18T08:30:29.8422514Z <a id="fees_h10.tests"></a>
2025-08-18T08:30:29.8422665Z 
2025-08-18T08:30:29.8422751Z # fees\_h10.tests
2025-08-18T08:30:29.8423017Z 
2025-08-18T08:30:29.8423114Z <a id="fees_h10.client"></a>
2025-08-18T08:30:29.8423263Z 
2025-08-18T08:30:29.8423348Z # fees\_h10.client
2025-08-18T08:30:29.8423467Z 
2025-08-18T08:30:29.8423570Z <a id="fees_h10.repository"></a>
2025-08-18T08:30:29.8423727Z 
2025-08-18T08:30:29.8423815Z # fees\_h10.repository
2025-08-18T08:30:29.8423954Z 
2025-08-18T08:30:29.8424044Z <a id="emailer"></a>
2025-08-18T08:30:29.8424171Z 
2025-08-18T08:30:29.8424251Z # emailer
2025-08-18T08:30:29.8424365Z 
2025-08-18T08:30:29.8424478Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T08:30:29.8424670Z 
2025-08-18T08:30:29.8424782Z # emailer.tests.test\_import\_emailer
2025-08-18T08:30:29.8424954Z 
2025-08-18T08:30:29.8425055Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T08:30:29.8425231Z 
2025-08-18T08:30:29.8425329Z # emailer.tests.test\_smoke
2025-08-18T08:30:29.8425479Z 
2025-08-18T08:30:29.8425573Z <a id="emailer.tests"></a>
2025-08-18T08:30:29.8425725Z 
2025-08-18T08:30:29.8425812Z # emailer.tests
2025-08-18T08:30:29.8426053Z 
2025-08-18T08:30:29.8426162Z <a id="emailer.generate_body"></a>
2025-08-18T08:30:29.8426328Z 
2025-08-18T08:30:29.8426425Z # emailer.generate\_body
2025-08-18T08:30:29.8426570Z 
2025-08-18T08:30:29.8426661Z <a id="llm_server"></a>
2025-08-18T08:30:29.8426795Z 
2025-08-18T08:30:29.8426882Z # llm\_server
2025-08-18T08:30:29.8427000Z 
2025-08-18T08:30:29.8427094Z <a id="llm_server.app"></a>
2025-08-18T08:30:29.8427244Z 
2025-08-18T08:30:29.8427342Z # llm\_server.app
2025-08-18T08:30:29.8427464Z 
