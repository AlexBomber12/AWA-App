2025-08-19T15:15:08.3329963Z ##[group]Run pydoc-markdown
2025-08-19T15:15:08.3330251Z [36;1mpydoc-markdown[0m
2025-08-19T15:15:08.3373335Z shell: /usr/bin/bash -e {0}
2025-08-19T15:15:08.3373564Z env:
2025-08-19T15:15:08.3373800Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:15:08.3374208Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T15:15:08.3374594Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:15:08.3374942Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:15:08.3375289Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:15:08.3375627Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T15:15:08.3375916Z ##[endgroup]
2025-08-19T15:15:08.6840587Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T15:15:08.6841324Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T15:15:08.6841790Z In "pydoc-markdown.yml"
2025-08-19T15:15:08.6842257Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T15:15:08.6843139Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T15:15:08.6843929Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T15:15:08.6844463Z 
2025-08-19T15:15:09.0208338Z <a id="__init__"></a>
2025-08-19T15:15:09.0208612Z 
2025-08-19T15:15:09.0208895Z # \_\_init\_\_
2025-08-19T15:15:09.0209070Z 
2025-08-19T15:15:09.0209190Z <a id="api"></a>
2025-08-19T15:15:09.0209381Z 
2025-08-19T15:15:09.0209489Z # api
2025-08-19T15:15:09.0209638Z 
2025-08-19T15:15:09.0209765Z <a id="api.errors"></a>
2025-08-19T15:15:09.0209977Z 
2025-08-19T15:15:09.0210088Z # api.errors
2025-08-19T15:15:09.0210247Z 
2025-08-19T15:15:09.0210385Z <a id="api.sentry_config"></a>
2025-08-19T15:15:09.0210632Z 
2025-08-19T15:15:09.0210755Z # api.sentry\_config
2025-08-19T15:15:09.0210879Z 
2025-08-19T15:15:09.0210983Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T15:15:09.0211181Z 
2025-08-19T15:15:09.0211535Z # api.tests.test\_stats\_contracts
2025-08-19T15:15:09.0211722Z 
2025-08-19T15:15:09.0211817Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T15:15:09.0211991Z 
2025-08-19T15:15:09.0212148Z # api.tests.test\_sentry\_scrub
2025-08-19T15:15:09.0212293Z 
2025-08-19T15:15:09.0212384Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T15:15:09.0212559Z 
2025-08-19T15:15:09.0212641Z # api.tests.test\_roi\_basic\_auth
2025-08-19T15:15:09.0212788Z 
2025-08-19T15:15:09.0212873Z <a id="api.tests.test_errors_json"></a>
2025-08-19T15:15:09.0213041Z 
2025-08-19T15:15:09.0213121Z # api.tests.test\_errors\_json
2025-08-19T15:15:09.0213260Z 
2025-08-19T15:15:09.0213346Z <a id="api.tests.test_llm"></a>
2025-08-19T15:15:09.0213483Z 
2025-08-19T15:15:09.0213554Z # api.tests.test\_llm
2025-08-19T15:15:09.0213677Z 
2025-08-19T15:15:09.0213762Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T15:15:09.0213920Z 
2025-08-19T15:15:09.0213997Z # api.tests.test\_roi\_filters
2025-08-19T15:15:09.0214138Z 
2025-08-19T15:15:09.0214233Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T15:15:09.0214401Z 
2025-08-19T15:15:09.0214486Z # api.tests.test\_sentry\_event
2025-08-19T15:15:09.0214623Z 
2025-08-19T15:15:09.0214745Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T15:15:09.0214966Z 
2025-08-19T15:15:09.0215046Z ## DummyTransport Objects
2025-08-19T15:15:09.0215181Z 
2025-08-19T15:15:09.0215246Z ```python
2025-08-19T15:15:09.0215421Z class DummyTransport()
2025-08-19T15:15:09.0215601Z ```
2025-08-19T15:15:09.0215691Z 
2025-08-19T15:15:09.0215865Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T15:15:09.0216129Z 
2025-08-19T15:15:09.0216206Z #### capture\_envelope
2025-08-19T15:15:09.0216321Z 
2025-08-19T15:15:09.0216383Z ```python
2025-08-19T15:15:09.0216563Z def capture_envelope(envelope)
2025-08-19T15:15:09.0216761Z ```
2025-08-19T15:15:09.0216850Z 
2025-08-19T15:15:09.0216973Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T15:15:09.0217187Z 
2025-08-19T15:15:09.0217276Z <a id="api.tests.test_cors"></a>
2025-08-19T15:15:09.0217627Z 
2025-08-19T15:15:09.0217701Z # api.tests.test\_cors
2025-08-19T15:15:09.0217818Z 
2025-08-19T15:15:09.0217907Z <a id="api.tests.test_imports"></a>
2025-08-19T15:15:09.0218066Z 
2025-08-19T15:15:09.0218142Z # api.tests.test\_imports
2025-08-19T15:15:09.0218277Z 
2025-08-19T15:15:09.0218363Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T15:15:09.0218524Z 
2025-08-19T15:15:09.0218614Z # api.tests.test\_rate\_limit
2025-08-19T15:15:09.0218911Z 
2025-08-19T15:15:09.0219008Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T15:15:09.0219192Z 
2025-08-19T15:15:09.0219262Z #### app
2025-08-19T15:15:09.0219351Z 
2025-08-19T15:15:09.0219415Z noqa: E402
2025-08-19T15:15:09.0219509Z 
2025-08-19T15:15:09.0219596Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T15:15:09.0220008Z 
2025-08-19T15:15:09.0220102Z # api.tests.test\_entrypoint
2025-08-19T15:15:09.0220256Z 
2025-08-19T15:15:09.0220429Z <a id="api.tests.test_health"></a>
2025-08-19T15:15:09.0220622Z 
2025-08-19T15:15:09.0220766Z # api.tests.test\_health
2025-08-19T15:15:09.0220903Z 
2025-08-19T15:15:09.0220987Z <a id="api.tests.test_score"></a>
2025-08-19T15:15:09.0221141Z 
2025-08-19T15:15:09.0221215Z # api.tests.test\_score
2025-08-19T15:15:09.0221335Z 
2025-08-19T15:15:09.0221413Z <a id="api.logging_config"></a>
2025-08-19T15:15:09.0221558Z 
2025-08-19T15:15:09.0221631Z # api.logging\_config
2025-08-19T15:15:09.0221748Z 
2025-08-19T15:15:09.0221834Z <a id="api.migrations.env"></a>
2025-08-19T15:15:09.0221975Z 
2025-08-19T15:15:09.0222047Z # api.migrations.env
2025-08-19T15:15:09.0222167Z 
2025-08-19T15:15:09.0222282Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T15:15:09.0222485Z 
2025-08-19T15:15:09.0222589Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T15:15:09.0222775Z 
2025-08-19T15:15:09.0222894Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T15:15:09.0223083Z 
2025-08-19T15:15:09.0223188Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T15:15:09.0223617Z 
2025-08-19T15:15:09.0223771Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T15:15:09.0224007Z 
2025-08-19T15:15:09.0224140Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T15:15:09.0224353Z 
2025-08-19T15:15:09.0224475Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T15:15:09.0224683Z 
2025-08-19T15:15:09.0224789Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T15:15:09.0224967Z 
2025-08-19T15:15:09.0225088Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T15:15:09.0225283Z 
2025-08-19T15:15:09.0225383Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T15:15:09.0225565Z 
2025-08-19T15:15:09.0225686Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T15:15:09.0225886Z 
2025-08-19T15:15:09.0226003Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T15:15:09.0226188Z 
2025-08-19T15:15:09.0226301Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T15:15:09.0226523Z 
2025-08-19T15:15:09.0226628Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T15:15:09.0226858Z 
2025-08-19T15:15:09.0226986Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T15:15:09.0227183Z 
2025-08-19T15:15:09.0227285Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T15:15:09.0227470Z 
2025-08-19T15:15:09.0227604Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T15:15:09.0227815Z 
2025-08-19T15:15:09.0227934Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T15:15:09.0228134Z 
2025-08-19T15:15:09.0228253Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T15:15:09.0228451Z 
2025-08-19T15:15:09.0228563Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T15:15:09.0228877Z 
2025-08-19T15:15:09.0229011Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T15:15:09.0229229Z 
2025-08-19T15:15:09.0229346Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T15:15:09.0229697Z 
2025-08-19T15:15:09.0229814Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T15:15:09.0230000Z 
2025-08-19T15:15:09.0230096Z # api.migrations.versions.0001\_baseline
2025-08-19T15:15:09.0230264Z 
2025-08-19T15:15:09.0230360Z <a id="api.migrations.versions"></a>
2025-08-19T15:15:09.0230522Z 
2025-08-19T15:15:09.0230607Z # api.migrations.versions
2025-08-19T15:15:09.0230742Z 
2025-08-19T15:15:09.0230818Z <a id="api.migrations"></a>
2025-08-19T15:15:09.0230950Z 
2025-08-19T15:15:09.0231025Z # api.migrations
2025-08-19T15:15:09.0231156Z 
2025-08-19T15:15:09.0231223Z <a id="api.db"></a>
2025-08-19T15:15:09.0231331Z 
2025-08-19T15:15:09.0231402Z # api.db
2025-08-19T15:15:09.0231489Z 
2025-08-19T15:15:09.0231568Z <a id="api.routes.score"></a>
2025-08-19T15:15:09.0231711Z 
2025-08-19T15:15:09.0231780Z # api.routes.score
2025-08-19T15:15:09.0231885Z 
2025-08-19T15:15:09.0231963Z <a id="api.routes.stats"></a>
2025-08-19T15:15:09.0232105Z 
2025-08-19T15:15:09.0232177Z # api.routes.stats
2025-08-19T15:15:09.0232290Z 
2025-08-19T15:15:09.0232372Z <a id="api.routes.roi"></a>
2025-08-19T15:15:09.0232500Z 
2025-08-19T15:15:09.0232564Z # api.routes.roi
2025-08-19T15:15:09.0232672Z 
2025-08-19T15:15:09.0232753Z <a id="api.routes.health"></a>
2025-08-19T15:15:09.0232892Z 
2025-08-19T15:15:09.0232962Z # api.routes.health
2025-08-19T15:15:09.0233075Z 
2025-08-19T15:15:09.0233164Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T15:15:09.0233329Z 
2025-08-19T15:15:09.0233402Z #### MAX\_SKEW
2025-08-19T15:15:09.0233499Z 
2025-08-19T15:15:09.0233559Z seconds
2025-08-19T15:15:09.0233642Z 
2025-08-19T15:15:09.0233736Z <a id="api.routes.health.health"></a>
2025-08-19T15:15:09.0233895Z 
2025-08-19T15:15:09.0233954Z #### health
2025-08-19T15:15:09.0234048Z 
2025-08-19T15:15:09.0234111Z ```python
2025-08-19T15:15:09.0234304Z @router.get("/health", include_in_schema=False)
2025-08-19T15:15:09.0234712Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T15:15:09.0235175Z ```
2025-08-19T15:15:09.0235265Z 
2025-08-19T15:15:09.0235379Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T15:15:09.0235577Z 
2025-08-19T15:15:09.0235665Z <a id="api.routes.repository"></a>
2025-08-19T15:15:09.0235820Z 
2025-08-19T15:15:09.0235897Z # api.routes.repository
2025-08-19T15:15:09.0236026Z 
2025-08-19T15:15:09.0236096Z <a id="api.routes"></a>
2025-08-19T15:15:09.0236210Z 
2025-08-19T15:15:09.0236289Z # api.routes
2025-08-19T15:15:09.0236392Z 
2025-08-19T15:15:09.0236470Z <a id="api.models.fee"></a>
2025-08-19T15:15:09.0236600Z 
2025-08-19T15:15:09.0236667Z # api.models.fee
2025-08-19T15:15:09.0236777Z 
2025-08-19T15:15:09.0236850Z <a id="api.models"></a>
2025-08-19T15:15:09.0237012Z 
2025-08-19T15:15:09.0237086Z # api.models
2025-08-19T15:15:09.0237178Z 
2025-08-19T15:15:09.0237256Z <a id="api.roi_repository"></a>
2025-08-19T15:15:09.0237396Z 
2025-08-19T15:15:09.0237473Z # api.roi\_repository
2025-08-19T15:15:09.0237587Z 
2025-08-19T15:15:09.0237665Z <a id="api.main"></a>
2025-08-19T15:15:09.0237790Z 
2025-08-19T15:15:09.0237853Z # api.main
2025-08-19T15:15:09.0237942Z 
2025-08-19T15:15:09.0238026Z <a id="api.main.ready"></a>
2025-08-19T15:15:09.0238157Z 
2025-08-19T15:15:09.0238219Z #### ready
2025-08-19T15:15:09.0238309Z 
2025-08-19T15:15:09.0238379Z ```python
2025-08-19T15:15:09.0238756Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T15:15:09.0239203Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T15:15:09.0239551Z                                                                       str]
2025-08-19T15:15:09.0239781Z ```
2025-08-19T15:15:09.0239862Z 
2025-08-19T15:15:09.0239964Z Return 200 only when migrations are at head.
2025-08-19T15:15:09.0240137Z 
2025-08-19T15:15:09.0240210Z <a id="api.config"></a>
2025-08-19T15:15:09.0240327Z 
2025-08-19T15:15:09.0240401Z # api.config
2025-08-19T15:15:09.0240495Z 
2025-08-19T15:15:09.0240570Z <a id="api.security"></a>
2025-08-19T15:15:09.0240709Z 
2025-08-19T15:15:09.0240912Z # api.security
2025-08-19T15:15:09.0241010Z 
2025-08-19T15:15:09.0241078Z <a id="etl"></a>
2025-08-19T15:15:09.0241176Z 
2025-08-19T15:15:09.0241236Z # etl
2025-08-19T15:15:09.0241320Z 
2025-08-19T15:15:09.0241406Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T15:15:09.0241553Z 
2025-08-19T15:15:09.0241624Z # etl.fba\_fee\_ingestor
2025-08-19T15:15:09.0241751Z 
2025-08-19T15:15:09.0241832Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T15:15:09.0241973Z 
2025-08-19T15:15:09.0242044Z # etl.sp\_fees\_ingestor
2025-08-19T15:15:09.0242167Z 
2025-08-19T15:15:09.0242244Z <a id="etl.keepa_ingestor"></a>
2025-08-19T15:15:09.0242384Z 
2025-08-19T15:15:09.0242458Z # etl.keepa\_ingestor
2025-08-19T15:15:09.0242568Z 
2025-08-19T15:15:09.0242636Z <a id="etl.db"></a>
2025-08-19T15:15:09.0242749Z 
2025-08-19T15:15:09.0242810Z # etl.db
2025-08-19T15:15:09.0242898Z 
2025-08-19T15:15:09.0242981Z <a id="etl.dialects.schemas"></a>
2025-08-19T15:15:09.0243137Z 
2025-08-19T15:15:09.0243219Z # etl.dialects.schemas
2025-08-19T15:15:09.0243342Z 
2025-08-19T15:15:09.0243453Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T15:15:09.0243636Z 
2025-08-19T15:15:09.0243725Z # etl.dialects.amazon\_reimbursements
2025-08-19T15:15:09.0243884Z 
2025-08-19T15:15:09.0243988Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T15:15:09.0244163Z 
2025-08-19T15:15:09.0244252Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T15:15:09.0244417Z 
2025-08-19T15:15:09.0244505Z <a id="etl.dialects.test_generic"></a>
2025-08-19T15:15:09.0244666Z 
2025-08-19T15:15:09.0244750Z # etl.dialects.test\_generic
2025-08-19T15:15:09.0244889Z 
2025-08-19T15:15:09.0244979Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T15:15:09.0245142Z 
2025-08-19T15:15:09.0245232Z # etl.dialects.amazon\_returns
2025-08-19T15:15:09.0245371Z 
2025-08-19T15:15:09.0245467Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T15:15:09.0245643Z 
2025-08-19T15:15:09.0245726Z # etl.dialects.amazon\_fee\_preview
2025-08-19T15:15:09.0245999Z 
2025-08-19T15:15:09.0246115Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T15:15:09.0246301Z 
2025-08-19T15:15:09.0246391Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T15:15:09.0246565Z 
2025-08-19T15:15:09.0246660Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T15:15:09.0246828Z 
2025-08-19T15:15:09.0246914Z # etl.dialects.amazon\_settlements
2025-08-19T15:15:09.0247070Z 
2025-08-19T15:15:09.0247143Z <a id="etl.dialects"></a>
2025-08-19T15:15:09.0247269Z 
2025-08-19T15:15:09.0247338Z # etl.dialects
2025-08-19T15:15:09.0247435Z 
2025-08-19T15:15:09.0247501Z <a id="ingest"></a>
2025-08-19T15:15:09.0247607Z 
2025-08-19T15:15:09.0247674Z # ingest
2025-08-19T15:15:09.0247759Z 
2025-08-19T15:15:09.0247840Z <a id="ingest.maintenance"></a>
2025-08-19T15:15:09.0247985Z 
2025-08-19T15:15:09.0248053Z # ingest.maintenance
2025-08-19T15:15:09.0248165Z 
2025-08-19T15:15:09.0248241Z <a id="ingest.copy_loader"></a>
2025-08-19T15:15:09.0248385Z 
2025-08-19T15:15:09.0248458Z # ingest.copy\_loader
2025-08-19T15:15:09.0248588Z 
2025-08-19T15:15:09.0248823Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T15:15:09.0249007Z 
2025-08-19T15:15:09.0249080Z #### copy\_df\_via\_temp
2025-08-19T15:15:09.0249208Z 
2025-08-19T15:15:09.0249271Z ```python
2025-08-19T15:15:09.0249437Z def copy_df_via_temp(engine: Engine,
2025-08-19T15:15:09.0249675Z                      df: pd.DataFrame,
2025-08-19T15:15:09.0249904Z                      target_table: str,
2025-08-19T15:15:09.0250122Z                      *,
2025-08-19T15:15:09.0250325Z                      target_schema: Optional[str] = None,
2025-08-19T15:15:09.0250577Z                      columns: Sequence[str],
2025-08-19T15:15:09.0250840Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T15:15:09.0251111Z                      analyze_after: bool = False,
2025-08-19T15:15:09.0251369Z                      connection: Any | None = None) -> int
2025-08-19T15:15:09.0251599Z ```
2025-08-19T15:15:09.0251689Z 
2025-08-19T15:15:09.0251844Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T15:15:09.0252194Z 
2025-08-19T15:15:09.0252285Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T15:15:09.0252437Z 
2025-08-19T15:15:09.0252514Z # ingest.tests.test\_smoke
2025-08-19T15:15:09.0252645Z 
2025-08-19T15:15:09.0252719Z <a id="ingest.tests"></a>
2025-08-19T15:15:09.0252840Z 
2025-08-19T15:15:09.0252906Z # ingest.tests
2025-08-19T15:15:09.0253010Z 
2025-08-19T15:15:09.0253092Z <a id="ingest.upload_router"></a>
2025-08-19T15:15:09.0253237Z 
2025-08-19T15:15:09.0253315Z # ingest.upload\_router
2025-08-19T15:15:09.0253431Z 
2025-08-19T15:15:09.0253510Z <a id="ingest.email_watcher"></a>
2025-08-19T15:15:09.0253657Z 
2025-08-19T15:15:09.0253728Z # ingest.email\_watcher
2025-08-19T15:15:09.0253843Z 
2025-08-19T15:15:09.0253929Z <a id="ingest.email_watcher.main"></a>
2025-08-19T15:15:09.0254094Z 
2025-08-19T15:15:09.0254155Z #### main
2025-08-19T15:15:09.0254243Z 
2025-08-19T15:15:09.0254309Z ```python
2025-08-19T15:15:09.0254476Z def main() -> dict[str, str]
2025-08-19T15:15:09.0254674Z ```
2025-08-19T15:15:09.0254755Z 
2025-08-19T15:15:09.0254889Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T15:15:09.0255116Z 
2025-08-19T15:15:09.0255240Z Returns {"status": "success"} when processing completes.
2025-08-19T15:15:09.0255448Z 
2025-08-19T15:15:09.0255523Z <a id="ingest.tasks"></a>
2025-08-19T15:15:09.0255652Z 
2025-08-19T15:15:09.0255715Z # ingest.tasks
2025-08-19T15:15:09.0255812Z 
2025-08-19T15:15:09.0255912Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T15:15:09.0256079Z 
2025-08-19T15:15:09.0256148Z #### task\_import\_file
2025-08-19T15:15:09.0256266Z 
2025-08-19T15:15:09.0256327Z ```python
2025-08-19T15:15:09.0256531Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T15:15:09.0256824Z def task_import_file(self: Any,
2025-08-19T15:15:09.0257036Z                      uri: str,
2025-08-19T15:15:09.0257255Z                      report_type: str | None = None,
2025-08-19T15:15:09.0257634Z                      force: bool = False) -> dict[str, Any]
2025-08-19T15:15:09.0257877Z ```
2025-08-19T15:15:09.0257957Z 
2025-08-19T15:15:09.0258085Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T15:15:09.0258295Z 
2025-08-19T15:15:09.0258375Z <a id="ingest.celery_app"></a>
2025-08-19T15:15:09.0258512Z 
2025-08-19T15:15:09.0258581Z # ingest.celery\_app
2025-08-19T15:15:09.0258851Z 
2025-08-19T15:15:09.0258930Z <a id="ingest.ingest_router"></a>
2025-08-19T15:15:09.0259077Z 
2025-08-19T15:15:09.0259156Z # ingest.ingest\_router
2025-08-19T15:15:09.0259272Z 
2025-08-19T15:15:09.0259348Z <a id="logistics_etl"></a>
2025-08-19T15:15:09.0259478Z 
2025-08-19T15:15:09.0259544Z # logistics\_etl
2025-08-19T15:15:09.0259646Z 
2025-08-19T15:15:09.0259720Z Daily logistics ETL job.
2025-08-19T15:15:09.0259850Z 
2025-08-19T15:15:09.0259930Z <a id="logistics_etl.__main__"></a>
2025-08-19T15:15:09.0260080Z 
2025-08-19T15:15:09.0260164Z # logistics\_etl.\_\_main\_\_
2025-08-19T15:15:09.0260304Z 
2025-08-19T15:15:09.0260386Z <a id="logistics_etl.dsn"></a>
2025-08-19T15:15:09.0260526Z 
2025-08-19T15:15:09.0260593Z # logistics\_etl.dsn
2025-08-19T15:15:09.0260703Z 
2025-08-19T15:15:09.0260815Z Local DSN builder to avoid cross-service dependency.
2025-08-19T15:15:09.0261021Z 
2025-08-19T15:15:09.0261110Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T15:15:09.0261275Z 
2025-08-19T15:15:09.0261344Z #### build\_dsn
2025-08-19T15:15:09.0261445Z 
2025-08-19T15:15:09.0261506Z ```python
2025-08-19T15:15:09.0261678Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:15:09.0261891Z ```
2025-08-19T15:15:09.0261976Z 
2025-08-19T15:15:09.0262109Z Return a Postgres DSN assembled from environment variables.
2025-08-19T15:15:09.0262327Z 
2025-08-19T15:15:09.0262471Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T15:15:09.0262854Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T15:15:09.0263194Z error when any required variable is missing.
2025-08-19T15:15:09.0263368Z 
2025-08-19T15:15:09.0263593Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T15:15:09.0263770Z 
2025-08-19T15:15:09.0263852Z # logistics\_etl.tests.conftest
2025-08-19T15:15:09.0263993Z 
2025-08-19T15:15:09.0264094Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T15:15:09.0264285Z 
2025-08-19T15:15:09.0264372Z # logistics\_etl.tests.test\_repository
2025-08-19T15:15:09.0264533Z 
2025-08-19T15:15:09.0264630Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T15:15:09.0264796Z 
2025-08-19T15:15:09.0264879Z # logistics\_etl.tests.test\_cron
2025-08-19T15:15:09.0265032Z 
2025-08-19T15:15:09.0265127Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T15:15:09.0265299Z 
2025-08-19T15:15:09.0265381Z # logistics\_etl.tests.test\_imports
2025-08-19T15:15:09.0265539Z 
2025-08-19T15:15:09.0265630Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T15:15:09.0265797Z 
2025-08-19T15:15:09.0265885Z # logistics\_etl.tests.test\_smoke
2025-08-19T15:15:09.0266039Z 
2025-08-19T15:15:09.0266132Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T15:15:09.0266311Z 
2025-08-19T15:15:09.0266393Z # logistics\_etl.tests.test\_client
2025-08-19T15:15:09.0266544Z 
2025-08-19T15:15:09.0266624Z <a id="logistics_etl.tests"></a>
2025-08-19T15:15:09.0266771Z 
2025-08-19T15:15:09.0266845Z # logistics\_etl.tests
2025-08-19T15:15:09.0266961Z 
2025-08-19T15:15:09.0267044Z <a id="logistics_etl.flow"></a>
2025-08-19T15:15:09.0267180Z 
2025-08-19T15:15:09.0267250Z # logistics\_etl.flow
2025-08-19T15:15:09.0267369Z 
2025-08-19T15:15:09.0267451Z <a id="logistics_etl.client"></a>
2025-08-19T15:15:09.0267594Z 
2025-08-19T15:15:09.0267666Z # logistics\_etl.client
2025-08-19T15:15:09.0267789Z 
2025-08-19T15:15:09.0267864Z <a id="logistics_etl.cron"></a>
2025-08-19T15:15:09.0267998Z 
2025-08-19T15:15:09.0268072Z # logistics\_etl.cron
2025-08-19T15:15:09.0268182Z 
2025-08-19T15:15:09.0268258Z <a id="logistics_etl.db"></a>
2025-08-19T15:15:09.0268394Z 
2025-08-19T15:15:09.0268467Z # logistics\_etl.db
2025-08-19T15:15:09.0268839Z 
2025-08-19T15:15:09.0268927Z <a id="logistics_etl.repository"></a>
2025-08-19T15:15:09.0269094Z 
2025-08-19T15:15:09.0314346Z # logistics\_etl.repository
2025-08-19T15:15:09.0314656Z 
2025-08-19T15:15:09.0314816Z <a id="alert_bot"></a>
2025-08-19T15:15:09.0315063Z 
2025-08-19T15:15:09.0315192Z # alert\_bot
2025-08-19T15:15:09.0315406Z 
2025-08-19T15:15:09.0315556Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T15:15:09.0315773Z 
2025-08-19T15:15:09.0315874Z # alert\_bot.tests.test\_smoke
2025-08-19T15:15:09.0316061Z 
2025-08-19T15:15:09.0316157Z <a id="alert_bot.tests"></a>
2025-08-19T15:15:09.0316326Z 
2025-08-19T15:15:09.0316416Z # alert\_bot.tests
2025-08-19T15:15:09.0316548Z 
2025-08-19T15:15:09.0316652Z <a id="alert_bot.alert_bot"></a>
2025-08-19T15:15:09.0316836Z 
2025-08-19T15:15:09.0316924Z # alert\_bot.alert\_bot
2025-08-19T15:15:09.0317069Z 
2025-08-19T15:15:09.0317161Z <a id="alert_bot.rules"></a>
2025-08-19T15:15:09.0317329Z 
2025-08-19T15:15:09.0317420Z # alert\_bot.rules
2025-08-19T15:15:09.0317557Z 
2025-08-19T15:15:09.0317645Z <a id="common"></a>
2025-08-19T15:15:09.0317778Z 
2025-08-19T15:15:09.0317853Z # common
2025-08-19T15:15:09.0317961Z 
2025-08-19T15:15:09.0318057Z <a id="common.dsn"></a>
2025-08-19T15:15:09.0318205Z 
2025-08-19T15:15:09.0318286Z # common.dsn
2025-08-19T15:15:09.0318412Z 
2025-08-19T15:15:09.0318589Z <a id="common.dsn.build_dsn"></a>
2025-08-19T15:15:09.0318959Z 
2025-08-19T15:15:09.0319047Z #### build\_dsn
2025-08-19T15:15:09.0319171Z 
2025-08-19T15:15:09.0319250Z ```python
2025-08-19T15:15:09.0319471Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:15:09.0319748Z ```
2025-08-19T15:15:09.0319852Z 
2025-08-19T15:15:09.0320013Z Return a Postgres DSN, validating required variables.
2025-08-19T15:15:09.0320267Z 
2025-08-19T15:15:09.0320496Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T15:15:09.0321040Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T15:15:09.0321496Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T15:15:09.0321965Z missing.
2025-08-19T15:15:09.0322053Z 
2025-08-19T15:15:09.0322140Z <a id="common.models_vendor"></a>
2025-08-19T15:15:09.0322287Z 
2025-08-19T15:15:09.0322359Z # common.models\_vendor
2025-08-19T15:15:09.0322482Z 
2025-08-19T15:15:09.0322570Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T15:15:09.0322732Z 
2025-08-19T15:15:09.0322797Z ## Vendor Objects
2025-08-19T15:15:09.0322905Z 
2025-08-19T15:15:09.0322966Z ```python
2025-08-19T15:15:09.0323122Z class Vendor(Base)
2025-08-19T15:15:09.0323281Z ```
2025-08-19T15:15:09.0323362Z 
2025-08-19T15:15:09.0323445Z Vendor of inventory items.
2025-08-19T15:15:09.0323575Z 
2025-08-19T15:15:09.0323675Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T15:15:09.0323858Z 
2025-08-19T15:15:09.0323932Z ## VendorPrice Objects
2025-08-19T15:15:09.0324049Z 
2025-08-19T15:15:09.0324115Z ```python
2025-08-19T15:15:09.0324269Z class VendorPrice(Base)
2025-08-19T15:15:09.0324447Z ```
2025-08-19T15:15:09.0324532Z 
2025-08-19T15:15:09.0324633Z Association table linking vendors to pricing.
2025-08-19T15:15:09.0324810Z 
2025-08-19T15:15:09.0324891Z <a id="common.db_url"></a>
2025-08-19T15:15:09.0325015Z 
2025-08-19T15:15:09.0325081Z # common.db\_url
2025-08-19T15:15:09.0325190Z 
2025-08-19T15:15:09.0325273Z <a id="common.db_url.build_url"></a>
2025-08-19T15:15:09.0325427Z 
2025-08-19T15:15:09.0325495Z #### build\_url
2025-08-19T15:15:09.0325595Z 
2025-08-19T15:15:09.0325656Z ```python
2025-08-19T15:15:09.0325833Z def build_url(async_: bool = True) -> str
2025-08-19T15:15:09.0326050Z ```
2025-08-19T15:15:09.0326137Z 
2025-08-19T15:15:09.0326232Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:15:09.0326405Z 
2025-08-19T15:15:09.0326480Z <a id="common.keepa"></a>
2025-08-19T15:15:09.0326617Z 
2025-08-19T15:15:09.0326683Z # common.keepa
2025-08-19T15:15:09.0326782Z 
2025-08-19T15:15:09.0326857Z <a id="common.llm"></a>
2025-08-19T15:15:09.0327153Z 
2025-08-19T15:15:09.0327216Z # common.llm
2025-08-19T15:15:09.0327322Z 
2025-08-19T15:15:09.0327407Z <a id="common.settings"></a>
2025-08-19T15:15:09.0327541Z 
2025-08-19T15:15:09.0327608Z # common.settings
2025-08-19T15:15:09.0327719Z 
2025-08-19T15:15:09.0327788Z <a id="common.db"></a>
2025-08-19T15:15:09.0327915Z 
2025-08-19T15:15:09.0327984Z # common.db
2025-08-19T15:15:09.0328073Z 
2025-08-19T15:15:09.0328164Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T15:15:09.0328331Z 
2025-08-19T15:15:09.0328412Z #### build\_sqlalchemy\_url
2025-08-19T15:15:09.0328541Z 
2025-08-19T15:15:09.0328602Z ```python
2025-08-19T15:15:09.0328882Z def build_sqlalchemy_url() -> str
2025-08-19T15:15:09.0329084Z ```
2025-08-19T15:15:09.0329173Z 
2025-08-19T15:15:09.0329267Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:15:09.0329438Z 
2025-08-19T15:15:09.0329534Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T15:15:09.0329700Z 
2025-08-19T15:15:09.0329775Z #### build\_asyncpg\_dsn
2025-08-19T15:15:09.0329906Z 
2025-08-19T15:15:09.0329982Z ```python
2025-08-19T15:15:09.0330148Z def build_asyncpg_dsn() -> str
2025-08-19T15:15:09.0330345Z ```
2025-08-19T15:15:09.0330427Z 
2025-08-19T15:15:09.0330551Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:15:09.0330767Z 
2025-08-19T15:15:09.0330851Z <a id="common.db.refresh_mvs"></a>
2025-08-19T15:15:09.0331001Z 
2025-08-19T15:15:09.0331072Z #### refresh\_mvs
2025-08-19T15:15:09.0331177Z 
2025-08-19T15:15:09.0331236Z ```python
2025-08-19T15:15:09.0331431Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:15:09.0331671Z ```
2025-08-19T15:15:09.0331758Z 
2025-08-19T15:15:09.0331895Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:15:09.0332108Z 
2025-08-19T15:15:09.0332185Z <a id="common.config"></a>
2025-08-19T15:15:09.0332317Z 
2025-08-19T15:15:09.0332384Z # common.config
2025-08-19T15:15:09.0332484Z 
2025-08-19T15:15:09.0332562Z <a id="common.base"></a>
2025-08-19T15:15:09.0332681Z 
2025-08-19T15:15:09.0332751Z # common.base
2025-08-19T15:15:09.0332978Z 
2025-08-19T15:15:09.0333056Z <a id="common.base.Base"></a>
2025-08-19T15:15:09.0333193Z 
2025-08-19T15:15:09.0333256Z ## Base Objects
2025-08-19T15:15:09.0333359Z 
2025-08-19T15:15:09.0333418Z ```python
2025-08-19T15:15:09.0333588Z class Base(DeclarativeBase)
2025-08-19T15:15:09.0333779Z ```
2025-08-19T15:15:09.0333857Z 
2025-08-19T15:15:09.0333946Z Base class for SQLAlchemy models.
2025-08-19T15:15:09.0334094Z 
2025-08-19T15:15:09.0334164Z <a id="repricer"></a>
2025-08-19T15:15:09.0334285Z 
2025-08-19T15:15:09.0334347Z # repricer
2025-08-19T15:15:09.0334435Z 
2025-08-19T15:15:09.0334524Z <a id="repricer.app.schemas"></a>
2025-08-19T15:15:09.0334679Z 
2025-08-19T15:15:09.0334753Z # repricer.app.schemas
2025-08-19T15:15:09.0334872Z 
2025-08-19T15:15:09.0334962Z <a id="repricer.app.deps"></a>
2025-08-19T15:15:09.0335103Z 
2025-08-19T15:15:09.0335174Z # repricer.app.deps
2025-08-19T15:15:09.0335291Z 
2025-08-19T15:15:09.0335433Z Placeholder module for Keepa / SP-API clients.
2025-08-19T15:15:09.0335627Z 
2025-08-19T15:15:09.0335708Z <a id="repricer.app.logic"></a>
2025-08-19T15:15:09.0335856Z 
2025-08-19T15:15:09.0335928Z # repricer.app.logic
2025-08-19T15:15:09.0336041Z 
2025-08-19T15:15:09.0336142Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T15:15:09.0336314Z 
2025-08-19T15:15:09.0336377Z #### MIN\_MARGIN
2025-08-19T15:15:09.0336478Z 
2025-08-19T15:15:09.0336545Z 15 % ROI
2025-08-19T15:15:09.0336631Z 
2025-08-19T15:15:09.0336732Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T15:15:09.0336918Z 
2025-08-19T15:15:09.0336983Z #### compute\_price
2025-08-19T15:15:09.0337088Z 
2025-08-19T15:15:09.0337153Z ```python
2025-08-19T15:15:09.0337393Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T15:15:09.0337693Z ```
2025-08-19T15:15:09.0337774Z 
2025-08-19T15:15:09.0337878Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T15:15:09.0338159Z Replace with real competitive logic later.
2025-08-19T15:15:09.0338446Z 
2025-08-19T15:15:09.0338526Z <a id="repricer.app.main"></a>
2025-08-19T15:15:09.0338786Z 
2025-08-19T15:15:09.0338855Z # repricer.app.main
2025-08-19T15:15:09.0338962Z 
2025-08-19T15:15:09.0339043Z <a id="repricer.app"></a>
2025-08-19T15:15:09.0339170Z 
2025-08-19T15:15:09.0339235Z # repricer.app
2025-08-19T15:15:09.0339333Z 
2025-08-19T15:15:09.0339428Z <a id="repricer.tests.test_imports"></a>
2025-08-19T15:15:09.0339595Z 
2025-08-19T15:15:09.0339679Z # repricer.tests.test\_imports
2025-08-19T15:15:09.0339822Z 
2025-08-19T15:15:09.0339909Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T15:15:09.0340069Z 
2025-08-19T15:15:09.0340161Z # repricer.tests.test\_smoke
2025-08-19T15:15:09.0340299Z 
2025-08-19T15:15:09.0340375Z <a id="repricer.tests"></a>
2025-08-19T15:15:09.0340506Z 
2025-08-19T15:15:09.0340581Z # repricer.tests
2025-08-19T15:15:09.0340685Z 
2025-08-19T15:15:09.0340748Z <a id="db"></a>
2025-08-19T15:15:09.0340852Z 
2025-08-19T15:15:09.0340911Z # db
2025-08-19T15:15:09.0340994Z 
2025-08-19T15:15:09.0341075Z <a id="db.utils.views"></a>
2025-08-19T15:15:09.0341212Z 
2025-08-19T15:15:09.0341276Z # db.utils.views
2025-08-19T15:15:09.0341376Z 
2025-08-19T15:15:09.0341474Z <a id="db.utils.views.replace_view"></a>
2025-08-19T15:15:09.0341639Z 
2025-08-19T15:15:09.0341706Z #### replace\_view
2025-08-19T15:15:09.0341814Z 
2025-08-19T15:15:09.0341876Z ```python
2025-08-19T15:15:09.0342065Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T15:15:09.0342312Z ```
2025-08-19T15:15:09.0342392Z 
2025-08-19T15:15:09.0342484Z Drop and recreate a SQL view atomically.
2025-08-19T15:15:09.0342648Z 
2025-08-19T15:15:09.0342716Z <a id="db.utils"></a>
2025-08-19T15:15:09.0342832Z 
2025-08-19T15:15:09.0342900Z # db.utils
2025-08-19T15:15:09.0342987Z 
2025-08-19T15:15:09.0343061Z <a id="price_importer"></a>
2025-08-19T15:15:09.0343195Z 
2025-08-19T15:15:09.0343261Z # price\_importer
2025-08-19T15:15:09.0343366Z 
2025-08-19T15:15:09.0343465Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T15:15:09.0343656Z 
2025-08-19T15:15:09.0343745Z # price\_importer.services\_common.dsn
2025-08-19T15:15:09.0344044Z 
2025-08-19T15:15:09.0344174Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T15:15:09.0344378Z 
2025-08-19T15:15:09.0344441Z #### build\_dsn
2025-08-19T15:15:09.0344544Z 
2025-08-19T15:15:09.0344604Z ```python
2025-08-19T15:15:09.0344770Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:15:09.0344991Z ```
2025-08-19T15:15:09.0345070Z 
2025-08-19T15:15:09.0345139Z Return safe DSN.
2025-08-19T15:15:09.0345239Z 
2025-08-19T15:15:09.0345670Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T15:15:09.0345873Z 
2025-08-19T15:15:09.0346004Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T15:15:09.0346213Z 
2025-08-19T15:15:09.0346321Z # price\_importer.services\_common.models\_vendor
2025-08-19T15:15:09.0346516Z 
2025-08-19T15:15:09.0346623Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T15:15:09.0346807Z 
2025-08-19T15:15:09.0346915Z # price\_importer.services\_common.db\_url
2025-08-19T15:15:09.0347091Z 
2025-08-19T15:15:09.0347222Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T15:15:09.0347433Z 
2025-08-19T15:15:09.0347503Z #### build\_url
2025-08-19T15:15:09.0347601Z 
2025-08-19T15:15:09.0347661Z ```python
2025-08-19T15:15:09.0347837Z def build_url(async_: bool = True) -> str
2025-08-19T15:15:09.0348057Z ```
2025-08-19T15:15:09.0348141Z 
2025-08-19T15:15:09.0348234Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:15:09.0348405Z 
2025-08-19T15:15:09.0348513Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T15:15:09.0348808Z 
2025-08-19T15:15:09.0348899Z # price\_importer.services\_common.keepa
2025-08-19T15:15:09.0349075Z 
2025-08-19T15:15:09.0349172Z <a id="price_importer.services_common.llm"></a>
2025-08-19T15:15:09.0349349Z 
2025-08-19T15:15:09.0349436Z # price\_importer.services\_common.llm
2025-08-19T15:15:09.0349599Z 
2025-08-19T15:15:09.0349711Z <a id="price_importer.services_common.settings"></a>
2025-08-19T15:15:09.0350056Z 
2025-08-19T15:15:09.0350157Z # price\_importer.services\_common.settings
2025-08-19T15:15:09.0350328Z 
2025-08-19T15:15:09.0350427Z <a id="price_importer.services_common.db"></a>
2025-08-19T15:15:09.0350609Z 
2025-08-19T15:15:09.0350701Z # price\_importer.services\_common.db
2025-08-19T15:15:09.0350858Z 
2025-08-19T15:15:09.0351011Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T15:15:09.0351257Z 
2025-08-19T15:15:09.0351333Z #### build\_sqlalchemy\_url
2025-08-19T15:15:09.0351464Z 
2025-08-19T15:15:09.0351534Z ```python
2025-08-19T15:15:09.0351705Z def build_sqlalchemy_url() -> str
2025-08-19T15:15:09.0351916Z ```
2025-08-19T15:15:09.0351998Z 
2025-08-19T15:15:09.0352091Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:15:09.0352268Z 
2025-08-19T15:15:09.0352412Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T15:15:09.0352639Z 
2025-08-19T15:15:09.0352719Z #### build\_asyncpg\_dsn
2025-08-19T15:15:09.0352849Z 
2025-08-19T15:15:09.0352916Z ```python
2025-08-19T15:15:09.0353086Z def build_asyncpg_dsn() -> str
2025-08-19T15:15:09.0353280Z ```
2025-08-19T15:15:09.0353370Z 
2025-08-19T15:15:09.0353497Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:15:09.0353703Z 
2025-08-19T15:15:09.0353831Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T15:15:09.0354044Z 
2025-08-19T15:15:09.0354108Z #### refresh\_mvs
2025-08-19T15:15:09.0354214Z 
2025-08-19T15:15:09.0354282Z ```python
2025-08-19T15:15:09.0354469Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:15:09.0354715Z ```
2025-08-19T15:15:09.0354793Z 
2025-08-19T15:15:09.0354925Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:15:09.0355146Z 
2025-08-19T15:15:09.0355239Z <a id="price_importer.services_common"></a>
2025-08-19T15:15:09.0355409Z 
2025-08-19T15:15:09.0355500Z # price\_importer.services\_common
2025-08-19T15:15:09.0355650Z 
2025-08-19T15:15:09.0355751Z <a id="price_importer.services_common.base"></a>
2025-08-19T15:15:09.0356057Z 
2025-08-19T15:15:09.0356151Z # price\_importer.services\_common.base
2025-08-19T15:15:09.0356311Z 
2025-08-19T15:15:09.0356399Z <a id="price_importer.normaliser"></a>
2025-08-19T15:15:09.0356563Z 
2025-08-19T15:15:09.0356644Z # price\_importer.normaliser
2025-08-19T15:15:09.0356780Z 
2025-08-19T15:15:09.0356889Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T15:15:09.0357071Z 
2025-08-19T15:15:09.0357161Z # price\_importer.common.models\_vendor
2025-08-19T15:15:09.0357323Z 
2025-08-19T15:15:09.0357418Z <a id="price_importer.common.db_url"></a>
2025-08-19T15:15:09.0357587Z 
2025-08-19T15:15:09.0357671Z # price\_importer.common.db\_url
2025-08-19T15:15:09.0357820Z 
2025-08-19T15:15:09.0357923Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T15:15:09.0358105Z 
2025-08-19T15:15:09.0358804Z #### make\_dsn
2025-08-19T15:15:09.0358997Z 
2025-08-19T15:15:09.0359116Z ```python
2025-08-19T15:15:09.0359315Z def make_dsn(async_: bool = False) -> str
2025-08-19T15:15:09.0359630Z ```
2025-08-19T15:15:09.0359724Z 
2025-08-19T15:15:09.0359845Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T15:15:09.0360047Z 
2025-08-19T15:15:09.0360160Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T15:15:09.0360359Z 
2025-08-19T15:15:09.0360422Z #### build\_url
2025-08-19T15:15:09.0360522Z 
2025-08-19T15:15:09.0360588Z ```python
2025-08-19T15:15:09.0360759Z def build_url(async_: bool = False) -> str
2025-08-19T15:15:09.0360987Z ```
2025-08-19T15:15:09.0361068Z 
2025-08-19T15:15:09.0361186Z Return Postgres DSN built from environment variables.
2025-08-19T15:15:09.0361392Z 
2025-08-19T15:15:09.0361478Z <a id="price_importer.common"></a>
2025-08-19T15:15:09.0361632Z 
2025-08-19T15:15:09.0361710Z # price\_importer.common
2025-08-19T15:15:09.0361847Z 
2025-08-19T15:15:09.0361939Z <a id="price_importer.common.base"></a>
2025-08-19T15:15:09.0362104Z 
2025-08-19T15:15:09.0362195Z # price\_importer.common.base
2025-08-19T15:15:09.0362487Z 
2025-08-19T15:15:09.0362589Z <a id="price_importer.tests.conftest"></a>
2025-08-19T15:15:09.0362772Z 
2025-08-19T15:15:09.0362857Z # price\_importer.tests.conftest
2025-08-19T15:15:09.0363004Z 
2025-08-19T15:15:09.0363101Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T15:15:09.0363285Z 
2025-08-19T15:15:09.0363370Z # price\_importer.tests.test\_reader
2025-08-19T15:15:09.0363526Z 
2025-08-19T15:15:09.0363631Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T15:15:09.0363806Z 
2025-08-19T15:15:09.0363892Z # price\_importer.tests.test\_imports
2025-08-19T15:15:09.0364058Z 
2025-08-19T15:15:09.0364152Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T15:15:09.0364320Z 
2025-08-19T15:15:09.0364404Z # price\_importer.tests.test\_smoke
2025-08-19T15:15:09.0364569Z 
2025-08-19T15:15:09.0364672Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T15:15:09.0364887Z 
2025-08-19T15:15:09.0364988Z # price\_importer.tests.test\_normaliser
2025-08-19T15:15:09.0365154Z 
2025-08-19T15:15:09.0365245Z <a id="price_importer.tests"></a>
2025-08-19T15:15:09.0365406Z 
2025-08-19T15:15:09.0365480Z # price\_importer.tests
2025-08-19T15:15:09.0365600Z 
2025-08-19T15:15:09.0365683Z <a id="price_importer.reader"></a>
2025-08-19T15:15:09.0365838Z 
2025-08-19T15:15:09.0365914Z # price\_importer.reader
2025-08-19T15:15:09.0366041Z 
2025-08-19T15:15:09.0366137Z <a id="price_importer.repository"></a>
2025-08-19T15:15:09.0366298Z 
2025-08-19T15:15:09.0366378Z # price\_importer.repository
2025-08-19T15:15:09.0366522Z 
2025-08-19T15:15:09.0366604Z <a id="price_importer.import"></a>
2025-08-19T15:15:09.0366750Z 
2025-08-19T15:15:09.0366826Z # price\_importer.import
2025-08-19T15:15:09.0366955Z 
2025-08-19T15:15:09.0367025Z <a id="fees_h10"></a>
2025-08-19T15:15:09.0367136Z 
2025-08-19T15:15:09.0367204Z # fees\_h10
2025-08-19T15:15:09.0367293Z 
2025-08-19T15:15:09.0367366Z <a id="fees_h10.worker"></a>
2025-08-19T15:15:09.0367499Z 
2025-08-19T15:15:09.0367564Z # fees\_h10.worker
2025-08-19T15:15:09.0367673Z 
2025-08-19T15:15:09.0367894Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T15:15:09.0368073Z 
2025-08-19T15:15:09.0368144Z #### list\_active\_asins
2025-08-19T15:15:09.0368262Z 
2025-08-19T15:15:09.0368330Z ```python
2025-08-19T15:15:09.0368492Z def list_active_asins() -> list[str]
2025-08-19T15:15:09.0368834Z ```
2025-08-19T15:15:09.0368915Z 
2025-08-19T15:15:09.0369026Z Return known ASINs or an empty list if unavailable.
2025-08-19T15:15:09.0369223Z 
2025-08-19T15:15:09.0369304Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T15:15:09.0369459Z 
2025-08-19T15:15:09.0369539Z # fees\_h10.tests.test\_smoke
2025-08-19T15:15:09.0369683Z 
2025-08-19T15:15:09.0369757Z <a id="fees_h10.tests"></a>
2025-08-19T15:15:09.0369886Z 
2025-08-19T15:15:09.0369956Z # fees\_h10.tests
2025-08-19T15:15:09.0370057Z 
2025-08-19T15:15:09.0370131Z <a id="fees_h10.client"></a>
2025-08-19T15:15:09.0370266Z 
2025-08-19T15:15:09.0370330Z # fees\_h10.client
2025-08-19T15:15:09.0370432Z 
2025-08-19T15:15:09.0370516Z <a id="fees_h10.repository"></a>
2025-08-19T15:15:09.0370673Z 
2025-08-19T15:15:09.0370743Z # fees\_h10.repository
2025-08-19T15:15:09.0370857Z 
2025-08-19T15:15:09.0370932Z <a id="emailer"></a>
2025-08-19T15:15:09.0371042Z 
2025-08-19T15:15:09.0371105Z # emailer
2025-08-19T15:15:09.0371191Z 
2025-08-19T15:15:09.0371295Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T15:15:09.0371473Z 
2025-08-19T15:15:09.0371559Z # emailer.tests.test\_import\_emailer
2025-08-19T15:15:09.0371724Z 
2025-08-19T15:15:09.0371808Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T15:15:09.0371963Z 
2025-08-19T15:15:09.0372082Z # emailer.tests.test\_smoke
2025-08-19T15:15:09.0372220Z 
2025-08-19T15:15:09.0372306Z <a id="emailer.tests"></a>
2025-08-19T15:15:09.0372439Z 
2025-08-19T15:15:09.0372510Z # emailer.tests
2025-08-19T15:15:09.0372619Z 
2025-08-19T15:15:09.0372713Z <a id="emailer.generate_body"></a>
2025-08-19T15:15:09.0372862Z 
2025-08-19T15:15:09.0372944Z # emailer.generate\_body
2025-08-19T15:15:09.0373068Z 
2025-08-19T15:15:09.0373263Z <a id="llm_server"></a>
2025-08-19T15:15:09.0373389Z 
2025-08-19T15:15:09.0373458Z # llm\_server
2025-08-19T15:15:09.0373554Z 
2025-08-19T15:15:09.0373631Z <a id="llm_server.app"></a>
2025-08-19T15:15:09.0373765Z 
2025-08-19T15:15:09.0373832Z # llm\_server.app
2025-08-19T15:15:09.0373935Z 
