2025-08-19T21:40:54.5739693Z ##[group]Run pydoc-markdown
2025-08-19T21:40:54.5740008Z [36;1mpydoc-markdown[0m
2025-08-19T21:40:54.5780384Z shell: /usr/bin/bash -e {0}
2025-08-19T21:40:54.5780616Z env:
2025-08-19T21:40:54.5780861Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:40:54.5781267Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T21:40:54.5781649Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:40:54.5781984Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:40:54.5782317Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:40:54.5782653Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T21:40:54.5782932Z ##[endgroup]
2025-08-19T21:40:54.9023497Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T21:40:54.9024640Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T21:40:54.9025229Z In "pydoc-markdown.yml"
2025-08-19T21:40:54.9025585Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T21:40:54.9026091Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T21:40:54.9026618Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T21:40:54.9028092Z 
2025-08-19T21:40:55.2499098Z <a id="__init__"></a>
2025-08-19T21:40:55.2499396Z 
2025-08-19T21:40:55.2499521Z # \_\_init\_\_
2025-08-19T21:40:55.2499716Z 
2025-08-19T21:40:55.2499852Z <a id="api"></a>
2025-08-19T21:40:55.2500049Z 
2025-08-19T21:40:55.2500160Z # api
2025-08-19T21:40:55.2500328Z 
2025-08-19T21:40:55.2500466Z <a id="api.errors"></a>
2025-08-19T21:40:55.2500701Z 
2025-08-19T21:40:55.2500832Z # api.errors
2025-08-19T21:40:55.2501128Z 
2025-08-19T21:40:55.2501288Z <a id="api.sentry_config"></a>
2025-08-19T21:40:55.2501602Z 
2025-08-19T21:40:55.2501750Z # api.sentry\_config
2025-08-19T21:40:55.2501966Z 
2025-08-19T21:40:55.2502144Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T21:40:55.2502489Z 
2025-08-19T21:40:55.2502648Z # api.tests.test\_stats\_contracts
2025-08-19T21:40:55.2502971Z 
2025-08-19T21:40:55.2503144Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T21:40:55.2503450Z 
2025-08-19T21:40:55.2503601Z # api.tests.test\_sentry\_scrub
2025-08-19T21:40:55.2503901Z 
2025-08-19T21:40:55.2504081Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T21:40:55.2504398Z 
2025-08-19T21:40:55.2504550Z # api.tests.test\_roi\_basic\_auth
2025-08-19T21:40:55.2504845Z 
2025-08-19T21:40:55.2505013Z <a id="api.tests.test_errors_json"></a>
2025-08-19T21:40:55.2505324Z 
2025-08-19T21:40:55.2505476Z # api.tests.test\_errors\_json
2025-08-19T21:40:55.2505740Z 
2025-08-19T21:40:55.2505886Z <a id="api.tests.test_llm"></a>
2025-08-19T21:40:55.2506146Z 
2025-08-19T21:40:55.2506286Z # api.tests.test\_llm
2025-08-19T21:40:55.2506507Z 
2025-08-19T21:40:55.2506668Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T21:40:55.2507175Z 
2025-08-19T21:40:55.2507329Z # api.tests.test\_roi\_filters
2025-08-19T21:40:55.2507585Z 
2025-08-19T21:40:55.2507755Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T21:40:55.2508519Z 
2025-08-19T21:40:55.2508680Z # api.tests.test\_sentry\_event
2025-08-19T21:40:55.2508955Z 
2025-08-19T21:40:55.2509193Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T21:40:55.2509588Z 
2025-08-19T21:40:55.2509735Z ## DummyTransport Objects
2025-08-19T21:40:55.2509987Z 
2025-08-19T21:40:55.2510105Z ```python
2025-08-19T21:40:55.2510409Z class DummyTransport()
2025-08-19T21:40:55.2510743Z ```
2025-08-19T21:40:55.2510894Z 
2025-08-19T21:40:55.2511221Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T21:40:55.2511707Z 
2025-08-19T21:40:55.2511841Z #### capture\_envelope
2025-08-19T21:40:55.2512070Z 
2025-08-19T21:40:55.2512186Z ```python
2025-08-19T21:40:55.2512500Z def capture_envelope(envelope)
2025-08-19T21:40:55.2512875Z ```
2025-08-19T21:40:55.2513025Z 
2025-08-19T21:40:55.2513256Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T21:40:55.2513663Z 
2025-08-19T21:40:55.2513820Z <a id="api.tests.test_cors"></a>
2025-08-19T21:40:55.2514461Z 
2025-08-19T21:40:55.2514606Z # api.tests.test\_cors
2025-08-19T21:40:55.2514833Z 
2025-08-19T21:40:55.2514991Z <a id="api.tests.test_imports"></a>
2025-08-19T21:40:55.2515296Z 
2025-08-19T21:40:55.2515435Z # api.tests.test\_imports
2025-08-19T21:40:55.2515677Z 
2025-08-19T21:40:55.2515831Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T21:40:55.2516148Z 
2025-08-19T21:40:55.2516295Z # api.tests.test\_rate\_limit
2025-08-19T21:40:55.2516556Z 
2025-08-19T21:40:55.2516917Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T21:40:55.2517253Z 
2025-08-19T21:40:55.2517369Z #### app
2025-08-19T21:40:55.2517541Z 
2025-08-19T21:40:55.2517657Z noqa: E402
2025-08-19T21:40:55.2517822Z 
2025-08-19T21:40:55.2517987Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T21:40:55.2518296Z 
2025-08-19T21:40:55.2518444Z # api.tests.test\_entrypoint
2025-08-19T21:40:55.2518711Z 
2025-08-19T21:40:55.2518871Z <a id="api.tests.test_health"></a>
2025-08-19T21:40:55.2519168Z 
2025-08-19T21:40:55.2519325Z # api.tests.test\_health
2025-08-19T21:40:55.2519566Z 
2025-08-19T21:40:55.2519731Z <a id="api.tests.test_score"></a>
2025-08-19T21:40:55.2520015Z 
2025-08-19T21:40:55.2520155Z # api.tests.test\_score
2025-08-19T21:40:55.2520389Z 
2025-08-19T21:40:55.2520535Z <a id="api.logging_config"></a>
2025-08-19T21:40:55.2520798Z 
2025-08-19T21:40:55.2520936Z # api.logging\_config
2025-08-19T21:40:55.2521157Z 
2025-08-19T21:40:55.2521306Z <a id="api.migrations.env"></a>
2025-08-19T21:40:55.2521571Z 
2025-08-19T21:40:55.2521720Z # api.migrations.env
2025-08-19T21:40:55.2521938Z 
2025-08-19T21:40:55.2522152Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T21:40:55.2522538Z 
2025-08-19T21:40:55.2522734Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T21:40:55.2523078Z 
2025-08-19T21:40:55.2523282Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T21:40:55.2523635Z 
2025-08-19T21:40:55.2523806Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T21:40:55.2524142Z 
2025-08-19T21:40:55.2524436Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T21:40:55.2524879Z 
2025-08-19T21:40:55.2525134Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T21:40:55.2525546Z 
2025-08-19T21:40:55.2525773Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T21:40:55.2526146Z 
2025-08-19T21:40:55.2526348Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T21:40:55.2526690Z 
2025-08-19T21:40:55.2527155Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T21:40:55.2527543Z 
2025-08-19T21:40:55.2527742Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T21:40:55.2528094Z 
2025-08-19T21:40:55.2528332Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T21:40:55.2528739Z 
2025-08-19T21:40:55.2528950Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T21:40:55.2529312Z 
2025-08-19T21:40:55.2529546Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T21:40:55.2530202Z 
2025-08-19T21:40:55.2530417Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T21:40:55.2530824Z 
2025-08-19T21:40:55.2531055Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T21:40:55.2531442Z 
2025-08-19T21:40:55.2531654Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T21:40:55.2532004Z 
2025-08-19T21:40:55.2532261Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T21:40:55.2532679Z 
2025-08-19T21:40:55.2532905Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T21:40:55.2533285Z 
2025-08-19T21:40:55.2533526Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T21:40:55.2533916Z 
2025-08-19T21:40:55.2534122Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T21:40:55.2534499Z 
2025-08-19T21:40:55.2534761Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T21:40:55.2535175Z 
2025-08-19T21:40:55.2535393Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T21:40:55.2536103Z 
2025-08-19T21:40:55.2536315Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T21:40:55.2536675Z 
2025-08-19T21:40:55.2537069Z # api.migrations.versions.0001\_baseline
2025-08-19T21:40:55.2537394Z 
2025-08-19T21:40:55.2537558Z <a id="api.migrations.versions"></a>
2025-08-19T21:40:55.2537870Z 
2025-08-19T21:40:55.2538021Z # api.migrations.versions
2025-08-19T21:40:55.2538268Z 
2025-08-19T21:40:55.2538413Z <a id="api.migrations"></a>
2025-08-19T21:40:55.2538671Z 
2025-08-19T21:40:55.2538795Z # api.migrations
2025-08-19T21:40:55.2539008Z 
2025-08-19T21:40:55.2539141Z <a id="api.db"></a>
2025-08-19T21:40:55.2539343Z 
2025-08-19T21:40:55.2539457Z # api.db
2025-08-19T21:40:55.2539629Z 
2025-08-19T21:40:55.2539779Z <a id="api.routes.score"></a>
2025-08-19T21:40:55.2540046Z 
2025-08-19T21:40:55.2540180Z # api.routes.score
2025-08-19T21:40:55.2540406Z 
2025-08-19T21:40:55.2540559Z <a id="api.routes.stats"></a>
2025-08-19T21:40:55.2540828Z 
2025-08-19T21:40:55.2540964Z # api.routes.stats
2025-08-19T21:40:55.2541183Z 
2025-08-19T21:40:55.2541328Z <a id="api.routes.roi"></a>
2025-08-19T21:40:55.2541573Z 
2025-08-19T21:40:55.2541703Z # api.routes.roi
2025-08-19T21:40:55.2541902Z 
2025-08-19T21:40:55.2542050Z <a id="api.routes.health"></a>
2025-08-19T21:40:55.2542321Z 
2025-08-19T21:40:55.2542450Z # api.routes.health
2025-08-19T21:40:55.2542657Z 
2025-08-19T21:40:55.2542823Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T21:40:55.2543144Z 
2025-08-19T21:40:55.2543260Z #### MAX\_SKEW
2025-08-19T21:40:55.2543443Z 
2025-08-19T21:40:55.2543567Z seconds
2025-08-19T21:40:55.2543725Z 
2025-08-19T21:40:55.2543887Z <a id="api.routes.health.health"></a>
2025-08-19T21:40:55.2544199Z 
2025-08-19T21:40:55.2544314Z #### health
2025-08-19T21:40:55.2544488Z 
2025-08-19T21:40:55.2544603Z ```python
2025-08-19T21:40:55.2544969Z @router.get("/health", include_in_schema=False)
2025-08-19T21:40:55.2545744Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T21:40:55.2546370Z ```
2025-08-19T21:40:55.2546536Z 
2025-08-19T21:40:55.2546922Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T21:40:55.2547298Z 
2025-08-19T21:40:55.2547466Z <a id="api.routes.repository"></a>
2025-08-19T21:40:55.2547769Z 
2025-08-19T21:40:55.2547912Z # api.routes.repository
2025-08-19T21:40:55.2548144Z 
2025-08-19T21:40:55.2548277Z <a id="api.routes"></a>
2025-08-19T21:40:55.2548507Z 
2025-08-19T21:40:55.2548627Z # api.routes
2025-08-19T21:40:55.2548810Z 
2025-08-19T21:40:55.2548963Z <a id="api.models.fee"></a>
2025-08-19T21:40:55.2549217Z 
2025-08-19T21:40:55.2549346Z # api.models.fee
2025-08-19T21:40:55.2549552Z 
2025-08-19T21:40:55.2549686Z <a id="api.models"></a>
2025-08-19T21:40:55.2549911Z 
2025-08-19T21:40:55.2550030Z # api.models
2025-08-19T21:40:55.2550215Z 
2025-08-19T21:40:55.2550363Z <a id="api.roi_repository"></a>
2025-08-19T21:40:55.2550629Z 
2025-08-19T21:40:55.2550772Z # api.roi\_repository
2025-08-19T21:40:55.2550987Z 
2025-08-19T21:40:55.2551114Z <a id="api.main"></a>
2025-08-19T21:40:55.2551588Z 
2025-08-19T21:40:55.2551705Z # api.main
2025-08-19T21:40:55.2551874Z 
2025-08-19T21:40:55.2552016Z <a id="api.main.ready"></a>
2025-08-19T21:40:55.2552272Z 
2025-08-19T21:40:55.2552386Z #### ready
2025-08-19T21:40:55.2552555Z 
2025-08-19T21:40:55.2552677Z ```python
2025-08-19T21:40:55.2553151Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T21:40:55.2553967Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T21:40:55.2554627Z                                                                       str]
2025-08-19T21:40:55.2555055Z ```
2025-08-19T21:40:55.2555199Z 
2025-08-19T21:40:55.2555370Z Return 200 only when migrations are at head.
2025-08-19T21:40:55.2555682Z 
2025-08-19T21:40:55.2555810Z <a id="api.config"></a>
2025-08-19T21:40:55.2556018Z 
2025-08-19T21:40:55.2556147Z # api.config
2025-08-19T21:40:55.2556327Z 
2025-08-19T21:40:55.2556464Z <a id="api.security"></a>
2025-08-19T21:40:55.2556879Z 
2025-08-19T21:40:55.2557257Z # api.security
2025-08-19T21:40:55.2557454Z 
2025-08-19T21:40:55.2557577Z <a id="etl"></a>
2025-08-19T21:40:55.2557782Z 
2025-08-19T21:40:55.2557891Z # etl
2025-08-19T21:40:55.2558052Z 
2025-08-19T21:40:55.2558203Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T21:40:55.2558493Z 
2025-08-19T21:40:55.2558627Z # etl.fba\_fee\_ingestor
2025-08-19T21:40:55.2558863Z 
2025-08-19T21:40:55.2559023Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T21:40:55.2559300Z 
2025-08-19T21:40:55.2559434Z # etl.sp\_fees\_ingestor
2025-08-19T21:40:55.2559676Z 
2025-08-19T21:40:55.2559819Z <a id="etl.keepa_ingestor"></a>
2025-08-19T21:40:55.2560084Z 
2025-08-19T21:40:55.2560216Z # etl.keepa\_ingestor
2025-08-19T21:40:55.2560440Z 
2025-08-19T21:40:55.2560561Z <a id="etl.db"></a>
2025-08-19T21:40:55.2560760Z 
2025-08-19T21:40:55.2560881Z # etl.db
2025-08-19T21:40:55.2561042Z 
2025-08-19T21:40:55.2561195Z <a id="etl.dialects.schemas"></a>
2025-08-19T21:40:55.2561473Z 
2025-08-19T21:40:55.2561606Z # etl.dialects.schemas
2025-08-19T21:40:55.2561851Z 
2025-08-19T21:40:55.2562045Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T21:40:55.2562390Z 
2025-08-19T21:40:55.2562559Z # etl.dialects.amazon\_reimbursements
2025-08-19T21:40:55.2562860Z 
2025-08-19T21:40:55.2563044Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T21:40:55.2563370Z 
2025-08-19T21:40:55.2563535Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T21:40:55.2563825Z 
2025-08-19T21:40:55.2563988Z <a id="etl.dialects.test_generic"></a>
2025-08-19T21:40:55.2564303Z 
2025-08-19T21:40:55.2564451Z # etl.dialects.test\_generic
2025-08-19T21:40:55.2564707Z 
2025-08-19T21:40:55.2564880Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T21:40:55.2565192Z 
2025-08-19T21:40:55.2565346Z # etl.dialects.amazon\_returns
2025-08-19T21:40:55.2565608Z 
2025-08-19T21:40:55.2565797Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T21:40:55.2566123Z 
2025-08-19T21:40:55.2566281Z # etl.dialects.amazon\_fee\_preview
2025-08-19T21:40:55.2566578Z 
2025-08-19T21:40:55.2566942Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T21:40:55.2567311Z 
2025-08-19T21:40:55.2567490Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T21:40:55.2567805Z 
2025-08-19T21:40:55.2567990Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T21:40:55.2568466Z 
2025-08-19T21:40:55.2568650Z # etl.dialects.amazon\_settlements
2025-08-19T21:40:55.2568950Z 
2025-08-19T21:40:55.2569091Z <a id="etl.dialects"></a>
2025-08-19T21:40:55.2569338Z 
2025-08-19T21:40:55.2569461Z # etl.dialects
2025-08-19T21:40:55.2569649Z 
2025-08-19T21:40:55.2569773Z <a id="ingest"></a>
2025-08-19T21:40:55.2569983Z 
2025-08-19T21:40:55.2570095Z # ingest
2025-08-19T21:40:55.2570256Z 
2025-08-19T21:40:55.2570418Z <a id="ingest.maintenance"></a>
2025-08-19T21:40:55.2570681Z 
2025-08-19T21:40:55.2570813Z # ingest.maintenance
2025-08-19T21:40:55.2571034Z 
2025-08-19T21:40:55.2571180Z <a id="ingest.copy_loader"></a>
2025-08-19T21:40:55.2571441Z 
2025-08-19T21:40:55.2571572Z # ingest.copy\_loader
2025-08-19T21:40:55.2571808Z 
2025-08-19T21:40:55.2572220Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T21:40:55.2572571Z 
2025-08-19T21:40:55.2572713Z #### copy\_df\_via\_temp
2025-08-19T21:40:55.2572939Z 
2025-08-19T21:40:55.2573054Z ```python
2025-08-19T21:40:55.2573373Z def copy_df_via_temp(engine: Engine,
2025-08-19T21:40:55.2573802Z                      df: pd.DataFrame,
2025-08-19T21:40:55.2574234Z                      target_table: str,
2025-08-19T21:40:55.2574634Z                      *,
2025-08-19T21:40:55.2575017Z                      target_schema: Optional[str] = None,
2025-08-19T21:40:55.2575499Z                      columns: Sequence[str],
2025-08-19T21:40:55.2576003Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T21:40:55.2576523Z                      analyze_after: bool = False,
2025-08-19T21:40:55.2577210Z                      connection: Any | None = None) -> int
2025-08-19T21:40:55.2577647Z ```
2025-08-19T21:40:55.2577804Z 
2025-08-19T21:40:55.2578091Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T21:40:55.2578765Z 
2025-08-19T21:40:55.2578935Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T21:40:55.2579233Z 
2025-08-19T21:40:55.2579388Z # ingest.tests.test\_smoke
2025-08-19T21:40:55.2579637Z 
2025-08-19T21:40:55.2579775Z <a id="ingest.tests"></a>
2025-08-19T21:40:55.2580018Z 
2025-08-19T21:40:55.2580141Z # ingest.tests
2025-08-19T21:40:55.2580329Z 
2025-08-19T21:40:55.2580485Z <a id="ingest.upload_router"></a>
2025-08-19T21:40:55.2580776Z 
2025-08-19T21:40:55.2580916Z # ingest.upload\_router
2025-08-19T21:40:55.2581141Z 
2025-08-19T21:40:55.2581301Z <a id="ingest.email_watcher"></a>
2025-08-19T21:40:55.2581573Z 
2025-08-19T21:40:55.2581704Z # ingest.email\_watcher
2025-08-19T21:40:55.2581926Z 
2025-08-19T21:40:55.2582098Z <a id="ingest.email_watcher.main"></a>
2025-08-19T21:40:55.2582402Z 
2025-08-19T21:40:55.2582516Z #### main
2025-08-19T21:40:55.2582684Z 
2025-08-19T21:40:55.2582797Z ```python
2025-08-19T21:40:55.2583096Z def main() -> dict[str, str]
2025-08-19T21:40:55.2583473Z ```
2025-08-19T21:40:55.2583625Z 
2025-08-19T21:40:55.2583895Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T21:40:55.2584320Z 
2025-08-19T21:40:55.2584560Z Returns {"status": "success"} when processing completes.
2025-08-19T21:40:55.2584958Z 
2025-08-19T21:40:55.2585099Z <a id="ingest.tasks"></a>
2025-08-19T21:40:55.2585338Z 
2025-08-19T21:40:55.2585460Z # ingest.tasks
2025-08-19T21:40:55.2585650Z 
2025-08-19T21:40:55.2585832Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T21:40:55.2586165Z 
2025-08-19T21:40:55.2586306Z #### task\_import\_file
2025-08-19T21:40:55.2586521Z 
2025-08-19T21:40:55.2586637Z ```python
2025-08-19T21:40:55.2587208Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T21:40:55.2587825Z def task_import_file(self: Any,
2025-08-19T21:40:55.2588226Z                      uri: str,
2025-08-19T21:40:55.2588640Z                      report_type: str | None = None,
2025-08-19T21:40:55.2589134Z                      force: bool = False) -> dict[str, Any]
2025-08-19T21:40:55.2589596Z ```
2025-08-19T21:40:55.2589751Z 
2025-08-19T21:40:55.2590010Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T21:40:55.2590406Z 
2025-08-19T21:40:55.2590559Z <a id="ingest.celery_app"></a>
2025-08-19T21:40:55.2590830Z 
2025-08-19T21:40:55.2590964Z # ingest.celery\_app
2025-08-19T21:40:55.2591175Z 
2025-08-19T21:40:55.2591327Z <a id="ingest.ingest_router"></a>
2025-08-19T21:40:55.2591614Z 
2025-08-19T21:40:55.2591751Z # ingest.ingest\_router
2025-08-19T21:40:55.2591970Z 
2025-08-19T21:40:55.2592116Z <a id="logistics_etl"></a>
2025-08-19T21:40:55.2592356Z 
2025-08-19T21:40:55.2592478Z # logistics\_etl
2025-08-19T21:40:55.2592676Z 
2025-08-19T21:40:55.2592821Z Daily logistics ETL job.
2025-08-19T21:40:55.2593053Z 
2025-08-19T21:40:55.2593204Z <a id="logistics_etl.__main__"></a>
2025-08-19T21:40:55.2593496Z 
2025-08-19T21:40:55.2593636Z # logistics\_etl.\_\_main\_\_
2025-08-19T21:40:55.2593891Z 
2025-08-19T21:40:55.2594402Z <a id="logistics_etl.dsn"></a>
2025-08-19T21:40:55.2594674Z 
2025-08-19T21:40:55.2594802Z # logistics\_etl.dsn
2025-08-19T21:40:55.2595011Z 
2025-08-19T21:40:55.2595238Z Local DSN builder to avoid cross-service dependency.
2025-08-19T21:40:55.2595613Z 
2025-08-19T21:40:55.2595785Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T21:40:55.2596109Z 
2025-08-19T21:40:55.2596226Z #### build\_dsn
2025-08-19T21:40:55.2596419Z 
2025-08-19T21:40:55.2596545Z ```python
2025-08-19T21:40:55.2597047Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:40:55.2597471Z ```
2025-08-19T21:40:55.2597629Z 
2025-08-19T21:40:55.2597894Z Return a Postgres DSN assembled from environment variables.
2025-08-19T21:40:55.2598316Z 
2025-08-19T21:40:55.2598595Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T21:40:55.2599328Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T21:40:55.2599981Z error when any required variable is missing.
2025-08-19T21:40:55.2600313Z 
2025-08-19T21:40:55.2600915Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T21:40:55.2601246Z 
2025-08-19T21:40:55.2601398Z # logistics\_etl.tests.conftest
2025-08-19T21:40:55.2601669Z 
2025-08-19T21:40:55.2601874Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T21:40:55.2602227Z 
2025-08-19T21:40:55.2602391Z # logistics\_etl.tests.test\_repository
2025-08-19T21:40:55.2602712Z 
2025-08-19T21:40:55.2602890Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T21:40:55.2603216Z 
2025-08-19T21:40:55.2603384Z # logistics\_etl.tests.test\_cron
2025-08-19T21:40:55.2603671Z 
2025-08-19T21:40:55.2603854Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T21:40:55.2604188Z 
2025-08-19T21:40:55.2604354Z # logistics\_etl.tests.test\_imports
2025-08-19T21:40:55.2604649Z 
2025-08-19T21:40:55.2604824Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T21:40:55.2605152Z 
2025-08-19T21:40:55.2605306Z # logistics\_etl.tests.test\_smoke
2025-08-19T21:40:55.2605586Z 
2025-08-19T21:40:55.2605771Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T21:40:55.2606119Z 
2025-08-19T21:40:55.2606272Z # logistics\_etl.tests.test\_client
2025-08-19T21:40:55.2606559Z 
2025-08-19T21:40:55.2606887Z <a id="logistics_etl.tests"></a>
2025-08-19T21:40:55.2607176Z 
2025-08-19T21:40:55.2607312Z # logistics\_etl.tests
2025-08-19T21:40:55.2607537Z 
2025-08-19T21:40:55.2607687Z <a id="logistics_etl.flow"></a>
2025-08-19T21:40:55.2607948Z 
2025-08-19T21:40:55.2608087Z # logistics\_etl.flow
2025-08-19T21:40:55.2608305Z 
2025-08-19T21:40:55.2608460Z <a id="logistics_etl.client"></a>
2025-08-19T21:40:55.2608744Z 
2025-08-19T21:40:55.2608894Z # logistics\_etl.client
2025-08-19T21:40:55.2609122Z 
2025-08-19T21:40:55.2609266Z <a id="logistics_etl.cron"></a>
2025-08-19T21:40:55.2609533Z 
2025-08-19T21:40:55.2609661Z # logistics\_etl.cron
2025-08-19T21:40:55.2609874Z 
2025-08-19T21:40:55.2610022Z <a id="logistics_etl.db"></a>
2025-08-19T21:40:55.2610279Z 
2025-08-19T21:40:55.2610404Z # logistics\_etl.db
2025-08-19T21:40:55.2610619Z 
2025-08-19T21:40:55.2610798Z <a id="logistics_etl.repository"></a>
2025-08-19T21:40:55.2611102Z 
2025-08-19T21:40:55.2662721Z # logistics\_etl.repository
2025-08-19T21:40:55.2663059Z 
2025-08-19T21:40:55.2663179Z <a id="alert_bot"></a>
2025-08-19T21:40:55.2663383Z 
2025-08-19T21:40:55.2663485Z # alert\_bot
2025-08-19T21:40:55.2663635Z 
2025-08-19T21:40:55.2663793Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T21:40:55.2664072Z 
2025-08-19T21:40:55.2664197Z # alert\_bot.tests.test\_smoke
2025-08-19T21:40:55.2664430Z 
2025-08-19T21:40:55.2664552Z <a id="alert_bot.tests"></a>
2025-08-19T21:40:55.2664764Z 
2025-08-19T21:40:55.2664882Z # alert\_bot.tests
2025-08-19T21:40:55.2665048Z 
2025-08-19T21:40:55.2665167Z <a id="alert_bot.alert_bot"></a>
2025-08-19T21:40:55.2665393Z 
2025-08-19T21:40:55.2665500Z # alert\_bot.alert\_bot
2025-08-19T21:40:55.2665686Z 
2025-08-19T21:40:55.2665796Z <a id="alert_bot.rules"></a>
2025-08-19T21:40:55.2666006Z 
2025-08-19T21:40:55.2666118Z # alert\_bot.rules
2025-08-19T21:40:55.2666523Z 
2025-08-19T21:40:55.2666623Z <a id="common"></a>
2025-08-19T21:40:55.2666959Z 
2025-08-19T21:40:55.2667071Z # common
2025-08-19T21:40:55.2667212Z 
2025-08-19T21:40:55.2667321Z <a id="common.dsn"></a>
2025-08-19T21:40:55.2667513Z 
2025-08-19T21:40:55.2667610Z # common.dsn
2025-08-19T21:40:55.2667751Z 
2025-08-19T21:40:55.2667889Z <a id="common.dsn.build_dsn"></a>
2025-08-19T21:40:55.2668125Z 
2025-08-19T21:40:55.2668222Z #### build\_dsn
2025-08-19T21:40:55.2668379Z 
2025-08-19T21:40:55.2668481Z ```python
2025-08-19T21:40:55.2668747Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:40:55.2669120Z ```
2025-08-19T21:40:55.2669250Z 
2025-08-19T21:40:55.2669442Z Return a Postgres DSN, validating required variables.
2025-08-19T21:40:55.2669783Z 
2025-08-19T21:40:55.2670091Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T21:40:55.2670774Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T21:40:55.2671424Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T21:40:55.2672125Z missing.
2025-08-19T21:40:55.2672261Z 
2025-08-19T21:40:55.2672391Z <a id="common.models_vendor"></a>
2025-08-19T21:40:55.2672631Z 
2025-08-19T21:40:55.2672745Z # common.models\_vendor
2025-08-19T21:40:55.2672931Z 
2025-08-19T21:40:55.2673075Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T21:40:55.2673342Z 
2025-08-19T21:40:55.2673440Z ## Vendor Objects
2025-08-19T21:40:55.2673601Z 
2025-08-19T21:40:55.2673713Z ```python
2025-08-19T21:40:55.2673951Z class Vendor(Base)
2025-08-19T21:40:55.2674202Z ```
2025-08-19T21:40:55.2674322Z 
2025-08-19T21:40:55.2674443Z Vendor of inventory items.
2025-08-19T21:40:55.2674652Z 
2025-08-19T21:40:55.2674809Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T21:40:55.2675096Z 
2025-08-19T21:40:55.2675210Z ## VendorPrice Objects
2025-08-19T21:40:55.2675388Z 
2025-08-19T21:40:55.2675483Z ```python
2025-08-19T21:40:55.2675723Z class VendorPrice(Base)
2025-08-19T21:40:55.2675988Z ```
2025-08-19T21:40:55.2676126Z 
2025-08-19T21:40:55.2676283Z Association table linking vendors to pricing.
2025-08-19T21:40:55.2676556Z 
2025-08-19T21:40:55.2676665Z <a id="common.db_url"></a>
2025-08-19T21:40:55.2677023Z 
2025-08-19T21:40:55.2677124Z # common.db\_url
2025-08-19T21:40:55.2677280Z 
2025-08-19T21:40:55.2677411Z <a id="common.db_url.build_url"></a>
2025-08-19T21:40:55.2677650Z 
2025-08-19T21:40:55.2677752Z #### build\_url
2025-08-19T21:40:55.2677909Z 
2025-08-19T21:40:55.2678016Z ```python
2025-08-19T21:40:55.2678286Z def build_url(async_: bool = True) -> str
2025-08-19T21:40:55.2678646Z ```
2025-08-19T21:40:55.2678773Z 
2025-08-19T21:40:55.2678923Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:40:55.2679198Z 
2025-08-19T21:40:55.2679320Z <a id="common.keepa"></a>
2025-08-19T21:40:55.2679524Z 
2025-08-19T21:40:55.2679634Z # common.keepa
2025-08-19T21:40:55.2679782Z 
2025-08-19T21:40:55.2679892Z <a id="common.llm"></a>
2025-08-19T21:40:55.2680086Z 
2025-08-19T21:40:55.2680185Z # common.llm
2025-08-19T21:40:55.2680346Z 
2025-08-19T21:40:55.2680465Z <a id="common.settings"></a>
2025-08-19T21:40:55.2680685Z 
2025-08-19T21:40:55.2680789Z # common.settings
2025-08-19T21:40:55.2680953Z 
2025-08-19T21:40:55.2681070Z <a id="common.db"></a>
2025-08-19T21:40:55.2681247Z 
2025-08-19T21:40:55.2681341Z # common.db
2025-08-19T21:40:55.2681484Z 
2025-08-19T21:40:55.2681632Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T21:40:55.2681894Z 
2025-08-19T21:40:55.2682012Z #### build\_sqlalchemy\_url
2025-08-19T21:40:55.2682231Z 
2025-08-19T21:40:55.2682329Z ```python
2025-08-19T21:40:55.2682590Z def build_sqlalchemy_url() -> str
2025-08-19T21:40:55.2682914Z ```
2025-08-19T21:40:55.2683040Z 
2025-08-19T21:40:55.2683195Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:40:55.2683459Z 
2025-08-19T21:40:55.2683601Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T21:40:55.2683864Z 
2025-08-19T21:40:55.2683977Z #### build\_asyncpg\_dsn
2025-08-19T21:40:55.2684162Z 
2025-08-19T21:40:55.2684264Z ```python
2025-08-19T21:40:55.2684705Z def build_asyncpg_dsn() -> str
2025-08-19T21:40:55.2685009Z ```
2025-08-19T21:40:55.2685142Z 
2025-08-19T21:40:55.2685336Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:40:55.2685658Z 
2025-08-19T21:40:55.2685793Z <a id="common.db.refresh_mvs"></a>
2025-08-19T21:40:55.2686030Z 
2025-08-19T21:40:55.2686132Z #### refresh\_mvs
2025-08-19T21:40:55.2686298Z 
2025-08-19T21:40:55.2686391Z ```python
2025-08-19T21:40:55.2686684Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:40:55.2687237Z ```
2025-08-19T21:40:55.2687364Z 
2025-08-19T21:40:55.2687569Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:40:55.2687909Z 
2025-08-19T21:40:55.2688028Z <a id="common.config"></a>
2025-08-19T21:40:55.2688229Z 
2025-08-19T21:40:55.2688337Z # common.config
2025-08-19T21:40:55.2688500Z 
2025-08-19T21:40:55.2688613Z <a id="common.base"></a>
2025-08-19T21:40:55.2688813Z 
2025-08-19T21:40:55.2688913Z # common.base
2025-08-19T21:40:55.2689238Z 
2025-08-19T21:40:55.2689358Z <a id="common.base.Base"></a>
2025-08-19T21:40:55.2689579Z 
2025-08-19T21:40:55.2689680Z ## Base Objects
2025-08-19T21:40:55.2689836Z 
2025-08-19T21:40:55.2689937Z ```python
2025-08-19T21:40:55.2690194Z class Base(DeclarativeBase)
2025-08-19T21:40:55.2690499Z ```
2025-08-19T21:40:55.2690627Z 
2025-08-19T21:40:55.2690754Z Base class for SQLAlchemy models.
2025-08-19T21:40:55.2690988Z 
2025-08-19T21:40:55.2691096Z <a id="repricer"></a>
2025-08-19T21:40:55.2691274Z 
2025-08-19T21:40:55.2691368Z # repricer
2025-08-19T21:40:55.2691511Z 
2025-08-19T21:40:55.2691637Z <a id="repricer.app.schemas"></a>
2025-08-19T21:40:55.2691873Z 
2025-08-19T21:40:55.2691997Z # repricer.app.schemas
2025-08-19T21:40:55.2692179Z 
2025-08-19T21:40:55.2692300Z <a id="repricer.app.deps"></a>
2025-08-19T21:40:55.2692523Z 
2025-08-19T21:40:55.2692633Z # repricer.app.deps
2025-08-19T21:40:55.2692802Z 
2025-08-19T21:40:55.2692976Z Placeholder module for Keepa / SP-API clients.
2025-08-19T21:40:55.2693284Z 
2025-08-19T21:40:55.2693412Z <a id="repricer.app.logic"></a>
2025-08-19T21:40:55.2693635Z 
2025-08-19T21:40:55.2693760Z # repricer.app.logic
2025-08-19T21:40:55.2693937Z 
2025-08-19T21:40:55.2694096Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T21:40:55.2694376Z 
2025-08-19T21:40:55.2694471Z #### MIN\_MARGIN
2025-08-19T21:40:55.2694624Z 
2025-08-19T21:40:55.2694716Z 15 % ROI
2025-08-19T21:40:55.2694855Z 
2025-08-19T21:40:55.2695013Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T21:40:55.2695293Z 
2025-08-19T21:40:55.2695404Z #### compute\_price
2025-08-19T21:40:55.2695576Z 
2025-08-19T21:40:55.2695675Z ```python
2025-08-19T21:40:55.2696060Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T21:40:55.2696532Z ```
2025-08-19T21:40:55.2696663Z 
2025-08-19T21:40:55.2697005Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T21:40:55.2697444Z Replace with real competitive logic later.
2025-08-19T21:40:55.2697722Z 
2025-08-19T21:40:55.2697847Z <a id="repricer.app.main"></a>
2025-08-19T21:40:55.2698088Z 
2025-08-19T21:40:55.2698203Z # repricer.app.main
2025-08-19T21:40:55.2698367Z 
2025-08-19T21:40:55.2698484Z <a id="repricer.app"></a>
2025-08-19T21:40:55.2698690Z 
2025-08-19T21:40:55.2698788Z # repricer.app
2025-08-19T21:40:55.2698942Z 
2025-08-19T21:40:55.2699081Z <a id="repricer.tests.test_imports"></a>
2025-08-19T21:40:55.2699353Z 
2025-08-19T21:40:55.2699482Z # repricer.tests.test\_imports
2025-08-19T21:40:55.2699706Z 
2025-08-19T21:40:55.2699855Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T21:40:55.2700117Z 
2025-08-19T21:40:55.2700241Z # repricer.tests.test\_smoke
2025-08-19T21:40:55.2700454Z 
2025-08-19T21:40:55.2700580Z <a id="repricer.tests"></a>
2025-08-19T21:40:55.2700792Z 
2025-08-19T21:40:55.2700892Z # repricer.tests
2025-08-19T21:40:55.2701058Z 
2025-08-19T21:40:55.2701158Z <a id="db"></a>
2025-08-19T21:40:55.2701312Z 
2025-08-19T21:40:55.2701409Z # db
2025-08-19T21:40:55.2701540Z 
2025-08-19T21:40:55.2701656Z <a id="db.utils.views"></a>
2025-08-19T21:40:55.2702051Z 
2025-08-19T21:40:55.2702166Z # db.utils.views
2025-08-19T21:40:55.2702326Z 
2025-08-19T21:40:55.2702467Z <a id="db.utils.views.replace_view"></a>
2025-08-19T21:40:55.2702738Z 
2025-08-19T21:40:55.2702843Z #### replace\_view
2025-08-19T21:40:55.2703004Z 
2025-08-19T21:40:55.2703100Z ```python
2025-08-19T21:40:55.2703402Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T21:40:55.2703786Z ```
2025-08-19T21:40:55.2703917Z 
2025-08-19T21:40:55.2704052Z Drop and recreate a SQL view atomically.
2025-08-19T21:40:55.2704308Z 
2025-08-19T21:40:55.2704420Z <a id="db.utils"></a>
2025-08-19T21:40:55.2704596Z 
2025-08-19T21:40:55.2704691Z # db.utils
2025-08-19T21:40:55.2704836Z 
2025-08-19T21:40:55.2704953Z <a id="price_importer"></a>
2025-08-19T21:40:55.2705160Z 
2025-08-19T21:40:55.2705267Z # price\_importer
2025-08-19T21:40:55.2705433Z 
2025-08-19T21:40:55.2705598Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T21:40:55.2705888Z 
2025-08-19T21:40:55.2706028Z # price\_importer.services\_common.dsn
2025-08-19T21:40:55.2706455Z 
2025-08-19T21:40:55.2706640Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T21:40:55.2707113Z 
2025-08-19T21:40:55.2707214Z #### build\_dsn
2025-08-19T21:40:55.2707367Z 
2025-08-19T21:40:55.2707462Z ```python
2025-08-19T21:40:55.2707723Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:40:55.2708071Z ```
2025-08-19T21:40:55.2708197Z 
2025-08-19T21:40:55.2708302Z Return safe DSN.
2025-08-19T21:40:55.2708466Z 
2025-08-19T21:40:55.2708913Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T21:40:55.2709228Z 
2025-08-19T21:40:55.2709429Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T21:40:55.2709762Z 
2025-08-19T21:40:55.2709933Z # price\_importer.services\_common.models\_vendor
2025-08-19T21:40:55.2710239Z 
2025-08-19T21:40:55.2710414Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T21:40:55.2710716Z 
2025-08-19T21:40:55.2710863Z # price\_importer.services\_common.db\_url
2025-08-19T21:40:55.2711148Z 
2025-08-19T21:40:55.2711348Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T21:40:55.2711681Z 
2025-08-19T21:40:55.2711781Z #### build\_url
2025-08-19T21:40:55.2711938Z 
2025-08-19T21:40:55.2712033Z ```python
2025-08-19T21:40:55.2712352Z def build_url(async_: bool = True) -> str
2025-08-19T21:40:55.2712705Z ```
2025-08-19T21:40:55.2712831Z 
2025-08-19T21:40:55.2712982Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:40:55.2713275Z 
2025-08-19T21:40:55.2713449Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T21:40:55.2713758Z 
2025-08-19T21:40:55.2713910Z # price\_importer.services\_common.keepa
2025-08-19T21:40:55.2714207Z 
2025-08-19T21:40:55.2714375Z <a id="price_importer.services_common.llm"></a>
2025-08-19T21:40:55.2714687Z 
2025-08-19T21:40:55.2714843Z # price\_importer.services\_common.llm
2025-08-19T21:40:55.2715114Z 
2025-08-19T21:40:55.2715292Z <a id="price_importer.services_common.settings"></a>
2025-08-19T21:40:55.2715630Z 
2025-08-19T21:40:55.2715793Z # price\_importer.services\_common.settings
2025-08-19T21:40:55.2716084Z 
2025-08-19T21:40:55.2716249Z <a id="price_importer.services_common.db"></a>
2025-08-19T21:40:55.2716545Z 
2025-08-19T21:40:55.2716678Z # price\_importer.services\_common.db
2025-08-19T21:40:55.2717084Z 
2025-08-19T21:40:55.2717340Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T21:40:55.2717717Z 
2025-08-19T21:40:55.2717838Z #### build\_sqlalchemy\_url
2025-08-19T21:40:55.2718049Z 
2025-08-19T21:40:55.2718149Z ```python
2025-08-19T21:40:55.2718409Z def build_sqlalchemy_url() -> str
2025-08-19T21:40:55.2718742Z ```
2025-08-19T21:40:55.2718871Z 
2025-08-19T21:40:55.2719027Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:40:55.2719306Z 
2025-08-19T21:40:55.2719529Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T21:40:55.2719891Z 
2025-08-19T21:40:55.2720016Z #### build\_asyncpg\_dsn
2025-08-19T21:40:55.2720213Z 
2025-08-19T21:40:55.2720540Z ```python
2025-08-19T21:40:55.2720802Z def build_asyncpg_dsn() -> str
2025-08-19T21:40:55.2721103Z ```
2025-08-19T21:40:55.2721236Z 
2025-08-19T21:40:55.2721434Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:40:55.2721760Z 
2025-08-19T21:40:55.2721963Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T21:40:55.2722284Z 
2025-08-19T21:40:55.2722389Z #### refresh\_mvs
2025-08-19T21:40:55.2722557Z 
2025-08-19T21:40:55.2722652Z ```python
2025-08-19T21:40:55.2722948Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:40:55.2723347Z ```
2025-08-19T21:40:55.2723477Z 
2025-08-19T21:40:55.2723687Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:40:55.2724033Z 
2025-08-19T21:40:55.2724184Z <a id="price_importer.services_common"></a>
2025-08-19T21:40:55.2724461Z 
2025-08-19T21:40:55.2724606Z # price\_importer.services\_common
2025-08-19T21:40:55.2724852Z 
2025-08-19T21:40:55.2725012Z <a id="price_importer.services_common.base"></a>
2025-08-19T21:40:55.2725485Z 
2025-08-19T21:40:55.2725627Z # price\_importer.services\_common.base
2025-08-19T21:40:55.2725898Z 
2025-08-19T21:40:55.2726048Z <a id="price_importer.normaliser"></a>
2025-08-19T21:40:55.2726315Z 
2025-08-19T21:40:55.2726441Z # price\_importer.normaliser
2025-08-19T21:40:55.2726659Z 
2025-08-19T21:40:55.2726976Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T21:40:55.2727283Z 
2025-08-19T21:40:55.2727426Z # price\_importer.common.models\_vendor
2025-08-19T21:40:55.2727697Z 
2025-08-19T21:40:55.2727842Z <a id="price_importer.common.db_url"></a>
2025-08-19T21:40:55.2728102Z 
2025-08-19T21:40:55.2728233Z # price\_importer.common.db\_url
2025-08-19T21:40:55.2728469Z 
2025-08-19T21:40:55.2728632Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T21:40:55.2728928Z 
2025-08-19T21:40:55.2729028Z #### make\_dsn
2025-08-19T21:40:55.2729178Z 
2025-08-19T21:40:55.2729272Z ```python
2025-08-19T21:40:55.2729553Z def make_dsn(async_: bool = False) -> str
2025-08-19T21:40:55.2729911Z ```
2025-08-19T21:40:55.2730043Z 
2025-08-19T21:40:55.2730227Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T21:40:55.2730544Z 
2025-08-19T21:40:55.2730723Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T21:40:55.2731029Z 
2025-08-19T21:40:55.2731131Z #### build\_url
2025-08-19T21:40:55.2731287Z 
2025-08-19T21:40:55.2731391Z ```python
2025-08-19T21:40:55.2731660Z def build_url(async_: bool = False) -> str
2025-08-19T21:40:55.2732011Z ```
2025-08-19T21:40:55.2732140Z 
2025-08-19T21:40:55.2732340Z Return Postgres DSN built from environment variables.
2025-08-19T21:40:55.2732665Z 
2025-08-19T21:40:55.2732800Z <a id="price_importer.common"></a>
2025-08-19T21:40:55.2733053Z 
2025-08-19T21:40:55.2733183Z # price\_importer.common
2025-08-19T21:40:55.2733381Z 
2025-08-19T21:40:55.2733520Z <a id="price_importer.common.base"></a>
2025-08-19T21:40:55.2733787Z 
2025-08-19T21:40:55.2733913Z # price\_importer.common.base
2025-08-19T21:40:55.2734137Z 
2025-08-19T21:40:55.2734299Z <a id="price_importer.tests.conftest"></a>
2025-08-19T21:40:55.2734587Z 
2025-08-19T21:40:55.2734718Z # price\_importer.tests.conftest
2025-08-19T21:40:55.2734953Z 
2025-08-19T21:40:55.2735111Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T21:40:55.2735389Z 
2025-08-19T21:40:55.2735519Z # price\_importer.tests.test\_reader
2025-08-19T21:40:55.2735825Z 
2025-08-19T21:40:55.2735992Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T21:40:55.2736293Z 
2025-08-19T21:40:55.2736438Z # price\_importer.tests.test\_imports
2025-08-19T21:40:55.2736696Z 
2025-08-19T21:40:55.2737031Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T21:40:55.2737307Z 
2025-08-19T21:40:55.2737445Z # price\_importer.tests.test\_smoke
2025-08-19T21:40:55.2737689Z 
2025-08-19T21:40:55.2737855Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T21:40:55.2738209Z 
2025-08-19T21:40:55.2738358Z # price\_importer.tests.test\_normaliser
2025-08-19T21:40:55.2738636Z 
2025-08-19T21:40:55.2738764Z <a id="price_importer.tests"></a>
2025-08-19T21:40:55.2739204Z 
2025-08-19T21:40:55.2739323Z # price\_importer.tests
2025-08-19T21:40:55.2739517Z 
2025-08-19T21:40:55.2739653Z <a id="price_importer.reader"></a>
2025-08-19T21:40:55.2739886Z 
2025-08-19T21:40:55.2740003Z # price\_importer.reader
2025-08-19T21:40:55.2740216Z 
2025-08-19T21:40:55.2740355Z <a id="price_importer.repository"></a>
2025-08-19T21:40:55.2740607Z 
2025-08-19T21:40:55.2740733Z # price\_importer.repository
2025-08-19T21:40:55.2740957Z 
2025-08-19T21:40:55.2741098Z <a id="price_importer.import"></a>
2025-08-19T21:40:55.2741333Z 
2025-08-19T21:40:55.2741470Z # price\_importer.import
2025-08-19T21:40:55.2741671Z 
2025-08-19T21:40:55.2741780Z <a id="fees_h10"></a>
2025-08-19T21:40:55.2741971Z 
2025-08-19T21:40:55.2742072Z # fees\_h10
2025-08-19T21:40:55.2742214Z 
2025-08-19T21:40:55.2742326Z <a id="fees_h10.worker"></a>
2025-08-19T21:40:55.2742541Z 
2025-08-19T21:40:55.2742641Z # fees\_h10.worker
2025-08-19T21:40:55.2742800Z 
2025-08-19T21:40:55.2743113Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T21:40:55.2743403Z 
2025-08-19T21:40:55.2743513Z #### list\_active\_asins
2025-08-19T21:40:55.2743700Z 
2025-08-19T21:40:55.2743804Z ```python
2025-08-19T21:40:55.2744060Z def list_active_asins() -> list[str]
2025-08-19T21:40:55.2744396Z ```
2025-08-19T21:40:55.2744525Z 
2025-08-19T21:40:55.2744702Z Return known ASINs or an empty list if unavailable.
2025-08-19T21:40:55.2745019Z 
2025-08-19T21:40:55.2745154Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T21:40:55.2745421Z 
2025-08-19T21:40:55.2745554Z # fees\_h10.tests.test\_smoke
2025-08-19T21:40:55.2745777Z 
2025-08-19T21:40:55.2745893Z <a id="fees_h10.tests"></a>
2025-08-19T21:40:55.2746113Z 
2025-08-19T21:40:55.2746217Z # fees\_h10.tests
2025-08-19T21:40:55.2746376Z 
2025-08-19T21:40:55.2746498Z <a id="fees_h10.client"></a>
2025-08-19T21:40:55.2746896Z 
2025-08-19T21:40:55.2746999Z # fees\_h10.client
2025-08-19T21:40:55.2747150Z 
2025-08-19T21:40:55.2747273Z <a id="fees_h10.repository"></a>
2025-08-19T21:40:55.2747501Z 
2025-08-19T21:40:55.2747602Z # fees\_h10.repository
2025-08-19T21:40:55.2747771Z 
2025-08-19T21:40:55.2747926Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T21:40:55.2748201Z 
2025-08-19T21:40:55.2748299Z #### upsert\_fees\_raw
2025-08-19T21:40:55.2748471Z 
2025-08-19T21:40:55.2748564Z ```python
2025-08-19T21:40:55.2748822Z def upsert_fees_raw(engine: Engine,
2025-08-19T21:40:55.2749198Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T21:40:55.2749574Z                     *,
2025-08-19T21:40:55.2749946Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T21:40:55.2750398Z ```
2025-08-19T21:40:55.2750541Z 
2025-08-19T21:40:55.2750673Z Idempotent upsert for fees.
2025-08-19T21:40:55.2750910Z 
2025-08-19T21:40:55.2751160Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T21:40:55.2751692Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T21:40:55.2752166Z Only updates when one of the mutable fields changes.
2025-08-19T21:40:55.2752479Z 
2025-08-19T21:40:55.2752589Z <a id="emailer"></a>
2025-08-19T21:40:55.2752761Z 
2025-08-19T21:40:55.2752850Z # emailer
2025-08-19T21:40:55.2752989Z 
2025-08-19T21:40:55.2753143Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T21:40:55.2753416Z 
2025-08-19T21:40:55.2753550Z # emailer.tests.test\_import\_emailer
2025-08-19T21:40:55.2753807Z 
2025-08-19T21:40:55.2753932Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T21:40:55.2754172Z 
2025-08-19T21:40:55.2754300Z # emailer.tests.test\_smoke
2025-08-19T21:40:55.2754504Z 
2025-08-19T21:40:55.2754619Z <a id="emailer.tests"></a>
2025-08-19T21:40:55.2754830Z 
2025-08-19T21:40:55.2754930Z # emailer.tests
2025-08-19T21:40:55.2755091Z 
2025-08-19T21:40:55.2755219Z <a id="emailer.generate_body"></a>
2025-08-19T21:40:55.2755458Z 
2025-08-19T21:40:55.2755577Z # emailer.generate\_body
2025-08-19T21:40:55.2755766Z 
2025-08-19T21:40:55.2755877Z <a id="llm_server"></a>
2025-08-19T21:40:55.2756052Z 
2025-08-19T21:40:55.2756334Z # llm\_server
2025-08-19T21:40:55.2756480Z 
2025-08-19T21:40:55.2756601Z <a id="llm_server.app"></a>
2025-08-19T21:40:55.2756962Z 
2025-08-19T21:40:55.2757067Z # llm\_server.app
2025-08-19T21:40:55.2757233Z 
