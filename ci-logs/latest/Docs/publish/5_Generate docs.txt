2025-08-20T18:13:52.3889576Z ##[group]Run pydoc-markdown
2025-08-20T18:13:52.3889866Z [36;1mpydoc-markdown[0m
2025-08-20T18:13:52.3930699Z shell: /usr/bin/bash -e {0}
2025-08-20T18:13:52.3930938Z env:
2025-08-20T18:13:52.3931182Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:13:52.3931587Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T18:13:52.3931990Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:13:52.3932336Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:13:52.3932678Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:13:52.3933013Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T18:13:52.3933302Z ##[endgroup]
2025-08-20T18:13:52.7664952Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T18:13:52.7665468Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T18:13:52.7665822Z In "pydoc-markdown.yml"
2025-08-20T18:13:52.7666099Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T18:13:52.7666796Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T18:13:52.7667719Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T18:13:52.7668204Z 
2025-08-20T18:13:53.1514602Z <a id="__init__"></a>
2025-08-20T18:13:53.1515213Z 
2025-08-20T18:13:53.1515341Z # \_\_init\_\_
2025-08-20T18:13:53.1515553Z 
2025-08-20T18:13:53.1515679Z <a id="api"></a>
2025-08-20T18:13:53.1515881Z 
2025-08-20T18:13:53.1516000Z # api
2025-08-20T18:13:53.1516158Z 
2025-08-20T18:13:53.1516295Z <a id="api.errors"></a>
2025-08-20T18:13:53.1516539Z 
2025-08-20T18:13:53.1516660Z # api.errors
2025-08-20T18:13:53.1516841Z 
2025-08-20T18:13:53.1516991Z <a id="api.sentry_config"></a>
2025-08-20T18:13:53.1517649Z 
2025-08-20T18:13:53.1517794Z # api.sentry\_config
2025-08-20T18:13:53.1518013Z 
2025-08-20T18:13:53.1518201Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T18:13:53.1519005Z 
2025-08-20T18:13:53.1519164Z # api.tests.test\_stats\_contracts
2025-08-20T18:13:53.1519473Z 
2025-08-20T18:13:53.1519653Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T18:13:53.1519973Z 
2025-08-20T18:13:53.1520122Z # api.tests.test\_sentry\_scrub
2025-08-20T18:13:53.1520400Z 
2025-08-20T18:13:53.1520570Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T18:13:53.1520894Z 
2025-08-20T18:13:53.1521050Z # api.tests.test\_roi\_basic\_auth
2025-08-20T18:13:53.1521327Z 
2025-08-20T18:13:53.1521487Z <a id="api.tests.test_errors_json"></a>
2025-08-20T18:13:53.1521795Z 
2025-08-20T18:13:53.1521955Z # api.tests.test\_errors\_json
2025-08-20T18:13:53.1522219Z 
2025-08-20T18:13:53.1522362Z <a id="api.tests.test_llm"></a>
2025-08-20T18:13:53.1522635Z 
2025-08-20T18:13:53.1522769Z # api.tests.test\_llm
2025-08-20T18:13:53.1522985Z 
2025-08-20T18:13:53.1523159Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T18:13:53.1523480Z 
2025-08-20T18:13:53.1523637Z # api.tests.test\_roi\_filters
2025-08-20T18:13:53.1523919Z 
2025-08-20T18:13:53.1524094Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T18:13:53.1524415Z 
2025-08-20T18:13:53.1524557Z # api.tests.test\_sentry\_event
2025-08-20T18:13:53.1524860Z 
2025-08-20T18:13:53.1525090Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T18:13:53.1525469Z 
2025-08-20T18:13:53.1525626Z ## DummyTransport Objects
2025-08-20T18:13:53.1525872Z 
2025-08-20T18:13:53.1525988Z ```python
2025-08-20T18:13:53.1526292Z class DummyTransport()
2025-08-20T18:13:53.1526620Z ```
2025-08-20T18:13:53.1526782Z 
2025-08-20T18:13:53.1527302Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T18:13:53.1527815Z 
2025-08-20T18:13:53.1527949Z #### capture\_envelope
2025-08-20T18:13:53.1528178Z 
2025-08-20T18:13:53.1528292Z ```python
2025-08-20T18:13:53.1528622Z def capture_envelope(envelope)
2025-08-20T18:13:53.1528992Z ```
2025-08-20T18:13:53.1529148Z 
2025-08-20T18:13:53.1529392Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T18:13:53.1529793Z 
2025-08-20T18:13:53.1529945Z <a id="api.tests.test_cors"></a>
2025-08-20T18:13:53.1530604Z 
2025-08-20T18:13:53.1530747Z # api.tests.test\_cors
2025-08-20T18:13:53.1530976Z 
2025-08-20T18:13:53.1531133Z <a id="api.tests.test_imports"></a>
2025-08-20T18:13:53.1531430Z 
2025-08-20T18:13:53.1531571Z # api.tests.test\_imports
2025-08-20T18:13:53.1531816Z 
2025-08-20T18:13:53.1531979Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T18:13:53.1532283Z 
2025-08-20T18:13:53.1532430Z # api.tests.test\_rate\_limit
2025-08-20T18:13:53.1532695Z 
2025-08-20T18:13:53.1532867Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T18:13:53.1533200Z 
2025-08-20T18:13:53.1533314Z #### app
2025-08-20T18:13:53.1533485Z 
2025-08-20T18:13:53.1533597Z noqa: E402
2025-08-20T18:13:53.1533758Z 
2025-08-20T18:13:53.1533921Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T18:13:53.1534219Z 
2025-08-20T18:13:53.1534363Z # api.tests.test\_stats\_sql
2025-08-20T18:13:53.1534635Z 
2025-08-20T18:13:53.1534812Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T18:13:53.1535133Z 
2025-08-20T18:13:53.1535281Z # api.tests.test\_entrypoint
2025-08-20T18:13:53.1535543Z 
2025-08-20T18:13:53.1535744Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T18:13:53.1536097Z 
2025-08-20T18:13:53.1536274Z # api.tests.test\_stats\_future\_contracts
2025-08-20T18:13:53.1536593Z 
2025-08-20T18:13:53.1536745Z <a id="api.tests.test_health"></a>
2025-08-20T18:13:53.1537039Z 
2025-08-20T18:13:53.1537577Z # api.tests.test\_health
2025-08-20T18:13:53.1537864Z 
2025-08-20T18:13:53.1538051Z <a id="api.tests.test_score"></a>
2025-08-20T18:13:53.1538347Z 
2025-08-20T18:13:53.1538486Z # api.tests.test\_score
2025-08-20T18:13:53.1538718Z 
2025-08-20T18:13:53.1538869Z <a id="api.logging_config"></a>
2025-08-20T18:13:53.1539122Z 
2025-08-20T18:13:53.1539247Z # api.logging\_config
2025-08-20T18:13:53.1539572Z 
2025-08-20T18:13:53.1539721Z <a id="api.migrations.env"></a>
2025-08-20T18:13:53.1539986Z 
2025-08-20T18:13:53.1540375Z # api.migrations.env
2025-08-20T18:13:53.1540601Z 
2025-08-20T18:13:53.1540827Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T18:13:53.1541207Z 
2025-08-20T18:13:53.1541409Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T18:13:53.1541761Z 
2025-08-20T18:13:53.1541960Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T18:13:53.1542331Z 
2025-08-20T18:13:53.1542505Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T18:13:53.1542830Z 
2025-08-20T18:13:53.1543121Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T18:13:53.1543585Z 
2025-08-20T18:13:53.1543841Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T18:13:53.1544260Z 
2025-08-20T18:13:53.1544499Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T18:13:53.1544900Z 
2025-08-20T18:13:53.1545106Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T18:13:53.1545467Z 
2025-08-20T18:13:53.1545688Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T18:13:53.1546110Z 
2025-08-20T18:13:53.1546316Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T18:13:53.1546792Z 
2025-08-20T18:13:53.1547025Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T18:13:53.1547697Z 
2025-08-20T18:13:53.1547907Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T18:13:53.1548262Z 
2025-08-20T18:13:53.1548491Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T18:13:53.1548870Z 
2025-08-20T18:13:53.1549063Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T18:13:53.1549416Z 
2025-08-20T18:13:53.1549646Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T18:13:53.1550033Z 
2025-08-20T18:13:53.1550226Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T18:13:53.1550591Z 
2025-08-20T18:13:53.1550857Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T18:13:53.1551281Z 
2025-08-20T18:13:53.1551512Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T18:13:53.1551899Z 
2025-08-20T18:13:53.1552131Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T18:13:53.1552821Z 
2025-08-20T18:13:53.1553027Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T18:13:53.1553385Z 
2025-08-20T18:13:53.1553644Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T18:13:53.1554058Z 
2025-08-20T18:13:53.1554278Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T18:13:53.1554653Z 
2025-08-20T18:13:53.1554864Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T18:13:53.1555223Z 
2025-08-20T18:13:53.1555396Z # api.migrations.versions.0001\_baseline
2025-08-20T18:13:53.1555768Z 
2025-08-20T18:13:53.1555936Z <a id="api.migrations.versions"></a>
2025-08-20T18:13:53.1556242Z 
2025-08-20T18:13:53.1556410Z # api.migrations.versions
2025-08-20T18:13:53.1556662Z 
2025-08-20T18:13:53.1556805Z <a id="api.migrations"></a>
2025-08-20T18:13:53.1557058Z 
2025-08-20T18:13:53.1557417Z # api.migrations
2025-08-20T18:13:53.1557633Z 
2025-08-20T18:13:53.1557754Z <a id="api.db"></a>
2025-08-20T18:13:53.1557969Z 
2025-08-20T18:13:53.1558081Z # api.db
2025-08-20T18:13:53.1558242Z 
2025-08-20T18:13:53.1558388Z <a id="api.routes.score"></a>
2025-08-20T18:13:53.1558659Z 
2025-08-20T18:13:53.1558786Z # api.routes.score
2025-08-20T18:13:53.1558991Z 
2025-08-20T18:13:53.1559145Z <a id="api.routes.stats"></a>
2025-08-20T18:13:53.1559402Z 
2025-08-20T18:13:53.1559533Z # api.routes.stats
2025-08-20T18:13:53.1559739Z 
2025-08-20T18:13:53.1559875Z <a id="api.routes.roi"></a>
2025-08-20T18:13:53.1560117Z 
2025-08-20T18:13:53.1560234Z # api.routes.roi
2025-08-20T18:13:53.1560434Z 
2025-08-20T18:13:53.1560574Z <a id="api.routes.health"></a>
2025-08-20T18:13:53.1560829Z 
2025-08-20T18:13:53.1560959Z # api.routes.health
2025-08-20T18:13:53.1561160Z 
2025-08-20T18:13:53.1561328Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T18:13:53.1561648Z 
2025-08-20T18:13:53.1561761Z #### MAX\_SKEW
2025-08-20T18:13:53.1561939Z 
2025-08-20T18:13:53.1562279Z seconds
2025-08-20T18:13:53.1562447Z 
2025-08-20T18:13:53.1562612Z <a id="api.routes.health.health"></a>
2025-08-20T18:13:53.1562932Z 
2025-08-20T18:13:53.1563050Z #### health
2025-08-20T18:13:53.1563214Z 
2025-08-20T18:13:53.1563325Z ```python
2025-08-20T18:13:53.1563683Z @router.get("/health", include_in_schema=False)
2025-08-20T18:13:53.1564419Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T18:13:53.1565141Z ```
2025-08-20T18:13:53.1565302Z 
2025-08-20T18:13:53.1565522Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T18:13:53.1565915Z 
2025-08-20T18:13:53.1566082Z <a id="api.routes.repository"></a>
2025-08-20T18:13:53.1566384Z 
2025-08-20T18:13:53.1566530Z # api.routes.repository
2025-08-20T18:13:53.1566763Z 
2025-08-20T18:13:53.1566892Z <a id="api.routes"></a>
2025-08-20T18:13:53.1567316Z 
2025-08-20T18:13:53.1567459Z # api.routes
2025-08-20T18:13:53.1567645Z 
2025-08-20T18:13:53.1567793Z <a id="api.models.fee"></a>
2025-08-20T18:13:53.1568059Z 
2025-08-20T18:13:53.1568179Z # api.models.fee
2025-08-20T18:13:53.1568379Z 
2025-08-20T18:13:53.1568517Z <a id="api.models"></a>
2025-08-20T18:13:53.1568735Z 
2025-08-20T18:13:53.1568850Z # api.models
2025-08-20T18:13:53.1569022Z 
2025-08-20T18:13:53.1569179Z <a id="api.roi_repository"></a>
2025-08-20T18:13:53.1569441Z 
2025-08-20T18:13:53.1569570Z # api.roi\_repository
2025-08-20T18:13:53.1569798Z 
2025-08-20T18:13:53.1569921Z <a id="api.main"></a>
2025-08-20T18:13:53.1570131Z 
2025-08-20T18:13:53.1570244Z # api.main
2025-08-20T18:13:53.1570399Z 
2025-08-20T18:13:53.1570515Z <a id="api.main.ready"></a>
2025-08-20T18:13:53.1570709Z 
2025-08-20T18:13:53.1570812Z #### ready
2025-08-20T18:13:53.1570943Z 
2025-08-20T18:13:53.1571035Z ```python
2025-08-20T18:13:53.1571423Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T18:13:53.1572075Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T18:13:53.1572615Z                                                                       str]
2025-08-20T18:13:53.1572975Z ```
2025-08-20T18:13:53.1573312Z 
2025-08-20T18:13:53.1573451Z Return 200 only when migrations are at head.
2025-08-20T18:13:53.1573705Z 
2025-08-20T18:13:53.1573822Z <a id="api.config"></a>
2025-08-20T18:13:53.1573995Z 
2025-08-20T18:13:53.1574086Z # api.config
2025-08-20T18:13:53.1574234Z 
2025-08-20T18:13:53.1574346Z <a id="api.security"></a>
2025-08-20T18:13:53.1574538Z 
2025-08-20T18:13:53.1574663Z # api.security
2025-08-20T18:13:53.1574812Z 
2025-08-20T18:13:53.1574907Z <a id="etl"></a>
2025-08-20T18:13:53.1575064Z 
2025-08-20T18:13:53.1575157Z # etl
2025-08-20T18:13:53.1575289Z 
2025-08-20T18:13:53.1575409Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T18:13:53.1575637Z 
2025-08-20T18:13:53.1575745Z # etl.fba\_fee\_ingestor
2025-08-20T18:13:53.1575932Z 
2025-08-20T18:13:53.1576058Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T18:13:53.1576282Z 
2025-08-20T18:13:53.1576389Z # etl.sp\_fees\_ingestor
2025-08-20T18:13:53.1576584Z 
2025-08-20T18:13:53.1576715Z <a id="etl.keepa_ingestor"></a>
2025-08-20T18:13:53.1576937Z 
2025-08-20T18:13:53.1577044Z # etl.keepa\_ingestor
2025-08-20T18:13:53.1577390Z 
2025-08-20T18:13:53.1577494Z <a id="etl.db"></a>
2025-08-20T18:13:53.1577657Z 
2025-08-20T18:13:53.1577746Z # etl.db
2025-08-20T18:13:53.1577887Z 
2025-08-20T18:13:53.1578017Z <a id="etl.dialects.schemas"></a>
2025-08-20T18:13:53.1578249Z 
2025-08-20T18:13:53.1578365Z # etl.dialects.schemas
2025-08-20T18:13:53.1578550Z 
2025-08-20T18:13:53.1578712Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T18:13:53.1579023Z 
2025-08-20T18:13:53.1579172Z # etl.dialects.amazon\_reimbursements
2025-08-20T18:13:53.1579416Z 
2025-08-20T18:13:53.1579554Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T18:13:53.1579822Z 
2025-08-20T18:13:53.1579954Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T18:13:53.1580202Z 
2025-08-20T18:13:53.1580347Z <a id="etl.dialects.test_generic"></a>
2025-08-20T18:13:53.1580630Z 
2025-08-20T18:13:53.1580949Z # etl.dialects.test\_generic
2025-08-20T18:13:53.1581198Z 
2025-08-20T18:13:53.1581341Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T18:13:53.1581582Z 
2025-08-20T18:13:53.1581700Z # etl.dialects.amazon\_returns
2025-08-20T18:13:53.1581915Z 
2025-08-20T18:13:53.1582052Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T18:13:53.1582316Z 
2025-08-20T18:13:53.1582450Z # etl.dialects.amazon\_fee\_preview
2025-08-20T18:13:53.1582693Z 
2025-08-20T18:13:53.1582865Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T18:13:53.1583197Z 
2025-08-20T18:13:53.1583343Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T18:13:53.1583597Z 
2025-08-20T18:13:53.1583735Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T18:13:53.1583991Z 
2025-08-20T18:13:53.1584115Z # etl.dialects.amazon\_settlements
2025-08-20T18:13:53.1584349Z 
2025-08-20T18:13:53.1584467Z <a id="etl.dialects"></a>
2025-08-20T18:13:53.1584676Z 
2025-08-20T18:13:53.1584780Z # etl.dialects
2025-08-20T18:13:53.1584967Z 
2025-08-20T18:13:53.1585077Z <a id="ingest"></a>
2025-08-20T18:13:53.1585255Z 
2025-08-20T18:13:53.1585361Z # ingest
2025-08-20T18:13:53.1585512Z 
2025-08-20T18:13:53.1585645Z <a id="ingest.maintenance"></a>
2025-08-20T18:13:53.1585871Z 
2025-08-20T18:13:53.1585985Z # ingest.maintenance
2025-08-20T18:13:53.1586161Z 
2025-08-20T18:13:53.1586276Z <a id="ingest.copy_loader"></a>
2025-08-20T18:13:53.1586486Z 
2025-08-20T18:13:53.1586585Z # ingest.copy\_loader
2025-08-20T18:13:53.1586746Z 
2025-08-20T18:13:53.1586888Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T18:13:53.1587359Z 
2025-08-20T18:13:53.1587464Z #### copy\_df\_via\_temp
2025-08-20T18:13:53.1587636Z 
2025-08-20T18:13:53.1587727Z ```python
2025-08-20T18:13:53.1587975Z def copy_df_via_temp(engine: Engine,
2025-08-20T18:13:53.1588375Z                      df: pd.DataFrame,
2025-08-20T18:13:53.1588755Z                      target_table: str,
2025-08-20T18:13:53.1589122Z                      *,
2025-08-20T18:13:53.1589455Z                      target_schema: Optional[str] = None,
2025-08-20T18:13:53.1589906Z                      columns: Sequence[str],
2025-08-20T18:13:53.1590558Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T18:13:53.1591097Z                      analyze_after: bool = False,
2025-08-20T18:13:53.1591584Z                      connection: Any | None = None) -> int
2025-08-20T18:13:53.1592020Z ```
2025-08-20T18:13:53.1592171Z 
2025-08-20T18:13:53.1592465Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T18:13:53.1592910Z 
2025-08-20T18:13:53.1593070Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T18:13:53.1593372Z 
2025-08-20T18:13:53.1593521Z # ingest.tests.test\_smoke
2025-08-20T18:13:53.1593769Z 
2025-08-20T18:13:53.1593916Z <a id="ingest.tests"></a>
2025-08-20T18:13:53.1594150Z 
2025-08-20T18:13:53.1594271Z # ingest.tests
2025-08-20T18:13:53.1594459Z 
2025-08-20T18:13:53.1594619Z <a id="ingest.upload_router"></a>
2025-08-20T18:13:53.1594898Z 
2025-08-20T18:13:53.1595044Z # ingest.upload\_router
2025-08-20T18:13:53.1595278Z 
2025-08-20T18:13:53.1595433Z <a id="ingest.email_watcher"></a>
2025-08-20T18:13:53.1595709Z 
2025-08-20T18:13:53.1595841Z # ingest.email\_watcher
2025-08-20T18:13:53.1596066Z 
2025-08-20T18:13:53.1596227Z <a id="ingest.email_watcher.main"></a>
2025-08-20T18:13:53.1596527Z 
2025-08-20T18:13:53.1596643Z #### main
2025-08-20T18:13:53.1596806Z 
2025-08-20T18:13:53.1596914Z ```python
2025-08-20T18:13:53.1597426Z def main() -> dict[str, str]
2025-08-20T18:13:53.1597787Z ```
2025-08-20T18:13:53.1597951Z 
2025-08-20T18:13:53.1598212Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T18:13:53.1598630Z 
2025-08-20T18:13:53.1598866Z Returns {"status": "success"} when processing completes.
2025-08-20T18:13:53.1599263Z 
2025-08-20T18:13:53.1599393Z <a id="ingest.tasks"></a>
2025-08-20T18:13:53.1599626Z 
2025-08-20T18:13:53.1599750Z # ingest.tasks
2025-08-20T18:13:53.1599975Z 
2025-08-20T18:13:53.1600149Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T18:13:53.1600707Z 
2025-08-20T18:13:53.1600844Z #### task\_import\_file
2025-08-20T18:13:53.1601070Z 
2025-08-20T18:13:53.1601185Z ```python
2025-08-20T18:13:53.1601575Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T18:13:53.1602098Z def task_import_file(self: Any,
2025-08-20T18:13:53.1602490Z                      uri: str,
2025-08-20T18:13:53.1602880Z                      report_type: str | None = None,
2025-08-20T18:13:53.1603375Z                      force: bool = False) -> dict[str, Any]
2025-08-20T18:13:53.1603870Z ```
2025-08-20T18:13:53.1604032Z 
2025-08-20T18:13:53.1604274Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T18:13:53.1604665Z 
2025-08-20T18:13:53.1604825Z <a id="ingest.celery_app"></a>
2025-08-20T18:13:53.1605090Z 
2025-08-20T18:13:53.1605219Z # ingest.celery\_app
2025-08-20T18:13:53.1605422Z 
2025-08-20T18:13:53.1605585Z <a id="ingest.ingest_router"></a>
2025-08-20T18:13:53.1605871Z 
2025-08-20T18:13:53.1606013Z # ingest.ingest\_router
2025-08-20T18:13:53.1606267Z 
2025-08-20T18:13:53.1606409Z <a id="logistics_etl"></a>
2025-08-20T18:13:53.1606659Z 
2025-08-20T18:13:53.1606786Z # logistics\_etl
2025-08-20T18:13:53.1606983Z 
2025-08-20T18:13:53.1607341Z Daily logistics ETL job.
2025-08-20T18:13:53.1607603Z 
2025-08-20T18:13:53.1607766Z <a id="logistics_etl.__main__"></a>
2025-08-20T18:13:53.1608052Z 
2025-08-20T18:13:53.1608191Z # logistics\_etl.\_\_main\_\_
2025-08-20T18:13:53.1608451Z 
2025-08-20T18:13:53.1608593Z <a id="logistics_etl.dsn"></a>
2025-08-20T18:13:53.1608848Z 
2025-08-20T18:13:53.1608972Z # logistics\_etl.dsn
2025-08-20T18:13:53.1609195Z 
2025-08-20T18:13:53.1609413Z Local DSN builder to avoid cross-service dependency.
2025-08-20T18:13:53.1609788Z 
2025-08-20T18:13:53.1609959Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T18:13:53.1610272Z 
2025-08-20T18:13:53.1610387Z #### build\_dsn
2025-08-20T18:13:53.1610577Z 
2025-08-20T18:13:53.1610688Z ```python
2025-08-20T18:13:53.1610996Z def build_dsn(sync: bool = True) -> str
2025-08-20T18:13:53.1611417Z ```
2025-08-20T18:13:53.1611561Z 
2025-08-20T18:13:53.1612123Z Return a Postgres DSN assembled from environment variables.
2025-08-20T18:13:53.1612554Z 
2025-08-20T18:13:53.1612823Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T18:13:53.1613559Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T18:13:53.1614188Z error when any required variable is missing.
2025-08-20T18:13:53.1614529Z 
2025-08-20T18:13:53.1614701Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T18:13:53.1615025Z 
2025-08-20T18:13:53.1615175Z # logistics\_etl.tests.conftest
2025-08-20T18:13:53.1615455Z 
2025-08-20T18:13:53.1615651Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T18:13:53.1616009Z 
2025-08-20T18:13:53.1616180Z # logistics\_etl.tests.test\_repository
2025-08-20T18:13:53.1616492Z 
2025-08-20T18:13:53.1616673Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T18:13:53.1617011Z 
2025-08-20T18:13:53.1617394Z # logistics\_etl.tests.test\_cron
2025-08-20T18:13:53.1617702Z 
2025-08-20T18:13:53.1617882Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T18:13:53.1618234Z 
2025-08-20T18:13:53.1618389Z # logistics\_etl.tests.test\_imports
2025-08-20T18:13:53.1618683Z 
2025-08-20T18:13:53.1618860Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T18:13:53.1619189Z 
2025-08-20T18:13:53.1619346Z # logistics\_etl.tests.test\_smoke
2025-08-20T18:13:53.1619639Z 
2025-08-20T18:13:53.1619812Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T18:13:53.1620135Z 
2025-08-20T18:13:53.1620292Z # logistics\_etl.tests.test\_client
2025-08-20T18:13:53.1620582Z 
2025-08-20T18:13:53.1620730Z <a id="logistics_etl.tests"></a>
2025-08-20T18:13:53.1621003Z 
2025-08-20T18:13:53.1621140Z # logistics\_etl.tests
2025-08-20T18:13:53.1621356Z 
2025-08-20T18:13:53.1621499Z <a id="logistics_etl.flow"></a>
2025-08-20T18:13:53.1621768Z 
2025-08-20T18:13:53.1621896Z # logistics\_etl.flow
2025-08-20T18:13:53.1622110Z 
2025-08-20T18:13:53.1622480Z <a id="logistics_etl.client"></a>
2025-08-20T18:13:53.1622778Z 
2025-08-20T18:13:53.1696732Z # logistics\_etl.client
2025-08-20T18:13:53.1697429Z 
2025-08-20T18:13:53.1697637Z <a id="logistics_etl.cron"></a>
2025-08-20T18:13:53.1697962Z 
2025-08-20T18:13:53.1698114Z # logistics\_etl.cron
2025-08-20T18:13:53.1698369Z 
2025-08-20T18:13:53.1698532Z <a id="logistics_etl.db"></a>
2025-08-20T18:13:53.1698838Z 
2025-08-20T18:13:53.1698962Z # logistics\_etl.db
2025-08-20T18:13:53.1699117Z 
2025-08-20T18:13:53.1699237Z <a id="logistics_etl.repository"></a>
2025-08-20T18:13:53.1699453Z 
2025-08-20T18:13:53.1699566Z # logistics\_etl.repository
2025-08-20T18:13:53.1699752Z 
2025-08-20T18:13:53.1699845Z <a id="alert_bot"></a>
2025-08-20T18:13:53.1700004Z 
2025-08-20T18:13:53.1700110Z # alert\_bot
2025-08-20T18:13:53.1700331Z 
2025-08-20T18:13:53.1700519Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T18:13:53.1700888Z 
2025-08-20T18:13:53.1701055Z # alert\_bot.tests.test\_smoke
2025-08-20T18:13:53.1701362Z 
2025-08-20T18:13:53.1701509Z <a id="alert_bot.tests"></a>
2025-08-20T18:13:53.1701684Z 
2025-08-20T18:13:53.1701778Z # alert\_bot.tests
2025-08-20T18:13:53.1701920Z 
2025-08-20T18:13:53.1702018Z <a id="alert_bot.alert_bot"></a>
2025-08-20T18:13:53.1702193Z 
2025-08-20T18:13:53.1702281Z # alert\_bot.alert\_bot
2025-08-20T18:13:53.1702438Z 
2025-08-20T18:13:53.1702530Z <a id="alert_bot.rules"></a>
2025-08-20T18:13:53.1702698Z 
2025-08-20T18:13:53.1702788Z # alert\_bot.rules
2025-08-20T18:13:53.1702919Z 
2025-08-20T18:13:53.1703002Z <a id="common"></a>
2025-08-20T18:13:53.1703143Z 
2025-08-20T18:13:53.1703220Z # common
2025-08-20T18:13:53.1703328Z 
2025-08-20T18:13:53.1703418Z <a id="common.dsn"></a>
2025-08-20T18:13:53.1703570Z 
2025-08-20T18:13:53.1703649Z # common.dsn
2025-08-20T18:13:53.1703768Z 
2025-08-20T18:13:53.1703878Z <a id="common.dsn.build_dsn"></a>
2025-08-20T18:13:53.1704063Z 
2025-08-20T18:13:53.1704141Z #### build\_dsn
2025-08-20T18:13:53.1704268Z 
2025-08-20T18:13:53.1704353Z ```python
2025-08-20T18:13:53.1704593Z def build_dsn(sync: bool = True) -> str
2025-08-20T18:13:53.1704879Z ```
2025-08-20T18:13:53.1705406Z 
2025-08-20T18:13:53.1705573Z Return a Postgres DSN, validating required variables.
2025-08-20T18:13:53.1705853Z 
2025-08-20T18:13:53.1706100Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T18:13:53.1706656Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T18:13:53.1707503Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T18:13:53.1707912Z missing.
2025-08-20T18:13:53.1708030Z 
2025-08-20T18:13:53.1708136Z <a id="common.models_vendor"></a>
2025-08-20T18:13:53.1708333Z 
2025-08-20T18:13:53.1708425Z # common.models\_vendor
2025-08-20T18:13:53.1708581Z 
2025-08-20T18:13:53.1708699Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T18:13:53.1708868Z 
2025-08-20T18:13:53.1708934Z ## Vendor Objects
2025-08-20T18:13:53.1709043Z 
2025-08-20T18:13:53.1709112Z ```python
2025-08-20T18:13:53.1709278Z class Vendor(Base)
2025-08-20T18:13:53.1709448Z ```
2025-08-20T18:13:53.1709534Z 
2025-08-20T18:13:53.1709613Z Vendor of inventory items.
2025-08-20T18:13:53.1709754Z 
2025-08-20T18:13:53.1709860Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T18:13:53.1710039Z 
2025-08-20T18:13:53.1710119Z ## VendorPrice Objects
2025-08-20T18:13:53.1710235Z 
2025-08-20T18:13:53.1710298Z ```python
2025-08-20T18:13:53.1710460Z class VendorPrice(Base)
2025-08-20T18:13:53.1710630Z ```
2025-08-20T18:13:53.1710713Z 
2025-08-20T18:13:53.1710814Z Association table linking vendors to pricing.
2025-08-20T18:13:53.1710993Z 
2025-08-20T18:13:53.1711068Z <a id="common.db_url"></a>
2025-08-20T18:13:53.1711208Z 
2025-08-20T18:13:53.1711274Z # common.db\_url
2025-08-20T18:13:53.1711379Z 
2025-08-20T18:13:53.1711467Z <a id="common.db_url.build_url"></a>
2025-08-20T18:13:53.1711619Z 
2025-08-20T18:13:53.1711682Z #### build\_url
2025-08-20T18:13:53.1711779Z 
2025-08-20T18:13:53.1711846Z ```python
2025-08-20T18:13:53.1712199Z def build_url(async_: bool = True) -> str
2025-08-20T18:13:53.1712430Z ```
2025-08-20T18:13:53.1712515Z 
2025-08-20T18:13:53.1712620Z Return Postgres DSN from environment variables.
2025-08-20T18:13:53.1712814Z 
2025-08-20T18:13:53.1712894Z <a id="common.keepa"></a>
2025-08-20T18:13:53.1713023Z 
2025-08-20T18:13:53.1713093Z # common.keepa
2025-08-20T18:13:53.1713195Z 
2025-08-20T18:13:53.1713266Z <a id="common.llm"></a>
2025-08-20T18:13:53.1713388Z 
2025-08-20T18:13:53.1713452Z # common.llm
2025-08-20T18:13:53.1713546Z 
2025-08-20T18:13:53.1713622Z <a id="common.settings"></a>
2025-08-20T18:13:53.1713764Z 
2025-08-20T18:13:53.1713831Z # common.settings
2025-08-20T18:13:53.1713936Z 
2025-08-20T18:13:53.1714010Z <a id="common.db"></a>
2025-08-20T18:13:53.1714122Z 
2025-08-20T18:13:53.1714184Z # common.db
2025-08-20T18:13:53.1714275Z 
2025-08-20T18:13:53.1714375Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T18:13:53.1714544Z 
2025-08-20T18:13:53.1714619Z #### build\_sqlalchemy\_url
2025-08-20T18:13:53.1714759Z 
2025-08-20T18:13:53.1714821Z ```python
2025-08-20T18:13:53.1714987Z def build_sqlalchemy_url() -> str
2025-08-20T18:13:53.1715201Z ```
2025-08-20T18:13:53.1715287Z 
2025-08-20T18:13:53.1715387Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T18:13:53.1715557Z 
2025-08-20T18:13:53.1715645Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T18:13:53.1715809Z 
2025-08-20T18:13:53.1715891Z #### build\_asyncpg\_dsn
2025-08-20T18:13:53.1716017Z 
2025-08-20T18:13:53.1716080Z ```python
2025-08-20T18:13:53.1716257Z def build_asyncpg_dsn() -> str
2025-08-20T18:13:53.1716453Z ```
2025-08-20T18:13:53.1716540Z 
2025-08-20T18:13:53.1716666Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T18:13:53.1716875Z 
2025-08-20T18:13:53.1716966Z <a id="common.db.refresh_mvs"></a>
2025-08-20T18:13:53.1717350Z 
2025-08-20T18:13:53.1717461Z #### refresh\_mvs
2025-08-20T18:13:53.1717634Z 
2025-08-20T18:13:53.1717730Z ```python
2025-08-20T18:13:53.1718036Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T18:13:53.1718376Z ```
2025-08-20T18:13:53.1718459Z 
2025-08-20T18:13:53.1718780Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T18:13:53.1719000Z 
2025-08-20T18:13:53.1719076Z <a id="common.config"></a>
2025-08-20T18:13:53.1719203Z 
2025-08-20T18:13:53.1719649Z # common.config
2025-08-20T18:13:53.1740736Z 
2025-08-20T18:13:53.1740933Z <a id="common.base"></a>
2025-08-20T18:13:53.1741162Z 
2025-08-20T18:13:53.1741264Z # common.base
2025-08-20T18:13:53.1741442Z 
2025-08-20T18:13:53.1741573Z <a id="common.base.Base"></a>
2025-08-20T18:13:53.1741796Z 
2025-08-20T18:13:53.1741906Z ## Base Objects
2025-08-20T18:13:53.1742057Z 
2025-08-20T18:13:53.1742154Z ```python
2025-08-20T18:13:53.1742425Z class Base(DeclarativeBase)
2025-08-20T18:13:53.1742745Z ```
2025-08-20T18:13:53.1742889Z 
2025-08-20T18:13:53.1743031Z Base class for SQLAlchemy models.
2025-08-20T18:13:53.1743284Z 
2025-08-20T18:13:53.1743400Z <a id="repricer"></a>
2025-08-20T18:13:53.1743600Z 
2025-08-20T18:13:53.1743722Z # repricer
2025-08-20T18:13:53.1743872Z 
2025-08-20T18:13:53.1744016Z <a id="repricer.app.schemas"></a>
2025-08-20T18:13:53.1744275Z 
2025-08-20T18:13:53.1744399Z # repricer.app.schemas
2025-08-20T18:13:53.1744598Z 
2025-08-20T18:13:53.1744761Z <a id="repricer.app.deps"></a>
2025-08-20T18:13:53.1745011Z 
2025-08-20T18:13:53.1745133Z # repricer.app.deps
2025-08-20T18:13:53.1745343Z 
2025-08-20T18:13:53.1745527Z Placeholder module for Keepa / SP-API clients.
2025-08-20T18:13:53.1745842Z 
2025-08-20T18:13:53.1745989Z <a id="repricer.app.logic"></a>
2025-08-20T18:13:53.1746235Z 
2025-08-20T18:13:53.1746367Z # repricer.app.logic
2025-08-20T18:13:53.1746580Z 
2025-08-20T18:13:53.1746763Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T18:13:53.1747289Z 
2025-08-20T18:13:53.1747420Z #### MIN\_MARGIN
2025-08-20T18:13:53.1747634Z 
2025-08-20T18:13:53.1747749Z 15 % ROI
2025-08-20T18:13:53.1747910Z 
2025-08-20T18:13:53.1748097Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T18:13:53.1748438Z 
2025-08-20T18:13:53.1748920Z #### compute\_price
2025-08-20T18:13:53.1749139Z 
2025-08-20T18:13:53.1749273Z ```python
2025-08-20T18:13:53.1749735Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T18:13:53.1750283Z ```
2025-08-20T18:13:53.1750435Z 
2025-08-20T18:13:53.1750632Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T18:13:53.1751146Z Replace with real competitive logic later.
2025-08-20T18:13:53.1751466Z 
2025-08-20T18:13:53.1751615Z <a id="repricer.app.main"></a>
2025-08-20T18:13:53.1751888Z 
2025-08-20T18:13:53.1752018Z # repricer.app.main
2025-08-20T18:13:53.1752223Z 
2025-08-20T18:13:53.1752371Z <a id="repricer.app"></a>
2025-08-20T18:13:53.1752606Z 
2025-08-20T18:13:53.1752721Z # repricer.app
2025-08-20T18:13:53.1752912Z 
2025-08-20T18:13:53.1753077Z <a id="repricer.tests.test_imports"></a>
2025-08-20T18:13:53.1753401Z 
2025-08-20T18:13:53.1753552Z # repricer.tests.test\_imports
2025-08-20T18:13:53.1753830Z 
2025-08-20T18:13:53.1753986Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T18:13:53.1754291Z 
2025-08-20T18:13:53.1754450Z # repricer.tests.test\_smoke
2025-08-20T18:13:53.1754721Z 
2025-08-20T18:13:53.1754855Z <a id="repricer.tests"></a>
2025-08-20T18:13:53.1755095Z 
2025-08-20T18:13:53.1755219Z # repricer.tests
2025-08-20T18:13:53.1755402Z 
2025-08-20T18:13:53.1755511Z <a id="db"></a>
2025-08-20T18:13:53.1755746Z 
2025-08-20T18:13:53.1755858Z # db
2025-08-20T18:13:53.1756010Z 
2025-08-20T18:13:53.1756165Z <a id="db.utils.views"></a>
2025-08-20T18:13:53.1756424Z 
2025-08-20T18:13:53.1756539Z # db.utils.views
2025-08-20T18:13:53.1756744Z 
2025-08-20T18:13:53.1756919Z <a id="db.utils.views.replace_view"></a>
2025-08-20T18:13:53.1757450Z 
2025-08-20T18:13:53.1757579Z #### replace\_view
2025-08-20T18:13:53.1757792Z 
2025-08-20T18:13:53.1757908Z ```python
2025-08-20T18:13:53.1758287Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T18:13:53.1758752Z ```
2025-08-20T18:13:53.1758905Z 
2025-08-20T18:13:53.1759082Z Drop and recreate a SQL view atomically.
2025-08-20T18:13:53.1759404Z 
2025-08-20T18:13:53.1759526Z <a id="db.utils"></a>
2025-08-20T18:13:53.1760023Z 
2025-08-20T18:13:53.1760136Z # db.utils
2025-08-20T18:13:53.1760306Z 
2025-08-20T18:13:53.1760457Z <a id="price_importer"></a>
2025-08-20T18:13:53.1760713Z 
2025-08-20T18:13:53.1760851Z # price\_importer
2025-08-20T18:13:53.1761047Z 
2025-08-20T18:13:53.1761306Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T18:13:53.1761672Z 
2025-08-20T18:13:53.1761822Z # price\_importer.services\_common.dsn
2025-08-20T18:13:53.1762074Z 
2025-08-20T18:13:53.1762349Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T18:13:53.1762729Z 
2025-08-20T18:13:53.1762874Z #### build\_dsn
2025-08-20T18:13:53.1763061Z 
2025-08-20T18:13:53.1763208Z ```python
2025-08-20T18:13:53.1763547Z def build_dsn(sync: bool = True) -> str
2025-08-20T18:13:53.1763921Z ```
2025-08-20T18:13:53.1764015Z 
2025-08-20T18:13:53.1764083Z Return safe DSN.
2025-08-20T18:13:53.1764201Z 
2025-08-20T18:13:53.1764402Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T18:13:53.1764777Z Falls back to individual PG_* variables.
2025-08-20T18:13:53.1765307Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T18:13:53.1765513Z 
2025-08-20T18:13:53.1765656Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T18:13:53.1765871Z 
2025-08-20T18:13:53.1765986Z # price\_importer.services\_common.models\_vendor
2025-08-20T18:13:53.1766183Z 
2025-08-20T18:13:53.1766291Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T18:13:53.1766478Z 
2025-08-20T18:13:53.1766573Z # price\_importer.services\_common.db\_url
2025-08-20T18:13:53.1766750Z 
2025-08-20T18:13:53.1766884Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T18:13:53.1767295Z 
2025-08-20T18:13:53.1767416Z #### build\_url
2025-08-20T18:13:53.1767566Z 
2025-08-20T18:13:53.1767710Z ```python
2025-08-20T18:13:53.1767891Z def build_url(async_: bool = True) -> str
2025-08-20T18:13:53.1768334Z ```
2025-08-20T18:13:53.1768423Z 
2025-08-20T18:13:53.1768538Z Return Postgres DSN from environment variables.
2025-08-20T18:13:53.1768738Z 
2025-08-20T18:13:53.1768850Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T18:13:53.1769038Z 
2025-08-20T18:13:53.1769141Z # price\_importer.services\_common.keepa
2025-08-20T18:13:53.1769311Z 
2025-08-20T18:13:53.1769414Z <a id="price_importer.services_common.llm"></a>
2025-08-20T18:13:53.1769608Z 
2025-08-20T18:13:53.1769698Z # price\_importer.services\_common.llm
2025-08-20T18:13:53.1769863Z 
2025-08-20T18:13:53.1769984Z <a id="price_importer.services_common.settings"></a>
2025-08-20T18:13:53.1770179Z 
2025-08-20T18:13:53.1770276Z # price\_importer.services\_common.settings
2025-08-20T18:13:53.1770450Z 
2025-08-20T18:13:53.1770558Z <a id="price_importer.services_common.db"></a>
2025-08-20T18:13:53.1770737Z 
2025-08-20T18:13:53.1770824Z # price\_importer.services\_common.db
2025-08-20T18:13:53.1770988Z 
2025-08-20T18:13:53.1771140Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T18:13:53.1771380Z 
2025-08-20T18:13:53.1771470Z #### build\_sqlalchemy\_url
2025-08-20T18:13:53.1771600Z 
2025-08-20T18:13:53.1771664Z ```python
2025-08-20T18:13:53.1771841Z def build_sqlalchemy_url() -> str
2025-08-20T18:13:53.1772049Z ```
2025-08-20T18:13:53.1772137Z 
2025-08-20T18:13:53.1772232Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T18:13:53.1772404Z 
2025-08-20T18:13:53.1772546Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T18:13:53.1772779Z 
2025-08-20T18:13:53.1772852Z #### build\_asyncpg\_dsn
2025-08-20T18:13:53.1772978Z 
2025-08-20T18:13:53.1773045Z ```python
2025-08-20T18:13:53.1773220Z def build_asyncpg_dsn() -> str
2025-08-20T18:13:53.1773421Z ```
2025-08-20T18:13:53.1773502Z 
2025-08-20T18:13:53.1773628Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T18:13:53.1773844Z 
2025-08-20T18:13:53.1773972Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T18:13:53.1774180Z 
2025-08-20T18:13:53.1774249Z #### refresh\_mvs
2025-08-20T18:13:53.1774493Z 
2025-08-20T18:13:53.1774555Z ```python
2025-08-20T18:13:53.1774759Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T18:13:53.1775006Z ```
2025-08-20T18:13:53.1775094Z 
2025-08-20T18:13:53.1775236Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T18:13:53.1775450Z 
2025-08-20T18:13:53.1775548Z <a id="price_importer.services_common"></a>
2025-08-20T18:13:53.1775728Z 
2025-08-20T18:13:53.1775815Z # price\_importer.services\_common
2025-08-20T18:13:53.1775967Z 
2025-08-20T18:13:53.1776078Z <a id="price_importer.services_common.base"></a>
2025-08-20T18:13:53.1776265Z 
2025-08-20T18:13:53.1776356Z # price\_importer.services\_common.base
2025-08-20T18:13:53.1776529Z 
2025-08-20T18:13:53.1776619Z <a id="price_importer.normaliser"></a>
2025-08-20T18:13:53.1776780Z 
2025-08-20T18:13:53.1776863Z # price\_importer.normaliser
2025-08-20T18:13:53.1777011Z 
2025-08-20T18:13:53.1777331Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T18:13:53.1777540Z 
2025-08-20T18:13:53.1777646Z # price\_importer.common.models\_vendor
2025-08-20T18:13:53.1777812Z 
2025-08-20T18:13:53.1777906Z <a id="price_importer.common.db_url"></a>
2025-08-20T18:13:53.1778082Z 
2025-08-20T18:13:53.1778168Z # price\_importer.common.db\_url
2025-08-20T18:13:53.1778317Z 
2025-08-20T18:13:53.1778422Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T18:13:53.1778611Z 
2025-08-20T18:13:53.1778675Z #### make\_dsn
2025-08-20T18:13:53.1778779Z 
2025-08-20T18:13:53.1778847Z ```python
2025-08-20T18:13:53.1779022Z def make_dsn(async_: bool = False) -> str
2025-08-20T18:13:53.1779254Z ```
2025-08-20T18:13:53.1779340Z 
2025-08-20T18:13:53.1779421Z Return DSN using shared builder.
2025-08-20T18:13:53.1779574Z 
2025-08-20T18:13:53.1779684Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T18:13:53.1779873Z 
2025-08-20T18:13:53.1779938Z #### build\_url
2025-08-20T18:13:53.1780046Z 
2025-08-20T18:13:53.1780252Z ```python
2025-08-20T18:13:53.1780438Z def build_url(async_: bool = False) -> str
2025-08-20T18:13:53.1780671Z ```
2025-08-20T18:13:53.1780752Z 
2025-08-20T18:13:53.1780882Z Return Postgres DSN built from environment variables.
2025-08-20T18:13:53.1781083Z 
2025-08-20T18:13:53.1781169Z <a id="price_importer.common"></a>
2025-08-20T18:13:53.1781328Z 
2025-08-20T18:13:53.1781407Z # price\_importer.common
2025-08-20T18:13:53.1781535Z 
2025-08-20T18:13:53.1781633Z <a id="price_importer.common.base"></a>
2025-08-20T18:13:53.1781798Z 
2025-08-20T18:13:53.1781883Z # price\_importer.common.base
2025-08-20T18:13:53.1782025Z 
2025-08-20T18:13:53.1782127Z <a id="price_importer.tests.conftest"></a>
2025-08-20T18:13:53.1782298Z 
2025-08-20T18:13:53.1782383Z # price\_importer.tests.conftest
2025-08-20T18:13:53.1782533Z 
2025-08-20T18:13:53.1782632Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T18:13:53.1782847Z 
2025-08-20T18:13:53.1782940Z # price\_importer.tests.test\_reader
2025-08-20T18:13:53.1783098Z 
2025-08-20T18:13:53.1783203Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T18:13:53.1783383Z 
2025-08-20T18:13:53.1783479Z # price\_importer.tests.test\_imports
2025-08-20T18:13:53.1783640Z 
2025-08-20T18:13:53.1783737Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T18:13:53.1783912Z 
2025-08-20T18:13:53.1783996Z # price\_importer.tests.test\_smoke
2025-08-20T18:13:53.1784153Z 
2025-08-20T18:13:53.1784262Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T18:13:53.1784445Z 
2025-08-20T18:13:53.1784539Z # price\_importer.tests.test\_normaliser
2025-08-20T18:13:53.1784709Z 
2025-08-20T18:13:53.1784804Z <a id="price_importer.tests"></a>
2025-08-20T18:13:53.1784962Z 
2025-08-20T18:13:53.1785039Z # price\_importer.tests
2025-08-20T18:13:53.1785170Z 
2025-08-20T18:13:53.1785255Z <a id="price_importer.reader"></a>
2025-08-20T18:13:53.1785405Z 
2025-08-20T18:13:53.1785486Z # price\_importer.reader
2025-08-20T18:13:53.1785614Z 
2025-08-20T18:13:53.1785705Z <a id="price_importer.repository"></a>
2025-08-20T18:13:53.1785871Z 
2025-08-20T18:13:53.1785962Z # price\_importer.repository
2025-08-20T18:13:53.1786235Z 
2025-08-20T18:13:53.1786323Z <a id="price_importer.import"></a>
2025-08-20T18:13:53.1786481Z 
2025-08-20T18:13:53.1786559Z # price\_importer.import
2025-08-20T18:13:53.1786684Z 
2025-08-20T18:13:53.1786761Z <a id="fees_h10"></a>
2025-08-20T18:13:53.1786875Z 
2025-08-20T18:13:53.1786938Z # fees\_h10
2025-08-20T18:13:53.1787033Z 
2025-08-20T18:13:53.1787301Z <a id="fees_h10.worker"></a>
2025-08-20T18:13:53.1787444Z 
2025-08-20T18:13:53.1787512Z # fees\_h10.worker
2025-08-20T18:13:53.1787627Z 
2025-08-20T18:13:53.1787728Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T18:13:53.1787907Z 
2025-08-20T18:13:53.1787980Z #### list\_active\_asins
2025-08-20T18:13:53.1788105Z 
2025-08-20T18:13:53.1788169Z ```python
2025-08-20T18:13:53.1788349Z def list_active_asins() -> list[str]
2025-08-20T18:13:53.1788558Z ```
2025-08-20T18:13:53.1788641Z 
2025-08-20T18:13:53.1788763Z Return known ASINs or an empty list if unavailable.
2025-08-20T18:13:53.1788963Z 
2025-08-20T18:13:53.1789052Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T18:13:53.1789224Z 
2025-08-20T18:13:53.1789306Z # fees\_h10.tests.test\_smoke
2025-08-20T18:13:53.1789443Z 
2025-08-20T18:13:53.1789526Z <a id="fees_h10.tests"></a>
2025-08-20T18:13:53.1789657Z 
2025-08-20T18:13:53.1789724Z # fees\_h10.tests
2025-08-20T18:13:53.1789829Z 
2025-08-20T18:13:53.1789909Z <a id="fees_h10.client"></a>
2025-08-20T18:13:53.1790038Z 
2025-08-20T18:13:53.1790102Z # fees\_h10.client
2025-08-20T18:13:53.1790215Z 
2025-08-20T18:13:53.1790294Z <a id="fees_h10.repository"></a>
2025-08-20T18:13:53.1790433Z 
2025-08-20T18:13:53.1790505Z # fees\_h10.repository
2025-08-20T18:13:53.1790627Z 
2025-08-20T18:13:53.1790730Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T18:13:53.1790912Z 
2025-08-20T18:13:53.1790991Z #### upsert\_fees\_raw
2025-08-20T18:13:53.1791106Z 
2025-08-20T18:13:53.1791169Z ```python
2025-08-20T18:13:53.1791343Z def upsert_fees_raw(engine: Engine,
2025-08-20T18:13:53.1791722Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T18:13:53.1791973Z                     *,
2025-08-20T18:13:53.1792196Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T18:13:53.1792465Z ```
2025-08-20T18:13:53.1792546Z 
2025-08-20T18:13:53.1792634Z Idempotent upsert for fees.
2025-08-20T18:13:53.1792769Z 
2025-08-20T18:13:53.1792921Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T18:13:53.1793266Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T18:13:53.1793566Z Only updates when one of the mutable fields changes.
2025-08-20T18:13:53.1793767Z 
2025-08-20T18:13:53.1793836Z <a id="emailer"></a>
2025-08-20T18:13:53.1793945Z 
2025-08-20T18:13:53.1794012Z # emailer
2025-08-20T18:13:53.1794099Z 
2025-08-20T18:13:53.1794197Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T18:13:53.1794374Z 
2025-08-20T18:13:53.1794469Z # emailer.tests.test\_import\_emailer
2025-08-20T18:13:53.1794643Z 
2025-08-20T18:13:53.1794731Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T18:13:53.1794899Z 
2025-08-20T18:13:53.1794979Z # emailer.tests.test\_smoke
2025-08-20T18:13:53.1795115Z 
2025-08-20T18:13:53.1795195Z <a id="emailer.tests"></a>
2025-08-20T18:13:53.1795325Z 
2025-08-20T18:13:53.1795391Z # emailer.tests
2025-08-20T18:13:53.1795499Z 
2025-08-20T18:13:53.1795589Z <a id="emailer.generate_body"></a>
2025-08-20T18:13:53.1795739Z 
2025-08-20T18:13:53.1795813Z # emailer.generate\_body
2025-08-20T18:13:53.1795945Z 
2025-08-20T18:13:53.1796016Z <a id="llm_server"></a>
2025-08-20T18:13:53.1796134Z 
2025-08-20T18:13:53.1796198Z # llm\_server
2025-08-20T18:13:53.1796300Z 
2025-08-20T18:13:53.1796376Z <a id="llm_server.app"></a>
2025-08-20T18:13:53.1796506Z 
2025-08-20T18:13:53.1796580Z # llm\_server.app
2025-08-20T18:13:53.1796686Z 
