2025-08-19T08:15:23.2046670Z ##[group]Run pydoc-markdown
2025-08-19T08:15:23.2046956Z [36;1mpydoc-markdown[0m
2025-08-19T08:15:23.2086665Z shell: /usr/bin/bash -e {0}
2025-08-19T08:15:23.2086877Z env:
2025-08-19T08:15:23.2087110Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:15:23.2087502Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T08:15:23.2087898Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:15:23.2088235Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:15:23.2088567Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:15:23.2088899Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T08:15:23.2089174Z ##[endgroup]
2025-08-19T08:15:23.5621848Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T08:15:23.5622591Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T08:15:23.5623051Z In "pydoc-markdown.yml"
2025-08-19T08:15:23.5623508Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T08:15:23.5624160Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T08:15:23.5624992Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T08:15:23.5625633Z 
2025-08-19T08:15:23.8733772Z <a id="__init__"></a>
2025-08-19T08:15:23.8734063Z 
2025-08-19T08:15:23.8734191Z # \_\_init\_\_
2025-08-19T08:15:23.8734383Z 
2025-08-19T08:15:23.8734510Z <a id="api"></a>
2025-08-19T08:15:23.8734705Z 
2025-08-19T08:15:23.8734822Z # api
2025-08-19T08:15:23.8734980Z 
2025-08-19T08:15:23.8735122Z <a id="api.errors"></a>
2025-08-19T08:15:23.8735367Z 
2025-08-19T08:15:23.8735485Z # api.errors
2025-08-19T08:15:23.8735765Z 
2025-08-19T08:15:23.8735925Z <a id="api.sentry_config"></a>
2025-08-19T08:15:23.8736192Z 
2025-08-19T08:15:23.8736322Z # api.sentry\_config
2025-08-19T08:15:23.8736538Z 
2025-08-19T08:15:23.8736770Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T08:15:23.8737089Z 
2025-08-19T08:15:23.8737575Z # api.tests.test\_sentry\_scrub
2025-08-19T08:15:23.8737881Z 
2025-08-19T08:15:23.8738042Z <a id="api.tests.test_errors_json"></a>
2025-08-19T08:15:23.8738350Z 
2025-08-19T08:15:23.8738502Z # api.tests.test\_errors\_json
2025-08-19T08:15:23.8738761Z 
2025-08-19T08:15:23.8738903Z <a id="api.tests.test_llm"></a>
2025-08-19T08:15:23.8739159Z 
2025-08-19T08:15:23.8739292Z # api.tests.test\_llm
2025-08-19T08:15:23.8739513Z 
2025-08-19T08:15:23.8739932Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T08:15:23.8740266Z 
2025-08-19T08:15:23.8740453Z # api.tests.test\_sentry\_event
2025-08-19T08:15:23.8740710Z 
2025-08-19T08:15:23.8740937Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T08:15:23.8741326Z 
2025-08-19T08:15:23.8741472Z ## DummyTransport Objects
2025-08-19T08:15:23.8741712Z 
2025-08-19T08:15:23.8741837Z ```python
2025-08-19T08:15:23.8742137Z class DummyTransport()
2025-08-19T08:15:23.8742473Z ```
2025-08-19T08:15:23.8742627Z 
2025-08-19T08:15:23.8742950Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T08:15:23.8743468Z 
2025-08-19T08:15:23.8743605Z #### capture\_envelope
2025-08-19T08:15:23.8743827Z 
2025-08-19T08:15:23.8743945Z ```python
2025-08-19T08:15:23.8744257Z def capture_envelope(envelope)
2025-08-19T08:15:23.8744624Z ```
2025-08-19T08:15:23.8744770Z 
2025-08-19T08:15:23.8744995Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T08:15:23.8745384Z 
2025-08-19T08:15:23.8745535Z <a id="api.tests.test_cors"></a>
2025-08-19T08:15:23.8745806Z 
2025-08-19T08:15:23.8745940Z # api.tests.test\_cors
2025-08-19T08:15:23.8746167Z 
2025-08-19T08:15:23.8746316Z <a id="api.tests.test_imports"></a>
2025-08-19T08:15:23.8746602Z 
2025-08-19T08:15:23.8746751Z # api.tests.test\_imports
2025-08-19T08:15:23.8746990Z 
2025-08-19T08:15:23.8747147Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T08:15:23.8747452Z 
2025-08-19T08:15:23.8747602Z # api.tests.test\_rate\_limit
2025-08-19T08:15:23.8747866Z 
2025-08-19T08:15:23.8748047Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T08:15:23.8748779Z 
2025-08-19T08:15:23.8748896Z #### app
2025-08-19T08:15:23.8749054Z 
2025-08-19T08:15:23.8749174Z noqa: E402
2025-08-19T08:15:23.8749338Z 
2025-08-19T08:15:23.8749497Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T08:15:23.8749979Z 
2025-08-19T08:15:23.8750138Z # api.tests.test\_entrypoint
2025-08-19T08:15:23.8750396Z 
2025-08-19T08:15:23.8750544Z <a id="api.tests.test_health"></a>
2025-08-19T08:15:23.8750827Z 
2025-08-19T08:15:23.8750960Z # api.tests.test\_health
2025-08-19T08:15:23.8751193Z 
2025-08-19T08:15:23.8751341Z <a id="api.logging_config"></a>
2025-08-19T08:15:23.8751595Z 
2025-08-19T08:15:23.8751722Z # api.logging\_config
2025-08-19T08:15:23.8751931Z 
2025-08-19T08:15:23.8752085Z <a id="api.migrations.env"></a>
2025-08-19T08:15:23.8752350Z 
2025-08-19T08:15:23.8752480Z # api.migrations.env
2025-08-19T08:15:23.8752698Z 
2025-08-19T08:15:23.8752910Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T08:15:23.8753297Z 
2025-08-19T08:15:23.8753502Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T08:15:23.8753865Z 
2025-08-19T08:15:23.8754070Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T08:15:23.8754427Z 
2025-08-19T08:15:23.8754606Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T08:15:23.8754916Z 
2025-08-19T08:15:23.8755195Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T08:15:23.8755644Z 
2025-08-19T08:15:23.8755897Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T08:15:23.8756305Z 
2025-08-19T08:15:23.8756536Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T08:15:23.8756909Z 
2025-08-19T08:15:23.8757104Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T08:15:23.8757451Z 
2025-08-19T08:15:23.8757662Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T08:15:23.8758028Z 
2025-08-19T08:15:23.8758215Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T08:15:23.8758563Z 
2025-08-19T08:15:23.8759024Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T08:15:23.8759422Z 
2025-08-19T08:15:23.8759800Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T08:15:23.8760164Z 
2025-08-19T08:15:23.8760385Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T08:15:23.8760762Z 
2025-08-19T08:15:23.8760956Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T08:15:23.8761304Z 
2025-08-19T08:15:23.8761533Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T08:15:23.8761918Z 
2025-08-19T08:15:23.8762109Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T08:15:23.8762460Z 
2025-08-19T08:15:23.8762724Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T08:15:23.8763145Z 
2025-08-19T08:15:23.8763373Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T08:15:23.8763754Z 
2025-08-19T08:15:23.8763982Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T08:15:23.8764356Z 
2025-08-19T08:15:23.8764574Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T08:15:23.8764927Z 
2025-08-19T08:15:23.8765173Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T08:15:23.8765597Z 
2025-08-19T08:15:23.8765805Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T08:15:23.8766265Z 
2025-08-19T08:15:23.8766470Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T08:15:23.8766819Z 
2025-08-19T08:15:23.8766984Z # api.migrations.versions.0001\_baseline
2025-08-19T08:15:23.8767297Z 
2025-08-19T08:15:23.8767455Z <a id="api.migrations.versions"></a>
2025-08-19T08:15:23.8767753Z 
2025-08-19T08:15:23.8767895Z # api.migrations.versions
2025-08-19T08:15:23.8768142Z 
2025-08-19T08:15:23.8768283Z <a id="api.migrations"></a>
2025-08-19T08:15:23.8768532Z 
2025-08-19T08:15:23.8768666Z # api.migrations
2025-08-19T08:15:23.8768862Z 
2025-08-19T08:15:23.8768982Z <a id="api.db"></a>
2025-08-19T08:15:23.8769187Z 
2025-08-19T08:15:23.8769299Z # api.db
2025-08-19T08:15:23.8769458Z 
2025-08-19T08:15:23.8769785Z <a id="api.routes.stats"></a>
2025-08-19T08:15:23.8770347Z 
2025-08-19T08:15:23.8770484Z # api.routes.stats
2025-08-19T08:15:23.8770680Z 
2025-08-19T08:15:23.8770847Z <a id="api.routes.stats.kpi"></a>
2025-08-19T08:15:23.8771132Z 
2025-08-19T08:15:23.8771243Z #### kpi
2025-08-19T08:15:23.8771406Z 
2025-08-19T08:15:23.8771525Z ```python
2025-08-19T08:15:23.8771823Z @router.get("/stats/kpi")
2025-08-19T08:15:23.8772249Z def kpi() -> List[Dict[str, int]]
2025-08-19T08:15:23.8772616Z ```
2025-08-19T08:15:23.8772772Z 
2025-08-19T08:15:23.8772910Z Return KPI metrics (mock).
2025-08-19T08:15:23.8773157Z 
2025-08-19T08:15:23.8773372Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T08:15:23.8773691Z 
2025-08-19T08:15:23.8773812Z #### roi\_by\_vendor
2025-08-19T08:15:23.8774010Z 
2025-08-19T08:15:23.8774128Z ```python
2025-08-19T08:15:23.8774431Z @router.get("/stats/roi_by_vendor")
2025-08-19T08:15:23.8774892Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T08:15:23.8775315Z ```
2025-08-19T08:15:23.8775488Z 
2025-08-19T08:15:23.8775639Z Return ROI percent by vendor.
2025-08-19T08:15:23.8775896Z 
2025-08-19T08:15:23.8776061Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T08:15:23.8776366Z 
2025-08-19T08:15:23.8776477Z #### roi\_trend
2025-08-19T08:15:23.8776656Z 
2025-08-19T08:15:23.8776774Z ```python
2025-08-19T08:15:23.8777061Z @router.get("/stats/roi_trend")
2025-08-19T08:15:23.8777488Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T08:15:23.8777912Z ```
2025-08-19T08:15:23.8778067Z 
2025-08-19T08:15:23.8778201Z Return 30-day ROI trend.
2025-08-19T08:15:23.8778430Z 
2025-08-19T08:15:23.8778573Z <a id="api.routes.roi"></a>
2025-08-19T08:15:23.8778816Z 
2025-08-19T08:15:23.8778936Z # api.routes.roi
2025-08-19T08:15:23.8779127Z 
2025-08-19T08:15:23.8779283Z <a id="api.routes.health"></a>
2025-08-19T08:15:23.8779538Z 
2025-08-19T08:15:23.8779873Z # api.routes.health
2025-08-19T08:15:23.8780087Z 
2025-08-19T08:15:23.8780251Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T08:15:23.8780790Z 
2025-08-19T08:15:23.8780916Z #### MAX\_SKEW
2025-08-19T08:15:23.8781101Z 
2025-08-19T08:15:23.8781206Z seconds
2025-08-19T08:15:23.8781356Z 
2025-08-19T08:15:23.8781524Z <a id="api.routes.health.health"></a>
2025-08-19T08:15:23.8781827Z 
2025-08-19T08:15:23.8781934Z #### health
2025-08-19T08:15:23.8782102Z 
2025-08-19T08:15:23.8782215Z ```python
2025-08-19T08:15:23.8782553Z @router.get("/health", include_in_schema=False)
2025-08-19T08:15:23.8783243Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T08:15:23.8783870Z ```
2025-08-19T08:15:23.8784037Z 
2025-08-19T08:15:23.8784250Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T08:15:23.8784614Z 
2025-08-19T08:15:23.8784779Z <a id="api.routes.repository"></a>
2025-08-19T08:15:23.8785067Z 
2025-08-19T08:15:23.8785208Z # api.routes.repository
2025-08-19T08:15:23.8785439Z 
2025-08-19T08:15:23.8785566Z <a id="api.routes"></a>
2025-08-19T08:15:23.8785781Z 
2025-08-19T08:15:23.8785894Z # api.routes
2025-08-19T08:15:23.8786085Z 
2025-08-19T08:15:23.8786230Z <a id="api.models.fee"></a>
2025-08-19T08:15:23.8786472Z 
2025-08-19T08:15:23.8786598Z # api.models.fee
2025-08-19T08:15:23.8786788Z 
2025-08-19T08:15:23.8786933Z <a id="api.models"></a>
2025-08-19T08:15:23.8787156Z 
2025-08-19T08:15:23.8787268Z # api.models
2025-08-19T08:15:23.8787439Z 
2025-08-19T08:15:23.8787584Z <a id="api.roi_repository"></a>
2025-08-19T08:15:23.8787837Z 
2025-08-19T08:15:23.8787950Z # api.roi\_repository
2025-08-19T08:15:23.8788150Z 
2025-08-19T08:15:23.8788265Z <a id="api.main"></a>
2025-08-19T08:15:23.8788451Z 
2025-08-19T08:15:23.8788552Z # api.main
2025-08-19T08:15:23.8788712Z 
2025-08-19T08:15:23.8788834Z <a id="api.main.ready"></a>
2025-08-19T08:15:23.8789068Z 
2025-08-19T08:15:23.8789179Z #### ready
2025-08-19T08:15:23.8789337Z 
2025-08-19T08:15:23.8789446Z ```python
2025-08-19T08:15:23.8790107Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T08:15:23.8790914Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T08:15:23.8791838Z                                                                       str]
2025-08-19T08:15:23.8792257Z ```
2025-08-19T08:15:23.8792413Z 
2025-08-19T08:15:23.8792584Z Return 200 only when migrations are at head.
2025-08-19T08:15:23.8792904Z 
2025-08-19T08:15:23.8793037Z <a id="api.config"></a>
2025-08-19T08:15:23.8793255Z 
2025-08-19T08:15:23.8793367Z # api.config
2025-08-19T08:15:23.8793536Z 
2025-08-19T08:15:23.8793659Z <a id="etl"></a>
2025-08-19T08:15:23.8793843Z 
2025-08-19T08:15:23.8793946Z # etl
2025-08-19T08:15:23.8794105Z 
2025-08-19T08:15:23.8794247Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T08:15:23.8794518Z 
2025-08-19T08:15:23.8794654Z # etl.fba\_fee\_ingestor
2025-08-19T08:15:23.8794878Z 
2025-08-19T08:15:23.8795020Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T08:15:23.8795285Z 
2025-08-19T08:15:23.8795449Z # etl.sp\_fees\_ingestor
2025-08-19T08:15:23.8795673Z 
2025-08-19T08:15:23.8795815Z <a id="etl.keepa_ingestor"></a>
2025-08-19T08:15:23.8796096Z 
2025-08-19T08:15:23.8796218Z # etl.keepa\_ingestor
2025-08-19T08:15:23.8796421Z 
2025-08-19T08:15:23.8796539Z <a id="etl.db"></a>
2025-08-19T08:15:23.8796742Z 
2025-08-19T08:15:23.8796852Z # etl.db
2025-08-19T08:15:23.8797007Z 
2025-08-19T08:15:23.8797161Z <a id="etl.dialects.schemas"></a>
2025-08-19T08:15:23.8797430Z 
2025-08-19T08:15:23.8797559Z # etl.dialects.schemas
2025-08-19T08:15:23.8797784Z 
2025-08-19T08:15:23.8797975Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T08:15:23.8798317Z 
2025-08-19T08:15:23.8798480Z # etl.dialects.amazon\_reimbursements
2025-08-19T08:15:23.8798786Z 
2025-08-19T08:15:23.8798960Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T08:15:23.8799281Z 
2025-08-19T08:15:23.8799443Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T08:15:23.8799896Z 
2025-08-19T08:15:23.8800059Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T08:15:23.8800373Z 
2025-08-19T08:15:23.8800518Z # etl.dialects.amazon\_returns
2025-08-19T08:15:23.8800978Z 
2025-08-19T08:15:23.8801164Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T08:15:23.8801491Z 
2025-08-19T08:15:23.8801644Z # etl.dialects.amazon\_fee\_preview
2025-08-19T08:15:23.8801975Z 
2025-08-19T08:15:23.8802174Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T08:15:23.8802529Z 
2025-08-19T08:15:23.8802693Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T08:15:23.8803010Z 
2025-08-19T08:15:23.8803186Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T08:15:23.8803515Z 
2025-08-19T08:15:23.8803676Z # etl.dialects.amazon\_settlements
2025-08-19T08:15:23.8803977Z 
2025-08-19T08:15:23.8804113Z <a id="etl.dialects"></a>
2025-08-19T08:15:23.8804347Z 
2025-08-19T08:15:23.8804468Z # etl.dialects
2025-08-19T08:15:23.8804649Z 
2025-08-19T08:15:23.8804771Z <a id="ingest"></a>
2025-08-19T08:15:23.8804974Z 
2025-08-19T08:15:23.8805080Z # ingest
2025-08-19T08:15:23.8805232Z 
2025-08-19T08:15:23.8805376Z <a id="ingest.maintenance"></a>
2025-08-19T08:15:23.8805649Z 
2025-08-19T08:15:23.8805790Z # ingest.maintenance
2025-08-19T08:15:23.8806005Z 
2025-08-19T08:15:23.8806154Z <a id="ingest.copy_loader"></a>
2025-08-19T08:15:23.8806407Z 
2025-08-19T08:15:23.8806532Z # ingest.copy\_loader
2025-08-19T08:15:23.8806742Z 
2025-08-19T08:15:23.8806931Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T08:15:23.8807270Z 
2025-08-19T08:15:23.8807401Z #### copy\_df\_via\_temp
2025-08-19T08:15:23.8807633Z 
2025-08-19T08:15:23.8807742Z ```python
2025-08-19T08:15:23.8808042Z def copy_df_via_temp(engine: Engine,
2025-08-19T08:15:23.8808470Z                      df: pd.DataFrame,
2025-08-19T08:15:23.8808885Z                      target_table: str,
2025-08-19T08:15:23.8809273Z                      *,
2025-08-19T08:15:23.8809826Z                      target_schema: Optional[str] = None,
2025-08-19T08:15:23.8810314Z                      columns: Sequence[str],
2025-08-19T08:15:23.8810809Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T08:15:23.8811320Z                      analyze_after: bool = False,
2025-08-19T08:15:23.8812057Z                      connection: Any | None = None) -> int
2025-08-19T08:15:23.8812492Z ```
2025-08-19T08:15:23.8812637Z 
2025-08-19T08:15:23.8812917Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T08:15:23.8813350Z 
2025-08-19T08:15:23.8813514Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T08:15:23.8813807Z 
2025-08-19T08:15:23.8813953Z # ingest.tests.test\_smoke
2025-08-19T08:15:23.8814204Z 
2025-08-19T08:15:23.8814338Z <a id="ingest.tests"></a>
2025-08-19T08:15:23.8814569Z 
2025-08-19T08:15:23.8814690Z # ingest.tests
2025-08-19T08:15:23.8814871Z 
2025-08-19T08:15:23.8815014Z <a id="ingest.upload_router"></a>
2025-08-19T08:15:23.8815288Z 
2025-08-19T08:15:23.8815430Z # ingest.upload\_router
2025-08-19T08:15:23.8815651Z 
2025-08-19T08:15:23.8815797Z <a id="ingest.email_watcher"></a>
2025-08-19T08:15:23.8816074Z 
2025-08-19T08:15:23.8816203Z # ingest.email\_watcher
2025-08-19T08:15:23.8816419Z 
2025-08-19T08:15:23.8816584Z <a id="ingest.email_watcher.main"></a>
2025-08-19T08:15:23.8816903Z 
2025-08-19T08:15:23.8817011Z #### main
2025-08-19T08:15:23.8817171Z 
2025-08-19T08:15:23.8817288Z ```python
2025-08-19T08:15:23.8817574Z def main() -> dict[str, str]
2025-08-19T08:15:23.8817921Z ```
2025-08-19T08:15:23.8818067Z 
2025-08-19T08:15:23.8818324Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T08:15:23.8818753Z 
2025-08-19T08:15:23.8818987Z Returns {"status": "success"} when processing completes.
2025-08-19T08:15:23.8819377Z 
2025-08-19T08:15:23.8819514Z <a id="ingest.tasks"></a>
2025-08-19T08:15:23.8819965Z 
2025-08-19T08:15:23.8820094Z # ingest.tasks
2025-08-19T08:15:23.8820278Z 
2025-08-19T08:15:23.8820456Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T08:15:23.8820812Z 
2025-08-19T08:15:23.8820938Z #### task\_import\_file
2025-08-19T08:15:23.8821149Z 
2025-08-19T08:15:23.8821257Z ```python
2025-08-19T08:15:23.8821634Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T08:15:23.8822374Z def task_import_file(self: Any,
2025-08-19T08:15:23.8822773Z                      uri: str,
2025-08-19T08:15:23.8823186Z                      report_type: Optional[str] = None,
2025-08-19T08:15:23.8823687Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T08:15:23.8824121Z ```
2025-08-19T08:15:23.8824269Z 
2025-08-19T08:15:23.8824504Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T08:15:23.8824900Z 
2025-08-19T08:15:23.8825041Z <a id="ingest.celery_app"></a>
2025-08-19T08:15:23.8825298Z 
2025-08-19T08:15:23.8825431Z # ingest.celery\_app
2025-08-19T08:15:23.8825641Z 
2025-08-19T08:15:23.8825787Z <a id="ingest.ingest_router"></a>
2025-08-19T08:15:23.8826058Z 
2025-08-19T08:15:23.8826198Z # ingest.ingest\_router
2025-08-19T08:15:23.8826413Z 
2025-08-19T08:15:23.8826547Z <a id="logistics_etl"></a>
2025-08-19T08:15:23.8826790Z 
2025-08-19T08:15:23.8826905Z # logistics\_etl
2025-08-19T08:15:23.8827093Z 
2025-08-19T08:15:23.8827226Z Daily logistics ETL job.
2025-08-19T08:15:23.8827480Z 
2025-08-19T08:15:23.8827623Z <a id="logistics_etl.__main__"></a>
2025-08-19T08:15:23.8827902Z 
2025-08-19T08:15:23.8828051Z # logistics\_etl.\_\_main\_\_
2025-08-19T08:15:23.8828299Z 
2025-08-19T08:15:23.8828438Z <a id="logistics_etl.dsn"></a>
2025-08-19T08:15:23.8828701Z 
2025-08-19T08:15:23.8828822Z # logistics\_etl.dsn
2025-08-19T08:15:23.8829028Z 
2025-08-19T08:15:23.8829235Z Local DSN builder to avoid cross-service dependency.
2025-08-19T08:15:23.8829784Z 
2025-08-19T08:15:23.8829948Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T08:15:23.8830250Z 
2025-08-19T08:15:23.8830369Z #### build\_dsn
2025-08-19T08:15:23.8830552Z 
2025-08-19T08:15:23.8830663Z ```python
2025-08-19T08:15:23.8830981Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:15:23.8831377Z ```
2025-08-19T08:15:23.8831535Z 
2025-08-19T08:15:23.8831795Z Return a Postgres DSN assembled from environment variables.
2025-08-19T08:15:23.8832209Z 
2025-08-19T08:15:23.8832490Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T08:15:23.8833467Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T08:15:23.8834104Z error when any required variable is missing.
2025-08-19T08:15:23.8834432Z 
2025-08-19T08:15:23.8834599Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T08:15:23.8834922Z 
2025-08-19T08:15:23.8835070Z # logistics\_etl.tests.conftest
2025-08-19T08:15:23.8835334Z 
2025-08-19T08:15:23.8835520Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T08:15:23.8835868Z 
2025-08-19T08:15:23.8836023Z # logistics\_etl.tests.test\_repository
2025-08-19T08:15:23.8836324Z 
2025-08-19T08:15:23.8836494Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T08:15:23.8836804Z 
2025-08-19T08:15:23.8836955Z # logistics\_etl.tests.test\_cron
2025-08-19T08:15:23.8837238Z 
2025-08-19T08:15:23.8837419Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T08:15:23.8837751Z 
2025-08-19T08:15:23.8837906Z # logistics\_etl.tests.test\_imports
2025-08-19T08:15:23.8838225Z 
2025-08-19T08:15:23.8838406Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T08:15:23.8838727Z 
2025-08-19T08:15:23.8838881Z # logistics\_etl.tests.test\_smoke
2025-08-19T08:15:23.8839160Z 
2025-08-19T08:15:23.8839328Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T08:15:23.8839828Z 
2025-08-19T08:15:23.8839983Z # logistics\_etl.tests.test\_client
2025-08-19T08:15:23.8840268Z 
2025-08-19T08:15:23.8840411Z <a id="logistics_etl.tests"></a>
2025-08-19T08:15:23.8840682Z 
2025-08-19T08:15:23.8840808Z # logistics\_etl.tests
2025-08-19T08:15:23.8841023Z 
2025-08-19T08:15:23.8841168Z <a id="logistics_etl.flow"></a>
2025-08-19T08:15:23.8841427Z 
2025-08-19T08:15:23.8841549Z # logistics\_etl.flow
2025-08-19T08:15:23.8841764Z 
2025-08-19T08:15:23.8841908Z <a id="logistics_etl.client"></a>
2025-08-19T08:15:23.8842180Z 
2025-08-19T08:15:23.8842305Z # logistics\_etl.client
2025-08-19T08:15:23.8842525Z 
2025-08-19T08:15:23.8842662Z <a id="logistics_etl.cron"></a>
2025-08-19T08:15:23.8843132Z 
2025-08-19T08:15:23.8843269Z # logistics\_etl.cron
2025-08-19T08:15:23.8843489Z 
2025-08-19T08:15:23.8843629Z <a id="logistics_etl.db"></a>
2025-08-19T08:15:23.8843893Z 
2025-08-19T08:15:23.8872320Z # logistics\_etl.db
2025-08-19T08:15:23.8872542Z 
2025-08-19T08:15:23.8872700Z <a id="logistics_etl.repository"></a>
2025-08-19T08:15:23.8873056Z 
2025-08-19T08:15:23.8873182Z # logistics\_etl.repository
2025-08-19T08:15:23.8873394Z 
2025-08-19T08:15:23.8873509Z <a id="alert_bot"></a>
2025-08-19T08:15:23.8873693Z 
2025-08-19T08:15:23.8873790Z # alert\_bot
2025-08-19T08:15:23.8873944Z 
2025-08-19T08:15:23.8874075Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T08:15:23.8874331Z 
2025-08-19T08:15:23.8874454Z # alert\_bot.tests.test\_smoke
2025-08-19T08:15:23.8874693Z 
2025-08-19T08:15:23.8874809Z <a id="alert_bot.tests"></a>
2025-08-19T08:15:23.8875018Z 
2025-08-19T08:15:23.8875198Z # alert\_bot.tests
2025-08-19T08:15:23.8875361Z 
2025-08-19T08:15:23.8875488Z <a id="alert_bot.alert_bot"></a>
2025-08-19T08:15:23.8875730Z 
2025-08-19T08:15:23.8875845Z # alert\_bot.alert\_bot
2025-08-19T08:15:23.8876026Z 
2025-08-19T08:15:23.8876137Z <a id="alert_bot.rules"></a>
2025-08-19T08:15:23.8876353Z 
2025-08-19T08:15:23.8876458Z # alert\_bot.rules
2025-08-19T08:15:23.8876623Z 
2025-08-19T08:15:23.8876729Z <a id="common"></a>
2025-08-19T08:15:23.8876885Z 
2025-08-19T08:15:23.8876973Z # common
2025-08-19T08:15:23.8877101Z 
2025-08-19T08:15:23.8877215Z <a id="common.dsn"></a>
2025-08-19T08:15:23.8877390Z 
2025-08-19T08:15:23.8877484Z # common.dsn
2025-08-19T08:15:23.8877647Z 
2025-08-19T08:15:23.8877780Z <a id="common.dsn.build_dsn"></a>
2025-08-19T08:15:23.8878030Z 
2025-08-19T08:15:23.8878144Z #### build\_dsn
2025-08-19T08:15:23.8878309Z 
2025-08-19T08:15:23.8878414Z ```python
2025-08-19T08:15:23.8878699Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:15:23.8879067Z ```
2025-08-19T08:15:23.8879210Z 
2025-08-19T08:15:23.8879412Z Return a Postgres DSN, validating required variables.
2025-08-19T08:15:23.8879959Z 
2025-08-19T08:15:23.8880310Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T08:15:23.8881016Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T08:15:23.8881446Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T08:15:23.8881759Z missing.
2025-08-19T08:15:23.8881853Z 
2025-08-19T08:15:23.8881947Z <a id="common.models_vendor"></a>
2025-08-19T08:15:23.8882101Z 
2025-08-19T08:15:23.8882178Z # common.models\_vendor
2025-08-19T08:15:23.8882305Z 
2025-08-19T08:15:23.8882395Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T08:15:23.8882563Z 
2025-08-19T08:15:23.8882636Z ## Vendor Objects
2025-08-19T08:15:23.8882744Z 
2025-08-19T08:15:23.8882808Z ```python
2025-08-19T08:15:23.8882967Z class Vendor(Base)
2025-08-19T08:15:23.8883132Z ```
2025-08-19T08:15:23.8883216Z 
2025-08-19T08:15:23.8883301Z Vendor of inventory items.
2025-08-19T08:15:23.8883435Z 
2025-08-19T08:15:23.8883537Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T08:15:23.8883734Z 
2025-08-19T08:15:23.8883807Z ## VendorPrice Objects
2025-08-19T08:15:23.8883924Z 
2025-08-19T08:15:23.8883995Z ```python
2025-08-19T08:15:23.8884154Z class VendorPrice(Base)
2025-08-19T08:15:23.8884337Z ```
2025-08-19T08:15:23.8884420Z 
2025-08-19T08:15:23.8884523Z Association table linking vendors to pricing.
2025-08-19T08:15:23.8884713Z 
2025-08-19T08:15:23.8884791Z <a id="common.db_url"></a>
2025-08-19T08:15:23.8884923Z 
2025-08-19T08:15:23.8884992Z # common.db\_url
2025-08-19T08:15:23.8885104Z 
2025-08-19T08:15:23.8885187Z <a id="common.db_url.build_url"></a>
2025-08-19T08:15:23.8885344Z 
2025-08-19T08:15:23.8885416Z #### build\_url
2025-08-19T08:15:23.8885518Z 
2025-08-19T08:15:23.8885582Z ```python
2025-08-19T08:15:23.8885762Z def build_url(async_: bool = True) -> str
2025-08-19T08:15:23.8885986Z ```
2025-08-19T08:15:23.8886073Z 
2025-08-19T08:15:23.8886170Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:15:23.8886343Z 
2025-08-19T08:15:23.8886541Z <a id="common.keepa"></a>
2025-08-19T08:15:23.8886685Z 
2025-08-19T08:15:23.8886753Z # common.keepa
2025-08-19T08:15:23.8886855Z 
2025-08-19T08:15:23.8886935Z <a id="common.llm"></a>
2025-08-19T08:15:23.8887053Z 
2025-08-19T08:15:23.8887118Z # common.llm
2025-08-19T08:15:23.8887215Z 
2025-08-19T08:15:23.8887300Z <a id="common.settings"></a>
2025-08-19T08:15:23.8887436Z 
2025-08-19T08:15:23.8887503Z # common.settings
2025-08-19T08:15:23.8887619Z 
2025-08-19T08:15:23.8887691Z <a id="common.db"></a>
2025-08-19T08:15:23.8887806Z 
2025-08-19T08:15:23.8887877Z # common.db
2025-08-19T08:15:23.8887969Z 
2025-08-19T08:15:23.8888060Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T08:15:23.8888231Z 
2025-08-19T08:15:23.8888312Z #### build\_sqlalchemy\_url
2025-08-19T08:15:23.8888446Z 
2025-08-19T08:15:23.8888509Z ```python
2025-08-19T08:15:23.8888684Z def build_sqlalchemy_url() -> str
2025-08-19T08:15:23.8888890Z ```
2025-08-19T08:15:23.8888980Z 
2025-08-19T08:15:23.8889077Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:15:23.8889406Z 
2025-08-19T08:15:23.8889508Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T08:15:23.8889850Z 
2025-08-19T08:15:23.8889927Z #### build\_asyncpg\_dsn
2025-08-19T08:15:23.8890052Z 
2025-08-19T08:15:23.8890122Z ```python
2025-08-19T08:15:23.8890294Z def build_asyncpg_dsn() -> str
2025-08-19T08:15:23.8890493Z ```
2025-08-19T08:15:23.8890574Z 
2025-08-19T08:15:23.8890705Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:15:23.8890921Z 
2025-08-19T08:15:23.8891005Z <a id="common.db.refresh_mvs"></a>
2025-08-19T08:15:23.8891154Z 
2025-08-19T08:15:23.8891225Z #### refresh\_mvs
2025-08-19T08:15:23.8891329Z 
2025-08-19T08:15:23.8891391Z ```python
2025-08-19T08:15:23.8891588Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:15:23.8891834Z ```
2025-08-19T08:15:23.8891921Z 
2025-08-19T08:15:23.8892057Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:15:23.8892273Z 
2025-08-19T08:15:23.8892352Z <a id="common.config"></a>
2025-08-19T08:15:23.8892491Z 
2025-08-19T08:15:23.8892695Z # common.config
2025-08-19T08:15:23.8892802Z 
2025-08-19T08:15:23.8892881Z <a id="common.base"></a>
2025-08-19T08:15:23.8893001Z 
2025-08-19T08:15:23.8893065Z # common.base
2025-08-19T08:15:23.8893167Z 
2025-08-19T08:15:23.8893248Z <a id="common.base.Base"></a>
2025-08-19T08:15:23.8893385Z 
2025-08-19T08:15:23.8893448Z ## Base Objects
2025-08-19T08:15:23.8893551Z 
2025-08-19T08:15:23.8893612Z ```python
2025-08-19T08:15:23.8893785Z class Base(DeclarativeBase)
2025-08-19T08:15:23.8893975Z ```
2025-08-19T08:15:23.8894055Z 
2025-08-19T08:15:23.8894144Z Base class for SQLAlchemy models.
2025-08-19T08:15:23.8894290Z 
2025-08-19T08:15:23.8894362Z <a id="repricer"></a>
2025-08-19T08:15:23.8894483Z 
2025-08-19T08:15:23.8894545Z # repricer
2025-08-19T08:15:23.8894637Z 
2025-08-19T08:15:23.8894725Z <a id="repricer.app.schemas"></a>
2025-08-19T08:15:23.8894878Z 
2025-08-19T08:15:23.8894953Z # repricer.app.schemas
2025-08-19T08:15:23.8895072Z 
2025-08-19T08:15:23.8895166Z <a id="repricer.app.deps"></a>
2025-08-19T08:15:23.8895308Z 
2025-08-19T08:15:23.8895381Z # repricer.app.deps
2025-08-19T08:15:23.8895499Z 
2025-08-19T08:15:23.8895612Z Placeholder module for Keepa / SP-API clients.
2025-08-19T08:15:23.8895795Z 
2025-08-19T08:15:23.8895876Z <a id="repricer.app.logic"></a>
2025-08-19T08:15:23.8896023Z 
2025-08-19T08:15:23.8896097Z # repricer.app.logic
2025-08-19T08:15:23.8896212Z 
2025-08-19T08:15:23.8896313Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T08:15:23.8896486Z 
2025-08-19T08:15:23.8896549Z #### MIN\_MARGIN
2025-08-19T08:15:23.8896658Z 
2025-08-19T08:15:23.8896720Z 15 % ROI
2025-08-19T08:15:23.8896807Z 
2025-08-19T08:15:23.8896909Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T08:15:23.8897093Z 
2025-08-19T08:15:23.8897161Z #### compute\_price
2025-08-19T08:15:23.8897269Z 
2025-08-19T08:15:23.8897337Z ```python
2025-08-19T08:15:23.8897579Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T08:15:23.8898007Z ```
2025-08-19T08:15:23.8898090Z 
2025-08-19T08:15:23.8898202Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T08:15:23.8898485Z Replace with real competitive logic later.
2025-08-19T08:15:23.8898652Z 
2025-08-19T08:15:23.8898737Z <a id="repricer.app.main"></a>
2025-08-19T08:15:23.8898881Z 
2025-08-19T08:15:23.8898956Z # repricer.app.main
2025-08-19T08:15:23.8899062Z 
2025-08-19T08:15:23.8899144Z <a id="repricer.app"></a>
2025-08-19T08:15:23.8899270Z 
2025-08-19T08:15:23.8899336Z # repricer.app
2025-08-19T08:15:23.8899435Z 
2025-08-19T08:15:23.8899533Z <a id="repricer.tests.test_imports"></a>
2025-08-19T08:15:23.8899839Z 
2025-08-19T08:15:23.8899920Z # repricer.tests.test\_imports
2025-08-19T08:15:23.8900063Z 
2025-08-19T08:15:23.8900151Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T08:15:23.8900311Z 
2025-08-19T08:15:23.8900397Z # repricer.tests.test\_smoke
2025-08-19T08:15:23.8900536Z 
2025-08-19T08:15:23.8900613Z <a id="repricer.tests"></a>
2025-08-19T08:15:23.8900744Z 
2025-08-19T08:15:23.8900824Z # repricer.tests
2025-08-19T08:15:23.8900936Z 
2025-08-19T08:15:23.8901000Z <a id="db"></a>
2025-08-19T08:15:23.8901107Z 
2025-08-19T08:15:23.8901167Z # db
2025-08-19T08:15:23.8901251Z 
2025-08-19T08:15:23.8901324Z <a id="db.utils.views"></a>
2025-08-19T08:15:23.8901457Z 
2025-08-19T08:15:23.8901522Z # db.utils.views
2025-08-19T08:15:23.8901623Z 
2025-08-19T08:15:23.8901752Z <a id="db.utils.views.replace_view"></a>
2025-08-19T08:15:23.8901920Z 
2025-08-19T08:15:23.8901987Z #### replace\_view
2025-08-19T08:15:23.8902096Z 
2025-08-19T08:15:23.8902158Z ```python
2025-08-19T08:15:23.8902352Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T08:15:23.8902594Z ```
2025-08-19T08:15:23.8902677Z 
2025-08-19T08:15:23.8902769Z Drop and recreate a SQL view atomically.
2025-08-19T08:15:23.8902930Z 
2025-08-19T08:15:23.8902999Z <a id="db.utils"></a>
2025-08-19T08:15:23.8903111Z 
2025-08-19T08:15:23.8903182Z # db.utils
2025-08-19T08:15:23.8903270Z 
2025-08-19T08:15:23.8903344Z <a id="price_importer"></a>
2025-08-19T08:15:23.8903482Z 
2025-08-19T08:15:23.8903723Z # price\_importer
2025-08-19T08:15:23.8903831Z 
2025-08-19T08:15:23.8903933Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T08:15:23.8904118Z 
2025-08-19T08:15:23.8904208Z # price\_importer.services\_common.dsn
2025-08-19T08:15:23.8904372Z 
2025-08-19T08:15:23.8904501Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T08:15:23.8904703Z 
2025-08-19T08:15:23.8904766Z #### build\_dsn
2025-08-19T08:15:23.8904869Z 
2025-08-19T08:15:23.8904932Z ```python
2025-08-19T08:15:23.8905100Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:15:23.8905318Z ```
2025-08-19T08:15:23.8905400Z 
2025-08-19T08:15:23.8905470Z Return safe DSN.
2025-08-19T08:15:23.8905573Z 
2025-08-19T08:15:23.8905921Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T08:15:23.8906121Z 
2025-08-19T08:15:23.8906253Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T08:15:23.8906457Z 
2025-08-19T08:15:23.8906565Z # price\_importer.services\_common.models\_vendor
2025-08-19T08:15:23.8906772Z 
2025-08-19T08:15:23.8906878Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T08:15:23.8907062Z 
2025-08-19T08:15:23.8907159Z # price\_importer.services\_common.db\_url
2025-08-19T08:15:23.8907326Z 
2025-08-19T08:15:23.8907457Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T08:15:23.8907674Z 
2025-08-19T08:15:23.8907738Z #### build\_url
2025-08-19T08:15:23.8907836Z 
2025-08-19T08:15:23.8907899Z ```python
2025-08-19T08:15:23.8908075Z def build_url(async_: bool = True) -> str
2025-08-19T08:15:23.8908293Z ```
2025-08-19T08:15:23.8908380Z 
2025-08-19T08:15:23.8908477Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:15:23.8908650Z 
2025-08-19T08:15:23.8908762Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T08:15:23.8908946Z 
2025-08-19T08:15:23.8909037Z # price\_importer.services\_common.keepa
2025-08-19T08:15:23.8909207Z 
2025-08-19T08:15:23.8909306Z <a id="price_importer.services_common.llm"></a>
2025-08-19T08:15:23.8909725Z 
2025-08-19T08:15:23.8909816Z # price\_importer.services\_common.llm
2025-08-19T08:15:23.8909984Z 
2025-08-19T08:15:23.8910131Z <a id="price_importer.services_common.settings"></a>
2025-08-19T08:15:23.8910322Z 
2025-08-19T08:15:23.8910416Z # price\_importer.services\_common.settings
2025-08-19T08:15:23.8910590Z 
2025-08-19T08:15:23.8910688Z <a id="price_importer.services_common.db"></a>
2025-08-19T08:15:23.8910862Z 
2025-08-19T08:15:23.8910949Z # price\_importer.services\_common.db
2025-08-19T08:15:23.8911114Z 
2025-08-19T08:15:23.8911265Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T08:15:23.8911501Z 
2025-08-19T08:15:23.8911583Z #### build\_sqlalchemy\_url
2025-08-19T08:15:23.8911713Z 
2025-08-19T08:15:23.8911778Z ```python
2025-08-19T08:15:23.8911955Z def build_sqlalchemy_url() -> str
2025-08-19T08:15:23.8912157Z ```
2025-08-19T08:15:23.8912246Z 
2025-08-19T08:15:23.8912341Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:15:23.8912515Z 
2025-08-19T08:15:23.8912670Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T08:15:23.8912894Z 
2025-08-19T08:15:23.8912968Z #### build\_asyncpg\_dsn
2025-08-19T08:15:23.8913091Z 
2025-08-19T08:15:23.8913159Z ```python
2025-08-19T08:15:23.8913324Z def build_asyncpg_dsn() -> str
2025-08-19T08:15:23.8913527Z ```
2025-08-19T08:15:23.8913608Z 
2025-08-19T08:15:23.8913736Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:15:23.8913951Z 
2025-08-19T08:15:23.8914076Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T08:15:23.8914280Z 
2025-08-19T08:15:23.8914351Z #### refresh\_mvs
2025-08-19T08:15:23.8914455Z 
2025-08-19T08:15:23.8914517Z ```python
2025-08-19T08:15:23.8914714Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:15:23.8914959Z ```
2025-08-19T08:15:23.8915047Z 
2025-08-19T08:15:23.8915181Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:15:23.8915393Z 
2025-08-19T08:15:23.8915492Z <a id="price_importer.services_common"></a>
2025-08-19T08:15:23.8915801Z 
2025-08-19T08:15:23.8915887Z # price\_importer.services\_common
2025-08-19T08:15:23.8916037Z 
2025-08-19T08:15:23.8916145Z <a id="price_importer.services_common.base"></a>
2025-08-19T08:15:23.8916323Z 
2025-08-19T08:15:23.8916413Z # price\_importer.services\_common.base
2025-08-19T08:15:23.8916580Z 
2025-08-19T08:15:23.8916668Z <a id="price_importer.normaliser"></a>
2025-08-19T08:15:23.8916829Z 
2025-08-19T08:15:23.8916909Z # price\_importer.normaliser
2025-08-19T08:15:23.8917051Z 
2025-08-19T08:15:23.8917154Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T08:15:23.8917331Z 
2025-08-19T08:15:23.8917421Z # price\_importer.common.models\_vendor
2025-08-19T08:15:23.8917579Z 
2025-08-19T08:15:23.8917668Z <a id="price_importer.common.db_url"></a>
2025-08-19T08:15:23.8917841Z 
2025-08-19T08:15:23.8917924Z # price\_importer.common.db\_url
2025-08-19T08:15:23.8918068Z 
2025-08-19T08:15:23.8918171Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T08:15:23.8918368Z 
2025-08-19T08:15:23.8918433Z #### make\_dsn
2025-08-19T08:15:23.8918531Z 
2025-08-19T08:15:23.8918600Z ```python
2025-08-19T08:15:23.8918767Z def make_dsn(async_: bool = False) -> str
2025-08-19T08:15:23.8918989Z ```
2025-08-19T08:15:23.8919071Z 
2025-08-19T08:15:23.8919187Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T08:15:23.8919387Z 
2025-08-19T08:15:23.8919492Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T08:15:23.8919806Z 
2025-08-19T08:15:23.8919876Z #### build\_url
2025-08-19T08:15:23.8919974Z 
2025-08-19T08:15:23.8920035Z ```python
2025-08-19T08:15:23.8920213Z def build_url(async_: bool = False) -> str
2025-08-19T08:15:23.8920433Z ```
2025-08-19T08:15:23.8920518Z 
2025-08-19T08:15:23.8920638Z Return Postgres DSN built from environment variables.
2025-08-19T08:15:23.8920835Z 
2025-08-19T08:15:23.8920920Z <a id="price_importer.common"></a>
2025-08-19T08:15:23.8921077Z 
2025-08-19T08:15:23.8921154Z # price\_importer.common
2025-08-19T08:15:23.8921399Z 
2025-08-19T08:15:23.8921499Z <a id="price_importer.common.base"></a>
2025-08-19T08:15:23.8921662Z 
2025-08-19T08:15:23.8921744Z # price\_importer.common.base
2025-08-19T08:15:23.8921889Z 
2025-08-19T08:15:23.8921986Z <a id="price_importer.tests.conftest"></a>
2025-08-19T08:15:23.8922155Z 
2025-08-19T08:15:23.8922240Z # price\_importer.tests.conftest
2025-08-19T08:15:23.8922413Z 
2025-08-19T08:15:23.8922513Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T08:15:23.8922688Z 
2025-08-19T08:15:23.8922780Z # price\_importer.tests.test\_reader
2025-08-19T08:15:23.8922936Z 
2025-08-19T08:15:23.8923036Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T08:15:23.8923216Z 
2025-08-19T08:15:23.8923304Z # price\_importer.tests.test\_imports
2025-08-19T08:15:23.8923459Z 
2025-08-19T08:15:23.8923556Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T08:15:23.8923730Z 
2025-08-19T08:15:23.8923813Z # price\_importer.tests.test\_smoke
2025-08-19T08:15:23.8923968Z 
2025-08-19T08:15:23.8924082Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T08:15:23.8924268Z 
2025-08-19T08:15:23.8924358Z # price\_importer.tests.test\_normaliser
2025-08-19T08:15:23.8924527Z 
2025-08-19T08:15:23.8924611Z <a id="price_importer.tests"></a>
2025-08-19T08:15:23.8924758Z 
2025-08-19T08:15:23.8924835Z # price\_importer.tests
2025-08-19T08:15:23.8924963Z 
2025-08-19T08:15:23.8925046Z <a id="price_importer.reader"></a>
2025-08-19T08:15:23.8925193Z 
2025-08-19T08:15:23.8925276Z # price\_importer.reader
2025-08-19T08:15:23.8925401Z 
2025-08-19T08:15:23.8925490Z <a id="price_importer.repository"></a>
2025-08-19T08:15:23.8925658Z 
2025-08-19T08:15:23.8925739Z # price\_importer.repository
2025-08-19T08:15:23.8925876Z 
2025-08-19T08:15:23.8925959Z <a id="price_importer.import"></a>
2025-08-19T08:15:23.8926114Z 
2025-08-19T08:15:23.8926189Z # price\_importer.import
2025-08-19T08:15:23.8926310Z 
2025-08-19T08:15:23.8926390Z <a id="fees_h10"></a>
2025-08-19T08:15:23.8926501Z 
2025-08-19T08:15:23.8926571Z # fees\_h10
2025-08-19T08:15:23.8926789Z 
2025-08-19T08:15:23.8926872Z <a id="fees_h10.worker"></a>
2025-08-19T08:15:23.8927002Z 
2025-08-19T08:15:23.8927067Z # fees\_h10.worker
2025-08-19T08:15:23.8927177Z 
2025-08-19T08:15:23.8927272Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T08:15:23.8927443Z 
2025-08-19T08:15:23.8927520Z #### list\_active\_asins
2025-08-19T08:15:23.8927637Z 
2025-08-19T08:15:23.8927698Z ```python
2025-08-19T08:15:23.8927868Z def list_active_asins() -> list[str]
2025-08-19T08:15:23.8928073Z ```
2025-08-19T08:15:23.8928158Z 
2025-08-19T08:15:23.8928272Z Return known ASINs or an empty list if unavailable.
2025-08-19T08:15:23.8928462Z 
2025-08-19T08:15:23.8928543Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T08:15:23.8928702Z 
2025-08-19T08:15:23.8928780Z # fees\_h10.tests.test\_smoke
2025-08-19T08:15:23.8928912Z 
2025-08-19T08:15:23.8928990Z <a id="fees_h10.tests"></a>
2025-08-19T08:15:23.8929118Z 
2025-08-19T08:15:23.8929183Z # fees\_h10.tests
2025-08-19T08:15:23.8929300Z 
2025-08-19T08:15:23.8929379Z <a id="fees_h10.client"></a>
2025-08-19T08:15:23.8929507Z 
2025-08-19T08:15:23.8929677Z # fees\_h10.client
2025-08-19T08:15:23.8929786Z 
2025-08-19T08:15:23.8929867Z <a id="fees_h10.repository"></a>
2025-08-19T08:15:23.8930009Z 
2025-08-19T08:15:23.8930084Z # fees\_h10.repository
2025-08-19T08:15:23.8930200Z 
2025-08-19T08:15:23.8930268Z <a id="emailer"></a>
2025-08-19T08:15:23.8930376Z 
2025-08-19T08:15:23.8930442Z # emailer
2025-08-19T08:15:23.8930528Z 
2025-08-19T08:15:23.8930626Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T08:15:23.8930803Z 
2025-08-19T08:15:23.8930889Z # emailer.tests.test\_import\_emailer
2025-08-19T08:15:23.8931044Z 
2025-08-19T08:15:23.8931133Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T08:15:23.8931287Z 
2025-08-19T08:15:23.8931366Z # emailer.tests.test\_smoke
2025-08-19T08:15:23.8931502Z 
2025-08-19T08:15:23.8931583Z <a id="emailer.tests"></a>
2025-08-19T08:15:23.8931711Z 
2025-08-19T08:15:23.8931777Z # emailer.tests
2025-08-19T08:15:23.8932002Z 
2025-08-19T08:15:23.8932091Z <a id="emailer.generate_body"></a>
2025-08-19T08:15:23.8932240Z 
2025-08-19T08:15:23.8932315Z # emailer.generate\_body
2025-08-19T08:15:23.8932444Z 
2025-08-19T08:15:23.8932514Z <a id="llm_server"></a>
2025-08-19T08:15:23.8932631Z 
2025-08-19T08:15:23.8932701Z # llm\_server
2025-08-19T08:15:23.8932796Z 
2025-08-19T08:15:23.8932874Z <a id="llm_server.app"></a>
2025-08-19T08:15:23.8933010Z 
2025-08-19T08:15:23.8933076Z # llm\_server.app
2025-08-19T08:15:23.8933181Z 
