2025-08-16T21:33:29.9903047Z ##[group]Run pydoc-markdown
2025-08-16T21:33:29.9903382Z [36;1mpydoc-markdown[0m
2025-08-16T21:33:29.9944662Z shell: /usr/bin/bash -e {0}
2025-08-16T21:33:29.9944895Z env:
2025-08-16T21:33:29.9945129Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:33:29.9945542Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T21:33:29.9945927Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:33:29.9946270Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:33:29.9946599Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:33:29.9946937Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T21:33:29.9947219Z ##[endgroup]
2025-08-16T21:33:30.2873363Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T21:33:30.2874127Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T21:33:30.2874592Z In "pydoc-markdown.yml"
2025-08-16T21:33:30.2874990Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T21:33:30.2875675Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T21:33:30.2876416Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T21:33:30.2876908Z 
2025-08-16T21:33:30.4898720Z <a id="__init__"></a>
2025-08-16T21:33:30.4898985Z 
2025-08-16T21:33:30.4899110Z # \_\_init\_\_
2025-08-16T21:33:30.4899290Z 
2025-08-16T21:33:30.4899412Z <a id="api"></a>
2025-08-16T21:33:30.4899611Z 
2025-08-16T21:33:30.4899720Z # api
2025-08-16T21:33:30.4899872Z 
2025-08-16T21:33:30.4900015Z <a id="api.tests.test_llm"></a>
2025-08-16T21:33:30.4900277Z 
2025-08-16T21:33:30.4900413Z # api.tests.test\_llm
2025-08-16T21:33:30.4900633Z 
2025-08-16T21:33:30.4900796Z <a id="api.tests.test_imports"></a>
2025-08-16T21:33:30.4901079Z 
2025-08-16T21:33:30.4901217Z # api.tests.test\_imports
2025-08-16T21:33:30.4901458Z 
2025-08-16T21:33:30.4901612Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T21:33:30.4901896Z 
2025-08-16T21:33:30.4902036Z # api.tests.test\_entrypoint
2025-08-16T21:33:30.4902539Z 
2025-08-16T21:33:30.4902693Z <a id="api.tests.test_health"></a>
2025-08-16T21:33:30.4902964Z 
2025-08-16T21:33:30.4903104Z # api.tests.test\_health
2025-08-16T21:33:30.4903327Z 
2025-08-16T21:33:30.4903479Z <a id="api.migrations.env"></a>
2025-08-16T21:33:30.4903736Z 
2025-08-16T21:33:30.4903877Z # api.migrations.env
2025-08-16T21:33:30.4904084Z 
2025-08-16T21:33:30.4904407Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T21:33:30.4904781Z 
2025-08-16T21:33:30.4904963Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T21:33:30.4905288Z 
2025-08-16T21:33:30.4905492Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T21:33:30.4905854Z 
2025-08-16T21:33:30.4906024Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T21:33:30.4906335Z 
2025-08-16T21:33:30.4906601Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T21:33:30.4907022Z 
2025-08-16T21:33:30.4907266Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T21:33:30.4907971Z 
2025-08-16T21:33:30.4908205Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T21:33:30.4908576Z 
2025-08-16T21:33:30.4908789Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T21:33:30.4909124Z 
2025-08-16T21:33:30.4909347Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T21:33:30.4909724Z 
2025-08-16T21:33:30.4909919Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T21:33:30.4910248Z 
2025-08-16T21:33:30.4910494Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T21:33:30.4910878Z 
2025-08-16T21:33:30.4911087Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T21:33:30.4911428Z 
2025-08-16T21:33:30.4911658Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T21:33:30.4912014Z 
2025-08-16T21:33:30.4912419Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T21:33:30.4912784Z 
2025-08-16T21:33:30.4913006Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T21:33:30.4913515Z 
2025-08-16T21:33:30.4913642Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T21:33:30.4913840Z 
2025-08-16T21:33:30.4913973Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T21:33:30.4914188Z 
2025-08-16T21:33:30.4914297Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T21:33:30.4914485Z 
2025-08-16T21:33:30.4914595Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T21:33:30.4914792Z 
2025-08-16T21:33:30.4914887Z # api.migrations.versions.0001\_baseline
2025-08-16T21:33:30.4915060Z 
2025-08-16T21:33:30.4915157Z <a id="api.migrations.versions"></a>
2025-08-16T21:33:30.4915319Z 
2025-08-16T21:33:30.4915401Z # api.migrations.versions
2025-08-16T21:33:30.4915548Z 
2025-08-16T21:33:30.4915631Z <a id="api.migrations"></a>
2025-08-16T21:33:30.4915769Z 
2025-08-16T21:33:30.4915839Z # api.migrations
2025-08-16T21:33:30.4915955Z 
2025-08-16T21:33:30.4916023Z <a id="api.db"></a>
2025-08-16T21:33:30.4916133Z 
2025-08-16T21:33:30.4916211Z # api.db
2025-08-16T21:33:30.4916301Z 
2025-08-16T21:33:30.4916381Z <a id="api.routes.stats"></a>
2025-08-16T21:33:30.4916524Z 
2025-08-16T21:33:30.4916603Z # api.routes.stats
2025-08-16T21:33:30.4916709Z 
2025-08-16T21:33:30.4916796Z <a id="api.routes.stats.kpi"></a>
2025-08-16T21:33:30.4916953Z 
2025-08-16T21:33:30.4917020Z #### kpi
2025-08-16T21:33:30.4917105Z 
2025-08-16T21:33:30.4917172Z ```python
2025-08-16T21:33:30.4917352Z @router.get("/stats/kpi")
2025-08-16T21:33:30.4917590Z def kpi() -> List[Dict[str, int]]
2025-08-16T21:33:30.4917796Z ```
2025-08-16T21:33:30.4917881Z 
2025-08-16T21:33:30.4917972Z Return KPI metrics (mock).
2025-08-16T21:33:30.4918105Z 
2025-08-16T21:33:30.4918210Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T21:33:30.4918399Z 
2025-08-16T21:33:30.4918470Z #### roi\_by\_vendor
2025-08-16T21:33:30.4918591Z 
2025-08-16T21:33:30.4918656Z ```python
2025-08-16T21:33:30.4918843Z @router.get("/stats/roi_by_vendor")
2025-08-16T21:33:30.4919096Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T21:33:30.4919330Z ```
2025-08-16T21:33:30.4919412Z 
2025-08-16T21:33:30.4919500Z Return ROI percent by vendor.
2025-08-16T21:33:30.4919642Z 
2025-08-16T21:33:30.4919736Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T21:33:30.4919912Z 
2025-08-16T21:33:30.4919978Z #### roi\_trend
2025-08-16T21:33:30.4920081Z 
2025-08-16T21:33:30.4920144Z ```python
2025-08-16T21:33:30.4920308Z @router.get("/stats/roi_trend")
2025-08-16T21:33:30.4920555Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T21:33:30.4920783Z ```
2025-08-16T21:33:30.4920863Z 
2025-08-16T21:33:30.4920942Z Return 30-day ROI trend.
2025-08-16T21:33:30.4921066Z 
2025-08-16T21:33:30.4921143Z <a id="api.routes.roi"></a>
2025-08-16T21:33:30.4921283Z 
2025-08-16T21:33:30.4921352Z # api.routes.roi
2025-08-16T21:33:30.4921522Z 
2025-08-16T21:33:30.4921609Z <a id="api.routes.health"></a>
2025-08-16T21:33:30.4921778Z 
2025-08-16T21:33:30.4921848Z # api.routes.health
2025-08-16T21:33:30.4921963Z 
2025-08-16T21:33:30.4922057Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T21:33:30.4922619Z 
2025-08-16T21:33:30.4922695Z #### MAX\_SKEW
2025-08-16T21:33:30.4922807Z 
2025-08-16T21:33:30.4922870Z seconds
2025-08-16T21:33:30.4922962Z 
2025-08-16T21:33:30.4923062Z <a id="api.routes.health.health"></a>
2025-08-16T21:33:30.4923234Z 
2025-08-16T21:33:30.4923295Z #### health
2025-08-16T21:33:30.4923390Z 
2025-08-16T21:33:30.4923452Z ```python
2025-08-16T21:33:30.4923644Z @router.get("/health", include_in_schema=False)
2025-08-16T21:33:30.4924034Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T21:33:30.4924376Z ```
2025-08-16T21:33:30.4924464Z 
2025-08-16T21:33:30.4924583Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T21:33:30.4924778Z 
2025-08-16T21:33:30.4924871Z <a id="api.routes.repository"></a>
2025-08-16T21:33:30.4925029Z 
2025-08-16T21:33:30.4925106Z # api.routes.repository
2025-08-16T21:33:30.4925239Z 
2025-08-16T21:33:30.4925311Z <a id="api.routes"></a>
2025-08-16T21:33:30.4925774Z 
2025-08-16T21:33:30.4925908Z # api.routes
2025-08-16T21:33:30.4926092Z 
2025-08-16T21:33:30.4926237Z <a id="api.models.fee"></a>
2025-08-16T21:33:30.4926484Z 
2025-08-16T21:33:30.4926623Z # api.models.fee
2025-08-16T21:33:30.4926819Z 
2025-08-16T21:33:30.4926954Z <a id="api.models"></a>
2025-08-16T21:33:30.4927179Z 
2025-08-16T21:33:30.4927298Z # api.models
2025-08-16T21:33:30.4927472Z 
2025-08-16T21:33:30.4927627Z <a id="api.roi_repository"></a>
2025-08-16T21:33:30.4927802Z 
2025-08-16T21:33:30.4927876Z # api.roi\_repository
2025-08-16T21:33:30.4927994Z 
2025-08-16T21:33:30.4928068Z <a id="api.main"></a>
2025-08-16T21:33:30.4928178Z 
2025-08-16T21:33:30.4928241Z # api.main
2025-08-16T21:33:30.4928337Z 
2025-08-16T21:33:30.4928415Z <a id="api.main.ready"></a>
2025-08-16T21:33:30.4928546Z 
2025-08-16T21:33:30.4928606Z #### ready
2025-08-16T21:33:30.4928701Z 
2025-08-16T21:33:30.4928765Z ```python
2025-08-16T21:33:30.4929027Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T21:33:30.4929477Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T21:33:30.4929837Z                                                                       str]
2025-08-16T21:33:30.4930060Z ```
2025-08-16T21:33:30.4930150Z 
2025-08-16T21:33:30.4930248Z Return 200 only when migrations are at head.
2025-08-16T21:33:30.4930423Z 
2025-08-16T21:33:30.4930495Z <a id="api.config"></a>
2025-08-16T21:33:30.4930623Z 
2025-08-16T21:33:30.4930687Z # api.config
2025-08-16T21:33:30.4930783Z 
2025-08-16T21:33:30.4930855Z <a id="etl"></a>
2025-08-16T21:33:30.4930959Z 
2025-08-16T21:33:30.4931019Z # etl
2025-08-16T21:33:30.4931106Z 
2025-08-16T21:33:30.4931196Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T21:33:30.4931344Z 
2025-08-16T21:33:30.4931418Z # etl.fba\_fee\_ingestor
2025-08-16T21:33:30.4931550Z 
2025-08-16T21:33:30.4931631Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T21:33:30.4931773Z 
2025-08-16T21:33:30.4931854Z # etl.sp\_fees\_ingestor
2025-08-16T21:33:30.4931978Z 
2025-08-16T21:33:30.4932060Z <a id="etl.keepa_ingestor"></a>
2025-08-16T21:33:30.4932407Z 
2025-08-16T21:33:30.4932502Z # etl.keepa\_ingestor
2025-08-16T21:33:30.4932625Z 
2025-08-16T21:33:30.4932698Z <a id="etl.db"></a>
2025-08-16T21:33:30.4932812Z 
2025-08-16T21:33:30.4932879Z # etl.db
2025-08-16T21:33:30.4932970Z 
2025-08-16T21:33:30.4933079Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T21:33:30.4933278Z 
2025-08-16T21:33:30.4933369Z # etl.dialects.amazon\_reimbursements
2025-08-16T21:33:30.4933533Z 
2025-08-16T21:33:30.4933629Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T21:33:30.4933798Z 
2025-08-16T21:33:30.4933879Z # etl.dialects.amazon\_returns
2025-08-16T21:33:30.4934024Z 
2025-08-16T21:33:30.4934100Z <a id="etl.dialects"></a>
2025-08-16T21:33:30.4934225Z 
2025-08-16T21:33:30.4934290Z # etl.dialects
2025-08-16T21:33:30.4934396Z 
2025-08-16T21:33:30.4934462Z <a id="ingest"></a>
2025-08-16T21:33:30.4934568Z 
2025-08-16T21:33:30.4934634Z # ingest
2025-08-16T21:33:30.4934724Z 
2025-08-16T21:33:30.4934982Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T21:33:30.4935145Z 
2025-08-16T21:33:30.4935225Z # ingest.tests.test\_smoke
2025-08-16T21:33:30.4935356Z 
2025-08-16T21:33:30.4935430Z <a id="ingest.tests"></a>
2025-08-16T21:33:30.4935561Z 
2025-08-16T21:33:30.4935626Z # ingest.tests
2025-08-16T21:33:30.4935726Z 
2025-08-16T21:33:30.4935814Z <a id="ingest.upload_router"></a>
2025-08-16T21:33:30.4935960Z 
2025-08-16T21:33:30.4936033Z # ingest.upload\_router
2025-08-16T21:33:30.4936153Z 
2025-08-16T21:33:30.4936240Z <a id="ingest.email_watcher"></a>
2025-08-16T21:33:30.4936382Z 
2025-08-16T21:33:30.4936454Z # ingest.email\_watcher
2025-08-16T21:33:30.4936576Z 
2025-08-16T21:33:30.4936662Z <a id="ingest.email_watcher.main"></a>
2025-08-16T21:33:30.4936820Z 
2025-08-16T21:33:30.4936888Z #### main
2025-08-16T21:33:30.4936973Z 
2025-08-16T21:33:30.4937036Z ```python
2025-08-16T21:33:30.4937203Z def main() -> dict[str, str]
2025-08-16T21:33:30.4937392Z ```
2025-08-16T21:33:30.4937475Z 
2025-08-16T21:33:30.4937743Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T21:33:30.4937967Z 
2025-08-16T21:33:30.4938093Z Returns {"status": "success"} when processing completes.
2025-08-16T21:33:30.4938308Z 
2025-08-16T21:33:30.4938391Z <a id="ingest.ingest_router"></a>
2025-08-16T21:33:30.4938536Z 
2025-08-16T21:33:30.4938616Z # ingest.ingest\_router
2025-08-16T21:33:30.4938732Z 
2025-08-16T21:33:30.4938807Z <a id="logistics_etl"></a>
2025-08-16T21:33:30.4938940Z 
2025-08-16T21:33:30.4939004Z # logistics\_etl
2025-08-16T21:33:30.4939108Z 
2025-08-16T21:33:30.4939181Z Daily logistics ETL job.
2025-08-16T21:33:30.4939309Z 
2025-08-16T21:33:30.4939390Z <a id="logistics_etl.__main__"></a>
2025-08-16T21:33:30.4939539Z 
2025-08-16T21:33:30.4939622Z # logistics\_etl.\_\_main\_\_
2025-08-16T21:33:30.4939762Z 
2025-08-16T21:33:30.4939858Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T21:33:30.4940030Z 
2025-08-16T21:33:30.4940124Z # logistics\_etl.tests.conftest
2025-08-16T21:33:30.4940278Z 
2025-08-16T21:33:30.4940391Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T21:33:30.4940593Z 
2025-08-16T21:33:30.4940684Z # logistics\_etl.tests.test\_repository
2025-08-16T21:33:30.4940852Z 
2025-08-16T21:33:30.4940951Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T21:33:30.4941124Z 
2025-08-16T21:33:30.4941206Z # logistics\_etl.tests.test\_cron
2025-08-16T21:33:30.4941355Z 
2025-08-16T21:33:30.4941458Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T21:33:30.4941636Z 
2025-08-16T21:33:30.4941723Z # logistics\_etl.tests.test\_imports
2025-08-16T21:33:30.4941890Z 
2025-08-16T21:33:30.4941988Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T21:33:30.4942163Z 
2025-08-16T21:33:30.4942446Z # logistics\_etl.tests.test\_smoke
2025-08-16T21:33:30.4942617Z 
2025-08-16T21:33:30.4942719Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T21:33:30.4942900Z 
2025-08-16T21:33:30.4942991Z # logistics\_etl.tests.test\_client
2025-08-16T21:33:30.4943148Z 
2025-08-16T21:33:30.4943241Z <a id="logistics_etl.tests"></a>
2025-08-16T21:33:30.4943391Z 
2025-08-16T21:33:30.4943469Z # logistics\_etl.tests
2025-08-16T21:33:30.4943594Z 
2025-08-16T21:33:30.4943673Z <a id="logistics_etl.flow"></a>
2025-08-16T21:33:30.4943815Z 
2025-08-16T21:33:30.4943894Z # logistics\_etl.flow
2025-08-16T21:33:30.4944008Z 
2025-08-16T21:33:30.4944094Z <a id="logistics_etl.client"></a>
2025-08-16T21:33:30.4944247Z 
2025-08-16T21:33:30.4944320Z # logistics\_etl.client
2025-08-16T21:33:30.4944441Z 
2025-08-16T21:33:30.4944520Z <a id="logistics_etl.cron"></a>
2025-08-16T21:33:30.4944666Z 
2025-08-16T21:33:30.4944737Z # logistics\_etl.cron
2025-08-16T21:33:30.4944849Z 
2025-08-16T21:33:30.4944935Z <a id="logistics_etl.db"></a>
2025-08-16T21:33:30.4945070Z 
2025-08-16T21:33:30.4945137Z # logistics\_etl.db
2025-08-16T21:33:30.4945249Z 
2025-08-16T21:33:30.4945337Z <a id="logistics_etl.repository"></a>
2025-08-16T21:33:30.4945497Z 
2025-08-16T21:33:30.4945576Z # logistics\_etl.repository
2025-08-16T21:33:30.4945720Z 
2025-08-16T21:33:30.4945915Z <a id="alert_bot"></a>
2025-08-16T21:33:30.4946031Z 
2025-08-16T21:33:30.4946104Z # alert\_bot
2025-08-16T21:33:30.4946198Z 
2025-08-16T21:33:30.4946284Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T21:33:30.4946455Z 
2025-08-16T21:33:30.4946534Z # alert\_bot.tests.test\_smoke
2025-08-16T21:33:30.4946672Z 
2025-08-16T21:33:30.4946749Z <a id="alert_bot.tests"></a>
2025-08-16T21:33:30.4946890Z 
2025-08-16T21:33:30.4946955Z # alert\_bot.tests
2025-08-16T21:33:30.4947062Z 
2025-08-16T21:33:30.4947148Z <a id="alert_bot.alert_bot"></a>
2025-08-16T21:33:30.4947288Z 
2025-08-16T21:33:30.4947359Z # alert\_bot.alert\_bot
2025-08-16T21:33:30.4947476Z 
2025-08-16T21:33:30.4947555Z <a id="alert_bot.rules"></a>
2025-08-16T21:33:30.4947685Z 
2025-08-16T21:33:30.4947752Z # alert\_bot.rules
2025-08-16T21:33:30.4947861Z 
2025-08-16T21:33:30.4947927Z <a id="common"></a>
2025-08-16T21:33:30.4948033Z 
2025-08-16T21:33:30.4948100Z # common
2025-08-16T21:33:30.4948187Z 
2025-08-16T21:33:30.4948372Z <a id="common.dsn"></a>
2025-08-16T21:33:30.4948493Z 
2025-08-16T21:33:30.4948563Z # common.dsn
2025-08-16T21:33:30.4948656Z 
2025-08-16T21:33:30.4948737Z <a id="common.dsn.build_dsn"></a>
2025-08-16T21:33:30.4948888Z 
2025-08-16T21:33:30.4948954Z #### build\_dsn
2025-08-16T21:33:30.4949055Z 
2025-08-16T21:33:30.4949118Z ```python
2025-08-16T21:33:30.4949296Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:33:30.4949515Z ```
2025-08-16T21:33:30.4949597Z 
2025-08-16T21:33:30.4949718Z Return a Postgres DSN, validating required variables.
2025-08-16T21:33:30.4949922Z 
2025-08-16T21:33:30.4950125Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T21:33:30.4950569Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T21:33:30.4951002Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T21:33:30.4951312Z missing.
2025-08-16T21:33:30.4951408Z 
2025-08-16T21:33:30.4951493Z <a id="common.models_vendor"></a>
2025-08-16T21:33:30.4951654Z 
2025-08-16T21:33:30.4951733Z # common.models\_vendor
2025-08-16T21:33:30.4951855Z 
2025-08-16T21:33:30.4951946Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T21:33:30.4952118Z 
2025-08-16T21:33:30.4952336Z ## Vendor Objects
2025-08-16T21:33:30.4952473Z 
2025-08-16T21:33:30.4952538Z ```python
2025-08-16T21:33:30.4952704Z class Vendor(Base)
2025-08-16T21:33:30.4952892Z ```
2025-08-16T21:33:30.4952976Z 
2025-08-16T21:33:30.4953061Z Vendor of inventory items.
2025-08-16T21:33:30.4953194Z 
2025-08-16T21:33:30.4953297Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T21:33:30.4953488Z 
2025-08-16T21:33:30.4953562Z ## VendorPrice Objects
2025-08-16T21:33:30.4953683Z 
2025-08-16T21:33:30.4953745Z ```python
2025-08-16T21:33:30.4953911Z class VendorPrice(Base)
2025-08-16T21:33:30.4954086Z ```
2025-08-16T21:33:30.4954174Z 
2025-08-16T21:33:30.4954276Z Association table linking vendors to pricing.
2025-08-16T21:33:30.4954456Z 
2025-08-16T21:33:30.4954537Z <a id="common.db_url"></a>
2025-08-16T21:33:30.4954674Z 
2025-08-16T21:33:30.4954742Z # common.db\_url
2025-08-16T21:33:30.4954855Z 
2025-08-16T21:33:30.4954938Z <a id="common.db_url.build_url"></a>
2025-08-16T21:33:30.4955096Z 
2025-08-16T21:33:30.4955163Z #### build\_url
2025-08-16T21:33:30.4955272Z 
2025-08-16T21:33:30.4955334Z ```python
2025-08-16T21:33:30.4955515Z def build_url(async_: bool = True) -> str
2025-08-16T21:33:30.4955737Z ```
2025-08-16T21:33:30.4955819Z 
2025-08-16T21:33:30.4955926Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:33:30.4956102Z 
2025-08-16T21:33:30.4956180Z <a id="common.keepa"></a>
2025-08-16T21:33:30.4956314Z 
2025-08-16T21:33:30.4956381Z # common.keepa
2025-08-16T21:33:30.4956484Z 
2025-08-16T21:33:30.4956555Z <a id="common.llm"></a>
2025-08-16T21:33:30.4956679Z 
2025-08-16T21:33:30.4956743Z # common.llm
2025-08-16T21:33:30.4956838Z 
2025-08-16T21:33:30.4956934Z <a id="common.settings"></a>
2025-08-16T21:33:30.4957171Z 
2025-08-16T21:33:30.4957292Z # common.settings
2025-08-16T21:33:30.4957659Z 
2025-08-16T21:33:30.4957794Z <a id="common.db"></a>
2025-08-16T21:33:30.4958021Z 
2025-08-16T21:33:30.4958143Z # common.db
2025-08-16T21:33:30.4958326Z 
2025-08-16T21:33:30.4958502Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T21:33:30.4958838Z 
2025-08-16T21:33:30.4958985Z #### build\_sqlalchemy\_url
2025-08-16T21:33:30.4959208Z 
2025-08-16T21:33:30.4959313Z ```python
2025-08-16T21:33:30.4959613Z def build_sqlalchemy_url() -> str
2025-08-16T21:33:30.4959938Z ```
2025-08-16T21:33:30.4960028Z 
2025-08-16T21:33:30.4960127Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:33:30.4960306Z 
2025-08-16T21:33:30.4960399Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T21:33:30.4960576Z 
2025-08-16T21:33:30.4960651Z #### build\_asyncpg\_dsn
2025-08-16T21:33:30.4960778Z 
2025-08-16T21:33:30.4960845Z ```python
2025-08-16T21:33:30.4961013Z def build_asyncpg_dsn() -> str
2025-08-16T21:33:30.4961224Z ```
2025-08-16T21:33:30.4961310Z 
2025-08-16T21:33:30.4961440Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:33:30.4961844Z 
2025-08-16T21:33:30.4961935Z <a id="common.db.refresh_mvs"></a>
2025-08-16T21:33:30.4962090Z 
2025-08-16T21:33:30.4962155Z #### refresh\_mvs
2025-08-16T21:33:30.4962509Z 
2025-08-16T21:33:30.4962578Z ```python
2025-08-16T21:33:30.4962791Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:33:30.4963046Z ```
2025-08-16T21:33:30.4963130Z 
2025-08-16T21:33:30.4963275Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:33:30.4963494Z 
2025-08-16T21:33:30.4963572Z <a id="common.config"></a>
2025-08-16T21:33:30.4963708Z 
2025-08-16T21:33:30.4963776Z # common.config
2025-08-16T21:33:30.4963881Z 
2025-08-16T21:33:30.4963960Z <a id="common.base"></a>
2025-08-16T21:33:30.4964081Z 
2025-08-16T21:33:30.4964145Z # common.base
2025-08-16T21:33:30.4964242Z 
2025-08-16T21:33:30.4964330Z <a id="common.base.Base"></a>
2025-08-16T21:33:30.4964469Z 
2025-08-16T21:33:30.4964532Z ## Base Objects
2025-08-16T21:33:30.4964638Z 
2025-08-16T21:33:30.4964709Z ```python
2025-08-16T21:33:30.4964876Z class Base(DeclarativeBase)
2025-08-16T21:33:30.4965069Z ```
2025-08-16T21:33:30.4965152Z 
2025-08-16T21:33:30.4965242Z Base class for SQLAlchemy models.
2025-08-16T21:33:30.4965391Z 
2025-08-16T21:33:30.4965464Z <a id="repricer"></a>
2025-08-16T21:33:30.4965580Z 
2025-08-16T21:33:30.4965650Z # repricer
2025-08-16T21:33:30.4965739Z 
2025-08-16T21:33:30.4965827Z <a id="repricer.app.schemas"></a>
2025-08-16T21:33:30.4965980Z 
2025-08-16T21:33:30.4966057Z # repricer.app.schemas
2025-08-16T21:33:30.4966179Z 
2025-08-16T21:33:30.4966263Z <a id="repricer.app.deps"></a>
2025-08-16T21:33:30.4966409Z 
2025-08-16T21:33:30.4966483Z # repricer.app.deps
2025-08-16T21:33:30.4966597Z 
2025-08-16T21:33:30.4966717Z Placeholder module for Keepa / SP-API clients.
2025-08-16T21:33:30.4966905Z 
2025-08-16T21:33:30.4967001Z <a id="repricer.app.logic"></a>
2025-08-16T21:33:30.4967153Z 
2025-08-16T21:33:30.4967227Z # repricer.app.logic
2025-08-16T21:33:30.4967343Z 
2025-08-16T21:33:30.4967449Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T21:33:30.4967634Z 
2025-08-16T21:33:30.4967698Z #### MIN\_MARGIN
2025-08-16T21:33:30.4967803Z 
2025-08-16T21:33:30.4967871Z 15 % ROI
2025-08-16T21:33:30.4967960Z 
2025-08-16T21:33:30.4968062Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T21:33:30.4968249Z 
2025-08-16T21:33:30.4968320Z #### compute\_price
2025-08-16T21:33:30.4968428Z 
2025-08-16T21:33:30.4968491Z ```python
2025-08-16T21:33:30.4968741Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T21:33:30.4969048Z ```
2025-08-16T21:33:30.4969130Z 
2025-08-16T21:33:30.4969235Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T21:33:30.4969520Z Replace with real competitive logic later.
2025-08-16T21:33:30.4969691Z 
2025-08-16T21:33:30.4969775Z <a id="repricer.app.main"></a>
2025-08-16T21:33:30.4969917Z 
2025-08-16T21:33:30.4970007Z # repricer.app.main
2025-08-16T21:33:30.4970117Z 
2025-08-16T21:33:30.4970203Z <a id="repricer.app"></a>
2025-08-16T21:33:30.4970874Z 
2025-08-16T21:33:30.4971008Z # repricer.app
2025-08-16T21:33:30.4971212Z 
2025-08-16T21:33:30.4971393Z <a id="repricer.tests.test_imports"></a>
2025-08-16T21:33:30.4971708Z 
2025-08-16T21:33:30.4971867Z # repricer.tests.test\_imports
2025-08-16T21:33:30.4972131Z 
2025-08-16T21:33:30.4972450Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T21:33:30.4972641Z 
2025-08-16T21:33:30.4972734Z # repricer.tests.test\_smoke
2025-08-16T21:33:30.4972878Z 
2025-08-16T21:33:30.4972961Z <a id="repricer.tests"></a>
2025-08-16T21:33:30.4973103Z 
2025-08-16T21:33:30.4973220Z # repricer.tests
2025-08-16T21:33:30.4973336Z 
2025-08-16T21:33:30.4973399Z <a id="db"></a>
2025-08-16T21:33:30.4973498Z 
2025-08-16T21:33:30.4973557Z # db
2025-08-16T21:33:30.4973645Z 
2025-08-16T21:33:30.4973720Z <a id="db.utils.views"></a>
2025-08-16T21:33:30.4973849Z 
2025-08-16T21:33:30.4973921Z # db.utils.views
2025-08-16T21:33:30.4974023Z 
2025-08-16T21:33:30.4974116Z <a id="db.utils.views.replace_view"></a>
2025-08-16T21:33:30.4974776Z 
2025-08-16T21:33:30.4974852Z #### replace\_view
2025-08-16T21:33:30.4974969Z 
2025-08-16T21:33:30.4975036Z ```python
2025-08-16T21:33:30.4975255Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T21:33:30.4975512Z ```
2025-08-16T21:33:30.4975597Z 
2025-08-16T21:33:30.4975687Z Drop and recreate a SQL view atomically.
2025-08-16T21:33:30.4975857Z 
2025-08-16T21:33:30.4975933Z <a id="db.utils"></a>
2025-08-16T21:33:30.4976050Z 
2025-08-16T21:33:30.4976111Z # db.utils
2025-08-16T21:33:30.4976205Z 
2025-08-16T21:33:30.4976285Z <a id="price_importer"></a>
2025-08-16T21:33:30.4976418Z 
2025-08-16T21:33:30.4976485Z # price\_importer
2025-08-16T21:33:30.4976596Z 
2025-08-16T21:33:30.4976702Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T21:33:30.4976888Z 
2025-08-16T21:33:30.4976988Z # price\_importer.services\_common.dsn
2025-08-16T21:33:30.4977153Z 
2025-08-16T21:33:30.4977279Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T21:33:30.4977500Z 
2025-08-16T21:33:30.4977569Z #### build\_dsn
2025-08-16T21:33:30.4977670Z 
2025-08-16T21:33:30.4977732Z ```python
2025-08-16T21:33:30.4977910Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:33:30.4978136Z ```
2025-08-16T21:33:30.4978218Z 
2025-08-16T21:33:30.4978283Z Return safe DSN.
2025-08-16T21:33:30.4978386Z 
2025-08-16T21:33:30.4978743Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T21:33:30.4978947Z 
2025-08-16T21:33:30.4979077Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T21:33:30.4979288Z 
2025-08-16T21:33:30.4979395Z # price\_importer.services\_common.models\_vendor
2025-08-16T21:33:30.4979583Z 
2025-08-16T21:33:30.4979705Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T21:33:30.4979886Z 
2025-08-16T21:33:30.4979978Z # price\_importer.services\_common.db\_url
2025-08-16T21:33:30.4980148Z 
2025-08-16T21:33:30.4980285Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T21:33:30.4980514Z 
2025-08-16T21:33:30.4980584Z #### build\_url
2025-08-16T21:33:30.4980694Z 
2025-08-16T21:33:30.4980756Z ```python
2025-08-16T21:33:30.4980925Z def build_url(async_: bool = True) -> str
2025-08-16T21:33:30.4981148Z ```
2025-08-16T21:33:30.4981228Z 
2025-08-16T21:33:30.4981349Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:33:30.4981528Z 
2025-08-16T21:33:30.4981634Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T21:33:30.4981824Z 
2025-08-16T21:33:30.4981919Z # price\_importer.services\_common.keepa
2025-08-16T21:33:30.4982085Z 
2025-08-16T21:33:30.4982319Z <a id="price_importer.services_common.llm"></a>
2025-08-16T21:33:30.4982510Z 
2025-08-16T21:33:30.4982599Z # price\_importer.services\_common.llm
2025-08-16T21:33:30.4982761Z 
2025-08-16T21:33:30.4982881Z <a id="price_importer.services_common.settings"></a>
2025-08-16T21:33:30.4983070Z 
2025-08-16T21:33:30.4983164Z # price\_importer.services\_common.settings
2025-08-16T21:33:30.4983346Z 
2025-08-16T21:33:30.4983442Z <a id="price_importer.services_common.db"></a>
2025-08-16T21:33:30.4983753Z 
2025-08-16T21:33:30.4983844Z # price\_importer.services\_common.db
2025-08-16T21:33:30.4984008Z 
2025-08-16T21:33:30.4984160Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T21:33:30.4984404Z 
2025-08-16T21:33:30.4984488Z #### build\_sqlalchemy\_url
2025-08-16T21:33:30.4984617Z 
2025-08-16T21:33:30.4984680Z ```python
2025-08-16T21:33:30.4984854Z def build_sqlalchemy_url() -> str
2025-08-16T21:33:30.4985060Z ```
2025-08-16T21:33:30.4985148Z 
2025-08-16T21:33:30.4985242Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:33:30.4985415Z 
2025-08-16T21:33:30.4985564Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T21:33:30.4985789Z 
2025-08-16T21:33:30.4985868Z #### build\_asyncpg\_dsn
2025-08-16T21:33:30.4985994Z 
2025-08-16T21:33:30.4986065Z ```python
2025-08-16T21:33:30.4986233Z def build_asyncpg_dsn() -> str
2025-08-16T21:33:30.4986433Z ```
2025-08-16T21:33:30.4986513Z 
2025-08-16T21:33:30.4986641Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:33:30.4986980Z 
2025-08-16T21:33:30.4987117Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T21:33:30.4987334Z 
2025-08-16T21:33:30.4987407Z #### refresh\_mvs
2025-08-16T21:33:30.4987513Z 
2025-08-16T21:33:30.4987574Z ```python
2025-08-16T21:33:30.4987770Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:33:30.4988013Z ```
2025-08-16T21:33:30.4988098Z 
2025-08-16T21:33:30.4988231Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:33:30.4988444Z 
2025-08-16T21:33:30.4988538Z <a id="price_importer.services_common"></a>
2025-08-16T21:33:30.4988714Z 
2025-08-16T21:33:30.4988797Z # price\_importer.services\_common
2025-08-16T21:33:30.4988952Z 
2025-08-16T21:33:30.4989059Z <a id="price_importer.services_common.base"></a>
2025-08-16T21:33:30.4989242Z 
2025-08-16T21:33:30.4989331Z # price\_importer.services\_common.base
2025-08-16T21:33:30.4989500Z 
2025-08-16T21:33:30.4989589Z <a id="price_importer.normaliser"></a>
2025-08-16T21:33:30.4989759Z 
2025-08-16T21:33:30.4989839Z # price\_importer.normaliser
2025-08-16T21:33:30.4989983Z 
2025-08-16T21:33:30.4990084Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T21:33:30.4990273Z 
2025-08-16T21:33:30.4990369Z # price\_importer.common.models\_vendor
2025-08-16T21:33:30.4990531Z 
2025-08-16T21:33:30.4990621Z <a id="price_importer.common.db_url"></a>
2025-08-16T21:33:30.4990794Z 
2025-08-16T21:33:30.4990879Z # price\_importer.common.db\_url
2025-08-16T21:33:30.4991026Z 
2025-08-16T21:33:30.4991129Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T21:33:30.4991319Z 
2025-08-16T21:33:30.4991381Z #### make\_dsn
2025-08-16T21:33:30.4991480Z 
2025-08-16T21:33:30.4991546Z ```python
2025-08-16T21:33:30.4991714Z def make_dsn(async_: bool = False) -> str
2025-08-16T21:33:30.4991937Z ```
2025-08-16T21:33:30.4992016Z 
2025-08-16T21:33:30.4992134Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T21:33:30.4992446Z 
2025-08-16T21:33:30.4992565Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T21:33:30.4992753Z 
2025-08-16T21:33:30.4992820Z #### build\_url
2025-08-16T21:33:30.4992919Z 
2025-08-16T21:33:30.4992978Z ```python
2025-08-16T21:33:30.4993155Z def build_url(async_: bool = False) -> str
2025-08-16T21:33:30.4993372Z ```
2025-08-16T21:33:30.4993456Z 
2025-08-16T21:33:30.4993578Z Return Postgres DSN built from environment variables.
2025-08-16T21:33:30.4993776Z 
2025-08-16T21:33:30.4993859Z <a id="price_importer.common"></a>
2025-08-16T21:33:30.4994017Z 
2025-08-16T21:33:30.4994094Z # price\_importer.common
2025-08-16T21:33:30.4994220Z 
2025-08-16T21:33:30.4994313Z <a id="price_importer.common.base"></a>
2025-08-16T21:33:30.4994475Z 
2025-08-16T21:33:30.4994555Z # price\_importer.common.base
2025-08-16T21:33:30.4994700Z 
2025-08-16T21:33:30.4994795Z <a id="price_importer.tests.conftest"></a>
2025-08-16T21:33:30.4994965Z 
2025-08-16T21:33:30.4995047Z # price\_importer.tests.conftest
2025-08-16T21:33:30.4995201Z 
2025-08-16T21:33:30.4995426Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T21:33:30.4995606Z 
2025-08-16T21:33:30.4995695Z # price\_importer.tests.test\_reader
2025-08-16T21:33:30.4995853Z 
2025-08-16T21:33:30.4995954Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T21:33:30.4996136Z 
2025-08-16T21:33:30.4996224Z # price\_importer.tests.test\_imports
2025-08-16T21:33:30.4996382Z 
2025-08-16T21:33:30.4996477Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T21:33:30.4996655Z 
2025-08-16T21:33:30.4996740Z # price\_importer.tests.test\_smoke
2025-08-16T21:33:30.4996895Z 
2025-08-16T21:33:30.4997003Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T21:33:30.4997190Z 
2025-08-16T21:33:30.4997280Z # price\_importer.tests.test\_normaliser
2025-08-16T21:33:30.4997451Z 
2025-08-16T21:33:30.4997534Z <a id="price_importer.tests"></a>
2025-08-16T21:33:30.4997683Z 
2025-08-16T21:33:30.4997756Z # price\_importer.tests
2025-08-16T21:33:30.4997886Z 
2025-08-16T21:33:30.4997971Z <a id="price_importer.reader"></a>
2025-08-16T21:33:30.4998272Z 
2025-08-16T21:33:30.4998355Z # price\_importer.reader
2025-08-16T21:33:30.4998480Z 
2025-08-16T21:33:30.4998578Z <a id="price_importer.reader.load_file"></a>
2025-08-16T21:33:30.4998754Z 
2025-08-16T21:33:30.4998816Z #### load\_file
2025-08-16T21:33:30.4998916Z 
2025-08-16T21:33:30.4998976Z ```python
2025-08-16T21:33:30.4999151Z def load_file(path: str | Path) -> Any
2025-08-16T21:33:30.4999366Z ```
2025-08-16T21:33:30.4999454Z 
2025-08-16T21:33:30.4999540Z Return DataFrame from CSV or Excel file.
2025-08-16T21:33:30.4999704Z 
2025-08-16T21:33:30.4999812Z Raises RuntimeError if pandas is unavailable.
2025-08-16T21:33:30.4999988Z 
2025-08-16T21:33:30.5000076Z <a id="price_importer.repository"></a>
2025-08-16T21:33:30.5000242Z 
2025-08-16T21:33:30.5000323Z # price\_importer.repository
2025-08-16T21:33:30.5000465Z 
2025-08-16T21:33:30.5000545Z <a id="price_importer.import"></a>
2025-08-16T21:33:30.5000699Z 
2025-08-16T21:33:30.5000774Z # price\_importer.import
2025-08-16T21:33:30.5000904Z 
2025-08-16T21:33:30.5000980Z <a id="fees_h10"></a>
2025-08-16T21:33:30.5001096Z 
2025-08-16T21:33:30.5001157Z # fees\_h10
2025-08-16T21:33:30.5001256Z 
2025-08-16T21:33:30.5001331Z <a id="fees_h10.worker"></a>
2025-08-16T21:33:30.5001460Z 
2025-08-16T21:33:30.5001525Z # fees\_h10.worker
2025-08-16T21:33:30.5001637Z 
2025-08-16T21:33:30.5001716Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T21:33:30.5001870Z 
2025-08-16T21:33:30.5001954Z # fees\_h10.tests.test\_smoke
2025-08-16T21:33:30.5002089Z 
2025-08-16T21:33:30.5002161Z <a id="fees_h10.tests"></a>
2025-08-16T21:33:30.5002436Z 
2025-08-16T21:33:30.5002500Z # fees\_h10.tests
2025-08-16T21:33:30.5002607Z 
2025-08-16T21:33:30.5002679Z <a id="fees_h10.client"></a>
2025-08-16T21:33:30.5002816Z 
2025-08-16T21:33:30.5002878Z # fees\_h10.client
2025-08-16T21:33:30.5002983Z 
2025-08-16T21:33:30.5003068Z <a id="fees_h10.repository"></a>
2025-08-16T21:33:30.5003212Z 
2025-08-16T21:33:30.5003282Z # fees\_h10.repository
2025-08-16T21:33:30.5003406Z 
2025-08-16T21:33:30.5003481Z <a id="emailer"></a>
2025-08-16T21:33:30.5003592Z 
2025-08-16T21:33:30.5003652Z # emailer
2025-08-16T21:33:30.5003745Z 
2025-08-16T21:33:30.5003849Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T21:33:30.5004029Z 
2025-08-16T21:33:30.5004118Z # emailer.tests.test\_import\_emailer
2025-08-16T21:33:30.5004284Z 
2025-08-16T21:33:30.5004366Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T21:33:30.5004521Z 
2025-08-16T21:33:30.5004605Z # emailer.tests.test\_smoke
2025-08-16T21:33:30.5004741Z 
2025-08-16T21:33:30.5004815Z <a id="emailer.tests"></a>
2025-08-16T21:33:30.5004950Z 
2025-08-16T21:33:30.5005018Z # emailer.tests
2025-08-16T21:33:30.5005120Z 
2025-08-16T21:33:30.5005203Z <a id="emailer.generate_body"></a>
2025-08-16T21:33:30.5005360Z 
2025-08-16T21:33:30.5005433Z # emailer.generate\_body
2025-08-16T21:33:30.5005557Z 
2025-08-16T21:33:30.5005633Z <a id="llm_server"></a>
2025-08-16T21:33:30.5005749Z 
2025-08-16T21:33:30.5005811Z # llm\_server
2025-08-16T21:33:30.5006037Z 
2025-08-16T21:33:30.5006114Z <a id="llm_server.app"></a>
2025-08-16T21:33:30.5006245Z 
2025-08-16T21:33:30.5006311Z # llm\_server.app
2025-08-16T21:33:30.5006422Z 
