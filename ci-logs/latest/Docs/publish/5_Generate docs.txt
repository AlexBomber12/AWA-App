2025-08-20T17:13:36.6783665Z ##[group]Run pydoc-markdown
2025-08-20T17:13:36.6783960Z [36;1mpydoc-markdown[0m
2025-08-20T17:13:36.6825238Z shell: /usr/bin/bash -e {0}
2025-08-20T17:13:36.6825484Z env:
2025-08-20T17:13:36.6825718Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:13:36.6826121Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T17:13:36.6826518Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:13:36.6826854Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:13:36.6827199Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:13:36.6827660Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T17:13:36.6827948Z ##[endgroup]
2025-08-20T17:13:37.2423779Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T17:13:37.2424731Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T17:13:37.2425198Z In "pydoc-markdown.yml"
2025-08-20T17:13:37.2425642Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T17:13:37.2426320Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T17:13:37.2427089Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T17:13:37.2427975Z 
2025-08-20T17:13:37.6233124Z <a id="__init__"></a>
2025-08-20T17:13:37.6233579Z 
2025-08-20T17:13:37.6233718Z # \_\_init\_\_
2025-08-20T17:13:37.6233923Z 
2025-08-20T17:13:37.6234046Z <a id="api"></a>
2025-08-20T17:13:37.6234245Z 
2025-08-20T17:13:37.6234354Z # api
2025-08-20T17:13:37.6234524Z 
2025-08-20T17:13:37.6234662Z <a id="api.errors"></a>
2025-08-20T17:13:37.6234894Z 
2025-08-20T17:13:37.6235020Z # api.errors
2025-08-20T17:13:37.6235193Z 
2025-08-20T17:13:37.6235339Z <a id="api.sentry_config"></a>
2025-08-20T17:13:37.6235607Z 
2025-08-20T17:13:37.6235736Z # api.sentry\_config
2025-08-20T17:13:37.6235948Z 
2025-08-20T17:13:37.6236127Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T17:13:37.6236469Z 
2025-08-20T17:13:37.6237098Z # api.tests.test\_stats\_contracts
2025-08-20T17:13:37.6237416Z 
2025-08-20T17:13:37.6237824Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T17:13:37.6238148Z 
2025-08-20T17:13:37.6238294Z # api.tests.test\_sentry\_scrub
2025-08-20T17:13:37.6238566Z 
2025-08-20T17:13:37.6238735Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T17:13:37.6239052Z 
2025-08-20T17:13:37.6239202Z # api.tests.test\_roi\_basic\_auth
2025-08-20T17:13:37.6239484Z 
2025-08-20T17:13:37.6239643Z <a id="api.tests.test_errors_json"></a>
2025-08-20T17:13:37.6239945Z 
2025-08-20T17:13:37.6240100Z # api.tests.test\_errors\_json
2025-08-20T17:13:37.6240358Z 
2025-08-20T17:13:37.6240501Z <a id="api.tests.test_llm"></a>
2025-08-20T17:13:37.6240770Z 
2025-08-20T17:13:37.6240900Z # api.tests.test\_llm
2025-08-20T17:13:37.6241109Z 
2025-08-20T17:13:37.6241260Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T17:13:37.6241560Z 
2025-08-20T17:13:37.6241704Z # api.tests.test\_roi\_filters
2025-08-20T17:13:37.6241965Z 
2025-08-20T17:13:37.6242158Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T17:13:37.6242485Z 
2025-08-20T17:13:37.6242633Z # api.tests.test\_sentry\_event
2025-08-20T17:13:37.6242922Z 
2025-08-20T17:13:37.6243143Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T17:13:37.6243519Z 
2025-08-20T17:13:37.6243658Z ## DummyTransport Objects
2025-08-20T17:13:37.6243906Z 
2025-08-20T17:13:37.6244022Z ```python
2025-08-20T17:13:37.6244326Z class DummyTransport()
2025-08-20T17:13:37.6244647Z ```
2025-08-20T17:13:37.6244796Z 
2025-08-20T17:13:37.6245130Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T17:13:37.6245612Z 
2025-08-20T17:13:37.6245741Z #### capture\_envelope
2025-08-20T17:13:37.6245962Z 
2025-08-20T17:13:37.6246077Z ```python
2025-08-20T17:13:37.6246386Z def capture_envelope(envelope)
2025-08-20T17:13:37.6246752Z ```
2025-08-20T17:13:37.6246902Z 
2025-08-20T17:13:37.6247141Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T17:13:37.6247732Z 
2025-08-20T17:13:37.6247898Z <a id="api.tests.test_cors"></a>
2025-08-20T17:13:37.6248563Z 
2025-08-20T17:13:37.6248729Z # api.tests.test\_cors
2025-08-20T17:13:37.6248969Z 
2025-08-20T17:13:37.6249121Z <a id="api.tests.test_imports"></a>
2025-08-20T17:13:37.6249415Z 
2025-08-20T17:13:37.6249552Z # api.tests.test\_imports
2025-08-20T17:13:37.6249786Z 
2025-08-20T17:13:37.6249941Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T17:13:37.6250248Z 
2025-08-20T17:13:37.6250395Z # api.tests.test\_rate\_limit
2025-08-20T17:13:37.6250652Z 
2025-08-20T17:13:37.6250843Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T17:13:37.6251158Z 
2025-08-20T17:13:37.6251269Z #### app
2025-08-20T17:13:37.6251438Z 
2025-08-20T17:13:37.6251553Z noqa: E402
2025-08-20T17:13:37.6251719Z 
2025-08-20T17:13:37.6251871Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T17:13:37.6252176Z 
2025-08-20T17:13:37.6252314Z # api.tests.test\_stats\_sql
2025-08-20T17:13:37.6252572Z 
2025-08-20T17:13:37.6252739Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T17:13:37.6253061Z 
2025-08-20T17:13:37.6253207Z # api.tests.test\_entrypoint
2025-08-20T17:13:37.6253474Z 
2025-08-20T17:13:37.6253670Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T17:13:37.6254018Z 
2025-08-20T17:13:37.6254186Z # api.tests.test\_stats\_future\_contracts
2025-08-20T17:13:37.6254510Z 
2025-08-20T17:13:37.6254658Z <a id="api.tests.test_health"></a>
2025-08-20T17:13:37.6254935Z 
2025-08-20T17:13:37.6255077Z # api.tests.test\_health
2025-08-20T17:13:37.6255311Z 
2025-08-20T17:13:37.6255456Z <a id="api.tests.test_score"></a>
2025-08-20T17:13:37.6255733Z 
2025-08-20T17:13:37.6255863Z # api.tests.test\_score
2025-08-20T17:13:37.6256086Z 
2025-08-20T17:13:37.6256228Z <a id="api.logging_config"></a>
2025-08-20T17:13:37.6256491Z 
2025-08-20T17:13:37.6256615Z # api.logging\_config
2025-08-20T17:13:37.6256828Z 
2025-08-20T17:13:37.6256982Z <a id="api.migrations.env"></a>
2025-08-20T17:13:37.6257243Z 
2025-08-20T17:13:37.6257373Z # api.migrations.env
2025-08-20T17:13:37.6258046Z 
2025-08-20T17:13:37.6258304Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T17:13:37.6258670Z 
2025-08-20T17:13:37.6258861Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T17:13:37.6259206Z 
2025-08-20T17:13:37.6259401Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T17:13:37.6259752Z 
2025-08-20T17:13:37.6259933Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T17:13:37.6260246Z 
2025-08-20T17:13:37.6260523Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T17:13:37.6260967Z 
2025-08-20T17:13:37.6261214Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T17:13:37.6261618Z 
2025-08-20T17:13:37.6261833Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T17:13:37.6262216Z 
2025-08-20T17:13:37.6262409Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T17:13:37.6262744Z 
2025-08-20T17:13:37.6262970Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T17:13:37.6263389Z 
2025-08-20T17:13:37.6263591Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T17:13:37.6264068Z 
2025-08-20T17:13:37.6264302Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T17:13:37.6264700Z 
2025-08-20T17:13:37.6264900Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T17:13:37.6265258Z 
2025-08-20T17:13:37.6265481Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T17:13:37.6265855Z 
2025-08-20T17:13:37.6266045Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T17:13:37.6266391Z 
2025-08-20T17:13:37.6266623Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T17:13:37.6266997Z 
2025-08-20T17:13:37.6267189Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T17:13:37.6267790Z 
2025-08-20T17:13:37.6268048Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T17:13:37.6268455Z 
2025-08-20T17:13:37.6268680Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T17:13:37.6269062Z 
2025-08-20T17:13:37.6269306Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T17:13:37.6269973Z 
2025-08-20T17:13:37.6270189Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T17:13:37.6270542Z 
2025-08-20T17:13:37.6270791Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T17:13:37.6271201Z 
2025-08-20T17:13:37.6271415Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T17:13:37.6271783Z 
2025-08-20T17:13:37.6271990Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T17:13:37.6272333Z 
2025-08-20T17:13:37.6272498Z # api.migrations.versions.0001\_baseline
2025-08-20T17:13:37.6272849Z 
2025-08-20T17:13:37.6273015Z <a id="api.migrations.versions"></a>
2025-08-20T17:13:37.6273312Z 
2025-08-20T17:13:37.6273457Z # api.migrations.versions
2025-08-20T17:13:37.6273710Z 
2025-08-20T17:13:37.6273849Z <a id="api.migrations"></a>
2025-08-20T17:13:37.6274093Z 
2025-08-20T17:13:37.6274224Z # api.migrations
2025-08-20T17:13:37.6274418Z 
2025-08-20T17:13:37.6274552Z <a id="api.db"></a>
2025-08-20T17:13:37.6274763Z 
2025-08-20T17:13:37.6274889Z # api.db
2025-08-20T17:13:37.6275055Z 
2025-08-20T17:13:37.6275201Z <a id="api.routes.score"></a>
2025-08-20T17:13:37.6275471Z 
2025-08-20T17:13:37.6275594Z # api.routes.score
2025-08-20T17:13:37.6275794Z 
2025-08-20T17:13:37.6275935Z <a id="api.routes.stats"></a>
2025-08-20T17:13:37.6276197Z 
2025-08-20T17:13:37.6276378Z # api.routes.stats
2025-08-20T17:13:37.6276576Z 
2025-08-20T17:13:37.6276723Z <a id="api.routes.roi"></a>
2025-08-20T17:13:37.6276963Z 
2025-08-20T17:13:37.6277082Z # api.routes.roi
2025-08-20T17:13:37.6277284Z 
2025-08-20T17:13:37.6277429Z <a id="api.routes.health"></a>
2025-08-20T17:13:37.6277862Z 
2025-08-20T17:13:37.6277997Z # api.routes.health
2025-08-20T17:13:37.6278211Z 
2025-08-20T17:13:37.6278375Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T17:13:37.6278680Z 
2025-08-20T17:13:37.6278800Z #### MAX\_SKEW
2025-08-20T17:13:37.6278977Z 
2025-08-20T17:13:37.6279085Z seconds
2025-08-20T17:13:37.6279547Z 
2025-08-20T17:13:37.6279720Z <a id="api.routes.health.health"></a>
2025-08-20T17:13:37.6280037Z 
2025-08-20T17:13:37.6280150Z #### health
2025-08-20T17:13:37.6280322Z 
2025-08-20T17:13:37.6280432Z ```python
2025-08-20T17:13:37.6280780Z @router.get("/health", include_in_schema=False)
2025-08-20T17:13:37.6281502Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T17:13:37.6282122Z ```
2025-08-20T17:13:37.6282274Z 
2025-08-20T17:13:37.6282482Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T17:13:37.6282857Z 
2025-08-20T17:13:37.6283016Z <a id="api.routes.repository"></a>
2025-08-20T17:13:37.6283305Z 
2025-08-20T17:13:37.6283446Z # api.routes.repository
2025-08-20T17:13:37.6283685Z 
2025-08-20T17:13:37.6283823Z <a id="api.routes"></a>
2025-08-20T17:13:37.6284040Z 
2025-08-20T17:13:37.6284171Z # api.routes
2025-08-20T17:13:37.6284350Z 
2025-08-20T17:13:37.6284492Z <a id="api.models.fee"></a>
2025-08-20T17:13:37.6284736Z 
2025-08-20T17:13:37.6284863Z # api.models.fee
2025-08-20T17:13:37.6285078Z 
2025-08-20T17:13:37.6285209Z <a id="api.models"></a>
2025-08-20T17:13:37.6285436Z 
2025-08-20T17:13:37.6285551Z # api.models
2025-08-20T17:13:37.6285728Z 
2025-08-20T17:13:37.6285871Z <a id="api.roi_repository"></a>
2025-08-20T17:13:37.6286148Z 
2025-08-20T17:13:37.6286275Z # api.roi\_repository
2025-08-20T17:13:37.6286485Z 
2025-08-20T17:13:37.6286619Z <a id="api.main"></a>
2025-08-20T17:13:37.6286847Z 
2025-08-20T17:13:37.6286958Z # api.main
2025-08-20T17:13:37.6287122Z 
2025-08-20T17:13:37.6287270Z <a id="api.main.ready"></a>
2025-08-20T17:13:37.6287731Z 
2025-08-20T17:13:37.6287849Z #### ready
2025-08-20T17:13:37.6288023Z 
2025-08-20T17:13:37.6288136Z ```python
2025-08-20T17:13:37.6288574Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T17:13:37.6289236Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T17:13:37.6289771Z                                                                       str]
2025-08-20T17:13:37.6290119Z ```
2025-08-20T17:13:37.6290474Z 
2025-08-20T17:13:37.6290621Z Return 200 only when migrations are at head.
2025-08-20T17:13:37.6290887Z 
2025-08-20T17:13:37.6290997Z <a id="api.config"></a>
2025-08-20T17:13:37.6291178Z 
2025-08-20T17:13:37.6291275Z # api.config
2025-08-20T17:13:37.6291416Z 
2025-08-20T17:13:37.6291534Z <a id="api.security"></a>
2025-08-20T17:13:37.6291719Z 
2025-08-20T17:13:37.6291815Z # api.security
2025-08-20T17:13:37.6291964Z 
2025-08-20T17:13:37.6292064Z <a id="etl"></a>
2025-08-20T17:13:37.6292215Z 
2025-08-20T17:13:37.6292303Z # etl
2025-08-20T17:13:37.6292434Z 
2025-08-20T17:13:37.6292552Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T17:13:37.6292775Z 
2025-08-20T17:13:37.6292879Z # etl.fba\_fee\_ingestor
2025-08-20T17:13:37.6293066Z 
2025-08-20T17:13:37.6293182Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T17:13:37.6293396Z 
2025-08-20T17:13:37.6293510Z # etl.sp\_fees\_ingestor
2025-08-20T17:13:37.6293692Z 
2025-08-20T17:13:37.6293804Z <a id="etl.keepa_ingestor"></a>
2025-08-20T17:13:37.6294027Z 
2025-08-20T17:13:37.6294125Z # etl.keepa\_ingestor
2025-08-20T17:13:37.6294289Z 
2025-08-20T17:13:37.6294387Z <a id="etl.db"></a>
2025-08-20T17:13:37.6294553Z 
2025-08-20T17:13:37.6294642Z # etl.db
2025-08-20T17:13:37.6294773Z 
2025-08-20T17:13:37.6294900Z <a id="etl.dialects.schemas"></a>
2025-08-20T17:13:37.6295120Z 
2025-08-20T17:13:37.6295228Z # etl.dialects.schemas
2025-08-20T17:13:37.6295410Z 
2025-08-20T17:13:37.6295567Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T17:13:37.6295844Z 
2025-08-20T17:13:37.6295974Z # etl.dialects.amazon\_reimbursements
2025-08-20T17:13:37.6296223Z 
2025-08-20T17:13:37.6296368Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T17:13:37.6296642Z 
2025-08-20T17:13:37.6296780Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T17:13:37.6297043Z 
2025-08-20T17:13:37.6297181Z <a id="etl.dialects.test_generic"></a>
2025-08-20T17:13:37.6297427Z 
2025-08-20T17:13:37.6297744Z # etl.dialects.test\_generic
2025-08-20T17:13:37.6298143Z 
2025-08-20T17:13:37.6298289Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T17:13:37.6298549Z 
2025-08-20T17:13:37.6298665Z # etl.dialects.amazon\_returns
2025-08-20T17:13:37.6298877Z 
2025-08-20T17:13:37.6299023Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T17:13:37.6299305Z 
2025-08-20T17:13:37.6299427Z # etl.dialects.amazon\_fee\_preview
2025-08-20T17:13:37.6299682Z 
2025-08-20T17:13:37.6299853Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T17:13:37.6300167Z 
2025-08-20T17:13:37.6300310Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T17:13:37.6300591Z 
2025-08-20T17:13:37.6300732Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T17:13:37.6300979Z 
2025-08-20T17:13:37.6301105Z # etl.dialects.amazon\_settlements
2025-08-20T17:13:37.6301327Z 
2025-08-20T17:13:37.6301484Z <a id="etl.dialects"></a>
2025-08-20T17:13:37.6301668Z 
2025-08-20T17:13:37.6301760Z # etl.dialects
2025-08-20T17:13:37.6301910Z 
2025-08-20T17:13:37.6302008Z <a id="ingest"></a>
2025-08-20T17:13:37.6302179Z 
2025-08-20T17:13:37.6302287Z # ingest
2025-08-20T17:13:37.6302420Z 
2025-08-20T17:13:37.6302542Z <a id="ingest.maintenance"></a>
2025-08-20T17:13:37.6302773Z 
2025-08-20T17:13:37.6302895Z # ingest.maintenance
2025-08-20T17:13:37.6303099Z 
2025-08-20T17:13:37.6303236Z <a id="ingest.copy_loader"></a>
2025-08-20T17:13:37.6303466Z 
2025-08-20T17:13:37.6303571Z # ingest.copy\_loader
2025-08-20T17:13:37.6303736Z 
2025-08-20T17:13:37.6303882Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T17:13:37.6304164Z 
2025-08-20T17:13:37.6304270Z #### copy\_df\_via\_temp
2025-08-20T17:13:37.6304454Z 
2025-08-20T17:13:37.6304558Z ```python
2025-08-20T17:13:37.6304822Z def copy_df_via_temp(engine: Engine,
2025-08-20T17:13:37.6305197Z                      df: pd.DataFrame,
2025-08-20T17:13:37.6305564Z                      target_table: str,
2025-08-20T17:13:37.6305899Z                      *,
2025-08-20T17:13:37.6306211Z                      target_schema: Optional[str] = None,
2025-08-20T17:13:37.6306609Z                      columns: Sequence[str],
2025-08-20T17:13:37.6307163Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T17:13:37.6307720Z                      analyze_after: bool = False,
2025-08-20T17:13:37.6308083Z                      connection: Any | None = None) -> int
2025-08-20T17:13:37.6308433Z ```
2025-08-20T17:13:37.6308578Z 
2025-08-20T17:13:37.6308846Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T17:13:37.6309242Z 
2025-08-20T17:13:37.6309384Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T17:13:37.6309657Z 
2025-08-20T17:13:37.6309785Z # ingest.tests.test\_smoke
2025-08-20T17:13:37.6310001Z 
2025-08-20T17:13:37.6310133Z <a id="ingest.tests"></a>
2025-08-20T17:13:37.6310345Z 
2025-08-20T17:13:37.6310453Z # ingest.tests
2025-08-20T17:13:37.6310619Z 
2025-08-20T17:13:37.6310748Z <a id="ingest.upload_router"></a>
2025-08-20T17:13:37.6310989Z 
2025-08-20T17:13:37.6311112Z # ingest.upload\_router
2025-08-20T17:13:37.6311347Z 
2025-08-20T17:13:37.6311501Z <a id="ingest.email_watcher"></a>
2025-08-20T17:13:37.6311771Z 
2025-08-20T17:13:37.6311908Z # ingest.email\_watcher
2025-08-20T17:13:37.6312127Z 
2025-08-20T17:13:37.6312284Z <a id="ingest.email_watcher.main"></a>
2025-08-20T17:13:37.6312581Z 
2025-08-20T17:13:37.6312700Z #### main
2025-08-20T17:13:37.6312864Z 
2025-08-20T17:13:37.6312981Z ```python
2025-08-20T17:13:37.6313291Z def main() -> dict[str, str]
2025-08-20T17:13:37.6313648Z ```
2025-08-20T17:13:37.6313807Z 
2025-08-20T17:13:37.6314061Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T17:13:37.6314475Z 
2025-08-20T17:13:37.6314725Z Returns {"status": "success"} when processing completes.
2025-08-20T17:13:37.6315118Z 
2025-08-20T17:13:37.6315255Z <a id="ingest.tasks"></a>
2025-08-20T17:13:37.6315500Z 
2025-08-20T17:13:37.6315615Z # ingest.tasks
2025-08-20T17:13:37.6315830Z 
2025-08-20T17:13:37.6316002Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T17:13:37.6316324Z 
2025-08-20T17:13:37.6316708Z #### task\_import\_file
2025-08-20T17:13:37.6316941Z 
2025-08-20T17:13:37.6317057Z ```python
2025-08-20T17:13:37.6317626Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T17:13:37.6318162Z def task_import_file(self: Any,
2025-08-20T17:13:37.6318561Z                      uri: str,
2025-08-20T17:13:37.6318953Z                      report_type: str | None = None,
2025-08-20T17:13:37.6319442Z                      force: bool = False) -> dict[str, Any]
2025-08-20T17:13:37.6319877Z ```
2025-08-20T17:13:37.6320037Z 
2025-08-20T17:13:37.6320277Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T17:13:37.6320658Z 
2025-08-20T17:13:37.6320811Z <a id="ingest.celery_app"></a>
2025-08-20T17:13:37.6321072Z 
2025-08-20T17:13:37.6321202Z # ingest.celery\_app
2025-08-20T17:13:37.6321418Z 
2025-08-20T17:13:37.6321563Z <a id="ingest.ingest_router"></a>
2025-08-20T17:13:37.6321838Z 
2025-08-20T17:13:37.6321972Z # ingest.ingest\_router
2025-08-20T17:13:37.6322205Z 
2025-08-20T17:13:37.6322353Z <a id="logistics_etl"></a>
2025-08-20T17:13:37.6322595Z 
2025-08-20T17:13:37.6322719Z # logistics\_etl
2025-08-20T17:13:37.6322906Z 
2025-08-20T17:13:37.6323041Z Daily logistics ETL job.
2025-08-20T17:13:37.6323266Z 
2025-08-20T17:13:37.6323419Z <a id="logistics_etl.__main__"></a>
2025-08-20T17:13:37.6323699Z 
2025-08-20T17:13:37.6323836Z # logistics\_etl.\_\_main\_\_
2025-08-20T17:13:37.6324096Z 
2025-08-20T17:13:37.6324234Z <a id="logistics_etl.dsn"></a>
2025-08-20T17:13:37.6324485Z 
2025-08-20T17:13:37.6324615Z # logistics\_etl.dsn
2025-08-20T17:13:37.6324822Z 
2025-08-20T17:13:37.6325028Z Local DSN builder to avoid cross-service dependency.
2025-08-20T17:13:37.6325398Z 
2025-08-20T17:13:37.6325572Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T17:13:37.6325876Z 
2025-08-20T17:13:37.6325994Z #### build\_dsn
2025-08-20T17:13:37.6326190Z 
2025-08-20T17:13:37.6326308Z ```python
2025-08-20T17:13:37.6326629Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:13:37.6327043Z ```
2025-08-20T17:13:37.6327203Z 
2025-08-20T17:13:37.6327872Z Return a Postgres DSN assembled from environment variables.
2025-08-20T17:13:37.6328305Z 
2025-08-20T17:13:37.6328586Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T17:13:37.6329311Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T17:13:37.6329937Z error when any required variable is missing.
2025-08-20T17:13:37.6330267Z 
2025-08-20T17:13:37.6330434Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T17:13:37.6330751Z 
2025-08-20T17:13:37.6330905Z # logistics\_etl.tests.conftest
2025-08-20T17:13:37.6331161Z 
2025-08-20T17:13:37.6331343Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T17:13:37.6331688Z 
2025-08-20T17:13:37.6331846Z # logistics\_etl.tests.test\_repository
2025-08-20T17:13:37.6332146Z 
2025-08-20T17:13:37.6332320Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T17:13:37.6332637Z 
2025-08-20T17:13:37.6332785Z # logistics\_etl.tests.test\_cron
2025-08-20T17:13:37.6333068Z 
2025-08-20T17:13:37.6333248Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T17:13:37.6333587Z 
2025-08-20T17:13:37.6333738Z # logistics\_etl.tests.test\_imports
2025-08-20T17:13:37.6334035Z 
2025-08-20T17:13:37.6334202Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T17:13:37.6334517Z 
2025-08-20T17:13:37.6334664Z # logistics\_etl.tests.test\_smoke
2025-08-20T17:13:37.6334948Z 
2025-08-20T17:13:37.6335119Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T17:13:37.6335441Z 
2025-08-20T17:13:37.6335594Z # logistics\_etl.tests.test\_client
2025-08-20T17:13:37.6335874Z 
2025-08-20T17:13:37.6336016Z <a id="logistics_etl.tests"></a>
2025-08-20T17:13:37.6336293Z 
2025-08-20T17:13:37.6336427Z # logistics\_etl.tests
2025-08-20T17:13:37.6336643Z 
2025-08-20T17:13:37.6336786Z <a id="logistics_etl.flow"></a>
2025-08-20T17:13:37.6337058Z 
2025-08-20T17:13:37.6337189Z # logistics\_etl.flow
2025-08-20T17:13:37.6337407Z 
2025-08-20T17:13:37.6337729Z <a id="logistics_etl.client"></a>
2025-08-20T17:13:37.6338257Z 
2025-08-20T17:13:37.6412678Z # logistics\_etl.client
2025-08-20T17:13:37.6412997Z 
2025-08-20T17:13:37.6413131Z <a id="logistics_etl.cron"></a>
2025-08-20T17:13:37.6413358Z 
2025-08-20T17:13:37.6413474Z # logistics\_etl.cron
2025-08-20T17:13:37.6413666Z 
2025-08-20T17:13:37.6413790Z <a id="logistics_etl.db"></a>
2025-08-20T17:13:37.6414011Z 
2025-08-20T17:13:37.6414112Z # logistics\_etl.db
2025-08-20T17:13:37.6414272Z 
2025-08-20T17:13:37.6414403Z <a id="logistics_etl.repository"></a>
2025-08-20T17:13:37.6414657Z 
2025-08-20T17:13:37.6414775Z # logistics\_etl.repository
2025-08-20T17:13:37.6414979Z 
2025-08-20T17:13:37.6415095Z <a id="alert_bot"></a>
2025-08-20T17:13:37.6415280Z 
2025-08-20T17:13:37.6415380Z # alert\_bot
2025-08-20T17:13:37.6415554Z 
2025-08-20T17:13:37.6415691Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T17:13:37.6416001Z 
2025-08-20T17:13:37.6416127Z # alert\_bot.tests.test\_smoke
2025-08-20T17:13:37.6416363Z 
2025-08-20T17:13:37.6416485Z <a id="alert_bot.tests"></a>
2025-08-20T17:13:37.6416747Z 
2025-08-20T17:13:37.6416899Z # alert\_bot.tests
2025-08-20T17:13:37.6417074Z 
2025-08-20T17:13:37.6417198Z <a id="alert_bot.alert_bot"></a>
2025-08-20T17:13:37.6417432Z 
2025-08-20T17:13:37.6417770Z # alert\_bot.alert\_bot
2025-08-20T17:13:37.6417972Z 
2025-08-20T17:13:37.6418092Z <a id="alert_bot.rules"></a>
2025-08-20T17:13:37.6418308Z 
2025-08-20T17:13:37.6418412Z # alert\_bot.rules
2025-08-20T17:13:37.6418580Z 
2025-08-20T17:13:37.6418697Z <a id="common"></a>
2025-08-20T17:13:37.6418873Z 
2025-08-20T17:13:37.6418975Z # common
2025-08-20T17:13:37.6419110Z 
2025-08-20T17:13:37.6419230Z <a id="common.dsn"></a>
2025-08-20T17:13:37.6419413Z 
2025-08-20T17:13:37.6419509Z # common.dsn
2025-08-20T17:13:37.6419658Z 
2025-08-20T17:13:37.6419782Z <a id="common.dsn.build_dsn"></a>
2025-08-20T17:13:37.6420006Z 
2025-08-20T17:13:37.6420111Z #### build\_dsn
2025-08-20T17:13:37.6420281Z 
2025-08-20T17:13:37.6420380Z ```python
2025-08-20T17:13:37.6420659Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:13:37.6421022Z ```
2025-08-20T17:13:37.6421470Z 
2025-08-20T17:13:37.6421668Z Return a Postgres DSN, validating required variables.
2025-08-20T17:13:37.6421982Z 
2025-08-20T17:13:37.6422285Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T17:13:37.6422977Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T17:13:37.6423605Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T17:13:37.6424077Z missing.
2025-08-20T17:13:37.6424219Z 
2025-08-20T17:13:37.6424350Z <a id="common.models_vendor"></a>
2025-08-20T17:13:37.6424589Z 
2025-08-20T17:13:37.6424700Z # common.models\_vendor
2025-08-20T17:13:37.6424887Z 
2025-08-20T17:13:37.6425176Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T17:13:37.6425441Z 
2025-08-20T17:13:37.6425542Z ## Vendor Objects
2025-08-20T17:13:37.6425710Z 
2025-08-20T17:13:37.6425806Z ```python
2025-08-20T17:13:37.6426039Z class Vendor(Base)
2025-08-20T17:13:37.6426299Z ```
2025-08-20T17:13:37.6426430Z 
2025-08-20T17:13:37.6426553Z Vendor of inventory items.
2025-08-20T17:13:37.6426754Z 
2025-08-20T17:13:37.6426907Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T17:13:37.6427209Z 
2025-08-20T17:13:37.6427317Z ## VendorPrice Objects
2025-08-20T17:13:37.6427649Z 
2025-08-20T17:13:37.6427751Z ```python
2025-08-20T17:13:37.6428002Z class VendorPrice(Base)
2025-08-20T17:13:37.6428265Z ```
2025-08-20T17:13:37.6428387Z 
2025-08-20T17:13:37.6428540Z Association table linking vendors to pricing.
2025-08-20T17:13:37.6428824Z 
2025-08-20T17:13:37.6428956Z <a id="common.db_url"></a>
2025-08-20T17:13:37.6429152Z 
2025-08-20T17:13:37.6429261Z # common.db\_url
2025-08-20T17:13:37.6429423Z 
2025-08-20T17:13:37.6429542Z <a id="common.db_url.build_url"></a>
2025-08-20T17:13:37.6429771Z 
2025-08-20T17:13:37.6429875Z #### build\_url
2025-08-20T17:13:37.6430025Z 
2025-08-20T17:13:37.6430116Z ```python
2025-08-20T17:13:37.6430386Z def build_url(async_: bool = True) -> str
2025-08-20T17:13:37.6430992Z ```
2025-08-20T17:13:37.6431130Z 
2025-08-20T17:13:37.6431300Z Return Postgres DSN from environment variables.
2025-08-20T17:13:37.6431585Z 
2025-08-20T17:13:37.6431702Z <a id="common.keepa"></a>
2025-08-20T17:13:37.6431898Z 
2025-08-20T17:13:37.6432000Z # common.keepa
2025-08-20T17:13:37.6432151Z 
2025-08-20T17:13:37.6432261Z <a id="common.llm"></a>
2025-08-20T17:13:37.6432443Z 
2025-08-20T17:13:37.6432537Z # common.llm
2025-08-20T17:13:37.6432676Z 
2025-08-20T17:13:37.6432800Z <a id="common.settings"></a>
2025-08-20T17:13:37.6433006Z 
2025-08-20T17:13:37.6433107Z # common.settings
2025-08-20T17:13:37.6433270Z 
2025-08-20T17:13:37.6433382Z <a id="common.db"></a>
2025-08-20T17:13:37.6433552Z 
2025-08-20T17:13:37.6433647Z # common.db
2025-08-20T17:13:37.6433784Z 
2025-08-20T17:13:37.6433927Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T17:13:37.6434196Z 
2025-08-20T17:13:37.6434314Z #### build\_sqlalchemy\_url
2025-08-20T17:13:37.6434611Z 
2025-08-20T17:13:37.6434711Z ```python
2025-08-20T17:13:37.6434997Z def build_sqlalchemy_url() -> str
2025-08-20T17:13:37.6435320Z ```
2025-08-20T17:13:37.6435449Z 
2025-08-20T17:13:37.6435600Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T17:13:37.6435875Z 
2025-08-20T17:13:37.6436040Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T17:13:37.6436302Z 
2025-08-20T17:13:37.6436410Z #### build\_asyncpg\_dsn
2025-08-20T17:13:37.6436590Z 
2025-08-20T17:13:37.6436693Z ```python
2025-08-20T17:13:37.6436935Z def build_asyncpg_dsn() -> str
2025-08-20T17:13:37.6437239Z ```
2025-08-20T17:13:37.6437360Z 
2025-08-20T17:13:37.6437694Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T17:13:37.6438030Z 
2025-08-20T17:13:37.6438152Z <a id="common.db.refresh_mvs"></a>
2025-08-20T17:13:37.6438381Z 
2025-08-20T17:13:37.6438483Z #### refresh\_mvs
2025-08-20T17:13:37.6438631Z 
2025-08-20T17:13:37.6438724Z ```python
2025-08-20T17:13:37.6439010Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T17:13:37.6439374Z ```
2025-08-20T17:13:37.6439502Z 
2025-08-20T17:13:37.6439909Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T17:13:37.6440239Z 
2025-08-20T17:13:37.6440353Z <a id="common.config"></a>
2025-08-20T17:13:37.6440548Z 
2025-08-20T17:13:37.6440644Z # common.config
2025-08-20T17:13:37.6440797Z 
2025-08-20T17:13:37.6440913Z <a id="common.base"></a>
2025-08-20T17:13:37.6441095Z 
2025-08-20T17:13:37.6441190Z # common.base
2025-08-20T17:13:37.6441337Z 
2025-08-20T17:13:37.6441447Z <a id="common.base.Base"></a>
2025-08-20T17:13:37.6441649Z 
2025-08-20T17:13:37.6441741Z ## Base Objects
2025-08-20T17:13:37.6441892Z 
2025-08-20T17:13:37.6441982Z ```python
2025-08-20T17:13:37.6442222Z class Base(DeclarativeBase)
2025-08-20T17:13:37.6442511Z ```
2025-08-20T17:13:37.6442627Z 
2025-08-20T17:13:37.6442760Z Base class for SQLAlchemy models.
2025-08-20T17:13:37.6442987Z 
2025-08-20T17:13:37.6443089Z <a id="repricer"></a>
2025-08-20T17:13:37.6443273Z 
2025-08-20T17:13:37.6443363Z # repricer
2025-08-20T17:13:37.6443496Z 
2025-08-20T17:13:37.6443626Z <a id="repricer.app.schemas"></a>
2025-08-20T17:13:37.6443860Z 
2025-08-20T17:13:37.6443969Z # repricer.app.schemas
2025-08-20T17:13:37.6444147Z 
2025-08-20T17:13:37.6444270Z <a id="repricer.app.deps"></a>
2025-08-20T17:13:37.6444483Z 
2025-08-20T17:13:37.6444590Z # repricer.app.deps
2025-08-20T17:13:37.6444759Z 
2025-08-20T17:13:37.6444939Z Placeholder module for Keepa / SP-API clients.
2025-08-20T17:13:37.6445212Z 
2025-08-20T17:13:37.6445338Z <a id="repricer.app.logic"></a>
2025-08-20T17:13:37.6445572Z 
2025-08-20T17:13:37.6445682Z # repricer.app.logic
2025-08-20T17:13:37.6445858Z 
2025-08-20T17:13:37.6446004Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T17:13:37.6446275Z 
2025-08-20T17:13:37.6446374Z #### MIN\_MARGIN
2025-08-20T17:13:37.6446540Z 
2025-08-20T17:13:37.6446633Z 15 % ROI
2025-08-20T17:13:37.6446765Z 
2025-08-20T17:13:37.6446922Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T17:13:37.6447208Z 
2025-08-20T17:13:37.6447312Z #### compute\_price
2025-08-20T17:13:37.6447881Z 
2025-08-20T17:13:37.6447990Z ```python
2025-08-20T17:13:37.6448356Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T17:13:37.6448804Z ```
2025-08-20T17:13:37.6448926Z 
2025-08-20T17:13:37.6449091Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T17:13:37.6449515Z Replace with real competitive logic later.
2025-08-20T17:13:37.6449771Z 
2025-08-20T17:13:37.6449893Z <a id="repricer.app.main"></a>
2025-08-20T17:13:37.6450119Z 
2025-08-20T17:13:37.6450228Z # repricer.app.main
2025-08-20T17:13:37.6450393Z 
2025-08-20T17:13:37.6450518Z <a id="repricer.app"></a>
2025-08-20T17:13:37.6450705Z 
2025-08-20T17:13:37.6450803Z # repricer.app
2025-08-20T17:13:37.6450955Z 
2025-08-20T17:13:37.6451101Z <a id="repricer.tests.test_imports"></a>
2025-08-20T17:13:37.6451354Z 
2025-08-20T17:13:37.6451474Z # repricer.tests.test\_imports
2025-08-20T17:13:37.6451689Z 
2025-08-20T17:13:37.6451819Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T17:13:37.6452059Z 
2025-08-20T17:13:37.6452196Z # repricer.tests.test\_smoke
2025-08-20T17:13:37.6452408Z 
2025-08-20T17:13:37.6452525Z <a id="repricer.tests"></a>
2025-08-20T17:13:37.6452715Z 
2025-08-20T17:13:37.6452823Z # repricer.tests
2025-08-20T17:13:37.6452977Z 
2025-08-20T17:13:37.6453072Z <a id="db"></a>
2025-08-20T17:13:37.6453228Z 
2025-08-20T17:13:37.6453313Z # db
2025-08-20T17:13:37.6453433Z 
2025-08-20T17:13:37.6453544Z <a id="db.utils.views"></a>
2025-08-20T17:13:37.6453742Z 
2025-08-20T17:13:37.6453838Z # db.utils.views
2025-08-20T17:13:37.6453990Z 
2025-08-20T17:13:37.6454139Z <a id="db.utils.views.replace_view"></a>
2025-08-20T17:13:37.6454391Z 
2025-08-20T17:13:37.6454491Z #### replace\_view
2025-08-20T17:13:37.6454650Z 
2025-08-20T17:13:37.6454739Z ```python
2025-08-20T17:13:37.6455010Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T17:13:37.6455377Z ```
2025-08-20T17:13:37.6455498Z 
2025-08-20T17:13:37.6455638Z Drop and recreate a SQL view atomically.
2025-08-20T17:13:37.6455889Z 
2025-08-20T17:13:37.6455997Z <a id="db.utils"></a>
2025-08-20T17:13:37.6456352Z 
2025-08-20T17:13:37.6456452Z # db.utils
2025-08-20T17:13:37.6456586Z 
2025-08-20T17:13:37.6456700Z <a id="price_importer"></a>
2025-08-20T17:13:37.6456906Z 
2025-08-20T17:13:37.6457003Z # price\_importer
2025-08-20T17:13:37.6457158Z 
2025-08-20T17:13:37.6457311Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T17:13:37.6457794Z 
2025-08-20T17:13:37.6457937Z # price\_importer.services\_common.dsn
2025-08-20T17:13:37.6458193Z 
2025-08-20T17:13:37.6458388Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T17:13:37.6458706Z 
2025-08-20T17:13:37.6458803Z #### build\_dsn
2025-08-20T17:13:37.6458963Z 
2025-08-20T17:13:37.6459058Z ```python
2025-08-20T17:13:37.6459318Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:13:37.6459653Z ```
2025-08-20T17:13:37.6459778Z 
2025-08-20T17:13:37.6459885Z Return safe DSN.
2025-08-20T17:13:37.6460041Z 
2025-08-20T17:13:37.6460321Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T17:13:37.6460887Z Falls back to individual PG_* variables.
2025-08-20T17:13:37.6461582Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T17:13:37.6461886Z 
2025-08-20T17:13:37.6462072Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T17:13:37.6462380Z 
2025-08-20T17:13:37.6462542Z # price\_importer.services\_common.models\_vendor
2025-08-20T17:13:37.6462823Z 
2025-08-20T17:13:37.6462983Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T17:13:37.6463263Z 
2025-08-20T17:13:37.6463408Z # price\_importer.services\_common.db\_url
2025-08-20T17:13:37.6463659Z 
2025-08-20T17:13:37.6463856Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T17:13:37.6464186Z 
2025-08-20T17:13:37.6464282Z #### build\_url
2025-08-20T17:13:37.6464437Z 
2025-08-20T17:13:37.6464537Z ```python
2025-08-20T17:13:37.6464797Z def build_url(async_: bool = True) -> str
2025-08-20T17:13:37.6465155Z ```
2025-08-20T17:13:37.6465289Z 
2025-08-20T17:13:37.6465646Z Return Postgres DSN from environment variables.
2025-08-20T17:13:37.6465949Z 
2025-08-20T17:13:37.6466109Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T17:13:37.6466384Z 
2025-08-20T17:13:37.6466522Z # price\_importer.services\_common.keepa
2025-08-20T17:13:37.6466786Z 
2025-08-20T17:13:37.6466936Z <a id="price_importer.services_common.llm"></a>
2025-08-20T17:13:37.6467210Z 
2025-08-20T17:13:37.6467352Z # price\_importer.services\_common.llm
2025-08-20T17:13:37.6467754Z 
2025-08-20T17:13:37.6467926Z <a id="price_importer.services_common.settings"></a>
2025-08-20T17:13:37.6468220Z 
2025-08-20T17:13:37.6468359Z # price\_importer.services\_common.settings
2025-08-20T17:13:37.6468615Z 
2025-08-20T17:13:37.6468758Z <a id="price_importer.services_common.db"></a>
2025-08-20T17:13:37.6469027Z 
2025-08-20T17:13:37.6469160Z # price\_importer.services\_common.db
2025-08-20T17:13:37.6469392Z 
2025-08-20T17:13:37.6469630Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T17:13:37.6469995Z 
2025-08-20T17:13:37.6470117Z #### build\_sqlalchemy\_url
2025-08-20T17:13:37.6470318Z 
2025-08-20T17:13:37.6470410Z ```python
2025-08-20T17:13:37.6470657Z def build_sqlalchemy_url() -> str
2025-08-20T17:13:37.6470966Z ```
2025-08-20T17:13:37.6471089Z 
2025-08-20T17:13:37.6471235Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T17:13:37.6471514Z 
2025-08-20T17:13:37.6471727Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T17:13:37.6472086Z 
2025-08-20T17:13:37.6472203Z #### build\_asyncpg\_dsn
2025-08-20T17:13:37.6472386Z 
2025-08-20T17:13:37.6472477Z ```python
2025-08-20T17:13:37.6472730Z def build_asyncpg_dsn() -> str
2025-08-20T17:13:37.6473019Z ```
2025-08-20T17:13:37.6473149Z 
2025-08-20T17:13:37.6473341Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T17:13:37.6473656Z 
2025-08-20T17:13:37.6473857Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T17:13:37.6474177Z 
2025-08-20T17:13:37.6474284Z #### refresh\_mvs
2025-08-20T17:13:37.6474631Z 
2025-08-20T17:13:37.6474731Z ```python
2025-08-20T17:13:37.6475023Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T17:13:37.6475396Z ```
2025-08-20T17:13:37.6475520Z 
2025-08-20T17:13:37.6475721Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T17:13:37.6476058Z 
2025-08-20T17:13:37.6476199Z <a id="price_importer.services_common"></a>
2025-08-20T17:13:37.6476515Z 
2025-08-20T17:13:37.6476649Z # price\_importer.services\_common
2025-08-20T17:13:37.6476886Z 
2025-08-20T17:13:37.6477039Z <a id="price_importer.services_common.base"></a>
2025-08-20T17:13:37.6477319Z 
2025-08-20T17:13:37.6477587Z # price\_importer.services\_common.base
2025-08-20T17:13:37.6477839Z 
2025-08-20T17:13:37.6477972Z <a id="price_importer.normaliser"></a>
2025-08-20T17:13:37.6478225Z 
2025-08-20T17:13:37.6478341Z # price\_importer.normaliser
2025-08-20T17:13:37.6478558Z 
2025-08-20T17:13:37.6478719Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T17:13:37.6479009Z 
2025-08-20T17:13:37.6479149Z # price\_importer.common.models\_vendor
2025-08-20T17:13:37.6479401Z 
2025-08-20T17:13:37.6479539Z <a id="price_importer.common.db_url"></a>
2025-08-20T17:13:37.6479792Z 
2025-08-20T17:13:37.6479915Z # price\_importer.common.db\_url
2025-08-20T17:13:37.6480139Z 
2025-08-20T17:13:37.6480288Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T17:13:37.6480567Z 
2025-08-20T17:13:37.6480670Z #### make\_dsn
2025-08-20T17:13:37.6480811Z 
2025-08-20T17:13:37.6480904Z ```python
2025-08-20T17:13:37.6481163Z def make_dsn(async_: bool = False) -> str
2025-08-20T17:13:37.6481492Z ```
2025-08-20T17:13:37.6481617Z 
2025-08-20T17:13:37.6481733Z Return DSN using shared builder.
2025-08-20T17:13:37.6481948Z 
2025-08-20T17:13:37.6482120Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T17:13:37.6482411Z 
2025-08-20T17:13:37.6482507Z #### build\_url
2025-08-20T17:13:37.6482652Z 
2025-08-20T17:13:37.6482751Z ```python
2025-08-20T17:13:37.6483021Z def build_url(async_: bool = False) -> str
2025-08-20T17:13:37.6483578Z ```
2025-08-20T17:13:37.6483703Z 
2025-08-20T17:13:37.6483893Z Return Postgres DSN built from environment variables.
2025-08-20T17:13:37.6484219Z 
2025-08-20T17:13:37.6484349Z <a id="price_importer.common"></a>
2025-08-20T17:13:37.6484584Z 
2025-08-20T17:13:37.6484705Z # price\_importer.common
2025-08-20T17:13:37.6484896Z 
2025-08-20T17:13:37.6485038Z <a id="price_importer.common.base"></a>
2025-08-20T17:13:37.6485298Z 
2025-08-20T17:13:37.6485414Z # price\_importer.common.base
2025-08-20T17:13:37.6485617Z 
2025-08-20T17:13:37.6485755Z <a id="price_importer.tests.conftest"></a>
2025-08-20T17:13:37.6486017Z 
2025-08-20T17:13:37.6486139Z # price\_importer.tests.conftest
2025-08-20T17:13:37.6486352Z 
2025-08-20T17:13:37.6486500Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T17:13:37.6486783Z 
2025-08-20T17:13:37.6486911Z # price\_importer.tests.test\_reader
2025-08-20T17:13:37.6487149Z 
2025-08-20T17:13:37.6487294Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T17:13:37.6487720Z 
2025-08-20T17:13:37.6487849Z # price\_importer.tests.test\_imports
2025-08-20T17:13:37.6488091Z 
2025-08-20T17:13:37.6488234Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T17:13:37.6488490Z 
2025-08-20T17:13:37.6488620Z # price\_importer.tests.test\_smoke
2025-08-20T17:13:37.6488851Z 
2025-08-20T17:13:37.6489000Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T17:13:37.6489271Z 
2025-08-20T17:13:37.6489401Z # price\_importer.tests.test\_normaliser
2025-08-20T17:13:37.6489641Z 
2025-08-20T17:13:37.6489760Z <a id="price_importer.tests"></a>
2025-08-20T17:13:37.6489989Z 
2025-08-20T17:13:37.6490096Z # price\_importer.tests
2025-08-20T17:13:37.6490273Z 
2025-08-20T17:13:37.6490400Z <a id="price_importer.reader"></a>
2025-08-20T17:13:37.6490619Z 
2025-08-20T17:13:37.6490726Z # price\_importer.reader
2025-08-20T17:13:37.6490920Z 
2025-08-20T17:13:37.6491050Z <a id="price_importer.repository"></a>
2025-08-20T17:13:37.6491287Z 
2025-08-20T17:13:37.6491411Z # price\_importer.repository
2025-08-20T17:13:37.6491815Z 
2025-08-20T17:13:37.6491944Z <a id="price_importer.import"></a>
2025-08-20T17:13:37.6492170Z 
2025-08-20T17:13:37.6492296Z # price\_importer.import
2025-08-20T17:13:37.6492493Z 
2025-08-20T17:13:37.6492600Z <a id="fees_h10"></a>
2025-08-20T17:13:37.6492780Z 
2025-08-20T17:13:37.6492889Z # fees\_h10
2025-08-20T17:13:37.6493038Z 
2025-08-20T17:13:37.6493160Z <a id="fees_h10.worker"></a>
2025-08-20T17:13:37.6493372Z 
2025-08-20T17:13:37.6493463Z # fees\_h10.worker
2025-08-20T17:13:37.6493620Z 
2025-08-20T17:13:37.6493779Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T17:13:37.6494054Z 
2025-08-20T17:13:37.6494163Z #### list\_active\_asins
2025-08-20T17:13:37.6494350Z 
2025-08-20T17:13:37.6494455Z ```python
2025-08-20T17:13:37.6494717Z def list_active_asins() -> list[str]
2025-08-20T17:13:37.6495045Z ```
2025-08-20T17:13:37.6495166Z 
2025-08-20T17:13:37.6495330Z Return known ASINs or an empty list if unavailable.
2025-08-20T17:13:37.6495648Z 
2025-08-20T17:13:37.6495781Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T17:13:37.6496022Z 
2025-08-20T17:13:37.6496148Z # fees\_h10.tests.test\_smoke
2025-08-20T17:13:37.6496359Z 
2025-08-20T17:13:37.6496467Z <a id="fees_h10.tests"></a>
2025-08-20T17:13:37.6496670Z 
2025-08-20T17:13:37.6496769Z # fees\_h10.tests
2025-08-20T17:13:37.6496927Z 
2025-08-20T17:13:37.6497042Z <a id="fees_h10.client"></a>
2025-08-20T17:13:37.6497242Z 
2025-08-20T17:13:37.6497340Z # fees\_h10.client
2025-08-20T17:13:37.6497681Z 
2025-08-20T17:13:37.6497807Z <a id="fees_h10.repository"></a>
2025-08-20T17:13:37.6498023Z 
2025-08-20T17:13:37.6498134Z # fees\_h10.repository
2025-08-20T17:13:37.6498309Z 
2025-08-20T17:13:37.6498470Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T17:13:37.6498742Z 
2025-08-20T17:13:37.6498848Z #### upsert\_fees\_raw
2025-08-20T17:13:37.6499028Z 
2025-08-20T17:13:37.6499119Z ```python
2025-08-20T17:13:37.6499371Z def upsert_fees_raw(engine: Engine,
2025-08-20T17:13:37.6499941Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T17:13:37.6500304Z                     *,
2025-08-20T17:13:37.6500636Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T17:13:37.6501031Z ```
2025-08-20T17:13:37.6501149Z 
2025-08-20T17:13:37.6501263Z Idempotent upsert for fees.
2025-08-20T17:13:37.6501469Z 
2025-08-20T17:13:37.6501689Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T17:13:37.6502211Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T17:13:37.6502669Z Only updates when one of the mutable fields changes.
2025-08-20T17:13:37.6502965Z 
2025-08-20T17:13:37.6503076Z <a id="emailer"></a>
2025-08-20T17:13:37.6503243Z 
2025-08-20T17:13:37.6503336Z # emailer
2025-08-20T17:13:37.6503473Z 
2025-08-20T17:13:37.6503622Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T17:13:37.6503888Z 
2025-08-20T17:13:37.6504021Z # emailer.tests.test\_import\_emailer
2025-08-20T17:13:37.6504269Z 
2025-08-20T17:13:37.6533185Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T17:13:37.6533499Z 
2025-08-20T17:13:37.6533630Z # emailer.tests.test\_smoke
2025-08-20T17:13:37.6533852Z 
2025-08-20T17:13:37.6533967Z <a id="emailer.tests"></a>
2025-08-20T17:13:37.6534164Z 
2025-08-20T17:13:37.6534264Z # emailer.tests
2025-08-20T17:13:37.6534425Z 
2025-08-20T17:13:37.6534547Z <a id="emailer.generate_body"></a>
2025-08-20T17:13:37.6534769Z 
2025-08-20T17:13:37.6534887Z # emailer.generate\_body
2025-08-20T17:13:37.6535068Z 
2025-08-20T17:13:37.6535168Z <a id="llm_server"></a>
2025-08-20T17:13:37.6535347Z 
2025-08-20T17:13:37.6535442Z # llm\_server
2025-08-20T17:13:37.6535584Z 
2025-08-20T17:13:37.6535701Z <a id="llm_server.app"></a>
2025-08-20T17:13:37.6535898Z 
2025-08-20T17:13:37.6535996Z # llm\_server.app
2025-08-20T17:13:37.6536144Z 
