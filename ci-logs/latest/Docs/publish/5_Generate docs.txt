2025-08-18T10:32:49.8773452Z ##[group]Run pydoc-markdown
2025-08-18T10:32:49.8773741Z [36;1mpydoc-markdown[0m
2025-08-18T10:32:49.8813981Z shell: /usr/bin/bash -e {0}
2025-08-18T10:32:49.8814194Z env:
2025-08-18T10:32:49.8814419Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:32:49.8815054Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T10:32:49.8815451Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:32:49.8815789Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:32:49.8816126Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T10:32:49.8816453Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T10:32:49.8816732Z ##[endgroup]
2025-08-18T10:32:50.2017506Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T10:32:50.2018204Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T10:32:50.2018657Z In "pydoc-markdown.yml"
2025-08-18T10:32:50.2019107Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T10:32:50.2019767Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T10:32:50.2020583Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T10:32:50.2021085Z 
2025-08-18T10:32:50.4918678Z <a id="__init__"></a>
2025-08-18T10:32:50.4919154Z 
2025-08-18T10:32:50.4919336Z # \_\_init\_\_
2025-08-18T10:32:50.4919608Z 
2025-08-18T10:32:50.4919772Z <a id="api"></a>
2025-08-18T10:32:50.4919991Z 
2025-08-18T10:32:50.4920125Z # api
2025-08-18T10:32:50.4920300Z 
2025-08-18T10:32:50.4920450Z <a id="api.errors"></a>
2025-08-18T10:32:50.4920714Z 
2025-08-18T10:32:50.4920863Z # api.errors
2025-08-18T10:32:50.4921083Z 
2025-08-18T10:32:50.4921268Z <a id="api.tests.test_errors_json"></a>
2025-08-18T10:32:50.4921616Z 
2025-08-18T10:32:50.4921790Z # api.tests.test\_errors\_json
2025-08-18T10:32:50.4922085Z 
2025-08-18T10:32:50.4922258Z <a id="api.tests.test_llm"></a>
2025-08-18T10:32:50.4922557Z 
2025-08-18T10:32:50.4923192Z # api.tests.test\_llm
2025-08-18T10:32:50.4923500Z 
2025-08-18T10:32:50.4923679Z <a id="api.tests.test_imports"></a>
2025-08-18T10:32:50.4924030Z 
2025-08-18T10:32:50.4924178Z # api.tests.test\_imports
2025-08-18T10:32:50.4924420Z 
2025-08-18T10:32:50.4924584Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T10:32:50.4925242Z 
2025-08-18T10:32:50.4925403Z # api.tests.test\_entrypoint
2025-08-18T10:32:50.4925666Z 
2025-08-18T10:32:50.4925819Z <a id="api.tests.test_health"></a>
2025-08-18T10:32:50.4926118Z 
2025-08-18T10:32:50.4926255Z # api.tests.test\_health
2025-08-18T10:32:50.4926505Z 
2025-08-18T10:32:50.4926647Z <a id="api.logging_config"></a>
2025-08-18T10:32:50.4926894Z 
2025-08-18T10:32:50.4927026Z # api.logging\_config
2025-08-18T10:32:50.4927231Z 
2025-08-18T10:32:50.4927426Z <a id="api.migrations.env"></a>
2025-08-18T10:32:50.4927678Z 
2025-08-18T10:32:50.4927819Z # api.migrations.env
2025-08-18T10:32:50.4928056Z 
2025-08-18T10:32:50.4928281Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T10:32:50.4928689Z 
2025-08-18T10:32:50.4928883Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T10:32:50.4929226Z 
2025-08-18T10:32:50.4929424Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T10:32:50.4929760Z 
2025-08-18T10:32:50.4929939Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T10:32:50.4930246Z 
2025-08-18T10:32:50.4930523Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T10:32:50.4930935Z 
2025-08-18T10:32:50.4931175Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T10:32:50.4931551Z 
2025-08-18T10:32:50.4931757Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T10:32:50.4932120Z 
2025-08-18T10:32:50.4932310Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T10:32:50.4932633Z 
2025-08-18T10:32:50.4932842Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T10:32:50.4933184Z 
2025-08-18T10:32:50.4933360Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T10:32:50.4933688Z 
2025-08-18T10:32:50.4934219Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T10:32:50.4934572Z 
2025-08-18T10:32:50.4934762Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T10:32:50.4935253Z 
2025-08-18T10:32:50.4935452Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T10:32:50.4935781Z 
2025-08-18T10:32:50.4935973Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T10:32:50.4936302Z 
2025-08-18T10:32:50.4936529Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T10:32:50.4936864Z 
2025-08-18T10:32:50.4937051Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T10:32:50.4937367Z 
2025-08-18T10:32:50.4937602Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T10:32:50.4937972Z 
2025-08-18T10:32:50.4938100Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T10:32:50.4938325Z 
2025-08-18T10:32:50.4938465Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T10:32:50.4938688Z 
2025-08-18T10:32:50.4938810Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T10:32:50.4939013Z 
2025-08-18T10:32:50.4939164Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T10:32:50.4939407Z 
2025-08-18T10:32:50.4939541Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T10:32:50.4939747Z 
2025-08-18T10:32:50.4939863Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T10:32:50.4940066Z 
2025-08-18T10:32:50.4940167Z # api.migrations.versions.0001\_baseline
2025-08-18T10:32:50.4940344Z 
2025-08-18T10:32:50.4940440Z <a id="api.migrations.versions"></a>
2025-08-18T10:32:50.4940619Z 
2025-08-18T10:32:50.4940704Z # api.migrations.versions
2025-08-18T10:32:50.4940849Z 
2025-08-18T10:32:50.4940942Z <a id="api.migrations"></a>
2025-08-18T10:32:50.4941086Z 
2025-08-18T10:32:50.4941161Z # api.migrations
2025-08-18T10:32:50.4941280Z 
2025-08-18T10:32:50.4941353Z <a id="api.db"></a>
2025-08-18T10:32:50.4941470Z 
2025-08-18T10:32:50.4941698Z # api.db
2025-08-18T10:32:50.4941805Z 
2025-08-18T10:32:50.4941889Z <a id="api.routes.stats"></a>
2025-08-18T10:32:50.4942042Z 
2025-08-18T10:32:50.4942121Z # api.routes.stats
2025-08-18T10:32:50.4942238Z 
2025-08-18T10:32:50.4942333Z <a id="api.routes.stats.kpi"></a>
2025-08-18T10:32:50.4942490Z 
2025-08-18T10:32:50.4942565Z #### kpi
2025-08-18T10:32:50.4942662Z 
2025-08-18T10:32:50.4942733Z ```python
2025-08-18T10:32:50.4942923Z @router.get("/stats/kpi")
2025-08-18T10:32:50.4943175Z def kpi() -> List[Dict[str, int]]
2025-08-18T10:32:50.4943400Z ```
2025-08-18T10:32:50.4943491Z 
2025-08-18T10:32:50.4943582Z Return KPI metrics (mock).
2025-08-18T10:32:50.4943724Z 
2025-08-18T10:32:50.4943836Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T10:32:50.4944026Z 
2025-08-18T10:32:50.4944110Z #### roi\_by\_vendor
2025-08-18T10:32:50.4944228Z 
2025-08-18T10:32:50.4944299Z ```python
2025-08-18T10:32:50.4944492Z @router.get("/stats/roi_by_vendor")
2025-08-18T10:32:50.4944751Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T10:32:50.4945255Z ```
2025-08-18T10:32:50.4945439Z 
2025-08-18T10:32:50.4945528Z Return ROI percent by vendor.
2025-08-18T10:32:50.4945706Z 
2025-08-18T10:32:50.4945804Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T10:32:50.4945989Z 
2025-08-18T10:32:50.4946059Z #### roi\_trend
2025-08-18T10:32:50.4946166Z 
2025-08-18T10:32:50.4946239Z ```python
2025-08-18T10:32:50.4946413Z @router.get("/stats/roi_trend")
2025-08-18T10:32:50.4946660Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T10:32:50.4946908Z ```
2025-08-18T10:32:50.4947000Z 
2025-08-18T10:32:50.4947082Z Return 30-day ROI trend.
2025-08-18T10:32:50.4947214Z 
2025-08-18T10:32:50.4947299Z <a id="api.routes.roi"></a>
2025-08-18T10:32:50.4947457Z 
2025-08-18T10:32:50.4947532Z # api.routes.roi
2025-08-18T10:32:50.4947644Z 
2025-08-18T10:32:50.4947740Z <a id="api.routes.health"></a>
2025-08-18T10:32:50.4947888Z 
2025-08-18T10:32:50.4947965Z # api.routes.health
2025-08-18T10:32:50.4948081Z 
2025-08-18T10:32:50.4948189Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T10:32:50.4948516Z 
2025-08-18T10:32:50.4948586Z #### MAX\_SKEW
2025-08-18T10:32:50.4948700Z 
2025-08-18T10:32:50.4948767Z seconds
2025-08-18T10:32:50.4949030Z 
2025-08-18T10:32:50.4949204Z <a id="api.routes.health.health"></a>
2025-08-18T10:32:50.4949494Z 
2025-08-18T10:32:50.4949612Z #### health
2025-08-18T10:32:50.4949782Z 
2025-08-18T10:32:50.4949906Z ```python
2025-08-18T10:32:50.4950252Z @router.get("/health", include_in_schema=False)
2025-08-18T10:32:50.4950935Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T10:32:50.4951344Z ```
2025-08-18T10:32:50.4951438Z 
2025-08-18T10:32:50.4951566Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T10:32:50.4951766Z 
2025-08-18T10:32:50.4951869Z <a id="api.routes.repository"></a>
2025-08-18T10:32:50.4952041Z 
2025-08-18T10:32:50.4952123Z # api.routes.repository
2025-08-18T10:32:50.4952255Z 
2025-08-18T10:32:50.4952340Z <a id="api.routes"></a>
2025-08-18T10:32:50.4952475Z 
2025-08-18T10:32:50.4952556Z # api.routes
2025-08-18T10:32:50.4952667Z 
2025-08-18T10:32:50.4952751Z <a id="api.models.fee"></a>
2025-08-18T10:32:50.4952892Z 
2025-08-18T10:32:50.4952974Z # api.models.fee
2025-08-18T10:32:50.4953086Z 
2025-08-18T10:32:50.4953165Z <a id="api.models"></a>
2025-08-18T10:32:50.4953292Z 
2025-08-18T10:32:50.4953368Z # api.models
2025-08-18T10:32:50.4953469Z 
2025-08-18T10:32:50.4953554Z <a id="api.roi_repository"></a>
2025-08-18T10:32:50.4953709Z 
2025-08-18T10:32:50.4953788Z # api.roi\_repository
2025-08-18T10:32:50.4953908Z 
2025-08-18T10:32:50.4953988Z <a id="api.main"></a>
2025-08-18T10:32:50.4954120Z 
2025-08-18T10:32:50.4954189Z # api.main
2025-08-18T10:32:50.4954289Z 
2025-08-18T10:32:50.4954377Z <a id="api.main.ready"></a>
2025-08-18T10:32:50.4954517Z 
2025-08-18T10:32:50.4954585Z #### ready
2025-08-18T10:32:50.4954684Z 
2025-08-18T10:32:50.4954752Z ```python
2025-08-18T10:32:50.4955265Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T10:32:50.4955886Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T10:32:50.4956254Z                                                                       str]
2025-08-18T10:32:50.4956518Z ```
2025-08-18T10:32:50.4956605Z 
2025-08-18T10:32:50.4956716Z Return 200 only when migrations are at head.
2025-08-18T10:32:50.4956898Z 
2025-08-18T10:32:50.4956977Z <a id="api.config"></a>
2025-08-18T10:32:50.4957108Z 
2025-08-18T10:32:50.4957183Z # api.config
2025-08-18T10:32:50.4957284Z 
2025-08-18T10:32:50.4957354Z <a id="etl"></a>
2025-08-18T10:32:50.4957467Z 
2025-08-18T10:32:50.4957533Z # etl
2025-08-18T10:32:50.4957627Z 
2025-08-18T10:32:50.4957718Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T10:32:50.4957874Z 
2025-08-18T10:32:50.4957952Z # etl.fba\_fee\_ingestor
2025-08-18T10:32:50.4958082Z 
2025-08-18T10:32:50.4958178Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T10:32:50.4958331Z 
2025-08-18T10:32:50.4958411Z # etl.sp\_fees\_ingestor
2025-08-18T10:32:50.4958552Z 
2025-08-18T10:32:50.4958634Z <a id="etl.keepa_ingestor"></a>
2025-08-18T10:32:50.4958784Z 
2025-08-18T10:32:50.4958866Z # etl.keepa\_ingestor
2025-08-18T10:32:50.4958991Z 
2025-08-18T10:32:50.4959063Z <a id="etl.db"></a>
2025-08-18T10:32:50.4959175Z 
2025-08-18T10:32:50.4959249Z # etl.db
2025-08-18T10:32:50.4959343Z 
2025-08-18T10:32:50.4959431Z <a id="etl.dialects.schemas"></a>
2025-08-18T10:32:50.4959592Z 
2025-08-18T10:32:50.4959671Z # etl.dialects.schemas
2025-08-18T10:32:50.4959798Z 
2025-08-18T10:32:50.4959908Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T10:32:50.4960108Z 
2025-08-18T10:32:50.4960203Z # etl.dialects.amazon\_reimbursements
2025-08-18T10:32:50.4960374Z 
2025-08-18T10:32:50.4960484Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T10:32:50.4960667Z 
2025-08-18T10:32:50.4960761Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T10:32:50.4960931Z 
2025-08-18T10:32:50.4961023Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T10:32:50.4961198Z 
2025-08-18T10:32:50.4961289Z # etl.dialects.amazon\_returns
2025-08-18T10:32:50.4961559Z 
2025-08-18T10:32:50.4961661Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T10:32:50.4961842Z 
2025-08-18T10:32:50.4961942Z # etl.dialects.amazon\_fee\_preview
2025-08-18T10:32:50.4962104Z 
2025-08-18T10:32:50.4962217Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T10:32:50.4962432Z 
2025-08-18T10:32:50.4962529Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T10:32:50.4962702Z 
2025-08-18T10:32:50.4962809Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T10:32:50.4962988Z 
2025-08-18T10:32:50.4963084Z # etl.dialects.amazon\_settlements
2025-08-18T10:32:50.4963245Z 
2025-08-18T10:32:50.4963333Z <a id="etl.dialects"></a>
2025-08-18T10:32:50.4963470Z 
2025-08-18T10:32:50.4963583Z # etl.dialects
2025-08-18T10:32:50.4963691Z 
2025-08-18T10:32:50.4963764Z <a id="ingest"></a>
2025-08-18T10:32:50.4963890Z 
2025-08-18T10:32:50.4963959Z # ingest
2025-08-18T10:32:50.4964054Z 
2025-08-18T10:32:50.4964148Z <a id="ingest.maintenance"></a>
2025-08-18T10:32:50.4964312Z 
2025-08-18T10:32:50.4964392Z # ingest.maintenance
2025-08-18T10:32:50.4964516Z 
2025-08-18T10:32:50.4964610Z <a id="ingest.copy_loader"></a>
2025-08-18T10:32:50.4964755Z 
2025-08-18T10:32:50.4964999Z # ingest.copy\_loader
2025-08-18T10:32:50.4965206Z 
2025-08-18T10:32:50.4965319Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T10:32:50.4965510Z 
2025-08-18T10:32:50.4965596Z #### copy\_df\_via\_temp
2025-08-18T10:32:50.4965723Z 
2025-08-18T10:32:50.4965793Z ```python
2025-08-18T10:32:50.4965986Z def copy_df_via_temp(engine: Engine,
2025-08-18T10:32:50.4966239Z                      df: pd.DataFrame,
2025-08-18T10:32:50.4966489Z                      target_table: str,
2025-08-18T10:32:50.4966722Z                      *,
2025-08-18T10:32:50.4966955Z                      target_schema: Optional[str] = None,
2025-08-18T10:32:50.4967232Z                      columns: Sequence[str],
2025-08-18T10:32:50.4967535Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T10:32:50.4967977Z                      analyze_after: bool = False,
2025-08-18T10:32:50.4968258Z                      connection: Any | None = None) -> int
2025-08-18T10:32:50.4968524Z ```
2025-08-18T10:32:50.4968616Z 
2025-08-18T10:32:50.4968782Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T10:32:50.4969032Z 
2025-08-18T10:32:50.4969130Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T10:32:50.4969295Z 
2025-08-18T10:32:50.4969382Z # ingest.tests.test\_smoke
2025-08-18T10:32:50.4969520Z 
2025-08-18T10:32:50.4969605Z <a id="ingest.tests"></a>
2025-08-18T10:32:50.4969739Z 
2025-08-18T10:32:50.4969819Z # ingest.tests
2025-08-18T10:32:50.4969930Z 
2025-08-18T10:32:50.4970020Z <a id="ingest.upload_router"></a>
2025-08-18T10:32:50.4970184Z 
2025-08-18T10:32:50.4970266Z # ingest.upload\_router
2025-08-18T10:32:50.4970391Z 
2025-08-18T10:32:50.4970480Z <a id="ingest.email_watcher"></a>
2025-08-18T10:32:50.4970639Z 
2025-08-18T10:32:50.4970717Z # ingest.email\_watcher
2025-08-18T10:32:50.4970852Z 
2025-08-18T10:32:50.4970952Z <a id="ingest.email_watcher.main"></a>
2025-08-18T10:32:50.4971123Z 
2025-08-18T10:32:50.4971191Z #### main
2025-08-18T10:32:50.4971295Z 
2025-08-18T10:32:50.4971368Z ```python
2025-08-18T10:32:50.4971548Z def main() -> dict[str, str]
2025-08-18T10:32:50.4971768Z ```
2025-08-18T10:32:50.4971859Z 
2025-08-18T10:32:50.4972006Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T10:32:50.4972241Z 
2025-08-18T10:32:50.4972375Z Returns {"status": "success"} when processing completes.
2025-08-18T10:32:50.4972590Z 
2025-08-18T10:32:50.4972675Z <a id="ingest.tasks"></a>
2025-08-18T10:32:50.4972809Z 
2025-08-18T10:32:50.4972880Z # ingest.tasks
2025-08-18T10:32:50.4972993Z 
2025-08-18T10:32:50.4973100Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T10:32:50.4973287Z 
2025-08-18T10:32:50.4973369Z #### task\_import\_file
2025-08-18T10:32:50.4973494Z 
2025-08-18T10:32:50.4973562Z ```python
2025-08-18T10:32:50.4973828Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T10:32:50.4974597Z def task_import_file(self,
2025-08-18T10:32:50.4975183Z                      uri: str,
2025-08-18T10:32:50.4975594Z                      report_type: Optional[str] = None,
2025-08-18T10:32:50.4976063Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T10:32:50.4976323Z ```
2025-08-18T10:32:50.4976421Z 
2025-08-18T10:32:50.4976564Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T10:32:50.4976778Z 
2025-08-18T10:32:50.4976875Z <a id="ingest.celery_app"></a>
2025-08-18T10:32:50.4977028Z 
2025-08-18T10:32:50.4977107Z # ingest.celery\_app
2025-08-18T10:32:50.4977237Z 
2025-08-18T10:32:50.4977329Z <a id="ingest.ingest_router"></a>
2025-08-18T10:32:50.4977488Z 
2025-08-18T10:32:50.4977567Z # ingest.ingest\_router
2025-08-18T10:32:50.4977697Z 
2025-08-18T10:32:50.4977777Z <a id="logistics_etl"></a>
2025-08-18T10:32:50.4977910Z 
2025-08-18T10:32:50.4977989Z # logistics\_etl
2025-08-18T10:32:50.4978111Z 
2025-08-18T10:32:50.4978194Z Daily logistics ETL job.
2025-08-18T10:32:50.4978331Z 
2025-08-18T10:32:50.4978427Z <a id="logistics_etl.__main__"></a>
2025-08-18T10:32:50.4978590Z 
2025-08-18T10:32:50.4978672Z # logistics\_etl.\_\_main\_\_
2025-08-18T10:32:50.4978822Z 
2025-08-18T10:32:50.4978906Z <a id="logistics_etl.dsn"></a>
2025-08-18T10:32:50.4979051Z 
2025-08-18T10:32:50.4979135Z # logistics\_etl.dsn
2025-08-18T10:32:50.4979270Z 
2025-08-18T10:32:50.4979399Z Local DSN builder to avoid cross-service dependency.
2025-08-18T10:32:50.4979609Z 
2025-08-18T10:32:50.4979704Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T10:32:50.4979882Z 
2025-08-18T10:32:50.4979952Z #### build\_dsn
2025-08-18T10:32:50.4980061Z 
2025-08-18T10:32:50.4980129Z ```python
2025-08-18T10:32:50.4980324Z def build_dsn(sync: bool = True) -> str
2025-08-18T10:32:50.4980557Z ```
2025-08-18T10:32:50.4980647Z 
2025-08-18T10:32:50.4980793Z Return a Postgres DSN assembled from environment variables.
2025-08-18T10:32:50.4981019Z 
2025-08-18T10:32:50.4981641Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T10:32:50.4982063Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T10:32:50.4982426Z error when any required variable is missing.
2025-08-18T10:32:50.4982609Z 
2025-08-18T10:32:50.4982710Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T10:32:50.4982895Z 
2025-08-18T10:32:50.4982983Z # logistics\_etl.tests.conftest
2025-08-18T10:32:50.4983136Z 
2025-08-18T10:32:50.4983253Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T10:32:50.4983448Z 
2025-08-18T10:32:50.4983546Z # logistics\_etl.tests.test\_repository
2025-08-18T10:32:50.4983722Z 
2025-08-18T10:32:50.4983822Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T10:32:50.4984001Z 
2025-08-18T10:32:50.4984090Z # logistics\_etl.tests.test\_cron
2025-08-18T10:32:50.4984252Z 
2025-08-18T10:32:50.4984357Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T10:32:50.4984539Z 
2025-08-18T10:32:50.4984636Z # logistics\_etl.tests.test\_imports
2025-08-18T10:32:50.4984997Z 
2025-08-18T10:32:50.4985137Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T10:32:50.4985325Z 
2025-08-18T10:32:50.4985416Z # logistics\_etl.tests.test\_smoke
2025-08-18T10:32:50.4985573Z 
2025-08-18T10:32:50.4985674Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T10:32:50.4985855Z 
2025-08-18T10:32:50.4985943Z # logistics\_etl.tests.test\_client
2025-08-18T10:32:50.4986108Z 
2025-08-18T10:32:50.4986206Z <a id="logistics_etl.tests"></a>
2025-08-18T10:32:50.4986357Z 
2025-08-18T10:32:50.4986434Z # logistics\_etl.tests
2025-08-18T10:32:50.4986562Z 
2025-08-18T10:32:50.4986645Z <a id="logistics_etl.flow"></a>
2025-08-18T10:32:50.4986788Z 
2025-08-18T10:32:50.4986864Z # logistics\_etl.flow
2025-08-18T10:32:50.4986995Z 
2025-08-18T10:32:50.4987085Z <a id="logistics_etl.client"></a>
2025-08-18T10:32:50.4987242Z 
2025-08-18T10:32:50.4987327Z # logistics\_etl.client
2025-08-18T10:32:50.4987451Z 
2025-08-18T10:32:50.4987535Z <a id="logistics_etl.cron"></a>
2025-08-18T10:32:50.4987821Z 
2025-08-18T10:32:50.4987897Z # logistics\_etl.cron
2025-08-18T10:32:50.4988018Z 
2025-08-18T10:32:50.4988102Z <a id="logistics_etl.db"></a>
2025-08-18T10:32:50.4988251Z 
2025-08-18T10:32:50.4988328Z # logistics\_etl.db
2025-08-18T10:32:50.4988442Z 
2025-08-18T10:32:50.4988539Z <a id="logistics_etl.repository"></a>
2025-08-18T10:32:50.4988707Z 
2025-08-18T10:32:50.4988793Z # logistics\_etl.repository
2025-08-18T10:32:50.4988939Z 
2025-08-18T10:32:50.4989015Z <a id="alert_bot"></a>
2025-08-18T10:32:50.4989136Z 
2025-08-18T10:32:50.4989205Z # alert\_bot
2025-08-18T10:32:50.4989313Z 
2025-08-18T10:32:50.4989407Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T10:32:50.4989575Z 
2025-08-18T10:32:50.4989669Z # alert\_bot.tests.test\_smoke
2025-08-18T10:32:50.4989814Z 
2025-08-18T10:32:50.4989899Z <a id="alert_bot.tests"></a>
2025-08-18T10:32:50.4990040Z 
2025-08-18T10:32:50.4990121Z # alert\_bot.tests
2025-08-18T10:32:50.4990237Z 
2025-08-18T10:32:50.4990326Z <a id="alert_bot.alert_bot"></a>
2025-08-18T10:32:50.4990491Z 
2025-08-18T10:32:50.4990569Z # alert\_bot.alert\_bot
2025-08-18T10:32:50.4990696Z 
2025-08-18T10:32:50.4990786Z <a id="alert_bot.rules"></a>
2025-08-18T10:32:50.4990926Z 
2025-08-18T10:32:50.4990999Z # alert\_bot.rules
2025-08-18T10:32:50.4991114Z 
2025-08-18T10:32:50.4991192Z <a id="common"></a>
2025-08-18T10:32:50.4991306Z 
2025-08-18T10:32:50.4991375Z # common
2025-08-18T10:32:50.4991473Z 
2025-08-18T10:32:50.4991552Z <a id="common.dsn"></a>
2025-08-18T10:32:50.4991677Z 
2025-08-18T10:32:50.4991746Z # common.dsn
2025-08-18T10:32:50.4991856Z 
2025-08-18T10:32:50.4991946Z <a id="common.dsn.build_dsn"></a>
2025-08-18T10:32:50.4992100Z 
2025-08-18T10:32:50.4992176Z #### build\_dsn
2025-08-18T10:32:50.4992286Z 
2025-08-18T10:32:50.4992353Z ```python
2025-08-18T10:32:50.4992545Z def build_dsn(sync: bool = True) -> str
2025-08-18T10:32:50.4992771Z ```
2025-08-18T10:32:50.4992867Z 
2025-08-18T10:32:50.4992995Z Return a Postgres DSN, validating required variables.
2025-08-18T10:32:50.4993323Z 
2025-08-18T10:32:50.4993519Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T10:32:50.4993968Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T10:32:50.4994388Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T10:32:50.5029502Z missing.
2025-08-18T10:32:50.5029678Z 
2025-08-18T10:32:50.5029830Z <a id="common.models_vendor"></a>
2025-08-18T10:32:50.5030112Z 
2025-08-18T10:32:50.5030246Z # common.models\_vendor
2025-08-18T10:32:50.5030460Z 
2025-08-18T10:32:50.5030618Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T10:32:50.5030912Z 
2025-08-18T10:32:50.5031036Z ## Vendor Objects
2025-08-18T10:32:50.5031161Z 
2025-08-18T10:32:50.5031240Z ```python
2025-08-18T10:32:50.5031408Z class Vendor(Base)
2025-08-18T10:32:50.5031593Z ```
2025-08-18T10:32:50.5031683Z 
2025-08-18T10:32:50.5031774Z Vendor of inventory items.
2025-08-18T10:32:50.5031930Z 
2025-08-18T10:32:50.5032053Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T10:32:50.5032261Z 
2025-08-18T10:32:50.5032345Z ## VendorPrice Objects
2025-08-18T10:32:50.5032483Z 
2025-08-18T10:32:50.5032554Z ```python
2025-08-18T10:32:50.5032732Z class VendorPrice(Base)
2025-08-18T10:32:50.5032928Z ```
2025-08-18T10:32:50.5033018Z 
2025-08-18T10:32:50.5033137Z Association table linking vendors to pricing.
2025-08-18T10:32:50.5033330Z 
2025-08-18T10:32:50.5033413Z <a id="common.db_url"></a>
2025-08-18T10:32:50.5033557Z 
2025-08-18T10:32:50.5033690Z # common.db\_url
2025-08-18T10:32:50.5033800Z 
2025-08-18T10:32:50.5033897Z <a id="common.db_url.build_url"></a>
2025-08-18T10:32:50.5034063Z 
2025-08-18T10:32:50.5034135Z #### build\_url
2025-08-18T10:32:50.5034242Z 
2025-08-18T10:32:50.5034319Z ```python
2025-08-18T10:32:50.5034513Z def build_url(async_: bool = True) -> str
2025-08-18T10:32:50.5034758Z ```
2025-08-18T10:32:50.5035128Z 
2025-08-18T10:32:50.5035281Z Return Postgres DSN from env or PG_* parts.
2025-08-18T10:32:50.5035480Z 
2025-08-18T10:32:50.5035731Z <a id="common.keepa"></a>
2025-08-18T10:32:50.5035882Z 
2025-08-18T10:32:50.5035964Z # common.keepa
2025-08-18T10:32:50.5036072Z 
2025-08-18T10:32:50.5036152Z <a id="common.llm"></a>
2025-08-18T10:32:50.5036285Z 
2025-08-18T10:32:50.5036359Z # common.llm
2025-08-18T10:32:50.5036464Z 
2025-08-18T10:32:50.5036549Z <a id="common.settings"></a>
2025-08-18T10:32:50.5036702Z 
2025-08-18T10:32:50.5036778Z # common.settings
2025-08-18T10:32:50.5036893Z 
2025-08-18T10:32:50.5036979Z <a id="common.db"></a>
2025-08-18T10:32:50.5037106Z 
2025-08-18T10:32:50.5037175Z # common.db
2025-08-18T10:32:50.5037277Z 
2025-08-18T10:32:50.5037387Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T10:32:50.5037571Z 
2025-08-18T10:32:50.5037655Z #### build\_sqlalchemy\_url
2025-08-18T10:32:50.5037800Z 
2025-08-18T10:32:50.5037870Z ```python
2025-08-18T10:32:50.5038058Z def build_sqlalchemy_url() -> str
2025-08-18T10:32:50.5038284Z ```
2025-08-18T10:32:50.5038375Z 
2025-08-18T10:32:50.5038486Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T10:32:50.5038674Z 
2025-08-18T10:32:50.5038774Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T10:32:50.5038948Z 
2025-08-18T10:32:50.5039036Z #### build\_asyncpg\_dsn
2025-08-18T10:32:50.5039169Z 
2025-08-18T10:32:50.5039237Z ```python
2025-08-18T10:32:50.5039422Z def build_asyncpg_dsn() -> str
2025-08-18T10:32:50.5039629Z ```
2025-08-18T10:32:50.5039725Z 
2025-08-18T10:32:50.5039865Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T10:32:50.5040084Z 
2025-08-18T10:32:50.5040181Z <a id="common.db.refresh_mvs"></a>
2025-08-18T10:32:50.5040343Z 
2025-08-18T10:32:50.5040415Z #### refresh\_mvs
2025-08-18T10:32:50.5040532Z 
2025-08-18T10:32:50.5040599Z ```python
2025-08-18T10:32:50.5040805Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T10:32:50.5041067Z ```
2025-08-18T10:32:50.5041153Z 
2025-08-18T10:32:50.5041295Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T10:32:50.5041524Z 
2025-08-18T10:32:50.5041733Z <a id="common.config"></a>
2025-08-18T10:32:50.5041873Z 
2025-08-18T10:32:50.5041956Z # common.config
2025-08-18T10:32:50.5042064Z 
2025-08-18T10:32:50.5042144Z <a id="common.base"></a>
2025-08-18T10:32:50.5042279Z 
2025-08-18T10:32:50.5042354Z # common.base
2025-08-18T10:32:50.5042456Z 
2025-08-18T10:32:50.5042542Z <a id="common.base.Base"></a>
2025-08-18T10:32:50.5042696Z 
2025-08-18T10:32:50.5042769Z ## Base Objects
2025-08-18T10:32:50.5042877Z 
2025-08-18T10:32:50.5042952Z ```python
2025-08-18T10:32:50.5043127Z class Base(DeclarativeBase)
2025-08-18T10:32:50.5043337Z ```
2025-08-18T10:32:50.5043423Z 
2025-08-18T10:32:50.5043514Z Base class for SQLAlchemy models.
2025-08-18T10:32:50.5043677Z 
2025-08-18T10:32:50.5043755Z <a id="repricer"></a>
2025-08-18T10:32:50.5043877Z 
2025-08-18T10:32:50.5043947Z # repricer
2025-08-18T10:32:50.5044054Z 
2025-08-18T10:32:50.5044147Z <a id="repricer.app.schemas"></a>
2025-08-18T10:32:50.5044313Z 
2025-08-18T10:32:50.5044403Z # repricer.app.schemas
2025-08-18T10:32:50.5044536Z 
2025-08-18T10:32:50.5044631Z <a id="repricer.app.deps"></a>
2025-08-18T10:32:50.5044789Z 
2025-08-18T10:32:50.5045085Z # repricer.app.deps
2025-08-18T10:32:50.5045204Z 
2025-08-18T10:32:50.5045329Z Placeholder module for Keepa / SP-API clients.
2025-08-18T10:32:50.5045532Z 
2025-08-18T10:32:50.5045623Z <a id="repricer.app.logic"></a>
2025-08-18T10:32:50.5045774Z 
2025-08-18T10:32:50.5045862Z # repricer.app.logic
2025-08-18T10:32:50.5045984Z 
2025-08-18T10:32:50.5046088Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T10:32:50.5046277Z 
2025-08-18T10:32:50.5046348Z #### MIN\_MARGIN
2025-08-18T10:32:50.5046455Z 
2025-08-18T10:32:50.5046523Z 15 % ROI
2025-08-18T10:32:50.5046624Z 
2025-08-18T10:32:50.5046733Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T10:32:50.5046922Z 
2025-08-18T10:32:50.5047001Z #### compute\_price
2025-08-18T10:32:50.5047126Z 
2025-08-18T10:32:50.5047197Z ```python
2025-08-18T10:32:50.5047462Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T10:32:50.5047918Z ```
2025-08-18T10:32:50.5048017Z 
2025-08-18T10:32:50.5048131Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T10:32:50.5048424Z Replace with real competitive logic later.
2025-08-18T10:32:50.5048608Z 
2025-08-18T10:32:50.5048699Z <a id="repricer.app.main"></a>
2025-08-18T10:32:50.5048847Z 
2025-08-18T10:32:50.5048929Z # repricer.app.main
2025-08-18T10:32:50.5049046Z 
2025-08-18T10:32:50.5049127Z <a id="repricer.app"></a>
2025-08-18T10:32:50.5049268Z 
2025-08-18T10:32:50.5049343Z # repricer.app
2025-08-18T10:32:50.5049452Z 
2025-08-18T10:32:50.5049549Z <a id="repricer.tests.test_imports"></a>
2025-08-18T10:32:50.5049732Z 
2025-08-18T10:32:50.5049820Z # repricer.tests.test\_imports
2025-08-18T10:32:50.5049967Z 
2025-08-18T10:32:50.5050072Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T10:32:50.5050239Z 
2025-08-18T10:32:50.5050328Z # repricer.tests.test\_smoke
2025-08-18T10:32:50.5050474Z 
2025-08-18T10:32:50.5050565Z <a id="repricer.tests"></a>
2025-08-18T10:32:50.5050708Z 
2025-08-18T10:32:50.5050785Z # repricer.tests
2025-08-18T10:32:50.5050903Z 
2025-08-18T10:32:50.5050974Z <a id="db"></a>
2025-08-18T10:32:50.5051081Z 
2025-08-18T10:32:50.5051149Z # db
2025-08-18T10:32:50.5051236Z 
2025-08-18T10:32:50.5051320Z <a id="db.utils.views"></a>
2025-08-18T10:32:50.5051453Z 
2025-08-18T10:32:50.5051529Z # db.utils.views
2025-08-18T10:32:50.5051636Z 
2025-08-18T10:32:50.5051731Z <a id="db.utils.views.replace_view"></a>
2025-08-18T10:32:50.5051913Z 
2025-08-18T10:32:50.5051985Z #### replace\_view
2025-08-18T10:32:50.5052094Z 
2025-08-18T10:32:50.5052161Z ```python
2025-08-18T10:32:50.5052373Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T10:32:50.5052636Z ```
2025-08-18T10:32:50.5052723Z 
2025-08-18T10:32:50.5052819Z Drop and recreate a SQL view atomically.
2025-08-18T10:32:50.5052991Z 
2025-08-18T10:32:50.5053074Z <a id="db.utils"></a>
2025-08-18T10:32:50.5053197Z 
2025-08-18T10:32:50.5053265Z # db.utils
2025-08-18T10:32:50.5053366Z 
2025-08-18T10:32:50.5053569Z <a id="price_importer"></a>
2025-08-18T10:32:50.5053708Z 
2025-08-18T10:32:50.5053782Z # price\_importer
2025-08-18T10:32:50.5053902Z 
2025-08-18T10:32:50.5054010Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T10:32:50.5054206Z 
2025-08-18T10:32:50.5054310Z # price\_importer.services\_common.dsn
2025-08-18T10:32:50.5054482Z 
2025-08-18T10:32:50.5054615Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T10:32:50.5055028Z 
2025-08-18T10:32:50.5055112Z #### build\_dsn
2025-08-18T10:32:50.5055221Z 
2025-08-18T10:32:50.5055291Z ```python
2025-08-18T10:32:50.5055485Z def build_dsn(sync: bool = True) -> str
2025-08-18T10:32:50.5055720Z ```
2025-08-18T10:32:50.5055806Z 
2025-08-18T10:32:50.5055878Z Return safe DSN.
2025-08-18T10:32:50.5055989Z 
2025-08-18T10:32:50.5056340Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T10:32:50.5056545Z 
2025-08-18T10:32:50.5056683Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T10:32:50.5056907Z 
2025-08-18T10:32:50.5057026Z # price\_importer.services\_common.models\_vendor
2025-08-18T10:32:50.5057232Z 
2025-08-18T10:32:50.5057350Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T10:32:50.5057547Z 
2025-08-18T10:32:50.5057649Z # price\_importer.services\_common.db\_url
2025-08-18T10:32:50.5057832Z 
2025-08-18T10:32:50.5057969Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T10:32:50.5058196Z 
2025-08-18T10:32:50.5058266Z #### build\_url
2025-08-18T10:32:50.5058381Z 
2025-08-18T10:32:50.5058452Z ```python
2025-08-18T10:32:50.5058646Z def build_url(async_: bool = True) -> str
2025-08-18T10:32:50.5058881Z ```
2025-08-18T10:32:50.5058970Z 
2025-08-18T10:32:50.5059077Z Return Postgres DSN from env or PG_* parts.
2025-08-18T10:32:50.5059255Z 
2025-08-18T10:32:50.5059367Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T10:32:50.5059564Z 
2025-08-18T10:32:50.5059663Z # price\_importer.services\_common.keepa
2025-08-18T10:32:50.5059840Z 
2025-08-18T10:32:50.5059951Z <a id="price_importer.services_common.llm"></a>
2025-08-18T10:32:50.5060278Z 
2025-08-18T10:32:50.5060376Z # price\_importer.services\_common.llm
2025-08-18T10:32:50.5060548Z 
2025-08-18T10:32:50.5060671Z <a id="price_importer.services_common.settings"></a>
2025-08-18T10:32:50.5060869Z 
2025-08-18T10:32:50.5060978Z # price\_importer.services\_common.settings
2025-08-18T10:32:50.5061164Z 
2025-08-18T10:32:50.5061273Z <a id="price_importer.services_common.db"></a>
2025-08-18T10:32:50.5061457Z 
2025-08-18T10:32:50.5061554Z # price\_importer.services\_common.db
2025-08-18T10:32:50.5061729Z 
2025-08-18T10:32:50.5061892Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T10:32:50.5062137Z 
2025-08-18T10:32:50.5062227Z #### build\_sqlalchemy\_url
2025-08-18T10:32:50.5062365Z 
2025-08-18T10:32:50.5062435Z ```python
2025-08-18T10:32:50.5062625Z def build_sqlalchemy_url() -> str
2025-08-18T10:32:50.5062848Z ```
2025-08-18T10:32:50.5062942Z 
2025-08-18T10:32:50.5063042Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T10:32:50.5063234Z 
2025-08-18T10:32:50.5063390Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T10:32:50.5063628Z 
2025-08-18T10:32:50.5063709Z #### build\_asyncpg\_dsn
2025-08-18T10:32:50.5063842Z 
2025-08-18T10:32:50.5063918Z ```python
2025-08-18T10:32:50.5064099Z def build_asyncpg_dsn() -> str
2025-08-18T10:32:50.5064315Z ```
2025-08-18T10:32:50.5064402Z 
2025-08-18T10:32:50.5064534Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T10:32:50.5064758Z 
2025-08-18T10:32:50.5064997Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T10:32:50.5065213Z 
2025-08-18T10:32:50.5065293Z #### refresh\_mvs
2025-08-18T10:32:50.5065405Z 
2025-08-18T10:32:50.5065472Z ```python
2025-08-18T10:32:50.5065685Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T10:32:50.5065940Z ```
2025-08-18T10:32:50.5066033Z 
2025-08-18T10:32:50.5066172Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T10:32:50.5066513Z 
2025-08-18T10:32:50.5066627Z <a id="price_importer.services_common"></a>
2025-08-18T10:32:50.5066808Z 
2025-08-18T10:32:50.5066900Z # price\_importer.services\_common
2025-08-18T10:32:50.5067061Z 
2025-08-18T10:32:50.5067174Z <a id="price_importer.services_common.base"></a>
2025-08-18T10:32:50.5067367Z 
2025-08-18T10:32:50.5067466Z # price\_importer.services\_common.base
2025-08-18T10:32:50.5067647Z 
2025-08-18T10:32:50.5067741Z <a id="price_importer.normaliser"></a>
2025-08-18T10:32:50.5067911Z 
2025-08-18T10:32:50.5068006Z # price\_importer.normaliser
2025-08-18T10:32:50.5068155Z 
2025-08-18T10:32:50.5068264Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T10:32:50.5068452Z 
2025-08-18T10:32:50.5068556Z # price\_importer.common.models\_vendor
2025-08-18T10:32:50.5068726Z 
2025-08-18T10:32:50.5068824Z <a id="price_importer.common.db_url"></a>
2025-08-18T10:32:50.5069009Z 
2025-08-18T10:32:50.5069101Z # price\_importer.common.db\_url
2025-08-18T10:32:50.5069259Z 
2025-08-18T10:32:50.5069383Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T10:32:50.5069586Z 
2025-08-18T10:32:50.5069659Z #### make\_dsn
2025-08-18T10:32:50.5069768Z 
2025-08-18T10:32:50.5069844Z ```python
2025-08-18T10:32:50.5070031Z def make_dsn(async_: bool = False) -> str
2025-08-18T10:32:50.5070273Z ```
2025-08-18T10:32:50.5070361Z 
2025-08-18T10:32:50.5070484Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T10:32:50.5070692Z 
2025-08-18T10:32:50.5070809Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T10:32:50.5071004Z 
2025-08-18T10:32:50.5071081Z #### build\_url
2025-08-18T10:32:50.5071190Z 
2025-08-18T10:32:50.5071262Z ```python
2025-08-18T10:32:50.5071452Z def build_url(async_: bool = False) -> str
2025-08-18T10:32:50.5071689Z ```
2025-08-18T10:32:50.5071781Z 
2025-08-18T10:32:50.5071907Z Return Postgres DSN built from environment variables.
2025-08-18T10:32:50.5072113Z 
2025-08-18T10:32:50.5072205Z <a id="price_importer.common"></a>
2025-08-18T10:32:50.5072372Z 
2025-08-18T10:32:50.5072459Z # price\_importer.common
2025-08-18T10:32:50.5072712Z 
2025-08-18T10:32:50.5072816Z <a id="price_importer.common.base"></a>
2025-08-18T10:32:50.5072991Z 
2025-08-18T10:32:50.5073081Z # price\_importer.common.base
2025-08-18T10:32:50.5073233Z 
2025-08-18T10:32:50.5073338Z <a id="price_importer.tests.conftest"></a>
2025-08-18T10:32:50.5073517Z 
2025-08-18T10:32:50.5073610Z # price\_importer.tests.conftest
2025-08-18T10:32:50.5073771Z 
2025-08-18T10:32:50.5073881Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T10:32:50.5074064Z 
2025-08-18T10:32:50.5074163Z # price\_importer.tests.test\_reader
2025-08-18T10:32:50.5074326Z 
2025-08-18T10:32:50.5074437Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T10:32:50.5074627Z 
2025-08-18T10:32:50.5074723Z # price\_importer.tests.test\_imports
2025-08-18T10:32:50.5075107Z 
2025-08-18T10:32:50.5075223Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T10:32:50.5075414Z 
2025-08-18T10:32:50.5075507Z # price\_importer.tests.test\_smoke
2025-08-18T10:32:50.5075681Z 
2025-08-18T10:32:50.5075798Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T10:32:50.5075994Z 
2025-08-18T10:32:50.5076091Z # price\_importer.tests.test\_normaliser
2025-08-18T10:32:50.5076270Z 
2025-08-18T10:32:50.5076356Z <a id="price_importer.tests"></a>
2025-08-18T10:32:50.5076514Z 
2025-08-18T10:32:50.5076595Z # price\_importer.tests
2025-08-18T10:32:50.5076728Z 
2025-08-18T10:32:50.5076816Z <a id="price_importer.reader"></a>
2025-08-18T10:32:50.5076972Z 
2025-08-18T10:32:50.5077063Z # price\_importer.reader
2025-08-18T10:32:50.5077194Z 
2025-08-18T10:32:50.5077291Z <a id="price_importer.repository"></a>
2025-08-18T10:32:50.5077470Z 
2025-08-18T10:32:50.5077556Z # price\_importer.repository
2025-08-18T10:32:50.5077702Z 
2025-08-18T10:32:50.5077793Z <a id="price_importer.import"></a>
2025-08-18T10:32:50.5077958Z 
2025-08-18T10:32:50.5078038Z # price\_importer.import
2025-08-18T10:32:50.5078173Z 
2025-08-18T10:32:50.5078258Z <a id="fees_h10"></a>
2025-08-18T10:32:50.5078511Z 
2025-08-18T10:32:50.5078585Z # fees\_h10
2025-08-18T10:32:50.5078691Z 
2025-08-18T10:32:50.5078772Z <a id="fees_h10.worker"></a>
2025-08-18T10:32:50.5078909Z 
2025-08-18T10:32:50.5078983Z # fees\_h10.worker
2025-08-18T10:32:50.5079102Z 
2025-08-18T10:32:50.5079208Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T10:32:50.5079397Z 
2025-08-18T10:32:50.5079486Z #### list\_active\_asins
2025-08-18T10:32:50.5079617Z 
2025-08-18T10:32:50.5079687Z ```python
2025-08-18T10:32:50.5079874Z def list_active_asins() -> list[str]
2025-08-18T10:32:50.5080126Z ```
2025-08-18T10:32:50.5080225Z 
2025-08-18T10:32:50.5080343Z Return known ASINs or an empty list if unavailable.
2025-08-18T10:32:50.5080547Z 
2025-08-18T10:32:50.5080643Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T10:32:50.5080817Z 
2025-08-18T10:32:50.5080900Z # fees\_h10.tests.test\_smoke
2025-08-18T10:32:50.5081041Z 
2025-08-18T10:32:50.5081130Z <a id="fees_h10.tests"></a>
2025-08-18T10:32:50.5081265Z 
2025-08-18T10:32:50.5081345Z # fees\_h10.tests
2025-08-18T10:32:50.5081470Z 
2025-08-18T10:32:50.5081551Z <a id="fees_h10.client"></a>
2025-08-18T10:32:50.5081690Z 
2025-08-18T10:32:50.5081766Z # fees\_h10.client
2025-08-18T10:32:50.5081883Z 
2025-08-18T10:32:50.5081968Z <a id="fees_h10.repository"></a>
2025-08-18T10:32:50.5082117Z 
2025-08-18T10:32:50.5082200Z # fees\_h10.repository
2025-08-18T10:32:50.5082323Z 
2025-08-18T10:32:50.5082401Z <a id="emailer"></a>
2025-08-18T10:32:50.5082525Z 
2025-08-18T10:32:50.5082593Z # emailer
2025-08-18T10:32:50.5082694Z 
2025-08-18T10:32:50.5082806Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T10:32:50.5083000Z 
2025-08-18T10:32:50.5083096Z # emailer.tests.test\_import\_emailer
2025-08-18T10:32:50.5083263Z 
2025-08-18T10:32:50.5083365Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T10:32:50.5083528Z 
2025-08-18T10:32:50.5083617Z # emailer.tests.test\_smoke
2025-08-18T10:32:50.5083763Z 
2025-08-18T10:32:50.5083850Z <a id="emailer.tests"></a>
2025-08-18T10:32:50.5083987Z 
2025-08-18T10:32:50.5084066Z # emailer.tests
2025-08-18T10:32:50.5084303Z 
2025-08-18T10:32:50.5084396Z <a id="emailer.generate_body"></a>
2025-08-18T10:32:50.5084553Z 
2025-08-18T10:32:50.5084640Z # emailer.generate\_body
2025-08-18T10:32:50.5084771Z 
2025-08-18T10:32:50.5085039Z <a id="llm_server"></a>
2025-08-18T10:32:50.5085178Z 
2025-08-18T10:32:50.5085255Z # llm\_server
2025-08-18T10:32:50.5085365Z 
2025-08-18T10:32:50.5085454Z <a id="llm_server.app"></a>
2025-08-18T10:32:50.5085598Z 
2025-08-18T10:32:50.5085674Z # llm\_server.app
2025-08-18T10:32:50.5085786Z 
