2025-08-18T14:27:51.9834087Z ##[group]Run pydoc-markdown
2025-08-18T14:27:51.9834381Z [36;1mpydoc-markdown[0m
2025-08-18T14:27:51.9873727Z shell: /usr/bin/bash -e {0}
2025-08-18T14:27:51.9873949Z env:
2025-08-18T14:27:51.9874182Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:27:51.9874586Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T14:27:51.9874969Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:27:51.9875297Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:27:51.9875648Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T14:27:51.9875988Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T14:27:51.9876276Z ##[endgroup]
2025-08-18T14:27:52.3426182Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T14:27:52.3426822Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T14:27:52.3427120Z In "pydoc-markdown.yml"
2025-08-18T14:27:52.3427412Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T14:27:52.3427839Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T14:27:52.3428315Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T14:27:52.3428645Z 
2025-08-18T14:27:52.6455524Z <a id="__init__"></a>
2025-08-18T14:27:52.6455953Z 
2025-08-18T14:27:52.6456108Z # \_\_init\_\_
2025-08-18T14:27:52.6456344Z 
2025-08-18T14:27:52.6456515Z <a id="api"></a>
2025-08-18T14:27:52.6456760Z 
2025-08-18T14:27:52.6456900Z # api
2025-08-18T14:27:52.6457108Z 
2025-08-18T14:27:52.6457283Z <a id="api.errors"></a>
2025-08-18T14:27:52.6457565Z 
2025-08-18T14:27:52.6457714Z # api.errors
2025-08-18T14:27:52.6457942Z 
2025-08-18T14:27:52.6458148Z <a id="api.tests.test_errors_json"></a>
2025-08-18T14:27:52.6458546Z 
2025-08-18T14:27:52.6458780Z # api.tests.test\_errors\_json
2025-08-18T14:27:52.6459199Z 
2025-08-18T14:27:52.6459419Z <a id="api.tests.test_llm"></a>
2025-08-18T14:27:52.6459749Z 
2025-08-18T14:27:52.6460278Z # api.tests.test\_llm
2025-08-18T14:27:52.6460568Z 
2025-08-18T14:27:52.6460752Z <a id="api.tests.test_cors"></a>
2025-08-18T14:27:52.6461094Z 
2025-08-18T14:27:52.6461257Z # api.tests.test\_cors
2025-08-18T14:27:52.6461526Z 
2025-08-18T14:27:52.6461724Z <a id="api.tests.test_imports"></a>
2025-08-18T14:27:52.6462098Z 
2025-08-18T14:27:52.6462277Z # api.tests.test\_imports
2025-08-18T14:27:52.6462490Z 
2025-08-18T14:27:52.6462623Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T14:27:52.6462872Z 
2025-08-18T14:27:52.6462992Z # api.tests.test\_entrypoint
2025-08-18T14:27:52.6463209Z 
2025-08-18T14:27:52.6463333Z <a id="api.tests.test_health"></a>
2025-08-18T14:27:52.6463772Z 
2025-08-18T14:27:52.6463898Z # api.tests.test\_health
2025-08-18T14:27:52.6464097Z 
2025-08-18T14:27:52.6464222Z <a id="api.logging_config"></a>
2025-08-18T14:27:52.6464457Z 
2025-08-18T14:27:52.6464555Z # api.logging\_config
2025-08-18T14:27:52.6464725Z 
2025-08-18T14:27:52.6464822Z <a id="api.migrations.env"></a>
2025-08-18T14:27:52.6464998Z 
2025-08-18T14:27:52.6465087Z # api.migrations.env
2025-08-18T14:27:52.6465216Z 
2025-08-18T14:27:52.6465355Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T14:27:52.6465587Z 
2025-08-18T14:27:52.6465707Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T14:27:52.6465933Z 
2025-08-18T14:27:52.6466059Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T14:27:52.6466284Z 
2025-08-18T14:27:52.6466391Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T14:27:52.6466597Z 
2025-08-18T14:27:52.6466771Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T14:27:52.6467045Z 
2025-08-18T14:27:52.6467203Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T14:27:52.6467450Z 
2025-08-18T14:27:52.6467585Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T14:27:52.6467819Z 
2025-08-18T14:27:52.6467936Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T14:27:52.6468147Z 
2025-08-18T14:27:52.6468282Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T14:27:52.6468741Z 
2025-08-18T14:27:52.6468855Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T14:27:52.6469064Z 
2025-08-18T14:27:52.6469207Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T14:27:52.6469442Z 
2025-08-18T14:27:52.6469562Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T14:27:52.6469784Z 
2025-08-18T14:27:52.6469912Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T14:27:52.6470138Z 
2025-08-18T14:27:52.6470259Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T14:27:52.6470477Z 
2025-08-18T14:27:52.6470615Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T14:27:52.6470847Z 
2025-08-18T14:27:52.6470968Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T14:27:52.6471177Z 
2025-08-18T14:27:52.6471330Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T14:27:52.6471641Z 
2025-08-18T14:27:52.6471776Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T14:27:52.6472007Z 
2025-08-18T14:27:52.6472147Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T14:27:52.6472378Z 
2025-08-18T14:27:52.6472497Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T14:27:52.6472716Z 
2025-08-18T14:27:52.6472866Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T14:27:52.6473111Z 
2025-08-18T14:27:52.6473239Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T14:27:52.6473584Z 
2025-08-18T14:27:52.6473705Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T14:27:52.6473921Z 
2025-08-18T14:27:52.6474030Z # api.migrations.versions.0001\_baseline
2025-08-18T14:27:52.6474222Z 
2025-08-18T14:27:52.6474327Z <a id="api.migrations.versions"></a>
2025-08-18T14:27:52.6474513Z 
2025-08-18T14:27:52.6474605Z # api.migrations.versions
2025-08-18T14:27:52.6474751Z 
2025-08-18T14:27:52.6474838Z <a id="api.migrations"></a>
2025-08-18T14:27:52.6474985Z 
2025-08-18T14:27:52.6475176Z # api.migrations
2025-08-18T14:27:52.6475288Z 
2025-08-18T14:27:52.6475362Z <a id="api.db"></a>
2025-08-18T14:27:52.6475466Z 
2025-08-18T14:27:52.6475528Z # api.db
2025-08-18T14:27:52.6475619Z 
2025-08-18T14:27:52.6475703Z <a id="api.routes.stats"></a>
2025-08-18T14:27:52.6475843Z 
2025-08-18T14:27:52.6475913Z # api.routes.stats
2025-08-18T14:27:52.6476023Z 
2025-08-18T14:27:52.6476109Z <a id="api.routes.stats.kpi"></a>
2025-08-18T14:27:52.6476259Z 
2025-08-18T14:27:52.6476330Z #### kpi
2025-08-18T14:27:52.6476414Z 
2025-08-18T14:27:52.6476478Z ```python
2025-08-18T14:27:52.6476658Z @router.get("/stats/kpi")
2025-08-18T14:27:52.6476894Z def kpi() -> List[Dict[str, int]]
2025-08-18T14:27:52.6477102Z ```
2025-08-18T14:27:52.6477185Z 
2025-08-18T14:27:52.6477264Z Return KPI metrics (mock).
2025-08-18T14:27:52.6477399Z 
2025-08-18T14:27:52.6477501Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T14:27:52.6477675Z 
2025-08-18T14:27:52.6477751Z #### roi\_by\_vendor
2025-08-18T14:27:52.6477866Z 
2025-08-18T14:27:52.6477934Z ```python
2025-08-18T14:27:52.6478123Z @router.get("/stats/roi_by_vendor")
2025-08-18T14:27:52.6478412Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T14:27:52.6478687Z ```
2025-08-18T14:27:52.6478772Z 
2025-08-18T14:27:52.6478860Z Return ROI percent by vendor.
2025-08-18T14:27:52.6478998Z 
2025-08-18T14:27:52.6479093Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T14:27:52.6479268Z 
2025-08-18T14:27:52.6479333Z #### roi\_trend
2025-08-18T14:27:52.6479431Z 
2025-08-18T14:27:52.6479494Z ```python
2025-08-18T14:27:52.6479663Z @router.get("/stats/roi_trend")
2025-08-18T14:27:52.6479902Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T14:27:52.6480135Z ```
2025-08-18T14:27:52.6480214Z 
2025-08-18T14:27:52.6480296Z Return 30-day ROI trend.
2025-08-18T14:27:52.6480420Z 
2025-08-18T14:27:52.6480498Z <a id="api.routes.roi"></a>
2025-08-18T14:27:52.6480639Z 
2025-08-18T14:27:52.6480709Z # api.routes.roi
2025-08-18T14:27:52.6480818Z 
2025-08-18T14:27:52.6480907Z <a id="api.routes.health"></a>
2025-08-18T14:27:52.6481190Z 
2025-08-18T14:27:52.6481262Z # api.routes.health
2025-08-18T14:27:52.6481368Z 
2025-08-18T14:27:52.6481466Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T14:27:52.6481639Z 
2025-08-18T14:27:52.6481702Z #### MAX\_SKEW
2025-08-18T14:27:52.6481806Z 
2025-08-18T14:27:52.6481867Z seconds
2025-08-18T14:27:52.6481952Z 
2025-08-18T14:27:52.6482044Z <a id="api.routes.health.health"></a>
2025-08-18T14:27:52.6482214Z 
2025-08-18T14:27:52.6482276Z #### health
2025-08-18T14:27:52.6482365Z 
2025-08-18T14:27:52.6482433Z ```python
2025-08-18T14:27:52.6482633Z @router.get("/health", include_in_schema=False)
2025-08-18T14:27:52.6483025Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T14:27:52.6483364Z ```
2025-08-18T14:27:52.6483558Z 
2025-08-18T14:27:52.6483679Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T14:27:52.6483879Z 
2025-08-18T14:27:52.6483968Z <a id="api.routes.repository"></a>
2025-08-18T14:27:52.6484132Z 
2025-08-18T14:27:52.6484215Z # api.routes.repository
2025-08-18T14:27:52.6484339Z 
2025-08-18T14:27:52.6484416Z <a id="api.routes"></a>
2025-08-18T14:27:52.6484530Z 
2025-08-18T14:27:52.6484593Z # api.routes
2025-08-18T14:27:52.6484687Z 
2025-08-18T14:27:52.6484769Z <a id="api.models.fee"></a>
2025-08-18T14:27:52.6484899Z 
2025-08-18T14:27:52.6484966Z # api.models.fee
2025-08-18T14:27:52.6485075Z 
2025-08-18T14:27:52.6485145Z <a id="api.models"></a>
2025-08-18T14:27:52.6485257Z 
2025-08-18T14:27:52.6485326Z # api.models
2025-08-18T14:27:52.6485417Z 
2025-08-18T14:27:52.6485498Z <a id="api.roi_repository"></a>
2025-08-18T14:27:52.6485640Z 
2025-08-18T14:27:52.6485719Z # api.roi\_repository
2025-08-18T14:27:52.6485833Z 
2025-08-18T14:27:52.6485916Z <a id="api.main"></a>
2025-08-18T14:27:52.6486027Z 
2025-08-18T14:27:52.6486099Z # api.main
2025-08-18T14:27:52.6486189Z 
2025-08-18T14:27:52.6486270Z <a id="api.main.ready"></a>
2025-08-18T14:27:52.6486408Z 
2025-08-18T14:27:52.6486471Z #### ready
2025-08-18T14:27:52.6486680Z 
2025-08-18T14:27:52.6486749Z ```python
2025-08-18T14:27:52.6487020Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T14:27:52.6487457Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T14:27:52.6487804Z                                                                       str]
2025-08-18T14:27:52.6488037Z ```
2025-08-18T14:27:52.6488120Z 
2025-08-18T14:27:52.6488217Z Return 200 only when migrations are at head.
2025-08-18T14:27:52.6488393Z 
2025-08-18T14:27:52.6488465Z <a id="api.config"></a>
2025-08-18T14:27:52.6488584Z 
2025-08-18T14:27:52.6488648Z # api.config
2025-08-18T14:27:52.6488753Z 
2025-08-18T14:27:52.6488818Z <a id="etl"></a>
2025-08-18T14:27:52.6488919Z 
2025-08-18T14:27:52.6488983Z # etl
2025-08-18T14:27:52.6489071Z 
2025-08-18T14:27:52.6489154Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T14:27:52.6489308Z 
2025-08-18T14:27:52.6489380Z # etl.fba\_fee\_ingestor
2025-08-18T14:27:52.6489506Z 
2025-08-18T14:27:52.6489584Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T14:27:52.6489738Z 
2025-08-18T14:27:52.6489810Z # etl.sp\_fees\_ingestor
2025-08-18T14:27:52.6489929Z 
2025-08-18T14:27:52.6490014Z <a id="etl.keepa_ingestor"></a>
2025-08-18T14:27:52.6490153Z 
2025-08-18T14:27:52.6490223Z # etl.keepa\_ingestor
2025-08-18T14:27:52.6490336Z 
2025-08-18T14:27:52.6490409Z <a id="etl.db"></a>
2025-08-18T14:27:52.6490512Z 
2025-08-18T14:27:52.6490572Z # etl.db
2025-08-18T14:27:52.6490663Z 
2025-08-18T14:27:52.6490746Z <a id="etl.dialects.schemas"></a>
2025-08-18T14:27:52.6490895Z 
2025-08-18T14:27:52.6490972Z # etl.dialects.schemas
2025-08-18T14:27:52.6491090Z 
2025-08-18T14:27:52.6491195Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T14:27:52.6491382Z 
2025-08-18T14:27:52.6491477Z # etl.dialects.amazon\_reimbursements
2025-08-18T14:27:52.6491640Z 
2025-08-18T14:27:52.6491740Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T14:27:52.6491917Z 
2025-08-18T14:27:52.6492002Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T14:27:52.6492284Z 
2025-08-18T14:27:52.6492380Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T14:27:52.6492543Z 
2025-08-18T14:27:52.6492624Z # etl.dialects.amazon\_returns
2025-08-18T14:27:52.6492762Z 
2025-08-18T14:27:52.6492862Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T14:27:52.6493030Z 
2025-08-18T14:27:52.6493114Z # etl.dialects.amazon\_fee\_preview
2025-08-18T14:27:52.6493277Z 
2025-08-18T14:27:52.6493381Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T14:27:52.6493672Z 
2025-08-18T14:27:52.6493767Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T14:27:52.6493933Z 
2025-08-18T14:27:52.6494028Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T14:27:52.6494195Z 
2025-08-18T14:27:52.6494289Z # etl.dialects.amazon\_settlements
2025-08-18T14:27:52.6494440Z 
2025-08-18T14:27:52.6494515Z <a id="etl.dialects"></a>
2025-08-18T14:27:52.6494646Z 
2025-08-18T14:27:52.6494717Z # etl.dialects
2025-08-18T14:27:52.6494814Z 
2025-08-18T14:27:52.6494892Z <a id="ingest"></a>
2025-08-18T14:27:52.6495005Z 
2025-08-18T14:27:52.6495066Z # ingest
2025-08-18T14:27:52.6495152Z 
2025-08-18T14:27:52.6495240Z <a id="ingest.maintenance"></a>
2025-08-18T14:27:52.6495381Z 
2025-08-18T14:27:52.6495451Z # ingest.maintenance
2025-08-18T14:27:52.6495571Z 
2025-08-18T14:27:52.6495650Z <a id="ingest.copy_loader"></a>
2025-08-18T14:27:52.6495786Z 
2025-08-18T14:27:52.6495858Z # ingest.copy\_loader
2025-08-18T14:27:52.6495981Z 
2025-08-18T14:27:52.6496081Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T14:27:52.6496263Z 
2025-08-18T14:27:52.6496344Z #### copy\_df\_via\_temp
2025-08-18T14:27:52.6496466Z 
2025-08-18T14:27:52.6496530Z ```python
2025-08-18T14:27:52.6496702Z def copy_df_via_temp(engine: Engine,
2025-08-18T14:27:52.6496937Z                      df: pd.DataFrame,
2025-08-18T14:27:52.6497173Z                      target_table: str,
2025-08-18T14:27:52.6497385Z                      *,
2025-08-18T14:27:52.6497594Z                      target_schema: Optional[str] = None,
2025-08-18T14:27:52.6497993Z                      columns: Sequence[str],
2025-08-18T14:27:52.6498273Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T14:27:52.6498566Z                      analyze_after: bool = False,
2025-08-18T14:27:52.6498827Z                      connection: Any | None = None) -> int
2025-08-18T14:27:52.6499067Z ```
2025-08-18T14:27:52.6499150Z 
2025-08-18T14:27:52.6499308Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T14:27:52.6499546Z 
2025-08-18T14:27:52.6499633Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T14:27:52.6499793Z 
2025-08-18T14:27:52.6499880Z # ingest.tests.test\_smoke
2025-08-18T14:27:52.6500009Z 
2025-08-18T14:27:52.6500084Z <a id="ingest.tests"></a>
2025-08-18T14:27:52.6500212Z 
2025-08-18T14:27:52.6500277Z # ingest.tests
2025-08-18T14:27:52.6500378Z 
2025-08-18T14:27:52.6500461Z <a id="ingest.upload_router"></a>
2025-08-18T14:27:52.6500615Z 
2025-08-18T14:27:52.6500689Z # ingest.upload\_router
2025-08-18T14:27:52.6500821Z 
2025-08-18T14:27:52.6500904Z <a id="ingest.email_watcher"></a>
2025-08-18T14:27:52.6501045Z 
2025-08-18T14:27:52.6501117Z # ingest.email\_watcher
2025-08-18T14:27:52.6501229Z 
2025-08-18T14:27:52.6501327Z <a id="ingest.email_watcher.main"></a>
2025-08-18T14:27:52.6501483Z 
2025-08-18T14:27:52.6501544Z #### main
2025-08-18T14:27:52.6501636Z 
2025-08-18T14:27:52.6501698Z ```python
2025-08-18T14:27:52.6501860Z def main() -> dict[str, str]
2025-08-18T14:27:52.6502060Z ```
2025-08-18T14:27:52.6502140Z 
2025-08-18T14:27:52.6502283Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T14:27:52.6502507Z 
2025-08-18T14:27:52.6502634Z Returns {"status": "success"} when processing completes.
2025-08-18T14:27:52.6502844Z 
2025-08-18T14:27:52.6502918Z <a id="ingest.tasks"></a>
2025-08-18T14:27:52.6503042Z 
2025-08-18T14:27:52.6503106Z # ingest.tasks
2025-08-18T14:27:52.6503211Z 
2025-08-18T14:27:52.6503307Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T14:27:52.6503611Z 
2025-08-18T14:27:52.6503819Z #### task\_import\_file
2025-08-18T14:27:52.6503940Z 
2025-08-18T14:27:52.6504002Z ```python
2025-08-18T14:27:52.6504218Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T14:27:52.6504496Z def task_import_file(self,
2025-08-18T14:27:52.6504694Z                      uri: str,
2025-08-18T14:27:52.6504910Z                      report_type: Optional[str] = None,
2025-08-18T14:27:52.6505180Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T14:27:52.6505417Z ```
2025-08-18T14:27:52.6505498Z 
2025-08-18T14:27:52.6505628Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T14:27:52.6505838Z 
2025-08-18T14:27:52.6505924Z <a id="ingest.celery_app"></a>
2025-08-18T14:27:52.6506064Z 
2025-08-18T14:27:52.6506135Z # ingest.celery\_app
2025-08-18T14:27:52.6506257Z 
2025-08-18T14:27:52.6506338Z <a id="ingest.ingest_router"></a>
2025-08-18T14:27:52.6506483Z 
2025-08-18T14:27:52.6506557Z # ingest.ingest\_router
2025-08-18T14:27:52.6506684Z 
2025-08-18T14:27:52.6506764Z <a id="logistics_etl"></a>
2025-08-18T14:27:52.6506890Z 
2025-08-18T14:27:52.6506961Z # logistics\_etl
2025-08-18T14:27:52.6507065Z 
2025-08-18T14:27:52.6507139Z Daily logistics ETL job.
2025-08-18T14:27:52.6507268Z 
2025-08-18T14:27:52.6507349Z <a id="logistics_etl.__main__"></a>
2025-08-18T14:27:52.6507498Z 
2025-08-18T14:27:52.6507574Z # logistics\_etl.\_\_main\_\_
2025-08-18T14:27:52.6507719Z 
2025-08-18T14:27:52.6507800Z <a id="logistics_etl.dsn"></a>
2025-08-18T14:27:52.6507933Z 
2025-08-18T14:27:52.6508001Z # logistics\_etl.dsn
2025-08-18T14:27:52.6508111Z 
2025-08-18T14:27:52.6508229Z Local DSN builder to avoid cross-service dependency.
2025-08-18T14:27:52.6508426Z 
2025-08-18T14:27:52.6508515Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T14:27:52.6508687Z 
2025-08-18T14:27:52.6508751Z #### build\_dsn
2025-08-18T14:27:52.6508852Z 
2025-08-18T14:27:52.6508922Z ```python
2025-08-18T14:27:52.6509092Z def build_dsn(sync: bool = True) -> str
2025-08-18T14:27:52.6509434Z ```
2025-08-18T14:27:52.6509520Z 
2025-08-18T14:27:52.6509658Z Return a Postgres DSN assembled from environment variables.
2025-08-18T14:27:52.6509888Z 
2025-08-18T14:27:52.6510038Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T14:27:52.6510426Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T14:27:52.6510772Z error when any required variable is missing.
2025-08-18T14:27:52.6510946Z 
2025-08-18T14:27:52.6511048Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T14:27:52.6511219Z 
2025-08-18T14:27:52.6511301Z # logistics\_etl.tests.conftest
2025-08-18T14:27:52.6511445Z 
2025-08-18T14:27:52.6511558Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T14:27:52.6511740Z 
2025-08-18T14:27:52.6511827Z # logistics\_etl.tests.test\_repository
2025-08-18T14:27:52.6511992Z 
2025-08-18T14:27:52.6512082Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T14:27:52.6512248Z 
2025-08-18T14:27:52.6512336Z # logistics\_etl.tests.test\_cron
2025-08-18T14:27:52.6512487Z 
2025-08-18T14:27:52.6512586Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T14:27:52.6512756Z 
2025-08-18T14:27:52.6512845Z # logistics\_etl.tests.test\_imports
2025-08-18T14:27:52.6512996Z 
2025-08-18T14:27:52.6513086Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T14:27:52.6513258Z 
2025-08-18T14:27:52.6513340Z # logistics\_etl.tests.test\_smoke
2025-08-18T14:27:52.6513624Z 
2025-08-18T14:27:52.6513723Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T14:27:52.6513889Z 
2025-08-18T14:27:52.6513970Z # logistics\_etl.tests.test\_client
2025-08-18T14:27:52.6514119Z 
2025-08-18T14:27:52.6514204Z <a id="logistics_etl.tests"></a>
2025-08-18T14:27:52.6514344Z 
2025-08-18T14:27:52.6514414Z # logistics\_etl.tests
2025-08-18T14:27:52.6514541Z 
2025-08-18T14:27:52.6514620Z <a id="logistics_etl.flow"></a>
2025-08-18T14:27:52.6514755Z 
2025-08-18T14:27:52.6514829Z # logistics\_etl.flow
2025-08-18T14:27:52.6514940Z 
2025-08-18T14:27:52.6515020Z <a id="logistics_etl.client"></a>
2025-08-18T14:27:52.6515284Z 
2025-08-18T14:27:52.6515361Z # logistics\_etl.client
2025-08-18T14:27:52.6515478Z 
2025-08-18T14:27:52.6515553Z <a id="logistics_etl.cron"></a>
2025-08-18T14:27:52.6515694Z 
2025-08-18T14:27:52.6515763Z # logistics\_etl.cron
2025-08-18T14:27:52.6515873Z 
2025-08-18T14:27:52.6515956Z <a id="logistics_etl.db"></a>
2025-08-18T14:27:52.6516090Z 
2025-08-18T14:27:52.6516155Z # logistics\_etl.db
2025-08-18T14:27:52.6516261Z 
2025-08-18T14:27:52.6516353Z <a id="logistics_etl.repository"></a>
2025-08-18T14:27:52.6516510Z 
2025-08-18T14:27:52.6516587Z # logistics\_etl.repository
2025-08-18T14:27:52.6516724Z 
2025-08-18T14:27:52.6516793Z <a id="alert_bot"></a>
2025-08-18T14:27:52.6516905Z 
2025-08-18T14:27:52.6516968Z # alert\_bot
2025-08-18T14:27:52.6517068Z 
2025-08-18T14:27:52.6517153Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T14:27:52.6517311Z 
2025-08-18T14:27:52.6517396Z # alert\_bot.tests.test\_smoke
2025-08-18T14:27:52.6517531Z 
2025-08-18T14:27:52.6517612Z <a id="alert_bot.tests"></a>
2025-08-18T14:27:52.6517755Z 
2025-08-18T14:27:52.6517823Z # alert\_bot.tests
2025-08-18T14:27:52.6517928Z 
2025-08-18T14:27:52.6518006Z <a id="alert_bot.alert_bot"></a>
2025-08-18T14:27:52.6518155Z 
2025-08-18T14:27:52.6518227Z # alert\_bot.alert\_bot
2025-08-18T14:27:52.6518341Z 
2025-08-18T14:27:52.6518422Z <a id="alert_bot.rules"></a>
2025-08-18T14:27:52.6518549Z 
2025-08-18T14:27:52.6518614Z # alert\_bot.rules
2025-08-18T14:27:52.6518726Z 
2025-08-18T14:27:52.6518790Z <a id="common"></a>
2025-08-18T14:27:52.6518893Z 
2025-08-18T14:27:52.6518953Z # common
2025-08-18T14:27:52.6519049Z 
2025-08-18T14:27:52.6519120Z <a id="common.dsn"></a>
2025-08-18T14:27:52.6519234Z 
2025-08-18T14:27:52.6519303Z # common.dsn
2025-08-18T14:27:52.6519396Z 
2025-08-18T14:27:52.6519476Z <a id="common.dsn.build_dsn"></a>
2025-08-18T14:27:52.6519624Z 
2025-08-18T14:27:52.6519693Z #### build\_dsn
2025-08-18T14:27:52.6519791Z 
2025-08-18T14:27:52.6519854Z ```python
2025-08-18T14:27:52.6520030Z def build_dsn(sync: bool = True) -> str
2025-08-18T14:27:52.6520373Z ```
2025-08-18T14:27:52.6520464Z 
2025-08-18T14:27:52.6520586Z Return a Postgres DSN, validating required variables.
2025-08-18T14:27:52.6520788Z 
2025-08-18T14:27:52.6520975Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T14:27:52.6521404Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T14:27:52.6521821Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T14:27:52.6554154Z missing.
2025-08-18T14:27:52.6554434Z 
2025-08-18T14:27:52.6554617Z <a id="common.models_vendor"></a>
2025-08-18T14:27:52.6554975Z 
2025-08-18T14:27:52.6555132Z # common.models\_vendor
2025-08-18T14:27:52.6555391Z 
2025-08-18T14:27:52.6555593Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T14:27:52.6555959Z 
2025-08-18T14:27:52.6556114Z ## Vendor Objects
2025-08-18T14:27:52.6556262Z 
2025-08-18T14:27:52.6556342Z ```python
2025-08-18T14:27:52.6556532Z class Vendor(Base)
2025-08-18T14:27:52.6556748Z ```
2025-08-18T14:27:52.6556858Z 
2025-08-18T14:27:52.6556962Z Vendor of inventory items.
2025-08-18T14:27:52.6557123Z 
2025-08-18T14:27:52.6557252Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T14:27:52.6557478Z 
2025-08-18T14:27:52.6557574Z ## VendorPrice Objects
2025-08-18T14:27:52.6557718Z 
2025-08-18T14:27:52.6557796Z ```python
2025-08-18T14:27:52.6557995Z class VendorPrice(Base)
2025-08-18T14:27:52.6558206Z ```
2025-08-18T14:27:52.6558311Z 
2025-08-18T14:27:52.6558437Z Association table linking vendors to pricing.
2025-08-18T14:27:52.6558659Z 
2025-08-18T14:27:52.6558754Z <a id="common.db_url"></a>
2025-08-18T14:27:52.6558909Z 
2025-08-18T14:27:52.6558991Z # common.db\_url
2025-08-18T14:27:52.6559117Z 
2025-08-18T14:27:52.6559226Z <a id="common.db_url.build_url"></a>
2025-08-18T14:27:52.6559419Z 
2025-08-18T14:27:52.6559497Z #### build\_url
2025-08-18T14:27:52.6559627Z 
2025-08-18T14:27:52.6559704Z ```python
2025-08-18T14:27:52.6559923Z def build_url(async_: bool = True) -> str
2025-08-18T14:27:52.6560397Z ```
2025-08-18T14:27:52.6560496Z 
2025-08-18T14:27:52.6560620Z Return Postgres DSN from env or PG_* parts.
2025-08-18T14:27:52.6560847Z 
2025-08-18T14:27:52.6560943Z <a id="common.keepa"></a>
2025-08-18T14:27:52.6561103Z 
2025-08-18T14:27:52.6561193Z # common.keepa
2025-08-18T14:27:52.6561318Z 
2025-08-18T14:27:52.6561406Z <a id="common.llm"></a>
2025-08-18T14:27:52.6561555Z 
2025-08-18T14:27:52.6561632Z # common.llm
2025-08-18T14:27:52.6561746Z 
2025-08-18T14:27:52.6561847Z <a id="common.settings"></a>
2025-08-18T14:27:52.6562013Z 
2025-08-18T14:27:52.6562096Z # common.settings
2025-08-18T14:27:52.6562225Z 
2025-08-18T14:27:52.6562316Z <a id="common.db"></a>
2025-08-18T14:27:52.6562457Z 
2025-08-18T14:27:52.6562534Z # common.db
2025-08-18T14:27:52.6562648Z 
2025-08-18T14:27:52.6562765Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T14:27:52.6562988Z 
2025-08-18T14:27:52.6563086Z #### build\_sqlalchemy\_url
2025-08-18T14:27:52.6563256Z 
2025-08-18T14:27:52.6563343Z ```python
2025-08-18T14:27:52.6563775Z def build_sqlalchemy_url() -> str
2025-08-18T14:27:52.6564036Z ```
2025-08-18T14:27:52.6564140Z 
2025-08-18T14:27:52.6564270Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T14:27:52.6564497Z 
2025-08-18T14:27:52.6564609Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T14:27:52.6564784Z 
2025-08-18T14:27:52.6564858Z #### build\_asyncpg\_dsn
2025-08-18T14:27:52.6564984Z 
2025-08-18T14:27:52.6565057Z ```python
2025-08-18T14:27:52.6565225Z def build_asyncpg_dsn() -> str
2025-08-18T14:27:52.6565430Z ```
2025-08-18T14:27:52.6565520Z 
2025-08-18T14:27:52.6565650Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T14:27:52.6565870Z 
2025-08-18T14:27:52.6565956Z <a id="common.db.refresh_mvs"></a>
2025-08-18T14:27:52.6566111Z 
2025-08-18T14:27:52.6566181Z #### refresh\_mvs
2025-08-18T14:27:52.6566294Z 
2025-08-18T14:27:52.6566359Z ```python
2025-08-18T14:27:52.6566571Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T14:27:52.6566941Z ```
2025-08-18T14:27:52.6567029Z 
2025-08-18T14:27:52.6567176Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T14:27:52.6567395Z 
2025-08-18T14:27:52.6567475Z <a id="common.config"></a>
2025-08-18T14:27:52.6567614Z 
2025-08-18T14:27:52.6567682Z # common.config
2025-08-18T14:27:52.6567789Z 
2025-08-18T14:27:52.6567863Z <a id="common.base"></a>
2025-08-18T14:27:52.6567991Z 
2025-08-18T14:27:52.6568055Z # common.base
2025-08-18T14:27:52.6568153Z 
2025-08-18T14:27:52.6568239Z <a id="common.base.Base"></a>
2025-08-18T14:27:52.6568376Z 
2025-08-18T14:27:52.6568442Z ## Base Objects
2025-08-18T14:27:52.6568545Z 
2025-08-18T14:27:52.6568607Z ```python
2025-08-18T14:27:52.6568770Z class Base(DeclarativeBase)
2025-08-18T14:27:52.6568963Z ```
2025-08-18T14:27:52.6569042Z 
2025-08-18T14:27:52.6569123Z Base class for SQLAlchemy models.
2025-08-18T14:27:52.6569276Z 
2025-08-18T14:27:52.6569349Z <a id="repricer"></a>
2025-08-18T14:27:52.6569468Z 
2025-08-18T14:27:52.6569539Z # repricer
2025-08-18T14:27:52.6569636Z 
2025-08-18T14:27:52.6569729Z <a id="repricer.app.schemas"></a>
2025-08-18T14:27:52.6569883Z 
2025-08-18T14:27:52.6569960Z # repricer.app.schemas
2025-08-18T14:27:52.6570079Z 
2025-08-18T14:27:52.6570161Z <a id="repricer.app.deps"></a>
2025-08-18T14:27:52.6570306Z 
2025-08-18T14:27:52.6570379Z # repricer.app.deps
2025-08-18T14:27:52.6570489Z 
2025-08-18T14:27:52.6570608Z Placeholder module for Keepa / SP-API clients.
2025-08-18T14:27:52.6570794Z 
2025-08-18T14:27:52.6570881Z <a id="repricer.app.logic"></a>
2025-08-18T14:27:52.6571034Z 
2025-08-18T14:27:52.6571109Z # repricer.app.logic
2025-08-18T14:27:52.6571228Z 
2025-08-18T14:27:52.6571326Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T14:27:52.6571507Z 
2025-08-18T14:27:52.6571572Z #### MIN\_MARGIN
2025-08-18T14:27:52.6571674Z 
2025-08-18T14:27:52.6571741Z 15 % ROI
2025-08-18T14:27:52.6571829Z 
2025-08-18T14:27:52.6571932Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T14:27:52.6572113Z 
2025-08-18T14:27:52.6572195Z #### compute\_price
2025-08-18T14:27:52.6572423Z 
2025-08-18T14:27:52.6572486Z ```python
2025-08-18T14:27:52.6572735Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T14:27:52.6573032Z ```
2025-08-18T14:27:52.6573119Z 
2025-08-18T14:27:52.6573224Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T14:27:52.6573611Z Replace with real competitive logic later.
2025-08-18T14:27:52.6573781Z 
2025-08-18T14:27:52.6573862Z <a id="repricer.app.main"></a>
2025-08-18T14:27:52.6574008Z 
2025-08-18T14:27:52.6574079Z # repricer.app.main
2025-08-18T14:27:52.6574187Z 
2025-08-18T14:27:52.6574264Z <a id="repricer.app"></a>
2025-08-18T14:27:52.6574396Z 
2025-08-18T14:27:52.6574463Z # repricer.app
2025-08-18T14:27:52.6574563Z 
2025-08-18T14:27:52.6574660Z <a id="repricer.tests.test_imports"></a>
2025-08-18T14:27:52.6574826Z 
2025-08-18T14:27:52.6574909Z # repricer.tests.test\_imports
2025-08-18T14:27:52.6575045Z 
2025-08-18T14:27:52.6575138Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T14:27:52.6575304Z 
2025-08-18T14:27:52.6575388Z # repricer.tests.test\_smoke
2025-08-18T14:27:52.6575530Z 
2025-08-18T14:27:52.6575606Z <a id="repricer.tests"></a>
2025-08-18T14:27:52.6575735Z 
2025-08-18T14:27:52.6575806Z # repricer.tests
2025-08-18T14:27:52.6575912Z 
2025-08-18T14:27:52.6575977Z <a id="db"></a>
2025-08-18T14:27:52.6576074Z 
2025-08-18T14:27:52.6576137Z # db
2025-08-18T14:27:52.6576219Z 
2025-08-18T14:27:52.6576296Z <a id="db.utils.views"></a>
2025-08-18T14:27:52.6576430Z 
2025-08-18T14:27:52.6576495Z # db.utils.views
2025-08-18T14:27:52.6576596Z 
2025-08-18T14:27:52.6576686Z <a id="db.utils.views.replace_view"></a>
2025-08-18T14:27:52.6576856Z 
2025-08-18T14:27:52.6576924Z #### replace\_view
2025-08-18T14:27:52.6577028Z 
2025-08-18T14:27:52.6577096Z ```python
2025-08-18T14:27:52.6577284Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T14:27:52.6577531Z ```
2025-08-18T14:27:52.6577612Z 
2025-08-18T14:27:52.6577703Z Drop and recreate a SQL view atomically.
2025-08-18T14:27:52.6578038Z 
2025-08-18T14:27:52.6578119Z <a id="db.utils"></a>
2025-08-18T14:27:52.6578236Z 
2025-08-18T14:27:52.6578300Z # db.utils
2025-08-18T14:27:52.6578397Z 
2025-08-18T14:27:52.6578479Z <a id="price_importer"></a>
2025-08-18T14:27:52.6578609Z 
2025-08-18T14:27:52.6578683Z # price\_importer
2025-08-18T14:27:52.6578790Z 
2025-08-18T14:27:52.6578894Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T14:27:52.6579087Z 
2025-08-18T14:27:52.6579181Z # price\_importer.services\_common.dsn
2025-08-18T14:27:52.6579344Z 
2025-08-18T14:27:52.6579469Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T14:27:52.6579681Z 
2025-08-18T14:27:52.6579744Z #### build\_dsn
2025-08-18T14:27:52.6579841Z 
2025-08-18T14:27:52.6579910Z ```python
2025-08-18T14:27:52.6580080Z def build_dsn(sync: bool = True) -> str
2025-08-18T14:27:52.6580307Z ```
2025-08-18T14:27:52.6580388Z 
2025-08-18T14:27:52.6580452Z Return safe DSN.
2025-08-18T14:27:52.6580560Z 
2025-08-18T14:27:52.6580896Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T14:27:52.6581112Z 
2025-08-18T14:27:52.6581244Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T14:27:52.6581448Z 
2025-08-18T14:27:52.6581556Z # price\_importer.services\_common.models\_vendor
2025-08-18T14:27:52.6581746Z 
2025-08-18T14:27:52.6581857Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T14:27:52.6582043Z 
2025-08-18T14:27:52.6582135Z # price\_importer.services\_common.db\_url
2025-08-18T14:27:52.6582308Z 
2025-08-18T14:27:52.6582442Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T14:27:52.6582656Z 
2025-08-18T14:27:52.6582725Z #### build\_url
2025-08-18T14:27:52.6582823Z 
2025-08-18T14:27:52.6582886Z ```python
2025-08-18T14:27:52.6583061Z def build_url(async_: bool = True) -> str
2025-08-18T14:27:52.6583279Z ```
2025-08-18T14:27:52.6583365Z 
2025-08-18T14:27:52.6583562Z Return Postgres DSN from env or PG_* parts.
2025-08-18T14:27:52.6583735Z 
2025-08-18T14:27:52.6583838Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T14:27:52.6584162Z 
2025-08-18T14:27:52.6584253Z # price\_importer.services\_common.keepa
2025-08-18T14:27:52.6584417Z 
2025-08-18T14:27:52.6584547Z <a id="price_importer.services_common.llm"></a>
2025-08-18T14:27:52.6584734Z 
2025-08-18T14:27:52.6584834Z # price\_importer.services\_common.llm
2025-08-18T14:27:52.6584994Z 
2025-08-18T14:27:52.6585106Z <a id="price_importer.services_common.settings"></a>
2025-08-18T14:27:52.6585307Z 
2025-08-18T14:27:52.6585402Z # price\_importer.services\_common.settings
2025-08-18T14:27:52.6585572Z 
2025-08-18T14:27:52.6585676Z <a id="price_importer.services_common.db"></a>
2025-08-18T14:27:52.6585852Z 
2025-08-18T14:27:52.6585943Z # price\_importer.services\_common.db
2025-08-18T14:27:52.6586106Z 
2025-08-18T14:27:52.6586262Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T14:27:52.6586504Z 
2025-08-18T14:27:52.6586582Z #### build\_sqlalchemy\_url
2025-08-18T14:27:52.6586718Z 
2025-08-18T14:27:52.6586782Z ```python
2025-08-18T14:27:52.6586959Z def build_sqlalchemy_url() -> str
2025-08-18T14:27:52.6587170Z ```
2025-08-18T14:27:52.6587251Z 
2025-08-18T14:27:52.6587351Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T14:27:52.6587522Z 
2025-08-18T14:27:52.6587665Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T14:27:52.6587896Z 
2025-08-18T14:27:52.6587971Z #### build\_asyncpg\_dsn
2025-08-18T14:27:52.6588100Z 
2025-08-18T14:27:52.6588165Z ```python
2025-08-18T14:27:52.6588343Z def build_asyncpg_dsn() -> str
2025-08-18T14:27:52.6588552Z ```
2025-08-18T14:27:52.6588638Z 
2025-08-18T14:27:52.6588769Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T14:27:52.6588980Z 
2025-08-18T14:27:52.6589116Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T14:27:52.6589324Z 
2025-08-18T14:27:52.6589391Z #### refresh\_mvs
2025-08-18T14:27:52.6589509Z 
2025-08-18T14:27:52.6589572Z ```python
2025-08-18T14:27:52.6589773Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T14:27:52.6590161Z ```
2025-08-18T14:27:52.6590244Z 
2025-08-18T14:27:52.6590389Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T14:27:52.6590614Z 
2025-08-18T14:27:52.6590711Z <a id="price_importer.services_common"></a>
2025-08-18T14:27:52.6590894Z 
2025-08-18T14:27:52.6590984Z # price\_importer.services\_common
2025-08-18T14:27:52.6591143Z 
2025-08-18T14:27:52.6591250Z <a id="price_importer.services_common.base"></a>
2025-08-18T14:27:52.6591443Z 
2025-08-18T14:27:52.6591538Z # price\_importer.services\_common.base
2025-08-18T14:27:52.6591705Z 
2025-08-18T14:27:52.6591806Z <a id="price_importer.normaliser"></a>
2025-08-18T14:27:52.6591970Z 
2025-08-18T14:27:52.6592058Z # price\_importer.normaliser
2025-08-18T14:27:52.6592201Z 
2025-08-18T14:27:52.6592312Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T14:27:52.6592506Z 
2025-08-18T14:27:52.6592600Z # price\_importer.common.models\_vendor
2025-08-18T14:27:52.6592773Z 
2025-08-18T14:27:52.6592869Z <a id="price_importer.common.db_url"></a>
2025-08-18T14:27:52.6593051Z 
2025-08-18T14:27:52.6593144Z # price\_importer.common.db\_url
2025-08-18T14:27:52.6593294Z 
2025-08-18T14:27:52.6593403Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T14:27:52.6593695Z 
2025-08-18T14:27:52.6593762Z #### make\_dsn
2025-08-18T14:27:52.6593860Z 
2025-08-18T14:27:52.6593922Z ```python
2025-08-18T14:27:52.6594102Z def make_dsn(async_: bool = False) -> str
2025-08-18T14:27:52.6594330Z ```
2025-08-18T14:27:52.6594414Z 
2025-08-18T14:27:52.6594532Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T14:27:52.6594733Z 
2025-08-18T14:27:52.6594853Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T14:27:52.6595040Z 
2025-08-18T14:27:52.6595104Z #### build\_url
2025-08-18T14:27:52.6595211Z 
2025-08-18T14:27:52.6595272Z ```python
2025-08-18T14:27:52.6595449Z def build_url(async_: bool = False) -> str
2025-08-18T14:27:52.6595708Z ```
2025-08-18T14:27:52.6595794Z 
2025-08-18T14:27:52.6595923Z Return Postgres DSN built from environment variables.
2025-08-18T14:27:52.6596246Z 
2025-08-18T14:27:52.6596337Z <a id="price_importer.common"></a>
2025-08-18T14:27:52.6596496Z 
2025-08-18T14:27:52.6596574Z # price\_importer.common
2025-08-18T14:27:52.6596703Z 
2025-08-18T14:27:52.6596793Z <a id="price_importer.common.base"></a>
2025-08-18T14:27:52.6596962Z 
2025-08-18T14:27:52.6597046Z # price\_importer.common.base
2025-08-18T14:27:52.6597187Z 
2025-08-18T14:27:52.6597294Z <a id="price_importer.tests.conftest"></a>
2025-08-18T14:27:52.6597468Z 
2025-08-18T14:27:52.6597554Z # price\_importer.tests.conftest
2025-08-18T14:27:52.6597702Z 
2025-08-18T14:27:52.6597809Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T14:27:52.6597985Z 
2025-08-18T14:27:52.6598072Z # price\_importer.tests.test\_reader
2025-08-18T14:27:52.6598235Z 
2025-08-18T14:27:52.6598335Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T14:27:52.6598512Z 
2025-08-18T14:27:52.6598606Z # price\_importer.tests.test\_imports
2025-08-18T14:27:52.6598771Z 
2025-08-18T14:27:52.6598874Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T14:27:52.6599053Z 
2025-08-18T14:27:52.6599141Z # price\_importer.tests.test\_smoke
2025-08-18T14:27:52.6599296Z 
2025-08-18T14:27:52.6599402Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T14:27:52.6599593Z 
2025-08-18T14:27:52.6599686Z # price\_importer.tests.test\_normaliser
2025-08-18T14:27:52.6599852Z 
2025-08-18T14:27:52.6599943Z <a id="price_importer.tests"></a>
2025-08-18T14:27:52.6600092Z 
2025-08-18T14:27:52.6600168Z # price\_importer.tests
2025-08-18T14:27:52.6600294Z 
2025-08-18T14:27:52.6600380Z <a id="price_importer.reader"></a>
2025-08-18T14:27:52.6600529Z 
2025-08-18T14:27:52.6600607Z # price\_importer.reader
2025-08-18T14:27:52.6600736Z 
2025-08-18T14:27:52.6600827Z <a id="price_importer.repository"></a>
2025-08-18T14:27:52.6600988Z 
2025-08-18T14:27:52.6601080Z # price\_importer.repository
2025-08-18T14:27:52.6601218Z 
2025-08-18T14:27:52.6601301Z <a id="price_importer.import"></a>
2025-08-18T14:27:52.6601570Z 
2025-08-18T14:27:52.6601662Z # price\_importer.import
2025-08-18T14:27:52.6601786Z 
2025-08-18T14:27:52.6601857Z <a id="fees_h10"></a>
2025-08-18T14:27:52.6601978Z 
2025-08-18T14:27:52.6602044Z # fees\_h10
2025-08-18T14:27:52.6602135Z 
2025-08-18T14:27:52.6602217Z <a id="fees_h10.worker"></a>
2025-08-18T14:27:52.6602347Z 
2025-08-18T14:27:52.6602415Z # fees\_h10.worker
2025-08-18T14:27:52.6602523Z 
2025-08-18T14:27:52.6602628Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T14:27:52.6602802Z 
2025-08-18T14:27:52.6602876Z #### list\_active\_asins
2025-08-18T14:27:52.6603023Z 
2025-08-18T14:27:52.6603086Z ```python
2025-08-18T14:27:52.6603257Z def list_active_asins() -> list[str]
2025-08-18T14:27:52.6603599Z ```
2025-08-18T14:27:52.6603681Z 
2025-08-18T14:27:52.6603803Z Return known ASINs or an empty list if unavailable.
2025-08-18T14:27:52.6604000Z 
2025-08-18T14:27:52.6604089Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T14:27:52.6604252Z 
2025-08-18T14:27:52.6604338Z # fees\_h10.tests.test\_smoke
2025-08-18T14:27:52.6604479Z 
2025-08-18T14:27:52.6604554Z <a id="fees_h10.tests"></a>
2025-08-18T14:27:52.6604686Z 
2025-08-18T14:27:52.6604751Z # fees\_h10.tests
2025-08-18T14:27:52.6604855Z 
2025-08-18T14:27:52.6604934Z <a id="fees_h10.client"></a>
2025-08-18T14:27:52.6605064Z 
2025-08-18T14:27:52.6605130Z # fees\_h10.client
2025-08-18T14:27:52.6605231Z 
2025-08-18T14:27:52.6605319Z <a id="fees_h10.repository"></a>
2025-08-18T14:27:52.6605461Z 
2025-08-18T14:27:52.6605533Z # fees\_h10.repository
2025-08-18T14:27:52.6605654Z 
2025-08-18T14:27:52.6605724Z <a id="emailer"></a>
2025-08-18T14:27:52.6605834Z 
2025-08-18T14:27:52.6605901Z # emailer
2025-08-18T14:27:52.6605988Z 
2025-08-18T14:27:52.6606088Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T14:27:52.6606266Z 
2025-08-18T14:27:52.6606361Z # emailer.tests.test\_import\_emailer
2025-08-18T14:27:52.6606517Z 
2025-08-18T14:27:52.6606601Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T14:27:52.6606762Z 
2025-08-18T14:27:52.6606846Z # emailer.tests.test\_smoke
2025-08-18T14:27:52.6607101Z 
2025-08-18T14:27:52.6607178Z <a id="emailer.tests"></a>
2025-08-18T14:27:52.6607314Z 
2025-08-18T14:27:52.6607381Z # emailer.tests
2025-08-18T14:27:52.6607484Z 
2025-08-18T14:27:52.6607573Z <a id="emailer.generate_body"></a>
2025-08-18T14:27:52.6607724Z 
2025-08-18T14:27:52.6607798Z # emailer.generate\_body
2025-08-18T14:27:52.6607929Z 
2025-08-18T14:27:52.6607999Z <a id="llm_server"></a>
2025-08-18T14:27:52.6608116Z 
2025-08-18T14:27:52.6608179Z # llm\_server
2025-08-18T14:27:52.6608281Z 
2025-08-18T14:27:52.6608362Z <a id="llm_server.app"></a>
2025-08-18T14:27:52.6608491Z 
2025-08-18T14:27:52.6608563Z # llm\_server.app
2025-08-18T14:27:52.6608669Z 
