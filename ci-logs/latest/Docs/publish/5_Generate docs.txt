2025-08-20T19:18:10.2645381Z ##[group]Run pydoc-markdown
2025-08-20T19:18:10.2645673Z [36;1mpydoc-markdown[0m
2025-08-20T19:18:10.2687963Z shell: /usr/bin/bash -e {0}
2025-08-20T19:18:10.2688207Z env:
2025-08-20T19:18:10.2688441Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:18:10.2689038Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T19:18:10.2689429Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:18:10.2689777Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:18:10.2690123Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:18:10.2690466Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T19:18:10.2690752Z ##[endgroup]
2025-08-20T19:18:10.9262549Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T19:18:10.9263483Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T19:18:10.9263964Z In "pydoc-markdown.yml"
2025-08-20T19:18:10.9264410Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T19:18:10.9265104Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T19:18:10.9265888Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T19:18:10.9266432Z 
2025-08-20T19:18:11.2862726Z <a id="__init__"></a>
2025-08-20T19:18:11.2863138Z 
2025-08-20T19:18:11.2863265Z # \_\_init\_\_
2025-08-20T19:18:11.2863454Z 
2025-08-20T19:18:11.2863575Z <a id="api"></a>
2025-08-20T19:18:11.2863779Z 
2025-08-20T19:18:11.2863887Z # api
2025-08-20T19:18:11.2864046Z 
2025-08-20T19:18:11.2864191Z <a id="api.errors"></a>
2025-08-20T19:18:11.2864419Z 
2025-08-20T19:18:11.2864539Z # api.errors
2025-08-20T19:18:11.2864712Z 
2025-08-20T19:18:11.2864876Z <a id="api.sentry_config"></a>
2025-08-20T19:18:11.2865147Z 
2025-08-20T19:18:11.2865280Z # api.sentry\_config
2025-08-20T19:18:11.2865500Z 
2025-08-20T19:18:11.2865673Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T19:18:11.2866000Z 
2025-08-20T19:18:11.2866193Z # api.tests.test\_stats\_contracts
2025-08-20T19:18:11.2866495Z 
2025-08-20T19:18:11.2866657Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T19:18:11.2866966Z 
2025-08-20T19:18:11.2867123Z # api.tests.test\_sentry\_scrub
2025-08-20T19:18:11.2867386Z 
2025-08-20T19:18:11.2867560Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T19:18:11.2867880Z 
2025-08-20T19:18:11.2868030Z # api.tests.test\_roi\_basic\_auth
2025-08-20T19:18:11.2868316Z 
2025-08-20T19:18:11.2868722Z <a id="api.tests.test_errors_json"></a>
2025-08-20T19:18:11.2869054Z 
2025-08-20T19:18:11.2869206Z # api.tests.test\_errors\_json
2025-08-20T19:18:11.2869470Z 
2025-08-20T19:18:11.2869626Z <a id="api.tests.test_llm"></a>
2025-08-20T19:18:11.2869887Z 
2025-08-20T19:18:11.2870019Z # api.tests.test\_llm
2025-08-20T19:18:11.2870238Z 
2025-08-20T19:18:11.2870400Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T19:18:11.2870705Z 
2025-08-20T19:18:11.2870857Z # api.tests.test\_roi\_filters
2025-08-20T19:18:11.2871110Z 
2025-08-20T19:18:11.2871664Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T19:18:11.2872008Z 
2025-08-20T19:18:11.2872177Z # api.tests.test\_sentry\_event
2025-08-20T19:18:11.2872440Z 
2025-08-20T19:18:11.2872671Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T19:18:11.2873063Z 
2025-08-20T19:18:11.2873207Z ## DummyTransport Objects
2025-08-20T19:18:11.2873445Z 
2025-08-20T19:18:11.2873572Z ```python
2025-08-20T19:18:11.2873863Z class DummyTransport()
2025-08-20T19:18:11.2874194Z ```
2025-08-20T19:18:11.2874342Z 
2025-08-20T19:18:11.2874659Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T19:18:11.2875151Z 
2025-08-20T19:18:11.2875282Z #### capture\_envelope
2025-08-20T19:18:11.2875494Z 
2025-08-20T19:18:11.2875605Z ```python
2025-08-20T19:18:11.2875982Z def capture_envelope(envelope)
2025-08-20T19:18:11.2876338Z ```
2025-08-20T19:18:11.2876497Z 
2025-08-20T19:18:11.2876728Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T19:18:11.2877126Z 
2025-08-20T19:18:11.2877291Z <a id="api.tests.test_cors"></a>
2025-08-20T19:18:11.2877915Z 
2025-08-20T19:18:11.2878053Z # api.tests.test\_cors
2025-08-20T19:18:11.2878283Z 
2025-08-20T19:18:11.2878435Z <a id="api.tests.test_imports"></a>
2025-08-20T19:18:11.2878917Z 
2025-08-20T19:18:11.2879063Z # api.tests.test\_imports
2025-08-20T19:18:11.2879304Z 
2025-08-20T19:18:11.2879460Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T19:18:11.2879755Z 
2025-08-20T19:18:11.2879903Z # api.tests.test\_rate\_limit
2025-08-20T19:18:11.2880159Z 
2025-08-20T19:18:11.2880333Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T19:18:11.2880655Z 
2025-08-20T19:18:11.2880766Z #### app
2025-08-20T19:18:11.2880924Z 
2025-08-20T19:18:11.2881034Z noqa: E402
2025-08-20T19:18:11.2881206Z 
2025-08-20T19:18:11.2881361Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T19:18:11.2881653Z 
2025-08-20T19:18:11.2881803Z # api.tests.test\_stats\_sql
2025-08-20T19:18:11.2882062Z 
2025-08-20T19:18:11.2882224Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T19:18:11.2882551Z 
2025-08-20T19:18:11.2882714Z # api.tests.test\_entrypoint
2025-08-20T19:18:11.2882969Z 
2025-08-20T19:18:11.2883164Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T19:18:11.2883528Z 
2025-08-20T19:18:11.2883698Z # api.tests.test\_stats\_future\_contracts
2025-08-20T19:18:11.2884013Z 
2025-08-20T19:18:11.2884170Z <a id="api.tests.test_health"></a>
2025-08-20T19:18:11.2884451Z 
2025-08-20T19:18:11.2884585Z # api.tests.test\_health
2025-08-20T19:18:11.2884817Z 
2025-08-20T19:18:11.2884973Z <a id="api.tests.test_score"></a>
2025-08-20T19:18:11.2885246Z 
2025-08-20T19:18:11.2885382Z # api.tests.test\_score
2025-08-20T19:18:11.2885615Z 
2025-08-20T19:18:11.2885755Z <a id="api.logging_config"></a>
2025-08-20T19:18:11.2886012Z 
2025-08-20T19:18:11.2886146Z # api.logging\_config
2025-08-20T19:18:11.2886360Z 
2025-08-20T19:18:11.2886505Z <a id="api.migrations.env"></a>
2025-08-20T19:18:11.2886761Z 
2025-08-20T19:18:11.2886898Z # api.migrations.env
2025-08-20T19:18:11.2887121Z 
2025-08-20T19:18:11.2887341Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T19:18:11.2887720Z 
2025-08-20T19:18:11.2887917Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T19:18:11.2888267Z 
2025-08-20T19:18:11.2888474Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T19:18:11.2889114Z 
2025-08-20T19:18:11.2889292Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T19:18:11.2889610Z 
2025-08-20T19:18:11.2889897Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T19:18:11.2890346Z 
2025-08-20T19:18:11.2890599Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T19:18:11.2891012Z 
2025-08-20T19:18:11.2891235Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T19:18:11.2891619Z 
2025-08-20T19:18:11.2891828Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T19:18:11.2892180Z 
2025-08-20T19:18:11.2892405Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T19:18:11.2893051Z 
2025-08-20T19:18:11.2893248Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T19:18:11.2893711Z 
2025-08-20T19:18:11.2893954Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T19:18:11.2894340Z 
2025-08-20T19:18:11.2894540Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T19:18:11.2894895Z 
2025-08-20T19:18:11.2895111Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T19:18:11.2895481Z 
2025-08-20T19:18:11.2895686Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T19:18:11.2896031Z 
2025-08-20T19:18:11.2896254Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T19:18:11.2896628Z 
2025-08-20T19:18:11.2896832Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T19:18:11.2897175Z 
2025-08-20T19:18:11.2897432Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T19:18:11.2897876Z 
2025-08-20T19:18:11.2898105Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T19:18:11.2898665Z 
2025-08-20T19:18:11.2898937Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T19:18:11.2899608Z 
2025-08-20T19:18:11.2899813Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T19:18:11.2900175Z 
2025-08-20T19:18:11.2900424Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T19:18:11.2900827Z 
2025-08-20T19:18:11.2901039Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T19:18:11.2901416Z 
2025-08-20T19:18:11.2901614Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T19:18:11.2901968Z 
2025-08-20T19:18:11.2902147Z # api.migrations.versions.0001\_baseline
2025-08-20T19:18:11.2902593Z 
2025-08-20T19:18:11.2902757Z <a id="api.migrations.versions"></a>
2025-08-20T19:18:11.2903060Z 
2025-08-20T19:18:11.2903207Z # api.migrations.versions
2025-08-20T19:18:11.2903452Z 
2025-08-20T19:18:11.2903596Z <a id="api.migrations"></a>
2025-08-20T19:18:11.2903857Z 
2025-08-20T19:18:11.2903983Z # api.migrations
2025-08-20T19:18:11.2904186Z 
2025-08-20T19:18:11.2904330Z <a id="api.db"></a>
2025-08-20T19:18:11.2904542Z 
2025-08-20T19:18:11.2904653Z # api.db
2025-08-20T19:18:11.2904818Z 
2025-08-20T19:18:11.2904962Z <a id="api.routes.score"></a>
2025-08-20T19:18:11.2905222Z 
2025-08-20T19:18:11.2905347Z # api.routes.score
2025-08-20T19:18:11.2905551Z 
2025-08-20T19:18:11.2905690Z <a id="api.routes.stats"></a>
2025-08-20T19:18:11.2905945Z 
2025-08-20T19:18:11.2906130Z # api.routes.stats
2025-08-20T19:18:11.2906330Z 
2025-08-20T19:18:11.2906466Z <a id="api.routes.roi"></a>
2025-08-20T19:18:11.2906707Z 
2025-08-20T19:18:11.2906834Z # api.routes.roi
2025-08-20T19:18:11.2907026Z 
2025-08-20T19:18:11.2907171Z <a id="api.routes.health"></a>
2025-08-20T19:18:11.2907436Z 
2025-08-20T19:18:11.2907561Z # api.routes.health
2025-08-20T19:18:11.2907759Z 
2025-08-20T19:18:11.2907922Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T19:18:11.2908238Z 
2025-08-20T19:18:11.2908351Z #### MAX\_SKEW
2025-08-20T19:18:11.2908722Z 
2025-08-20T19:18:11.2908845Z seconds
2025-08-20T19:18:11.2909010Z 
2025-08-20T19:18:11.2909176Z <a id="api.routes.health.health"></a>
2025-08-20T19:18:11.2909496Z 
2025-08-20T19:18:11.2909604Z #### health
2025-08-20T19:18:11.2909767Z 
2025-08-20T19:18:11.2909881Z ```python
2025-08-20T19:18:11.2910238Z @router.get("/health", include_in_schema=False)
2025-08-20T19:18:11.2910965Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T19:18:11.2911582Z ```
2025-08-20T19:18:11.2911729Z 
2025-08-20T19:18:11.2911952Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T19:18:11.2912315Z 
2025-08-20T19:18:11.2912480Z <a id="api.routes.repository"></a>
2025-08-20T19:18:11.2912784Z 
2025-08-20T19:18:11.2912930Z # api.routes.repository
2025-08-20T19:18:11.2913171Z 
2025-08-20T19:18:11.2913303Z <a id="api.routes"></a>
2025-08-20T19:18:11.2913529Z 
2025-08-20T19:18:11.2913645Z # api.routes
2025-08-20T19:18:11.2913817Z 
2025-08-20T19:18:11.2913968Z <a id="api.models.fee"></a>
2025-08-20T19:18:11.2914214Z 
2025-08-20T19:18:11.2914337Z # api.models.fee
2025-08-20T19:18:11.2914785Z 
2025-08-20T19:18:11.2914917Z <a id="api.models"></a>
2025-08-20T19:18:11.2915128Z 
2025-08-20T19:18:11.2915240Z # api.models
2025-08-20T19:18:11.2915416Z 
2025-08-20T19:18:11.2915561Z <a id="api.roi_repository"></a>
2025-08-20T19:18:11.2915823Z 
2025-08-20T19:18:11.2915960Z # api.roi\_repository
2025-08-20T19:18:11.2916175Z 
2025-08-20T19:18:11.2916299Z <a id="api.main"></a>
2025-08-20T19:18:11.2916505Z 
2025-08-20T19:18:11.2916624Z # api.main
2025-08-20T19:18:11.2916789Z 
2025-08-20T19:18:11.2916921Z <a id="api.main.ready"></a>
2025-08-20T19:18:11.2917149Z 
2025-08-20T19:18:11.2917252Z #### ready
2025-08-20T19:18:11.2917398Z 
2025-08-20T19:18:11.2917507Z ```python
2025-08-20T19:18:11.2917943Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T19:18:11.2918991Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T19:18:11.2919662Z                                                                       str]
2025-08-20T19:18:11.2920119Z ```
2025-08-20T19:18:11.2920571Z 
2025-08-20T19:18:11.2920752Z Return 200 only when migrations are at head.
2025-08-20T19:18:11.2921081Z 
2025-08-20T19:18:11.2921223Z <a id="api.config"></a>
2025-08-20T19:18:11.2921444Z 
2025-08-20T19:18:11.2921559Z # api.config
2025-08-20T19:18:11.2921729Z 
2025-08-20T19:18:11.2921875Z <a id="api.security"></a>
2025-08-20T19:18:11.2922107Z 
2025-08-20T19:18:11.2922224Z # api.security
2025-08-20T19:18:11.2922417Z 
2025-08-20T19:18:11.2922531Z <a id="etl"></a>
2025-08-20T19:18:11.2922716Z 
2025-08-20T19:18:11.2922821Z # etl
2025-08-20T19:18:11.2922984Z 
2025-08-20T19:18:11.2923126Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T19:18:11.2923398Z 
2025-08-20T19:18:11.2923538Z # etl.fba\_fee\_ingestor
2025-08-20T19:18:11.2923764Z 
2025-08-20T19:18:11.2923908Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T19:18:11.2924182Z 
2025-08-20T19:18:11.2924314Z # etl.sp\_fees\_ingestor
2025-08-20T19:18:11.2924541Z 
2025-08-20T19:18:11.2924682Z <a id="etl.keepa_ingestor"></a>
2025-08-20T19:18:11.2924971Z 
2025-08-20T19:18:11.2925098Z # etl.keepa\_ingestor
2025-08-20T19:18:11.2925304Z 
2025-08-20T19:18:11.2925429Z <a id="etl.db"></a>
2025-08-20T19:18:11.2925623Z 
2025-08-20T19:18:11.2925731Z # etl.db
2025-08-20T19:18:11.2925889Z 
2025-08-20T19:18:11.2926046Z <a id="etl.dialects.schemas"></a>
2025-08-20T19:18:11.2926317Z 
2025-08-20T19:18:11.2926448Z # etl.dialects.schemas
2025-08-20T19:18:11.2926672Z 
2025-08-20T19:18:11.2926871Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T19:18:11.2927223Z 
2025-08-20T19:18:11.2927382Z # etl.dialects.amazon\_reimbursements
2025-08-20T19:18:11.2927679Z 
2025-08-20T19:18:11.2927851Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T19:18:11.2928170Z 
2025-08-20T19:18:11.2928325Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T19:18:11.2928842Z 
2025-08-20T19:18:11.2929005Z <a id="etl.dialects.test_generic"></a>
2025-08-20T19:18:11.2929303Z 
2025-08-20T19:18:11.2929441Z # etl.dialects.test\_generic
2025-08-20T19:18:11.2929707Z 
2025-08-20T19:18:11.2929874Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T19:18:11.2930182Z 
2025-08-20T19:18:11.2930338Z # etl.dialects.amazon\_returns
2025-08-20T19:18:11.2930597Z 
2025-08-20T19:18:11.2930771Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T19:18:11.2931101Z 
2025-08-20T19:18:11.2931252Z # etl.dialects.amazon\_fee\_preview
2025-08-20T19:18:11.2931538Z 
2025-08-20T19:18:11.2931735Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T19:18:11.2932086Z 
2025-08-20T19:18:11.2932250Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T19:18:11.2932561Z 
2025-08-20T19:18:11.2932752Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T19:18:11.2933073Z 
2025-08-20T19:18:11.2933226Z # etl.dialects.amazon\_settlements
2025-08-20T19:18:11.2933515Z 
2025-08-20T19:18:11.2933651Z <a id="etl.dialects"></a>
2025-08-20T19:18:11.2933879Z 
2025-08-20T19:18:11.2934001Z # etl.dialects
2025-08-20T19:18:11.2934187Z 
2025-08-20T19:18:11.2934305Z <a id="ingest"></a>
2025-08-20T19:18:11.2934721Z 
2025-08-20T19:18:11.2934848Z # ingest
2025-08-20T19:18:11.2935002Z 
2025-08-20T19:18:11.2935146Z <a id="ingest.maintenance"></a>
2025-08-20T19:18:11.2935409Z 
2025-08-20T19:18:11.2935544Z # ingest.maintenance
2025-08-20T19:18:11.2935752Z 
2025-08-20T19:18:11.2935892Z <a id="ingest.copy_loader"></a>
2025-08-20T19:18:11.2936156Z 
2025-08-20T19:18:11.2936287Z # ingest.copy\_loader
2025-08-20T19:18:11.2936496Z 
2025-08-20T19:18:11.2936680Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T19:18:11.2937027Z 
2025-08-20T19:18:11.2937157Z #### copy\_df\_via\_temp
2025-08-20T19:18:11.2937376Z 
2025-08-20T19:18:11.2937497Z ```python
2025-08-20T19:18:11.2937804Z def copy_df_via_temp(engine: Engine,
2025-08-20T19:18:11.2938237Z                      df: pd.DataFrame,
2025-08-20T19:18:11.2938839Z                      target_table: str,
2025-08-20T19:18:11.2939246Z                      *,
2025-08-20T19:18:11.2939610Z                      target_schema: str | None = None,
2025-08-20T19:18:11.2940105Z                      columns: Sequence[str],
2025-08-20T19:18:11.2940800Z                      conflict_cols: Sequence[str] | None = None,
2025-08-20T19:18:11.2941295Z                      analyze_after: bool = False,
2025-08-20T19:18:11.2941776Z                      connection: Any | None = None) -> int
2025-08-20T19:18:11.2942199Z ```
2025-08-20T19:18:11.2942361Z 
2025-08-20T19:18:11.2942653Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T19:18:11.2943084Z 
2025-08-20T19:18:11.2943244Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T19:18:11.2943550Z 
2025-08-20T19:18:11.2943693Z # ingest.tests.test\_smoke
2025-08-20T19:18:11.2943932Z 
2025-08-20T19:18:11.2944077Z <a id="ingest.tests"></a>
2025-08-20T19:18:11.2944308Z 
2025-08-20T19:18:11.2944424Z # ingest.tests
2025-08-20T19:18:11.2944613Z 
2025-08-20T19:18:11.2944756Z <a id="ingest.upload_router"></a>
2025-08-20T19:18:11.2945028Z 
2025-08-20T19:18:11.2945163Z # ingest.upload\_router
2025-08-20T19:18:11.2945401Z 
2025-08-20T19:18:11.2945543Z <a id="ingest.email_watcher"></a>
2025-08-20T19:18:11.2945819Z 
2025-08-20T19:18:11.2945956Z # ingest.email\_watcher
2025-08-20T19:18:11.2946168Z 
2025-08-20T19:18:11.2946323Z <a id="ingest.email_watcher.main"></a>
2025-08-20T19:18:11.2946636Z 
2025-08-20T19:18:11.2946741Z #### main
2025-08-20T19:18:11.2946899Z 
2025-08-20T19:18:11.2947008Z ```python
2025-08-20T19:18:11.2947306Z def main() -> dict[str, str]
2025-08-20T19:18:11.2947648Z ```
2025-08-20T19:18:11.2947804Z 
2025-08-20T19:18:11.2948058Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T19:18:11.2948468Z 
2025-08-20T19:18:11.2948895Z Returns {"status": "success"} when processing completes.
2025-08-20T19:18:11.2949279Z 
2025-08-20T19:18:11.2949417Z <a id="ingest.tasks"></a>
2025-08-20T19:18:11.2949656Z 
2025-08-20T19:18:11.2949769Z # ingest.tasks
2025-08-20T19:18:11.2949973Z 
2025-08-20T19:18:11.2950143Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T19:18:11.2950463Z 
2025-08-20T19:18:11.2950614Z #### task\_import\_file
2025-08-20T19:18:11.2950837Z 
2025-08-20T19:18:11.2950948Z ```python
2025-08-20T19:18:11.2951332Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T19:18:11.2951842Z def task_import_file(self: Any,
2025-08-20T19:18:11.2952235Z                      uri: str,
2025-08-20T19:18:11.2952646Z                      report_type: str | None = None,
2025-08-20T19:18:11.2953151Z                      force: bool = False) -> dict[str, Any]
2025-08-20T19:18:11.2953582Z ```
2025-08-20T19:18:11.2953737Z 
2025-08-20T19:18:11.2953978Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T19:18:11.2954363Z 
2025-08-20T19:18:11.2954517Z <a id="ingest.celery_app"></a>
2025-08-20T19:18:11.2954780Z 
2025-08-20T19:18:11.2954907Z # ingest.celery\_app
2025-08-20T19:18:11.2955121Z 
2025-08-20T19:18:11.2955266Z <a id="ingest.ingest_router"></a>
2025-08-20T19:18:11.2955534Z 
2025-08-20T19:18:11.2955664Z # ingest.ingest\_router
2025-08-20T19:18:11.2955886Z 
2025-08-20T19:18:11.2956256Z <a id="logistics_etl"></a>
2025-08-20T19:18:11.2956509Z 
2025-08-20T19:18:11.2956640Z # logistics\_etl
2025-08-20T19:18:11.2956830Z 
2025-08-20T19:18:11.2956964Z Daily logistics ETL job.
2025-08-20T19:18:11.2957201Z 
2025-08-20T19:18:11.2957344Z <a id="logistics_etl.__main__"></a>
2025-08-20T19:18:11.2957622Z 
2025-08-20T19:18:11.2957758Z # logistics\_etl.\_\_main\_\_
2025-08-20T19:18:11.2958015Z 
2025-08-20T19:18:11.2958155Z <a id="logistics_etl.dsn"></a>
2025-08-20T19:18:11.2958402Z 
2025-08-20T19:18:11.2958724Z # logistics\_etl.dsn
2025-08-20T19:18:11.2958940Z 
2025-08-20T19:18:11.2959153Z Local DSN builder to avoid cross-service dependency.
2025-08-20T19:18:11.2959531Z 
2025-08-20T19:18:11.2959689Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T19:18:11.2959995Z 
2025-08-20T19:18:11.2960107Z #### build\_dsn
2025-08-20T19:18:11.2960302Z 
2025-08-20T19:18:11.2960415Z ```python
2025-08-20T19:18:11.2960737Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:18:11.2961138Z ```
2025-08-20T19:18:11.2961301Z 
2025-08-20T19:18:11.2961787Z Return a Postgres DSN assembled from environment variables.
2025-08-20T19:18:11.2962217Z 
2025-08-20T19:18:11.2962508Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T19:18:11.2963244Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T19:18:11.2963879Z error when any required variable is missing.
2025-08-20T19:18:11.2964215Z 
2025-08-20T19:18:11.2964379Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T19:18:11.2964693Z 
2025-08-20T19:18:11.2964854Z # logistics\_etl.tests.conftest
2025-08-20T19:18:11.2965117Z 
2025-08-20T19:18:11.2965305Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T19:18:11.2965654Z 
2025-08-20T19:18:11.2965812Z # logistics\_etl.tests.test\_repository
2025-08-20T19:18:11.2966112Z 
2025-08-20T19:18:11.2966278Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T19:18:11.2966605Z 
2025-08-20T19:18:11.2966754Z # logistics\_etl.tests.test\_cron
2025-08-20T19:18:11.2967028Z 
2025-08-20T19:18:11.2967227Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T19:18:11.2967581Z 
2025-08-20T19:18:11.2967736Z # logistics\_etl.tests.test\_imports
2025-08-20T19:18:11.2968047Z 
2025-08-20T19:18:11.2968223Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T19:18:11.2968721Z 
2025-08-20T19:18:11.2968879Z # logistics\_etl.tests.test\_smoke
2025-08-20T19:18:11.2969172Z 
2025-08-20T19:18:11.2969344Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T19:18:11.2969665Z 
2025-08-20T19:18:11.2969824Z # logistics\_etl.tests.test\_client
2025-08-20T19:18:11.2970113Z 
2025-08-20T19:18:11.2970255Z <a id="logistics_etl.tests"></a>
2025-08-20T19:18:11.2970528Z 
2025-08-20T19:18:11.2970655Z # logistics\_etl.tests
2025-08-20T19:18:11.2970869Z 
2025-08-20T19:18:11.2971010Z <a id="logistics_etl.flow"></a>
2025-08-20T19:18:11.2971276Z 
2025-08-20T19:18:11.2971400Z # logistics\_etl.flow
2025-08-20T19:18:11.2971604Z 
2025-08-20T19:18:11.2971754Z <a id="logistics_etl.client"></a>
2025-08-20T19:18:11.2972035Z 
2025-08-20T19:18:11.3040151Z # logistics\_etl.client
2025-08-20T19:18:11.3040473Z 
2025-08-20T19:18:11.3040622Z <a id="logistics_etl.cron"></a>
2025-08-20T19:18:11.3040875Z 
2025-08-20T19:18:11.3040996Z # logistics\_etl.cron
2025-08-20T19:18:11.3041175Z 
2025-08-20T19:18:11.3041293Z <a id="logistics_etl.db"></a>
2025-08-20T19:18:11.3041524Z 
2025-08-20T19:18:11.3041638Z # logistics\_etl.db
2025-08-20T19:18:11.3041809Z 
2025-08-20T19:18:11.3041947Z <a id="logistics_etl.repository"></a>
2025-08-20T19:18:11.3042213Z 
2025-08-20T19:18:11.3042333Z # logistics\_etl.repository
2025-08-20T19:18:11.3042542Z 
2025-08-20T19:18:11.3042660Z <a id="alert_bot"></a>
2025-08-20T19:18:11.3042845Z 
2025-08-20T19:18:11.3042947Z # alert\_bot
2025-08-20T19:18:11.3043106Z 
2025-08-20T19:18:11.3043258Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T19:18:11.3043538Z 
2025-08-20T19:18:11.3043668Z # alert\_bot.tests.test\_smoke
2025-08-20T19:18:11.3043901Z 
2025-08-20T19:18:11.3044027Z <a id="alert_bot.tests"></a>
2025-08-20T19:18:11.3044654Z 
2025-08-20T19:18:11.3044784Z # alert\_bot.tests
2025-08-20T19:18:11.3044958Z 
2025-08-20T19:18:11.3045090Z <a id="alert_bot.alert_bot"></a>
2025-08-20T19:18:11.3045329Z 
2025-08-20T19:18:11.3045443Z # alert\_bot.alert\_bot
2025-08-20T19:18:11.3045658Z 
2025-08-20T19:18:11.3045777Z <a id="alert_bot.rules"></a>
2025-08-20T19:18:11.3045985Z 
2025-08-20T19:18:11.3046089Z # alert\_bot.rules
2025-08-20T19:18:11.3046257Z 
2025-08-20T19:18:11.3046362Z <a id="common"></a>
2025-08-20T19:18:11.3046537Z 
2025-08-20T19:18:11.3046638Z # common
2025-08-20T19:18:11.3046774Z 
2025-08-20T19:18:11.3046885Z <a id="common.dsn"></a>
2025-08-20T19:18:11.3047075Z 
2025-08-20T19:18:11.3047174Z # common.dsn
2025-08-20T19:18:11.3047322Z 
2025-08-20T19:18:11.3047451Z <a id="common.dsn.build_dsn"></a>
2025-08-20T19:18:11.3047693Z 
2025-08-20T19:18:11.3047796Z #### build\_dsn
2025-08-20T19:18:11.3047951Z 
2025-08-20T19:18:11.3048056Z ```python
2025-08-20T19:18:11.3048326Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:18:11.3048968Z ```
2025-08-20T19:18:11.3049534Z 
2025-08-20T19:18:11.3049735Z Return a Postgres DSN, validating required variables.
2025-08-20T19:18:11.3050058Z 
2025-08-20T19:18:11.3050358Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T19:18:11.3051037Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T19:18:11.3051686Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T19:18:11.3052183Z missing.
2025-08-20T19:18:11.3052325Z 
2025-08-20T19:18:11.3052450Z <a id="common.models_vendor"></a>
2025-08-20T19:18:11.3052682Z 
2025-08-20T19:18:11.3052805Z # common.models\_vendor
2025-08-20T19:18:11.3052987Z 
2025-08-20T19:18:11.3053119Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T19:18:11.3053391Z 
2025-08-20T19:18:11.3053494Z ## Vendor Objects
2025-08-20T19:18:11.3053653Z 
2025-08-20T19:18:11.3053754Z ```python
2025-08-20T19:18:11.3053987Z class Vendor(Base)
2025-08-20T19:18:11.3054254Z ```
2025-08-20T19:18:11.3054381Z 
2025-08-20T19:18:11.3054511Z Vendor of inventory items.
2025-08-20T19:18:11.3054731Z 
2025-08-20T19:18:11.3054885Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T19:18:11.3055163Z 
2025-08-20T19:18:11.3055274Z ## VendorPrice Objects
2025-08-20T19:18:11.3055463Z 
2025-08-20T19:18:11.3055555Z ```python
2025-08-20T19:18:11.3055799Z class VendorPrice(Base)
2025-08-20T19:18:11.3056076Z ```
2025-08-20T19:18:11.3056204Z 
2025-08-20T19:18:11.3056376Z Association table linking vendors to pricing.
2025-08-20T19:18:11.3056674Z 
2025-08-20T19:18:11.3056784Z <a id="common.db_url"></a>
2025-08-20T19:18:11.3056982Z 
2025-08-20T19:18:11.3057081Z # common.db\_url
2025-08-20T19:18:11.3057239Z 
2025-08-20T19:18:11.3057360Z <a id="common.db_url.build_url"></a>
2025-08-20T19:18:11.3057617Z 
2025-08-20T19:18:11.3057724Z #### build\_url
2025-08-20T19:18:11.3057890Z 
2025-08-20T19:18:11.3057990Z ```python
2025-08-20T19:18:11.3058263Z def build_url(async_: bool = True) -> str
2025-08-20T19:18:11.3058822Z ```
2025-08-20T19:18:11.3058953Z 
2025-08-20T19:18:11.3059111Z Return Postgres DSN from environment variables.
2025-08-20T19:18:11.3059410Z 
2025-08-20T19:18:11.3059522Z <a id="common.keepa"></a>
2025-08-20T19:18:11.3059714Z 
2025-08-20T19:18:11.3059815Z # common.keepa
2025-08-20T19:18:11.3059977Z 
2025-08-20T19:18:11.3060087Z <a id="common.llm"></a>
2025-08-20T19:18:11.3060268Z 
2025-08-20T19:18:11.3060367Z # common.llm
2025-08-20T19:18:11.3060512Z 
2025-08-20T19:18:11.3060632Z <a id="common.settings"></a>
2025-08-20T19:18:11.3060851Z 
2025-08-20T19:18:11.3060950Z # common.settings
2025-08-20T19:18:11.3061111Z 
2025-08-20T19:18:11.3061218Z <a id="common.db"></a>
2025-08-20T19:18:11.3061408Z 
2025-08-20T19:18:11.3061499Z # common.db
2025-08-20T19:18:11.3061633Z 
2025-08-20T19:18:11.3061780Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T19:18:11.3062047Z 
2025-08-20T19:18:11.3062156Z #### build\_sqlalchemy\_url
2025-08-20T19:18:11.3062359Z 
2025-08-20T19:18:11.3062458Z ```python
2025-08-20T19:18:11.3062901Z def build_sqlalchemy_url() -> str
2025-08-20T19:18:11.3063238Z ```
2025-08-20T19:18:11.3063445Z 
2025-08-20T19:18:11.3063593Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T19:18:11.3063863Z 
2025-08-20T19:18:11.3063991Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T19:18:11.3064242Z 
2025-08-20T19:18:11.3064362Z #### build\_asyncpg\_dsn
2025-08-20T19:18:11.3064550Z 
2025-08-20T19:18:11.3064644Z ```python
2025-08-20T19:18:11.3064908Z def build_asyncpg_dsn() -> str
2025-08-20T19:18:11.3065210Z ```
2025-08-20T19:18:11.3065339Z 
2025-08-20T19:18:11.3065534Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T19:18:11.3065871Z 
2025-08-20T19:18:11.3066006Z <a id="common.db.refresh_mvs"></a>
2025-08-20T19:18:11.3066234Z 
2025-08-20T19:18:11.3066328Z #### refresh\_mvs
2025-08-20T19:18:11.3066488Z 
2025-08-20T19:18:11.3066585Z ```python
2025-08-20T19:18:11.3066872Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T19:18:11.3067247Z ```
2025-08-20T19:18:11.3067378Z 
2025-08-20T19:18:11.3067769Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T19:18:11.3068107Z 
2025-08-20T19:18:11.3068219Z <a id="common.config"></a>
2025-08-20T19:18:11.3068409Z 
2025-08-20T19:18:11.3068668Z # common.config
2025-08-20T19:18:11.3068827Z 
2025-08-20T19:18:11.3068932Z <a id="common.base"></a>
2025-08-20T19:18:11.3069109Z 
2025-08-20T19:18:11.3069210Z # common.base
2025-08-20T19:18:11.3069351Z 
2025-08-20T19:18:11.3069464Z <a id="common.base.Base"></a>
2025-08-20T19:18:11.3069672Z 
2025-08-20T19:18:11.3069768Z ## Base Objects
2025-08-20T19:18:11.3069915Z 
2025-08-20T19:18:11.3070012Z ```python
2025-08-20T19:18:11.3070248Z class Base(DeclarativeBase)
2025-08-20T19:18:11.3070542Z ```
2025-08-20T19:18:11.3070663Z 
2025-08-20T19:18:11.3070783Z Base class for SQLAlchemy models.
2025-08-20T19:18:11.3071006Z 
2025-08-20T19:18:11.3071120Z <a id="repricer"></a>
2025-08-20T19:18:11.3071292Z 
2025-08-20T19:18:11.3071389Z # repricer
2025-08-20T19:18:11.3071528Z 
2025-08-20T19:18:11.3071669Z <a id="repricer.app.schemas"></a>
2025-08-20T19:18:11.3071917Z 
2025-08-20T19:18:11.3072037Z # repricer.app.schemas
2025-08-20T19:18:11.3072216Z 
2025-08-20T19:18:11.3072337Z <a id="repricer.app.deps"></a>
2025-08-20T19:18:11.3072555Z 
2025-08-20T19:18:11.3072671Z # repricer.app.deps
2025-08-20T19:18:11.3072843Z 
2025-08-20T19:18:11.3073020Z Placeholder module for Keepa / SP-API clients.
2025-08-20T19:18:11.3073306Z 
2025-08-20T19:18:11.3073428Z <a id="repricer.app.logic"></a>
2025-08-20T19:18:11.3073641Z 
2025-08-20T19:18:11.3073759Z # repricer.app.logic
2025-08-20T19:18:11.3073933Z 
2025-08-20T19:18:11.3074072Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T19:18:11.3074330Z 
2025-08-20T19:18:11.3074428Z #### MIN\_MARGIN
2025-08-20T19:18:11.3074579Z 
2025-08-20T19:18:11.3074668Z 15 % ROI
2025-08-20T19:18:11.3074802Z 
2025-08-20T19:18:11.3074955Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T19:18:11.3075232Z 
2025-08-20T19:18:11.3075336Z #### compute\_price
2025-08-20T19:18:11.3075508Z 
2025-08-20T19:18:11.3075608Z ```python
2025-08-20T19:18:11.3075986Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T19:18:11.3076436Z ```
2025-08-20T19:18:11.3076559Z 
2025-08-20T19:18:11.3076728Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T19:18:11.3077144Z Replace with real competitive logic later.
2025-08-20T19:18:11.3077414Z 
2025-08-20T19:18:11.3077537Z <a id="repricer.app.main"></a>
2025-08-20T19:18:11.3077746Z 
2025-08-20T19:18:11.3077857Z # repricer.app.main
2025-08-20T19:18:11.3078022Z 
2025-08-20T19:18:11.3078134Z <a id="repricer.app"></a>
2025-08-20T19:18:11.3078322Z 
2025-08-20T19:18:11.3078426Z # repricer.app
2025-08-20T19:18:11.3078729Z 
2025-08-20T19:18:11.3078868Z <a id="repricer.tests.test_imports"></a>
2025-08-20T19:18:11.3079132Z 
2025-08-20T19:18:11.3079253Z # repricer.tests.test\_imports
2025-08-20T19:18:11.3079463Z 
2025-08-20T19:18:11.3079590Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T19:18:11.3079838Z 
2025-08-20T19:18:11.3080142Z # repricer.tests.test\_smoke
2025-08-20T19:18:11.3080367Z 
2025-08-20T19:18:11.3080492Z <a id="repricer.tests"></a>
2025-08-20T19:18:11.3080688Z 
2025-08-20T19:18:11.3080786Z # repricer.tests
2025-08-20T19:18:11.3080942Z 
2025-08-20T19:18:11.3081034Z <a id="db"></a>
2025-08-20T19:18:11.3081174Z 
2025-08-20T19:18:11.3081262Z # db
2025-08-20T19:18:11.3081387Z 
2025-08-20T19:18:11.3081495Z <a id="db.utils.views"></a>
2025-08-20T19:18:11.3081693Z 
2025-08-20T19:18:11.3081792Z # db.utils.views
2025-08-20T19:18:11.3081944Z 
2025-08-20T19:18:11.3082081Z <a id="db.utils.views.replace_view"></a>
2025-08-20T19:18:11.3082335Z 
2025-08-20T19:18:11.3082442Z #### replace\_view
2025-08-20T19:18:11.3082599Z 
2025-08-20T19:18:11.3082690Z ```python
2025-08-20T19:18:11.3082984Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T19:18:11.3083352Z ```
2025-08-20T19:18:11.3083485Z 
2025-08-20T19:18:11.3083618Z Drop and recreate a SQL view atomically.
2025-08-20T19:18:11.3083870Z 
2025-08-20T19:18:11.3083992Z <a id="db.utils"></a>
2025-08-20T19:18:11.3084415Z 
2025-08-20T19:18:11.3084508Z # db.utils
2025-08-20T19:18:11.3084648Z 
2025-08-20T19:18:11.3084766Z <a id="price_importer"></a>
2025-08-20T19:18:11.3084968Z 
2025-08-20T19:18:11.3085074Z # price\_importer
2025-08-20T19:18:11.3085242Z 
2025-08-20T19:18:11.3085398Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T19:18:11.3085678Z 
2025-08-20T19:18:11.3085819Z # price\_importer.services\_common.dsn
2025-08-20T19:18:11.3086066Z 
2025-08-20T19:18:11.3086258Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T19:18:11.3086594Z 
2025-08-20T19:18:11.3086692Z #### build\_dsn
2025-08-20T19:18:11.3086842Z 
2025-08-20T19:18:11.3086936Z ```python
2025-08-20T19:18:11.3087202Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:18:11.3087527Z ```
2025-08-20T19:18:11.3087657Z 
2025-08-20T19:18:11.3087754Z Return safe DSN.
2025-08-20T19:18:11.3087912Z 
2025-08-20T19:18:11.3088193Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T19:18:11.3088948Z Falls back to individual PG_* variables.
2025-08-20T19:18:11.3089653Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T19:18:11.3089958Z 
2025-08-20T19:18:11.3090146Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T19:18:11.3090462Z 
2025-08-20T19:18:11.3090629Z # price\_importer.services\_common.models\_vendor
2025-08-20T19:18:11.3090933Z 
2025-08-20T19:18:11.3091102Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T19:18:11.3091397Z 
2025-08-20T19:18:11.3091542Z # price\_importer.services\_common.db\_url
2025-08-20T19:18:11.3091810Z 
2025-08-20T19:18:11.3092002Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T19:18:11.3092329Z 
2025-08-20T19:18:11.3092427Z #### build\_url
2025-08-20T19:18:11.3092586Z 
2025-08-20T19:18:11.3092677Z ```python
2025-08-20T19:18:11.3092945Z def build_url(async_: bool = True) -> str
2025-08-20T19:18:11.3093287Z ```
2025-08-20T19:18:11.3093414Z 
2025-08-20T19:18:11.3093599Z Return Postgres DSN from environment variables.
2025-08-20T19:18:11.3093910Z 
2025-08-20T19:18:11.3094077Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T19:18:11.3094376Z 
2025-08-20T19:18:11.3094514Z # price\_importer.services\_common.keepa
2025-08-20T19:18:11.3094771Z 
2025-08-20T19:18:11.3094923Z <a id="price_importer.services_common.llm"></a>
2025-08-20T19:18:11.3095195Z 
2025-08-20T19:18:11.3095329Z # price\_importer.services\_common.llm
2025-08-20T19:18:11.3095576Z 
2025-08-20T19:18:11.3095755Z <a id="price_importer.services_common.settings"></a>
2025-08-20T19:18:11.3096059Z 
2025-08-20T19:18:11.3096207Z # price\_importer.services\_common.settings
2025-08-20T19:18:11.3096475Z 
2025-08-20T19:18:11.3096628Z <a id="price_importer.services_common.db"></a>
2025-08-20T19:18:11.3096898Z 
2025-08-20T19:18:11.3097039Z # price\_importer.services\_common.db
2025-08-20T19:18:11.3097284Z 
2025-08-20T19:18:11.3097524Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T19:18:11.3098083Z 
2025-08-20T19:18:11.3098225Z #### build\_sqlalchemy\_url
2025-08-20T19:18:11.3098430Z 
2025-08-20T19:18:11.3098724Z ```python
2025-08-20T19:18:11.3098995Z def build_sqlalchemy_url() -> str
2025-08-20T19:18:11.3099303Z ```
2025-08-20T19:18:11.3099435Z 
2025-08-20T19:18:11.3099579Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T19:18:11.3099842Z 
2025-08-20T19:18:11.3100074Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T19:18:11.3100432Z 
2025-08-20T19:18:11.3100543Z #### build\_asyncpg\_dsn
2025-08-20T19:18:11.3100741Z 
2025-08-20T19:18:11.3100834Z ```python
2025-08-20T19:18:11.3101093Z def build_asyncpg_dsn() -> str
2025-08-20T19:18:11.3101397Z ```
2025-08-20T19:18:11.3101520Z 
2025-08-20T19:18:11.3101711Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T19:18:11.3102033Z 
2025-08-20T19:18:11.3102229Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T19:18:11.3102545Z 
2025-08-20T19:18:11.3102647Z #### refresh\_mvs
2025-08-20T19:18:11.3103002Z 
2025-08-20T19:18:11.3103098Z ```python
2025-08-20T19:18:11.3103394Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T19:18:11.3103756Z ```
2025-08-20T19:18:11.3103883Z 
2025-08-20T19:18:11.3104082Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T19:18:11.3104411Z 
2025-08-20T19:18:11.3104563Z <a id="price_importer.services_common"></a>
2025-08-20T19:18:11.3104829Z 
2025-08-20T19:18:11.3104958Z # price\_importer.services\_common
2025-08-20T19:18:11.3105188Z 
2025-08-20T19:18:11.3105354Z <a id="price_importer.services_common.base"></a>
2025-08-20T19:18:11.3105635Z 
2025-08-20T19:18:11.3105770Z # price\_importer.services\_common.base
2025-08-20T19:18:11.3106028Z 
2025-08-20T19:18:11.3106214Z <a id="price_importer.normaliser"></a>
2025-08-20T19:18:11.3106457Z 
2025-08-20T19:18:11.3106581Z # price\_importer.normaliser
2025-08-20T19:18:11.3106788Z 
2025-08-20T19:18:11.3106942Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T19:18:11.3107227Z 
2025-08-20T19:18:11.3107376Z # price\_importer.common.models\_vendor
2025-08-20T19:18:11.3107624Z 
2025-08-20T19:18:11.3107759Z <a id="price_importer.common.db_url"></a>
2025-08-20T19:18:11.3108017Z 
2025-08-20T19:18:11.3108143Z # price\_importer.common.db\_url
2025-08-20T19:18:11.3108368Z 
2025-08-20T19:18:11.3108693Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T19:18:11.3108984Z 
2025-08-20T19:18:11.3109078Z #### make\_dsn
2025-08-20T19:18:11.3109222Z 
2025-08-20T19:18:11.3109320Z ```python
2025-08-20T19:18:11.3109573Z def make_dsn(async_: bool = False) -> str
2025-08-20T19:18:11.3109911Z ```
2025-08-20T19:18:11.3110039Z 
2025-08-20T19:18:11.3110161Z Return DSN using shared builder.
2025-08-20T19:18:11.3110394Z 
2025-08-20T19:18:11.3110559Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T19:18:11.3110852Z 
2025-08-20T19:18:11.3110954Z #### build\_url
2025-08-20T19:18:11.3111099Z 
2025-08-20T19:18:11.3111191Z ```python
2025-08-20T19:18:11.3111451Z def build_url(async_: bool = False) -> str
2025-08-20T19:18:11.3111816Z ```
2025-08-20T19:18:11.3111942Z 
2025-08-20T19:18:11.3112119Z Return Postgres DSN built from environment variables.
2025-08-20T19:18:11.3112416Z 
2025-08-20T19:18:11.3112538Z <a id="price_importer.common"></a>
2025-08-20T19:18:11.3112771Z 
2025-08-20T19:18:11.3112883Z # price\_importer.common
2025-08-20T19:18:11.3113070Z 
2025-08-20T19:18:11.3113209Z <a id="price_importer.common.base"></a>
2025-08-20T19:18:11.3113459Z 
2025-08-20T19:18:11.3113580Z # price\_importer.common.base
2025-08-20T19:18:11.3113788Z 
2025-08-20T19:18:11.3113928Z <a id="price_importer.tests.conftest"></a>
2025-08-20T19:18:11.3114185Z 
2025-08-20T19:18:11.3114308Z # price\_importer.tests.conftest
2025-08-20T19:18:11.3114532Z 
2025-08-20T19:18:11.3114675Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T19:18:11.3114961Z 
2025-08-20T19:18:11.3115095Z # price\_importer.tests.test\_reader
2025-08-20T19:18:11.3115324Z 
2025-08-20T19:18:11.3115470Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T19:18:11.3115951Z 
2025-08-20T19:18:11.3116085Z # price\_importer.tests.test\_imports
2025-08-20T19:18:11.3116318Z 
2025-08-20T19:18:11.3116472Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T19:18:11.3116721Z 
2025-08-20T19:18:11.3116842Z # price\_importer.tests.test\_smoke
2025-08-20T19:18:11.3117070Z 
2025-08-20T19:18:11.3117230Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T19:18:11.3117528Z 
2025-08-20T19:18:11.3117683Z # price\_importer.tests.test\_normaliser
2025-08-20T19:18:11.3117968Z 
2025-08-20T19:18:11.3118099Z <a id="price_importer.tests"></a>
2025-08-20T19:18:11.3118348Z 
2025-08-20T19:18:11.3118473Z # price\_importer.tests
2025-08-20T19:18:11.3118836Z 
2025-08-20T19:18:11.3118974Z <a id="price_importer.reader"></a>
2025-08-20T19:18:11.3119233Z 
2025-08-20T19:18:11.3119351Z # price\_importer.reader
2025-08-20T19:18:11.3119535Z 
2025-08-20T19:18:11.3119678Z <a id="price_importer.repository"></a>
2025-08-20T19:18:11.3119956Z 
2025-08-20T19:18:11.3120091Z # price\_importer.repository
2025-08-20T19:18:11.3120497Z 
2025-08-20T19:18:11.3120639Z <a id="price_importer.import"></a>
2025-08-20T19:18:11.3120879Z 
2025-08-20T19:18:11.3120997Z # price\_importer.import
2025-08-20T19:18:11.3121182Z 
2025-08-20T19:18:11.3121293Z <a id="fees_h10"></a>
2025-08-20T19:18:11.3121467Z 
2025-08-20T19:18:11.3121565Z # fees\_h10
2025-08-20T19:18:11.3121711Z 
2025-08-20T19:18:11.3121823Z <a id="fees_h10.worker"></a>
2025-08-20T19:18:11.3122019Z 
2025-08-20T19:18:11.3122115Z # fees\_h10.worker
2025-08-20T19:18:11.3122281Z 
2025-08-20T19:18:11.3122430Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T19:18:11.3122701Z 
2025-08-20T19:18:11.3122819Z #### list\_active\_asins
2025-08-20T19:18:11.3123007Z 
2025-08-20T19:18:11.3123099Z ```python
2025-08-20T19:18:11.3123354Z def list_active_asins() -> list[str]
2025-08-20T19:18:11.3123673Z ```
2025-08-20T19:18:11.3123802Z 
2025-08-20T19:18:11.3123974Z Return known ASINs or an empty list if unavailable.
2025-08-20T19:18:11.3124283Z 
2025-08-20T19:18:11.3124427Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T19:18:11.3124670Z 
2025-08-20T19:18:11.3124793Z # fees\_h10.tests.test\_smoke
2025-08-20T19:18:11.3125006Z 
2025-08-20T19:18:11.3125126Z <a id="fees_h10.tests"></a>
2025-08-20T19:18:11.3125319Z 
2025-08-20T19:18:11.3125415Z # fees\_h10.tests
2025-08-20T19:18:11.3125578Z 
2025-08-20T19:18:11.3125689Z <a id="fees_h10.client"></a>
2025-08-20T19:18:11.3125889Z 
2025-08-20T19:18:11.3125986Z # fees\_h10.client
2025-08-20T19:18:11.3126145Z 
2025-08-20T19:18:11.3126265Z <a id="fees_h10.repository"></a>
2025-08-20T19:18:11.3126478Z 
2025-08-20T19:18:11.3126589Z # fees\_h10.repository
2025-08-20T19:18:11.3126767Z 
2025-08-20T19:18:11.3126915Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T19:18:11.3127205Z 
2025-08-20T19:18:11.3127305Z #### upsert\_fees\_raw
2025-08-20T19:18:11.3127478Z 
2025-08-20T19:18:11.3127570Z ```python
2025-08-20T19:18:11.3127826Z def upsert_fees_raw(engine: Engine,
2025-08-20T19:18:11.3128201Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T19:18:11.3128724Z                     *,
2025-08-20T19:18:11.3129063Z                     testing: bool = False) -> dict[str, int] | None
2025-08-20T19:18:11.3129446Z ```
2025-08-20T19:18:11.3129577Z 
2025-08-20T19:18:11.3129694Z Idempotent upsert for fees.
2025-08-20T19:18:11.3129895Z 
2025-08-20T19:18:11.3130128Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T19:18:11.3130655Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T19:18:11.3131127Z Only updates when one of the mutable fields changes.
2025-08-20T19:18:11.3131439Z 
2025-08-20T19:18:11.3131545Z <a id="emailer"></a>
2025-08-20T19:18:11.3131714Z 
2025-08-20T19:18:11.3131816Z # emailer
2025-08-20T19:18:11.3131953Z 
2025-08-20T19:18:11.3132112Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T19:18:11.3132400Z 
2025-08-20T19:18:11.3132533Z # emailer.tests.test\_import\_emailer
2025-08-20T19:18:11.3132780Z 
2025-08-20T19:18:11.3132910Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T19:18:11.3133340Z 
2025-08-20T19:18:11.3133463Z # emailer.tests.test\_smoke
2025-08-20T19:18:11.3133666Z 
2025-08-20T19:18:11.3133785Z <a id="emailer.tests"></a>
2025-08-20T19:18:11.3133983Z 
2025-08-20T19:18:11.3134085Z # emailer.tests
2025-08-20T19:18:11.3134248Z 
2025-08-20T19:18:11.3134370Z <a id="emailer.generate_body"></a>
2025-08-20T19:18:11.3134605Z 
2025-08-20T19:18:11.3134720Z # emailer.generate\_body
2025-08-20T19:18:11.3134913Z 
2025-08-20T19:18:11.3135019Z <a id="llm_server"></a>
2025-08-20T19:18:11.3135196Z 
2025-08-20T19:18:11.3135299Z # llm\_server
2025-08-20T19:18:11.3135442Z 
2025-08-20T19:18:11.3135555Z <a id="llm_server.app"></a>
2025-08-20T19:18:11.3135756Z 
2025-08-20T19:18:11.3135855Z # llm\_server.app
2025-08-20T19:18:11.3136013Z 
