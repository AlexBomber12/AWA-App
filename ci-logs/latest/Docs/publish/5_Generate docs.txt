2025-08-19T22:47:10.7556204Z ##[group]Run pydoc-markdown
2025-08-19T22:47:10.7556493Z [36;1mpydoc-markdown[0m
2025-08-19T22:47:10.7597405Z shell: /usr/bin/bash -e {0}
2025-08-19T22:47:10.7597636Z env:
2025-08-19T22:47:10.7597877Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:47:10.7598296Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T22:47:10.7598705Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:47:10.7599056Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:47:10.7599425Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:47:10.7599786Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T22:47:10.7600090Z ##[endgroup]
2025-08-19T22:47:11.0972796Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T22:47:11.0973516Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T22:47:11.0973996Z In "pydoc-markdown.yml"
2025-08-19T22:47:11.0974464Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T22:47:11.0975378Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T22:47:11.0976147Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T22:47:11.0976691Z 
2025-08-19T22:47:11.4707688Z <a id="__init__"></a>
2025-08-19T22:47:11.4708450Z 
2025-08-19T22:47:11.4708631Z # \_\_init\_\_
2025-08-19T22:47:11.4708889Z 
2025-08-19T22:47:11.4709061Z <a id="api"></a>
2025-08-19T22:47:11.4709335Z 
2025-08-19T22:47:11.4709490Z # api
2025-08-19T22:47:11.4709709Z 
2025-08-19T22:47:11.4709897Z <a id="api.errors"></a>
2025-08-19T22:47:11.4710223Z 
2025-08-19T22:47:11.4710388Z # api.errors
2025-08-19T22:47:11.4710632Z 
2025-08-19T22:47:11.4710845Z <a id="api.sentry_config"></a>
2025-08-19T22:47:11.4711215Z 
2025-08-19T22:47:11.4711400Z # api.sentry\_config
2025-08-19T22:47:11.4711659Z 
2025-08-19T22:47:11.4711828Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T22:47:11.4712121Z 
2025-08-19T22:47:11.4712633Z # api.tests.test\_stats\_contracts
2025-08-19T22:47:11.4712912Z 
2025-08-19T22:47:11.4713061Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T22:47:11.4713348Z 
2025-08-19T22:47:11.4713487Z # api.tests.test\_sentry\_scrub
2025-08-19T22:47:11.4713722Z 
2025-08-19T22:47:11.4713872Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T22:47:11.4714150Z 
2025-08-19T22:47:11.4714287Z # api.tests.test\_roi\_basic\_auth
2025-08-19T22:47:11.4714531Z 
2025-08-19T22:47:11.4714983Z <a id="api.tests.test_errors_json"></a>
2025-08-19T22:47:11.4715295Z 
2025-08-19T22:47:11.4715423Z # api.tests.test\_errors\_json
2025-08-19T22:47:11.4715649Z 
2025-08-19T22:47:11.4715779Z <a id="api.tests.test_llm"></a>
2025-08-19T22:47:11.4716003Z 
2025-08-19T22:47:11.4716117Z # api.tests.test\_llm
2025-08-19T22:47:11.4716306Z 
2025-08-19T22:47:11.4716447Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T22:47:11.4716713Z 
2025-08-19T22:47:11.4716834Z # api.tests.test\_roi\_filters
2025-08-19T22:47:11.4717059Z 
2025-08-19T22:47:11.4717207Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T22:47:11.4717487Z 
2025-08-19T22:47:11.4717617Z # api.tests.test\_sentry\_event
2025-08-19T22:47:11.4717840Z 
2025-08-19T22:47:11.4718038Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T22:47:11.4718373Z 
2025-08-19T22:47:11.4718504Z ## DummyTransport Objects
2025-08-19T22:47:11.4718704Z 
2025-08-19T22:47:11.4718786Z ```python
2025-08-19T22:47:11.4719006Z class DummyTransport()
2025-08-19T22:47:11.4719236Z ```
2025-08-19T22:47:11.4719347Z 
2025-08-19T22:47:11.4719575Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T22:47:11.4719921Z 
2025-08-19T22:47:11.4720020Z #### capture\_envelope
2025-08-19T22:47:11.4720175Z 
2025-08-19T22:47:11.4720256Z ```python
2025-08-19T22:47:11.4720486Z def capture_envelope(envelope)
2025-08-19T22:47:11.4720745Z ```
2025-08-19T22:47:11.4720859Z 
2025-08-19T22:47:11.4721017Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T22:47:11.4721295Z 
2025-08-19T22:47:11.4721400Z <a id="api.tests.test_cors"></a>
2025-08-19T22:47:11.4721814Z 
2025-08-19T22:47:11.4721908Z # api.tests.test\_cors
2025-08-19T22:47:11.4722061Z 
2025-08-19T22:47:11.4722172Z <a id="api.tests.test_imports"></a>
2025-08-19T22:47:11.4722378Z 
2025-08-19T22:47:11.4722475Z # api.tests.test\_imports
2025-08-19T22:47:11.4722648Z 
2025-08-19T22:47:11.4722758Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T22:47:11.4722968Z 
2025-08-19T22:47:11.4723068Z # api.tests.test\_rate\_limit
2025-08-19T22:47:11.4723254Z 
2025-08-19T22:47:11.4723374Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T22:47:11.4723617Z 
2025-08-19T22:47:11.4723704Z #### app
2025-08-19T22:47:11.4723818Z 
2025-08-19T22:47:11.4723900Z noqa: E402
2025-08-19T22:47:11.4724021Z 
2025-08-19T22:47:11.4724130Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T22:47:11.4724336Z 
2025-08-19T22:47:11.4724436Z # api.tests.test\_stats\_sql
2025-08-19T22:47:11.4724755Z 
2025-08-19T22:47:11.4724869Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T22:47:11.4725092Z 
2025-08-19T22:47:11.4725199Z # api.tests.test\_entrypoint
2025-08-19T22:47:11.4725377Z 
2025-08-19T22:47:11.4725518Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T22:47:11.4725772Z 
2025-08-19T22:47:11.4725889Z # api.tests.test\_stats\_future\_contracts
2025-08-19T22:47:11.4726114Z 
2025-08-19T22:47:11.4726220Z <a id="api.tests.test_health"></a>
2025-08-19T22:47:11.4726427Z 
2025-08-19T22:47:11.4726521Z # api.tests.test\_health
2025-08-19T22:47:11.4726690Z 
2025-08-19T22:47:11.4726798Z <a id="api.tests.test_score"></a>
2025-08-19T22:47:11.4726994Z 
2025-08-19T22:47:11.4727092Z # api.tests.test\_score
2025-08-19T22:47:11.4727257Z 
2025-08-19T22:47:11.4727360Z <a id="api.logging_config"></a>
2025-08-19T22:47:11.4727546Z 
2025-08-19T22:47:11.4727637Z # api.logging\_config
2025-08-19T22:47:11.4727793Z 
2025-08-19T22:47:11.4727897Z <a id="api.migrations.env"></a>
2025-08-19T22:47:11.4728080Z 
2025-08-19T22:47:11.4728178Z # api.migrations.env
2025-08-19T22:47:11.4728457Z 
2025-08-19T22:47:11.4728610Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T22:47:11.4728871Z 
2025-08-19T22:47:11.4729012Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T22:47:11.4729256Z 
2025-08-19T22:47:11.4729384Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T22:47:11.4729577Z 
2025-08-19T22:47:11.4729670Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T22:47:11.4729851Z 
2025-08-19T22:47:11.4730013Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T22:47:11.4730249Z 
2025-08-19T22:47:11.4730385Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T22:47:11.4730610Z 
2025-08-19T22:47:11.4730734Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T22:47:11.4730936Z 
2025-08-19T22:47:11.4731039Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T22:47:11.4731227Z 
2025-08-19T22:47:11.4731344Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T22:47:11.4731582Z 
2025-08-19T22:47:11.4731689Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T22:47:11.4731965Z 
2025-08-19T22:47:11.4732096Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T22:47:11.4732298Z 
2025-08-19T22:47:11.4732407Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T22:47:11.4732593Z 
2025-08-19T22:47:11.4732714Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T22:47:11.4732907Z 
2025-08-19T22:47:11.4733011Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T22:47:11.4733198Z 
2025-08-19T22:47:11.4733320Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T22:47:11.4733517Z 
2025-08-19T22:47:11.4733626Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T22:47:11.4733804Z 
2025-08-19T22:47:11.4733938Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T22:47:11.4734158Z 
2025-08-19T22:47:11.4734273Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T22:47:11.4734467Z 
2025-08-19T22:47:11.4734592Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T22:47:11.4735052Z 
2025-08-19T22:47:11.4735160Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T22:47:11.4735346Z 
2025-08-19T22:47:11.4735484Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T22:47:11.4735698Z 
2025-08-19T22:47:11.4735819Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T22:47:11.4736018Z 
2025-08-19T22:47:11.4736124Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T22:47:11.4736310Z 
2025-08-19T22:47:11.4736404Z # api.migrations.versions.0001\_baseline
2025-08-19T22:47:11.4736588Z 
2025-08-19T22:47:11.4736675Z <a id="api.migrations.versions"></a>
2025-08-19T22:47:11.4736836Z 
2025-08-19T22:47:11.4736925Z # api.migrations.versions
2025-08-19T22:47:11.4737054Z 
2025-08-19T22:47:11.4737131Z <a id="api.migrations"></a>
2025-08-19T22:47:11.4737268Z 
2025-08-19T22:47:11.4737336Z # api.migrations
2025-08-19T22:47:11.4737440Z 
2025-08-19T22:47:11.4737514Z <a id="api.db"></a>
2025-08-19T22:47:11.4737633Z 
2025-08-19T22:47:11.4737694Z # api.db
2025-08-19T22:47:11.4737781Z 
2025-08-19T22:47:11.4737867Z <a id="api.routes.score"></a>
2025-08-19T22:47:11.4738006Z 
2025-08-19T22:47:11.4738075Z # api.routes.score
2025-08-19T22:47:11.4738188Z 
2025-08-19T22:47:11.4738265Z <a id="api.routes.stats"></a>
2025-08-19T22:47:11.4738400Z 
2025-08-19T22:47:11.4738470Z # api.routes.stats
2025-08-19T22:47:11.4738586Z 
2025-08-19T22:47:11.4738668Z <a id="api.routes.roi"></a>
2025-08-19T22:47:11.4738797Z 
2025-08-19T22:47:11.4738869Z # api.routes.roi
2025-08-19T22:47:11.4738969Z 
2025-08-19T22:47:11.4739050Z <a id="api.routes.health"></a>
2025-08-19T22:47:11.4739187Z 
2025-08-19T22:47:11.4739267Z # api.routes.health
2025-08-19T22:47:11.4739373Z 
2025-08-19T22:47:11.4739465Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T22:47:11.4739637Z 
2025-08-19T22:47:11.4739699Z #### MAX\_SKEW
2025-08-19T22:47:11.4739796Z 
2025-08-19T22:47:11.4739862Z seconds
2025-08-19T22:47:11.4740077Z 
2025-08-19T22:47:11.4740168Z <a id="api.routes.health.health"></a>
2025-08-19T22:47:11.4740337Z 
2025-08-19T22:47:11.4740406Z #### health
2025-08-19T22:47:11.4740494Z 
2025-08-19T22:47:11.4740557Z ```python
2025-08-19T22:47:11.4740757Z @router.get("/health", include_in_schema=False)
2025-08-19T22:47:11.4741161Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T22:47:11.4741500Z ```
2025-08-19T22:47:11.4741583Z 
2025-08-19T22:47:11.4741706Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T22:47:11.4741902Z 
2025-08-19T22:47:11.4741990Z <a id="api.routes.repository"></a>
2025-08-19T22:47:11.4742147Z 
2025-08-19T22:47:11.4742232Z # api.routes.repository
2025-08-19T22:47:11.4742355Z 
2025-08-19T22:47:11.4742426Z <a id="api.routes"></a>
2025-08-19T22:47:11.4742548Z 
2025-08-19T22:47:11.4742613Z # api.routes
2025-08-19T22:47:11.4742708Z 
2025-08-19T22:47:11.4742783Z <a id="api.models.fee"></a>
2025-08-19T22:47:11.4742920Z 
2025-08-19T22:47:11.4742984Z # api.models.fee
2025-08-19T22:47:11.4743119Z 
2025-08-19T22:47:11.4743192Z <a id="api.models"></a>
2025-08-19T22:47:11.4743307Z 
2025-08-19T22:47:11.4743370Z # api.models
2025-08-19T22:47:11.4743469Z 
2025-08-19T22:47:11.4743548Z <a id="api.roi_repository"></a>
2025-08-19T22:47:11.4743689Z 
2025-08-19T22:47:11.4743767Z # api.roi\_repository
2025-08-19T22:47:11.4743882Z 
2025-08-19T22:47:11.4743950Z <a id="api.main"></a>
2025-08-19T22:47:11.4744059Z 
2025-08-19T22:47:11.4744126Z # api.main
2025-08-19T22:47:11.4744216Z 
2025-08-19T22:47:11.4744291Z <a id="api.main.ready"></a>
2025-08-19T22:47:11.4744471Z 
2025-08-19T22:47:11.4744531Z #### ready
2025-08-19T22:47:11.4744721Z 
2025-08-19T22:47:11.4744793Z ```python
2025-08-19T22:47:11.4745047Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T22:47:11.4745473Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T22:47:11.4745815Z                                                                       str]
2025-08-19T22:47:11.4746046Z ```
2025-08-19T22:47:11.4746253Z 
2025-08-19T22:47:11.4746349Z Return 200 only when migrations are at head.
2025-08-19T22:47:11.4746524Z 
2025-08-19T22:47:11.4746595Z <a id="api.config"></a>
2025-08-19T22:47:11.4746710Z 
2025-08-19T22:47:11.4746777Z # api.config
2025-08-19T22:47:11.4746868Z 
2025-08-19T22:47:11.4746942Z <a id="api.security"></a>
2025-08-19T22:47:11.4747069Z 
2025-08-19T22:47:11.4747138Z # api.security
2025-08-19T22:47:11.4747237Z 
2025-08-19T22:47:11.4747299Z <a id="etl"></a>
2025-08-19T22:47:11.4747404Z 
2025-08-19T22:47:11.4747464Z # etl
2025-08-19T22:47:11.4747548Z 
2025-08-19T22:47:11.4747626Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T22:47:11.4747778Z 
2025-08-19T22:47:11.4747851Z # etl.fba\_fee\_ingestor
2025-08-19T22:47:11.4747971Z 
2025-08-19T22:47:11.4748056Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T22:47:11.4748195Z 
2025-08-19T22:47:11.4748266Z # etl.sp\_fees\_ingestor
2025-08-19T22:47:11.4748395Z 
2025-08-19T22:47:11.4748470Z <a id="etl.keepa_ingestor"></a>
2025-08-19T22:47:11.4748616Z 
2025-08-19T22:47:11.4748694Z # etl.keepa\_ingestor
2025-08-19T22:47:11.4748811Z 
2025-08-19T22:47:11.4748876Z <a id="etl.db"></a>
2025-08-19T22:47:11.4748980Z 
2025-08-19T22:47:11.4749045Z # etl.db
2025-08-19T22:47:11.4749132Z 
2025-08-19T22:47:11.4749213Z <a id="etl.dialects.schemas"></a>
2025-08-19T22:47:11.4749363Z 
2025-08-19T22:47:11.4749436Z # etl.dialects.schemas
2025-08-19T22:47:11.4749551Z 
2025-08-19T22:47:11.4749656Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T22:47:11.4749850Z 
2025-08-19T22:47:11.4749937Z # etl.dialects.amazon\_reimbursements
2025-08-19T22:47:11.4750095Z 
2025-08-19T22:47:11.4750193Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T22:47:11.4750364Z 
2025-08-19T22:47:11.4750449Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T22:47:11.4750606Z 
2025-08-19T22:47:11.4750690Z <a id="etl.dialects.test_generic"></a>
2025-08-19T22:47:11.4750848Z 
2025-08-19T22:47:11.4750924Z # etl.dialects.test\_generic
2025-08-19T22:47:11.4751186Z 
2025-08-19T22:47:11.4751281Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T22:47:11.4751446Z 
2025-08-19T22:47:11.4751531Z # etl.dialects.amazon\_returns
2025-08-19T22:47:11.4751669Z 
2025-08-19T22:47:11.4751761Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T22:47:11.4751929Z 
2025-08-19T22:47:11.4752019Z # etl.dialects.amazon\_fee\_preview
2025-08-19T22:47:11.4752170Z 
2025-08-19T22:47:11.4752275Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T22:47:11.4752461Z 
2025-08-19T22:47:11.4752549Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T22:47:11.4752710Z 
2025-08-19T22:47:11.4752808Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T22:47:11.4752977Z 
2025-08-19T22:47:11.4753063Z # etl.dialects.amazon\_settlements
2025-08-19T22:47:11.4753218Z 
2025-08-19T22:47:11.4753291Z <a id="etl.dialects"></a>
2025-08-19T22:47:11.4753416Z 
2025-08-19T22:47:11.4753479Z # etl.dialects
2025-08-19T22:47:11.4753583Z 
2025-08-19T22:47:11.4753650Z <a id="ingest"></a>
2025-08-19T22:47:11.4753761Z 
2025-08-19T22:47:11.4753832Z # ingest
2025-08-19T22:47:11.4753915Z 
2025-08-19T22:47:11.4753997Z <a id="ingest.maintenance"></a>
2025-08-19T22:47:11.4754136Z 
2025-08-19T22:47:11.4754212Z # ingest.maintenance
2025-08-19T22:47:11.4754324Z 
2025-08-19T22:47:11.4754400Z <a id="ingest.copy_loader"></a>
2025-08-19T22:47:11.4754540Z 
2025-08-19T22:47:11.4754769Z # ingest.copy\_loader
2025-08-19T22:47:11.4754965Z 
2025-08-19T22:47:11.4755069Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T22:47:11.4755253Z 
2025-08-19T22:47:11.4755326Z #### copy\_df\_via\_temp
2025-08-19T22:47:11.4755448Z 
2025-08-19T22:47:11.4755517Z ```python
2025-08-19T22:47:11.4755683Z def copy_df_via_temp(engine: Engine,
2025-08-19T22:47:11.4755920Z                      df: pd.DataFrame,
2025-08-19T22:47:11.4756147Z                      target_table: str,
2025-08-19T22:47:11.4756365Z                      *,
2025-08-19T22:47:11.4756564Z                      target_schema: Optional[str] = None,
2025-08-19T22:47:11.4756832Z                      columns: Sequence[str],
2025-08-19T22:47:11.4757243Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T22:47:11.4757515Z                      analyze_after: bool = False,
2025-08-19T22:47:11.4757771Z                      connection: Any | None = None) -> int
2025-08-19T22:47:11.4758001Z ```
2025-08-19T22:47:11.4758088Z 
2025-08-19T22:47:11.4758243Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T22:47:11.4758471Z 
2025-08-19T22:47:11.4758556Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T22:47:11.4758719Z 
2025-08-19T22:47:11.4758796Z # ingest.tests.test\_smoke
2025-08-19T22:47:11.4758925Z 
2025-08-19T22:47:11.4759004Z <a id="ingest.tests"></a>
2025-08-19T22:47:11.4759131Z 
2025-08-19T22:47:11.4759196Z # ingest.tests
2025-08-19T22:47:11.4759302Z 
2025-08-19T22:47:11.4759385Z <a id="ingest.upload_router"></a>
2025-08-19T22:47:11.4759530Z 
2025-08-19T22:47:11.4759603Z # ingest.upload\_router
2025-08-19T22:47:11.4759732Z 
2025-08-19T22:47:11.4759819Z <a id="ingest.email_watcher"></a>
2025-08-19T22:47:11.4759960Z 
2025-08-19T22:47:11.4760039Z # ingest.email\_watcher
2025-08-19T22:47:11.4760153Z 
2025-08-19T22:47:11.4760238Z <a id="ingest.email_watcher.main"></a>
2025-08-19T22:47:11.4760400Z 
2025-08-19T22:47:11.4760461Z #### main
2025-08-19T22:47:11.4760548Z 
2025-08-19T22:47:11.4760608Z ```python
2025-08-19T22:47:11.4760777Z def main() -> dict[str, str]
2025-08-19T22:47:11.4760966Z ```
2025-08-19T22:47:11.4761051Z 
2025-08-19T22:47:11.4761188Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T22:47:11.4761409Z 
2025-08-19T22:47:11.4761540Z Returns {"status": "success"} when processing completes.
2025-08-19T22:47:11.4761742Z 
2025-08-19T22:47:11.4761817Z <a id="ingest.tasks"></a>
2025-08-19T22:47:11.4761950Z 
2025-08-19T22:47:11.4762015Z # ingest.tasks
2025-08-19T22:47:11.4762128Z 
2025-08-19T22:47:11.4762222Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T22:47:11.4762392Z 
2025-08-19T22:47:11.4762586Z #### task\_import\_file
2025-08-19T22:47:11.4762707Z 
2025-08-19T22:47:11.4762767Z ```python
2025-08-19T22:47:11.4762971Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T22:47:11.4763242Z def task_import_file(self: Any,
2025-08-19T22:47:11.4763451Z                      uri: str,
2025-08-19T22:47:11.4763663Z                      report_type: str | None = None,
2025-08-19T22:47:11.4763929Z                      force: bool = False) -> dict[str, Any]
2025-08-19T22:47:11.4764157Z ```
2025-08-19T22:47:11.4764246Z 
2025-08-19T22:47:11.4764372Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T22:47:11.4764575Z 
2025-08-19T22:47:11.4764787Z <a id="ingest.celery_app"></a>
2025-08-19T22:47:11.4764926Z 
2025-08-19T22:47:11.4764996Z # ingest.celery\_app
2025-08-19T22:47:11.4765112Z 
2025-08-19T22:47:11.4765191Z <a id="ingest.ingest_router"></a>
2025-08-19T22:47:11.4765335Z 
2025-08-19T22:47:11.4765406Z # ingest.ingest\_router
2025-08-19T22:47:11.4765532Z 
2025-08-19T22:47:11.4765615Z <a id="logistics_etl"></a>
2025-08-19T22:47:11.4765746Z 
2025-08-19T22:47:11.4765819Z # logistics\_etl
2025-08-19T22:47:11.4765921Z 
2025-08-19T22:47:11.4765997Z Daily logistics ETL job.
2025-08-19T22:47:11.4766122Z 
2025-08-19T22:47:11.4766202Z <a id="logistics_etl.__main__"></a>
2025-08-19T22:47:11.4766351Z 
2025-08-19T22:47:11.4766424Z # logistics\_etl.\_\_main\_\_
2025-08-19T22:47:11.4766563Z 
2025-08-19T22:47:11.4766639Z <a id="logistics_etl.dsn"></a>
2025-08-19T22:47:11.4766772Z 
2025-08-19T22:47:11.4766846Z # logistics\_etl.dsn
2025-08-19T22:47:11.4766956Z 
2025-08-19T22:47:11.4767070Z Local DSN builder to avoid cross-service dependency.
2025-08-19T22:47:11.4767274Z 
2025-08-19T22:47:11.4767365Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T22:47:11.4767528Z 
2025-08-19T22:47:11.4767591Z #### build\_dsn
2025-08-19T22:47:11.4767697Z 
2025-08-19T22:47:11.4767760Z ```python
2025-08-19T22:47:11.4767934Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:47:11.4768149Z ```
2025-08-19T22:47:11.4768233Z 
2025-08-19T22:47:11.4768494Z Return a Postgres DSN assembled from environment variables.
2025-08-19T22:47:11.4768712Z 
2025-08-19T22:47:11.4768856Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T22:47:11.4769236Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T22:47:11.4769563Z error when any required variable is missing.
2025-08-19T22:47:11.4769739Z 
2025-08-19T22:47:11.4769830Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T22:47:11.4769998Z 
2025-08-19T22:47:11.4770084Z # logistics\_etl.tests.conftest
2025-08-19T22:47:11.4770223Z 
2025-08-19T22:47:11.4770325Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T22:47:11.4770512Z 
2025-08-19T22:47:11.4770599Z # logistics\_etl.tests.test\_repository
2025-08-19T22:47:11.4770760Z 
2025-08-19T22:47:11.4770849Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T22:47:11.4771019Z 
2025-08-19T22:47:11.4771101Z # logistics\_etl.tests.test\_cron
2025-08-19T22:47:11.4771252Z 
2025-08-19T22:47:11.4771352Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T22:47:11.4771530Z 
2025-08-19T22:47:11.4771612Z # logistics\_etl.tests.test\_imports
2025-08-19T22:47:11.4771770Z 
2025-08-19T22:47:11.4771860Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T22:47:11.4772024Z 
2025-08-19T22:47:11.4772105Z # logistics\_etl.tests.test\_smoke
2025-08-19T22:47:11.4772258Z 
2025-08-19T22:47:11.4772350Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T22:47:11.4772516Z 
2025-08-19T22:47:11.4772603Z # logistics\_etl.tests.test\_client
2025-08-19T22:47:11.4772753Z 
2025-08-19T22:47:11.4772831Z <a id="logistics_etl.tests"></a>
2025-08-19T22:47:11.4772979Z 
2025-08-19T22:47:11.4773048Z # logistics\_etl.tests
2025-08-19T22:47:11.4773169Z 
2025-08-19T22:47:11.4773245Z <a id="logistics_etl.flow"></a>
2025-08-19T22:47:11.4773388Z 
2025-08-19T22:47:11.4773457Z # logistics\_etl.flow
2025-08-19T22:47:11.4773569Z 
2025-08-19T22:47:11.4773657Z <a id="logistics_etl.client"></a>
2025-08-19T22:47:11.4773918Z 
2025-08-19T22:47:11.4846709Z # logistics\_etl.client
2025-08-19T22:47:11.4846976Z 
2025-08-19T22:47:11.4847117Z <a id="logistics_etl.cron"></a>
2025-08-19T22:47:11.4847368Z 
2025-08-19T22:47:11.4847490Z # logistics\_etl.cron
2025-08-19T22:47:11.4847674Z 
2025-08-19T22:47:11.4847806Z <a id="logistics_etl.db"></a>
2025-08-19T22:47:11.4848037Z 
2025-08-19T22:47:11.4848171Z # logistics\_etl.db
2025-08-19T22:47:11.4848327Z 
2025-08-19T22:47:11.4848423Z <a id="logistics_etl.repository"></a>
2025-08-19T22:47:11.4848704Z 
2025-08-19T22:47:11.4848842Z # logistics\_etl.repository
2025-08-19T22:47:11.4849071Z 
2025-08-19T22:47:11.4849193Z <a id="alert_bot"></a>
2025-08-19T22:47:11.4849397Z 
2025-08-19T22:47:11.4849499Z # alert\_bot
2025-08-19T22:47:11.4849670Z 
2025-08-19T22:47:11.4849830Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T22:47:11.4850132Z 
2025-08-19T22:47:11.4850267Z # alert\_bot.tests.test\_smoke
2025-08-19T22:47:11.4850510Z 
2025-08-19T22:47:11.4850644Z <a id="alert_bot.tests"></a>
2025-08-19T22:47:11.4850904Z 
2025-08-19T22:47:11.4851032Z # alert\_bot.tests
2025-08-19T22:47:11.4851225Z 
2025-08-19T22:47:11.4851367Z <a id="alert_bot.alert_bot"></a>
2025-08-19T22:47:11.4851623Z 
2025-08-19T22:47:11.4851753Z # alert\_bot.alert\_bot
2025-08-19T22:47:11.4851964Z 
2025-08-19T22:47:11.4852100Z <a id="alert_bot.rules"></a>
2025-08-19T22:47:11.4852345Z 
2025-08-19T22:47:11.4852461Z # alert\_bot.rules
2025-08-19T22:47:11.4852646Z 
2025-08-19T22:47:11.4852759Z <a id="common"></a>
2025-08-19T22:47:11.4852947Z 
2025-08-19T22:47:11.4853048Z # common
2025-08-19T22:47:11.4853200Z 
2025-08-19T22:47:11.4853339Z <a id="common.dsn"></a>
2025-08-19T22:47:11.4853547Z 
2025-08-19T22:47:11.4853655Z # common.dsn
2025-08-19T22:47:11.4853817Z 
2025-08-19T22:47:11.4853964Z <a id="common.dsn.build_dsn"></a>
2025-08-19T22:47:11.4854219Z 
2025-08-19T22:47:11.4854325Z #### build\_dsn
2025-08-19T22:47:11.4854503Z 
2025-08-19T22:47:11.4855018Z ```python
2025-08-19T22:47:11.4855341Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:47:11.4855738Z ```
2025-08-19T22:47:11.4856119Z 
2025-08-19T22:47:11.4856340Z Return a Postgres DSN, validating required variables.
2025-08-19T22:47:11.4856693Z 
2025-08-19T22:47:11.4857014Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T22:47:11.4857770Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T22:47:11.4858475Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T22:47:11.4859013Z missing.
2025-08-19T22:47:11.4859150Z 
2025-08-19T22:47:11.4859240Z <a id="common.models_vendor"></a>
2025-08-19T22:47:11.4859395Z 
2025-08-19T22:47:11.4859467Z # common.models\_vendor
2025-08-19T22:47:11.4859592Z 
2025-08-19T22:47:11.4859682Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T22:47:11.4859854Z 
2025-08-19T22:47:11.4859921Z ## Vendor Objects
2025-08-19T22:47:11.4860035Z 
2025-08-19T22:47:11.4860097Z ```python
2025-08-19T22:47:11.4860256Z class Vendor(Base)
2025-08-19T22:47:11.4860424Z ```
2025-08-19T22:47:11.4860517Z 
2025-08-19T22:47:11.4860601Z Vendor of inventory items.
2025-08-19T22:47:11.4860731Z 
2025-08-19T22:47:11.4860835Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T22:47:11.4861021Z 
2025-08-19T22:47:11.4861092Z ## VendorPrice Objects
2025-08-19T22:47:11.4861209Z 
2025-08-19T22:47:11.4861270Z ```python
2025-08-19T22:47:11.4861435Z class VendorPrice(Base)
2025-08-19T22:47:11.4861607Z ```
2025-08-19T22:47:11.4861693Z 
2025-08-19T22:47:11.4861801Z Association table linking vendors to pricing.
2025-08-19T22:47:11.4861994Z 
2025-08-19T22:47:11.4862078Z <a id="common.db_url"></a>
2025-08-19T22:47:11.4862211Z 
2025-08-19T22:47:11.4862276Z # common.db\_url
2025-08-19T22:47:11.4862387Z 
2025-08-19T22:47:11.4862469Z <a id="common.db_url.build_url"></a>
2025-08-19T22:47:11.4862625Z 
2025-08-19T22:47:11.4862689Z #### build\_url
2025-08-19T22:47:11.4862797Z 
2025-08-19T22:47:11.4862857Z ```python
2025-08-19T22:47:11.4863040Z def build_url(async_: bool = True) -> str
2025-08-19T22:47:11.4863485Z ```
2025-08-19T22:47:11.4863571Z 
2025-08-19T22:47:11.4863677Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:47:11.4863851Z 
2025-08-19T22:47:11.4863927Z <a id="common.keepa"></a>
2025-08-19T22:47:11.4864061Z 
2025-08-19T22:47:11.4864128Z # common.keepa
2025-08-19T22:47:11.4864231Z 
2025-08-19T22:47:11.4864302Z <a id="common.llm"></a>
2025-08-19T22:47:11.4864425Z 
2025-08-19T22:47:11.4864487Z # common.llm
2025-08-19T22:47:11.4864581Z 
2025-08-19T22:47:11.4864919Z <a id="common.settings"></a>
2025-08-19T22:47:11.4865072Z 
2025-08-19T22:47:11.4865140Z # common.settings
2025-08-19T22:47:11.4865252Z 
2025-08-19T22:47:11.4865445Z <a id="common.db"></a>
2025-08-19T22:47:11.4865565Z 
2025-08-19T22:47:11.4865629Z # common.db
2025-08-19T22:47:11.4865729Z 
2025-08-19T22:47:11.4865825Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T22:47:11.4866003Z 
2025-08-19T22:47:11.4866087Z #### build\_sqlalchemy\_url
2025-08-19T22:47:11.4866220Z 
2025-08-19T22:47:11.4866282Z ```python
2025-08-19T22:47:11.4866468Z def build_sqlalchemy_url() -> str
2025-08-19T22:47:11.4866679Z ```
2025-08-19T22:47:11.4866767Z 
2025-08-19T22:47:11.4866860Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:47:11.4867034Z 
2025-08-19T22:47:11.4867124Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T22:47:11.4867296Z 
2025-08-19T22:47:11.4867367Z #### build\_asyncpg\_dsn
2025-08-19T22:47:11.4867491Z 
2025-08-19T22:47:11.4867559Z ```python
2025-08-19T22:47:11.4867728Z def build_asyncpg_dsn() -> str
2025-08-19T22:47:11.4867930Z ```
2025-08-19T22:47:11.4868011Z 
2025-08-19T22:47:11.4868137Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:47:11.4868352Z 
2025-08-19T22:47:11.4868437Z <a id="common.db.refresh_mvs"></a>
2025-08-19T22:47:11.4868589Z 
2025-08-19T22:47:11.4868660Z #### refresh\_mvs
2025-08-19T22:47:11.4868762Z 
2025-08-19T22:47:11.4868823Z ```python
2025-08-19T22:47:11.4869029Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:47:11.4869270Z ```
2025-08-19T22:47:11.4869356Z 
2025-08-19T22:47:11.4869646Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:47:11.4869862Z 
2025-08-19T22:47:11.4869938Z <a id="common.config"></a>
2025-08-19T22:47:11.4870072Z 
2025-08-19T22:47:11.4870137Z # common.config
2025-08-19T22:47:11.4870239Z 
2025-08-19T22:47:11.4870320Z <a id="common.base"></a>
2025-08-19T22:47:11.4870443Z 
2025-08-19T22:47:11.4870515Z # common.base
2025-08-19T22:47:11.4870614Z 
2025-08-19T22:47:11.4870700Z <a id="common.base.Base"></a>
2025-08-19T22:47:11.4870838Z 
2025-08-19T22:47:11.4870901Z ## Base Objects
2025-08-19T22:47:11.4871003Z 
2025-08-19T22:47:11.4871064Z ```python
2025-08-19T22:47:11.4871226Z class Base(DeclarativeBase)
2025-08-19T22:47:11.4871420Z ```
2025-08-19T22:47:11.4871499Z 
2025-08-19T22:47:11.4871588Z Base class for SQLAlchemy models.
2025-08-19T22:47:11.4871735Z 
2025-08-19T22:47:11.4871805Z <a id="repricer"></a>
2025-08-19T22:47:11.4871921Z 
2025-08-19T22:47:11.4871991Z # repricer
2025-08-19T22:47:11.4872081Z 
2025-08-19T22:47:11.4872171Z <a id="repricer.app.schemas"></a>
2025-08-19T22:47:11.4872332Z 
2025-08-19T22:47:11.4872408Z # repricer.app.schemas
2025-08-19T22:47:11.4872528Z 
2025-08-19T22:47:11.4872617Z <a id="repricer.app.deps"></a>
2025-08-19T22:47:11.4872756Z 
2025-08-19T22:47:11.4872828Z # repricer.app.deps
2025-08-19T22:47:11.4872938Z 
2025-08-19T22:47:11.4873068Z Placeholder module for Keepa / SP-API clients.
2025-08-19T22:47:11.4873254Z 
2025-08-19T22:47:11.4873336Z <a id="repricer.app.logic"></a>
2025-08-19T22:47:11.4873482Z 
2025-08-19T22:47:11.4873553Z # repricer.app.logic
2025-08-19T22:47:11.4873669Z 
2025-08-19T22:47:11.4873767Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T22:47:11.4873953Z 
2025-08-19T22:47:11.4874018Z #### MIN\_MARGIN
2025-08-19T22:47:11.4874121Z 
2025-08-19T22:47:11.4874189Z 15 % ROI
2025-08-19T22:47:11.4874277Z 
2025-08-19T22:47:11.4874380Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T22:47:11.4874566Z 
2025-08-19T22:47:11.4874839Z #### compute\_price
2025-08-19T22:47:11.4875121Z 
2025-08-19T22:47:11.4875189Z ```python
2025-08-19T22:47:11.4875444Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T22:47:11.4875748Z ```
2025-08-19T22:47:11.4875831Z 
2025-08-19T22:47:11.4875938Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T22:47:11.4876219Z Replace with real competitive logic later.
2025-08-19T22:47:11.4876387Z 
2025-08-19T22:47:11.4876469Z <a id="repricer.app.main"></a>
2025-08-19T22:47:11.4876619Z 
2025-08-19T22:47:11.4876690Z # repricer.app.main
2025-08-19T22:47:11.4876801Z 
2025-08-19T22:47:11.4876877Z <a id="repricer.app"></a>
2025-08-19T22:47:11.4877011Z 
2025-08-19T22:47:11.4877079Z # repricer.app
2025-08-19T22:47:11.4877180Z 
2025-08-19T22:47:11.4877275Z <a id="repricer.tests.test_imports"></a>
2025-08-19T22:47:11.4877443Z 
2025-08-19T22:47:11.4877526Z # repricer.tests.test\_imports
2025-08-19T22:47:11.4877672Z 
2025-08-19T22:47:11.4877760Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T22:47:11.4877921Z 
2025-08-19T22:47:11.4878009Z # repricer.tests.test\_smoke
2025-08-19T22:47:11.4878161Z 
2025-08-19T22:47:11.4878239Z <a id="repricer.tests"></a>
2025-08-19T22:47:11.4878371Z 
2025-08-19T22:47:11.4878444Z # repricer.tests
2025-08-19T22:47:11.4878550Z 
2025-08-19T22:47:11.4878613Z <a id="db"></a>
2025-08-19T22:47:11.4878718Z 
2025-08-19T22:47:11.4878778Z # db
2025-08-19T22:47:11.4878860Z 
2025-08-19T22:47:11.4878935Z <a id="db.utils.views"></a>
2025-08-19T22:47:11.4879071Z 
2025-08-19T22:47:11.4879137Z # db.utils.views
2025-08-19T22:47:11.4879239Z 
2025-08-19T22:47:11.4879336Z <a id="db.utils.views.replace_view"></a>
2025-08-19T22:47:11.4879503Z 
2025-08-19T22:47:11.4879569Z #### replace\_view
2025-08-19T22:47:11.4879674Z 
2025-08-19T22:47:11.4879742Z ```python
2025-08-19T22:47:11.4879931Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T22:47:11.4880175Z ```
2025-08-19T22:47:11.4880256Z 
2025-08-19T22:47:11.4880345Z Drop and recreate a SQL view atomically.
2025-08-19T22:47:11.4880515Z 
2025-08-19T22:47:11.4880589Z <a id="db.utils"></a>
2025-08-19T22:47:11.4880827Z 
2025-08-19T22:47:11.4880902Z # db.utils
2025-08-19T22:47:11.4880990Z 
2025-08-19T22:47:11.4881065Z <a id="price_importer"></a>
2025-08-19T22:47:11.4881196Z 
2025-08-19T22:47:11.4881269Z # price\_importer
2025-08-19T22:47:11.4881374Z 
2025-08-19T22:47:11.4881475Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T22:47:11.4881659Z 
2025-08-19T22:47:11.4881747Z # price\_importer.services\_common.dsn
2025-08-19T22:47:11.4881908Z 
2025-08-19T22:47:11.4882038Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T22:47:11.4882242Z 
2025-08-19T22:47:11.4882305Z #### build\_dsn
2025-08-19T22:47:11.4882405Z 
2025-08-19T22:47:11.4882474Z ```python
2025-08-19T22:47:11.4882641Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:47:11.4882862Z ```
2025-08-19T22:47:11.4882942Z 
2025-08-19T22:47:11.4883007Z Return safe DSN.
2025-08-19T22:47:11.4883120Z 
2025-08-19T22:47:11.4883485Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T22:47:11.4883711Z 
2025-08-19T22:47:11.4883867Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T22:47:11.4884069Z 
2025-08-19T22:47:11.4884177Z # price\_importer.services\_common.models\_vendor
2025-08-19T22:47:11.4884371Z 
2025-08-19T22:47:11.4884475Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T22:47:11.4884831Z 
2025-08-19T22:47:11.4884938Z # price\_importer.services\_common.db\_url
2025-08-19T22:47:11.4885113Z 
2025-08-19T22:47:11.4885244Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T22:47:11.4885457Z 
2025-08-19T22:47:11.4885528Z #### build\_url
2025-08-19T22:47:11.4885626Z 
2025-08-19T22:47:11.4885689Z ```python
2025-08-19T22:47:11.4885864Z def build_url(async_: bool = True) -> str
2025-08-19T22:47:11.4886082Z ```
2025-08-19T22:47:11.4886171Z 
2025-08-19T22:47:11.4886265Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:47:11.4886439Z 
2025-08-19T22:47:11.4886549Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T22:47:11.4886872Z 
2025-08-19T22:47:11.4886969Z # price\_importer.services\_common.keepa
2025-08-19T22:47:11.4887136Z 
2025-08-19T22:47:11.4887245Z <a id="price_importer.services_common.llm"></a>
2025-08-19T22:47:11.4887423Z 
2025-08-19T22:47:11.4887511Z # price\_importer.services\_common.llm
2025-08-19T22:47:11.4887678Z 
2025-08-19T22:47:11.4887793Z <a id="price_importer.services_common.settings"></a>
2025-08-19T22:47:11.4887986Z 
2025-08-19T22:47:11.4888087Z # price\_importer.services\_common.settings
2025-08-19T22:47:11.4888259Z 
2025-08-19T22:47:11.4888359Z <a id="price_importer.services_common.db"></a>
2025-08-19T22:47:11.4888539Z 
2025-08-19T22:47:11.4888635Z # price\_importer.services\_common.db
2025-08-19T22:47:11.4888795Z 
2025-08-19T22:47:11.4888949Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T22:47:11.4889193Z 
2025-08-19T22:47:11.4889268Z #### build\_sqlalchemy\_url
2025-08-19T22:47:11.4889399Z 
2025-08-19T22:47:11.4889469Z ```python
2025-08-19T22:47:11.4889643Z def build_sqlalchemy_url() -> str
2025-08-19T22:47:11.4889860Z ```
2025-08-19T22:47:11.4889940Z 
2025-08-19T22:47:11.4890033Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:47:11.4890209Z 
2025-08-19T22:47:11.4890352Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T22:47:11.4890579Z 
2025-08-19T22:47:11.4890651Z #### build\_asyncpg\_dsn
2025-08-19T22:47:11.4890785Z 
2025-08-19T22:47:11.4890845Z ```python
2025-08-19T22:47:11.4891015Z def build_asyncpg_dsn() -> str
2025-08-19T22:47:11.4891208Z ```
2025-08-19T22:47:11.4891287Z 
2025-08-19T22:47:11.4891420Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:47:11.4891626Z 
2025-08-19T22:47:11.4891749Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T22:47:11.4891959Z 
2025-08-19T22:47:11.4892022Z #### refresh\_mvs
2025-08-19T22:47:11.4892127Z 
2025-08-19T22:47:11.4892191Z ```python
2025-08-19T22:47:11.4892379Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:47:11.4892628Z ```
2025-08-19T22:47:11.4892835Z 
2025-08-19T22:47:11.4892969Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:47:11.4893186Z 
2025-08-19T22:47:11.4893278Z <a id="price_importer.services_common"></a>
2025-08-19T22:47:11.4893449Z 
2025-08-19T22:47:11.4893533Z # price\_importer.services\_common
2025-08-19T22:47:11.4893691Z 
2025-08-19T22:47:11.4893793Z <a id="price_importer.services_common.base"></a>
2025-08-19T22:47:11.4893974Z 
2025-08-19T22:47:11.4894068Z # price\_importer.services\_common.base
2025-08-19T22:47:11.4894232Z 
2025-08-19T22:47:11.4894320Z <a id="price_importer.normaliser"></a>
2025-08-19T22:47:11.4894488Z 
2025-08-19T22:47:11.4894571Z # price\_importer.normaliser
2025-08-19T22:47:11.4894934Z 
2025-08-19T22:47:11.4895040Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T22:47:11.4895230Z 
2025-08-19T22:47:11.4895318Z # price\_importer.common.models\_vendor
2025-08-19T22:47:11.4895478Z 
2025-08-19T22:47:11.4895576Z <a id="price_importer.common.db_url"></a>
2025-08-19T22:47:11.4895750Z 
2025-08-19T22:47:11.4895838Z # price\_importer.common.db\_url
2025-08-19T22:47:11.4895987Z 
2025-08-19T22:47:11.4896095Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T22:47:11.4896276Z 
2025-08-19T22:47:11.4896339Z #### make\_dsn
2025-08-19T22:47:11.4896445Z 
2025-08-19T22:47:11.4896505Z ```python
2025-08-19T22:47:11.4896680Z def make_dsn(async_: bool = False) -> str
2025-08-19T22:47:11.4896898Z ```
2025-08-19T22:47:11.4896979Z 
2025-08-19T22:47:11.4897104Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T22:47:11.4897301Z 
2025-08-19T22:47:11.4897407Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T22:47:11.4897605Z 
2025-08-19T22:47:11.4897668Z #### build\_url
2025-08-19T22:47:11.4897768Z 
2025-08-19T22:47:11.4897828Z ```python
2025-08-19T22:47:11.4898007Z def build_url(async_: bool = False) -> str
2025-08-19T22:47:11.4898234Z ```
2025-08-19T22:47:11.4898314Z 
2025-08-19T22:47:11.4898432Z Return Postgres DSN built from environment variables.
2025-08-19T22:47:11.4898764Z 
2025-08-19T22:47:11.4898856Z <a id="price_importer.common"></a>
2025-08-19T22:47:11.4899009Z 
2025-08-19T22:47:11.4899085Z # price\_importer.common
2025-08-19T22:47:11.4899218Z 
2025-08-19T22:47:11.4899306Z <a id="price_importer.common.base"></a>
2025-08-19T22:47:11.4899471Z 
2025-08-19T22:47:11.4899562Z # price\_importer.common.base
2025-08-19T22:47:11.4899702Z 
2025-08-19T22:47:11.4899796Z <a id="price_importer.tests.conftest"></a>
2025-08-19T22:47:11.4899964Z 
2025-08-19T22:47:11.4900055Z # price\_importer.tests.conftest
2025-08-19T22:47:11.4900201Z 
2025-08-19T22:47:11.4900297Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T22:47:11.4900477Z 
2025-08-19T22:47:11.4900562Z # price\_importer.tests.test\_reader
2025-08-19T22:47:11.4900721Z 
2025-08-19T22:47:11.4900826Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T22:47:11.4901030Z 
2025-08-19T22:47:11.4901120Z # price\_importer.tests.test\_imports
2025-08-19T22:47:11.4901280Z 
2025-08-19T22:47:11.4901389Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T22:47:11.4901564Z 
2025-08-19T22:47:11.4901647Z # price\_importer.tests.test\_smoke
2025-08-19T22:47:11.4901805Z 
2025-08-19T22:47:11.4901908Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T22:47:11.4902092Z 
2025-08-19T22:47:11.4902188Z # price\_importer.tests.test\_normaliser
2025-08-19T22:47:11.4902353Z 
2025-08-19T22:47:11.4902433Z <a id="price_importer.tests"></a>
2025-08-19T22:47:11.4902584Z 
2025-08-19T22:47:11.4902659Z # price\_importer.tests
2025-08-19T22:47:11.4902780Z 
2025-08-19T22:47:11.4902862Z <a id="price_importer.reader"></a>
2025-08-19T22:47:11.4903019Z 
2025-08-19T22:47:11.4903093Z # price\_importer.reader
2025-08-19T22:47:11.4903219Z 
2025-08-19T22:47:11.4903314Z <a id="price_importer.repository"></a>
2025-08-19T22:47:11.4903473Z 
2025-08-19T22:47:11.4903554Z # price\_importer.repository
2025-08-19T22:47:11.4903690Z 
2025-08-19T22:47:11.4903779Z <a id="price_importer.import"></a>
2025-08-19T22:47:11.4903934Z 
2025-08-19T22:47:11.4904007Z # price\_importer.import
2025-08-19T22:47:11.4904257Z 
2025-08-19T22:47:11.4904326Z <a id="fees_h10"></a>
2025-08-19T22:47:11.4904436Z 
2025-08-19T22:47:11.4904502Z # fees\_h10
2025-08-19T22:47:11.4904593Z 
2025-08-19T22:47:11.4904869Z <a id="fees_h10.worker"></a>
2025-08-19T22:47:11.4905009Z 
2025-08-19T22:47:11.4905080Z # fees\_h10.worker
2025-08-19T22:47:11.4905184Z 
2025-08-19T22:47:11.4905278Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T22:47:11.4905457Z 
2025-08-19T22:47:11.4905528Z #### list\_active\_asins
2025-08-19T22:47:11.4905645Z 
2025-08-19T22:47:11.4905705Z ```python
2025-08-19T22:47:11.4905872Z def list_active_asins() -> list[str]
2025-08-19T22:47:11.4906082Z ```
2025-08-19T22:47:11.4906161Z 
2025-08-19T22:47:11.4906274Z Return known ASINs or an empty list if unavailable.
2025-08-19T22:47:11.4906465Z 
2025-08-19T22:47:11.4906555Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T22:47:11.4906708Z 
2025-08-19T22:47:11.4906784Z # fees\_h10.tests.test\_smoke
2025-08-19T22:47:11.4906930Z 
2025-08-19T22:47:11.4907008Z <a id="fees_h10.tests"></a>
2025-08-19T22:47:11.4907138Z 
2025-08-19T22:47:11.4907207Z # fees\_h10.tests
2025-08-19T22:47:11.4907308Z 
2025-08-19T22:47:11.4907382Z <a id="fees_h10.client"></a>
2025-08-19T22:47:11.4907511Z 
2025-08-19T22:47:11.4907580Z # fees\_h10.client
2025-08-19T22:47:11.4907681Z 
2025-08-19T22:47:11.4907760Z <a id="fees_h10.repository"></a>
2025-08-19T22:47:11.4907904Z 
2025-08-19T22:47:11.4907974Z # fees\_h10.repository
2025-08-19T22:47:11.4908089Z 
2025-08-19T22:47:11.4908190Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T22:47:11.4908375Z 
2025-08-19T22:47:11.4908444Z #### upsert\_fees\_raw
2025-08-19T22:47:11.4908557Z 
2025-08-19T22:47:11.4908623Z ```python
2025-08-19T22:47:11.4908786Z def upsert_fees_raw(engine: Engine,
2025-08-19T22:47:11.4909031Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T22:47:11.4909266Z                     *,
2025-08-19T22:47:11.4909494Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T22:47:11.4909894Z ```
2025-08-19T22:47:11.4909981Z 
2025-08-19T22:47:11.4910064Z Idempotent upsert for fees.
2025-08-19T22:47:11.4910197Z 
2025-08-19T22:47:11.4910353Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T22:47:11.4910691Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T22:47:11.4910999Z Only updates when one of the mutable fields changes.
2025-08-19T22:47:11.4911193Z 
2025-08-19T22:47:11.4911262Z <a id="emailer"></a>
2025-08-19T22:47:11.4911380Z 
2025-08-19T22:47:11.4911438Z # emailer
2025-08-19T22:47:11.4911525Z 
2025-08-19T22:47:11.4911629Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T22:47:11.4911806Z 
2025-08-19T22:47:11.4911894Z # emailer.tests.test\_import\_emailer
2025-08-19T22:47:11.4912054Z 
2025-08-19T22:47:11.4912143Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T22:47:11.4912298Z 
2025-08-19T22:47:11.4932339Z # emailer.tests.test\_smoke
2025-08-19T22:47:11.4932575Z 
2025-08-19T22:47:11.4932683Z <a id="emailer.tests"></a>
2025-08-19T22:47:11.4932838Z 
2025-08-19T22:47:11.4932911Z # emailer.tests
2025-08-19T22:47:11.4933036Z 
2025-08-19T22:47:11.4933128Z <a id="emailer.generate_body"></a>
2025-08-19T22:47:11.4933288Z 
2025-08-19T22:47:11.4933377Z # emailer.generate\_body
2025-08-19T22:47:11.4933509Z 
2025-08-19T22:47:11.4933584Z <a id="llm_server"></a>
2025-08-19T22:47:11.4933703Z 
2025-08-19T22:47:11.4933776Z # llm\_server
2025-08-19T22:47:11.4933877Z 
2025-08-19T22:47:11.4933959Z <a id="llm_server.app"></a>
2025-08-19T22:47:11.4934100Z 
2025-08-19T22:47:11.4934168Z # llm\_server.app
2025-08-19T22:47:11.4934277Z 
