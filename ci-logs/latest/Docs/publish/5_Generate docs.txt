2025-08-18T20:00:03.8901501Z ##[group]Run pydoc-markdown
2025-08-18T20:00:03.8901796Z [36;1mpydoc-markdown[0m
2025-08-18T20:00:03.8941736Z shell: /usr/bin/bash -e {0}
2025-08-18T20:00:03.8941965Z env:
2025-08-18T20:00:03.8942213Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:00:03.8942631Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T20:00:03.8943030Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:00:03.8943384Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:00:03.8943733Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:00:03.8944073Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T20:00:03.8944363Z ##[endgroup]
2025-08-18T20:00:04.2414824Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T20:00:04.2415531Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T20:00:04.2416037Z In "pydoc-markdown.yml"
2025-08-18T20:00:04.2416505Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T20:00:04.2418755Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T20:00:04.2419612Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T20:00:04.2420201Z 
2025-08-18T20:00:04.5424422Z <a id="__init__"></a>
2025-08-18T20:00:04.5424741Z 
2025-08-18T20:00:04.5424885Z # \_\_init\_\_
2025-08-18T20:00:04.5425102Z 
2025-08-18T20:00:04.5425261Z <a id="api"></a>
2025-08-18T20:00:04.5425502Z 
2025-08-18T20:00:04.5425633Z # api
2025-08-18T20:00:04.5425838Z 
2025-08-18T20:00:04.5426014Z <a id="api.errors"></a>
2025-08-18T20:00:04.5426305Z 
2025-08-18T20:00:04.5426453Z # api.errors
2025-08-18T20:00:04.5426693Z 
2025-08-18T20:00:04.5427140Z <a id="api.sentry_config"></a>
2025-08-18T20:00:04.5427470Z 
2025-08-18T20:00:04.5427633Z # api.sentry\_config
2025-08-18T20:00:04.5427908Z 
2025-08-18T20:00:04.5428107Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T20:00:04.5428463Z 
2025-08-18T20:00:04.5428908Z # api.tests.test\_sentry\_scrub
2025-08-18T20:00:04.5429184Z 
2025-08-18T20:00:04.5429341Z <a id="api.tests.test_errors_json"></a>
2025-08-18T20:00:04.5429641Z 
2025-08-18T20:00:04.5429786Z # api.tests.test\_errors\_json
2025-08-18T20:00:04.5430026Z 
2025-08-18T20:00:04.5430169Z <a id="api.tests.test_llm"></a>
2025-08-18T20:00:04.5430430Z 
2025-08-18T20:00:04.5430555Z # api.tests.test\_llm
2025-08-18T20:00:04.5430768Z 
2025-08-18T20:00:04.5430940Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T20:00:04.5431241Z 
2025-08-18T20:00:04.5431388Z # api.tests.test\_sentry\_event
2025-08-18T20:00:04.5431649Z 
2025-08-18T20:00:04.5431796Z <a id="api.tests.test_cors"></a>
2025-08-18T20:00:04.5432054Z 
2025-08-18T20:00:04.5432273Z # api.tests.test\_cors
2025-08-18T20:00:04.5432488Z 
2025-08-18T20:00:04.5432634Z <a id="api.tests.test_imports"></a>
2025-08-18T20:00:04.5432913Z 
2025-08-18T20:00:04.5433072Z # api.tests.test\_imports
2025-08-18T20:00:04.5433318Z 
2025-08-18T20:00:04.5433485Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T20:00:04.5433827Z 
2025-08-18T20:00:04.5433984Z # api.tests.test\_rate\_limit
2025-08-18T20:00:04.5434250Z 
2025-08-18T20:00:04.5434441Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T20:00:04.5434787Z 
2025-08-18T20:00:04.5434918Z #### app
2025-08-18T20:00:04.5435075Z 
2025-08-18T20:00:04.5435153Z noqa: E402
2025-08-18T20:00:04.5435251Z 
2025-08-18T20:00:04.5435348Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T20:00:04.5435533Z 
2025-08-18T20:00:04.5435623Z # api.tests.test\_entrypoint
2025-08-18T20:00:04.5435877Z 
2025-08-18T20:00:04.5436039Z <a id="api.tests.test_health"></a>
2025-08-18T20:00:04.5436328Z 
2025-08-18T20:00:04.5436472Z # api.tests.test\_health
2025-08-18T20:00:04.5436698Z 
2025-08-18T20:00:04.5437026Z <a id="api.logging_config"></a>
2025-08-18T20:00:04.5437278Z 
2025-08-18T20:00:04.5437403Z # api.logging\_config
2025-08-18T20:00:04.5437611Z 
2025-08-18T20:00:04.5437765Z <a id="api.migrations.env"></a>
2025-08-18T20:00:04.5438013Z 
2025-08-18T20:00:04.5438152Z # api.migrations.env
2025-08-18T20:00:04.5438670Z 
2025-08-18T20:00:04.5438884Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T20:00:04.5439243Z 
2025-08-18T20:00:04.5439444Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T20:00:04.5439784Z 
2025-08-18T20:00:04.5439982Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T20:00:04.5440351Z 
2025-08-18T20:00:04.5440538Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T20:00:04.5440862Z 
2025-08-18T20:00:04.5441150Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T20:00:04.5441581Z 
2025-08-18T20:00:04.5441829Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T20:00:04.5442094Z 
2025-08-18T20:00:04.5442226Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T20:00:04.5442428Z 
2025-08-18T20:00:04.5442537Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T20:00:04.5442732Z 
2025-08-18T20:00:04.5442854Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T20:00:04.5443069Z 
2025-08-18T20:00:04.5443175Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T20:00:04.5443365Z 
2025-08-18T20:00:04.5443493Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T20:00:04.5443698Z 
2025-08-18T20:00:04.5443815Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T20:00:04.5444004Z 
2025-08-18T20:00:04.5444127Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T20:00:04.5444327Z 
2025-08-18T20:00:04.5444434Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T20:00:04.5444619Z 
2025-08-18T20:00:04.5444750Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T20:00:04.5444959Z 
2025-08-18T20:00:04.5445072Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T20:00:04.5445264Z 
2025-08-18T20:00:04.5445416Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T20:00:04.5445653Z 
2025-08-18T20:00:04.5445779Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T20:00:04.5446147Z 
2025-08-18T20:00:04.5446280Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T20:00:04.5446489Z 
2025-08-18T20:00:04.5446607Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T20:00:04.5447008Z 
2025-08-18T20:00:04.5447161Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T20:00:04.5447399Z 
2025-08-18T20:00:04.5447520Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T20:00:04.5447720Z 
2025-08-18T20:00:04.5447832Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T20:00:04.5448030Z 
2025-08-18T20:00:04.5448124Z # api.migrations.versions.0001\_baseline
2025-08-18T20:00:04.5448305Z 
2025-08-18T20:00:04.5448401Z <a id="api.migrations.versions"></a>
2025-08-18T20:00:04.5448566Z 
2025-08-18T20:00:04.5448649Z # api.migrations.versions
2025-08-18T20:00:04.5448786Z 
2025-08-18T20:00:04.5448867Z <a id="api.migrations"></a>
2025-08-18T20:00:04.5449001Z 
2025-08-18T20:00:04.5449073Z # api.migrations
2025-08-18T20:00:04.5449198Z 
2025-08-18T20:00:04.5449278Z <a id="api.db"></a>
2025-08-18T20:00:04.5449398Z 
2025-08-18T20:00:04.5449473Z # api.db
2025-08-18T20:00:04.5449565Z 
2025-08-18T20:00:04.5449651Z <a id="api.routes.stats"></a>
2025-08-18T20:00:04.5449796Z 
2025-08-18T20:00:04.5449876Z # api.routes.stats
2025-08-18T20:00:04.5450091Z 
2025-08-18T20:00:04.5450192Z <a id="api.routes.stats.kpi"></a>
2025-08-18T20:00:04.5450378Z 
2025-08-18T20:00:04.5450447Z #### kpi
2025-08-18T20:00:04.5450547Z 
2025-08-18T20:00:04.5450612Z ```python
2025-08-18T20:00:04.5450788Z @router.get("/stats/kpi")
2025-08-18T20:00:04.5451034Z def kpi() -> List[Dict[str, int]]
2025-08-18T20:00:04.5451242Z ```
2025-08-18T20:00:04.5451335Z 
2025-08-18T20:00:04.5451415Z Return KPI metrics (mock).
2025-08-18T20:00:04.5451551Z 
2025-08-18T20:00:04.5451659Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T20:00:04.5451842Z 
2025-08-18T20:00:04.5451912Z #### roi\_by\_vendor
2025-08-18T20:00:04.5452024Z 
2025-08-18T20:00:04.5452096Z ```python
2025-08-18T20:00:04.5452273Z @router.get("/stats/roi_by_vendor")
2025-08-18T20:00:04.5452671Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T20:00:04.5452898Z ```
2025-08-18T20:00:04.5452984Z 
2025-08-18T20:00:04.5453065Z Return ROI percent by vendor.
2025-08-18T20:00:04.5453206Z 
2025-08-18T20:00:04.5453302Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T20:00:04.5453731Z 
2025-08-18T20:00:04.5453857Z #### roi\_trend
2025-08-18T20:00:04.5454052Z 
2025-08-18T20:00:04.5454184Z ```python
2025-08-18T20:00:04.5454504Z @router.get("/stats/roi_trend")
2025-08-18T20:00:04.5454962Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T20:00:04.5455408Z ```
2025-08-18T20:00:04.5455558Z 
2025-08-18T20:00:04.5455642Z Return 30-day ROI trend.
2025-08-18T20:00:04.5455774Z 
2025-08-18T20:00:04.5455865Z <a id="api.routes.roi"></a>
2025-08-18T20:00:04.5456003Z 
2025-08-18T20:00:04.5456075Z # api.routes.roi
2025-08-18T20:00:04.5456183Z 
2025-08-18T20:00:04.5456276Z <a id="api.routes.health"></a>
2025-08-18T20:00:04.5456427Z 
2025-08-18T20:00:04.5456506Z # api.routes.health
2025-08-18T20:00:04.5456623Z 
2025-08-18T20:00:04.5456718Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T20:00:04.5457165Z 
2025-08-18T20:00:04.5457239Z #### MAX\_SKEW
2025-08-18T20:00:04.5457339Z 
2025-08-18T20:00:04.5457403Z seconds
2025-08-18T20:00:04.5457490Z 
2025-08-18T20:00:04.5457590Z <a id="api.routes.health.health"></a>
2025-08-18T20:00:04.5457754Z 
2025-08-18T20:00:04.5457818Z #### health
2025-08-18T20:00:04.5457916Z 
2025-08-18T20:00:04.5457982Z ```python
2025-08-18T20:00:04.5458179Z @router.get("/health", include_in_schema=False)
2025-08-18T20:00:04.5458567Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T20:00:04.5458921Z ```
2025-08-18T20:00:04.5459006Z 
2025-08-18T20:00:04.5459125Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T20:00:04.5459323Z 
2025-08-18T20:00:04.5459422Z <a id="api.routes.repository"></a>
2025-08-18T20:00:04.5459580Z 
2025-08-18T20:00:04.5459839Z # api.routes.repository
2025-08-18T20:00:04.5459979Z 
2025-08-18T20:00:04.5460054Z <a id="api.routes"></a>
2025-08-18T20:00:04.5460172Z 
2025-08-18T20:00:04.5460246Z # api.routes
2025-08-18T20:00:04.5460350Z 
2025-08-18T20:00:04.5460433Z <a id="api.models.fee"></a>
2025-08-18T20:00:04.5460575Z 
2025-08-18T20:00:04.5460652Z # api.models.fee
2025-08-18T20:00:04.5460761Z 
2025-08-18T20:00:04.5460836Z <a id="api.models"></a>
2025-08-18T20:00:04.5460962Z 
2025-08-18T20:00:04.5461027Z # api.models
2025-08-18T20:00:04.5461123Z 
2025-08-18T20:00:04.5461207Z <a id="api.roi_repository"></a>
2025-08-18T20:00:04.5461357Z 
2025-08-18T20:00:04.5461432Z # api.roi\_repository
2025-08-18T20:00:04.5461550Z 
2025-08-18T20:00:04.5461629Z <a id="api.main"></a>
2025-08-18T20:00:04.5461742Z 
2025-08-18T20:00:04.5461808Z # api.main
2025-08-18T20:00:04.5461912Z 
2025-08-18T20:00:04.5461992Z <a id="api.main.ready"></a>
2025-08-18T20:00:04.5462124Z 
2025-08-18T20:00:04.5462189Z #### ready
2025-08-18T20:00:04.5462287Z 
2025-08-18T20:00:04.5462360Z ```python
2025-08-18T20:00:04.5462628Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T20:00:04.5463069Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T20:00:04.5463431Z                                                                       str]
2025-08-18T20:00:04.5463664Z ```
2025-08-18T20:00:04.5463758Z 
2025-08-18T20:00:04.5463859Z Return 200 only when migrations are at head.
2025-08-18T20:00:04.5464035Z 
2025-08-18T20:00:04.5464113Z <a id="api.config"></a>
2025-08-18T20:00:04.5464246Z 
2025-08-18T20:00:04.5464312Z # api.config
2025-08-18T20:00:04.5464408Z 
2025-08-18T20:00:04.5464483Z <a id="etl"></a>
2025-08-18T20:00:04.5464585Z 
2025-08-18T20:00:04.5464649Z # etl
2025-08-18T20:00:04.5464737Z 
2025-08-18T20:00:04.5464828Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T20:00:04.5464978Z 
2025-08-18T20:00:04.5465052Z # etl.fba\_fee\_ingestor
2025-08-18T20:00:04.5465182Z 
2025-08-18T20:00:04.5465267Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T20:00:04.5465537Z 
2025-08-18T20:00:04.5465617Z # etl.sp\_fees\_ingestor
2025-08-18T20:00:04.5465738Z 
2025-08-18T20:00:04.5465821Z <a id="etl.keepa_ingestor"></a>
2025-08-18T20:00:04.5465980Z 
2025-08-18T20:00:04.5466053Z # etl.keepa\_ingestor
2025-08-18T20:00:04.5466169Z 
2025-08-18T20:00:04.5466248Z <a id="etl.db"></a>
2025-08-18T20:00:04.5466357Z 
2025-08-18T20:00:04.5466422Z # etl.db
2025-08-18T20:00:04.5466513Z 
2025-08-18T20:00:04.5466606Z <a id="etl.dialects.schemas"></a>
2025-08-18T20:00:04.5466934Z 
2025-08-18T20:00:04.5467030Z # etl.dialects.schemas
2025-08-18T20:00:04.5467161Z 
2025-08-18T20:00:04.5467273Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T20:00:04.5467462Z 
2025-08-18T20:00:04.5467554Z # etl.dialects.amazon\_reimbursements
2025-08-18T20:00:04.5467724Z 
2025-08-18T20:00:04.5467822Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T20:00:04.5467997Z 
2025-08-18T20:00:04.5468092Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T20:00:04.5468262Z 
2025-08-18T20:00:04.5468354Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T20:00:04.5468535Z 
2025-08-18T20:00:04.5468622Z # etl.dialects.amazon\_returns
2025-08-18T20:00:04.5468764Z 
2025-08-18T20:00:04.5468861Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T20:00:04.5469040Z 
2025-08-18T20:00:04.5469127Z # etl.dialects.amazon\_fee\_preview
2025-08-18T20:00:04.5469282Z 
2025-08-18T20:00:04.5469399Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T20:00:04.5469586Z 
2025-08-18T20:00:04.5469678Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T20:00:04.5469851Z 
2025-08-18T20:00:04.5469950Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T20:00:04.5470123Z 
2025-08-18T20:00:04.5470212Z # etl.dialects.amazon\_settlements
2025-08-18T20:00:04.5470370Z 
2025-08-18T20:00:04.5470447Z <a id="etl.dialects"></a>
2025-08-18T20:00:04.5470576Z 
2025-08-18T20:00:04.5470648Z # etl.dialects
2025-08-18T20:00:04.5470751Z 
2025-08-18T20:00:04.5470821Z <a id="ingest"></a>
2025-08-18T20:00:04.5471062Z 
2025-08-18T20:00:04.5471129Z # ingest
2025-08-18T20:00:04.5471217Z 
2025-08-18T20:00:04.5471302Z <a id="ingest.maintenance"></a>
2025-08-18T20:00:04.5471451Z 
2025-08-18T20:00:04.5471524Z # ingest.maintenance
2025-08-18T20:00:04.5471642Z 
2025-08-18T20:00:04.5471728Z <a id="ingest.copy_loader"></a>
2025-08-18T20:00:04.5471867Z 
2025-08-18T20:00:04.5471941Z # ingest.copy\_loader
2025-08-18T20:00:04.5472056Z 
2025-08-18T20:00:04.5472165Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T20:00:04.5472351Z 
2025-08-18T20:00:04.5472424Z #### copy\_df\_via\_temp
2025-08-18T20:00:04.5472552Z 
2025-08-18T20:00:04.5472617Z ```python
2025-08-18T20:00:04.5472795Z def copy_df_via_temp(engine: Engine,
2025-08-18T20:00:04.5473034Z                      df: pd.DataFrame,
2025-08-18T20:00:04.5473274Z                      target_table: str,
2025-08-18T20:00:04.5473492Z                      *,
2025-08-18T20:00:04.5473709Z                      target_schema: Optional[str] = None,
2025-08-18T20:00:04.5473978Z                      columns: Sequence[str],
2025-08-18T20:00:04.5474260Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T20:00:04.5474545Z                      analyze_after: bool = False,
2025-08-18T20:00:04.5474816Z                      connection: Any | None = None) -> int
2025-08-18T20:00:04.5475062Z ```
2025-08-18T20:00:04.5475148Z 
2025-08-18T20:00:04.5475305Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T20:00:04.5475542Z 
2025-08-18T20:00:04.5475636Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T20:00:04.5475797Z 
2025-08-18T20:00:04.5475879Z # ingest.tests.test\_smoke
2025-08-18T20:00:04.5476020Z 
2025-08-18T20:00:04.5476099Z <a id="ingest.tests"></a>
2025-08-18T20:00:04.5476225Z 
2025-08-18T20:00:04.5476299Z # ingest.tests
2025-08-18T20:00:04.5476404Z 
2025-08-18T20:00:04.5476491Z <a id="ingest.upload_router"></a>
2025-08-18T20:00:04.5476644Z 
2025-08-18T20:00:04.5476881Z # ingest.upload\_router
2025-08-18T20:00:04.5477098Z 
2025-08-18T20:00:04.5477193Z <a id="ingest.email_watcher"></a>
2025-08-18T20:00:04.5477769Z 
2025-08-18T20:00:04.5477919Z # ingest.email\_watcher
2025-08-18T20:00:04.5478159Z 
2025-08-18T20:00:04.5478333Z <a id="ingest.email_watcher.main"></a>
2025-08-18T20:00:04.5478662Z 
2025-08-18T20:00:04.5478783Z #### main
2025-08-18T20:00:04.5478956Z 
2025-08-18T20:00:04.5479031Z ```python
2025-08-18T20:00:04.5479214Z def main() -> dict[str, str]
2025-08-18T20:00:04.5479427Z ```
2025-08-18T20:00:04.5479514Z 
2025-08-18T20:00:04.5479662Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T20:00:04.5479901Z 
2025-08-18T20:00:04.5480037Z Returns {"status": "success"} when processing completes.
2025-08-18T20:00:04.5480250Z 
2025-08-18T20:00:04.5480337Z <a id="ingest.tasks"></a>
2025-08-18T20:00:04.5480466Z 
2025-08-18T20:00:04.5480535Z # ingest.tasks
2025-08-18T20:00:04.5480637Z 
2025-08-18T20:00:04.5480746Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T20:00:04.5480925Z 
2025-08-18T20:00:04.5481008Z #### task\_import\_file
2025-08-18T20:00:04.5481142Z 
2025-08-18T20:00:04.5481209Z ```python
2025-08-18T20:00:04.5481420Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T20:00:04.5481713Z def task_import_file(self: Any,
2025-08-18T20:00:04.5481934Z                      uri: str,
2025-08-18T20:00:04.5482157Z                      report_type: Optional[str] = None,
2025-08-18T20:00:04.5482436Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T20:00:04.5482702Z ```
2025-08-18T20:00:04.5482788Z 
2025-08-18T20:00:04.5482920Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T20:00:04.5483133Z 
2025-08-18T20:00:04.5483215Z <a id="ingest.celery_app"></a>
2025-08-18T20:00:04.5483355Z 
2025-08-18T20:00:04.5483437Z # ingest.celery\_app
2025-08-18T20:00:04.5483553Z 
2025-08-18T20:00:04.5483637Z <a id="ingest.ingest_router"></a>
2025-08-18T20:00:04.5483788Z 
2025-08-18T20:00:04.5483871Z # ingest.ingest\_router
2025-08-18T20:00:04.5483988Z 
2025-08-18T20:00:04.5484488Z <a id="logistics_etl"></a>
2025-08-18T20:00:04.5484652Z 
2025-08-18T20:00:04.5484724Z # logistics\_etl
2025-08-18T20:00:04.5484834Z 
2025-08-18T20:00:04.5484923Z Daily logistics ETL job.
2025-08-18T20:00:04.5485052Z 
2025-08-18T20:00:04.5485137Z <a id="logistics_etl.__main__"></a>
2025-08-18T20:00:04.5485297Z 
2025-08-18T20:00:04.5485382Z # logistics\_etl.\_\_main\_\_
2025-08-18T20:00:04.5485521Z 
2025-08-18T20:00:04.5485603Z <a id="logistics_etl.dsn"></a>
2025-08-18T20:00:04.5485747Z 
2025-08-18T20:00:04.5485822Z # logistics\_etl.dsn
2025-08-18T20:00:04.5485936Z 
2025-08-18T20:00:04.5486054Z Local DSN builder to avoid cross-service dependency.
2025-08-18T20:00:04.5486267Z 
2025-08-18T20:00:04.5486360Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T20:00:04.5486529Z 
2025-08-18T20:00:04.5486601Z #### build\_dsn
2025-08-18T20:00:04.5486705Z 
2025-08-18T20:00:04.5486972Z ```python
2025-08-18T20:00:04.5487205Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:00:04.5487429Z ```
2025-08-18T20:00:04.5487525Z 
2025-08-18T20:00:04.5487676Z Return a Postgres DSN assembled from environment variables.
2025-08-18T20:00:04.5487904Z 
2025-08-18T20:00:04.5488060Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T20:00:04.5488448Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T20:00:04.5488801Z error when any required variable is missing.
2025-08-18T20:00:04.5488980Z 
2025-08-18T20:00:04.5489075Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T20:00:04.5489252Z 
2025-08-18T20:00:04.5489337Z # logistics\_etl.tests.conftest
2025-08-18T20:00:04.5489481Z 
2025-08-18T20:00:04.5489590Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T20:00:04.5489783Z 
2025-08-18T20:00:04.5489874Z # logistics\_etl.tests.test\_repository
2025-08-18T20:00:04.5490038Z 
2025-08-18T20:00:04.5490137Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T20:00:04.5490307Z 
2025-08-18T20:00:04.5490392Z # logistics\_etl.tests.test\_cron
2025-08-18T20:00:04.5490549Z 
2025-08-18T20:00:04.5490652Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T20:00:04.5490961Z 
2025-08-18T20:00:04.5491053Z # logistics\_etl.tests.test\_imports
2025-08-18T20:00:04.5491209Z 
2025-08-18T20:00:04.5491303Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T20:00:04.5491476Z 
2025-08-18T20:00:04.5491568Z # logistics\_etl.tests.test\_smoke
2025-08-18T20:00:04.5491725Z 
2025-08-18T20:00:04.5491830Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T20:00:04.5492018Z 
2025-08-18T20:00:04.5492105Z # logistics\_etl.tests.test\_client
2025-08-18T20:00:04.5492263Z 
2025-08-18T20:00:04.5492359Z <a id="logistics_etl.tests"></a>
2025-08-18T20:00:04.5492507Z 
2025-08-18T20:00:04.5492581Z # logistics\_etl.tests
2025-08-18T20:00:04.5492702Z 
2025-08-18T20:00:04.5492791Z <a id="logistics_etl.flow"></a>
2025-08-18T20:00:04.5492936Z 
2025-08-18T20:00:04.5493012Z # logistics\_etl.flow
2025-08-18T20:00:04.5493137Z 
2025-08-18T20:00:04.5493222Z <a id="logistics_etl.client"></a>
2025-08-18T20:00:04.5493376Z 
2025-08-18T20:00:04.5493452Z # logistics\_etl.client
2025-08-18T20:00:04.5493586Z 
2025-08-18T20:00:04.5493666Z <a id="logistics_etl.cron"></a>
2025-08-18T20:00:04.5493809Z 
2025-08-18T20:00:04.5493887Z # logistics\_etl.cron
2025-08-18T20:00:04.5494001Z 
2025-08-18T20:00:04.5494083Z <a id="logistics_etl.db"></a>
2025-08-18T20:00:04.5494226Z 
2025-08-18T20:00:04.5494295Z # logistics\_etl.db
2025-08-18T20:00:04.5494404Z 
2025-08-18T20:00:04.5494494Z <a id="logistics_etl.repository"></a>
2025-08-18T20:00:04.5494661Z 
2025-08-18T20:00:04.5494744Z # logistics\_etl.repository
2025-08-18T20:00:04.5494879Z 
2025-08-18T20:00:04.5494957Z <a id="alert_bot"></a>
2025-08-18T20:00:04.5495072Z 
2025-08-18T20:00:04.5495140Z # alert\_bot
2025-08-18T20:00:04.5495243Z 
2025-08-18T20:00:04.5495330Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T20:00:04.5495494Z 
2025-08-18T20:00:04.5495576Z # alert\_bot.tests.test\_smoke
2025-08-18T20:00:04.5495723Z 
2025-08-18T20:00:04.5495801Z <a id="alert_bot.tests"></a>
2025-08-18T20:00:04.5496051Z 
2025-08-18T20:00:04.5496132Z # alert\_bot.tests
2025-08-18T20:00:04.5496240Z 
2025-08-18T20:00:04.5496320Z <a id="alert_bot.alert_bot"></a>
2025-08-18T20:00:04.5496461Z 
2025-08-18T20:00:04.5532838Z # alert\_bot.alert\_bot
2025-08-18T20:00:04.5533134Z 
2025-08-18T20:00:04.5533313Z <a id="alert_bot.rules"></a>
2025-08-18T20:00:04.5533649Z 
2025-08-18T20:00:04.5533804Z # alert\_bot.rules
2025-08-18T20:00:04.5534054Z 
2025-08-18T20:00:04.5534211Z <a id="common"></a>
2025-08-18T20:00:04.5534446Z 
2025-08-18T20:00:04.5534581Z # common
2025-08-18T20:00:04.5534780Z 
2025-08-18T20:00:04.5534940Z <a id="common.dsn"></a>
2025-08-18T20:00:04.5535203Z 
2025-08-18T20:00:04.5535347Z # common.dsn
2025-08-18T20:00:04.5535563Z 
2025-08-18T20:00:04.5535747Z <a id="common.dsn.build_dsn"></a>
2025-08-18T20:00:04.5536079Z 
2025-08-18T20:00:04.5536228Z #### build\_dsn
2025-08-18T20:00:04.5536446Z 
2025-08-18T20:00:04.5536598Z ```python
2025-08-18T20:00:04.5537125Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:00:04.5537431Z ```
2025-08-18T20:00:04.5537552Z 
2025-08-18T20:00:04.5537718Z Return a Postgres DSN, validating required variables.
2025-08-18T20:00:04.5537980Z 
2025-08-18T20:00:04.5538224Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T20:00:04.5538777Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T20:00:04.5539200Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T20:00:04.5539564Z missing.
2025-08-18T20:00:04.5539664Z 
2025-08-18T20:00:04.5539752Z <a id="common.models_vendor"></a>
2025-08-18T20:00:04.5539903Z 
2025-08-18T20:00:04.5539980Z # common.models\_vendor
2025-08-18T20:00:04.5540111Z 
2025-08-18T20:00:04.5540202Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T20:00:04.5540373Z 
2025-08-18T20:00:04.5540447Z ## Vendor Objects
2025-08-18T20:00:04.5540554Z 
2025-08-18T20:00:04.5540619Z ```python
2025-08-18T20:00:04.5540789Z class Vendor(Base)
2025-08-18T20:00:04.5540960Z ```
2025-08-18T20:00:04.5541056Z 
2025-08-18T20:00:04.5541302Z Vendor of inventory items.
2025-08-18T20:00:04.5541438Z 
2025-08-18T20:00:04.5541546Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T20:00:04.5541739Z 
2025-08-18T20:00:04.5541814Z ## VendorPrice Objects
2025-08-18T20:00:04.5541936Z 
2025-08-18T20:00:04.5542008Z ```python
2025-08-18T20:00:04.5542170Z class VendorPrice(Base)
2025-08-18T20:00:04.5542356Z ```
2025-08-18T20:00:04.5542439Z 
2025-08-18T20:00:04.5542544Z Association table linking vendors to pricing.
2025-08-18T20:00:04.5542731Z 
2025-08-18T20:00:04.5542807Z <a id="common.db_url"></a>
2025-08-18T20:00:04.5542935Z 
2025-08-18T20:00:04.5543006Z # common.db\_url
2025-08-18T20:00:04.5543124Z 
2025-08-18T20:00:04.5543209Z <a id="common.db_url.build_url"></a>
2025-08-18T20:00:04.5543365Z 
2025-08-18T20:00:04.5543437Z #### build\_url
2025-08-18T20:00:04.5543538Z 
2025-08-18T20:00:04.5543604Z ```python
2025-08-18T20:00:04.5543786Z def build_url(async_: bool = True) -> str
2025-08-18T20:00:04.5544017Z ```
2025-08-18T20:00:04.5544112Z 
2025-08-18T20:00:04.5544212Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:00:04.5544387Z 
2025-08-18T20:00:04.5544466Z <a id="common.keepa"></a>
2025-08-18T20:00:04.5544603Z 
2025-08-18T20:00:04.5544673Z # common.keepa
2025-08-18T20:00:04.5544776Z 
2025-08-18T20:00:04.5544855Z <a id="common.llm"></a>
2025-08-18T20:00:04.5544973Z 
2025-08-18T20:00:04.5545037Z # common.llm
2025-08-18T20:00:04.5545137Z 
2025-08-18T20:00:04.5545217Z <a id="common.settings"></a>
2025-08-18T20:00:04.5545353Z 
2025-08-18T20:00:04.5545422Z # common.settings
2025-08-18T20:00:04.5545533Z 
2025-08-18T20:00:04.5545604Z <a id="common.db"></a>
2025-08-18T20:00:04.5545719Z 
2025-08-18T20:00:04.5545788Z # common.db
2025-08-18T20:00:04.5545879Z 
2025-08-18T20:00:04.5545971Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T20:00:04.5546149Z 
2025-08-18T20:00:04.5546226Z #### build\_sqlalchemy\_url
2025-08-18T20:00:04.5546358Z 
2025-08-18T20:00:04.5546421Z ```python
2025-08-18T20:00:04.5546716Z def build_sqlalchemy_url() -> str
2025-08-18T20:00:04.5547138Z ```
2025-08-18T20:00:04.5547231Z 
2025-08-18T20:00:04.5547330Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:00:04.5547504Z 
2025-08-18T20:00:04.5547600Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T20:00:04.5547767Z 
2025-08-18T20:00:04.5547842Z #### build\_asyncpg\_dsn
2025-08-18T20:00:04.5547974Z 
2025-08-18T20:00:04.5548038Z ```python
2025-08-18T20:00:04.5548209Z def build_asyncpg_dsn() -> str
2025-08-18T20:00:04.5548411Z ```
2025-08-18T20:00:04.5548501Z 
2025-08-18T20:00:04.5548628Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:00:04.5548850Z 
2025-08-18T20:00:04.5548936Z <a id="common.db.refresh_mvs"></a>
2025-08-18T20:00:04.5549088Z 
2025-08-18T20:00:04.5549159Z #### refresh\_mvs
2025-08-18T20:00:04.5549264Z 
2025-08-18T20:00:04.5549327Z ```python
2025-08-18T20:00:04.5549528Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:00:04.5549776Z ```
2025-08-18T20:00:04.5549870Z 
2025-08-18T20:00:04.5550007Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:00:04.5550229Z 
2025-08-18T20:00:04.5550312Z <a id="common.config"></a>
2025-08-18T20:00:04.5550441Z 
2025-08-18T20:00:04.5550510Z # common.config
2025-08-18T20:00:04.5550613Z 
2025-08-18T20:00:04.5550695Z <a id="common.base"></a>
2025-08-18T20:00:04.5550817Z 
2025-08-18T20:00:04.5550882Z # common.base
2025-08-18T20:00:04.5550986Z 
2025-08-18T20:00:04.5551069Z <a id="common.base.Base"></a>
2025-08-18T20:00:04.5551209Z 
2025-08-18T20:00:04.5551282Z ## Base Objects
2025-08-18T20:00:04.5551385Z 
2025-08-18T20:00:04.5551448Z ```python
2025-08-18T20:00:04.5551623Z class Base(DeclarativeBase)
2025-08-18T20:00:04.5551815Z ```
2025-08-18T20:00:04.5551897Z 
2025-08-18T20:00:04.5551987Z Base class for SQLAlchemy models.
2025-08-18T20:00:04.5552135Z 
2025-08-18T20:00:04.5552209Z <a id="repricer"></a>
2025-08-18T20:00:04.5552340Z 
2025-08-18T20:00:04.5552404Z # repricer
2025-08-18T20:00:04.5552497Z 
2025-08-18T20:00:04.5552597Z <a id="repricer.app.schemas"></a>
2025-08-18T20:00:04.5552877Z 
2025-08-18T20:00:04.5552958Z # repricer.app.schemas
2025-08-18T20:00:04.5553080Z 
2025-08-18T20:00:04.5553172Z <a id="repricer.app.deps"></a>
2025-08-18T20:00:04.5553315Z 
2025-08-18T20:00:04.5553391Z # repricer.app.deps
2025-08-18T20:00:04.5553510Z 
2025-08-18T20:00:04.5553627Z Placeholder module for Keepa / SP-API clients.
2025-08-18T20:00:04.5553814Z 
2025-08-18T20:00:04.5553908Z <a id="repricer.app.logic"></a>
2025-08-18T20:00:04.5554052Z 
2025-08-18T20:00:04.5554128Z # repricer.app.logic
2025-08-18T20:00:04.5554244Z 
2025-08-18T20:00:04.5554351Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T20:00:04.5554526Z 
2025-08-18T20:00:04.5554594Z #### MIN\_MARGIN
2025-08-18T20:00:04.5554706Z 
2025-08-18T20:00:04.5554769Z 15 % ROI
2025-08-18T20:00:04.5554857Z 
2025-08-18T20:00:04.5554965Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T20:00:04.5555151Z 
2025-08-18T20:00:04.5555221Z #### compute\_price
2025-08-18T20:00:04.5555332Z 
2025-08-18T20:00:04.5555405Z ```python
2025-08-18T20:00:04.5555647Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T20:00:04.5555954Z ```
2025-08-18T20:00:04.5556036Z 
2025-08-18T20:00:04.5556142Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T20:00:04.5556428Z Replace with real competitive logic later.
2025-08-18T20:00:04.5556598Z 
2025-08-18T20:00:04.5556682Z <a id="repricer.app.main"></a>
2025-08-18T20:00:04.5557035Z 
2025-08-18T20:00:04.5557113Z # repricer.app.main
2025-08-18T20:00:04.5557224Z 
2025-08-18T20:00:04.5557309Z <a id="repricer.app"></a>
2025-08-18T20:00:04.5557438Z 
2025-08-18T20:00:04.5557505Z # repricer.app
2025-08-18T20:00:04.5557609Z 
2025-08-18T20:00:04.5557701Z <a id="repricer.tests.test_imports"></a>
2025-08-18T20:00:04.5557867Z 
2025-08-18T20:00:04.5557950Z # repricer.tests.test\_imports
2025-08-18T20:00:04.5558096Z 
2025-08-18T20:00:04.5558186Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T20:00:04.5558349Z 
2025-08-18T20:00:04.5558615Z # repricer.tests.test\_smoke
2025-08-18T20:00:04.5558769Z 
2025-08-18T20:00:04.5558847Z <a id="repricer.tests"></a>
2025-08-18T20:00:04.5558985Z 
2025-08-18T20:00:04.5559052Z # repricer.tests
2025-08-18T20:00:04.5559158Z 
2025-08-18T20:00:04.5559222Z <a id="db"></a>
2025-08-18T20:00:04.5559328Z 
2025-08-18T20:00:04.5559388Z # db
2025-08-18T20:00:04.5559473Z 
2025-08-18T20:00:04.5559555Z <a id="db.utils.views"></a>
2025-08-18T20:00:04.5559685Z 
2025-08-18T20:00:04.5559754Z # db.utils.views
2025-08-18T20:00:04.5559857Z 
2025-08-18T20:00:04.5559958Z <a id="db.utils.views.replace_view"></a>
2025-08-18T20:00:04.5560127Z 
2025-08-18T20:00:04.5560197Z #### replace\_view
2025-08-18T20:00:04.5560309Z 
2025-08-18T20:00:04.5560372Z ```python
2025-08-18T20:00:04.5560569Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T20:00:04.5560819Z ```
2025-08-18T20:00:04.5560903Z 
2025-08-18T20:00:04.5561000Z Drop and recreate a SQL view atomically.
2025-08-18T20:00:04.5561166Z 
2025-08-18T20:00:04.5561243Z <a id="db.utils"></a>
2025-08-18T20:00:04.5561374Z 
2025-08-18T20:00:04.5561440Z # db.utils
2025-08-18T20:00:04.5561530Z 
2025-08-18T20:00:04.5561611Z <a id="price_importer"></a>
2025-08-18T20:00:04.5561749Z 
2025-08-18T20:00:04.5561818Z # price\_importer
2025-08-18T20:00:04.5561927Z 
2025-08-18T20:00:04.5562038Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T20:00:04.5562222Z 
2025-08-18T20:00:04.5562313Z # price\_importer.services\_common.dsn
2025-08-18T20:00:04.5562476Z 
2025-08-18T20:00:04.5562609Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T20:00:04.5562818Z 
2025-08-18T20:00:04.5562886Z #### build\_dsn
2025-08-18T20:00:04.5562992Z 
2025-08-18T20:00:04.5563055Z ```python
2025-08-18T20:00:04.5563229Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:00:04.5563454Z ```
2025-08-18T20:00:04.5563538Z 
2025-08-18T20:00:04.5563612Z Return safe DSN.
2025-08-18T20:00:04.5563719Z 
2025-08-18T20:00:04.5564072Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T20:00:04.5564294Z 
2025-08-18T20:00:04.5564552Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T20:00:04.5564763Z 
2025-08-18T20:00:04.5564878Z # price\_importer.services\_common.models\_vendor
2025-08-18T20:00:04.5565086Z 
2025-08-18T20:00:04.5565203Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T20:00:04.5565399Z 
2025-08-18T20:00:04.5565506Z # price\_importer.services\_common.db\_url
2025-08-18T20:00:04.5565683Z 
2025-08-18T20:00:04.5565822Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T20:00:04.5566052Z 
2025-08-18T20:00:04.5566119Z #### build\_url
2025-08-18T20:00:04.5566220Z 
2025-08-18T20:00:04.5566284Z ```python
2025-08-18T20:00:04.5566472Z def build_url(async_: bool = True) -> str
2025-08-18T20:00:04.5566708Z ```
2025-08-18T20:00:04.5566904Z 
2025-08-18T20:00:04.5567003Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:00:04.5567180Z 
2025-08-18T20:00:04.5567294Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T20:00:04.5567485Z 
2025-08-18T20:00:04.5567585Z # price\_importer.services\_common.keepa
2025-08-18T20:00:04.5567759Z 
2025-08-18T20:00:04.5567863Z <a id="price_importer.services_common.llm"></a>
2025-08-18T20:00:04.5568049Z 
2025-08-18T20:00:04.5568148Z # price\_importer.services\_common.llm
2025-08-18T20:00:04.5568313Z 
2025-08-18T20:00:04.5568432Z <a id="price_importer.services_common.settings"></a>
2025-08-18T20:00:04.5568628Z 
2025-08-18T20:00:04.5568735Z # price\_importer.services\_common.settings
2025-08-18T20:00:04.5568909Z 
2025-08-18T20:00:04.5569011Z <a id="price_importer.services_common.db"></a>
2025-08-18T20:00:04.5569196Z 
2025-08-18T20:00:04.5569286Z # price\_importer.services\_common.db
2025-08-18T20:00:04.5569447Z 
2025-08-18T20:00:04.5569608Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T20:00:04.5569850Z 
2025-08-18T20:00:04.5569929Z #### build\_sqlalchemy\_url
2025-08-18T20:00:04.5570068Z 
2025-08-18T20:00:04.5570132Z ```python
2025-08-18T20:00:04.5570311Z def build_sqlalchemy_url() -> str
2025-08-18T20:00:04.5570649Z ```
2025-08-18T20:00:04.5570735Z 
2025-08-18T20:00:04.5570829Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:00:04.5571008Z 
2025-08-18T20:00:04.5571154Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T20:00:04.5571385Z 
2025-08-18T20:00:04.5571466Z #### build\_asyncpg\_dsn
2025-08-18T20:00:04.5571592Z 
2025-08-18T20:00:04.5571656Z ```python
2025-08-18T20:00:04.5571831Z def build_asyncpg_dsn() -> str
2025-08-18T20:00:04.5572029Z ```
2025-08-18T20:00:04.5572117Z 
2025-08-18T20:00:04.5572246Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:00:04.5572456Z 
2025-08-18T20:00:04.5572591Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T20:00:04.5572803Z 
2025-08-18T20:00:04.5572873Z #### refresh\_mvs
2025-08-18T20:00:04.5572979Z 
2025-08-18T20:00:04.5573047Z ```python
2025-08-18T20:00:04.5573240Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:00:04.5573504Z ```
2025-08-18T20:00:04.5573586Z 
2025-08-18T20:00:04.5573733Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:00:04.5573957Z 
2025-08-18T20:00:04.5574055Z <a id="price_importer.services_common"></a>
2025-08-18T20:00:04.5574228Z 
2025-08-18T20:00:04.5574321Z # price\_importer.services\_common
2025-08-18T20:00:04.5574477Z 
2025-08-18T20:00:04.5574581Z <a id="price_importer.services_common.base"></a>
2025-08-18T20:00:04.5574775Z 
2025-08-18T20:00:04.5574867Z # price\_importer.services\_common.base
2025-08-18T20:00:04.5575034Z 
2025-08-18T20:00:04.5575130Z <a id="price_importer.normaliser"></a>
2025-08-18T20:00:04.5575301Z 
2025-08-18T20:00:04.5575385Z # price\_importer.normaliser
2025-08-18T20:00:04.5575525Z 
2025-08-18T20:00:04.5575638Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T20:00:04.5575823Z 
2025-08-18T20:00:04.5575914Z # price\_importer.common.models\_vendor
2025-08-18T20:00:04.5576085Z 
2025-08-18T20:00:04.5576178Z <a id="price_importer.common.db_url"></a>
2025-08-18T20:00:04.5576356Z 
2025-08-18T20:00:04.5576560Z # price\_importer.common.db\_url
2025-08-18T20:00:04.5576718Z 
2025-08-18T20:00:04.5577027Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T20:00:04.5577227Z 
2025-08-18T20:00:04.5577300Z #### make\_dsn
2025-08-18T20:00:04.5577398Z 
2025-08-18T20:00:04.5577464Z ```python
2025-08-18T20:00:04.5577644Z def make_dsn(async_: bool = False) -> str
2025-08-18T20:00:04.5577873Z ```
2025-08-18T20:00:04.5577962Z 
2025-08-18T20:00:04.5578083Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T20:00:04.5578285Z 
2025-08-18T20:00:04.5578395Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T20:00:04.5578599Z 
2025-08-18T20:00:04.5578665Z #### build\_url
2025-08-18T20:00:04.5578766Z 
2025-08-18T20:00:04.5578836Z ```python
2025-08-18T20:00:04.5579010Z def build_url(async_: bool = False) -> str
2025-08-18T20:00:04.5579243Z ```
2025-08-18T20:00:04.5579324Z 
2025-08-18T20:00:04.5579445Z Return Postgres DSN built from environment variables.
2025-08-18T20:00:04.5579661Z 
2025-08-18T20:00:04.5579755Z <a id="price_importer.common"></a>
2025-08-18T20:00:04.5579911Z 
2025-08-18T20:00:04.5579998Z # price\_importer.common
2025-08-18T20:00:04.5580123Z 
2025-08-18T20:00:04.5580213Z <a id="price_importer.common.base"></a>
2025-08-18T20:00:04.5580382Z 
2025-08-18T20:00:04.5580473Z # price\_importer.common.base
2025-08-18T20:00:04.5580614Z 
2025-08-18T20:00:04.5580713Z <a id="price_importer.tests.conftest"></a>
2025-08-18T20:00:04.5580896Z 
2025-08-18T20:00:04.5580983Z # price\_importer.tests.conftest
2025-08-18T20:00:04.5581131Z 
2025-08-18T20:00:04.5581235Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T20:00:04.5581413Z 
2025-08-18T20:00:04.5581500Z # price\_importer.tests.test\_reader
2025-08-18T20:00:04.5581660Z 
2025-08-18T20:00:04.5581768Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T20:00:04.5581950Z 
2025-08-18T20:00:04.5582040Z # price\_importer.tests.test\_imports
2025-08-18T20:00:04.5582205Z 
2025-08-18T20:00:04.5582434Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T20:00:04.5582615Z 
2025-08-18T20:00:04.5582710Z # price\_importer.tests.test\_smoke
2025-08-18T20:00:04.5582867Z 
2025-08-18T20:00:04.5582972Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T20:00:04.5583161Z 
2025-08-18T20:00:04.5583262Z # price\_importer.tests.test\_normaliser
2025-08-18T20:00:04.5583431Z 
2025-08-18T20:00:04.5583519Z <a id="price_importer.tests"></a>
2025-08-18T20:00:04.5583677Z 
2025-08-18T20:00:04.5583754Z # price\_importer.tests
2025-08-18T20:00:04.5583876Z 
2025-08-18T20:00:04.5583968Z <a id="price_importer.reader"></a>
2025-08-18T20:00:04.5584149Z 
2025-08-18T20:00:04.5584228Z # price\_importer.reader
2025-08-18T20:00:04.5584357Z 
2025-08-18T20:00:04.5584454Z <a id="price_importer.repository"></a>
2025-08-18T20:00:04.5584619Z 
2025-08-18T20:00:04.5584737Z # price\_importer.repository
2025-08-18T20:00:04.5584883Z 
2025-08-18T20:00:04.5584968Z <a id="price_importer.import"></a>
2025-08-18T20:00:04.5585119Z 
2025-08-18T20:00:04.5585207Z # price\_importer.import
2025-08-18T20:00:04.5585337Z 
2025-08-18T20:00:04.5585408Z <a id="fees_h10"></a>
2025-08-18T20:00:04.5585522Z 
2025-08-18T20:00:04.5585594Z # fees\_h10
2025-08-18T20:00:04.5585687Z 
2025-08-18T20:00:04.5585765Z <a id="fees_h10.worker"></a>
2025-08-18T20:00:04.5585904Z 
2025-08-18T20:00:04.5585972Z # fees\_h10.worker
2025-08-18T20:00:04.5586077Z 
2025-08-18T20:00:04.5586175Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T20:00:04.5586361Z 
2025-08-18T20:00:04.5586435Z #### list\_active\_asins
2025-08-18T20:00:04.5586555Z 
2025-08-18T20:00:04.5586625Z ```python
2025-08-18T20:00:04.5586898Z def list_active_asins() -> list[str]
2025-08-18T20:00:04.5587118Z ```
2025-08-18T20:00:04.5587200Z 
2025-08-18T20:00:04.5587316Z Return known ASINs or an empty list if unavailable.
2025-08-18T20:00:04.5587520Z 
2025-08-18T20:00:04.5587606Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T20:00:04.5587767Z 
2025-08-18T20:00:04.5587852Z # fees\_h10.tests.test\_smoke
2025-08-18T20:00:04.5587995Z 
2025-08-18T20:00:04.5588188Z <a id="fees_h10.tests"></a>
2025-08-18T20:00:04.5588321Z 
2025-08-18T20:00:04.5588396Z # fees\_h10.tests
2025-08-18T20:00:04.5588499Z 
2025-08-18T20:00:04.5588583Z <a id="fees_h10.client"></a>
2025-08-18T20:00:04.5588722Z 
2025-08-18T20:00:04.5588792Z # fees\_h10.client
2025-08-18T20:00:04.5588896Z 
2025-08-18T20:00:04.5588984Z <a id="fees_h10.repository"></a>
2025-08-18T20:00:04.5589128Z 
2025-08-18T20:00:04.5589202Z # fees\_h10.repository
2025-08-18T20:00:04.5589319Z 
2025-08-18T20:00:04.5589396Z <a id="emailer"></a>
2025-08-18T20:00:04.5589509Z 
2025-08-18T20:00:04.5589572Z # emailer
2025-08-18T20:00:04.5589670Z 
2025-08-18T20:00:04.5589772Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T20:00:04.5589955Z 
2025-08-18T20:00:04.5590048Z # emailer.tests.test\_import\_emailer
2025-08-18T20:00:04.5590216Z 
2025-08-18T20:00:04.5590305Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T20:00:04.5590462Z 
2025-08-18T20:00:04.5590551Z # emailer.tests.test\_smoke
2025-08-18T20:00:04.5590695Z 
2025-08-18T20:00:04.5590776Z <a id="emailer.tests"></a>
2025-08-18T20:00:04.5590913Z 
2025-08-18T20:00:04.5590981Z # emailer.tests
2025-08-18T20:00:04.5591086Z 
2025-08-18T20:00:04.5591171Z <a id="emailer.generate_body"></a>
2025-08-18T20:00:04.5591331Z 
2025-08-18T20:00:04.5591409Z # emailer.generate\_body
2025-08-18T20:00:04.5591534Z 
2025-08-18T20:00:04.5591613Z <a id="llm_server"></a>
2025-08-18T20:00:04.5591731Z 
2025-08-18T20:00:04.5591797Z # llm\_server
2025-08-18T20:00:04.5591901Z 
2025-08-18T20:00:04.5591980Z <a id="llm_server.app"></a>
2025-08-18T20:00:04.5592112Z 
2025-08-18T20:00:04.5592179Z # llm\_server.app
2025-08-18T20:00:04.5592290Z 
