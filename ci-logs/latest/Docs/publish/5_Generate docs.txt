2025-08-18T15:44:18.1635173Z ##[group]Run pydoc-markdown
2025-08-18T15:44:18.1635715Z [36;1mpydoc-markdown[0m
2025-08-18T15:44:18.1676992Z shell: /usr/bin/bash -e {0}
2025-08-18T15:44:18.1677234Z env:
2025-08-18T15:44:18.1677471Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T15:44:18.1677871Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T15:44:18.1678249Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T15:44:18.1678578Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T15:44:18.1678911Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T15:44:18.1679242Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T15:44:18.1679524Z ##[endgroup]
2025-08-18T15:44:18.5315807Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T15:44:18.5316802Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T15:44:18.5317266Z In "pydoc-markdown.yml"
2025-08-18T15:44:18.5317695Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T15:44:18.5318328Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T15:44:18.5319065Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T15:44:18.5319562Z 
2025-08-18T15:44:18.8467301Z <a id="__init__"></a>
2025-08-18T15:44:18.8467663Z 
2025-08-18T15:44:18.8467797Z # \_\_init\_\_
2025-08-18T15:44:18.8467985Z 
2025-08-18T15:44:18.8468104Z <a id="api"></a>
2025-08-18T15:44:18.8468298Z 
2025-08-18T15:44:18.8468416Z # api
2025-08-18T15:44:18.8468575Z 
2025-08-18T15:44:18.8468719Z <a id="api.errors"></a>
2025-08-18T15:44:18.8468953Z 
2025-08-18T15:44:18.8469076Z # api.errors
2025-08-18T15:44:18.8469252Z 
2025-08-18T15:44:18.8469420Z <a id="api.tests.test_errors_json"></a>
2025-08-18T15:44:18.8469728Z 
2025-08-18T15:44:18.8469877Z # api.tests.test\_errors\_json
2025-08-18T15:44:18.8470130Z 
2025-08-18T15:44:18.8470282Z <a id="api.tests.test_llm"></a>
2025-08-18T15:44:18.8470531Z 
2025-08-18T15:44:18.8471004Z # api.tests.test\_llm
2025-08-18T15:44:18.8471247Z 
2025-08-18T15:44:18.8471394Z <a id="api.tests.test_cors"></a>
2025-08-18T15:44:18.8471652Z 
2025-08-18T15:44:18.8471782Z # api.tests.test\_cors
2025-08-18T15:44:18.8472003Z 
2025-08-18T15:44:18.8472161Z <a id="api.tests.test_imports"></a>
2025-08-18T15:44:18.8472443Z 
2025-08-18T15:44:18.8472596Z # api.tests.test\_imports
2025-08-18T15:44:18.8472830Z 
2025-08-18T15:44:18.8472987Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T15:44:18.8473285Z 
2025-08-18T15:44:18.8473427Z # api.tests.test\_rate\_limit
2025-08-18T15:44:18.8473681Z 
2025-08-18T15:44:18.8473857Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T15:44:18.8474177Z 
2025-08-18T15:44:18.8474292Z #### app
2025-08-18T15:44:18.8474453Z 
2025-08-18T15:44:18.8474573Z noqa: E402
2025-08-18T15:44:18.8474733Z 
2025-08-18T15:44:18.8474888Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T15:44:18.8475184Z 
2025-08-18T15:44:18.8475328Z # api.tests.test\_entrypoint
2025-08-18T15:44:18.8475787Z 
2025-08-18T15:44:18.8475954Z <a id="api.tests.test_health"></a>
2025-08-18T15:44:18.8476237Z 
2025-08-18T15:44:18.8476375Z # api.tests.test\_health
2025-08-18T15:44:18.8476601Z 
2025-08-18T15:44:18.8476750Z <a id="api.logging_config"></a>
2025-08-18T15:44:18.8477002Z 
2025-08-18T15:44:18.8477130Z # api.logging\_config
2025-08-18T15:44:18.8477346Z 
2025-08-18T15:44:18.8477489Z <a id="api.migrations.env"></a>
2025-08-18T15:44:18.8477741Z 
2025-08-18T15:44:18.8477877Z # api.migrations.env
2025-08-18T15:44:18.8478095Z 
2025-08-18T15:44:18.8478310Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T15:44:18.8478671Z 
2025-08-18T15:44:18.8478873Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T15:44:18.8479252Z 
2025-08-18T15:44:18.8479450Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T15:44:18.8479830Z 
2025-08-18T15:44:18.8480003Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T15:44:18.8480307Z 
2025-08-18T15:44:18.8480585Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T15:44:18.8481388Z 
2025-08-18T15:44:18.8481648Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T15:44:18.8482035Z 
2025-08-18T15:44:18.8482274Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T15:44:18.8482635Z 
2025-08-18T15:44:18.8482827Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T15:44:18.8483166Z 
2025-08-18T15:44:18.8483380Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T15:44:18.8483730Z 
2025-08-18T15:44:18.8483915Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T15:44:18.8484294Z 
2025-08-18T15:44:18.8484515Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T15:44:18.8484882Z 
2025-08-18T15:44:18.8485088Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T15:44:18.8485618Z 
2025-08-18T15:44:18.8485843Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T15:44:18.8486209Z 
2025-08-18T15:44:18.8486403Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T15:44:18.8486756Z 
2025-08-18T15:44:18.8486986Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T15:44:18.8487347Z 
2025-08-18T15:44:18.8487543Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T15:44:18.8487876Z 
2025-08-18T15:44:18.8488140Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T15:44:18.8488538Z 
2025-08-18T15:44:18.8488763Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T15:44:18.8489126Z 
2025-08-18T15:44:18.8489361Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T15:44:18.8489721Z 
2025-08-18T15:44:18.8489925Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T15:44:18.8490265Z 
2025-08-18T15:44:18.8490513Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T15:44:18.8490898Z 
2025-08-18T15:44:18.8491112Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T15:44:18.8491458Z 
2025-08-18T15:44:18.8491652Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T15:44:18.8492235Z 
2025-08-18T15:44:18.8492395Z # api.migrations.versions.0001\_baseline
2025-08-18T15:44:18.8492766Z 
2025-08-18T15:44:18.8492963Z <a id="api.migrations.versions"></a>
2025-08-18T15:44:18.8493254Z 
2025-08-18T15:44:18.8493404Z # api.migrations.versions
2025-08-18T15:44:18.8493646Z 
2025-08-18T15:44:18.8493785Z <a id="api.migrations"></a>
2025-08-18T15:44:18.8494022Z 
2025-08-18T15:44:18.8494145Z # api.migrations
2025-08-18T15:44:18.8494344Z 
2025-08-18T15:44:18.8494468Z <a id="api.db"></a>
2025-08-18T15:44:18.8494665Z 
2025-08-18T15:44:18.8494789Z # api.db
2025-08-18T15:44:18.8494951Z 
2025-08-18T15:44:18.8495098Z <a id="api.routes.stats"></a>
2025-08-18T15:44:18.8495348Z 
2025-08-18T15:44:18.8495684Z # api.routes.stats
2025-08-18T15:44:18.8495892Z 
2025-08-18T15:44:18.8496046Z <a id="api.routes.stats.kpi"></a>
2025-08-18T15:44:18.8496331Z 
2025-08-18T15:44:18.8496443Z #### kpi
2025-08-18T15:44:18.8496599Z 
2025-08-18T15:44:18.8496724Z ```python
2025-08-18T15:44:18.8497065Z @router.get("/stats/kpi")
2025-08-18T15:44:18.8497513Z def kpi() -> List[Dict[str, int]]
2025-08-18T15:44:18.8497869Z ```
2025-08-18T15:44:18.8498047Z 
2025-08-18T15:44:18.8498185Z Return KPI metrics (mock).
2025-08-18T15:44:18.8498490Z 
2025-08-18T15:44:18.8498675Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T15:44:18.8498985Z 
2025-08-18T15:44:18.8499113Z #### roi\_by\_vendor
2025-08-18T15:44:18.8499321Z 
2025-08-18T15:44:18.8499435Z ```python
2025-08-18T15:44:18.8499732Z @router.get("/stats/roi_by_vendor")
2025-08-18T15:44:18.8500168Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T15:44:18.8500566Z ```
2025-08-18T15:44:18.8500723Z 
2025-08-18T15:44:18.8500865Z Return ROI percent by vendor.
2025-08-18T15:44:18.8501119Z 
2025-08-18T15:44:18.8501295Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T15:44:18.8501596Z 
2025-08-18T15:44:18.8501713Z #### roi\_trend
2025-08-18T15:44:18.8501901Z 
2025-08-18T15:44:18.8502012Z ```python
2025-08-18T15:44:18.8502303Z @router.get("/stats/roi_trend")
2025-08-18T15:44:18.8503011Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T15:44:18.8503465Z ```
2025-08-18T15:44:18.8503626Z 
2025-08-18T15:44:18.8503762Z Return 30-day ROI trend.
2025-08-18T15:44:18.8504016Z 
2025-08-18T15:44:18.8504162Z <a id="api.routes.roi"></a>
2025-08-18T15:44:18.8504406Z 
2025-08-18T15:44:18.8504529Z # api.routes.roi
2025-08-18T15:44:18.8504717Z 
2025-08-18T15:44:18.8504871Z <a id="api.routes.health"></a>
2025-08-18T15:44:18.8505118Z 
2025-08-18T15:44:18.8505245Z # api.routes.health
2025-08-18T15:44:18.8505635Z 
2025-08-18T15:44:18.8505808Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T15:44:18.8506107Z 
2025-08-18T15:44:18.8506229Z #### MAX\_SKEW
2025-08-18T15:44:18.8506402Z 
2025-08-18T15:44:18.8506516Z seconds
2025-08-18T15:44:18.8506667Z 
2025-08-18T15:44:18.8506833Z <a id="api.routes.health.health"></a>
2025-08-18T15:44:18.8507125Z 
2025-08-18T15:44:18.8507234Z #### health
2025-08-18T15:44:18.8507404Z 
2025-08-18T15:44:18.8507519Z ```python
2025-08-18T15:44:18.8507878Z @router.get("/health", include_in_schema=False)
2025-08-18T15:44:18.8508557Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T15:44:18.8509149Z ```
2025-08-18T15:44:18.8509298Z 
2025-08-18T15:44:18.8509504Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T15:44:18.8509856Z 
2025-08-18T15:44:18.8510025Z <a id="api.routes.repository"></a>
2025-08-18T15:44:18.8510304Z 
2025-08-18T15:44:18.8510446Z # api.routes.repository
2025-08-18T15:44:18.8510685Z 
2025-08-18T15:44:18.8510811Z <a id="api.routes"></a>
2025-08-18T15:44:18.8511006Z 
2025-08-18T15:44:18.8511122Z # api.routes
2025-08-18T15:44:18.8511279Z 
2025-08-18T15:44:18.8511407Z <a id="api.models.fee"></a>
2025-08-18T15:44:18.8511625Z 
2025-08-18T15:44:18.8511746Z # api.models.fee
2025-08-18T15:44:18.8511929Z 
2025-08-18T15:44:18.8512081Z <a id="api.models"></a>
2025-08-18T15:44:18.8512291Z 
2025-08-18T15:44:18.8512404Z # api.models
2025-08-18T15:44:18.8512576Z 
2025-08-18T15:44:18.8512954Z <a id="api.roi_repository"></a>
2025-08-18T15:44:18.8513306Z 
2025-08-18T15:44:18.8513440Z # api.roi\_repository
2025-08-18T15:44:18.8513655Z 
2025-08-18T15:44:18.8513781Z <a id="api.main"></a>
2025-08-18T15:44:18.8513977Z 
2025-08-18T15:44:18.8514090Z # api.main
2025-08-18T15:44:18.8514264Z 
2025-08-18T15:44:18.8514400Z <a id="api.main.ready"></a>
2025-08-18T15:44:18.8514635Z 
2025-08-18T15:44:18.8514753Z #### ready
2025-08-18T15:44:18.8514910Z 
2025-08-18T15:44:18.8515025Z ```python
2025-08-18T15:44:18.8515665Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T15:44:18.8516420Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T15:44:18.8517039Z                                                                       str]
2025-08-18T15:44:18.8517450Z ```
2025-08-18T15:44:18.8517603Z 
2025-08-18T15:44:18.8517780Z Return 200 only when migrations are at head.
2025-08-18T15:44:18.8518094Z 
2025-08-18T15:44:18.8518235Z <a id="api.config"></a>
2025-08-18T15:44:18.8518461Z 
2025-08-18T15:44:18.8518587Z # api.config
2025-08-18T15:44:18.8518766Z 
2025-08-18T15:44:18.8518879Z <a id="etl"></a>
2025-08-18T15:44:18.8519060Z 
2025-08-18T15:44:18.8519166Z # etl
2025-08-18T15:44:18.8519328Z 
2025-08-18T15:44:18.8519470Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T15:44:18.8519734Z 
2025-08-18T15:44:18.8519874Z # etl.fba\_fee\_ingestor
2025-08-18T15:44:18.8520093Z 
2025-08-18T15:44:18.8520236Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T15:44:18.8520500Z 
2025-08-18T15:44:18.8520631Z # etl.sp\_fees\_ingestor
2025-08-18T15:44:18.8520847Z 
2025-08-18T15:44:18.8520986Z <a id="etl.keepa_ingestor"></a>
2025-08-18T15:44:18.8521244Z 
2025-08-18T15:44:18.8521372Z # etl.keepa\_ingestor
2025-08-18T15:44:18.8521573Z 
2025-08-18T15:44:18.8521698Z <a id="etl.db"></a>
2025-08-18T15:44:18.8521888Z 
2025-08-18T15:44:18.8521997Z # etl.db
2025-08-18T15:44:18.8522150Z 
2025-08-18T15:44:18.8522304Z <a id="etl.dialects.schemas"></a>
2025-08-18T15:44:18.8522564Z 
2025-08-18T15:44:18.8522704Z # etl.dialects.schemas
2025-08-18T15:44:18.8523149Z 
2025-08-18T15:44:18.8523337Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T15:44:18.8523664Z 
2025-08-18T15:44:18.8523831Z # etl.dialects.amazon\_reimbursements
2025-08-18T15:44:18.8524121Z 
2025-08-18T15:44:18.8524290Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T15:44:18.8524593Z 
2025-08-18T15:44:18.8524753Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T15:44:18.8525030Z 
2025-08-18T15:44:18.8525193Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T15:44:18.8525676Z 
2025-08-18T15:44:18.8525831Z # etl.dialects.amazon\_returns
2025-08-18T15:44:18.8526089Z 
2025-08-18T15:44:18.8526268Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T15:44:18.8526576Z 
2025-08-18T15:44:18.8526728Z # etl.dialects.amazon\_fee\_preview
2025-08-18T15:44:18.8527001Z 
2025-08-18T15:44:18.8527196Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T15:44:18.8527522Z 
2025-08-18T15:44:18.8527681Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T15:44:18.8528001Z 
2025-08-18T15:44:18.8528180Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T15:44:18.8528491Z 
2025-08-18T15:44:18.8528656Z # etl.dialects.amazon\_settlements
2025-08-18T15:44:18.8528930Z 
2025-08-18T15:44:18.8529064Z <a id="etl.dialects"></a>
2025-08-18T15:44:18.8529293Z 
2025-08-18T15:44:18.8529416Z # etl.dialects
2025-08-18T15:44:18.8529596Z 
2025-08-18T15:44:18.8529713Z <a id="ingest"></a>
2025-08-18T15:44:18.8529921Z 
2025-08-18T15:44:18.8530033Z # ingest
2025-08-18T15:44:18.8530189Z 
2025-08-18T15:44:18.8530336Z <a id="ingest.maintenance"></a>
2025-08-18T15:44:18.8530600Z 
2025-08-18T15:44:18.8530742Z # ingest.maintenance
2025-08-18T15:44:18.8530951Z 
2025-08-18T15:44:18.8531107Z <a id="ingest.copy_loader"></a>
2025-08-18T15:44:18.8531364Z 
2025-08-18T15:44:18.8531493Z # ingest.copy\_loader
2025-08-18T15:44:18.8531709Z 
2025-08-18T15:44:18.8531892Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T15:44:18.8532215Z 
2025-08-18T15:44:18.8532564Z #### copy\_df\_via\_temp
2025-08-18T15:44:18.8532809Z 
2025-08-18T15:44:18.8532923Z ```python
2025-08-18T15:44:18.8533234Z def copy_df_via_temp(engine: Engine,
2025-08-18T15:44:18.8533647Z                      df: pd.DataFrame,
2025-08-18T15:44:18.8534065Z                      target_table: str,
2025-08-18T15:44:18.8534452Z                      *,
2025-08-18T15:44:18.8534827Z                      target_schema: Optional[str] = None,
2025-08-18T15:44:18.8535287Z                      columns: Sequence[str],
2025-08-18T15:44:18.8535951Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T15:44:18.8536457Z                      analyze_after: bool = False,
2025-08-18T15:44:18.8536914Z                      connection: Any | None = None) -> int
2025-08-18T15:44:18.8537336Z ```
2025-08-18T15:44:18.8537486Z 
2025-08-18T15:44:18.8537762Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T15:44:18.8538165Z 
2025-08-18T15:44:18.8538321Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T15:44:18.8538623Z 
2025-08-18T15:44:18.8538763Z # ingest.tests.test\_smoke
2025-08-18T15:44:18.8539001Z 
2025-08-18T15:44:18.8539133Z <a id="ingest.tests"></a>
2025-08-18T15:44:18.8539360Z 
2025-08-18T15:44:18.8539487Z # ingest.tests
2025-08-18T15:44:18.8539664Z 
2025-08-18T15:44:18.8539814Z <a id="ingest.upload_router"></a>
2025-08-18T15:44:18.8540086Z 
2025-08-18T15:44:18.8540223Z # ingest.upload\_router
2025-08-18T15:44:18.8540440Z 
2025-08-18T15:44:18.8540581Z <a id="ingest.email_watcher"></a>
2025-08-18T15:44:18.8540848Z 
2025-08-18T15:44:18.8540983Z # ingest.email\_watcher
2025-08-18T15:44:18.8541196Z 
2025-08-18T15:44:18.8541358Z <a id="ingest.email_watcher.main"></a>
2025-08-18T15:44:18.8541652Z 
2025-08-18T15:44:18.8541769Z #### main
2025-08-18T15:44:18.8541934Z 
2025-08-18T15:44:18.8542057Z ```python
2025-08-18T15:44:18.8542353Z def main() -> dict[str, str]
2025-08-18T15:44:18.8542704Z ```
2025-08-18T15:44:18.8542857Z 
2025-08-18T15:44:18.8543104Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T15:44:18.8543740Z 
2025-08-18T15:44:18.8543972Z Returns {"status": "success"} when processing completes.
2025-08-18T15:44:18.8544333Z 
2025-08-18T15:44:18.8544481Z <a id="ingest.tasks"></a>
2025-08-18T15:44:18.8544712Z 
2025-08-18T15:44:18.8544831Z # ingest.tasks
2025-08-18T15:44:18.8545026Z 
2025-08-18T15:44:18.8545195Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T15:44:18.8545770Z 
2025-08-18T15:44:18.8545908Z #### task\_import\_file
2025-08-18T15:44:18.8546134Z 
2025-08-18T15:44:18.8546252Z ```python
2025-08-18T15:44:18.8546635Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T15:44:18.8547118Z def task_import_file(self,
2025-08-18T15:44:18.8547516Z                      uri: str,
2025-08-18T15:44:18.8547909Z                      report_type: Optional[str] = None,
2025-08-18T15:44:18.8548391Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T15:44:18.8548811Z ```
2025-08-18T15:44:18.8548965Z 
2025-08-18T15:44:18.8549212Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T15:44:18.8549592Z 
2025-08-18T15:44:18.8549747Z <a id="ingest.celery_app"></a>
2025-08-18T15:44:18.8550001Z 
2025-08-18T15:44:18.8550130Z # ingest.celery\_app
2025-08-18T15:44:18.8550342Z 
2025-08-18T15:44:18.8550485Z <a id="ingest.ingest_router"></a>
2025-08-18T15:44:18.8550737Z 
2025-08-18T15:44:18.8550872Z # ingest.ingest\_router
2025-08-18T15:44:18.8551111Z 
2025-08-18T15:44:18.8551257Z <a id="logistics_etl"></a>
2025-08-18T15:44:18.8551491Z 
2025-08-18T15:44:18.8551620Z # logistics\_etl
2025-08-18T15:44:18.8551856Z 
2025-08-18T15:44:18.8552010Z Daily logistics ETL job.
2025-08-18T15:44:18.8552234Z 
2025-08-18T15:44:18.8552379Z <a id="logistics_etl.__main__"></a>
2025-08-18T15:44:18.8552655Z 
2025-08-18T15:44:18.8552791Z # logistics\_etl.\_\_main\_\_
2025-08-18T15:44:18.8553037Z 
2025-08-18T15:44:18.8553185Z <a id="logistics_etl.dsn"></a>
2025-08-18T15:44:18.8553429Z 
2025-08-18T15:44:18.8553555Z # logistics\_etl.dsn
2025-08-18T15:44:18.8554015Z 
2025-08-18T15:44:18.8554244Z Local DSN builder to avoid cross-service dependency.
2025-08-18T15:44:18.8554650Z 
2025-08-18T15:44:18.8554816Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T15:44:18.8555124Z 
2025-08-18T15:44:18.8555239Z #### build\_dsn
2025-08-18T15:44:18.8555589Z 
2025-08-18T15:44:18.8555711Z ```python
2025-08-18T15:44:18.8556032Z def build_dsn(sync: bool = True) -> str
2025-08-18T15:44:18.8556430Z ```
2025-08-18T15:44:18.8556578Z 
2025-08-18T15:44:18.8556826Z Return a Postgres DSN assembled from environment variables.
2025-08-18T15:44:18.8557221Z 
2025-08-18T15:44:18.8557497Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T15:44:18.8558176Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T15:44:18.8558781Z error when any required variable is missing.
2025-08-18T15:44:18.8559089Z 
2025-08-18T15:44:18.8559265Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T15:44:18.8559571Z 
2025-08-18T15:44:18.8559719Z # logistics\_etl.tests.conftest
2025-08-18T15:44:18.8559997Z 
2025-08-18T15:44:18.8560194Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T15:44:18.8560525Z 
2025-08-18T15:44:18.8560688Z # logistics\_etl.tests.test\_repository
2025-08-18T15:44:18.8560992Z 
2025-08-18T15:44:18.8561161Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T15:44:18.8561469Z 
2025-08-18T15:44:18.8561630Z # logistics\_etl.tests.test\_cron
2025-08-18T15:44:18.8561903Z 
2025-08-18T15:44:18.8562081Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T15:44:18.8562394Z 
2025-08-18T15:44:18.8562554Z # logistics\_etl.tests.test\_imports
2025-08-18T15:44:18.8562831Z 
2025-08-18T15:44:18.8562997Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T15:44:18.8563308Z 
2025-08-18T15:44:18.8563459Z # logistics\_etl.tests.test\_smoke
2025-08-18T15:44:18.8563729Z 
2025-08-18T15:44:18.8563911Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T15:44:18.8564218Z 
2025-08-18T15:44:18.8564365Z # logistics\_etl.tests.test\_client
2025-08-18T15:44:18.8564647Z 
2025-08-18T15:44:18.8565025Z <a id="logistics_etl.tests"></a>
2025-08-18T15:44:18.8565297Z 
2025-08-18T15:44:18.8565653Z # logistics\_etl.tests
2025-08-18T15:44:18.8565895Z 
2025-08-18T15:44:18.8566036Z <a id="logistics_etl.flow"></a>
2025-08-18T15:44:18.8566291Z 
2025-08-18T15:44:18.8566428Z # logistics\_etl.flow
2025-08-18T15:44:18.8566636Z 
2025-08-18T15:44:18.8566781Z <a id="logistics_etl.client"></a>
2025-08-18T15:44:18.8567048Z 
2025-08-18T15:44:18.8567190Z # logistics\_etl.client
2025-08-18T15:44:18.8567409Z 
2025-08-18T15:44:18.8567554Z <a id="logistics_etl.cron"></a>
2025-08-18T15:44:18.8567818Z 
2025-08-18T15:44:18.8567946Z # logistics\_etl.cron
2025-08-18T15:44:18.8568158Z 
2025-08-18T15:44:18.8568297Z <a id="logistics_etl.db"></a>
2025-08-18T15:44:18.8568539Z 
2025-08-18T15:44:18.8568648Z # logistics\_etl.db
2025-08-18T15:44:18.8568827Z 
2025-08-18T15:44:18.8568978Z <a id="logistics_etl.repository"></a>
2025-08-18T15:44:18.8569248Z 
2025-08-18T15:44:18.8569374Z # logistics\_etl.repository
2025-08-18T15:44:18.8569636Z 
2025-08-18T15:44:18.8569766Z <a id="alert_bot"></a>
2025-08-18T15:44:18.8569974Z 
2025-08-18T15:44:18.8570092Z # alert\_bot
2025-08-18T15:44:18.8570277Z 
2025-08-18T15:44:18.8570431Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T15:44:18.8570725Z 
2025-08-18T15:44:18.8570878Z # alert\_bot.tests.test\_smoke
2025-08-18T15:44:18.8571129Z 
2025-08-18T15:44:18.8571268Z <a id="alert_bot.tests"></a>
2025-08-18T15:44:18.8571518Z 
2025-08-18T15:44:18.8571636Z # alert\_bot.tests
2025-08-18T15:44:18.8571829Z 
2025-08-18T15:44:18.8571969Z <a id="alert_bot.alert_bot"></a>
2025-08-18T15:44:18.8572230Z 
2025-08-18T15:44:18.8572359Z # alert\_bot.alert\_bot
2025-08-18T15:44:18.8572572Z 
2025-08-18T15:44:18.8572717Z <a id="alert_bot.rules"></a>
2025-08-18T15:44:18.8572956Z 
2025-08-18T15:44:18.8573074Z # alert\_bot.rules
2025-08-18T15:44:18.8573264Z 
2025-08-18T15:44:18.8573389Z <a id="common"></a>
2025-08-18T15:44:18.8573583Z 
2025-08-18T15:44:18.8573688Z # common
2025-08-18T15:44:18.8574077Z 
2025-08-18T15:44:18.8574219Z <a id="common.dsn"></a>
2025-08-18T15:44:18.8574437Z 
2025-08-18T15:44:18.8574559Z # common.dsn
2025-08-18T15:44:18.8574740Z 
2025-08-18T15:44:18.8574891Z <a id="common.dsn.build_dsn"></a>
2025-08-18T15:44:18.8575162Z 
2025-08-18T15:44:18.8575284Z #### build\_dsn
2025-08-18T15:44:18.8575684Z 
2025-08-18T15:44:18.8575803Z ```python
2025-08-18T15:44:18.8605703Z def build_dsn(sync: bool = True) -> str
2025-08-18T15:44:18.8606528Z ```
2025-08-18T15:44:18.8607113Z 
2025-08-18T15:44:18.8607642Z Return a Postgres DSN, validating required variables.
2025-08-18T15:44:18.8608315Z 
2025-08-18T15:44:18.8608940Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T15:44:18.8610059Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T15:44:18.8612878Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T15:44:18.8613442Z missing.
2025-08-18T15:44:18.8613612Z 
2025-08-18T15:44:18.8613792Z <a id="common.models_vendor"></a>
2025-08-18T15:44:18.8614067Z 
2025-08-18T15:44:18.8614204Z # common.models\_vendor
2025-08-18T15:44:18.8614438Z 
2025-08-18T15:44:18.8614600Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T15:44:18.8614899Z 
2025-08-18T15:44:18.8615022Z ## Vendor Objects
2025-08-18T15:44:18.8615221Z 
2025-08-18T15:44:18.8615332Z ```python
2025-08-18T15:44:18.8615800Z class Vendor(Base)
2025-08-18T15:44:18.8616066Z ```
2025-08-18T15:44:18.8616202Z 
2025-08-18T15:44:18.8616349Z Vendor of inventory items.
2025-08-18T15:44:18.8616504Z 
2025-08-18T15:44:18.8616621Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T15:44:18.8616822Z 
2025-08-18T15:44:18.8616895Z ## VendorPrice Objects
2025-08-18T15:44:18.8617014Z 
2025-08-18T15:44:18.8617078Z ```python
2025-08-18T15:44:18.8617243Z class VendorPrice(Base)
2025-08-18T15:44:18.8617422Z ```
2025-08-18T15:44:18.8617503Z 
2025-08-18T15:44:18.8617607Z Association table linking vendors to pricing.
2025-08-18T15:44:18.8617804Z 
2025-08-18T15:44:18.8617887Z <a id="common.db_url"></a>
2025-08-18T15:44:18.8618224Z 
2025-08-18T15:44:18.8618292Z # common.db\_url
2025-08-18T15:44:18.8618405Z 
2025-08-18T15:44:18.8618487Z <a id="common.db_url.build_url"></a>
2025-08-18T15:44:18.8618647Z 
2025-08-18T15:44:18.8618717Z #### build\_url
2025-08-18T15:44:18.8618817Z 
2025-08-18T15:44:18.8618881Z ```python
2025-08-18T15:44:18.8619061Z def build_url(async_: bool = True) -> str
2025-08-18T15:44:18.8619291Z ```
2025-08-18T15:44:18.8619372Z 
2025-08-18T15:44:18.8619483Z Return Postgres DSN from env or PG_* parts.
2025-08-18T15:44:18.8619661Z 
2025-08-18T15:44:18.8619743Z <a id="common.keepa"></a>
2025-08-18T15:44:18.8619881Z 
2025-08-18T15:44:18.8619947Z # common.keepa
2025-08-18T15:44:18.8620049Z 
2025-08-18T15:44:18.8620126Z <a id="common.llm"></a>
2025-08-18T15:44:18.8620245Z 
2025-08-18T15:44:18.8620308Z # common.llm
2025-08-18T15:44:18.8620402Z 
2025-08-18T15:44:18.8620489Z <a id="common.settings"></a>
2025-08-18T15:44:18.8620627Z 
2025-08-18T15:44:18.8620700Z # common.settings
2025-08-18T15:44:18.8620818Z 
2025-08-18T15:44:18.8620887Z <a id="common.db"></a>
2025-08-18T15:44:18.8621002Z 
2025-08-18T15:44:18.8621064Z # common.db
2025-08-18T15:44:18.8621159Z 
2025-08-18T15:44:18.8621251Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T15:44:18.8621424Z 
2025-08-18T15:44:18.8621504Z #### build\_sqlalchemy\_url
2025-08-18T15:44:18.8621636Z 
2025-08-18T15:44:18.8621699Z ```python
2025-08-18T15:44:18.8621873Z def build_sqlalchemy_url() -> str
2025-08-18T15:44:18.8622084Z ```
2025-08-18T15:44:18.8622290Z 
2025-08-18T15:44:18.8622387Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T15:44:18.8622569Z 
2025-08-18T15:44:18.8622665Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T15:44:18.8622837Z 
2025-08-18T15:44:18.8622911Z #### build\_asyncpg\_dsn
2025-08-18T15:44:18.8623034Z 
2025-08-18T15:44:18.8623104Z ```python
2025-08-18T15:44:18.8623269Z def build_asyncpg_dsn() -> str
2025-08-18T15:44:18.8623471Z ```
2025-08-18T15:44:18.8623683Z 
2025-08-18T15:44:18.8623812Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T15:44:18.8624043Z 
2025-08-18T15:44:18.8624129Z <a id="common.db.refresh_mvs"></a>
2025-08-18T15:44:18.8624285Z 
2025-08-18T15:44:18.8624358Z #### refresh\_mvs
2025-08-18T15:44:18.8624465Z 
2025-08-18T15:44:18.8624526Z ```python
2025-08-18T15:44:18.8624724Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T15:44:18.8624973Z ```
2025-08-18T15:44:18.8625058Z 
2025-08-18T15:44:18.8625194Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T15:44:18.8625659Z 
2025-08-18T15:44:18.8625793Z <a id="common.config"></a>
2025-08-18T15:44:18.8625939Z 
2025-08-18T15:44:18.8626006Z # common.config
2025-08-18T15:44:18.8626109Z 
2025-08-18T15:44:18.8626188Z <a id="common.base"></a>
2025-08-18T15:44:18.8626310Z 
2025-08-18T15:44:18.8626373Z # common.base
2025-08-18T15:44:18.8626473Z 
2025-08-18T15:44:18.8626551Z <a id="common.base.Base"></a>
2025-08-18T15:44:18.8626688Z 
2025-08-18T15:44:18.8626759Z ## Base Objects
2025-08-18T15:44:18.8626868Z 
2025-08-18T15:44:18.8626929Z ```python
2025-08-18T15:44:18.8627088Z class Base(DeclarativeBase)
2025-08-18T15:44:18.8627293Z ```
2025-08-18T15:44:18.8627378Z 
2025-08-18T15:44:18.8627467Z Base class for SQLAlchemy models.
2025-08-18T15:44:18.8627624Z 
2025-08-18T15:44:18.8627697Z <a id="repricer"></a>
2025-08-18T15:44:18.8627821Z 
2025-08-18T15:44:18.8627885Z # repricer
2025-08-18T15:44:18.8627975Z 
2025-08-18T15:44:18.8628061Z <a id="repricer.app.schemas"></a>
2025-08-18T15:44:18.8628216Z 
2025-08-18T15:44:18.8628293Z # repricer.app.schemas
2025-08-18T15:44:18.8628409Z 
2025-08-18T15:44:18.8628499Z <a id="repricer.app.deps"></a>
2025-08-18T15:44:18.8628639Z 
2025-08-18T15:44:18.8628712Z # repricer.app.deps
2025-08-18T15:44:18.8628822Z 
2025-08-18T15:44:18.8628951Z Placeholder module for Keepa / SP-API clients.
2025-08-18T15:44:18.8629137Z 
2025-08-18T15:44:18.8629220Z <a id="repricer.app.logic"></a>
2025-08-18T15:44:18.8629368Z 
2025-08-18T15:44:18.8629441Z # repricer.app.logic
2025-08-18T15:44:18.8629705Z 
2025-08-18T15:44:18.8629810Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T15:44:18.8629984Z 
2025-08-18T15:44:18.8630048Z #### MIN\_MARGIN
2025-08-18T15:44:18.8630149Z 
2025-08-18T15:44:18.8630216Z 15 % ROI
2025-08-18T15:44:18.8630303Z 
2025-08-18T15:44:18.8630409Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T15:44:18.8630593Z 
2025-08-18T15:44:18.8630663Z #### compute\_price
2025-08-18T15:44:18.8630770Z 
2025-08-18T15:44:18.8630832Z ```python
2025-08-18T15:44:18.8631081Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T15:44:18.8631383Z ```
2025-08-18T15:44:18.8631465Z 
2025-08-18T15:44:18.8631573Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T15:44:18.8631851Z Replace with real competitive logic later.
2025-08-18T15:44:18.8632018Z 
2025-08-18T15:44:18.8632104Z <a id="repricer.app.main"></a>
2025-08-18T15:44:18.8632252Z 
2025-08-18T15:44:18.8632323Z # repricer.app.main
2025-08-18T15:44:18.8632439Z 
2025-08-18T15:44:18.8632525Z <a id="repricer.app"></a>
2025-08-18T15:44:18.8632658Z 
2025-08-18T15:44:18.8632723Z # repricer.app
2025-08-18T15:44:18.8632822Z 
2025-08-18T15:44:18.8632924Z <a id="repricer.tests.test_imports"></a>
2025-08-18T15:44:18.8633091Z 
2025-08-18T15:44:18.8633173Z # repricer.tests.test\_imports
2025-08-18T15:44:18.8633315Z 
2025-08-18T15:44:18.8633402Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T15:44:18.8633561Z 
2025-08-18T15:44:18.8633649Z # repricer.tests.test\_smoke
2025-08-18T15:44:18.8633787Z 
2025-08-18T15:44:18.8633866Z <a id="repricer.tests"></a>
2025-08-18T15:44:18.8633996Z 
2025-08-18T15:44:18.8634070Z # repricer.tests
2025-08-18T15:44:18.8634175Z 
2025-08-18T15:44:18.8634241Z <a id="db"></a>
2025-08-18T15:44:18.8634347Z 
2025-08-18T15:44:18.8634409Z # db
2025-08-18T15:44:18.8634493Z 
2025-08-18T15:44:18.8634569Z <a id="db.utils.views"></a>
2025-08-18T15:44:18.8634701Z 
2025-08-18T15:44:18.8634768Z # db.utils.views
2025-08-18T15:44:18.8634867Z 
2025-08-18T15:44:18.8635082Z <a id="db.utils.views.replace_view"></a>
2025-08-18T15:44:18.8635251Z 
2025-08-18T15:44:18.8635317Z #### replace\_view
2025-08-18T15:44:18.8635610Z 
2025-08-18T15:44:18.8635682Z ```python
2025-08-18T15:44:18.8635877Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T15:44:18.8636122Z ```
2025-08-18T15:44:18.8636203Z 
2025-08-18T15:44:18.8636291Z Drop and recreate a SQL view atomically.
2025-08-18T15:44:18.8636457Z 
2025-08-18T15:44:18.8636529Z <a id="db.utils"></a>
2025-08-18T15:44:18.8636640Z 
2025-08-18T15:44:18.8636711Z # db.utils
2025-08-18T15:44:18.8636799Z 
2025-08-18T15:44:18.8636874Z <a id="price_importer"></a>
2025-08-18T15:44:18.8637008Z 
2025-08-18T15:44:18.8637073Z # price\_importer
2025-08-18T15:44:18.8637178Z 
2025-08-18T15:44:18.8637279Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T15:44:18.8637469Z 
2025-08-18T15:44:18.8637558Z # price\_importer.services\_common.dsn
2025-08-18T15:44:18.8637722Z 
2025-08-18T15:44:18.8637853Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T15:44:18.8638071Z 
2025-08-18T15:44:18.8638133Z #### build\_dsn
2025-08-18T15:44:18.8638235Z 
2025-08-18T15:44:18.8638300Z ```python
2025-08-18T15:44:18.8638469Z def build_dsn(sync: bool = True) -> str
2025-08-18T15:44:18.8638688Z ```
2025-08-18T15:44:18.8638768Z 
2025-08-18T15:44:18.8638832Z Return safe DSN.
2025-08-18T15:44:18.8638945Z 
2025-08-18T15:44:18.8639297Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T15:44:18.8639499Z 
2025-08-18T15:44:18.8639633Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T15:44:18.8639837Z 
2025-08-18T15:44:18.8639948Z # price\_importer.services\_common.models\_vendor
2025-08-18T15:44:18.8640147Z 
2025-08-18T15:44:18.8640252Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T15:44:18.8640434Z 
2025-08-18T15:44:18.8640534Z # price\_importer.services\_common.db\_url
2025-08-18T15:44:18.8640705Z 
2025-08-18T15:44:18.8640838Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T15:44:18.8641059Z 
2025-08-18T15:44:18.8641274Z #### build\_url
2025-08-18T15:44:18.8641377Z 
2025-08-18T15:44:18.8641440Z ```python
2025-08-18T15:44:18.8641618Z def build_url(async_: bool = True) -> str
2025-08-18T15:44:18.8641838Z ```
2025-08-18T15:44:18.8641924Z 
2025-08-18T15:44:18.8642020Z Return Postgres DSN from env or PG_* parts.
2025-08-18T15:44:18.8642190Z 
2025-08-18T15:44:18.8642304Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T15:44:18.8642489Z 
2025-08-18T15:44:18.8642580Z # price\_importer.services\_common.keepa
2025-08-18T15:44:18.8642751Z 
2025-08-18T15:44:18.8642853Z <a id="price_importer.services_common.llm"></a>
2025-08-18T15:44:18.8643030Z 
2025-08-18T15:44:18.8643118Z # price\_importer.services\_common.llm
2025-08-18T15:44:18.8643286Z 
2025-08-18T15:44:18.8643402Z <a id="price_importer.services_common.settings"></a>
2025-08-18T15:44:18.8643592Z 
2025-08-18T15:44:18.8643692Z # price\_importer.services\_common.settings
2025-08-18T15:44:18.8643860Z 
2025-08-18T15:44:18.8643968Z <a id="price_importer.services_common.db"></a>
2025-08-18T15:44:18.8644154Z 
2025-08-18T15:44:18.8644242Z # price\_importer.services\_common.db
2025-08-18T15:44:18.8644399Z 
2025-08-18T15:44:18.8644555Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T15:44:18.8644806Z 
2025-08-18T15:44:18.8644885Z #### build\_sqlalchemy\_url
2025-08-18T15:44:18.8645021Z 
2025-08-18T15:44:18.8645091Z ```python
2025-08-18T15:44:18.8645261Z def build_sqlalchemy_url() -> str
2025-08-18T15:44:18.8645656Z ```
2025-08-18T15:44:18.8645743Z 
2025-08-18T15:44:18.8645843Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T15:44:18.8646026Z 
2025-08-18T15:44:18.8646173Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T15:44:18.8646402Z 
2025-08-18T15:44:18.8646483Z #### build\_asyncpg\_dsn
2025-08-18T15:44:18.8646609Z 
2025-08-18T15:44:18.8646671Z ```python
2025-08-18T15:44:18.8646844Z def build_asyncpg_dsn() -> str
2025-08-18T15:44:18.8647040Z ```
2025-08-18T15:44:18.8647249Z 
2025-08-18T15:44:18.8647390Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T15:44:18.8647597Z 
2025-08-18T15:44:18.8647723Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T15:44:18.8647936Z 
2025-08-18T15:44:18.8648002Z #### refresh\_mvs
2025-08-18T15:44:18.8648105Z 
2025-08-18T15:44:18.8648179Z ```python
2025-08-18T15:44:18.8648378Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T15:44:18.8648627Z ```
2025-08-18T15:44:18.8648707Z 
2025-08-18T15:44:18.8648841Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T15:44:18.8649058Z 
2025-08-18T15:44:18.8649152Z <a id="price_importer.services_common"></a>
2025-08-18T15:44:18.8649322Z 
2025-08-18T15:44:18.8649409Z # price\_importer.services\_common
2025-08-18T15:44:18.8649566Z 
2025-08-18T15:44:18.8649667Z <a id="price_importer.services_common.base"></a>
2025-08-18T15:44:18.8649848Z 
2025-08-18T15:44:18.8649944Z # price\_importer.services\_common.base
2025-08-18T15:44:18.8650109Z 
2025-08-18T15:44:18.8650204Z <a id="price_importer.normaliser"></a>
2025-08-18T15:44:18.8650377Z 
2025-08-18T15:44:18.8650456Z # price\_importer.normaliser
2025-08-18T15:44:18.8650591Z 
2025-08-18T15:44:18.8650693Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T15:44:18.8650879Z 
2025-08-18T15:44:18.8650967Z # price\_importer.common.models\_vendor
2025-08-18T15:44:18.8651126Z 
2025-08-18T15:44:18.8651229Z <a id="price_importer.common.db_url"></a>
2025-08-18T15:44:18.8651398Z 
2025-08-18T15:44:18.8651482Z # price\_importer.common.db\_url
2025-08-18T15:44:18.8651632Z 
2025-08-18T15:44:18.8651738Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T15:44:18.8651920Z 
2025-08-18T15:44:18.8651983Z #### make\_dsn
2025-08-18T15:44:18.8652087Z 
2025-08-18T15:44:18.8652147Z ```python
2025-08-18T15:44:18.8652320Z def make_dsn(async_: bool = False) -> str
2025-08-18T15:44:18.8652540Z ```
2025-08-18T15:44:18.8652621Z 
2025-08-18T15:44:18.8652743Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T15:44:18.8652942Z 
2025-08-18T15:44:18.8653175Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T15:44:18.8653368Z 
2025-08-18T15:44:18.8653431Z #### build\_url
2025-08-18T15:44:18.8653529Z 
2025-08-18T15:44:18.8653594Z ```python
2025-08-18T15:44:18.8653763Z def build_url(async_: bool = False) -> str
2025-08-18T15:44:18.8653988Z ```
2025-08-18T15:44:18.8654066Z 
2025-08-18T15:44:18.8654184Z Return Postgres DSN built from environment variables.
2025-08-18T15:44:18.8654385Z 
2025-08-18T15:44:18.8654469Z <a id="price_importer.common"></a>
2025-08-18T15:44:18.8654622Z 
2025-08-18T15:44:18.8654698Z # price\_importer.common
2025-08-18T15:44:18.8654831Z 
2025-08-18T15:44:18.8654919Z <a id="price_importer.common.base"></a>
2025-08-18T15:44:18.8655078Z 
2025-08-18T15:44:18.8655165Z # price\_importer.common.base
2025-08-18T15:44:18.8655303Z 
2025-08-18T15:44:18.8655533Z <a id="price_importer.tests.conftest"></a>
2025-08-18T15:44:18.8655737Z 
2025-08-18T15:44:18.8655824Z # price\_importer.tests.conftest
2025-08-18T15:44:18.8655980Z 
2025-08-18T15:44:18.8656079Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T15:44:18.8656259Z 
2025-08-18T15:44:18.8656345Z # price\_importer.tests.test\_reader
2025-08-18T15:44:18.8656502Z 
2025-08-18T15:44:18.8656608Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T15:44:18.8656785Z 
2025-08-18T15:44:18.8656872Z # price\_importer.tests.test\_imports
2025-08-18T15:44:18.8657040Z 
2025-08-18T15:44:18.8657134Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T15:44:18.8657302Z 
2025-08-18T15:44:18.8657386Z # price\_importer.tests.test\_smoke
2025-08-18T15:44:18.8657544Z 
2025-08-18T15:44:18.8657647Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T15:44:18.8657827Z 
2025-08-18T15:44:18.8657921Z # price\_importer.tests.test\_normaliser
2025-08-18T15:44:18.8658083Z 
2025-08-18T15:44:18.8658164Z <a id="price_importer.tests"></a>
2025-08-18T15:44:18.8658316Z 
2025-08-18T15:44:18.8658389Z # price\_importer.tests
2025-08-18T15:44:18.8658642Z 
2025-08-18T15:44:18.8658727Z <a id="price_importer.reader"></a>
2025-08-18T15:44:18.8658888Z 
2025-08-18T15:44:18.8658963Z # price\_importer.reader
2025-08-18T15:44:18.8659086Z 
2025-08-18T15:44:18.8659179Z <a id="price_importer.repository"></a>
2025-08-18T15:44:18.8659339Z 
2025-08-18T15:44:18.8659420Z # price\_importer.repository
2025-08-18T15:44:18.8659563Z 
2025-08-18T15:44:18.8659644Z <a id="price_importer.import"></a>
2025-08-18T15:44:18.8659792Z 
2025-08-18T15:44:18.8659866Z # price\_importer.import
2025-08-18T15:44:18.8659994Z 
2025-08-18T15:44:18.8660064Z <a id="fees_h10"></a>
2025-08-18T15:44:18.8660198Z 
2025-08-18T15:44:18.8660266Z # fees\_h10
2025-08-18T15:44:18.8660357Z 
2025-08-18T15:44:18.8660431Z <a id="fees_h10.worker"></a>
2025-08-18T15:44:18.8660559Z 
2025-08-18T15:44:18.8660631Z # fees\_h10.worker
2025-08-18T15:44:18.8660735Z 
2025-08-18T15:44:18.8660828Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T15:44:18.8661004Z 
2025-08-18T15:44:18.8661074Z #### list\_active\_asins
2025-08-18T15:44:18.8661196Z 
2025-08-18T15:44:18.8661266Z ```python
2025-08-18T15:44:18.8661431Z def list_active_asins() -> list[str]
2025-08-18T15:44:18.8661644Z ```
2025-08-18T15:44:18.8661727Z 
2025-08-18T15:44:18.8661838Z Return known ASINs or an empty list if unavailable.
2025-08-18T15:44:18.8662036Z 
2025-08-18T15:44:18.8662120Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T15:44:18.8662277Z 
2025-08-18T15:44:18.8662355Z # fees\_h10.tests.test\_smoke
2025-08-18T15:44:18.8662498Z 
2025-08-18T15:44:18.8662576Z <a id="fees_h10.tests"></a>
2025-08-18T15:44:18.8662730Z 
2025-08-18T15:44:18.8662804Z # fees\_h10.tests
2025-08-18T15:44:18.8662907Z 
2025-08-18T15:44:18.8662981Z <a id="fees_h10.client"></a>
2025-08-18T15:44:18.8663116Z 
2025-08-18T15:44:18.8663180Z # fees\_h10.client
2025-08-18T15:44:18.8663283Z 
2025-08-18T15:44:18.8663365Z <a id="fees_h10.repository"></a>
2025-08-18T15:44:18.8663515Z 
2025-08-18T15:44:18.8663584Z # fees\_h10.repository
2025-08-18T15:44:18.8663698Z 
2025-08-18T15:44:18.8663780Z <a id="emailer"></a>
2025-08-18T15:44:18.8664009Z 
2025-08-18T15:44:18.8664070Z # emailer
2025-08-18T15:44:18.8664157Z 
2025-08-18T15:44:18.8664265Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T15:44:18.8664444Z 
2025-08-18T15:44:18.8664532Z # emailer.tests.test\_import\_emailer
2025-08-18T15:44:18.8664697Z 
2025-08-18T15:44:18.8664780Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T15:44:18.8664932Z 
2025-08-18T15:44:18.8665016Z # emailer.tests.test\_smoke
2025-08-18T15:44:18.8665152Z 
2025-08-18T15:44:18.8665228Z <a id="emailer.tests"></a>
2025-08-18T15:44:18.8665356Z 
2025-08-18T15:44:18.8665588Z # emailer.tests
2025-08-18T15:44:18.8665758Z 
2025-08-18T15:44:18.8665845Z <a id="emailer.generate_body"></a>
2025-08-18T15:44:18.8666020Z 
2025-08-18T15:44:18.8666105Z # emailer.generate\_body
2025-08-18T15:44:18.8666233Z 
2025-08-18T15:44:18.8666304Z <a id="llm_server"></a>
2025-08-18T15:44:18.8666430Z 
2025-08-18T15:44:18.8666493Z # llm\_server
2025-08-18T15:44:18.8666588Z 
2025-08-18T15:44:18.8666678Z <a id="llm_server.app"></a>
2025-08-18T15:44:18.8666816Z 
2025-08-18T15:44:18.8666882Z # llm\_server.app
2025-08-18T15:44:18.8666992Z 
