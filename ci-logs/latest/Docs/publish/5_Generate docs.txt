2025-08-17T21:37:17.0864481Z ##[group]Run pydoc-markdown
2025-08-17T21:37:17.0864780Z [36;1mpydoc-markdown[0m
2025-08-17T21:37:17.0905534Z shell: /usr/bin/bash -e {0}
2025-08-17T21:37:17.0905769Z env:
2025-08-17T21:37:17.0906003Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:37:17.0906402Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T21:37:17.0906786Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:37:17.0907134Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:37:17.0907490Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:37:17.0907830Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T21:37:17.0908110Z ##[endgroup]
2025-08-17T21:37:17.4140401Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T21:37:17.4141121Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T21:37:17.4141576Z In "pydoc-markdown.yml"
2025-08-17T21:37:17.4141926Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T21:37:17.4142430Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T21:37:17.4143013Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T21:37:17.4143659Z 
2025-08-17T21:37:17.7118220Z <a id="__init__"></a>
2025-08-17T21:37:17.7118676Z 
2025-08-17T21:37:17.7118874Z # \_\_init\_\_
2025-08-17T21:37:17.7119125Z 
2025-08-17T21:37:17.7119276Z <a id="api"></a>
2025-08-17T21:37:17.7119520Z 
2025-08-17T21:37:17.7119662Z # api
2025-08-17T21:37:17.7119861Z 
2025-08-17T21:37:17.7120049Z <a id="api.tests.test_llm"></a>
2025-08-17T21:37:17.7120400Z 
2025-08-17T21:37:17.7120570Z # api.tests.test\_llm
2025-08-17T21:37:17.7120856Z 
2025-08-17T21:37:17.7121062Z <a id="api.tests.test_imports"></a>
2025-08-17T21:37:17.7121431Z 
2025-08-17T21:37:17.7121605Z # api.tests.test\_imports
2025-08-17T21:37:17.7121907Z 
2025-08-17T21:37:17.7122107Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T21:37:17.7122903Z 
2025-08-17T21:37:17.7123086Z # api.tests.test\_entrypoint
2025-08-17T21:37:17.7123575Z 
2025-08-17T21:37:17.7123729Z <a id="api.tests.test_health"></a>
2025-08-17T21:37:17.7124008Z 
2025-08-17T21:37:17.7124150Z # api.tests.test\_health
2025-08-17T21:37:17.7124379Z 
2025-08-17T21:37:17.7124528Z <a id="api.migrations.env"></a>
2025-08-17T21:37:17.7124800Z 
2025-08-17T21:37:17.7124899Z # api.migrations.env
2025-08-17T21:37:17.7125044Z 
2025-08-17T21:37:17.7125193Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T21:37:17.7125453Z 
2025-08-17T21:37:17.7125578Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T21:37:17.7125800Z 
2025-08-17T21:37:17.7125934Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T21:37:17.7126164Z 
2025-08-17T21:37:17.7126529Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T21:37:17.7126747Z 
2025-08-17T21:37:17.7126931Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T21:37:17.7127217Z 
2025-08-17T21:37:17.7127383Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T21:37:17.7127654Z 
2025-08-17T21:37:17.7127799Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T21:37:17.7128044Z 
2025-08-17T21:37:17.7128176Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T21:37:17.7128399Z 
2025-08-17T21:37:17.7128538Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T21:37:17.7128786Z 
2025-08-17T21:37:17.7128909Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T21:37:17.7129127Z 
2025-08-17T21:37:17.7129277Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T21:37:17.7129522Z 
2025-08-17T21:37:17.7129649Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T21:37:17.7129873Z 
2025-08-17T21:37:17.7130018Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T21:37:17.7130258Z 
2025-08-17T21:37:17.7130390Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T21:37:17.7130630Z 
2025-08-17T21:37:17.7130773Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T21:37:17.7131258Z 
2025-08-17T21:37:17.7131388Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T21:37:17.7131609Z 
2025-08-17T21:37:17.7131770Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-17T21:37:17.7132040Z 
2025-08-17T21:37:17.7132181Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-17T21:37:17.7132419Z 
2025-08-17T21:37:17.7132562Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T21:37:17.7132810Z 
2025-08-17T21:37:17.7132937Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T21:37:17.7133162Z 
2025-08-17T21:37:17.7133504Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-17T21:37:17.7133826Z 
2025-08-17T21:37:17.7133964Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-17T21:37:17.7134192Z 
2025-08-17T21:37:17.7134312Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T21:37:17.7134516Z 
2025-08-17T21:37:17.7134615Z # api.migrations.versions.0001\_baseline
2025-08-17T21:37:17.7134807Z 
2025-08-17T21:37:17.7134899Z <a id="api.migrations.versions"></a>
2025-08-17T21:37:17.7135063Z 
2025-08-17T21:37:17.7135155Z # api.migrations.versions
2025-08-17T21:37:17.7135287Z 
2025-08-17T21:37:17.7135366Z <a id="api.migrations"></a>
2025-08-17T21:37:17.7135509Z 
2025-08-17T21:37:17.7135579Z # api.migrations
2025-08-17T21:37:17.7135687Z 
2025-08-17T21:37:17.7135756Z <a id="api.db"></a>
2025-08-17T21:37:17.7135871Z 
2025-08-17T21:37:17.7135934Z # api.db
2025-08-17T21:37:17.7136024Z 
2025-08-17T21:37:17.7136111Z <a id="api.routes.stats"></a>
2025-08-17T21:37:17.7136253Z 
2025-08-17T21:37:17.7136325Z # api.routes.stats
2025-08-17T21:37:17.7136440Z 
2025-08-17T21:37:17.7136527Z <a id="api.routes.stats.kpi"></a>
2025-08-17T21:37:17.7136680Z 
2025-08-17T21:37:17.7136744Z #### kpi
2025-08-17T21:37:17.7136835Z 
2025-08-17T21:37:17.7136901Z ```python
2025-08-17T21:37:17.7137071Z @router.get("/stats/kpi")
2025-08-17T21:37:17.7137313Z def kpi() -> List[Dict[str, int]]
2025-08-17T21:37:17.7137676Z ```
2025-08-17T21:37:17.7137765Z 
2025-08-17T21:37:17.7137845Z Return KPI metrics (mock).
2025-08-17T21:37:17.7137977Z 
2025-08-17T21:37:17.7138086Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T21:37:17.7138268Z 
2025-08-17T21:37:17.7138340Z #### roi\_by\_vendor
2025-08-17T21:37:17.7138459Z 
2025-08-17T21:37:17.7138524Z ```python
2025-08-17T21:37:17.7138694Z @router.get("/stats/roi_by_vendor")
2025-08-17T21:37:17.7138948Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T21:37:17.7139178Z ```
2025-08-17T21:37:17.7139259Z 
2025-08-17T21:37:17.7139341Z Return ROI percent by vendor.
2025-08-17T21:37:17.7139484Z 
2025-08-17T21:37:17.7139583Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T21:37:17.7139748Z 
2025-08-17T21:37:17.7139813Z #### roi\_trend
2025-08-17T21:37:17.7139919Z 
2025-08-17T21:37:17.7139983Z ```python
2025-08-17T21:37:17.7140147Z @router.get("/stats/roi_trend")
2025-08-17T21:37:17.7140388Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T21:37:17.7140705Z ```
2025-08-17T21:37:17.7140818Z 
2025-08-17T21:37:17.7140893Z Return 30-day ROI trend.
2025-08-17T21:37:17.7141025Z 
2025-08-17T21:37:17.7141105Z <a id="api.routes.roi"></a>
2025-08-17T21:37:17.7141240Z 
2025-08-17T21:37:17.7141316Z # api.routes.roi
2025-08-17T21:37:17.7141423Z 
2025-08-17T21:37:17.7141506Z <a id="api.routes.health"></a>
2025-08-17T21:37:17.7141649Z 
2025-08-17T21:37:17.7141723Z # api.routes.health
2025-08-17T21:37:17.7141834Z 
2025-08-17T21:37:17.7141924Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T21:37:17.7142095Z 
2025-08-17T21:37:17.7142158Z #### MAX\_SKEW
2025-08-17T21:37:17.7142256Z 
2025-08-17T21:37:17.7142321Z seconds
2025-08-17T21:37:17.7142404Z 
2025-08-17T21:37:17.7142495Z <a id="api.routes.health.health"></a>
2025-08-17T21:37:17.7142658Z 
2025-08-17T21:37:17.7142725Z #### health
2025-08-17T21:37:17.7142814Z 
2025-08-17T21:37:17.7142876Z ```python
2025-08-17T21:37:17.7143069Z @router.get("/health", include_in_schema=False)
2025-08-17T21:37:17.7143566Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T21:37:17.7144068Z ```
2025-08-17T21:37:17.7144165Z 
2025-08-17T21:37:17.7144286Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T21:37:17.7144481Z 
2025-08-17T21:37:17.7144571Z <a id="api.routes.repository"></a>
2025-08-17T21:37:17.7144737Z 
2025-08-17T21:37:17.7144816Z # api.routes.repository
2025-08-17T21:37:17.7144942Z 
2025-08-17T21:37:17.7145014Z <a id="api.routes"></a>
2025-08-17T21:37:17.7145137Z 
2025-08-17T21:37:17.7145201Z # api.routes
2025-08-17T21:37:17.7145298Z 
2025-08-17T21:37:17.7145381Z <a id="api.models.fee"></a>
2025-08-17T21:37:17.7145513Z 
2025-08-17T21:37:17.7145583Z # api.models.fee
2025-08-17T21:37:17.7145689Z 
2025-08-17T21:37:17.7145768Z <a id="api.models"></a>
2025-08-17T21:37:17.7145884Z 
2025-08-17T21:37:17.7145949Z # api.models
2025-08-17T21:37:17.7146051Z 
2025-08-17T21:37:17.7146130Z <a id="api.roi_repository"></a>
2025-08-17T21:37:17.7146271Z 
2025-08-17T21:37:17.7146347Z # api.roi\_repository
2025-08-17T21:37:17.7146474Z 
2025-08-17T21:37:17.7146545Z <a id="api.main"></a>
2025-08-17T21:37:17.7146655Z 
2025-08-17T21:37:17.7146724Z # api.main
2025-08-17T21:37:17.7146816Z 
2025-08-17T21:37:17.7146893Z <a id="api.main.ready"></a>
2025-08-17T21:37:17.7147030Z 
2025-08-17T21:37:17.7147096Z #### ready
2025-08-17T21:37:17.7147186Z 
2025-08-17T21:37:17.7147247Z ```python
2025-08-17T21:37:17.7147506Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T21:37:17.7147938Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T21:37:17.7148287Z                                                                       str]
2025-08-17T21:37:17.7148522Z ```
2025-08-17T21:37:17.7148602Z 
2025-08-17T21:37:17.7148699Z Return 200 only when migrations are at head.
2025-08-17T21:37:17.7148878Z 
2025-08-17T21:37:17.7148951Z <a id="api.config"></a>
2025-08-17T21:37:17.7149069Z 
2025-08-17T21:37:17.7149135Z # api.config
2025-08-17T21:37:17.7149349Z 
2025-08-17T21:37:17.7149420Z <a id="etl"></a>
2025-08-17T21:37:17.7149540Z 
2025-08-17T21:37:17.7149603Z # etl
2025-08-17T21:37:17.7149690Z 
2025-08-17T21:37:17.7149779Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T21:37:17.7149928Z 
2025-08-17T21:37:17.7150006Z # etl.fba\_fee\_ingestor
2025-08-17T21:37:17.7150137Z 
2025-08-17T21:37:17.7150218Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T21:37:17.7150362Z 
2025-08-17T21:37:17.7150435Z # etl.sp\_fees\_ingestor
2025-08-17T21:37:17.7150561Z 
2025-08-17T21:37:17.7150643Z <a id="etl.keepa_ingestor"></a>
2025-08-17T21:37:17.7150782Z 
2025-08-17T21:37:17.7150864Z # etl.keepa\_ingestor
2025-08-17T21:37:17.7150979Z 
2025-08-17T21:37:17.7151047Z <a id="etl.db"></a>
2025-08-17T21:37:17.7151160Z 
2025-08-17T21:37:17.7151222Z # etl.db
2025-08-17T21:37:17.7151309Z 
2025-08-17T21:37:17.7151393Z <a id="etl.dialects.schemas"></a>
2025-08-17T21:37:17.7151549Z 
2025-08-17T21:37:17.7151627Z # etl.dialects.schemas
2025-08-17T21:37:17.7151751Z 
2025-08-17T21:37:17.7151875Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T21:37:17.7152067Z 
2025-08-17T21:37:17.7152158Z # etl.dialects.amazon\_reimbursements
2025-08-17T21:37:17.7152326Z 
2025-08-17T21:37:17.7152424Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-17T21:37:17.7152600Z 
2025-08-17T21:37:17.7152689Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-17T21:37:17.7152855Z 
2025-08-17T21:37:17.7152945Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T21:37:17.7153110Z 
2025-08-17T21:37:17.7153201Z # etl.dialects.amazon\_returns
2025-08-17T21:37:17.7153444Z 
2025-08-17T21:37:17.7153551Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-17T21:37:17.7153731Z 
2025-08-17T21:37:17.7153814Z # etl.dialects.amazon\_fee\_preview
2025-08-17T21:37:17.7153967Z 
2025-08-17T21:37:17.7154075Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-17T21:37:17.7154268Z 
2025-08-17T21:37:17.7154358Z # etl.dialects.amazon\_inventory\_ledger
2025-08-17T21:37:17.7154522Z 
2025-08-17T21:37:17.7154623Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-17T21:37:17.7154917Z 
2025-08-17T21:37:17.7155004Z # etl.dialects.amazon\_settlements
2025-08-17T21:37:17.7155164Z 
2025-08-17T21:37:17.7155242Z <a id="etl.dialects"></a>
2025-08-17T21:37:17.7155368Z 
2025-08-17T21:37:17.7155435Z # etl.dialects
2025-08-17T21:37:17.7155542Z 
2025-08-17T21:37:17.7155609Z <a id="ingest"></a>
2025-08-17T21:37:17.7155715Z 
2025-08-17T21:37:17.7155782Z # ingest
2025-08-17T21:37:17.7155868Z 
2025-08-17T21:37:17.7155950Z <a id="ingest.maintenance"></a>
2025-08-17T21:37:17.7156091Z 
2025-08-17T21:37:17.7156170Z # ingest.maintenance
2025-08-17T21:37:17.7156285Z 
2025-08-17T21:37:17.7156364Z <a id="ingest.copy_loader"></a>
2025-08-17T21:37:17.7156513Z 
2025-08-17T21:37:17.7156585Z # ingest.copy\_loader
2025-08-17T21:37:17.7156700Z 
2025-08-17T21:37:17.7156808Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T21:37:17.7156990Z 
2025-08-17T21:37:17.7157064Z #### copy\_df\_via\_temp
2025-08-17T21:37:17.7157185Z 
2025-08-17T21:37:17.7157260Z ```python
2025-08-17T21:37:17.7157435Z def copy_df_via_temp(engine: Engine,
2025-08-17T21:37:17.7157672Z                      df: pd.DataFrame,
2025-08-17T21:37:17.7157903Z                      target_table: str,
2025-08-17T21:37:17.7158123Z                      *,
2025-08-17T21:37:17.7158328Z                      target_schema: Optional[str] = None,
2025-08-17T21:37:17.7158596Z                      columns: Sequence[str],
2025-08-17T21:37:17.7158869Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T21:37:17.7159152Z                      analyze_after: bool = False,
2025-08-17T21:37:17.7159418Z                      connection: Any | None = None) -> int
2025-08-17T21:37:17.7159652Z ```
2025-08-17T21:37:17.7159743Z 
2025-08-17T21:37:17.7159898Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T21:37:17.7160132Z 
2025-08-17T21:37:17.7160226Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T21:37:17.7160386Z 
2025-08-17T21:37:17.7160465Z # ingest.tests.test\_smoke
2025-08-17T21:37:17.7160718Z 
2025-08-17T21:37:17.7160801Z <a id="ingest.tests"></a>
2025-08-17T21:37:17.7160928Z 
2025-08-17T21:37:17.7160994Z # ingest.tests
2025-08-17T21:37:17.7161103Z 
2025-08-17T21:37:17.7161190Z <a id="ingest.upload_router"></a>
2025-08-17T21:37:17.7161340Z 
2025-08-17T21:37:17.7161415Z # ingest.upload\_router
2025-08-17T21:37:17.7161544Z 
2025-08-17T21:37:17.7161626Z <a id="ingest.email_watcher"></a>
2025-08-17T21:37:17.7161771Z 
2025-08-17T21:37:17.7161852Z # ingest.email\_watcher
2025-08-17T21:37:17.7161971Z 
2025-08-17T21:37:17.7162060Z <a id="ingest.email_watcher.main"></a>
2025-08-17T21:37:17.7162231Z 
2025-08-17T21:37:17.7162293Z #### main
2025-08-17T21:37:17.7162382Z 
2025-08-17T21:37:17.7162445Z ```python
2025-08-17T21:37:17.7162620Z def main() -> dict[str, str]
2025-08-17T21:37:17.7162820Z ```
2025-08-17T21:37:17.7162902Z 
2025-08-17T21:37:17.7163045Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T21:37:17.7163271Z 
2025-08-17T21:37:17.7163513Z Returns {"status": "success"} when processing completes.
2025-08-17T21:37:17.7163731Z 
2025-08-17T21:37:17.7163810Z <a id="ingest.tasks"></a>
2025-08-17T21:37:17.7163946Z 
2025-08-17T21:37:17.7164012Z # ingest.tasks
2025-08-17T21:37:17.7164114Z 
2025-08-17T21:37:17.7164209Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T21:37:17.7164388Z 
2025-08-17T21:37:17.7164459Z #### task\_import\_file
2025-08-17T21:37:17.7164576Z 
2025-08-17T21:37:17.7164644Z ```python
2025-08-17T21:37:17.7164862Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T21:37:17.7165150Z def task_import_file(self,
2025-08-17T21:37:17.7165346Z                      uri: str,
2025-08-17T21:37:17.7165572Z                      report_type: Optional[str] = None,
2025-08-17T21:37:17.7165841Z                      force: bool = False) -> Dict[str, Any]
2025-08-17T21:37:17.7166084Z ```
2025-08-17T21:37:17.7166168Z 
2025-08-17T21:37:17.7166307Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T21:37:17.7166523Z 
2025-08-17T21:37:17.7166605Z <a id="ingest.celery_app"></a>
2025-08-17T21:37:17.7166867Z 
2025-08-17T21:37:17.7166940Z # ingest.celery\_app
2025-08-17T21:37:17.7167059Z 
2025-08-17T21:37:17.7167143Z <a id="ingest.ingest_router"></a>
2025-08-17T21:37:17.7167331Z 
2025-08-17T21:37:17.7167407Z # ingest.ingest\_router
2025-08-17T21:37:17.7167525Z 
2025-08-17T21:37:17.7167606Z <a id="logistics_etl"></a>
2025-08-17T21:37:17.7167733Z 
2025-08-17T21:37:17.7167800Z # logistics\_etl
2025-08-17T21:37:17.7167906Z 
2025-08-17T21:37:17.7167988Z Daily logistics ETL job.
2025-08-17T21:37:17.7168111Z 
2025-08-17T21:37:17.7168193Z <a id="logistics_etl.__main__"></a>
2025-08-17T21:37:17.7168351Z 
2025-08-17T21:37:17.7168430Z # logistics\_etl.\_\_main\_\_
2025-08-17T21:37:17.7168564Z 
2025-08-17T21:37:17.7168646Z <a id="logistics_etl.dsn"></a>
2025-08-17T21:37:17.7168781Z 
2025-08-17T21:37:17.7168850Z # logistics\_etl.dsn
2025-08-17T21:37:17.7168963Z 
2025-08-17T21:37:17.7169088Z Local DSN builder to avoid cross-service dependency.
2025-08-17T21:37:17.7169293Z 
2025-08-17T21:37:17.7169390Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T21:37:17.7169563Z 
2025-08-17T21:37:17.7169627Z #### build\_dsn
2025-08-17T21:37:17.7169727Z 
2025-08-17T21:37:17.7169798Z ```python
2025-08-17T21:37:17.7169977Z def build_dsn(sync: bool = True) -> str
2025-08-17T21:37:17.7170212Z ```
2025-08-17T21:37:17.7170306Z 
2025-08-17T21:37:17.7170455Z Return a Postgres DSN assembled from environment variables.
2025-08-17T21:37:17.7170682Z 
2025-08-17T21:37:17.7170831Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T21:37:17.7171225Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T21:37:17.7171562Z error when any required variable is missing.
2025-08-17T21:37:17.7171743Z 
2025-08-17T21:37:17.7171839Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T21:37:17.7172011Z 
2025-08-17T21:37:17.7172103Z # logistics\_etl.tests.conftest
2025-08-17T21:37:17.7172246Z 
2025-08-17T21:37:17.7172352Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T21:37:17.7172668Z 
2025-08-17T21:37:17.7172757Z # logistics\_etl.tests.test\_repository
2025-08-17T21:37:17.7172922Z 
2025-08-17T21:37:17.7173015Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T21:37:17.7173189Z 
2025-08-17T21:37:17.7173275Z # logistics\_etl.tests.test\_cron
2025-08-17T21:37:17.7173648Z 
2025-08-17T21:37:17.7173764Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T21:37:17.7173944Z 
2025-08-17T21:37:17.7174031Z # logistics\_etl.tests.test\_imports
2025-08-17T21:37:17.7174204Z 
2025-08-17T21:37:17.7174296Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T21:37:17.7174469Z 
2025-08-17T21:37:17.7174554Z # logistics\_etl.tests.test\_smoke
2025-08-17T21:37:17.7174715Z 
2025-08-17T21:37:17.7174810Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T21:37:17.7174978Z 
2025-08-17T21:37:17.7175070Z # logistics\_etl.tests.test\_client
2025-08-17T21:37:17.7175222Z 
2025-08-17T21:37:17.7175304Z <a id="logistics_etl.tests"></a>
2025-08-17T21:37:17.7175464Z 
2025-08-17T21:37:17.7175544Z # logistics\_etl.tests
2025-08-17T21:37:17.7175662Z 
2025-08-17T21:37:17.7175741Z <a id="logistics_etl.flow"></a>
2025-08-17T21:37:17.7175884Z 
2025-08-17T21:37:17.7175957Z # logistics\_etl.flow
2025-08-17T21:37:17.7176073Z 
2025-08-17T21:37:17.7176162Z <a id="logistics_etl.client"></a>
2025-08-17T21:37:17.7176308Z 
2025-08-17T21:37:17.7176382Z # logistics\_etl.client
2025-08-17T21:37:17.7176504Z 
2025-08-17T21:37:17.7176581Z <a id="logistics_etl.cron"></a>
2025-08-17T21:37:17.7176719Z 
2025-08-17T21:37:17.7176789Z # logistics\_etl.cron
2025-08-17T21:37:17.7176905Z 
2025-08-17T21:37:17.7176981Z <a id="logistics_etl.db"></a>
2025-08-17T21:37:17.7177118Z 
2025-08-17T21:37:17.7177192Z # logistics\_etl.db
2025-08-17T21:37:17.7177300Z 
2025-08-17T21:37:17.7177387Z <a id="logistics_etl.repository"></a>
2025-08-17T21:37:17.7177560Z 
2025-08-17T21:37:17.7177646Z # logistics\_etl.repository
2025-08-17T21:37:17.7177782Z 
2025-08-17T21:37:17.7177854Z <a id="alert_bot"></a>
2025-08-17T21:37:17.7178117Z 
2025-08-17T21:37:17.7178183Z # alert\_bot
2025-08-17T21:37:17.7178281Z 
2025-08-17T21:37:17.7178374Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T21:37:17.7178539Z 
2025-08-17T21:37:17.7178620Z # alert\_bot.tests.test\_smoke
2025-08-17T21:37:17.7178758Z 
2025-08-17T21:37:17.7178844Z <a id="alert_bot.tests"></a>
2025-08-17T21:37:17.7178977Z 
2025-08-17T21:37:17.7179045Z # alert\_bot.tests
2025-08-17T21:37:17.7179159Z 
2025-08-17T21:37:17.7179240Z <a id="alert_bot.alert_bot"></a>
2025-08-17T21:37:17.7179384Z 
2025-08-17T21:37:17.7179461Z # alert\_bot.alert\_bot
2025-08-17T21:37:17.7179581Z 
2025-08-17T21:37:17.7179659Z <a id="alert_bot.rules"></a>
2025-08-17T21:37:17.7179791Z 
2025-08-17T21:37:17.7179864Z # alert\_bot.rules
2025-08-17T21:37:17.7179969Z 
2025-08-17T21:37:17.7180039Z <a id="common"></a>
2025-08-17T21:37:17.7180150Z 
2025-08-17T21:37:17.7180212Z # common
2025-08-17T21:37:17.7180302Z 
2025-08-17T21:37:17.7180375Z <a id="common.dsn"></a>
2025-08-17T21:37:17.7180504Z 
2025-08-17T21:37:17.7180575Z # common.dsn
2025-08-17T21:37:17.7180670Z 
2025-08-17T21:37:17.7180765Z <a id="common.dsn.build_dsn"></a>
2025-08-17T21:37:17.7180917Z 
2025-08-17T21:37:17.7180981Z #### build\_dsn
2025-08-17T21:37:17.7181088Z 
2025-08-17T21:37:17.7181151Z ```python
2025-08-17T21:37:17.7181322Z def build_dsn(sync: bool = True) -> str
2025-08-17T21:37:17.7181550Z ```
2025-08-17T21:37:17.7181634Z 
2025-08-17T21:37:17.7181761Z Return a Postgres DSN, validating required variables.
2025-08-17T21:37:17.7181974Z 
2025-08-17T21:37:17.7182161Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T21:37:17.7182606Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T21:37:17.7183030Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T21:37:17.7183459Z missing.
2025-08-17T21:37:17.7183552Z 
2025-08-17T21:37:17.7183638Z <a id="common.models_vendor"></a>
2025-08-17T21:37:17.7183796Z 
2025-08-17T21:37:17.7216824Z # common.models\_vendor
2025-08-17T21:37:17.7217121Z 
2025-08-17T21:37:17.7217332Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T21:37:17.7217751Z 
2025-08-17T21:37:17.7217890Z ## Vendor Objects
2025-08-17T21:37:17.7218123Z 
2025-08-17T21:37:17.7218256Z ```python
2025-08-17T21:37:17.7218584Z class Vendor(Base)
2025-08-17T21:37:17.7218937Z ```
2025-08-17T21:37:17.7219110Z 
2025-08-17T21:37:17.7219282Z Vendor of inventory items.
2025-08-17T21:37:17.7219564Z 
2025-08-17T21:37:17.7219775Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T21:37:17.7220015Z 
2025-08-17T21:37:17.7220118Z ## VendorPrice Objects
2025-08-17T21:37:17.7220275Z 
2025-08-17T21:37:17.7220357Z ```python
2025-08-17T21:37:17.7220579Z class VendorPrice(Base)
2025-08-17T21:37:17.7220804Z ```
2025-08-17T21:37:17.7220916Z 
2025-08-17T21:37:17.7221050Z Association table linking vendors to pricing.
2025-08-17T21:37:17.7221286Z 
2025-08-17T21:37:17.7221395Z <a id="common.db_url"></a>
2025-08-17T21:37:17.7221563Z 
2025-08-17T21:37:17.7221655Z # common.db\_url
2025-08-17T21:37:17.7221867Z 
2025-08-17T21:37:17.7221977Z <a id="common.db_url.build_url"></a>
2025-08-17T21:37:17.7222176Z 
2025-08-17T21:37:17.7222258Z #### build\_url
2025-08-17T21:37:17.7222391Z 
2025-08-17T21:37:17.7222468Z ```python
2025-08-17T21:37:17.7222690Z def build_url(async_: bool = True) -> str
2025-08-17T21:37:17.7222973Z ```
2025-08-17T21:37:17.7223074Z 
2025-08-17T21:37:17.7223203Z Return Postgres DSN from env or PG_* parts.
2025-08-17T21:37:17.7223710Z 
2025-08-17T21:37:17.7223808Z <a id="common.keepa"></a>
2025-08-17T21:37:17.7223952Z 
2025-08-17T21:37:17.7224021Z # common.keepa
2025-08-17T21:37:17.7224124Z 
2025-08-17T21:37:17.7224196Z <a id="common.llm"></a>
2025-08-17T21:37:17.7224326Z 
2025-08-17T21:37:17.7224391Z # common.llm
2025-08-17T21:37:17.7224490Z 
2025-08-17T21:37:17.7224575Z <a id="common.settings"></a>
2025-08-17T21:37:17.7224713Z 
2025-08-17T21:37:17.7224778Z # common.settings
2025-08-17T21:37:17.7224891Z 
2025-08-17T21:37:17.7224969Z <a id="common.db"></a>
2025-08-17T21:37:17.7225245Z 
2025-08-17T21:37:17.7225308Z # common.db
2025-08-17T21:37:17.7225405Z 
2025-08-17T21:37:17.7225499Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T21:37:17.7225673Z 
2025-08-17T21:37:17.7225755Z #### build\_sqlalchemy\_url
2025-08-17T21:37:17.7225891Z 
2025-08-17T21:37:17.7225957Z ```python
2025-08-17T21:37:17.7226144Z def build_sqlalchemy_url() -> str
2025-08-17T21:37:17.7226356Z ```
2025-08-17T21:37:17.7226450Z 
2025-08-17T21:37:17.7226548Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T21:37:17.7226727Z 
2025-08-17T21:37:17.7226820Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T21:37:17.7227000Z 
2025-08-17T21:37:17.7227077Z #### build\_asyncpg\_dsn
2025-08-17T21:37:17.7227204Z 
2025-08-17T21:37:17.7227277Z ```python
2025-08-17T21:37:17.7227450Z def build_asyncpg_dsn() -> str
2025-08-17T21:37:17.7227656Z ```
2025-08-17T21:37:17.7227742Z 
2025-08-17T21:37:17.7227874Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T21:37:17.7228101Z 
2025-08-17T21:37:17.7228195Z <a id="common.db.refresh_mvs"></a>
2025-08-17T21:37:17.7228350Z 
2025-08-17T21:37:17.7228418Z #### refresh\_mvs
2025-08-17T21:37:17.7228538Z 
2025-08-17T21:37:17.7228603Z ```python
2025-08-17T21:37:17.7228809Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T21:37:17.7229064Z ```
2025-08-17T21:37:17.7229145Z 
2025-08-17T21:37:17.7229292Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T21:37:17.7229511Z 
2025-08-17T21:37:17.7229591Z <a id="common.config"></a>
2025-08-17T21:37:17.7229730Z 
2025-08-17T21:37:17.7229799Z # common.config
2025-08-17T21:37:17.7229904Z 
2025-08-17T21:37:17.7229986Z <a id="common.base"></a>
2025-08-17T21:37:17.7230118Z 
2025-08-17T21:37:17.7230184Z # common.base
2025-08-17T21:37:17.7230286Z 
2025-08-17T21:37:17.7230374Z <a id="common.base.Base"></a>
2025-08-17T21:37:17.7230524Z 
2025-08-17T21:37:17.7230589Z ## Base Objects
2025-08-17T21:37:17.7230702Z 
2025-08-17T21:37:17.7230764Z ```python
2025-08-17T21:37:17.7231059Z class Base(DeclarativeBase)
2025-08-17T21:37:17.7231271Z ```
2025-08-17T21:37:17.7231356Z 
2025-08-17T21:37:17.7231449Z Base class for SQLAlchemy models.
2025-08-17T21:37:17.7231601Z 
2025-08-17T21:37:17.7231675Z <a id="repricer"></a>
2025-08-17T21:37:17.7231795Z 
2025-08-17T21:37:17.7231866Z # repricer
2025-08-17T21:37:17.7231959Z 
2025-08-17T21:37:17.7232049Z <a id="repricer.app.schemas"></a>
2025-08-17T21:37:17.7232207Z 
2025-08-17T21:37:17.7232285Z # repricer.app.schemas
2025-08-17T21:37:17.7232410Z 
2025-08-17T21:37:17.7232501Z <a id="repricer.app.deps"></a>
2025-08-17T21:37:17.7232643Z 
2025-08-17T21:37:17.7232718Z # repricer.app.deps
2025-08-17T21:37:17.7232833Z 
2025-08-17T21:37:17.7232956Z Placeholder module for Keepa / SP-API clients.
2025-08-17T21:37:17.7233146Z 
2025-08-17T21:37:17.7233231Z <a id="repricer.app.logic"></a>
2025-08-17T21:37:17.7233507Z 
2025-08-17T21:37:17.7233587Z # repricer.app.logic
2025-08-17T21:37:17.7233705Z 
2025-08-17T21:37:17.7233805Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T21:37:17.7234002Z 
2025-08-17T21:37:17.7234068Z #### MIN\_MARGIN
2025-08-17T21:37:17.7234172Z 
2025-08-17T21:37:17.7234240Z 15 % ROI
2025-08-17T21:37:17.7234328Z 
2025-08-17T21:37:17.7234433Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T21:37:17.7234622Z 
2025-08-17T21:37:17.7234692Z #### compute\_price
2025-08-17T21:37:17.7234800Z 
2025-08-17T21:37:17.7234862Z ```python
2025-08-17T21:37:17.7235115Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T21:37:17.7235421Z ```
2025-08-17T21:37:17.7235505Z 
2025-08-17T21:37:17.7235615Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T21:37:17.7235907Z Replace with real competitive logic later.
2025-08-17T21:37:17.7236080Z 
2025-08-17T21:37:17.7236164Z <a id="repricer.app.main"></a>
2025-08-17T21:37:17.7236315Z 
2025-08-17T21:37:17.7236389Z # repricer.app.main
2025-08-17T21:37:17.7236502Z 
2025-08-17T21:37:17.7236579Z <a id="repricer.app"></a>
2025-08-17T21:37:17.7236715Z 
2025-08-17T21:37:17.7236790Z # repricer.app
2025-08-17T21:37:17.7237015Z 
2025-08-17T21:37:17.7237115Z <a id="repricer.tests.test_imports"></a>
2025-08-17T21:37:17.7237285Z 
2025-08-17T21:37:17.7237368Z # repricer.tests.test\_imports
2025-08-17T21:37:17.7237518Z 
2025-08-17T21:37:17.7237609Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T21:37:17.7237772Z 
2025-08-17T21:37:17.7237858Z # repricer.tests.test\_smoke
2025-08-17T21:37:17.7238002Z 
2025-08-17T21:37:17.7238082Z <a id="repricer.tests"></a>
2025-08-17T21:37:17.7238216Z 
2025-08-17T21:37:17.7238296Z # repricer.tests
2025-08-17T21:37:17.7238402Z 
2025-08-17T21:37:17.7238467Z <a id="db"></a>
2025-08-17T21:37:17.7238574Z 
2025-08-17T21:37:17.7238633Z # db
2025-08-17T21:37:17.7238717Z 
2025-08-17T21:37:17.7238792Z <a id="db.utils.views"></a>
2025-08-17T21:37:17.7238934Z 
2025-08-17T21:37:17.7239003Z # db.utils.views
2025-08-17T21:37:17.7239107Z 
2025-08-17T21:37:17.7239207Z <a id="db.utils.views.replace_view"></a>
2025-08-17T21:37:17.7239376Z 
2025-08-17T21:37:17.7239453Z #### replace\_view
2025-08-17T21:37:17.7239566Z 
2025-08-17T21:37:17.7239636Z ```python
2025-08-17T21:37:17.7239832Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T21:37:17.7240083Z ```
2025-08-17T21:37:17.7240171Z 
2025-08-17T21:37:17.7240261Z Drop and recreate a SQL view atomically.
2025-08-17T21:37:17.7240429Z 
2025-08-17T21:37:17.7240504Z <a id="db.utils"></a>
2025-08-17T21:37:17.7240620Z 
2025-08-17T21:37:17.7240689Z # db.utils
2025-08-17T21:37:17.7240782Z 
2025-08-17T21:37:17.7240859Z <a id="price_importer"></a>
2025-08-17T21:37:17.7240990Z 
2025-08-17T21:37:17.7241066Z # price\_importer
2025-08-17T21:37:17.7241173Z 
2025-08-17T21:37:17.7241279Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T21:37:17.7241474Z 
2025-08-17T21:37:17.7241568Z # price\_importer.services\_common.dsn
2025-08-17T21:37:17.7241733Z 
2025-08-17T21:37:17.7241868Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T21:37:17.7242077Z 
2025-08-17T21:37:17.7242141Z #### build\_dsn
2025-08-17T21:37:17.7242400Z 
2025-08-17T21:37:17.7242478Z ```python
2025-08-17T21:37:17.7242654Z def build_dsn(sync: bool = True) -> str
2025-08-17T21:37:17.7242882Z ```
2025-08-17T21:37:17.7242965Z 
2025-08-17T21:37:17.7243031Z Return safe DSN.
2025-08-17T21:37:17.7243142Z 
2025-08-17T21:37:17.7243612Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T21:37:17.7243829Z 
2025-08-17T21:37:17.7243964Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T21:37:17.7244171Z 
2025-08-17T21:37:17.7244284Z # price\_importer.services\_common.models\_vendor
2025-08-17T21:37:17.7244480Z 
2025-08-17T21:37:17.7244588Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T21:37:17.7244776Z 
2025-08-17T21:37:17.7244872Z # price\_importer.services\_common.db\_url
2025-08-17T21:37:17.7245048Z 
2025-08-17T21:37:17.7245181Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T21:37:17.7245394Z 
2025-08-17T21:37:17.7245465Z #### build\_url
2025-08-17T21:37:17.7245575Z 
2025-08-17T21:37:17.7245638Z ```python
2025-08-17T21:37:17.7245823Z def build_url(async_: bool = True) -> str
2025-08-17T21:37:17.7246046Z ```
2025-08-17T21:37:17.7246134Z 
2025-08-17T21:37:17.7246229Z Return Postgres DSN from env or PG_* parts.
2025-08-17T21:37:17.7246403Z 
2025-08-17T21:37:17.7246516Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T21:37:17.7246701Z 
2025-08-17T21:37:17.7246795Z # price\_importer.services\_common.keepa
2025-08-17T21:37:17.7246961Z 
2025-08-17T21:37:17.7247066Z <a id="price_importer.services_common.llm"></a>
2025-08-17T21:37:17.7247245Z 
2025-08-17T21:37:17.7247334Z # price\_importer.services\_common.llm
2025-08-17T21:37:17.7247501Z 
2025-08-17T21:37:17.7247617Z <a id="price_importer.services_common.settings"></a>
2025-08-17T21:37:17.7247809Z 
2025-08-17T21:37:17.7247912Z # price\_importer.services\_common.settings
2025-08-17T21:37:17.7248085Z 
2025-08-17T21:37:17.7248185Z <a id="price_importer.services_common.db"></a>
2025-08-17T21:37:17.7248364Z 
2025-08-17T21:37:17.7248467Z # price\_importer.services\_common.db
2025-08-17T21:37:17.7248751Z 
2025-08-17T21:37:17.7248910Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T21:37:17.7249164Z 
2025-08-17T21:37:17.7249248Z #### build\_sqlalchemy\_url
2025-08-17T21:37:17.7249386Z 
2025-08-17T21:37:17.7249457Z ```python
2025-08-17T21:37:17.7249632Z def build_sqlalchemy_url() -> str
2025-08-17T21:37:17.7249847Z ```
2025-08-17T21:37:17.7249931Z 
2025-08-17T21:37:17.7250033Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T21:37:17.7250215Z 
2025-08-17T21:37:17.7250369Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T21:37:17.7250606Z 
2025-08-17T21:37:17.7250682Z #### build\_asyncpg\_dsn
2025-08-17T21:37:17.7250816Z 
2025-08-17T21:37:17.7250884Z ```python
2025-08-17T21:37:17.7251060Z def build_asyncpg_dsn() -> str
2025-08-17T21:37:17.7251256Z ```
2025-08-17T21:37:17.7251337Z 
2025-08-17T21:37:17.7251471Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T21:37:17.7251692Z 
2025-08-17T21:37:17.7251831Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T21:37:17.7252052Z 
2025-08-17T21:37:17.7252121Z #### refresh\_mvs
2025-08-17T21:37:17.7252229Z 
2025-08-17T21:37:17.7252297Z ```python
2025-08-17T21:37:17.7252493Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T21:37:17.7252748Z ```
2025-08-17T21:37:17.7252830Z 
2025-08-17T21:37:17.7252967Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T21:37:17.7253191Z 
2025-08-17T21:37:17.7253290Z <a id="price_importer.services_common"></a>
2025-08-17T21:37:17.7253565Z 
2025-08-17T21:37:17.7253653Z # price\_importer.services\_common
2025-08-17T21:37:17.7253814Z 
2025-08-17T21:37:17.7253922Z <a id="price_importer.services_common.base"></a>
2025-08-17T21:37:17.7254112Z 
2025-08-17T21:37:17.7254211Z # price\_importer.services\_common.base
2025-08-17T21:37:17.7254380Z 
2025-08-17T21:37:17.7254471Z <a id="price_importer.normaliser"></a>
2025-08-17T21:37:17.7254762Z 
2025-08-17T21:37:17.7254848Z # price\_importer.normaliser
2025-08-17T21:37:17.7254994Z 
2025-08-17T21:37:17.7255104Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T21:37:17.7255299Z 
2025-08-17T21:37:17.7255395Z # price\_importer.common.models\_vendor
2025-08-17T21:37:17.7255561Z 
2025-08-17T21:37:17.7255662Z <a id="price_importer.common.db_url"></a>
2025-08-17T21:37:17.7255835Z 
2025-08-17T21:37:17.7255920Z # price\_importer.common.db\_url
2025-08-17T21:37:17.7256075Z 
2025-08-17T21:37:17.7256181Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T21:37:17.7256369Z 
2025-08-17T21:37:17.7256434Z #### make\_dsn
2025-08-17T21:37:17.7256543Z 
2025-08-17T21:37:17.7256607Z ```python
2025-08-17T21:37:17.7256789Z def make_dsn(async_: bool = False) -> str
2025-08-17T21:37:17.7257014Z ```
2025-08-17T21:37:17.7257097Z 
2025-08-17T21:37:17.7257224Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T21:37:17.7257425Z 
2025-08-17T21:37:17.7257539Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T21:37:17.7257748Z 
2025-08-17T21:37:17.7257811Z #### build\_url
2025-08-17T21:37:17.7257911Z 
2025-08-17T21:37:17.7257974Z ```python
2025-08-17T21:37:17.7258155Z def build_url(async_: bool = False) -> str
2025-08-17T21:37:17.7258385Z ```
2025-08-17T21:37:17.7258465Z 
2025-08-17T21:37:17.7258586Z Return Postgres DSN built from environment variables.
2025-08-17T21:37:17.7258786Z 
2025-08-17T21:37:17.7258879Z <a id="price_importer.common"></a>
2025-08-17T21:37:17.7259032Z 
2025-08-17T21:37:17.7259112Z # price\_importer.common
2025-08-17T21:37:17.7259243Z 
2025-08-17T21:37:17.7259334Z <a id="price_importer.common.base"></a>
2025-08-17T21:37:17.7259501Z 
2025-08-17T21:37:17.7259590Z # price\_importer.common.base
2025-08-17T21:37:17.7259729Z 
2025-08-17T21:37:17.7259827Z <a id="price_importer.tests.conftest"></a>
2025-08-17T21:37:17.7260001Z 
2025-08-17T21:37:17.7260203Z # price\_importer.tests.conftest
2025-08-17T21:37:17.7260353Z 
2025-08-17T21:37:17.7260455Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T21:37:17.7260759Z 
2025-08-17T21:37:17.7260847Z # price\_importer.tests.test\_reader
2025-08-17T21:37:17.7261006Z 
2025-08-17T21:37:17.7261114Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T21:37:17.7261293Z 
2025-08-17T21:37:17.7261382Z # price\_importer.tests.test\_imports
2025-08-17T21:37:17.7261543Z 
2025-08-17T21:37:17.7261646Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T21:37:17.7261821Z 
2025-08-17T21:37:17.7261907Z # price\_importer.tests.test\_smoke
2025-08-17T21:37:17.7262067Z 
2025-08-17T21:37:17.7262175Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T21:37:17.7262361Z 
2025-08-17T21:37:17.7262460Z # price\_importer.tests.test\_normaliser
2025-08-17T21:37:17.7262626Z 
2025-08-17T21:37:17.7262711Z <a id="price_importer.tests"></a>
2025-08-17T21:37:17.7262861Z 
2025-08-17T21:37:17.7262944Z # price\_importer.tests
2025-08-17T21:37:17.7263067Z 
2025-08-17T21:37:17.7263153Z <a id="price_importer.reader"></a>
2025-08-17T21:37:17.7263472Z 
2025-08-17T21:37:17.7263610Z # price\_importer.reader
2025-08-17T21:37:17.7263751Z 
2025-08-17T21:37:17.7263849Z <a id="price_importer.repository"></a>
2025-08-17T21:37:17.7264012Z 
2025-08-17T21:37:17.7264098Z # price\_importer.repository
2025-08-17T21:37:17.7264237Z 
2025-08-17T21:37:17.7264329Z <a id="price_importer.import"></a>
2025-08-17T21:37:17.7264478Z 
2025-08-17T21:37:17.7264556Z # price\_importer.import
2025-08-17T21:37:17.7264686Z 
2025-08-17T21:37:17.7264759Z <a id="fees_h10"></a>
2025-08-17T21:37:17.7264874Z 
2025-08-17T21:37:17.7264938Z # fees\_h10
2025-08-17T21:37:17.7265037Z 
2025-08-17T21:37:17.7265112Z <a id="fees_h10.worker"></a>
2025-08-17T21:37:17.7265246Z 
2025-08-17T21:37:17.7265319Z # fees\_h10.worker
2025-08-17T21:37:17.7265424Z 
2025-08-17T21:37:17.7265525Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T21:37:17.7265707Z 
2025-08-17T21:37:17.7265781Z #### list\_active\_asins
2025-08-17T21:37:17.7265902Z 
2025-08-17T21:37:17.7265964Z ```python
2025-08-17T21:37:17.7266272Z def list_active_asins() -> list[str]
2025-08-17T21:37:17.7266492Z ```
2025-08-17T21:37:17.7266576Z 
2025-08-17T21:37:17.7266687Z Return known ASINs or an empty list if unavailable.
2025-08-17T21:37:17.7266879Z 
2025-08-17T21:37:17.7266970Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T21:37:17.7267128Z 
2025-08-17T21:37:17.7267209Z # fees\_h10.tests.test\_smoke
2025-08-17T21:37:17.7267356Z 
2025-08-17T21:37:17.7267432Z <a id="fees_h10.tests"></a>
2025-08-17T21:37:17.7267563Z 
2025-08-17T21:37:17.7267637Z # fees\_h10.tests
2025-08-17T21:37:17.7267774Z 
2025-08-17T21:37:17.7267851Z <a id="fees_h10.client"></a>
2025-08-17T21:37:17.7267984Z 
2025-08-17T21:37:17.7268059Z # fees\_h10.client
2025-08-17T21:37:17.7268163Z 
2025-08-17T21:37:17.7268244Z <a id="fees_h10.repository"></a>
2025-08-17T21:37:17.7268394Z 
2025-08-17T21:37:17.7268469Z # fees\_h10.repository
2025-08-17T21:37:17.7268585Z 
2025-08-17T21:37:17.7268654Z <a id="emailer"></a>
2025-08-17T21:37:17.7268774Z 
2025-08-17T21:37:17.7268837Z # emailer
2025-08-17T21:37:17.7268933Z 
2025-08-17T21:37:17.7269049Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T21:37:17.7269231Z 
2025-08-17T21:37:17.7269322Z # emailer.tests.test\_import\_emailer
2025-08-17T21:37:17.7269486Z 
2025-08-17T21:37:17.7269573Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T21:37:17.7269728Z 
2025-08-17T21:37:17.7269808Z # emailer.tests.test\_smoke
2025-08-17T21:37:17.7269948Z 
2025-08-17T21:37:17.7270029Z <a id="emailer.tests"></a>
2025-08-17T21:37:17.7270159Z 
2025-08-17T21:37:17.7270230Z # emailer.tests
2025-08-17T21:37:17.7270334Z 
2025-08-17T21:37:17.7270418Z <a id="emailer.generate_body"></a>
2025-08-17T21:37:17.7270573Z 
2025-08-17T21:37:17.7270648Z # emailer.generate\_body
2025-08-17T21:37:17.7270772Z 
2025-08-17T21:37:17.7270842Z <a id="llm_server"></a>
2025-08-17T21:37:17.7270967Z 
2025-08-17T21:37:17.7271031Z # llm\_server
2025-08-17T21:37:17.7271127Z 
2025-08-17T21:37:17.7271211Z <a id="llm_server.app"></a>
2025-08-17T21:37:17.7271341Z 
2025-08-17T21:37:17.7271417Z # llm\_server.app
2025-08-17T21:37:17.7271634Z 
