2025-08-20T13:37:54.6636732Z ##[group]Run pydoc-markdown
2025-08-20T13:37:54.6637048Z [36;1mpydoc-markdown[0m
2025-08-20T13:37:54.6676543Z shell: /usr/bin/bash -e {0}
2025-08-20T13:37:54.6676775Z env:
2025-08-20T13:37:54.6677024Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:37:54.6677468Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T13:37:54.6677873Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:37:54.6678227Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:37:54.6678572Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:37:54.6678929Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T13:37:54.6679213Z ##[endgroup]
2025-08-20T13:37:54.9989370Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T13:37:54.9990403Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T13:37:54.9990898Z In "pydoc-markdown.yml"
2025-08-20T13:37:54.9991326Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T13:37:54.9992046Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T13:37:54.9992847Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T13:37:54.9993380Z 
2025-08-20T13:37:55.3551706Z <a id="__init__"></a>
2025-08-20T13:37:55.3552083Z 
2025-08-20T13:37:55.3552213Z # \_\_init\_\_
2025-08-20T13:37:55.3552422Z 
2025-08-20T13:37:55.3552550Z <a id="api"></a>
2025-08-20T13:37:55.3552754Z 
2025-08-20T13:37:55.3552864Z # api
2025-08-20T13:37:55.3553033Z 
2025-08-20T13:37:55.3553175Z <a id="api.errors"></a>
2025-08-20T13:37:55.3553411Z 
2025-08-20T13:37:55.3553542Z # api.errors
2025-08-20T13:37:55.3553722Z 
2025-08-20T13:37:55.3553871Z <a id="api.sentry_config"></a>
2025-08-20T13:37:55.3554143Z 
2025-08-20T13:37:55.3554292Z # api.sentry\_config
2025-08-20T13:37:55.3554507Z 
2025-08-20T13:37:55.3554689Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T13:37:55.3555035Z 
2025-08-20T13:37:55.3555188Z # api.tests.test\_stats\_contracts
2025-08-20T13:37:55.3555519Z 
2025-08-20T13:37:55.3555897Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T13:37:55.3556225Z 
2025-08-20T13:37:55.3556377Z # api.tests.test\_sentry\_scrub
2025-08-20T13:37:55.3556648Z 
2025-08-20T13:37:55.3556828Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T13:37:55.3557159Z 
2025-08-20T13:37:55.3557310Z # api.tests.test\_roi\_basic\_auth
2025-08-20T13:37:55.3557606Z 
2025-08-20T13:37:55.3557771Z <a id="api.tests.test_errors_json"></a>
2025-08-20T13:37:55.3558082Z 
2025-08-20T13:37:55.3558234Z # api.tests.test\_errors\_json
2025-08-20T13:37:55.3558498Z 
2025-08-20T13:37:55.3558639Z <a id="api.tests.test_llm"></a>
2025-08-20T13:37:55.3558900Z 
2025-08-20T13:37:55.3559043Z # api.tests.test\_llm
2025-08-20T13:37:55.3559265Z 
2025-08-20T13:37:55.3559425Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T13:37:55.3559742Z 
2025-08-20T13:37:55.3559884Z # api.tests.test\_roi\_filters
2025-08-20T13:37:55.3560141Z 
2025-08-20T13:37:55.3560310Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T13:37:55.3560951Z 
2025-08-20T13:37:55.3561114Z # api.tests.test\_sentry\_event
2025-08-20T13:37:55.3561391Z 
2025-08-20T13:37:55.3561634Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T13:37:55.3562041Z 
2025-08-20T13:37:55.3562186Z ## DummyTransport Objects
2025-08-20T13:37:55.3562449Z 
2025-08-20T13:37:55.3562570Z ```python
2025-08-20T13:37:55.3562872Z class DummyTransport()
2025-08-20T13:37:55.3563207Z ```
2025-08-20T13:37:55.3563359Z 
2025-08-20T13:37:55.3563689Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T13:37:55.3564195Z 
2025-08-20T13:37:55.3564330Z #### capture\_envelope
2025-08-20T13:37:55.3564558Z 
2025-08-20T13:37:55.3564671Z ```python
2025-08-20T13:37:55.3564983Z def capture_envelope(envelope)
2025-08-20T13:37:55.3565369Z ```
2025-08-20T13:37:55.3565521Z 
2025-08-20T13:37:55.3565947Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T13:37:55.3566358Z 
2025-08-20T13:37:55.3566522Z <a id="api.tests.test_cors"></a>
2025-08-20T13:37:55.3567161Z 
2025-08-20T13:37:55.3567311Z # api.tests.test\_cors
2025-08-20T13:37:55.3567538Z 
2025-08-20T13:37:55.3567697Z <a id="api.tests.test_imports"></a>
2025-08-20T13:37:55.3568057Z 
2025-08-20T13:37:55.3568242Z # api.tests.test\_imports
2025-08-20T13:37:55.3568484Z 
2025-08-20T13:37:55.3568644Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T13:37:55.3568959Z 
2025-08-20T13:37:55.3569103Z # api.tests.test\_rate\_limit
2025-08-20T13:37:55.3569363Z 
2025-08-20T13:37:55.3569551Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T13:37:55.3569882Z 
2025-08-20T13:37:55.3569993Z #### app
2025-08-20T13:37:55.3570157Z 
2025-08-20T13:37:55.3570269Z noqa: E402
2025-08-20T13:37:55.3570433Z 
2025-08-20T13:37:55.3570589Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T13:37:55.3570900Z 
2025-08-20T13:37:55.3571042Z # api.tests.test\_stats\_sql
2025-08-20T13:37:55.3571304Z 
2025-08-20T13:37:55.3571477Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T13:37:55.3571801Z 
2025-08-20T13:37:55.3571962Z # api.tests.test\_entrypoint
2025-08-20T13:37:55.3572228Z 
2025-08-20T13:37:55.3572441Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T13:37:55.3572804Z 
2025-08-20T13:37:55.3572975Z # api.tests.test\_stats\_future\_contracts
2025-08-20T13:37:55.3573314Z 
2025-08-20T13:37:55.3573465Z <a id="api.tests.test_health"></a>
2025-08-20T13:37:55.3573753Z 
2025-08-20T13:37:55.3573897Z # api.tests.test\_health
2025-08-20T13:37:55.3574134Z 
2025-08-20T13:37:55.3574284Z <a id="api.tests.test_score"></a>
2025-08-20T13:37:55.3574566Z 
2025-08-20T13:37:55.3574709Z # api.tests.test\_score
2025-08-20T13:37:55.3574933Z 
2025-08-20T13:37:55.3575076Z <a id="api.logging_config"></a>
2025-08-20T13:37:55.3575351Z 
2025-08-20T13:37:55.3575480Z # api.logging\_config
2025-08-20T13:37:55.3575886Z 
2025-08-20T13:37:55.3576044Z <a id="api.migrations.env"></a>
2025-08-20T13:37:55.3576307Z 
2025-08-20T13:37:55.3576811Z # api.migrations.env
2025-08-20T13:37:55.3577050Z 
2025-08-20T13:37:55.3577299Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T13:37:55.3577689Z 
2025-08-20T13:37:55.3577885Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T13:37:55.3578259Z 
2025-08-20T13:37:55.3578461Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T13:37:55.3578829Z 
2025-08-20T13:37:55.3579013Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T13:37:55.3579357Z 
2025-08-20T13:37:55.3579653Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T13:37:55.3580133Z 
2025-08-20T13:37:55.3580393Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T13:37:55.3580814Z 
2025-08-20T13:37:55.3581060Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T13:37:55.3581451Z 
2025-08-20T13:37:55.3581660Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T13:37:55.3582033Z 
2025-08-20T13:37:55.3582265Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T13:37:55.3582687Z 
2025-08-20T13:37:55.3582884Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T13:37:55.3583591Z 
2025-08-20T13:37:55.3583838Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T13:37:55.3584246Z 
2025-08-20T13:37:55.3584451Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T13:37:55.3584822Z 
2025-08-20T13:37:55.3585063Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T13:37:55.3585451Z 
2025-08-20T13:37:55.3585834Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T13:37:55.3586211Z 
2025-08-20T13:37:55.3586451Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T13:37:55.3586848Z 
2025-08-20T13:37:55.3587042Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T13:37:55.3587417Z 
2025-08-20T13:37:55.3587683Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T13:37:55.3588110Z 
2025-08-20T13:37:55.3588341Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T13:37:55.3588729Z 
2025-08-20T13:37:55.3588964Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T13:37:55.3589617Z 
2025-08-20T13:37:55.3589832Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T13:37:55.3590197Z 
2025-08-20T13:37:55.3590461Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T13:37:55.3590885Z 
2025-08-20T13:37:55.3591102Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T13:37:55.3591490Z 
2025-08-20T13:37:55.3591704Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T13:37:55.3592071Z 
2025-08-20T13:37:55.3592247Z # api.migrations.versions.0001\_baseline
2025-08-20T13:37:55.3592607Z 
2025-08-20T13:37:55.3592771Z <a id="api.migrations.versions"></a>
2025-08-20T13:37:55.3593083Z 
2025-08-20T13:37:55.3593244Z # api.migrations.versions
2025-08-20T13:37:55.3593502Z 
2025-08-20T13:37:55.3593650Z <a id="api.migrations"></a>
2025-08-20T13:37:55.3593908Z 
2025-08-20T13:37:55.3594043Z # api.migrations
2025-08-20T13:37:55.3594240Z 
2025-08-20T13:37:55.3594362Z <a id="api.db"></a>
2025-08-20T13:37:55.3594584Z 
2025-08-20T13:37:55.3594697Z # api.db
2025-08-20T13:37:55.3594865Z 
2025-08-20T13:37:55.3595021Z <a id="api.routes.score"></a>
2025-08-20T13:37:55.3595295Z 
2025-08-20T13:37:55.3595423Z # api.routes.score
2025-08-20T13:37:55.3595809Z 
2025-08-20T13:37:55.3595972Z <a id="api.routes.stats"></a>
2025-08-20T13:37:55.3596243Z 
2025-08-20T13:37:55.3596369Z # api.routes.stats
2025-08-20T13:37:55.3596581Z 
2025-08-20T13:37:55.3596719Z <a id="api.routes.roi"></a>
2025-08-20T13:37:55.3596970Z 
2025-08-20T13:37:55.3597092Z # api.routes.roi
2025-08-20T13:37:55.3597291Z 
2025-08-20T13:37:55.3597435Z <a id="api.routes.health"></a>
2025-08-20T13:37:55.3597700Z 
2025-08-20T13:37:55.3597833Z # api.routes.health
2025-08-20T13:37:55.3598038Z 
2025-08-20T13:37:55.3598206Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T13:37:55.3598532Z 
2025-08-20T13:37:55.3598648Z #### MAX\_SKEW
2025-08-20T13:37:55.3598829Z 
2025-08-20T13:37:55.3598937Z seconds
2025-08-20T13:37:55.3599105Z 
2025-08-20T13:37:55.3599271Z <a id="api.routes.health.health"></a>
2025-08-20T13:37:55.3599600Z 
2025-08-20T13:37:55.3599721Z #### health
2025-08-20T13:37:55.3599887Z 
2025-08-20T13:37:55.3600000Z ```python
2025-08-20T13:37:55.3600436Z @router.get("/health", include_in_schema=False)
2025-08-20T13:37:55.3601195Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T13:37:55.3601841Z ```
2025-08-20T13:37:55.3602009Z 
2025-08-20T13:37:55.3602234Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T13:37:55.3602616Z 
2025-08-20T13:37:55.3602796Z <a id="api.routes.repository"></a>
2025-08-20T13:37:55.3603104Z 
2025-08-20T13:37:55.3603246Z # api.routes.repository
2025-08-20T13:37:55.3603487Z 
2025-08-20T13:37:55.3603632Z <a id="api.routes"></a>
2025-08-20T13:37:55.3603860Z 
2025-08-20T13:37:55.3603981Z # api.routes
2025-08-20T13:37:55.3604166Z 
2025-08-20T13:37:55.3604308Z <a id="api.models.fee"></a>
2025-08-20T13:37:55.3604561Z 
2025-08-20T13:37:55.3604691Z # api.models.fee
2025-08-20T13:37:55.3604895Z 
2025-08-20T13:37:55.3605253Z <a id="api.models"></a>
2025-08-20T13:37:55.3605481Z 
2025-08-20T13:37:55.3605794Z # api.models
2025-08-20T13:37:55.3605986Z 
2025-08-20T13:37:55.3606134Z <a id="api.roi_repository"></a>
2025-08-20T13:37:55.3606413Z 
2025-08-20T13:37:55.3606544Z # api.roi\_repository
2025-08-20T13:37:55.3606763Z 
2025-08-20T13:37:55.3606872Z <a id="api.main"></a>
2025-08-20T13:37:55.3607061Z 
2025-08-20T13:37:55.3607155Z # api.main
2025-08-20T13:37:55.3607289Z 
2025-08-20T13:37:55.3607406Z <a id="api.main.ready"></a>
2025-08-20T13:37:55.3607600Z 
2025-08-20T13:37:55.3607690Z #### ready
2025-08-20T13:37:55.3607828Z 
2025-08-20T13:37:55.3607920Z ```python
2025-08-20T13:37:55.3608346Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T13:37:55.3609110Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T13:37:55.3609729Z                                                                       str]
2025-08-20T13:37:55.3610134Z ```
2025-08-20T13:37:55.3610458Z 
2025-08-20T13:37:55.3610611Z Return 200 only when migrations are at head.
2025-08-20T13:37:55.3610885Z 
2025-08-20T13:37:55.3611003Z <a id="api.config"></a>
2025-08-20T13:37:55.3611199Z 
2025-08-20T13:37:55.3611308Z # api.config
2025-08-20T13:37:55.3611481Z 
2025-08-20T13:37:55.3611610Z <a id="api.security"></a>
2025-08-20T13:37:55.3611835Z 
2025-08-20T13:37:55.3611956Z # api.security
2025-08-20T13:37:55.3612129Z 
2025-08-20T13:37:55.3612231Z <a id="etl"></a>
2025-08-20T13:37:55.3612383Z 
2025-08-20T13:37:55.3612473Z # etl
2025-08-20T13:37:55.3612594Z 
2025-08-20T13:37:55.3612713Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T13:37:55.3612940Z 
2025-08-20T13:37:55.3613047Z # etl.fba\_fee\_ingestor
2025-08-20T13:37:55.3613237Z 
2025-08-20T13:37:55.3613371Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T13:37:55.3613601Z 
2025-08-20T13:37:55.3613719Z # etl.sp\_fees\_ingestor
2025-08-20T13:37:55.3613925Z 
2025-08-20T13:37:55.3614063Z <a id="etl.keepa_ingestor"></a>
2025-08-20T13:37:55.3614315Z 
2025-08-20T13:37:55.3614420Z # etl.keepa\_ingestor
2025-08-20T13:37:55.3614593Z 
2025-08-20T13:37:55.3614689Z <a id="etl.db"></a>
2025-08-20T13:37:55.3614843Z 
2025-08-20T13:37:55.3614931Z # etl.db
2025-08-20T13:37:55.3615065Z 
2025-08-20T13:37:55.3615187Z <a id="etl.dialects.schemas"></a>
2025-08-20T13:37:55.3615412Z 
2025-08-20T13:37:55.3615727Z # etl.dialects.schemas
2025-08-20T13:37:55.3615947Z 
2025-08-20T13:37:55.3616127Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T13:37:55.3616470Z 
2025-08-20T13:37:55.3616622Z # etl.dialects.amazon\_reimbursements
2025-08-20T13:37:55.3616903Z 
2025-08-20T13:37:55.3617049Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T13:37:55.3617325Z 
2025-08-20T13:37:55.3617452Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T13:37:55.3617678Z 
2025-08-20T13:37:55.3617805Z <a id="etl.dialects.test_generic"></a>
2025-08-20T13:37:55.3618034Z 
2025-08-20T13:37:55.3618144Z # etl.dialects.test\_generic
2025-08-20T13:37:55.3618339Z 
2025-08-20T13:37:55.3618473Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T13:37:55.3618720Z 
2025-08-20T13:37:55.3618856Z # etl.dialects.amazon\_returns
2025-08-20T13:37:55.3619109Z 
2025-08-20T13:37:55.3619272Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T13:37:55.3619578Z 
2025-08-20T13:37:55.3619732Z # etl.dialects.amazon\_fee\_preview
2025-08-20T13:37:55.3620001Z 
2025-08-20T13:37:55.3620180Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T13:37:55.3620517Z 
2025-08-20T13:37:55.3620668Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T13:37:55.3621001Z 
2025-08-20T13:37:55.3621166Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T13:37:55.3621497Z 
2025-08-20T13:37:55.3621654Z # etl.dialects.amazon\_settlements
2025-08-20T13:37:55.3621951Z 
2025-08-20T13:37:55.3622100Z <a id="etl.dialects"></a>
2025-08-20T13:37:55.3622346Z 
2025-08-20T13:37:55.3622469Z # etl.dialects
2025-08-20T13:37:55.3622662Z 
2025-08-20T13:37:55.3622786Z <a id="ingest"></a>
2025-08-20T13:37:55.3622994Z 
2025-08-20T13:37:55.3623339Z # ingest
2025-08-20T13:37:55.3623529Z 
2025-08-20T13:37:55.3623691Z <a id="ingest.maintenance"></a>
2025-08-20T13:37:55.3623969Z 
2025-08-20T13:37:55.3624108Z # ingest.maintenance
2025-08-20T13:37:55.3624331Z 
2025-08-20T13:37:55.3624477Z <a id="ingest.copy_loader"></a>
2025-08-20T13:37:55.3624743Z 
2025-08-20T13:37:55.3624885Z # ingest.copy\_loader
2025-08-20T13:37:55.3625103Z 
2025-08-20T13:37:55.3625290Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T13:37:55.3625834Z 
2025-08-20T13:37:55.3625974Z #### copy\_df\_via\_temp
2025-08-20T13:37:55.3626206Z 
2025-08-20T13:37:55.3626328Z ```python
2025-08-20T13:37:55.3626637Z def copy_df_via_temp(engine: Engine,
2025-08-20T13:37:55.3627088Z                      df: pd.DataFrame,
2025-08-20T13:37:55.3627519Z                      target_table: str,
2025-08-20T13:37:55.3627930Z                      *,
2025-08-20T13:37:55.3628307Z                      target_schema: Optional[str] = None,
2025-08-20T13:37:55.3628798Z                      columns: Sequence[str],
2025-08-20T13:37:55.3629543Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T13:37:55.3630080Z                      analyze_after: bool = False,
2025-08-20T13:37:55.3630579Z                      connection: Any | None = None) -> int
2025-08-20T13:37:55.3631020Z ```
2025-08-20T13:37:55.3631172Z 
2025-08-20T13:37:55.3631466Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T13:37:55.3631904Z 
2025-08-20T13:37:55.3632063Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T13:37:55.3632378Z 
2025-08-20T13:37:55.3632522Z # ingest.tests.test\_smoke
2025-08-20T13:37:55.3632767Z 
2025-08-20T13:37:55.3632910Z <a id="ingest.tests"></a>
2025-08-20T13:37:55.3633147Z 
2025-08-20T13:37:55.3633270Z # ingest.tests
2025-08-20T13:37:55.3633460Z 
2025-08-20T13:37:55.3633618Z <a id="ingest.upload_router"></a>
2025-08-20T13:37:55.3633908Z 
2025-08-20T13:37:55.3634045Z # ingest.upload\_router
2025-08-20T13:37:55.3634277Z 
2025-08-20T13:37:55.3634428Z <a id="ingest.email_watcher"></a>
2025-08-20T13:37:55.3634715Z 
2025-08-20T13:37:55.3634848Z # ingest.email\_watcher
2025-08-20T13:37:55.3635084Z 
2025-08-20T13:37:55.3635248Z <a id="ingest.email_watcher.main"></a>
2025-08-20T13:37:55.3635735Z 
2025-08-20T13:37:55.3635869Z #### main
2025-08-20T13:37:55.3636043Z 
2025-08-20T13:37:55.3636163Z ```python
2025-08-20T13:37:55.3636478Z def main() -> dict[str, str]
2025-08-20T13:37:55.3636848Z ```
2025-08-20T13:37:55.3637004Z 
2025-08-20T13:37:55.3637269Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T13:37:55.3637699Z 
2025-08-20T13:37:55.3637950Z Returns {"status": "success"} when processing completes.
2025-08-20T13:37:55.3638354Z 
2025-08-20T13:37:55.3638497Z <a id="ingest.tasks"></a>
2025-08-20T13:37:55.3638741Z 
2025-08-20T13:37:55.3638872Z # ingest.tasks
2025-08-20T13:37:55.3639084Z 
2025-08-20T13:37:55.3639259Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T13:37:55.3639600Z 
2025-08-20T13:37:55.3639730Z #### task\_import\_file
2025-08-20T13:37:55.3639977Z 
2025-08-20T13:37:55.3640092Z ```python
2025-08-20T13:37:55.3640482Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T13:37:55.3641006Z def task_import_file(self: Any,
2025-08-20T13:37:55.3641406Z                      uri: str,
2025-08-20T13:37:55.3641808Z                      report_type: str | None = None,
2025-08-20T13:37:55.3642320Z                      force: bool = False) -> dict[str, Any]
2025-08-20T13:37:55.3642761Z ```
2025-08-20T13:37:55.3642920Z 
2025-08-20T13:37:55.3643167Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T13:37:55.3643574Z 
2025-08-20T13:37:55.3643727Z <a id="ingest.celery_app"></a>
2025-08-20T13:37:55.3643989Z 
2025-08-20T13:37:55.3644123Z # ingest.celery\_app
2025-08-20T13:37:55.3644334Z 
2025-08-20T13:37:55.3644490Z <a id="ingest.ingest_router"></a>
2025-08-20T13:37:55.3644781Z 
2025-08-20T13:37:55.3644918Z # ingest.ingest\_router
2025-08-20T13:37:55.3645151Z 
2025-08-20T13:37:55.3645286Z <a id="logistics_etl"></a>
2025-08-20T13:37:55.3645976Z 
2025-08-20T13:37:55.3646124Z # logistics\_etl
2025-08-20T13:37:55.3646337Z 
2025-08-20T13:37:55.3646488Z Daily logistics ETL job.
2025-08-20T13:37:55.3646743Z 
2025-08-20T13:37:55.3646911Z <a id="logistics_etl.__main__"></a>
2025-08-20T13:37:55.3647213Z 
2025-08-20T13:37:55.3647355Z # logistics\_etl.\_\_main\_\_
2025-08-20T13:37:55.3647624Z 
2025-08-20T13:37:55.3647771Z <a id="logistics_etl.dsn"></a>
2025-08-20T13:37:55.3648035Z 
2025-08-20T13:37:55.3648164Z # logistics\_etl.dsn
2025-08-20T13:37:55.3648382Z 
2025-08-20T13:37:55.3648604Z Local DSN builder to avoid cross-service dependency.
2025-08-20T13:37:55.3648994Z 
2025-08-20T13:37:55.3649171Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T13:37:55.3649492Z 
2025-08-20T13:37:55.3649609Z #### build\_dsn
2025-08-20T13:37:55.3649810Z 
2025-08-20T13:37:55.3649926Z ```python
2025-08-20T13:37:55.3650249Z def build_dsn(sync: bool = True) -> str
2025-08-20T13:37:55.3650675Z ```
2025-08-20T13:37:55.3650824Z 
2025-08-20T13:37:55.3651319Z Return a Postgres DSN assembled from environment variables.
2025-08-20T13:37:55.3651749Z 
2025-08-20T13:37:55.3652035Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T13:37:55.3652792Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T13:37:55.3653450Z error when any required variable is missing.
2025-08-20T13:37:55.3653791Z 
2025-08-20T13:37:55.3653963Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T13:37:55.3654293Z 
2025-08-20T13:37:55.3654444Z # logistics\_etl.tests.conftest
2025-08-20T13:37:55.3654725Z 
2025-08-20T13:37:55.3654915Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T13:37:55.3655272Z 
2025-08-20T13:37:55.3655445Z # logistics\_etl.tests.test\_repository
2025-08-20T13:37:55.3655947Z 
2025-08-20T13:37:55.3656130Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T13:37:55.3656470Z 
2025-08-20T13:37:55.3656625Z # logistics\_etl.tests.test\_cron
2025-08-20T13:37:55.3656914Z 
2025-08-20T13:37:55.3657096Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T13:37:55.3657458Z 
2025-08-20T13:37:55.3657612Z # logistics\_etl.tests.test\_imports
2025-08-20T13:37:55.3657913Z 
2025-08-20T13:37:55.3658092Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T13:37:55.3658429Z 
2025-08-20T13:37:55.3658580Z # logistics\_etl.tests.test\_smoke
2025-08-20T13:37:55.3658877Z 
2025-08-20T13:37:55.3659051Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T13:37:55.3659379Z 
2025-08-20T13:37:55.3659531Z # logistics\_etl.tests.test\_client
2025-08-20T13:37:55.3659833Z 
2025-08-20T13:37:55.3659980Z <a id="logistics_etl.tests"></a>
2025-08-20T13:37:55.3660252Z 
2025-08-20T13:37:55.3660391Z # logistics\_etl.tests
2025-08-20T13:37:55.3660618Z 
2025-08-20T13:37:55.3660762Z <a id="logistics_etl.flow"></a>
2025-08-20T13:37:55.3661036Z 
2025-08-20T13:37:55.3661235Z # logistics\_etl.flow
2025-08-20T13:37:55.3661452Z 
2025-08-20T13:37:55.3661601Z <a id="logistics_etl.client"></a>
2025-08-20T13:37:55.3661886Z 
2025-08-20T13:37:55.3726004Z # logistics\_etl.client
2025-08-20T13:37:55.3726287Z 
2025-08-20T13:37:55.3726446Z <a id="logistics_etl.cron"></a>
2025-08-20T13:37:55.3726689Z 
2025-08-20T13:37:55.3726805Z # logistics\_etl.cron
2025-08-20T13:37:55.3726999Z 
2025-08-20T13:37:55.3727219Z <a id="logistics_etl.db"></a>
2025-08-20T13:37:55.3727441Z 
2025-08-20T13:37:55.3727547Z # logistics\_etl.db
2025-08-20T13:37:55.3727725Z 
2025-08-20T13:37:55.3727871Z <a id="logistics_etl.repository"></a>
2025-08-20T13:37:55.3728141Z 
2025-08-20T13:37:55.3728277Z # logistics\_etl.repository
2025-08-20T13:37:55.3728485Z 
2025-08-20T13:37:55.3728592Z <a id="alert_bot"></a>
2025-08-20T13:37:55.3728784Z 
2025-08-20T13:37:55.3728884Z # alert\_bot
2025-08-20T13:37:55.3729040Z 
2025-08-20T13:37:55.3729176Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T13:37:55.3729441Z 
2025-08-20T13:37:55.3729567Z # alert\_bot.tests.test\_smoke
2025-08-20T13:37:55.3729786Z 
2025-08-20T13:37:55.3729914Z <a id="alert_bot.tests"></a>
2025-08-20T13:37:55.3730123Z 
2025-08-20T13:37:55.3730440Z # alert\_bot.tests
2025-08-20T13:37:55.3730612Z 
2025-08-20T13:37:55.3730743Z <a id="alert_bot.alert_bot"></a>
2025-08-20T13:37:55.3730966Z 
2025-08-20T13:37:55.3731074Z # alert\_bot.alert\_bot
2025-08-20T13:37:55.3731258Z 
2025-08-20T13:37:55.3731373Z <a id="alert_bot.rules"></a>
2025-08-20T13:37:55.3731578Z 
2025-08-20T13:37:55.3731678Z # alert\_bot.rules
2025-08-20T13:37:55.3731832Z 
2025-08-20T13:37:55.3731932Z <a id="common"></a>
2025-08-20T13:37:55.3732088Z 
2025-08-20T13:37:55.3732184Z # common
2025-08-20T13:37:55.3732317Z 
2025-08-20T13:37:55.3732424Z <a id="common.dsn"></a>
2025-08-20T13:37:55.3732615Z 
2025-08-20T13:37:55.3732714Z # common.dsn
2025-08-20T13:37:55.3732864Z 
2025-08-20T13:37:55.3732989Z <a id="common.dsn.build_dsn"></a>
2025-08-20T13:37:55.3733227Z 
2025-08-20T13:37:55.3733326Z #### build\_dsn
2025-08-20T13:37:55.3733481Z 
2025-08-20T13:37:55.3733582Z ```python
2025-08-20T13:37:55.3733845Z def build_dsn(sync: bool = True) -> str
2025-08-20T13:37:55.3734194Z ```
2025-08-20T13:37:55.3734547Z 
2025-08-20T13:37:55.3734735Z Return a Postgres DSN, validating required variables.
2025-08-20T13:37:55.3735076Z 
2025-08-20T13:37:55.3735387Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T13:37:55.3736323Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T13:37:55.3736991Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T13:37:55.3737464Z missing.
2025-08-20T13:37:55.3737593Z 
2025-08-20T13:37:55.3737711Z <a id="common.models_vendor"></a>
2025-08-20T13:37:55.3737976Z 
2025-08-20T13:37:55.3738094Z # common.models\_vendor
2025-08-20T13:37:55.3738284Z 
2025-08-20T13:37:55.3738423Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T13:37:55.3738684Z 
2025-08-20T13:37:55.3738783Z ## Vendor Objects
2025-08-20T13:37:55.3738940Z 
2025-08-20T13:37:55.3739040Z ```python
2025-08-20T13:37:55.3739265Z class Vendor(Base)
2025-08-20T13:37:55.3739512Z ```
2025-08-20T13:37:55.3739640Z 
2025-08-20T13:37:55.3739762Z Vendor of inventory items.
2025-08-20T13:37:55.3739967Z 
2025-08-20T13:37:55.3740120Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T13:37:55.3740401Z 
2025-08-20T13:37:55.3740511Z ## VendorPrice Objects
2025-08-20T13:37:55.3740700Z 
2025-08-20T13:37:55.3740795Z ```python
2025-08-20T13:37:55.3741032Z class VendorPrice(Base)
2025-08-20T13:37:55.3741304Z ```
2025-08-20T13:37:55.3741427Z 
2025-08-20T13:37:55.3741593Z Association table linking vendors to pricing.
2025-08-20T13:37:55.3741874Z 
2025-08-20T13:37:55.3741988Z <a id="common.db_url"></a>
2025-08-20T13:37:55.3742193Z 
2025-08-20T13:37:55.3742299Z # common.db\_url
2025-08-20T13:37:55.3742455Z 
2025-08-20T13:37:55.3742581Z <a id="common.db_url.build_url"></a>
2025-08-20T13:37:55.3742816Z 
2025-08-20T13:37:55.3742910Z #### build\_url
2025-08-20T13:37:55.3743055Z 
2025-08-20T13:37:55.3743149Z ```python
2025-08-20T13:37:55.3743400Z def build_url(async_: bool = True) -> str
2025-08-20T13:37:55.3743739Z ```
2025-08-20T13:37:55.3743878Z 
2025-08-20T13:37:55.3744017Z Return Postgres DSN from env or PG_* parts.
2025-08-20T13:37:55.3744288Z 
2025-08-20T13:37:55.3744400Z <a id="common.keepa"></a>
2025-08-20T13:37:55.3744590Z 
2025-08-20T13:37:55.3744695Z # common.keepa
2025-08-20T13:37:55.3744843Z 
2025-08-20T13:37:55.3744947Z <a id="common.llm"></a>
2025-08-20T13:37:55.3745119Z 
2025-08-20T13:37:55.3745216Z # common.llm
2025-08-20T13:37:55.3745356Z 
2025-08-20T13:37:55.3745475Z <a id="common.settings"></a>
2025-08-20T13:37:55.3745847Z 
2025-08-20T13:37:55.3745952Z # common.settings
2025-08-20T13:37:55.3746107Z 
2025-08-20T13:37:55.3746208Z <a id="common.db"></a>
2025-08-20T13:37:55.3746386Z 
2025-08-20T13:37:55.3746479Z # common.db
2025-08-20T13:37:55.3746609Z 
2025-08-20T13:37:55.3746750Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T13:37:55.3747009Z 
2025-08-20T13:37:55.3747118Z #### build\_sqlalchemy\_url
2025-08-20T13:37:55.3747312Z 
2025-08-20T13:37:55.3747403Z ```python
2025-08-20T13:37:55.3747651Z def build_sqlalchemy_url() -> str
2025-08-20T13:37:55.3748164Z ```
2025-08-20T13:37:55.3748287Z 
2025-08-20T13:37:55.3748430Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T13:37:55.3748702Z 
2025-08-20T13:37:55.3748833Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T13:37:55.3749087Z 
2025-08-20T13:37:55.3749205Z #### build\_asyncpg\_dsn
2025-08-20T13:37:55.3749407Z 
2025-08-20T13:37:55.3749506Z ```python
2025-08-20T13:37:55.3749764Z def build_asyncpg_dsn() -> str
2025-08-20T13:37:55.3750076Z ```
2025-08-20T13:37:55.3750214Z 
2025-08-20T13:37:55.3750414Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T13:37:55.3750744Z 
2025-08-20T13:37:55.3750878Z <a id="common.db.refresh_mvs"></a>
2025-08-20T13:37:55.3751120Z 
2025-08-20T13:37:55.3751221Z #### refresh\_mvs
2025-08-20T13:37:55.3751376Z 
2025-08-20T13:37:55.3751474Z ```python
2025-08-20T13:37:55.3751771Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T13:37:55.3752162Z ```
2025-08-20T13:37:55.3752287Z 
2025-08-20T13:37:55.3752673Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T13:37:55.3753024Z 
2025-08-20T13:37:55.3753144Z <a id="common.config"></a>
2025-08-20T13:37:55.3753350Z 
2025-08-20T13:37:55.3753455Z # common.config
2025-08-20T13:37:55.3753607Z 
2025-08-20T13:37:55.3753721Z <a id="common.base"></a>
2025-08-20T13:37:55.3753918Z 
2025-08-20T13:37:55.3754024Z # common.base
2025-08-20T13:37:55.3754172Z 
2025-08-20T13:37:55.3754290Z <a id="common.base.Base"></a>
2025-08-20T13:37:55.3754509Z 
2025-08-20T13:37:55.3754606Z ## Base Objects
2025-08-20T13:37:55.3754755Z 
2025-08-20T13:37:55.3754856Z ```python
2025-08-20T13:37:55.3755096Z class Base(DeclarativeBase)
2025-08-20T13:37:55.3755390Z ```
2025-08-20T13:37:55.3755510Z 
2025-08-20T13:37:55.3755783Z Base class for SQLAlchemy models.
2025-08-20T13:37:55.3756026Z 
2025-08-20T13:37:55.3756138Z <a id="repricer"></a>
2025-08-20T13:37:55.3756309Z 
2025-08-20T13:37:55.3756406Z # repricer
2025-08-20T13:37:55.3756550Z 
2025-08-20T13:37:55.3756682Z <a id="repricer.app.schemas"></a>
2025-08-20T13:37:55.3756928Z 
2025-08-20T13:37:55.3757048Z # repricer.app.schemas
2025-08-20T13:37:55.3757228Z 
2025-08-20T13:37:55.3757347Z <a id="repricer.app.deps"></a>
2025-08-20T13:37:55.3757567Z 
2025-08-20T13:37:55.3757684Z # repricer.app.deps
2025-08-20T13:37:55.3757854Z 
2025-08-20T13:37:55.3758026Z Placeholder module for Keepa / SP-API clients.
2025-08-20T13:37:55.3758320Z 
2025-08-20T13:37:55.3758447Z <a id="repricer.app.logic"></a>
2025-08-20T13:37:55.3758673Z 
2025-08-20T13:37:55.3758791Z # repricer.app.logic
2025-08-20T13:37:55.3758966Z 
2025-08-20T13:37:55.3759115Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T13:37:55.3759392Z 
2025-08-20T13:37:55.3759498Z #### MIN\_MARGIN
2025-08-20T13:37:55.3759660Z 
2025-08-20T13:37:55.3759759Z 15 % ROI
2025-08-20T13:37:55.3759896Z 
2025-08-20T13:37:55.3760055Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T13:37:55.3760348Z 
2025-08-20T13:37:55.3760454Z #### compute\_price
2025-08-20T13:37:55.3760628Z 
2025-08-20T13:37:55.3760735Z ```python
2025-08-20T13:37:55.3761122Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T13:37:55.3761600Z ```
2025-08-20T13:37:55.3761729Z 
2025-08-20T13:37:55.3761902Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T13:37:55.3762338Z Replace with real competitive logic later.
2025-08-20T13:37:55.3762613Z 
2025-08-20T13:37:55.3762738Z <a id="repricer.app.main"></a>
2025-08-20T13:37:55.3762954Z 
2025-08-20T13:37:55.3763067Z # repricer.app.main
2025-08-20T13:37:55.3763234Z 
2025-08-20T13:37:55.3763353Z <a id="repricer.app"></a>
2025-08-20T13:37:55.3763547Z 
2025-08-20T13:37:55.3763654Z # repricer.app
2025-08-20T13:37:55.3763807Z 
2025-08-20T13:37:55.3763946Z <a id="repricer.tests.test_imports"></a>
2025-08-20T13:37:55.3764210Z 
2025-08-20T13:37:55.3764333Z # repricer.tests.test\_imports
2025-08-20T13:37:55.3764549Z 
2025-08-20T13:37:55.3764683Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T13:37:55.3764941Z 
2025-08-20T13:37:55.3765064Z # repricer.tests.test\_smoke
2025-08-20T13:37:55.3765451Z 
2025-08-20T13:37:55.3765756Z <a id="repricer.tests"></a>
2025-08-20T13:37:55.3765976Z 
2025-08-20T13:37:55.3766083Z # repricer.tests
2025-08-20T13:37:55.3766246Z 
2025-08-20T13:37:55.3766344Z <a id="db"></a>
2025-08-20T13:37:55.3766498Z 
2025-08-20T13:37:55.3766589Z # db
2025-08-20T13:37:55.3766721Z 
2025-08-20T13:37:55.3766832Z <a id="db.utils.views"></a>
2025-08-20T13:37:55.3767038Z 
2025-08-20T13:37:55.3767147Z # db.utils.views
2025-08-20T13:37:55.3767306Z 
2025-08-20T13:37:55.3767449Z <a id="db.utils.views.replace_view"></a>
2025-08-20T13:37:55.3767715Z 
2025-08-20T13:37:55.3767828Z #### replace\_view
2025-08-20T13:37:55.3767992Z 
2025-08-20T13:37:55.3768087Z ```python
2025-08-20T13:37:55.3768387Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T13:37:55.3768770Z ```
2025-08-20T13:37:55.3768902Z 
2025-08-20T13:37:55.3769037Z Drop and recreate a SQL view atomically.
2025-08-20T13:37:55.3769297Z 
2025-08-20T13:37:55.3769414Z <a id="db.utils"></a>
2025-08-20T13:37:55.3769777Z 
2025-08-20T13:37:55.3769876Z # db.utils
2025-08-20T13:37:55.3770021Z 
2025-08-20T13:37:55.3770140Z <a id="price_importer"></a>
2025-08-20T13:37:55.3770345Z 
2025-08-20T13:37:55.3770451Z # price\_importer
2025-08-20T13:37:55.3770617Z 
2025-08-20T13:37:55.3770782Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T13:37:55.3771086Z 
2025-08-20T13:37:55.3771237Z # price\_importer.services\_common.dsn
2025-08-20T13:37:55.3771503Z 
2025-08-20T13:37:55.3771694Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T13:37:55.3772027Z 
2025-08-20T13:37:55.3772125Z #### build\_dsn
2025-08-20T13:37:55.3772285Z 
2025-08-20T13:37:55.3772375Z ```python
2025-08-20T13:37:55.3772640Z def build_dsn(sync: bool = True) -> str
2025-08-20T13:37:55.3772987Z ```
2025-08-20T13:37:55.3773123Z 
2025-08-20T13:37:55.3773226Z Return safe DSN.
2025-08-20T13:37:55.3773392Z 
2025-08-20T13:37:55.3773854Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T13:37:55.3774180Z 
2025-08-20T13:37:55.3774391Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T13:37:55.3774728Z 
2025-08-20T13:37:55.3774896Z # price\_importer.services\_common.models\_vendor
2025-08-20T13:37:55.3775203Z 
2025-08-20T13:37:55.3775370Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T13:37:55.3775823Z 
2025-08-20T13:37:55.3775967Z # price\_importer.services\_common.db\_url
2025-08-20T13:37:55.3776243Z 
2025-08-20T13:37:55.3776451Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T13:37:55.3776794Z 
2025-08-20T13:37:55.3776895Z #### build\_url
2025-08-20T13:37:55.3777060Z 
2025-08-20T13:37:55.3777154Z ```python
2025-08-20T13:37:55.3777424Z def build_url(async_: bool = True) -> str
2025-08-20T13:37:55.3777783Z ```
2025-08-20T13:37:55.3777912Z 
2025-08-20T13:37:55.3778066Z Return Postgres DSN from env or PG_* parts.
2025-08-20T13:37:55.3778329Z 
2025-08-20T13:37:55.3778489Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T13:37:55.3778782Z 
2025-08-20T13:37:55.3778943Z # price\_importer.services\_common.keepa
2025-08-20T13:37:55.3779206Z 
2025-08-20T13:37:55.3779360Z <a id="price_importer.services_common.llm"></a>
2025-08-20T13:37:55.3779656Z 
2025-08-20T13:37:55.3779790Z # price\_importer.services\_common.llm
2025-08-20T13:37:55.3780052Z 
2025-08-20T13:37:55.3780233Z <a id="price_importer.services_common.settings"></a>
2025-08-20T13:37:55.3780537Z 
2025-08-20T13:37:55.3780688Z # price\_importer.services\_common.settings
2025-08-20T13:37:55.3780982Z 
2025-08-20T13:37:55.3781141Z <a id="price_importer.services_common.db"></a>
2025-08-20T13:37:55.3781431Z 
2025-08-20T13:37:55.3781568Z # price\_importer.services\_common.db
2025-08-20T13:37:55.3781838Z 
2025-08-20T13:37:55.3782086Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T13:37:55.3782481Z 
2025-08-20T13:37:55.3782601Z #### build\_sqlalchemy\_url
2025-08-20T13:37:55.3782804Z 
2025-08-20T13:37:55.3782897Z ```python
2025-08-20T13:37:55.3783159Z def build_sqlalchemy_url() -> str
2025-08-20T13:37:55.3783651Z ```
2025-08-20T13:37:55.3783781Z 
2025-08-20T13:37:55.3783928Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T13:37:55.3784208Z 
2025-08-20T13:37:55.3784432Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T13:37:55.3784815Z 
2025-08-20T13:37:55.3784927Z #### build\_asyncpg\_dsn
2025-08-20T13:37:55.3785119Z 
2025-08-20T13:37:55.3785220Z ```python
2025-08-20T13:37:55.3785474Z def build_asyncpg_dsn() -> str
2025-08-20T13:37:55.3785972Z ```
2025-08-20T13:37:55.3786103Z 
2025-08-20T13:37:55.3786312Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T13:37:55.3786662Z 
2025-08-20T13:37:55.3786866Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T13:37:55.3787226Z 
2025-08-20T13:37:55.3787341Z #### refresh\_mvs
2025-08-20T13:37:55.3787516Z 
2025-08-20T13:37:55.3787620Z ```python
2025-08-20T13:37:55.3787952Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T13:37:55.3788389Z ```
2025-08-20T13:37:55.3788705Z 
2025-08-20T13:37:55.3788942Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T13:37:55.3789321Z 
2025-08-20T13:37:55.3789480Z <a id="price_importer.services_common"></a>
2025-08-20T13:37:55.3789781Z 
2025-08-20T13:37:55.3789943Z # price\_importer.services\_common
2025-08-20T13:37:55.3790243Z 
2025-08-20T13:37:55.3790414Z <a id="price_importer.services_common.base"></a>
2025-08-20T13:37:55.3790725Z 
2025-08-20T13:37:55.3790872Z # price\_importer.services\_common.base
2025-08-20T13:37:55.3791158Z 
2025-08-20T13:37:55.3791306Z <a id="price_importer.normaliser"></a>
2025-08-20T13:37:55.3791580Z 
2025-08-20T13:37:55.3791711Z # price\_importer.normaliser
2025-08-20T13:37:55.3791949Z 
2025-08-20T13:37:55.3792123Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T13:37:55.3792437Z 
2025-08-20T13:37:55.3792588Z # price\_importer.common.models\_vendor
2025-08-20T13:37:55.3792863Z 
2025-08-20T13:37:55.3793009Z <a id="price_importer.common.db_url"></a>
2025-08-20T13:37:55.3793296Z 
2025-08-20T13:37:55.3793445Z # price\_importer.common.db\_url
2025-08-20T13:37:55.3793689Z 
2025-08-20T13:37:55.3793859Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T13:37:55.3794184Z 
2025-08-20T13:37:55.3794287Z #### make\_dsn
2025-08-20T13:37:55.3794448Z 
2025-08-20T13:37:55.3794552Z ```python
2025-08-20T13:37:55.3794840Z def make_dsn(async_: bool = False) -> str
2025-08-20T13:37:55.3795210Z ```
2025-08-20T13:37:55.3795345Z 
2025-08-20T13:37:55.3795691Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T13:37:55.3796052Z 
2025-08-20T13:37:55.3796240Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T13:37:55.3796576Z 
2025-08-20T13:37:55.3796698Z #### build\_url
2025-08-20T13:37:55.3796869Z 
2025-08-20T13:37:55.3796970Z ```python
2025-08-20T13:37:55.3797258Z def build_url(async_: bool = False) -> str
2025-08-20T13:37:55.3797643Z ```
2025-08-20T13:37:55.3797782Z 
2025-08-20T13:37:55.3798000Z Return Postgres DSN built from environment variables.
2025-08-20T13:37:55.3798360Z 
2025-08-20T13:37:55.3798504Z <a id="price_importer.common"></a>
2025-08-20T13:37:55.3798766Z 
2025-08-20T13:37:55.3798895Z # price\_importer.common
2025-08-20T13:37:55.3799103Z 
2025-08-20T13:37:55.3799256Z <a id="price_importer.common.base"></a>
2025-08-20T13:37:55.3799540Z 
2025-08-20T13:37:55.3799673Z # price\_importer.common.base
2025-08-20T13:37:55.3799913Z 
2025-08-20T13:37:55.3800090Z <a id="price_importer.tests.conftest"></a>
2025-08-20T13:37:55.3800393Z 
2025-08-20T13:37:55.3800535Z # price\_importer.tests.conftest
2025-08-20T13:37:55.3800789Z 
2025-08-20T13:37:55.3800958Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T13:37:55.3801265Z 
2025-08-20T13:37:55.3801416Z # price\_importer.tests.test\_reader
2025-08-20T13:37:55.3801693Z 
2025-08-20T13:37:55.3801866Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T13:37:55.3802212Z 
2025-08-20T13:37:55.3802355Z # price\_importer.tests.test\_imports
2025-08-20T13:37:55.3802631Z 
2025-08-20T13:37:55.3802793Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T13:37:55.3803276Z 
2025-08-20T13:37:55.3803420Z # price\_importer.tests.test\_smoke
2025-08-20T13:37:55.3803688Z 
2025-08-20T13:37:55.3803876Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T13:37:55.3804217Z 
2025-08-20T13:37:55.3804371Z # price\_importer.tests.test\_normaliser
2025-08-20T13:37:55.3804674Z 
2025-08-20T13:37:55.3804814Z <a id="price_importer.tests"></a>
2025-08-20T13:37:55.3805075Z 
2025-08-20T13:37:55.3805202Z # price\_importer.tests
2025-08-20T13:37:55.3805417Z 
2025-08-20T13:37:55.3805718Z <a id="price_importer.reader"></a>
2025-08-20T13:37:55.3805999Z 
2025-08-20T13:37:55.3806138Z # price\_importer.reader
2025-08-20T13:37:55.3806358Z 
2025-08-20T13:37:55.3806510Z <a id="price_importer.repository"></a>
2025-08-20T13:37:55.3806807Z 
2025-08-20T13:37:55.3806944Z # price\_importer.repository
2025-08-20T13:37:55.3807184Z 
2025-08-20T13:37:55.3807328Z <a id="price_importer.import"></a>
2025-08-20T13:37:55.3807602Z 
2025-08-20T13:37:55.3807734Z # price\_importer.import
2025-08-20T13:37:55.3808129Z 
2025-08-20T13:37:55.3808255Z <a id="fees_h10"></a>
2025-08-20T13:37:55.3808451Z 
2025-08-20T13:37:55.3808554Z # fees\_h10
2025-08-20T13:37:55.3808710Z 
2025-08-20T13:37:55.3808839Z <a id="fees_h10.worker"></a>
2025-08-20T13:37:55.3809067Z 
2025-08-20T13:37:55.3809177Z # fees\_h10.worker
2025-08-20T13:37:55.3809361Z 
2025-08-20T13:37:55.3809526Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T13:37:55.3809842Z 
2025-08-20T13:37:55.3809968Z #### list\_active\_asins
2025-08-20T13:37:55.3810182Z 
2025-08-20T13:37:55.3810289Z ```python
2025-08-20T13:37:55.3810586Z def list_active_asins() -> list[str]
2025-08-20T13:37:55.3810950Z ```
2025-08-20T13:37:55.3811093Z 
2025-08-20T13:37:55.3811272Z Return known ASINs or an empty list if unavailable.
2025-08-20T13:37:55.3811574Z 
2025-08-20T13:37:55.3811695Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T13:37:55.3811945Z 
2025-08-20T13:37:55.3812059Z # fees\_h10.tests.test\_smoke
2025-08-20T13:37:55.3812268Z 
2025-08-20T13:37:55.3812395Z <a id="fees_h10.tests"></a>
2025-08-20T13:37:55.3812592Z 
2025-08-20T13:37:55.3812688Z # fees\_h10.tests
2025-08-20T13:37:55.3812839Z 
2025-08-20T13:37:55.3812959Z <a id="fees_h10.client"></a>
2025-08-20T13:37:55.3813188Z 
2025-08-20T13:37:55.3813296Z # fees\_h10.client
2025-08-20T13:37:55.3813479Z 
2025-08-20T13:37:55.3813612Z <a id="fees_h10.repository"></a>
2025-08-20T13:37:55.3813860Z 
2025-08-20T13:37:55.3813982Z # fees\_h10.repository
2025-08-20T13:37:55.3814188Z 
2025-08-20T13:37:55.3814364Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T13:37:55.3814694Z 
2025-08-20T13:37:55.3814821Z #### upsert\_fees\_raw
2025-08-20T13:37:55.3815005Z 
2025-08-20T13:37:55.3815108Z ```python
2025-08-20T13:37:55.3815383Z def upsert_fees_raw(engine: Engine,
2025-08-20T13:37:55.3815926Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T13:37:55.3816318Z                     *,
2025-08-20T13:37:55.3816685Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T13:37:55.3817130Z ```
2025-08-20T13:37:55.3817267Z 
2025-08-20T13:37:55.3817398Z Idempotent upsert for fees.
2025-08-20T13:37:55.3817618Z 
2025-08-20T13:37:55.3817863Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T13:37:55.3818426Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T13:37:55.3818923Z Only updates when one of the mutable fields changes.
2025-08-20T13:37:55.3819260Z 
2025-08-20T13:37:55.3819363Z <a id="emailer"></a>
2025-08-20T13:37:55.3819530Z 
2025-08-20T13:37:55.3819625Z # emailer
2025-08-20T13:37:55.3819778Z 
2025-08-20T13:37:55.3819950Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T13:37:55.3820271Z 
2025-08-20T13:37:55.3820419Z # emailer.tests.test\_import\_emailer
2025-08-20T13:37:55.3820691Z 
2025-08-20T13:37:55.3820831Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T13:37:55.3821151Z 
2025-08-20T13:37:55.3821278Z # emailer.tests.test\_smoke
2025-08-20T13:37:55.3821502Z 
2025-08-20T13:37:55.3821630Z <a id="emailer.tests"></a>
2025-08-20T13:37:55.3822037Z 
2025-08-20T13:37:55.3822147Z # emailer.tests
2025-08-20T13:37:55.3822317Z 
2025-08-20T13:37:55.3822461Z <a id="emailer.generate_body"></a>
2025-08-20T13:37:55.3822717Z 
2025-08-20T13:37:55.3822837Z # emailer.generate\_body
2025-08-20T13:37:55.3823058Z 
2025-08-20T13:37:55.3823172Z <a id="llm_server"></a>
2025-08-20T13:37:55.3823364Z 
2025-08-20T13:37:55.3823471Z # llm\_server
2025-08-20T13:37:55.3823630Z 
2025-08-20T13:37:55.3823748Z <a id="llm_server.app"></a>
2025-08-20T13:37:55.3823966Z 
2025-08-20T13:37:55.3824081Z # llm\_server.app
2025-08-20T13:37:55.3824254Z 
