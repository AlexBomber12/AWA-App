2025-08-19T21:35:31.5490484Z ##[group]Run pydoc-markdown
2025-08-19T21:35:31.5490785Z [36;1mpydoc-markdown[0m
2025-08-19T21:35:31.5530919Z shell: /usr/bin/bash -e {0}
2025-08-19T21:35:31.5531145Z env:
2025-08-19T21:35:31.5531381Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:35:31.5531782Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T21:35:31.5532194Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:35:31.5532548Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:35:31.5532908Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:35:31.5533254Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T21:35:31.5533538Z ##[endgroup]
2025-08-19T21:35:32.2302134Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T21:35:32.2302971Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T21:35:32.2303528Z In "pydoc-markdown.yml"
2025-08-19T21:35:32.2304061Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T21:35:32.2304839Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T21:35:32.2305758Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T21:35:32.2306181Z 
2025-08-19T21:35:32.5772169Z <a id="__init__"></a>
2025-08-19T21:35:32.5772593Z 
2025-08-19T21:35:32.5772717Z # \_\_init\_\_
2025-08-19T21:35:32.5772913Z 
2025-08-19T21:35:32.5773042Z <a id="api"></a>
2025-08-19T21:35:32.5773250Z 
2025-08-19T21:35:32.5773361Z # api
2025-08-19T21:35:32.5773532Z 
2025-08-19T21:35:32.5773672Z <a id="api.errors"></a>
2025-08-19T21:35:32.5773904Z 
2025-08-19T21:35:32.5774035Z # api.errors
2025-08-19T21:35:32.5774220Z 
2025-08-19T21:35:32.5774368Z <a id="api.sentry_config"></a>
2025-08-19T21:35:32.5774642Z 
2025-08-19T21:35:32.5774789Z # api.sentry\_config
2025-08-19T21:35:32.5775009Z 
2025-08-19T21:35:32.5775189Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T21:35:32.5775538Z 
2025-08-19T21:35:32.5776075Z # api.tests.test\_stats\_contracts
2025-08-19T21:35:32.5776394Z 
2025-08-19T21:35:32.5776575Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T21:35:32.5776891Z 
2025-08-19T21:35:32.5777041Z # api.tests.test\_sentry\_scrub
2025-08-19T21:35:32.5777312Z 
2025-08-19T21:35:32.5777492Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T21:35:32.5777809Z 
2025-08-19T21:35:32.5777960Z # api.tests.test\_roi\_basic\_auth
2025-08-19T21:35:32.5778254Z 
2025-08-19T21:35:32.5778415Z <a id="api.tests.test_errors_json"></a>
2025-08-19T21:35:32.5778728Z 
2025-08-19T21:35:32.5778883Z # api.tests.test\_errors\_json
2025-08-19T21:35:32.5779671Z 
2025-08-19T21:35:32.5779833Z <a id="api.tests.test_llm"></a>
2025-08-19T21:35:32.5780113Z 
2025-08-19T21:35:32.5780256Z # api.tests.test\_llm
2025-08-19T21:35:32.5780480Z 
2025-08-19T21:35:32.5780650Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T21:35:32.5780974Z 
2025-08-19T21:35:32.5781126Z # api.tests.test\_roi\_filters
2025-08-19T21:35:32.5781396Z 
2025-08-19T21:35:32.5781576Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T21:35:32.5781911Z 
2025-08-19T21:35:32.5782060Z # api.tests.test\_sentry\_event
2025-08-19T21:35:32.5782325Z 
2025-08-19T21:35:32.5782564Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T21:35:32.5782950Z 
2025-08-19T21:35:32.5783093Z ## DummyTransport Objects
2025-08-19T21:35:32.5783336Z 
2025-08-19T21:35:32.5783449Z ```python
2025-08-19T21:35:32.5783751Z class DummyTransport()
2025-08-19T21:35:32.5784085Z ```
2025-08-19T21:35:32.5784237Z 
2025-08-19T21:35:32.5784566Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T21:35:32.5785056Z 
2025-08-19T21:35:32.5785190Z #### capture\_envelope
2025-08-19T21:35:32.5785407Z 
2025-08-19T21:35:32.5785527Z ```python
2025-08-19T21:35:32.5785842Z def capture_envelope(envelope)
2025-08-19T21:35:32.5786218Z ```
2025-08-19T21:35:32.5786374Z 
2025-08-19T21:35:32.5786608Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T21:35:32.5787063Z 
2025-08-19T21:35:32.5787274Z <a id="api.tests.test_cors"></a>
2025-08-19T21:35:32.5787906Z 
2025-08-19T21:35:32.5788053Z # api.tests.test\_cors
2025-08-19T21:35:32.5788273Z 
2025-08-19T21:35:32.5788423Z <a id="api.tests.test_imports"></a>
2025-08-19T21:35:32.5788722Z 
2025-08-19T21:35:32.5788861Z # api.tests.test\_imports
2025-08-19T21:35:32.5789327Z 
2025-08-19T21:35:32.5789487Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T21:35:32.5789799Z 
2025-08-19T21:35:32.5789948Z # api.tests.test\_rate\_limit
2025-08-19T21:35:32.5790205Z 
2025-08-19T21:35:32.5790391Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T21:35:32.5790717Z 
2025-08-19T21:35:32.5790831Z #### app
2025-08-19T21:35:32.5790991Z 
2025-08-19T21:35:32.5791113Z noqa: E402
2025-08-19T21:35:32.5791278Z 
2025-08-19T21:35:32.5791440Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T21:35:32.5791752Z 
2025-08-19T21:35:32.5791899Z # api.tests.test\_entrypoint
2025-08-19T21:35:32.5792157Z 
2025-08-19T21:35:32.5792322Z <a id="api.tests.test_health"></a>
2025-08-19T21:35:32.5792623Z 
2025-08-19T21:35:32.5792761Z # api.tests.test\_health
2025-08-19T21:35:32.5792996Z 
2025-08-19T21:35:32.5793156Z <a id="api.tests.test_score"></a>
2025-08-19T21:35:32.5793430Z 
2025-08-19T21:35:32.5793567Z # api.tests.test\_score
2025-08-19T21:35:32.5793797Z 
2025-08-19T21:35:32.5793945Z <a id="api.logging_config"></a>
2025-08-19T21:35:32.5794210Z 
2025-08-19T21:35:32.5794348Z # api.logging\_config
2025-08-19T21:35:32.5794562Z 
2025-08-19T21:35:32.5794711Z <a id="api.migrations.env"></a>
2025-08-19T21:35:32.5794971Z 
2025-08-19T21:35:32.5795111Z # api.migrations.env
2025-08-19T21:35:32.5795322Z 
2025-08-19T21:35:32.5795537Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T21:35:32.5795927Z 
2025-08-19T21:35:32.5796126Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T21:35:32.5796476Z 
2025-08-19T21:35:32.5796686Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T21:35:32.5797046Z 
2025-08-19T21:35:32.5797220Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T21:35:32.5797785Z 
2025-08-19T21:35:32.5798086Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T21:35:32.5798540Z 
2025-08-19T21:35:32.5798794Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T21:35:32.5799426Z 
2025-08-19T21:35:32.5799655Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T21:35:32.5800041Z 
2025-08-19T21:35:32.5800245Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T21:35:32.5800595Z 
2025-08-19T21:35:32.5800814Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T21:35:32.5801208Z 
2025-08-19T21:35:32.5801406Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T21:35:32.5801752Z 
2025-08-19T21:35:32.5801985Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T21:35:32.5802384Z 
2025-08-19T21:35:32.5802586Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T21:35:32.5802945Z 
2025-08-19T21:35:32.5803171Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T21:35:32.5803665Z 
2025-08-19T21:35:32.5803878Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T21:35:32.5804264Z 
2025-08-19T21:35:32.5804495Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T21:35:32.5804880Z 
2025-08-19T21:35:32.5805085Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T21:35:32.5805434Z 
2025-08-19T21:35:32.5805694Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T21:35:32.5806122Z 
2025-08-19T21:35:32.5806351Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T21:35:32.5806734Z 
2025-08-19T21:35:32.5806978Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T21:35:32.5807368Z 
2025-08-19T21:35:32.5807575Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T21:35:32.5807946Z 
2025-08-19T21:35:32.5808200Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T21:35:32.5808617Z 
2025-08-19T21:35:32.5808841Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T21:35:32.5809686Z 
2025-08-19T21:35:32.5809895Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T21:35:32.5810259Z 
2025-08-19T21:35:32.5810436Z # api.migrations.versions.0001\_baseline
2025-08-19T21:35:32.5810759Z 
2025-08-19T21:35:32.5810921Z <a id="api.migrations.versions"></a>
2025-08-19T21:35:32.5811230Z 
2025-08-19T21:35:32.5811376Z # api.migrations.versions
2025-08-19T21:35:32.5811625Z 
2025-08-19T21:35:32.5811766Z <a id="api.migrations"></a>
2025-08-19T21:35:32.5812023Z 
2025-08-19T21:35:32.5812144Z # api.migrations
2025-08-19T21:35:32.5812455Z 
2025-08-19T21:35:32.5812587Z <a id="api.db"></a>
2025-08-19T21:35:32.5812784Z 
2025-08-19T21:35:32.5812899Z # api.db
2025-08-19T21:35:32.5813063Z 
2025-08-19T21:35:32.5813223Z <a id="api.routes.score"></a>
2025-08-19T21:35:32.5813487Z 
2025-08-19T21:35:32.5813616Z # api.routes.score
2025-08-19T21:35:32.5813895Z 
2025-08-19T21:35:32.5814042Z <a id="api.routes.stats"></a>
2025-08-19T21:35:32.5814299Z 
2025-08-19T21:35:32.5814448Z # api.routes.stats
2025-08-19T21:35:32.5814659Z 
2025-08-19T21:35:32.5814804Z <a id="api.routes.roi"></a>
2025-08-19T21:35:32.5815051Z 
2025-08-19T21:35:32.5815184Z # api.routes.roi
2025-08-19T21:35:32.5815382Z 
2025-08-19T21:35:32.5815536Z <a id="api.routes.health"></a>
2025-08-19T21:35:32.5815814Z 
2025-08-19T21:35:32.5815943Z # api.routes.health
2025-08-19T21:35:32.5816143Z 
2025-08-19T21:35:32.5816314Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T21:35:32.5816631Z 
2025-08-19T21:35:32.5816746Z #### MAX\_SKEW
2025-08-19T21:35:32.5816928Z 
2025-08-19T21:35:32.5817053Z seconds
2025-08-19T21:35:32.5817208Z 
2025-08-19T21:35:32.5817373Z <a id="api.routes.health.health"></a>
2025-08-19T21:35:32.5817691Z 
2025-08-19T21:35:32.5817805Z #### health
2025-08-19T21:35:32.5817977Z 
2025-08-19T21:35:32.5818091Z ```python
2025-08-19T21:35:32.5818458Z @router.get("/health", include_in_schema=False)
2025-08-19T21:35:32.5819387Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T21:35:32.5820253Z ```
2025-08-19T21:35:32.5820414Z 
2025-08-19T21:35:32.5820638Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T21:35:32.5821011Z 
2025-08-19T21:35:32.5821173Z <a id="api.routes.repository"></a>
2025-08-19T21:35:32.5821476Z 
2025-08-19T21:35:32.5821617Z # api.routes.repository
2025-08-19T21:35:32.5821849Z 
2025-08-19T21:35:32.5821986Z <a id="api.routes"></a>
2025-08-19T21:35:32.5822219Z 
2025-08-19T21:35:32.5822340Z # api.routes
2025-08-19T21:35:32.5822524Z 
2025-08-19T21:35:32.5822677Z <a id="api.models.fee"></a>
2025-08-19T21:35:32.5822929Z 
2025-08-19T21:35:32.5823048Z # api.models.fee
2025-08-19T21:35:32.5823250Z 
2025-08-19T21:35:32.5823380Z <a id="api.models"></a>
2025-08-19T21:35:32.5823600Z 
2025-08-19T21:35:32.5823741Z # api.models
2025-08-19T21:35:32.5823925Z 
2025-08-19T21:35:32.5824071Z <a id="api.roi_repository"></a>
2025-08-19T21:35:32.5824337Z 
2025-08-19T21:35:32.5824483Z # api.roi\_repository
2025-08-19T21:35:32.5824704Z 
2025-08-19T21:35:32.5824841Z <a id="api.main"></a>
2025-08-19T21:35:32.5825067Z 
2025-08-19T21:35:32.5825184Z # api.main
2025-08-19T21:35:32.5825353Z 
2025-08-19T21:35:32.5825502Z <a id="api.main.ready"></a>
2025-08-19T21:35:32.5825752Z 
2025-08-19T21:35:32.5825866Z #### ready
2025-08-19T21:35:32.5826027Z 
2025-08-19T21:35:32.5826145Z ```python
2025-08-19T21:35:32.5826619Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T21:35:32.5827445Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T21:35:32.5828111Z                                                                       str]
2025-08-19T21:35:32.5828532Z ```
2025-08-19T21:35:32.5828674Z 
2025-08-19T21:35:32.5828847Z Return 200 only when migrations are at head.
2025-08-19T21:35:32.5829336Z 
2025-08-19T21:35:32.5829468Z <a id="api.config"></a>
2025-08-19T21:35:32.5829674Z 
2025-08-19T21:35:32.5829802Z # api.config
2025-08-19T21:35:32.5829978Z 
2025-08-19T21:35:32.5830117Z <a id="api.security"></a>
2025-08-19T21:35:32.5830377Z 
2025-08-19T21:35:32.5830718Z # api.security
2025-08-19T21:35:32.5830903Z 
2025-08-19T21:35:32.5831023Z <a id="etl"></a>
2025-08-19T21:35:32.5831223Z 
2025-08-19T21:35:32.5831329Z # etl
2025-08-19T21:35:32.5831489Z 
2025-08-19T21:35:32.5831644Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T21:35:32.5831919Z 
2025-08-19T21:35:32.5832056Z # etl.fba\_fee\_ingestor
2025-08-19T21:35:32.5832293Z 
2025-08-19T21:35:32.5832438Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T21:35:32.5832709Z 
2025-08-19T21:35:32.5832844Z # etl.sp\_fees\_ingestor
2025-08-19T21:35:32.5833078Z 
2025-08-19T21:35:32.5833221Z <a id="etl.keepa_ingestor"></a>
2025-08-19T21:35:32.5833486Z 
2025-08-19T21:35:32.5833619Z # etl.keepa\_ingestor
2025-08-19T21:35:32.5833831Z 
2025-08-19T21:35:32.5833954Z <a id="etl.db"></a>
2025-08-19T21:35:32.5834160Z 
2025-08-19T21:35:32.5834268Z # etl.db
2025-08-19T21:35:32.5834427Z 
2025-08-19T21:35:32.5834581Z <a id="etl.dialects.schemas"></a>
2025-08-19T21:35:32.5834864Z 
2025-08-19T21:35:32.5835004Z # etl.dialects.schemas
2025-08-19T21:35:32.5835227Z 
2025-08-19T21:35:32.5835430Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T21:35:32.5835776Z 
2025-08-19T21:35:32.5835940Z # etl.dialects.amazon\_reimbursements
2025-08-19T21:35:32.5836245Z 
2025-08-19T21:35:32.5836430Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T21:35:32.5836755Z 
2025-08-19T21:35:32.5836913Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T21:35:32.5837212Z 
2025-08-19T21:35:32.5837370Z <a id="etl.dialects.test_generic"></a>
2025-08-19T21:35:32.5837672Z 
2025-08-19T21:35:32.5837823Z # etl.dialects.test\_generic
2025-08-19T21:35:32.5838079Z 
2025-08-19T21:35:32.5838245Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T21:35:32.5838560Z 
2025-08-19T21:35:32.5838717Z # etl.dialects.amazon\_returns
2025-08-19T21:35:32.5839151Z 
2025-08-19T21:35:32.5839344Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T21:35:32.5839695Z 
2025-08-19T21:35:32.5839855Z # etl.dialects.amazon\_fee\_preview
2025-08-19T21:35:32.5840355Z 
2025-08-19T21:35:32.5840567Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T21:35:32.5840923Z 
2025-08-19T21:35:32.5841093Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T21:35:32.5841417Z 
2025-08-19T21:35:32.5841596Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T21:35:32.5841925Z 
2025-08-19T21:35:32.5842091Z # etl.dialects.amazon\_settlements
2025-08-19T21:35:32.5842387Z 
2025-08-19T21:35:32.5842528Z <a id="etl.dialects"></a>
2025-08-19T21:35:32.5842818Z 
2025-08-19T21:35:32.5842946Z # etl.dialects
2025-08-19T21:35:32.5843181Z 
2025-08-19T21:35:32.5843311Z <a id="ingest"></a>
2025-08-19T21:35:32.5843514Z 
2025-08-19T21:35:32.5843624Z # ingest
2025-08-19T21:35:32.5843789Z 
2025-08-19T21:35:32.5843937Z <a id="ingest.maintenance"></a>
2025-08-19T21:35:32.5844206Z 
2025-08-19T21:35:32.5844339Z # ingest.maintenance
2025-08-19T21:35:32.5844562Z 
2025-08-19T21:35:32.5844706Z <a id="ingest.copy_loader"></a>
2025-08-19T21:35:32.5844970Z 
2025-08-19T21:35:32.5845108Z # ingest.copy\_loader
2025-08-19T21:35:32.5845339Z 
2025-08-19T21:35:32.5845523Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T21:35:32.5845871Z 
2025-08-19T21:35:32.5846007Z #### copy\_df\_via\_temp
2025-08-19T21:35:32.5846232Z 
2025-08-19T21:35:32.5846347Z ```python
2025-08-19T21:35:32.5846662Z def copy_df_via_temp(engine: Engine,
2025-08-19T21:35:32.5847096Z                      df: pd.DataFrame,
2025-08-19T21:35:32.5847518Z                      target_table: str,
2025-08-19T21:35:32.5847920Z                      *,
2025-08-19T21:35:32.5848300Z                      target_schema: Optional[str] = None,
2025-08-19T21:35:32.5848794Z                      columns: Sequence[str],
2025-08-19T21:35:32.5849476Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T21:35:32.5850008Z                      analyze_after: bool = False,
2025-08-19T21:35:32.5850493Z                      connection: Any | None = None) -> int
2025-08-19T21:35:32.5850938Z ```
2025-08-19T21:35:32.5851088Z 
2025-08-19T21:35:32.5851392Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T21:35:32.5852072Z 
2025-08-19T21:35:32.5852238Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T21:35:32.5852548Z 
2025-08-19T21:35:32.5852699Z # ingest.tests.test\_smoke
2025-08-19T21:35:32.5852951Z 
2025-08-19T21:35:32.5853090Z <a id="ingest.tests"></a>
2025-08-19T21:35:32.5853333Z 
2025-08-19T21:35:32.5853453Z # ingest.tests
2025-08-19T21:35:32.5853638Z 
2025-08-19T21:35:32.5853799Z <a id="ingest.upload_router"></a>
2025-08-19T21:35:32.5854081Z 
2025-08-19T21:35:32.5854217Z # ingest.upload\_router
2025-08-19T21:35:32.5854442Z 
2025-08-19T21:35:32.5854599Z <a id="ingest.email_watcher"></a>
2025-08-19T21:35:32.5854885Z 
2025-08-19T21:35:32.5855019Z # ingest.email\_watcher
2025-08-19T21:35:32.5855245Z 
2025-08-19T21:35:32.5855404Z <a id="ingest.email_watcher.main"></a>
2025-08-19T21:35:32.5855706Z 
2025-08-19T21:35:32.5855833Z #### main
2025-08-19T21:35:32.5855995Z 
2025-08-19T21:35:32.5856110Z ```python
2025-08-19T21:35:32.5856424Z def main() -> dict[str, str]
2025-08-19T21:35:32.5856781Z ```
2025-08-19T21:35:32.5856932Z 
2025-08-19T21:35:32.5857197Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T21:35:32.5857616Z 
2025-08-19T21:35:32.5857857Z Returns {"status": "success"} when processing completes.
2025-08-19T21:35:32.5858257Z 
2025-08-19T21:35:32.5858399Z <a id="ingest.tasks"></a>
2025-08-19T21:35:32.5858634Z 
2025-08-19T21:35:32.5858763Z # ingest.tasks
2025-08-19T21:35:32.5858953Z 
2025-08-19T21:35:32.5859315Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T21:35:32.5859647Z 
2025-08-19T21:35:32.5859788Z #### task\_import\_file
2025-08-19T21:35:32.5860004Z 
2025-08-19T21:35:32.5860119Z ```python
2025-08-19T21:35:32.5860517Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T21:35:32.5861076Z def task_import_file(self: Any,
2025-08-19T21:35:32.5861480Z                      uri: str,
2025-08-19T21:35:32.5861888Z                      report_type: str | None = None,
2025-08-19T21:35:32.5862624Z                      force: bool = False) -> dict[str, Any]
2025-08-19T21:35:32.5863071Z ```
2025-08-19T21:35:32.5863229Z 
2025-08-19T21:35:32.5863478Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T21:35:32.5863877Z 
2025-08-19T21:35:32.5864025Z <a id="ingest.celery_app"></a>
2025-08-19T21:35:32.5864295Z 
2025-08-19T21:35:32.5864426Z # ingest.celery\_app
2025-08-19T21:35:32.5864634Z 
2025-08-19T21:35:32.5864798Z <a id="ingest.ingest_router"></a>
2025-08-19T21:35:32.5865077Z 
2025-08-19T21:35:32.5865217Z # ingest.ingest\_router
2025-08-19T21:35:32.5865445Z 
2025-08-19T21:35:32.5865584Z <a id="logistics_etl"></a>
2025-08-19T21:35:32.5865820Z 
2025-08-19T21:35:32.5865941Z # logistics\_etl
2025-08-19T21:35:32.5866141Z 
2025-08-19T21:35:32.5866282Z Daily logistics ETL job.
2025-08-19T21:35:32.5866519Z 
2025-08-19T21:35:32.5866677Z <a id="logistics_etl.__main__"></a>
2025-08-19T21:35:32.5866968Z 
2025-08-19T21:35:32.5867109Z # logistics\_etl.\_\_main\_\_
2025-08-19T21:35:32.5867370Z 
2025-08-19T21:35:32.5867532Z <a id="logistics_etl.dsn"></a>
2025-08-19T21:35:32.5867790Z 
2025-08-19T21:35:32.5867918Z # logistics\_etl.dsn
2025-08-19T21:35:32.5868136Z 
2025-08-19T21:35:32.5868352Z Local DSN builder to avoid cross-service dependency.
2025-08-19T21:35:32.5868728Z 
2025-08-19T21:35:32.5868904Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T21:35:32.5869397Z 
2025-08-19T21:35:32.5869520Z #### build\_dsn
2025-08-19T21:35:32.5869709Z 
2025-08-19T21:35:32.5869834Z ```python
2025-08-19T21:35:32.5870149Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:35:32.5870573Z ```
2025-08-19T21:35:32.5870728Z 
2025-08-19T21:35:32.5870989Z Return a Postgres DSN assembled from environment variables.
2025-08-19T21:35:32.5871421Z 
2025-08-19T21:35:32.5871703Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T21:35:32.5872433Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T21:35:32.5873077Z error when any required variable is missing.
2025-08-19T21:35:32.5873422Z 
2025-08-19T21:35:32.5873954Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T21:35:32.5874283Z 
2025-08-19T21:35:32.5874437Z # logistics\_etl.tests.conftest
2025-08-19T21:35:32.5874713Z 
2025-08-19T21:35:32.5874914Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T21:35:32.5875262Z 
2025-08-19T21:35:32.5875433Z # logistics\_etl.tests.test\_repository
2025-08-19T21:35:32.5875747Z 
2025-08-19T21:35:32.5875917Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T21:35:32.5876237Z 
2025-08-19T21:35:32.5876403Z # logistics\_etl.tests.test\_cron
2025-08-19T21:35:32.5876685Z 
2025-08-19T21:35:32.5876870Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T21:35:32.5877212Z 
2025-08-19T21:35:32.5877368Z # logistics\_etl.tests.test\_imports
2025-08-19T21:35:32.5877659Z 
2025-08-19T21:35:32.5877841Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T21:35:32.5878163Z 
2025-08-19T21:35:32.5878314Z # logistics\_etl.tests.test\_smoke
2025-08-19T21:35:32.5878607Z 
2025-08-19T21:35:32.5878791Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T21:35:32.5879333Z 
2025-08-19T21:35:32.5879495Z # logistics\_etl.tests.test\_client
2025-08-19T21:35:32.5879790Z 
2025-08-19T21:35:32.5879939Z <a id="logistics_etl.tests"></a>
2025-08-19T21:35:32.5880211Z 
2025-08-19T21:35:32.5880353Z # logistics\_etl.tests
2025-08-19T21:35:32.5880570Z 
2025-08-19T21:35:32.5880715Z <a id="logistics_etl.flow"></a>
2025-08-19T21:35:32.5880976Z 
2025-08-19T21:35:32.5881112Z # logistics\_etl.flow
2025-08-19T21:35:32.5881326Z 
2025-08-19T21:35:32.5881481Z <a id="logistics_etl.client"></a>
2025-08-19T21:35:32.5881767Z 
2025-08-19T21:35:32.5881902Z # logistics\_etl.client
2025-08-19T21:35:32.5882127Z 
2025-08-19T21:35:32.5882282Z <a id="logistics_etl.cron"></a>
2025-08-19T21:35:32.5882544Z 
2025-08-19T21:35:32.5882679Z # logistics\_etl.cron
2025-08-19T21:35:32.5882903Z 
2025-08-19T21:35:32.5883054Z <a id="logistics_etl.db"></a>
2025-08-19T21:35:32.5883315Z 
2025-08-19T21:35:32.5883441Z # logistics\_etl.db
2025-08-19T21:35:32.5884117Z 
2025-08-19T21:35:32.5884289Z <a id="logistics_etl.repository"></a>
2025-08-19T21:35:32.5884624Z 
2025-08-19T21:35:32.5940605Z # logistics\_etl.repository
2025-08-19T21:35:32.5940961Z 
2025-08-19T21:35:32.5941087Z <a id="alert_bot"></a>
2025-08-19T21:35:32.5941294Z 
2025-08-19T21:35:32.5941397Z # alert\_bot
2025-08-19T21:35:32.5941545Z 
2025-08-19T21:35:32.5941684Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T21:35:32.5941974Z 
2025-08-19T21:35:32.5942096Z # alert\_bot.tests.test\_smoke
2025-08-19T21:35:32.5942329Z 
2025-08-19T21:35:32.5942457Z <a id="alert_bot.tests"></a>
2025-08-19T21:35:32.5942684Z 
2025-08-19T21:35:32.5942837Z # alert\_bot.tests
2025-08-19T21:35:32.5943009Z 
2025-08-19T21:35:32.5943131Z <a id="alert_bot.alert_bot"></a>
2025-08-19T21:35:32.5943348Z 
2025-08-19T21:35:32.5943458Z # alert\_bot.alert\_bot
2025-08-19T21:35:32.5943645Z 
2025-08-19T21:35:32.5943761Z <a id="alert_bot.rules"></a>
2025-08-19T21:35:32.5943971Z 
2025-08-19T21:35:32.5944092Z # alert\_bot.rules
2025-08-19T21:35:32.5944264Z 
2025-08-19T21:35:32.5944371Z <a id="common"></a>
2025-08-19T21:35:32.5944542Z 
2025-08-19T21:35:32.5944642Z # common
2025-08-19T21:35:32.5944775Z 
2025-08-19T21:35:32.5944886Z <a id="common.dsn"></a>
2025-08-19T21:35:32.5945078Z 
2025-08-19T21:35:32.5945172Z # common.dsn
2025-08-19T21:35:32.5945321Z 
2025-08-19T21:35:32.5945453Z <a id="common.dsn.build_dsn"></a>
2025-08-19T21:35:32.5945688Z 
2025-08-19T21:35:32.5945788Z #### build\_dsn
2025-08-19T21:35:32.5945937Z 
2025-08-19T21:35:32.5946040Z ```python
2025-08-19T21:35:32.5946316Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:35:32.5946653Z ```
2025-08-19T21:35:32.5946779Z 
2025-08-19T21:35:32.5946962Z Return a Postgres DSN, validating required variables.
2025-08-19T21:35:32.5947282Z 
2025-08-19T21:35:32.5947585Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T21:35:32.5948303Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T21:35:32.5948969Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T21:35:32.5949868Z missing.
2025-08-19T21:35:32.5950003Z 
2025-08-19T21:35:32.5950126Z <a id="common.models_vendor"></a>
2025-08-19T21:35:32.5950371Z 
2025-08-19T21:35:32.5950482Z # common.models\_vendor
2025-08-19T21:35:32.5950682Z 
2025-08-19T21:35:32.5950829Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T21:35:32.5951093Z 
2025-08-19T21:35:32.5951197Z ## Vendor Objects
2025-08-19T21:35:32.5951358Z 
2025-08-19T21:35:32.5951457Z ```python
2025-08-19T21:35:32.5951694Z class Vendor(Base)
2025-08-19T21:35:32.5951946Z ```
2025-08-19T21:35:32.5952070Z 
2025-08-19T21:35:32.5952192Z Vendor of inventory items.
2025-08-19T21:35:32.5952414Z 
2025-08-19T21:35:32.5952580Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T21:35:32.5952856Z 
2025-08-19T21:35:32.5952969Z ## VendorPrice Objects
2025-08-19T21:35:32.5953147Z 
2025-08-19T21:35:32.5953241Z ```python
2025-08-19T21:35:32.5953482Z class VendorPrice(Base)
2025-08-19T21:35:32.5953774Z ```
2025-08-19T21:35:32.5953923Z 
2025-08-19T21:35:32.5954085Z Association table linking vendors to pricing.
2025-08-19T21:35:32.5954381Z 
2025-08-19T21:35:32.5954497Z <a id="common.db_url"></a>
2025-08-19T21:35:32.5954696Z 
2025-08-19T21:35:32.5954803Z # common.db\_url
2025-08-19T21:35:32.5954962Z 
2025-08-19T21:35:32.5955101Z <a id="common.db_url.build_url"></a>
2025-08-19T21:35:32.5955338Z 
2025-08-19T21:35:32.5955434Z #### build\_url
2025-08-19T21:35:32.5955591Z 
2025-08-19T21:35:32.5955684Z ```python
2025-08-19T21:35:32.5955946Z def build_url(async_: bool = True) -> str
2025-08-19T21:35:32.5956307Z ```
2025-08-19T21:35:32.5956435Z 
2025-08-19T21:35:32.5956587Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:35:32.5956866Z 
2025-08-19T21:35:32.5956980Z <a id="common.keepa"></a>
2025-08-19T21:35:32.5957177Z 
2025-08-19T21:35:32.5957289Z # common.keepa
2025-08-19T21:35:32.5957452Z 
2025-08-19T21:35:32.5957566Z <a id="common.llm"></a>
2025-08-19T21:35:32.5957934Z 
2025-08-19T21:35:32.5958030Z # common.llm
2025-08-19T21:35:32.5958177Z 
2025-08-19T21:35:32.5958298Z <a id="common.settings"></a>
2025-08-19T21:35:32.5958521Z 
2025-08-19T21:35:32.5958628Z # common.settings
2025-08-19T21:35:32.5958795Z 
2025-08-19T21:35:32.5959258Z <a id="common.db"></a>
2025-08-19T21:35:32.5959441Z 
2025-08-19T21:35:32.5959535Z # common.db
2025-08-19T21:35:32.5959679Z 
2025-08-19T21:35:32.5959821Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T21:35:32.5960091Z 
2025-08-19T21:35:32.5960207Z #### build\_sqlalchemy\_url
2025-08-19T21:35:32.5960410Z 
2025-08-19T21:35:32.5960505Z ```python
2025-08-19T21:35:32.5960778Z def build_sqlalchemy_url() -> str
2025-08-19T21:35:32.5961099Z ```
2025-08-19T21:35:32.5961225Z 
2025-08-19T21:35:32.5961382Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:35:32.5961654Z 
2025-08-19T21:35:32.5961794Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T21:35:32.5962070Z 
2025-08-19T21:35:32.5962181Z #### build\_asyncpg\_dsn
2025-08-19T21:35:32.5962370Z 
2025-08-19T21:35:32.5962471Z ```python
2025-08-19T21:35:32.5962740Z def build_asyncpg_dsn() -> str
2025-08-19T21:35:32.5963050Z ```
2025-08-19T21:35:32.5963171Z 
2025-08-19T21:35:32.5963366Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:35:32.5963692Z 
2025-08-19T21:35:32.5963827Z <a id="common.db.refresh_mvs"></a>
2025-08-19T21:35:32.5964060Z 
2025-08-19T21:35:32.5964160Z #### refresh\_mvs
2025-08-19T21:35:32.5964326Z 
2025-08-19T21:35:32.5964420Z ```python
2025-08-19T21:35:32.5964726Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:35:32.5965132Z ```
2025-08-19T21:35:32.5965267Z 
2025-08-19T21:35:32.5965488Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:35:32.5965835Z 
2025-08-19T21:35:32.5965952Z <a id="common.config"></a>
2025-08-19T21:35:32.5966163Z 
2025-08-19T21:35:32.5966266Z # common.config
2025-08-19T21:35:32.5966427Z 
2025-08-19T21:35:32.5966540Z <a id="common.base"></a>
2025-08-19T21:35:32.5966736Z 
2025-08-19T21:35:32.5966839Z # common.base
2025-08-19T21:35:32.5967160Z 
2025-08-19T21:35:32.5967291Z <a id="common.base.Base"></a>
2025-08-19T21:35:32.5967508Z 
2025-08-19T21:35:32.5967608Z ## Base Objects
2025-08-19T21:35:32.5967764Z 
2025-08-19T21:35:32.5967863Z ```python
2025-08-19T21:35:32.5968115Z class Base(DeclarativeBase)
2025-08-19T21:35:32.5968404Z ```
2025-08-19T21:35:32.5968527Z 
2025-08-19T21:35:32.5968656Z Base class for SQLAlchemy models.
2025-08-19T21:35:32.5968897Z 
2025-08-19T21:35:32.5969223Z <a id="repricer"></a>
2025-08-19T21:35:32.5969419Z 
2025-08-19T21:35:32.5969525Z # repricer
2025-08-19T21:35:32.5969667Z 
2025-08-19T21:35:32.5969799Z <a id="repricer.app.schemas"></a>
2025-08-19T21:35:32.5970034Z 
2025-08-19T21:35:32.5970153Z # repricer.app.schemas
2025-08-19T21:35:32.5970336Z 
2025-08-19T21:35:32.5970462Z <a id="repricer.app.deps"></a>
2025-08-19T21:35:32.5970685Z 
2025-08-19T21:35:32.5970793Z # repricer.app.deps
2025-08-19T21:35:32.5970960Z 
2025-08-19T21:35:32.5971138Z Placeholder module for Keepa / SP-API clients.
2025-08-19T21:35:32.5971441Z 
2025-08-19T21:35:32.5971565Z <a id="repricer.app.logic"></a>
2025-08-19T21:35:32.5971781Z 
2025-08-19T21:35:32.5971901Z # repricer.app.logic
2025-08-19T21:35:32.5972072Z 
2025-08-19T21:35:32.5972224Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T21:35:32.5972505Z 
2025-08-19T21:35:32.5972604Z #### MIN\_MARGIN
2025-08-19T21:35:32.5972757Z 
2025-08-19T21:35:32.5972851Z 15 % ROI
2025-08-19T21:35:32.5972988Z 
2025-08-19T21:35:32.5973151Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T21:35:32.5973440Z 
2025-08-19T21:35:32.5973555Z #### compute\_price
2025-08-19T21:35:32.5973721Z 
2025-08-19T21:35:32.5973816Z ```python
2025-08-19T21:35:32.5974195Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T21:35:32.5974660Z ```
2025-08-19T21:35:32.5974796Z 
2025-08-19T21:35:32.5974961Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T21:35:32.5975402Z Replace with real competitive logic later.
2025-08-19T21:35:32.5975905Z 
2025-08-19T21:35:32.5976037Z <a id="repricer.app.main"></a>
2025-08-19T21:35:32.5976271Z 
2025-08-19T21:35:32.5976463Z # repricer.app.main
2025-08-19T21:35:32.5976635Z 
2025-08-19T21:35:32.5976750Z <a id="repricer.app"></a>
2025-08-19T21:35:32.5976956Z 
2025-08-19T21:35:32.5977057Z # repricer.app
2025-08-19T21:35:32.5977212Z 
2025-08-19T21:35:32.5977363Z <a id="repricer.tests.test_imports"></a>
2025-08-19T21:35:32.5977635Z 
2025-08-19T21:35:32.5977763Z # repricer.tests.test\_imports
2025-08-19T21:35:32.5977984Z 
2025-08-19T21:35:32.5978127Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T21:35:32.5978376Z 
2025-08-19T21:35:32.5978498Z # repricer.tests.test\_smoke
2025-08-19T21:35:32.5978718Z 
2025-08-19T21:35:32.5978834Z <a id="repricer.tests"></a>
2025-08-19T21:35:32.5979197Z 
2025-08-19T21:35:32.5979303Z # repricer.tests
2025-08-19T21:35:32.5979476Z 
2025-08-19T21:35:32.5979573Z <a id="db"></a>
2025-08-19T21:35:32.5979726Z 
2025-08-19T21:35:32.5979820Z # db
2025-08-19T21:35:32.5979946Z 
2025-08-19T21:35:32.5980070Z <a id="db.utils.views"></a>
2025-08-19T21:35:32.5980284Z 
2025-08-19T21:35:32.5980383Z # db.utils.views
2025-08-19T21:35:32.5980536Z 
2025-08-19T21:35:32.5980679Z <a id="db.utils.views.replace_view"></a>
2025-08-19T21:35:32.5980946Z 
2025-08-19T21:35:32.5981048Z #### replace\_view
2025-08-19T21:35:32.5981209Z 
2025-08-19T21:35:32.5981310Z ```python
2025-08-19T21:35:32.5981604Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T21:35:32.5981995Z ```
2025-08-19T21:35:32.5982122Z 
2025-08-19T21:35:32.5982264Z Drop and recreate a SQL view atomically.
2025-08-19T21:35:32.5982525Z 
2025-08-19T21:35:32.5982631Z <a id="db.utils"></a>
2025-08-19T21:35:32.5982808Z 
2025-08-19T21:35:32.5982902Z # db.utils
2025-08-19T21:35:32.5983046Z 
2025-08-19T21:35:32.5983158Z <a id="price_importer"></a>
2025-08-19T21:35:32.5983369Z 
2025-08-19T21:35:32.5983481Z # price\_importer
2025-08-19T21:35:32.5983645Z 
2025-08-19T21:35:32.5983805Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T21:35:32.5984105Z 
2025-08-19T21:35:32.5984245Z # price\_importer.services\_common.dsn
2025-08-19T21:35:32.5984681Z 
2025-08-19T21:35:32.5984878Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T21:35:32.5985201Z 
2025-08-19T21:35:32.5985297Z #### build\_dsn
2025-08-19T21:35:32.5985446Z 
2025-08-19T21:35:32.5985550Z ```python
2025-08-19T21:35:32.5985808Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:35:32.5986159Z ```
2025-08-19T21:35:32.5986281Z 
2025-08-19T21:35:32.5986381Z Return safe DSN.
2025-08-19T21:35:32.5986547Z 
2025-08-19T21:35:32.5987011Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T21:35:32.5987316Z 
2025-08-19T21:35:32.5987515Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T21:35:32.5987847Z 
2025-08-19T21:35:32.5988025Z # price\_importer.services\_common.models\_vendor
2025-08-19T21:35:32.5988326Z 
2025-08-19T21:35:32.5988500Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T21:35:32.5988795Z 
2025-08-19T21:35:32.5988939Z # price\_importer.services\_common.db\_url
2025-08-19T21:35:32.5989423Z 
2025-08-19T21:35:32.5989629Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T21:35:32.5989975Z 
2025-08-19T21:35:32.5990084Z #### build\_url
2025-08-19T21:35:32.5990242Z 
2025-08-19T21:35:32.5990340Z ```python
2025-08-19T21:35:32.5990623Z def build_url(async_: bool = True) -> str
2025-08-19T21:35:32.5990966Z ```
2025-08-19T21:35:32.5991096Z 
2025-08-19T21:35:32.5991247Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:35:32.5991514Z 
2025-08-19T21:35:32.5991682Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T21:35:32.5991977Z 
2025-08-19T21:35:32.5992120Z # price\_importer.services\_common.keepa
2025-08-19T21:35:32.5992384Z 
2025-08-19T21:35:32.5992545Z <a id="price_importer.services_common.llm"></a>
2025-08-19T21:35:32.5992822Z 
2025-08-19T21:35:32.5992960Z # price\_importer.services\_common.llm
2025-08-19T21:35:32.5993220Z 
2025-08-19T21:35:32.5993393Z <a id="price_importer.services_common.settings"></a>
2025-08-19T21:35:32.5993887Z 
2025-08-19T21:35:32.5994036Z # price\_importer.services\_common.settings
2025-08-19T21:35:32.5994314Z 
2025-08-19T21:35:32.5994471Z <a id="price_importer.services_common.db"></a>
2025-08-19T21:35:32.5994746Z 
2025-08-19T21:35:32.5994888Z # price\_importer.services\_common.db
2025-08-19T21:35:32.5995139Z 
2025-08-19T21:35:32.5995372Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T21:35:32.5995748Z 
2025-08-19T21:35:32.5995870Z #### build\_sqlalchemy\_url
2025-08-19T21:35:32.5996069Z 
2025-08-19T21:35:32.5996166Z ```python
2025-08-19T21:35:32.5996430Z def build_sqlalchemy_url() -> str
2025-08-19T21:35:32.5996752Z ```
2025-08-19T21:35:32.5996879Z 
2025-08-19T21:35:32.5997028Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:35:32.5997300Z 
2025-08-19T21:35:32.5997528Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T21:35:32.5997887Z 
2025-08-19T21:35:32.5998005Z #### build\_asyncpg\_dsn
2025-08-19T21:35:32.5998221Z 
2025-08-19T21:35:32.5998326Z ```python
2025-08-19T21:35:32.5998595Z def build_asyncpg_dsn() -> str
2025-08-19T21:35:32.5998912Z ```
2025-08-19T21:35:32.5999198Z 
2025-08-19T21:35:32.5999410Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:35:32.5999754Z 
2025-08-19T21:35:32.5999954Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T21:35:32.6000281Z 
2025-08-19T21:35:32.6000381Z #### refresh\_mvs
2025-08-19T21:35:32.6000538Z 
2025-08-19T21:35:32.6000630Z ```python
2025-08-19T21:35:32.6000926Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:35:32.6001293Z ```
2025-08-19T21:35:32.6001424Z 
2025-08-19T21:35:32.6001633Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:35:32.6001970Z 
2025-08-19T21:35:32.6002125Z <a id="price_importer.services_common"></a>
2025-08-19T21:35:32.6002388Z 
2025-08-19T21:35:32.6002523Z # price\_importer.services\_common
2025-08-19T21:35:32.6002786Z 
2025-08-19T21:35:32.6002948Z <a id="price_importer.services_common.base"></a>
2025-08-19T21:35:32.6003418Z 
2025-08-19T21:35:32.6003557Z # price\_importer.services\_common.base
2025-08-19T21:35:32.6003824Z 
2025-08-19T21:35:32.6003969Z <a id="price_importer.normaliser"></a>
2025-08-19T21:35:32.6004238Z 
2025-08-19T21:35:32.6004378Z # price\_importer.normaliser
2025-08-19T21:35:32.6004615Z 
2025-08-19T21:35:32.6004794Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T21:35:32.6005128Z 
2025-08-19T21:35:32.6005281Z # price\_importer.common.models\_vendor
2025-08-19T21:35:32.6005560Z 
2025-08-19T21:35:32.6005716Z <a id="price_importer.common.db_url"></a>
2025-08-19T21:35:32.6006016Z 
2025-08-19T21:35:32.6006154Z # price\_importer.common.db\_url
2025-08-19T21:35:32.6006389Z 
2025-08-19T21:35:32.6006567Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T21:35:32.6006881Z 
2025-08-19T21:35:32.6006983Z #### make\_dsn
2025-08-19T21:35:32.6007153Z 
2025-08-19T21:35:32.6007253Z ```python
2025-08-19T21:35:32.6007535Z def make_dsn(async_: bool = False) -> str
2025-08-19T21:35:32.6007916Z ```
2025-08-19T21:35:32.6008049Z 
2025-08-19T21:35:32.6008248Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T21:35:32.6008578Z 
2025-08-19T21:35:32.6008756Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T21:35:32.6009268Z 
2025-08-19T21:35:32.6009398Z #### build\_url
2025-08-19T21:35:32.6009579Z 
2025-08-19T21:35:32.6009654Z ```python
2025-08-19T21:35:32.6009845Z def build_url(async_: bool = False) -> str
2025-08-19T21:35:32.6010065Z ```
2025-08-19T21:35:32.6010154Z 
2025-08-19T21:35:32.6010276Z Return Postgres DSN built from environment variables.
2025-08-19T21:35:32.6010479Z 
2025-08-19T21:35:32.6010573Z <a id="price_importer.common"></a>
2025-08-19T21:35:32.6010727Z 
2025-08-19T21:35:32.6010808Z # price\_importer.common
2025-08-19T21:35:32.6010945Z 
2025-08-19T21:35:32.6011038Z <a id="price_importer.common.base"></a>
2025-08-19T21:35:32.6011204Z 
2025-08-19T21:35:32.6011288Z # price\_importer.common.base
2025-08-19T21:35:32.6011601Z 
2025-08-19T21:35:32.6011707Z <a id="price_importer.tests.conftest"></a>
2025-08-19T21:35:32.6011882Z 
2025-08-19T21:35:32.6011974Z # price\_importer.tests.conftest
2025-08-19T21:35:32.6012123Z 
2025-08-19T21:35:32.6012222Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T21:35:32.6012404Z 
2025-08-19T21:35:32.6012491Z # price\_importer.tests.test\_reader
2025-08-19T21:35:32.6012648Z 
2025-08-19T21:35:32.6012749Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T21:35:32.6012929Z 
2025-08-19T21:35:32.6013015Z # price\_importer.tests.test\_imports
2025-08-19T21:35:32.6013172Z 
2025-08-19T21:35:32.6013277Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T21:35:32.6013451Z 
2025-08-19T21:35:32.6013537Z # price\_importer.tests.test\_smoke
2025-08-19T21:35:32.6013698Z 
2025-08-19T21:35:32.6013804Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T21:35:32.6013987Z 
2025-08-19T21:35:32.6014078Z # price\_importer.tests.test\_normaliser
2025-08-19T21:35:32.6014251Z 
2025-08-19T21:35:32.6014340Z <a id="price_importer.tests"></a>
2025-08-19T21:35:32.6014490Z 
2025-08-19T21:35:32.6014573Z # price\_importer.tests
2025-08-19T21:35:32.6014697Z 
2025-08-19T21:35:32.6014783Z <a id="price_importer.reader"></a>
2025-08-19T21:35:32.6014940Z 
2025-08-19T21:35:32.6015018Z # price\_importer.reader
2025-08-19T21:35:32.6015142Z 
2025-08-19T21:35:32.6015231Z <a id="price_importer.repository"></a>
2025-08-19T21:35:32.6015398Z 
2025-08-19T21:35:32.6015484Z # price\_importer.repository
2025-08-19T21:35:32.6015624Z 
2025-08-19T21:35:32.6015714Z <a id="price_importer.import"></a>
2025-08-19T21:35:32.6015860Z 
2025-08-19T21:35:32.6015936Z # price\_importer.import
2025-08-19T21:35:32.6016063Z 
2025-08-19T21:35:32.6016132Z <a id="fees_h10"></a>
2025-08-19T21:35:32.6016244Z 
2025-08-19T21:35:32.6016307Z # fees\_h10
2025-08-19T21:35:32.6016407Z 
2025-08-19T21:35:32.6016481Z <a id="fees_h10.worker"></a>
2025-08-19T21:35:32.6016609Z 
2025-08-19T21:35:32.6016679Z # fees\_h10.worker
2025-08-19T21:35:32.6016786Z 
2025-08-19T21:35:32.6017012Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T21:35:32.6017188Z 
2025-08-19T21:35:32.6017267Z #### list\_active\_asins
2025-08-19T21:35:32.6017384Z 
2025-08-19T21:35:32.6017446Z ```python
2025-08-19T21:35:32.6017623Z def list_active_asins() -> list[str]
2025-08-19T21:35:32.6017829Z ```
2025-08-19T21:35:32.6017921Z 
2025-08-19T21:35:32.6018032Z Return known ASINs or an empty list if unavailable.
2025-08-19T21:35:32.6018223Z 
2025-08-19T21:35:32.6018317Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T21:35:32.6018471Z 
2025-08-19T21:35:32.6018552Z # fees\_h10.tests.test\_smoke
2025-08-19T21:35:32.6018695Z 
2025-08-19T21:35:32.6018770Z <a id="fees_h10.tests"></a>
2025-08-19T21:35:32.6018899Z 
2025-08-19T21:35:32.6018968Z # fees\_h10.tests
2025-08-19T21:35:32.6019232Z 
2025-08-19T21:35:32.6019308Z <a id="fees_h10.client"></a>
2025-08-19T21:35:32.6019439Z 
2025-08-19T21:35:32.6019510Z # fees\_h10.client
2025-08-19T21:35:32.6019612Z 
2025-08-19T21:35:32.6019697Z <a id="fees_h10.repository"></a>
2025-08-19T21:35:32.6019843Z 
2025-08-19T21:35:32.6019921Z # fees\_h10.repository
2025-08-19T21:35:32.6020036Z 
2025-08-19T21:35:32.6020141Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T21:35:32.6020328Z 
2025-08-19T21:35:32.6020396Z #### upsert\_fees\_raw
2025-08-19T21:35:32.6020509Z 
2025-08-19T21:35:32.6020579Z ```python
2025-08-19T21:35:32.6020744Z def upsert_fees_raw(engine: Engine,
2025-08-19T21:35:32.6020989Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T21:35:32.6021225Z                     *,
2025-08-19T21:35:32.6021447Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T21:35:32.6021703Z ```
2025-08-19T21:35:32.6021788Z 
2025-08-19T21:35:32.6021866Z Idempotent upsert for fees.
2025-08-19T21:35:32.6021998Z 
2025-08-19T21:35:32.6022148Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T21:35:32.6022496Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T21:35:32.6022932Z Only updates when one of the mutable fields changes.
2025-08-19T21:35:32.6023129Z 
2025-08-19T21:35:32.6023198Z <a id="emailer"></a>
2025-08-19T21:35:32.6023313Z 
2025-08-19T21:35:32.6023373Z # emailer
2025-08-19T21:35:32.6023460Z 
2025-08-19T21:35:32.6023558Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T21:35:32.6023739Z 
2025-08-19T21:35:32.6023826Z # emailer.tests.test\_import\_emailer
2025-08-19T21:35:32.6023984Z 
2025-08-19T21:35:32.6024073Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T21:35:32.6042685Z 
2025-08-19T21:35:32.6042855Z # emailer.tests.test\_smoke
2025-08-19T21:35:32.6043026Z 
2025-08-19T21:35:32.6043119Z <a id="emailer.tests"></a>
2025-08-19T21:35:32.6043261Z 
2025-08-19T21:35:32.6043331Z # emailer.tests
2025-08-19T21:35:32.6043451Z 
2025-08-19T21:35:32.6043541Z <a id="emailer.generate_body"></a>
2025-08-19T21:35:32.6043698Z 
2025-08-19T21:35:32.6043782Z # emailer.generate\_body
2025-08-19T21:35:32.6043918Z 
2025-08-19T21:35:32.6043992Z <a id="llm_server"></a>
2025-08-19T21:35:32.6044124Z 
2025-08-19T21:35:32.6044204Z # llm\_server
2025-08-19T21:35:32.6044351Z 
2025-08-19T21:35:32.6044440Z <a id="llm_server.app"></a>
2025-08-19T21:35:32.6044589Z 
2025-08-19T21:35:32.6044660Z # llm\_server.app
2025-08-19T21:35:32.6044770Z 
