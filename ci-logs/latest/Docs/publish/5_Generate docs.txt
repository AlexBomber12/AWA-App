2025-08-17T19:37:28.5117284Z ##[group]Run pydoc-markdown
2025-08-17T19:37:28.5117607Z [36;1mpydoc-markdown[0m
2025-08-17T19:37:28.5160503Z shell: /usr/bin/bash -e {0}
2025-08-17T19:37:28.5160758Z env:
2025-08-17T19:37:28.5161006Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:37:28.5161405Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T19:37:28.5161789Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:37:28.5162130Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:37:28.5162482Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:37:28.5162824Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T19:37:28.5163111Z ##[endgroup]
2025-08-17T19:37:28.9094418Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T19:37:28.9095094Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T19:37:28.9095561Z In "pydoc-markdown.yml"
2025-08-17T19:37:28.9095987Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T19:37:28.9096670Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T19:37:28.9097445Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T19:37:28.9097978Z 
2025-08-17T19:37:29.1478233Z <a id="__init__"></a>
2025-08-17T19:37:29.1480602Z 
2025-08-17T19:37:29.1480757Z # \_\_init\_\_
2025-08-17T19:37:29.1480958Z 
2025-08-17T19:37:29.1481081Z <a id="api"></a>
2025-08-17T19:37:29.1481280Z 
2025-08-17T19:37:29.1481396Z # api
2025-08-17T19:37:29.1481557Z 
2025-08-17T19:37:29.1481711Z <a id="api.tests.test_llm"></a>
2025-08-17T19:37:29.1481995Z 
2025-08-17T19:37:29.1482136Z # api.tests.test\_llm
2025-08-17T19:37:29.1482369Z 
2025-08-17T19:37:29.1482533Z <a id="api.tests.test_imports"></a>
2025-08-17T19:37:29.1482838Z 
2025-08-17T19:37:29.1482974Z # api.tests.test\_imports
2025-08-17T19:37:29.1483212Z 
2025-08-17T19:37:29.1483569Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T19:37:29.1483885Z 
2025-08-17T19:37:29.1484032Z # api.tests.test\_entrypoint
2025-08-17T19:37:29.1484326Z 
2025-08-17T19:37:29.1484472Z <a id="api.tests.test_health"></a>
2025-08-17T19:37:29.1484753Z 
2025-08-17T19:37:29.1484898Z # api.tests.test\_health
2025-08-17T19:37:29.1485153Z 
2025-08-17T19:37:29.1485305Z <a id="api.migrations.env"></a>
2025-08-17T19:37:29.1485562Z 
2025-08-17T19:37:29.1485704Z # api.migrations.env
2025-08-17T19:37:29.1485922Z 
2025-08-17T19:37:29.1486145Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T19:37:29.1486506Z 
2025-08-17T19:37:29.1486701Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T19:37:29.1487040Z 
2025-08-17T19:37:29.1487242Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T19:37:29.1487614Z 
2025-08-17T19:37:29.1487788Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T19:37:29.1488111Z 
2025-08-17T19:37:29.1488398Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T19:37:29.1488843Z 
2025-08-17T19:37:29.1489097Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T19:37:29.1490067Z 
2025-08-17T19:37:29.1490368Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T19:37:29.1490731Z 
2025-08-17T19:37:29.1490936Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T19:37:29.1491277Z 
2025-08-17T19:37:29.1491492Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T19:37:29.1491859Z 
2025-08-17T19:37:29.1492053Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T19:37:29.1492389Z 
2025-08-17T19:37:29.1492610Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T19:37:29.1492994Z 
2025-08-17T19:37:29.1493192Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T19:37:29.1493727Z 
2025-08-17T19:37:29.1493953Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T19:37:29.1494313Z 
2025-08-17T19:37:29.1494503Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T19:37:29.1494852Z 
2025-08-17T19:37:29.1495081Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T19:37:29.1495760Z 
2025-08-17T19:37:29.1495955Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T19:37:29.1496304Z 
2025-08-17T19:37:29.1496561Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-17T19:37:29.1496978Z 
2025-08-17T19:37:29.1497213Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-17T19:37:29.1497589Z 
2025-08-17T19:37:29.1497827Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T19:37:29.1498221Z 
2025-08-17T19:37:29.1498422Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T19:37:29.1498784Z 
2025-08-17T19:37:29.1498988Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T19:37:29.1499363Z 
2025-08-17T19:37:29.1499533Z # api.migrations.versions.0001\_baseline
2025-08-17T19:37:29.1499842Z 
2025-08-17T19:37:29.1500017Z <a id="api.migrations.versions"></a>
2025-08-17T19:37:29.1500315Z 
2025-08-17T19:37:29.1500461Z # api.migrations.versions
2025-08-17T19:37:29.1500718Z 
2025-08-17T19:37:29.1500867Z <a id="api.migrations"></a>
2025-08-17T19:37:29.1501118Z 
2025-08-17T19:37:29.1501243Z # api.migrations
2025-08-17T19:37:29.1501448Z 
2025-08-17T19:37:29.1501569Z <a id="api.db"></a>
2025-08-17T19:37:29.1501759Z 
2025-08-17T19:37:29.1501875Z # api.db
2025-08-17T19:37:29.1502028Z 
2025-08-17T19:37:29.1502172Z <a id="api.routes.stats"></a>
2025-08-17T19:37:29.1502424Z 
2025-08-17T19:37:29.1502548Z # api.routes.stats
2025-08-17T19:37:29.1502736Z 
2025-08-17T19:37:29.1502887Z <a id="api.routes.stats.kpi"></a>
2025-08-17T19:37:29.1503163Z 
2025-08-17T19:37:29.1503499Z #### kpi
2025-08-17T19:37:29.1503663Z 
2025-08-17T19:37:29.1503782Z ```python
2025-08-17T19:37:29.1504080Z @router.get("/stats/kpi")
2025-08-17T19:37:29.1504548Z def kpi() -> List[Dict[str, int]]
2025-08-17T19:37:29.1504942Z ```
2025-08-17T19:37:29.1505103Z 
2025-08-17T19:37:29.1505268Z Return KPI metrics (mock).
2025-08-17T19:37:29.1505522Z 
2025-08-17T19:37:29.1505709Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T19:37:29.1506056Z 
2025-08-17T19:37:29.1506217Z #### roi\_by\_vendor
2025-08-17T19:37:29.1506431Z 
2025-08-17T19:37:29.1506558Z ```python
2025-08-17T19:37:29.1506872Z @router.get("/stats/roi_by_vendor")
2025-08-17T19:37:29.1507337Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T19:37:29.1507762Z ```
2025-08-17T19:37:29.1507913Z 
2025-08-17T19:37:29.1508070Z Return ROI percent by vendor.
2025-08-17T19:37:29.1508333Z 
2025-08-17T19:37:29.1508498Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T19:37:29.1508821Z 
2025-08-17T19:37:29.1508947Z #### roi\_trend
2025-08-17T19:37:29.1509131Z 
2025-08-17T19:37:29.1509265Z ```python
2025-08-17T19:37:29.1509590Z @router.get("/stats/roi_trend")
2025-08-17T19:37:29.1510044Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T19:37:29.1510491Z ```
2025-08-17T19:37:29.1510657Z 
2025-08-17T19:37:29.1510807Z Return 30-day ROI trend.
2025-08-17T19:37:29.1511067Z 
2025-08-17T19:37:29.1511220Z <a id="api.routes.roi"></a>
2025-08-17T19:37:29.1511544Z 
2025-08-17T19:37:29.1511671Z # api.routes.roi
2025-08-17T19:37:29.1512134Z 
2025-08-17T19:37:29.1512294Z <a id="api.routes.health"></a>
2025-08-17T19:37:29.1512569Z 
2025-08-17T19:37:29.1512705Z # api.routes.health
2025-08-17T19:37:29.1512925Z 
2025-08-17T19:37:29.1513088Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T19:37:29.1513618Z 
2025-08-17T19:37:29.1513754Z #### MAX\_SKEW
2025-08-17T19:37:29.1513938Z 
2025-08-17T19:37:29.1514061Z seconds
2025-08-17T19:37:29.1514234Z 
2025-08-17T19:37:29.1514411Z <a id="api.routes.health.health"></a>
2025-08-17T19:37:29.1514713Z 
2025-08-17T19:37:29.1514836Z #### health
2025-08-17T19:37:29.1515017Z 
2025-08-17T19:37:29.1515133Z ```python
2025-08-17T19:37:29.1515490Z @router.get("/health", include_in_schema=False)
2025-08-17T19:37:29.1516196Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T19:37:29.1516848Z ```
2025-08-17T19:37:29.1517015Z 
2025-08-17T19:37:29.1517224Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T19:37:29.1517596Z 
2025-08-17T19:37:29.1518049Z <a id="api.routes.repository"></a>
2025-08-17T19:37:29.1518374Z 
2025-08-17T19:37:29.1518524Z # api.routes.repository
2025-08-17T19:37:29.1518775Z 
2025-08-17T19:37:29.1518918Z <a id="api.routes"></a>
2025-08-17T19:37:29.1519145Z 
2025-08-17T19:37:29.1519276Z # api.routes
2025-08-17T19:37:29.1519464Z 
2025-08-17T19:37:29.1519609Z <a id="api.models.fee"></a>
2025-08-17T19:37:29.1519863Z 
2025-08-17T19:37:29.1519998Z # api.models.fee
2025-08-17T19:37:29.1520201Z 
2025-08-17T19:37:29.1520336Z <a id="api.models"></a>
2025-08-17T19:37:29.1520556Z 
2025-08-17T19:37:29.1520681Z # api.models
2025-08-17T19:37:29.1520866Z 
2025-08-17T19:37:29.1521020Z <a id="api.roi_repository"></a>
2025-08-17T19:37:29.1521303Z 
2025-08-17T19:37:29.1521437Z # api.roi\_repository
2025-08-17T19:37:29.1521649Z 
2025-08-17T19:37:29.1521783Z <a id="api.main"></a>
2025-08-17T19:37:29.1521993Z 
2025-08-17T19:37:29.1522115Z # api.main
2025-08-17T19:37:29.1522290Z 
2025-08-17T19:37:29.1522436Z <a id="api.main.ready"></a>
2025-08-17T19:37:29.1522705Z 
2025-08-17T19:37:29.1522830Z #### ready
2025-08-17T19:37:29.1523004Z 
2025-08-17T19:37:29.1523125Z ```python
2025-08-17T19:37:29.1523815Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T19:37:29.1524635Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T19:37:29.1525312Z                                                                       str]
2025-08-17T19:37:29.1525759Z ```
2025-08-17T19:37:29.1525930Z 
2025-08-17T19:37:29.1526106Z Return 200 only when migrations are at head.
2025-08-17T19:37:29.1526431Z 
2025-08-17T19:37:29.1526575Z <a id="api.config"></a>
2025-08-17T19:37:29.1526815Z 
2025-08-17T19:37:29.1526941Z # api.config
2025-08-17T19:37:29.1527124Z 
2025-08-17T19:37:29.1527254Z <a id="etl"></a>
2025-08-17T19:37:29.1527445Z 
2025-08-17T19:37:29.1527556Z # etl
2025-08-17T19:37:29.1527728Z 
2025-08-17T19:37:29.1527880Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T19:37:29.1528163Z 
2025-08-17T19:37:29.1528327Z # etl.fba\_fee\_ingestor
2025-08-17T19:37:29.1528565Z 
2025-08-17T19:37:29.1528717Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T19:37:29.1528992Z 
2025-08-17T19:37:29.1529147Z # etl.sp\_fees\_ingestor
2025-08-17T19:37:29.1529381Z 
2025-08-17T19:37:29.1529525Z <a id="etl.keepa_ingestor"></a>
2025-08-17T19:37:29.1529787Z 
2025-08-17T19:37:29.1529935Z # etl.keepa\_ingestor
2025-08-17T19:37:29.1530153Z 
2025-08-17T19:37:29.1530286Z <a id="etl.db"></a>
2025-08-17T19:37:29.1530501Z 
2025-08-17T19:37:29.1530620Z # etl.db
2025-08-17T19:37:29.1530791Z 
2025-08-17T19:37:29.1530961Z <a id="etl.dialects.schemas"></a>
2025-08-17T19:37:29.1531252Z 
2025-08-17T19:37:29.1531396Z # etl.dialects.schemas
2025-08-17T19:37:29.1531614Z 
2025-08-17T19:37:29.1531813Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T19:37:29.1532157Z 
2025-08-17T19:37:29.1532325Z # etl.dialects.amazon\_reimbursements
2025-08-17T19:37:29.1532643Z 
2025-08-17T19:37:29.1532810Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T19:37:29.1533564Z 
2025-08-17T19:37:29.1533730Z # etl.dialects.amazon\_returns
2025-08-17T19:37:29.1533994Z 
2025-08-17T19:37:29.1534132Z <a id="etl.dialects"></a>
2025-08-17T19:37:29.1534371Z 
2025-08-17T19:37:29.1534503Z # etl.dialects
2025-08-17T19:37:29.1534690Z 
2025-08-17T19:37:29.1534818Z <a id="ingest"></a>
2025-08-17T19:37:29.1535016Z 
2025-08-17T19:37:29.1535125Z # ingest
2025-08-17T19:37:29.1535280Z 
2025-08-17T19:37:29.1535429Z <a id="ingest.maintenance"></a>
2025-08-17T19:37:29.1535698Z 
2025-08-17T19:37:29.1535832Z # ingest.maintenance
2025-08-17T19:37:29.1536042Z 
2025-08-17T19:37:29.1536199Z <a id="ingest.copy_loader"></a>
2025-08-17T19:37:29.1536461Z 
2025-08-17T19:37:29.1536597Z # ingest.copy\_loader
2025-08-17T19:37:29.1536812Z 
2025-08-17T19:37:29.1536998Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T19:37:29.1537340Z 
2025-08-17T19:37:29.1537477Z #### copy\_df\_via\_temp
2025-08-17T19:37:29.1537710Z 
2025-08-17T19:37:29.1537827Z ```python
2025-08-17T19:37:29.1538158Z def copy_df_via_temp(engine: Engine,
2025-08-17T19:37:29.1538826Z                      df: pd.DataFrame,
2025-08-17T19:37:29.1539261Z                      target_table: str,
2025-08-17T19:37:29.1539676Z                      *,
2025-08-17T19:37:29.1540074Z                      target_schema: Optional[str] = None,
2025-08-17T19:37:29.1540615Z                      columns: Sequence[str],
2025-08-17T19:37:29.1541110Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T19:37:29.1541622Z                      analyze_after: bool = False,
2025-08-17T19:37:29.1542079Z                      connection: Any | None = None) -> int
2025-08-17T19:37:29.1542502Z ```
2025-08-17T19:37:29.1542648Z 
2025-08-17T19:37:29.1542935Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T19:37:29.1543550Z 
2025-08-17T19:37:29.1543711Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T19:37:29.1544008Z 
2025-08-17T19:37:29.1544152Z # ingest.tests.test\_smoke
2025-08-17T19:37:29.1544384Z 
2025-08-17T19:37:29.1544542Z <a id="ingest.tests"></a>
2025-08-17T19:37:29.1544791Z 
2025-08-17T19:37:29.1544918Z # ingest.tests
2025-08-17T19:37:29.1545112Z 
2025-08-17T19:37:29.1545275Z <a id="ingest.upload_router"></a>
2025-08-17T19:37:29.1545550Z 
2025-08-17T19:37:29.1545688Z # ingest.upload\_router
2025-08-17T19:37:29.1545920Z 
2025-08-17T19:37:29.1546071Z <a id="ingest.email_watcher"></a>
2025-08-17T19:37:29.1546340Z 
2025-08-17T19:37:29.1546468Z # ingest.email\_watcher
2025-08-17T19:37:29.1546691Z 
2025-08-17T19:37:29.1546844Z <a id="ingest.email_watcher.main"></a>
2025-08-17T19:37:29.1547142Z 
2025-08-17T19:37:29.1547261Z #### main
2025-08-17T19:37:29.1547421Z 
2025-08-17T19:37:29.1547534Z ```python
2025-08-17T19:37:29.1547841Z def main() -> dict[str, str]
2025-08-17T19:37:29.1548192Z ```
2025-08-17T19:37:29.1548359Z 
2025-08-17T19:37:29.1548623Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T19:37:29.1549041Z 
2025-08-17T19:37:29.1549271Z Returns {"status": "success"} when processing completes.
2025-08-17T19:37:29.1549679Z 
2025-08-17T19:37:29.1549814Z <a id="ingest.tasks"></a>
2025-08-17T19:37:29.1550033Z 
2025-08-17T19:37:29.1550160Z # ingest.tasks
2025-08-17T19:37:29.1550339Z 
2025-08-17T19:37:29.1550509Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T19:37:29.1550833Z 
2025-08-17T19:37:29.1550960Z #### task\_import\_file
2025-08-17T19:37:29.1551181Z 
2025-08-17T19:37:29.1551296Z ```python
2025-08-17T19:37:29.1551680Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T19:37:29.1552496Z def task_import_file(self,
2025-08-17T19:37:29.1553076Z                      uri: str,
2025-08-17T19:37:29.1553652Z                      report_type: Optional[str] = None,
2025-08-17T19:37:29.1554159Z                      force: bool = False) -> Dict[str, Any]
2025-08-17T19:37:29.1554598Z ```
2025-08-17T19:37:29.1554751Z 
2025-08-17T19:37:29.1554978Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T19:37:29.1555366Z 
2025-08-17T19:37:29.1555512Z <a id="ingest.celery_app"></a>
2025-08-17T19:37:29.1556001Z 
2025-08-17T19:37:29.1556141Z # ingest.celery\_app
2025-08-17T19:37:29.1556358Z 
2025-08-17T19:37:29.1556508Z <a id="ingest.ingest_router"></a>
2025-08-17T19:37:29.1556786Z 
2025-08-17T19:37:29.1556935Z # ingest.ingest\_router
2025-08-17T19:37:29.1557140Z 
2025-08-17T19:37:29.1557274Z <a id="logistics_etl"></a>
2025-08-17T19:37:29.1557512Z 
2025-08-17T19:37:29.1557632Z # logistics\_etl
2025-08-17T19:37:29.1557822Z 
2025-08-17T19:37:29.1557957Z Daily logistics ETL job.
2025-08-17T19:37:29.1558201Z 
2025-08-17T19:37:29.1558349Z <a id="logistics_etl.__main__"></a>
2025-08-17T19:37:29.1558642Z 
2025-08-17T19:37:29.1558793Z # logistics\_etl.\_\_main\_\_
2025-08-17T19:37:29.1559048Z 
2025-08-17T19:37:29.1559186Z <a id="logistics_etl.dsn"></a>
2025-08-17T19:37:29.1559438Z 
2025-08-17T19:37:29.1559561Z # logistics\_etl.dsn
2025-08-17T19:37:29.1559763Z 
2025-08-17T19:37:29.1559973Z Local DSN builder to avoid cross-service dependency.
2025-08-17T19:37:29.1560360Z 
2025-08-17T19:37:29.1560745Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T19:37:29.1561125Z 
2025-08-17T19:37:29.1561255Z #### build\_dsn
2025-08-17T19:37:29.1561443Z 
2025-08-17T19:37:29.1561560Z ```python
2025-08-17T19:37:29.1561878Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:37:29.1562283Z ```
2025-08-17T19:37:29.1562447Z 
2025-08-17T19:37:29.1562713Z Return a Postgres DSN assembled from environment variables.
2025-08-17T19:37:29.1563144Z 
2025-08-17T19:37:29.1563626Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T19:37:29.1564368Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T19:37:29.1565004Z error when any required variable is missing.
2025-08-17T19:37:29.1565332Z 
2025-08-17T19:37:29.1565508Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T19:37:29.1565841Z 
2025-08-17T19:37:29.1565994Z # logistics\_etl.tests.conftest
2025-08-17T19:37:29.1566256Z 
2025-08-17T19:37:29.1566439Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T19:37:29.1566808Z 
2025-08-17T19:37:29.1566970Z # logistics\_etl.tests.test\_repository
2025-08-17T19:37:29.1567276Z 
2025-08-17T19:37:29.1567453Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T19:37:29.1567775Z 
2025-08-17T19:37:29.1567926Z # logistics\_etl.tests.test\_cron
2025-08-17T19:37:29.1568225Z 
2025-08-17T19:37:29.1568397Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T19:37:29.1568730Z 
2025-08-17T19:37:29.1568883Z # logistics\_etl.tests.test\_imports
2025-08-17T19:37:29.1569179Z 
2025-08-17T19:37:29.1569358Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T19:37:29.1569657Z 
2025-08-17T19:37:29.1569802Z # logistics\_etl.tests.test\_smoke
2025-08-17T19:37:29.1570092Z 
2025-08-17T19:37:29.1570265Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T19:37:29.1570593Z 
2025-08-17T19:37:29.1570752Z # logistics\_etl.tests.test\_client
2025-08-17T19:37:29.1571051Z 
2025-08-17T19:37:29.1571198Z <a id="logistics_etl.tests"></a>
2025-08-17T19:37:29.1571466Z 
2025-08-17T19:37:29.1571628Z # logistics\_etl.tests
2025-08-17T19:37:29.1571847Z 
2025-08-17T19:37:29.1571989Z <a id="logistics_etl.flow"></a>
2025-08-17T19:37:29.1572261Z 
2025-08-17T19:37:29.1572397Z # logistics\_etl.flow
2025-08-17T19:37:29.1572612Z 
2025-08-17T19:37:29.1572763Z <a id="logistics_etl.client"></a>
2025-08-17T19:37:29.1573044Z 
2025-08-17T19:37:29.1573180Z # logistics\_etl.client
2025-08-17T19:37:29.1573603Z 
2025-08-17T19:37:29.1573759Z <a id="logistics_etl.cron"></a>
2025-08-17T19:37:29.1574014Z 
2025-08-17T19:37:29.1574143Z # logistics\_etl.cron
2025-08-17T19:37:29.1574353Z 
2025-08-17T19:37:29.1574508Z <a id="logistics_etl.db"></a>
2025-08-17T19:37:29.1574767Z 
2025-08-17T19:37:29.1574895Z # logistics\_etl.db
2025-08-17T19:37:29.1575099Z 
2025-08-17T19:37:29.1575253Z <a id="logistics_etl.repository"></a>
2025-08-17T19:37:29.1575543Z 
2025-08-17T19:37:29.1575695Z # logistics\_etl.repository
2025-08-17T19:37:29.1575943Z 
2025-08-17T19:37:29.1576071Z <a id="alert_bot"></a>
2025-08-17T19:37:29.1576285Z 
2025-08-17T19:37:29.1576648Z # alert\_bot
2025-08-17T19:37:29.1576826Z 
2025-08-17T19:37:29.1576983Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T19:37:29.1577293Z 
2025-08-17T19:37:29.1577439Z # alert\_bot.tests.test\_smoke
2025-08-17T19:37:29.1577735Z 
2025-08-17T19:37:29.1577881Z <a id="alert_bot.tests"></a>
2025-08-17T19:37:29.1578127Z 
2025-08-17T19:37:29.1578250Z # alert\_bot.tests
2025-08-17T19:37:29.1578438Z 
2025-08-17T19:37:29.1578589Z <a id="alert_bot.alert_bot"></a>
2025-08-17T19:37:29.1578849Z 
2025-08-17T19:37:29.1578981Z # alert\_bot.alert\_bot
2025-08-17T19:37:29.1579211Z 
2025-08-17T19:37:29.1579345Z <a id="alert_bot.rules"></a>
2025-08-17T19:37:29.1579592Z 
2025-08-17T19:37:29.1579714Z # alert\_bot.rules
2025-08-17T19:37:29.1579914Z 
2025-08-17T19:37:29.1580042Z <a id="common"></a>
2025-08-17T19:37:29.1580251Z 
2025-08-17T19:37:29.1580381Z # common
2025-08-17T19:37:29.1580553Z 
2025-08-17T19:37:29.1580690Z <a id="common.dsn"></a>
2025-08-17T19:37:29.1580922Z 
2025-08-17T19:37:29.1581041Z # common.dsn
2025-08-17T19:37:29.1581486Z 
2025-08-17T19:37:29.1581651Z <a id="common.dsn.build_dsn"></a>
2025-08-17T19:37:29.1581947Z 
2025-08-17T19:37:29.1582068Z #### build\_dsn
2025-08-17T19:37:29.1582259Z 
2025-08-17T19:37:29.1582385Z ```python
2025-08-17T19:37:29.1582712Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:37:29.1583136Z ```
2025-08-17T19:37:29.1583504Z 
2025-08-17T19:37:29.1583740Z Return a Postgres DSN, validating required variables.
2025-08-17T19:37:29.1584134Z 
2025-08-17T19:37:29.1584478Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T19:37:29.1585296Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T19:37:29.1586073Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T19:37:29.1586658Z missing.
2025-08-17T19:37:29.1586826Z 
2025-08-17T19:37:29.1586983Z <a id="common.models_vendor"></a>
2025-08-17T19:37:29.1587259Z 
2025-08-17T19:37:29.1587408Z # common.models\_vendor
2025-08-17T19:37:29.1587652Z 
2025-08-17T19:37:29.1587820Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T19:37:29.1588129Z 
2025-08-17T19:37:29.1588267Z ## Vendor Objects
2025-08-17T19:37:29.1588447Z 
2025-08-17T19:37:29.1588563Z ```python
2025-08-17T19:37:29.1588842Z class Vendor(Base)
2025-08-17T19:37:29.1589124Z ```
2025-08-17T19:37:29.1589271Z 
2025-08-17T19:37:29.1589409Z Vendor of inventory items.
2025-08-17T19:37:29.1589639Z 
2025-08-17T19:37:29.1589829Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T19:37:29.1590150Z 
2025-08-17T19:37:29.1590283Z ## VendorPrice Objects
2025-08-17T19:37:29.1590503Z 
2025-08-17T19:37:29.1590608Z ```python
2025-08-17T19:37:29.1590874Z class VendorPrice(Base)
2025-08-17T19:37:29.1591182Z ```
2025-08-17T19:37:29.1591326Z 
2025-08-17T19:37:29.1591519Z Association table linking vendors to pricing.
2025-08-17T19:37:29.1591858Z 
2025-08-17T19:37:29.1592004Z <a id="common.db_url"></a>
2025-08-17T19:37:29.1592245Z 
2025-08-17T19:37:29.1592377Z # common.db\_url
2025-08-17T19:37:29.1592578Z 
2025-08-17T19:37:29.1592725Z <a id="common.db_url.build_url"></a>
2025-08-17T19:37:29.1593018Z 
2025-08-17T19:37:29.1593135Z #### build\_url
2025-08-17T19:37:29.1593525Z 
2025-08-17T19:37:29.1593654Z ```python
2025-08-17T19:37:29.1593976Z def build_url(async_: bool = True) -> str
2025-08-17T19:37:29.1594397Z ```
2025-08-17T19:37:29.1594547Z 
2025-08-17T19:37:29.1594831Z Return Postgres DSN from env or PG_* parts.
2025-08-17T19:37:29.1595171Z 
2025-08-17T19:37:29.1595313Z <a id="common.keepa"></a>
2025-08-17T19:37:29.1595551Z 
2025-08-17T19:37:29.1595671Z # common.keepa
2025-08-17T19:37:29.1595860Z 
2025-08-17T19:37:29.1595989Z <a id="common.llm"></a>
2025-08-17T19:37:29.1596202Z 
2025-08-17T19:37:29.1596321Z # common.llm
2025-08-17T19:37:29.1596491Z 
2025-08-17T19:37:29.1596632Z <a id="common.settings"></a>
2025-08-17T19:37:29.1596887Z 
2025-08-17T19:37:29.1597018Z # common.settings
2025-08-17T19:37:29.1597210Z 
2025-08-17T19:37:29.1597337Z <a id="common.db"></a>
2025-08-17T19:37:29.1597574Z 
2025-08-17T19:37:29.1597939Z # common.db
2025-08-17T19:37:29.1598109Z 
2025-08-17T19:37:29.1598285Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T19:37:29.1598603Z 
2025-08-17T19:37:29.1598741Z #### build\_sqlalchemy\_url
2025-08-17T19:37:29.1598980Z 
2025-08-17T19:37:29.1599101Z ```python
2025-08-17T19:37:29.1599411Z def build_sqlalchemy_url() -> str
2025-08-17T19:37:29.1599802Z ```
2025-08-17T19:37:29.1599951Z 
2025-08-17T19:37:29.1600123Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T19:37:29.1600459Z 
2025-08-17T19:37:29.1600623Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T19:37:29.1600931Z 
2025-08-17T19:37:29.1601072Z #### build\_asyncpg\_dsn
2025-08-17T19:37:29.1601299Z 
2025-08-17T19:37:29.1601415Z ```python
2025-08-17T19:37:29.1601778Z def build_asyncpg_dsn() -> str
2025-08-17T19:37:29.1602148Z ```
2025-08-17T19:37:29.1602307Z 
2025-08-17T19:37:29.1602543Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T19:37:29.1602947Z 
2025-08-17T19:37:29.1603529Z <a id="common.db.refresh_mvs"></a>
2025-08-17T19:37:29.1603842Z 
2025-08-17T19:37:29.1603962Z #### refresh\_mvs
2025-08-17T19:37:29.1604155Z 
2025-08-17T19:37:29.1604280Z ```python
2025-08-17T19:37:29.1604633Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T19:37:29.1605093Z ```
2025-08-17T19:37:29.1605242Z 
2025-08-17T19:37:29.1605499Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T19:37:29.1605923Z 
2025-08-17T19:37:29.1606063Z <a id="common.config"></a>
2025-08-17T19:37:29.1606303Z 
2025-08-17T19:37:29.1606434Z # common.config
2025-08-17T19:37:29.1606621Z 
2025-08-17T19:37:29.1606758Z <a id="common.base"></a>
2025-08-17T19:37:29.1606989Z 
2025-08-17T19:37:29.1607117Z # common.base
2025-08-17T19:37:29.1607295Z 
2025-08-17T19:37:29.1607440Z <a id="common.base.Base"></a>
2025-08-17T19:37:29.1607697Z 
2025-08-17T19:37:29.1607810Z ## Base Objects
2025-08-17T19:37:29.1607984Z 
2025-08-17T19:37:29.1608098Z ```python
2025-08-17T19:37:29.1608417Z class Base(DeclarativeBase)
2025-08-17T19:37:29.1608805Z ```
2025-08-17T19:37:29.1608962Z 
2025-08-17T19:37:29.1609101Z Base class for SQLAlchemy models.
2025-08-17T19:37:29.1609381Z 
2025-08-17T19:37:29.1609530Z <a id="repricer"></a>
2025-08-17T19:37:29.1609752Z 
2025-08-17T19:37:29.1609868Z # repricer
2025-08-17T19:37:29.1610046Z 
2025-08-17T19:37:29.1610204Z <a id="repricer.app.schemas"></a>
2025-08-17T19:37:29.1610488Z 
2025-08-17T19:37:29.1610632Z # repricer.app.schemas
2025-08-17T19:37:29.1610872Z 
2025-08-17T19:37:29.1611033Z <a id="repricer.app.deps"></a>
2025-08-17T19:37:29.1611307Z 
2025-08-17T19:37:29.1611455Z # repricer.app.deps
2025-08-17T19:37:29.1611675Z 
2025-08-17T19:37:29.1611899Z Placeholder module for Keepa / SP-API clients.
2025-08-17T19:37:29.1612252Z 
2025-08-17T19:37:29.1612412Z <a id="repricer.app.logic"></a>
2025-08-17T19:37:29.1612690Z 
2025-08-17T19:37:29.1612827Z # repricer.app.logic
2025-08-17T19:37:29.1613054Z 
2025-08-17T19:37:29.1613239Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T19:37:29.1613771Z 
2025-08-17T19:37:29.1613916Z #### MIN\_MARGIN
2025-08-17T19:37:29.1614102Z 
2025-08-17T19:37:29.1614221Z 15 % ROI
2025-08-17T19:37:29.1614378Z 
2025-08-17T19:37:29.1614574Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T19:37:29.1614916Z 
2025-08-17T19:37:29.1615044Z #### compute\_price
2025-08-17T19:37:29.1615255Z 
2025-08-17T19:37:29.1615373Z ```python
2025-08-17T19:37:29.1615830Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T19:37:29.1616372Z ```
2025-08-17T19:37:29.1616519Z 
2025-08-17T19:37:29.1616719Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T19:37:29.1617230Z Replace with real competitive logic later.
2025-08-17T19:37:29.1617549Z 
2025-08-17T19:37:29.1617701Z <a id="repricer.app.main"></a>
2025-08-17T19:37:29.1617970Z 
2025-08-17T19:37:29.1618098Z # repricer.app.main
2025-08-17T19:37:29.1618313Z 
2025-08-17T19:37:29.1618454Z <a id="repricer.app"></a>
2025-08-17T19:37:29.1618696Z 
2025-08-17T19:37:29.1618827Z # repricer.app
2025-08-17T19:37:29.1619246Z 
2025-08-17T19:37:29.1619411Z <a id="repricer.tests.test_imports"></a>
2025-08-17T19:37:29.1619734Z 
2025-08-17T19:37:29.1619884Z # repricer.tests.test\_imports
2025-08-17T19:37:29.1620146Z 
2025-08-17T19:37:29.1620311Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T19:37:29.1620630Z 
2025-08-17T19:37:29.1620778Z # repricer.tests.test\_smoke
2025-08-17T19:37:29.1621030Z 
2025-08-17T19:37:29.1621181Z <a id="repricer.tests"></a>
2025-08-17T19:37:29.1621425Z 
2025-08-17T19:37:29.1621546Z # repricer.tests
2025-08-17T19:37:29.1621735Z 
2025-08-17T19:37:29.1621859Z <a id="db"></a>
2025-08-17T19:37:29.1622037Z 
2025-08-17T19:37:29.1622145Z # db
2025-08-17T19:37:29.1622306Z 
2025-08-17T19:37:29.1622443Z <a id="db.utils.views"></a>
2025-08-17T19:37:29.1622687Z 
2025-08-17T19:37:29.1622808Z # db.utils.views
2025-08-17T19:37:29.1623007Z 
2025-08-17T19:37:29.1623175Z <a id="db.utils.views.replace_view"></a>
2025-08-17T19:37:29.1623679Z 
2025-08-17T19:37:29.1623815Z #### replace\_view
2025-08-17T19:37:29.1624230Z 
2025-08-17T19:37:29.1624346Z ```python
2025-08-17T19:37:29.1624708Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T19:37:29.1625151Z ```
2025-08-17T19:37:29.1625304Z 
2025-08-17T19:37:29.1625470Z Drop and recreate a SQL view atomically.
2025-08-17T19:37:29.1625777Z 
2025-08-17T19:37:29.1625914Z <a id="db.utils"></a>
2025-08-17T19:37:29.1626128Z 
2025-08-17T19:37:29.1626243Z # db.utils
2025-08-17T19:37:29.1626411Z 
2025-08-17T19:37:29.1626565Z <a id="price_importer"></a>
2025-08-17T19:37:29.1626807Z 
2025-08-17T19:37:29.1626933Z # price\_importer
2025-08-17T19:37:29.1627129Z 
2025-08-17T19:37:29.1627315Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T19:37:29.1627651Z 
2025-08-17T19:37:29.1627810Z # price\_importer.services\_common.dsn
2025-08-17T19:37:29.1628112Z 
2025-08-17T19:37:29.1628338Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T19:37:29.1628714Z 
2025-08-17T19:37:29.1628840Z #### build\_dsn
2025-08-17T19:37:29.1629023Z 
2025-08-17T19:37:29.1629159Z ```python
2025-08-17T19:37:29.1629480Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:37:29.1629876Z ```
2025-08-17T19:37:29.1630038Z 
2025-08-17T19:37:29.1630157Z Return safe DSN.
2025-08-17T19:37:29.1630349Z 
2025-08-17T19:37:29.1630892Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T19:37:29.1631279Z 
2025-08-17T19:37:29.1631507Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T19:37:29.1631882Z 
2025-08-17T19:37:29.1632083Z # price\_importer.services\_common.models\_vendor
2025-08-17T19:37:29.1632426Z 
2025-08-17T19:37:29.1632619Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T19:37:29.1632972Z 
2025-08-17T19:37:29.1633144Z # price\_importer.services\_common.db\_url
2025-08-17T19:37:29.1633653Z 
2025-08-17T19:37:29.1633903Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T19:37:29.1634306Z 
2025-08-17T19:37:29.1634430Z #### build\_url
2025-08-17T19:37:29.1634615Z 
2025-08-17T19:37:29.1634731Z ```python
2025-08-17T19:37:29.1635081Z def build_url(async_: bool = True) -> str
2025-08-17T19:37:29.1635491Z ```
2025-08-17T19:37:29.1635644Z 
2025-08-17T19:37:29.1635824Z Return Postgres DSN from env or PG_* parts.
2025-08-17T19:37:29.1636140Z 
2025-08-17T19:37:29.1636338Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T19:37:29.1636689Z 
2025-08-17T19:37:29.1636871Z # price\_importer.services\_common.keepa
2025-08-17T19:37:29.1637182Z 
2025-08-17T19:37:29.1637367Z <a id="price_importer.services_common.llm"></a>
2025-08-17T19:37:29.1637713Z 
2025-08-17T19:37:29.1637878Z # price\_importer.services\_common.llm
2025-08-17T19:37:29.1638177Z 
2025-08-17T19:37:29.1638392Z <a id="price_importer.services_common.settings"></a>
2025-08-17T19:37:29.1638770Z 
2025-08-17T19:37:29.1638983Z # price\_importer.services\_common.settings
2025-08-17T19:37:29.1639307Z 
2025-08-17T19:37:29.1639496Z <a id="price_importer.services_common.db"></a>
2025-08-17T19:37:29.1639829Z 
2025-08-17T19:37:29.1639989Z # price\_importer.services\_common.db
2025-08-17T19:37:29.1640520Z 
2025-08-17T19:37:29.1640800Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T19:37:29.1641219Z 
2025-08-17T19:37:29.1641369Z #### build\_sqlalchemy\_url
2025-08-17T19:37:29.1641613Z 
2025-08-17T19:37:29.1641735Z ```python
2025-08-17T19:37:29.1642064Z def build_sqlalchemy_url() -> str
2025-08-17T19:37:29.1642450Z ```
2025-08-17T19:37:29.1642601Z 
2025-08-17T19:37:29.1642785Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T19:37:29.1643110Z 
2025-08-17T19:37:29.1643562Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T19:37:29.1643987Z 
2025-08-17T19:37:29.1644124Z #### build\_asyncpg\_dsn
2025-08-17T19:37:29.1644336Z 
2025-08-17T19:37:29.1644499Z ```python
2025-08-17T19:37:29.1644790Z def build_asyncpg_dsn() -> str
2025-08-17T19:37:29.1645169Z ```
2025-08-17T19:37:29.1645324Z 
2025-08-17T19:37:29.1645561Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T19:37:29.1645942Z 
2025-08-17T19:37:29.1646419Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T19:37:29.1646811Z 
2025-08-17T19:37:29.1646935Z #### refresh\_mvs
2025-08-17T19:37:29.1647137Z 
2025-08-17T19:37:29.1647254Z ```python
2025-08-17T19:37:29.1647628Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T19:37:29.1648089Z ```
2025-08-17T19:37:29.1648245Z 
2025-08-17T19:37:29.1648504Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T19:37:29.1648893Z 
2025-08-17T19:37:29.1649079Z <a id="price_importer.services_common"></a>
2025-08-17T19:37:29.1649395Z 
2025-08-17T19:37:29.1649549Z # price\_importer.services\_common
2025-08-17T19:37:29.1649830Z 
2025-08-17T19:37:29.1650028Z <a id="price_importer.services_common.base"></a>
2025-08-17T19:37:29.1650383Z 
2025-08-17T19:37:29.1650555Z # price\_importer.services\_common.base
2025-08-17T19:37:29.1650871Z 
2025-08-17T19:37:29.1651057Z <a id="price_importer.normaliser"></a>
2025-08-17T19:37:29.1651368Z 
2025-08-17T19:37:29.1651519Z # price\_importer.normaliser
2025-08-17T19:37:29.1651809Z 
2025-08-17T19:37:29.1652009Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T19:37:29.1652366Z 
2025-08-17T19:37:29.1652555Z # price\_importer.common.models\_vendor
2025-08-17T19:37:29.1652880Z 
2025-08-17T19:37:29.1653061Z <a id="price_importer.common.db_url"></a>
2025-08-17T19:37:29.1653600Z 
2025-08-17T19:37:29.1653777Z # price\_importer.common.db\_url
2025-08-17T19:37:29.1654065Z 
2025-08-17T19:37:29.1654261Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T19:37:29.1654611Z 
2025-08-17T19:37:29.1654736Z #### make\_dsn
2025-08-17T19:37:29.1654913Z 
2025-08-17T19:37:29.1655045Z ```python
2025-08-17T19:37:29.1655371Z def make_dsn(async_: bool = False) -> str
2025-08-17T19:37:29.1655797Z ```
2025-08-17T19:37:29.1655957Z 
2025-08-17T19:37:29.1656180Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T19:37:29.1656566Z 
2025-08-17T19:37:29.1656769Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T19:37:29.1657125Z 
2025-08-17T19:37:29.1657264Z #### build\_url
2025-08-17T19:37:29.1657454Z 
2025-08-17T19:37:29.1657567Z ```python
2025-08-17T19:37:29.1657894Z def build_url(async_: bool = False) -> str
2025-08-17T19:37:29.1658307Z ```
2025-08-17T19:37:29.1658464Z 
2025-08-17T19:37:29.1658696Z Return Postgres DSN built from environment variables.
2025-08-17T19:37:29.1659084Z 
2025-08-17T19:37:29.1659245Z <a id="price_importer.common"></a>
2025-08-17T19:37:29.1659537Z 
2025-08-17T19:37:29.1659682Z # price\_importer.common
2025-08-17T19:37:29.1659919Z 
2025-08-17T19:37:29.1660085Z <a id="price_importer.common.base"></a>
2025-08-17T19:37:29.1660408Z 
2025-08-17T19:37:29.1660558Z # price\_importer.common.base
2025-08-17T19:37:29.1660817Z 
2025-08-17T19:37:29.1661064Z <a id="price_importer.tests.conftest"></a>
2025-08-17T19:37:29.1661392Z 
2025-08-17T19:37:29.1661549Z # price\_importer.tests.conftest
2025-08-17T19:37:29.1661831Z 
2025-08-17T19:37:29.1662012Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T19:37:29.1662348Z 
2025-08-17T19:37:29.1662754Z # price\_importer.tests.test\_reader
2025-08-17T19:37:29.1663077Z 
2025-08-17T19:37:29.1663445Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T19:37:29.1663798Z 
2025-08-17T19:37:29.1663973Z # price\_importer.tests.test\_imports
2025-08-17T19:37:29.1664274Z 
2025-08-17T19:37:29.1664450Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T19:37:29.1664772Z 
2025-08-17T19:37:29.1664924Z # price\_importer.tests.test\_smoke
2025-08-17T19:37:29.1665203Z 
2025-08-17T19:37:29.1665396Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T19:37:29.1665752Z 
2025-08-17T19:37:29.1665925Z # price\_importer.tests.test\_normaliser
2025-08-17T19:37:29.1666235Z 
2025-08-17T19:37:29.1666395Z <a id="price_importer.tests"></a>
2025-08-17T19:37:29.1666674Z 
2025-08-17T19:37:29.1666817Z # price\_importer.tests
2025-08-17T19:37:29.1667055Z 
2025-08-17T19:37:29.1667212Z <a id="price_importer.reader"></a>
2025-08-17T19:37:29.1667497Z 
2025-08-17T19:37:29.1667641Z # price\_importer.reader
2025-08-17T19:37:29.1668093Z 
2025-08-17T19:37:29.1668255Z <a id="price_importer.repository"></a>
2025-08-17T19:37:29.1668558Z 
2025-08-17T19:37:29.1668721Z # price\_importer.repository
2025-08-17T19:37:29.1668983Z 
2025-08-17T19:37:29.1669139Z <a id="price_importer.import"></a>
2025-08-17T19:37:29.1669430Z 
2025-08-17T19:37:29.1669571Z # price\_importer.import
2025-08-17T19:37:29.1669810Z 
2025-08-17T19:37:29.1669936Z <a id="fees_h10"></a>
2025-08-17T19:37:29.1670162Z 
2025-08-17T19:37:29.1670274Z # fees\_h10
2025-08-17T19:37:29.1670442Z 
2025-08-17T19:37:29.1670590Z <a id="fees_h10.worker"></a>
2025-08-17T19:37:29.1670842Z 
2025-08-17T19:37:29.1670966Z # fees\_h10.worker
2025-08-17T19:37:29.1671167Z 
2025-08-17T19:37:29.1671352Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T19:37:29.1671719Z 
2025-08-17T19:37:29.1671855Z #### list\_active\_asins
2025-08-17T19:37:29.1672091Z 
2025-08-17T19:37:29.1672208Z ```python
2025-08-17T19:37:29.1672526Z def list_active_asins() -> list[str]
2025-08-17T19:37:29.1672926Z ```
2025-08-17T19:37:29.1673081Z 
2025-08-17T19:37:29.1673493Z Return known ASINs or an empty list if unavailable.
2025-08-17T19:37:29.1673867Z 
2025-08-17T19:37:29.1674049Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T19:37:29.1674357Z 
2025-08-17T19:37:29.1674510Z # fees\_h10.tests.test\_smoke
2025-08-17T19:37:29.1674777Z 
2025-08-17T19:37:29.1674919Z <a id="fees_h10.tests"></a>
2025-08-17T19:37:29.1675169Z 
2025-08-17T19:37:29.1675290Z # fees\_h10.tests
2025-08-17T19:37:29.1675479Z 
2025-08-17T19:37:29.1675623Z <a id="fees_h10.client"></a>
2025-08-17T19:37:29.1675860Z 
2025-08-17T19:37:29.1675977Z # fees\_h10.client
2025-08-17T19:37:29.1676171Z 
2025-08-17T19:37:29.1676317Z <a id="fees_h10.repository"></a>
2025-08-17T19:37:29.1676584Z 
2025-08-17T19:37:29.1676717Z # fees\_h10.repository
2025-08-17T19:37:29.1676905Z 
2025-08-17T19:37:29.1677010Z <a id="emailer"></a>
2025-08-17T19:37:29.1677173Z 
2025-08-17T19:37:29.1677271Z # emailer
2025-08-17T19:37:29.1677402Z 
2025-08-17T19:37:29.1677574Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T19:37:29.1677854Z 
2025-08-17T19:37:29.1677997Z # emailer.tests.test\_import\_emailer
2025-08-17T19:37:29.1678273Z 
2025-08-17T19:37:29.1678432Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T19:37:29.1678725Z 
2025-08-17T19:37:29.1678858Z # emailer.tests.test\_smoke
2025-08-17T19:37:29.1679153Z 
2025-08-17T19:37:29.1679295Z <a id="emailer.tests"></a>
2025-08-17T19:37:29.1679531Z 
2025-08-17T19:37:29.1679658Z # emailer.tests
2025-08-17T19:37:29.1679855Z 
2025-08-17T19:37:29.1680025Z <a id="emailer.generate_body"></a>
2025-08-17T19:37:29.1680317Z 
2025-08-17T19:37:29.1680460Z # emailer.generate\_body
2025-08-17T19:37:29.1680705Z 
2025-08-17T19:37:29.1680840Z <a id="llm_server"></a>
2025-08-17T19:37:29.1681068Z 
2025-08-17T19:37:29.1681205Z # llm\_server
2025-08-17T19:37:29.1681391Z 
2025-08-17T19:37:29.1681526Z <a id="llm_server.app"></a>
2025-08-17T19:37:29.1681732Z 
2025-08-17T19:37:29.1681871Z # llm\_server.app
2025-08-17T19:37:29.1682122Z 
