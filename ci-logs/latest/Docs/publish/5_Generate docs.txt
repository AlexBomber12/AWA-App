2025-08-16T21:47:48.1573281Z ##[group]Run pydoc-markdown
2025-08-16T21:47:48.1573586Z [36;1mpydoc-markdown[0m
2025-08-16T21:47:48.1613482Z shell: /usr/bin/bash -e {0}
2025-08-16T21:47:48.1613736Z env:
2025-08-16T21:47:48.1613968Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:47:48.1614369Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T21:47:48.1614762Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:47:48.1615104Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:47:48.1615444Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:47:48.1615778Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T21:47:48.1616062Z ##[endgroup]
2025-08-16T21:47:48.5379138Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T21:47:48.5379835Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T21:47:48.5380309Z In "pydoc-markdown.yml"
2025-08-16T21:47:48.5380717Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T21:47:48.5381570Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T21:47:48.5382318Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T21:47:48.5382832Z 
2025-08-16T21:47:48.7405407Z <a id="__init__"></a>
2025-08-16T21:47:48.7405730Z 
2025-08-16T21:47:48.7405879Z # \_\_init\_\_
2025-08-16T21:47:48.7406107Z 
2025-08-16T21:47:48.7406271Z <a id="api"></a>
2025-08-16T21:47:48.7406530Z 
2025-08-16T21:47:48.7406669Z # api
2025-08-16T21:47:48.7406888Z 
2025-08-16T21:47:48.7407088Z <a id="api.tests.test_llm"></a>
2025-08-16T21:47:48.7407435Z 
2025-08-16T21:47:48.7407621Z # api.tests.test\_llm
2025-08-16T21:47:48.7407928Z 
2025-08-16T21:47:48.7408135Z <a id="api.tests.test_imports"></a>
2025-08-16T21:47:48.7408470Z 
2025-08-16T21:47:48.7408643Z # api.tests.test\_imports
2025-08-16T21:47:48.7408921Z 
2025-08-16T21:47:48.7409105Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T21:47:48.7409462Z 
2025-08-16T21:47:48.7409630Z # api.tests.test\_entrypoint
2025-08-16T21:47:48.7409962Z 
2025-08-16T21:47:48.7410132Z <a id="api.tests.test_health"></a>
2025-08-16T21:47:48.7410462Z 
2025-08-16T21:47:48.7410619Z # api.tests.test\_health
2025-08-16T21:47:48.7410884Z 
2025-08-16T21:47:48.7411062Z <a id="api.migrations.env"></a>
2025-08-16T21:47:48.7411570Z 
2025-08-16T21:47:48.7411727Z # api.migrations.env
2025-08-16T21:47:48.7411975Z 
2025-08-16T21:47:48.7412193Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T21:47:48.7412538Z 
2025-08-16T21:47:48.7412716Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T21:47:48.7413131Z 
2025-08-16T21:47:48.7413317Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T21:47:48.7413563Z 
2025-08-16T21:47:48.7413673Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T21:47:48.7413869Z 
2025-08-16T21:47:48.7414035Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T21:47:48.7414287Z 
2025-08-16T21:47:48.7414427Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T21:47:48.7414871Z 
2025-08-16T21:47:48.7415007Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T21:47:48.7415217Z 
2025-08-16T21:47:48.7415325Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T21:47:48.7415549Z 
2025-08-16T21:47:48.7415682Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T21:47:48.7415884Z 
2025-08-16T21:47:48.7415984Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T21:47:48.7416173Z 
2025-08-16T21:47:48.7416296Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T21:47:48.7416499Z 
2025-08-16T21:47:48.7416614Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T21:47:48.7416805Z 
2025-08-16T21:47:48.7416917Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T21:47:48.7417141Z 
2025-08-16T21:47:48.7417253Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T21:47:48.7417443Z 
2025-08-16T21:47:48.7417570Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T21:47:48.7418001Z 
2025-08-16T21:47:48.7418112Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T21:47:48.7418303Z 
2025-08-16T21:47:48.7418435Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T21:47:48.7418655Z 
2025-08-16T21:47:48.7418765Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T21:47:48.7418962Z 
2025-08-16T21:47:48.7419073Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T21:47:48.7419267Z 
2025-08-16T21:47:48.7419362Z # api.migrations.versions.0001\_baseline
2025-08-16T21:47:48.7419545Z 
2025-08-16T21:47:48.7419636Z <a id="api.migrations.versions"></a>
2025-08-16T21:47:48.7419802Z 
2025-08-16T21:47:48.7419889Z # api.migrations.versions
2025-08-16T21:47:48.7420017Z 
2025-08-16T21:47:48.7420094Z <a id="api.migrations"></a>
2025-08-16T21:47:48.7420232Z 
2025-08-16T21:47:48.7420299Z # api.migrations
2025-08-16T21:47:48.7420409Z 
2025-08-16T21:47:48.7420475Z <a id="api.db"></a>
2025-08-16T21:47:48.7420591Z 
2025-08-16T21:47:48.7420661Z # api.db
2025-08-16T21:47:48.7420751Z 
2025-08-16T21:47:48.7420836Z <a id="api.routes.stats"></a>
2025-08-16T21:47:48.7420977Z 
2025-08-16T21:47:48.7421046Z # api.routes.stats
2025-08-16T21:47:48.7421306Z 
2025-08-16T21:47:48.7421397Z <a id="api.routes.stats.kpi"></a>
2025-08-16T21:47:48.7421554Z 
2025-08-16T21:47:48.7421616Z #### kpi
2025-08-16T21:47:48.7421709Z 
2025-08-16T21:47:48.7421776Z ```python
2025-08-16T21:47:48.7421951Z @router.get("/stats/kpi")
2025-08-16T21:47:48.7422190Z def kpi() -> List[Dict[str, int]]
2025-08-16T21:47:48.7422411Z ```
2025-08-16T21:47:48.7422494Z 
2025-08-16T21:47:48.7422573Z Return KPI metrics (mock).
2025-08-16T21:47:48.7422706Z 
2025-08-16T21:47:48.7422813Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T21:47:48.7422996Z 
2025-08-16T21:47:48.7423067Z #### roi\_by\_vendor
2025-08-16T21:47:48.7423185Z 
2025-08-16T21:47:48.7423248Z ```python
2025-08-16T21:47:48.7423416Z @router.get("/stats/roi_by_vendor")
2025-08-16T21:47:48.7423664Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T21:47:48.7423905Z ```
2025-08-16T21:47:48.7423985Z 
2025-08-16T21:47:48.7424066Z Return ROI percent by vendor.
2025-08-16T21:47:48.7424207Z 
2025-08-16T21:47:48.7424304Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T21:47:48.7424471Z 
2025-08-16T21:47:48.7424534Z #### roi\_trend
2025-08-16T21:47:48.7424641Z 
2025-08-16T21:47:48.7424702Z ```python
2025-08-16T21:47:48.7424862Z @router.get("/stats/roi_trend")
2025-08-16T21:47:48.7425101Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T21:47:48.7425336Z ```
2025-08-16T21:47:48.7425413Z 
2025-08-16T21:47:48.7425486Z Return 30-day ROI trend.
2025-08-16T21:47:48.7425613Z 
2025-08-16T21:47:48.7425698Z <a id="api.routes.roi"></a>
2025-08-16T21:47:48.7425832Z 
2025-08-16T21:47:48.7425902Z # api.routes.roi
2025-08-16T21:47:48.7426079Z 
2025-08-16T21:47:48.7426162Z <a id="api.routes.health"></a>
2025-08-16T21:47:48.7426330Z 
2025-08-16T21:47:48.7426401Z # api.routes.health
2025-08-16T21:47:48.7426530Z 
2025-08-16T21:47:48.7426624Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T21:47:48.7426927Z 
2025-08-16T21:47:48.7426990Z #### MAX\_SKEW
2025-08-16T21:47:48.7427089Z 
2025-08-16T21:47:48.7427154Z seconds
2025-08-16T21:47:48.7427236Z 
2025-08-16T21:47:48.7427324Z <a id="api.routes.health.health"></a>
2025-08-16T21:47:48.7427484Z 
2025-08-16T21:47:48.7427549Z #### health
2025-08-16T21:47:48.7427636Z 
2025-08-16T21:47:48.7427700Z ```python
2025-08-16T21:47:48.7427894Z @router.get("/health", include_in_schema=False)
2025-08-16T21:47:48.7428261Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T21:47:48.7428605Z ```
2025-08-16T21:47:48.7428684Z 
2025-08-16T21:47:48.7428804Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T21:47:48.7428999Z 
2025-08-16T21:47:48.7429085Z <a id="api.routes.repository"></a>
2025-08-16T21:47:48.7429246Z 
2025-08-16T21:47:48.7429325Z # api.routes.repository
2025-08-16T21:47:48.7429451Z 
2025-08-16T21:47:48.7429523Z <a id="api.routes"></a>
2025-08-16T21:47:48.7429872Z 
2025-08-16T21:47:48.7429938Z # api.routes
2025-08-16T21:47:48.7430038Z 
2025-08-16T21:47:48.7430120Z <a id="api.models.fee"></a>
2025-08-16T21:47:48.7430253Z 
2025-08-16T21:47:48.7430320Z # api.models.fee
2025-08-16T21:47:48.7430427Z 
2025-08-16T21:47:48.7430503Z <a id="api.models"></a>
2025-08-16T21:47:48.7430617Z 
2025-08-16T21:47:48.7430680Z # api.models
2025-08-16T21:47:48.7430777Z 
2025-08-16T21:47:48.7430856Z <a id="api.roi_repository"></a>
2025-08-16T21:47:48.7430995Z 
2025-08-16T21:47:48.7431066Z # api.roi\_repository
2025-08-16T21:47:48.7431296Z 
2025-08-16T21:47:48.7431364Z <a id="api.main"></a>
2025-08-16T21:47:48.7431477Z 
2025-08-16T21:47:48.7431545Z # api.main
2025-08-16T21:47:48.7431635Z 
2025-08-16T21:47:48.7431710Z <a id="api.main.ready"></a>
2025-08-16T21:47:48.7431846Z 
2025-08-16T21:47:48.7431908Z #### ready
2025-08-16T21:47:48.7431995Z 
2025-08-16T21:47:48.7432059Z ```python
2025-08-16T21:47:48.7432330Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T21:47:48.7432778Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T21:47:48.7433125Z                                                                       str]
2025-08-16T21:47:48.7433369Z ```
2025-08-16T21:47:48.7433456Z 
2025-08-16T21:47:48.7433557Z Return 200 only when migrations are at head.
2025-08-16T21:47:48.7433737Z 
2025-08-16T21:47:48.7433812Z <a id="api.config"></a>
2025-08-16T21:47:48.7433939Z 
2025-08-16T21:47:48.7434004Z # api.config
2025-08-16T21:47:48.7434105Z 
2025-08-16T21:47:48.7434170Z <a id="etl"></a>
2025-08-16T21:47:48.7434273Z 
2025-08-16T21:47:48.7434343Z # etl
2025-08-16T21:47:48.7434427Z 
2025-08-16T21:47:48.7434508Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T21:47:48.7434666Z 
2025-08-16T21:47:48.7434740Z # etl.fba\_fee\_ingestor
2025-08-16T21:47:48.7434869Z 
2025-08-16T21:47:48.7434949Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T21:47:48.7435101Z 
2025-08-16T21:47:48.7435174Z # etl.sp\_fees\_ingestor
2025-08-16T21:47:48.7435301Z 
2025-08-16T21:47:48.7435386Z <a id="etl.keepa_ingestor"></a>
2025-08-16T21:47:48.7435527Z 
2025-08-16T21:47:48.7435598Z # etl.keepa\_ingestor
2025-08-16T21:47:48.7435715Z 
2025-08-16T21:47:48.7435790Z <a id="etl.db"></a>
2025-08-16T21:47:48.7435896Z 
2025-08-16T21:47:48.7435957Z # etl.db
2025-08-16T21:47:48.7436048Z 
2025-08-16T21:47:48.7436157Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T21:47:48.7436348Z 
2025-08-16T21:47:48.7436440Z # etl.dialects.amazon\_reimbursements
2025-08-16T21:47:48.7436603Z 
2025-08-16T21:47:48.7436691Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T21:47:48.7436856Z 
2025-08-16T21:47:48.7436942Z # etl.dialects.amazon\_returns
2025-08-16T21:47:48.7437084Z 
2025-08-16T21:47:48.7437159Z <a id="etl.dialects"></a>
2025-08-16T21:47:48.7437293Z 
2025-08-16T21:47:48.7437359Z # etl.dialects
2025-08-16T21:47:48.7437459Z 
2025-08-16T21:47:48.7437530Z <a id="ingest"></a>
2025-08-16T21:47:48.7437638Z 
2025-08-16T21:47:48.7437699Z # ingest
2025-08-16T21:47:48.7437789Z 
2025-08-16T21:47:48.7438008Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T21:47:48.7438170Z 
2025-08-16T21:47:48.7438247Z # ingest.tests.test\_smoke
2025-08-16T21:47:48.7438382Z 
2025-08-16T21:47:48.7438456Z <a id="ingest.tests"></a>
2025-08-16T21:47:48.7438581Z 
2025-08-16T21:47:48.7438646Z # ingest.tests
2025-08-16T21:47:48.7438750Z 
2025-08-16T21:47:48.7438831Z <a id="ingest.upload_router"></a>
2025-08-16T21:47:48.7438978Z 
2025-08-16T21:47:48.7439056Z # ingest.upload\_router
2025-08-16T21:47:48.7439177Z 
2025-08-16T21:47:48.7439257Z <a id="ingest.email_watcher"></a>
2025-08-16T21:47:48.7439409Z 
2025-08-16T21:47:48.7439479Z # ingest.email\_watcher
2025-08-16T21:47:48.7439594Z 
2025-08-16T21:47:48.7439680Z <a id="ingest.email_watcher.main"></a>
2025-08-16T21:47:48.7439847Z 
2025-08-16T21:47:48.7439908Z #### main
2025-08-16T21:47:48.7439995Z 
2025-08-16T21:47:48.7440064Z ```python
2025-08-16T21:47:48.7440226Z def main() -> dict[str, str]
2025-08-16T21:47:48.7440421Z ```
2025-08-16T21:47:48.7440503Z 
2025-08-16T21:47:48.7440802Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T21:47:48.7441037Z 
2025-08-16T21:47:48.7441289Z Returns {"status": "success"} when processing completes.
2025-08-16T21:47:48.7441503Z 
2025-08-16T21:47:48.7441588Z <a id="ingest.ingest_router"></a>
2025-08-16T21:47:48.7441743Z 
2025-08-16T21:47:48.7441816Z # ingest.ingest\_router
2025-08-16T21:47:48.7441935Z 
2025-08-16T21:47:48.7442015Z <a id="logistics_etl"></a>
2025-08-16T21:47:48.7442144Z 
2025-08-16T21:47:48.7442209Z # logistics\_etl
2025-08-16T21:47:48.7442320Z 
2025-08-16T21:47:48.7442396Z Daily logistics ETL job.
2025-08-16T21:47:48.7442520Z 
2025-08-16T21:47:48.7442609Z <a id="logistics_etl.__main__"></a>
2025-08-16T21:47:48.7442772Z 
2025-08-16T21:47:48.7442847Z # logistics\_etl.\_\_main\_\_
2025-08-16T21:47:48.7442981Z 
2025-08-16T21:47:48.7443081Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T21:47:48.7443250Z 
2025-08-16T21:47:48.7443332Z # logistics\_etl.tests.conftest
2025-08-16T21:47:48.7443488Z 
2025-08-16T21:47:48.7443593Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T21:47:48.7443777Z 
2025-08-16T21:47:48.7443863Z # logistics\_etl.tests.test\_repository
2025-08-16T21:47:48.7444031Z 
2025-08-16T21:47:48.7444121Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T21:47:48.7444291Z 
2025-08-16T21:47:48.7444380Z # logistics\_etl.tests.test\_cron
2025-08-16T21:47:48.7444527Z 
2025-08-16T21:47:48.7444624Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T21:47:48.7444806Z 
2025-08-16T21:47:48.7444892Z # logistics\_etl.tests.test\_imports
2025-08-16T21:47:48.7445049Z 
2025-08-16T21:47:48.7445141Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T21:47:48.7445317Z 
2025-08-16T21:47:48.7445397Z # logistics\_etl.tests.test\_smoke
2025-08-16T21:47:48.7445555Z 
2025-08-16T21:47:48.7445649Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T21:47:48.7445822Z 
2025-08-16T21:47:48.7445900Z # logistics\_etl.tests.test\_client
2025-08-16T21:47:48.7446050Z 
2025-08-16T21:47:48.7446137Z <a id="logistics_etl.tests"></a>
2025-08-16T21:47:48.7446286Z 
2025-08-16T21:47:48.7446355Z # logistics\_etl.tests
2025-08-16T21:47:48.7446471Z 
2025-08-16T21:47:48.7446553Z <a id="logistics_etl.flow"></a>
2025-08-16T21:47:48.7446690Z 
2025-08-16T21:47:48.7446759Z # logistics\_etl.flow
2025-08-16T21:47:48.7446872Z 
2025-08-16T21:47:48.7446958Z <a id="logistics_etl.client"></a>
2025-08-16T21:47:48.7447103Z 
2025-08-16T21:47:48.7447175Z # logistics\_etl.client
2025-08-16T21:47:48.7447298Z 
2025-08-16T21:47:48.7447374Z <a id="logistics_etl.cron"></a>
2025-08-16T21:47:48.7447510Z 
2025-08-16T21:47:48.7447584Z # logistics\_etl.cron
2025-08-16T21:47:48.7447698Z 
2025-08-16T21:47:48.7447774Z <a id="logistics_etl.db"></a>
2025-08-16T21:47:48.7447910Z 
2025-08-16T21:47:48.7447986Z # logistics\_etl.db
2025-08-16T21:47:48.7448094Z 
2025-08-16T21:47:48.7448180Z <a id="logistics_etl.repository"></a>
2025-08-16T21:47:48.7448343Z 
2025-08-16T21:47:48.7448421Z # logistics\_etl.repository
2025-08-16T21:47:48.7448557Z 
2025-08-16T21:47:48.7448748Z <a id="alert_bot"></a>
2025-08-16T21:47:48.7448869Z 
2025-08-16T21:47:48.7448931Z # alert\_bot
2025-08-16T21:47:48.7449025Z 
2025-08-16T21:47:48.7449116Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T21:47:48.7449274Z 
2025-08-16T21:47:48.7449354Z # alert\_bot.tests.test\_smoke
2025-08-16T21:47:48.7449497Z 
2025-08-16T21:47:48.7449573Z <a id="alert_bot.tests"></a>
2025-08-16T21:47:48.7449704Z 
2025-08-16T21:47:48.7449770Z # alert\_bot.tests
2025-08-16T21:47:48.7449881Z 
2025-08-16T21:47:48.7449958Z <a id="alert_bot.alert_bot"></a>
2025-08-16T21:47:48.7450099Z 
2025-08-16T21:47:48.7450176Z # alert\_bot.alert\_bot
2025-08-16T21:47:48.7450290Z 
2025-08-16T21:47:48.7450367Z <a id="alert_bot.rules"></a>
2025-08-16T21:47:48.7450503Z 
2025-08-16T21:47:48.7450569Z # alert\_bot.rules
2025-08-16T21:47:48.7450671Z 
2025-08-16T21:47:48.7450741Z <a id="common"></a>
2025-08-16T21:47:48.7450851Z 
2025-08-16T21:47:48.7450912Z # common
2025-08-16T21:47:48.7451001Z 
2025-08-16T21:47:48.7451297Z <a id="common.dsn"></a>
2025-08-16T21:47:48.7451417Z 
2025-08-16T21:47:48.7451480Z # common.dsn
2025-08-16T21:47:48.7451574Z 
2025-08-16T21:47:48.7451664Z <a id="common.dsn.build_dsn"></a>
2025-08-16T21:47:48.7451808Z 
2025-08-16T21:47:48.7451872Z #### build\_dsn
2025-08-16T21:47:48.7451978Z 
2025-08-16T21:47:48.7452040Z ```python
2025-08-16T21:47:48.7452209Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:47:48.7452437Z ```
2025-08-16T21:47:48.7452518Z 
2025-08-16T21:47:48.7452645Z Return a Postgres DSN, validating required variables.
2025-08-16T21:47:48.7452846Z 
2025-08-16T21:47:48.7453045Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T21:47:48.7453497Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T21:47:48.7453917Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T21:47:48.7454228Z missing.
2025-08-16T21:47:48.7454318Z 
2025-08-16T21:47:48.7454405Z <a id="common.models_vendor"></a>
2025-08-16T21:47:48.7454561Z 
2025-08-16T21:47:48.7454633Z # common.models\_vendor
2025-08-16T21:47:48.7454753Z 
2025-08-16T21:47:48.7454845Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T21:47:48.7455011Z 
2025-08-16T21:47:48.7455075Z ## Vendor Objects
2025-08-16T21:47:48.7455183Z 
2025-08-16T21:47:48.7455243Z ```python
2025-08-16T21:47:48.7455390Z class Vendor(Base)
2025-08-16T21:47:48.7455563Z ```
2025-08-16T21:47:48.7455650Z 
2025-08-16T21:47:48.7455725Z Vendor of inventory items.
2025-08-16T21:47:48.7455853Z 
2025-08-16T21:47:48.7455959Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T21:47:48.7456137Z 
2025-08-16T21:47:48.7456208Z ## VendorPrice Objects
2025-08-16T21:47:48.7456327Z 
2025-08-16T21:47:48.7456387Z ```python
2025-08-16T21:47:48.7456543Z class VendorPrice(Base)
2025-08-16T21:47:48.7456717Z ```
2025-08-16T21:47:48.7456797Z 
2025-08-16T21:47:48.7456902Z Association table linking vendors to pricing.
2025-08-16T21:47:48.7457081Z 
2025-08-16T21:47:48.7457155Z <a id="common.db_url"></a>
2025-08-16T21:47:48.7457288Z 
2025-08-16T21:47:48.7457360Z # common.db\_url
2025-08-16T21:47:48.7457463Z 
2025-08-16T21:47:48.7457544Z <a id="common.db_url.build_url"></a>
2025-08-16T21:47:48.7457704Z 
2025-08-16T21:47:48.7457767Z #### build\_url
2025-08-16T21:47:48.7457867Z 
2025-08-16T21:47:48.7457930Z ```python
2025-08-16T21:47:48.7458107Z def build_url(async_: bool = True) -> str
2025-08-16T21:47:48.7458334Z ```
2025-08-16T21:47:48.7458413Z 
2025-08-16T21:47:48.7458510Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:47:48.7458684Z 
2025-08-16T21:47:48.7458767Z <a id="common.keepa"></a>
2025-08-16T21:47:48.7458896Z 
2025-08-16T21:47:48.7458962Z # common.keepa
2025-08-16T21:47:48.7459071Z 
2025-08-16T21:47:48.7459142Z <a id="common.llm"></a>
2025-08-16T21:47:48.7459265Z 
2025-08-16T21:47:48.7459334Z # common.llm
2025-08-16T21:47:48.7459430Z 
2025-08-16T21:47:48.7459507Z <a id="common.settings"></a>
2025-08-16T21:47:48.7459642Z 
2025-08-16T21:47:48.7459714Z # common.settings
2025-08-16T21:47:48.7459938Z 
2025-08-16T21:47:48.7460010Z <a id="common.db"></a>
2025-08-16T21:47:48.7460131Z 
2025-08-16T21:47:48.7460192Z # common.db
2025-08-16T21:47:48.7460283Z 
2025-08-16T21:47:48.7460377Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T21:47:48.7460557Z 
2025-08-16T21:47:48.7460631Z #### build\_sqlalchemy\_url
2025-08-16T21:47:48.7460762Z 
2025-08-16T21:47:48.7460829Z ```python
2025-08-16T21:47:48.7460996Z def build_sqlalchemy_url() -> str
2025-08-16T21:47:48.7461323Z ```
2025-08-16T21:47:48.7461404Z 
2025-08-16T21:47:48.7461499Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:47:48.7461676Z 
2025-08-16T21:47:48.7461766Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T21:47:48.7461932Z 
2025-08-16T21:47:48.7462005Z #### build\_asyncpg\_dsn
2025-08-16T21:47:48.7462136Z 
2025-08-16T21:47:48.7462195Z ```python
2025-08-16T21:47:48.7462362Z def build_asyncpg_dsn() -> str
2025-08-16T21:47:48.7462556Z ```
2025-08-16T21:47:48.7462633Z 
2025-08-16T21:47:48.7462766Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:47:48.7463102Z 
2025-08-16T21:47:48.7463187Z <a id="common.db.refresh_mvs"></a>
2025-08-16T21:47:48.7463347Z 
2025-08-16T21:47:48.7463410Z #### refresh\_mvs
2025-08-16T21:47:48.7463513Z 
2025-08-16T21:47:48.7463577Z ```python
2025-08-16T21:47:48.7463767Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:47:48.7464021Z ```
2025-08-16T21:47:48.7464100Z 
2025-08-16T21:47:48.7464235Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:47:48.7464460Z 
2025-08-16T21:47:48.7464534Z <a id="common.config"></a>
2025-08-16T21:47:48.7464665Z 
2025-08-16T21:47:48.7464731Z # common.config
2025-08-16T21:47:48.7464835Z 
2025-08-16T21:47:48.7464907Z <a id="common.base"></a>
2025-08-16T21:47:48.7465027Z 
2025-08-16T21:47:48.7465095Z # common.base
2025-08-16T21:47:48.7465190Z 
2025-08-16T21:47:48.7465270Z <a id="common.base.Base"></a>
2025-08-16T21:47:48.7465406Z 
2025-08-16T21:47:48.7465475Z ## Base Objects
2025-08-16T21:47:48.7465574Z 
2025-08-16T21:47:48.7465641Z ```python
2025-08-16T21:47:48.7465809Z class Base(DeclarativeBase)
2025-08-16T21:47:48.7465998Z ```
2025-08-16T21:47:48.7466083Z 
2025-08-16T21:47:48.7466164Z Base class for SQLAlchemy models.
2025-08-16T21:47:48.7466309Z 
2025-08-16T21:47:48.7466385Z <a id="repricer"></a>
2025-08-16T21:47:48.7466498Z 
2025-08-16T21:47:48.7466560Z # repricer
2025-08-16T21:47:48.7466649Z 
2025-08-16T21:47:48.7466742Z <a id="repricer.app.schemas"></a>
2025-08-16T21:47:48.7466891Z 
2025-08-16T21:47:48.7466965Z # repricer.app.schemas
2025-08-16T21:47:48.7467093Z 
2025-08-16T21:47:48.7467175Z <a id="repricer.app.deps"></a>
2025-08-16T21:47:48.7467316Z 
2025-08-16T21:47:48.7467394Z # repricer.app.deps
2025-08-16T21:47:48.7467504Z 
2025-08-16T21:47:48.7467615Z Placeholder module for Keepa / SP-API clients.
2025-08-16T21:47:48.7467797Z 
2025-08-16T21:47:48.7467884Z <a id="repricer.app.logic"></a>
2025-08-16T21:47:48.7468027Z 
2025-08-16T21:47:48.7468100Z # repricer.app.logic
2025-08-16T21:47:48.7468220Z 
2025-08-16T21:47:48.7468324Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T21:47:48.7468513Z 
2025-08-16T21:47:48.7468577Z #### MIN\_MARGIN
2025-08-16T21:47:48.7468680Z 
2025-08-16T21:47:48.7468742Z 15 % ROI
2025-08-16T21:47:48.7468832Z 
2025-08-16T21:47:48.7468931Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T21:47:48.7469114Z 
2025-08-16T21:47:48.7469187Z #### compute\_price
2025-08-16T21:47:48.7469290Z 
2025-08-16T21:47:48.7469355Z ```python
2025-08-16T21:47:48.7469676Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T21:47:48.7470228Z ```
2025-08-16T21:47:48.7470393Z 
2025-08-16T21:47:48.7470578Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T21:47:48.7471176Z Replace with real competitive logic later.
2025-08-16T21:47:48.7471373Z 
2025-08-16T21:47:48.7471459Z <a id="repricer.app.main"></a>
2025-08-16T21:47:48.7471604Z 
2025-08-16T21:47:48.7471681Z # repricer.app.main
2025-08-16T21:47:48.7471788Z 
2025-08-16T21:47:48.7471864Z <a id="repricer.app"></a>
2025-08-16T21:47:48.7472164Z 
2025-08-16T21:47:48.7472231Z # repricer.app
2025-08-16T21:47:48.7472330Z 
2025-08-16T21:47:48.7472420Z <a id="repricer.tests.test_imports"></a>
2025-08-16T21:47:48.7472597Z 
2025-08-16T21:47:48.7472677Z # repricer.tests.test\_imports
2025-08-16T21:47:48.7472814Z 
2025-08-16T21:47:48.7472910Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T21:47:48.7473070Z 
2025-08-16T21:47:48.7473151Z # repricer.tests.test\_smoke
2025-08-16T21:47:48.7473298Z 
2025-08-16T21:47:48.7473376Z <a id="repricer.tests"></a>
2025-08-16T21:47:48.7473506Z 
2025-08-16T21:47:48.7473617Z # repricer.tests
2025-08-16T21:47:48.7473720Z 
2025-08-16T21:47:48.7473788Z <a id="db"></a>
2025-08-16T21:47:48.7473887Z 
2025-08-16T21:47:48.7473945Z # db
2025-08-16T21:47:48.7474027Z 
2025-08-16T21:47:48.7474104Z <a id="db.utils.views"></a>
2025-08-16T21:47:48.7474231Z 
2025-08-16T21:47:48.7474295Z # db.utils.views
2025-08-16T21:47:48.7474402Z 
2025-08-16T21:47:48.7474493Z <a id="db.utils.views.replace_view"></a>
2025-08-16T21:47:48.7474776Z 
2025-08-16T21:47:48.7474844Z #### replace\_view
2025-08-16T21:47:48.7474954Z 
2025-08-16T21:47:48.7475015Z ```python
2025-08-16T21:47:48.7475210Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T21:47:48.7475453Z ```
2025-08-16T21:47:48.7475536Z 
2025-08-16T21:47:48.7475630Z Drop and recreate a SQL view atomically.
2025-08-16T21:47:48.7475795Z 
2025-08-16T21:47:48.7475863Z <a id="db.utils"></a>
2025-08-16T21:47:48.7475981Z 
2025-08-16T21:47:48.7476045Z # db.utils
2025-08-16T21:47:48.7476137Z 
2025-08-16T21:47:48.7476219Z <a id="price_importer"></a>
2025-08-16T21:47:48.7476349Z 
2025-08-16T21:47:48.7476417Z # price\_importer
2025-08-16T21:47:48.7476522Z 
2025-08-16T21:47:48.7476631Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T21:47:48.7476814Z 
2025-08-16T21:47:48.7476903Z # price\_importer.services\_common.dsn
2025-08-16T21:47:48.7477074Z 
2025-08-16T21:47:48.7477206Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T21:47:48.7477427Z 
2025-08-16T21:47:48.7477501Z #### build\_dsn
2025-08-16T21:47:48.7477602Z 
2025-08-16T21:47:48.7477664Z ```python
2025-08-16T21:47:48.7477846Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:47:48.7478068Z ```
2025-08-16T21:47:48.7478151Z 
2025-08-16T21:47:48.7478221Z Return safe DSN.
2025-08-16T21:47:48.7478325Z 
2025-08-16T21:47:48.7478670Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T21:47:48.7478884Z 
2025-08-16T21:47:48.7479013Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T21:47:48.7479221Z 
2025-08-16T21:47:48.7479335Z # price\_importer.services\_common.models\_vendor
2025-08-16T21:47:48.7479526Z 
2025-08-16T21:47:48.7479635Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T21:47:48.7479828Z 
2025-08-16T21:47:48.7479922Z # price\_importer.services\_common.db\_url
2025-08-16T21:47:48.7480093Z 
2025-08-16T21:47:48.7480226Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T21:47:48.7480445Z 
2025-08-16T21:47:48.7480521Z #### build\_url
2025-08-16T21:47:48.7480628Z 
2025-08-16T21:47:48.7480697Z ```python
2025-08-16T21:47:48.7480870Z def build_url(async_: bool = True) -> str
2025-08-16T21:47:48.7481234Z ```
2025-08-16T21:47:48.7481321Z 
2025-08-16T21:47:48.7481419Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:47:48.7481604Z 
2025-08-16T21:47:48.7481709Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T21:47:48.7481897Z 
2025-08-16T21:47:48.7481988Z # price\_importer.services\_common.keepa
2025-08-16T21:47:48.7482163Z 
2025-08-16T21:47:48.7482263Z <a id="price_importer.services_common.llm"></a>
2025-08-16T21:47:48.7482446Z 
2025-08-16T21:47:48.7482545Z # price\_importer.services\_common.llm
2025-08-16T21:47:48.7482716Z 
2025-08-16T21:47:48.7482831Z <a id="price_importer.services_common.settings"></a>
2025-08-16T21:47:48.7483031Z 
2025-08-16T21:47:48.7483126Z # price\_importer.services\_common.settings
2025-08-16T21:47:48.7483297Z 
2025-08-16T21:47:48.7483396Z <a id="price_importer.services_common.db"></a>
2025-08-16T21:47:48.7483708Z 
2025-08-16T21:47:48.7483797Z # price\_importer.services\_common.db
2025-08-16T21:47:48.7483956Z 
2025-08-16T21:47:48.7484115Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T21:47:48.7484356Z 
2025-08-16T21:47:48.7484431Z #### build\_sqlalchemy\_url
2025-08-16T21:47:48.7484566Z 
2025-08-16T21:47:48.7484627Z ```python
2025-08-16T21:47:48.7484792Z def build_sqlalchemy_url() -> str
2025-08-16T21:47:48.7485000Z ```
2025-08-16T21:47:48.7485079Z 
2025-08-16T21:47:48.7485177Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:47:48.7485349Z 
2025-08-16T21:47:48.7485494Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T21:47:48.7485726Z 
2025-08-16T21:47:48.7485798Z #### build\_asyncpg\_dsn
2025-08-16T21:47:48.7485927Z 
2025-08-16T21:47:48.7485988Z ```python
2025-08-16T21:47:48.7486160Z def build_asyncpg_dsn() -> str
2025-08-16T21:47:48.7486356Z ```
2025-08-16T21:47:48.7486445Z 
2025-08-16T21:47:48.7486574Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:47:48.7486899Z 
2025-08-16T21:47:48.7487034Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T21:47:48.7487244Z 
2025-08-16T21:47:48.7487309Z #### refresh\_mvs
2025-08-16T21:47:48.7487420Z 
2025-08-16T21:47:48.7487482Z ```python
2025-08-16T21:47:48.7487674Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:47:48.7487926Z ```
2025-08-16T21:47:48.7488009Z 
2025-08-16T21:47:48.7488148Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:47:48.7488366Z 
2025-08-16T21:47:48.7488462Z <a id="price_importer.services_common"></a>
2025-08-16T21:47:48.7488636Z 
2025-08-16T21:47:48.7488726Z # price\_importer.services\_common
2025-08-16T21:47:48.7488881Z 
2025-08-16T21:47:48.7488983Z <a id="price_importer.services_common.base"></a>
2025-08-16T21:47:48.7489174Z 
2025-08-16T21:47:48.7489264Z # price\_importer.services\_common.base
2025-08-16T21:47:48.7489432Z 
2025-08-16T21:47:48.7489525Z <a id="price_importer.normaliser"></a>
2025-08-16T21:47:48.7489698Z 
2025-08-16T21:47:48.7489779Z # price\_importer.normaliser
2025-08-16T21:47:48.7489917Z 
2025-08-16T21:47:48.7490025Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T21:47:48.7490212Z 
2025-08-16T21:47:48.7490301Z # price\_importer.common.models\_vendor
2025-08-16T21:47:48.7490472Z 
2025-08-16T21:47:48.7490563Z <a id="price_importer.common.db_url"></a>
2025-08-16T21:47:48.7490734Z 
2025-08-16T21:47:48.7490824Z # price\_importer.common.db\_url
2025-08-16T21:47:48.7490972Z 
2025-08-16T21:47:48.7491180Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T21:47:48.7491372Z 
2025-08-16T21:47:48.7491442Z #### make\_dsn
2025-08-16T21:47:48.7491542Z 
2025-08-16T21:47:48.7491602Z ```python
2025-08-16T21:47:48.7491779Z def make_dsn(async_: bool = False) -> str
2025-08-16T21:47:48.7492000Z ```
2025-08-16T21:47:48.7492087Z 
2025-08-16T21:47:48.7492206Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T21:47:48.7492416Z 
2025-08-16T21:47:48.7492537Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T21:47:48.7492726Z 
2025-08-16T21:47:48.7492788Z #### build\_url
2025-08-16T21:47:48.7492890Z 
2025-08-16T21:47:48.7492951Z ```python
2025-08-16T21:47:48.7493122Z def build_url(async_: bool = False) -> str
2025-08-16T21:47:48.7493351Z ```
2025-08-16T21:47:48.7493431Z 
2025-08-16T21:47:48.7493554Z Return Postgres DSN built from environment variables.
2025-08-16T21:47:48.7493768Z 
2025-08-16T21:47:48.7493854Z <a id="price_importer.common"></a>
2025-08-16T21:47:48.7494009Z 
2025-08-16T21:47:48.7494093Z # price\_importer.common
2025-08-16T21:47:48.7494221Z 
2025-08-16T21:47:48.7494311Z <a id="price_importer.common.base"></a>
2025-08-16T21:47:48.7494483Z 
2025-08-16T21:47:48.7494569Z # price\_importer.common.base
2025-08-16T21:47:48.7494710Z 
2025-08-16T21:47:48.7494810Z <a id="price_importer.tests.conftest"></a>
2025-08-16T21:47:48.7494993Z 
2025-08-16T21:47:48.7495078Z # price\_importer.tests.conftest
2025-08-16T21:47:48.7495227Z 
2025-08-16T21:47:48.7495459Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T21:47:48.7495641Z 
2025-08-16T21:47:48.7495726Z # price\_importer.tests.test\_reader
2025-08-16T21:47:48.7495890Z 
2025-08-16T21:47:48.7495991Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T21:47:48.7496170Z 
2025-08-16T21:47:48.7496259Z # price\_importer.tests.test\_imports
2025-08-16T21:47:48.7496427Z 
2025-08-16T21:47:48.7496527Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T21:47:48.7496703Z 
2025-08-16T21:47:48.7496792Z # price\_importer.tests.test\_smoke
2025-08-16T21:47:48.7496949Z 
2025-08-16T21:47:48.7497052Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T21:47:48.7497244Z 
2025-08-16T21:47:48.7497334Z # price\_importer.tests.test\_normaliser
2025-08-16T21:47:48.7497500Z 
2025-08-16T21:47:48.7497584Z <a id="price_importer.tests"></a>
2025-08-16T21:47:48.7497738Z 
2025-08-16T21:47:48.7497812Z # price\_importer.tests
2025-08-16T21:47:48.7497933Z 
2025-08-16T21:47:48.7498021Z <a id="price_importer.reader"></a>
2025-08-16T21:47:48.7498322Z 
2025-08-16T21:47:48.7498397Z # price\_importer.reader
2025-08-16T21:47:48.7498527Z 
2025-08-16T21:47:48.7498622Z <a id="price_importer.reader.load_file"></a>
2025-08-16T21:47:48.7498797Z 
2025-08-16T21:47:48.7498861Z #### load\_file
2025-08-16T21:47:48.7498969Z 
2025-08-16T21:47:48.7499030Z ```python
2025-08-16T21:47:48.7499206Z def load_file(path: str | Path) -> Any
2025-08-16T21:47:48.7499420Z ```
2025-08-16T21:47:48.7499500Z 
2025-08-16T21:47:48.7499593Z Return DataFrame from CSV or Excel file.
2025-08-16T21:47:48.7499761Z 
2025-08-16T21:47:48.7499865Z Raises RuntimeError if pandas is unavailable.
2025-08-16T21:47:48.7500051Z 
2025-08-16T21:47:48.7500142Z <a id="price_importer.repository"></a>
2025-08-16T21:47:48.7500308Z 
2025-08-16T21:47:48.7500399Z # price\_importer.repository
2025-08-16T21:47:48.7500540Z 
2025-08-16T21:47:48.7500624Z <a id="price_importer.import"></a>
2025-08-16T21:47:48.7500775Z 
2025-08-16T21:47:48.7500856Z # price\_importer.import
2025-08-16T21:47:48.7500990Z 
2025-08-16T21:47:48.7501058Z <a id="fees_h10"></a>
2025-08-16T21:47:48.7501304Z 
2025-08-16T21:47:48.7501370Z # fees\_h10
2025-08-16T21:47:48.7501466Z 
2025-08-16T21:47:48.7501542Z <a id="fees_h10.worker"></a>
2025-08-16T21:47:48.7501683Z 
2025-08-16T21:47:48.7501750Z # fees\_h10.worker
2025-08-16T21:47:48.7501857Z 
2025-08-16T21:47:48.7501946Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T21:47:48.7502102Z 
2025-08-16T21:47:48.7502180Z # fees\_h10.tests.test\_smoke
2025-08-16T21:47:48.7502324Z 
2025-08-16T21:47:48.7502399Z <a id="fees_h10.tests"></a>
2025-08-16T21:47:48.7502528Z 
2025-08-16T21:47:48.7502594Z # fees\_h10.tests
2025-08-16T21:47:48.7502711Z 
2025-08-16T21:47:48.7502784Z <a id="fees_h10.client"></a>
2025-08-16T21:47:48.7502915Z 
2025-08-16T21:47:48.7502988Z # fees\_h10.client
2025-08-16T21:47:48.7503094Z 
2025-08-16T21:47:48.7503176Z <a id="fees_h10.repository"></a>
2025-08-16T21:47:48.7503327Z 
2025-08-16T21:47:48.7503398Z # fees\_h10.repository
2025-08-16T21:47:48.7503522Z 
2025-08-16T21:47:48.7503593Z <a id="emailer"></a>
2025-08-16T21:47:48.7503709Z 
2025-08-16T21:47:48.7503770Z # emailer
2025-08-16T21:47:48.7503860Z 
2025-08-16T21:47:48.7503966Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T21:47:48.7504146Z 
2025-08-16T21:47:48.7504234Z # emailer.tests.test\_import\_emailer
2025-08-16T21:47:48.7504395Z 
2025-08-16T21:47:48.7504487Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T21:47:48.7504646Z 
2025-08-16T21:47:48.7504725Z # emailer.tests.test\_smoke
2025-08-16T21:47:48.7504866Z 
2025-08-16T21:47:48.7504944Z <a id="emailer.tests"></a>
2025-08-16T21:47:48.7505071Z 
2025-08-16T21:47:48.7505146Z # emailer.tests
2025-08-16T21:47:48.7505250Z 
2025-08-16T21:47:48.7505331Z <a id="emailer.generate_body"></a>
2025-08-16T21:47:48.7505482Z 
2025-08-16T21:47:48.7505566Z # emailer.generate\_body
2025-08-16T21:47:48.7505693Z 
2025-08-16T21:47:48.7505763Z <a id="llm_server"></a>
2025-08-16T21:47:48.7505889Z 
2025-08-16T21:47:48.7505953Z # llm\_server
2025-08-16T21:47:48.7506179Z 
2025-08-16T21:47:48.7506258Z <a id="llm_server.app"></a>
2025-08-16T21:47:48.7506394Z 
2025-08-16T21:47:48.7506462Z # llm\_server.app
2025-08-16T21:47:48.7506569Z 
