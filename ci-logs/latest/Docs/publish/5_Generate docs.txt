2025-08-19T08:20:15.0655064Z ##[group]Run pydoc-markdown
2025-08-19T08:20:15.0655366Z [36;1mpydoc-markdown[0m
2025-08-19T08:20:15.0695508Z shell: /usr/bin/bash -e {0}
2025-08-19T08:20:15.0695889Z env:
2025-08-19T08:20:15.0696128Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:15.0696510Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T08:20:15.0696904Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:15.0697265Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:15.0697627Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:15.0697985Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T08:20:15.0698263Z ##[endgroup]
2025-08-19T08:20:15.3942536Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T08:20:15.3943314Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T08:20:15.3943793Z In "pydoc-markdown.yml"
2025-08-19T08:20:15.3944218Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T08:20:15.3944921Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T08:20:15.3945901Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T08:20:15.3946455Z 
2025-08-19T08:20:15.7029766Z <a id="__init__"></a>
2025-08-19T08:20:15.7030103Z 
2025-08-19T08:20:15.7030228Z # \_\_init\_\_
2025-08-19T08:20:15.7030436Z 
2025-08-19T08:20:15.7030568Z <a id="api"></a>
2025-08-19T08:20:15.7030769Z 
2025-08-19T08:20:15.7030890Z # api
2025-08-19T08:20:15.7031055Z 
2025-08-19T08:20:15.7031197Z <a id="api.errors"></a>
2025-08-19T08:20:15.7031429Z 
2025-08-19T08:20:15.7031563Z # api.errors
2025-08-19T08:20:15.7031747Z 
2025-08-19T08:20:15.7031896Z <a id="api.sentry_config"></a>
2025-08-19T08:20:15.7032174Z 
2025-08-19T08:20:15.7032311Z # api.sentry\_config
2025-08-19T08:20:15.7032532Z 
2025-08-19T08:20:15.7032702Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T08:20:15.7033035Z 
2025-08-19T08:20:15.7033187Z # api.tests.test\_sentry\_scrub
2025-08-19T08:20:15.7033506Z 
2025-08-19T08:20:15.7033691Z <a id="api.tests.test_errors_json"></a>
2025-08-19T08:20:15.7034010Z 
2025-08-19T08:20:15.7034163Z # api.tests.test\_errors\_json
2025-08-19T08:20:15.7034439Z 
2025-08-19T08:20:15.7034586Z <a id="api.tests.test_llm"></a>
2025-08-19T08:20:15.7034851Z 
2025-08-19T08:20:15.7034986Z # api.tests.test\_llm
2025-08-19T08:20:15.7035219Z 
2025-08-19T08:20:15.7035482Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T08:20:15.7036036Z 
2025-08-19T08:20:15.7036200Z # api.tests.test\_sentry\_event
2025-08-19T08:20:15.7036470Z 
2025-08-19T08:20:15.7036704Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T08:20:15.7037106Z 
2025-08-19T08:20:15.7037249Z ## DummyTransport Objects
2025-08-19T08:20:15.7037492Z 
2025-08-19T08:20:15.7037618Z ```python
2025-08-19T08:20:15.7037934Z class DummyTransport()
2025-08-19T08:20:15.7038350Z ```
2025-08-19T08:20:15.7038517Z 
2025-08-19T08:20:15.7038856Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T08:20:15.7039712Z 
2025-08-19T08:20:15.7039856Z #### capture\_envelope
2025-08-19T08:20:15.7040079Z 
2025-08-19T08:20:15.7040198Z ```python
2025-08-19T08:20:15.7040524Z def capture_envelope(envelope)
2025-08-19T08:20:15.7040893Z ```
2025-08-19T08:20:15.7041052Z 
2025-08-19T08:20:15.7041288Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T08:20:15.7041680Z 
2025-08-19T08:20:15.7041845Z <a id="api.tests.test_cors"></a>
2025-08-19T08:20:15.7042127Z 
2025-08-19T08:20:15.7042263Z # api.tests.test\_cors
2025-08-19T08:20:15.7042500Z 
2025-08-19T08:20:15.7042708Z <a id="api.tests.test_imports"></a>
2025-08-19T08:20:15.7043014Z 
2025-08-19T08:20:15.7043159Z # api.tests.test\_imports
2025-08-19T08:20:15.7043418Z 
2025-08-19T08:20:15.7043588Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T08:20:15.7043905Z 
2025-08-19T08:20:15.7044071Z # api.tests.test\_rate\_limit
2025-08-19T08:20:15.7044339Z 
2025-08-19T08:20:15.7044519Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T08:20:15.7045288Z 
2025-08-19T08:20:15.7045408Z #### app
2025-08-19T08:20:15.7045574Z 
2025-08-19T08:20:15.7045908Z noqa: E402
2025-08-19T08:20:15.7046095Z 
2025-08-19T08:20:15.7046265Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T08:20:15.7046582Z 
2025-08-19T08:20:15.7046776Z # api.tests.test\_entrypoint
2025-08-19T08:20:15.7047058Z 
2025-08-19T08:20:15.7047246Z <a id="api.tests.test_health"></a>
2025-08-19T08:20:15.7047564Z 
2025-08-19T08:20:15.7047716Z # api.tests.test\_health
2025-08-19T08:20:15.7047958Z 
2025-08-19T08:20:15.7048107Z <a id="api.logging_config"></a>
2025-08-19T08:20:15.7048387Z 
2025-08-19T08:20:15.7048521Z # api.logging\_config
2025-08-19T08:20:15.7048743Z 
2025-08-19T08:20:15.7048901Z <a id="api.migrations.env"></a>
2025-08-19T08:20:15.7049174Z 
2025-08-19T08:20:15.7049312Z # api.migrations.env
2025-08-19T08:20:15.7049535Z 
2025-08-19T08:20:15.7049772Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T08:20:15.7050163Z 
2025-08-19T08:20:15.7050366Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T08:20:15.7050741Z 
2025-08-19T08:20:15.7050946Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T08:20:15.7051314Z 
2025-08-19T08:20:15.7051501Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T08:20:15.7051837Z 
2025-08-19T08:20:15.7052127Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T08:20:15.7052590Z 
2025-08-19T08:20:15.7052850Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T08:20:15.7053264Z 
2025-08-19T08:20:15.7053502Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T08:20:15.7053903Z 
2025-08-19T08:20:15.7054099Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T08:20:15.7054450Z 
2025-08-19T08:20:15.7054682Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T08:20:15.7055061Z 
2025-08-19T08:20:15.7055260Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T08:20:15.7055786Z 
2025-08-19T08:20:15.7056038Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T08:20:15.7056453Z 
2025-08-19T08:20:15.7056661Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T08:20:15.7057034Z 
2025-08-19T08:20:15.7057258Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T08:20:15.7057641Z 
2025-08-19T08:20:15.7057847Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T08:20:15.7058201Z 
2025-08-19T08:20:15.7058443Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T08:20:15.7058848Z 
2025-08-19T08:20:15.7059054Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T08:20:15.7059415Z 
2025-08-19T08:20:15.7059682Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T08:20:15.7060109Z 
2025-08-19T08:20:15.7060335Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T08:20:15.7060725Z 
2025-08-19T08:20:15.7060967Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T08:20:15.7061361Z 
2025-08-19T08:20:15.7061567Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T08:20:15.7062175Z 
2025-08-19T08:20:15.7062437Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T08:20:15.7062964Z 
2025-08-19T08:20:15.7063193Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T08:20:15.7063609Z 
2025-08-19T08:20:15.7063819Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T08:20:15.7064198Z 
2025-08-19T08:20:15.7064377Z # api.migrations.versions.0001\_baseline
2025-08-19T08:20:15.7064707Z 
2025-08-19T08:20:15.7064887Z <a id="api.migrations.versions"></a>
2025-08-19T08:20:15.7065200Z 
2025-08-19T08:20:15.7065356Z # api.migrations.versions
2025-08-19T08:20:15.7065796Z 
2025-08-19T08:20:15.7065945Z <a id="api.migrations"></a>
2025-08-19T08:20:15.7066256Z 
2025-08-19T08:20:15.7066380Z # api.migrations
2025-08-19T08:20:15.7066619Z 
2025-08-19T08:20:15.7066778Z <a id="api.db"></a>
2025-08-19T08:20:15.7066982Z 
2025-08-19T08:20:15.7067103Z # api.db
2025-08-19T08:20:15.7067270Z 
2025-08-19T08:20:15.7067420Z <a id="api.routes.stats"></a>
2025-08-19T08:20:15.7067942Z 
2025-08-19T08:20:15.7068072Z # api.routes.stats
2025-08-19T08:20:15.7068281Z 
2025-08-19T08:20:15.7068441Z <a id="api.routes.stats.kpi"></a>
2025-08-19T08:20:15.7068742Z 
2025-08-19T08:20:15.7068860Z #### kpi
2025-08-19T08:20:15.7069027Z 
2025-08-19T08:20:15.7069151Z ```python
2025-08-19T08:20:15.7069460Z @router.get("/stats/kpi")
2025-08-19T08:20:15.7070014Z def kpi() -> List[Dict[str, int]]
2025-08-19T08:20:15.7070405Z ```
2025-08-19T08:20:15.7070560Z 
2025-08-19T08:20:15.7070722Z Return KPI metrics (mock).
2025-08-19T08:20:15.7070974Z 
2025-08-19T08:20:15.7071162Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T08:20:15.7071511Z 
2025-08-19T08:20:15.7071646Z #### roi\_by\_vendor
2025-08-19T08:20:15.7071857Z 
2025-08-19T08:20:15.7071976Z ```python
2025-08-19T08:20:15.7072290Z @router.get("/stats/roi_by_vendor")
2025-08-19T08:20:15.7072807Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T08:20:15.7073229Z ```
2025-08-19T08:20:15.7073380Z 
2025-08-19T08:20:15.7073554Z Return ROI percent by vendor.
2025-08-19T08:20:15.7073818Z 
2025-08-19T08:20:15.7073982Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T08:20:15.7074303Z 
2025-08-19T08:20:15.7074423Z #### roi\_trend
2025-08-19T08:20:15.7074614Z 
2025-08-19T08:20:15.7074740Z ```python
2025-08-19T08:20:15.7075040Z @router.get("/stats/roi_trend")
2025-08-19T08:20:15.7075488Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T08:20:15.7076104Z ```
2025-08-19T08:20:15.7076260Z 
2025-08-19T08:20:15.7076407Z Return 30-day ROI trend.
2025-08-19T08:20:15.7076660Z 
2025-08-19T08:20:15.7076801Z <a id="api.routes.roi"></a>
2025-08-19T08:20:15.7077061Z 
2025-08-19T08:20:15.7077188Z # api.routes.roi
2025-08-19T08:20:15.7077392Z 
2025-08-19T08:20:15.7077549Z <a id="api.routes.health"></a>
2025-08-19T08:20:15.7077813Z 
2025-08-19T08:20:15.7077942Z # api.routes.health
2025-08-19T08:20:15.7078149Z 
2025-08-19T08:20:15.7078324Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T08:20:15.7078641Z 
2025-08-19T08:20:15.7078772Z #### MAX\_SKEW
2025-08-19T08:20:15.7078966Z 
2025-08-19T08:20:15.7079077Z seconds
2025-08-19T08:20:15.7079236Z 
2025-08-19T08:20:15.7079402Z <a id="api.routes.health.health"></a>
2025-08-19T08:20:15.7079718Z 
2025-08-19T08:20:15.7079841Z #### health
2025-08-19T08:20:15.7080017Z 
2025-08-19T08:20:15.7080145Z ```python
2025-08-19T08:20:15.7080511Z @router.get("/health", include_in_schema=False)
2025-08-19T08:20:15.7081262Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T08:20:15.7081896Z ```
2025-08-19T08:20:15.7082058Z 
2025-08-19T08:20:15.7082277Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T08:20:15.7082648Z 
2025-08-19T08:20:15.7082811Z <a id="api.routes.repository"></a>
2025-08-19T08:20:15.7083116Z 
2025-08-19T08:20:15.7083259Z # api.routes.repository
2025-08-19T08:20:15.7083495Z 
2025-08-19T08:20:15.7083639Z <a id="api.routes"></a>
2025-08-19T08:20:15.7083862Z 
2025-08-19T08:20:15.7083978Z # api.routes
2025-08-19T08:20:15.7084170Z 
2025-08-19T08:20:15.7084540Z <a id="api.models.fee"></a>
2025-08-19T08:20:15.7084792Z 
2025-08-19T08:20:15.7084911Z # api.models.fee
2025-08-19T08:20:15.7085103Z 
2025-08-19T08:20:15.7085233Z <a id="api.models"></a>
2025-08-19T08:20:15.7085457Z 
2025-08-19T08:20:15.7085583Z # api.models
2025-08-19T08:20:15.7085948Z 
2025-08-19T08:20:15.7086099Z <a id="api.roi_repository"></a>
2025-08-19T08:20:15.7086378Z 
2025-08-19T08:20:15.7086514Z # api.roi\_repository
2025-08-19T08:20:15.7086734Z 
2025-08-19T08:20:15.7086866Z <a id="api.main"></a>
2025-08-19T08:20:15.7087095Z 
2025-08-19T08:20:15.7087221Z # api.main
2025-08-19T08:20:15.7087394Z 
2025-08-19T08:20:15.7087549Z <a id="api.main.ready"></a>
2025-08-19T08:20:15.7087805Z 
2025-08-19T08:20:15.7087919Z #### ready
2025-08-19T08:20:15.7088089Z 
2025-08-19T08:20:15.7088219Z ```python
2025-08-19T08:20:15.7088702Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T08:20:15.7089533Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T08:20:15.7090409Z                                                                       str]
2025-08-19T08:20:15.7090849Z ```
2025-08-19T08:20:15.7091002Z 
2025-08-19T08:20:15.7091188Z Return 200 only when migrations are at head.
2025-08-19T08:20:15.7091522Z 
2025-08-19T08:20:15.7091659Z <a id="api.config"></a>
2025-08-19T08:20:15.7091890Z 
2025-08-19T08:20:15.7092020Z # api.config
2025-08-19T08:20:15.7092197Z 
2025-08-19T08:20:15.7092317Z <a id="etl"></a>
2025-08-19T08:20:15.7092515Z 
2025-08-19T08:20:15.7092622Z # etl
2025-08-19T08:20:15.7092779Z 
2025-08-19T08:20:15.7092934Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T08:20:15.7093214Z 
2025-08-19T08:20:15.7093348Z # etl.fba\_fee\_ingestor
2025-08-19T08:20:15.7093580Z 
2025-08-19T08:20:15.7093739Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T08:20:15.7094015Z 
2025-08-19T08:20:15.7094150Z # etl.sp\_fees\_ingestor
2025-08-19T08:20:15.7094394Z 
2025-08-19T08:20:15.7094542Z <a id="etl.keepa_ingestor"></a>
2025-08-19T08:20:15.7094819Z 
2025-08-19T08:20:15.7094957Z # etl.keepa\_ingestor
2025-08-19T08:20:15.7095185Z 
2025-08-19T08:20:15.7095310Z <a id="etl.db"></a>
2025-08-19T08:20:15.7095509Z 
2025-08-19T08:20:15.7095799Z # etl.db
2025-08-19T08:20:15.7095968Z 
2025-08-19T08:20:15.7096124Z <a id="etl.dialects.schemas"></a>
2025-08-19T08:20:15.7096412Z 
2025-08-19T08:20:15.7096553Z # etl.dialects.schemas
2025-08-19T08:20:15.7096786Z 
2025-08-19T08:20:15.7096982Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T08:20:15.7097345Z 
2025-08-19T08:20:15.7097519Z # etl.dialects.amazon\_reimbursements
2025-08-19T08:20:15.7097834Z 
2025-08-19T08:20:15.7098050Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T08:20:15.7098397Z 
2025-08-19T08:20:15.7098562Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T08:20:15.7098861Z 
2025-08-19T08:20:15.7099035Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T08:20:15.7099365Z 
2025-08-19T08:20:15.7099520Z # etl.dialects.amazon\_returns
2025-08-19T08:20:15.7099793Z 
2025-08-19T08:20:15.7100002Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T08:20:15.7100341Z 
2025-08-19T08:20:15.7100509Z # etl.dialects.amazon\_fee\_preview
2025-08-19T08:20:15.7100802Z 
2025-08-19T08:20:15.7101012Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T08:20:15.7101373Z 
2025-08-19T08:20:15.7101541Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T08:20:15.7101865Z 
2025-08-19T08:20:15.7102048Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T08:20:15.7102380Z 
2025-08-19T08:20:15.7102606Z # etl.dialects.amazon\_settlements
2025-08-19T08:20:15.7102901Z 
2025-08-19T08:20:15.7103036Z <a id="etl.dialects"></a>
2025-08-19T08:20:15.7103281Z 
2025-08-19T08:20:15.7103410Z # etl.dialects
2025-08-19T08:20:15.7103600Z 
2025-08-19T08:20:15.7103724Z <a id="ingest"></a>
2025-08-19T08:20:15.7103934Z 
2025-08-19T08:20:15.7104046Z # ingest
2025-08-19T08:20:15.7104206Z 
2025-08-19T08:20:15.7104360Z <a id="ingest.maintenance"></a>
2025-08-19T08:20:15.7104637Z 
2025-08-19T08:20:15.7104773Z # ingest.maintenance
2025-08-19T08:20:15.7105224Z 
2025-08-19T08:20:15.7105381Z <a id="ingest.copy_loader"></a>
2025-08-19T08:20:15.7105812Z 
2025-08-19T08:20:15.7105956Z # ingest.copy\_loader
2025-08-19T08:20:15.7106185Z 
2025-08-19T08:20:15.7106376Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T08:20:15.7106730Z 
2025-08-19T08:20:15.7106868Z #### copy\_df\_via\_temp
2025-08-19T08:20:15.7107110Z 
2025-08-19T08:20:15.7107228Z ```python
2025-08-19T08:20:15.7107556Z def copy_df_via_temp(engine: Engine,
2025-08-19T08:20:15.7107994Z                      df: pd.DataFrame,
2025-08-19T08:20:15.7108434Z                      target_table: str,
2025-08-19T08:20:15.7108844Z                      *,
2025-08-19T08:20:15.7109234Z                      target_schema: Optional[str] = None,
2025-08-19T08:20:15.7109728Z                      columns: Sequence[str],
2025-08-19T08:20:15.7110249Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T08:20:15.7110838Z                      analyze_after: bool = False,
2025-08-19T08:20:15.7111726Z                      connection: Any | None = None) -> int
2025-08-19T08:20:15.7112215Z ```
2025-08-19T08:20:15.7112369Z 
2025-08-19T08:20:15.7112682Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T08:20:15.7113128Z 
2025-08-19T08:20:15.7113288Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T08:20:15.7113615Z 
2025-08-19T08:20:15.7113806Z # ingest.tests.test\_smoke
2025-08-19T08:20:15.7114064Z 
2025-08-19T08:20:15.7114205Z <a id="ingest.tests"></a>
2025-08-19T08:20:15.7114447Z 
2025-08-19T08:20:15.7114576Z # ingest.tests
2025-08-19T08:20:15.7114768Z 
2025-08-19T08:20:15.7114922Z <a id="ingest.upload_router"></a>
2025-08-19T08:20:15.7115207Z 
2025-08-19T08:20:15.7115348Z # ingest.upload\_router
2025-08-19T08:20:15.7115575Z 
2025-08-19T08:20:15.7115938Z <a id="ingest.email_watcher"></a>
2025-08-19T08:20:15.7116232Z 
2025-08-19T08:20:15.7116369Z # ingest.email\_watcher
2025-08-19T08:20:15.7116596Z 
2025-08-19T08:20:15.7116766Z <a id="ingest.email_watcher.main"></a>
2025-08-19T08:20:15.7117094Z 
2025-08-19T08:20:15.7117206Z #### main
2025-08-19T08:20:15.7117369Z 
2025-08-19T08:20:15.7117489Z ```python
2025-08-19T08:20:15.7117791Z def main() -> dict[str, str]
2025-08-19T08:20:15.7118160Z ```
2025-08-19T08:20:15.7118313Z 
2025-08-19T08:20:15.7118579Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T08:20:15.7119030Z 
2025-08-19T08:20:15.7119286Z Returns {"status": "success"} when processing completes.
2025-08-19T08:20:15.7119684Z 
2025-08-19T08:20:15.7119833Z <a id="ingest.tasks"></a>
2025-08-19T08:20:15.7120080Z 
2025-08-19T08:20:15.7120216Z # ingest.tasks
2025-08-19T08:20:15.7120406Z 
2025-08-19T08:20:15.7120589Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T08:20:15.7120925Z 
2025-08-19T08:20:15.7121061Z #### task\_import\_file
2025-08-19T08:20:15.7121284Z 
2025-08-19T08:20:15.7121408Z ```python
2025-08-19T08:20:15.7121797Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T08:20:15.7122328Z def task_import_file(self: Any,
2025-08-19T08:20:15.7122739Z                      uri: str,
2025-08-19T08:20:15.7123150Z                      report_type: Optional[str] = None,
2025-08-19T08:20:15.7123652Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T08:20:15.7124100Z ```
2025-08-19T08:20:15.7124253Z 
2025-08-19T08:20:15.7124500Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T08:20:15.7124907Z 
2025-08-19T08:20:15.7125059Z <a id="ingest.celery_app"></a>
2025-08-19T08:20:15.7125326Z 
2025-08-19T08:20:15.7125472Z # ingest.celery\_app
2025-08-19T08:20:15.7125865Z 
2025-08-19T08:20:15.7126022Z <a id="ingest.ingest_router"></a>
2025-08-19T08:20:15.7126315Z 
2025-08-19T08:20:15.7126454Z # ingest.ingest\_router
2025-08-19T08:20:15.7126679Z 
2025-08-19T08:20:15.7126817Z <a id="logistics_etl"></a>
2025-08-19T08:20:15.7127072Z 
2025-08-19T08:20:15.7127196Z # logistics\_etl
2025-08-19T08:20:15.7127391Z 
2025-08-19T08:20:15.7127540Z Daily logistics ETL job.
2025-08-19T08:20:15.7127790Z 
2025-08-19T08:20:15.7128382Z <a id="logistics_etl.__main__"></a>
2025-08-19T08:20:15.7128698Z 
2025-08-19T08:20:15.7128847Z # logistics\_etl.\_\_main\_\_
2025-08-19T08:20:15.7129118Z 
2025-08-19T08:20:15.7129269Z <a id="logistics_etl.dsn"></a>
2025-08-19T08:20:15.7129545Z 
2025-08-19T08:20:15.7129680Z # logistics\_etl.dsn
2025-08-19T08:20:15.7129903Z 
2025-08-19T08:20:15.7130134Z Local DSN builder to avoid cross-service dependency.
2025-08-19T08:20:15.7130520Z 
2025-08-19T08:20:15.7130688Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T08:20:15.7131011Z 
2025-08-19T08:20:15.7131138Z #### build\_dsn
2025-08-19T08:20:15.7131325Z 
2025-08-19T08:20:15.7131440Z ```python
2025-08-19T08:20:15.7131769Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:20:15.7132180Z ```
2025-08-19T08:20:15.7132341Z 
2025-08-19T08:20:15.7132607Z Return a Postgres DSN assembled from environment variables.
2025-08-19T08:20:15.7133032Z 
2025-08-19T08:20:15.7133330Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T08:20:15.7134290Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T08:20:15.7134974Z error when any required variable is missing.
2025-08-19T08:20:15.7135337Z 
2025-08-19T08:20:15.7135564Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T08:20:15.7136090Z 
2025-08-19T08:20:15.7136248Z # logistics\_etl.tests.conftest
2025-08-19T08:20:15.7136518Z 
2025-08-19T08:20:15.7136723Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T08:20:15.7137073Z 
2025-08-19T08:20:15.7137240Z # logistics\_etl.tests.test\_repository
2025-08-19T08:20:15.7137557Z 
2025-08-19T08:20:15.7137735Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T08:20:15.7138062Z 
2025-08-19T08:20:15.7138215Z # logistics\_etl.tests.test\_cron
2025-08-19T08:20:15.7138505Z 
2025-08-19T08:20:15.7138698Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T08:20:15.7139045Z 
2025-08-19T08:20:15.7139212Z # logistics\_etl.tests.test\_imports
2025-08-19T08:20:15.7139514Z 
2025-08-19T08:20:15.7139700Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T08:20:15.7140041Z 
2025-08-19T08:20:15.7140197Z # logistics\_etl.tests.test\_smoke
2025-08-19T08:20:15.7140485Z 
2025-08-19T08:20:15.7140665Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T08:20:15.7141003Z 
2025-08-19T08:20:15.7141163Z # logistics\_etl.tests.test\_client
2025-08-19T08:20:15.7141458Z 
2025-08-19T08:20:15.7141617Z <a id="logistics_etl.tests"></a>
2025-08-19T08:20:15.7141893Z 
2025-08-19T08:20:15.7142029Z # logistics\_etl.tests
2025-08-19T08:20:15.7142259Z 
2025-08-19T08:20:15.7142408Z <a id="logistics_etl.flow"></a>
2025-08-19T08:20:15.7142674Z 
2025-08-19T08:20:15.7142802Z # logistics\_etl.flow
2025-08-19T08:20:15.7143027Z 
2025-08-19T08:20:15.7143177Z <a id="logistics_etl.client"></a>
2025-08-19T08:20:15.7143451Z 
2025-08-19T08:20:15.7143592Z # logistics\_etl.client
2025-08-19T08:20:15.7143818Z 
2025-08-19T08:20:15.7143963Z <a id="logistics_etl.cron"></a>
2025-08-19T08:20:15.7144224Z 
2025-08-19T08:20:15.7144353Z # logistics\_etl.cron
2025-08-19T08:20:15.7144567Z 
2025-08-19T08:20:15.7144707Z <a id="logistics_etl.db"></a>
2025-08-19T08:20:15.7144959Z 
2025-08-19T08:20:15.7170988Z # logistics\_etl.db
2025-08-19T08:20:15.7171386Z 
2025-08-19T08:20:15.7171551Z <a id="logistics_etl.repository"></a>
2025-08-19T08:20:15.7171849Z 
2025-08-19T08:20:15.7171982Z # logistics\_etl.repository
2025-08-19T08:20:15.7172208Z 
2025-08-19T08:20:15.7172321Z <a id="alert_bot"></a>
2025-08-19T08:20:15.7172516Z 
2025-08-19T08:20:15.7172616Z # alert\_bot
2025-08-19T08:20:15.7172766Z 
2025-08-19T08:20:15.7172912Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T08:20:15.7173178Z 
2025-08-19T08:20:15.7173301Z # alert\_bot.tests.test\_smoke
2025-08-19T08:20:15.7173521Z 
2025-08-19T08:20:15.7173654Z <a id="alert_bot.tests"></a>
2025-08-19T08:20:15.7173869Z 
2025-08-19T08:20:15.7173976Z # alert\_bot.tests
2025-08-19T08:20:15.7174157Z 
2025-08-19T08:20:15.7174289Z <a id="alert_bot.alert_bot"></a>
2025-08-19T08:20:15.7174523Z 
2025-08-19T08:20:15.7174661Z # alert\_bot.alert\_bot
2025-08-19T08:20:15.7175079Z 
2025-08-19T08:20:15.7175210Z <a id="alert_bot.rules"></a>
2025-08-19T08:20:15.7175426Z 
2025-08-19T08:20:15.7175537Z # alert\_bot.rules
2025-08-19T08:20:15.7175918Z 
2025-08-19T08:20:15.7176026Z <a id="common"></a>
2025-08-19T08:20:15.7176206Z 
2025-08-19T08:20:15.7176304Z # common
2025-08-19T08:20:15.7176442Z 
2025-08-19T08:20:15.7176564Z <a id="common.dsn"></a>
2025-08-19T08:20:15.7176752Z 
2025-08-19T08:20:15.7176850Z # common.dsn
2025-08-19T08:20:15.7177007Z 
2025-08-19T08:20:15.7177144Z <a id="common.dsn.build_dsn"></a>
2025-08-19T08:20:15.7177389Z 
2025-08-19T08:20:15.7177491Z #### build\_dsn
2025-08-19T08:20:15.7177653Z 
2025-08-19T08:20:15.7177752Z ```python
2025-08-19T08:20:15.7178026Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:20:15.7178380Z ```
2025-08-19T08:20:15.7178519Z 
2025-08-19T08:20:15.7178742Z Return a Postgres DSN, validating required variables.
2025-08-19T08:20:15.7179089Z 
2025-08-19T08:20:15.7179412Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T08:20:15.7180394Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T08:20:15.7181095Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T08:20:15.7181611Z missing.
2025-08-19T08:20:15.7181763Z 
2025-08-19T08:20:15.7181907Z <a id="common.models_vendor"></a>
2025-08-19T08:20:15.7182162Z 
2025-08-19T08:20:15.7182285Z # common.models\_vendor
2025-08-19T08:20:15.7182480Z 
2025-08-19T08:20:15.7182639Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T08:20:15.7182918Z 
2025-08-19T08:20:15.7183023Z ## Vendor Objects
2025-08-19T08:20:15.7183206Z 
2025-08-19T08:20:15.7183307Z ```python
2025-08-19T08:20:15.7183557Z class Vendor(Base)
2025-08-19T08:20:15.7183826Z ```
2025-08-19T08:20:15.7183963Z 
2025-08-19T08:20:15.7184099Z Vendor of inventory items.
2025-08-19T08:20:15.7184316Z 
2025-08-19T08:20:15.7184485Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T08:20:15.7184801Z 
2025-08-19T08:20:15.7184936Z ## VendorPrice Objects
2025-08-19T08:20:15.7185126Z 
2025-08-19T08:20:15.7185229Z ```python
2025-08-19T08:20:15.7185508Z class VendorPrice(Base)
2025-08-19T08:20:15.7185995Z ```
2025-08-19T08:20:15.7186141Z 
2025-08-19T08:20:15.7186316Z Association table linking vendors to pricing.
2025-08-19T08:20:15.7186627Z 
2025-08-19T08:20:15.7186762Z <a id="common.db_url"></a>
2025-08-19T08:20:15.7187011Z 
2025-08-19T08:20:15.7187123Z # common.db\_url
2025-08-19T08:20:15.7187303Z 
2025-08-19T08:20:15.7187443Z <a id="common.db_url.build_url"></a>
2025-08-19T08:20:15.7187706Z 
2025-08-19T08:20:15.7187814Z #### build\_url
2025-08-19T08:20:15.7187990Z 
2025-08-19T08:20:15.7188095Z ```python
2025-08-19T08:20:15.7188387Z def build_url(async_: bool = True) -> str
2025-08-19T08:20:15.7188742Z ```
2025-08-19T08:20:15.7188872Z 
2025-08-19T08:20:15.7189037Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:20:15.7189325Z 
2025-08-19T08:20:15.7189445Z <a id="common.keepa"></a>
2025-08-19T08:20:15.7189676Z 
2025-08-19T08:20:15.7189787Z # common.keepa
2025-08-19T08:20:15.7189951Z 
2025-08-19T08:20:15.7190072Z <a id="common.llm"></a>
2025-08-19T08:20:15.7190272Z 
2025-08-19T08:20:15.7190385Z # common.llm
2025-08-19T08:20:15.7190547Z 
2025-08-19T08:20:15.7190690Z <a id="common.settings"></a>
2025-08-19T08:20:15.7190923Z 
2025-08-19T08:20:15.7191033Z # common.settings
2025-08-19T08:20:15.7191211Z 
2025-08-19T08:20:15.7191340Z <a id="common.db"></a>
2025-08-19T08:20:15.7191522Z 
2025-08-19T08:20:15.7191627Z # common.db
2025-08-19T08:20:15.7191783Z 
2025-08-19T08:20:15.7191940Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T08:20:15.7192227Z 
2025-08-19T08:20:15.7192358Z #### build\_sqlalchemy\_url
2025-08-19T08:20:15.7192573Z 
2025-08-19T08:20:15.7192675Z ```python
2025-08-19T08:20:15.7192957Z def build_sqlalchemy_url() -> str
2025-08-19T08:20:15.7193292Z ```
2025-08-19T08:20:15.7193442Z 
2025-08-19T08:20:15.7193605Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:20:15.7193887Z 
2025-08-19T08:20:15.7194234Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T08:20:15.7194535Z 
2025-08-19T08:20:15.7194661Z #### build\_asyncpg\_dsn
2025-08-19T08:20:15.7194882Z 
2025-08-19T08:20:15.7194994Z ```python
2025-08-19T08:20:15.7195277Z def build_asyncpg_dsn() -> str
2025-08-19T08:20:15.7195769Z ```
2025-08-19T08:20:15.7195912Z 
2025-08-19T08:20:15.7196128Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:20:15.7196501Z 
2025-08-19T08:20:15.7196645Z <a id="common.db.refresh_mvs"></a>
2025-08-19T08:20:15.7196916Z 
2025-08-19T08:20:15.7197067Z #### refresh\_mvs
2025-08-19T08:20:15.7197254Z 
2025-08-19T08:20:15.7197412Z ```python
2025-08-19T08:20:15.7197744Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:20:15.7198156Z ```
2025-08-19T08:20:15.7198295Z 
2025-08-19T08:20:15.7198520Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:20:15.7198875Z 
2025-08-19T08:20:15.7199008Z <a id="common.config"></a>
2025-08-19T08:20:15.7199300Z 
2025-08-19T08:20:15.7199629Z # common.config
2025-08-19T08:20:15.7199803Z 
2025-08-19T08:20:15.7199928Z <a id="common.base"></a>
2025-08-19T08:20:15.7200135Z 
2025-08-19T08:20:15.7200240Z # common.base
2025-08-19T08:20:15.7200393Z 
2025-08-19T08:20:15.7200531Z <a id="common.base.Base"></a>
2025-08-19T08:20:15.7200753Z 
2025-08-19T08:20:15.7200861Z ## Base Objects
2025-08-19T08:20:15.7201033Z 
2025-08-19T08:20:15.7201137Z ```python
2025-08-19T08:20:15.7201398Z class Base(DeclarativeBase)
2025-08-19T08:20:15.7201721Z ```
2025-08-19T08:20:15.7201852Z 
2025-08-19T08:20:15.7202000Z Base class for SQLAlchemy models.
2025-08-19T08:20:15.7202260Z 
2025-08-19T08:20:15.7202386Z <a id="repricer"></a>
2025-08-19T08:20:15.7202640Z 
2025-08-19T08:20:15.7202752Z # repricer
2025-08-19T08:20:15.7202906Z 
2025-08-19T08:20:15.7203050Z <a id="repricer.app.schemas"></a>
2025-08-19T08:20:15.7203327Z 
2025-08-19T08:20:15.7203455Z # repricer.app.schemas
2025-08-19T08:20:15.7203653Z 
2025-08-19T08:20:15.7203792Z <a id="repricer.app.deps"></a>
2025-08-19T08:20:15.7204053Z 
2025-08-19T08:20:15.7204178Z # repricer.app.deps
2025-08-19T08:20:15.7204366Z 
2025-08-19T08:20:15.7204569Z Placeholder module for Keepa / SP-API clients.
2025-08-19T08:20:15.7204896Z 
2025-08-19T08:20:15.7205037Z <a id="repricer.app.logic"></a>
2025-08-19T08:20:15.7205293Z 
2025-08-19T08:20:15.7205420Z # repricer.app.logic
2025-08-19T08:20:15.7205767Z 
2025-08-19T08:20:15.7205942Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T08:20:15.7206262Z 
2025-08-19T08:20:15.7206373Z #### MIN\_MARGIN
2025-08-19T08:20:15.7206555Z 
2025-08-19T08:20:15.7206677Z 15 % ROI
2025-08-19T08:20:15.7206836Z 
2025-08-19T08:20:15.7207023Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T08:20:15.7207361Z 
2025-08-19T08:20:15.7207482Z #### compute\_price
2025-08-19T08:20:15.7207674Z 
2025-08-19T08:20:15.7207785Z ```python
2025-08-19T08:20:15.7208224Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T08:20:15.7208751Z ```
2025-08-19T08:20:15.7208909Z 
2025-08-19T08:20:15.7209111Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T08:20:15.7209737Z Replace with real competitive logic later.
2025-08-19T08:20:15.7210037Z 
2025-08-19T08:20:15.7210185Z <a id="repricer.app.main"></a>
2025-08-19T08:20:15.7210448Z 
2025-08-19T08:20:15.7210574Z # repricer.app.main
2025-08-19T08:20:15.7210765Z 
2025-08-19T08:20:15.7210899Z <a id="repricer.app"></a>
2025-08-19T08:20:15.7211137Z 
2025-08-19T08:20:15.7211255Z # repricer.app
2025-08-19T08:20:15.7211430Z 
2025-08-19T08:20:15.7211607Z <a id="repricer.tests.test_imports"></a>
2025-08-19T08:20:15.7211907Z 
2025-08-19T08:20:15.7212057Z # repricer.tests.test\_imports
2025-08-19T08:20:15.7212316Z 
2025-08-19T08:20:15.7212478Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T08:20:15.7212772Z 
2025-08-19T08:20:15.7212918Z # repricer.tests.test\_smoke
2025-08-19T08:20:15.7213174Z 
2025-08-19T08:20:15.7213311Z <a id="repricer.tests"></a>
2025-08-19T08:20:15.7213549Z 
2025-08-19T08:20:15.7213675Z # repricer.tests
2025-08-19T08:20:15.7214044Z 
2025-08-19T08:20:15.7214160Z <a id="db"></a>
2025-08-19T08:20:15.7214343Z 
2025-08-19T08:20:15.7214448Z # db
2025-08-19T08:20:15.7214585Z 
2025-08-19T08:20:15.7214719Z <a id="db.utils.views"></a>
2025-08-19T08:20:15.7214961Z 
2025-08-19T08:20:15.7215078Z # db.utils.views
2025-08-19T08:20:15.7215261Z 
2025-08-19T08:20:15.7215431Z <a id="db.utils.views.replace_view"></a>
2025-08-19T08:20:15.7215885Z 
2025-08-19T08:20:15.7216009Z #### replace\_view
2025-08-19T08:20:15.7216198Z 
2025-08-19T08:20:15.7216318Z ```python
2025-08-19T08:20:15.7216675Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T08:20:15.7217114Z ```
2025-08-19T08:20:15.7217267Z 
2025-08-19T08:20:15.7217424Z Drop and recreate a SQL view atomically.
2025-08-19T08:20:15.7217730Z 
2025-08-19T08:20:15.7217856Z <a id="db.utils"></a>
2025-08-19T08:20:15.7218071Z 
2025-08-19T08:20:15.7218189Z # db.utils
2025-08-19T08:20:15.7218347Z 
2025-08-19T08:20:15.7218486Z <a id="price_importer"></a>
2025-08-19T08:20:15.7218725Z 
2025-08-19T08:20:15.7219042Z # price\_importer
2025-08-19T08:20:15.7219233Z 
2025-08-19T08:20:15.7219421Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T08:20:15.7219759Z 
2025-08-19T08:20:15.7219926Z # price\_importer.services\_common.dsn
2025-08-19T08:20:15.7220226Z 
2025-08-19T08:20:15.7220456Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T08:20:15.7220829Z 
2025-08-19T08:20:15.7220944Z #### build\_dsn
2025-08-19T08:20:15.7221124Z 
2025-08-19T08:20:15.7221243Z ```python
2025-08-19T08:20:15.7221549Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:20:15.7221938Z ```
2025-08-19T08:20:15.7222085Z 
2025-08-19T08:20:15.7222200Z Return safe DSN.
2025-08-19T08:20:15.7222441Z 
2025-08-19T08:20:15.7222957Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T08:20:15.7223322Z 
2025-08-19T08:20:15.7223554Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T08:20:15.7223920Z 
2025-08-19T08:20:15.7224119Z # price\_importer.services\_common.models\_vendor
2025-08-19T08:20:15.7224492Z 
2025-08-19T08:20:15.7224692Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T08:20:15.7225040Z 
2025-08-19T08:20:15.7225215Z # price\_importer.services\_common.db\_url
2025-08-19T08:20:15.7225529Z 
2025-08-19T08:20:15.7225913Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T08:20:15.7226268Z 
2025-08-19T08:20:15.7226382Z #### build\_url
2025-08-19T08:20:15.7226549Z 
2025-08-19T08:20:15.7226659Z ```python
2025-08-19T08:20:15.7226971Z def build_url(async_: bool = True) -> str
2025-08-19T08:20:15.7227373Z ```
2025-08-19T08:20:15.7227530Z 
2025-08-19T08:20:15.7227702Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:20:15.7227999Z 
2025-08-19T08:20:15.7228190Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T08:20:15.7228506Z 
2025-08-19T08:20:15.7228664Z # price\_importer.services\_common.keepa
2025-08-19T08:20:15.7228949Z 
2025-08-19T08:20:15.7229124Z <a id="price_importer.services_common.llm"></a>
2025-08-19T08:20:15.7229433Z 
2025-08-19T08:20:15.7229591Z # price\_importer.services\_common.llm
2025-08-19T08:20:15.7229873Z 
2025-08-19T08:20:15.7230066Z <a id="price_importer.services_common.settings"></a>
2025-08-19T08:20:15.7230398Z 
2025-08-19T08:20:15.7230567Z # price\_importer.services\_common.settings
2025-08-19T08:20:15.7230860Z 
2025-08-19T08:20:15.7231028Z <a id="price_importer.services_common.db"></a>
2025-08-19T08:20:15.7231320Z 
2025-08-19T08:20:15.7231484Z # price\_importer.services\_common.db
2025-08-19T08:20:15.7231752Z 
2025-08-19T08:20:15.7232014Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T08:20:15.7232409Z 
2025-08-19T08:20:15.7232537Z #### build\_sqlalchemy\_url
2025-08-19T08:20:15.7232780Z 
2025-08-19T08:20:15.7232898Z ```python
2025-08-19T08:20:15.7233197Z def build_sqlalchemy_url() -> str
2025-08-19T08:20:15.7233563Z ```
2025-08-19T08:20:15.7233705Z 
2025-08-19T08:20:15.7233872Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:20:15.7234180Z 
2025-08-19T08:20:15.7234440Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T08:20:15.7235010Z 
2025-08-19T08:20:15.7235142Z #### build\_asyncpg\_dsn
2025-08-19T08:20:15.7235362Z 
2025-08-19T08:20:15.7235471Z ```python
2025-08-19T08:20:15.7235917Z def build_asyncpg_dsn() -> str
2025-08-19T08:20:15.7236257Z ```
2025-08-19T08:20:15.7236400Z 
2025-08-19T08:20:15.7236624Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:20:15.7236981Z 
2025-08-19T08:20:15.7237198Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T08:20:15.7237557Z 
2025-08-19T08:20:15.7237667Z #### refresh\_mvs
2025-08-19T08:20:15.7237826Z 
2025-08-19T08:20:15.7237931Z ```python
2025-08-19T08:20:15.7238232Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:20:15.7238606Z ```
2025-08-19T08:20:15.7238733Z 
2025-08-19T08:20:15.7238932Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:20:15.7239249Z 
2025-08-19T08:20:15.7239388Z <a id="price_importer.services_common"></a>
2025-08-19T08:20:15.7239813Z 
2025-08-19T08:20:15.7239941Z # price\_importer.services\_common
2025-08-19T08:20:15.7240173Z 
2025-08-19T08:20:15.7240327Z <a id="price_importer.services_common.base"></a>
2025-08-19T08:20:15.7240596Z 
2025-08-19T08:20:15.7240738Z # price\_importer.services\_common.base
2025-08-19T08:20:15.7240979Z 
2025-08-19T08:20:15.7241113Z <a id="price_importer.normaliser"></a>
2025-08-19T08:20:15.7241354Z 
2025-08-19T08:20:15.7241476Z # price\_importer.normaliser
2025-08-19T08:20:15.7241681Z 
2025-08-19T08:20:15.7241829Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T08:20:15.7242107Z 
2025-08-19T08:20:15.7242238Z # price\_importer.common.models\_vendor
2025-08-19T08:20:15.7242472Z 
2025-08-19T08:20:15.7242617Z <a id="price_importer.common.db_url"></a>
2025-08-19T08:20:15.7242883Z 
2025-08-19T08:20:15.7243029Z # price\_importer.common.db\_url
2025-08-19T08:20:15.7243310Z 
2025-08-19T08:20:15.7243477Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T08:20:15.7243807Z 
2025-08-19T08:20:15.7243926Z #### make\_dsn
2025-08-19T08:20:15.7244108Z 
2025-08-19T08:20:15.7244217Z ```python
2025-08-19T08:20:15.7244535Z def make_dsn(async_: bool = False) -> str
2025-08-19T08:20:15.7244896Z ```
2025-08-19T08:20:15.7245020Z 
2025-08-19T08:20:15.7245203Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T08:20:15.7245542Z 
2025-08-19T08:20:15.7245884Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T08:20:15.7246244Z 
2025-08-19T08:20:15.7246355Z #### build\_url
2025-08-19T08:20:15.7246535Z 
2025-08-19T08:20:15.7246643Z ```python
2025-08-19T08:20:15.7246958Z def build_url(async_: bool = False) -> str
2025-08-19T08:20:15.7247346Z ```
2025-08-19T08:20:15.7247487Z 
2025-08-19T08:20:15.7247696Z Return Postgres DSN built from environment variables.
2025-08-19T08:20:15.7248054Z 
2025-08-19T08:20:15.7248210Z <a id="price_importer.common"></a>
2025-08-19T08:20:15.7248482Z 
2025-08-19T08:20:15.7248614Z # price\_importer.common
2025-08-19T08:20:15.7248848Z 
2025-08-19T08:20:15.7249030Z <a id="price_importer.common.base"></a>
2025-08-19T08:20:15.7249327Z 
2025-08-19T08:20:15.7249477Z # price\_importer.common.base
2025-08-19T08:20:15.7249720Z 
2025-08-19T08:20:15.7249884Z <a id="price_importer.tests.conftest"></a>
2025-08-19T08:20:15.7250174Z 
2025-08-19T08:20:15.7250317Z # price\_importer.tests.conftest
2025-08-19T08:20:15.7250608Z 
2025-08-19T08:20:15.7250769Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T08:20:15.7251073Z 
2025-08-19T08:20:15.7251219Z # price\_importer.tests.test\_reader
2025-08-19T08:20:15.7251487Z 
2025-08-19T08:20:15.7251666Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T08:20:15.7251966Z 
2025-08-19T08:20:15.7252107Z # price\_importer.tests.test\_imports
2025-08-19T08:20:15.7252372Z 
2025-08-19T08:20:15.7252539Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T08:20:15.7252826Z 
2025-08-19T08:20:15.7252963Z # price\_importer.tests.test\_smoke
2025-08-19T08:20:15.7253221Z 
2025-08-19T08:20:15.7253404Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T08:20:15.7253929Z 
2025-08-19T08:20:15.7254112Z # price\_importer.tests.test\_normaliser
2025-08-19T08:20:15.7254429Z 
2025-08-19T08:20:15.7254594Z <a id="price_importer.tests"></a>
2025-08-19T08:20:15.7254883Z 
2025-08-19T08:20:15.7255024Z # price\_importer.tests
2025-08-19T08:20:15.7255255Z 
2025-08-19T08:20:15.7255410Z <a id="price_importer.reader"></a>
2025-08-19T08:20:15.7255852Z 
2025-08-19T08:20:15.7255998Z # price\_importer.reader
2025-08-19T08:20:15.7256227Z 
2025-08-19T08:20:15.7256433Z <a id="price_importer.repository"></a>
2025-08-19T08:20:15.7256779Z 
2025-08-19T08:20:15.7256932Z # price\_importer.repository
2025-08-19T08:20:15.7257188Z 
2025-08-19T08:20:15.7257353Z <a id="price_importer.import"></a>
2025-08-19T08:20:15.7257630Z 
2025-08-19T08:20:15.7257777Z # price\_importer.import
2025-08-19T08:20:15.7258021Z 
2025-08-19T08:20:15.7258147Z <a id="fees_h10"></a>
2025-08-19T08:20:15.7258355Z 
2025-08-19T08:20:15.7258477Z # fees\_h10
2025-08-19T08:20:15.7258834Z 
2025-08-19T08:20:15.7258972Z <a id="fees_h10.worker"></a>
2025-08-19T08:20:15.7259220Z 
2025-08-19T08:20:15.7259347Z # fees\_h10.worker
2025-08-19T08:20:15.7259541Z 
2025-08-19T08:20:15.7259720Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T08:20:15.7260053Z 
2025-08-19T08:20:15.7260186Z #### list\_active\_asins
2025-08-19T08:20:15.7260410Z 
2025-08-19T08:20:15.7260526Z ```python
2025-08-19T08:20:15.7260839Z def list_active_asins() -> list[str]
2025-08-19T08:20:15.7261234Z ```
2025-08-19T08:20:15.7261391Z 
2025-08-19T08:20:15.7261598Z Return known ASINs or an empty list if unavailable.
2025-08-19T08:20:15.7261955Z 
2025-08-19T08:20:15.7262122Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T08:20:15.7262418Z 
2025-08-19T08:20:15.7262562Z # fees\_h10.tests.test\_smoke
2025-08-19T08:20:15.7262826Z 
2025-08-19T08:20:15.7262964Z <a id="fees_h10.tests"></a>
2025-08-19T08:20:15.7263201Z 
2025-08-19T08:20:15.7263327Z # fees\_h10.tests
2025-08-19T08:20:15.7263522Z 
2025-08-19T08:20:15.7263669Z <a id="fees_h10.client"></a>
2025-08-19T08:20:15.7263919Z 
2025-08-19T08:20:15.7264047Z # fees\_h10.client
2025-08-19T08:20:15.7264242Z 
2025-08-19T08:20:15.7264389Z <a id="fees_h10.repository"></a>
2025-08-19T08:20:15.7264663Z 
2025-08-19T08:20:15.7264793Z # fees\_h10.repository
2025-08-19T08:20:15.7265020Z 
2025-08-19T08:20:15.7265225Z <a id="emailer"></a>
2025-08-19T08:20:15.7265439Z 
2025-08-19T08:20:15.7265556Z # emailer
2025-08-19T08:20:15.7265891Z 
2025-08-19T08:20:15.7266088Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T08:20:15.7266425Z 
2025-08-19T08:20:15.7266589Z # emailer.tests.test\_import\_emailer
2025-08-19T08:20:15.7266892Z 
2025-08-19T08:20:15.7267050Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T08:20:15.7267340Z 
2025-08-19T08:20:15.7267488Z # emailer.tests.test\_smoke
2025-08-19T08:20:15.7267742Z 
2025-08-19T08:20:15.7267884Z <a id="emailer.tests"></a>
2025-08-19T08:20:15.7268126Z 
2025-08-19T08:20:15.7268263Z # emailer.tests
2025-08-19T08:20:15.7268456Z 
2025-08-19T08:20:15.7268622Z <a id="emailer.generate_body"></a>
2025-08-19T08:20:15.7268912Z 
2025-08-19T08:20:15.7269052Z # emailer.generate\_body
2025-08-19T08:20:15.7269286Z 
2025-08-19T08:20:15.7269418Z <a id="llm_server"></a>
2025-08-19T08:20:15.7269645Z 
2025-08-19T08:20:15.7269764Z # llm\_server
2025-08-19T08:20:15.7269946Z 
2025-08-19T08:20:15.7270092Z <a id="llm_server.app"></a>
2025-08-19T08:20:15.7270333Z 
2025-08-19T08:20:15.7270452Z # llm\_server.app
2025-08-19T08:20:15.7270644Z 
