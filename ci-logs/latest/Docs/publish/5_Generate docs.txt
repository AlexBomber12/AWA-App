2025-08-19T22:57:47.7335012Z ##[group]Run pydoc-markdown
2025-08-19T22:57:47.7335328Z [36;1mpydoc-markdown[0m
2025-08-19T22:57:47.7376287Z shell: /usr/bin/bash -e {0}
2025-08-19T22:57:47.7376525Z env:
2025-08-19T22:57:47.7376765Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:57:47.7377193Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T22:57:47.7377580Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:57:47.7377926Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:57:47.7378274Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:57:47.7378617Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T22:57:47.7378904Z ##[endgroup]
2025-08-19T22:57:48.1047335Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T22:57:48.1048158Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T22:57:48.1048616Z In "pydoc-markdown.yml"
2025-08-19T22:57:48.1049035Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T22:57:48.1049921Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T22:57:48.1050674Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T22:57:48.1051189Z 
2025-08-19T22:57:48.4658507Z <a id="__init__"></a>
2025-08-19T22:57:48.4658965Z 
2025-08-19T22:57:48.4659113Z # \_\_init\_\_
2025-08-19T22:57:48.4659554Z 
2025-08-19T22:57:48.4659702Z <a id="api"></a>
2025-08-19T22:57:48.4659947Z 
2025-08-19T22:57:48.4660072Z # api
2025-08-19T22:57:48.4660240Z 
2025-08-19T22:57:48.4660385Z <a id="api.errors"></a>
2025-08-19T22:57:48.4660631Z 
2025-08-19T22:57:48.4660764Z # api.errors
2025-08-19T22:57:48.4660961Z 
2025-08-19T22:57:48.4661142Z <a id="api.sentry_config"></a>
2025-08-19T22:57:48.4661440Z 
2025-08-19T22:57:48.4661584Z # api.sentry\_config
2025-08-19T22:57:48.4661820Z 
2025-08-19T22:57:48.4662013Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T22:57:48.4662364Z 
2025-08-19T22:57:48.4662535Z # api.tests.test\_stats\_contracts
2025-08-19T22:57:48.4662903Z 
2025-08-19T22:57:48.4663082Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T22:57:48.4663401Z 
2025-08-19T22:57:48.4663585Z # api.tests.test\_sentry\_scrub
2025-08-19T22:57:48.4663894Z 
2025-08-19T22:57:48.4664099Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T22:57:48.4664496Z 
2025-08-19T22:57:48.4664682Z # api.tests.test\_roi\_basic\_auth
2025-08-19T22:57:48.4665029Z 
2025-08-19T22:57:48.4665227Z <a id="api.tests.test_errors_json"></a>
2025-08-19T22:57:48.4665607Z 
2025-08-19T22:57:48.4665792Z # api.tests.test\_errors\_json
2025-08-19T22:57:48.4666113Z 
2025-08-19T22:57:48.4666311Z <a id="api.tests.test_llm"></a>
2025-08-19T22:57:48.4666607Z 
2025-08-19T22:57:48.4666747Z # api.tests.test\_llm
2025-08-19T22:57:48.4666978Z 
2025-08-19T22:57:48.4667129Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T22:57:48.4667419Z 
2025-08-19T22:57:48.4667567Z # api.tests.test\_roi\_filters
2025-08-19T22:57:48.4667804Z 
2025-08-19T22:57:48.4667947Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T22:57:48.4668538Z 
2025-08-19T22:57:48.4668641Z # api.tests.test\_sentry\_event
2025-08-19T22:57:48.4668805Z 
2025-08-19T22:57:48.4668978Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T22:57:48.4669504Z 
2025-08-19T22:57:48.4669646Z ## DummyTransport Objects
2025-08-19T22:57:48.4669867Z 
2025-08-19T22:57:48.4669989Z ```python
2025-08-19T22:57:48.4670327Z class DummyTransport()
2025-08-19T22:57:48.4670629Z ```
2025-08-19T22:57:48.4670776Z 
2025-08-19T22:57:48.4671068Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T22:57:48.4671511Z 
2025-08-19T22:57:48.4671642Z #### capture\_envelope
2025-08-19T22:57:48.4671842Z 
2025-08-19T22:57:48.4671954Z ```python
2025-08-19T22:57:48.4672252Z def capture_envelope(envelope)
2025-08-19T22:57:48.4672589Z ```
2025-08-19T22:57:48.4672733Z 
2025-08-19T22:57:48.4672939Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T22:57:48.4673289Z 
2025-08-19T22:57:48.4673436Z <a id="api.tests.test_cors"></a>
2025-08-19T22:57:48.4674025Z 
2025-08-19T22:57:48.4674170Z # api.tests.test\_cors
2025-08-19T22:57:48.4674403Z 
2025-08-19T22:57:48.4674574Z <a id="api.tests.test_imports"></a>
2025-08-19T22:57:48.4674879Z 
2025-08-19T22:57:48.4675029Z # api.tests.test\_imports
2025-08-19T22:57:48.4675277Z 
2025-08-19T22:57:48.4675437Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T22:57:48.4675723Z 
2025-08-19T22:57:48.4675874Z # api.tests.test\_rate\_limit
2025-08-19T22:57:48.4676124Z 
2025-08-19T22:57:48.4676305Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T22:57:48.4676611Z 
2025-08-19T22:57:48.4676736Z #### app
2025-08-19T22:57:48.4676893Z 
2025-08-19T22:57:48.4677005Z noqa: E402
2025-08-19T22:57:48.4677165Z 
2025-08-19T22:57:48.4677308Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T22:57:48.4677585Z 
2025-08-19T22:57:48.4677720Z # api.tests.test\_stats\_sql
2025-08-19T22:57:48.4677956Z 
2025-08-19T22:57:48.4678100Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T22:57:48.4678382Z 
2025-08-19T22:57:48.4678535Z # api.tests.test\_entrypoint
2025-08-19T22:57:48.4678678Z 
2025-08-19T22:57:48.4678788Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T22:57:48.4679006Z 
2025-08-19T22:57:48.4679111Z # api.tests.test\_stats\_future\_contracts
2025-08-19T22:57:48.4679470Z 
2025-08-19T22:57:48.4679592Z <a id="api.tests.test_health"></a>
2025-08-19T22:57:48.4679758Z 
2025-08-19T22:57:48.4679835Z # api.tests.test\_health
2025-08-19T22:57:48.4679963Z 
2025-08-19T22:57:48.4680054Z <a id="api.tests.test_score"></a>
2025-08-19T22:57:48.4680201Z 
2025-08-19T22:57:48.4680276Z # api.tests.test\_score
2025-08-19T22:57:48.4680405Z 
2025-08-19T22:57:48.4680486Z <a id="api.logging_config"></a>
2025-08-19T22:57:48.4680626Z 
2025-08-19T22:57:48.4680696Z # api.logging\_config
2025-08-19T22:57:48.4680819Z 
2025-08-19T22:57:48.4680899Z <a id="api.migrations.env"></a>
2025-08-19T22:57:48.4681038Z 
2025-08-19T22:57:48.4681118Z # api.migrations.env
2025-08-19T22:57:48.4681236Z 
2025-08-19T22:57:48.4681367Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T22:57:48.4681573Z 
2025-08-19T22:57:48.4681681Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T22:57:48.4681871Z 
2025-08-19T22:57:48.4681985Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T22:57:48.4682184Z 
2025-08-19T22:57:48.4682280Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T22:57:48.4682453Z 
2025-08-19T22:57:48.4682621Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T22:57:48.4682856Z 
2025-08-19T22:57:48.4682993Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T22:57:48.4683217Z 
2025-08-19T22:57:48.4683339Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T22:57:48.4683542Z 
2025-08-19T22:57:48.4683655Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T22:57:48.4683840Z 
2025-08-19T22:57:48.4683955Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T22:57:48.4684236Z 
2025-08-19T22:57:48.4684341Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T22:57:48.4684729Z 
2025-08-19T22:57:48.4684862Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T22:57:48.4685067Z 
2025-08-19T22:57:48.4685175Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T22:57:48.4685368Z 
2025-08-19T22:57:48.4685483Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T22:57:48.4685676Z 
2025-08-19T22:57:48.4685783Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T22:57:48.4685976Z 
2025-08-19T22:57:48.4686098Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T22:57:48.4686300Z 
2025-08-19T22:57:48.4686413Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T22:57:48.4686596Z 
2025-08-19T22:57:48.4686733Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T22:57:48.4686956Z 
2025-08-19T22:57:48.4687075Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T22:57:48.4687273Z 
2025-08-19T22:57:48.4687400Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T22:57:48.4687737Z 
2025-08-19T22:57:48.4687848Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T22:57:48.4688033Z 
2025-08-19T22:57:48.4688172Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T22:57:48.4688388Z 
2025-08-19T22:57:48.4688503Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T22:57:48.4688707Z 
2025-08-19T22:57:48.4688813Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T22:57:48.4689003Z 
2025-08-19T22:57:48.4689103Z # api.migrations.versions.0001\_baseline
2025-08-19T22:57:48.4689639Z 
2025-08-19T22:57:48.4689802Z <a id="api.migrations.versions"></a>
2025-08-19T22:57:48.4690101Z 
2025-08-19T22:57:48.4690259Z # api.migrations.versions
2025-08-19T22:57:48.4690502Z 
2025-08-19T22:57:48.4690648Z <a id="api.migrations"></a>
2025-08-19T22:57:48.4690898Z 
2025-08-19T22:57:48.4691025Z # api.migrations
2025-08-19T22:57:48.4691220Z 
2025-08-19T22:57:48.4691356Z <a id="api.db"></a>
2025-08-19T22:57:48.4691528Z 
2025-08-19T22:57:48.4691594Z # api.db
2025-08-19T22:57:48.4691684Z 
2025-08-19T22:57:48.4691771Z <a id="api.routes.score"></a>
2025-08-19T22:57:48.4691912Z 
2025-08-19T22:57:48.4691981Z # api.routes.score
2025-08-19T22:57:48.4692096Z 
2025-08-19T22:57:48.4692175Z <a id="api.routes.stats"></a>
2025-08-19T22:57:48.4692310Z 
2025-08-19T22:57:48.4692379Z # api.routes.stats
2025-08-19T22:57:48.4692492Z 
2025-08-19T22:57:48.4692567Z <a id="api.routes.roi"></a>
2025-08-19T22:57:48.4692701Z 
2025-08-19T22:57:48.4692777Z # api.routes.roi
2025-08-19T22:57:48.4692889Z 
2025-08-19T22:57:48.4692975Z <a id="api.routes.health"></a>
2025-08-19T22:57:48.4693122Z 
2025-08-19T22:57:48.4693195Z # api.routes.health
2025-08-19T22:57:48.4693304Z 
2025-08-19T22:57:48.4693398Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T22:57:48.4693574Z 
2025-08-19T22:57:48.4693640Z #### MAX\_SKEW
2025-08-19T22:57:48.4693738Z 
2025-08-19T22:57:48.4693805Z seconds
2025-08-19T22:57:48.4693891Z 
2025-08-19T22:57:48.4693983Z <a id="api.routes.health.health"></a>
2025-08-19T22:57:48.4694161Z 
2025-08-19T22:57:48.4694225Z #### health
2025-08-19T22:57:48.4694318Z 
2025-08-19T22:57:48.4694436Z ```python
2025-08-19T22:57:48.4694641Z @router.get("/health", include_in_schema=False)
2025-08-19T22:57:48.4695038Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T22:57:48.4695382Z ```
2025-08-19T22:57:48.4695465Z 
2025-08-19T22:57:48.4695588Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T22:57:48.4695786Z 
2025-08-19T22:57:48.4695875Z <a id="api.routes.repository"></a>
2025-08-19T22:57:48.4696037Z 
2025-08-19T22:57:48.4696115Z # api.routes.repository
2025-08-19T22:57:48.4696239Z 
2025-08-19T22:57:48.4696311Z <a id="api.routes"></a>
2025-08-19T22:57:48.4696441Z 
2025-08-19T22:57:48.4696507Z # api.routes
2025-08-19T22:57:48.4696605Z 
2025-08-19T22:57:48.4696689Z <a id="api.models.fee"></a>
2025-08-19T22:57:48.4696820Z 
2025-08-19T22:57:48.4696886Z # api.models.fee
2025-08-19T22:57:48.4696993Z 
2025-08-19T22:57:48.4697245Z <a id="api.models"></a>
2025-08-19T22:57:48.4697363Z 
2025-08-19T22:57:48.4697427Z # api.models
2025-08-19T22:57:48.4697526Z 
2025-08-19T22:57:48.4697605Z <a id="api.roi_repository"></a>
2025-08-19T22:57:48.4697752Z 
2025-08-19T22:57:48.4697829Z # api.roi\_repository
2025-08-19T22:57:48.4697944Z 
2025-08-19T22:57:48.4698015Z <a id="api.main"></a>
2025-08-19T22:57:48.4698126Z 
2025-08-19T22:57:48.4698195Z # api.main
2025-08-19T22:57:48.4698286Z 
2025-08-19T22:57:48.4698362Z <a id="api.main.ready"></a>
2025-08-19T22:57:48.4698495Z 
2025-08-19T22:57:48.4698560Z #### ready
2025-08-19T22:57:48.4698647Z 
2025-08-19T22:57:48.4698710Z ```python
2025-08-19T22:57:48.4698972Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T22:57:48.4699655Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T22:57:48.4700023Z                                                                       str]
2025-08-19T22:57:48.4700258Z ```
2025-08-19T22:57:48.4700473Z 
2025-08-19T22:57:48.4700574Z Return 200 only when migrations are at head.
2025-08-19T22:57:48.4700757Z 
2025-08-19T22:57:48.4700831Z <a id="api.config"></a>
2025-08-19T22:57:48.4700952Z 
2025-08-19T22:57:48.4701026Z # api.config
2025-08-19T22:57:48.4701118Z 
2025-08-19T22:57:48.4701195Z <a id="api.security"></a>
2025-08-19T22:57:48.4701328Z 
2025-08-19T22:57:48.4701394Z # api.security
2025-08-19T22:57:48.4701493Z 
2025-08-19T22:57:48.4701559Z <a id="etl"></a>
2025-08-19T22:57:48.4701665Z 
2025-08-19T22:57:48.4701726Z # etl
2025-08-19T22:57:48.4701812Z 
2025-08-19T22:57:48.4701899Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T22:57:48.4702047Z 
2025-08-19T22:57:48.4702122Z # etl.fba\_fee\_ingestor
2025-08-19T22:57:48.4702245Z 
2025-08-19T22:57:48.4702331Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T22:57:48.4702476Z 
2025-08-19T22:57:48.4702549Z # etl.sp\_fees\_ingestor
2025-08-19T22:57:48.4702678Z 
2025-08-19T22:57:48.4702758Z <a id="etl.keepa_ingestor"></a>
2025-08-19T22:57:48.4702908Z 
2025-08-19T22:57:48.4702982Z # etl.keepa\_ingestor
2025-08-19T22:57:48.4703103Z 
2025-08-19T22:57:48.4703170Z <a id="etl.db"></a>
2025-08-19T22:57:48.4703277Z 
2025-08-19T22:57:48.4703347Z # etl.db
2025-08-19T22:57:48.4703436Z 
2025-08-19T22:57:48.4703518Z <a id="etl.dialects.schemas"></a>
2025-08-19T22:57:48.4703670Z 
2025-08-19T22:57:48.4703747Z # etl.dialects.schemas
2025-08-19T22:57:48.4703865Z 
2025-08-19T22:57:48.4703973Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T22:57:48.4704164Z 
2025-08-19T22:57:48.4704253Z # etl.dialects.amazon\_reimbursements
2025-08-19T22:57:48.4704455Z 
2025-08-19T22:57:48.4704552Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T22:57:48.4704732Z 
2025-08-19T22:57:48.4704820Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T22:57:48.4704979Z 
2025-08-19T22:57:48.4705067Z <a id="etl.dialects.test_generic"></a>
2025-08-19T22:57:48.4705232Z 
2025-08-19T22:57:48.4705313Z # etl.dialects.test\_generic
2025-08-19T22:57:48.4705452Z 
2025-08-19T22:57:48.4705559Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T22:57:48.4705729Z 
2025-08-19T22:57:48.4705810Z # etl.dialects.amazon\_returns
2025-08-19T22:57:48.4705951Z 
2025-08-19T22:57:48.4706050Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T22:57:48.4706221Z 
2025-08-19T22:57:48.4706306Z # etl.dialects.amazon\_fee\_preview
2025-08-19T22:57:48.4706464Z 
2025-08-19T22:57:48.4706569Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T22:57:48.4706754Z 
2025-08-19T22:57:48.4706850Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T22:57:48.4707017Z 
2025-08-19T22:57:48.4707110Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T22:57:48.4707285Z 
2025-08-19T22:57:48.4707372Z # etl.dialects.amazon\_settlements
2025-08-19T22:57:48.4707525Z 
2025-08-19T22:57:48.4707601Z <a id="etl.dialects"></a>
2025-08-19T22:57:48.4707733Z 
2025-08-19T22:57:48.4707799Z # etl.dialects
2025-08-19T22:57:48.4707897Z 
2025-08-19T22:57:48.4707969Z <a id="ingest"></a>
2025-08-19T22:57:48.4708076Z 
2025-08-19T22:57:48.4708257Z # ingest
2025-08-19T22:57:48.4708344Z 
2025-08-19T22:57:48.4708430Z <a id="ingest.maintenance"></a>
2025-08-19T22:57:48.4708572Z 
2025-08-19T22:57:48.4708645Z # ingest.maintenance
2025-08-19T22:57:48.4708767Z 
2025-08-19T22:57:48.4708847Z <a id="ingest.copy_loader"></a>
2025-08-19T22:57:48.4708983Z 
2025-08-19T22:57:48.4709059Z # ingest.copy\_loader
2025-08-19T22:57:48.4709174Z 
2025-08-19T22:57:48.4709273Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T22:57:48.4709644Z 
2025-08-19T22:57:48.4709726Z #### copy\_df\_via\_temp
2025-08-19T22:57:48.4709852Z 
2025-08-19T22:57:48.4709916Z ```python
2025-08-19T22:57:48.4710092Z def copy_df_via_temp(engine: Engine,
2025-08-19T22:57:48.4710334Z                      df: pd.DataFrame,
2025-08-19T22:57:48.4710568Z                      target_table: str,
2025-08-19T22:57:48.4710790Z                      *,
2025-08-19T22:57:48.4711005Z                      target_schema: Optional[str] = None,
2025-08-19T22:57:48.4711271Z                      columns: Sequence[str],
2025-08-19T22:57:48.4711669Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T22:57:48.4711956Z                      analyze_after: bool = False,
2025-08-19T22:57:48.4712220Z                      connection: Any | None = None) -> int
2025-08-19T22:57:48.4712465Z ```
2025-08-19T22:57:48.4712549Z 
2025-08-19T22:57:48.4712705Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T22:57:48.4712950Z 
2025-08-19T22:57:48.4713037Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T22:57:48.4713195Z 
2025-08-19T22:57:48.4713281Z # ingest.tests.test\_smoke
2025-08-19T22:57:48.4713410Z 
2025-08-19T22:57:48.4713486Z <a id="ingest.tests"></a>
2025-08-19T22:57:48.4713618Z 
2025-08-19T22:57:48.4713685Z # ingest.tests
2025-08-19T22:57:48.4713785Z 
2025-08-19T22:57:48.4713869Z <a id="ingest.upload_router"></a>
2025-08-19T22:57:48.4714026Z 
2025-08-19T22:57:48.4714099Z # ingest.upload\_router
2025-08-19T22:57:48.4714223Z 
2025-08-19T22:57:48.4714317Z <a id="ingest.email_watcher"></a>
2025-08-19T22:57:48.4714468Z 
2025-08-19T22:57:48.4714540Z # ingest.email\_watcher
2025-08-19T22:57:48.4714661Z 
2025-08-19T22:57:48.4714750Z <a id="ingest.email_watcher.main"></a>
2025-08-19T22:57:48.4714909Z 
2025-08-19T22:57:48.4714972Z #### main
2025-08-19T22:57:48.4715069Z 
2025-08-19T22:57:48.4715133Z ```python
2025-08-19T22:57:48.4715312Z def main() -> dict[str, str]
2025-08-19T22:57:48.4715511Z ```
2025-08-19T22:57:48.4715596Z 
2025-08-19T22:57:48.4715748Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T22:57:48.4715976Z 
2025-08-19T22:57:48.4716107Z Returns {"status": "success"} when processing completes.
2025-08-19T22:57:48.4716324Z 
2025-08-19T22:57:48.4716399Z <a id="ingest.tasks"></a>
2025-08-19T22:57:48.4716527Z 
2025-08-19T22:57:48.4716593Z # ingest.tasks
2025-08-19T22:57:48.4716716Z 
2025-08-19T22:57:48.4716820Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T22:57:48.4716996Z 
2025-08-19T22:57:48.4717069Z #### task\_import\_file
2025-08-19T22:57:48.4717202Z 
2025-08-19T22:57:48.4717271Z ```python
2025-08-19T22:57:48.4717478Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T22:57:48.4717761Z def task_import_file(self: Any,
2025-08-19T22:57:48.4717976Z                      uri: str,
2025-08-19T22:57:48.4718204Z                      report_type: str | None = None,
2025-08-19T22:57:48.4718476Z                      force: bool = False) -> dict[str, Any]
2025-08-19T22:57:48.4718713Z ```
2025-08-19T22:57:48.4718796Z 
2025-08-19T22:57:48.4718932Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T22:57:48.4719142Z 
2025-08-19T22:57:48.4719223Z <a id="ingest.celery_app"></a>
2025-08-19T22:57:48.4719588Z 
2025-08-19T22:57:48.4719690Z # ingest.celery\_app
2025-08-19T22:57:48.4719814Z 
2025-08-19T22:57:48.4719899Z <a id="ingest.ingest_router"></a>
2025-08-19T22:57:48.4720058Z 
2025-08-19T22:57:48.4720132Z # ingest.ingest\_router
2025-08-19T22:57:48.4720253Z 
2025-08-19T22:57:48.4720334Z <a id="logistics_etl"></a>
2025-08-19T22:57:48.4720594Z 
2025-08-19T22:57:48.4720662Z # logistics\_etl
2025-08-19T22:57:48.4720774Z 
2025-08-19T22:57:48.4720852Z Daily logistics ETL job.
2025-08-19T22:57:48.4720977Z 
2025-08-19T22:57:48.4721060Z <a id="logistics_etl.__main__"></a>
2025-08-19T22:57:48.4721218Z 
2025-08-19T22:57:48.4721296Z # logistics\_etl.\_\_main\_\_
2025-08-19T22:57:48.4721436Z 
2025-08-19T22:57:48.4721521Z <a id="logistics_etl.dsn"></a>
2025-08-19T22:57:48.4721658Z 
2025-08-19T22:57:48.4721728Z # logistics\_etl.dsn
2025-08-19T22:57:48.4721847Z 
2025-08-19T22:57:48.4721962Z Local DSN builder to avoid cross-service dependency.
2025-08-19T22:57:48.4722163Z 
2025-08-19T22:57:48.4722253Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T22:57:48.4722425Z 
2025-08-19T22:57:48.4722492Z #### build\_dsn
2025-08-19T22:57:48.4722595Z 
2025-08-19T22:57:48.4722664Z ```python
2025-08-19T22:57:48.4722836Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:57:48.4723061Z ```
2025-08-19T22:57:48.4723144Z 
2025-08-19T22:57:48.4723400Z Return a Postgres DSN assembled from environment variables.
2025-08-19T22:57:48.4723627Z 
2025-08-19T22:57:48.4723777Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T22:57:48.4724170Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T22:57:48.4724519Z error when any required variable is missing.
2025-08-19T22:57:48.4724695Z 
2025-08-19T22:57:48.4724795Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T22:57:48.4724964Z 
2025-08-19T22:57:48.4725046Z # logistics\_etl.tests.conftest
2025-08-19T22:57:48.4725198Z 
2025-08-19T22:57:48.4725306Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T22:57:48.4725494Z 
2025-08-19T22:57:48.4725583Z # logistics\_etl.tests.test\_repository
2025-08-19T22:57:48.4725753Z 
2025-08-19T22:57:48.4725846Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T22:57:48.4726014Z 
2025-08-19T22:57:48.4726104Z # logistics\_etl.tests.test\_cron
2025-08-19T22:57:48.4726254Z 
2025-08-19T22:57:48.4726350Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T22:57:48.4726540Z 
2025-08-19T22:57:48.4726625Z # logistics\_etl.tests.test\_imports
2025-08-19T22:57:48.4726782Z 
2025-08-19T22:57:48.4726875Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T22:57:48.4727051Z 
2025-08-19T22:57:48.4727134Z # logistics\_etl.tests.test\_smoke
2025-08-19T22:57:48.4727285Z 
2025-08-19T22:57:48.4727386Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T22:57:48.4727555Z 
2025-08-19T22:57:48.4727637Z # logistics\_etl.tests.test\_client
2025-08-19T22:57:48.4727797Z 
2025-08-19T22:57:48.4727879Z <a id="logistics_etl.tests"></a>
2025-08-19T22:57:48.4728024Z 
2025-08-19T22:57:48.4728097Z # logistics\_etl.tests
2025-08-19T22:57:48.4728220Z 
2025-08-19T22:57:48.4728300Z <a id="logistics_etl.flow"></a>
2025-08-19T22:57:48.4728437Z 
2025-08-19T22:57:48.4728514Z # logistics\_etl.flow
2025-08-19T22:57:48.4728630Z 
2025-08-19T22:57:48.4728714Z <a id="logistics_etl.client"></a>
2025-08-19T22:57:48.4728866Z 
2025-08-19T22:57:48.4803876Z # logistics\_etl.client
2025-08-19T22:57:48.4804203Z 
2025-08-19T22:57:48.4804381Z <a id="logistics_etl.cron"></a>
2025-08-19T22:57:48.4804709Z 
2025-08-19T22:57:48.4804860Z # logistics\_etl.cron
2025-08-19T22:57:48.4805115Z 
2025-08-19T22:57:48.4805302Z <a id="logistics_etl.db"></a>
2025-08-19T22:57:48.4805590Z 
2025-08-19T22:57:48.4805733Z # logistics\_etl.db
2025-08-19T22:57:48.4805967Z 
2025-08-19T22:57:48.4806151Z <a id="logistics_etl.repository"></a>
2025-08-19T22:57:48.4806451Z 
2025-08-19T22:57:48.4806568Z # logistics\_etl.repository
2025-08-19T22:57:48.4806740Z 
2025-08-19T22:57:48.4806830Z <a id="alert_bot"></a>
2025-08-19T22:57:48.4806985Z 
2025-08-19T22:57:48.4807146Z # alert\_bot
2025-08-19T22:57:48.4807272Z 
2025-08-19T22:57:48.4807389Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T22:57:48.4807616Z 
2025-08-19T22:57:48.4807718Z # alert\_bot.tests.test\_smoke
2025-08-19T22:57:48.4807895Z 
2025-08-19T22:57:48.4807998Z <a id="alert_bot.tests"></a>
2025-08-19T22:57:48.4808167Z 
2025-08-19T22:57:48.4808481Z # alert\_bot.tests
2025-08-19T22:57:48.4808623Z 
2025-08-19T22:57:48.4808726Z <a id="alert_bot.alert_bot"></a>
2025-08-19T22:57:48.4808906Z 
2025-08-19T22:57:48.4808996Z # alert\_bot.alert\_bot
2025-08-19T22:57:48.4809149Z 
2025-08-19T22:57:48.4809243Z <a id="alert_bot.rules"></a>
2025-08-19T22:57:48.4809616Z 
2025-08-19T22:57:48.4809704Z # alert\_bot.rules
2025-08-19T22:57:48.4809835Z 
2025-08-19T22:57:48.4809919Z <a id="common"></a>
2025-08-19T22:57:48.4810049Z 
2025-08-19T22:57:48.4810133Z # common
2025-08-19T22:57:48.4810243Z 
2025-08-19T22:57:48.4810331Z <a id="common.dsn"></a>
2025-08-19T22:57:48.4810482Z 
2025-08-19T22:57:48.4810560Z # common.dsn
2025-08-19T22:57:48.4810677Z 
2025-08-19T22:57:48.4810785Z <a id="common.dsn.build_dsn"></a>
2025-08-19T22:57:48.4810975Z 
2025-08-19T22:57:48.4811058Z #### build\_dsn
2025-08-19T22:57:48.4811190Z 
2025-08-19T22:57:48.4811277Z ```python
2025-08-19T22:57:48.4811502Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:57:48.4811794Z ```
2025-08-19T22:57:48.4812054Z 
2025-08-19T22:57:48.4812212Z Return a Postgres DSN, validating required variables.
2025-08-19T22:57:48.4812476Z 
2025-08-19T22:57:48.4812716Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T22:57:48.4813269Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T22:57:48.4813779Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T22:57:48.4814169Z missing.
2025-08-19T22:57:48.4814278Z 
2025-08-19T22:57:48.4814382Z <a id="common.models_vendor"></a>
2025-08-19T22:57:48.4814575Z 
2025-08-19T22:57:48.4814667Z # common.models\_vendor
2025-08-19T22:57:48.4814814Z 
2025-08-19T22:57:48.4814922Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T22:57:48.4815141Z 
2025-08-19T22:57:48.4815224Z ## Vendor Objects
2025-08-19T22:57:48.4815354Z 
2025-08-19T22:57:48.4815438Z ```python
2025-08-19T22:57:48.4815627Z class Vendor(Base)
2025-08-19T22:57:48.4815836Z ```
2025-08-19T22:57:48.4815943Z 
2025-08-19T22:57:48.4816045Z Vendor of inventory items.
2025-08-19T22:57:48.4816215Z 
2025-08-19T22:57:48.4816344Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T22:57:48.4816588Z 
2025-08-19T22:57:48.4816690Z ## VendorPrice Objects
2025-08-19T22:57:48.4816815Z 
2025-08-19T22:57:48.4816879Z ```python
2025-08-19T22:57:48.4817047Z class VendorPrice(Base)
2025-08-19T22:57:48.4817223Z ```
2025-08-19T22:57:48.4817303Z 
2025-08-19T22:57:48.4817414Z Association table linking vendors to pricing.
2025-08-19T22:57:48.4817594Z 
2025-08-19T22:57:48.4817670Z <a id="common.db_url"></a>
2025-08-19T22:57:48.4817802Z 
2025-08-19T22:57:48.4817869Z # common.db\_url
2025-08-19T22:57:48.4817973Z 
2025-08-19T22:57:48.4818063Z <a id="common.db_url.build_url"></a>
2025-08-19T22:57:48.4818219Z 
2025-08-19T22:57:48.4818284Z #### build\_url
2025-08-19T22:57:48.4818383Z 
2025-08-19T22:57:48.4818451Z ```python
2025-08-19T22:57:48.4818630Z def build_url(async_: bool = True) -> str
2025-08-19T22:57:48.4818866Z ```
2025-08-19T22:57:48.4818959Z 
2025-08-19T22:57:48.4819058Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:57:48.4819242Z 
2025-08-19T22:57:48.4819426Z <a id="common.keepa"></a>
2025-08-19T22:57:48.4819562Z 
2025-08-19T22:57:48.4819637Z # common.keepa
2025-08-19T22:57:48.4819739Z 
2025-08-19T22:57:48.4819816Z <a id="common.llm"></a>
2025-08-19T22:57:48.4819935Z 
2025-08-19T22:57:48.4820007Z # common.llm
2025-08-19T22:57:48.4820102Z 
2025-08-19T22:57:48.4820182Z <a id="common.settings"></a>
2025-08-19T22:57:48.4820325Z 
2025-08-19T22:57:48.4820392Z # common.settings
2025-08-19T22:57:48.4820499Z 
2025-08-19T22:57:48.4820574Z <a id="common.db"></a>
2025-08-19T22:57:48.4820692Z 
2025-08-19T22:57:48.4820754Z # common.db
2025-08-19T22:57:48.4820845Z 
2025-08-19T22:57:48.4820944Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T22:57:48.4821114Z 
2025-08-19T22:57:48.4821190Z #### build\_sqlalchemy\_url
2025-08-19T22:57:48.4821328Z 
2025-08-19T22:57:48.4821391Z ```python
2025-08-19T22:57:48.4821560Z def build_sqlalchemy_url() -> str
2025-08-19T22:57:48.4821902Z ```
2025-08-19T22:57:48.4821985Z 
2025-08-19T22:57:48.4822087Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:57:48.4822256Z 
2025-08-19T22:57:48.4822346Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T22:57:48.4822513Z 
2025-08-19T22:57:48.4822595Z #### build\_asyncpg\_dsn
2025-08-19T22:57:48.4822719Z 
2025-08-19T22:57:48.4822781Z ```python
2025-08-19T22:57:48.4822953Z def build_asyncpg_dsn() -> str
2025-08-19T22:57:48.4823148Z ```
2025-08-19T22:57:48.4823233Z 
2025-08-19T22:57:48.4823359Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:57:48.4823574Z 
2025-08-19T22:57:48.4823664Z <a id="common.db.refresh_mvs"></a>
2025-08-19T22:57:48.4823820Z 
2025-08-19T22:57:48.4823886Z #### refresh\_mvs
2025-08-19T22:57:48.4823996Z 
2025-08-19T22:57:48.4824060Z ```python
2025-08-19T22:57:48.4824254Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:57:48.4824507Z ```
2025-08-19T22:57:48.4824588Z 
2025-08-19T22:57:48.4824837Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:57:48.4825067Z 
2025-08-19T22:57:48.4825144Z <a id="common.config"></a>
2025-08-19T22:57:48.4825275Z 
2025-08-19T22:57:48.4825348Z # common.config
2025-08-19T22:57:48.4825451Z 
2025-08-19T22:57:48.4825524Z <a id="common.base"></a>
2025-08-19T22:57:48.4825653Z 
2025-08-19T22:57:48.4825718Z # common.base
2025-08-19T22:57:48.4825816Z 
2025-08-19T22:57:48.4825896Z <a id="common.base.Base"></a>
2025-08-19T22:57:48.4826044Z 
2025-08-19T22:57:48.4826108Z ## Base Objects
2025-08-19T22:57:48.4826205Z 
2025-08-19T22:57:48.4826272Z ```python
2025-08-19T22:57:48.4826438Z class Base(DeclarativeBase)
2025-08-19T22:57:48.4826638Z ```
2025-08-19T22:57:48.4826718Z 
2025-08-19T22:57:48.4826801Z Base class for SQLAlchemy models.
2025-08-19T22:57:48.4826956Z 
2025-08-19T22:57:48.4827029Z <a id="repricer"></a>
2025-08-19T22:57:48.4827147Z 
2025-08-19T22:57:48.4827212Z # repricer
2025-08-19T22:57:48.4827308Z 
2025-08-19T22:57:48.4827393Z <a id="repricer.app.schemas"></a>
2025-08-19T22:57:48.4827555Z 
2025-08-19T22:57:48.4827639Z # repricer.app.schemas
2025-08-19T22:57:48.4827763Z 
2025-08-19T22:57:48.4827848Z <a id="repricer.app.deps"></a>
2025-08-19T22:57:48.4827996Z 
2025-08-19T22:57:48.4828071Z # repricer.app.deps
2025-08-19T22:57:48.4828184Z 
2025-08-19T22:57:48.4828299Z Placeholder module for Keepa / SP-API clients.
2025-08-19T22:57:48.4828492Z 
2025-08-19T22:57:48.4828577Z <a id="repricer.app.logic"></a>
2025-08-19T22:57:48.4828720Z 
2025-08-19T22:57:48.4828799Z # repricer.app.logic
2025-08-19T22:57:48.4828916Z 
2025-08-19T22:57:48.4829014Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T22:57:48.4829190Z 
2025-08-19T22:57:48.4829260Z #### MIN\_MARGIN
2025-08-19T22:57:48.4829462Z 
2025-08-19T22:57:48.4829525Z 15 % ROI
2025-08-19T22:57:48.4829618Z 
2025-08-19T22:57:48.4829719Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T22:57:48.4829902Z 
2025-08-19T22:57:48.4829978Z #### compute\_price
2025-08-19T22:57:48.4830085Z 
2025-08-19T22:57:48.4830159Z ```python
2025-08-19T22:57:48.4830415Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T22:57:48.4830715Z ```
2025-08-19T22:57:48.4830804Z 
2025-08-19T22:57:48.4830910Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T22:57:48.4831189Z Replace with real competitive logic later.
2025-08-19T22:57:48.4831371Z 
2025-08-19T22:57:48.4831457Z <a id="repricer.app.main"></a>
2025-08-19T22:57:48.4831599Z 
2025-08-19T22:57:48.4831677Z # repricer.app.main
2025-08-19T22:57:48.4831786Z 
2025-08-19T22:57:48.4831864Z <a id="repricer.app"></a>
2025-08-19T22:57:48.4831993Z 
2025-08-19T22:57:48.4832071Z # repricer.app
2025-08-19T22:57:48.4832173Z 
2025-08-19T22:57:48.4832262Z <a id="repricer.tests.test_imports"></a>
2025-08-19T22:57:48.4832436Z 
2025-08-19T22:57:48.4832517Z # repricer.tests.test\_imports
2025-08-19T22:57:48.4832654Z 
2025-08-19T22:57:48.4832747Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T22:57:48.4832911Z 
2025-08-19T22:57:48.4832994Z # repricer.tests.test\_smoke
2025-08-19T22:57:48.4833267Z 
2025-08-19T22:57:48.4833352Z <a id="repricer.tests"></a>
2025-08-19T22:57:48.4833487Z 
2025-08-19T22:57:48.4833557Z # repricer.tests
2025-08-19T22:57:48.4833666Z 
2025-08-19T22:57:48.4833731Z <a id="db"></a>
2025-08-19T22:57:48.4833828Z 
2025-08-19T22:57:48.4833887Z # db
2025-08-19T22:57:48.4833974Z 
2025-08-19T22:57:48.4834050Z <a id="db.utils.views"></a>
2025-08-19T22:57:48.4834177Z 
2025-08-19T22:57:48.4834248Z # db.utils.views
2025-08-19T22:57:48.4834347Z 
2025-08-19T22:57:48.4834440Z <a id="db.utils.views.replace_view"></a>
2025-08-19T22:57:48.4834613Z 
2025-08-19T22:57:48.4834681Z #### replace\_view
2025-08-19T22:57:48.4834786Z 
2025-08-19T22:57:48.4834848Z ```python
2025-08-19T22:57:48.4835049Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T22:57:48.4835297Z ```
2025-08-19T22:57:48.4835378Z 
2025-08-19T22:57:48.4835466Z Drop and recreate a SQL view atomically.
2025-08-19T22:57:48.4835631Z 
2025-08-19T22:57:48.4835706Z <a id="db.utils"></a>
2025-08-19T22:57:48.4835991Z 
2025-08-19T22:57:48.4836054Z # db.utils
2025-08-19T22:57:48.4836150Z 
2025-08-19T22:57:48.4836229Z <a id="price_importer"></a>
2025-08-19T22:57:48.4836358Z 
2025-08-19T22:57:48.4836427Z # price\_importer
2025-08-19T22:57:48.4836539Z 
2025-08-19T22:57:48.4836643Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T22:57:48.4836834Z 
2025-08-19T22:57:48.4836929Z # price\_importer.services\_common.dsn
2025-08-19T22:57:48.4837093Z 
2025-08-19T22:57:48.4837217Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T22:57:48.4837430Z 
2025-08-19T22:57:48.4837495Z #### build\_dsn
2025-08-19T22:57:48.4837596Z 
2025-08-19T22:57:48.4837659Z ```python
2025-08-19T22:57:48.4837837Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:57:48.4838064Z ```
2025-08-19T22:57:48.4838148Z 
2025-08-19T22:57:48.4838215Z Return safe DSN.
2025-08-19T22:57:48.4838319Z 
2025-08-19T22:57:48.4838666Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T22:57:48.4838870Z 
2025-08-19T22:57:48.4839012Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T22:57:48.4839225Z 
2025-08-19T22:57:48.4839430Z # price\_importer.services\_common.models\_vendor
2025-08-19T22:57:48.4839622Z 
2025-08-19T22:57:48.4839734Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T22:57:48.4839922Z 
2025-08-19T22:57:48.4840016Z # price\_importer.services\_common.db\_url
2025-08-19T22:57:48.4840187Z 
2025-08-19T22:57:48.4840326Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T22:57:48.4840538Z 
2025-08-19T22:57:48.4840605Z #### build\_url
2025-08-19T22:57:48.4840711Z 
2025-08-19T22:57:48.4840773Z ```python
2025-08-19T22:57:48.4840945Z def build_url(async_: bool = True) -> str
2025-08-19T22:57:48.4841174Z ```
2025-08-19T22:57:48.4841254Z 
2025-08-19T22:57:48.4841356Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:57:48.4841529Z 
2025-08-19T22:57:48.4841633Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T22:57:48.4841822Z 
2025-08-19T22:57:48.4841927Z # price\_importer.services\_common.keepa
2025-08-19T22:57:48.4842095Z 
2025-08-19T22:57:48.4842195Z <a id="price_importer.services_common.llm"></a>
2025-08-19T22:57:48.4842382Z 
2025-08-19T22:57:48.4842470Z # price\_importer.services\_common.llm
2025-08-19T22:57:48.4842633Z 
2025-08-19T22:57:48.4842754Z <a id="price_importer.services_common.settings"></a>
2025-08-19T22:57:48.4842950Z 
2025-08-19T22:57:48.4843045Z # price\_importer.services\_common.settings
2025-08-19T22:57:48.4843223Z 
2025-08-19T22:57:48.4843322Z <a id="price_importer.services_common.db"></a>
2025-08-19T22:57:48.4843500Z 
2025-08-19T22:57:48.4843589Z # price\_importer.services\_common.db
2025-08-19T22:57:48.4843756Z 
2025-08-19T22:57:48.4843910Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T22:57:48.4844151Z 
2025-08-19T22:57:48.4844239Z #### build\_sqlalchemy\_url
2025-08-19T22:57:48.4844371Z 
2025-08-19T22:57:48.4844435Z ```python
2025-08-19T22:57:48.4844611Z def build_sqlalchemy_url() -> str
2025-08-19T22:57:48.4844943Z ```
2025-08-19T22:57:48.4845029Z 
2025-08-19T22:57:48.4845123Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:57:48.4845293Z 
2025-08-19T22:57:48.4845443Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T22:57:48.4845669Z 
2025-08-19T22:57:48.4845743Z #### build\_asyncpg\_dsn
2025-08-19T22:57:48.4845869Z 
2025-08-19T22:57:48.4845938Z ```python
2025-08-19T22:57:48.4846103Z def build_asyncpg_dsn() -> str
2025-08-19T22:57:48.4846305Z ```
2025-08-19T22:57:48.4846388Z 
2025-08-19T22:57:48.4846512Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:57:48.4846726Z 
2025-08-19T22:57:48.4846854Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T22:57:48.4847060Z 
2025-08-19T22:57:48.4847132Z #### refresh\_mvs
2025-08-19T22:57:48.4847235Z 
2025-08-19T22:57:48.4847297Z ```python
2025-08-19T22:57:48.4847492Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:57:48.4847736Z ```
2025-08-19T22:57:48.4847935Z 
2025-08-19T22:57:48.4848077Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:57:48.4848292Z 
2025-08-19T22:57:48.4848384Z <a id="price_importer.services_common"></a>
2025-08-19T22:57:48.4848565Z 
2025-08-19T22:57:48.4848652Z # price\_importer.services\_common
2025-08-19T22:57:48.4848807Z 
2025-08-19T22:57:48.4848914Z <a id="price_importer.services_common.base"></a>
2025-08-19T22:57:48.4849096Z 
2025-08-19T22:57:48.4849185Z # price\_importer.services\_common.base
2025-08-19T22:57:48.4849473Z 
2025-08-19T22:57:48.4849563Z <a id="price_importer.normaliser"></a>
2025-08-19T22:57:48.4849727Z 
2025-08-19T22:57:48.4849809Z # price\_importer.normaliser
2025-08-19T22:57:48.4849954Z 
2025-08-19T22:57:48.4850059Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T22:57:48.4850242Z 
2025-08-19T22:57:48.4850336Z # price\_importer.common.models\_vendor
2025-08-19T22:57:48.4850498Z 
2025-08-19T22:57:48.4850589Z <a id="price_importer.common.db_url"></a>
2025-08-19T22:57:48.4850763Z 
2025-08-19T22:57:48.4850858Z # price\_importer.common.db\_url
2025-08-19T22:57:48.4851007Z 
2025-08-19T22:57:48.4851112Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T22:57:48.4851304Z 
2025-08-19T22:57:48.4851369Z #### make\_dsn
2025-08-19T22:57:48.4851468Z 
2025-08-19T22:57:48.4851535Z ```python
2025-08-19T22:57:48.4851706Z def make_dsn(async_: bool = False) -> str
2025-08-19T22:57:48.4851932Z ```
2025-08-19T22:57:48.4852015Z 
2025-08-19T22:57:48.4852133Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T22:57:48.4852337Z 
2025-08-19T22:57:48.4852445Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T22:57:48.4852633Z 
2025-08-19T22:57:48.4852704Z #### build\_url
2025-08-19T22:57:48.4852803Z 
2025-08-19T22:57:48.4852866Z ```python
2025-08-19T22:57:48.4853045Z def build_url(async_: bool = False) -> str
2025-08-19T22:57:48.4853267Z ```
2025-08-19T22:57:48.4853352Z 
2025-08-19T22:57:48.4853471Z Return Postgres DSN built from environment variables.
2025-08-19T22:57:48.4853680Z 
2025-08-19T22:57:48.4853765Z <a id="price_importer.common"></a>
2025-08-19T22:57:48.4853924Z 
2025-08-19T22:57:48.4854008Z # price\_importer.common
2025-08-19T22:57:48.4854140Z 
2025-08-19T22:57:48.4854241Z <a id="price_importer.common.base"></a>
2025-08-19T22:57:48.4854402Z 
2025-08-19T22:57:48.4854485Z # price\_importer.common.base
2025-08-19T22:57:48.4854633Z 
2025-08-19T22:57:48.4854729Z <a id="price_importer.tests.conftest"></a>
2025-08-19T22:57:48.4854900Z 
2025-08-19T22:57:48.4854984Z # price\_importer.tests.conftest
2025-08-19T22:57:48.4855135Z 
2025-08-19T22:57:48.4855236Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T22:57:48.4855414Z 
2025-08-19T22:57:48.4855512Z # price\_importer.tests.test\_reader
2025-08-19T22:57:48.4855671Z 
2025-08-19T22:57:48.4855771Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T22:57:48.4855986Z 
2025-08-19T22:57:48.4856075Z # price\_importer.tests.test\_imports
2025-08-19T22:57:48.4856236Z 
2025-08-19T22:57:48.4856335Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T22:57:48.4856635Z 
2025-08-19T22:57:48.4856720Z # price\_importer.tests.test\_smoke
2025-08-19T22:57:48.4856878Z 
2025-08-19T22:57:48.4856989Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T22:57:48.4857174Z 
2025-08-19T22:57:48.4857265Z # price\_importer.tests.test\_normaliser
2025-08-19T22:57:48.4857442Z 
2025-08-19T22:57:48.4857524Z <a id="price_importer.tests"></a>
2025-08-19T22:57:48.4857675Z 
2025-08-19T22:57:48.4857750Z # price\_importer.tests
2025-08-19T22:57:48.4857879Z 
2025-08-19T22:57:48.4857963Z <a id="price_importer.reader"></a>
2025-08-19T22:57:48.4858112Z 
2025-08-19T22:57:48.4858193Z # price\_importer.reader
2025-08-19T22:57:48.4858317Z 
2025-08-19T22:57:48.4858406Z <a id="price_importer.repository"></a>
2025-08-19T22:57:48.4858573Z 
2025-08-19T22:57:48.4858653Z # price\_importer.repository
2025-08-19T22:57:48.4858791Z 
2025-08-19T22:57:48.4858874Z <a id="price_importer.import"></a>
2025-08-19T22:57:48.4859027Z 
2025-08-19T22:57:48.4859103Z # price\_importer.import
2025-08-19T22:57:48.4859437Z 
2025-08-19T22:57:48.4859516Z <a id="fees_h10"></a>
2025-08-19T22:57:48.4859630Z 
2025-08-19T22:57:48.4859694Z # fees\_h10
2025-08-19T22:57:48.4859788Z 
2025-08-19T22:57:48.4859863Z <a id="fees_h10.worker"></a>
2025-08-19T22:57:48.4859993Z 
2025-08-19T22:57:48.4860060Z # fees\_h10.worker
2025-08-19T22:57:48.4860171Z 
2025-08-19T22:57:48.4860266Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T22:57:48.4860441Z 
2025-08-19T22:57:48.4860520Z #### list\_active\_asins
2025-08-19T22:57:48.4860642Z 
2025-08-19T22:57:48.4860705Z ```python
2025-08-19T22:57:48.4860882Z def list_active_asins() -> list[str]
2025-08-19T22:57:48.4861093Z ```
2025-08-19T22:57:48.4861184Z 
2025-08-19T22:57:48.4861295Z Return known ASINs or an empty list if unavailable.
2025-08-19T22:57:48.4861491Z 
2025-08-19T22:57:48.4861576Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T22:57:48.4861742Z 
2025-08-19T22:57:48.4861821Z # fees\_h10.tests.test\_smoke
2025-08-19T22:57:48.4861957Z 
2025-08-19T22:57:48.4862048Z <a id="fees_h10.tests"></a>
2025-08-19T22:57:48.4862179Z 
2025-08-19T22:57:48.4862245Z # fees\_h10.tests
2025-08-19T22:57:48.4862355Z 
2025-08-19T22:57:48.4862431Z <a id="fees_h10.client"></a>
2025-08-19T22:57:48.4862561Z 
2025-08-19T22:57:48.4862626Z # fees\_h10.client
2025-08-19T22:57:48.4862736Z 
2025-08-19T22:57:48.4862816Z <a id="fees_h10.repository"></a>
2025-08-19T22:57:48.4862959Z 
2025-08-19T22:57:48.4863037Z # fees\_h10.repository
2025-08-19T22:57:48.4863155Z 
2025-08-19T22:57:48.4863257Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T22:57:48.4863445Z 
2025-08-19T22:57:48.4863517Z #### upsert\_fees\_raw
2025-08-19T22:57:48.4863632Z 
2025-08-19T22:57:48.4863696Z ```python
2025-08-19T22:57:48.4863865Z def upsert_fees_raw(engine: Engine,
2025-08-19T22:57:48.4864109Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T22:57:48.4864356Z                     *,
2025-08-19T22:57:48.4864583Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T22:57:48.4864853Z ```
2025-08-19T22:57:48.4864934Z 
2025-08-19T22:57:48.4865019Z Idempotent upsert for fees.
2025-08-19T22:57:48.4865153Z 
2025-08-19T22:57:48.4865304Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T22:57:48.4865647Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T22:57:48.4865953Z Only updates when one of the mutable fields changes.
2025-08-19T22:57:48.4866155Z 
2025-08-19T22:57:48.4866227Z <a id="emailer"></a>
2025-08-19T22:57:48.4866338Z 
2025-08-19T22:57:48.4866408Z # emailer
2025-08-19T22:57:48.4866495Z 
2025-08-19T22:57:48.4866598Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T22:57:48.4866784Z 
2025-08-19T22:57:48.4866872Z # emailer.tests.test\_import\_emailer
2025-08-19T22:57:48.4867035Z 
2025-08-19T22:57:48.4867122Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T22:57:48.4867284Z 
2025-08-19T22:57:48.4867364Z # emailer.tests.test\_smoke
2025-08-19T22:57:48.4867499Z 
2025-08-19T22:57:48.4867614Z <a id="emailer.tests"></a>
2025-08-19T22:57:48.4867877Z 
2025-08-19T22:57:48.4867947Z # emailer.tests
2025-08-19T22:57:48.4868060Z 
2025-08-19T22:57:48.4868144Z <a id="emailer.generate_body"></a>
2025-08-19T22:57:48.4868299Z 
2025-08-19T22:57:48.4868374Z # emailer.generate\_body
2025-08-19T22:57:48.4868506Z 
2025-08-19T22:57:48.4868577Z <a id="llm_server"></a>
2025-08-19T22:57:48.4868695Z 
2025-08-19T22:57:48.4868768Z # llm\_server
2025-08-19T22:57:48.4868869Z 
2025-08-19T22:57:48.4868946Z <a id="llm_server.app"></a>
2025-08-19T22:57:48.4869077Z 
2025-08-19T22:57:48.4869151Z # llm\_server.app
2025-08-19T22:57:48.4869255Z 
