2025-08-20T01:03:48.2656103Z ##[group]Run pydoc-markdown
2025-08-20T01:03:48.2656404Z [36;1mpydoc-markdown[0m
2025-08-20T01:03:48.2696760Z shell: /usr/bin/bash -e {0}
2025-08-20T01:03:48.2696981Z env:
2025-08-20T01:03:48.2697220Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:03:48.2697607Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T01:03:48.2697986Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:03:48.2698320Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:03:48.2698652Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:03:48.2698982Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T01:03:48.2699254Z ##[endgroup]
2025-08-20T01:03:48.6172552Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T01:03:48.6173762Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T01:03:48.6174314Z In "pydoc-markdown.yml"
2025-08-20T01:03:48.6174803Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T01:03:48.6175627Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T01:03:48.6176351Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T01:03:48.6176800Z 
2025-08-20T01:03:48.9913989Z <a id="__init__"></a>
2025-08-20T01:03:48.9914439Z 
2025-08-20T01:03:48.9914581Z # \_\_init\_\_
2025-08-20T01:03:48.9914816Z 
2025-08-20T01:03:48.9914968Z <a id="api"></a>
2025-08-20T01:03:48.9915195Z 
2025-08-20T01:03:48.9915326Z # api
2025-08-20T01:03:48.9915515Z 
2025-08-20T01:03:48.9915681Z <a id="api.errors"></a>
2025-08-20T01:03:48.9915952Z 
2025-08-20T01:03:48.9916101Z # api.errors
2025-08-20T01:03:48.9916325Z 
2025-08-20T01:03:48.9916500Z <a id="api.sentry_config"></a>
2025-08-20T01:03:48.9916800Z 
2025-08-20T01:03:48.9916958Z # api.sentry\_config
2025-08-20T01:03:48.9917200Z 
2025-08-20T01:03:48.9917403Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T01:03:48.9917786Z 
2025-08-20T01:03:48.9917957Z # api.tests.test\_stats\_contracts
2025-08-20T01:03:48.9918328Z 
2025-08-20T01:03:48.9918518Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T01:03:48.9918885Z 
2025-08-20T01:03:48.9919053Z # api.tests.test\_sentry\_scrub
2025-08-20T01:03:48.9919354Z 
2025-08-20T01:03:48.9919552Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T01:03:48.9919918Z 
2025-08-20T01:03:48.9920089Z # api.tests.test\_roi\_basic\_auth
2025-08-20T01:03:48.9920411Z 
2025-08-20T01:03:48.9920592Z <a id="api.tests.test_errors_json"></a>
2025-08-20T01:03:48.9920935Z 
2025-08-20T01:03:48.9921099Z # api.tests.test\_errors\_json
2025-08-20T01:03:48.9921661Z 
2025-08-20T01:03:48.9921828Z <a id="api.tests.test_llm"></a>
2025-08-20T01:03:48.9922126Z 
2025-08-20T01:03:48.9922298Z # api.tests.test\_llm
2025-08-20T01:03:48.9922485Z 
2025-08-20T01:03:48.9922593Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T01:03:48.9922815Z 
2025-08-20T01:03:48.9922917Z # api.tests.test\_roi\_filters
2025-08-20T01:03:48.9923088Z 
2025-08-20T01:03:48.9923215Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T01:03:48.9923817Z 
2025-08-20T01:03:48.9923912Z # api.tests.test\_sentry\_event
2025-08-20T01:03:48.9924080Z 
2025-08-20T01:03:48.9924237Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T01:03:48.9924498Z 
2025-08-20T01:03:48.9924597Z ## DummyTransport Objects
2025-08-20T01:03:48.9924759Z 
2025-08-20T01:03:48.9924837Z ```python
2025-08-20T01:03:48.9925035Z class DummyTransport()
2025-08-20T01:03:48.9925257Z ```
2025-08-20T01:03:48.9925356Z 
2025-08-20T01:03:48.9925565Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T01:03:48.9925892Z 
2025-08-20T01:03:48.9925977Z #### capture\_envelope
2025-08-20T01:03:48.9926117Z 
2025-08-20T01:03:48.9926198Z ```python
2025-08-20T01:03:48.9926402Z def capture_envelope(envelope)
2025-08-20T01:03:48.9926648Z ```
2025-08-20T01:03:48.9926745Z 
2025-08-20T01:03:48.9926892Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T01:03:48.9927150Z 
2025-08-20T01:03:48.9927248Z <a id="api.tests.test_cors"></a>
2025-08-20T01:03:48.9927659Z 
2025-08-20T01:03:48.9927755Z # api.tests.test\_cors
2025-08-20T01:03:48.9927897Z 
2025-08-20T01:03:48.9927997Z <a id="api.tests.test_imports"></a>
2025-08-20T01:03:48.9928188Z 
2025-08-20T01:03:48.9928291Z # api.tests.test\_imports
2025-08-20T01:03:48.9928448Z 
2025-08-20T01:03:48.9928554Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T01:03:48.9928758Z 
2025-08-20T01:03:48.9928853Z # api.tests.test\_rate\_limit
2025-08-20T01:03:48.9929021Z 
2025-08-20T01:03:48.9929141Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T01:03:48.9929353Z 
2025-08-20T01:03:48.9929429Z #### app
2025-08-20T01:03:48.9929532Z 
2025-08-20T01:03:48.9929619Z noqa: E402
2025-08-20T01:03:48.9929724Z 
2025-08-20T01:03:48.9929825Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T01:03:48.9930024Z 
2025-08-20T01:03:48.9930118Z # api.tests.test\_stats\_sql
2025-08-20T01:03:48.9930281Z 
2025-08-20T01:03:48.9930383Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T01:03:48.9930597Z 
2025-08-20T01:03:48.9930694Z # api.tests.test\_entrypoint
2025-08-20T01:03:48.9930857Z 
2025-08-20T01:03:48.9930995Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T01:03:48.9931458Z 
2025-08-20T01:03:48.9931570Z # api.tests.test\_stats\_future\_contracts
2025-08-20T01:03:48.9931785Z 
2025-08-20T01:03:48.9931885Z <a id="api.tests.test_health"></a>
2025-08-20T01:03:48.9932070Z 
2025-08-20T01:03:48.9932160Z # api.tests.test\_health
2025-08-20T01:03:48.9932314Z 
2025-08-20T01:03:48.9932410Z <a id="api.tests.test_score"></a>
2025-08-20T01:03:48.9932589Z 
2025-08-20T01:03:48.9932681Z # api.tests.test\_score
2025-08-20T01:03:48.9932825Z 
2025-08-20T01:03:48.9932922Z <a id="api.logging_config"></a>
2025-08-20T01:03:48.9933099Z 
2025-08-20T01:03:48.9933182Z # api.logging\_config
2025-08-20T01:03:48.9933320Z 
2025-08-20T01:03:48.9933416Z <a id="api.migrations.env"></a>
2025-08-20T01:03:48.9933591Z 
2025-08-20T01:03:48.9933680Z # api.migrations.env
2025-08-20T01:03:48.9933817Z 
2025-08-20T01:03:48.9933975Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T01:03:48.9934246Z 
2025-08-20T01:03:48.9934354Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T01:03:48.9934540Z 
2025-08-20T01:03:48.9934647Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T01:03:48.9934835Z 
2025-08-20T01:03:48.9934929Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T01:03:48.9935102Z 
2025-08-20T01:03:48.9935251Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T01:03:48.9935485Z 
2025-08-20T01:03:48.9935625Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T01:03:48.9935836Z 
2025-08-20T01:03:48.9935954Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T01:03:48.9936156Z 
2025-08-20T01:03:48.9936260Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T01:03:48.9936439Z 
2025-08-20T01:03:48.9936560Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T01:03:48.9936831Z 
2025-08-20T01:03:48.9936937Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T01:03:48.9937297Z 
2025-08-20T01:03:48.9937423Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T01:03:48.9937628Z 
2025-08-20T01:03:48.9937741Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T01:03:48.9937928Z 
2025-08-20T01:03:48.9938043Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T01:03:48.9938245Z 
2025-08-20T01:03:48.9938352Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T01:03:48.9938535Z 
2025-08-20T01:03:48.9938659Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T01:03:48.9938862Z 
2025-08-20T01:03:48.9938968Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T01:03:48.9939147Z 
2025-08-20T01:03:48.9939289Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T01:03:48.9939502Z 
2025-08-20T01:03:48.9939619Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T01:03:48.9939820Z 
2025-08-20T01:03:48.9939940Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T01:03:48.9940278Z 
2025-08-20T01:03:48.9940390Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T01:03:48.9940575Z 
2025-08-20T01:03:48.9940708Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T01:03:48.9940927Z 
2025-08-20T01:03:48.9941042Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T01:03:48.9941385Z 
2025-08-20T01:03:48.9941495Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T01:03:48.9941691Z 
2025-08-20T01:03:48.9941783Z # api.migrations.versions.0001\_baseline
2025-08-20T01:03:48.9942021Z 
2025-08-20T01:03:48.9942119Z <a id="api.migrations.versions"></a>
2025-08-20T01:03:48.9942280Z 
2025-08-20T01:03:48.9942360Z # api.migrations.versions
2025-08-20T01:03:48.9942495Z 
2025-08-20T01:03:48.9942573Z <a id="api.migrations"></a>
2025-08-20T01:03:48.9942706Z 
2025-08-20T01:03:48.9942775Z # api.migrations
2025-08-20T01:03:48.9942885Z 
2025-08-20T01:03:48.9942951Z <a id="api.db"></a>
2025-08-20T01:03:48.9943069Z 
2025-08-20T01:03:48.9943168Z # api.db
2025-08-20T01:03:48.9943257Z 
2025-08-20T01:03:48.9943342Z <a id="api.routes.score"></a>
2025-08-20T01:03:48.9943481Z 
2025-08-20T01:03:48.9943560Z # api.routes.score
2025-08-20T01:03:48.9943667Z 
2025-08-20T01:03:48.9943745Z <a id="api.routes.stats"></a>
2025-08-20T01:03:48.9943884Z 
2025-08-20T01:03:48.9943950Z # api.routes.stats
2025-08-20T01:03:48.9944053Z 
2025-08-20T01:03:48.9944128Z <a id="api.routes.roi"></a>
2025-08-20T01:03:48.9944260Z 
2025-08-20T01:03:48.9944326Z # api.routes.roi
2025-08-20T01:03:48.9944429Z 
2025-08-20T01:03:48.9944516Z <a id="api.routes.health"></a>
2025-08-20T01:03:48.9944652Z 
2025-08-20T01:03:48.9944720Z # api.routes.health
2025-08-20T01:03:48.9944833Z 
2025-08-20T01:03:48.9944922Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T01:03:48.9945088Z 
2025-08-20T01:03:48.9945150Z #### MAX\_SKEW
2025-08-20T01:03:48.9945252Z 
2025-08-20T01:03:48.9945314Z seconds
2025-08-20T01:03:48.9945396Z 
2025-08-20T01:03:48.9945491Z <a id="api.routes.health.health"></a>
2025-08-20T01:03:48.9945662Z 
2025-08-20T01:03:48.9945724Z #### health
2025-08-20T01:03:48.9945819Z 
2025-08-20T01:03:48.9945881Z ```python
2025-08-20T01:03:48.9946072Z @router.get("/health", include_in_schema=False)
2025-08-20T01:03:48.9946474Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T01:03:48.9946810Z ```
2025-08-20T01:03:48.9946897Z 
2025-08-20T01:03:48.9947009Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T01:03:48.9947202Z 
2025-08-20T01:03:48.9947294Z <a id="api.routes.repository"></a>
2025-08-20T01:03:48.9947449Z 
2025-08-20T01:03:48.9947527Z # api.routes.repository
2025-08-20T01:03:48.9947656Z 
2025-08-20T01:03:48.9947727Z <a id="api.routes"></a>
2025-08-20T01:03:48.9947841Z 
2025-08-20T01:03:48.9947905Z # api.routes
2025-08-20T01:03:48.9948005Z 
2025-08-20T01:03:48.9948079Z <a id="api.models.fee"></a>
2025-08-20T01:03:48.9948206Z 
2025-08-20T01:03:48.9948276Z # api.models.fee
2025-08-20T01:03:48.9948383Z 
2025-08-20T01:03:48.9948582Z <a id="api.models"></a>
2025-08-20T01:03:48.9948702Z 
2025-08-20T01:03:48.9948765Z # api.models
2025-08-20T01:03:48.9948857Z 
2025-08-20T01:03:48.9948938Z <a id="api.roi_repository"></a>
2025-08-20T01:03:48.9949083Z 
2025-08-20T01:03:48.9949155Z # api.roi\_repository
2025-08-20T01:03:48.9949266Z 
2025-08-20T01:03:48.9949340Z <a id="api.main"></a>
2025-08-20T01:03:48.9949448Z 
2025-08-20T01:03:48.9949511Z # api.main
2025-08-20T01:03:48.9949600Z 
2025-08-20T01:03:48.9949681Z <a id="api.main.ready"></a>
2025-08-20T01:03:48.9949806Z 
2025-08-20T01:03:48.9949870Z #### ready
2025-08-20T01:03:48.9949962Z 
2025-08-20T01:03:48.9950024Z ```python
2025-08-20T01:03:48.9950279Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T01:03:48.9950710Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T01:03:48.9951059Z                                                                       str]
2025-08-20T01:03:48.9951407Z ```
2025-08-20T01:03:48.9951612Z 
2025-08-20T01:03:48.9951714Z Return 200 only when migrations are at head.
2025-08-20T01:03:48.9951883Z 
2025-08-20T01:03:48.9951954Z <a id="api.config"></a>
2025-08-20T01:03:48.9952074Z 
2025-08-20T01:03:48.9952138Z # api.config
2025-08-20T01:03:48.9952229Z 
2025-08-20T01:03:48.9952310Z <a id="api.security"></a>
2025-08-20T01:03:48.9952437Z 
2025-08-20T01:03:48.9952501Z # api.security
2025-08-20T01:03:48.9952599Z 
2025-08-20T01:03:48.9952669Z <a id="etl"></a>
2025-08-20T01:03:48.9952768Z 
2025-08-20T01:03:48.9952827Z # etl
2025-08-20T01:03:48.9952915Z 
2025-08-20T01:03:48.9952994Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T01:03:48.9953140Z 
2025-08-20T01:03:48.9953213Z # etl.fba\_fee\_ingestor
2025-08-20T01:03:48.9953340Z 
2025-08-20T01:03:48.9953420Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T01:03:48.9953559Z 
2025-08-20T01:03:48.9953645Z # etl.sp\_fees\_ingestor
2025-08-20T01:03:48.9953762Z 
2025-08-20T01:03:48.9953839Z <a id="etl.keepa_ingestor"></a>
2025-08-20T01:03:48.9953990Z 
2025-08-20T01:03:48.9954060Z # etl.keepa\_ingestor
2025-08-20T01:03:48.9954172Z 
2025-08-20T01:03:48.9954241Z <a id="etl.db"></a>
2025-08-20T01:03:48.9954352Z 
2025-08-20T01:03:48.9954413Z # etl.db
2025-08-20T01:03:48.9954503Z 
2025-08-20T01:03:48.9954593Z <a id="etl.dialects.schemas"></a>
2025-08-20T01:03:48.9954739Z 
2025-08-20T01:03:48.9954813Z # etl.dialects.schemas
2025-08-20T01:03:48.9954929Z 
2025-08-20T01:03:48.9955041Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T01:03:48.9955225Z 
2025-08-20T01:03:48.9955315Z # etl.dialects.amazon\_reimbursements
2025-08-20T01:03:48.9955482Z 
2025-08-20T01:03:48.9955577Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T01:03:48.9955751Z 
2025-08-20T01:03:48.9955842Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T01:03:48.9955998Z 
2025-08-20T01:03:48.9956090Z <a id="etl.dialects.test_generic"></a>
2025-08-20T01:03:48.9956253Z 
2025-08-20T01:03:48.9956330Z # etl.dialects.test\_generic
2025-08-20T01:03:48.9956465Z 
2025-08-20T01:03:48.9956564Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T01:03:48.9956730Z 
2025-08-20T01:03:48.9956809Z # etl.dialects.amazon\_returns
2025-08-20T01:03:48.9956946Z 
2025-08-20T01:03:48.9957045Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T01:03:48.9957211Z 
2025-08-20T01:03:48.9957292Z # etl.dialects.amazon\_fee\_preview
2025-08-20T01:03:48.9957448Z 
2025-08-20T01:03:48.9957557Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T01:03:48.9957742Z 
2025-08-20T01:03:48.9957831Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T01:03:48.9958001Z 
2025-08-20T01:03:48.9958096Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T01:03:48.9958268Z 
2025-08-20T01:03:48.9958358Z # etl.dialects.amazon\_settlements
2025-08-20T01:03:48.9958508Z 
2025-08-20T01:03:48.9958583Z <a id="etl.dialects"></a>
2025-08-20T01:03:48.9958715Z 
2025-08-20T01:03:48.9958780Z # etl.dialects
2025-08-20T01:03:48.9958877Z 
2025-08-20T01:03:48.9958943Z <a id="ingest"></a>
2025-08-20T01:03:48.9959054Z 
2025-08-20T01:03:48.9959239Z # ingest
2025-08-20T01:03:48.9959324Z 
2025-08-20T01:03:48.9959668Z <a id="ingest.maintenance"></a>
2025-08-20T01:03:48.9959851Z 
2025-08-20T01:03:48.9959922Z # ingest.maintenance
2025-08-20T01:03:48.9960040Z 
2025-08-20T01:03:48.9960118Z <a id="ingest.copy_loader"></a>
2025-08-20T01:03:48.9960252Z 
2025-08-20T01:03:48.9960322Z # ingest.copy\_loader
2025-08-20T01:03:48.9960445Z 
2025-08-20T01:03:48.9960545Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T01:03:48.9960726Z 
2025-08-20T01:03:48.9960803Z #### copy\_df\_via\_temp
2025-08-20T01:03:48.9960924Z 
2025-08-20T01:03:48.9960987Z ```python
2025-08-20T01:03:48.9961280Z def copy_df_via_temp(engine: Engine,
2025-08-20T01:03:48.9961516Z                      df: pd.DataFrame,
2025-08-20T01:03:48.9961748Z                      target_table: str,
2025-08-20T01:03:48.9961960Z                      *,
2025-08-20T01:03:48.9962174Z                      target_schema: Optional[str] = None,
2025-08-20T01:03:48.9962432Z                      columns: Sequence[str],
2025-08-20T01:03:48.9962913Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T01:03:48.9963199Z                      analyze_after: bool = False,
2025-08-20T01:03:48.9963459Z                      connection: Any | None = None) -> int
2025-08-20T01:03:48.9963699Z ```
2025-08-20T01:03:48.9963783Z 
2025-08-20T01:03:48.9963937Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T01:03:48.9964173Z 
2025-08-20T01:03:48.9964258Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T01:03:48.9964414Z 
2025-08-20T01:03:48.9964498Z # ingest.tests.test\_smoke
2025-08-20T01:03:48.9964628Z 
2025-08-20T01:03:48.9964701Z <a id="ingest.tests"></a>
2025-08-20T01:03:48.9964824Z 
2025-08-20T01:03:48.9964897Z # ingest.tests
2025-08-20T01:03:48.9964995Z 
2025-08-20T01:03:48.9965080Z <a id="ingest.upload_router"></a>
2025-08-20T01:03:48.9965234Z 
2025-08-20T01:03:48.9965307Z # ingest.upload\_router
2025-08-20T01:03:48.9965426Z 
2025-08-20T01:03:48.9965512Z <a id="ingest.email_watcher"></a>
2025-08-20T01:03:48.9965666Z 
2025-08-20T01:03:48.9965738Z # ingest.email\_watcher
2025-08-20T01:03:48.9965853Z 
2025-08-20T01:03:48.9965949Z <a id="ingest.email_watcher.main"></a>
2025-08-20T01:03:48.9966110Z 
2025-08-20T01:03:48.9966171Z #### main
2025-08-20T01:03:48.9966265Z 
2025-08-20T01:03:48.9966332Z ```python
2025-08-20T01:03:48.9966492Z def main() -> dict[str, str]
2025-08-20T01:03:48.9966689Z ```
2025-08-20T01:03:48.9966770Z 
2025-08-20T01:03:48.9966918Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T01:03:48.9967138Z 
2025-08-20T01:03:48.9967264Z Returns {"status": "success"} when processing completes.
2025-08-20T01:03:48.9967469Z 
2025-08-20T01:03:48.9967551Z <a id="ingest.tasks"></a>
2025-08-20T01:03:48.9967675Z 
2025-08-20T01:03:48.9967740Z # ingest.tasks
2025-08-20T01:03:48.9967862Z 
2025-08-20T01:03:48.9967957Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T01:03:48.9968132Z 
2025-08-20T01:03:48.9968201Z #### task\_import\_file
2025-08-20T01:03:48.9968326Z 
2025-08-20T01:03:48.9968393Z ```python
2025-08-20T01:03:48.9968597Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T01:03:48.9968879Z def task_import_file(self: Any,
2025-08-20T01:03:48.9969084Z                      uri: str,
2025-08-20T01:03:48.9969312Z                      report_type: str | None = None,
2025-08-20T01:03:48.9969572Z                      force: bool = False) -> dict[str, Any]
2025-08-20T01:03:48.9969808Z ```
2025-08-20T01:03:48.9969891Z 
2025-08-20T01:03:48.9970026Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T01:03:48.9970230Z 
2025-08-20T01:03:48.9970312Z <a id="ingest.celery_app"></a>
2025-08-20T01:03:48.9970453Z 
2025-08-20T01:03:48.9970532Z # ingest.celery\_app
2025-08-20T01:03:48.9970648Z 
2025-08-20T01:03:48.9970728Z <a id="ingest.ingest_router"></a>
2025-08-20T01:03:48.9970881Z 
2025-08-20T01:03:48.9970958Z # ingest.ingest\_router
2025-08-20T01:03:48.9971075Z 
2025-08-20T01:03:48.9971357Z <a id="logistics_etl"></a>
2025-08-20T01:03:48.9971915Z 
2025-08-20T01:03:48.9971983Z # logistics\_etl
2025-08-20T01:03:48.9972088Z 
2025-08-20T01:03:48.9972173Z Daily logistics ETL job.
2025-08-20T01:03:48.9972296Z 
2025-08-20T01:03:48.9972378Z <a id="logistics_etl.__main__"></a>
2025-08-20T01:03:48.9972535Z 
2025-08-20T01:03:48.9972611Z # logistics\_etl.\_\_main\_\_
2025-08-20T01:03:48.9972744Z 
2025-08-20T01:03:48.9972821Z <a id="logistics_etl.dsn"></a>
2025-08-20T01:03:48.9972961Z 
2025-08-20T01:03:48.9973030Z # logistics\_etl.dsn
2025-08-20T01:03:48.9973139Z 
2025-08-20T01:03:48.9973262Z Local DSN builder to avoid cross-service dependency.
2025-08-20T01:03:48.9973461Z 
2025-08-20T01:03:48.9973548Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T01:03:48.9973719Z 
2025-08-20T01:03:48.9973783Z #### build\_dsn
2025-08-20T01:03:48.9973884Z 
2025-08-20T01:03:48.9973951Z ```python
2025-08-20T01:03:48.9974129Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:03:48.9974357Z ```
2025-08-20T01:03:48.9974435Z 
2025-08-20T01:03:48.9974702Z Return a Postgres DSN assembled from environment variables.
2025-08-20T01:03:48.9974922Z 
2025-08-20T01:03:48.9975079Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T01:03:48.9975469Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T01:03:48.9975812Z error when any required variable is missing.
2025-08-20T01:03:48.9975986Z 
2025-08-20T01:03:48.9976078Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T01:03:48.9976252Z 
2025-08-20T01:03:48.9976333Z # logistics\_etl.tests.conftest
2025-08-20T01:03:48.9976473Z 
2025-08-20T01:03:48.9976584Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T01:03:48.9976765Z 
2025-08-20T01:03:48.9976853Z # logistics\_etl.tests.test\_repository
2025-08-20T01:03:48.9977021Z 
2025-08-20T01:03:48.9977111Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T01:03:48.9977276Z 
2025-08-20T01:03:48.9977358Z # logistics\_etl.tests.test\_cron
2025-08-20T01:03:48.9977509Z 
2025-08-20T01:03:48.9977605Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T01:03:48.9977789Z 
2025-08-20T01:03:48.9977881Z # logistics\_etl.tests.test\_imports
2025-08-20T01:03:48.9978038Z 
2025-08-20T01:03:48.9978131Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T01:03:48.9978304Z 
2025-08-20T01:03:48.9978387Z # logistics\_etl.tests.test\_smoke
2025-08-20T01:03:48.9978537Z 
2025-08-20T01:03:48.9978632Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T01:03:48.9978809Z 
2025-08-20T01:03:48.9978892Z # logistics\_etl.tests.test\_client
2025-08-20T01:03:48.9979044Z 
2025-08-20T01:03:48.9979133Z <a id="logistics_etl.tests"></a>
2025-08-20T01:03:48.9979275Z 
2025-08-20T01:03:48.9979346Z # logistics\_etl.tests
2025-08-20T01:03:48.9979469Z 
2025-08-20T01:03:48.9979550Z <a id="logistics_etl.flow"></a>
2025-08-20T01:03:48.9979688Z 
2025-08-20T01:03:48.9979759Z # logistics\_etl.flow
2025-08-20T01:03:48.9979882Z 
2025-08-20T01:03:48.9979964Z <a id="logistics_etl.client"></a>
2025-08-20T01:03:48.9980107Z 
2025-08-20T01:03:49.0071355Z # logistics\_etl.client
2025-08-20T01:03:49.0071688Z 
2025-08-20T01:03:49.0071859Z <a id="logistics_etl.cron"></a>
2025-08-20T01:03:49.0072169Z 
2025-08-20T01:03:49.0072319Z # logistics\_etl.cron
2025-08-20T01:03:49.0072560Z 
2025-08-20T01:03:49.0072712Z <a id="logistics_etl.db"></a>
2025-08-20T01:03:49.0073012Z 
2025-08-20T01:03:49.0073155Z # logistics\_etl.db
2025-08-20T01:03:49.0073397Z 
2025-08-20T01:03:49.0073595Z <a id="logistics_etl.repository"></a>
2025-08-20T01:03:49.0073893Z 
2025-08-20T01:03:49.0073976Z # logistics\_etl.repository
2025-08-20T01:03:49.0074120Z 
2025-08-20T01:03:49.0074191Z <a id="alert_bot"></a>
2025-08-20T01:03:49.0074307Z 
2025-08-20T01:03:49.0074378Z # alert\_bot
2025-08-20T01:03:49.0074478Z 
2025-08-20T01:03:49.0074564Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T01:03:49.0074728Z 
2025-08-20T01:03:49.0074814Z # alert\_bot.tests.test\_smoke
2025-08-20T01:03:49.0074952Z 
2025-08-20T01:03:49.0075029Z <a id="alert_bot.tests"></a>
2025-08-20T01:03:49.0075249Z 
2025-08-20T01:03:49.0075724Z # alert\_bot.tests
2025-08-20T01:03:49.0075917Z 
2025-08-20T01:03:49.0076063Z <a id="alert_bot.alert_bot"></a>
2025-08-20T01:03:49.0076306Z 
2025-08-20T01:03:49.0076432Z # alert\_bot.alert\_bot
2025-08-20T01:03:49.0076667Z 
2025-08-20T01:03:49.0076816Z <a id="alert_bot.rules"></a>
2025-08-20T01:03:49.0077055Z 
2025-08-20T01:03:49.0077163Z # alert\_bot.rules
2025-08-20T01:03:49.0077344Z 
2025-08-20T01:03:49.0077472Z <a id="common"></a>
2025-08-20T01:03:49.0077659Z 
2025-08-20T01:03:49.0077763Z # common
2025-08-20T01:03:49.0077927Z 
2025-08-20T01:03:49.0078056Z <a id="common.dsn"></a>
2025-08-20T01:03:49.0078267Z 
2025-08-20T01:03:49.0078393Z # common.dsn
2025-08-20T01:03:49.0078562Z 
2025-08-20T01:03:49.0078702Z <a id="common.dsn.build_dsn"></a>
2025-08-20T01:03:49.0078962Z 
2025-08-20T01:03:49.0079077Z #### build\_dsn
2025-08-20T01:03:49.0079247Z 
2025-08-20T01:03:49.0079355Z ```python
2025-08-20T01:03:49.0079669Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:03:49.0080053Z ```
2025-08-20T01:03:49.0080421Z 
2025-08-20T01:03:49.0080632Z Return a Postgres DSN, validating required variables.
2025-08-20T01:03:49.0080982Z 
2025-08-20T01:03:49.0081501Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T01:03:49.0082258Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T01:03:49.0082819Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T01:03:49.0083127Z missing.
2025-08-20T01:03:49.0083226Z 
2025-08-20T01:03:49.0083392Z <a id="common.models_vendor"></a>
2025-08-20T01:03:49.0083548Z 
2025-08-20T01:03:49.0083628Z # common.models\_vendor
2025-08-20T01:03:49.0083747Z 
2025-08-20T01:03:49.0083836Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T01:03:49.0084000Z 
2025-08-20T01:03:49.0084071Z ## Vendor Objects
2025-08-20T01:03:49.0084175Z 
2025-08-20T01:03:49.0084239Z ```python
2025-08-20T01:03:49.0084401Z class Vendor(Base)
2025-08-20T01:03:49.0084562Z ```
2025-08-20T01:03:49.0084661Z 
2025-08-20T01:03:49.0084745Z Vendor of inventory items.
2025-08-20T01:03:49.0084877Z 
2025-08-20T01:03:49.0084990Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T01:03:49.0085177Z 
2025-08-20T01:03:49.0085250Z ## VendorPrice Objects
2025-08-20T01:03:49.0085368Z 
2025-08-20T01:03:49.0085440Z ```python
2025-08-20T01:03:49.0085596Z class VendorPrice(Base)
2025-08-20T01:03:49.0085775Z ```
2025-08-20T01:03:49.0085855Z 
2025-08-20T01:03:49.0085957Z Association table linking vendors to pricing.
2025-08-20T01:03:49.0086139Z 
2025-08-20T01:03:49.0086214Z <a id="common.db_url"></a>
2025-08-20T01:03:49.0086342Z 
2025-08-20T01:03:49.0086415Z # common.db\_url
2025-08-20T01:03:49.0086520Z 
2025-08-20T01:03:49.0086602Z <a id="common.db_url.build_url"></a>
2025-08-20T01:03:49.0086757Z 
2025-08-20T01:03:49.0086826Z #### build\_url
2025-08-20T01:03:49.0086927Z 
2025-08-20T01:03:49.0086987Z ```python
2025-08-20T01:03:49.0087166Z def build_url(async_: bool = True) -> str
2025-08-20T01:03:49.0087384Z ```
2025-08-20T01:03:49.0087480Z 
2025-08-20T01:03:49.0087576Z Return Postgres DSN from env or PG_* parts.
2025-08-20T01:03:49.0087748Z 
2025-08-20T01:03:49.0087831Z <a id="common.keepa"></a>
2025-08-20T01:03:49.0087957Z 
2025-08-20T01:03:49.0088023Z # common.keepa
2025-08-20T01:03:49.0088128Z 
2025-08-20T01:03:49.0088201Z <a id="common.llm"></a>
2025-08-20T01:03:49.0088317Z 
2025-08-20T01:03:49.0088381Z # common.llm
2025-08-20T01:03:49.0088481Z 
2025-08-20T01:03:49.0088562Z <a id="common.settings"></a>
2025-08-20T01:03:49.0088695Z 
2025-08-20T01:03:49.0088767Z # common.settings
2025-08-20T01:03:49.0088872Z 
2025-08-20T01:03:49.0088942Z <a id="common.db"></a>
2025-08-20T01:03:49.0089055Z 
2025-08-20T01:03:49.0089123Z # common.db
2025-08-20T01:03:49.0089211Z 
2025-08-20T01:03:49.0089301Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T01:03:49.0089475Z 
2025-08-20T01:03:49.0089548Z #### build\_sqlalchemy\_url
2025-08-20T01:03:49.0089677Z 
2025-08-20T01:03:49.0089739Z ```python
2025-08-20T01:03:49.0089918Z def build_sqlalchemy_url() -> str
2025-08-20T01:03:49.0090286Z ```
2025-08-20T01:03:49.0090370Z 
2025-08-20T01:03:49.0090466Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T01:03:49.0090637Z 
2025-08-20T01:03:49.0090733Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T01:03:49.0090897Z 
2025-08-20T01:03:49.0090971Z #### build\_asyncpg\_dsn
2025-08-20T01:03:49.0091102Z 
2025-08-20T01:03:49.0091382Z ```python
2025-08-20T01:03:49.0091577Z def build_asyncpg_dsn() -> str
2025-08-20T01:03:49.0091776Z ```
2025-08-20T01:03:49.0091856Z 
2025-08-20T01:03:49.0091989Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T01:03:49.0092201Z 
2025-08-20T01:03:49.0092286Z <a id="common.db.refresh_mvs"></a>
2025-08-20T01:03:49.0092441Z 
2025-08-20T01:03:49.0092505Z #### refresh\_mvs
2025-08-20T01:03:49.0092607Z 
2025-08-20T01:03:49.0092669Z ```python
2025-08-20T01:03:49.0092868Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T01:03:49.0093112Z ```
2025-08-20T01:03:49.0093196Z 
2025-08-20T01:03:49.0093464Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T01:03:49.0093686Z 
2025-08-20T01:03:49.0093767Z <a id="common.config"></a>
2025-08-20T01:03:49.0093903Z 
2025-08-20T01:03:49.0093968Z # common.config
2025-08-20T01:03:49.0094081Z 
2025-08-20T01:03:49.0094156Z <a id="common.base"></a>
2025-08-20T01:03:49.0094283Z 
2025-08-20T01:03:49.0094348Z # common.base
2025-08-20T01:03:49.0094451Z 
2025-08-20T01:03:49.0094528Z <a id="common.base.Base"></a>
2025-08-20T01:03:49.0094667Z 
2025-08-20T01:03:49.0094738Z ## Base Objects
2025-08-20T01:03:49.0094839Z 
2025-08-20T01:03:49.0094902Z ```python
2025-08-20T01:03:49.0095072Z class Base(DeclarativeBase)
2025-08-20T01:03:49.0095264Z ```
2025-08-20T01:03:49.0095354Z 
2025-08-20T01:03:49.0095437Z Base class for SQLAlchemy models.
2025-08-20T01:03:49.0095584Z 
2025-08-20T01:03:49.0095656Z <a id="repricer"></a>
2025-08-20T01:03:49.0095777Z 
2025-08-20T01:03:49.0095840Z # repricer
2025-08-20T01:03:49.0095930Z 
2025-08-20T01:03:49.0096024Z <a id="repricer.app.schemas"></a>
2025-08-20T01:03:49.0096181Z 
2025-08-20T01:03:49.0096257Z # repricer.app.schemas
2025-08-20T01:03:49.0096380Z 
2025-08-20T01:03:49.0096463Z <a id="repricer.app.deps"></a>
2025-08-20T01:03:49.0096605Z 
2025-08-20T01:03:49.0096677Z # repricer.app.deps
2025-08-20T01:03:49.0096798Z 
2025-08-20T01:03:49.0096926Z Placeholder module for Keepa / SP-API clients.
2025-08-20T01:03:49.0097112Z 
2025-08-20T01:03:49.0097200Z <a id="repricer.app.logic"></a>
2025-08-20T01:03:49.0097342Z 
2025-08-20T01:03:49.0097416Z # repricer.app.logic
2025-08-20T01:03:49.0097536Z 
2025-08-20T01:03:49.0097635Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T01:03:49.0097808Z 
2025-08-20T01:03:49.0097872Z #### MIN\_MARGIN
2025-08-20T01:03:49.0097978Z 
2025-08-20T01:03:49.0098040Z 15 % ROI
2025-08-20T01:03:49.0098125Z 
2025-08-20T01:03:49.0098234Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T01:03:49.0098413Z 
2025-08-20T01:03:49.0098481Z #### compute\_price
2025-08-20T01:03:49.0098588Z 
2025-08-20T01:03:49.0098668Z ```python
2025-08-20T01:03:49.0098910Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T01:03:49.0099219Z ```
2025-08-20T01:03:49.0099303Z 
2025-08-20T01:03:49.0099409Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T01:03:49.0099689Z Replace with real competitive logic later.
2025-08-20T01:03:49.0099857Z 
2025-08-20T01:03:49.0099943Z <a id="repricer.app.main"></a>
2025-08-20T01:03:49.0100085Z 
2025-08-20T01:03:49.0100156Z # repricer.app.main
2025-08-20T01:03:49.0100267Z 
2025-08-20T01:03:49.0100342Z <a id="repricer.app"></a>
2025-08-20T01:03:49.0100471Z 
2025-08-20T01:03:49.0100537Z # repricer.app
2025-08-20T01:03:49.0100646Z 
2025-08-20T01:03:49.0100736Z <a id="repricer.tests.test_imports"></a>
2025-08-20T01:03:49.0100903Z 
2025-08-20T01:03:49.0100993Z # repricer.tests.test\_imports
2025-08-20T01:03:49.0101308Z 
2025-08-20T01:03:49.0101433Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T01:03:49.0101600Z 
2025-08-20T01:03:49.0101689Z # repricer.tests.test\_smoke
2025-08-20T01:03:49.0101965Z 
2025-08-20T01:03:49.0102042Z <a id="repricer.tests"></a>
2025-08-20T01:03:49.0102182Z 
2025-08-20T01:03:49.0102250Z # repricer.tests
2025-08-20T01:03:49.0102356Z 
2025-08-20T01:03:49.0102425Z <a id="db"></a>
2025-08-20T01:03:49.0102525Z 
2025-08-20T01:03:49.0102585Z # db
2025-08-20T01:03:49.0102668Z 
2025-08-20T01:03:49.0102754Z <a id="db.utils.views"></a>
2025-08-20T01:03:49.0102883Z 
2025-08-20T01:03:49.0102951Z # db.utils.views
2025-08-20T01:03:49.0103059Z 
2025-08-20T01:03:49.0103156Z <a id="db.utils.views.replace_view"></a>
2025-08-20T01:03:49.0103325Z 
2025-08-20T01:03:49.0103392Z #### replace\_view
2025-08-20T01:03:49.0103508Z 
2025-08-20T01:03:49.0103573Z ```python
2025-08-20T01:03:49.0103768Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T01:03:49.0104011Z ```
2025-08-20T01:03:49.0104093Z 
2025-08-20T01:03:49.0104188Z Drop and recreate a SQL view atomically.
2025-08-20T01:03:49.0104355Z 
2025-08-20T01:03:49.0104424Z <a id="db.utils"></a>
2025-08-20T01:03:49.0104675Z 
2025-08-20T01:03:49.0104736Z # db.utils
2025-08-20T01:03:49.0104823Z 
2025-08-20T01:03:49.0104900Z <a id="price_importer"></a>
2025-08-20T01:03:49.0105033Z 
2025-08-20T01:03:49.0105099Z # price\_importer
2025-08-20T01:03:49.0105205Z 
2025-08-20T01:03:49.0105315Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T01:03:49.0105496Z 
2025-08-20T01:03:49.0105586Z # price\_importer.services\_common.dsn
2025-08-20T01:03:49.0105752Z 
2025-08-20T01:03:49.0105877Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T01:03:49.0106081Z 
2025-08-20T01:03:49.0106145Z #### build\_dsn
2025-08-20T01:03:49.0106248Z 
2025-08-20T01:03:49.0106310Z ```python
2025-08-20T01:03:49.0106485Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:03:49.0106700Z ```
2025-08-20T01:03:49.0106782Z 
2025-08-20T01:03:49.0106853Z Return safe DSN.
2025-08-20T01:03:49.0106957Z 
2025-08-20T01:03:49.0107328Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T01:03:49.0107540Z 
2025-08-20T01:03:49.0107684Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T01:03:49.0107887Z 
2025-08-20T01:03:49.0108001Z # price\_importer.services\_common.models\_vendor
2025-08-20T01:03:49.0108193Z 
2025-08-20T01:03:49.0108307Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T01:03:49.0108496Z 
2025-08-20T01:03:49.0108597Z # price\_importer.services\_common.db\_url
2025-08-20T01:03:49.0108768Z 
2025-08-20T01:03:49.0108902Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T01:03:49.0109126Z 
2025-08-20T01:03:49.0109190Z #### build\_url
2025-08-20T01:03:49.0109289Z 
2025-08-20T01:03:49.0109357Z ```python
2025-08-20T01:03:49.0109529Z def build_url(async_: bool = True) -> str
2025-08-20T01:03:49.0109759Z ```
2025-08-20T01:03:49.0109841Z 
2025-08-20T01:03:49.0109940Z Return Postgres DSN from env or PG_* parts.
2025-08-20T01:03:49.0110120Z 
2025-08-20T01:03:49.0110226Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T01:03:49.0110415Z 
2025-08-20T01:03:49.0110521Z # price\_importer.services\_common.keepa
2025-08-20T01:03:49.0110693Z 
2025-08-20T01:03:49.0110793Z <a id="price_importer.services_common.llm"></a>
2025-08-20T01:03:49.0110971Z 
2025-08-20T01:03:49.0111068Z # price\_importer.services\_common.llm
2025-08-20T01:03:49.0111480Z 
2025-08-20T01:03:49.0111603Z <a id="price_importer.services_common.settings"></a>
2025-08-20T01:03:49.0111804Z 
2025-08-20T01:03:49.0111900Z # price\_importer.services\_common.settings
2025-08-20T01:03:49.0112074Z 
2025-08-20T01:03:49.0112172Z <a id="price_importer.services_common.db"></a>
2025-08-20T01:03:49.0112352Z 
2025-08-20T01:03:49.0112441Z # price\_importer.services\_common.db
2025-08-20T01:03:49.0112601Z 
2025-08-20T01:03:49.0112762Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T01:03:49.0112999Z 
2025-08-20T01:03:49.0113076Z #### build\_sqlalchemy\_url
2025-08-20T01:03:49.0113210Z 
2025-08-20T01:03:49.0113275Z ```python
2025-08-20T01:03:49.0113450Z def build_sqlalchemy_url() -> str
2025-08-20T01:03:49.0113807Z ```
2025-08-20T01:03:49.0113892Z 
2025-08-20T01:03:49.0113995Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T01:03:49.0114167Z 
2025-08-20T01:03:49.0114312Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T01:03:49.0114536Z 
2025-08-20T01:03:49.0114619Z #### build\_asyncpg\_dsn
2025-08-20T01:03:49.0114742Z 
2025-08-20T01:03:49.0114804Z ```python
2025-08-20T01:03:49.0114976Z def build_asyncpg_dsn() -> str
2025-08-20T01:03:49.0115174Z ```
2025-08-20T01:03:49.0115261Z 
2025-08-20T01:03:49.0115386Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T01:03:49.0115593Z 
2025-08-20T01:03:49.0115727Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T01:03:49.0115929Z 
2025-08-20T01:03:49.0116000Z #### refresh\_mvs
2025-08-20T01:03:49.0116111Z 
2025-08-20T01:03:49.0116172Z ```python
2025-08-20T01:03:49.0116363Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T01:03:49.0116612Z ```
2025-08-20T01:03:49.0116823Z 
2025-08-20T01:03:49.0116962Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T01:03:49.0117183Z 
2025-08-20T01:03:49.0117275Z <a id="price_importer.services_common"></a>
2025-08-20T01:03:49.0117443Z 
2025-08-20T01:03:49.0117532Z # price\_importer.services\_common
2025-08-20T01:03:49.0117683Z 
2025-08-20T01:03:49.0117787Z <a id="price_importer.services_common.base"></a>
2025-08-20T01:03:49.0117974Z 
2025-08-20T01:03:49.0118061Z # price\_importer.services\_common.base
2025-08-20T01:03:49.0118223Z 
2025-08-20T01:03:49.0118315Z <a id="price_importer.normaliser"></a>
2025-08-20T01:03:49.0118474Z 
2025-08-20T01:03:49.0118557Z # price\_importer.normaliser
2025-08-20T01:03:49.0118693Z 
2025-08-20T01:03:49.0118802Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T01:03:49.0118980Z 
2025-08-20T01:03:49.0119067Z # price\_importer.common.models\_vendor
2025-08-20T01:03:49.0119232Z 
2025-08-20T01:03:49.0119322Z <a id="price_importer.common.db_url"></a>
2025-08-20T01:03:49.0119489Z 
2025-08-20T01:03:49.0119589Z # price\_importer.common.db\_url
2025-08-20T01:03:49.0119735Z 
2025-08-20T01:03:49.0119838Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T01:03:49.0120021Z 
2025-08-20T01:03:49.0120089Z #### make\_dsn
2025-08-20T01:03:49.0120184Z 
2025-08-20T01:03:49.0120244Z ```python
2025-08-20T01:03:49.0120420Z def make_dsn(async_: bool = False) -> str
2025-08-20T01:03:49.0120638Z ```
2025-08-20T01:03:49.0120724Z 
2025-08-20T01:03:49.0120843Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T01:03:49.0121037Z 
2025-08-20T01:03:49.0121320Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T01:03:49.0121511Z 
2025-08-20T01:03:49.0121576Z #### build\_url
2025-08-20T01:03:49.0121679Z 
2025-08-20T01:03:49.0121739Z ```python
2025-08-20T01:03:49.0121906Z def build_url(async_: bool = False) -> str
2025-08-20T01:03:49.0122129Z ```
2025-08-20T01:03:49.0122207Z 
2025-08-20T01:03:49.0122327Z Return Postgres DSN built from environment variables.
2025-08-20T01:03:49.0122535Z 
2025-08-20T01:03:49.0122625Z <a id="price_importer.common"></a>
2025-08-20T01:03:49.0122777Z 
2025-08-20T01:03:49.0122859Z # price\_importer.common
2025-08-20T01:03:49.0122984Z 
2025-08-20T01:03:49.0123072Z <a id="price_importer.common.base"></a>
2025-08-20T01:03:49.0123243Z 
2025-08-20T01:03:49.0123324Z # price\_importer.common.base
2025-08-20T01:03:49.0123463Z 
2025-08-20T01:03:49.0123559Z <a id="price_importer.tests.conftest"></a>
2025-08-20T01:03:49.0123736Z 
2025-08-20T01:03:49.0123821Z # price\_importer.tests.conftest
2025-08-20T01:03:49.0123970Z 
2025-08-20T01:03:49.0124083Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T01:03:49.0124261Z 
2025-08-20T01:03:49.0124348Z # price\_importer.tests.test\_reader
2025-08-20T01:03:49.0124512Z 
2025-08-20T01:03:49.0124610Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T01:03:49.0124825Z 
2025-08-20T01:03:49.0124913Z # price\_importer.tests.test\_imports
2025-08-20T01:03:49.0125076Z 
2025-08-20T01:03:49.0125172Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T01:03:49.0125471Z 
2025-08-20T01:03:49.0125576Z # price\_importer.tests.test\_smoke
2025-08-20T01:03:49.0125732Z 
2025-08-20T01:03:49.0125840Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T01:03:49.0126027Z 
2025-08-20T01:03:49.0126117Z # price\_importer.tests.test\_normaliser
2025-08-20T01:03:49.0126283Z 
2025-08-20T01:03:49.0126366Z <a id="price_importer.tests"></a>
2025-08-20T01:03:49.0126520Z 
2025-08-20T01:03:49.0126595Z # price\_importer.tests
2025-08-20T01:03:49.0126718Z 
2025-08-20T01:03:49.0126809Z <a id="price_importer.reader"></a>
2025-08-20T01:03:49.0126959Z 
2025-08-20T01:03:49.0127035Z # price\_importer.reader
2025-08-20T01:03:49.0127164Z 
2025-08-20T01:03:49.0127257Z <a id="price_importer.repository"></a>
2025-08-20T01:03:49.0127420Z 
2025-08-20T01:03:49.0127503Z # price\_importer.repository
2025-08-20T01:03:49.0127651Z 
2025-08-20T01:03:49.0127735Z <a id="price_importer.import"></a>
2025-08-20T01:03:49.0127880Z 
2025-08-20T01:03:49.0127963Z # price\_importer.import
2025-08-20T01:03:49.0128214Z 
2025-08-20T01:03:49.0128285Z <a id="fees_h10"></a>
2025-08-20T01:03:49.0128404Z 
2025-08-20T01:03:49.0128470Z # fees\_h10
2025-08-20T01:03:49.0128560Z 
2025-08-20T01:03:49.0128633Z <a id="fees_h10.worker"></a>
2025-08-20T01:03:49.0128768Z 
2025-08-20T01:03:49.0128832Z # fees\_h10.worker
2025-08-20T01:03:49.0128936Z 
2025-08-20T01:03:49.0129034Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T01:03:49.0129207Z 
2025-08-20T01:03:49.0129276Z #### list\_active\_asins
2025-08-20T01:03:49.0129401Z 
2025-08-20T01:03:49.0129462Z ```python
2025-08-20T01:03:49.0129627Z def list_active_asins() -> list[str]
2025-08-20T01:03:49.0129837Z ```
2025-08-20T01:03:49.0129918Z 
2025-08-20T01:03:49.0130028Z Return known ASINs or an empty list if unavailable.
2025-08-20T01:03:49.0130226Z 
2025-08-20T01:03:49.0130311Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T01:03:49.0130467Z 
2025-08-20T01:03:49.0130550Z # fees\_h10.tests.test\_smoke
2025-08-20T01:03:49.0130684Z 
2025-08-20T01:03:49.0130767Z <a id="fees_h10.tests"></a>
2025-08-20T01:03:49.0130900Z 
2025-08-20T01:03:49.0130964Z # fees\_h10.tests
2025-08-20T01:03:49.0131070Z 
2025-08-20T01:03:49.0131291Z <a id="fees_h10.client"></a>
2025-08-20T01:03:49.0131436Z 
2025-08-20T01:03:49.0131501Z # fees\_h10.client
2025-08-20T01:03:49.0131602Z 
2025-08-20T01:03:49.0131687Z <a id="fees_h10.repository"></a>
2025-08-20T01:03:49.0131829Z 
2025-08-20T01:03:49.0131899Z # fees\_h10.repository
2025-08-20T01:03:49.0132018Z 
2025-08-20T01:03:49.0132149Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T01:03:49.0132328Z 
2025-08-20T01:03:49.0132397Z #### upsert\_fees\_raw
2025-08-20T01:03:49.0132514Z 
2025-08-20T01:03:49.0132575Z ```python
2025-08-20T01:03:49.0132747Z def upsert_fees_raw(engine: Engine,
2025-08-20T01:03:49.0132985Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T01:03:49.0133224Z                     *,
2025-08-20T01:03:49.0133441Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T01:03:49.0133719Z ```
2025-08-20T01:03:49.0133800Z 
2025-08-20T01:03:49.0133878Z Idempotent upsert for fees.
2025-08-20T01:03:49.0134015Z 
2025-08-20T01:03:49.0134168Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T01:03:49.0134506Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T01:03:49.0134808Z Only updates when one of the mutable fields changes.
2025-08-20T01:03:49.0134998Z 
2025-08-20T01:03:49.0135074Z <a id="emailer"></a>
2025-08-20T01:03:49.0135185Z 
2025-08-20T01:03:49.0135247Z # emailer
2025-08-20T01:03:49.0135341Z 
2025-08-20T01:03:49.0135442Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T01:03:49.0135620Z 
2025-08-20T01:03:49.0135708Z # emailer.tests.test\_import\_emailer
2025-08-20T01:03:49.0135872Z 
2025-08-20T01:03:49.0135956Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T01:03:49.0136111Z 
2025-08-20T01:03:49.0136200Z # emailer.tests.test\_smoke
2025-08-20T01:03:49.0136334Z 
2025-08-20T01:03:49.0136411Z <a id="emailer.tests"></a>
2025-08-20T01:03:49.0136671Z 
2025-08-20T01:03:49.0136738Z # emailer.tests
2025-08-20T01:03:49.0136844Z 
2025-08-20T01:03:49.0136930Z <a id="emailer.generate_body"></a>
2025-08-20T01:03:49.0137088Z 
2025-08-20T01:03:49.0137163Z # emailer.generate\_body
2025-08-20T01:03:49.0137288Z 
2025-08-20T01:03:49.0137369Z <a id="llm_server"></a>
2025-08-20T01:03:49.0137488Z 
2025-08-20T01:03:49.0137552Z # llm\_server
2025-08-20T01:03:49.0137656Z 
2025-08-20T01:03:49.0137732Z <a id="llm_server.app"></a>
2025-08-20T01:03:49.0137863Z 
2025-08-20T01:03:49.0137929Z # llm\_server.app
2025-08-20T01:03:49.0138041Z 
