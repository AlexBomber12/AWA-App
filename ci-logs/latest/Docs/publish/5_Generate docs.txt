2025-08-20T17:42:25.8797161Z ##[group]Run pydoc-markdown
2025-08-20T17:42:25.8797460Z [36;1mpydoc-markdown[0m
2025-08-20T17:42:25.8838872Z shell: /usr/bin/bash -e {0}
2025-08-20T17:42:25.8839104Z env:
2025-08-20T17:42:25.8839348Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:42:25.8839760Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T17:42:25.8840140Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:42:25.8840721Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:42:25.8841078Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:42:25.8841425Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T17:42:25.8841708Z ##[endgroup]
2025-08-20T17:42:26.2122786Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T17:42:26.2123496Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T17:42:26.2123972Z In "pydoc-markdown.yml"
2025-08-20T17:42:26.2124420Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T17:42:26.2125098Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T17:42:26.2125750Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T17:42:26.2126040Z 
2025-08-20T17:42:26.5768177Z <a id="__init__"></a>
2025-08-20T17:42:26.5768484Z 
2025-08-20T17:42:26.5768627Z # \_\_init\_\_
2025-08-20T17:42:26.5768864Z 
2025-08-20T17:42:26.5768989Z <a id="api"></a>
2025-08-20T17:42:26.5769239Z 
2025-08-20T17:42:26.5769378Z # api
2025-08-20T17:42:26.5769542Z 
2025-08-20T17:42:26.5769673Z <a id="api.errors"></a>
2025-08-20T17:42:26.5769827Z 
2025-08-20T17:42:26.5769907Z # api.errors
2025-08-20T17:42:26.5770031Z 
2025-08-20T17:42:26.5770129Z <a id="api.sentry_config"></a>
2025-08-20T17:42:26.5770578Z 
2025-08-20T17:42:26.5770675Z # api.sentry\_config
2025-08-20T17:42:26.5770822Z 
2025-08-20T17:42:26.5770941Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T17:42:26.5771156Z 
2025-08-20T17:42:26.5771565Z # api.tests.test\_stats\_contracts
2025-08-20T17:42:26.5771765Z 
2025-08-20T17:42:26.5771870Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T17:42:26.5772150Z 
2025-08-20T17:42:26.5772247Z # api.tests.test\_sentry\_scrub
2025-08-20T17:42:26.5772416Z 
2025-08-20T17:42:26.5772524Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T17:42:26.5772734Z 
2025-08-20T17:42:26.5772832Z # api.tests.test\_roi\_basic\_auth
2025-08-20T17:42:26.5773007Z 
2025-08-20T17:42:26.5773115Z <a id="api.tests.test_errors_json"></a>
2025-08-20T17:42:26.5773310Z 
2025-08-20T17:42:26.5773403Z # api.tests.test\_errors\_json
2025-08-20T17:42:26.5773575Z 
2025-08-20T17:42:26.5773668Z <a id="api.tests.test_llm"></a>
2025-08-20T17:42:26.5773834Z 
2025-08-20T17:42:26.5773919Z # api.tests.test\_llm
2025-08-20T17:42:26.5774064Z 
2025-08-20T17:42:26.5774165Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T17:42:26.5774356Z 
2025-08-20T17:42:26.5774453Z # api.tests.test\_roi\_filters
2025-08-20T17:42:26.5774613Z 
2025-08-20T17:42:26.5774724Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T17:42:26.5774931Z 
2025-08-20T17:42:26.5775024Z # api.tests.test\_sentry\_event
2025-08-20T17:42:26.5775187Z 
2025-08-20T17:42:26.5775332Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T17:42:26.5775584Z 
2025-08-20T17:42:26.5775676Z ## DummyTransport Objects
2025-08-20T17:42:26.5775829Z 
2025-08-20T17:42:26.5775911Z ```python
2025-08-20T17:42:26.5776112Z class DummyTransport()
2025-08-20T17:42:26.5776334Z ```
2025-08-20T17:42:26.5776434Z 
2025-08-20T17:42:26.5776637Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T17:42:26.5776956Z 
2025-08-20T17:42:26.5777043Z #### capture\_envelope
2025-08-20T17:42:26.5777180Z 
2025-08-20T17:42:26.5777256Z ```python
2025-08-20T17:42:26.5777465Z def capture_envelope(envelope)
2025-08-20T17:42:26.5777708Z ```
2025-08-20T17:42:26.5777804Z 
2025-08-20T17:42:26.5777948Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T17:42:26.5778201Z 
2025-08-20T17:42:26.5778306Z <a id="api.tests.test_cors"></a>
2025-08-20T17:42:26.5778700Z 
2025-08-20T17:42:26.5778788Z # api.tests.test\_cors
2025-08-20T17:42:26.5778933Z 
2025-08-20T17:42:26.5779032Z <a id="api.tests.test_imports"></a>
2025-08-20T17:42:26.5779215Z 
2025-08-20T17:42:26.5779310Z # api.tests.test\_imports
2025-08-20T17:42:26.5779464Z 
2025-08-20T17:42:26.5779565Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T17:42:26.5779754Z 
2025-08-20T17:42:26.5779854Z # api.tests.test\_rate\_limit
2025-08-20T17:42:26.5780020Z 
2025-08-20T17:42:26.5780129Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T17:42:26.5780540Z 
2025-08-20T17:42:26.5780616Z #### app
2025-08-20T17:42:26.5780723Z 
2025-08-20T17:42:26.5780799Z noqa: E402
2025-08-20T17:42:26.5780910Z 
2025-08-20T17:42:26.5781011Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T17:42:26.5781199Z 
2025-08-20T17:42:26.5781296Z # api.tests.test\_stats\_sql
2025-08-20T17:42:26.5781459Z 
2025-08-20T17:42:26.5781561Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T17:42:26.5781769Z 
2025-08-20T17:42:26.5781860Z # api.tests.test\_entrypoint
2025-08-20T17:42:26.5782021Z 
2025-08-20T17:42:26.5782143Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T17:42:26.5782371Z 
2025-08-20T17:42:26.5782477Z # api.tests.test\_stats\_future\_contracts
2025-08-20T17:42:26.5782681Z 
2025-08-20T17:42:26.5782784Z <a id="api.tests.test_health"></a>
2025-08-20T17:42:26.5782962Z 
2025-08-20T17:42:26.5783049Z # api.tests.test\_health
2025-08-20T17:42:26.5783203Z 
2025-08-20T17:42:26.5783299Z <a id="api.tests.test_score"></a>
2025-08-20T17:42:26.5783473Z 
2025-08-20T17:42:26.5783559Z # api.tests.test\_score
2025-08-20T17:42:26.5783706Z 
2025-08-20T17:42:26.5783800Z <a id="api.logging_config"></a>
2025-08-20T17:42:26.5783964Z 
2025-08-20T17:42:26.5784054Z # api.logging\_config
2025-08-20T17:42:26.5784191Z 
2025-08-20T17:42:26.5784285Z <a id="api.migrations.env"></a>
2025-08-20T17:42:26.5784456Z 
2025-08-20T17:42:26.5784542Z # api.migrations.env
2025-08-20T17:42:26.5784809Z 
2025-08-20T17:42:26.5784954Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T17:42:26.5785183Z 
2025-08-20T17:42:26.5785290Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T17:42:26.5785471Z 
2025-08-20T17:42:26.5785585Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T17:42:26.5785787Z 
2025-08-20T17:42:26.5785888Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T17:42:26.5786065Z 
2025-08-20T17:42:26.5786218Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T17:42:26.5786451Z 
2025-08-20T17:42:26.5786587Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T17:42:26.5786809Z 
2025-08-20T17:42:26.5786933Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T17:42:26.5787130Z 
2025-08-20T17:42:26.5787243Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T17:42:26.5787424Z 
2025-08-20T17:42:26.5787541Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T17:42:26.5787757Z 
2025-08-20T17:42:26.5787860Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T17:42:26.5788151Z 
2025-08-20T17:42:26.5788277Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T17:42:26.5788476Z 
2025-08-20T17:42:26.5788586Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T17:42:26.5788776Z 
2025-08-20T17:42:26.5788892Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T17:42:26.5789082Z 
2025-08-20T17:42:26.5789198Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T17:42:26.5789385Z 
2025-08-20T17:42:26.5789509Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T17:42:26.5789712Z 
2025-08-20T17:42:26.5789816Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T17:42:26.5789995Z 
2025-08-20T17:42:26.5790132Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T17:42:26.5790503Z 
2025-08-20T17:42:26.5790626Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T17:42:26.5790826Z 
2025-08-20T17:42:26.5790962Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T17:42:26.5791310Z 
2025-08-20T17:42:26.5791426Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T17:42:26.5791623Z 
2025-08-20T17:42:26.5791760Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T17:42:26.5791982Z 
2025-08-20T17:42:26.5792109Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T17:42:26.5792305Z 
2025-08-20T17:42:26.5792415Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T17:42:26.5792605Z 
2025-08-20T17:42:26.5792706Z # api.migrations.versions.0001\_baseline
2025-08-20T17:42:26.5792886Z 
2025-08-20T17:42:26.5792982Z <a id="api.migrations.versions"></a>
2025-08-20T17:42:26.5793183Z 
2025-08-20T17:42:26.5793330Z # api.migrations.versions
2025-08-20T17:42:26.5793538Z 
2025-08-20T17:42:26.5793624Z <a id="api.migrations"></a>
2025-08-20T17:42:26.5793784Z 
2025-08-20T17:42:26.5793869Z # api.migrations
2025-08-20T17:42:26.5793975Z 
2025-08-20T17:42:26.5794058Z <a id="api.db"></a>
2025-08-20T17:42:26.5794172Z 
2025-08-20T17:42:26.5794236Z # api.db
2025-08-20T17:42:26.5794332Z 
2025-08-20T17:42:26.5794413Z <a id="api.routes.score"></a>
2025-08-20T17:42:26.5794550Z 
2025-08-20T17:42:26.5794622Z # api.routes.score
2025-08-20T17:42:26.5794735Z 
2025-08-20T17:42:26.5794814Z <a id="api.routes.stats"></a>
2025-08-20T17:42:26.5794948Z 
2025-08-20T17:42:26.5795023Z # api.routes.stats
2025-08-20T17:42:26.5795126Z 
2025-08-20T17:42:26.5795203Z <a id="api.routes.roi"></a>
2025-08-20T17:42:26.5795338Z 
2025-08-20T17:42:26.5795405Z # api.routes.roi
2025-08-20T17:42:26.5795508Z 
2025-08-20T17:42:26.5795590Z <a id="api.routes.health"></a>
2025-08-20T17:42:26.5795739Z 
2025-08-20T17:42:26.5795810Z # api.routes.health
2025-08-20T17:42:26.5795917Z 
2025-08-20T17:42:26.5796015Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T17:42:26.5796180Z 
2025-08-20T17:42:26.5796245Z #### MAX\_SKEW
2025-08-20T17:42:26.5796348Z 
2025-08-20T17:42:26.5796412Z seconds
2025-08-20T17:42:26.5796634Z 
2025-08-20T17:42:26.5796725Z <a id="api.routes.health.health"></a>
2025-08-20T17:42:26.5796894Z 
2025-08-20T17:42:26.5796958Z #### health
2025-08-20T17:42:26.5797049Z 
2025-08-20T17:42:26.5797121Z ```python
2025-08-20T17:42:26.5797322Z @router.get("/health", include_in_schema=False)
2025-08-20T17:42:26.5797714Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T17:42:26.5798075Z ```
2025-08-20T17:42:26.5798161Z 
2025-08-20T17:42:26.5798278Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T17:42:26.5798471Z 
2025-08-20T17:42:26.5798567Z <a id="api.routes.repository"></a>
2025-08-20T17:42:26.5798726Z 
2025-08-20T17:42:26.5798804Z # api.routes.repository
2025-08-20T17:42:26.5798936Z 
2025-08-20T17:42:26.5799015Z <a id="api.routes"></a>
2025-08-20T17:42:26.5799139Z 
2025-08-20T17:42:26.5799206Z # api.routes
2025-08-20T17:42:26.5799314Z 
2025-08-20T17:42:26.5799398Z <a id="api.models.fee"></a>
2025-08-20T17:42:26.5799533Z 
2025-08-20T17:42:26.5799609Z # api.models.fee
2025-08-20T17:42:26.5799727Z 
2025-08-20T17:42:26.5799800Z <a id="api.models"></a>
2025-08-20T17:42:26.5799925Z 
2025-08-20T17:42:26.5799992Z # api.models
2025-08-20T17:42:26.5800087Z 
2025-08-20T17:42:26.5800168Z <a id="api.roi_repository"></a>
2025-08-20T17:42:26.5800462Z 
2025-08-20T17:42:26.5800538Z # api.roi\_repository
2025-08-20T17:42:26.5800662Z 
2025-08-20T17:42:26.5800737Z <a id="api.main"></a>
2025-08-20T17:42:26.5800850Z 
2025-08-20T17:42:26.5800916Z # api.main
2025-08-20T17:42:26.5801010Z 
2025-08-20T17:42:26.5801094Z <a id="api.main.ready"></a>
2025-08-20T17:42:26.5801223Z 
2025-08-20T17:42:26.5801286Z #### ready
2025-08-20T17:42:26.5801383Z 
2025-08-20T17:42:26.5801448Z ```python
2025-08-20T17:42:26.5801712Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T17:42:26.5802146Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T17:42:26.5802497Z                                                                       str]
2025-08-20T17:42:26.5802730Z ```
2025-08-20T17:42:26.5802940Z 
2025-08-20T17:42:26.5803040Z Return 200 only when migrations are at head.
2025-08-20T17:42:26.5803212Z 
2025-08-20T17:42:26.5803286Z <a id="api.config"></a>
2025-08-20T17:42:26.5803412Z 
2025-08-20T17:42:26.5803478Z # api.config
2025-08-20T17:42:26.5803572Z 
2025-08-20T17:42:26.5803659Z <a id="api.security"></a>
2025-08-20T17:42:26.5803790Z 
2025-08-20T17:42:26.5803858Z # api.security
2025-08-20T17:42:26.5803958Z 
2025-08-20T17:42:26.5804031Z <a id="etl"></a>
2025-08-20T17:42:26.5804133Z 
2025-08-20T17:42:26.5804196Z # etl
2025-08-20T17:42:26.5804290Z 
2025-08-20T17:42:26.5804374Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T17:42:26.5804521Z 
2025-08-20T17:42:26.5804596Z # etl.fba\_fee\_ingestor
2025-08-20T17:42:26.5804724Z 
2025-08-20T17:42:26.5804806Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T17:42:26.5804952Z 
2025-08-20T17:42:26.5805031Z # etl.sp\_fees\_ingestor
2025-08-20T17:42:26.5805152Z 
2025-08-20T17:42:26.5805233Z <a id="etl.keepa_ingestor"></a>
2025-08-20T17:42:26.5805387Z 
2025-08-20T17:42:26.5805459Z # etl.keepa\_ingestor
2025-08-20T17:42:26.5805575Z 
2025-08-20T17:42:26.5805643Z <a id="etl.db"></a>
2025-08-20T17:42:26.5805754Z 
2025-08-20T17:42:26.5805818Z # etl.db
2025-08-20T17:42:26.5805907Z 
2025-08-20T17:42:26.5805997Z <a id="etl.dialects.schemas"></a>
2025-08-20T17:42:26.5806143Z 
2025-08-20T17:42:26.5806220Z # etl.dialects.schemas
2025-08-20T17:42:26.5806342Z 
2025-08-20T17:42:26.5806450Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T17:42:26.5806632Z 
2025-08-20T17:42:26.5806723Z # etl.dialects.amazon\_reimbursements
2025-08-20T17:42:26.5806887Z 
2025-08-20T17:42:26.5806982Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T17:42:26.5807158Z 
2025-08-20T17:42:26.5807257Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T17:42:26.5807416Z 
2025-08-20T17:42:26.5807508Z <a id="etl.dialects.test_generic"></a>
2025-08-20T17:42:26.5807674Z 
2025-08-20T17:42:26.5807756Z # etl.dialects.test\_generic
2025-08-20T17:42:26.5808043Z 
2025-08-20T17:42:26.5808141Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T17:42:26.5808313Z 
2025-08-20T17:42:26.5808400Z # etl.dialects.amazon\_returns
2025-08-20T17:42:26.5808540Z 
2025-08-20T17:42:26.5808645Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T17:42:26.5808816Z 
2025-08-20T17:42:26.5808903Z # etl.dialects.amazon\_fee\_preview
2025-08-20T17:42:26.5809062Z 
2025-08-20T17:42:26.5809170Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T17:42:26.5809351Z 
2025-08-20T17:42:26.5809442Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T17:42:26.5809609Z 
2025-08-20T17:42:26.5809705Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T17:42:26.5809874Z 
2025-08-20T17:42:26.5809967Z # etl.dialects.amazon\_settlements
2025-08-20T17:42:26.5810116Z 
2025-08-20T17:42:26.5810194Z <a id="etl.dialects"></a>
2025-08-20T17:42:26.5810465Z 
2025-08-20T17:42:26.5810535Z # etl.dialects
2025-08-20T17:42:26.5810639Z 
2025-08-20T17:42:26.5810709Z <a id="ingest"></a>
2025-08-20T17:42:26.5810832Z 
2025-08-20T17:42:26.5810903Z # ingest
2025-08-20T17:42:26.5810992Z 
2025-08-20T17:42:26.5811083Z <a id="ingest.maintenance"></a>
2025-08-20T17:42:26.5811225Z 
2025-08-20T17:42:26.5811300Z # ingest.maintenance
2025-08-20T17:42:26.5811417Z 
2025-08-20T17:42:26.5811505Z <a id="ingest.copy_loader"></a>
2025-08-20T17:42:26.5811643Z 
2025-08-20T17:42:26.5811717Z # ingest.copy\_loader
2025-08-20T17:42:26.5811842Z 
2025-08-20T17:42:26.5811947Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T17:42:26.5812134Z 
2025-08-20T17:42:26.5812218Z #### copy\_df\_via\_temp
2025-08-20T17:42:26.5812346Z 
2025-08-20T17:42:26.5812412Z ```python
2025-08-20T17:42:26.5812591Z def copy_df_via_temp(engine: Engine,
2025-08-20T17:42:26.5812827Z                      df: pd.DataFrame,
2025-08-20T17:42:26.5813152Z                      target_table: str,
2025-08-20T17:42:26.5813463Z                      *,
2025-08-20T17:42:26.5813678Z                      target_schema: Optional[str] = None,
2025-08-20T17:42:26.5813947Z                      columns: Sequence[str],
2025-08-20T17:42:26.5814358Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T17:42:26.5814640Z                      analyze_after: bool = False,
2025-08-20T17:42:26.5814906Z                      connection: Any | None = None) -> int
2025-08-20T17:42:26.5815150Z ```
2025-08-20T17:42:26.5815237Z 
2025-08-20T17:42:26.5815391Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T17:42:26.5815634Z 
2025-08-20T17:42:26.5815722Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T17:42:26.5815880Z 
2025-08-20T17:42:26.5815963Z # ingest.tests.test\_smoke
2025-08-20T17:42:26.5816101Z 
2025-08-20T17:42:26.5816181Z <a id="ingest.tests"></a>
2025-08-20T17:42:26.5816308Z 
2025-08-20T17:42:26.5816382Z # ingest.tests
2025-08-20T17:42:26.5816482Z 
2025-08-20T17:42:26.5816569Z <a id="ingest.upload_router"></a>
2025-08-20T17:42:26.5816725Z 
2025-08-20T17:42:26.5816802Z # ingest.upload\_router
2025-08-20T17:42:26.5816928Z 
2025-08-20T17:42:26.5817016Z <a id="ingest.email_watcher"></a>
2025-08-20T17:42:26.5817167Z 
2025-08-20T17:42:26.5817242Z # ingest.email\_watcher
2025-08-20T17:42:26.5817357Z 
2025-08-20T17:42:26.5817452Z <a id="ingest.email_watcher.main"></a>
2025-08-20T17:42:26.5817612Z 
2025-08-20T17:42:26.5817677Z #### main
2025-08-20T17:42:26.5817773Z 
2025-08-20T17:42:26.5817838Z ```python
2025-08-20T17:42:26.5818004Z def main() -> dict[str, str]
2025-08-20T17:42:26.5818208Z ```
2025-08-20T17:42:26.5818293Z 
2025-08-20T17:42:26.5818433Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T17:42:26.5818666Z 
2025-08-20T17:42:26.5818795Z Returns {"status": "success"} when processing completes.
2025-08-20T17:42:26.5819001Z 
2025-08-20T17:42:26.5819084Z <a id="ingest.tasks"></a>
2025-08-20T17:42:26.5819209Z 
2025-08-20T17:42:26.5819277Z # ingest.tasks
2025-08-20T17:42:26.5819397Z 
2025-08-20T17:42:26.5819498Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T17:42:26.5819677Z 
2025-08-20T17:42:26.5819879Z #### task\_import\_file
2025-08-20T17:42:26.5820003Z 
2025-08-20T17:42:26.5820074Z ```python
2025-08-20T17:42:26.5820435Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T17:42:26.5820725Z def task_import_file(self: Any,
2025-08-20T17:42:26.5820935Z                      uri: str,
2025-08-20T17:42:26.5821158Z                      report_type: str | None = None,
2025-08-20T17:42:26.5821425Z                      force: bool = False) -> dict[str, Any]
2025-08-20T17:42:26.5821674Z ```
2025-08-20T17:42:26.5821761Z 
2025-08-20T17:42:26.5821893Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T17:42:26.5822107Z 
2025-08-20T17:42:26.5822193Z <a id="ingest.celery_app"></a>
2025-08-20T17:42:26.5822338Z 
2025-08-20T17:42:26.5822418Z # ingest.celery\_app
2025-08-20T17:42:26.5822535Z 
2025-08-20T17:42:26.5822622Z <a id="ingest.ingest_router"></a>
2025-08-20T17:42:26.5822777Z 
2025-08-20T17:42:26.5822854Z # ingest.ingest\_router
2025-08-20T17:42:26.5822975Z 
2025-08-20T17:42:26.5823059Z <a id="logistics_etl"></a>
2025-08-20T17:42:26.5823198Z 
2025-08-20T17:42:26.5823267Z # logistics\_etl
2025-08-20T17:42:26.5823374Z 
2025-08-20T17:42:26.5823460Z Daily logistics ETL job.
2025-08-20T17:42:26.5823582Z 
2025-08-20T17:42:26.5823665Z <a id="logistics_etl.__main__"></a>
2025-08-20T17:42:26.5823823Z 
2025-08-20T17:42:26.5823902Z # logistics\_etl.\_\_main\_\_
2025-08-20T17:42:26.5824037Z 
2025-08-20T17:42:26.5824116Z <a id="logistics_etl.dsn"></a>
2025-08-20T17:42:26.5824257Z 
2025-08-20T17:42:26.5824327Z # logistics\_etl.dsn
2025-08-20T17:42:26.5824439Z 
2025-08-20T17:42:26.5824561Z Local DSN builder to avoid cross-service dependency.
2025-08-20T17:42:26.5824758Z 
2025-08-20T17:42:26.5824848Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T17:42:26.5825017Z 
2025-08-20T17:42:26.5825083Z #### build\_dsn
2025-08-20T17:42:26.5825186Z 
2025-08-20T17:42:26.5825253Z ```python
2025-08-20T17:42:26.5825433Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:42:26.5825655Z ```
2025-08-20T17:42:26.5825749Z 
2025-08-20T17:42:26.5826008Z Return a Postgres DSN assembled from environment variables.
2025-08-20T17:42:26.5826228Z 
2025-08-20T17:42:26.5826379Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T17:42:26.5826766Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T17:42:26.5827109Z error when any required variable is missing.
2025-08-20T17:42:26.5827281Z 
2025-08-20T17:42:26.5827375Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T17:42:26.5827549Z 
2025-08-20T17:42:26.5827634Z # logistics\_etl.tests.conftest
2025-08-20T17:42:26.5827777Z 
2025-08-20T17:42:26.5827888Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T17:42:26.5828074Z 
2025-08-20T17:42:26.5828167Z # logistics\_etl.tests.test\_repository
2025-08-20T17:42:26.5828337Z 
2025-08-20T17:42:26.5828431Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T17:42:26.5828599Z 
2025-08-20T17:42:26.5828682Z # logistics\_etl.tests.test\_cron
2025-08-20T17:42:26.5828840Z 
2025-08-20T17:42:26.5828941Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T17:42:26.5829120Z 
2025-08-20T17:42:26.5829212Z # logistics\_etl.tests.test\_imports
2025-08-20T17:42:26.5829368Z 
2025-08-20T17:42:26.5829459Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T17:42:26.5829631Z 
2025-08-20T17:42:26.5829715Z # logistics\_etl.tests.test\_smoke
2025-08-20T17:42:26.5829864Z 
2025-08-20T17:42:26.5829958Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T17:42:26.5830133Z 
2025-08-20T17:42:26.5830334Z # logistics\_etl.tests.test\_client
2025-08-20T17:42:26.5830488Z 
2025-08-20T17:42:26.5830577Z <a id="logistics_etl.tests"></a>
2025-08-20T17:42:26.5830720Z 
2025-08-20T17:42:26.5830793Z # logistics\_etl.tests
2025-08-20T17:42:26.5830917Z 
2025-08-20T17:42:26.5830997Z <a id="logistics_etl.flow"></a>
2025-08-20T17:42:26.5831139Z 
2025-08-20T17:42:26.5831211Z # logistics\_etl.flow
2025-08-20T17:42:26.5831333Z 
2025-08-20T17:42:26.5831417Z <a id="logistics_etl.client"></a>
2025-08-20T17:42:26.5831695Z 
2025-08-20T17:42:26.5909644Z # logistics\_etl.client
2025-08-20T17:42:26.5909930Z 
2025-08-20T17:42:26.5910110Z <a id="logistics_etl.cron"></a>
2025-08-20T17:42:26.5910589Z 
2025-08-20T17:42:26.5910740Z # logistics\_etl.cron
2025-08-20T17:42:26.5910994Z 
2025-08-20T17:42:26.5911167Z <a id="logistics_etl.db"></a>
2025-08-20T17:42:26.5911414Z 
2025-08-20T17:42:26.5911505Z # logistics\_etl.db
2025-08-20T17:42:26.5911655Z 
2025-08-20T17:42:26.5911771Z <a id="logistics_etl.repository"></a>
2025-08-20T17:42:26.5911979Z 
2025-08-20T17:42:26.5912080Z # logistics\_etl.repository
2025-08-20T17:42:26.5912268Z 
2025-08-20T17:42:26.5912359Z <a id="alert_bot"></a>
2025-08-20T17:42:26.5912505Z 
2025-08-20T17:42:26.5912597Z # alert\_bot
2025-08-20T17:42:26.5912723Z 
2025-08-20T17:42:26.5912833Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T17:42:26.5913106Z 
2025-08-20T17:42:26.5913289Z # alert\_bot.tests.test\_smoke
2025-08-20T17:42:26.5913516Z 
2025-08-20T17:42:26.5913617Z <a id="alert_bot.tests"></a>
2025-08-20T17:42:26.5913807Z 
2025-08-20T17:42:26.5913903Z # alert\_bot.tests
2025-08-20T17:42:26.5914036Z 
2025-08-20T17:42:26.5914146Z <a id="alert_bot.alert_bot"></a>
2025-08-20T17:42:26.5914324Z 
2025-08-20T17:42:26.5914416Z # alert\_bot.alert\_bot
2025-08-20T17:42:26.5914573Z 
2025-08-20T17:42:26.5914669Z <a id="alert_bot.rules"></a>
2025-08-20T17:42:26.5914832Z 
2025-08-20T17:42:26.5914917Z # alert\_bot.rules
2025-08-20T17:42:26.5915027Z 
2025-08-20T17:42:26.5915096Z <a id="common"></a>
2025-08-20T17:42:26.5915203Z 
2025-08-20T17:42:26.5915270Z # common
2025-08-20T17:42:26.5915359Z 
2025-08-20T17:42:26.5915435Z <a id="common.dsn"></a>
2025-08-20T17:42:26.5915554Z 
2025-08-20T17:42:26.5915626Z # common.dsn
2025-08-20T17:42:26.5915724Z 
2025-08-20T17:42:26.5915812Z <a id="common.dsn.build_dsn"></a>
2025-08-20T17:42:26.5915977Z 
2025-08-20T17:42:26.5916044Z #### build\_dsn
2025-08-20T17:42:26.5916149Z 
2025-08-20T17:42:26.5916216Z ```python
2025-08-20T17:42:26.5916403Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:42:26.5916639Z ```
2025-08-20T17:42:26.5916905Z 
2025-08-20T17:42:26.5917030Z Return a Postgres DSN, validating required variables.
2025-08-20T17:42:26.5917236Z 
2025-08-20T17:42:26.5917429Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T17:42:26.5917861Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T17:42:26.5918271Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T17:42:26.5918586Z missing.
2025-08-20T17:42:26.5918673Z 
2025-08-20T17:42:26.5918758Z <a id="common.models_vendor"></a>
2025-08-20T17:42:26.5918911Z 
2025-08-20T17:42:26.5918998Z # common.models\_vendor
2025-08-20T17:42:26.5919122Z 
2025-08-20T17:42:26.5919215Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T17:42:26.5919392Z 
2025-08-20T17:42:26.5919462Z ## Vendor Objects
2025-08-20T17:42:26.5919572Z 
2025-08-20T17:42:26.5919639Z ```python
2025-08-20T17:42:26.5919869Z class Vendor(Base)
2025-08-20T17:42:26.5920048Z ```
2025-08-20T17:42:26.5920139Z 
2025-08-20T17:42:26.5920361Z Vendor of inventory items.
2025-08-20T17:42:26.5920498Z 
2025-08-20T17:42:26.5920609Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T17:42:26.5920790Z 
2025-08-20T17:42:26.5920866Z ## VendorPrice Objects
2025-08-20T17:42:26.5920993Z 
2025-08-20T17:42:26.5921057Z ```python
2025-08-20T17:42:26.5921219Z class VendorPrice(Base)
2025-08-20T17:42:26.5921404Z ```
2025-08-20T17:42:26.5921487Z 
2025-08-20T17:42:26.5921594Z Association table linking vendors to pricing.
2025-08-20T17:42:26.5921780Z 
2025-08-20T17:42:26.5921857Z <a id="common.db_url"></a>
2025-08-20T17:42:26.5921989Z 
2025-08-20T17:42:26.5922059Z # common.db\_url
2025-08-20T17:42:26.5922165Z 
2025-08-20T17:42:26.5922250Z <a id="common.db_url.build_url"></a>
2025-08-20T17:42:26.5922411Z 
2025-08-20T17:42:26.5922479Z #### build\_url
2025-08-20T17:42:26.5922580Z 
2025-08-20T17:42:26.5922651Z ```python
2025-08-20T17:42:26.5922825Z def build_url(async_: bool = True) -> str
2025-08-20T17:42:26.5923186Z ```
2025-08-20T17:42:26.5923275Z 
2025-08-20T17:42:26.5923383Z Return Postgres DSN from environment variables.
2025-08-20T17:42:26.5923576Z 
2025-08-20T17:42:26.5923655Z <a id="common.keepa"></a>
2025-08-20T17:42:26.5923781Z 
2025-08-20T17:42:26.5923850Z # common.keepa
2025-08-20T17:42:26.5923973Z 
2025-08-20T17:42:26.5924047Z <a id="common.llm"></a>
2025-08-20T17:42:26.5924166Z 
2025-08-20T17:42:26.5924239Z # common.llm
2025-08-20T17:42:26.5924336Z 
2025-08-20T17:42:26.5924416Z <a id="common.settings"></a>
2025-08-20T17:42:26.5924557Z 
2025-08-20T17:42:26.5924627Z # common.settings
2025-08-20T17:42:26.5924733Z 
2025-08-20T17:42:26.5924807Z <a id="common.db"></a>
2025-08-20T17:42:26.5924930Z 
2025-08-20T17:42:26.5925004Z # common.db
2025-08-20T17:42:26.5925098Z 
2025-08-20T17:42:26.5925200Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T17:42:26.5925379Z 
2025-08-20T17:42:26.5925463Z #### build\_sqlalchemy\_url
2025-08-20T17:42:26.5925598Z 
2025-08-20T17:42:26.5925672Z ```python
2025-08-20T17:42:26.5925859Z def build_sqlalchemy_url() -> str
2025-08-20T17:42:26.5926082Z ```
2025-08-20T17:42:26.5926167Z 
2025-08-20T17:42:26.5926298Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T17:42:26.5926480Z 
2025-08-20T17:42:26.5926575Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T17:42:26.5926742Z 
2025-08-20T17:42:26.5926823Z #### build\_asyncpg\_dsn
2025-08-20T17:42:26.5926948Z 
2025-08-20T17:42:26.5927014Z ```python
2025-08-20T17:42:26.5927191Z def build_asyncpg_dsn() -> str
2025-08-20T17:42:26.5927395Z ```
2025-08-20T17:42:26.5927485Z 
2025-08-20T17:42:26.5927614Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T17:42:26.5927825Z 
2025-08-20T17:42:26.5927913Z <a id="common.db.refresh_mvs"></a>
2025-08-20T17:42:26.5928072Z 
2025-08-20T17:42:26.5928140Z #### refresh\_mvs
2025-08-20T17:42:26.5928244Z 
2025-08-20T17:42:26.5928314Z ```python
2025-08-20T17:42:26.5928513Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T17:42:26.5928769Z ```
2025-08-20T17:42:26.5928856Z 
2025-08-20T17:42:26.5929109Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T17:42:26.5929334Z 
2025-08-20T17:42:26.5929413Z <a id="common.config"></a>
2025-08-20T17:42:26.5929544Z 
2025-08-20T17:42:26.5929621Z # common.config
2025-08-20T17:42:26.5929725Z 
2025-08-20T17:42:26.5929802Z <a id="common.base"></a>
2025-08-20T17:42:26.5929924Z 
2025-08-20T17:42:26.5929997Z # common.base
2025-08-20T17:42:26.5930096Z 
2025-08-20T17:42:26.5930177Z <a id="common.base.Base"></a>
2025-08-20T17:42:26.5930425Z 
2025-08-20T17:42:26.5930493Z ## Base Objects
2025-08-20T17:42:26.5930594Z 
2025-08-20T17:42:26.5930660Z ```python
2025-08-20T17:42:26.5930840Z class Base(DeclarativeBase)
2025-08-20T17:42:26.5931038Z ```
2025-08-20T17:42:26.5931121Z 
2025-08-20T17:42:26.5931206Z Base class for SQLAlchemy models.
2025-08-20T17:42:26.5931356Z 
2025-08-20T17:42:26.5931438Z <a id="repricer"></a>
2025-08-20T17:42:26.5931556Z 
2025-08-20T17:42:26.5931620Z # repricer
2025-08-20T17:42:26.5931718Z 
2025-08-20T17:42:26.5931813Z <a id="repricer.app.schemas"></a>
2025-08-20T17:42:26.5931970Z 
2025-08-20T17:42:26.5932049Z # repricer.app.schemas
2025-08-20T17:42:26.5932179Z 
2025-08-20T17:42:26.5932265Z <a id="repricer.app.deps"></a>
2025-08-20T17:42:26.5932411Z 
2025-08-20T17:42:26.5932493Z # repricer.app.deps
2025-08-20T17:42:26.5932607Z 
2025-08-20T17:42:26.5932730Z Placeholder module for Keepa / SP-API clients.
2025-08-20T17:42:26.5932927Z 
2025-08-20T17:42:26.5933013Z <a id="repricer.app.logic"></a>
2025-08-20T17:42:26.5933160Z 
2025-08-20T17:42:26.5933236Z # repricer.app.logic
2025-08-20T17:42:26.5933363Z 
2025-08-20T17:42:26.5933462Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T17:42:26.5933642Z 
2025-08-20T17:42:26.5933715Z #### MIN\_MARGIN
2025-08-20T17:42:26.5933821Z 
2025-08-20T17:42:26.5933886Z 15 % ROI
2025-08-20T17:42:26.5933982Z 
2025-08-20T17:42:26.5934088Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T17:42:26.5934275Z 
2025-08-20T17:42:26.5934347Z #### compute\_price
2025-08-20T17:42:26.5934652Z 
2025-08-20T17:42:26.5934722Z ```python
2025-08-20T17:42:26.5934975Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T17:42:26.5935282Z ```
2025-08-20T17:42:26.5935366Z 
2025-08-20T17:42:26.5935482Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T17:42:26.5935763Z Replace with real competitive logic later.
2025-08-20T17:42:26.5935941Z 
2025-08-20T17:42:26.5936026Z <a id="repricer.app.main"></a>
2025-08-20T17:42:26.5936173Z 
2025-08-20T17:42:26.5936247Z # repricer.app.main
2025-08-20T17:42:26.5936365Z 
2025-08-20T17:42:26.5936444Z <a id="repricer.app"></a>
2025-08-20T17:42:26.5936573Z 
2025-08-20T17:42:26.5936649Z # repricer.app
2025-08-20T17:42:26.5936751Z 
2025-08-20T17:42:26.5936843Z <a id="repricer.tests.test_imports"></a>
2025-08-20T17:42:26.5937016Z 
2025-08-20T17:42:26.5937098Z # repricer.tests.test\_imports
2025-08-20T17:42:26.5937237Z 
2025-08-20T17:42:26.5937326Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T17:42:26.5937497Z 
2025-08-20T17:42:26.5937585Z # repricer.tests.test\_smoke
2025-08-20T17:42:26.5937727Z 
2025-08-20T17:42:26.5937814Z <a id="repricer.tests"></a>
2025-08-20T17:42:26.5937947Z 
2025-08-20T17:42:26.5938017Z # repricer.tests
2025-08-20T17:42:26.5938123Z 
2025-08-20T17:42:26.5938194Z <a id="db"></a>
2025-08-20T17:42:26.5938294Z 
2025-08-20T17:42:26.5938356Z # db
2025-08-20T17:42:26.5938447Z 
2025-08-20T17:42:26.5938524Z <a id="db.utils.views"></a>
2025-08-20T17:42:26.5938656Z 
2025-08-20T17:42:26.5938729Z # db.utils.views
2025-08-20T17:42:26.5938831Z 
2025-08-20T17:42:26.5938924Z <a id="db.utils.views.replace_view"></a>
2025-08-20T17:42:26.5939091Z 
2025-08-20T17:42:26.5939165Z #### replace\_view
2025-08-20T17:42:26.5939274Z 
2025-08-20T17:42:26.5939337Z ```python
2025-08-20T17:42:26.5939537Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T17:42:26.5939786Z ```
2025-08-20T17:42:26.5939877Z 
2025-08-20T17:42:26.5939971Z Drop and recreate a SQL view atomically.
2025-08-20T17:42:26.5940141Z 
2025-08-20T17:42:26.5940330Z <a id="db.utils"></a>
2025-08-20T17:42:26.5940567Z 
2025-08-20T17:42:26.5940632Z # db.utils
2025-08-20T17:42:26.5940722Z 
2025-08-20T17:42:26.5940809Z <a id="price_importer"></a>
2025-08-20T17:42:26.5940939Z 
2025-08-20T17:42:26.5941010Z # price\_importer
2025-08-20T17:42:26.5941122Z 
2025-08-20T17:42:26.5941226Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T17:42:26.5941411Z 
2025-08-20T17:42:26.5941510Z # price\_importer.services\_common.dsn
2025-08-20T17:42:26.5941675Z 
2025-08-20T17:42:26.5941802Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T17:42:26.5942011Z 
2025-08-20T17:42:26.5942084Z #### build\_dsn
2025-08-20T17:42:26.5942187Z 
2025-08-20T17:42:26.5942255Z ```python
2025-08-20T17:42:26.5942437Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:42:26.5942662Z ```
2025-08-20T17:42:26.5942753Z 
2025-08-20T17:42:26.5942821Z Return safe DSN.
2025-08-20T17:42:26.5942927Z 
2025-08-20T17:42:26.5943114Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T17:42:26.5943487Z Falls back to individual PG_* variables.
2025-08-20T17:42:26.5944012Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T17:42:26.5944219Z 
2025-08-20T17:42:26.5944351Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T17:42:26.5944564Z 
2025-08-20T17:42:26.5944677Z # price\_importer.services\_common.models\_vendor
2025-08-20T17:42:26.5944869Z 
2025-08-20T17:42:26.5944983Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T17:42:26.5945170Z 
2025-08-20T17:42:26.5945267Z # price\_importer.services\_common.db\_url
2025-08-20T17:42:26.5945440Z 
2025-08-20T17:42:26.5945581Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T17:42:26.5945798Z 
2025-08-20T17:42:26.5945867Z #### build\_url
2025-08-20T17:42:26.5945979Z 
2025-08-20T17:42:26.5946045Z ```python
2025-08-20T17:42:26.5946222Z def build_url(async_: bool = True) -> str
2025-08-20T17:42:26.5946453Z ```
2025-08-20T17:42:26.5946538Z 
2025-08-20T17:42:26.5946778Z Return Postgres DSN from environment variables.
2025-08-20T17:42:26.5946973Z 
2025-08-20T17:42:26.5947081Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T17:42:26.5947274Z 
2025-08-20T17:42:26.5947367Z # price\_importer.services\_common.keepa
2025-08-20T17:42:26.5947536Z 
2025-08-20T17:42:26.5947638Z <a id="price_importer.services_common.llm"></a>
2025-08-20T17:42:26.5947823Z 
2025-08-20T17:42:26.5947913Z # price\_importer.services\_common.llm
2025-08-20T17:42:26.5948079Z 
2025-08-20T17:42:26.5948201Z <a id="price_importer.services_common.settings"></a>
2025-08-20T17:42:26.5948393Z 
2025-08-20T17:42:26.5948491Z # price\_importer.services\_common.settings
2025-08-20T17:42:26.5948671Z 
2025-08-20T17:42:26.5948774Z <a id="price_importer.services_common.db"></a>
2025-08-20T17:42:26.5948954Z 
2025-08-20T17:42:26.5949043Z # price\_importer.services\_common.db
2025-08-20T17:42:26.5949209Z 
2025-08-20T17:42:26.5949364Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T17:42:26.5949615Z 
2025-08-20T17:42:26.5949707Z #### build\_sqlalchemy\_url
2025-08-20T17:42:26.5949841Z 
2025-08-20T17:42:26.5949908Z ```python
2025-08-20T17:42:26.5950093Z def build_sqlalchemy_url() -> str
2025-08-20T17:42:26.5950409Z ```
2025-08-20T17:42:26.5950501Z 
2025-08-20T17:42:26.5950600Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T17:42:26.5950775Z 
2025-08-20T17:42:26.5950922Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T17:42:26.5951150Z 
2025-08-20T17:42:26.5951226Z #### build\_asyncpg\_dsn
2025-08-20T17:42:26.5951352Z 
2025-08-20T17:42:26.5951425Z ```python
2025-08-20T17:42:26.5951596Z def build_asyncpg_dsn() -> str
2025-08-20T17:42:26.5951798Z ```
2025-08-20T17:42:26.5951881Z 
2025-08-20T17:42:26.5952006Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T17:42:26.5952222Z 
2025-08-20T17:42:26.5952347Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T17:42:26.5952551Z 
2025-08-20T17:42:26.5952630Z #### refresh\_mvs
2025-08-20T17:42:26.5952866Z 
2025-08-20T17:42:26.5952931Z ```python
2025-08-20T17:42:26.5953131Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T17:42:26.5953377Z ```
2025-08-20T17:42:26.5953467Z 
2025-08-20T17:42:26.5953600Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T17:42:26.5953813Z 
2025-08-20T17:42:26.5953910Z <a id="price_importer.services_common"></a>
2025-08-20T17:42:26.5954089Z 
2025-08-20T17:42:26.5954180Z # price\_importer.services\_common
2025-08-20T17:42:26.5954335Z 
2025-08-20T17:42:26.5954444Z <a id="price_importer.services_common.base"></a>
2025-08-20T17:42:26.5954626Z 
2025-08-20T17:42:26.5954718Z # price\_importer.services\_common.base
2025-08-20T17:42:26.5954889Z 
2025-08-20T17:42:26.5954979Z <a id="price_importer.normaliser"></a>
2025-08-20T17:42:26.5955155Z 
2025-08-20T17:42:26.5955240Z # price\_importer.normaliser
2025-08-20T17:42:26.5955388Z 
2025-08-20T17:42:26.5955493Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T17:42:26.5955681Z 
2025-08-20T17:42:26.5955783Z # price\_importer.common.models\_vendor
2025-08-20T17:42:26.5955948Z 
2025-08-20T17:42:26.5956046Z <a id="price_importer.common.db_url"></a>
2025-08-20T17:42:26.5956223Z 
2025-08-20T17:42:26.5956311Z # price\_importer.common.db\_url
2025-08-20T17:42:26.5956460Z 
2025-08-20T17:42:26.5956565Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T17:42:26.5956758Z 
2025-08-20T17:42:26.5956822Z #### make\_dsn
2025-08-20T17:42:26.5956922Z 
2025-08-20T17:42:26.5956996Z ```python
2025-08-20T17:42:26.5957176Z def make_dsn(async_: bool = False) -> str
2025-08-20T17:42:26.5957404Z ```
2025-08-20T17:42:26.5957488Z 
2025-08-20T17:42:26.5957572Z Return DSN using shared builder.
2025-08-20T17:42:26.5957720Z 
2025-08-20T17:42:26.5957832Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T17:42:26.5958021Z 
2025-08-20T17:42:26.5958094Z #### build\_url
2025-08-20T17:42:26.5958196Z 
2025-08-20T17:42:26.5958261Z ```python
2025-08-20T17:42:26.5958443Z def build_url(async_: bool = False) -> str
2025-08-20T17:42:26.5958794Z ```
2025-08-20T17:42:26.5958883Z 
2025-08-20T17:42:26.5959008Z Return Postgres DSN built from environment variables.
2025-08-20T17:42:26.5959213Z 
2025-08-20T17:42:26.5959301Z <a id="price_importer.common"></a>
2025-08-20T17:42:26.5959461Z 
2025-08-20T17:42:26.5959542Z # price\_importer.common
2025-08-20T17:42:26.5959669Z 
2025-08-20T17:42:26.5959767Z <a id="price_importer.common.base"></a>
2025-08-20T17:42:26.5959932Z 
2025-08-20T17:42:26.5960017Z # price\_importer.common.base
2025-08-20T17:42:26.5960168Z 
2025-08-20T17:42:26.5960387Z <a id="price_importer.tests.conftest"></a>
2025-08-20T17:42:26.5960565Z 
2025-08-20T17:42:26.5960652Z # price\_importer.tests.conftest
2025-08-20T17:42:26.5960806Z 
2025-08-20T17:42:26.5960907Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T17:42:26.5961105Z 
2025-08-20T17:42:26.5961201Z # price\_importer.tests.test\_reader
2025-08-20T17:42:26.5961360Z 
2025-08-20T17:42:26.5961463Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T17:42:26.5961662Z 
2025-08-20T17:42:26.5961752Z # price\_importer.tests.test\_imports
2025-08-20T17:42:26.5961913Z 
2025-08-20T17:42:26.5962012Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T17:42:26.5962192Z 
2025-08-20T17:42:26.5962280Z # price\_importer.tests.test\_smoke
2025-08-20T17:42:26.5962442Z 
2025-08-20T17:42:26.5962555Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T17:42:26.5962744Z 
2025-08-20T17:42:26.5962835Z # price\_importer.tests.test\_normaliser
2025-08-20T17:42:26.5963011Z 
2025-08-20T17:42:26.5963098Z <a id="price_importer.tests"></a>
2025-08-20T17:42:26.5963250Z 
2025-08-20T17:42:26.5963327Z # price\_importer.tests
2025-08-20T17:42:26.5963456Z 
2025-08-20T17:42:26.5963542Z <a id="price_importer.reader"></a>
2025-08-20T17:42:26.5963698Z 
2025-08-20T17:42:26.5963785Z # price\_importer.reader
2025-08-20T17:42:26.5963912Z 
2025-08-20T17:42:26.5964003Z <a id="price_importer.repository"></a>
2025-08-20T17:42:26.5964173Z 
2025-08-20T17:42:26.5964263Z # price\_importer.repository
2025-08-20T17:42:26.5964536Z 
2025-08-20T17:42:26.5964624Z <a id="price_importer.import"></a>
2025-08-20T17:42:26.5964780Z 
2025-08-20T17:42:26.5964856Z # price\_importer.import
2025-08-20T17:42:26.5964981Z 
2025-08-20T17:42:26.5965057Z <a id="fees_h10"></a>
2025-08-20T17:42:26.5965172Z 
2025-08-20T17:42:26.5965239Z # fees\_h10
2025-08-20T17:42:26.5965341Z 
2025-08-20T17:42:26.5965417Z <a id="fees_h10.worker"></a>
2025-08-20T17:42:26.5965547Z 
2025-08-20T17:42:26.5965615Z # fees\_h10.worker
2025-08-20T17:42:26.5965726Z 
2025-08-20T17:42:26.5965822Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T17:42:26.5965994Z 
2025-08-20T17:42:26.5966076Z #### list\_active\_asins
2025-08-20T17:42:26.5966198Z 
2025-08-20T17:42:26.5966262Z ```python
2025-08-20T17:42:26.5966440Z def list_active_asins() -> list[str]
2025-08-20T17:42:26.5966650Z ```
2025-08-20T17:42:26.5966739Z 
2025-08-20T17:42:26.5966852Z Return known ASINs or an empty list if unavailable.
2025-08-20T17:42:26.5967048Z 
2025-08-20T17:42:26.5967138Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T17:42:26.5967300Z 
2025-08-20T17:42:26.5967380Z # fees\_h10.tests.test\_smoke
2025-08-20T17:42:26.5967518Z 
2025-08-20T17:42:26.5967600Z <a id="fees_h10.tests"></a>
2025-08-20T17:42:26.5967728Z 
2025-08-20T17:42:26.5967796Z # fees\_h10.tests
2025-08-20T17:42:26.5967905Z 
2025-08-20T17:42:26.5967982Z <a id="fees_h10.client"></a>
2025-08-20T17:42:26.5968115Z 
2025-08-20T17:42:26.5968184Z # fees\_h10.client
2025-08-20T17:42:26.5968295Z 
2025-08-20T17:42:26.5968378Z <a id="fees_h10.repository"></a>
2025-08-20T17:42:26.5968521Z 
2025-08-20T17:42:26.5968600Z # fees\_h10.repository
2025-08-20T17:42:26.5968719Z 
2025-08-20T17:42:26.5968823Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T17:42:26.5969002Z 
2025-08-20T17:42:26.5969081Z #### upsert\_fees\_raw
2025-08-20T17:42:26.5969198Z 
2025-08-20T17:42:26.5969262Z ```python
2025-08-20T17:42:26.5969440Z def upsert_fees_raw(engine: Engine,
2025-08-20T17:42:26.5969803Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T17:42:26.5970054Z                     *,
2025-08-20T17:42:26.5970379Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T17:42:26.5970642Z ```
2025-08-20T17:42:26.5970726Z 
2025-08-20T17:42:26.5970814Z Idempotent upsert for fees.
2025-08-20T17:42:26.5970951Z 
2025-08-20T17:42:26.5971103Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T17:42:26.5991431Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T17:42:26.5991865Z Only updates when one of the mutable fields changes.
2025-08-20T17:42:26.5992075Z 
2025-08-20T17:42:26.5992155Z <a id="emailer"></a>
2025-08-20T17:42:26.5992275Z 
2025-08-20T17:42:26.5992349Z # emailer
2025-08-20T17:42:26.5992442Z 
2025-08-20T17:42:26.5992551Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T17:42:26.5992734Z 
2025-08-20T17:42:26.5992833Z # emailer.tests.test\_import\_emailer
2025-08-20T17:42:26.5992999Z 
2025-08-20T17:42:26.5993100Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T17:42:26.5993268Z 
2025-08-20T17:42:26.5993351Z # emailer.tests.test\_smoke
2025-08-20T17:42:26.5993489Z 
2025-08-20T17:42:26.5993567Z <a id="emailer.tests"></a>
2025-08-20T17:42:26.5993706Z 
2025-08-20T17:42:26.5993775Z # emailer.tests
2025-08-20T17:42:26.5993882Z 
2025-08-20T17:42:26.5993973Z <a id="emailer.generate_body"></a>
2025-08-20T17:42:26.5994126Z 
2025-08-20T17:42:26.5994202Z # emailer.generate\_body
2025-08-20T17:42:26.5994335Z 
2025-08-20T17:42:26.5994406Z <a id="llm_server"></a>
2025-08-20T17:42:26.5994525Z 
2025-08-20T17:42:26.5994591Z # llm\_server
2025-08-20T17:42:26.5994697Z 
2025-08-20T17:42:26.5994778Z <a id="llm_server.app"></a>
2025-08-20T17:42:26.5994911Z 
2025-08-20T17:42:26.5994986Z # llm\_server.app
2025-08-20T17:42:26.5995091Z 
