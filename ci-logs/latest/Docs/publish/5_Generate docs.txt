2025-08-18T18:24:28.3973227Z ##[group]Run pydoc-markdown
2025-08-18T18:24:28.3973518Z [36;1mpydoc-markdown[0m
2025-08-18T18:24:28.4016957Z shell: /usr/bin/bash -e {0}
2025-08-18T18:24:28.4017191Z env:
2025-08-18T18:24:28.4017430Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:24:28.4017847Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T18:24:28.4018237Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:24:28.4018573Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:24:28.4018919Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:24:28.4019263Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T18:24:28.4019555Z ##[endgroup]
2025-08-18T18:24:28.6918757Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T18:24:28.6919518Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T18:24:28.6919980Z In "pydoc-markdown.yml"
2025-08-18T18:24:28.6920451Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T18:24:28.6921800Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T18:24:28.6922649Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T18:24:28.6923182Z 
2025-08-18T18:24:29.0194752Z <a id="__init__"></a>
2025-08-18T18:24:29.0196867Z 
2025-08-18T18:24:29.0197032Z # \_\_init\_\_
2025-08-18T18:24:29.0197246Z 
2025-08-18T18:24:29.0197380Z <a id="api"></a>
2025-08-18T18:24:29.0197587Z 
2025-08-18T18:24:29.0197707Z # api
2025-08-18T18:24:29.0197869Z 
2025-08-18T18:24:29.0198017Z <a id="api.errors"></a>
2025-08-18T18:24:29.0198271Z 
2025-08-18T18:24:29.0198391Z # api.errors
2025-08-18T18:24:29.0198574Z 
2025-08-18T18:24:29.0198740Z <a id="api.tests.test_errors_json"></a>
2025-08-18T18:24:29.0199073Z 
2025-08-18T18:24:29.0199240Z # api.tests.test\_errors\_json
2025-08-18T18:24:29.0199512Z 
2025-08-18T18:24:29.0199676Z <a id="api.tests.test_llm"></a>
2025-08-18T18:24:29.0199948Z 
2025-08-18T18:24:29.0200531Z # api.tests.test\_llm
2025-08-18T18:24:29.0200793Z 
2025-08-18T18:24:29.0200952Z <a id="api.tests.test_cors"></a>
2025-08-18T18:24:29.0201236Z 
2025-08-18T18:24:29.0201606Z # api.tests.test\_cors
2025-08-18T18:24:29.0201975Z 
2025-08-18T18:24:29.0202138Z <a id="api.tests.test_imports"></a>
2025-08-18T18:24:29.0202445Z 
2025-08-18T18:24:29.0202590Z # api.tests.test\_imports
2025-08-18T18:24:29.0202838Z 
2025-08-18T18:24:29.0202995Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T18:24:29.0203307Z 
2025-08-18T18:24:29.0203457Z # api.tests.test\_rate\_limit
2025-08-18T18:24:29.0203718Z 
2025-08-18T18:24:29.0203897Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T18:24:29.0204230Z 
2025-08-18T18:24:29.0204348Z #### app
2025-08-18T18:24:29.0204511Z 
2025-08-18T18:24:29.0204637Z noqa: E402
2025-08-18T18:24:29.0204797Z 
2025-08-18T18:24:29.0204953Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T18:24:29.0205250Z 
2025-08-18T18:24:29.0205404Z # api.tests.test\_entrypoint
2025-08-18T18:24:29.0205667Z 
2025-08-18T18:24:29.0205816Z <a id="api.tests.test_health"></a>
2025-08-18T18:24:29.0206081Z 
2025-08-18T18:24:29.0206214Z # api.tests.test\_health
2025-08-18T18:24:29.0206434Z 
2025-08-18T18:24:29.0206570Z <a id="api.logging_config"></a>
2025-08-18T18:24:29.0206809Z 
2025-08-18T18:24:29.0206932Z # api.logging\_config
2025-08-18T18:24:29.0207128Z 
2025-08-18T18:24:29.0207278Z <a id="api.migrations.env"></a>
2025-08-18T18:24:29.0207533Z 
2025-08-18T18:24:29.0207657Z # api.migrations.env
2025-08-18T18:24:29.0207868Z 
2025-08-18T18:24:29.0208077Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T18:24:29.0208419Z 
2025-08-18T18:24:29.0208593Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T18:24:29.0208917Z 
2025-08-18T18:24:29.0209111Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T18:24:29.0209480Z 
2025-08-18T18:24:29.0209661Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T18:24:29.0209970Z 
2025-08-18T18:24:29.0210240Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T18:24:29.0211073Z 
2025-08-18T18:24:29.0211529Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T18:24:29.0211949Z 
2025-08-18T18:24:29.0212182Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T18:24:29.0212553Z 
2025-08-18T18:24:29.0212744Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T18:24:29.0213093Z 
2025-08-18T18:24:29.0213302Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T18:24:29.0213667Z 
2025-08-18T18:24:29.0213846Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T18:24:29.0214193Z 
2025-08-18T18:24:29.0214416Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T18:24:29.0214794Z 
2025-08-18T18:24:29.0214996Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T18:24:29.0215344Z 
2025-08-18T18:24:29.0215552Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T18:24:29.0215916Z 
2025-08-18T18:24:29.0216099Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T18:24:29.0216448Z 
2025-08-18T18:24:29.0216667Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T18:24:29.0217047Z 
2025-08-18T18:24:29.0217233Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T18:24:29.0217572Z 
2025-08-18T18:24:29.0217824Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T18:24:29.0218222Z 
2025-08-18T18:24:29.0218430Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T18:24:29.0218806Z 
2025-08-18T18:24:29.0219029Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T18:24:29.0219409Z 
2025-08-18T18:24:29.0219610Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T18:24:29.0219957Z 
2025-08-18T18:24:29.0220199Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T18:24:29.0220601Z 
2025-08-18T18:24:29.0220818Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T18:24:29.0221179Z 
2025-08-18T18:24:29.0221531Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T18:24:29.0222102Z 
2025-08-18T18:24:29.0222279Z # api.migrations.versions.0001\_baseline
2025-08-18T18:24:29.0222596Z 
2025-08-18T18:24:29.0222760Z <a id="api.migrations.versions"></a>
2025-08-18T18:24:29.0223055Z 
2025-08-18T18:24:29.0223200Z # api.migrations.versions
2025-08-18T18:24:29.0223439Z 
2025-08-18T18:24:29.0223585Z <a id="api.migrations"></a>
2025-08-18T18:24:29.0223822Z 
2025-08-18T18:24:29.0223941Z # api.migrations
2025-08-18T18:24:29.0224133Z 
2025-08-18T18:24:29.0224250Z <a id="api.db"></a>
2025-08-18T18:24:29.0224441Z 
2025-08-18T18:24:29.0224553Z # api.db
2025-08-18T18:24:29.0224710Z 
2025-08-18T18:24:29.0224841Z <a id="api.routes.stats"></a>
2025-08-18T18:24:29.0225085Z 
2025-08-18T18:24:29.0225219Z # api.routes.stats
2025-08-18T18:24:29.0225420Z 
2025-08-18T18:24:29.0225572Z <a id="api.routes.stats.kpi"></a>
2025-08-18T18:24:29.0225858Z 
2025-08-18T18:24:29.0225970Z #### kpi
2025-08-18T18:24:29.0226125Z 
2025-08-18T18:24:29.0226236Z ```python
2025-08-18T18:24:29.0226561Z @router.get("/stats/kpi")
2025-08-18T18:24:29.0226980Z def kpi() -> List[Dict[str, int]]
2025-08-18T18:24:29.0227353Z ```
2025-08-18T18:24:29.0227530Z 
2025-08-18T18:24:29.0227675Z Return KPI metrics (mock).
2025-08-18T18:24:29.0227986Z 
2025-08-18T18:24:29.0228174Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T18:24:29.0228510Z 
2025-08-18T18:24:29.0228638Z #### roi\_by\_vendor
2025-08-18T18:24:29.0228836Z 
2025-08-18T18:24:29.0228957Z ```python
2025-08-18T18:24:29.0229266Z @router.get("/stats/roi_by_vendor")
2025-08-18T18:24:29.0229785Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T18:24:29.0230213Z ```
2025-08-18T18:24:29.0230364Z 
2025-08-18T18:24:29.0230512Z Return ROI percent by vendor.
2025-08-18T18:24:29.0230769Z 
2025-08-18T18:24:29.0230944Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T18:24:29.0231263Z 
2025-08-18T18:24:29.0231562Z #### roi\_trend
2025-08-18T18:24:29.0231759Z 
2025-08-18T18:24:29.0231891Z ```python
2025-08-18T18:24:29.0232188Z @router.get("/stats/roi_trend")
2025-08-18T18:24:29.0232867Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T18:24:29.0233278Z ```
2025-08-18T18:24:29.0233428Z 
2025-08-18T18:24:29.0233553Z Return 30-day ROI trend.
2025-08-18T18:24:29.0233789Z 
2025-08-18T18:24:29.0233927Z <a id="api.routes.roi"></a>
2025-08-18T18:24:29.0234166Z 
2025-08-18T18:24:29.0234285Z # api.routes.roi
2025-08-18T18:24:29.0234470Z 
2025-08-18T18:24:29.0234624Z <a id="api.routes.health"></a>
2025-08-18T18:24:29.0234880Z 
2025-08-18T18:24:29.0235004Z # api.routes.health
2025-08-18T18:24:29.0235212Z 
2025-08-18T18:24:29.0235375Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T18:24:29.0235689Z 
2025-08-18T18:24:29.0235799Z #### MAX\_SKEW
2025-08-18T18:24:29.0235975Z 
2025-08-18T18:24:29.0236077Z seconds
2025-08-18T18:24:29.0236222Z 
2025-08-18T18:24:29.0236382Z <a id="api.routes.health.health"></a>
2025-08-18T18:24:29.0236679Z 
2025-08-18T18:24:29.0236787Z #### health
2025-08-18T18:24:29.0236954Z 
2025-08-18T18:24:29.0237067Z ```python
2025-08-18T18:24:29.0237421Z @router.get("/health", include_in_schema=False)
2025-08-18T18:24:29.0238128Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T18:24:29.0238746Z ```
2025-08-18T18:24:29.0238888Z 
2025-08-18T18:24:29.0239090Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T18:24:29.0239452Z 
2025-08-18T18:24:29.0239616Z <a id="api.routes.repository"></a>
2025-08-18T18:24:29.0239904Z 
2025-08-18T18:24:29.0240042Z # api.routes.repository
2025-08-18T18:24:29.0240295Z 
2025-08-18T18:24:29.0240421Z <a id="api.routes"></a>
2025-08-18T18:24:29.0240635Z 
2025-08-18T18:24:29.0240748Z # api.routes
2025-08-18T18:24:29.0240923Z 
2025-08-18T18:24:29.0241058Z <a id="api.models.fee"></a>
2025-08-18T18:24:29.0241300Z 
2025-08-18T18:24:29.0241657Z # api.models.fee
2025-08-18T18:24:29.0241852Z 
2025-08-18T18:24:29.0241978Z <a id="api.models"></a>
2025-08-18T18:24:29.0242186Z 
2025-08-18T18:24:29.0242295Z # api.models
2025-08-18T18:24:29.0242463Z 
2025-08-18T18:24:29.0242812Z <a id="api.roi_repository"></a>
2025-08-18T18:24:29.0243091Z 
2025-08-18T18:24:29.0243218Z # api.roi\_repository
2025-08-18T18:24:29.0243431Z 
2025-08-18T18:24:29.0243560Z <a id="api.main"></a>
2025-08-18T18:24:29.0243754Z 
2025-08-18T18:24:29.0243861Z # api.main
2025-08-18T18:24:29.0244016Z 
2025-08-18T18:24:29.0244153Z <a id="api.main.ready"></a>
2025-08-18T18:24:29.0244386Z 
2025-08-18T18:24:29.0244487Z #### ready
2025-08-18T18:24:29.0244642Z 
2025-08-18T18:24:29.0244745Z ```python
2025-08-18T18:24:29.0245199Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T18:24:29.0245971Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T18:24:29.0246608Z                                                                       str]
2025-08-18T18:24:29.0247015Z ```
2025-08-18T18:24:29.0247171Z 
2025-08-18T18:24:29.0247348Z Return 200 only when migrations are at head.
2025-08-18T18:24:29.0247673Z 
2025-08-18T18:24:29.0247809Z <a id="api.config"></a>
2025-08-18T18:24:29.0248034Z 
2025-08-18T18:24:29.0248151Z # api.config
2025-08-18T18:24:29.0248318Z 
2025-08-18T18:24:29.0248429Z <a id="etl"></a>
2025-08-18T18:24:29.0248604Z 
2025-08-18T18:24:29.0248707Z # etl
2025-08-18T18:24:29.0248859Z 
2025-08-18T18:24:29.0249000Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T18:24:29.0249258Z 
2025-08-18T18:24:29.0249388Z # etl.fba\_fee\_ingestor
2025-08-18T18:24:29.0249603Z 
2025-08-18T18:24:29.0249741Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T18:24:29.0250012Z 
2025-08-18T18:24:29.0250148Z # etl.sp\_fees\_ingestor
2025-08-18T18:24:29.0250366Z 
2025-08-18T18:24:29.0250501Z <a id="etl.keepa_ingestor"></a>
2025-08-18T18:24:29.0250755Z 
2025-08-18T18:24:29.0250879Z # etl.keepa\_ingestor
2025-08-18T18:24:29.0251085Z 
2025-08-18T18:24:29.0251203Z <a id="etl.db"></a>
2025-08-18T18:24:29.0251579Z 
2025-08-18T18:24:29.0251687Z # etl.db
2025-08-18T18:24:29.0251836Z 
2025-08-18T18:24:29.0251988Z <a id="etl.dialects.schemas"></a>
2025-08-18T18:24:29.0252253Z 
2025-08-18T18:24:29.0252385Z # etl.dialects.schemas
2025-08-18T18:24:29.0252809Z 
2025-08-18T18:24:29.0252990Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T18:24:29.0253335Z 
2025-08-18T18:24:29.0253495Z # etl.dialects.amazon\_reimbursements
2025-08-18T18:24:29.0253784Z 
2025-08-18T18:24:29.0253955Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T18:24:29.0254267Z 
2025-08-18T18:24:29.0254417Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T18:24:29.0254691Z 
2025-08-18T18:24:29.0254843Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T18:24:29.0255157Z 
2025-08-18T18:24:29.0255299Z # etl.dialects.amazon\_returns
2025-08-18T18:24:29.0255560Z 
2025-08-18T18:24:29.0255751Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T18:24:29.0256077Z 
2025-08-18T18:24:29.0256222Z # etl.dialects.amazon\_fee\_preview
2025-08-18T18:24:29.0256500Z 
2025-08-18T18:24:29.0256689Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T18:24:29.0257027Z 
2025-08-18T18:24:29.0257181Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T18:24:29.0257499Z 
2025-08-18T18:24:29.0257672Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T18:24:29.0257987Z 
2025-08-18T18:24:29.0258140Z # etl.dialects.amazon\_settlements
2025-08-18T18:24:29.0258427Z 
2025-08-18T18:24:29.0258628Z <a id="etl.dialects"></a>
2025-08-18T18:24:29.0258861Z 
2025-08-18T18:24:29.0258978Z # etl.dialects
2025-08-18T18:24:29.0259162Z 
2025-08-18T18:24:29.0259274Z <a id="ingest"></a>
2025-08-18T18:24:29.0259464Z 
2025-08-18T18:24:29.0259570Z # ingest
2025-08-18T18:24:29.0259731Z 
2025-08-18T18:24:29.0259870Z <a id="ingest.maintenance"></a>
2025-08-18T18:24:29.0260122Z 
2025-08-18T18:24:29.0260251Z # ingest.maintenance
2025-08-18T18:24:29.0260447Z 
2025-08-18T18:24:29.0260578Z <a id="ingest.copy_loader"></a>
2025-08-18T18:24:29.0260882Z 
2025-08-18T18:24:29.0261025Z # ingest.copy\_loader
2025-08-18T18:24:29.0261247Z 
2025-08-18T18:24:29.0261629Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T18:24:29.0261992Z 
2025-08-18T18:24:29.0262370Z #### copy\_df\_via\_temp
2025-08-18T18:24:29.0262616Z 
2025-08-18T18:24:29.0262745Z ```python
2025-08-18T18:24:29.0263053Z def copy_df_via_temp(engine: Engine,
2025-08-18T18:24:29.0263494Z                      df: pd.DataFrame,
2025-08-18T18:24:29.0263925Z                      target_table: str,
2025-08-18T18:24:29.0264338Z                      *,
2025-08-18T18:24:29.0264720Z                      target_schema: Optional[str] = None,
2025-08-18T18:24:29.0265204Z                      columns: Sequence[str],
2025-08-18T18:24:29.0265698Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T18:24:29.0266219Z                      analyze_after: bool = False,
2025-08-18T18:24:29.0266711Z                      connection: Any | None = None) -> int
2025-08-18T18:24:29.0267113Z ```
2025-08-18T18:24:29.0267259Z 
2025-08-18T18:24:29.0267560Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T18:24:29.0268001Z 
2025-08-18T18:24:29.0268166Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T18:24:29.0268502Z 
2025-08-18T18:24:29.0268651Z # ingest.tests.test\_smoke
2025-08-18T18:24:29.0268904Z 
2025-08-18T18:24:29.0269043Z <a id="ingest.tests"></a>
2025-08-18T18:24:29.0269299Z 
2025-08-18T18:24:29.0269424Z # ingest.tests
2025-08-18T18:24:29.0269619Z 
2025-08-18T18:24:29.0269787Z <a id="ingest.upload_router"></a>
2025-08-18T18:24:29.0270082Z 
2025-08-18T18:24:29.0270229Z # ingest.upload\_router
2025-08-18T18:24:29.0270470Z 
2025-08-18T18:24:29.0270627Z <a id="ingest.email_watcher"></a>
2025-08-18T18:24:29.0270914Z 
2025-08-18T18:24:29.0271056Z # ingest.email\_watcher
2025-08-18T18:24:29.0271295Z 
2025-08-18T18:24:29.0271687Z <a id="ingest.email_watcher.main"></a>
2025-08-18T18:24:29.0272002Z 
2025-08-18T18:24:29.0272126Z #### main
2025-08-18T18:24:29.0272290Z 
2025-08-18T18:24:29.0272407Z ```python
2025-08-18T18:24:29.0272722Z def main() -> dict[str, str]
2025-08-18T18:24:29.0273075Z ```
2025-08-18T18:24:29.0273236Z 
2025-08-18T18:24:29.0273507Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T18:24:29.0274192Z 
2025-08-18T18:24:29.0274434Z Returns {"status": "success"} when processing completes.
2025-08-18T18:24:29.0274831Z 
2025-08-18T18:24:29.0274975Z <a id="ingest.tasks"></a>
2025-08-18T18:24:29.0275213Z 
2025-08-18T18:24:29.0275346Z # ingest.tasks
2025-08-18T18:24:29.0275539Z 
2025-08-18T18:24:29.0275720Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T18:24:29.0276055Z 
2025-08-18T18:24:29.0276188Z #### task\_import\_file
2025-08-18T18:24:29.0276409Z 
2025-08-18T18:24:29.0276520Z ```python
2025-08-18T18:24:29.0276910Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T18:24:29.0277522Z def task_import_file(self: Any,
2025-08-18T18:24:29.0277964Z                      uri: str,
2025-08-18T18:24:29.0278450Z                      report_type: Optional[str] = None,
2025-08-18T18:24:29.0279028Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T18:24:29.0279516Z ```
2025-08-18T18:24:29.0279662Z 
2025-08-18T18:24:29.0279919Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T18:24:29.0280290Z 
2025-08-18T18:24:29.0280433Z <a id="ingest.celery_app"></a>
2025-08-18T18:24:29.0280701Z 
2025-08-18T18:24:29.0280839Z # ingest.celery\_app
2025-08-18T18:24:29.0281055Z 
2025-08-18T18:24:29.0281206Z <a id="ingest.ingest_router"></a>
2025-08-18T18:24:29.0281695Z 
2025-08-18T18:24:29.0281842Z # ingest.ingest\_router
2025-08-18T18:24:29.0282084Z 
2025-08-18T18:24:29.0282220Z <a id="logistics_etl"></a>
2025-08-18T18:24:29.0282466Z 
2025-08-18T18:24:29.0282596Z # logistics\_etl
2025-08-18T18:24:29.0282801Z 
2025-08-18T18:24:29.0282938Z Daily logistics ETL job.
2025-08-18T18:24:29.0283170Z 
2025-08-18T18:24:29.0283323Z <a id="logistics_etl.__main__"></a>
2025-08-18T18:24:29.0283611Z 
2025-08-18T18:24:29.0283747Z # logistics\_etl.\_\_main\_\_
2025-08-18T18:24:29.0284003Z 
2025-08-18T18:24:29.0284139Z <a id="logistics_etl.dsn"></a>
2025-08-18T18:24:29.0284388Z 
2025-08-18T18:24:29.0284515Z # logistics\_etl.dsn
2025-08-18T18:24:29.0284968Z 
2025-08-18T18:24:29.0285188Z Local DSN builder to avoid cross-service dependency.
2025-08-18T18:24:29.0285567Z 
2025-08-18T18:24:29.0285742Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T18:24:29.0286060Z 
2025-08-18T18:24:29.0286174Z #### build\_dsn
2025-08-18T18:24:29.0286362Z 
2025-08-18T18:24:29.0286474Z ```python
2025-08-18T18:24:29.0286828Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:24:29.0287262Z ```
2025-08-18T18:24:29.0287429Z 
2025-08-18T18:24:29.0287693Z Return a Postgres DSN assembled from environment variables.
2025-08-18T18:24:29.0288130Z 
2025-08-18T18:24:29.0288416Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T18:24:29.0289168Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T18:24:29.0289829Z error when any required variable is missing.
2025-08-18T18:24:29.0290178Z 
2025-08-18T18:24:29.0290360Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T18:24:29.0290689Z 
2025-08-18T18:24:29.0290856Z # logistics\_etl.tests.conftest
2025-08-18T18:24:29.0291148Z 
2025-08-18T18:24:29.0291550Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T18:24:29.0291920Z 
2025-08-18T18:24:29.0292101Z # logistics\_etl.tests.test\_repository
2025-08-18T18:24:29.0292418Z 
2025-08-18T18:24:29.0292596Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T18:24:29.0292934Z 
2025-08-18T18:24:29.0293089Z # logistics\_etl.tests.test\_cron
2025-08-18T18:24:29.0293372Z 
2025-08-18T18:24:29.0293549Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T18:24:29.0293896Z 
2025-08-18T18:24:29.0294050Z # logistics\_etl.tests.test\_imports
2025-08-18T18:24:29.0294350Z 
2025-08-18T18:24:29.0294534Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T18:24:29.0294867Z 
2025-08-18T18:24:29.0295022Z # logistics\_etl.tests.test\_smoke
2025-08-18T18:24:29.0295316Z 
2025-08-18T18:24:29.0295494Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T18:24:29.0295829Z 
2025-08-18T18:24:29.0295984Z # logistics\_etl.tests.test\_client
2025-08-18T18:24:29.0296306Z 
2025-08-18T18:24:29.0296763Z <a id="logistics_etl.tests"></a>
2025-08-18T18:24:29.0297054Z 
2025-08-18T18:24:29.0297200Z # logistics\_etl.tests
2025-08-18T18:24:29.0297426Z 
2025-08-18T18:24:29.0297583Z <a id="logistics_etl.flow"></a>
2025-08-18T18:24:29.0297854Z 
2025-08-18T18:24:29.0297985Z # logistics\_etl.flow
2025-08-18T18:24:29.0298206Z 
2025-08-18T18:24:29.0298356Z <a id="logistics_etl.client"></a>
2025-08-18T18:24:29.0298647Z 
2025-08-18T18:24:29.0298784Z # logistics\_etl.client
2025-08-18T18:24:29.0299008Z 
2025-08-18T18:24:29.0299158Z <a id="logistics_etl.cron"></a>
2025-08-18T18:24:29.0299402Z 
2025-08-18T18:24:29.0299527Z # logistics\_etl.cron
2025-08-18T18:24:29.0299750Z 
2025-08-18T18:24:29.0299893Z <a id="logistics_etl.db"></a>
2025-08-18T18:24:29.0300151Z 
2025-08-18T18:24:29.0300280Z # logistics\_etl.db
2025-08-18T18:24:29.0300499Z 
2025-08-18T18:24:29.0300663Z <a id="logistics_etl.repository"></a>
2025-08-18T18:24:29.0300971Z 
2025-08-18T18:24:29.0301138Z # logistics\_etl.repository
2025-08-18T18:24:29.0301598Z 
2025-08-18T18:24:29.0301732Z <a id="alert_bot"></a>
2025-08-18T18:24:29.0301951Z 
2025-08-18T18:24:29.0302082Z # alert\_bot
2025-08-18T18:24:29.0302266Z 
2025-08-18T18:24:29.0302430Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T18:24:29.0302758Z 
2025-08-18T18:24:29.0302906Z # alert\_bot.tests.test\_smoke
2025-08-18T18:24:29.0303174Z 
2025-08-18T18:24:29.0303323Z <a id="alert_bot.tests"></a>
2025-08-18T18:24:29.0303578Z 
2025-08-18T18:24:29.0303701Z # alert\_bot.tests
2025-08-18T18:24:29.0303904Z 
2025-08-18T18:24:29.0304061Z <a id="alert_bot.alert_bot"></a>
2025-08-18T18:24:29.0304333Z 
2025-08-18T18:24:29.0304462Z # alert\_bot.alert\_bot
2025-08-18T18:24:29.0304693Z 
2025-08-18T18:24:29.0304831Z <a id="alert_bot.rules"></a>
2025-08-18T18:24:29.0305096Z 
2025-08-18T18:24:29.0305231Z # alert\_bot.rules
2025-08-18T18:24:29.0305441Z 
2025-08-18T18:24:29.0305613Z <a id="common"></a>
2025-08-18T18:24:29.0305814Z 
2025-08-18T18:24:29.0305934Z # common
2025-08-18T18:24:29.0306334Z 
2025-08-18T18:24:29.0306471Z <a id="common.dsn"></a>
2025-08-18T18:24:29.0306701Z 
2025-08-18T18:24:29.0306819Z # common.dsn
2025-08-18T18:24:29.0306997Z 
2025-08-18T18:24:29.0307147Z <a id="common.dsn.build_dsn"></a>
2025-08-18T18:24:29.0307441Z 
2025-08-18T18:24:29.0307556Z #### build\_dsn
2025-08-18T18:24:29.0307738Z 
2025-08-18T18:24:29.0307862Z ```python
2025-08-18T18:24:29.0308277Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:24:29.0308693Z ```
2025-08-18T18:24:29.0308840Z 
2025-08-18T18:24:29.0309062Z Return a Postgres DSN, validating required variables.
2025-08-18T18:24:29.0309456Z 
2025-08-18T18:24:29.0309815Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T18:24:29.0310647Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T18:24:29.0311628Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T18:24:29.0312224Z missing.
2025-08-18T18:24:29.0312404Z 
2025-08-18T18:24:29.0312559Z <a id="common.models_vendor"></a>
2025-08-18T18:24:29.0312870Z 
2025-08-18T18:24:29.0313009Z # common.models\_vendor
2025-08-18T18:24:29.0313237Z 
2025-08-18T18:24:29.0313405Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T18:24:29.0313735Z 
2025-08-18T18:24:29.0313857Z ## Vendor Objects
2025-08-18T18:24:29.0314050Z 
2025-08-18T18:24:29.0314172Z ```python
2025-08-18T18:24:29.0314440Z class Vendor(Base)
2025-08-18T18:24:29.0314750Z ```
2025-08-18T18:24:29.0314903Z 
2025-08-18T18:24:29.0315048Z Vendor of inventory items.
2025-08-18T18:24:29.0315294Z 
2025-08-18T18:24:29.0315478Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T18:24:29.0315817Z 
2025-08-18T18:24:29.0315948Z ## VendorPrice Objects
2025-08-18T18:24:29.0316173Z 
2025-08-18T18:24:29.0316283Z ```python
2025-08-18T18:24:29.0316570Z class VendorPrice(Base)
2025-08-18T18:24:29.0316895Z ```
2025-08-18T18:24:29.0317041Z 
2025-08-18T18:24:29.0317235Z Association table linking vendors to pricing.
2025-08-18T18:24:29.0317587Z 
2025-08-18T18:24:29.0317956Z <a id="common.db_url"></a>
2025-08-18T18:24:29.0318216Z 
2025-08-18T18:24:29.0318342Z # common.db\_url
2025-08-18T18:24:29.0318542Z 
2025-08-18T18:24:29.0318700Z <a id="common.db_url.build_url"></a>
2025-08-18T18:24:29.0319006Z 
2025-08-18T18:24:29.0319124Z #### build\_url
2025-08-18T18:24:29.0319317Z 
2025-08-18T18:24:29.0319438Z ```python
2025-08-18T18:24:29.0319759Z def build_url(async_: bool = True) -> str
2025-08-18T18:24:29.0320195Z ```
2025-08-18T18:24:29.0320347Z 
2025-08-18T18:24:29.0320526Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:24:29.0320871Z 
2025-08-18T18:24:29.0321022Z <a id="common.keepa"></a>
2025-08-18T18:24:29.0321276Z 
2025-08-18T18:24:29.0321625Z # common.keepa
2025-08-18T18:24:29.0321832Z 
2025-08-18T18:24:29.0321968Z <a id="common.llm"></a>
2025-08-18T18:24:29.0322196Z 
2025-08-18T18:24:29.0322321Z # common.llm
2025-08-18T18:24:29.0322501Z 
2025-08-18T18:24:29.0322650Z <a id="common.settings"></a>
2025-08-18T18:24:29.0322916Z 
2025-08-18T18:24:29.0323049Z # common.settings
2025-08-18T18:24:29.0323255Z 
2025-08-18T18:24:29.0323385Z <a id="common.db"></a>
2025-08-18T18:24:29.0323608Z 
2025-08-18T18:24:29.0323721Z # common.db
2025-08-18T18:24:29.0323889Z 
2025-08-18T18:24:29.0324068Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T18:24:29.0324399Z 
2025-08-18T18:24:29.0324541Z #### build\_sqlalchemy\_url
2025-08-18T18:24:29.0324798Z 
2025-08-18T18:24:29.0324918Z ```python
2025-08-18T18:24:29.0325235Z def build_sqlalchemy_url() -> str
2025-08-18T18:24:29.0325634Z ```
2025-08-18T18:24:29.0325791Z 
2025-08-18T18:24:29.0325963Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:24:29.0326291Z 
2025-08-18T18:24:29.0326453Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T18:24:29.0326776Z 
2025-08-18T18:24:29.0326928Z #### build\_asyncpg\_dsn
2025-08-18T18:24:29.0327166Z 
2025-08-18T18:24:29.0327284Z ```python
2025-08-18T18:24:29.0327607Z def build_asyncpg_dsn() -> str
2025-08-18T18:24:29.0327987Z ```
2025-08-18T18:24:29.0328401Z 
2025-08-18T18:24:29.0328662Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:24:29.0329072Z 
2025-08-18T18:24:29.0329240Z <a id="common.db.refresh_mvs"></a>
2025-08-18T18:24:29.0329534Z 
2025-08-18T18:24:29.0329727Z #### refresh\_mvs
2025-08-18T18:24:29.0329924Z 
2025-08-18T18:24:29.0330063Z ```python
2025-08-18T18:24:29.0330390Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:24:29.0330870Z ```
2025-08-18T18:24:29.0331029Z 
2025-08-18T18:24:29.0331281Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:24:29.0331898Z 
2025-08-18T18:24:29.0332045Z <a id="common.config"></a>
2025-08-18T18:24:29.0332294Z 
2025-08-18T18:24:29.0332422Z # common.config
2025-08-18T18:24:29.0332612Z 
2025-08-18T18:24:29.0332744Z <a id="common.base"></a>
2025-08-18T18:24:29.0332979Z 
2025-08-18T18:24:29.0333096Z # common.base
2025-08-18T18:24:29.0333270Z 
2025-08-18T18:24:29.0333416Z <a id="common.base.Base"></a>
2025-08-18T18:24:29.0333684Z 
2025-08-18T18:24:29.0333807Z ## Base Objects
2025-08-18T18:24:29.0333991Z 
2025-08-18T18:24:29.0334112Z ```python
2025-08-18T18:24:29.0334408Z class Base(DeclarativeBase)
2025-08-18T18:24:29.0334755Z ```
2025-08-18T18:24:29.0334899Z 
2025-08-18T18:24:29.0335050Z Base class for SQLAlchemy models.
2025-08-18T18:24:29.0335335Z 
2025-08-18T18:24:29.0335459Z <a id="repricer"></a>
2025-08-18T18:24:29.0335667Z 
2025-08-18T18:24:29.0335782Z # repricer
2025-08-18T18:24:29.0335954Z 
2025-08-18T18:24:29.0336108Z <a id="repricer.app.schemas"></a>
2025-08-18T18:24:29.0336392Z 
2025-08-18T18:24:29.0336540Z # repricer.app.schemas
2025-08-18T18:24:29.0336769Z 
2025-08-18T18:24:29.0336924Z <a id="repricer.app.deps"></a>
2025-08-18T18:24:29.0337194Z 
2025-08-18T18:24:29.0337336Z # repricer.app.deps
2025-08-18T18:24:29.0337550Z 
2025-08-18T18:24:29.0337764Z Placeholder module for Keepa / SP-API clients.
2025-08-18T18:24:29.0338121Z 
2025-08-18T18:24:29.0338280Z <a id="repricer.app.logic"></a>
2025-08-18T18:24:29.0338555Z 
2025-08-18T18:24:29.0338711Z # repricer.app.logic
2025-08-18T18:24:29.0339168Z 
2025-08-18T18:24:29.0339349Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T18:24:29.0339682Z 
2025-08-18T18:24:29.0339819Z #### MIN\_MARGIN
2025-08-18T18:24:29.0340015Z 
2025-08-18T18:24:29.0340135Z 15 % ROI
2025-08-18T18:24:29.0340295Z 
2025-08-18T18:24:29.0340484Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T18:24:29.0340826Z 
2025-08-18T18:24:29.0340943Z #### compute\_price
2025-08-18T18:24:29.0341120Z 
2025-08-18T18:24:29.0341225Z ```python
2025-08-18T18:24:29.0341908Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T18:24:29.0342525Z ```
2025-08-18T18:24:29.0342688Z 
2025-08-18T18:24:29.0342892Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T18:24:29.0343414Z Replace with real competitive logic later.
2025-08-18T18:24:29.0343753Z 
2025-08-18T18:24:29.0343906Z <a id="repricer.app.main"></a>
2025-08-18T18:24:29.0344168Z 
2025-08-18T18:24:29.0344305Z # repricer.app.main
2025-08-18T18:24:29.0344528Z 
2025-08-18T18:24:29.0344679Z <a id="repricer.app"></a>
2025-08-18T18:24:29.0344914Z 
2025-08-18T18:24:29.0345039Z # repricer.app
2025-08-18T18:24:29.0345224Z 
2025-08-18T18:24:29.0345390Z <a id="repricer.tests.test_imports"></a>
2025-08-18T18:24:29.0345718Z 
2025-08-18T18:24:29.0345860Z # repricer.tests.test\_imports
2025-08-18T18:24:29.0346121Z 
2025-08-18T18:24:29.0346279Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T18:24:29.0346597Z 
2025-08-18T18:24:29.0346740Z # repricer.tests.test\_smoke
2025-08-18T18:24:29.0346995Z 
2025-08-18T18:24:29.0347146Z <a id="repricer.tests"></a>
2025-08-18T18:24:29.0347393Z 
2025-08-18T18:24:29.0347520Z # repricer.tests
2025-08-18T18:24:29.0347724Z 
2025-08-18T18:24:29.0347837Z <a id="db"></a>
2025-08-18T18:24:29.0348014Z 
2025-08-18T18:24:29.0348116Z # db
2025-08-18T18:24:29.0348281Z 
2025-08-18T18:24:29.0348428Z <a id="db.utils.views"></a>
2025-08-18T18:24:29.0348670Z 
2025-08-18T18:24:29.0348809Z # db.utils.views
2025-08-18T18:24:29.0349001Z 
2025-08-18T18:24:29.0349460Z <a id="db.utils.views.replace_view"></a>
2025-08-18T18:24:29.0349820Z 
2025-08-18T18:24:29.0349951Z #### replace\_view
2025-08-18T18:24:29.0350160Z 
2025-08-18T18:24:29.0350274Z ```python
2025-08-18T18:24:29.0350639Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T18:24:29.0351113Z ```
2025-08-18T18:24:29.0351274Z 
2025-08-18T18:24:29.0351689Z Drop and recreate a SQL view atomically.
2025-08-18T18:24:29.0352025Z 
2025-08-18T18:24:29.0352163Z <a id="db.utils"></a>
2025-08-18T18:24:29.0352376Z 
2025-08-18T18:24:29.0352492Z # db.utils
2025-08-18T18:24:29.0352668Z 
2025-08-18T18:24:29.0352813Z <a id="price_importer"></a>
2025-08-18T18:24:29.0353065Z 
2025-08-18T18:24:29.0353249Z # price\_importer
2025-08-18T18:24:29.0353469Z 
2025-08-18T18:24:29.0353682Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T18:24:29.0354053Z 
2025-08-18T18:24:29.0354237Z # price\_importer.services\_common.dsn
2025-08-18T18:24:29.0354569Z 
2025-08-18T18:24:29.0354810Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T18:24:29.0355246Z 
2025-08-18T18:24:29.0355385Z #### build\_dsn
2025-08-18T18:24:29.0355568Z 
2025-08-18T18:24:29.0355686Z ```python
2025-08-18T18:24:29.0356025Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:24:29.0356465Z ```
2025-08-18T18:24:29.0356639Z 
2025-08-18T18:24:29.0356773Z Return safe DSN.
2025-08-18T18:24:29.0356975Z 
2025-08-18T18:24:29.0357588Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T18:24:29.0358008Z 
2025-08-18T18:24:29.0358346Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T18:24:29.0358787Z 
2025-08-18T18:24:29.0359006Z # price\_importer.services\_common.models\_vendor
2025-08-18T18:24:29.0359366Z 
2025-08-18T18:24:29.0359575Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T18:24:29.0359963Z 
2025-08-18T18:24:29.0360146Z # price\_importer.services\_common.db\_url
2025-08-18T18:24:29.0360489Z 
2025-08-18T18:24:29.0360753Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T18:24:29.0361225Z 
2025-08-18T18:24:29.0361908Z #### build\_url
2025-08-18T18:24:29.0362132Z 
2025-08-18T18:24:29.0362252Z ```python
2025-08-18T18:24:29.0362587Z def build_url(async_: bool = True) -> str
2025-08-18T18:24:29.0363024Z ```
2025-08-18T18:24:29.0363179Z 
2025-08-18T18:24:29.0363365Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:24:29.0363688Z 
2025-08-18T18:24:29.0363884Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T18:24:29.0364252Z 
2025-08-18T18:24:29.0364433Z # price\_importer.services\_common.keepa
2025-08-18T18:24:29.0364757Z 
2025-08-18T18:24:29.0364947Z <a id="price_importer.services_common.llm"></a>
2025-08-18T18:24:29.0365308Z 
2025-08-18T18:24:29.0365477Z # price\_importer.services\_common.llm
2025-08-18T18:24:29.0365786Z 
2025-08-18T18:24:29.0366013Z <a id="price_importer.services_common.settings"></a>
2025-08-18T18:24:29.0366376Z 
2025-08-18T18:24:29.0366556Z # price\_importer.services\_common.settings
2025-08-18T18:24:29.0366890Z 
2025-08-18T18:24:29.0367089Z <a id="price_importer.services_common.db"></a>
2025-08-18T18:24:29.0367412Z 
2025-08-18T18:24:29.0367568Z # price\_importer.services\_common.db
2025-08-18T18:24:29.0367878Z 
2025-08-18T18:24:29.0368159Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T18:24:29.0368595Z 
2025-08-18T18:24:29.0368757Z #### build\_sqlalchemy\_url
2025-08-18T18:24:29.0369008Z 
2025-08-18T18:24:29.0369122Z ```python
2025-08-18T18:24:29.0369444Z def build_sqlalchemy_url() -> str
2025-08-18T18:24:29.0369822Z ```
2025-08-18T18:24:29.0369985Z 
2025-08-18T18:24:29.0370162Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:24:29.0370467Z 
2025-08-18T18:24:29.0370722Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T18:24:29.0371173Z 
2025-08-18T18:24:29.0371533Z #### build\_asyncpg\_dsn
2025-08-18T18:24:29.0371783Z 
2025-08-18T18:24:29.0371914Z ```python
2025-08-18T18:24:29.0372235Z def build_asyncpg_dsn() -> str
2025-08-18T18:24:29.0372616Z ```
2025-08-18T18:24:29.0373029Z 
2025-08-18T18:24:29.0373283Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:24:29.0373690Z 
2025-08-18T18:24:29.0373926Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T18:24:29.0374319Z 
2025-08-18T18:24:29.0374446Z #### refresh\_mvs
2025-08-18T18:24:29.0374637Z 
2025-08-18T18:24:29.0374743Z ```python
2025-08-18T18:24:29.0375092Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:24:29.0375538Z ```
2025-08-18T18:24:29.0375692Z 
2025-08-18T18:24:29.0375943Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:24:29.0376354Z 
2025-08-18T18:24:29.0376532Z <a id="price_importer.services_common"></a>
2025-08-18T18:24:29.0376874Z 
2025-08-18T18:24:29.0377033Z # price\_importer.services\_common
2025-08-18T18:24:29.0377314Z 
2025-08-18T18:24:29.0377504Z <a id="price_importer.services_common.base"></a>
2025-08-18T18:24:29.0377845Z 
2025-08-18T18:24:29.0378002Z # price\_importer.services\_common.base
2025-08-18T18:24:29.0378316Z 
2025-08-18T18:24:29.0378475Z <a id="price_importer.normaliser"></a>
2025-08-18T18:24:29.0378781Z 
2025-08-18T18:24:29.0378933Z # price\_importer.normaliser
2025-08-18T18:24:29.0379192Z 
2025-08-18T18:24:29.0379383Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T18:24:29.0379725Z 
2025-08-18T18:24:29.0379893Z # price\_importer.common.models\_vendor
2025-08-18T18:24:29.0380186Z 
2025-08-18T18:24:29.0380351Z <a id="price_importer.common.db_url"></a>
2025-08-18T18:24:29.0380662Z 
2025-08-18T18:24:29.0380801Z # price\_importer.common.db\_url
2025-08-18T18:24:29.0381050Z 
2025-08-18T18:24:29.0381235Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T18:24:29.0381809Z 
2025-08-18T18:24:29.0381935Z #### make\_dsn
2025-08-18T18:24:29.0382116Z 
2025-08-18T18:24:29.0382243Z ```python
2025-08-18T18:24:29.0382555Z def make_dsn(async_: bool = False) -> str
2025-08-18T18:24:29.0382970Z ```
2025-08-18T18:24:29.0383109Z 
2025-08-18T18:24:29.0383327Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T18:24:29.0383701Z 
2025-08-18T18:24:29.0384110Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T18:24:29.0384453Z 
2025-08-18T18:24:29.0384573Z #### build\_url
2025-08-18T18:24:29.0384756Z 
2025-08-18T18:24:29.0384866Z ```python
2025-08-18T18:24:29.0385179Z def build_url(async_: bool = False) -> str
2025-08-18T18:24:29.0385579Z ```
2025-08-18T18:24:29.0385736Z 
2025-08-18T18:24:29.0385958Z Return Postgres DSN built from environment variables.
2025-08-18T18:24:29.0386323Z 
2025-08-18T18:24:29.0386465Z <a id="price_importer.common"></a>
2025-08-18T18:24:29.0386747Z 
2025-08-18T18:24:29.0386878Z # price\_importer.common
2025-08-18T18:24:29.0387111Z 
2025-08-18T18:24:29.0387286Z <a id="price_importer.common.base"></a>
2025-08-18T18:24:29.0387599Z 
2025-08-18T18:24:29.0387743Z # price\_importer.common.base
2025-08-18T18:24:29.0388005Z 
2025-08-18T18:24:29.0388179Z <a id="price_importer.tests.conftest"></a>
2025-08-18T18:24:29.0388491Z 
2025-08-18T18:24:29.0388643Z # price\_importer.tests.conftest
2025-08-18T18:24:29.0388940Z 
2025-08-18T18:24:29.0389119Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T18:24:29.0389441Z 
2025-08-18T18:24:29.0389599Z # price\_importer.tests.test\_reader
2025-08-18T18:24:29.0389887Z 
2025-08-18T18:24:29.0390063Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T18:24:29.0390400Z 
2025-08-18T18:24:29.0390553Z # price\_importer.tests.test\_imports
2025-08-18T18:24:29.0390840Z 
2025-08-18T18:24:29.0391013Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T18:24:29.0391551Z 
2025-08-18T18:24:29.0391717Z # price\_importer.tests.test\_smoke
2025-08-18T18:24:29.0392011Z 
2025-08-18T18:24:29.0392204Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T18:24:29.0392552Z 
2025-08-18T18:24:29.0392722Z # price\_importer.tests.test\_normaliser
2025-08-18T18:24:29.0393071Z 
2025-08-18T18:24:29.0393221Z <a id="price_importer.tests"></a>
2025-08-18T18:24:29.0393496Z 
2025-08-18T18:24:29.0393624Z # price\_importer.tests
2025-08-18T18:24:29.0394077Z 
2025-08-18T18:24:29.0394239Z <a id="price_importer.reader"></a>
2025-08-18T18:24:29.0394514Z 
2025-08-18T18:24:29.0394653Z # price\_importer.reader
2025-08-18T18:24:29.0394882Z 
2025-08-18T18:24:29.0395039Z <a id="price_importer.repository"></a>
2025-08-18T18:24:29.0395335Z 
2025-08-18T18:24:29.0395482Z # price\_importer.repository
2025-08-18T18:24:29.0395736Z 
2025-08-18T18:24:29.0395883Z <a id="price_importer.import"></a>
2025-08-18T18:24:29.0396182Z 
2025-08-18T18:24:29.0396319Z # price\_importer.import
2025-08-18T18:24:29.0396551Z 
2025-08-18T18:24:29.0396680Z <a id="fees_h10"></a>
2025-08-18T18:24:29.0396920Z 
2025-08-18T18:24:29.0397030Z # fees\_h10
2025-08-18T18:24:29.0397192Z 
2025-08-18T18:24:29.0397333Z <a id="fees_h10.worker"></a>
2025-08-18T18:24:29.0397571Z 
2025-08-18T18:24:29.0397681Z # fees\_h10.worker
2025-08-18T18:24:29.0397872Z 
2025-08-18T18:24:29.0398039Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T18:24:29.0398350Z 
2025-08-18T18:24:29.0398478Z #### list\_active\_asins
2025-08-18T18:24:29.0398697Z 
2025-08-18T18:24:29.0398817Z ```python
2025-08-18T18:24:29.0399173Z def list_active_asins() -> list[str]
2025-08-18T18:24:29.0399561Z ```
2025-08-18T18:24:29.0399726Z 
2025-08-18T18:24:29.0399932Z Return known ASINs or an empty list if unavailable.
2025-08-18T18:24:29.0400298Z 
2025-08-18T18:24:29.0400460Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T18:24:29.0400777Z 
2025-08-18T18:24:29.0400931Z # fees\_h10.tests.test\_smoke
2025-08-18T18:24:29.0401191Z 
2025-08-18T18:24:29.0401554Z <a id="fees_h10.tests"></a>
2025-08-18T18:24:29.0401814Z 
2025-08-18T18:24:29.0401939Z # fees\_h10.tests
2025-08-18T18:24:29.0402143Z 
2025-08-18T18:24:29.0402280Z <a id="fees_h10.client"></a>
2025-08-18T18:24:29.0402534Z 
2025-08-18T18:24:29.0402651Z # fees\_h10.client
2025-08-18T18:24:29.0402857Z 
2025-08-18T18:24:29.0403002Z <a id="fees_h10.repository"></a>
2025-08-18T18:24:29.0403281Z 
2025-08-18T18:24:29.0403427Z # fees\_h10.repository
2025-08-18T18:24:29.0403653Z 
2025-08-18T18:24:29.0403796Z <a id="emailer"></a>
2025-08-18T18:24:29.0404285Z 
2025-08-18T18:24:29.0404414Z # emailer
2025-08-18T18:24:29.0404583Z 
2025-08-18T18:24:29.0404775Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T18:24:29.0405125Z 
2025-08-18T18:24:29.0405278Z # emailer.tests.test\_import\_emailer
2025-08-18T18:24:29.0405579Z 
2025-08-18T18:24:29.0405739Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T18:24:29.0406032Z 
2025-08-18T18:24:29.0406173Z # emailer.tests.test\_smoke
2025-08-18T18:24:29.0406418Z 
2025-08-18T18:24:29.0406562Z <a id="emailer.tests"></a>
2025-08-18T18:24:29.0406798Z 
2025-08-18T18:24:29.0406916Z # emailer.tests
2025-08-18T18:24:29.0407109Z 
2025-08-18T18:24:29.0407253Z <a id="emailer.generate_body"></a>
2025-08-18T18:24:29.0407535Z 
2025-08-18T18:24:29.0407663Z # emailer.generate\_body
2025-08-18T18:24:29.0407900Z 
2025-08-18T18:24:29.0408025Z <a id="llm_server"></a>
2025-08-18T18:24:29.0408237Z 
2025-08-18T18:24:29.0408357Z # llm\_server
2025-08-18T18:24:29.0408538Z 
2025-08-18T18:24:29.0408691Z <a id="llm_server.app"></a>
2025-08-18T18:24:29.0408952Z 
2025-08-18T18:24:29.0409067Z # llm\_server.app
2025-08-18T18:24:29.0409248Z 
