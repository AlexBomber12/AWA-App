2025-08-20T16:42:29.3815879Z ##[group]Run pydoc-markdown
2025-08-20T16:42:29.3816183Z [36;1mpydoc-markdown[0m
2025-08-20T16:42:29.3857407Z shell: /usr/bin/bash -e {0}
2025-08-20T16:42:29.3857638Z env:
2025-08-20T16:42:29.3857879Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:42:29.3858296Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T16:42:29.3858688Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:42:29.3859032Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:42:29.3859658Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:42:29.3860006Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T16:42:29.3860295Z ##[endgroup]
2025-08-20T16:42:29.7047372Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T16:42:29.7048143Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T16:42:29.7048512Z In "pydoc-markdown.yml"
2025-08-20T16:42:29.7048844Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T16:42:29.7049475Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T16:42:29.7050012Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T16:42:29.7050377Z 
2025-08-20T16:42:30.0640777Z <a id="__init__"></a>
2025-08-20T16:42:30.0641161Z 
2025-08-20T16:42:30.0641290Z # \_\_init\_\_
2025-08-20T16:42:30.0641501Z 
2025-08-20T16:42:30.0641628Z <a id="api"></a>
2025-08-20T16:42:30.0641830Z 
2025-08-20T16:42:30.0641944Z # api
2025-08-20T16:42:30.0642118Z 
2025-08-20T16:42:30.0642266Z <a id="api.errors"></a>
2025-08-20T16:42:30.0642499Z 
2025-08-20T16:42:30.0642629Z # api.errors
2025-08-20T16:42:30.0642815Z 
2025-08-20T16:42:30.0642966Z <a id="api.sentry_config"></a>
2025-08-20T16:42:30.0643246Z 
2025-08-20T16:42:30.0643383Z # api.sentry\_config
2025-08-20T16:42:30.0643594Z 
2025-08-20T16:42:30.0643774Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T16:42:30.0644112Z 
2025-08-20T16:42:30.0644680Z # api.tests.test\_stats\_contracts
2025-08-20T16:42:30.0644999Z 
2025-08-20T16:42:30.0645182Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T16:42:30.0645493Z 
2025-08-20T16:42:30.0645647Z # api.tests.test\_sentry\_scrub
2025-08-20T16:42:30.0645932Z 
2025-08-20T16:42:30.0646110Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T16:42:30.0646434Z 
2025-08-20T16:42:30.0646588Z # api.tests.test\_roi\_basic\_auth
2025-08-20T16:42:30.0646884Z 
2025-08-20T16:42:30.0647050Z <a id="api.tests.test_errors_json"></a>
2025-08-20T16:42:30.0647360Z 
2025-08-20T16:42:30.0647520Z # api.tests.test\_errors\_json
2025-08-20T16:42:30.0647782Z 
2025-08-20T16:42:30.0647932Z <a id="api.tests.test_llm"></a>
2025-08-20T16:42:30.0648300Z 
2025-08-20T16:42:30.0648440Z # api.tests.test\_llm
2025-08-20T16:42:30.0648667Z 
2025-08-20T16:42:30.0648835Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T16:42:30.0649361Z 
2025-08-20T16:42:30.0649525Z # api.tests.test\_roi\_filters
2025-08-20T16:42:30.0649798Z 
2025-08-20T16:42:30.0649988Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T16:42:30.0650316Z 
2025-08-20T16:42:30.0650468Z # api.tests.test\_sentry\_event
2025-08-20T16:42:30.0650738Z 
2025-08-20T16:42:30.0650982Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T16:42:30.0651363Z 
2025-08-20T16:42:30.0651510Z ## DummyTransport Objects
2025-08-20T16:42:30.0651759Z 
2025-08-20T16:42:30.0651879Z ```python
2025-08-20T16:42:30.0652192Z class DummyTransport()
2025-08-20T16:42:30.0652529Z ```
2025-08-20T16:42:30.0652683Z 
2025-08-20T16:42:30.0653009Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T16:42:30.0653485Z 
2025-08-20T16:42:30.0653622Z #### capture\_envelope
2025-08-20T16:42:30.0653850Z 
2025-08-20T16:42:30.0653973Z ```python
2025-08-20T16:42:30.0654307Z def capture_envelope(envelope)
2025-08-20T16:42:30.0654692Z ```
2025-08-20T16:42:30.0654845Z 
2025-08-20T16:42:30.0655085Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T16:42:30.0655471Z 
2025-08-20T16:42:30.0655627Z <a id="api.tests.test_cors"></a>
2025-08-20T16:42:30.0656262Z 
2025-08-20T16:42:30.0656415Z # api.tests.test\_cors
2025-08-20T16:42:30.0656643Z 
2025-08-20T16:42:30.0656799Z <a id="api.tests.test_imports"></a>
2025-08-20T16:42:30.0657103Z 
2025-08-20T16:42:30.0657251Z # api.tests.test\_imports
2025-08-20T16:42:30.0657490Z 
2025-08-20T16:42:30.0657659Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T16:42:30.0657962Z 
2025-08-20T16:42:30.0658108Z # api.tests.test\_rate\_limit
2025-08-20T16:42:30.0658367Z 
2025-08-20T16:42:30.0658556Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T16:42:30.0658879Z 
2025-08-20T16:42:30.0659002Z #### app
2025-08-20T16:42:30.0659411Z 
2025-08-20T16:42:30.0659541Z noqa: E402
2025-08-20T16:42:30.0659722Z 
2025-08-20T16:42:30.0659893Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T16:42:30.0660216Z 
2025-08-20T16:42:30.0660373Z # api.tests.test\_stats\_sql
2025-08-20T16:42:30.0660633Z 
2025-08-20T16:42:30.0660805Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T16:42:30.0661120Z 
2025-08-20T16:42:30.0661270Z # api.tests.test\_entrypoint
2025-08-20T16:42:30.0661534Z 
2025-08-20T16:42:30.0661746Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T16:42:30.0662092Z 
2025-08-20T16:42:30.0662266Z # api.tests.test\_stats\_future\_contracts
2025-08-20T16:42:30.0662592Z 
2025-08-20T16:42:30.0662746Z <a id="api.tests.test_health"></a>
2025-08-20T16:42:30.0663032Z 
2025-08-20T16:42:30.0663183Z # api.tests.test\_health
2025-08-20T16:42:30.0663419Z 
2025-08-20T16:42:30.0663572Z <a id="api.tests.test_score"></a>
2025-08-20T16:42:30.0663853Z 
2025-08-20T16:42:30.0663992Z # api.tests.test\_score
2025-08-20T16:42:30.0664221Z 
2025-08-20T16:42:30.0664370Z <a id="api.logging_config"></a>
2025-08-20T16:42:30.0664636Z 
2025-08-20T16:42:30.0664768Z # api.logging\_config
2025-08-20T16:42:30.0664984Z 
2025-08-20T16:42:30.0665143Z <a id="api.migrations.env"></a>
2025-08-20T16:42:30.0665407Z 
2025-08-20T16:42:30.0665541Z # api.migrations.env
2025-08-20T16:42:30.0665993Z 
2025-08-20T16:42:30.0666225Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T16:42:30.0666594Z 
2025-08-20T16:42:30.0666787Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T16:42:30.0667135Z 
2025-08-20T16:42:30.0667339Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T16:42:30.0667700Z 
2025-08-20T16:42:30.0667886Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T16:42:30.0668207Z 
2025-08-20T16:42:30.0668494Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T16:42:30.0668943Z 
2025-08-20T16:42:30.0669386Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T16:42:30.0669809Z 
2025-08-20T16:42:30.0670046Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T16:42:30.0670429Z 
2025-08-20T16:42:30.0670631Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T16:42:30.0670971Z 
2025-08-20T16:42:30.0671200Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T16:42:30.0671683Z 
2025-08-20T16:42:30.0671884Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T16:42:30.0672261Z 
2025-08-20T16:42:30.0672488Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T16:42:30.0672880Z 
2025-08-20T16:42:30.0673080Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T16:42:30.0673425Z 
2025-08-20T16:42:30.0673641Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T16:42:30.0674010Z 
2025-08-20T16:42:30.0674208Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T16:42:30.0674549Z 
2025-08-20T16:42:30.0674792Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T16:42:30.0675172Z 
2025-08-20T16:42:30.0675377Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T16:42:30.0675736Z 
2025-08-20T16:42:30.0675989Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T16:42:30.0676404Z 
2025-08-20T16:42:30.0676629Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T16:42:30.0677007Z 
2025-08-20T16:42:30.0677251Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T16:42:30.0677884Z 
2025-08-20T16:42:30.0678101Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T16:42:30.0678450Z 
2025-08-20T16:42:30.0678700Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T16:42:30.0679121Z 
2025-08-20T16:42:30.0679544Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T16:42:30.0679914Z 
2025-08-20T16:42:30.0680174Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T16:42:30.0680535Z 
2025-08-20T16:42:30.0680717Z # api.migrations.versions.0001\_baseline
2025-08-20T16:42:30.0681176Z 
2025-08-20T16:42:30.0681359Z <a id="api.migrations.versions"></a>
2025-08-20T16:42:30.0681676Z 
2025-08-20T16:42:30.0681828Z # api.migrations.versions
2025-08-20T16:42:30.0682085Z 
2025-08-20T16:42:30.0682230Z <a id="api.migrations"></a>
2025-08-20T16:42:30.0682483Z 
2025-08-20T16:42:30.0682619Z # api.migrations
2025-08-20T16:42:30.0682818Z 
2025-08-20T16:42:30.0682957Z <a id="api.db"></a>
2025-08-20T16:42:30.0683168Z 
2025-08-20T16:42:30.0683293Z # api.db
2025-08-20T16:42:30.0683456Z 
2025-08-20T16:42:30.0683609Z <a id="api.routes.score"></a>
2025-08-20T16:42:30.0683878Z 
2025-08-20T16:42:30.0684008Z # api.routes.score
2025-08-20T16:42:30.0684216Z 
2025-08-20T16:42:30.0684363Z <a id="api.routes.stats"></a>
2025-08-20T16:42:30.0684631Z 
2025-08-20T16:42:30.0684756Z # api.routes.stats
2025-08-20T16:42:30.0684952Z 
2025-08-20T16:42:30.0685100Z <a id="api.routes.roi"></a>
2025-08-20T16:42:30.0685346Z 
2025-08-20T16:42:30.0685475Z # api.routes.roi
2025-08-20T16:42:30.0685682Z 
2025-08-20T16:42:30.0685835Z <a id="api.routes.health"></a>
2025-08-20T16:42:30.0686093Z 
2025-08-20T16:42:30.0686224Z # api.routes.health
2025-08-20T16:42:30.0686434Z 
2025-08-20T16:42:30.0686605Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T16:42:30.0686910Z 
2025-08-20T16:42:30.0687041Z #### MAX\_SKEW
2025-08-20T16:42:30.0687224Z 
2025-08-20T16:42:30.0687338Z seconds
2025-08-20T16:42:30.0687709Z 
2025-08-20T16:42:30.0687888Z <a id="api.routes.health.health"></a>
2025-08-20T16:42:30.0688196Z 
2025-08-20T16:42:30.0688315Z #### health
2025-08-20T16:42:30.0688498Z 
2025-08-20T16:42:30.0688616Z ```python
2025-08-20T16:42:30.0688976Z @router.get("/health", include_in_schema=False)
2025-08-20T16:42:30.0689923Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T16:42:30.0690579Z ```
2025-08-20T16:42:30.0690746Z 
2025-08-20T16:42:30.0690965Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T16:42:30.0691333Z 
2025-08-20T16:42:30.0691499Z <a id="api.routes.repository"></a>
2025-08-20T16:42:30.0691789Z 
2025-08-20T16:42:30.0691940Z # api.routes.repository
2025-08-20T16:42:30.0692166Z 
2025-08-20T16:42:30.0692302Z <a id="api.routes"></a>
2025-08-20T16:42:30.0692523Z 
2025-08-20T16:42:30.0692656Z # api.routes
2025-08-20T16:42:30.0692834Z 
2025-08-20T16:42:30.0692980Z <a id="api.models.fee"></a>
2025-08-20T16:42:30.0693236Z 
2025-08-20T16:42:30.0693364Z # api.models.fee
2025-08-20T16:42:30.0693577Z 
2025-08-20T16:42:30.0693722Z <a id="api.models"></a>
2025-08-20T16:42:30.0693941Z 
2025-08-20T16:42:30.0694062Z # api.models
2025-08-20T16:42:30.0694241Z 
2025-08-20T16:42:30.0694391Z <a id="api.roi_repository"></a>
2025-08-20T16:42:30.0694613Z 
2025-08-20T16:42:30.0694720Z # api.roi\_repository
2025-08-20T16:42:30.0694895Z 
2025-08-20T16:42:30.0694999Z <a id="api.main"></a>
2025-08-20T16:42:30.0695173Z 
2025-08-20T16:42:30.0695269Z # api.main
2025-08-20T16:42:30.0695415Z 
2025-08-20T16:42:30.0695528Z <a id="api.main.ready"></a>
2025-08-20T16:42:30.0695726Z 
2025-08-20T16:42:30.0695824Z #### ready
2025-08-20T16:42:30.0695960Z 
2025-08-20T16:42:30.0696054Z ```python
2025-08-20T16:42:30.0696461Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T16:42:30.0697148Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T16:42:30.0697727Z                                                                       str]
2025-08-20T16:42:30.0698122Z ```
2025-08-20T16:42:30.0698476Z 
2025-08-20T16:42:30.0698627Z Return 200 only when migrations are at head.
2025-08-20T16:42:30.0698890Z 
2025-08-20T16:42:30.0699004Z <a id="api.config"></a>
2025-08-20T16:42:30.0699381Z 
2025-08-20T16:42:30.0699490Z # api.config
2025-08-20T16:42:30.0699651Z 
2025-08-20T16:42:30.0699772Z <a id="api.security"></a>
2025-08-20T16:42:30.0699985Z 
2025-08-20T16:42:30.0700100Z # api.security
2025-08-20T16:42:30.0700280Z 
2025-08-20T16:42:30.0700392Z <a id="etl"></a>
2025-08-20T16:42:30.0700569Z 
2025-08-20T16:42:30.0700683Z # etl
2025-08-20T16:42:30.0700824Z 
2025-08-20T16:42:30.0700945Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T16:42:30.0701157Z 
2025-08-20T16:42:30.0701274Z # etl.fba\_fee\_ingestor
2025-08-20T16:42:30.0701455Z 
2025-08-20T16:42:30.0701580Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T16:42:30.0701809Z 
2025-08-20T16:42:30.0701924Z # etl.sp\_fees\_ingestor
2025-08-20T16:42:30.0702122Z 
2025-08-20T16:42:30.0702251Z <a id="etl.keepa_ingestor"></a>
2025-08-20T16:42:30.0702497Z 
2025-08-20T16:42:30.0702616Z # etl.keepa\_ingestor
2025-08-20T16:42:30.0702813Z 
2025-08-20T16:42:30.0702931Z <a id="etl.db"></a>
2025-08-20T16:42:30.0703096Z 
2025-08-20T16:42:30.0703189Z # etl.db
2025-08-20T16:42:30.0703326Z 
2025-08-20T16:42:30.0703450Z <a id="etl.dialects.schemas"></a>
2025-08-20T16:42:30.0703673Z 
2025-08-20T16:42:30.0703783Z # etl.dialects.schemas
2025-08-20T16:42:30.0703972Z 
2025-08-20T16:42:30.0704131Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T16:42:30.0704448Z 
2025-08-20T16:42:30.0704606Z # etl.dialects.amazon\_reimbursements
2025-08-20T16:42:30.0704882Z 
2025-08-20T16:42:30.0705046Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T16:42:30.0705343Z 
2025-08-20T16:42:30.0705472Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T16:42:30.0705712Z 
2025-08-20T16:42:30.0705844Z <a id="etl.dialects.test_generic"></a>
2025-08-20T16:42:30.0706081Z 
2025-08-20T16:42:30.0706192Z # etl.dialects.test\_generic
2025-08-20T16:42:30.0706563Z 
2025-08-20T16:42:30.0706707Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T16:42:30.0706941Z 
2025-08-20T16:42:30.0707054Z # etl.dialects.amazon\_returns
2025-08-20T16:42:30.0707272Z 
2025-08-20T16:42:30.0707437Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T16:42:30.0707735Z 
2025-08-20T16:42:30.0707877Z # etl.dialects.amazon\_fee\_preview
2025-08-20T16:42:30.0708148Z 
2025-08-20T16:42:30.0708327Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T16:42:30.0708651Z 
2025-08-20T16:42:30.0708812Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T16:42:30.0709098Z 
2025-08-20T16:42:30.0709412Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T16:42:30.0709718Z 
2025-08-20T16:42:30.0709865Z # etl.dialects.amazon\_settlements
2025-08-20T16:42:30.0710146Z 
2025-08-20T16:42:30.0710286Z <a id="etl.dialects"></a>
2025-08-20T16:42:30.0710533Z 
2025-08-20T16:42:30.0710656Z # etl.dialects
2025-08-20T16:42:30.0710847Z 
2025-08-20T16:42:30.0710985Z <a id="ingest"></a>
2025-08-20T16:42:30.0711196Z 
2025-08-20T16:42:30.0711321Z # ingest
2025-08-20T16:42:30.0711495Z 
2025-08-20T16:42:30.0711654Z <a id="ingest.maintenance"></a>
2025-08-20T16:42:30.0711931Z 
2025-08-20T16:42:30.0712072Z # ingest.maintenance
2025-08-20T16:42:30.0712306Z 
2025-08-20T16:42:30.0712458Z <a id="ingest.copy_loader"></a>
2025-08-20T16:42:30.0712716Z 
2025-08-20T16:42:30.0712860Z # ingest.copy\_loader
2025-08-20T16:42:30.0713075Z 
2025-08-20T16:42:30.0713274Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T16:42:30.0713618Z 
2025-08-20T16:42:30.0713758Z #### copy\_df\_via\_temp
2025-08-20T16:42:30.0713990Z 
2025-08-20T16:42:30.0714107Z ```python
2025-08-20T16:42:30.0714430Z def copy_df_via_temp(engine: Engine,
2025-08-20T16:42:30.0714861Z                      df: pd.DataFrame,
2025-08-20T16:42:30.0715300Z                      target_table: str,
2025-08-20T16:42:30.0715708Z                      *,
2025-08-20T16:42:30.0716089Z                      target_schema: Optional[str] = None,
2025-08-20T16:42:30.0716584Z                      columns: Sequence[str],
2025-08-20T16:42:30.0717318Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T16:42:30.0717845Z                      analyze_after: bool = False,
2025-08-20T16:42:30.0718327Z                      connection: Any | None = None) -> int
2025-08-20T16:42:30.0718764Z ```
2025-08-20T16:42:30.0718924Z 
2025-08-20T16:42:30.0719398Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T16:42:30.0719825Z 
2025-08-20T16:42:30.0719987Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T16:42:30.0720279Z 
2025-08-20T16:42:30.0720440Z # ingest.tests.test\_smoke
2025-08-20T16:42:30.0720690Z 
2025-08-20T16:42:30.0720831Z <a id="ingest.tests"></a>
2025-08-20T16:42:30.0721074Z 
2025-08-20T16:42:30.0721197Z # ingest.tests
2025-08-20T16:42:30.0721383Z 
2025-08-20T16:42:30.0721542Z <a id="ingest.upload_router"></a>
2025-08-20T16:42:30.0721818Z 
2025-08-20T16:42:30.0721960Z # ingest.upload\_router
2025-08-20T16:42:30.0722197Z 
2025-08-20T16:42:30.0722363Z <a id="ingest.email_watcher"></a>
2025-08-20T16:42:30.0722645Z 
2025-08-20T16:42:30.0722781Z # ingest.email\_watcher
2025-08-20T16:42:30.0723011Z 
2025-08-20T16:42:30.0723171Z <a id="ingest.email_watcher.main"></a>
2025-08-20T16:42:30.0723473Z 
2025-08-20T16:42:30.0723588Z #### main
2025-08-20T16:42:30.0723768Z 
2025-08-20T16:42:30.0723890Z ```python
2025-08-20T16:42:30.0724214Z def main() -> dict[str, str]
2025-08-20T16:42:30.0724574Z ```
2025-08-20T16:42:30.0724737Z 
2025-08-20T16:42:30.0725015Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T16:42:30.0725434Z 
2025-08-20T16:42:30.0725674Z Returns {"status": "success"} when processing completes.
2025-08-20T16:42:30.0726069Z 
2025-08-20T16:42:30.0726212Z <a id="ingest.tasks"></a>
2025-08-20T16:42:30.0726449Z 
2025-08-20T16:42:30.0726577Z # ingest.tasks
2025-08-20T16:42:30.0726789Z 
2025-08-20T16:42:30.0726975Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T16:42:30.0727302Z 
2025-08-20T16:42:30.0727806Z #### task\_import\_file
2025-08-20T16:42:30.0728062Z 
2025-08-20T16:42:30.0728187Z ```python
2025-08-20T16:42:30.0728582Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T16:42:30.0729117Z def task_import_file(self: Any,
2025-08-20T16:42:30.0729710Z                      uri: str,
2025-08-20T16:42:30.0730129Z                      report_type: str | None = None,
2025-08-20T16:42:30.0730633Z                      force: bool = False) -> dict[str, Any]
2025-08-20T16:42:30.0731069Z ```
2025-08-20T16:42:30.0731223Z 
2025-08-20T16:42:30.0731480Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T16:42:30.0731871Z 
2025-08-20T16:42:30.0732022Z <a id="ingest.celery_app"></a>
2025-08-20T16:42:30.0732293Z 
2025-08-20T16:42:30.0732427Z # ingest.celery\_app
2025-08-20T16:42:30.0732640Z 
2025-08-20T16:42:30.0732798Z <a id="ingest.ingest_router"></a>
2025-08-20T16:42:30.0733078Z 
2025-08-20T16:42:30.0733217Z # ingest.ingest\_router
2025-08-20T16:42:30.0733441Z 
2025-08-20T16:42:30.0733600Z <a id="logistics_etl"></a>
2025-08-20T16:42:30.0733853Z 
2025-08-20T16:42:30.0733979Z # logistics\_etl
2025-08-20T16:42:30.0734182Z 
2025-08-20T16:42:30.0734322Z Daily logistics ETL job.
2025-08-20T16:42:30.0734560Z 
2025-08-20T16:42:30.0734723Z <a id="logistics_etl.__main__"></a>
2025-08-20T16:42:30.0735010Z 
2025-08-20T16:42:30.0735164Z # logistics\_etl.\_\_main\_\_
2025-08-20T16:42:30.0735433Z 
2025-08-20T16:42:30.0735592Z <a id="logistics_etl.dsn"></a>
2025-08-20T16:42:30.0735858Z 
2025-08-20T16:42:30.0735993Z # logistics\_etl.dsn
2025-08-20T16:42:30.0736220Z 
2025-08-20T16:42:30.0736439Z Local DSN builder to avoid cross-service dependency.
2025-08-20T16:42:30.0736813Z 
2025-08-20T16:42:30.0736984Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T16:42:30.0737303Z 
2025-08-20T16:42:30.0737425Z #### build\_dsn
2025-08-20T16:42:30.0737616Z 
2025-08-20T16:42:30.0737747Z ```python
2025-08-20T16:42:30.0738074Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:42:30.0738488Z ```
2025-08-20T16:42:30.0738650Z 
2025-08-20T16:42:30.0739585Z Return a Postgres DSN assembled from environment variables.
2025-08-20T16:42:30.0740019Z 
2025-08-20T16:42:30.0740297Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T16:42:30.0741023Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T16:42:30.0741652Z error when any required variable is missing.
2025-08-20T16:42:30.0741983Z 
2025-08-20T16:42:30.0742167Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T16:42:30.0742481Z 
2025-08-20T16:42:30.0742634Z # logistics\_etl.tests.conftest
2025-08-20T16:42:30.0742913Z 
2025-08-20T16:42:30.0743106Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T16:42:30.0743450Z 
2025-08-20T16:42:30.0743623Z # logistics\_etl.tests.test\_repository
2025-08-20T16:42:30.0743929Z 
2025-08-20T16:42:30.0744099Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T16:42:30.0744425Z 
2025-08-20T16:42:30.0744591Z # logistics\_etl.tests.test\_cron
2025-08-20T16:42:30.0744887Z 
2025-08-20T16:42:30.0745078Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T16:42:30.0745439Z 
2025-08-20T16:42:30.0745599Z # logistics\_etl.tests.test\_imports
2025-08-20T16:42:30.0745893Z 
2025-08-20T16:42:30.0746076Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T16:42:30.0746391Z 
2025-08-20T16:42:30.0746544Z # logistics\_etl.tests.test\_smoke
2025-08-20T16:42:30.0746825Z 
2025-08-20T16:42:30.0747013Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T16:42:30.0747330Z 
2025-08-20T16:42:30.0747487Z # logistics\_etl.tests.test\_client
2025-08-20T16:42:30.0747783Z 
2025-08-20T16:42:30.0747934Z <a id="logistics_etl.tests"></a>
2025-08-20T16:42:30.0748204Z 
2025-08-20T16:42:30.0748347Z # logistics\_etl.tests
2025-08-20T16:42:30.0748569Z 
2025-08-20T16:42:30.0748717Z <a id="logistics_etl.flow"></a>
2025-08-20T16:42:30.0748977Z 
2025-08-20T16:42:30.0749119Z # logistics\_etl.flow
2025-08-20T16:42:30.0749525Z 
2025-08-20T16:42:30.0749680Z <a id="logistics_etl.client"></a>
2025-08-20T16:42:30.0750201Z 
2025-08-20T16:42:30.0812857Z # logistics\_etl.client
2025-08-20T16:42:30.0813175Z 
2025-08-20T16:42:30.0813333Z <a id="logistics_etl.cron"></a>
2025-08-20T16:42:30.0813602Z 
2025-08-20T16:42:30.0813738Z # logistics\_etl.cron
2025-08-20T16:42:30.0813930Z 
2025-08-20T16:42:30.0814056Z <a id="logistics_etl.db"></a>
2025-08-20T16:42:30.0814304Z 
2025-08-20T16:42:30.0814423Z # logistics\_etl.db
2025-08-20T16:42:30.0814609Z 
2025-08-20T16:42:30.0814762Z <a id="logistics_etl.repository"></a>
2025-08-20T16:42:30.0815029Z 
2025-08-20T16:42:30.0815161Z # logistics\_etl.repository
2025-08-20T16:42:30.0815382Z 
2025-08-20T16:42:30.0815508Z <a id="alert_bot"></a>
2025-08-20T16:42:30.0815710Z 
2025-08-20T16:42:30.0815816Z # alert\_bot
2025-08-20T16:42:30.0815996Z 
2025-08-20T16:42:30.0816141Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T16:42:30.0816420Z 
2025-08-20T16:42:30.0816566Z # alert\_bot.tests.test\_smoke
2025-08-20T16:42:30.0816820Z 
2025-08-20T16:42:30.0816954Z <a id="alert_bot.tests"></a>
2025-08-20T16:42:30.0817198Z 
2025-08-20T16:42:30.0817319Z # alert\_bot.tests
2025-08-20T16:42:30.0817483Z 
2025-08-20T16:42:30.0817608Z <a id="alert_bot.alert_bot"></a>
2025-08-20T16:42:30.0817844Z 
2025-08-20T16:42:30.0817955Z # alert\_bot.alert\_bot
2025-08-20T16:42:30.0818133Z 
2025-08-20T16:42:30.0818256Z <a id="alert_bot.rules"></a>
2025-08-20T16:42:30.0818481Z 
2025-08-20T16:42:30.0818599Z # alert\_bot.rules
2025-08-20T16:42:30.0818773Z 
2025-08-20T16:42:30.0818889Z <a id="common"></a>
2025-08-20T16:42:30.0819048Z 
2025-08-20T16:42:30.0819378Z # common
2025-08-20T16:42:30.0819530Z 
2025-08-20T16:42:30.0819655Z <a id="common.dsn"></a>
2025-08-20T16:42:30.0819844Z 
2025-08-20T16:42:30.0819946Z # common.dsn
2025-08-20T16:42:30.0820108Z 
2025-08-20T16:42:30.0820240Z <a id="common.dsn.build_dsn"></a>
2025-08-20T16:42:30.0820477Z 
2025-08-20T16:42:30.0820586Z #### build\_dsn
2025-08-20T16:42:30.0820748Z 
2025-08-20T16:42:30.0820852Z ```python
2025-08-20T16:42:30.0821137Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:42:30.0821485Z ```
2025-08-20T16:42:30.0821844Z 
2025-08-20T16:42:30.0822048Z Return a Postgres DSN, validating required variables.
2025-08-20T16:42:30.0822362Z 
2025-08-20T16:42:30.0822651Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T16:42:30.0823325Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T16:42:30.0823984Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T16:42:30.0824473Z missing.
2025-08-20T16:42:30.0824615Z 
2025-08-20T16:42:30.0824750Z <a id="common.models_vendor"></a>
2025-08-20T16:42:30.0824983Z 
2025-08-20T16:42:30.0825096Z # common.models\_vendor
2025-08-20T16:42:30.0825286Z 
2025-08-20T16:42:30.0825421Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T16:42:30.0825677Z 
2025-08-20T16:42:30.0825792Z ## Vendor Objects
2025-08-20T16:42:30.0825953Z 
2025-08-20T16:42:30.0826052Z ```python
2025-08-20T16:42:30.0826292Z class Vendor(Base)
2025-08-20T16:42:30.0826546Z ```
2025-08-20T16:42:30.0826703Z 
2025-08-20T16:42:30.0826827Z Vendor of inventory items.
2025-08-20T16:42:30.0827034Z 
2025-08-20T16:42:30.0827199Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T16:42:30.0827487Z 
2025-08-20T16:42:30.0827604Z ## VendorPrice Objects
2025-08-20T16:42:30.0827792Z 
2025-08-20T16:42:30.0827899Z ```python
2025-08-20T16:42:30.0828144Z class VendorPrice(Base)
2025-08-20T16:42:30.0828429Z ```
2025-08-20T16:42:30.0828565Z 
2025-08-20T16:42:30.0828730Z Association table linking vendors to pricing.
2025-08-20T16:42:30.0829006Z 
2025-08-20T16:42:30.0829121Z <a id="common.db_url"></a>
2025-08-20T16:42:30.0829473Z 
2025-08-20T16:42:30.0829576Z # common.db\_url
2025-08-20T16:42:30.0829736Z 
2025-08-20T16:42:30.0829865Z <a id="common.db_url.build_url"></a>
2025-08-20T16:42:30.0830120Z 
2025-08-20T16:42:30.0830231Z #### build\_url
2025-08-20T16:42:30.0830391Z 
2025-08-20T16:42:30.0830493Z ```python
2025-08-20T16:42:30.0830757Z def build_url(async_: bool = True) -> str
2025-08-20T16:42:30.0831271Z ```
2025-08-20T16:42:30.0831409Z 
2025-08-20T16:42:30.0831571Z Return Postgres DSN from environment variables.
2025-08-20T16:42:30.0831858Z 
2025-08-20T16:42:30.0831976Z <a id="common.keepa"></a>
2025-08-20T16:42:30.0832181Z 
2025-08-20T16:42:30.0832295Z # common.keepa
2025-08-20T16:42:30.0832449Z 
2025-08-20T16:42:30.0832566Z <a id="common.llm"></a>
2025-08-20T16:42:30.0832745Z 
2025-08-20T16:42:30.0832842Z # common.llm
2025-08-20T16:42:30.0832998Z 
2025-08-20T16:42:30.0833120Z <a id="common.settings"></a>
2025-08-20T16:42:30.0833323Z 
2025-08-20T16:42:30.0833427Z # common.settings
2025-08-20T16:42:30.0833600Z 
2025-08-20T16:42:30.0833711Z <a id="common.db"></a>
2025-08-20T16:42:30.0833896Z 
2025-08-20T16:42:30.0834004Z # common.db
2025-08-20T16:42:30.0834152Z 
2025-08-20T16:42:30.0834291Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T16:42:30.0834556Z 
2025-08-20T16:42:30.0834678Z #### build\_sqlalchemy\_url
2025-08-20T16:42:30.0834881Z 
2025-08-20T16:42:30.0834979Z ```python
2025-08-20T16:42:30.0835266Z def build_sqlalchemy_url() -> str
2025-08-20T16:42:30.0835581Z ```
2025-08-20T16:42:30.0835713Z 
2025-08-20T16:42:30.0835856Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T16:42:30.0836111Z 
2025-08-20T16:42:30.0836251Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T16:42:30.0836508Z 
2025-08-20T16:42:30.0836619Z #### build\_asyncpg\_dsn
2025-08-20T16:42:30.0836813Z 
2025-08-20T16:42:30.0836908Z ```python
2025-08-20T16:42:30.0837165Z def build_asyncpg_dsn() -> str
2025-08-20T16:42:30.0837467Z ```
2025-08-20T16:42:30.0837585Z 
2025-08-20T16:42:30.0837776Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T16:42:30.0838100Z 
2025-08-20T16:42:30.0838230Z <a id="common.db.refresh_mvs"></a>
2025-08-20T16:42:30.0838459Z 
2025-08-20T16:42:30.0838567Z #### refresh\_mvs
2025-08-20T16:42:30.0838718Z 
2025-08-20T16:42:30.0838812Z ```python
2025-08-20T16:42:30.0839112Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T16:42:30.0839630Z ```
2025-08-20T16:42:30.0839766Z 
2025-08-20T16:42:30.0840211Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T16:42:30.0840531Z 
2025-08-20T16:42:30.0840649Z <a id="common.config"></a>
2025-08-20T16:42:30.0840842Z 
2025-08-20T16:42:30.0840943Z # common.config
2025-08-20T16:42:30.0841103Z 
2025-08-20T16:42:30.0841220Z <a id="common.base"></a>
2025-08-20T16:42:30.0841408Z 
2025-08-20T16:42:30.0841504Z # common.base
2025-08-20T16:42:30.0841656Z 
2025-08-20T16:42:30.0841776Z <a id="common.base.Base"></a>
2025-08-20T16:42:30.0841987Z 
2025-08-20T16:42:30.0842090Z ## Base Objects
2025-08-20T16:42:30.0842244Z 
2025-08-20T16:42:30.0842338Z ```python
2025-08-20T16:42:30.0842591Z class Base(DeclarativeBase)
2025-08-20T16:42:30.0842880Z ```
2025-08-20T16:42:30.0843008Z 
2025-08-20T16:42:30.0843148Z Base class for SQLAlchemy models.
2025-08-20T16:42:30.0843375Z 
2025-08-20T16:42:30.0843486Z <a id="repricer"></a>
2025-08-20T16:42:30.0843677Z 
2025-08-20T16:42:30.0843775Z # repricer
2025-08-20T16:42:30.0843918Z 
2025-08-20T16:42:30.0844068Z <a id="repricer.app.schemas"></a>
2025-08-20T16:42:30.0844304Z 
2025-08-20T16:42:30.0844418Z # repricer.app.schemas
2025-08-20T16:42:30.0844597Z 
2025-08-20T16:42:30.0844725Z <a id="repricer.app.deps"></a>
2025-08-20T16:42:30.0844945Z 
2025-08-20T16:42:30.0845052Z # repricer.app.deps
2025-08-20T16:42:30.0845223Z 
2025-08-20T16:42:30.0845389Z Placeholder module for Keepa / SP-API clients.
2025-08-20T16:42:30.0845668Z 
2025-08-20T16:42:30.0845801Z <a id="repricer.app.logic"></a>
2025-08-20T16:42:30.0846020Z 
2025-08-20T16:42:30.0846132Z # repricer.app.logic
2025-08-20T16:42:30.0846308Z 
2025-08-20T16:42:30.0846459Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T16:42:30.0846725Z 
2025-08-20T16:42:30.0846822Z #### MIN\_MARGIN
2025-08-20T16:42:30.0846981Z 
2025-08-20T16:42:30.0847076Z 15 % ROI
2025-08-20T16:42:30.0847214Z 
2025-08-20T16:42:30.0847370Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T16:42:30.0847650Z 
2025-08-20T16:42:30.0847758Z #### compute\_price
2025-08-20T16:42:30.0848147Z 
2025-08-20T16:42:30.0848264Z ```python
2025-08-20T16:42:30.0848625Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T16:42:30.0849074Z ```
2025-08-20T16:42:30.0849351Z 
2025-08-20T16:42:30.0849513Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T16:42:30.0849935Z Replace with real competitive logic later.
2025-08-20T16:42:30.0850195Z 
2025-08-20T16:42:30.0850321Z <a id="repricer.app.main"></a>
2025-08-20T16:42:30.0850533Z 
2025-08-20T16:42:30.0850642Z # repricer.app.main
2025-08-20T16:42:30.0850801Z 
2025-08-20T16:42:30.0850921Z <a id="repricer.app"></a>
2025-08-20T16:42:30.0851117Z 
2025-08-20T16:42:30.0851218Z # repricer.app
2025-08-20T16:42:30.0851377Z 
2025-08-20T16:42:30.0851512Z <a id="repricer.tests.test_imports"></a>
2025-08-20T16:42:30.0851759Z 
2025-08-20T16:42:30.0851892Z # repricer.tests.test\_imports
2025-08-20T16:42:30.0852120Z 
2025-08-20T16:42:30.0852254Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T16:42:30.0852500Z 
2025-08-20T16:42:30.0852638Z # repricer.tests.test\_smoke
2025-08-20T16:42:30.0852848Z 
2025-08-20T16:42:30.0852966Z <a id="repricer.tests"></a>
2025-08-20T16:42:30.0853172Z 
2025-08-20T16:42:30.0853276Z # repricer.tests
2025-08-20T16:42:30.0853437Z 
2025-08-20T16:42:30.0853531Z <a id="db"></a>
2025-08-20T16:42:30.0853692Z 
2025-08-20T16:42:30.0853785Z # db
2025-08-20T16:42:30.0853911Z 
2025-08-20T16:42:30.0854032Z <a id="db.utils.views"></a>
2025-08-20T16:42:30.0854230Z 
2025-08-20T16:42:30.0854335Z # db.utils.views
2025-08-20T16:42:30.0854495Z 
2025-08-20T16:42:30.0854642Z <a id="db.utils.views.replace_view"></a>
2025-08-20T16:42:30.0854896Z 
2025-08-20T16:42:30.0855001Z #### replace\_view
2025-08-20T16:42:30.0855173Z 
2025-08-20T16:42:30.0855272Z ```python
2025-08-20T16:42:30.0855569Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T16:42:30.0855948Z ```
2025-08-20T16:42:30.0856075Z 
2025-08-20T16:42:30.0856218Z Drop and recreate a SQL view atomically.
2025-08-20T16:42:30.0856475Z 
2025-08-20T16:42:30.0856594Z <a id="db.utils"></a>
2025-08-20T16:42:30.0856955Z 
2025-08-20T16:42:30.0857056Z # db.utils
2025-08-20T16:42:30.0857192Z 
2025-08-20T16:42:30.0857309Z <a id="price_importer"></a>
2025-08-20T16:42:30.0857514Z 
2025-08-20T16:42:30.0857616Z # price\_importer
2025-08-20T16:42:30.0857774Z 
2025-08-20T16:42:30.0857936Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T16:42:30.0858214Z 
2025-08-20T16:42:30.0858347Z # price\_importer.services\_common.dsn
2025-08-20T16:42:30.0858598Z 
2025-08-20T16:42:30.0858789Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T16:42:30.0859099Z 
2025-08-20T16:42:30.0859382Z #### build\_dsn
2025-08-20T16:42:30.0859551Z 
2025-08-20T16:42:30.0859647Z ```python
2025-08-20T16:42:30.0859914Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:42:30.0860243Z ```
2025-08-20T16:42:30.0860369Z 
2025-08-20T16:42:30.0860479Z Return safe DSN.
2025-08-20T16:42:30.0860641Z 
2025-08-20T16:42:30.0860921Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T16:42:30.0861493Z Falls back to individual PG_* variables.
2025-08-20T16:42:30.0862194Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T16:42:30.0862516Z 
2025-08-20T16:42:30.0862713Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T16:42:30.0863026Z 
2025-08-20T16:42:30.0863203Z # price\_importer.services\_common.models\_vendor
2025-08-20T16:42:30.0863498Z 
2025-08-20T16:42:30.0863660Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T16:42:30.0863944Z 
2025-08-20T16:42:30.0864088Z # price\_importer.services\_common.db\_url
2025-08-20T16:42:30.0864338Z 
2025-08-20T16:42:30.0864536Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T16:42:30.0864859Z 
2025-08-20T16:42:30.0864961Z #### build\_url
2025-08-20T16:42:30.0865121Z 
2025-08-20T16:42:30.0865226Z ```python
2025-08-20T16:42:30.0865487Z def build_url(async_: bool = True) -> str
2025-08-20T16:42:30.0865827Z ```
2025-08-20T16:42:30.0865952Z 
2025-08-20T16:42:30.0866291Z Return Postgres DSN from environment variables.
2025-08-20T16:42:30.0866600Z 
2025-08-20T16:42:30.0866764Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T16:42:30.0867048Z 
2025-08-20T16:42:30.0867198Z # price\_importer.services\_common.keepa
2025-08-20T16:42:30.0867470Z 
2025-08-20T16:42:30.0867622Z <a id="price_importer.services_common.llm"></a>
2025-08-20T16:42:30.0867893Z 
2025-08-20T16:42:30.0868034Z # price\_importer.services\_common.llm
2025-08-20T16:42:30.0868282Z 
2025-08-20T16:42:30.0868452Z <a id="price_importer.services_common.settings"></a>
2025-08-20T16:42:30.0868747Z 
2025-08-20T16:42:30.0868893Z # price\_importer.services\_common.settings
2025-08-20T16:42:30.0869320Z 
2025-08-20T16:42:30.0869488Z <a id="price_importer.services_common.db"></a>
2025-08-20T16:42:30.0869774Z 
2025-08-20T16:42:30.0869920Z # price\_importer.services\_common.db
2025-08-20T16:42:30.0870163Z 
2025-08-20T16:42:30.0870403Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T16:42:30.0870775Z 
2025-08-20T16:42:30.0870899Z #### build\_sqlalchemy\_url
2025-08-20T16:42:30.0871110Z 
2025-08-20T16:42:30.0871208Z ```python
2025-08-20T16:42:30.0871463Z def build_sqlalchemy_url() -> str
2025-08-20T16:42:30.0871790Z ```
2025-08-20T16:42:30.0871915Z 
2025-08-20T16:42:30.0872071Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T16:42:30.0872322Z 
2025-08-20T16:42:30.0872535Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T16:42:30.0872882Z 
2025-08-20T16:42:30.0872995Z #### build\_asyncpg\_dsn
2025-08-20T16:42:30.0873187Z 
2025-08-20T16:42:30.0873293Z ```python
2025-08-20T16:42:30.0873554Z def build_asyncpg_dsn() -> str
2025-08-20T16:42:30.0873859Z ```
2025-08-20T16:42:30.0873991Z 
2025-08-20T16:42:30.0874184Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T16:42:30.0874500Z 
2025-08-20T16:42:30.0874698Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T16:42:30.0875001Z 
2025-08-20T16:42:30.0875110Z #### refresh\_mvs
2025-08-20T16:42:30.0875449Z 
2025-08-20T16:42:30.0875545Z ```python
2025-08-20T16:42:30.0875837Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T16:42:30.0876218Z ```
2025-08-20T16:42:30.0876340Z 
2025-08-20T16:42:30.0876552Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T16:42:30.0876884Z 
2025-08-20T16:42:30.0877033Z <a id="price_importer.services_common"></a>
2025-08-20T16:42:30.0877292Z 
2025-08-20T16:42:30.0877428Z # price\_importer.services\_common
2025-08-20T16:42:30.0877674Z 
2025-08-20T16:42:30.0877834Z <a id="price_importer.services_common.base"></a>
2025-08-20T16:42:30.0878133Z 
2025-08-20T16:42:30.0878275Z # price\_importer.services\_common.base
2025-08-20T16:42:30.0878530Z 
2025-08-20T16:42:30.0878678Z <a id="price_importer.normaliser"></a>
2025-08-20T16:42:30.0878937Z 
2025-08-20T16:42:30.0879067Z # price\_importer.normaliser
2025-08-20T16:42:30.0879431Z 
2025-08-20T16:42:30.0879608Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T16:42:30.0879894Z 
2025-08-20T16:42:30.0880083Z # price\_importer.common.models\_vendor
2025-08-20T16:42:30.0880344Z 
2025-08-20T16:42:30.0880482Z <a id="price_importer.common.db_url"></a>
2025-08-20T16:42:30.0880736Z 
2025-08-20T16:42:30.0880867Z # price\_importer.common.db\_url
2025-08-20T16:42:30.0881084Z 
2025-08-20T16:42:30.0881239Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T16:42:30.0881525Z 
2025-08-20T16:42:30.0881623Z #### make\_dsn
2025-08-20T16:42:30.0881774Z 
2025-08-20T16:42:30.0881868Z ```python
2025-08-20T16:42:30.0882133Z def make_dsn(async_: bool = False) -> str
2025-08-20T16:42:30.0882473Z ```
2025-08-20T16:42:30.0882607Z 
2025-08-20T16:42:30.0882730Z Return DSN using shared builder.
2025-08-20T16:42:30.0882944Z 
2025-08-20T16:42:30.0883115Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T16:42:30.0883396Z 
2025-08-20T16:42:30.0883498Z #### build\_url
2025-08-20T16:42:30.0883655Z 
2025-08-20T16:42:30.0883752Z ```python
2025-08-20T16:42:30.0884014Z def build_url(async_: bool = False) -> str
2025-08-20T16:42:30.0884559Z ```
2025-08-20T16:42:30.0884694Z 
2025-08-20T16:42:30.0884893Z Return Postgres DSN built from environment variables.
2025-08-20T16:42:30.0885236Z 
2025-08-20T16:42:30.0885378Z <a id="price_importer.common"></a>
2025-08-20T16:42:30.0885631Z 
2025-08-20T16:42:30.0885770Z # price\_importer.common
2025-08-20T16:42:30.0885986Z 
2025-08-20T16:42:30.0886137Z <a id="price_importer.common.base"></a>
2025-08-20T16:42:30.0886427Z 
2025-08-20T16:42:30.0886559Z # price\_importer.common.base
2025-08-20T16:42:30.0886791Z 
2025-08-20T16:42:30.0886957Z <a id="price_importer.tests.conftest"></a>
2025-08-20T16:42:30.0887252Z 
2025-08-20T16:42:30.0887387Z # price\_importer.tests.conftest
2025-08-20T16:42:30.0887633Z 
2025-08-20T16:42:30.0887797Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T16:42:30.0888123Z 
2025-08-20T16:42:30.0888266Z # price\_importer.tests.test\_reader
2025-08-20T16:42:30.0888534Z 
2025-08-20T16:42:30.0888696Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T16:42:30.0889010Z 
2025-08-20T16:42:30.0889304Z # price\_importer.tests.test\_imports
2025-08-20T16:42:30.0889575Z 
2025-08-20T16:42:30.0889733Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T16:42:30.0890021Z 
2025-08-20T16:42:30.0890174Z # price\_importer.tests.test\_smoke
2025-08-20T16:42:30.0890419Z 
2025-08-20T16:42:30.0890589Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T16:42:30.0890896Z 
2025-08-20T16:42:30.0891044Z # price\_importer.tests.test\_normaliser
2025-08-20T16:42:30.0891311Z 
2025-08-20T16:42:30.0891457Z <a id="price_importer.tests"></a>
2025-08-20T16:42:30.0891693Z 
2025-08-20T16:42:30.0891811Z # price\_importer.tests
2025-08-20T16:42:30.0892010Z 
2025-08-20T16:42:30.0892156Z <a id="price_importer.reader"></a>
2025-08-20T16:42:30.0892403Z 
2025-08-20T16:42:30.0892528Z # price\_importer.reader
2025-08-20T16:42:30.0892744Z 
2025-08-20T16:42:30.0892898Z <a id="price_importer.repository"></a>
2025-08-20T16:42:30.0893167Z 
2025-08-20T16:42:30.0893308Z # price\_importer.repository
2025-08-20T16:42:30.0893719Z 
2025-08-20T16:42:30.0893863Z <a id="price_importer.import"></a>
2025-08-20T16:42:30.0894117Z 
2025-08-20T16:42:30.0894251Z # price\_importer.import
2025-08-20T16:42:30.0894462Z 
2025-08-20T16:42:30.0894578Z <a id="fees_h10"></a>
2025-08-20T16:42:30.0894777Z 
2025-08-20T16:42:30.0894884Z # fees\_h10
2025-08-20T16:42:30.0895036Z 
2025-08-20T16:42:30.0895162Z <a id="fees_h10.worker"></a>
2025-08-20T16:42:30.0895390Z 
2025-08-20T16:42:30.0895502Z # fees\_h10.worker
2025-08-20T16:42:30.0895678Z 
2025-08-20T16:42:30.0895846Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T16:42:30.0896138Z 
2025-08-20T16:42:30.0896262Z #### list\_active\_asins
2025-08-20T16:42:30.0896469Z 
2025-08-20T16:42:30.0896573Z ```python
2025-08-20T16:42:30.0896848Z def list_active_asins() -> list[str]
2025-08-20T16:42:30.0897196Z ```
2025-08-20T16:42:30.0897332Z 
2025-08-20T16:42:30.0897508Z Return known ASINs or an empty list if unavailable.
2025-08-20T16:42:30.0897838Z 
2025-08-20T16:42:30.0897988Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T16:42:30.0898243Z 
2025-08-20T16:42:30.0898380Z # fees\_h10.tests.test\_smoke
2025-08-20T16:42:30.0898612Z 
2025-08-20T16:42:30.0898734Z <a id="fees_h10.tests"></a>
2025-08-20T16:42:30.0898958Z 
2025-08-20T16:42:30.0899069Z # fees\_h10.tests
2025-08-20T16:42:30.0899431Z 
2025-08-20T16:42:30.0899555Z <a id="fees_h10.client"></a>
2025-08-20T16:42:30.0899786Z 
2025-08-20T16:42:30.0899895Z # fees\_h10.client
2025-08-20T16:42:30.0900072Z 
2025-08-20T16:42:30.0900213Z <a id="fees_h10.repository"></a>
2025-08-20T16:42:30.0900453Z 
2025-08-20T16:42:30.0900578Z # fees\_h10.repository
2025-08-20T16:42:30.0900782Z 
2025-08-20T16:42:30.0900944Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T16:42:30.0901238Z 
2025-08-20T16:42:30.0901351Z #### upsert\_fees\_raw
2025-08-20T16:42:30.0901551Z 
2025-08-20T16:42:30.0901652Z ```python
2025-08-20T16:42:30.0901941Z def upsert_fees_raw(engine: Engine,
2025-08-20T16:42:30.0902528Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T16:42:30.0902943Z                     *,
2025-08-20T16:42:30.0903326Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T16:42:30.0903756Z ```
2025-08-20T16:42:30.0903893Z 
2025-08-20T16:42:30.0904024Z Idempotent upsert for fees.
2025-08-20T16:42:30.0904256Z 
2025-08-20T16:42:30.0904510Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T16:42:30.0932271Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T16:42:30.0932825Z Only updates when one of the mutable fields changes.
2025-08-20T16:42:30.0933174Z 
2025-08-20T16:42:30.0933325Z <a id="emailer"></a>
2025-08-20T16:42:30.0933549Z 
2025-08-20T16:42:30.0933670Z # emailer
2025-08-20T16:42:30.0933832Z 
2025-08-20T16:42:30.0934036Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T16:42:30.0934361Z 
2025-08-20T16:42:30.0934496Z # emailer.tests.test\_import\_emailer
2025-08-20T16:42:30.0934746Z 
2025-08-20T16:42:30.0934889Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T16:42:30.0935127Z 
2025-08-20T16:42:30.0935253Z # emailer.tests.test\_smoke
2025-08-20T16:42:30.0935453Z 
2025-08-20T16:42:30.0935571Z <a id="emailer.tests"></a>
2025-08-20T16:42:30.0935762Z 
2025-08-20T16:42:30.0935875Z # emailer.tests
2025-08-20T16:42:30.0936038Z 
2025-08-20T16:42:30.0936165Z <a id="emailer.generate_body"></a>
2025-08-20T16:42:30.0936405Z 
2025-08-20T16:42:30.0936525Z # emailer.generate\_body
2025-08-20T16:42:30.0936717Z 
2025-08-20T16:42:30.0936837Z <a id="llm_server"></a>
2025-08-20T16:42:30.0937021Z 
2025-08-20T16:42:30.0937130Z # llm\_server
2025-08-20T16:42:30.0937292Z 
2025-08-20T16:42:30.0937429Z <a id="llm_server.app"></a>
2025-08-20T16:42:30.0937642Z 
2025-08-20T16:42:30.0937756Z # llm\_server.app
2025-08-20T16:42:30.0937940Z 
