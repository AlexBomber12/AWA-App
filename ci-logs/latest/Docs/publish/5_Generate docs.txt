2025-08-17T02:14:04.5158086Z ##[group]Run pydoc-markdown
2025-08-17T02:14:04.5158421Z [36;1mpydoc-markdown[0m
2025-08-17T02:14:04.5199459Z shell: /usr/bin/bash -e {0}
2025-08-17T02:14:04.5199686Z env:
2025-08-17T02:14:04.5199925Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:14:04.5200343Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T02:14:04.5200734Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:14:04.5201073Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:14:04.5201403Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:14:04.5201738Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T02:14:04.5202012Z ##[endgroup]
2025-08-17T02:14:04.8807468Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T02:14:04.8808210Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T02:14:04.8808583Z In "pydoc-markdown.yml"
2025-08-17T02:14:04.8808908Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T02:14:04.8809488Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T02:14:04.8810075Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T02:14:04.8810475Z 
2025-08-17T02:14:05.0942561Z <a id="__init__"></a>
2025-08-17T02:14:05.0943008Z 
2025-08-17T02:14:05.0943143Z # \_\_init\_\_
2025-08-17T02:14:05.0943340Z 
2025-08-17T02:14:05.0943465Z <a id="api"></a>
2025-08-17T02:14:05.0943669Z 
2025-08-17T02:14:05.0943790Z # api
2025-08-17T02:14:05.0943949Z 
2025-08-17T02:14:05.0944100Z <a id="api.tests.test_llm"></a>
2025-08-17T02:14:05.0944382Z 
2025-08-17T02:14:05.0944518Z # api.tests.test\_llm
2025-08-17T02:14:05.0944743Z 
2025-08-17T02:14:05.0944898Z <a id="api.tests.test_imports"></a>
2025-08-17T02:14:05.0945202Z 
2025-08-17T02:14:05.0945346Z # api.tests.test\_imports
2025-08-17T02:14:05.0945597Z 
2025-08-17T02:14:05.0945766Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T02:14:05.0946307Z 
2025-08-17T02:14:05.0946463Z # api.tests.test\_entrypoint
2025-08-17T02:14:05.0946788Z 
2025-08-17T02:14:05.0946940Z <a id="api.tests.test_health"></a>
2025-08-17T02:14:05.0947220Z 
2025-08-17T02:14:05.0947356Z # api.tests.test\_health
2025-08-17T02:14:05.0947606Z 
2025-08-17T02:14:05.0947753Z <a id="api.migrations.env"></a>
2025-08-17T02:14:05.0948018Z 
2025-08-17T02:14:05.0948156Z # api.migrations.env
2025-08-17T02:14:05.0948371Z 
2025-08-17T02:14:05.0948590Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T02:14:05.0948968Z 
2025-08-17T02:14:05.0949163Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T02:14:05.0949507Z 
2025-08-17T02:14:05.0949708Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T02:14:05.0950069Z 
2025-08-17T02:14:05.0950246Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T02:14:05.0950563Z 
2025-08-17T02:14:05.0950853Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T02:14:05.0951290Z 
2025-08-17T02:14:05.0951546Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T02:14:05.0952376Z 
2025-08-17T02:14:05.0952609Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T02:14:05.0952985Z 
2025-08-17T02:14:05.0953189Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T02:14:05.0953534Z 
2025-08-17T02:14:05.0953757Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T02:14:05.0954128Z 
2025-08-17T02:14:05.0954331Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T02:14:05.0954677Z 
2025-08-17T02:14:05.0954939Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T02:14:05.0955365Z 
2025-08-17T02:14:05.0955567Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T02:14:05.0956137Z 
2025-08-17T02:14:05.0956376Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T02:14:05.0956751Z 
2025-08-17T02:14:05.0956948Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T02:14:05.0957307Z 
2025-08-17T02:14:05.0957541Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T02:14:05.0958336Z 
2025-08-17T02:14:05.0958536Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T02:14:05.0958898Z 
2025-08-17T02:14:05.0959132Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T02:14:05.0959510Z 
2025-08-17T02:14:05.0959717Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T02:14:05.0960066Z 
2025-08-17T02:14:05.0960265Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T02:14:05.0960626Z 
2025-08-17T02:14:05.0960797Z # api.migrations.versions.0001\_baseline
2025-08-17T02:14:05.0961118Z 
2025-08-17T02:14:05.0961277Z <a id="api.migrations.versions"></a>
2025-08-17T02:14:05.0961589Z 
2025-08-17T02:14:05.0961734Z # api.migrations.versions
2025-08-17T02:14:05.0961977Z 
2025-08-17T02:14:05.0962124Z <a id="api.migrations"></a>
2025-08-17T02:14:05.0962435Z 
2025-08-17T02:14:05.0962559Z # api.migrations
2025-08-17T02:14:05.0962761Z 
2025-08-17T02:14:05.0962880Z <a id="api.db"></a>
2025-08-17T02:14:05.0963073Z 
2025-08-17T02:14:05.0963204Z # api.db
2025-08-17T02:14:05.0963372Z 
2025-08-17T02:14:05.0963515Z <a id="api.routes.stats"></a>
2025-08-17T02:14:05.0963779Z 
2025-08-17T02:14:05.0963914Z # api.routes.stats
2025-08-17T02:14:05.0964114Z 
2025-08-17T02:14:05.0964268Z <a id="api.routes.stats.kpi"></a>
2025-08-17T02:14:05.0964551Z 
2025-08-17T02:14:05.0964670Z #### kpi
2025-08-17T02:14:05.0964830Z 
2025-08-17T02:14:05.0964945Z ```python
2025-08-17T02:14:05.0965259Z @router.get("/stats/kpi")
2025-08-17T02:14:05.0965692Z def kpi() -> List[Dict[str, int]]
2025-08-17T02:14:05.0966274Z ```
2025-08-17T02:14:05.0966430Z 
2025-08-17T02:14:05.0966578Z Return KPI metrics (mock).
2025-08-17T02:14:05.0966823Z 
2025-08-17T02:14:05.0967003Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T02:14:05.0967330Z 
2025-08-17T02:14:05.0967461Z #### roi\_by\_vendor
2025-08-17T02:14:05.0967664Z 
2025-08-17T02:14:05.0967777Z ```python
2025-08-17T02:14:05.0968096Z @router.get("/stats/roi_by_vendor")
2025-08-17T02:14:05.0968557Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T02:14:05.0969007Z ```
2025-08-17T02:14:05.0969157Z 
2025-08-17T02:14:05.0969310Z Return ROI percent by vendor.
2025-08-17T02:14:05.0969573Z 
2025-08-17T02:14:05.0969735Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T02:14:05.0970040Z 
2025-08-17T02:14:05.0970165Z #### roi\_trend
2025-08-17T02:14:05.0970352Z 
2025-08-17T02:14:05.0970464Z ```python
2025-08-17T02:14:05.0970766Z @router.get("/stats/roi_trend")
2025-08-17T02:14:05.0971197Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T02:14:05.0971632Z ```
2025-08-17T02:14:05.0971782Z 
2025-08-17T02:14:05.0971924Z Return 30-day ROI trend.
2025-08-17T02:14:05.0972152Z 
2025-08-17T02:14:05.0972292Z <a id="api.routes.roi"></a>
2025-08-17T02:14:05.0972539Z 
2025-08-17T02:14:05.0972665Z # api.routes.roi
2025-08-17T02:14:05.0972945Z 
2025-08-17T02:14:05.0973105Z <a id="api.routes.health"></a>
2025-08-17T02:14:05.0973409Z 
2025-08-17T02:14:05.0973536Z # api.routes.health
2025-08-17T02:14:05.0973745Z 
2025-08-17T02:14:05.0973932Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T02:14:05.0974494Z 
2025-08-17T02:14:05.0974614Z #### MAX\_SKEW
2025-08-17T02:14:05.0974810Z 
2025-08-17T02:14:05.0974922Z seconds
2025-08-17T02:14:05.0975080Z 
2025-08-17T02:14:05.0975261Z <a id="api.routes.health.health"></a>
2025-08-17T02:14:05.0975574Z 
2025-08-17T02:14:05.0975688Z #### health
2025-08-17T02:14:05.0976041Z 
2025-08-17T02:14:05.0976168Z ```python
2025-08-17T02:14:05.0976522Z @router.get("/health", include_in_schema=False)
2025-08-17T02:14:05.0977240Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T02:14:05.0977866Z ```
2025-08-17T02:14:05.0978027Z 
2025-08-17T02:14:05.0978243Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T02:14:05.0978611Z 
2025-08-17T02:14:05.0978774Z <a id="api.routes.repository"></a>
2025-08-17T02:14:05.0979063Z 
2025-08-17T02:14:05.0979204Z # api.routes.repository
2025-08-17T02:14:05.0979432Z 
2025-08-17T02:14:05.0979569Z <a id="api.routes"></a>
2025-08-17T02:14:05.0980257Z 
2025-08-17T02:14:05.0980379Z # api.routes
2025-08-17T02:14:05.0980569Z 
2025-08-17T02:14:05.0980710Z <a id="api.models.fee"></a>
2025-08-17T02:14:05.0980957Z 
2025-08-17T02:14:05.0981087Z # api.models.fee
2025-08-17T02:14:05.0981280Z 
2025-08-17T02:14:05.0981406Z <a id="api.models"></a>
2025-08-17T02:14:05.0981604Z 
2025-08-17T02:14:05.0981720Z # api.models
2025-08-17T02:14:05.0981889Z 
2025-08-17T02:14:05.0982030Z <a id="api.roi_repository"></a>
2025-08-17T02:14:05.0982289Z 
2025-08-17T02:14:05.0982421Z # api.roi\_repository
2025-08-17T02:14:05.0982633Z 
2025-08-17T02:14:05.0982761Z <a id="api.main"></a>
2025-08-17T02:14:05.0982979Z 
2025-08-17T02:14:05.0983091Z # api.main
2025-08-17T02:14:05.0983255Z 
2025-08-17T02:14:05.0983401Z <a id="api.main.ready"></a>
2025-08-17T02:14:05.0983644Z 
2025-08-17T02:14:05.0983753Z #### ready
2025-08-17T02:14:05.0983923Z 
2025-08-17T02:14:05.0984033Z ```python
2025-08-17T02:14:05.0984502Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T02:14:05.0985340Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T02:14:05.0986188Z                                                                       str]
2025-08-17T02:14:05.0986644Z ```
2025-08-17T02:14:05.0986802Z 
2025-08-17T02:14:05.0986993Z Return 200 only when migrations are at head.
2025-08-17T02:14:05.0987320Z 
2025-08-17T02:14:05.0987456Z <a id="api.config"></a>
2025-08-17T02:14:05.0987687Z 
2025-08-17T02:14:05.0987807Z # api.config
2025-08-17T02:14:05.0987984Z 
2025-08-17T02:14:05.0988096Z <a id="etl"></a>
2025-08-17T02:14:05.0988292Z 
2025-08-17T02:14:05.0988398Z # etl
2025-08-17T02:14:05.0988551Z 
2025-08-17T02:14:05.0988698Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T02:14:05.0988976Z 
2025-08-17T02:14:05.0989108Z # etl.fba\_fee\_ingestor
2025-08-17T02:14:05.0989335Z 
2025-08-17T02:14:05.0989487Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T02:14:05.0989756Z 
2025-08-17T02:14:05.0989886Z # etl.sp\_fees\_ingestor
2025-08-17T02:14:05.0990147Z 
2025-08-17T02:14:05.0990292Z <a id="etl.keepa_ingestor"></a>
2025-08-17T02:14:05.0990556Z 
2025-08-17T02:14:05.0990690Z # etl.keepa\_ingestor
2025-08-17T02:14:05.0990905Z 
2025-08-17T02:14:05.0991023Z <a id="etl.db"></a>
2025-08-17T02:14:05.0991217Z 
2025-08-17T02:14:05.0991334Z # etl.db
2025-08-17T02:14:05.0991495Z 
2025-08-17T02:14:05.0991687Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T02:14:05.0992048Z 
2025-08-17T02:14:05.0992217Z # etl.dialects.amazon\_reimbursements
2025-08-17T02:14:05.0992526Z 
2025-08-17T02:14:05.0992696Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T02:14:05.0993032Z 
2025-08-17T02:14:05.0993183Z # etl.dialects.amazon\_returns
2025-08-17T02:14:05.0993451Z 
2025-08-17T02:14:05.0993597Z <a id="etl.dialects"></a>
2025-08-17T02:14:05.0993840Z 
2025-08-17T02:14:05.0993958Z # etl.dialects
2025-08-17T02:14:05.0994148Z 
2025-08-17T02:14:05.0994264Z <a id="ingest"></a>
2025-08-17T02:14:05.0994462Z 
2025-08-17T02:14:05.0994567Z # ingest
2025-08-17T02:14:05.0994745Z 
2025-08-17T02:14:05.0995141Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T02:14:05.0995449Z 
2025-08-17T02:14:05.0995600Z # ingest.tests.test\_smoke
2025-08-17T02:14:05.0995844Z 
2025-08-17T02:14:05.0996177Z <a id="ingest.tests"></a>
2025-08-17T02:14:05.0996430Z 
2025-08-17T02:14:05.0996545Z # ingest.tests
2025-08-17T02:14:05.0996731Z 
2025-08-17T02:14:05.0996880Z <a id="ingest.upload_router"></a>
2025-08-17T02:14:05.0997168Z 
2025-08-17T02:14:05.0997299Z # ingest.upload\_router
2025-08-17T02:14:05.0997525Z 
2025-08-17T02:14:05.0997677Z <a id="ingest.email_watcher"></a>
2025-08-17T02:14:05.0997947Z 
2025-08-17T02:14:05.0998075Z # ingest.email\_watcher
2025-08-17T02:14:05.0998297Z 
2025-08-17T02:14:05.0998466Z <a id="ingest.email_watcher.main"></a>
2025-08-17T02:14:05.0998773Z 
2025-08-17T02:14:05.0998888Z #### main
2025-08-17T02:14:05.0999064Z 
2025-08-17T02:14:05.0999182Z ```python
2025-08-17T02:14:05.0999485Z def main() -> dict[str, str]
2025-08-17T02:14:05.0999853Z ```
2025-08-17T02:14:05.1000007Z 
2025-08-17T02:14:05.1000509Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T02:14:05.1000940Z 
2025-08-17T02:14:05.1001180Z Returns {"status": "success"} when processing completes.
2025-08-17T02:14:05.1001571Z 
2025-08-17T02:14:05.1001727Z <a id="ingest.ingest_router"></a>
2025-08-17T02:14:05.1002003Z 
2025-08-17T02:14:05.1002140Z # ingest.ingest\_router
2025-08-17T02:14:05.1002370Z 
2025-08-17T02:14:05.1002503Z <a id="logistics_etl"></a>
2025-08-17T02:14:05.1002739Z 
2025-08-17T02:14:05.1002858Z # logistics\_etl
2025-08-17T02:14:05.1003062Z 
2025-08-17T02:14:05.1003199Z Daily logistics ETL job.
2025-08-17T02:14:05.1003433Z 
2025-08-17T02:14:05.1003587Z <a id="logistics_etl.__main__"></a>
2025-08-17T02:14:05.1003867Z 
2025-08-17T02:14:05.1004005Z # logistics\_etl.\_\_main\_\_
2025-08-17T02:14:05.1004263Z 
2025-08-17T02:14:05.1004401Z <a id="logistics_etl.dsn"></a>
2025-08-17T02:14:05.1004654Z 
2025-08-17T02:14:05.1004782Z # logistics\_etl.dsn
2025-08-17T02:14:05.1005006Z 
2025-08-17T02:14:05.1005239Z Local DSN builder to avoid cross-service dependency.
2025-08-17T02:14:05.1005620Z 
2025-08-17T02:14:05.1005792Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T02:14:05.1006290Z 
2025-08-17T02:14:05.1006412Z #### build\_dsn
2025-08-17T02:14:05.1006608Z 
2025-08-17T02:14:05.1006721Z ```python
2025-08-17T02:14:05.1007034Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:14:05.1007451Z ```
2025-08-17T02:14:05.1007606Z 
2025-08-17T02:14:05.1007868Z Return a Postgres DSN assembled from environment variables.
2025-08-17T02:14:05.1008293Z 
2025-08-17T02:14:05.1008586Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T02:14:05.1009343Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T02:14:05.1009989Z error when any required variable is missing.
2025-08-17T02:14:05.1010333Z 
2025-08-17T02:14:05.1010508Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T02:14:05.1010836Z 
2025-08-17T02:14:05.1010988Z # logistics\_etl.tests.conftest
2025-08-17T02:14:05.1011286Z 
2025-08-17T02:14:05.1011691Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T02:14:05.1012167Z 
2025-08-17T02:14:05.1012400Z # logistics\_etl.tests.test\_repository
2025-08-17T02:14:05.1012713Z 
2025-08-17T02:14:05.1012884Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T02:14:05.1013215Z 
2025-08-17T02:14:05.1013368Z # logistics\_etl.tests.test\_cron
2025-08-17T02:14:05.1013643Z 
2025-08-17T02:14:05.1013821Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T02:14:05.1014164Z 
2025-08-17T02:14:05.1014317Z # logistics\_etl.tests.test\_imports
2025-08-17T02:14:05.1014614Z 
2025-08-17T02:14:05.1014793Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T02:14:05.1015121Z 
2025-08-17T02:14:05.1015279Z # logistics\_etl.tests.test\_smoke
2025-08-17T02:14:05.1015576Z 
2025-08-17T02:14:05.1015752Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T02:14:05.1016248Z 
2025-08-17T02:14:05.1016403Z # logistics\_etl.tests.test\_client
2025-08-17T02:14:05.1016714Z 
2025-08-17T02:14:05.1017083Z <a id="logistics_etl.tests"></a>
2025-08-17T02:14:05.1017361Z 
2025-08-17T02:14:05.1017502Z # logistics\_etl.tests
2025-08-17T02:14:05.1017727Z 
2025-08-17T02:14:05.1017873Z <a id="logistics_etl.flow"></a>
2025-08-17T02:14:05.1018148Z 
2025-08-17T02:14:05.1018279Z # logistics\_etl.flow
2025-08-17T02:14:05.1018495Z 
2025-08-17T02:14:05.1018644Z <a id="logistics_etl.client"></a>
2025-08-17T02:14:05.1018931Z 
2025-08-17T02:14:05.1019064Z # logistics\_etl.client
2025-08-17T02:14:05.1019285Z 
2025-08-17T02:14:05.1019432Z <a id="logistics_etl.cron"></a>
2025-08-17T02:14:05.1019689Z 
2025-08-17T02:14:05.1019816Z # logistics\_etl.cron
2025-08-17T02:14:05.1020037Z 
2025-08-17T02:14:05.1020177Z <a id="logistics_etl.db"></a>
2025-08-17T02:14:05.1020436Z 
2025-08-17T02:14:05.1020559Z # logistics\_etl.db
2025-08-17T02:14:05.1020775Z 
2025-08-17T02:14:05.1020933Z <a id="logistics_etl.repository"></a>
2025-08-17T02:14:05.1021232Z 
2025-08-17T02:14:05.1021376Z # logistics\_etl.repository
2025-08-17T02:14:05.1021853Z 
2025-08-17T02:14:05.1021988Z <a id="alert_bot"></a>
2025-08-17T02:14:05.1022207Z 
2025-08-17T02:14:05.1022330Z # alert\_bot
2025-08-17T02:14:05.1022508Z 
2025-08-17T02:14:05.1022669Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T02:14:05.1022987Z 
2025-08-17T02:14:05.1023132Z # alert\_bot.tests.test\_smoke
2025-08-17T02:14:05.1023393Z 
2025-08-17T02:14:05.1023543Z <a id="alert_bot.tests"></a>
2025-08-17T02:14:05.1023794Z 
2025-08-17T02:14:05.1023914Z # alert\_bot.tests
2025-08-17T02:14:05.1024109Z 
2025-08-17T02:14:05.1024262Z <a id="alert_bot.alert_bot"></a>
2025-08-17T02:14:05.1024530Z 
2025-08-17T02:14:05.1024663Z # alert\_bot.alert\_bot
2025-08-17T02:14:05.1024890Z 
2025-08-17T02:14:05.1025024Z <a id="alert_bot.rules"></a>
2025-08-17T02:14:05.1025270Z 
2025-08-17T02:14:05.1025389Z # alert\_bot.rules
2025-08-17T02:14:05.1025597Z 
2025-08-17T02:14:05.1025717Z <a id="common"></a>
2025-08-17T02:14:05.1026088Z 
2025-08-17T02:14:05.1026215Z # common
2025-08-17T02:14:05.1026380Z 
2025-08-17T02:14:05.1026530Z <a id="common.dsn"></a>
2025-08-17T02:14:05.1026757Z 
2025-08-17T02:14:05.1026867Z # common.dsn
2025-08-17T02:14:05.1027046Z 
2025-08-17T02:14:05.1027199Z <a id="common.dsn.build_dsn"></a>
2025-08-17T02:14:05.1027488Z 
2025-08-17T02:14:05.1027604Z #### build\_dsn
2025-08-17T02:14:05.1027792Z 
2025-08-17T02:14:05.1027946Z ```python
2025-08-17T02:14:05.1028264Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:14:05.1028712Z ```
2025-08-17T02:14:05.1028878Z 
2025-08-17T02:14:05.1029104Z Return a Postgres DSN, validating required variables.
2025-08-17T02:14:05.1029487Z 
2025-08-17T02:14:05.1029838Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T02:14:05.1030669Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T02:14:05.1031448Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T02:14:05.1032018Z missing.
2025-08-17T02:14:05.1032178Z 
2025-08-17T02:14:05.1032338Z <a id="common.models_vendor"></a>
2025-08-17T02:14:05.1032642Z 
2025-08-17T02:14:05.1032778Z # common.models\_vendor
2025-08-17T02:14:05.1033011Z 
2025-08-17T02:14:05.1033171Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T02:14:05.1033483Z 
2025-08-17T02:14:05.1033604Z ## Vendor Objects
2025-08-17T02:14:05.1033805Z 
2025-08-17T02:14:05.1033917Z ```python
2025-08-17T02:14:05.1034208Z class Vendor(Base)
2025-08-17T02:14:05.1034506Z ```
2025-08-17T02:14:05.1034658Z 
2025-08-17T02:14:05.1034805Z Vendor of inventory items.
2025-08-17T02:14:05.1035239Z 
2025-08-17T02:14:05.1035436Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T02:14:05.1035791Z 
2025-08-17T02:14:05.1036100Z ## VendorPrice Objects
2025-08-17T02:14:05.1036335Z 
2025-08-17T02:14:05.1036461Z ```python
2025-08-17T02:14:05.1036754Z class VendorPrice(Base)
2025-08-17T02:14:05.1037080Z ```
2025-08-17T02:14:05.1037262Z 
2025-08-17T02:14:05.1037453Z Association table linking vendors to pricing.
2025-08-17T02:14:05.1037807Z 
2025-08-17T02:14:05.1037985Z <a id="common.db_url"></a>
2025-08-17T02:14:05.1038497Z 
2025-08-17T02:14:05.1038627Z # common.db\_url
2025-08-17T02:14:05.1038835Z 
2025-08-17T02:14:05.1038982Z <a id="common.db_url.build_url"></a>
2025-08-17T02:14:05.1039343Z 
2025-08-17T02:14:05.1039459Z #### build\_url
2025-08-17T02:14:05.1039646Z 
2025-08-17T02:14:05.1039761Z ```python
2025-08-17T02:14:05.1040088Z def build_url(async_: bool = True) -> str
2025-08-17T02:14:05.1040509Z ```
2025-08-17T02:14:05.1040658Z 
2025-08-17T02:14:05.1040837Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:14:05.1041164Z 
2025-08-17T02:14:05.1041311Z <a id="common.keepa"></a>
2025-08-17T02:14:05.1041549Z 
2025-08-17T02:14:05.1041669Z # common.keepa
2025-08-17T02:14:05.1041863Z 
2025-08-17T02:14:05.1041996Z <a id="common.llm"></a>
2025-08-17T02:14:05.1042218Z 
2025-08-17T02:14:05.1042332Z # common.llm
2025-08-17T02:14:05.1042517Z 
2025-08-17T02:14:05.1042657Z <a id="common.settings"></a>
2025-08-17T02:14:05.1042892Z 
2025-08-17T02:14:05.1043014Z # common.settings
2025-08-17T02:14:05.1043389Z 
2025-08-17T02:14:05.1043510Z <a id="common.db"></a>
2025-08-17T02:14:05.1043721Z 
2025-08-17T02:14:05.1043833Z # common.db
2025-08-17T02:14:05.1044001Z 
2025-08-17T02:14:05.1044172Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T02:14:05.1044505Z 
2025-08-17T02:14:05.1044641Z #### build\_sqlalchemy\_url
2025-08-17T02:14:05.1044886Z 
2025-08-17T02:14:05.1045003Z ```python
2025-08-17T02:14:05.1045312Z def build_sqlalchemy_url() -> str
2025-08-17T02:14:05.1045703Z ```
2025-08-17T02:14:05.1046035Z 
2025-08-17T02:14:05.1046230Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:14:05.1046566Z 
2025-08-17T02:14:05.1046732Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T02:14:05.1047049Z 
2025-08-17T02:14:05.1047186Z #### build\_asyncpg\_dsn
2025-08-17T02:14:05.1047428Z 
2025-08-17T02:14:05.1047543Z ```python
2025-08-17T02:14:05.1047834Z def build_asyncpg_dsn() -> str
2025-08-17T02:14:05.1048177Z ```
2025-08-17T02:14:05.1048318Z 
2025-08-17T02:14:05.1048567Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:14:05.1048960Z 
2025-08-17T02:14:05.1049107Z <a id="common.db.refresh_mvs"></a>
2025-08-17T02:14:05.1049371Z 
2025-08-17T02:14:05.1049472Z #### refresh\_mvs
2025-08-17T02:14:05.1049634Z 
2025-08-17T02:14:05.1049730Z ```python
2025-08-17T02:14:05.1050049Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:14:05.1050440Z ```
2025-08-17T02:14:05.1050563Z 
2025-08-17T02:14:05.1050776Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:14:05.1051139Z 
2025-08-17T02:14:05.1051273Z <a id="common.config"></a>
2025-08-17T02:14:05.1051488Z 
2025-08-17T02:14:05.1051605Z # common.config
2025-08-17T02:14:05.1051791Z 
2025-08-17T02:14:05.1051908Z <a id="common.base"></a>
2025-08-17T02:14:05.1052113Z 
2025-08-17T02:14:05.1052232Z # common.base
2025-08-17T02:14:05.1052399Z 
2025-08-17T02:14:05.1052537Z <a id="common.base.Base"></a>
2025-08-17T02:14:05.1052782Z 
2025-08-17T02:14:05.1052895Z ## Base Objects
2025-08-17T02:14:05.1053081Z 
2025-08-17T02:14:05.1053178Z ```python
2025-08-17T02:14:05.1053447Z class Base(DeclarativeBase)
2025-08-17T02:14:05.1053749Z ```
2025-08-17T02:14:05.1053880Z 
2025-08-17T02:14:05.1054010Z Base class for SQLAlchemy models.
2025-08-17T02:14:05.1054251Z 
2025-08-17T02:14:05.1054379Z <a id="repricer"></a>
2025-08-17T02:14:05.1054623Z 
2025-08-17T02:14:05.1054719Z # repricer
2025-08-17T02:14:05.1054860Z 
2025-08-17T02:14:05.1055001Z <a id="repricer.app.schemas"></a>
2025-08-17T02:14:05.1055235Z 
2025-08-17T02:14:05.1055350Z # repricer.app.schemas
2025-08-17T02:14:05.1055558Z 
2025-08-17T02:14:05.1055687Z <a id="repricer.app.deps"></a>
2025-08-17T02:14:05.1056131Z 
2025-08-17T02:14:05.1056247Z # repricer.app.deps
2025-08-17T02:14:05.1056430Z 
2025-08-17T02:14:05.1056617Z Placeholder module for Keepa / SP-API clients.
2025-08-17T02:14:05.1056922Z 
2025-08-17T02:14:05.1057048Z <a id="repricer.app.logic"></a>
2025-08-17T02:14:05.1057287Z 
2025-08-17T02:14:05.1057404Z # repricer.app.logic
2025-08-17T02:14:05.1057976Z 
2025-08-17T02:14:05.1058134Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T02:14:05.1058427Z 
2025-08-17T02:14:05.1058525Z #### MIN\_MARGIN
2025-08-17T02:14:05.1058684Z 
2025-08-17T02:14:05.1058774Z 15 % ROI
2025-08-17T02:14:05.1058904Z 
2025-08-17T02:14:05.1059053Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T02:14:05.1059342Z 
2025-08-17T02:14:05.1059517Z #### compute\_price
2025-08-17T02:14:05.1059681Z 
2025-08-17T02:14:05.1059781Z ```python
2025-08-17T02:14:05.1060179Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T02:14:05.1060656Z ```
2025-08-17T02:14:05.1060781Z 
2025-08-17T02:14:05.1060943Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T02:14:05.1061389Z Replace with real competitive logic later.
2025-08-17T02:14:05.1061666Z 
2025-08-17T02:14:05.1061789Z <a id="repricer.app.main"></a>
2025-08-17T02:14:05.1062019Z 
2025-08-17T02:14:05.1062130Z # repricer.app.main
2025-08-17T02:14:05.1062344Z 
2025-08-17T02:14:05.1062654Z <a id="repricer.app"></a>
2025-08-17T02:14:05.1062883Z 
2025-08-17T02:14:05.1062987Z # repricer.app
2025-08-17T02:14:05.1063146Z 
2025-08-17T02:14:05.1063284Z <a id="repricer.tests.test_imports"></a>
2025-08-17T02:14:05.1063560Z 
2025-08-17T02:14:05.1063687Z # repricer.tests.test\_imports
2025-08-17T02:14:05.1063914Z 
2025-08-17T02:14:05.1064055Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T02:14:05.1064311Z 
2025-08-17T02:14:05.1064444Z # repricer.tests.test\_smoke
2025-08-17T02:14:05.1064671Z 
2025-08-17T02:14:05.1064793Z <a id="repricer.tests"></a>
2025-08-17T02:14:05.1065007Z 
2025-08-17T02:14:05.1065109Z # repricer.tests
2025-08-17T02:14:05.1065273Z 
2025-08-17T02:14:05.1065372Z <a id="db"></a>
2025-08-17T02:14:05.1065530Z 
2025-08-17T02:14:05.1065617Z # db
2025-08-17T02:14:05.1065740Z 
2025-08-17T02:14:05.1066028Z <a id="db.utils.views"></a>
2025-08-17T02:14:05.1066247Z 
2025-08-17T02:14:05.1066353Z # db.utils.views
2025-08-17T02:14:05.1066515Z 
2025-08-17T02:14:05.1066664Z <a id="db.utils.views.replace_view"></a>
2025-08-17T02:14:05.1066947Z 
2025-08-17T02:14:05.1067044Z #### replace\_view
2025-08-17T02:14:05.1067209Z 
2025-08-17T02:14:05.1067301Z ```python
2025-08-17T02:14:05.1067582Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T02:14:05.1067964Z ```
2025-08-17T02:14:05.1068088Z 
2025-08-17T02:14:05.1068232Z Drop and recreate a SQL view atomically.
2025-08-17T02:14:05.1068490Z 
2025-08-17T02:14:05.1068591Z <a id="db.utils"></a>
2025-08-17T02:14:05.1068767Z 
2025-08-17T02:14:05.1068868Z # db.utils
2025-08-17T02:14:05.1069004Z 
2025-08-17T02:14:05.1069123Z <a id="price_importer"></a>
2025-08-17T02:14:05.1069327Z 
2025-08-17T02:14:05.1069433Z # price\_importer
2025-08-17T02:14:05.1069597Z 
2025-08-17T02:14:05.1069761Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T02:14:05.1070049Z 
2025-08-17T02:14:05.1070189Z # price\_importer.services\_common.dsn
2025-08-17T02:14:05.1070451Z 
2025-08-17T02:14:05.1070651Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T02:14:05.1070988Z 
2025-08-17T02:14:05.1071091Z #### build\_dsn
2025-08-17T02:14:05.1071249Z 
2025-08-17T02:14:05.1071341Z ```python
2025-08-17T02:14:05.1071607Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:14:05.1071960Z ```
2025-08-17T02:14:05.1072085Z 
2025-08-17T02:14:05.1072187Z Return safe DSN.
2025-08-17T02:14:05.1072339Z 
2025-08-17T02:14:05.1072779Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T02:14:05.1073097Z 
2025-08-17T02:14:05.1073285Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T02:14:05.1073603Z 
2025-08-17T02:14:05.1073766Z # price\_importer.services\_common.models\_vendor
2025-08-17T02:14:05.1074063Z 
2025-08-17T02:14:05.1074223Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T02:14:05.1074506Z 
2025-08-17T02:14:05.1074658Z # price\_importer.services\_common.db\_url
2025-08-17T02:14:05.1074920Z 
2025-08-17T02:14:05.1075118Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T02:14:05.1075460Z 
2025-08-17T02:14:05.1076181Z #### build\_url
2025-08-17T02:14:05.1076343Z 
2025-08-17T02:14:05.1076439Z ```python
2025-08-17T02:14:05.1076703Z def build_url(async_: bool = True) -> str
2025-08-17T02:14:05.1077053Z ```
2025-08-17T02:14:05.1077174Z 
2025-08-17T02:14:05.1077320Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:14:05.1077587Z 
2025-08-17T02:14:05.1077755Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T02:14:05.1078037Z 
2025-08-17T02:14:05.1078175Z # price\_importer.services\_common.keepa
2025-08-17T02:14:05.1078445Z 
2025-08-17T02:14:05.1078603Z <a id="price_importer.services_common.llm"></a>
2025-08-17T02:14:05.1078881Z 
2025-08-17T02:14:05.1079021Z # price\_importer.services\_common.llm
2025-08-17T02:14:05.1079274Z 
2025-08-17T02:14:05.1079450Z <a id="price_importer.services_common.settings"></a>
2025-08-17T02:14:05.1079752Z 
2025-08-17T02:14:05.1079899Z # price\_importer.services\_common.settings
2025-08-17T02:14:05.1080169Z 
2025-08-17T02:14:05.1080318Z <a id="price_importer.services_common.db"></a>
2025-08-17T02:14:05.1080783Z 
2025-08-17T02:14:05.1080922Z # price\_importer.services\_common.db
2025-08-17T02:14:05.1081170Z 
2025-08-17T02:14:05.1081410Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T02:14:05.1081781Z 
2025-08-17T02:14:05.1081896Z #### build\_sqlalchemy\_url
2025-08-17T02:14:05.1082099Z 
2025-08-17T02:14:05.1082192Z ```python
2025-08-17T02:14:05.1082445Z def build_sqlalchemy_url() -> str
2025-08-17T02:14:05.1082752Z ```
2025-08-17T02:14:05.1082875Z 
2025-08-17T02:14:05.1083014Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:14:05.1083282Z 
2025-08-17T02:14:05.1083507Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T02:14:05.1083865Z 
2025-08-17T02:14:05.1083982Z #### build\_asyncpg\_dsn
2025-08-17T02:14:05.1084172Z 
2025-08-17T02:14:05.1084269Z ```python
2025-08-17T02:14:05.1084536Z def build_asyncpg_dsn() -> str
2025-08-17T02:14:05.1084831Z ```
2025-08-17T02:14:05.1084960Z 
2025-08-17T02:14:05.1085160Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:14:05.1085490Z 
2025-08-17T02:14:05.1085690Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T02:14:05.1086217Z 
2025-08-17T02:14:05.1086318Z #### refresh\_mvs
2025-08-17T02:14:05.1086475Z 
2025-08-17T02:14:05.1086570Z ```python
2025-08-17T02:14:05.1086856Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:14:05.1087237Z ```
2025-08-17T02:14:05.1087356Z 
2025-08-17T02:14:05.1087561Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:14:05.1087896Z 
2025-08-17T02:14:05.1088037Z <a id="price_importer.services_common"></a>
2025-08-17T02:14:05.1088305Z 
2025-08-17T02:14:05.1088439Z # price\_importer.services\_common
2025-08-17T02:14:05.1088669Z 
2025-08-17T02:14:05.1088822Z <a id="price_importer.services_common.base"></a>
2025-08-17T02:14:05.1089118Z 
2025-08-17T02:14:05.1089252Z # price\_importer.services\_common.base
2025-08-17T02:14:05.1089504Z 
2025-08-17T02:14:05.1089632Z <a id="price_importer.normaliser"></a>
2025-08-17T02:14:05.1089907Z 
2025-08-17T02:14:05.1090032Z # price\_importer.normaliser
2025-08-17T02:14:05.1090242Z 
2025-08-17T02:14:05.1090403Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T02:14:05.1090688Z 
2025-08-17T02:14:05.1090823Z # price\_importer.common.models\_vendor
2025-08-17T02:14:05.1091083Z 
2025-08-17T02:14:05.1091220Z <a id="price_importer.common.db_url"></a>
2025-08-17T02:14:05.1091469Z 
2025-08-17T02:14:05.1091596Z # price\_importer.common.db\_url
2025-08-17T02:14:05.1091822Z 
2025-08-17T02:14:05.1091980Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T02:14:05.1092266Z 
2025-08-17T02:14:05.1092365Z #### make\_dsn
2025-08-17T02:14:05.1092517Z 
2025-08-17T02:14:05.1092608Z ```python
2025-08-17T02:14:05.1092859Z def make_dsn(async_: bool = False) -> str
2025-08-17T02:14:05.1093188Z ```
2025-08-17T02:14:05.1093318Z 
2025-08-17T02:14:05.1093498Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T02:14:05.1093800Z 
2025-08-17T02:14:05.1094173Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T02:14:05.1094469Z 
2025-08-17T02:14:05.1094566Z #### build\_url
2025-08-17T02:14:05.1094716Z 
2025-08-17T02:14:05.1094813Z ```python
2025-08-17T02:14:05.1095074Z def build_url(async_: bool = False) -> str
2025-08-17T02:14:05.1095427Z ```
2025-08-17T02:14:05.1095549Z 
2025-08-17T02:14:05.1095734Z Return Postgres DSN built from environment variables.
2025-08-17T02:14:05.1096207Z 
2025-08-17T02:14:05.1096344Z <a id="price_importer.common"></a>
2025-08-17T02:14:05.1096585Z 
2025-08-17T02:14:05.1096708Z # price\_importer.common
2025-08-17T02:14:05.1096903Z 
2025-08-17T02:14:05.1097038Z <a id="price_importer.common.base"></a>
2025-08-17T02:14:05.1097299Z 
2025-08-17T02:14:05.1097431Z # price\_importer.common.base
2025-08-17T02:14:05.1097643Z 
2025-08-17T02:14:05.1097787Z <a id="price_importer.tests.conftest"></a>
2025-08-17T02:14:05.1098063Z 
2025-08-17T02:14:05.1098190Z # price\_importer.tests.conftest
2025-08-17T02:14:05.1098601Z 
2025-08-17T02:14:05.1098760Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T02:14:05.1099034Z 
2025-08-17T02:14:05.1099168Z # price\_importer.tests.test\_reader
2025-08-17T02:14:05.1099412Z 
2025-08-17T02:14:05.1099570Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T02:14:05.1099841Z 
2025-08-17T02:14:05.1099974Z # price\_importer.tests.test\_imports
2025-08-17T02:14:05.1100221Z 
2025-08-17T02:14:05.1100364Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T02:14:05.1100628Z 
2025-08-17T02:14:05.1100769Z # price\_importer.tests.test\_smoke
2025-08-17T02:14:05.1101007Z 
2025-08-17T02:14:05.1101164Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T02:14:05.1101445Z 
2025-08-17T02:14:05.1101589Z # price\_importer.tests.test\_normaliser
2025-08-17T02:14:05.1101843Z 
2025-08-17T02:14:05.1101967Z <a id="price_importer.tests"></a>
2025-08-17T02:14:05.1102198Z 
2025-08-17T02:14:05.1102310Z # price\_importer.tests
2025-08-17T02:14:05.1102493Z 
2025-08-17T02:14:05.1102634Z <a id="price_importer.reader"></a>
2025-08-17T02:14:05.1102878Z 
2025-08-17T02:14:05.1102995Z # price\_importer.reader
2025-08-17T02:14:05.1103185Z 
2025-08-17T02:14:05.1103346Z <a id="price_importer.reader.load_file"></a>
2025-08-17T02:14:05.1103614Z 
2025-08-17T02:14:05.1103713Z #### load\_file
2025-08-17T02:14:05.1103869Z 
2025-08-17T02:14:05.1103962Z ```python
2025-08-17T02:14:05.1104221Z def load_file(path: str | Path) -> Any
2025-08-17T02:14:05.1104555Z ```
2025-08-17T02:14:05.1104674Z 
2025-08-17T02:14:05.1104817Z Return DataFrame from CSV or Excel file.
2025-08-17T02:14:05.1105077Z 
2025-08-17T02:14:05.1105243Z Raises RuntimeError if pandas is unavailable.
2025-08-17T02:14:05.1105525Z 
2025-08-17T02:14:05.1105677Z <a id="price_importer.repository"></a>
2025-08-17T02:14:05.1106116Z 
2025-08-17T02:14:05.1106245Z # price\_importer.repository
2025-08-17T02:14:05.1106469Z 
2025-08-17T02:14:05.1106595Z <a id="price_importer.import"></a>
2025-08-17T02:14:05.1106827Z 
2025-08-17T02:14:05.1106949Z # price\_importer.import
2025-08-17T02:14:05.1107154Z 
2025-08-17T02:14:05.1107255Z <a id="fees_h10"></a>
2025-08-17T02:14:05.1107428Z 
2025-08-17T02:14:05.1107528Z # fees\_h10
2025-08-17T02:14:05.1107663Z 
2025-08-17T02:14:05.1107773Z <a id="fees_h10.worker"></a>
2025-08-17T02:14:05.1107979Z 
2025-08-17T02:14:05.1108077Z # fees\_h10.worker
2025-08-17T02:14:05.1108241Z 
2025-08-17T02:14:05.1108383Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T02:14:05.1108662Z 
2025-08-17T02:14:05.1108771Z #### list\_active\_asins
2025-08-17T02:14:05.1108952Z 
2025-08-17T02:14:05.1109048Z ```python
2025-08-17T02:14:05.1109298Z def list_active_asins() -> list[str]
2025-08-17T02:14:05.1109620Z ```
2025-08-17T02:14:05.1109749Z 
2025-08-17T02:14:05.1109925Z Return known ASINs or an empty list if unavailable.
2025-08-17T02:14:05.1110229Z 
2025-08-17T02:14:05.1110363Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T02:14:05.1110612Z 
2025-08-17T02:14:05.1110737Z # fees\_h10.tests.test\_smoke
2025-08-17T02:14:05.1110944Z 
2025-08-17T02:14:05.1111241Z <a id="fees_h10.tests"></a>
2025-08-17T02:14:05.1111438Z 
2025-08-17T02:14:05.1111550Z # fees\_h10.tests
2025-08-17T02:14:05.1111704Z 
2025-08-17T02:14:05.1111815Z <a id="fees_h10.client"></a>
2025-08-17T02:14:05.1112023Z 
2025-08-17T02:14:05.1112127Z # fees\_h10.client
2025-08-17T02:14:05.1112287Z 
2025-08-17T02:14:05.1112419Z <a id="fees_h10.repository"></a>
2025-08-17T02:14:05.1112640Z 
2025-08-17T02:14:05.1112749Z # fees\_h10.repository
2025-08-17T02:14:05.1112930Z 
2025-08-17T02:14:05.1113049Z <a id="emailer"></a>
2025-08-17T02:14:05.1113227Z 
2025-08-17T02:14:05.1113319Z # emailer
2025-08-17T02:14:05.1113458Z 
2025-08-17T02:14:05.1113612Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T02:14:05.1113886Z 
2025-08-17T02:14:05.1114020Z # emailer.tests.test\_import\_emailer
2025-08-17T02:14:05.1114269Z 
2025-08-17T02:14:05.1114404Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T02:14:05.1114642Z 
2025-08-17T02:14:05.1114769Z # emailer.tests.test\_smoke
2025-08-17T02:14:05.1115150Z 
2025-08-17T02:14:05.1115270Z <a id="emailer.tests"></a>
2025-08-17T02:14:05.1115471Z 
2025-08-17T02:14:05.1115570Z # emailer.tests
2025-08-17T02:14:05.1115717Z 
2025-08-17T02:14:05.1115844Z <a id="emailer.generate_body"></a>
2025-08-17T02:14:05.1116290Z 
2025-08-17T02:14:05.1116400Z # emailer.generate\_body
2025-08-17T02:14:05.1116592Z 
2025-08-17T02:14:05.1116706Z <a id="llm_server"></a>
2025-08-17T02:14:05.1116885Z 
2025-08-17T02:14:05.1116982Z # llm\_server
2025-08-17T02:14:05.1117132Z 
2025-08-17T02:14:05.1117245Z <a id="llm_server.app"></a>
2025-08-17T02:14:05.1117446Z 
2025-08-17T02:14:05.1117546Z # llm\_server.app
2025-08-17T02:14:05.1117713Z 
