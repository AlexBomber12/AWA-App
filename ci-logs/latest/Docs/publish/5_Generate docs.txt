2025-08-18T23:41:03.3100923Z ##[group]Run pydoc-markdown
2025-08-18T23:41:03.3101216Z [36;1mpydoc-markdown[0m
2025-08-18T23:41:03.3143186Z shell: /usr/bin/bash -e {0}
2025-08-18T23:41:03.3143426Z env:
2025-08-18T23:41:03.3143664Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:41:03.3144340Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T23:41:03.3144739Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:41:03.3145074Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:41:03.3145414Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:41:03.3145754Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T23:41:03.3146041Z ##[endgroup]
2025-08-18T23:41:03.6414706Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T23:41:03.6415459Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T23:41:03.6415866Z In "pydoc-markdown.yml"
2025-08-18T23:41:03.6416196Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T23:41:03.6416679Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T23:41:03.6417197Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T23:41:03.6417540Z 
2025-08-18T23:41:03.9515740Z <a id="__init__"></a>
2025-08-18T23:41:03.9516328Z 
2025-08-18T23:41:03.9516460Z # \_\_init\_\_
2025-08-18T23:41:03.9516669Z 
2025-08-18T23:41:03.9516797Z <a id="api"></a>
2025-08-18T23:41:03.9516992Z 
2025-08-18T23:41:03.9517115Z # api
2025-08-18T23:41:03.9517281Z 
2025-08-18T23:41:03.9517423Z <a id="api.errors"></a>
2025-08-18T23:41:03.9517658Z 
2025-08-18T23:41:03.9517782Z # api.errors
2025-08-18T23:41:03.9517964Z 
2025-08-18T23:41:03.9518115Z <a id="api.sentry_config"></a>
2025-08-18T23:41:03.9518385Z 
2025-08-18T23:41:03.9518518Z # api.sentry\_config
2025-08-18T23:41:03.9518731Z 
2025-08-18T23:41:03.9518906Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T23:41:03.9519217Z 
2025-08-18T23:41:03.9519802Z # api.tests.test\_sentry\_scrub
2025-08-18T23:41:03.9520093Z 
2025-08-18T23:41:03.9520270Z <a id="api.tests.test_errors_json"></a>
2025-08-18T23:41:03.9520575Z 
2025-08-18T23:41:03.9520726Z # api.tests.test\_errors\_json
2025-08-18T23:41:03.9520988Z 
2025-08-18T23:41:03.9521138Z <a id="api.tests.test_llm"></a>
2025-08-18T23:41:03.9521398Z 
2025-08-18T23:41:03.9521538Z # api.tests.test\_llm
2025-08-18T23:41:03.9521754Z 
2025-08-18T23:41:03.9521919Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T23:41:03.9522227Z 
2025-08-18T23:41:03.9522382Z # api.tests.test\_sentry\_event
2025-08-18T23:41:03.9522637Z 
2025-08-18T23:41:03.9522869Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T23:41:03.9523254Z 
2025-08-18T23:41:03.9523399Z ## DummyTransport Objects
2025-08-18T23:41:03.9523641Z 
2025-08-18T23:41:03.9523771Z ```python
2025-08-18T23:41:03.9524314Z class DummyTransport()
2025-08-18T23:41:03.9524669Z ```
2025-08-18T23:41:03.9524834Z 
2025-08-18T23:41:03.9525159Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T23:41:03.9525659Z 
2025-08-18T23:41:03.9525798Z #### capture\_envelope
2025-08-18T23:41:03.9526020Z 
2025-08-18T23:41:03.9526139Z ```python
2025-08-18T23:41:03.9526463Z def capture_envelope(envelope)
2025-08-18T23:41:03.9526829Z ```
2025-08-18T23:41:03.9526981Z 
2025-08-18T23:41:03.9527207Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T23:41:03.9527583Z 
2025-08-18T23:41:03.9527749Z <a id="api.tests.test_cors"></a>
2025-08-18T23:41:03.9528022Z 
2025-08-18T23:41:03.9528164Z # api.tests.test\_cors
2025-08-18T23:41:03.9528393Z 
2025-08-18T23:41:03.9528550Z <a id="api.tests.test_imports"></a>
2025-08-18T23:41:03.9528838Z 
2025-08-18T23:41:03.9528977Z # api.tests.test\_imports
2025-08-18T23:41:03.9529222Z 
2025-08-18T23:41:03.9529380Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T23:41:03.9529679Z 
2025-08-18T23:41:03.9529845Z # api.tests.test\_rate\_limit
2025-08-18T23:41:03.9530111Z 
2025-08-18T23:41:03.9530293Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T23:41:03.9530993Z 
2025-08-18T23:41:03.9531117Z #### app
2025-08-18T23:41:03.9531288Z 
2025-08-18T23:41:03.9531409Z noqa: E402
2025-08-18T23:41:03.9531585Z 
2025-08-18T23:41:03.9531750Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T23:41:03.9532052Z 
2025-08-18T23:41:03.9532207Z # api.tests.test\_entrypoint
2025-08-18T23:41:03.9532460Z 
2025-08-18T23:41:03.9532612Z <a id="api.tests.test_health"></a>
2025-08-18T23:41:03.9532904Z 
2025-08-18T23:41:03.9533046Z # api.tests.test\_health
2025-08-18T23:41:03.9533278Z 
2025-08-18T23:41:03.9533424Z <a id="api.logging_config"></a>
2025-08-18T23:41:03.9533693Z 
2025-08-18T23:41:03.9533826Z # api.logging\_config
2025-08-18T23:41:03.9534223Z 
2025-08-18T23:41:03.9534390Z <a id="api.migrations.env"></a>
2025-08-18T23:41:03.9534658Z 
2025-08-18T23:41:03.9534796Z # api.migrations.env
2025-08-18T23:41:03.9535012Z 
2025-08-18T23:41:03.9535243Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T23:41:03.9535625Z 
2025-08-18T23:41:03.9535828Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T23:41:03.9536187Z 
2025-08-18T23:41:03.9536387Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T23:41:03.9536739Z 
2025-08-18T23:41:03.9536922Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T23:41:03.9537241Z 
2025-08-18T23:41:03.9537523Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T23:41:03.9537955Z 
2025-08-18T23:41:03.9538202Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T23:41:03.9538594Z 
2025-08-18T23:41:03.9538821Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T23:41:03.9539197Z 
2025-08-18T23:41:03.9539393Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T23:41:03.9539726Z 
2025-08-18T23:41:03.9539956Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T23:41:03.9540319Z 
2025-08-18T23:41:03.9540512Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T23:41:03.9540858Z 
2025-08-18T23:41:03.9541320Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T23:41:03.9541706Z 
2025-08-18T23:41:03.9541911Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T23:41:03.9542266Z 
2025-08-18T23:41:03.9542482Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T23:41:03.9542845Z 
2025-08-18T23:41:03.9543050Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T23:41:03.9543396Z 
2025-08-18T23:41:03.9543625Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T23:41:03.9544185Z 
2025-08-18T23:41:03.9544395Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T23:41:03.9544743Z 
2025-08-18T23:41:03.9545008Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T23:41:03.9545415Z 
2025-08-18T23:41:03.9545638Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T23:41:03.9546008Z 
2025-08-18T23:41:03.9546246Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T23:41:03.9546633Z 
2025-08-18T23:41:03.9546852Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T23:41:03.9547223Z 
2025-08-18T23:41:03.9547473Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T23:41:03.9547900Z 
2025-08-18T23:41:03.9548119Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T23:41:03.9548579Z 
2025-08-18T23:41:03.9548785Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T23:41:03.9549141Z 
2025-08-18T23:41:03.9549313Z # api.migrations.versions.0001\_baseline
2025-08-18T23:41:03.9549630Z 
2025-08-18T23:41:03.9549802Z <a id="api.migrations.versions"></a>
2025-08-18T23:41:03.9550102Z 
2025-08-18T23:41:03.9550257Z # api.migrations.versions
2025-08-18T23:41:03.9550512Z 
2025-08-18T23:41:03.9550660Z <a id="api.migrations"></a>
2025-08-18T23:41:03.9550909Z 
2025-08-18T23:41:03.9551035Z # api.migrations
2025-08-18T23:41:03.9551241Z 
2025-08-18T23:41:03.9551366Z <a id="api.db"></a>
2025-08-18T23:41:03.9551568Z 
2025-08-18T23:41:03.9551694Z # api.db
2025-08-18T23:41:03.9551861Z 
2025-08-18T23:41:03.9552021Z <a id="api.routes.stats"></a>
2025-08-18T23:41:03.9552535Z 
2025-08-18T23:41:03.9552667Z # api.routes.stats
2025-08-18T23:41:03.9552869Z 
2025-08-18T23:41:03.9553032Z <a id="api.routes.stats.kpi"></a>
2025-08-18T23:41:03.9553318Z 
2025-08-18T23:41:03.9553435Z #### kpi
2025-08-18T23:41:03.9553595Z 
2025-08-18T23:41:03.9553721Z ```python
2025-08-18T23:41:03.9554191Z @router.get("/stats/kpi")
2025-08-18T23:41:03.9554641Z def kpi() -> List[Dict[str, int]]
2025-08-18T23:41:03.9555018Z ```
2025-08-18T23:41:03.9555178Z 
2025-08-18T23:41:03.9555325Z Return KPI metrics (mock).
2025-08-18T23:41:03.9555573Z 
2025-08-18T23:41:03.9555753Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T23:41:03.9556079Z 
2025-08-18T23:41:03.9556210Z #### roi\_by\_vendor
2025-08-18T23:41:03.9556415Z 
2025-08-18T23:41:03.9556543Z ```python
2025-08-18T23:41:03.9556857Z @router.get("/stats/roi_by_vendor")
2025-08-18T23:41:03.9557321Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T23:41:03.9557736Z ```
2025-08-18T23:41:03.9557906Z 
2025-08-18T23:41:03.9558060Z Return ROI percent by vendor.
2025-08-18T23:41:03.9558320Z 
2025-08-18T23:41:03.9558487Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T23:41:03.9558803Z 
2025-08-18T23:41:03.9558924Z #### roi\_trend
2025-08-18T23:41:03.9559113Z 
2025-08-18T23:41:03.9559250Z ```python
2025-08-18T23:41:03.9559558Z @router.get("/stats/roi_trend")
2025-08-18T23:41:03.9559992Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T23:41:03.9560420Z ```
2025-08-18T23:41:03.9560569Z 
2025-08-18T23:41:03.9560706Z Return 30-day ROI trend.
2025-08-18T23:41:03.9560945Z 
2025-08-18T23:41:03.9561086Z <a id="api.routes.roi"></a>
2025-08-18T23:41:03.9561328Z 
2025-08-18T23:41:03.9561455Z # api.routes.roi
2025-08-18T23:41:03.9561659Z 
2025-08-18T23:41:03.9561808Z <a id="api.routes.health"></a>
2025-08-18T23:41:03.9562066Z 
2025-08-18T23:41:03.9562207Z # api.routes.health
2025-08-18T23:41:03.9562409Z 
2025-08-18T23:41:03.9562576Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T23:41:03.9563094Z 
2025-08-18T23:41:03.9563224Z #### MAX\_SKEW
2025-08-18T23:41:03.9563408Z 
2025-08-18T23:41:03.9563522Z seconds
2025-08-18T23:41:03.9563688Z 
2025-08-18T23:41:03.9563857Z <a id="api.routes.health.health"></a>
2025-08-18T23:41:03.9564341Z 
2025-08-18T23:41:03.9564467Z #### health
2025-08-18T23:41:03.9564638Z 
2025-08-18T23:41:03.9564754Z ```python
2025-08-18T23:41:03.9565121Z @router.get("/health", include_in_schema=False)
2025-08-18T23:41:03.9565803Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T23:41:03.9566425Z ```
2025-08-18T23:41:03.9566577Z 
2025-08-18T23:41:03.9566792Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T23:41:03.9567154Z 
2025-08-18T23:41:03.9567314Z <a id="api.routes.repository"></a>
2025-08-18T23:41:03.9567599Z 
2025-08-18T23:41:03.9567748Z # api.routes.repository
2025-08-18T23:41:03.9567978Z 
2025-08-18T23:41:03.9568113Z <a id="api.routes"></a>
2025-08-18T23:41:03.9568329Z 
2025-08-18T23:41:03.9568458Z # api.routes
2025-08-18T23:41:03.9568657Z 
2025-08-18T23:41:03.9568809Z <a id="api.models.fee"></a>
2025-08-18T23:41:03.9569062Z 
2025-08-18T23:41:03.9569189Z # api.models.fee
2025-08-18T23:41:03.9569384Z 
2025-08-18T23:41:03.9569510Z <a id="api.models"></a>
2025-08-18T23:41:03.9569717Z 
2025-08-18T23:41:03.9569830Z # api.models
2025-08-18T23:41:03.9569993Z 
2025-08-18T23:41:03.9570137Z <a id="api.roi_repository"></a>
2025-08-18T23:41:03.9570381Z 
2025-08-18T23:41:03.9570511Z # api.roi\_repository
2025-08-18T23:41:03.9570734Z 
2025-08-18T23:41:03.9570864Z <a id="api.main"></a>
2025-08-18T23:41:03.9571075Z 
2025-08-18T23:41:03.9571195Z # api.main
2025-08-18T23:41:03.9571374Z 
2025-08-18T23:41:03.9571519Z <a id="api.main.ready"></a>
2025-08-18T23:41:03.9571762Z 
2025-08-18T23:41:03.9571888Z #### ready
2025-08-18T23:41:03.9572061Z 
2025-08-18T23:41:03.9572179Z ```python
2025-08-18T23:41:03.9572725Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T23:41:03.9573504Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T23:41:03.9574571Z                                                                       str]
2025-08-18T23:41:03.9575001Z ```
2025-08-18T23:41:03.9575166Z 
2025-08-18T23:41:03.9575346Z Return 200 only when migrations are at head.
2025-08-18T23:41:03.9575664Z 
2025-08-18T23:41:03.9575815Z <a id="api.config"></a>
2025-08-18T23:41:03.9576039Z 
2025-08-18T23:41:03.9576162Z # api.config
2025-08-18T23:41:03.9576345Z 
2025-08-18T23:41:03.9576463Z <a id="etl"></a>
2025-08-18T23:41:03.9576649Z 
2025-08-18T23:41:03.9576760Z # etl
2025-08-18T23:41:03.9576927Z 
2025-08-18T23:41:03.9577079Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T23:41:03.9577353Z 
2025-08-18T23:41:03.9577494Z # etl.fba\_fee\_ingestor
2025-08-18T23:41:03.9577719Z 
2025-08-18T23:41:03.9577864Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T23:41:03.9578133Z 
2025-08-18T23:41:03.9578270Z # etl.sp\_fees\_ingestor
2025-08-18T23:41:03.9578498Z 
2025-08-18T23:41:03.9578641Z <a id="etl.keepa_ingestor"></a>
2025-08-18T23:41:03.9578922Z 
2025-08-18T23:41:03.9579053Z # etl.keepa\_ingestor
2025-08-18T23:41:03.9579267Z 
2025-08-18T23:41:03.9579400Z <a id="etl.db"></a>
2025-08-18T23:41:03.9579596Z 
2025-08-18T23:41:03.9579711Z # etl.db
2025-08-18T23:41:03.9579872Z 
2025-08-18T23:41:03.9580033Z <a id="etl.dialects.schemas"></a>
2025-08-18T23:41:03.9580307Z 
2025-08-18T23:41:03.9580450Z # etl.dialects.schemas
2025-08-18T23:41:03.9580682Z 
2025-08-18T23:41:03.9580874Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T23:41:03.9581217Z 
2025-08-18T23:41:03.9581386Z # etl.dialects.amazon\_reimbursements
2025-08-18T23:41:03.9581683Z 
2025-08-18T23:41:03.9581860Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T23:41:03.9582183Z 
2025-08-18T23:41:03.9582348Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T23:41:03.9582642Z 
2025-08-18T23:41:03.9582811Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T23:41:03.9583129Z 
2025-08-18T23:41:03.9583279Z # etl.dialects.amazon\_returns
2025-08-18T23:41:03.9583736Z 
2025-08-18T23:41:03.9583931Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T23:41:03.9584428Z 
2025-08-18T23:41:03.9584591Z # etl.dialects.amazon\_fee\_preview
2025-08-18T23:41:03.9584883Z 
2025-08-18T23:41:03.9585090Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T23:41:03.9585435Z 
2025-08-18T23:41:03.9585662Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T23:41:03.9585971Z 
2025-08-18T23:41:03.9586151Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T23:41:03.9586480Z 
2025-08-18T23:41:03.9586639Z # etl.dialects.amazon\_settlements
2025-08-18T23:41:03.9586921Z 
2025-08-18T23:41:03.9587074Z <a id="etl.dialects"></a>
2025-08-18T23:41:03.9587308Z 
2025-08-18T23:41:03.9587428Z # etl.dialects
2025-08-18T23:41:03.9587618Z 
2025-08-18T23:41:03.9587743Z <a id="ingest"></a>
2025-08-18T23:41:03.9587941Z 
2025-08-18T23:41:03.9588058Z # ingest
2025-08-18T23:41:03.9588227Z 
2025-08-18T23:41:03.9588373Z <a id="ingest.maintenance"></a>
2025-08-18T23:41:03.9588638Z 
2025-08-18T23:41:03.9588788Z # ingest.maintenance
2025-08-18T23:41:03.9589008Z 
2025-08-18T23:41:03.9589154Z <a id="ingest.copy_loader"></a>
2025-08-18T23:41:03.9589416Z 
2025-08-18T23:41:03.9589547Z # ingest.copy\_loader
2025-08-18T23:41:03.9589759Z 
2025-08-18T23:41:03.9589945Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T23:41:03.9590285Z 
2025-08-18T23:41:03.9590421Z #### copy\_df\_via\_temp
2025-08-18T23:41:03.9590648Z 
2025-08-18T23:41:03.9590772Z ```python
2025-08-18T23:41:03.9591089Z def copy_df_via_temp(engine: Engine,
2025-08-18T23:41:03.9591530Z                      df: pd.DataFrame,
2025-08-18T23:41:03.9591959Z                      target_table: str,
2025-08-18T23:41:03.9592369Z                      *,
2025-08-18T23:41:03.9592740Z                      target_schema: Optional[str] = None,
2025-08-18T23:41:03.9593226Z                      columns: Sequence[str],
2025-08-18T23:41:03.9593722Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T23:41:03.9594416Z                      analyze_after: bool = False,
2025-08-18T23:41:03.9595134Z                      connection: Any | None = None) -> int
2025-08-18T23:41:03.9595573Z ```
2025-08-18T23:41:03.9595735Z 
2025-08-18T23:41:03.9596028Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T23:41:03.9596448Z 
2025-08-18T23:41:03.9596610Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T23:41:03.9596913Z 
2025-08-18T23:41:03.9597060Z # ingest.tests.test\_smoke
2025-08-18T23:41:03.9597304Z 
2025-08-18T23:41:03.9597452Z <a id="ingest.tests"></a>
2025-08-18T23:41:03.9597687Z 
2025-08-18T23:41:03.9597813Z # ingest.tests
2025-08-18T23:41:03.9597999Z 
2025-08-18T23:41:03.9598161Z <a id="ingest.upload_router"></a>
2025-08-18T23:41:03.9598433Z 
2025-08-18T23:41:03.9598573Z # ingest.upload\_router
2025-08-18T23:41:03.9598812Z 
2025-08-18T23:41:03.9598963Z <a id="ingest.email_watcher"></a>
2025-08-18T23:41:03.9599232Z 
2025-08-18T23:41:03.9599365Z # ingest.email\_watcher
2025-08-18T23:41:03.9599592Z 
2025-08-18T23:41:03.9599762Z <a id="ingest.email_watcher.main"></a>
2025-08-18T23:41:03.9600068Z 
2025-08-18T23:41:03.9600198Z #### main
2025-08-18T23:41:03.9600361Z 
2025-08-18T23:41:03.9600480Z ```python
2025-08-18T23:41:03.9600790Z def main() -> dict[str, str]
2025-08-18T23:41:03.9601146Z ```
2025-08-18T23:41:03.9601307Z 
2025-08-18T23:41:03.9601561Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T23:41:03.9601998Z 
2025-08-18T23:41:03.9602231Z Returns {"status": "success"} when processing completes.
2025-08-18T23:41:03.9602615Z 
2025-08-18T23:41:03.9602767Z <a id="ingest.tasks"></a>
2025-08-18T23:41:03.9603005Z 
2025-08-18T23:41:03.9603131Z # ingest.tasks
2025-08-18T23:41:03.9603329Z 
2025-08-18T23:41:03.9603502Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T23:41:03.9603827Z 
2025-08-18T23:41:03.9603961Z #### task\_import\_file
2025-08-18T23:41:03.9604386Z 
2025-08-18T23:41:03.9604510Z ```python
2025-08-18T23:41:03.9604907Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T23:41:03.9605644Z def task_import_file(self: Any,
2025-08-18T23:41:03.9606050Z                      uri: str,
2025-08-18T23:41:03.9606458Z                      report_type: Optional[str] = None,
2025-08-18T23:41:03.9606961Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T23:41:03.9607388Z ```
2025-08-18T23:41:03.9607549Z 
2025-08-18T23:41:03.9607792Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T23:41:03.9608173Z 
2025-08-18T23:41:03.9608333Z <a id="ingest.celery_app"></a>
2025-08-18T23:41:03.9608590Z 
2025-08-18T23:41:03.9608719Z # ingest.celery\_app
2025-08-18T23:41:03.9608931Z 
2025-08-18T23:41:03.9609088Z <a id="ingest.ingest_router"></a>
2025-08-18T23:41:03.9609364Z 
2025-08-18T23:41:03.9609501Z # ingest.ingest\_router
2025-08-18T23:41:03.9609736Z 
2025-08-18T23:41:03.9609879Z <a id="logistics_etl"></a>
2025-08-18T23:41:03.9610125Z 
2025-08-18T23:41:03.9610256Z # logistics\_etl
2025-08-18T23:41:03.9610456Z 
2025-08-18T23:41:03.9610600Z Daily logistics ETL job.
2025-08-18T23:41:03.9610850Z 
2025-08-18T23:41:03.9611009Z <a id="logistics_etl.__main__"></a>
2025-08-18T23:41:03.9611290Z 
2025-08-18T23:41:03.9611430Z # logistics\_etl.\_\_main\_\_
2025-08-18T23:41:03.9611687Z 
2025-08-18T23:41:03.9611830Z <a id="logistics_etl.dsn"></a>
2025-08-18T23:41:03.9612088Z 
2025-08-18T23:41:03.9612220Z # logistics\_etl.dsn
2025-08-18T23:41:03.9612444Z 
2025-08-18T23:41:03.9612659Z Local DSN builder to avoid cross-service dependency.
2025-08-18T23:41:03.9613025Z 
2025-08-18T23:41:03.9613207Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T23:41:03.9613517Z 
2025-08-18T23:41:03.9613642Z #### build\_dsn
2025-08-18T23:41:03.9613845Z 
2025-08-18T23:41:03.9613965Z ```python
2025-08-18T23:41:03.9614461Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:41:03.9614874Z ```
2025-08-18T23:41:03.9615030Z 
2025-08-18T23:41:03.9615294Z Return a Postgres DSN assembled from environment variables.
2025-08-18T23:41:03.9615696Z 
2025-08-18T23:41:03.9615964Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T23:41:03.9616901Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T23:41:03.9617525Z error when any required variable is missing.
2025-08-18T23:41:03.9617855Z 
2025-08-18T23:41:03.9618030Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T23:41:03.9618342Z 
2025-08-18T23:41:03.9618504Z # logistics\_etl.tests.conftest
2025-08-18T23:41:03.9618770Z 
2025-08-18T23:41:03.9618959Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T23:41:03.9619299Z 
2025-08-18T23:41:03.9619473Z # logistics\_etl.tests.test\_repository
2025-08-18T23:41:03.9619783Z 
2025-08-18T23:41:03.9619961Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T23:41:03.9620290Z 
2025-08-18T23:41:03.9620444Z # logistics\_etl.tests.test\_cron
2025-08-18T23:41:03.9620721Z 
2025-08-18T23:41:03.9620908Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T23:41:03.9621235Z 
2025-08-18T23:41:03.9621393Z # logistics\_etl.tests.test\_imports
2025-08-18T23:41:03.9621696Z 
2025-08-18T23:41:03.9621888Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T23:41:03.9622199Z 
2025-08-18T23:41:03.9622354Z # logistics\_etl.tests.test\_smoke
2025-08-18T23:41:03.9622641Z 
2025-08-18T23:41:03.9622815Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T23:41:03.9623133Z 
2025-08-18T23:41:03.9623298Z # logistics\_etl.tests.test\_client
2025-08-18T23:41:03.9623588Z 
2025-08-18T23:41:03.9623738Z <a id="logistics_etl.tests"></a>
2025-08-18T23:41:03.9624173Z 
2025-08-18T23:41:03.9624321Z # logistics\_etl.tests
2025-08-18T23:41:03.9624544Z 
2025-08-18T23:41:03.9624693Z <a id="logistics_etl.flow"></a>
2025-08-18T23:41:03.9624956Z 
2025-08-18T23:41:03.9625089Z # logistics\_etl.flow
2025-08-18T23:41:03.9625307Z 
2025-08-18T23:41:03.9625496Z <a id="logistics_etl.client"></a>
2025-08-18T23:41:03.9625789Z 
2025-08-18T23:41:03.9625931Z # logistics\_etl.client
2025-08-18T23:41:03.9626156Z 
2025-08-18T23:41:03.9626309Z <a id="logistics_etl.cron"></a>
2025-08-18T23:41:03.9626575Z 
2025-08-18T23:41:03.9626922Z # logistics\_etl.cron
2025-08-18T23:41:03.9627160Z 
2025-08-18T23:41:03.9627311Z <a id="logistics_etl.db"></a>
2025-08-18T23:41:03.9627565Z 
2025-08-18T23:41:03.9654568Z # logistics\_etl.db
2025-08-18T23:41:03.9654819Z 
2025-08-18T23:41:03.9654983Z <a id="logistics_etl.repository"></a>
2025-08-18T23:41:03.9655267Z 
2025-08-18T23:41:03.9655412Z # logistics\_etl.repository
2025-08-18T23:41:03.9655626Z 
2025-08-18T23:41:03.9655741Z <a id="alert_bot"></a>
2025-08-18T23:41:03.9655932Z 
2025-08-18T23:41:03.9656030Z # alert\_bot
2025-08-18T23:41:03.9656183Z 
2025-08-18T23:41:03.9656340Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T23:41:03.9656613Z 
2025-08-18T23:41:03.9656742Z # alert\_bot.tests.test\_smoke
2025-08-18T23:41:03.9656953Z 
2025-08-18T23:41:03.9657084Z <a id="alert_bot.tests"></a>
2025-08-18T23:41:03.9657294Z 
2025-08-18T23:41:03.9657402Z # alert\_bot.tests
2025-08-18T23:41:03.9657574Z 
2025-08-18T23:41:03.9657699Z <a id="alert_bot.alert_bot"></a>
2025-08-18T23:41:03.9657936Z 
2025-08-18T23:41:03.9658060Z # alert\_bot.alert\_bot
2025-08-18T23:41:03.9658256Z 
2025-08-18T23:41:03.9658377Z <a id="alert_bot.rules"></a>
2025-08-18T23:41:03.9658586Z 
2025-08-18T23:41:03.9658698Z # alert\_bot.rules
2025-08-18T23:41:03.9658862Z 
2025-08-18T23:41:03.9658967Z <a id="common"></a>
2025-08-18T23:41:03.9659138Z 
2025-08-18T23:41:03.9659236Z # common
2025-08-18T23:41:03.9659377Z 
2025-08-18T23:41:03.9659488Z <a id="common.dsn"></a>
2025-08-18T23:41:03.9659674Z 
2025-08-18T23:41:03.9659851Z # common.dsn
2025-08-18T23:41:03.9659995Z 
2025-08-18T23:41:03.9660129Z <a id="common.dsn.build_dsn"></a>
2025-08-18T23:41:03.9660361Z 
2025-08-18T23:41:03.9660466Z #### build\_dsn
2025-08-18T23:41:03.9660635Z 
2025-08-18T23:41:03.9660734Z ```python
2025-08-18T23:41:03.9661008Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:41:03.9661350Z ```
2025-08-18T23:41:03.9661482Z 
2025-08-18T23:41:03.9661676Z Return a Postgres DSN, validating required variables.
2025-08-18T23:41:03.9661997Z 
2025-08-18T23:41:03.9662305Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T23:41:03.9663226Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T23:41:03.9663880Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T23:41:03.9664575Z missing.
2025-08-18T23:41:03.9664729Z 
2025-08-18T23:41:03.9664860Z <a id="common.models_vendor"></a>
2025-08-18T23:41:03.9665100Z 
2025-08-18T23:41:03.9665213Z # common.models\_vendor
2025-08-18T23:41:03.9665399Z 
2025-08-18T23:41:03.9665548Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T23:41:03.9665825Z 
2025-08-18T23:41:03.9665931Z ## Vendor Objects
2025-08-18T23:41:03.9666097Z 
2025-08-18T23:41:03.9666206Z ```python
2025-08-18T23:41:03.9666452Z class Vendor(Base)
2025-08-18T23:41:03.9666716Z ```
2025-08-18T23:41:03.9666845Z 
2025-08-18T23:41:03.9666965Z Vendor of inventory items.
2025-08-18T23:41:03.9667173Z 
2025-08-18T23:41:03.9667326Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T23:41:03.9667616Z 
2025-08-18T23:41:03.9667736Z ## VendorPrice Objects
2025-08-18T23:41:03.9667920Z 
2025-08-18T23:41:03.9668016Z ```python
2025-08-18T23:41:03.9668411Z class VendorPrice(Base)
2025-08-18T23:41:03.9668692Z ```
2025-08-18T23:41:03.9668829Z 
2025-08-18T23:41:03.9668991Z Association table linking vendors to pricing.
2025-08-18T23:41:03.9669272Z 
2025-08-18T23:41:03.9669386Z <a id="common.db_url"></a>
2025-08-18T23:41:03.9669595Z 
2025-08-18T23:41:03.9669699Z # common.db\_url
2025-08-18T23:41:03.9669860Z 
2025-08-18T23:41:03.9669999Z <a id="common.db_url.build_url"></a>
2025-08-18T23:41:03.9670236Z 
2025-08-18T23:41:03.9670333Z #### build\_url
2025-08-18T23:41:03.9670492Z 
2025-08-18T23:41:03.9670595Z ```python
2025-08-18T23:41:03.9670862Z def build_url(async_: bool = True) -> str
2025-08-18T23:41:03.9671212Z ```
2025-08-18T23:41:03.9671340Z 
2025-08-18T23:41:03.9671498Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:41:03.9671785Z 
2025-08-18T23:41:03.9671913Z <a id="common.keepa"></a>
2025-08-18T23:41:03.9672298Z 
2025-08-18T23:41:03.9672409Z # common.keepa
2025-08-18T23:41:03.9672628Z 
2025-08-18T23:41:03.9672744Z <a id="common.llm"></a>
2025-08-18T23:41:03.9672935Z 
2025-08-18T23:41:03.9673033Z # common.llm
2025-08-18T23:41:03.9673183Z 
2025-08-18T23:41:03.9673307Z <a id="common.settings"></a>
2025-08-18T23:41:03.9673535Z 
2025-08-18T23:41:03.9673639Z # common.settings
2025-08-18T23:41:03.9673802Z 
2025-08-18T23:41:03.9673918Z <a id="common.db"></a>
2025-08-18T23:41:03.9674321Z 
2025-08-18T23:41:03.9674426Z # common.db
2025-08-18T23:41:03.9674574Z 
2025-08-18T23:41:03.9674722Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T23:41:03.9674990Z 
2025-08-18T23:41:03.9675109Z #### build\_sqlalchemy\_url
2025-08-18T23:41:03.9675316Z 
2025-08-18T23:41:03.9675412Z ```python
2025-08-18T23:41:03.9675685Z def build_sqlalchemy_url() -> str
2025-08-18T23:41:03.9676001Z ```
2025-08-18T23:41:03.9676127Z 
2025-08-18T23:41:03.9676287Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:41:03.9676563Z 
2025-08-18T23:41:03.9676708Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T23:41:03.9676960Z 
2025-08-18T23:41:03.9677075Z #### build\_asyncpg\_dsn
2025-08-18T23:41:03.9677264Z 
2025-08-18T23:41:03.9677361Z ```python
2025-08-18T23:41:03.9677620Z def build_asyncpg_dsn() -> str
2025-08-18T23:41:03.9677924Z ```
2025-08-18T23:41:03.9678051Z 
2025-08-18T23:41:03.9678250Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:41:03.9678559Z 
2025-08-18T23:41:03.9678690Z <a id="common.db.refresh_mvs"></a>
2025-08-18T23:41:03.9678916Z 
2025-08-18T23:41:03.9679019Z #### refresh\_mvs
2025-08-18T23:41:03.9679189Z 
2025-08-18T23:41:03.9679290Z ```python
2025-08-18T23:41:03.9679589Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:41:03.9679973Z ```
2025-08-18T23:41:03.9680104Z 
2025-08-18T23:41:03.9680316Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:41:03.9680642Z 
2025-08-18T23:41:03.9680758Z <a id="common.config"></a>
2025-08-18T23:41:03.9680964Z 
2025-08-18T23:41:03.9681250Z # common.config
2025-08-18T23:41:03.9681411Z 
2025-08-18T23:41:03.9681529Z <a id="common.base"></a>
2025-08-18T23:41:03.9681725Z 
2025-08-18T23:41:03.9681828Z # common.base
2025-08-18T23:41:03.9681978Z 
2025-08-18T23:41:03.9682112Z <a id="common.base.Base"></a>
2025-08-18T23:41:03.9682328Z 
2025-08-18T23:41:03.9682431Z ## Base Objects
2025-08-18T23:41:03.9682588Z 
2025-08-18T23:41:03.9682695Z ```python
2025-08-18T23:41:03.9682957Z class Base(DeclarativeBase)
2025-08-18T23:41:03.9683260Z ```
2025-08-18T23:41:03.9683389Z 
2025-08-18T23:41:03.9683520Z Base class for SQLAlchemy models.
2025-08-18T23:41:03.9683757Z 
2025-08-18T23:41:03.9683874Z <a id="repricer"></a>
2025-08-18T23:41:03.9684200Z 
2025-08-18T23:41:03.9684313Z # repricer
2025-08-18T23:41:03.9684460Z 
2025-08-18T23:41:03.9684591Z <a id="repricer.app.schemas"></a>
2025-08-18T23:41:03.9684820Z 
2025-08-18T23:41:03.9684942Z # repricer.app.schemas
2025-08-18T23:41:03.9685125Z 
2025-08-18T23:41:03.9685259Z <a id="repricer.app.deps"></a>
2025-08-18T23:41:03.9685489Z 
2025-08-18T23:41:03.9685598Z # repricer.app.deps
2025-08-18T23:41:03.9685766Z 
2025-08-18T23:41:03.9685941Z Placeholder module for Keepa / SP-API clients.
2025-08-18T23:41:03.9686225Z 
2025-08-18T23:41:03.9686351Z <a id="repricer.app.logic"></a>
2025-08-18T23:41:03.9686568Z 
2025-08-18T23:41:03.9686688Z # repricer.app.logic
2025-08-18T23:41:03.9686863Z 
2025-08-18T23:41:03.9687010Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T23:41:03.9687281Z 
2025-08-18T23:41:03.9687381Z #### MIN\_MARGIN
2025-08-18T23:41:03.9687542Z 
2025-08-18T23:41:03.9687641Z 15 % ROI
2025-08-18T23:41:03.9687787Z 
2025-08-18T23:41:03.9687946Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T23:41:03.9688244Z 
2025-08-18T23:41:03.9688359Z #### compute\_price
2025-08-18T23:41:03.9688521Z 
2025-08-18T23:41:03.9688620Z ```python
2025-08-18T23:41:03.9689007Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T23:41:03.9689458Z ```
2025-08-18T23:41:03.9689766Z 
2025-08-18T23:41:03.9689939Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T23:41:03.9690374Z Replace with real competitive logic later.
2025-08-18T23:41:03.9690639Z 
2025-08-18T23:41:03.9690767Z <a id="repricer.app.main"></a>
2025-08-18T23:41:03.9690982Z 
2025-08-18T23:41:03.9691096Z # repricer.app.main
2025-08-18T23:41:03.9691262Z 
2025-08-18T23:41:03.9691384Z <a id="repricer.app"></a>
2025-08-18T23:41:03.9691575Z 
2025-08-18T23:41:03.9691681Z # repricer.app
2025-08-18T23:41:03.9691840Z 
2025-08-18T23:41:03.9691984Z <a id="repricer.tests.test_imports"></a>
2025-08-18T23:41:03.9692246Z 
2025-08-18T23:41:03.9692373Z # repricer.tests.test\_imports
2025-08-18T23:41:03.9692580Z 
2025-08-18T23:41:03.9692723Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T23:41:03.9692965Z 
2025-08-18T23:41:03.9693093Z # repricer.tests.test\_smoke
2025-08-18T23:41:03.9693316Z 
2025-08-18T23:41:03.9693431Z <a id="repricer.tests"></a>
2025-08-18T23:41:03.9693646Z 
2025-08-18T23:41:03.9693771Z # repricer.tests
2025-08-18T23:41:03.9693953Z 
2025-08-18T23:41:03.9694200Z <a id="db"></a>
2025-08-18T23:41:03.9694359Z 
2025-08-18T23:41:03.9694458Z # db
2025-08-18T23:41:03.9694585Z 
2025-08-18T23:41:03.9694700Z <a id="db.utils.views"></a>
2025-08-18T23:41:03.9694902Z 
2025-08-18T23:41:03.9695014Z # db.utils.views
2025-08-18T23:41:03.9695170Z 
2025-08-18T23:41:03.9695311Z <a id="db.utils.views.replace_view"></a>
2025-08-18T23:41:03.9695583Z 
2025-08-18T23:41:03.9695690Z #### replace\_view
2025-08-18T23:41:03.9695856Z 
2025-08-18T23:41:03.9695966Z ```python
2025-08-18T23:41:03.9696274Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T23:41:03.9696652Z ```
2025-08-18T23:41:03.9696781Z 
2025-08-18T23:41:03.9696918Z Drop and recreate a SQL view atomically.
2025-08-18T23:41:03.9697178Z 
2025-08-18T23:41:03.9697287Z <a id="db.utils"></a>
2025-08-18T23:41:03.9697459Z 
2025-08-18T23:41:03.9697556Z # db.utils
2025-08-18T23:41:03.9697701Z 
2025-08-18T23:41:03.9697824Z <a id="price_importer"></a>
2025-08-18T23:41:03.9698029Z 
2025-08-18T23:41:03.9698309Z # price\_importer
2025-08-18T23:41:03.9698471Z 
2025-08-18T23:41:03.9698626Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T23:41:03.9698901Z 
2025-08-18T23:41:03.9699049Z # price\_importer.services\_common.dsn
2025-08-18T23:41:03.9699302Z 
2025-08-18T23:41:03.9699493Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T23:41:03.9699821Z 
2025-08-18T23:41:03.9699923Z #### build\_dsn
2025-08-18T23:41:03.9700076Z 
2025-08-18T23:41:03.9700182Z ```python
2025-08-18T23:41:03.9700447Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:41:03.9700779Z ```
2025-08-18T23:41:03.9700906Z 
2025-08-18T23:41:03.9701012Z Return safe DSN.
2025-08-18T23:41:03.9701170Z 
2025-08-18T23:41:03.9701615Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T23:41:03.9701909Z 
2025-08-18T23:41:03.9702099Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T23:41:03.9702420Z 
2025-08-18T23:41:03.9702587Z # price\_importer.services\_common.models\_vendor
2025-08-18T23:41:03.9702891Z 
2025-08-18T23:41:03.9703063Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T23:41:03.9703361Z 
2025-08-18T23:41:03.9703513Z # price\_importer.services\_common.db\_url
2025-08-18T23:41:03.9703788Z 
2025-08-18T23:41:03.9704145Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T23:41:03.9704493Z 
2025-08-18T23:41:03.9704597Z #### build\_url
2025-08-18T23:41:03.9704768Z 
2025-08-18T23:41:03.9704869Z ```python
2025-08-18T23:41:03.9705144Z def build_url(async_: bool = True) -> str
2025-08-18T23:41:03.9705494Z ```
2025-08-18T23:41:03.9705628Z 
2025-08-18T23:41:03.9705788Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:41:03.9706069Z 
2025-08-18T23:41:03.9706250Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T23:41:03.9706557Z 
2025-08-18T23:41:03.9706707Z # price\_importer.services\_common.keepa
2025-08-18T23:41:03.9706987Z 
2025-08-18T23:41:03.9707163Z <a id="price_importer.services_common.llm"></a>
2025-08-18T23:41:03.9707713Z 
2025-08-18T23:41:03.9707869Z # price\_importer.services\_common.llm
2025-08-18T23:41:03.9708144Z 
2025-08-18T23:41:03.9708347Z <a id="price_importer.services_common.settings"></a>
2025-08-18T23:41:03.9708656Z 
2025-08-18T23:41:03.9708815Z # price\_importer.services\_common.settings
2025-08-18T23:41:03.9709103Z 
2025-08-18T23:41:03.9709265Z <a id="price_importer.services_common.db"></a>
2025-08-18T23:41:03.9709556Z 
2025-08-18T23:41:03.9709706Z # price\_importer.services\_common.db
2025-08-18T23:41:03.9709963Z 
2025-08-18T23:41:03.9710206Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T23:41:03.9710602Z 
2025-08-18T23:41:03.9710730Z #### build\_sqlalchemy\_url
2025-08-18T23:41:03.9710949Z 
2025-08-18T23:41:03.9711057Z ```python
2025-08-18T23:41:03.9711339Z def build_sqlalchemy_url() -> str
2025-08-18T23:41:03.9711671Z ```
2025-08-18T23:41:03.9711811Z 
2025-08-18T23:41:03.9711965Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:41:03.9712249Z 
2025-08-18T23:41:03.9712486Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T23:41:03.9712855Z 
2025-08-18T23:41:03.9712978Z #### build\_asyncpg\_dsn
2025-08-18T23:41:03.9713187Z 
2025-08-18T23:41:03.9713297Z ```python
2025-08-18T23:41:03.9713573Z def build_asyncpg_dsn() -> str
2025-08-18T23:41:03.9713894Z ```
2025-08-18T23:41:03.9714185Z 
2025-08-18T23:41:03.9714404Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:41:03.9714746Z 
2025-08-18T23:41:03.9714959Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T23:41:03.9715305Z 
2025-08-18T23:41:03.9715422Z #### refresh\_mvs
2025-08-18T23:41:03.9715595Z 
2025-08-18T23:41:03.9715699Z ```python
2025-08-18T23:41:03.9716028Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:41:03.9716441Z ```
2025-08-18T23:41:03.9716585Z 
2025-08-18T23:41:03.9716802Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:41:03.9717149Z 
2025-08-18T23:41:03.9717328Z <a id="price_importer.services_common"></a>
2025-08-18T23:41:03.9717783Z 
2025-08-18T23:41:03.9717928Z # price\_importer.services\_common
2025-08-18T23:41:03.9718189Z 
2025-08-18T23:41:03.9718363Z <a id="price_importer.services_common.base"></a>
2025-08-18T23:41:03.9718669Z 
2025-08-18T23:41:03.9718821Z # price\_importer.services\_common.base
2025-08-18T23:41:03.9719099Z 
2025-08-18T23:41:03.9719249Z <a id="price_importer.normaliser"></a>
2025-08-18T23:41:03.9719523Z 
2025-08-18T23:41:03.9719671Z # price\_importer.normaliser
2025-08-18T23:41:03.9719903Z 
2025-08-18T23:41:03.9720086Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T23:41:03.9720399Z 
2025-08-18T23:41:03.9720550Z # price\_importer.common.models\_vendor
2025-08-18T23:41:03.9720821Z 
2025-08-18T23:41:03.9720970Z <a id="price_importer.common.db_url"></a>
2025-08-18T23:41:03.9721266Z 
2025-08-18T23:41:03.9721411Z # price\_importer.common.db\_url
2025-08-18T23:41:03.9721655Z 
2025-08-18T23:41:03.9721834Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T23:41:03.9722165Z 
2025-08-18T23:41:03.9722277Z #### make\_dsn
2025-08-18T23:41:03.9722454Z 
2025-08-18T23:41:03.9722560Z ```python
2025-08-18T23:41:03.9722846Z def make_dsn(async_: bool = False) -> str
2025-08-18T23:41:03.9723226Z ```
2025-08-18T23:41:03.9723370Z 
2025-08-18T23:41:03.9723569Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T23:41:03.9723912Z 
2025-08-18T23:41:03.9724251Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T23:41:03.9724576Z 
2025-08-18T23:41:03.9724697Z #### build\_url
2025-08-18T23:41:03.9724871Z 
2025-08-18T23:41:03.9724979Z ```python
2025-08-18T23:41:03.9725276Z def build_url(async_: bool = False) -> str
2025-08-18T23:41:03.9725654Z ```
2025-08-18T23:41:03.9725805Z 
2025-08-18T23:41:03.9726012Z Return Postgres DSN built from environment variables.
2025-08-18T23:41:03.9726352Z 
2025-08-18T23:41:03.9726507Z <a id="price_importer.common"></a>
2025-08-18T23:41:03.9726767Z 
2025-08-18T23:41:03.9726898Z # price\_importer.common
2025-08-18T23:41:03.9727281Z 
2025-08-18T23:41:03.9727455Z <a id="price_importer.common.base"></a>
2025-08-18T23:41:03.9727740Z 
2025-08-18T23:41:03.9727883Z # price\_importer.common.base
2025-08-18T23:41:03.9728141Z 
2025-08-18T23:41:03.9728313Z <a id="price_importer.tests.conftest"></a>
2025-08-18T23:41:03.9728614Z 
2025-08-18T23:41:03.9728766Z # price\_importer.tests.conftest
2025-08-18T23:41:03.9729040Z 
2025-08-18T23:41:03.9729193Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T23:41:03.9729468Z 
2025-08-18T23:41:03.9729609Z # price\_importer.tests.test\_reader
2025-08-18T23:41:03.9729864Z 
2025-08-18T23:41:03.9730040Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T23:41:03.9730354Z 
2025-08-18T23:41:03.9730505Z # price\_importer.tests.test\_imports
2025-08-18T23:41:03.9730786Z 
2025-08-18T23:41:03.9730960Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T23:41:03.9731243Z 
2025-08-18T23:41:03.9731388Z # price\_importer.tests.test\_smoke
2025-08-18T23:41:03.9731651Z 
2025-08-18T23:41:03.9731832Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T23:41:03.9732135Z 
2025-08-18T23:41:03.9732283Z # price\_importer.tests.test\_normaliser
2025-08-18T23:41:03.9732562Z 
2025-08-18T23:41:03.9732698Z <a id="price_importer.tests"></a>
2025-08-18T23:41:03.9732940Z 
2025-08-18T23:41:03.9733072Z # price\_importer.tests
2025-08-18T23:41:03.9733272Z 
2025-08-18T23:41:03.9733411Z <a id="price_importer.reader"></a>
2025-08-18T23:41:03.9733659Z 
2025-08-18T23:41:03.9733790Z # price\_importer.reader
2025-08-18T23:41:03.9734135Z 
2025-08-18T23:41:03.9734286Z <a id="price_importer.repository"></a>
2025-08-18T23:41:03.9734554Z 
2025-08-18T23:41:03.9734682Z # price\_importer.repository
2025-08-18T23:41:03.9734965Z 
2025-08-18T23:41:03.9735110Z <a id="price_importer.import"></a>
2025-08-18T23:41:03.9735349Z 
2025-08-18T23:41:03.9735470Z # price\_importer.import
2025-08-18T23:41:03.9735662Z 
2025-08-18T23:41:03.9735773Z <a id="fees_h10"></a>
2025-08-18T23:41:03.9735962Z 
2025-08-18T23:41:03.9736083Z # fees\_h10
2025-08-18T23:41:03.9736414Z 
2025-08-18T23:41:03.9736540Z <a id="fees_h10.worker"></a>
2025-08-18T23:41:03.9736761Z 
2025-08-18T23:41:03.9736877Z # fees\_h10.worker
2025-08-18T23:41:03.9737056Z 
2025-08-18T23:41:03.9737214Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T23:41:03.9737504Z 
2025-08-18T23:41:03.9737635Z #### list\_active\_asins
2025-08-18T23:41:03.9737835Z 
2025-08-18T23:41:03.9737941Z ```python
2025-08-18T23:41:03.9738229Z def list_active_asins() -> list[str]
2025-08-18T23:41:03.9738577Z ```
2025-08-18T23:41:03.9738725Z 
2025-08-18T23:41:03.9738908Z Return known ASINs or an empty list if unavailable.
2025-08-18T23:41:03.9739225Z 
2025-08-18T23:41:03.9739376Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T23:41:03.9739636Z 
2025-08-18T23:41:03.9739766Z # fees\_h10.tests.test\_smoke
2025-08-18T23:41:03.9739984Z 
2025-08-18T23:41:03.9740114Z <a id="fees_h10.tests"></a>
2025-08-18T23:41:03.9740322Z 
2025-08-18T23:41:03.9740426Z # fees\_h10.tests
2025-08-18T23:41:03.9740605Z 
2025-08-18T23:41:03.9740732Z <a id="fees_h10.client"></a>
2025-08-18T23:41:03.9740932Z 
2025-08-18T23:41:03.9741040Z # fees\_h10.client
2025-08-18T23:41:03.9741200Z 
2025-08-18T23:41:03.9741318Z <a id="fees_h10.repository"></a>
2025-08-18T23:41:03.9741522Z 
2025-08-18T23:41:03.9767597Z # fees\_h10.repository
2025-08-18T23:41:03.9767887Z 
2025-08-18T23:41:03.9768029Z <a id="emailer"></a>
2025-08-18T23:41:03.9768239Z 
2025-08-18T23:41:03.9768357Z # emailer
2025-08-18T23:41:03.9768516Z 
2025-08-18T23:41:03.9768694Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T23:41:03.9769017Z 
2025-08-18T23:41:03.9769172Z # emailer.tests.test\_import\_emailer
2025-08-18T23:41:03.9769454Z 
2025-08-18T23:41:03.9769612Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T23:41:03.9769889Z 
2025-08-18T23:41:03.9770031Z # emailer.tests.test\_smoke
2025-08-18T23:41:03.9770268Z 
2025-08-18T23:41:03.9770413Z <a id="emailer.tests"></a>
2025-08-18T23:41:03.9770635Z 
2025-08-18T23:41:03.9770754Z # emailer.tests
2025-08-18T23:41:03.9771169Z 
2025-08-18T23:41:03.9771328Z <a id="emailer.generate_body"></a>
2025-08-18T23:41:03.9771592Z 
2025-08-18T23:41:03.9771736Z # emailer.generate\_body
2025-08-18T23:41:03.9771958Z 
2025-08-18T23:41:03.9772087Z <a id="llm_server"></a>
2025-08-18T23:41:03.9772293Z 
2025-08-18T23:41:03.9772413Z # llm\_server
2025-08-18T23:41:03.9772628Z 
2025-08-18T23:41:03.9772760Z <a id="llm_server.app"></a>
2025-08-18T23:41:03.9772994Z 
2025-08-18T23:41:03.9773109Z # llm\_server.app
2025-08-18T23:41:03.9773295Z 
