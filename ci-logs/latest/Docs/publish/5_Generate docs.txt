2025-08-19T10:33:14.8551297Z ##[group]Run pydoc-markdown
2025-08-19T10:33:14.8551612Z [36;1mpydoc-markdown[0m
2025-08-19T10:33:14.8594380Z shell: /usr/bin/bash -e {0}
2025-08-19T10:33:14.8594628Z env:
2025-08-19T10:33:14.8594868Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:33:14.8595270Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T10:33:14.8595671Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:33:14.8596013Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:33:14.8596347Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T10:33:14.8596683Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T10:33:14.8596957Z ##[endgroup]
2025-08-19T10:33:15.1842340Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T10:33:15.1843066Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T10:33:15.1843528Z In "pydoc-markdown.yml"
2025-08-19T10:33:15.1844391Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T10:33:15.1845103Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T10:33:15.1845871Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T10:33:15.1846387Z 
2025-08-19T10:33:15.5003080Z <a id="__init__"></a>
2025-08-19T10:33:15.5003406Z 
2025-08-19T10:33:15.5003553Z # \_\_init\_\_
2025-08-19T10:33:15.5004003Z 
2025-08-19T10:33:15.5004156Z <a id="api"></a>
2025-08-19T10:33:15.5004388Z 
2025-08-19T10:33:15.5004509Z # api
2025-08-19T10:33:15.5004696Z 
2025-08-19T10:33:15.5004876Z <a id="api.errors"></a>
2025-08-19T10:33:15.5005028Z 
2025-08-19T10:33:15.5005109Z # api.errors
2025-08-19T10:33:15.5005222Z 
2025-08-19T10:33:15.5005326Z <a id="api.sentry_config"></a>
2025-08-19T10:33:15.5005522Z 
2025-08-19T10:33:15.5005653Z # api.sentry\_config
2025-08-19T10:33:15.5005871Z 
2025-08-19T10:33:15.5006023Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T10:33:15.5006319Z 
2025-08-19T10:33:15.5006497Z # api.tests.test\_sentry\_scrub
2025-08-19T10:33:15.5006887Z 
2025-08-19T10:33:15.5007079Z <a id="api.tests.test_errors_json"></a>
2025-08-19T10:33:15.5007351Z 
2025-08-19T10:33:15.5007505Z # api.tests.test\_errors\_json
2025-08-19T10:33:15.5007763Z 
2025-08-19T10:33:15.5007904Z <a id="api.tests.test_llm"></a>
2025-08-19T10:33:15.5008168Z 
2025-08-19T10:33:15.5008297Z # api.tests.test\_llm
2025-08-19T10:33:15.5008510Z 
2025-08-19T10:33:15.5008672Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T10:33:15.5008979Z 
2025-08-19T10:33:15.5009119Z # api.tests.test\_sentry\_event
2025-08-19T10:33:15.5009374Z 
2025-08-19T10:33:15.5009706Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T10:33:15.5010084Z 
2025-08-19T10:33:15.5010224Z ## DummyTransport Objects
2025-08-19T10:33:15.5010472Z 
2025-08-19T10:33:15.5010582Z ```python
2025-08-19T10:33:15.5010787Z class DummyTransport()
2025-08-19T10:33:15.5011002Z ```
2025-08-19T10:33:15.5011101Z 
2025-08-19T10:33:15.5011317Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T10:33:15.5011908Z 
2025-08-19T10:33:15.5011994Z #### capture\_envelope
2025-08-19T10:33:15.5012143Z 
2025-08-19T10:33:15.5012216Z ```python
2025-08-19T10:33:15.5012415Z def capture_envelope(envelope)
2025-08-19T10:33:15.5012655Z ```
2025-08-19T10:33:15.5012753Z 
2025-08-19T10:33:15.5012903Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T10:33:15.5013166Z 
2025-08-19T10:33:15.5013267Z <a id="api.tests.test_cors"></a>
2025-08-19T10:33:15.5013446Z 
2025-08-19T10:33:15.5013535Z # api.tests.test\_cors
2025-08-19T10:33:15.5013905Z 
2025-08-19T10:33:15.5014006Z <a id="api.tests.test_imports"></a>
2025-08-19T10:33:15.5014202Z 
2025-08-19T10:33:15.5014291Z # api.tests.test\_imports
2025-08-19T10:33:15.5014444Z 
2025-08-19T10:33:15.5014545Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T10:33:15.5014747Z 
2025-08-19T10:33:15.5014842Z # api.tests.test\_rate\_limit
2025-08-19T10:33:15.5015013Z 
2025-08-19T10:33:15.5015131Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T10:33:15.5015545Z 
2025-08-19T10:33:15.5015610Z #### app
2025-08-19T10:33:15.5015707Z 
2025-08-19T10:33:15.5015769Z noqa: E402
2025-08-19T10:33:15.5015857Z 
2025-08-19T10:33:15.5015946Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T10:33:15.5016113Z 
2025-08-19T10:33:15.5016193Z # api.tests.test\_entrypoint
2025-08-19T10:33:15.5016329Z 
2025-08-19T10:33:15.5016418Z <a id="api.tests.test_health"></a>
2025-08-19T10:33:15.5016565Z 
2025-08-19T10:33:15.5016638Z # api.tests.test\_health
2025-08-19T10:33:15.5016768Z 
2025-08-19T10:33:15.5016849Z <a id="api.logging_config"></a>
2025-08-19T10:33:15.5016982Z 
2025-08-19T10:33:15.5017051Z # api.logging\_config
2025-08-19T10:33:15.5017171Z 
2025-08-19T10:33:15.5017249Z <a id="api.migrations.env"></a>
2025-08-19T10:33:15.5017385Z 
2025-08-19T10:33:15.5017464Z # api.migrations.env
2025-08-19T10:33:15.5017579Z 
2025-08-19T10:33:15.5017695Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T10:33:15.5017893Z 
2025-08-19T10:33:15.5017996Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T10:33:15.5018191Z 
2025-08-19T10:33:15.5018300Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T10:33:15.5018491Z 
2025-08-19T10:33:15.5018582Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T10:33:15.5018751Z 
2025-08-19T10:33:15.5018906Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T10:33:15.5019138Z 
2025-08-19T10:33:15.5019271Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T10:33:15.5019488Z 
2025-08-19T10:33:15.5019607Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T10:33:15.5019800Z 
2025-08-19T10:33:15.5019903Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T10:33:15.5020090Z 
2025-08-19T10:33:15.5020203Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T10:33:15.5020394Z 
2025-08-19T10:33:15.5020498Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T10:33:15.5020672Z 
2025-08-19T10:33:15.5020792Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T10:33:15.5021011Z 
2025-08-19T10:33:15.5021117Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T10:33:15.5021304Z 
2025-08-19T10:33:15.5021424Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T10:33:15.5021616Z 
2025-08-19T10:33:15.5021720Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T10:33:15.5021897Z 
2025-08-19T10:33:15.5022021Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T10:33:15.5022216Z 
2025-08-19T10:33:15.5022314Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T10:33:15.5022496Z 
2025-08-19T10:33:15.5022628Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T10:33:15.5022842Z 
2025-08-19T10:33:15.5022967Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T10:33:15.5023161Z 
2025-08-19T10:33:15.5023281Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T10:33:15.5023486Z 
2025-08-19T10:33:15.5023800Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T10:33:15.5024228Z 
2025-08-19T10:33:15.5024382Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T10:33:15.5024626Z 
2025-08-19T10:33:15.5024750Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T10:33:15.5025038Z 
2025-08-19T10:33:15.5025149Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T10:33:15.5025337Z 
2025-08-19T10:33:15.5025435Z # api.migrations.versions.0001\_baseline
2025-08-19T10:33:15.5025602Z 
2025-08-19T10:33:15.5025690Z <a id="api.migrations.versions"></a>
2025-08-19T10:33:15.5025849Z 
2025-08-19T10:33:15.5025934Z # api.migrations.versions
2025-08-19T10:33:15.5026059Z 
2025-08-19T10:33:15.5026134Z <a id="api.migrations"></a>
2025-08-19T10:33:15.5026268Z 
2025-08-19T10:33:15.5026333Z # api.migrations
2025-08-19T10:33:15.5026435Z 
2025-08-19T10:33:15.5026499Z <a id="api.db"></a>
2025-08-19T10:33:15.5026608Z 
2025-08-19T10:33:15.5026668Z # api.db
2025-08-19T10:33:15.5026752Z 
2025-08-19T10:33:15.5026873Z <a id="api.routes.stats"></a>
2025-08-19T10:33:15.5027166Z 
2025-08-19T10:33:15.5027234Z # api.routes.stats
2025-08-19T10:33:15.5027345Z 
2025-08-19T10:33:15.5027429Z <a id="api.routes.stats.kpi"></a>
2025-08-19T10:33:15.5027575Z 
2025-08-19T10:33:15.5027635Z #### kpi
2025-08-19T10:33:15.5027724Z 
2025-08-19T10:33:15.5027790Z ```python
2025-08-19T10:33:15.5027958Z @router.get("/stats/kpi")
2025-08-19T10:33:15.5028197Z def kpi() -> List[Dict[str, int]]
2025-08-19T10:33:15.5028405Z ```
2025-08-19T10:33:15.5028486Z 
2025-08-19T10:33:15.5028565Z Return KPI metrics (mock).
2025-08-19T10:33:15.5028704Z 
2025-08-19T10:33:15.5028802Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T10:33:15.5028985Z 
2025-08-19T10:33:15.5029051Z #### roi\_by\_vendor
2025-08-19T10:33:15.5029169Z 
2025-08-19T10:33:15.5029229Z ```python
2025-08-19T10:33:15.5029403Z @router.get("/stats/roi_by_vendor")
2025-08-19T10:33:15.5029642Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T10:33:15.5029863Z ```
2025-08-19T10:33:15.5029941Z 
2025-08-19T10:33:15.5030030Z Return ROI percent by vendor.
2025-08-19T10:33:15.5030170Z 
2025-08-19T10:33:15.5030260Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T10:33:15.5030422Z 
2025-08-19T10:33:15.5030486Z #### roi\_trend
2025-08-19T10:33:15.5030588Z 
2025-08-19T10:33:15.5030648Z ```python
2025-08-19T10:33:15.5030810Z @router.get("/stats/roi_trend")
2025-08-19T10:33:15.5031033Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T10:33:15.5031260Z ```
2025-08-19T10:33:15.5031337Z 
2025-08-19T10:33:15.5031409Z Return 30-day ROI trend.
2025-08-19T10:33:15.5031537Z 
2025-08-19T10:33:15.5031614Z <a id="api.routes.roi"></a>
2025-08-19T10:33:15.5031741Z 
2025-08-19T10:33:15.5031808Z # api.routes.roi
2025-08-19T10:33:15.5031918Z 
2025-08-19T10:33:15.5032001Z <a id="api.routes.health"></a>
2025-08-19T10:33:15.5032140Z 
2025-08-19T10:33:15.5032216Z # api.routes.health
2025-08-19T10:33:15.5032327Z 
2025-08-19T10:33:15.5032415Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T10:33:15.5032578Z 
2025-08-19T10:33:15.5032658Z #### MAX\_SKEW
2025-08-19T10:33:15.5032754Z 
2025-08-19T10:33:15.5032815Z seconds
2025-08-19T10:33:15.5032903Z 
2025-08-19T10:33:15.5032990Z <a id="api.routes.health.health"></a>
2025-08-19T10:33:15.5033150Z 
2025-08-19T10:33:15.5033217Z #### health
2025-08-19T10:33:15.5033301Z 
2025-08-19T10:33:15.5033363Z ```python
2025-08-19T10:33:15.5033558Z @router.get("/health", include_in_schema=False)
2025-08-19T10:33:15.5034167Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T10:33:15.5034507Z ```
2025-08-19T10:33:15.5034585Z 
2025-08-19T10:33:15.5034696Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T10:33:15.5034894Z 
2025-08-19T10:33:15.5034977Z <a id="api.routes.repository"></a>
2025-08-19T10:33:15.5035131Z 
2025-08-19T10:33:15.5035208Z # api.routes.repository
2025-08-19T10:33:15.5035329Z 
2025-08-19T10:33:15.5035400Z <a id="api.routes"></a>
2025-08-19T10:33:15.5035512Z 
2025-08-19T10:33:15.5035579Z # api.routes
2025-08-19T10:33:15.5035672Z 
2025-08-19T10:33:15.5035887Z <a id="api.models.fee"></a>
2025-08-19T10:33:15.5036028Z 
2025-08-19T10:33:15.5036094Z # api.models.fee
2025-08-19T10:33:15.5036197Z 
2025-08-19T10:33:15.5036266Z <a id="api.models"></a>
2025-08-19T10:33:15.5036385Z 
2025-08-19T10:33:15.5036445Z # api.models
2025-08-19T10:33:15.5036536Z 
2025-08-19T10:33:15.5036620Z <a id="api.roi_repository"></a>
2025-08-19T10:33:15.5036756Z 
2025-08-19T10:33:15.5036825Z # api.roi\_repository
2025-08-19T10:33:15.5036945Z 
2025-08-19T10:33:15.5037011Z <a id="api.main"></a>
2025-08-19T10:33:15.5037120Z 
2025-08-19T10:33:15.5037181Z # api.main
2025-08-19T10:33:15.5037279Z 
2025-08-19T10:33:15.5037352Z <a id="api.main.ready"></a>
2025-08-19T10:33:15.5037481Z 
2025-08-19T10:33:15.5037547Z #### ready
2025-08-19T10:33:15.5037632Z 
2025-08-19T10:33:15.5037691Z ```python
2025-08-19T10:33:15.5037952Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T10:33:15.5038382Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T10:33:15.5038851Z                                                                       str]
2025-08-19T10:33:15.5039067Z ```
2025-08-19T10:33:15.5039149Z 
2025-08-19T10:33:15.5039242Z Return 200 only when migrations are at head.
2025-08-19T10:33:15.5039410Z 
2025-08-19T10:33:15.5039486Z <a id="api.config"></a>
2025-08-19T10:33:15.5039601Z 
2025-08-19T10:33:15.5039661Z # api.config
2025-08-19T10:33:15.5039757Z 
2025-08-19T10:33:15.5039820Z <a id="etl"></a>
2025-08-19T10:33:15.5039917Z 
2025-08-19T10:33:15.5039974Z # etl
2025-08-19T10:33:15.5040063Z 
2025-08-19T10:33:15.5040274Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T10:33:15.5040535Z 
2025-08-19T10:33:15.5040674Z # etl.fba\_fee\_ingestor
2025-08-19T10:33:15.5040878Z 
2025-08-19T10:33:15.5041018Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T10:33:15.5041268Z 
2025-08-19T10:33:15.5041398Z # etl.sp\_fees\_ingestor
2025-08-19T10:33:15.5041599Z 
2025-08-19T10:33:15.5041740Z <a id="etl.keepa_ingestor"></a>
2025-08-19T10:33:15.5041907Z 
2025-08-19T10:33:15.5041983Z # etl.keepa\_ingestor
2025-08-19T10:33:15.5042101Z 
2025-08-19T10:33:15.5042166Z <a id="etl.db"></a>
2025-08-19T10:33:15.5042269Z 
2025-08-19T10:33:15.5042334Z # etl.db
2025-08-19T10:33:15.5042419Z 
2025-08-19T10:33:15.5042501Z <a id="etl.dialects.schemas"></a>
2025-08-19T10:33:15.5042642Z 
2025-08-19T10:33:15.5042721Z # etl.dialects.schemas
2025-08-19T10:33:15.5042845Z 
2025-08-19T10:33:15.5042953Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T10:33:15.5043146Z 
2025-08-19T10:33:15.5043235Z # etl.dialects.amazon\_reimbursements
2025-08-19T10:33:15.5043393Z 
2025-08-19T10:33:15.5043488Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T10:33:15.5043904Z 
2025-08-19T10:33:15.5044009Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T10:33:15.5044169Z 
2025-08-19T10:33:15.5044263Z <a id="etl.dialects.test_generic"></a>
2025-08-19T10:33:15.5044419Z 
2025-08-19T10:33:15.5044497Z # etl.dialects.test\_generic
2025-08-19T10:33:15.5044637Z 
2025-08-19T10:33:15.5044738Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T10:33:15.5044916Z 
2025-08-19T10:33:15.5044996Z # etl.dialects.amazon\_returns
2025-08-19T10:33:15.5045138Z 
2025-08-19T10:33:15.5045233Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T10:33:15.5045398Z 
2025-08-19T10:33:15.5045486Z # etl.dialects.amazon\_fee\_preview
2025-08-19T10:33:15.5045636Z 
2025-08-19T10:33:15.5045738Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T10:33:15.5045928Z 
2025-08-19T10:33:15.5046017Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T10:33:15.5046175Z 
2025-08-19T10:33:15.5046266Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T10:33:15.5046436Z 
2025-08-19T10:33:15.5046518Z # etl.dialects.amazon\_settlements
2025-08-19T10:33:15.5046668Z 
2025-08-19T10:33:15.5046748Z <a id="etl.dialects"></a>
2025-08-19T10:33:15.5046871Z 
2025-08-19T10:33:15.5046934Z # etl.dialects
2025-08-19T10:33:15.5047038Z 
2025-08-19T10:33:15.5047102Z <a id="ingest"></a>
2025-08-19T10:33:15.5047204Z 
2025-08-19T10:33:15.5047426Z # ingest
2025-08-19T10:33:15.5047519Z 
2025-08-19T10:33:15.5047601Z <a id="ingest.maintenance"></a>
2025-08-19T10:33:15.5047741Z 
2025-08-19T10:33:15.5047819Z # ingest.maintenance
2025-08-19T10:33:15.5047931Z 
2025-08-19T10:33:15.5048006Z <a id="ingest.copy_loader"></a>
2025-08-19T10:33:15.5048145Z 
2025-08-19T10:33:15.5048213Z # ingest.copy\_loader
2025-08-19T10:33:15.5048325Z 
2025-08-19T10:33:15.5048424Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T10:33:15.5048607Z 
2025-08-19T10:33:15.5048677Z #### copy\_df\_via\_temp
2025-08-19T10:33:15.5048794Z 
2025-08-19T10:33:15.5048861Z ```python
2025-08-19T10:33:15.5049027Z def copy_df_via_temp(engine: Engine,
2025-08-19T10:33:15.5049262Z                      df: pd.DataFrame,
2025-08-19T10:33:15.5049484Z                      target_table: str,
2025-08-19T10:33:15.5049697Z                      *,
2025-08-19T10:33:15.5049894Z                      target_schema: Optional[str] = None,
2025-08-19T10:33:15.5050148Z                      columns: Sequence[str],
2025-08-19T10:33:15.5050531Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T10:33:15.5050807Z                      analyze_after: bool = False,
2025-08-19T10:33:15.5051069Z                      connection: Any | None = None) -> int
2025-08-19T10:33:15.5051306Z ```
2025-08-19T10:33:15.5051387Z 
2025-08-19T10:33:15.5051549Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T10:33:15.5051780Z 
2025-08-19T10:33:15.5051864Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T10:33:15.5052210Z 
2025-08-19T10:33:15.5052291Z # ingest.tests.test\_smoke
2025-08-19T10:33:15.5052421Z 
2025-08-19T10:33:15.5052498Z <a id="ingest.tests"></a>
2025-08-19T10:33:15.5052620Z 
2025-08-19T10:33:15.5052685Z # ingest.tests
2025-08-19T10:33:15.5052783Z 
2025-08-19T10:33:15.5052869Z <a id="ingest.upload_router"></a>
2025-08-19T10:33:15.5053015Z 
2025-08-19T10:33:15.5053088Z # ingest.upload\_router
2025-08-19T10:33:15.5053211Z 
2025-08-19T10:33:15.5053289Z <a id="ingest.email_watcher"></a>
2025-08-19T10:33:15.5053439Z 
2025-08-19T10:33:15.5053514Z # ingest.email\_watcher
2025-08-19T10:33:15.5053864Z 
2025-08-19T10:33:15.5053957Z <a id="ingest.email_watcher.main"></a>
2025-08-19T10:33:15.5054115Z 
2025-08-19T10:33:15.5054183Z #### main
2025-08-19T10:33:15.5054268Z 
2025-08-19T10:33:15.5054328Z ```python
2025-08-19T10:33:15.5054492Z def main() -> dict[str, str]
2025-08-19T10:33:15.5054696Z ```
2025-08-19T10:33:15.5054777Z 
2025-08-19T10:33:15.5054915Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T10:33:15.5055142Z 
2025-08-19T10:33:15.5055267Z Returns {"status": "success"} when processing completes.
2025-08-19T10:33:15.5055474Z 
2025-08-19T10:33:15.5055554Z <a id="ingest.tasks"></a>
2025-08-19T10:33:15.5055679Z 
2025-08-19T10:33:15.5055741Z # ingest.tasks
2025-08-19T10:33:15.5055844Z 
2025-08-19T10:33:15.5055938Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T10:33:15.5056112Z 
2025-08-19T10:33:15.5056183Z #### task\_import\_file
2025-08-19T10:33:15.5056315Z 
2025-08-19T10:33:15.5056375Z ```python
2025-08-19T10:33:15.5056583Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T10:33:15.5056855Z def task_import_file(self: Any,
2025-08-19T10:33:15.5057063Z                      uri: str,
2025-08-19T10:33:15.5057272Z                      report_type: str | None = None,
2025-08-19T10:33:15.5057539Z                      force: bool = False) -> dict[str, Any]
2025-08-19T10:33:15.5057765Z ```
2025-08-19T10:33:15.5057850Z 
2025-08-19T10:33:15.5057974Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T10:33:15.5058177Z 
2025-08-19T10:33:15.5058261Z <a id="ingest.celery_app"></a>
2025-08-19T10:33:15.5058396Z 
2025-08-19T10:33:15.5058465Z # ingest.celery\_app
2025-08-19T10:33:15.5058574Z 
2025-08-19T10:33:15.5058657Z <a id="ingest.ingest_router"></a>
2025-08-19T10:33:15.5058798Z 
2025-08-19T10:33:15.5058868Z # ingest.ingest\_router
2025-08-19T10:33:15.5058986Z 
2025-08-19T10:33:15.5059058Z <a id="logistics_etl"></a>
2025-08-19T10:33:15.5059332Z 
2025-08-19T10:33:15.5059401Z # logistics\_etl
2025-08-19T10:33:15.5059505Z 
2025-08-19T10:33:15.5059580Z Daily logistics ETL job.
2025-08-19T10:33:15.5059698Z 
2025-08-19T10:33:15.5059783Z <a id="logistics_etl.__main__"></a>
2025-08-19T10:33:15.5059932Z 
2025-08-19T10:33:15.5060005Z # logistics\_etl.\_\_main\_\_
2025-08-19T10:33:15.5060141Z 
2025-08-19T10:33:15.5060215Z <a id="logistics_etl.dsn"></a>
2025-08-19T10:33:15.5060347Z 
2025-08-19T10:33:15.5060418Z # logistics\_etl.dsn
2025-08-19T10:33:15.5060524Z 
2025-08-19T10:33:15.5060635Z Local DSN builder to avoid cross-service dependency.
2025-08-19T10:33:15.5060829Z 
2025-08-19T10:33:15.5060924Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T10:33:15.5061084Z 
2025-08-19T10:33:15.5061145Z #### build\_dsn
2025-08-19T10:33:15.5061247Z 
2025-08-19T10:33:15.5061306Z ```python
2025-08-19T10:33:15.5061469Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:33:15.5061682Z ```
2025-08-19T10:33:15.5061758Z 
2025-08-19T10:33:15.5062018Z Return a Postgres DSN assembled from environment variables.
2025-08-19T10:33:15.5062243Z 
2025-08-19T10:33:15.5062390Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T10:33:15.5062780Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T10:33:15.5063113Z error when any required variable is missing.
2025-08-19T10:33:15.5063287Z 
2025-08-19T10:33:15.5063379Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T10:33:15.5063546Z 
2025-08-19T10:33:15.5063771Z # logistics\_etl.tests.conftest
2025-08-19T10:33:15.5063916Z 
2025-08-19T10:33:15.5064017Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T10:33:15.5064197Z 
2025-08-19T10:33:15.5064293Z # logistics\_etl.tests.test\_repository
2025-08-19T10:33:15.5064449Z 
2025-08-19T10:33:15.5064537Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T10:33:15.5064709Z 
2025-08-19T10:33:15.5064788Z # logistics\_etl.tests.test\_cron
2025-08-19T10:33:15.5064932Z 
2025-08-19T10:33:15.5065029Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T10:33:15.5065209Z 
2025-08-19T10:33:15.5065292Z # logistics\_etl.tests.test\_imports
2025-08-19T10:33:15.5065443Z 
2025-08-19T10:33:15.5065543Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T10:33:15.5065709Z 
2025-08-19T10:33:15.5065790Z # logistics\_etl.tests.test\_smoke
2025-08-19T10:33:15.5065946Z 
2025-08-19T10:33:15.5066039Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T10:33:15.5066205Z 
2025-08-19T10:33:15.5066293Z # logistics\_etl.tests.test\_client
2025-08-19T10:33:15.5066443Z 
2025-08-19T10:33:15.5066522Z <a id="logistics_etl.tests"></a>
2025-08-19T10:33:15.5066669Z 
2025-08-19T10:33:15.5066745Z # logistics\_etl.tests
2025-08-19T10:33:15.5066859Z 
2025-08-19T10:33:15.5066935Z <a id="logistics_etl.flow"></a>
2025-08-19T10:33:15.5067076Z 
2025-08-19T10:33:15.5067145Z # logistics\_etl.flow
2025-08-19T10:33:15.5067257Z 
2025-08-19T10:33:15.5067343Z <a id="logistics_etl.client"></a>
2025-08-19T10:33:15.5067486Z 
2025-08-19T10:33:15.5108780Z # logistics\_etl.client
2025-08-19T10:33:15.5109200Z 
2025-08-19T10:33:15.5109374Z <a id="logistics_etl.cron"></a>
2025-08-19T10:33:15.5109702Z 
2025-08-19T10:33:15.5109860Z # logistics\_etl.cron
2025-08-19T10:33:15.5110136Z 
2025-08-19T10:33:15.5110329Z <a id="logistics_etl.db"></a>
2025-08-19T10:33:15.5110639Z 
2025-08-19T10:33:15.5110773Z # logistics\_etl.db
2025-08-19T10:33:15.5110968Z 
2025-08-19T10:33:15.5111183Z <a id="logistics_etl.repository"></a>
2025-08-19T10:33:15.5111551Z 
2025-08-19T10:33:15.5111733Z # logistics\_etl.repository
2025-08-19T10:33:15.5112044Z 
2025-08-19T10:33:15.5112193Z <a id="alert_bot"></a>
2025-08-19T10:33:15.5112441Z 
2025-08-19T10:33:15.5112582Z # alert\_bot
2025-08-19T10:33:15.5112783Z 
2025-08-19T10:33:15.5112967Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T10:33:15.5113318Z 
2025-08-19T10:33:15.5113492Z # alert\_bot.tests.test\_smoke
2025-08-19T10:33:15.5114010Z 
2025-08-19T10:33:15.5114175Z <a id="alert_bot.tests"></a>
2025-08-19T10:33:15.5114466Z 
2025-08-19T10:33:15.5114860Z # alert\_bot.tests
2025-08-19T10:33:15.5115064Z 
2025-08-19T10:33:15.5115199Z <a id="alert_bot.alert_bot"></a>
2025-08-19T10:33:15.5115456Z 
2025-08-19T10:33:15.5115578Z # alert\_bot.alert\_bot
2025-08-19T10:33:15.5115797Z 
2025-08-19T10:33:15.5115944Z <a id="alert_bot.rules"></a>
2025-08-19T10:33:15.5116178Z 
2025-08-19T10:33:15.5116298Z # alert\_bot.rules
2025-08-19T10:33:15.5116506Z 
2025-08-19T10:33:15.5116628Z <a id="common"></a>
2025-08-19T10:33:15.5116823Z 
2025-08-19T10:33:15.5116938Z # common
2025-08-19T10:33:15.5117105Z 
2025-08-19T10:33:15.5117234Z <a id="common.dsn"></a>
2025-08-19T10:33:15.5117446Z 
2025-08-19T10:33:15.5117568Z # common.dsn
2025-08-19T10:33:15.5117733Z 
2025-08-19T10:33:15.5117872Z <a id="common.dsn.build_dsn"></a>
2025-08-19T10:33:15.5118136Z 
2025-08-19T10:33:15.5118240Z #### build\_dsn
2025-08-19T10:33:15.5118409Z 
2025-08-19T10:33:15.5118512Z ```python
2025-08-19T10:33:15.5118808Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:33:15.5119180Z ```
2025-08-19T10:33:15.5119534Z 
2025-08-19T10:33:15.5119740Z Return a Postgres DSN, validating required variables.
2025-08-19T10:33:15.5120086Z 
2025-08-19T10:33:15.5120413Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T10:33:15.5120911Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T10:33:15.5121342Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T10:33:15.5121647Z missing.
2025-08-19T10:33:15.5121742Z 
2025-08-19T10:33:15.5121824Z <a id="common.models_vendor"></a>
2025-08-19T10:33:15.5121977Z 
2025-08-19T10:33:15.5122056Z # common.models\_vendor
2025-08-19T10:33:15.5122180Z 
2025-08-19T10:33:15.5122268Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T10:33:15.5122432Z 
2025-08-19T10:33:15.5122503Z ## Vendor Objects
2025-08-19T10:33:15.5122609Z 
2025-08-19T10:33:15.5122673Z ```python
2025-08-19T10:33:15.5122830Z class Vendor(Base)
2025-08-19T10:33:15.5122992Z ```
2025-08-19T10:33:15.5123079Z 
2025-08-19T10:33:15.5123169Z Vendor of inventory items.
2025-08-19T10:33:15.5123302Z 
2025-08-19T10:33:15.5123407Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T10:33:15.5123803Z 
2025-08-19T10:33:15.5123903Z ## VendorPrice Objects
2025-08-19T10:33:15.5124035Z 
2025-08-19T10:33:15.5124095Z ```python
2025-08-19T10:33:15.5124253Z class VendorPrice(Base)
2025-08-19T10:33:15.5124432Z ```
2025-08-19T10:33:15.5124512Z 
2025-08-19T10:33:15.5124614Z Association table linking vendors to pricing.
2025-08-19T10:33:15.5124802Z 
2025-08-19T10:33:15.5124876Z <a id="common.db_url"></a>
2025-08-19T10:33:15.5125002Z 
2025-08-19T10:33:15.5125076Z # common.db\_url
2025-08-19T10:33:15.5125179Z 
2025-08-19T10:33:15.5125261Z <a id="common.db_url.build_url"></a>
2025-08-19T10:33:15.5125419Z 
2025-08-19T10:33:15.5125481Z #### build\_url
2025-08-19T10:33:15.5125580Z 
2025-08-19T10:33:15.5125640Z ```python
2025-08-19T10:33:15.5125819Z def build_url(async_: bool = True) -> str
2025-08-19T10:33:15.5126038Z ```
2025-08-19T10:33:15.5126136Z 
2025-08-19T10:33:15.5126232Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:33:15.5126404Z 
2025-08-19T10:33:15.5126490Z <a id="common.keepa"></a>
2025-08-19T10:33:15.5126617Z 
2025-08-19T10:33:15.5126683Z # common.keepa
2025-08-19T10:33:15.5126795Z 
2025-08-19T10:33:15.5126867Z <a id="common.llm"></a>
2025-08-19T10:33:15.5126985Z 
2025-08-19T10:33:15.5127048Z # common.llm
2025-08-19T10:33:15.5127152Z 
2025-08-19T10:33:15.5127231Z <a id="common.settings"></a>
2025-08-19T10:33:15.5127369Z 
2025-08-19T10:33:15.5127444Z # common.settings
2025-08-19T10:33:15.5127548Z 
2025-08-19T10:33:15.5127618Z <a id="common.db"></a>
2025-08-19T10:33:15.5127738Z 
2025-08-19T10:33:15.5127800Z # common.db
2025-08-19T10:33:15.5127888Z 
2025-08-19T10:33:15.5127980Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T10:33:15.5128151Z 
2025-08-19T10:33:15.5128226Z #### build\_sqlalchemy\_url
2025-08-19T10:33:15.5128353Z 
2025-08-19T10:33:15.5128419Z ```python
2025-08-19T10:33:15.5128585Z def build_sqlalchemy_url() -> str
2025-08-19T10:33:15.5128942Z ```
2025-08-19T10:33:15.5129021Z 
2025-08-19T10:33:15.5129118Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:33:15.5129294Z 
2025-08-19T10:33:15.5129382Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T10:33:15.5129547Z 
2025-08-19T10:33:15.5129618Z #### build\_asyncpg\_dsn
2025-08-19T10:33:15.5129749Z 
2025-08-19T10:33:15.5129810Z ```python
2025-08-19T10:33:15.5129980Z def build_asyncpg_dsn() -> str
2025-08-19T10:33:15.5130169Z ```
2025-08-19T10:33:15.5130249Z 
2025-08-19T10:33:15.5130380Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:33:15.5130586Z 
2025-08-19T10:33:15.5130667Z <a id="common.db.refresh_mvs"></a>
2025-08-19T10:33:15.5130821Z 
2025-08-19T10:33:15.5130885Z #### refresh\_mvs
2025-08-19T10:33:15.5130986Z 
2025-08-19T10:33:15.5131046Z ```python
2025-08-19T10:33:15.5131241Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:33:15.5131486Z ```
2025-08-19T10:33:15.5131564Z 
2025-08-19T10:33:15.5131697Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:33:15.5132033Z 
2025-08-19T10:33:15.5132119Z <a id="common.config"></a>
2025-08-19T10:33:15.5132249Z 
2025-08-19T10:33:15.5132314Z # common.config
2025-08-19T10:33:15.5132423Z 
2025-08-19T10:33:15.5132496Z <a id="common.base"></a>
2025-08-19T10:33:15.5132617Z 
2025-08-19T10:33:15.5132686Z # common.base
2025-08-19T10:33:15.5132781Z 
2025-08-19T10:33:15.5132859Z <a id="common.base.Base"></a>
2025-08-19T10:33:15.5132994Z 
2025-08-19T10:33:15.5133064Z ## Base Objects
2025-08-19T10:33:15.5133163Z 
2025-08-19T10:33:15.5133223Z ```python
2025-08-19T10:33:15.5133393Z class Base(DeclarativeBase)
2025-08-19T10:33:15.5133746Z ```
2025-08-19T10:33:15.5133857Z 
2025-08-19T10:33:15.5133942Z Base class for SQLAlchemy models.
2025-08-19T10:33:15.5134091Z 
2025-08-19T10:33:15.5134168Z <a id="repricer"></a>
2025-08-19T10:33:15.5134286Z 
2025-08-19T10:33:15.5134348Z # repricer
2025-08-19T10:33:15.5134435Z 
2025-08-19T10:33:15.5134525Z <a id="repricer.app.schemas"></a>
2025-08-19T10:33:15.5134685Z 
2025-08-19T10:33:15.5134760Z # repricer.app.schemas
2025-08-19T10:33:15.5134884Z 
2025-08-19T10:33:15.5134967Z <a id="repricer.app.deps"></a>
2025-08-19T10:33:15.5135115Z 
2025-08-19T10:33:15.5135188Z # repricer.app.deps
2025-08-19T10:33:15.5135304Z 
2025-08-19T10:33:15.5135422Z Placeholder module for Keepa / SP-API clients.
2025-08-19T10:33:15.5135603Z 
2025-08-19T10:33:15.5135693Z <a id="repricer.app.logic"></a>
2025-08-19T10:33:15.5135835Z 
2025-08-19T10:33:15.5135908Z # repricer.app.logic
2025-08-19T10:33:15.5136030Z 
2025-08-19T10:33:15.5136126Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T10:33:15.5136298Z 
2025-08-19T10:33:15.5136361Z #### MIN\_MARGIN
2025-08-19T10:33:15.5136472Z 
2025-08-19T10:33:15.5136532Z 15 % ROI
2025-08-19T10:33:15.5136617Z 
2025-08-19T10:33:15.5136726Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T10:33:15.5136903Z 
2025-08-19T10:33:15.5136970Z #### compute\_price
2025-08-19T10:33:15.5137086Z 
2025-08-19T10:33:15.5137153Z ```python
2025-08-19T10:33:15.5137402Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T10:33:15.5137701Z ```
2025-08-19T10:33:15.5137783Z 
2025-08-19T10:33:15.5137888Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T10:33:15.5138170Z Replace with real competitive logic later.
2025-08-19T10:33:15.5138336Z 
2025-08-19T10:33:15.5138422Z <a id="repricer.app.main"></a>
2025-08-19T10:33:15.5138559Z 
2025-08-19T10:33:15.5138628Z # repricer.app.main
2025-08-19T10:33:15.5138745Z 
2025-08-19T10:33:15.5138820Z <a id="repricer.app"></a>
2025-08-19T10:33:15.5138946Z 
2025-08-19T10:33:15.5139011Z # repricer.app
2025-08-19T10:33:15.5139119Z 
2025-08-19T10:33:15.5139208Z <a id="repricer.tests.test_imports"></a>
2025-08-19T10:33:15.5139378Z 
2025-08-19T10:33:15.5139467Z # repricer.tests.test\_imports
2025-08-19T10:33:15.5139611Z 
2025-08-19T10:33:15.5139699Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T10:33:15.5139864Z 
2025-08-19T10:33:15.5139942Z # repricer.tests.test\_smoke
2025-08-19T10:33:15.5140249Z 
2025-08-19T10:33:15.5140327Z <a id="repricer.tests"></a>
2025-08-19T10:33:15.5140462Z 
2025-08-19T10:33:15.5140528Z # repricer.tests
2025-08-19T10:33:15.5140631Z 
2025-08-19T10:33:15.5140700Z <a id="db"></a>
2025-08-19T10:33:15.5140796Z 
2025-08-19T10:33:15.5140853Z # db
2025-08-19T10:33:15.5140937Z 
2025-08-19T10:33:15.5141014Z <a id="db.utils.views"></a>
2025-08-19T10:33:15.5141139Z 
2025-08-19T10:33:15.5141204Z # db.utils.views
2025-08-19T10:33:15.5141309Z 
2025-08-19T10:33:15.5141401Z <a id="db.utils.views.replace_view"></a>
2025-08-19T10:33:15.5141571Z 
2025-08-19T10:33:15.5141642Z #### replace\_view
2025-08-19T10:33:15.5141746Z 
2025-08-19T10:33:15.5141812Z ```python
2025-08-19T10:33:15.5142004Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T10:33:15.5142243Z ```
2025-08-19T10:33:15.5142321Z 
2025-08-19T10:33:15.5142415Z Drop and recreate a SQL view atomically.
2025-08-19T10:33:15.5142578Z 
2025-08-19T10:33:15.5142646Z <a id="db.utils"></a>
2025-08-19T10:33:15.5142904Z 
2025-08-19T10:33:15.5142964Z # db.utils
2025-08-19T10:33:15.5143054Z 
2025-08-19T10:33:15.5143136Z <a id="price_importer"></a>
2025-08-19T10:33:15.5143262Z 
2025-08-19T10:33:15.5143329Z # price\_importer
2025-08-19T10:33:15.5143432Z 
2025-08-19T10:33:15.5143539Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T10:33:15.5143911Z 
2025-08-19T10:33:15.5144005Z # price\_importer.services\_common.dsn
2025-08-19T10:33:15.5144171Z 
2025-08-19T10:33:15.5144296Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T10:33:15.5144503Z 
2025-08-19T10:33:15.5144572Z #### build\_dsn
2025-08-19T10:33:15.5144668Z 
2025-08-19T10:33:15.5144728Z ```python
2025-08-19T10:33:15.5144906Z def build_dsn(sync: bool = True) -> str
2025-08-19T10:33:15.5145120Z ```
2025-08-19T10:33:15.5145204Z 
2025-08-19T10:33:15.5145269Z Return safe DSN.
2025-08-19T10:33:15.5145369Z 
2025-08-19T10:33:15.5145717Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T10:33:15.5145926Z 
2025-08-19T10:33:15.5146066Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T10:33:15.5146270Z 
2025-08-19T10:33:15.5146385Z # price\_importer.services\_common.models\_vendor
2025-08-19T10:33:15.5146572Z 
2025-08-19T10:33:15.5146676Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T10:33:15.5146866Z 
2025-08-19T10:33:15.5146960Z # price\_importer.services\_common.db\_url
2025-08-19T10:33:15.5147129Z 
2025-08-19T10:33:15.5147261Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T10:33:15.5147516Z 
2025-08-19T10:33:15.5147585Z #### build\_url
2025-08-19T10:33:15.5147682Z 
2025-08-19T10:33:15.5147743Z ```python
2025-08-19T10:33:15.5147918Z def build_url(async_: bool = True) -> str
2025-08-19T10:33:15.5148139Z ```
2025-08-19T10:33:15.5148226Z 
2025-08-19T10:33:15.5148322Z Return Postgres DSN from env or PG_* parts.
2025-08-19T10:33:15.5148492Z 
2025-08-19T10:33:15.5148597Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T10:33:15.5148788Z 
2025-08-19T10:33:15.5148892Z # price\_importer.services\_common.keepa
2025-08-19T10:33:15.5149059Z 
2025-08-19T10:33:15.5149164Z <a id="price_importer.services_common.llm"></a>
2025-08-19T10:33:15.5149341Z 
2025-08-19T10:33:15.5149429Z # price\_importer.services\_common.llm
2025-08-19T10:33:15.5149594Z 
2025-08-19T10:33:15.5149705Z <a id="price_importer.services_common.settings"></a>
2025-08-19T10:33:15.5149898Z 
2025-08-19T10:33:15.5149992Z # price\_importer.services\_common.settings
2025-08-19T10:33:15.5150168Z 
2025-08-19T10:33:15.5150268Z <a id="price_importer.services_common.db"></a>
2025-08-19T10:33:15.5150441Z 
2025-08-19T10:33:15.5150536Z # price\_importer.services\_common.db
2025-08-19T10:33:15.5150690Z 
2025-08-19T10:33:15.5150840Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T10:33:15.5151082Z 
2025-08-19T10:33:15.5151159Z #### build\_sqlalchemy\_url
2025-08-19T10:33:15.5151288Z 
2025-08-19T10:33:15.5151353Z ```python
2025-08-19T10:33:15.5151525Z def build_sqlalchemy_url() -> str
2025-08-19T10:33:15.5151877Z ```
2025-08-19T10:33:15.5151957Z 
2025-08-19T10:33:15.5152050Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T10:33:15.5152218Z 
2025-08-19T10:33:15.5152367Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T10:33:15.5152592Z 
2025-08-19T10:33:15.5152664Z #### build\_asyncpg\_dsn
2025-08-19T10:33:15.5152796Z 
2025-08-19T10:33:15.5152855Z ```python
2025-08-19T10:33:15.5153019Z def build_asyncpg_dsn() -> str
2025-08-19T10:33:15.5153212Z ```
2025-08-19T10:33:15.5153291Z 
2025-08-19T10:33:15.5153420Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T10:33:15.5153802Z 
2025-08-19T10:33:15.5153934Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T10:33:15.5154144Z 
2025-08-19T10:33:15.5154208Z #### refresh\_mvs
2025-08-19T10:33:15.5154310Z 
2025-08-19T10:33:15.5154370Z ```python
2025-08-19T10:33:15.5154563Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T10:33:15.5154805Z ```
2025-08-19T10:33:15.5154882Z 
2025-08-19T10:33:15.5155151Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T10:33:15.5155367Z 
2025-08-19T10:33:15.5155469Z <a id="price_importer.services_common"></a>
2025-08-19T10:33:15.5155643Z 
2025-08-19T10:33:15.5155729Z # price\_importer.services\_common
2025-08-19T10:33:15.5155888Z 
2025-08-19T10:33:15.5155990Z <a id="price_importer.services_common.base"></a>
2025-08-19T10:33:15.5156176Z 
2025-08-19T10:33:15.5156270Z # price\_importer.services\_common.base
2025-08-19T10:33:15.5156434Z 
2025-08-19T10:33:15.5156523Z <a id="price_importer.normaliser"></a>
2025-08-19T10:33:15.5156682Z 
2025-08-19T10:33:15.5156770Z # price\_importer.normaliser
2025-08-19T10:33:15.5156908Z 
2025-08-19T10:33:15.5157011Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T10:33:15.5157195Z 
2025-08-19T10:33:15.5157283Z # price\_importer.common.models\_vendor
2025-08-19T10:33:15.5157444Z 
2025-08-19T10:33:15.5157541Z <a id="price_importer.common.db_url"></a>
2025-08-19T10:33:15.5157710Z 
2025-08-19T10:33:15.5157804Z # price\_importer.common.db\_url
2025-08-19T10:33:15.5157951Z 
2025-08-19T10:33:15.5158060Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T10:33:15.5158244Z 
2025-08-19T10:33:15.5158307Z #### make\_dsn
2025-08-19T10:33:15.5158411Z 
2025-08-19T10:33:15.5158472Z ```python
2025-08-19T10:33:15.5158644Z def make_dsn(async_: bool = False) -> str
2025-08-19T10:33:15.5158872Z ```
2025-08-19T10:33:15.5158955Z 
2025-08-19T10:33:15.5159080Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T10:33:15.5159279Z 
2025-08-19T10:33:15.5159386Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T10:33:15.5159583Z 
2025-08-19T10:33:15.5159647Z #### build\_url
2025-08-19T10:33:15.5159746Z 
2025-08-19T10:33:15.5159806Z ```python
2025-08-19T10:33:15.5159985Z def build_url(async_: bool = False) -> str
2025-08-19T10:33:15.5160204Z ```
2025-08-19T10:33:15.5160293Z 
2025-08-19T10:33:15.5160418Z Return Postgres DSN built from environment variables.
2025-08-19T10:33:15.5160623Z 
2025-08-19T10:33:15.5160724Z <a id="price_importer.common"></a>
2025-08-19T10:33:15.5160881Z 
2025-08-19T10:33:15.5160962Z # price\_importer.common
2025-08-19T10:33:15.5161095Z 
2025-08-19T10:33:15.5161183Z <a id="price_importer.common.base"></a>
2025-08-19T10:33:15.5161347Z 
2025-08-19T10:33:15.5161430Z # price\_importer.common.base
2025-08-19T10:33:15.5161602Z 
2025-08-19T10:33:15.5161699Z <a id="price_importer.tests.conftest"></a>
2025-08-19T10:33:15.5161870Z 
2025-08-19T10:33:15.5161963Z # price\_importer.tests.conftest
2025-08-19T10:33:15.5162109Z 
2025-08-19T10:33:15.5162208Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T10:33:15.5162388Z 
2025-08-19T10:33:15.5162474Z # price\_importer.tests.test\_reader
2025-08-19T10:33:15.5162629Z 
2025-08-19T10:33:15.5162725Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T10:33:15.5162908Z 
2025-08-19T10:33:15.5162997Z # price\_importer.tests.test\_imports
2025-08-19T10:33:15.5163155Z 
2025-08-19T10:33:15.5163255Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T10:33:15.5163562Z 
2025-08-19T10:33:15.5163863Z # price\_importer.tests.test\_smoke
2025-08-19T10:33:15.5164041Z 
2025-08-19T10:33:15.5164152Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T10:33:15.5164337Z 
2025-08-19T10:33:15.5164426Z # price\_importer.tests.test\_normaliser
2025-08-19T10:33:15.5164597Z 
2025-08-19T10:33:15.5164678Z <a id="price_importer.tests"></a>
2025-08-19T10:33:15.5164825Z 
2025-08-19T10:33:15.5164906Z # price\_importer.tests
2025-08-19T10:33:15.5165028Z 
2025-08-19T10:33:15.5165111Z <a id="price_importer.reader"></a>
2025-08-19T10:33:15.5165269Z 
2025-08-19T10:33:15.5165345Z # price\_importer.reader
2025-08-19T10:33:15.5165470Z 
2025-08-19T10:33:15.5165559Z <a id="price_importer.repository"></a>
2025-08-19T10:33:15.5165728Z 
2025-08-19T10:33:15.5165811Z # price\_importer.repository
2025-08-19T10:33:15.5165948Z 
2025-08-19T10:33:15.5166038Z <a id="price_importer.import"></a>
2025-08-19T10:33:15.5166184Z 
2025-08-19T10:33:15.5166259Z # price\_importer.import
2025-08-19T10:33:15.5166534Z 
2025-08-19T10:33:15.5166604Z <a id="fees_h10"></a>
2025-08-19T10:33:15.5166716Z 
2025-08-19T10:33:15.5166780Z # fees\_h10
2025-08-19T10:33:15.5166912Z 
2025-08-19T10:33:15.5166989Z <a id="fees_h10.worker"></a>
2025-08-19T10:33:15.5167122Z 
2025-08-19T10:33:15.5167194Z # fees\_h10.worker
2025-08-19T10:33:15.5167299Z 
2025-08-19T10:33:15.5167394Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T10:33:15.5167572Z 
2025-08-19T10:33:15.5167644Z #### list\_active\_asins
2025-08-19T10:33:15.5167763Z 
2025-08-19T10:33:15.5167825Z ```python
2025-08-19T10:33:15.5167998Z def list_active_asins() -> list[str]
2025-08-19T10:33:15.5168203Z ```
2025-08-19T10:33:15.5168292Z 
2025-08-19T10:33:15.5168402Z Return known ASINs or an empty list if unavailable.
2025-08-19T10:33:15.5168592Z 
2025-08-19T10:33:15.5168681Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T10:33:15.5168836Z 
2025-08-19T10:33:15.5168914Z # fees\_h10.tests.test\_smoke
2025-08-19T10:33:15.5169055Z 
2025-08-19T10:33:15.5169140Z <a id="fees_h10.tests"></a>
2025-08-19T10:33:15.5169270Z 
2025-08-19T10:33:15.5169334Z # fees\_h10.tests
2025-08-19T10:33:15.5169442Z 
2025-08-19T10:33:15.5169516Z <a id="fees_h10.client"></a>
2025-08-19T10:33:15.5169644Z 
2025-08-19T10:33:15.5169715Z # fees\_h10.client
2025-08-19T10:33:15.5169817Z 
2025-08-19T10:33:15.5169898Z <a id="fees_h10.repository"></a>
2025-08-19T10:33:15.5170047Z 
2025-08-19T10:33:15.5170118Z # fees\_h10.repository
2025-08-19T10:33:15.5170237Z 
2025-08-19T10:33:15.5170306Z <a id="emailer"></a>
2025-08-19T10:33:15.5170423Z 
2025-08-19T10:33:15.5170485Z # emailer
2025-08-19T10:33:15.5170576Z 
2025-08-19T10:33:15.5170684Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T10:33:15.5170859Z 
2025-08-19T10:33:15.5170946Z # emailer.tests.test\_import\_emailer
2025-08-19T10:33:15.5171103Z 
2025-08-19T10:33:15.5171194Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T10:33:15.5171345Z 
2025-08-19T10:33:15.5171424Z # emailer.tests.test\_smoke
2025-08-19T10:33:15.5171573Z 
2025-08-19T10:33:15.5171647Z <a id="emailer.tests"></a>
2025-08-19T10:33:15.5171774Z 
2025-08-19T10:33:15.5171845Z # emailer.tests
2025-08-19T10:33:15.5171950Z 
2025-08-19T10:33:15.5172034Z <a id="emailer.generate_body"></a>
2025-08-19T10:33:15.5172183Z 
2025-08-19T10:33:15.5172264Z # emailer.generate\_body
2025-08-19T10:33:15.5172387Z 
2025-08-19T10:33:15.5172456Z <a id="llm_server"></a>
2025-08-19T10:33:15.5172578Z 
2025-08-19T10:33:15.5172645Z # llm\_server
2025-08-19T10:33:15.5172745Z 
2025-08-19T10:33:15.5172826Z <a id="llm_server.app"></a>
2025-08-19T10:33:15.5172958Z 
2025-08-19T10:33:15.5173025Z # llm\_server.app
2025-08-19T10:33:15.5173127Z 
