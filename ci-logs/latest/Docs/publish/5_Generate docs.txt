2025-08-16T23:20:03.1515116Z ##[group]Run pydoc-markdown
2025-08-16T23:20:03.1515408Z [36;1mpydoc-markdown[0m
2025-08-16T23:20:03.1558176Z shell: /usr/bin/bash -e {0}
2025-08-16T23:20:03.1558405Z env:
2025-08-16T23:20:03.1558634Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:20:03.1559026Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T23:20:03.1559427Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:20:03.1559770Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:20:03.1560116Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:20:03.1560454Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T23:20:03.1560731Z ##[endgroup]
2025-08-16T23:20:03.6174436Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T23:20:03.6175156Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T23:20:03.6175629Z In "pydoc-markdown.yml"
2025-08-16T23:20:03.6176081Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T23:20:03.6176725Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T23:20:03.6177454Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T23:20:03.6177971Z 
2025-08-16T23:20:03.8205970Z <a id="__init__"></a>
2025-08-16T23:20:03.8206216Z 
2025-08-16T23:20:03.8206342Z # \_\_init\_\_
2025-08-16T23:20:03.8206516Z 
2025-08-16T23:20:03.8206621Z <a id="api"></a>
2025-08-16T23:20:03.8206797Z 
2025-08-16T23:20:03.8206895Z # api
2025-08-16T23:20:03.8207027Z 
2025-08-16T23:20:03.8207167Z <a id="api.tests.test_llm"></a>
2025-08-16T23:20:03.8207420Z 
2025-08-16T23:20:03.8207553Z # api.tests.test\_llm
2025-08-16T23:20:03.8207737Z 
2025-08-16T23:20:03.8207884Z <a id="api.tests.test_imports"></a>
2025-08-16T23:20:03.8208138Z 
2025-08-16T23:20:03.8208255Z # api.tests.test\_imports
2025-08-16T23:20:03.8208467Z 
2025-08-16T23:20:03.8208610Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T23:20:03.8209150Z 
2025-08-16T23:20:03.8209275Z # api.tests.test\_entrypoint
2025-08-16T23:20:03.8209518Z 
2025-08-16T23:20:03.8209658Z <a id="api.tests.test_health"></a>
2025-08-16T23:20:03.8209919Z 
2025-08-16T23:20:03.8210045Z # api.tests.test\_health
2025-08-16T23:20:03.8210281Z 
2025-08-16T23:20:03.8210441Z <a id="api.migrations.env"></a>
2025-08-16T23:20:03.8210713Z 
2025-08-16T23:20:03.8210858Z # api.migrations.env
2025-08-16T23:20:03.8211063Z 
2025-08-16T23:20:03.8211295Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T23:20:03.8211689Z 
2025-08-16T23:20:03.8211892Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T23:20:03.8212275Z 
2025-08-16T23:20:03.8212480Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T23:20:03.8212869Z 
2025-08-16T23:20:03.8213163Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T23:20:03.8213765Z 
2025-08-16T23:20:03.8213969Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T23:20:03.8214272Z 
2025-08-16T23:20:03.8214451Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T23:20:03.8214718Z 
2025-08-16T23:20:03.8214863Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T23:20:03.8215105Z 
2025-08-16T23:20:03.8215235Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T23:20:03.8215455Z 
2025-08-16T23:20:03.8215594Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T23:20:03.8215836Z 
2025-08-16T23:20:03.8215957Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T23:20:03.8216173Z 
2025-08-16T23:20:03.8216320Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T23:20:03.8216562Z 
2025-08-16T23:20:03.8216687Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T23:20:03.8216917Z 
2025-08-16T23:20:03.8217052Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T23:20:03.8217283Z 
2025-08-16T23:20:03.8217406Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T23:20:03.8217632Z 
2025-08-16T23:20:03.8217773Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T23:20:03.8218298Z 
2025-08-16T23:20:03.8218429Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T23:20:03.8218648Z 
2025-08-16T23:20:03.8218792Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T23:20:03.8219048Z 
2025-08-16T23:20:03.8219174Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T23:20:03.8219397Z 
2025-08-16T23:20:03.8219522Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T23:20:03.8219753Z 
2025-08-16T23:20:03.8219860Z # api.migrations.versions.0001\_baseline
2025-08-16T23:20:03.8220052Z 
2025-08-16T23:20:03.8220148Z <a id="api.migrations.versions"></a>
2025-08-16T23:20:03.8220318Z 
2025-08-16T23:20:03.8220401Z # api.migrations.versions
2025-08-16T23:20:03.8220540Z 
2025-08-16T23:20:03.8220618Z <a id="api.migrations"></a>
2025-08-16T23:20:03.8220751Z 
2025-08-16T23:20:03.8220819Z # api.migrations
2025-08-16T23:20:03.8220927Z 
2025-08-16T23:20:03.8220994Z <a id="api.db"></a>
2025-08-16T23:20:03.8221105Z 
2025-08-16T23:20:03.8221177Z # api.db
2025-08-16T23:20:03.8221263Z 
2025-08-16T23:20:03.8221342Z <a id="api.routes.stats"></a>
2025-08-16T23:20:03.8221487Z 
2025-08-16T23:20:03.8221555Z # api.routes.stats
2025-08-16T23:20:03.8221661Z 
2025-08-16T23:20:03.8221748Z <a id="api.routes.stats.kpi"></a>
2025-08-16T23:20:03.8221905Z 
2025-08-16T23:20:03.8221967Z #### kpi
2025-08-16T23:20:03.8222050Z 
2025-08-16T23:20:03.8222118Z ```python
2025-08-16T23:20:03.8222281Z @router.get("/stats/kpi")
2025-08-16T23:20:03.8222510Z def kpi() -> List[Dict[str, int]]
2025-08-16T23:20:03.8222711Z ```
2025-08-16T23:20:03.8222795Z 
2025-08-16T23:20:03.8222880Z Return KPI metrics (mock).
2025-08-16T23:20:03.8223009Z 
2025-08-16T23:20:03.8223110Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T23:20:03.8223510Z 
2025-08-16T23:20:03.8223592Z #### roi\_by\_vendor
2025-08-16T23:20:03.8223703Z 
2025-08-16T23:20:03.8223771Z ```python
2025-08-16T23:20:03.8223941Z @router.get("/stats/roi_by_vendor")
2025-08-16T23:20:03.8224331Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T23:20:03.8224559Z ```
2025-08-16T23:20:03.8224637Z 
2025-08-16T23:20:03.8224721Z Return ROI percent by vendor.
2025-08-16T23:20:03.8224860Z 
2025-08-16T23:20:03.8224949Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T23:20:03.8225123Z 
2025-08-16T23:20:03.8225186Z #### roi\_trend
2025-08-16T23:20:03.8225284Z 
2025-08-16T23:20:03.8225350Z ```python
2025-08-16T23:20:03.8225591Z @router.get("/stats/roi_trend")
2025-08-16T23:20:03.8225863Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T23:20:03.8226091Z ```
2025-08-16T23:20:03.8226176Z 
2025-08-16T23:20:03.8226252Z Return 30-day ROI trend.
2025-08-16T23:20:03.8226374Z 
2025-08-16T23:20:03.8226456Z <a id="api.routes.roi"></a>
2025-08-16T23:20:03.8226590Z 
2025-08-16T23:20:03.8226656Z # api.routes.roi
2025-08-16T23:20:03.8226764Z 
2025-08-16T23:20:03.8226845Z <a id="api.routes.health"></a>
2025-08-16T23:20:03.8226983Z 
2025-08-16T23:20:03.8227051Z # api.routes.health
2025-08-16T23:20:03.8227168Z 
2025-08-16T23:20:03.8227261Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T23:20:03.8227422Z 
2025-08-16T23:20:03.8227491Z #### MAX\_SKEW
2025-08-16T23:20:03.8227584Z 
2025-08-16T23:20:03.8227644Z seconds
2025-08-16T23:20:03.8227724Z 
2025-08-16T23:20:03.8227820Z <a id="api.routes.health.health"></a>
2025-08-16T23:20:03.8227977Z 
2025-08-16T23:20:03.8228039Z #### health
2025-08-16T23:20:03.8228134Z 
2025-08-16T23:20:03.8228197Z ```python
2025-08-16T23:20:03.8228385Z @router.get("/health", include_in_schema=False)
2025-08-16T23:20:03.8229141Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T23:20:03.8229770Z ```
2025-08-16T23:20:03.8229922Z 
2025-08-16T23:20:03.8230129Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T23:20:03.8230488Z 
2025-08-16T23:20:03.8230648Z <a id="api.routes.repository"></a>
2025-08-16T23:20:03.8230847Z 
2025-08-16T23:20:03.8230928Z # api.routes.repository
2025-08-16T23:20:03.8231058Z 
2025-08-16T23:20:03.8231138Z <a id="api.routes"></a>
2025-08-16T23:20:03.8231446Z 
2025-08-16T23:20:03.8231515Z # api.routes
2025-08-16T23:20:03.8231610Z 
2025-08-16T23:20:03.8231685Z <a id="api.models.fee"></a>
2025-08-16T23:20:03.8231820Z 
2025-08-16T23:20:03.8231895Z # api.models.fee
2025-08-16T23:20:03.8232001Z 
2025-08-16T23:20:03.8232071Z <a id="api.models"></a>
2025-08-16T23:20:03.8232194Z 
2025-08-16T23:20:03.8232256Z # api.models
2025-08-16T23:20:03.8232348Z 
2025-08-16T23:20:03.8232427Z <a id="api.roi_repository"></a>
2025-08-16T23:20:03.8232571Z 
2025-08-16T23:20:03.8232640Z # api.roi\_repository
2025-08-16T23:20:03.8232753Z 
2025-08-16T23:20:03.8232826Z <a id="api.main"></a>
2025-08-16T23:20:03.8232935Z 
2025-08-16T23:20:03.8232997Z # api.main
2025-08-16T23:20:03.8233091Z 
2025-08-16T23:20:03.8233168Z <a id="api.main.ready"></a>
2025-08-16T23:20:03.8233449Z 
2025-08-16T23:20:03.8233512Z #### ready
2025-08-16T23:20:03.8233604Z 
2025-08-16T23:20:03.8233664Z ```python
2025-08-16T23:20:03.8233921Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T23:20:03.8234361Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T23:20:03.8234713Z                                                                       str]
2025-08-16T23:20:03.8234936Z ```
2025-08-16T23:20:03.8235023Z 
2025-08-16T23:20:03.8235118Z Return 200 only when migrations are at head.
2025-08-16T23:20:03.8235289Z 
2025-08-16T23:20:03.8235359Z <a id="api.config"></a>
2025-08-16T23:20:03.8235483Z 
2025-08-16T23:20:03.8235545Z # api.config
2025-08-16T23:20:03.8235636Z 
2025-08-16T23:20:03.8235708Z <a id="etl"></a>
2025-08-16T23:20:03.8235810Z 
2025-08-16T23:20:03.8235868Z # etl
2025-08-16T23:20:03.8235958Z 
2025-08-16T23:20:03.8236036Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T23:20:03.8236182Z 
2025-08-16T23:20:03.8236253Z # etl.fba\_fee\_ingestor
2025-08-16T23:20:03.8236381Z 
2025-08-16T23:20:03.8236458Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T23:20:03.8236601Z 
2025-08-16T23:20:03.8236680Z # etl.sp\_fees\_ingestor
2025-08-16T23:20:03.8236923Z 
2025-08-16T23:20:03.8236999Z <a id="etl.keepa_ingestor"></a>
2025-08-16T23:20:03.8237139Z 
2025-08-16T23:20:03.8237213Z # etl.keepa\_ingestor
2025-08-16T23:20:03.8237323Z 
2025-08-16T23:20:03.8237404Z <a id="etl.db"></a>
2025-08-16T23:20:03.8237509Z 
2025-08-16T23:20:03.8237569Z # etl.db
2025-08-16T23:20:03.8237660Z 
2025-08-16T23:20:03.8237763Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T23:20:03.8237947Z 
2025-08-16T23:20:03.8238040Z # etl.dialects.amazon\_reimbursements
2025-08-16T23:20:03.8238201Z 
2025-08-16T23:20:03.8238287Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T23:20:03.8238456Z 
2025-08-16T23:20:03.8238537Z # etl.dialects.amazon\_returns
2025-08-16T23:20:03.8238676Z 
2025-08-16T23:20:03.8238750Z <a id="etl.dialects"></a>
2025-08-16T23:20:03.8238880Z 
2025-08-16T23:20:03.8238943Z # etl.dialects
2025-08-16T23:20:03.8239040Z 
2025-08-16T23:20:03.8239109Z <a id="ingest"></a>
2025-08-16T23:20:03.8239211Z 
2025-08-16T23:20:03.8239275Z # ingest
2025-08-16T23:20:03.8239362Z 
2025-08-16T23:20:03.8239456Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T23:20:03.8239611Z 
2025-08-16T23:20:03.8239686Z # ingest.tests.test\_smoke
2025-08-16T23:20:03.8239818Z 
2025-08-16T23:20:03.8239890Z <a id="ingest.tests"></a>
2025-08-16T23:20:03.8240011Z 
2025-08-16T23:20:03.8240082Z # ingest.tests
2025-08-16T23:20:03.8240176Z 
2025-08-16T23:20:03.8240262Z <a id="ingest.upload_router"></a>
2025-08-16T23:20:03.8240405Z 
2025-08-16T23:20:03.8240481Z # ingest.upload\_router
2025-08-16T23:20:03.8240598Z 
2025-08-16T23:20:03.8240676Z <a id="ingest.email_watcher"></a>
2025-08-16T23:20:03.8240820Z 
2025-08-16T23:20:03.8240889Z # ingest.email\_watcher
2025-08-16T23:20:03.8240999Z 
2025-08-16T23:20:03.8241083Z <a id="ingest.email_watcher.main"></a>
2025-08-16T23:20:03.8241244Z 
2025-08-16T23:20:03.8241305Z #### main
2025-08-16T23:20:03.8241391Z 
2025-08-16T23:20:03.8241458Z ```python
2025-08-16T23:20:03.8241617Z def main() -> dict[str, str]
2025-08-16T23:20:03.8241812Z ```
2025-08-16T23:20:03.8241892Z 
2025-08-16T23:20:03.8242150Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T23:20:03.8242374Z 
2025-08-16T23:20:03.8242499Z Returns {"status": "success"} when processing completes.
2025-08-16T23:20:03.8242714Z 
2025-08-16T23:20:03.8242801Z <a id="ingest.ingest_router"></a>
2025-08-16T23:20:03.8242949Z 
2025-08-16T23:20:03.8243021Z # ingest.ingest\_router
2025-08-16T23:20:03.8243137Z 
2025-08-16T23:20:03.8243217Z <a id="logistics_etl"></a>
2025-08-16T23:20:03.8243448Z 
2025-08-16T23:20:03.8243514Z # logistics\_etl
2025-08-16T23:20:03.8243622Z 
2025-08-16T23:20:03.8243695Z Daily logistics ETL job.
2025-08-16T23:20:03.8243816Z 
2025-08-16T23:20:03.8243895Z <a id="logistics_etl.__main__"></a>
2025-08-16T23:20:03.8244052Z 
2025-08-16T23:20:03.8244128Z # logistics\_etl.\_\_main\_\_
2025-08-16T23:20:03.8244259Z 
2025-08-16T23:20:03.8244356Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T23:20:03.8244527Z 
2025-08-16T23:20:03.8244606Z # logistics\_etl.tests.conftest
2025-08-16T23:20:03.8244764Z 
2025-08-16T23:20:03.8244866Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T23:20:03.8245050Z 
2025-08-16T23:20:03.8245134Z # logistics\_etl.tests.test\_repository
2025-08-16T23:20:03.8245305Z 
2025-08-16T23:20:03.8245399Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T23:20:03.8245567Z 
2025-08-16T23:20:03.8245653Z # logistics\_etl.tests.test\_cron
2025-08-16T23:20:03.8245798Z 
2025-08-16T23:20:03.8245895Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T23:20:03.8246072Z 
2025-08-16T23:20:03.8246153Z # logistics\_etl.tests.test\_imports
2025-08-16T23:20:03.8246306Z 
2025-08-16T23:20:03.8246397Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T23:20:03.8246569Z 
2025-08-16T23:20:03.8246651Z # logistics\_etl.tests.test\_smoke
2025-08-16T23:20:03.8246801Z 
2025-08-16T23:20:03.8246899Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T23:20:03.8247065Z 
2025-08-16T23:20:03.8247146Z # logistics\_etl.tests.test\_client
2025-08-16T23:20:03.8247418Z 
2025-08-16T23:20:03.8247503Z <a id="logistics_etl.tests"></a>
2025-08-16T23:20:03.8247644Z 
2025-08-16T23:20:03.8247712Z # logistics\_etl.tests
2025-08-16T23:20:03.8247834Z 
2025-08-16T23:20:03.8247911Z <a id="logistics_etl.flow"></a>
2025-08-16T23:20:03.8248044Z 
2025-08-16T23:20:03.8248120Z # logistics\_etl.flow
2025-08-16T23:20:03.8248233Z 
2025-08-16T23:20:03.8248311Z <a id="logistics_etl.client"></a>
2025-08-16T23:20:03.8248456Z 
2025-08-16T23:20:03.8248527Z # logistics\_etl.client
2025-08-16T23:20:03.8248643Z 
2025-08-16T23:20:03.8248719Z <a id="logistics_etl.cron"></a>
2025-08-16T23:20:03.8248858Z 
2025-08-16T23:20:03.8248926Z # logistics\_etl.cron
2025-08-16T23:20:03.8249036Z 
2025-08-16T23:20:03.8249121Z <a id="logistics_etl.db"></a>
2025-08-16T23:20:03.8249255Z 
2025-08-16T23:20:03.8249321Z # logistics\_etl.db
2025-08-16T23:20:03.8249431Z 
2025-08-16T23:20:03.8249516Z <a id="logistics_etl.repository"></a>
2025-08-16T23:20:03.8249680Z 
2025-08-16T23:20:03.8249758Z # logistics\_etl.repository
2025-08-16T23:20:03.8249906Z 
2025-08-16T23:20:03.8249975Z <a id="alert_bot"></a>
2025-08-16T23:20:03.8250088Z 
2025-08-16T23:20:03.8250155Z # alert\_bot
2025-08-16T23:20:03.8250246Z 
2025-08-16T23:20:03.8250333Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T23:20:03.8250493Z 
2025-08-16T23:20:03.8250579Z # alert\_bot.tests.test\_smoke
2025-08-16T23:20:03.8250718Z 
2025-08-16T23:20:03.8250794Z <a id="alert_bot.tests"></a>
2025-08-16T23:20:03.8250929Z 
2025-08-16T23:20:03.8250994Z # alert\_bot.tests
2025-08-16T23:20:03.8251097Z 
2025-08-16T23:20:03.8251179Z <a id="alert_bot.alert_bot"></a>
2025-08-16T23:20:03.8251316Z 
2025-08-16T23:20:03.8251386Z # alert\_bot.alert\_bot
2025-08-16T23:20:03.8251499Z 
2025-08-16T23:20:03.8251580Z <a id="alert_bot.rules"></a>
2025-08-16T23:20:03.8251709Z 
2025-08-16T23:20:03.8251804Z # alert\_bot.rules
2025-08-16T23:20:03.8251912Z 
2025-08-16T23:20:03.8251976Z <a id="common"></a>
2025-08-16T23:20:03.8252077Z 
2025-08-16T23:20:03.8252136Z # common
2025-08-16T23:20:03.8252229Z 
2025-08-16T23:20:03.8252416Z <a id="common.dsn"></a>
2025-08-16T23:20:03.8252530Z 
2025-08-16T23:20:03.8252596Z # common.dsn
2025-08-16T23:20:03.8252686Z 
2025-08-16T23:20:03.8252765Z <a id="common.dsn.build_dsn"></a>
2025-08-16T23:20:03.8252911Z 
2025-08-16T23:20:03.8252971Z #### build\_dsn
2025-08-16T23:20:03.8253068Z 
2025-08-16T23:20:03.8253129Z ```python
2025-08-16T23:20:03.8253481Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:20:03.8253745Z ```
2025-08-16T23:20:03.8253830Z 
2025-08-16T23:20:03.8253949Z Return a Postgres DSN, validating required variables.
2025-08-16T23:20:03.8254149Z 
2025-08-16T23:20:03.8254342Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T23:20:03.8254793Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T23:20:03.8255200Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T23:20:03.8255500Z missing.
2025-08-16T23:20:03.8255608Z 
2025-08-16T23:20:03.8255701Z <a id="common.models_vendor"></a>
2025-08-16T23:20:03.8255851Z 
2025-08-16T23:20:03.8255923Z # common.models\_vendor
2025-08-16T23:20:03.8256038Z 
2025-08-16T23:20:03.8256128Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T23:20:03.8256293Z 
2025-08-16T23:20:03.8256357Z ## Vendor Objects
2025-08-16T23:20:03.8256466Z 
2025-08-16T23:20:03.8256526Z ```python
2025-08-16T23:20:03.8256673Z class Vendor(Base)
2025-08-16T23:20:03.8256837Z ```
2025-08-16T23:20:03.8256917Z 
2025-08-16T23:20:03.8256999Z Vendor of inventory items.
2025-08-16T23:20:03.8257127Z 
2025-08-16T23:20:03.8257226Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T23:20:03.8257403Z 
2025-08-16T23:20:03.8257485Z ## VendorPrice Objects
2025-08-16T23:20:03.8257621Z 
2025-08-16T23:20:03.8257681Z ```python
2025-08-16T23:20:03.8257841Z class VendorPrice(Base)
2025-08-16T23:20:03.8258010Z ```
2025-08-16T23:20:03.8258094Z 
2025-08-16T23:20:03.8258192Z Association table linking vendors to pricing.
2025-08-16T23:20:03.8258368Z 
2025-08-16T23:20:03.8258699Z <a id="common.db_url"></a>
2025-08-16T23:20:03.8258828Z 
2025-08-16T23:20:03.8258893Z # common.db\_url
2025-08-16T23:20:03.8259000Z 
2025-08-16T23:20:03.8259080Z <a id="common.db_url.build_url"></a>
2025-08-16T23:20:03.8259241Z 
2025-08-16T23:20:03.8259302Z #### build\_url
2025-08-16T23:20:03.8259406Z 
2025-08-16T23:20:03.8259466Z ```python
2025-08-16T23:20:03.8259638Z def build_url(async_: bool = True) -> str
2025-08-16T23:20:03.8259857Z ```
2025-08-16T23:20:03.8259936Z 
2025-08-16T23:20:03.8260038Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:20:03.8260208Z 
2025-08-16T23:20:03.8260284Z <a id="common.keepa"></a>
2025-08-16T23:20:03.8260417Z 
2025-08-16T23:20:03.8260483Z # common.keepa
2025-08-16T23:20:03.8260584Z 
2025-08-16T23:20:03.8260653Z <a id="common.llm"></a>
2025-08-16T23:20:03.8260776Z 
2025-08-16T23:20:03.8260839Z # common.llm
2025-08-16T23:20:03.8260932Z 
2025-08-16T23:20:03.8261016Z <a id="common.settings"></a>
2025-08-16T23:20:03.8261151Z 
2025-08-16T23:20:03.8261221Z # common.settings
2025-08-16T23:20:03.8261330Z 
2025-08-16T23:20:03.8261408Z <a id="common.db"></a>
2025-08-16T23:20:03.8261523Z 
2025-08-16T23:20:03.8261591Z # common.db
2025-08-16T23:20:03.8261691Z 
2025-08-16T23:20:03.8261780Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T23:20:03.8261947Z 
2025-08-16T23:20:03.8262035Z #### build\_sqlalchemy\_url
2025-08-16T23:20:03.8262166Z 
2025-08-16T23:20:03.8262225Z ```python
2025-08-16T23:20:03.8262394Z def build_sqlalchemy_url() -> str
2025-08-16T23:20:03.8262592Z ```
2025-08-16T23:20:03.8262676Z 
2025-08-16T23:20:03.8262767Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:20:03.8262932Z 
2025-08-16T23:20:03.8263019Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T23:20:03.8263186Z 
2025-08-16T23:20:03.8263257Z #### build\_asyncpg\_dsn
2025-08-16T23:20:03.8263498Z 
2025-08-16T23:20:03.8263567Z ```python
2025-08-16T23:20:03.8263727Z def build_asyncpg_dsn() -> str
2025-08-16T23:20:03.8263922Z ```
2025-08-16T23:20:03.8263999Z 
2025-08-16T23:20:03.8264128Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:20:03.8264623Z 
2025-08-16T23:20:03.8264772Z <a id="common.db.refresh_mvs"></a>
2025-08-16T23:20:03.8265041Z 
2025-08-16T23:20:03.8265163Z #### refresh\_mvs
2025-08-16T23:20:03.8265361Z 
2025-08-16T23:20:03.8265479Z ```python
2025-08-16T23:20:03.8265850Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:20:03.8266309Z ```
2025-08-16T23:20:03.8266453Z 
2025-08-16T23:20:03.8266687Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:20:03.8267048Z 
2025-08-16T23:20:03.8267175Z <a id="common.config"></a>
2025-08-16T23:20:03.8267395Z 
2025-08-16T23:20:03.8267465Z # common.config
2025-08-16T23:20:03.8267568Z 
2025-08-16T23:20:03.8267645Z <a id="common.base"></a>
2025-08-16T23:20:03.8267765Z 
2025-08-16T23:20:03.8267827Z # common.base
2025-08-16T23:20:03.8267924Z 
2025-08-16T23:20:03.8268008Z <a id="common.base.Base"></a>
2025-08-16T23:20:03.8268145Z 
2025-08-16T23:20:03.8268208Z ## Base Objects
2025-08-16T23:20:03.8268320Z 
2025-08-16T23:20:03.8268386Z ```python
2025-08-16T23:20:03.8268548Z class Base(DeclarativeBase)
2025-08-16T23:20:03.8268740Z ```
2025-08-16T23:20:03.8268818Z 
2025-08-16T23:20:03.8268906Z Base class for SQLAlchemy models.
2025-08-16T23:20:03.8269051Z 
2025-08-16T23:20:03.8269120Z <a id="repricer"></a>
2025-08-16T23:20:03.8269234Z 
2025-08-16T23:20:03.8269301Z # repricer
2025-08-16T23:20:03.8269389Z 
2025-08-16T23:20:03.8269474Z <a id="repricer.app.schemas"></a>
2025-08-16T23:20:03.8269629Z 
2025-08-16T23:20:03.8269703Z # repricer.app.schemas
2025-08-16T23:20:03.8269820Z 
2025-08-16T23:20:03.8269900Z <a id="repricer.app.deps"></a>
2025-08-16T23:20:03.8270046Z 
2025-08-16T23:20:03.8270117Z # repricer.app.deps
2025-08-16T23:20:03.8270226Z 
2025-08-16T23:20:03.8270344Z Placeholder module for Keepa / SP-API clients.
2025-08-16T23:20:03.8270527Z 
2025-08-16T23:20:03.8270606Z <a id="repricer.app.logic"></a>
2025-08-16T23:20:03.8270754Z 
2025-08-16T23:20:03.8270826Z # repricer.app.logic
2025-08-16T23:20:03.8271114Z 
2025-08-16T23:20:03.8271215Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T23:20:03.8271397Z 
2025-08-16T23:20:03.8271460Z #### MIN\_MARGIN
2025-08-16T23:20:03.8271559Z 
2025-08-16T23:20:03.8271626Z 15 % ROI
2025-08-16T23:20:03.8271710Z 
2025-08-16T23:20:03.8271811Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T23:20:03.8271994Z 
2025-08-16T23:20:03.8272060Z #### compute\_price
2025-08-16T23:20:03.8272163Z 
2025-08-16T23:20:03.8272226Z ```python
2025-08-16T23:20:03.8272474Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T23:20:03.8272773Z ```
2025-08-16T23:20:03.8272853Z 
2025-08-16T23:20:03.8272956Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T23:20:03.8273236Z Replace with real competitive logic later.
2025-08-16T23:20:03.8273563Z 
2025-08-16T23:20:03.8273645Z <a id="repricer.app.main"></a>
2025-08-16T23:20:03.8273792Z 
2025-08-16T23:20:03.8273862Z # repricer.app.main
2025-08-16T23:20:03.8273968Z 
2025-08-16T23:20:03.8274048Z <a id="repricer.app"></a>
2025-08-16T23:20:03.8274183Z 
2025-08-16T23:20:03.8274248Z # repricer.app
2025-08-16T23:20:03.8274346Z 
2025-08-16T23:20:03.8274440Z <a id="repricer.tests.test_imports"></a>
2025-08-16T23:20:03.8274606Z 
2025-08-16T23:20:03.8274686Z # repricer.tests.test\_imports
2025-08-16T23:20:03.8274827Z 
2025-08-16T23:20:03.8274913Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T23:20:03.8275071Z 
2025-08-16T23:20:03.8275148Z # repricer.tests.test\_smoke
2025-08-16T23:20:03.8275289Z 
2025-08-16T23:20:03.8275364Z <a id="repricer.tests"></a>
2025-08-16T23:20:03.8275498Z 
2025-08-16T23:20:03.8275613Z # repricer.tests
2025-08-16T23:20:03.8275715Z 
2025-08-16T23:20:03.8275785Z <a id="db"></a>
2025-08-16T23:20:03.8275881Z 
2025-08-16T23:20:03.8275939Z # db
2025-08-16T23:20:03.8276024Z 
2025-08-16T23:20:03.8276096Z <a id="db.utils.views"></a>
2025-08-16T23:20:03.8276222Z 
2025-08-16T23:20:03.8276285Z # db.utils.views
2025-08-16T23:20:03.8276391Z 
2025-08-16T23:20:03.8276488Z <a id="db.utils.views.replace_view"></a>
2025-08-16T23:20:03.8276773Z 
2025-08-16T23:20:03.8276843Z #### replace\_view
2025-08-16T23:20:03.8276947Z 
2025-08-16T23:20:03.8277006Z ```python
2025-08-16T23:20:03.8277198Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T23:20:03.8277436Z ```
2025-08-16T23:20:03.8277523Z 
2025-08-16T23:20:03.8277611Z Drop and recreate a SQL view atomically.
2025-08-16T23:20:03.8277773Z 
2025-08-16T23:20:03.8277846Z <a id="db.utils"></a>
2025-08-16T23:20:03.8277959Z 
2025-08-16T23:20:03.8278020Z # db.utils
2025-08-16T23:20:03.8278105Z 
2025-08-16T23:20:03.8278187Z <a id="price_importer"></a>
2025-08-16T23:20:03.8278315Z 
2025-08-16T23:20:03.8278383Z # price\_importer
2025-08-16T23:20:03.8278489Z 
2025-08-16T23:20:03.8278587Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T23:20:03.8278766Z 
2025-08-16T23:20:03.8278854Z # price\_importer.services\_common.dsn
2025-08-16T23:20:03.8279027Z 
2025-08-16T23:20:03.8279151Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T23:20:03.8279363Z 
2025-08-16T23:20:03.8279431Z #### build\_dsn
2025-08-16T23:20:03.8279528Z 
2025-08-16T23:20:03.8279588Z ```python
2025-08-16T23:20:03.8279760Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:20:03.8279972Z ```
2025-08-16T23:20:03.8280057Z 
2025-08-16T23:20:03.8280120Z Return safe DSN.
2025-08-16T23:20:03.8280220Z 
2025-08-16T23:20:03.8280568Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T23:20:03.8280769Z 
2025-08-16T23:20:03.8280895Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T23:20:03.8281100Z 
2025-08-16T23:20:03.8281215Z # price\_importer.services\_common.models\_vendor
2025-08-16T23:20:03.8281402Z 
2025-08-16T23:20:03.8281505Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T23:20:03.8281694Z 
2025-08-16T23:20:03.8281786Z # price\_importer.services\_common.db\_url
2025-08-16T23:20:03.8281953Z 
2025-08-16T23:20:03.8282090Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T23:20:03.8282426Z 
2025-08-16T23:20:03.8282495Z #### build\_url
2025-08-16T23:20:03.8282601Z 
2025-08-16T23:20:03.8282669Z ```python
2025-08-16T23:20:03.8282841Z def build_url(async_: bool = True) -> str
2025-08-16T23:20:03.8283065Z ```
2025-08-16T23:20:03.8283149Z 
2025-08-16T23:20:03.8283243Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:20:03.8283530Z 
2025-08-16T23:20:03.8283635Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T23:20:03.8283818Z 
2025-08-16T23:20:03.8283913Z # price\_importer.services\_common.keepa
2025-08-16T23:20:03.8284082Z 
2025-08-16T23:20:03.8284180Z <a id="price_importer.services_common.llm"></a>
2025-08-16T23:20:03.8284363Z 
2025-08-16T23:20:03.8284450Z # price\_importer.services\_common.llm
2025-08-16T23:20:03.8284613Z 
2025-08-16T23:20:03.8284728Z <a id="price_importer.services_common.settings"></a>
2025-08-16T23:20:03.8284933Z 
2025-08-16T23:20:03.8285029Z # price\_importer.services\_common.settings
2025-08-16T23:20:03.8285202Z 
2025-08-16T23:20:03.8285307Z <a id="price_importer.services_common.db"></a>
2025-08-16T23:20:03.8285494Z 
2025-08-16T23:20:03.8285580Z # price\_importer.services\_common.db
2025-08-16T23:20:03.8285743Z 
2025-08-16T23:20:03.8285897Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T23:20:03.8286136Z 
2025-08-16T23:20:03.8286209Z #### build\_sqlalchemy\_url
2025-08-16T23:20:03.8286344Z 
2025-08-16T23:20:03.8286404Z ```python
2025-08-16T23:20:03.8286576Z def build_sqlalchemy_url() -> str
2025-08-16T23:20:03.8286774Z ```
2025-08-16T23:20:03.8286854Z 
2025-08-16T23:20:03.8286952Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:20:03.8287123Z 
2025-08-16T23:20:03.8287263Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T23:20:03.8287493Z 
2025-08-16T23:20:03.8287566Z #### build\_asyncpg\_dsn
2025-08-16T23:20:03.8287691Z 
2025-08-16T23:20:03.8287757Z ```python
2025-08-16T23:20:03.8287918Z def build_asyncpg_dsn() -> str
2025-08-16T23:20:03.8288114Z ```
2025-08-16T23:20:03.8288194Z 
2025-08-16T23:20:03.8288324Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:20:03.8288657Z 
2025-08-16T23:20:03.8288782Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T23:20:03.8288986Z 
2025-08-16T23:20:03.8289048Z #### refresh\_mvs
2025-08-16T23:20:03.8289161Z 
2025-08-16T23:20:03.8289220Z ```python
2025-08-16T23:20:03.8289414Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:20:03.8289664Z ```
2025-08-16T23:20:03.8289744Z 
2025-08-16T23:20:03.8289883Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:20:03.8290095Z 
2025-08-16T23:20:03.8290189Z <a id="price_importer.services_common"></a>
2025-08-16T23:20:03.8290364Z 
2025-08-16T23:20:03.8290451Z # price\_importer.services\_common
2025-08-16T23:20:03.8290610Z 
2025-08-16T23:20:03.8290725Z <a id="price_importer.services_common.base"></a>
2025-08-16T23:20:03.8290913Z 
2025-08-16T23:20:03.8291001Z # price\_importer.services\_common.base
2025-08-16T23:20:03.8291164Z 
2025-08-16T23:20:03.8291264Z <a id="price_importer.normaliser"></a>
2025-08-16T23:20:03.8291432Z 
2025-08-16T23:20:03.8291513Z # price\_importer.normaliser
2025-08-16T23:20:03.8291657Z 
2025-08-16T23:20:03.8291760Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T23:20:03.8291944Z 
2025-08-16T23:20:03.8292037Z # price\_importer.common.models\_vendor
2025-08-16T23:20:03.8292198Z 
2025-08-16T23:20:03.8292288Z <a id="price_importer.common.db_url"></a>
2025-08-16T23:20:03.8292456Z 
2025-08-16T23:20:03.8292546Z # price\_importer.common.db\_url
2025-08-16T23:20:03.8292690Z 
2025-08-16T23:20:03.8292793Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T23:20:03.8292982Z 
2025-08-16T23:20:03.8293045Z #### make\_dsn
2025-08-16T23:20:03.8293142Z 
2025-08-16T23:20:03.8293209Z ```python
2025-08-16T23:20:03.8293608Z def make_dsn(async_: bool = False) -> str
2025-08-16T23:20:03.8293840Z ```
2025-08-16T23:20:03.8293921Z 
2025-08-16T23:20:03.8294038Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T23:20:03.8294372Z 
2025-08-16T23:20:03.8294483Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T23:20:03.8294670Z 
2025-08-16T23:20:03.8294733Z #### build\_url
2025-08-16T23:20:03.8294838Z 
2025-08-16T23:20:03.8294897Z ```python
2025-08-16T23:20:03.8295077Z def build_url(async_: bool = False) -> str
2025-08-16T23:20:03.8295293Z ```
2025-08-16T23:20:03.8295371Z 
2025-08-16T23:20:03.8295499Z Return Postgres DSN built from environment variables.
2025-08-16T23:20:03.8295699Z 
2025-08-16T23:20:03.8295783Z <a id="price_importer.common"></a>
2025-08-16T23:20:03.8295942Z 
2025-08-16T23:20:03.8296017Z # price\_importer.common
2025-08-16T23:20:03.8296145Z 
2025-08-16T23:20:03.8296231Z <a id="price_importer.common.base"></a>
2025-08-16T23:20:03.8296400Z 
2025-08-16T23:20:03.8296481Z # price\_importer.common.base
2025-08-16T23:20:03.8296623Z 
2025-08-16T23:20:03.8296723Z <a id="price_importer.tests.conftest"></a>
2025-08-16T23:20:03.8296893Z 
2025-08-16T23:20:03.8296978Z # price\_importer.tests.conftest
2025-08-16T23:20:03.8297135Z 
2025-08-16T23:20:03.8297237Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T23:20:03.8297413Z 
2025-08-16T23:20:03.8297500Z # price\_importer.tests.test\_reader
2025-08-16T23:20:03.8297664Z 
2025-08-16T23:20:03.8297761Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T23:20:03.8297936Z 
2025-08-16T23:20:03.8298028Z # price\_importer.tests.test\_imports
2025-08-16T23:20:03.8298185Z 
2025-08-16T23:20:03.8298277Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T23:20:03.8298449Z 
2025-08-16T23:20:03.8298532Z # price\_importer.tests.test\_smoke
2025-08-16T23:20:03.8298684Z 
2025-08-16T23:20:03.8298785Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T23:20:03.8298973Z 
2025-08-16T23:20:03.8299062Z # price\_importer.tests.test\_normaliser
2025-08-16T23:20:03.8299232Z 
2025-08-16T23:20:03.8299318Z <a id="price_importer.tests"></a>
2025-08-16T23:20:03.8299465Z 
2025-08-16T23:20:03.8299537Z # price\_importer.tests
2025-08-16T23:20:03.8299660Z 
2025-08-16T23:20:03.8299747Z <a id="price_importer.reader"></a>
2025-08-16T23:20:03.8300063Z 
2025-08-16T23:20:03.8300139Z # price\_importer.reader
2025-08-16T23:20:03.8300270Z 
2025-08-16T23:20:03.8300369Z <a id="price_importer.reader.load_file"></a>
2025-08-16T23:20:03.8300542Z 
2025-08-16T23:20:03.8300609Z #### load\_file
2025-08-16T23:20:03.8300708Z 
2025-08-16T23:20:03.8300767Z ```python
2025-08-16T23:20:03.8300943Z def load_file(path: str | Path) -> Any
2025-08-16T23:20:03.8301156Z ```
2025-08-16T23:20:03.8301243Z 
2025-08-16T23:20:03.8301329Z Return DataFrame from CSV or Excel file.
2025-08-16T23:20:03.8301492Z 
2025-08-16T23:20:03.8301596Z Raises RuntimeError if pandas is unavailable.
2025-08-16T23:20:03.8301781Z 
2025-08-16T23:20:03.8301870Z <a id="price_importer.repository"></a>
2025-08-16T23:20:03.8302029Z 
2025-08-16T23:20:03.8302117Z # price\_importer.repository
2025-08-16T23:20:03.8302255Z 
2025-08-16T23:20:03.8302337Z <a id="price_importer.import"></a>
2025-08-16T23:20:03.8302491Z 
2025-08-16T23:20:03.8302570Z # price\_importer.import
2025-08-16T23:20:03.8302697Z 
2025-08-16T23:20:03.8302766Z <a id="fees_h10"></a>
2025-08-16T23:20:03.8302886Z 
2025-08-16T23:20:03.8302949Z # fees\_h10
2025-08-16T23:20:03.8303040Z 
2025-08-16T23:20:03.8303122Z <a id="fees_h10.worker"></a>
2025-08-16T23:20:03.8303254Z 
2025-08-16T23:20:03.8303435Z # fees\_h10.worker
2025-08-16T23:20:03.8303547Z 
2025-08-16T23:20:03.8303632Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T23:20:03.8303784Z 
2025-08-16T23:20:03.8303862Z # fees\_h10.tests.test\_smoke
2025-08-16T23:20:03.8304002Z 
2025-08-16T23:20:03.8304074Z <a id="fees_h10.tests"></a>
2025-08-16T23:20:03.8304203Z 
2025-08-16T23:20:03.8304272Z # fees\_h10.tests
2025-08-16T23:20:03.8304374Z 
2025-08-16T23:20:03.8304445Z <a id="fees_h10.client"></a>
2025-08-16T23:20:03.8304576Z 
2025-08-16T23:20:03.8304643Z # fees\_h10.client
2025-08-16T23:20:03.8304744Z 
2025-08-16T23:20:03.8304825Z <a id="fees_h10.repository"></a>
2025-08-16T23:20:03.8304971Z 
2025-08-16T23:20:03.8305042Z # fees\_h10.repository
2025-08-16T23:20:03.8305283Z 
2025-08-16T23:20:03.8305356Z <a id="emailer"></a>
2025-08-16T23:20:03.8305467Z 
2025-08-16T23:20:03.8305526Z # emailer
2025-08-16T23:20:03.8305613Z 
2025-08-16T23:20:03.8305718Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T23:20:03.8305894Z 
2025-08-16T23:20:03.8305981Z # emailer.tests.test\_import\_emailer
2025-08-16T23:20:03.8306143Z 
2025-08-16T23:20:03.8306226Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T23:20:03.8306381Z 
2025-08-16T23:20:03.8306466Z # emailer.tests.test\_smoke
2025-08-16T23:20:03.8306598Z 
2025-08-16T23:20:03.8306674Z <a id="emailer.tests"></a>
2025-08-16T23:20:03.8306803Z 
2025-08-16T23:20:03.8306874Z # emailer.tests
2025-08-16T23:20:03.8306975Z 
2025-08-16T23:20:03.8307056Z <a id="emailer.generate_body"></a>
2025-08-16T23:20:03.8307212Z 
2025-08-16T23:20:03.8307286Z # emailer.generate\_body
2025-08-16T23:20:03.8307409Z 
2025-08-16T23:20:03.8307478Z <a id="llm_server"></a>
2025-08-16T23:20:03.8307604Z 
2025-08-16T23:20:03.8307670Z # llm\_server
2025-08-16T23:20:03.8307769Z 
2025-08-16T23:20:03.8307852Z <a id="llm_server.app"></a>
2025-08-16T23:20:03.8307979Z 
2025-08-16T23:20:03.8308045Z # llm\_server.app
2025-08-16T23:20:03.8308155Z 
