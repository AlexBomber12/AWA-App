2025-08-17T19:57:16.9342741Z ##[group]Run pydoc-markdown
2025-08-17T19:57:16.9343040Z [36;1mpydoc-markdown[0m
2025-08-17T19:57:16.9386572Z shell: /usr/bin/bash -e {0}
2025-08-17T19:57:16.9386820Z env:
2025-08-17T19:57:16.9387058Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:57:16.9387461Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T19:57:16.9387846Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:57:16.9388176Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:57:16.9388512Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:57:16.9388843Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T19:57:16.9389128Z ##[endgroup]
2025-08-17T19:57:17.2540166Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T19:57:17.2541008Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T19:57:17.2541474Z In "pydoc-markdown.yml"
2025-08-17T19:57:17.2541923Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T19:57:17.2542569Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T19:57:17.2543322Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T19:57:17.2543846Z 
2025-08-17T19:57:17.4906323Z <a id="__init__"></a>
2025-08-17T19:57:17.4906657Z 
2025-08-17T19:57:17.4906822Z # \_\_init\_\_
2025-08-17T19:57:17.4907062Z 
2025-08-17T19:57:17.4907220Z <a id="api"></a>
2025-08-17T19:57:17.4907474Z 
2025-08-17T19:57:17.4907623Z # api
2025-08-17T19:57:17.4907825Z 
2025-08-17T19:57:17.4907929Z <a id="api.tests.test_llm"></a>
2025-08-17T19:57:17.4908172Z 
2025-08-17T19:57:17.4908300Z # api.tests.test\_llm
2025-08-17T19:57:17.4908505Z 
2025-08-17T19:57:17.4908919Z <a id="api.tests.test_imports"></a>
2025-08-17T19:57:17.4909229Z 
2025-08-17T19:57:17.4909377Z # api.tests.test\_imports
2025-08-17T19:57:17.4909615Z 
2025-08-17T19:57:17.4909783Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T19:57:17.4910398Z 
2025-08-17T19:57:17.4910543Z # api.tests.test\_entrypoint
2025-08-17T19:57:17.4910825Z 
2025-08-17T19:57:17.4910979Z <a id="api.tests.test_health"></a>
2025-08-17T19:57:17.4911259Z 
2025-08-17T19:57:17.4911416Z # api.tests.test\_health
2025-08-17T19:57:17.4911651Z 
2025-08-17T19:57:17.4911803Z <a id="api.migrations.env"></a>
2025-08-17T19:57:17.4912062Z 
2025-08-17T19:57:17.4912191Z # api.migrations.env
2025-08-17T19:57:17.4912399Z 
2025-08-17T19:57:17.4912603Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T19:57:17.4912951Z 
2025-08-17T19:57:17.4913135Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T19:57:17.4913455Z 
2025-08-17T19:57:17.4913636Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T19:57:17.4913964Z 
2025-08-17T19:57:17.4914237Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T19:57:17.4914728Z 
2025-08-17T19:57:17.4914988Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T19:57:17.4915399Z 
2025-08-17T19:57:17.4915644Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T19:57:17.4916029Z 
2025-08-17T19:57:17.4916234Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T19:57:17.4916576Z 
2025-08-17T19:57:17.4916759Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T19:57:17.4917075Z 
2025-08-17T19:57:17.4917272Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T19:57:17.4917616Z 
2025-08-17T19:57:17.4917788Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T19:57:17.4918098Z 
2025-08-17T19:57:17.4918310Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T19:57:17.4918660Z 
2025-08-17T19:57:17.4918837Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T19:57:17.4919173Z 
2025-08-17T19:57:17.4919384Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T19:57:17.4919725Z 
2025-08-17T19:57:17.4919918Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T19:57:17.4920274Z 
2025-08-17T19:57:17.4920495Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T19:57:17.4921198Z 
2025-08-17T19:57:17.4921402Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T19:57:17.4921732Z 
2025-08-17T19:57:17.4921968Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-17T19:57:17.4922356Z 
2025-08-17T19:57:17.4922555Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-17T19:57:17.4922901Z 
2025-08-17T19:57:17.4923106Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T19:57:17.4923467Z 
2025-08-17T19:57:17.4923646Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T19:57:17.4923973Z 
2025-08-17T19:57:17.4924100Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T19:57:17.4924295Z 
2025-08-17T19:57:17.4924611Z # api.migrations.versions.0001\_baseline
2025-08-17T19:57:17.4924799Z 
2025-08-17T19:57:17.4924890Z <a id="api.migrations.versions"></a>
2025-08-17T19:57:17.4925054Z 
2025-08-17T19:57:17.4925140Z # api.migrations.versions
2025-08-17T19:57:17.4925283Z 
2025-08-17T19:57:17.4925369Z <a id="api.migrations"></a>
2025-08-17T19:57:17.4925503Z 
2025-08-17T19:57:17.4925577Z # api.migrations
2025-08-17T19:57:17.4925684Z 
2025-08-17T19:57:17.4925753Z <a id="api.db"></a>
2025-08-17T19:57:17.4925867Z 
2025-08-17T19:57:17.4925930Z # api.db
2025-08-17T19:57:17.4926018Z 
2025-08-17T19:57:17.4926098Z <a id="api.routes.stats"></a>
2025-08-17T19:57:17.4926248Z 
2025-08-17T19:57:17.4926318Z # api.routes.stats
2025-08-17T19:57:17.4926429Z 
2025-08-17T19:57:17.4926522Z <a id="api.routes.stats.kpi"></a>
2025-08-17T19:57:17.4926687Z 
2025-08-17T19:57:17.4926751Z #### kpi
2025-08-17T19:57:17.4926841Z 
2025-08-17T19:57:17.4926913Z ```python
2025-08-17T19:57:17.4927085Z @router.get("/stats/kpi")
2025-08-17T19:57:17.4927319Z def kpi() -> List[Dict[str, int]]
2025-08-17T19:57:17.4927554Z ```
2025-08-17T19:57:17.4927644Z 
2025-08-17T19:57:17.4927723Z Return KPI metrics (mock).
2025-08-17T19:57:17.4927862Z 
2025-08-17T19:57:17.4927969Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T19:57:17.4928309Z 
2025-08-17T19:57:17.4928385Z #### roi\_by\_vendor
2025-08-17T19:57:17.4928497Z 
2025-08-17T19:57:17.4928565Z ```python
2025-08-17T19:57:17.4928732Z @router.get("/stats/roi_by_vendor")
2025-08-17T19:57:17.4928978Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T19:57:17.4929203Z ```
2025-08-17T19:57:17.4929290Z 
2025-08-17T19:57:17.4929369Z Return ROI percent by vendor.
2025-08-17T19:57:17.4929511Z 
2025-08-17T19:57:17.4929606Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T19:57:17.4929772Z 
2025-08-17T19:57:17.4929836Z #### roi\_trend
2025-08-17T19:57:17.4929935Z 
2025-08-17T19:57:17.4930005Z ```python
2025-08-17T19:57:17.4930166Z @router.get("/stats/roi_trend")
2025-08-17T19:57:17.4930405Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T19:57:17.4930632Z ```
2025-08-17T19:57:17.4930721Z 
2025-08-17T19:57:17.4930795Z Return 30-day ROI trend.
2025-08-17T19:57:17.4930942Z 
2025-08-17T19:57:17.4931023Z <a id="api.routes.roi"></a>
2025-08-17T19:57:17.4931205Z 
2025-08-17T19:57:17.4931273Z # api.routes.roi
2025-08-17T19:57:17.4931389Z 
2025-08-17T19:57:17.4931471Z <a id="api.routes.health"></a>
2025-08-17T19:57:17.4931608Z 
2025-08-17T19:57:17.4931687Z # api.routes.health
2025-08-17T19:57:17.4931795Z 
2025-08-17T19:57:17.4931887Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T19:57:17.4932058Z 
2025-08-17T19:57:17.4932120Z #### MAX\_SKEW
2025-08-17T19:57:17.4932216Z 
2025-08-17T19:57:17.4932277Z seconds
2025-08-17T19:57:17.4932364Z 
2025-08-17T19:57:17.4932453Z <a id="api.routes.health.health"></a>
2025-08-17T19:57:17.4932613Z 
2025-08-17T19:57:17.4932682Z #### health
2025-08-17T19:57:17.4932773Z 
2025-08-17T19:57:17.4932837Z ```python
2025-08-17T19:57:17.4933030Z @router.get("/health", include_in_schema=False)
2025-08-17T19:57:17.4933398Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T19:57:17.4933736Z ```
2025-08-17T19:57:17.4933818Z 
2025-08-17T19:57:17.4933930Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T19:57:17.4934135Z 
2025-08-17T19:57:17.4934540Z <a id="api.routes.repository"></a>
2025-08-17T19:57:17.4934801Z 
2025-08-17T19:57:17.4934887Z # api.routes.repository
2025-08-17T19:57:17.4935016Z 
2025-08-17T19:57:17.4935089Z <a id="api.routes"></a>
2025-08-17T19:57:17.4935205Z 
2025-08-17T19:57:17.4935275Z # api.routes
2025-08-17T19:57:17.4935372Z 
2025-08-17T19:57:17.4935449Z <a id="api.models.fee"></a>
2025-08-17T19:57:17.4935587Z 
2025-08-17T19:57:17.4935654Z # api.models.fee
2025-08-17T19:57:17.4935761Z 
2025-08-17T19:57:17.4935838Z <a id="api.models"></a>
2025-08-17T19:57:17.4935949Z 
2025-08-17T19:57:17.4936012Z # api.models
2025-08-17T19:57:17.4936103Z 
2025-08-17T19:57:17.4936188Z <a id="api.roi_repository"></a>
2025-08-17T19:57:17.4936327Z 
2025-08-17T19:57:17.4936397Z # api.roi\_repository
2025-08-17T19:57:17.4936516Z 
2025-08-17T19:57:17.4936584Z <a id="api.main"></a>
2025-08-17T19:57:17.4936694Z 
2025-08-17T19:57:17.4936756Z # api.main
2025-08-17T19:57:17.4936852Z 
2025-08-17T19:57:17.4936933Z <a id="api.main.ready"></a>
2025-08-17T19:57:17.4937071Z 
2025-08-17T19:57:17.4937137Z #### ready
2025-08-17T19:57:17.4937226Z 
2025-08-17T19:57:17.4937289Z ```python
2025-08-17T19:57:17.4937551Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T19:57:17.4938008Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T19:57:17.4938360Z                                                                       str]
2025-08-17T19:57:17.4938594Z ```
2025-08-17T19:57:17.4938676Z 
2025-08-17T19:57:17.4938771Z Return 200 only when migrations are at head.
2025-08-17T19:57:17.4938950Z 
2025-08-17T19:57:17.4939021Z <a id="api.config"></a>
2025-08-17T19:57:17.4939138Z 
2025-08-17T19:57:17.4939209Z # api.config
2025-08-17T19:57:17.4939303Z 
2025-08-17T19:57:17.4939369Z <a id="etl"></a>
2025-08-17T19:57:17.4939476Z 
2025-08-17T19:57:17.4939538Z # etl
2025-08-17T19:57:17.4939622Z 
2025-08-17T19:57:17.4939701Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T19:57:17.4939983Z 
2025-08-17T19:57:17.4940066Z # etl.fba\_fee\_ingestor
2025-08-17T19:57:17.4940189Z 
2025-08-17T19:57:17.4940275Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T19:57:17.4940416Z 
2025-08-17T19:57:17.4940488Z # etl.sp\_fees\_ingestor
2025-08-17T19:57:17.4940614Z 
2025-08-17T19:57:17.4940691Z <a id="etl.keepa_ingestor"></a>
2025-08-17T19:57:17.4940830Z 
2025-08-17T19:57:17.4940898Z # etl.keepa\_ingestor
2025-08-17T19:57:17.4941019Z 
2025-08-17T19:57:17.4941086Z <a id="etl.db"></a>
2025-08-17T19:57:17.4941191Z 
2025-08-17T19:57:17.4941259Z # etl.db
2025-08-17T19:57:17.4941347Z 
2025-08-17T19:57:17.4941430Z <a id="etl.dialects.schemas"></a>
2025-08-17T19:57:17.4941575Z 
2025-08-17T19:57:17.4941655Z # etl.dialects.schemas
2025-08-17T19:57:17.4941772Z 
2025-08-17T19:57:17.4941877Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T19:57:17.4942067Z 
2025-08-17T19:57:17.4942156Z # etl.dialects.amazon\_reimbursements
2025-08-17T19:57:17.4942316Z 
2025-08-17T19:57:17.4942409Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T19:57:17.4942584Z 
2025-08-17T19:57:17.4942666Z # etl.dialects.amazon\_returns
2025-08-17T19:57:17.4942806Z 
2025-08-17T19:57:17.4942884Z <a id="etl.dialects"></a>
2025-08-17T19:57:17.4943007Z 
2025-08-17T19:57:17.4943071Z # etl.dialects
2025-08-17T19:57:17.4943175Z 
2025-08-17T19:57:17.4943241Z <a id="ingest"></a>
2025-08-17T19:57:17.4943347Z 
2025-08-17T19:57:17.4943407Z # ingest
2025-08-17T19:57:17.4943498Z 
2025-08-17T19:57:17.4943578Z <a id="ingest.maintenance"></a>
2025-08-17T19:57:17.4943718Z 
2025-08-17T19:57:17.4943795Z # ingest.maintenance
2025-08-17T19:57:17.4943907Z 
2025-08-17T19:57:17.4943984Z <a id="ingest.copy_loader"></a>
2025-08-17T19:57:17.4944127Z 
2025-08-17T19:57:17.4944197Z # ingest.copy\_loader
2025-08-17T19:57:17.4944312Z 
2025-08-17T19:57:17.4944611Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T19:57:17.4944806Z 
2025-08-17T19:57:17.4944879Z #### copy\_df\_via\_temp
2025-08-17T19:57:17.4944999Z 
2025-08-17T19:57:17.4945068Z ```python
2025-08-17T19:57:17.4945241Z def copy_df_via_temp(engine: Engine,
2025-08-17T19:57:17.4945614Z                      df: pd.DataFrame,
2025-08-17T19:57:17.4945840Z                      target_table: str,
2025-08-17T19:57:17.4946057Z                      *,
2025-08-17T19:57:17.4946262Z                      target_schema: Optional[str] = None,
2025-08-17T19:57:17.4946527Z                      columns: Sequence[str],
2025-08-17T19:57:17.4946792Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T19:57:17.4947076Z                      analyze_after: bool = False,
2025-08-17T19:57:17.4947340Z                      connection: Any | None = None) -> int
2025-08-17T19:57:17.4947572Z ```
2025-08-17T19:57:17.4947655Z 
2025-08-17T19:57:17.4947816Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T19:57:17.4948047Z 
2025-08-17T19:57:17.4948131Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T19:57:17.4948295Z 
2025-08-17T19:57:17.4948373Z # ingest.tests.test\_smoke
2025-08-17T19:57:17.4948505Z 
2025-08-17T19:57:17.4948592Z <a id="ingest.tests"></a>
2025-08-17T19:57:17.4948713Z 
2025-08-17T19:57:17.4948779Z # ingest.tests
2025-08-17T19:57:17.4948879Z 
2025-08-17T19:57:17.4948967Z <a id="ingest.upload_router"></a>
2025-08-17T19:57:17.4949113Z 
2025-08-17T19:57:17.4949186Z # ingest.upload\_router
2025-08-17T19:57:17.4949311Z 
2025-08-17T19:57:17.4949390Z <a id="ingest.email_watcher"></a>
2025-08-17T19:57:17.4949536Z 
2025-08-17T19:57:17.4949611Z # ingest.email\_watcher
2025-08-17T19:57:17.4949724Z 
2025-08-17T19:57:17.4949810Z <a id="ingest.email_watcher.main"></a>
2025-08-17T19:57:17.4949967Z 
2025-08-17T19:57:17.4950034Z #### main
2025-08-17T19:57:17.4950123Z 
2025-08-17T19:57:17.4950186Z ```python
2025-08-17T19:57:17.4950356Z def main() -> dict[str, str]
2025-08-17T19:57:17.4950548Z ```
2025-08-17T19:57:17.4950637Z 
2025-08-17T19:57:17.4950775Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T19:57:17.4950995Z 
2025-08-17T19:57:17.4951128Z Returns {"status": "success"} when processing completes.
2025-08-17T19:57:17.4951456Z 
2025-08-17T19:57:17.4951532Z <a id="ingest.tasks"></a>
2025-08-17T19:57:17.4951662Z 
2025-08-17T19:57:17.4951727Z # ingest.tasks
2025-08-17T19:57:17.4951828Z 
2025-08-17T19:57:17.4951923Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T19:57:17.4952104Z 
2025-08-17T19:57:17.4952174Z #### task\_import\_file
2025-08-17T19:57:17.4952288Z 
2025-08-17T19:57:17.4952354Z ```python
2025-08-17T19:57:17.4952557Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T19:57:17.4952836Z def task_import_file(self,
2025-08-17T19:57:17.4953030Z                      uri: str,
2025-08-17T19:57:17.4953247Z                      report_type: Optional[str] = None,
2025-08-17T19:57:17.4953511Z                      force: bool = False) -> Dict[str, Any]
2025-08-17T19:57:17.4953749Z ```
2025-08-17T19:57:17.4953829Z 
2025-08-17T19:57:17.4953957Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T19:57:17.4954169Z 
2025-08-17T19:57:17.4954254Z <a id="ingest.celery_app"></a>
2025-08-17T19:57:17.4954566Z 
2025-08-17T19:57:17.4954647Z # ingest.celery\_app
2025-08-17T19:57:17.4954764Z 
2025-08-17T19:57:17.4954845Z <a id="ingest.ingest_router"></a>
2025-08-17T19:57:17.4954995Z 
2025-08-17T19:57:17.4955068Z # ingest.ingest\_router
2025-08-17T19:57:17.4955184Z 
2025-08-17T19:57:17.4955259Z <a id="logistics_etl"></a>
2025-08-17T19:57:17.4955388Z 
2025-08-17T19:57:17.4955452Z # logistics\_etl
2025-08-17T19:57:17.4955554Z 
2025-08-17T19:57:17.4955638Z Daily logistics ETL job.
2025-08-17T19:57:17.4955759Z 
2025-08-17T19:57:17.4955837Z <a id="logistics_etl.__main__"></a>
2025-08-17T19:57:17.4955996Z 
2025-08-17T19:57:17.4956072Z # logistics\_etl.\_\_main\_\_
2025-08-17T19:57:17.4956207Z 
2025-08-17T19:57:17.4956283Z <a id="logistics_etl.dsn"></a>
2025-08-17T19:57:17.4956423Z 
2025-08-17T19:57:17.4956490Z # logistics\_etl.dsn
2025-08-17T19:57:17.4956604Z 
2025-08-17T19:57:17.4956724Z Local DSN builder to avoid cross-service dependency.
2025-08-17T19:57:17.4956928Z 
2025-08-17T19:57:17.4957142Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T19:57:17.4957311Z 
2025-08-17T19:57:17.4957373Z #### build\_dsn
2025-08-17T19:57:17.4957473Z 
2025-08-17T19:57:17.4957539Z ```python
2025-08-17T19:57:17.4957714Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:57:17.4957931Z ```
2025-08-17T19:57:17.4958016Z 
2025-08-17T19:57:17.4958149Z Return a Postgres DSN assembled from environment variables.
2025-08-17T19:57:17.4958365Z 
2025-08-17T19:57:17.4958514Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T19:57:17.4958895Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T19:57:17.4959233Z error when any required variable is missing.
2025-08-17T19:57:17.4959405Z 
2025-08-17T19:57:17.4959498Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T19:57:17.4959674Z 
2025-08-17T19:57:17.4959756Z # logistics\_etl.tests.conftest
2025-08-17T19:57:17.4959897Z 
2025-08-17T19:57:17.4960005Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T19:57:17.4960197Z 
2025-08-17T19:57:17.4960284Z # logistics\_etl.tests.test\_repository
2025-08-17T19:57:17.4960455Z 
2025-08-17T19:57:17.4960544Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T19:57:17.4960708Z 
2025-08-17T19:57:17.4960790Z # logistics\_etl.tests.test\_cron
2025-08-17T19:57:17.4960954Z 
2025-08-17T19:57:17.4961057Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T19:57:17.4961233Z 
2025-08-17T19:57:17.4961320Z # logistics\_etl.tests.test\_imports
2025-08-17T19:57:17.4961478Z 
2025-08-17T19:57:17.4961583Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T19:57:17.4961755Z 
2025-08-17T19:57:17.4961840Z # logistics\_etl.tests.test\_smoke
2025-08-17T19:57:17.4961998Z 
2025-08-17T19:57:17.4962093Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T19:57:17.4962262Z 
2025-08-17T19:57:17.4962351Z # logistics\_etl.tests.test\_client
2025-08-17T19:57:17.4962502Z 
2025-08-17T19:57:17.4962585Z <a id="logistics_etl.tests"></a>
2025-08-17T19:57:17.4962843Z 
2025-08-17T19:57:17.4962930Z # logistics\_etl.tests
2025-08-17T19:57:17.4963046Z 
2025-08-17T19:57:17.4963124Z <a id="logistics_etl.flow"></a>
2025-08-17T19:57:17.4963267Z 
2025-08-17T19:57:17.4963336Z # logistics\_etl.flow
2025-08-17T19:57:17.4963449Z 
2025-08-17T19:57:17.4963536Z <a id="logistics_etl.client"></a>
2025-08-17T19:57:17.4963680Z 
2025-08-17T19:57:17.4963752Z # logistics\_etl.client
2025-08-17T19:57:17.4963870Z 
2025-08-17T19:57:17.4963950Z <a id="logistics_etl.cron"></a>
2025-08-17T19:57:17.4964086Z 
2025-08-17T19:57:17.4964155Z # logistics\_etl.cron
2025-08-17T19:57:17.4964272Z 
2025-08-17T19:57:17.4964500Z <a id="logistics_etl.db"></a>
2025-08-17T19:57:17.4964739Z 
2025-08-17T19:57:17.4964810Z # logistics\_etl.db
2025-08-17T19:57:17.4964923Z 
2025-08-17T19:57:17.4965011Z <a id="logistics_etl.repository"></a>
2025-08-17T19:57:17.4965168Z 
2025-08-17T19:57:17.4965253Z # logistics\_etl.repository
2025-08-17T19:57:17.4965384Z 
2025-08-17T19:57:17.4965451Z <a id="alert_bot"></a>
2025-08-17T19:57:17.4965574Z 
2025-08-17T19:57:17.4965643Z # alert\_bot
2025-08-17T19:57:17.4965735Z 
2025-08-17T19:57:17.4965818Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T19:57:17.4965984Z 
2025-08-17T19:57:17.4966062Z # alert\_bot.tests.test\_smoke
2025-08-17T19:57:17.4966198Z 
2025-08-17T19:57:17.4966278Z <a id="alert_bot.tests"></a>
2025-08-17T19:57:17.4966409Z 
2025-08-17T19:57:17.4966478Z # alert\_bot.tests
2025-08-17T19:57:17.4966588Z 
2025-08-17T19:57:17.4966665Z <a id="alert_bot.alert_bot"></a>
2025-08-17T19:57:17.4966806Z 
2025-08-17T19:57:17.4966878Z # alert\_bot.alert\_bot
2025-08-17T19:57:17.4966999Z 
2025-08-17T19:57:17.4967072Z <a id="alert_bot.rules"></a>
2025-08-17T19:57:17.4967201Z 
2025-08-17T19:57:17.4967276Z # alert\_bot.rules
2025-08-17T19:57:17.4967384Z 
2025-08-17T19:57:17.4967454Z <a id="common"></a>
2025-08-17T19:57:17.4967559Z 
2025-08-17T19:57:17.4967626Z # common
2025-08-17T19:57:17.4967713Z 
2025-08-17T19:57:17.4967786Z <a id="common.dsn"></a>
2025-08-17T19:57:17.4967912Z 
2025-08-17T19:57:17.4967976Z # common.dsn
2025-08-17T19:57:17.4968202Z 
2025-08-17T19:57:17.4968289Z <a id="common.dsn.build_dsn"></a>
2025-08-17T19:57:17.4968437Z 
2025-08-17T19:57:17.4968500Z #### build\_dsn
2025-08-17T19:57:17.4968603Z 
2025-08-17T19:57:17.4968673Z ```python
2025-08-17T19:57:17.4968843Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:57:17.4969065Z ```
2025-08-17T19:57:17.4969146Z 
2025-08-17T19:57:17.4969266Z Return a Postgres DSN, validating required variables.
2025-08-17T19:57:17.4969475Z 
2025-08-17T19:57:17.4969654Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T19:57:17.4970087Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T19:57:17.4970489Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T19:57:17.4970798Z missing.
2025-08-17T19:57:17.4970885Z 
2025-08-17T19:57:17.4970965Z <a id="common.models_vendor"></a>
2025-08-17T19:57:17.4971119Z 
2025-08-17T19:57:17.4971197Z # common.models\_vendor
2025-08-17T19:57:17.4971322Z 
2025-08-17T19:57:17.4971413Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T19:57:17.4971585Z 
2025-08-17T19:57:17.4971650Z ## Vendor Objects
2025-08-17T19:57:17.4971754Z 
2025-08-17T19:57:17.4971825Z ```python
2025-08-17T19:57:17.4971974Z class Vendor(Base)
2025-08-17T19:57:17.4972139Z ```
2025-08-17T19:57:17.4972219Z 
2025-08-17T19:57:17.4972296Z Vendor of inventory items.
2025-08-17T19:57:17.4972433Z 
2025-08-17T19:57:17.4972533Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T19:57:17.4972712Z 
2025-08-17T19:57:17.4972790Z ## VendorPrice Objects
2025-08-17T19:57:17.4972906Z 
2025-08-17T19:57:17.4972968Z ```python
2025-08-17T19:57:17.4973131Z class VendorPrice(Base)
2025-08-17T19:57:17.4973307Z ```
2025-08-17T19:57:17.4973387Z 
2025-08-17T19:57:17.4973496Z Association table linking vendors to pricing.
2025-08-17T19:57:17.4973672Z 
2025-08-17T19:57:17.4973749Z <a id="common.db_url"></a>
2025-08-17T19:57:17.4973884Z 
2025-08-17T19:57:17.4974076Z # common.db\_url
2025-08-17T19:57:17.4974188Z 
2025-08-17T19:57:17.4974277Z <a id="common.db_url.build_url"></a>
2025-08-17T19:57:17.4974626Z 
2025-08-17T19:57:17.4974694Z #### build\_url
2025-08-17T19:57:17.4974796Z 
2025-08-17T19:57:17.4974865Z ```python
2025-08-17T19:57:17.4975038Z def build_url(async_: bool = True) -> str
2025-08-17T19:57:17.4975265Z ```
2025-08-17T19:57:17.4975346Z 
2025-08-17T19:57:17.4996910Z Return Postgres DSN from env or PG_* parts.
2025-08-17T19:57:17.4997246Z 
2025-08-17T19:57:17.4997382Z <a id="common.keepa"></a>
2025-08-17T19:57:17.4997611Z 
2025-08-17T19:57:17.4997732Z # common.keepa
2025-08-17T19:57:17.4997903Z 
2025-08-17T19:57:17.4998026Z <a id="common.llm"></a>
2025-08-17T19:57:17.4998234Z 
2025-08-17T19:57:17.4998340Z # common.llm
2025-08-17T19:57:17.4998495Z 
2025-08-17T19:57:17.4998624Z <a id="common.settings"></a>
2025-08-17T19:57:17.4998862Z 
2025-08-17T19:57:17.4998974Z # common.settings
2025-08-17T19:57:17.4999150Z 
2025-08-17T19:57:17.4999270Z <a id="common.db"></a>
2025-08-17T19:57:17.4999561Z 
2025-08-17T19:57:17.4999666Z # common.db
2025-08-17T19:57:17.4999826Z 
2025-08-17T19:57:17.4999980Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T19:57:17.5000277Z 
2025-08-17T19:57:17.5000401Z #### build\_sqlalchemy\_url
2025-08-17T19:57:17.5000629Z 
2025-08-17T19:57:17.5000735Z ```python
2025-08-17T19:57:17.5001040Z def build_sqlalchemy_url() -> str
2025-08-17T19:57:17.5001282Z ```
2025-08-17T19:57:17.5001366Z 
2025-08-17T19:57:17.5001472Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T19:57:17.5001647Z 
2025-08-17T19:57:17.5001739Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T19:57:17.5001914Z 
2025-08-17T19:57:17.5001987Z #### build\_asyncpg\_dsn
2025-08-17T19:57:17.5002110Z 
2025-08-17T19:57:17.5002173Z ```python
2025-08-17T19:57:17.5002345Z def build_asyncpg_dsn() -> str
2025-08-17T19:57:17.5002545Z ```
2025-08-17T19:57:17.5002625Z 
2025-08-17T19:57:17.5002750Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T19:57:17.5002964Z 
2025-08-17T19:57:17.5003221Z <a id="common.db.refresh_mvs"></a>
2025-08-17T19:57:17.5003374Z 
2025-08-17T19:57:17.5003438Z #### refresh\_mvs
2025-08-17T19:57:17.5003548Z 
2025-08-17T19:57:17.5003610Z ```python
2025-08-17T19:57:17.5003805Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T19:57:17.5004058Z ```
2025-08-17T19:57:17.5004138Z 
2025-08-17T19:57:17.5004278Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T19:57:17.5004758Z 
2025-08-17T19:57:17.5004843Z <a id="common.config"></a>
2025-08-17T19:57:17.5004979Z 
2025-08-17T19:57:17.5005047Z # common.config
2025-08-17T19:57:17.5005149Z 
2025-08-17T19:57:17.5005221Z <a id="common.base"></a>
2025-08-17T19:57:17.5005347Z 
2025-08-17T19:57:17.5005411Z # common.base
2025-08-17T19:57:17.5005507Z 
2025-08-17T19:57:17.5005594Z <a id="common.base.Base"></a>
2025-08-17T19:57:17.5005731Z 
2025-08-17T19:57:17.5005794Z ## Base Objects
2025-08-17T19:57:17.5005892Z 
2025-08-17T19:57:17.5005968Z ```python
2025-08-17T19:57:17.5006136Z class Base(DeclarativeBase)
2025-08-17T19:57:17.5006336Z ```
2025-08-17T19:57:17.5006417Z 
2025-08-17T19:57:17.5006498Z Base class for SQLAlchemy models.
2025-08-17T19:57:17.5006654Z 
2025-08-17T19:57:17.5006725Z <a id="repricer"></a>
2025-08-17T19:57:17.5006839Z 
2025-08-17T19:57:17.5006909Z # repricer
2025-08-17T19:57:17.5006999Z 
2025-08-17T19:57:17.5007086Z <a id="repricer.app.schemas"></a>
2025-08-17T19:57:17.5007234Z 
2025-08-17T19:57:17.5007316Z # repricer.app.schemas
2025-08-17T19:57:17.5007435Z 
2025-08-17T19:57:17.5007519Z <a id="repricer.app.deps"></a>
2025-08-17T19:57:17.5007665Z 
2025-08-17T19:57:17.5007737Z # repricer.app.deps
2025-08-17T19:57:17.5007846Z 
2025-08-17T19:57:17.5007976Z Placeholder module for Keepa / SP-API clients.
2025-08-17T19:57:17.5008160Z 
2025-08-17T19:57:17.5008242Z <a id="repricer.app.logic"></a>
2025-08-17T19:57:17.5008384Z 
2025-08-17T19:57:17.5008463Z # repricer.app.logic
2025-08-17T19:57:17.5008576Z 
2025-08-17T19:57:17.5008672Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T19:57:17.5008987Z 
2025-08-17T19:57:17.5009051Z #### MIN\_MARGIN
2025-08-17T19:57:17.5009152Z 
2025-08-17T19:57:17.5009214Z 15 % ROI
2025-08-17T19:57:17.5009303Z 
2025-08-17T19:57:17.5009404Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T19:57:17.5009586Z 
2025-08-17T19:57:17.5009658Z #### compute\_price
2025-08-17T19:57:17.5009762Z 
2025-08-17T19:57:17.5009826Z ```python
2025-08-17T19:57:17.5010069Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T19:57:17.5010363Z ```
2025-08-17T19:57:17.5010449Z 
2025-08-17T19:57:17.5010555Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T19:57:17.5010839Z Replace with real competitive logic later.
2025-08-17T19:57:17.5011009Z 
2025-08-17T19:57:17.5011090Z <a id="repricer.app.main"></a>
2025-08-17T19:57:17.5011229Z 
2025-08-17T19:57:17.5011304Z # repricer.app.main
2025-08-17T19:57:17.5011411Z 
2025-08-17T19:57:17.5011487Z <a id="repricer.app"></a>
2025-08-17T19:57:17.5011621Z 
2025-08-17T19:57:17.5011693Z # repricer.app
2025-08-17T19:57:17.5011797Z 
2025-08-17T19:57:17.5011887Z <a id="repricer.tests.test_imports"></a>
2025-08-17T19:57:17.5012060Z 
2025-08-17T19:57:17.5012143Z # repricer.tests.test\_imports
2025-08-17T19:57:17.5012278Z 
2025-08-17T19:57:17.5012376Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T19:57:17.5012536Z 
2025-08-17T19:57:17.5012617Z # repricer.tests.test\_smoke
2025-08-17T19:57:17.5012760Z 
2025-08-17T19:57:17.5012836Z <a id="repricer.tests"></a>
2025-08-17T19:57:17.5012971Z 
2025-08-17T19:57:17.5013039Z # repricer.tests
2025-08-17T19:57:17.5013149Z 
2025-08-17T19:57:17.5013213Z <a id="db"></a>
2025-08-17T19:57:17.5013312Z 
2025-08-17T19:57:17.5013380Z # db
2025-08-17T19:57:17.5013464Z 
2025-08-17T19:57:17.5013538Z <a id="db.utils.views"></a>
2025-08-17T19:57:17.5013672Z 
2025-08-17T19:57:17.5013738Z # db.utils.views
2025-08-17T19:57:17.5013841Z 
2025-08-17T19:57:17.5013931Z <a id="db.utils.views.replace_view"></a>
2025-08-17T19:57:17.5014104Z 
2025-08-17T19:57:17.5014174Z #### replace\_view
2025-08-17T19:57:17.5014504Z 
2025-08-17T19:57:17.5014573Z ```python
2025-08-17T19:57:17.5014764Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T19:57:17.5015012Z ```
2025-08-17T19:57:17.5015091Z 
2025-08-17T19:57:17.5015180Z Drop and recreate a SQL view atomically.
2025-08-17T19:57:17.5015346Z 
2025-08-17T19:57:17.5015415Z <a id="db.utils"></a>
2025-08-17T19:57:17.5015528Z 
2025-08-17T19:57:17.5015590Z # db.utils
2025-08-17T19:57:17.5015686Z 
2025-08-17T19:57:17.5015762Z <a id="price_importer"></a>
2025-08-17T19:57:17.5015890Z 
2025-08-17T19:57:17.5015962Z # price\_importer
2025-08-17T19:57:17.5016066Z 
2025-08-17T19:57:17.5016166Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T19:57:17.5016348Z 
2025-08-17T19:57:17.5016444Z # price\_importer.services\_common.dsn
2025-08-17T19:57:17.5016605Z 
2025-08-17T19:57:17.5016728Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T19:57:17.5016939Z 
2025-08-17T19:57:17.5017003Z #### build\_dsn
2025-08-17T19:57:17.5017106Z 
2025-08-17T19:57:17.5017181Z ```python
2025-08-17T19:57:17.5017349Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:57:17.5017574Z ```
2025-08-17T19:57:17.5017654Z 
2025-08-17T19:57:17.5017721Z Return safe DSN.
2025-08-17T19:57:17.5017828Z 
2025-08-17T19:57:17.5018161Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T19:57:17.5018364Z 
2025-08-17T19:57:17.5018489Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T19:57:17.5018702Z 
2025-08-17T19:57:17.5018813Z # price\_importer.services\_common.models\_vendor
2025-08-17T19:57:17.5019000Z 
2025-08-17T19:57:17.5019111Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T19:57:17.5019299Z 
2025-08-17T19:57:17.5019391Z # price\_importer.services\_common.db\_url
2025-08-17T19:57:17.5019566Z 
2025-08-17T19:57:17.5019696Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T19:57:17.5019907Z 
2025-08-17T19:57:17.5019971Z #### build\_url
2025-08-17T19:57:17.5020073Z 
2025-08-17T19:57:17.5020301Z ```python
2025-08-17T19:57:17.5020491Z def build_url(async_: bool = True) -> str
2025-08-17T19:57:17.5020708Z ```
2025-08-17T19:57:17.5020786Z 
2025-08-17T19:57:17.5020886Z Return Postgres DSN from env or PG_* parts.
2025-08-17T19:57:17.5021056Z 
2025-08-17T19:57:17.5021159Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T19:57:17.5021345Z 
2025-08-17T19:57:17.5021435Z # price\_importer.services\_common.keepa
2025-08-17T19:57:17.5021598Z 
2025-08-17T19:57:17.5021699Z <a id="price_importer.services_common.llm"></a>
2025-08-17T19:57:17.5021877Z 
2025-08-17T19:57:17.5021965Z # price\_importer.services\_common.llm
2025-08-17T19:57:17.5022124Z 
2025-08-17T19:57:17.5022240Z <a id="price_importer.services_common.settings"></a>
2025-08-17T19:57:17.5022429Z 
2025-08-17T19:57:17.5022522Z # price\_importer.services\_common.settings
2025-08-17T19:57:17.5022695Z 
2025-08-17T19:57:17.5022793Z <a id="price_importer.services_common.db"></a>
2025-08-17T19:57:17.5022968Z 
2025-08-17T19:57:17.5023071Z # price\_importer.services\_common.db
2025-08-17T19:57:17.5023237Z 
2025-08-17T19:57:17.5023390Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T19:57:17.5023633Z 
2025-08-17T19:57:17.5023708Z #### build\_sqlalchemy\_url
2025-08-17T19:57:17.5023836Z 
2025-08-17T19:57:17.5023898Z ```python
2025-08-17T19:57:17.5024070Z def build_sqlalchemy_url() -> str
2025-08-17T19:57:17.5024271Z ```
2025-08-17T19:57:17.5024476Z 
2025-08-17T19:57:17.5024572Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T19:57:17.5024743Z 
2025-08-17T19:57:17.5024888Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T19:57:17.5025113Z 
2025-08-17T19:57:17.5025186Z #### build\_asyncpg\_dsn
2025-08-17T19:57:17.5025316Z 
2025-08-17T19:57:17.5025379Z ```python
2025-08-17T19:57:17.5025545Z def build_asyncpg_dsn() -> str
2025-08-17T19:57:17.5025744Z ```
2025-08-17T19:57:17.5025823Z 
2025-08-17T19:57:17.5025953Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T19:57:17.5026166Z 
2025-08-17T19:57:17.5026428Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T19:57:17.5026637Z 
2025-08-17T19:57:17.5026709Z #### refresh\_mvs
2025-08-17T19:57:17.5026813Z 
2025-08-17T19:57:17.5026873Z ```python
2025-08-17T19:57:17.5027065Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T19:57:17.5027306Z ```
2025-08-17T19:57:17.5027390Z 
2025-08-17T19:57:17.5027520Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T19:57:17.5027733Z 
2025-08-17T19:57:17.5027835Z <a id="price_importer.services_common"></a>
2025-08-17T19:57:17.5028005Z 
2025-08-17T19:57:17.5028090Z # price\_importer.services\_common
2025-08-17T19:57:17.5028246Z 
2025-08-17T19:57:17.5028347Z <a id="price_importer.services_common.base"></a>
2025-08-17T19:57:17.5028528Z 
2025-08-17T19:57:17.5028615Z # price\_importer.services\_common.base
2025-08-17T19:57:17.5028782Z 
2025-08-17T19:57:17.5028869Z <a id="price_importer.normaliser"></a>
2025-08-17T19:57:17.5029029Z 
2025-08-17T19:57:17.5029121Z # price\_importer.normaliser
2025-08-17T19:57:17.5029266Z 
2025-08-17T19:57:17.5029367Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T19:57:17.5029556Z 
2025-08-17T19:57:17.5029643Z # price\_importer.common.models\_vendor
2025-08-17T19:57:17.5029803Z 
2025-08-17T19:57:17.5029898Z <a id="price_importer.common.db_url"></a>
2025-08-17T19:57:17.5030073Z 
2025-08-17T19:57:17.5030159Z # price\_importer.common.db\_url
2025-08-17T19:57:17.5030303Z 
2025-08-17T19:57:17.5030414Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T19:57:17.5030596Z 
2025-08-17T19:57:17.5030663Z #### make\_dsn
2025-08-17T19:57:17.5030771Z 
2025-08-17T19:57:17.5030833Z ```python
2025-08-17T19:57:17.5031003Z def make_dsn(async_: bool = False) -> str
2025-08-17T19:57:17.5031228Z ```
2025-08-17T19:57:17.5031309Z 
2025-08-17T19:57:17.5031425Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T19:57:17.5031634Z 
2025-08-17T19:57:17.5031740Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T19:57:17.5032044Z 
2025-08-17T19:57:17.5032122Z #### build\_url
2025-08-17T19:57:17.5032224Z 
2025-08-17T19:57:17.5032286Z ```python
2025-08-17T19:57:17.5032464Z def build_url(async_: bool = False) -> str
2025-08-17T19:57:17.5032682Z ```
2025-08-17T19:57:17.5032769Z 
2025-08-17T19:57:17.5032887Z Return Postgres DSN built from environment variables.
2025-08-17T19:57:17.5033085Z 
2025-08-17T19:57:17.5033173Z <a id="price_importer.common"></a>
2025-08-17T19:57:17.5033325Z 
2025-08-17T19:57:17.5033401Z # price\_importer.common
2025-08-17T19:57:17.5033528Z 
2025-08-17T19:57:17.5033621Z <a id="price_importer.common.base"></a>
2025-08-17T19:57:17.5033783Z 
2025-08-17T19:57:17.5033863Z # price\_importer.common.base
2025-08-17T19:57:17.5034009Z 
2025-08-17T19:57:17.5034103Z <a id="price_importer.tests.conftest"></a>
2025-08-17T19:57:17.5034272Z 
2025-08-17T19:57:17.5034460Z # price\_importer.tests.conftest
2025-08-17T19:57:17.5034609Z 
2025-08-17T19:57:17.5034706Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T19:57:17.5034884Z 
2025-08-17T19:57:17.5034982Z # price\_importer.tests.test\_reader
2025-08-17T19:57:17.5035137Z 
2025-08-17T19:57:17.5035236Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T19:57:17.5035418Z 
2025-08-17T19:57:17.5035505Z # price\_importer.tests.test\_imports
2025-08-17T19:57:17.5035662Z 
2025-08-17T19:57:17.5035762Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T19:57:17.5035931Z 
2025-08-17T19:57:17.5036016Z # price\_importer.tests.test\_smoke
2025-08-17T19:57:17.5036169Z 
2025-08-17T19:57:17.5036277Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T19:57:17.5036460Z 
2025-08-17T19:57:17.5036549Z # price\_importer.tests.test\_normaliser
2025-08-17T19:57:17.5036719Z 
2025-08-17T19:57:17.5036802Z <a id="price_importer.tests"></a>
2025-08-17T19:57:17.5036949Z 
2025-08-17T19:57:17.5037028Z # price\_importer.tests
2025-08-17T19:57:17.5037150Z 
2025-08-17T19:57:17.5037233Z <a id="price_importer.reader"></a>
2025-08-17T19:57:17.5037382Z 
2025-08-17T19:57:17.5037469Z # price\_importer.reader
2025-08-17T19:57:17.5037713Z 
2025-08-17T19:57:17.5037801Z <a id="price_importer.repository"></a>
2025-08-17T19:57:17.5037965Z 
2025-08-17T19:57:17.5038054Z # price\_importer.repository
2025-08-17T19:57:17.5038190Z 
2025-08-17T19:57:17.5038277Z <a id="price_importer.import"></a>
2025-08-17T19:57:17.5038423Z 
2025-08-17T19:57:17.5038499Z # price\_importer.import
2025-08-17T19:57:17.5038620Z 
2025-08-17T19:57:17.5038696Z <a id="fees_h10"></a>
2025-08-17T19:57:17.5038808Z 
2025-08-17T19:57:17.5038873Z # fees\_h10
2025-08-17T19:57:17.5038972Z 
2025-08-17T19:57:17.5039045Z <a id="fees_h10.worker"></a>
2025-08-17T19:57:17.5039176Z 
2025-08-17T19:57:17.5039242Z # fees\_h10.worker
2025-08-17T19:57:17.5039353Z 
2025-08-17T19:57:17.5039448Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T19:57:17.5039619Z 
2025-08-17T19:57:17.5039698Z #### list\_active\_asins
2025-08-17T19:57:17.5039815Z 
2025-08-17T19:57:17.5039876Z ```python
2025-08-17T19:57:17.5040048Z def list_active_asins() -> list[str]
2025-08-17T19:57:17.5040263Z ```
2025-08-17T19:57:17.5040350Z 
2025-08-17T19:57:17.5040462Z Return known ASINs or an empty list if unavailable.
2025-08-17T19:57:17.5040658Z 
2025-08-17T19:57:17.5040747Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T19:57:17.5040908Z 
2025-08-17T19:57:17.5040986Z # fees\_h10.tests.test\_smoke
2025-08-17T19:57:17.5041123Z 
2025-08-17T19:57:17.5041202Z <a id="fees_h10.tests"></a>
2025-08-17T19:57:17.5041332Z 
2025-08-17T19:57:17.5041397Z # fees\_h10.tests
2025-08-17T19:57:17.5041510Z 
2025-08-17T19:57:17.5041584Z <a id="fees_h10.client"></a>
2025-08-17T19:57:17.5041718Z 
2025-08-17T19:57:17.5041789Z # fees\_h10.client
2025-08-17T19:57:17.5041894Z 
2025-08-17T19:57:17.5041974Z <a id="fees_h10.repository"></a>
2025-08-17T19:57:17.5042116Z 
2025-08-17T19:57:17.5042194Z # fees\_h10.repository
2025-08-17T19:57:17.5042312Z 
2025-08-17T19:57:17.5042379Z <a id="emailer"></a>
2025-08-17T19:57:17.5042498Z 
2025-08-17T19:57:17.5042560Z # emailer
2025-08-17T19:57:17.5042767Z 
2025-08-17T19:57:17.5042874Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T19:57:17.5043058Z 
2025-08-17T19:57:17.5043146Z # emailer.tests.test\_import\_emailer
2025-08-17T19:57:17.5043306Z 
2025-08-17T19:57:17.5043397Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T19:57:17.5043552Z 
2025-08-17T19:57:17.5043630Z # emailer.tests.test\_smoke
2025-08-17T19:57:17.5043793Z 
2025-08-17T19:57:17.5043868Z <a id="emailer.tests"></a>
2025-08-17T19:57:17.5043998Z 
2025-08-17T19:57:17.5044066Z # emailer.tests
2025-08-17T19:57:17.5044177Z 
2025-08-17T19:57:17.5044260Z <a id="emailer.generate_body"></a>
2025-08-17T19:57:17.5044618Z 
2025-08-17T19:57:17.5044704Z # emailer.generate\_body
2025-08-17T19:57:17.5044833Z 
2025-08-17T19:57:17.5044902Z <a id="llm_server"></a>
2025-08-17T19:57:17.5045024Z 
2025-08-17T19:57:17.5045086Z # llm\_server
2025-08-17T19:57:17.5045182Z 
2025-08-17T19:57:17.5045258Z <a id="llm_server.app"></a>
2025-08-17T19:57:17.5045391Z 
2025-08-17T19:57:17.5045457Z # llm\_server.app
2025-08-17T19:57:17.5045572Z 
