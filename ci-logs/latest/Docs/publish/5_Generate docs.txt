2025-08-17T13:33:49.8173328Z ##[group]Run pydoc-markdown
2025-08-17T13:33:49.8173618Z [36;1mpydoc-markdown[0m
2025-08-17T13:33:49.8213896Z shell: /usr/bin/bash -e {0}
2025-08-17T13:33:49.8214116Z env:
2025-08-17T13:33:49.8214357Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:33:49.8214775Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T13:33:49.8215171Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:33:49.8215516Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:33:49.8216007Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:33:49.8216475Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T13:33:49.8216760Z ##[endgroup]
2025-08-17T13:33:50.1710970Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T13:33:50.1711723Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T13:33:50.1712046Z In "pydoc-markdown.yml"
2025-08-17T13:33:50.1712366Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T13:33:50.1712853Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T13:33:50.1713388Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T13:33:50.1713821Z 
2025-08-17T13:33:50.3938148Z <a id="__init__"></a>
2025-08-17T13:33:50.3938677Z 
2025-08-17T13:33:50.3938862Z # \_\_init\_\_
2025-08-17T13:33:50.3939143Z 
2025-08-17T13:33:50.3939321Z <a id="api"></a>
2025-08-17T13:33:50.3939532Z 
2025-08-17T13:33:50.3939649Z # api
2025-08-17T13:33:50.3939822Z 
2025-08-17T13:33:50.3939982Z <a id="api.tests.test_llm"></a>
2025-08-17T13:33:50.3940274Z 
2025-08-17T13:33:50.3940445Z # api.tests.test\_llm
2025-08-17T13:33:50.3940718Z 
2025-08-17T13:33:50.3940898Z <a id="api.tests.test_imports"></a>
2025-08-17T13:33:50.3941217Z 
2025-08-17T13:33:50.3941387Z # api.tests.test\_imports
2025-08-17T13:33:50.3941647Z 
2025-08-17T13:33:50.3941837Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T13:33:50.3942671Z 
2025-08-17T13:33:50.3942834Z # api.tests.test\_entrypoint
2025-08-17T13:33:50.3943145Z 
2025-08-17T13:33:50.3943337Z <a id="api.tests.test_health"></a>
2025-08-17T13:33:50.3943667Z 
2025-08-17T13:33:50.3943854Z # api.tests.test\_health
2025-08-17T13:33:50.3944155Z 
2025-08-17T13:33:50.3944356Z <a id="api.migrations.env"></a>
2025-08-17T13:33:50.3944705Z 
2025-08-17T13:33:50.3944877Z # api.migrations.env
2025-08-17T13:33:50.3945164Z 
2025-08-17T13:33:50.3945453Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T13:33:50.3946225Z 
2025-08-17T13:33:50.3946499Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T13:33:50.3947009Z 
2025-08-17T13:33:50.3947263Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T13:33:50.3947722Z 
2025-08-17T13:33:50.3947966Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T13:33:50.3948246Z 
2025-08-17T13:33:50.3948446Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T13:33:50.3948761Z 
2025-08-17T13:33:50.3948941Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T13:33:50.3949216Z 
2025-08-17T13:33:50.3949370Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T13:33:50.3949617Z 
2025-08-17T13:33:50.3949742Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T13:33:50.3949964Z 
2025-08-17T13:33:50.3950108Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T13:33:50.3950347Z 
2025-08-17T13:33:50.3950469Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T13:33:50.3950694Z 
2025-08-17T13:33:50.3950839Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T13:33:50.3951085Z 
2025-08-17T13:33:50.3951217Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T13:33:50.3951445Z 
2025-08-17T13:33:50.3951582Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T13:33:50.3951822Z 
2025-08-17T13:33:50.3951946Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T13:33:50.3952169Z 
2025-08-17T13:33:50.3952312Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T13:33:50.3952861Z 
2025-08-17T13:33:50.3952984Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T13:33:50.3953206Z 
2025-08-17T13:33:50.3953356Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T13:33:50.3953604Z 
2025-08-17T13:33:50.3953729Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T13:33:50.3953962Z 
2025-08-17T13:33:50.3954090Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T13:33:50.3954318Z 
2025-08-17T13:33:50.3954427Z # api.migrations.versions.0001\_baseline
2025-08-17T13:33:50.3954640Z 
2025-08-17T13:33:50.3954746Z <a id="api.migrations.versions"></a>
2025-08-17T13:33:50.3954939Z 
2025-08-17T13:33:50.3955041Z # api.migrations.versions
2025-08-17T13:33:50.3955194Z 
2025-08-17T13:33:50.3955286Z <a id="api.migrations"></a>
2025-08-17T13:33:50.3955450Z 
2025-08-17T13:33:50.3955530Z # api.migrations
2025-08-17T13:33:50.3955654Z 
2025-08-17T13:33:50.3955733Z <a id="api.db"></a>
2025-08-17T13:33:50.3956097Z 
2025-08-17T13:33:50.3956181Z # api.db
2025-08-17T13:33:50.3956286Z 
2025-08-17T13:33:50.3956385Z <a id="api.routes.stats"></a>
2025-08-17T13:33:50.3956552Z 
2025-08-17T13:33:50.3956635Z # api.routes.stats
2025-08-17T13:33:50.3956763Z 
2025-08-17T13:33:50.3956870Z <a id="api.routes.stats.kpi"></a>
2025-08-17T13:33:50.3957053Z 
2025-08-17T13:33:50.3957127Z #### kpi
2025-08-17T13:33:50.3957237Z 
2025-08-17T13:33:50.3957314Z ```python
2025-08-17T13:33:50.3957510Z @router.get("/stats/kpi")
2025-08-17T13:33:50.3957795Z def kpi() -> List[Dict[str, int]]
2025-08-17T13:33:50.3958045Z ```
2025-08-17T13:33:50.3958153Z 
2025-08-17T13:33:50.3958245Z Return KPI metrics (mock).
2025-08-17T13:33:50.3958400Z 
2025-08-17T13:33:50.3958525Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T13:33:50.3958737Z 
2025-08-17T13:33:50.3958820Z #### roi\_by\_vendor
2025-08-17T13:33:50.3958961Z 
2025-08-17T13:33:50.3959037Z ```python
2025-08-17T13:33:50.3959210Z @router.get("/stats/roi_by_vendor")
2025-08-17T13:33:50.3959594Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T13:33:50.3959841Z ```
2025-08-17T13:33:50.3959927Z 
2025-08-17T13:33:50.3960009Z Return ROI percent by vendor.
2025-08-17T13:33:50.3960150Z 
2025-08-17T13:33:50.3960249Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T13:33:50.3960417Z 
2025-08-17T13:33:50.3960483Z #### roi\_trend
2025-08-17T13:33:50.3960588Z 
2025-08-17T13:33:50.3960652Z ```python
2025-08-17T13:33:50.3960818Z @router.get("/stats/roi_trend")
2025-08-17T13:33:50.3961058Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T13:33:50.3961293Z ```
2025-08-17T13:33:50.3961374Z 
2025-08-17T13:33:50.3961449Z Return 30-day ROI trend.
2025-08-17T13:33:50.3961572Z 
2025-08-17T13:33:50.3961657Z <a id="api.routes.roi"></a>
2025-08-17T13:33:50.3961789Z 
2025-08-17T13:33:50.3961858Z # api.routes.roi
2025-08-17T13:33:50.3962064Z 
2025-08-17T13:33:50.3962147Z <a id="api.routes.health"></a>
2025-08-17T13:33:50.3962328Z 
2025-08-17T13:33:50.3962403Z # api.routes.health
2025-08-17T13:33:50.3962516Z 
2025-08-17T13:33:50.3962608Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T13:33:50.3962777Z 
2025-08-17T13:33:50.3962840Z #### MAX\_SKEW
2025-08-17T13:33:50.3962938Z 
2025-08-17T13:33:50.3963007Z seconds
2025-08-17T13:33:50.3963090Z 
2025-08-17T13:33:50.3963179Z <a id="api.routes.health.health"></a>
2025-08-17T13:33:50.3963337Z 
2025-08-17T13:33:50.3963407Z #### health
2025-08-17T13:33:50.3963496Z 
2025-08-17T13:33:50.3963559Z ```python
2025-08-17T13:33:50.3963756Z @router.get("/health", include_in_schema=False)
2025-08-17T13:33:50.3964125Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T13:33:50.3964465Z ```
2025-08-17T13:33:50.3964544Z 
2025-08-17T13:33:50.3964666Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T13:33:50.3964861Z 
2025-08-17T13:33:50.3964947Z <a id="api.routes.repository"></a>
2025-08-17T13:33:50.3965109Z 
2025-08-17T13:33:50.3965184Z # api.routes.repository
2025-08-17T13:33:50.3965305Z 
2025-08-17T13:33:50.3965380Z <a id="api.routes"></a>
2025-08-17T13:33:50.3965987Z 
2025-08-17T13:33:50.3966111Z # api.routes
2025-08-17T13:33:50.3966291Z 
2025-08-17T13:33:50.3966438Z <a id="api.models.fee"></a>
2025-08-17T13:33:50.3966682Z 
2025-08-17T13:33:50.3966809Z # api.models.fee
2025-08-17T13:33:50.3967006Z 
2025-08-17T13:33:50.3967142Z <a id="api.models"></a>
2025-08-17T13:33:50.3967362Z 
2025-08-17T13:33:50.3967480Z # api.models
2025-08-17T13:33:50.3967656Z 
2025-08-17T13:33:50.3967800Z <a id="api.roi_repository"></a>
2025-08-17T13:33:50.3968062Z 
2025-08-17T13:33:50.3968138Z # api.roi\_repository
2025-08-17T13:33:50.3968260Z 
2025-08-17T13:33:50.3968330Z <a id="api.main"></a>
2025-08-17T13:33:50.3968440Z 
2025-08-17T13:33:50.3968510Z # api.main
2025-08-17T13:33:50.3968600Z 
2025-08-17T13:33:50.3968677Z <a id="api.main.ready"></a>
2025-08-17T13:33:50.3968812Z 
2025-08-17T13:33:50.3968873Z #### ready
2025-08-17T13:33:50.3968958Z 
2025-08-17T13:33:50.3969022Z ```python
2025-08-17T13:33:50.3969287Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T13:33:50.3969733Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T13:33:50.3970082Z                                                                       str]
2025-08-17T13:33:50.3970321Z ```
2025-08-17T13:33:50.3970403Z 
2025-08-17T13:33:50.3970497Z Return 200 only when migrations are at head.
2025-08-17T13:33:50.3970671Z 
2025-08-17T13:33:50.3970743Z <a id="api.config"></a>
2025-08-17T13:33:50.3970862Z 
2025-08-17T13:33:50.3970928Z # api.config
2025-08-17T13:33:50.3971027Z 
2025-08-17T13:33:50.3971090Z <a id="etl"></a>
2025-08-17T13:33:50.3971192Z 
2025-08-17T13:33:50.3971259Z # etl
2025-08-17T13:33:50.3971343Z 
2025-08-17T13:33:50.3971421Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T13:33:50.3971571Z 
2025-08-17T13:33:50.3971643Z # etl.fba\_fee\_ingestor
2025-08-17T13:33:50.3971766Z 
2025-08-17T13:33:50.3971846Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T13:33:50.3971996Z 
2025-08-17T13:33:50.3972068Z # etl.sp\_fees\_ingestor
2025-08-17T13:33:50.3972364Z 
2025-08-17T13:33:50.3972448Z <a id="etl.keepa_ingestor"></a>
2025-08-17T13:33:50.3972584Z 
2025-08-17T13:33:50.3972653Z # etl.keepa\_ingestor
2025-08-17T13:33:50.3972765Z 
2025-08-17T13:33:50.3972837Z <a id="etl.db"></a>
2025-08-17T13:33:50.3972941Z 
2025-08-17T13:33:50.3973003Z # etl.db
2025-08-17T13:33:50.3973096Z 
2025-08-17T13:33:50.3973204Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T13:33:50.3973386Z 
2025-08-17T13:33:50.3973482Z # etl.dialects.amazon\_reimbursements
2025-08-17T13:33:50.3973645Z 
2025-08-17T13:33:50.3973733Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T13:33:50.3973894Z 
2025-08-17T13:33:50.3973981Z # etl.dialects.amazon\_returns
2025-08-17T13:33:50.3974122Z 
2025-08-17T13:33:50.3974197Z <a id="etl.dialects"></a>
2025-08-17T13:33:50.3974329Z 
2025-08-17T13:33:50.3974394Z # etl.dialects
2025-08-17T13:33:50.3974492Z 
2025-08-17T13:33:50.3974557Z <a id="ingest"></a>
2025-08-17T13:33:50.3974670Z 
2025-08-17T13:33:50.3974738Z # ingest
2025-08-17T13:33:50.3974831Z 
2025-08-17T13:33:50.3974923Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T13:33:50.3975079Z 
2025-08-17T13:33:50.3975158Z # ingest.tests.test\_smoke
2025-08-17T13:33:50.3975294Z 
2025-08-17T13:33:50.3975367Z <a id="ingest.tests"></a>
2025-08-17T13:33:50.3975491Z 
2025-08-17T13:33:50.3975582Z # ingest.tests
2025-08-17T13:33:50.3975682Z 
2025-08-17T13:33:50.3975764Z <a id="ingest.upload_router"></a>
2025-08-17T13:33:50.3976150Z 
2025-08-17T13:33:50.3976235Z # ingest.upload\_router
2025-08-17T13:33:50.3976358Z 
2025-08-17T13:33:50.3976439Z <a id="ingest.email_watcher"></a>
2025-08-17T13:33:50.3976586Z 
2025-08-17T13:33:50.3976658Z # ingest.email\_watcher
2025-08-17T13:33:50.3976772Z 
2025-08-17T13:33:50.3976858Z <a id="ingest.email_watcher.main"></a>
2025-08-17T13:33:50.3977023Z 
2025-08-17T13:33:50.3977086Z #### main
2025-08-17T13:33:50.3977173Z 
2025-08-17T13:33:50.3977245Z ```python
2025-08-17T13:33:50.3977413Z def main() -> dict[str, str]
2025-08-17T13:33:50.3977615Z ```
2025-08-17T13:33:50.3977696Z 
2025-08-17T13:33:50.3977958Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T13:33:50.3978191Z 
2025-08-17T13:33:50.3978317Z Returns {"status": "success"} when processing completes.
2025-08-17T13:33:50.3978530Z 
2025-08-17T13:33:50.3978617Z <a id="ingest.ingest_router"></a>
2025-08-17T13:33:50.3978759Z 
2025-08-17T13:33:50.3978831Z # ingest.ingest\_router
2025-08-17T13:33:50.3978947Z 
2025-08-17T13:33:50.3979029Z <a id="logistics_etl"></a>
2025-08-17T13:33:50.3979153Z 
2025-08-17T13:33:50.3979219Z # logistics\_etl
2025-08-17T13:33:50.3979327Z 
2025-08-17T13:33:50.3979444Z Daily logistics ETL job.
2025-08-17T13:33:50.3979573Z 
2025-08-17T13:33:50.3979651Z <a id="logistics_etl.__main__"></a>
2025-08-17T13:33:50.3979798Z 
2025-08-17T13:33:50.3979877Z # logistics\_etl.\_\_main\_\_
2025-08-17T13:33:50.3980008Z 
2025-08-17T13:33:50.3980084Z <a id="logistics_etl.dsn"></a>
2025-08-17T13:33:50.3980225Z 
2025-08-17T13:33:50.3980294Z # logistics\_etl.dsn
2025-08-17T13:33:50.3980408Z 
2025-08-17T13:33:50.3980524Z Local DSN builder to avoid cross-service dependency.
2025-08-17T13:33:50.3980726Z 
2025-08-17T13:33:50.3980814Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T13:33:50.3980977Z 
2025-08-17T13:33:50.3981044Z #### build\_dsn
2025-08-17T13:33:50.3981146Z 
2025-08-17T13:33:50.3981208Z ```python
2025-08-17T13:33:50.3981384Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:33:50.3981601Z ```
2025-08-17T13:33:50.3981686Z 
2025-08-17T13:33:50.3981824Z Return a Postgres DSN assembled from environment variables.
2025-08-17T13:33:50.3982039Z 
2025-08-17T13:33:50.3982188Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T13:33:50.3982572Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T13:33:50.3982915Z error when any required variable is missing.
2025-08-17T13:33:50.3983086Z 
2025-08-17T13:33:50.3983176Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T13:33:50.3983346Z 
2025-08-17T13:33:50.3983547Z # logistics\_etl.tests.conftest
2025-08-17T13:33:50.3983698Z 
2025-08-17T13:33:50.3983801Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T13:33:50.3983992Z 
2025-08-17T13:33:50.3984081Z # logistics\_etl.tests.test\_repository
2025-08-17T13:33:50.3984244Z 
2025-08-17T13:33:50.3984344Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T13:33:50.3984512Z 
2025-08-17T13:33:50.3984597Z # logistics\_etl.tests.test\_cron
2025-08-17T13:33:50.3984750Z 
2025-08-17T13:33:50.3984845Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T13:33:50.3985015Z 
2025-08-17T13:33:50.3985100Z # logistics\_etl.tests.test\_imports
2025-08-17T13:33:50.3985266Z 
2025-08-17T13:33:50.3985356Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T13:33:50.3985524Z 
2025-08-17T13:33:50.3985612Z # logistics\_etl.tests.test\_smoke
2025-08-17T13:33:50.3985765Z 
2025-08-17T13:33:50.3986068Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T13:33:50.3986303Z 
2025-08-17T13:33:50.3986391Z # logistics\_etl.tests.test\_client
2025-08-17T13:33:50.3986562Z 
2025-08-17T13:33:50.3986645Z <a id="logistics_etl.tests"></a>
2025-08-17T13:33:50.3986794Z 
2025-08-17T13:33:50.3986866Z # logistics\_etl.tests
2025-08-17T13:33:50.3986983Z 
2025-08-17T13:33:50.3987067Z <a id="logistics_etl.flow"></a>
2025-08-17T13:33:50.3987206Z 
2025-08-17T13:33:50.3987277Z # logistics\_etl.flow
2025-08-17T13:33:50.3987397Z 
2025-08-17T13:33:50.3987479Z <a id="logistics_etl.client"></a>
2025-08-17T13:33:50.3987623Z 
2025-08-17T13:33:50.3987695Z # logistics\_etl.client
2025-08-17T13:33:50.3987818Z 
2025-08-17T13:33:50.3987894Z <a id="logistics_etl.cron"></a>
2025-08-17T13:33:50.3988026Z 
2025-08-17T13:33:50.3988108Z # logistics\_etl.cron
2025-08-17T13:33:50.3988219Z 
2025-08-17T13:33:50.3988295Z <a id="logistics_etl.db"></a>
2025-08-17T13:33:50.3988435Z 
2025-08-17T13:33:50.3988504Z # logistics\_etl.db
2025-08-17T13:33:50.3988611Z 
2025-08-17T13:33:50.3988700Z <a id="logistics_etl.repository"></a>
2025-08-17T13:33:50.3988862Z 
2025-08-17T13:33:50.3988945Z # logistics\_etl.repository
2025-08-17T13:33:50.3989443Z 
2025-08-17T13:33:50.3989585Z <a id="alert_bot"></a>
2025-08-17T13:33:50.3989795Z 
2025-08-17T13:33:50.3989914Z # alert\_bot
2025-08-17T13:33:50.3990095Z 
2025-08-17T13:33:50.3990259Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T13:33:50.3990564Z 
2025-08-17T13:33:50.3990718Z # alert\_bot.tests.test\_smoke
2025-08-17T13:33:50.3990928Z 
2025-08-17T13:33:50.3991010Z <a id="alert_bot.tests"></a>
2025-08-17T13:33:50.3991143Z 
2025-08-17T13:33:50.3991214Z # alert\_bot.tests
2025-08-17T13:33:50.3991320Z 
2025-08-17T13:33:50.3991401Z <a id="alert_bot.alert_bot"></a>
2025-08-17T13:33:50.3991541Z 
2025-08-17T13:33:50.3991617Z # alert\_bot.alert\_bot
2025-08-17T13:33:50.3991735Z 
2025-08-17T13:33:50.3991808Z <a id="alert_bot.rules"></a>
2025-08-17T13:33:50.3991941Z 
2025-08-17T13:33:50.3992007Z # alert\_bot.rules
2025-08-17T13:33:50.3992108Z 
2025-08-17T13:33:50.3992175Z <a id="common"></a>
2025-08-17T13:33:50.3992283Z 
2025-08-17T13:33:50.3992343Z # common
2025-08-17T13:33:50.3992441Z 
2025-08-17T13:33:50.3992522Z <a id="common.dsn"></a>
2025-08-17T13:33:50.3992635Z 
2025-08-17T13:33:50.3992698Z # common.dsn
2025-08-17T13:33:50.3992798Z 
2025-08-17T13:33:50.3992881Z <a id="common.dsn.build_dsn"></a>
2025-08-17T13:33:50.3993027Z 
2025-08-17T13:33:50.3993090Z #### build\_dsn
2025-08-17T13:33:50.3993196Z 
2025-08-17T13:33:50.3993261Z ```python
2025-08-17T13:33:50.3993469Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:33:50.3993708Z ```
2025-08-17T13:33:50.3993791Z 
2025-08-17T13:33:50.3993920Z Return a Postgres DSN, validating required variables.
2025-08-17T13:33:50.3994134Z 
2025-08-17T13:33:50.3994329Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T13:33:50.3994777Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T13:33:50.3995195Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T13:33:50.3995506Z missing.
2025-08-17T13:33:50.3996213Z 
2025-08-17T13:33:50.3996306Z <a id="common.models_vendor"></a>
2025-08-17T13:33:50.3996470Z 
2025-08-17T13:33:50.3996551Z # common.models\_vendor
2025-08-17T13:33:50.3996673Z 
2025-08-17T13:33:50.3996765Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T13:33:50.3996941Z 
2025-08-17T13:33:50.3997007Z ## Vendor Objects
2025-08-17T13:33:50.3997118Z 
2025-08-17T13:33:50.3997182Z ```python
2025-08-17T13:33:50.3997344Z class Vendor(Base)
2025-08-17T13:33:50.3997514Z ```
2025-08-17T13:33:50.3997597Z 
2025-08-17T13:33:50.3997674Z Vendor of inventory items.
2025-08-17T13:33:50.3997806Z 
2025-08-17T13:33:50.3997917Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T13:33:50.3998099Z 
2025-08-17T13:33:50.3998172Z ## VendorPrice Objects
2025-08-17T13:33:50.3998301Z 
2025-08-17T13:33:50.3998364Z ```python
2025-08-17T13:33:50.3998520Z class VendorPrice(Base)
2025-08-17T13:33:50.3998700Z ```
2025-08-17T13:33:50.3998782Z 
2025-08-17T13:33:50.3998888Z Association table linking vendors to pricing.
2025-08-17T13:33:50.3999069Z 
2025-08-17T13:33:50.3999147Z <a id="common.db_url"></a>
2025-08-17T13:33:50.3999279Z 
2025-08-17T13:33:50.3999346Z # common.db\_url
2025-08-17T13:33:50.3999448Z 
2025-08-17T13:33:50.3999532Z <a id="common.db_url.build_url"></a>
2025-08-17T13:33:50.3999696Z 
2025-08-17T13:33:50.3999762Z #### build\_url
2025-08-17T13:33:50.3999864Z 
2025-08-17T13:33:50.3999933Z ```python
2025-08-17T13:33:50.4000105Z def build_url(async_: bool = True) -> str
2025-08-17T13:33:50.4000337Z ```
2025-08-17T13:33:50.4000416Z 
2025-08-17T13:33:50.4000514Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:33:50.4000696Z 
2025-08-17T13:33:50.4000776Z <a id="common.keepa"></a>
2025-08-17T13:33:50.4000905Z 
2025-08-17T13:33:50.4000971Z # common.keepa
2025-08-17T13:33:50.4001081Z 
2025-08-17T13:33:50.4001154Z <a id="common.llm"></a>
2025-08-17T13:33:50.4001271Z 
2025-08-17T13:33:50.4001340Z # common.llm
2025-08-17T13:33:50.4001433Z 
2025-08-17T13:33:50.4001513Z <a id="common.settings"></a>
2025-08-17T13:33:50.4001648Z 
2025-08-17T13:33:50.4001726Z # common.settings
2025-08-17T13:33:50.4002002Z 
2025-08-17T13:33:50.4002072Z <a id="common.db"></a>
2025-08-17T13:33:50.4002194Z 
2025-08-17T13:33:50.4002255Z # common.db
2025-08-17T13:33:50.4002343Z 
2025-08-17T13:33:50.4002439Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T13:33:50.4002607Z 
2025-08-17T13:33:50.4002681Z #### build\_sqlalchemy\_url
2025-08-17T13:33:50.4002813Z 
2025-08-17T13:33:50.4002879Z ```python
2025-08-17T13:33:50.4003046Z def build_sqlalchemy_url() -> str
2025-08-17T13:33:50.4003254Z ```
2025-08-17T13:33:50.4003334Z 
2025-08-17T13:33:50.4003427Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:33:50.4003600Z 
2025-08-17T13:33:50.4003686Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T13:33:50.4003848Z 
2025-08-17T13:33:50.4003926Z #### build\_asyncpg\_dsn
2025-08-17T13:33:50.4004047Z 
2025-08-17T13:33:50.4004109Z ```python
2025-08-17T13:33:50.4004281Z def build_asyncpg_dsn() -> str
2025-08-17T13:33:50.4004478Z ```
2025-08-17T13:33:50.4004570Z 
2025-08-17T13:33:50.4004701Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:33:50.4004912Z 
2025-08-17T13:33:50.4005000Z <a id="common.db.refresh_mvs"></a>
2025-08-17T13:33:50.4005157Z 
2025-08-17T13:33:50.4005222Z #### refresh\_mvs
2025-08-17T13:33:50.4005327Z 
2025-08-17T13:33:50.4005395Z ```python
2025-08-17T13:33:50.4005590Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:33:50.4006031Z ```
2025-08-17T13:33:50.4006137Z 
2025-08-17T13:33:50.4006275Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:33:50.4006497Z 
2025-08-17T13:33:50.4006573Z <a id="common.config"></a>
2025-08-17T13:33:50.4006700Z 
2025-08-17T13:33:50.4006766Z # common.config
2025-08-17T13:33:50.4006876Z 
2025-08-17T13:33:50.4006953Z <a id="common.base"></a>
2025-08-17T13:33:50.4007073Z 
2025-08-17T13:33:50.4007143Z # common.base
2025-08-17T13:33:50.4007237Z 
2025-08-17T13:33:50.4007315Z <a id="common.base.Base"></a>
2025-08-17T13:33:50.4007457Z 
2025-08-17T13:33:50.4007646Z ## Base Objects
2025-08-17T13:33:50.4007747Z 
2025-08-17T13:33:50.4007808Z ```python
2025-08-17T13:33:50.4007974Z class Base(DeclarativeBase)
2025-08-17T13:33:50.4008164Z ```
2025-08-17T13:33:50.4008248Z 
2025-08-17T13:33:50.4008330Z Base class for SQLAlchemy models.
2025-08-17T13:33:50.4008476Z 
2025-08-17T13:33:50.4008552Z <a id="repricer"></a>
2025-08-17T13:33:50.4008665Z 
2025-08-17T13:33:50.4008728Z # repricer
2025-08-17T13:33:50.4008823Z 
2025-08-17T13:33:50.4008910Z <a id="repricer.app.schemas"></a>
2025-08-17T13:33:50.4009057Z 
2025-08-17T13:33:50.4009131Z # repricer.app.schemas
2025-08-17T13:33:50.4009254Z 
2025-08-17T13:33:50.4009336Z <a id="repricer.app.deps"></a>
2025-08-17T13:33:50.4009508Z 
2025-08-17T13:33:50.4009641Z # repricer.app.deps
2025-08-17T13:33:50.4009833Z 
2025-08-17T13:33:50.4010029Z Placeholder module for Keepa / SP-API clients.
2025-08-17T13:33:50.4010352Z 
2025-08-17T13:33:50.4010488Z <a id="repricer.app.logic"></a>
2025-08-17T13:33:50.4010731Z 
2025-08-17T13:33:50.4010869Z # repricer.app.logic
2025-08-17T13:33:50.4011038Z 
2025-08-17T13:33:50.4011140Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T13:33:50.4011332Z 
2025-08-17T13:33:50.4011406Z #### MIN\_MARGIN
2025-08-17T13:33:50.4011510Z 
2025-08-17T13:33:50.4011574Z 15 % ROI
2025-08-17T13:33:50.4011659Z 
2025-08-17T13:33:50.4011772Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T13:33:50.4011955Z 
2025-08-17T13:33:50.4012082Z #### compute\_price
2025-08-17T13:33:50.4012198Z 
2025-08-17T13:33:50.4012262Z ```python
2025-08-17T13:33:50.4012517Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T13:33:50.4012816Z ```
2025-08-17T13:33:50.4012896Z 
2025-08-17T13:33:50.4013013Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T13:33:50.4013292Z Replace with real competitive logic later.
2025-08-17T13:33:50.4013470Z 
2025-08-17T13:33:50.4013555Z <a id="repricer.app.main"></a>
2025-08-17T13:33:50.4013696Z 
2025-08-17T13:33:50.4013767Z # repricer.app.main
2025-08-17T13:33:50.4013925Z 
2025-08-17T13:33:50.4014144Z <a id="repricer.app"></a>
2025-08-17T13:33:50.4014274Z 
2025-08-17T13:33:50.4014346Z # repricer.app
2025-08-17T13:33:50.4014445Z 
2025-08-17T13:33:50.4014538Z <a id="repricer.tests.test_imports"></a>
2025-08-17T13:33:50.4014709Z 
2025-08-17T13:33:50.4014788Z # repricer.tests.test\_imports
2025-08-17T13:33:50.4014923Z 
2025-08-17T13:33:50.4015009Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T13:33:50.4015175Z 
2025-08-17T13:33:50.4015255Z # repricer.tests.test\_smoke
2025-08-17T13:33:50.4015388Z 
2025-08-17T13:33:50.4015471Z <a id="repricer.tests"></a>
2025-08-17T13:33:50.4015599Z 
2025-08-17T13:33:50.4015665Z # repricer.tests
2025-08-17T13:33:50.4015772Z 
2025-08-17T13:33:50.4015956Z <a id="db"></a>
2025-08-17T13:33:50.4016057Z 
2025-08-17T13:33:50.4016115Z # db
2025-08-17T13:33:50.4016208Z 
2025-08-17T13:33:50.4016282Z <a id="db.utils.views"></a>
2025-08-17T13:33:50.4016408Z 
2025-08-17T13:33:50.4016477Z # db.utils.views
2025-08-17T13:33:50.4016577Z 
2025-08-17T13:33:50.4016672Z <a id="db.utils.views.replace_view"></a>
2025-08-17T13:33:50.4016841Z 
2025-08-17T13:33:50.4016915Z #### replace\_view
2025-08-17T13:33:50.4017016Z 
2025-08-17T13:33:50.4017078Z ```python
2025-08-17T13:33:50.4017276Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T13:33:50.4017515Z ```
2025-08-17T13:33:50.4017603Z 
2025-08-17T13:33:50.4017690Z Drop and recreate a SQL view atomically.
2025-08-17T13:33:50.4017849Z 
2025-08-17T13:33:50.4017924Z <a id="db.utils"></a>
2025-08-17T13:33:50.4018036Z 
2025-08-17T13:33:50.4018098Z # db.utils
2025-08-17T13:33:50.4018185Z 
2025-08-17T13:33:50.4018267Z <a id="price_importer"></a>
2025-08-17T13:33:50.4018393Z 
2025-08-17T13:33:50.4018459Z # price\_importer
2025-08-17T13:33:50.4018567Z 
2025-08-17T13:33:50.4018671Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T13:33:50.4018855Z 
2025-08-17T13:33:50.4018951Z # price\_importer.services\_common.dsn
2025-08-17T13:33:50.4019111Z 
2025-08-17T13:33:50.4019235Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T13:33:50.4019569Z 
2025-08-17T13:33:50.4019639Z #### build\_dsn
2025-08-17T13:33:50.4019738Z 
2025-08-17T13:33:50.4019800Z ```python
2025-08-17T13:33:50.4019976Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:33:50.4020192Z ```
2025-08-17T13:33:50.4020278Z 
2025-08-17T13:33:50.4020341Z Return safe DSN.
2025-08-17T13:33:50.4020444Z 
2025-08-17T13:33:50.4020800Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T13:33:50.4021002Z 
2025-08-17T13:33:50.4021131Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T13:33:50.4021344Z 
2025-08-17T13:33:50.4021456Z # price\_importer.services\_common.models\_vendor
2025-08-17T13:33:50.4021642Z 
2025-08-17T13:33:50.4021749Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T13:33:50.4021940Z 
2025-08-17T13:33:50.4022035Z # price\_importer.services\_common.db\_url
2025-08-17T13:33:50.4022205Z 
2025-08-17T13:33:50.4022342Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T13:33:50.4022566Z 
2025-08-17T13:33:50.4022646Z #### build\_url
2025-08-17T13:33:50.4022752Z 
2025-08-17T13:33:50.4022816Z ```python
2025-08-17T13:33:50.4022986Z def build_url(async_: bool = True) -> str
2025-08-17T13:33:50.4023216Z ```
2025-08-17T13:33:50.4023296Z 
2025-08-17T13:33:50.4023392Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:33:50.4023574Z 
2025-08-17T13:33:50.4023679Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T13:33:50.4023862Z 
2025-08-17T13:33:50.4023961Z # price\_importer.services\_common.keepa
2025-08-17T13:33:50.4024127Z 
2025-08-17T13:33:50.4024225Z <a id="price_importer.services_common.llm"></a>
2025-08-17T13:33:50.4024409Z 
2025-08-17T13:33:50.4024498Z # price\_importer.services\_common.llm
2025-08-17T13:33:50.4024658Z 
2025-08-17T13:33:50.4024777Z <a id="price_importer.services_common.settings"></a>
2025-08-17T13:33:50.4024967Z 
2025-08-17T13:33:50.4025065Z # price\_importer.services\_common.settings
2025-08-17T13:33:50.4025236Z 
2025-08-17T13:33:50.4025348Z <a id="price_importer.services_common.db"></a>
2025-08-17T13:33:50.4025642Z 
2025-08-17T13:33:50.4025731Z # price\_importer.services\_common.db
2025-08-17T13:33:50.4026078Z 
2025-08-17T13:33:50.4026256Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T13:33:50.4026499Z 
2025-08-17T13:33:50.4026582Z #### build\_sqlalchemy\_url
2025-08-17T13:33:50.4026713Z 
2025-08-17T13:33:50.4026778Z ```python
2025-08-17T13:33:50.4026950Z def build_sqlalchemy_url() -> str
2025-08-17T13:33:50.4027152Z ```
2025-08-17T13:33:50.4027235Z 
2025-08-17T13:33:50.4027326Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:33:50.4027493Z 
2025-08-17T13:33:50.4027636Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T13:33:50.4027867Z 
2025-08-17T13:33:50.4027939Z #### build\_asyncpg\_dsn
2025-08-17T13:33:50.4028062Z 
2025-08-17T13:33:50.4028134Z ```python
2025-08-17T13:33:50.4028298Z def build_asyncpg_dsn() -> str
2025-08-17T13:33:50.4028496Z ```
2025-08-17T13:33:50.4028584Z 
2025-08-17T13:33:50.4028712Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:33:50.4028927Z 
2025-08-17T13:33:50.4029051Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T13:33:50.4029256Z 
2025-08-17T13:33:50.4029326Z #### refresh\_mvs
2025-08-17T13:33:50.4029429Z 
2025-08-17T13:33:50.4029489Z ```python
2025-08-17T13:33:50.4029684Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:33:50.4029929Z ```
2025-08-17T13:33:50.4030008Z 
2025-08-17T13:33:50.4030147Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:33:50.4030357Z 
2025-08-17T13:33:50.4030450Z <a id="price_importer.services_common"></a>
2025-08-17T13:33:50.4030628Z 
2025-08-17T13:33:50.4030714Z # price\_importer.services\_common
2025-08-17T13:33:50.4030865Z 
2025-08-17T13:33:50.4030973Z <a id="price_importer.services_common.base"></a>
2025-08-17T13:33:50.4031156Z 
2025-08-17T13:33:50.4031247Z # price\_importer.services\_common.base
2025-08-17T13:33:50.4031540Z 
2025-08-17T13:33:50.4031628Z <a id="price_importer.normaliser"></a>
2025-08-17T13:33:50.4031791Z 
2025-08-17T13:33:50.4031874Z # price\_importer.normaliser
2025-08-17T13:33:50.4032015Z 
2025-08-17T13:33:50.4032116Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T13:33:50.4032295Z 
2025-08-17T13:33:50.4032390Z # price\_importer.common.models\_vendor
2025-08-17T13:33:50.4032550Z 
2025-08-17T13:33:50.4032638Z <a id="price_importer.common.db_url"></a>
2025-08-17T13:33:50.4032811Z 
2025-08-17T13:33:50.4032894Z # price\_importer.common.db\_url
2025-08-17T13:33:50.4033039Z 
2025-08-17T13:33:50.4033144Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T13:33:50.4033333Z 
2025-08-17T13:33:50.4033396Z #### make\_dsn
2025-08-17T13:33:50.4033492Z 
2025-08-17T13:33:50.4033558Z ```python
2025-08-17T13:33:50.4033726Z def make_dsn(async_: bool = False) -> str
2025-08-17T13:33:50.4033949Z ```
2025-08-17T13:33:50.4034028Z 
2025-08-17T13:33:50.4034145Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T13:33:50.4034351Z 
2025-08-17T13:33:50.4034462Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T13:33:50.4034647Z 
2025-08-17T13:33:50.4034709Z #### build\_url
2025-08-17T13:33:50.4034813Z 
2025-08-17T13:33:50.4034874Z ```python
2025-08-17T13:33:50.4035053Z def build_url(async_: bool = False) -> str
2025-08-17T13:33:50.4035273Z ```
2025-08-17T13:33:50.4035351Z 
2025-08-17T13:33:50.4035477Z Return Postgres DSN built from environment variables.
2025-08-17T13:33:50.4035670Z 
2025-08-17T13:33:50.4035754Z <a id="price_importer.common"></a>
2025-08-17T13:33:50.4036025Z 
2025-08-17T13:33:50.4036103Z # price\_importer.common
2025-08-17T13:33:50.4036228Z 
2025-08-17T13:33:50.4036323Z <a id="price_importer.common.base"></a>
2025-08-17T13:33:50.4036484Z 
2025-08-17T13:33:50.4036566Z # price\_importer.common.base
2025-08-17T13:33:50.4036704Z 
2025-08-17T13:33:50.4036809Z <a id="price_importer.tests.conftest"></a>
2025-08-17T13:33:50.4036978Z 
2025-08-17T13:33:50.4037060Z # price\_importer.tests.conftest
2025-08-17T13:33:50.4037388Z 
2025-08-17T13:33:50.4037494Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T13:33:50.4037672Z 
2025-08-17T13:33:50.4037763Z # price\_importer.tests.test\_reader
2025-08-17T13:33:50.4037921Z 
2025-08-17T13:33:50.4038023Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T13:33:50.4038199Z 
2025-08-17T13:33:50.4038295Z # price\_importer.tests.test\_imports
2025-08-17T13:33:50.4038459Z 
2025-08-17T13:33:50.4038552Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T13:33:50.4038727Z 
2025-08-17T13:33:50.4038811Z # price\_importer.tests.test\_smoke
2025-08-17T13:33:50.4038964Z 
2025-08-17T13:33:50.4039073Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T13:33:50.4039255Z 
2025-08-17T13:33:50.4039346Z # price\_importer.tests.test\_normaliser
2025-08-17T13:33:50.4039514Z 
2025-08-17T13:33:50.4039603Z <a id="price_importer.tests"></a>
2025-08-17T13:33:50.4039749Z 
2025-08-17T13:33:50.4039823Z # price\_importer.tests
2025-08-17T13:33:50.4039951Z 
2025-08-17T13:33:50.4040039Z <a id="price_importer.reader"></a>
2025-08-17T13:33:50.4040186Z 
2025-08-17T13:33:50.4040267Z # price\_importer.reader
2025-08-17T13:33:50.4040389Z 
2025-08-17T13:33:50.4040485Z <a id="price_importer.reader.load_file"></a>
2025-08-17T13:33:50.4040655Z 
2025-08-17T13:33:50.4040723Z #### load\_file
2025-08-17T13:33:50.4040822Z 
2025-08-17T13:33:50.4040883Z ```python
2025-08-17T13:33:50.4041060Z def load_file(path: str | Path) -> Any
2025-08-17T13:33:50.4041273Z ```
2025-08-17T13:33:50.4041359Z 
2025-08-17T13:33:50.4041446Z Return DataFrame from CSV or Excel file.
2025-08-17T13:33:50.4041608Z 
2025-08-17T13:33:50.4041715Z Raises RuntimeError if pandas is unavailable.
2025-08-17T13:33:50.4041896Z 
2025-08-17T13:33:50.4041985Z <a id="price_importer.repository"></a>
2025-08-17T13:33:50.4042145Z 
2025-08-17T13:33:50.4042233Z # price\_importer.repository
2025-08-17T13:33:50.4042369Z 
2025-08-17T13:33:50.4042453Z <a id="price_importer.import"></a>
2025-08-17T13:33:50.4042605Z 
2025-08-17T13:33:50.4042800Z # price\_importer.import
2025-08-17T13:33:50.4042927Z 
2025-08-17T13:33:50.4043003Z <a id="fees_h10"></a>
2025-08-17T13:33:50.4043114Z 
2025-08-17T13:33:50.4043176Z # fees\_h10
2025-08-17T13:33:50.4043266Z 
2025-08-17T13:33:50.4043345Z <a id="fees_h10.worker"></a>
2025-08-17T13:33:50.4043473Z 
2025-08-17T13:33:50.4043538Z # fees\_h10.worker
2025-08-17T13:33:50.4043644Z 
2025-08-17T13:33:50.4043739Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T13:33:50.4043911Z 
2025-08-17T13:33:50.4043991Z #### list\_active\_asins
2025-08-17T13:33:50.4044108Z 
2025-08-17T13:33:50.4044170Z ```python
2025-08-17T13:33:50.4044341Z def list_active_asins() -> list[str]
2025-08-17T13:33:50.4044547Z ```
2025-08-17T13:33:50.4044626Z 
2025-08-17T13:33:50.4044742Z Return known ASINs or an empty list if unavailable.
2025-08-17T13:33:50.4044934Z 
2025-08-17T13:33:50.4045015Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T13:33:50.4045175Z 
2025-08-17T13:33:50.4045252Z # fees\_h10.tests.test\_smoke
2025-08-17T13:33:50.4045391Z 
2025-08-17T13:33:50.4045475Z <a id="fees_h10.tests"></a>
2025-08-17T13:33:50.4045601Z 
2025-08-17T13:33:50.4045665Z # fees\_h10.tests
2025-08-17T13:33:50.4045764Z 
2025-08-17T13:33:50.4045942Z <a id="fees_h10.client"></a>
2025-08-17T13:33:50.4046074Z 
2025-08-17T13:33:50.4046139Z # fees\_h10.client
2025-08-17T13:33:50.4046245Z 
2025-08-17T13:33:50.4046324Z <a id="fees_h10.repository"></a>
2025-08-17T13:33:50.4046463Z 
2025-08-17T13:33:50.4046541Z # fees\_h10.repository
2025-08-17T13:33:50.4046654Z 
2025-08-17T13:33:50.4046722Z <a id="emailer"></a>
2025-08-17T13:33:50.4046832Z 
2025-08-17T13:33:50.4046901Z # emailer
2025-08-17T13:33:50.4046987Z 
2025-08-17T13:33:50.4047085Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T13:33:50.4047267Z 
2025-08-17T13:33:50.4047353Z # emailer.tests.test\_import\_emailer
2025-08-17T13:33:50.4047508Z 
2025-08-17T13:33:50.4047592Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T13:33:50.4047749Z 
2025-08-17T13:33:50.4047826Z # emailer.tests.test\_smoke
2025-08-17T13:33:50.4048078Z 
2025-08-17T13:33:50.4048161Z <a id="emailer.tests"></a>
2025-08-17T13:33:50.4048289Z 
2025-08-17T13:33:50.4048355Z # emailer.tests
2025-08-17T13:33:50.4048461Z 
2025-08-17T13:33:50.4048552Z <a id="emailer.generate_body"></a>
2025-08-17T13:33:50.4048699Z 
2025-08-17T13:33:50.4048775Z # emailer.generate\_body
2025-08-17T13:33:50.4048907Z 
2025-08-17T13:33:50.4048977Z <a id="llm_server"></a>
2025-08-17T13:33:50.4049092Z 
2025-08-17T13:33:50.4049160Z # llm\_server
2025-08-17T13:33:50.4049254Z 
2025-08-17T13:33:50.4049328Z <a id="llm_server.app"></a>
2025-08-17T13:33:50.4049460Z 
2025-08-17T13:33:50.4049526Z # llm\_server.app
2025-08-17T13:33:50.4049627Z 
