2025-08-17T19:35:13.4799523Z ##[group]Run pydoc-markdown
2025-08-17T19:35:13.4799930Z [36;1mpydoc-markdown[0m
2025-08-17T19:35:13.4843967Z shell: /usr/bin/bash -e {0}
2025-08-17T19:35:13.4844341Z env:
2025-08-17T19:35:13.4844746Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:35:13.4845458Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T19:35:13.4846151Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:35:13.4846767Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:35:13.4847375Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T19:35:13.4847995Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T19:35:13.4848516Z ##[endgroup]
2025-08-17T19:35:13.9191392Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T19:35:13.9192686Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T19:35:13.9193192Z In "pydoc-markdown.yml"
2025-08-17T19:35:13.9193670Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T19:35:13.9194421Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T19:35:13.9195255Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T19:35:13.9195863Z 
2025-08-17T19:35:14.1753187Z <a id="__init__"></a>
2025-08-17T19:35:14.1762055Z 
2025-08-17T19:35:14.1762330Z # \_\_init\_\_
2025-08-17T19:35:14.1762683Z 
2025-08-17T19:35:14.1763050Z <a id="api"></a>
2025-08-17T19:35:14.1763399Z 
2025-08-17T19:35:14.1763639Z # api
2025-08-17T19:35:14.1763996Z 
2025-08-17T19:35:14.1764297Z <a id="api.tests.test_llm"></a>
2025-08-17T19:35:14.1764846Z 
2025-08-17T19:35:14.1765118Z # api.tests.test\_llm
2025-08-17T19:35:14.1765573Z 
2025-08-17T19:35:14.1765903Z <a id="api.tests.test_imports"></a>
2025-08-17T19:35:14.1766515Z 
2025-08-17T19:35:14.1766805Z # api.tests.test\_imports
2025-08-17T19:35:14.1767308Z 
2025-08-17T19:35:14.1767626Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T19:35:14.1768566Z 
2025-08-17T19:35:14.1768859Z # api.tests.test\_entrypoint
2025-08-17T19:35:14.1769415Z 
2025-08-17T19:35:14.1769718Z <a id="api.tests.test_health"></a>
2025-08-17T19:35:14.1770280Z 
2025-08-17T19:35:14.1770564Z # api.tests.test\_health
2025-08-17T19:35:14.1771027Z 
2025-08-17T19:35:14.1771324Z <a id="api.migrations.env"></a>
2025-08-17T19:35:14.1772053Z 
2025-08-17T19:35:14.1772302Z # api.migrations.env
2025-08-17T19:35:14.1772635Z 
2025-08-17T19:35:14.1772861Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T19:35:14.1773254Z 
2025-08-17T19:35:14.1773450Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T19:35:14.1773796Z 
2025-08-17T19:35:14.1774000Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T19:35:14.1774355Z 
2025-08-17T19:35:14.1774525Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T19:35:14.1774851Z 
2025-08-17T19:35:14.1775134Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T19:35:14.1775576Z 
2025-08-17T19:35:14.1775830Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T19:35:14.1776249Z 
2025-08-17T19:35:14.1776470Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T19:35:14.1776839Z 
2025-08-17T19:35:14.1777037Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T19:35:14.1777377Z 
2025-08-17T19:35:14.1777592Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T19:35:14.1777966Z 
2025-08-17T19:35:14.1778153Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T19:35:14.1778492Z 
2025-08-17T19:35:14.1778725Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T19:35:14.1779106Z 
2025-08-17T19:35:14.1779303Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T19:35:14.1779653Z 
2025-08-17T19:35:14.1779870Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T19:35:14.1780233Z 
2025-08-17T19:35:14.1780425Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T19:35:14.1780774Z 
2025-08-17T19:35:14.1780993Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T19:35:14.1781873Z 
2025-08-17T19:35:14.1782060Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T19:35:14.1782368Z 
2025-08-17T19:35:14.1782590Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-17T19:35:14.1782955Z 
2025-08-17T19:35:14.1783147Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-17T19:35:14.1783473Z 
2025-08-17T19:35:14.1783670Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T19:35:14.1784008Z 
2025-08-17T19:35:14.1784181Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T19:35:14.1784489Z 
2025-08-17T19:35:14.1784667Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T19:35:14.1784978Z 
2025-08-17T19:35:14.1785128Z # api.migrations.versions.0001\_baseline
2025-08-17T19:35:14.1785416Z 
2025-08-17T19:35:14.1785558Z <a id="api.migrations.versions"></a>
2025-08-17T19:35:14.1785821Z 
2025-08-17T19:35:14.1785950Z # api.migrations.versions
2025-08-17T19:35:14.1786173Z 
2025-08-17T19:35:14.1786305Z <a id="api.migrations"></a>
2025-08-17T19:35:14.1786520Z 
2025-08-17T19:35:14.1786637Z # api.migrations
2025-08-17T19:35:14.1786809Z 
2025-08-17T19:35:14.1786919Z <a id="api.db"></a>
2025-08-17T19:35:14.1787095Z 
2025-08-17T19:35:14.1787195Z # api.db
2025-08-17T19:35:14.1787336Z 
2025-08-17T19:35:14.1787461Z <a id="api.routes.stats"></a>
2025-08-17T19:35:14.1787692Z 
2025-08-17T19:35:14.1787803Z # api.routes.stats
2025-08-17T19:35:14.1787974Z 
2025-08-17T19:35:14.1788114Z <a id="api.routes.stats.kpi"></a>
2025-08-17T19:35:14.1788358Z 
2025-08-17T19:35:14.1788458Z #### kpi
2025-08-17T19:35:14.1788598Z 
2025-08-17T19:35:14.1788707Z ```python
2025-08-17T19:35:14.1788971Z @router.get("/stats/kpi")
2025-08-17T19:35:14.1789337Z def kpi() -> List[Dict[str, int]]
2025-08-17T19:35:14.1789668Z ```
2025-08-17T19:35:14.1789808Z 
2025-08-17T19:35:14.1789935Z Return KPI metrics (mock).
2025-08-17T19:35:14.1790144Z 
2025-08-17T19:35:14.1790308Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T19:35:14.1790740Z 
2025-08-17T19:35:14.1790855Z #### roi\_by\_vendor
2025-08-17T19:35:14.1791032Z 
2025-08-17T19:35:14.1791140Z ```python
2025-08-17T19:35:14.1791416Z @router.get("/stats/roi_by_vendor")
2025-08-17T19:35:14.1792095Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T19:35:14.1792458Z ```
2025-08-17T19:35:14.1792583Z 
2025-08-17T19:35:14.1792699Z Return ROI percent by vendor.
2025-08-17T19:35:14.1792901Z 
2025-08-17T19:35:14.1793041Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T19:35:14.1793285Z 
2025-08-17T19:35:14.1793381Z #### roi\_trend
2025-08-17T19:35:14.1793524Z 
2025-08-17T19:35:14.1793622Z ```python
2025-08-17T19:35:14.1793862Z @router.get("/stats/roi_trend")
2025-08-17T19:35:14.1794211Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T19:35:14.1794555Z ```
2025-08-17T19:35:14.1794681Z 
2025-08-17T19:35:14.1794788Z Return 30-day ROI trend.
2025-08-17T19:35:14.1795067Z 
2025-08-17T19:35:14.1795179Z <a id="api.routes.roi"></a>
2025-08-17T19:35:14.1795425Z 
2025-08-17T19:35:14.1795528Z # api.routes.roi
2025-08-17T19:35:14.1795697Z 
2025-08-17T19:35:14.1795819Z <a id="api.routes.health"></a>
2025-08-17T19:35:14.1796022Z 
2025-08-17T19:35:14.1796131Z # api.routes.health
2025-08-17T19:35:14.1796289Z 
2025-08-17T19:35:14.1796419Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T19:35:14.1796660Z 
2025-08-17T19:35:14.1796760Z #### MAX\_SKEW
2025-08-17T19:35:14.1796902Z 
2025-08-17T19:35:14.1796992Z seconds
2025-08-17T19:35:14.1797122Z 
2025-08-17T19:35:14.1797254Z <a id="api.routes.health.health"></a>
2025-08-17T19:35:14.1797494Z 
2025-08-17T19:35:14.1797592Z #### health
2025-08-17T19:35:14.1797721Z 
2025-08-17T19:35:14.1797810Z ```python
2025-08-17T19:35:14.1798087Z @router.get("/health", include_in_schema=False)
2025-08-17T19:35:14.1798634Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T19:35:14.1799142Z ```
2025-08-17T19:35:14.1799265Z 
2025-08-17T19:35:14.1799429Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T19:35:14.1799732Z 
2025-08-17T19:35:14.1800027Z <a id="api.routes.repository"></a>
2025-08-17T19:35:14.1800379Z 
2025-08-17T19:35:14.1800553Z # api.routes.repository
2025-08-17T19:35:14.1800739Z 
2025-08-17T19:35:14.1800847Z <a id="api.routes"></a>
2025-08-17T19:35:14.1801017Z 
2025-08-17T19:35:14.1801123Z # api.routes
2025-08-17T19:35:14.1801262Z 
2025-08-17T19:35:14.1801376Z <a id="api.models.fee"></a>
2025-08-17T19:35:14.1801766Z 
2025-08-17T19:35:14.1801868Z # api.models.fee
2025-08-17T19:35:14.1802019Z 
2025-08-17T19:35:14.1802113Z <a id="api.models"></a>
2025-08-17T19:35:14.1802274Z 
2025-08-17T19:35:14.1802358Z # api.models
2025-08-17T19:35:14.1802484Z 
2025-08-17T19:35:14.1802598Z <a id="api.roi_repository"></a>
2025-08-17T19:35:14.1802784Z 
2025-08-17T19:35:14.1802876Z # api.roi\_repository
2025-08-17T19:35:14.1803036Z 
2025-08-17T19:35:14.1803128Z <a id="api.main"></a>
2025-08-17T19:35:14.1803276Z 
2025-08-17T19:35:14.1803362Z # api.main
2025-08-17T19:35:14.1803490Z 
2025-08-17T19:35:14.1803597Z <a id="api.main.ready"></a>
2025-08-17T19:35:14.1803776Z 
2025-08-17T19:35:14.1803863Z #### ready
2025-08-17T19:35:14.1803978Z 
2025-08-17T19:35:14.1804063Z ```python
2025-08-17T19:35:14.1804409Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T19:35:14.1804981Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T19:35:14.1805452Z                                                                       str]
2025-08-17T19:35:14.1805754Z ```
2025-08-17T19:35:14.1805868Z 
2025-08-17T19:35:14.1806013Z Return 200 only when migrations are at head.
2025-08-17T19:35:14.1806252Z 
2025-08-17T19:35:14.1806348Z <a id="api.config"></a>
2025-08-17T19:35:14.1806507Z 
2025-08-17T19:35:14.1806595Z # api.config
2025-08-17T19:35:14.1806729Z 
2025-08-17T19:35:14.1806819Z <a id="etl"></a>
2025-08-17T19:35:14.1806954Z 
2025-08-17T19:35:14.1807038Z # etl
2025-08-17T19:35:14.1807150Z 
2025-08-17T19:35:14.1807257Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T19:35:14.1807596Z 
2025-08-17T19:35:14.1807699Z # etl.fba\_fee\_ingestor
2025-08-17T19:35:14.1807862Z 
2025-08-17T19:35:14.1807967Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T19:35:14.1808170Z 
2025-08-17T19:35:14.1808265Z # etl.sp\_fees\_ingestor
2025-08-17T19:35:14.1808427Z 
2025-08-17T19:35:14.1808536Z <a id="etl.keepa_ingestor"></a>
2025-08-17T19:35:14.1808720Z 
2025-08-17T19:35:14.1808814Z # etl.keepa\_ingestor
2025-08-17T19:35:14.1808965Z 
2025-08-17T19:35:14.1809062Z <a id="etl.db"></a>
2025-08-17T19:35:14.1809201Z 
2025-08-17T19:35:14.1809283Z # etl.db
2025-08-17T19:35:14.1809402Z 
2025-08-17T19:35:14.1809511Z <a id="etl.dialects.schemas"></a>
2025-08-17T19:35:14.1809706Z 
2025-08-17T19:35:14.1809803Z # etl.dialects.schemas
2025-08-17T19:35:14.1809965Z 
2025-08-17T19:35:14.1810101Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T19:35:14.1810345Z 
2025-08-17T19:35:14.1810466Z # etl.dialects.amazon\_reimbursements
2025-08-17T19:35:14.1810679Z 
2025-08-17T19:35:14.1810795Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T19:35:14.1811033Z 
2025-08-17T19:35:14.1811138Z # etl.dialects.amazon\_returns
2025-08-17T19:35:14.1811323Z 
2025-08-17T19:35:14.1811420Z <a id="etl.dialects"></a>
2025-08-17T19:35:14.1811796Z 
2025-08-17T19:35:14.1811883Z # etl.dialects
2025-08-17T19:35:14.1812017Z 
2025-08-17T19:35:14.1812112Z <a id="ingest"></a>
2025-08-17T19:35:14.1812250Z 
2025-08-17T19:35:14.1812329Z # ingest
2025-08-17T19:35:14.1812449Z 
2025-08-17T19:35:14.1812556Z <a id="ingest.maintenance"></a>
2025-08-17T19:35:14.1812742Z 
2025-08-17T19:35:14.1812835Z # ingest.maintenance
2025-08-17T19:35:14.1812990Z 
2025-08-17T19:35:14.1813095Z <a id="ingest.copy_loader"></a>
2025-08-17T19:35:14.1813278Z 
2025-08-17T19:35:14.1813378Z # ingest.copy\_loader
2025-08-17T19:35:14.1813527Z 
2025-08-17T19:35:14.1813661Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T19:35:14.1813913Z 
2025-08-17T19:35:14.1814009Z #### copy\_df\_via\_temp
2025-08-17T19:35:14.1814168Z 
2025-08-17T19:35:14.1814251Z ```python
2025-08-17T19:35:14.1814495Z def copy_df_via_temp(engine: Engine,
2025-08-17T19:35:14.1814933Z                      df: pd.DataFrame,
2025-08-17T19:35:14.1815245Z                      target_table: str,
2025-08-17T19:35:14.1815537Z                      *,
2025-08-17T19:35:14.1815807Z                      target_schema: Optional[str] = None,
2025-08-17T19:35:14.1816154Z                      columns: Sequence[str],
2025-08-17T19:35:14.1816511Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T19:35:14.1816889Z                      analyze_after: bool = False,
2025-08-17T19:35:14.1817231Z                      connection: Any | None = None) -> int
2025-08-17T19:35:14.1817552Z ```
2025-08-17T19:35:14.1817662Z 
2025-08-17T19:35:14.1817868Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T19:35:14.1818179Z 
2025-08-17T19:35:14.1818294Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T19:35:14.1818504Z 
2025-08-17T19:35:14.1818617Z # ingest.tests.test\_smoke
2025-08-17T19:35:14.1818794Z 
2025-08-17T19:35:14.1818903Z <a id="ingest.tests"></a>
2025-08-17T19:35:14.1819081Z 
2025-08-17T19:35:14.1819169Z # ingest.tests
2025-08-17T19:35:14.1819304Z 
2025-08-17T19:35:14.1819422Z <a id="ingest.upload_router"></a>
2025-08-17T19:35:14.1819618Z 
2025-08-17T19:35:14.1819716Z # ingest.upload\_router
2025-08-17T19:35:14.1819875Z 
2025-08-17T19:35:14.1819990Z <a id="ingest.email_watcher"></a>
2025-08-17T19:35:14.1820186Z 
2025-08-17T19:35:14.1820281Z # ingest.email\_watcher
2025-08-17T19:35:14.1820444Z 
2025-08-17T19:35:14.1820558Z <a id="ingest.email_watcher.main"></a>
2025-08-17T19:35:14.1820773Z 
2025-08-17T19:35:14.1820866Z #### main
2025-08-17T19:35:14.1820986Z 
2025-08-17T19:35:14.1821069Z ```python
2025-08-17T19:35:14.1821300Z def main() -> dict[str, str]
2025-08-17T19:35:14.1821794Z ```
2025-08-17T19:35:14.1821916Z 
2025-08-17T19:35:14.1822107Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T19:35:14.1822393Z 
2025-08-17T19:35:14.1822554Z Returns {"status": "success"} when processing completes.
2025-08-17T19:35:14.1822962Z 
2025-08-17T19:35:14.1823058Z <a id="ingest.tasks"></a>
2025-08-17T19:35:14.1823220Z 
2025-08-17T19:35:14.1823312Z # ingest.tasks
2025-08-17T19:35:14.1823438Z 
2025-08-17T19:35:14.1823556Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T19:35:14.1823772Z 
2025-08-17T19:35:14.1823867Z #### task\_import\_file
2025-08-17T19:35:14.1824012Z 
2025-08-17T19:35:14.1824090Z ```python
2025-08-17T19:35:14.1824352Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T19:35:14.1824696Z def task_import_file(self,
2025-08-17T19:35:14.1824944Z                      uri: str,
2025-08-17T19:35:14.1825217Z                      report_type: Optional[str] = None,
2025-08-17T19:35:14.1825549Z                      force: bool = False) -> Dict[str, Any]
2025-08-17T19:35:14.1825844Z ```
2025-08-17T19:35:14.1825943Z 
2025-08-17T19:35:14.1826100Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T19:35:14.1826365Z 
2025-08-17T19:35:14.1826470Z <a id="ingest.celery_app"></a>
2025-08-17T19:35:14.1826646Z 
2025-08-17T19:35:14.1826734Z # ingest.celery\_app
2025-08-17T19:35:14.1826879Z 
2025-08-17T19:35:14.1826978Z <a id="ingest.ingest_router"></a>
2025-08-17T19:35:14.1827159Z 
2025-08-17T19:35:14.1827253Z # ingest.ingest\_router
2025-08-17T19:35:14.1827398Z 
2025-08-17T19:35:14.1827489Z <a id="logistics_etl"></a>
2025-08-17T19:35:14.1827650Z 
2025-08-17T19:35:14.1827732Z # logistics\_etl
2025-08-17T19:35:14.1827858Z 
2025-08-17T19:35:14.1827950Z Daily logistics ETL job.
2025-08-17T19:35:14.1828105Z 
2025-08-17T19:35:14.1828205Z <a id="logistics_etl.__main__"></a>
2025-08-17T19:35:14.1828390Z 
2025-08-17T19:35:14.1828493Z # logistics\_etl.\_\_main\_\_
2025-08-17T19:35:14.1828658Z 
2025-08-17T19:35:14.1828754Z <a id="logistics_etl.dsn"></a>
2025-08-17T19:35:14.1828919Z 
2025-08-17T19:35:14.1829010Z # logistics\_etl.dsn
2025-08-17T19:35:14.1829145Z 
2025-08-17T19:35:14.1829285Z Local DSN builder to avoid cross-service dependency.
2025-08-17T19:35:14.1829548Z 
2025-08-17T19:35:14.1829780Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T19:35:14.1829984Z 
2025-08-17T19:35:14.1830069Z #### build\_dsn
2025-08-17T19:35:14.1830191Z 
2025-08-17T19:35:14.1830268Z ```python
2025-08-17T19:35:14.1830486Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:35:14.1830758Z ```
2025-08-17T19:35:14.1830863Z 
2025-08-17T19:35:14.1831031Z Return a Postgres DSN assembled from environment variables.
2025-08-17T19:35:14.1831307Z 
2025-08-17T19:35:14.1831703Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T19:35:14.1832215Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T19:35:14.1832643Z error when any required variable is missing.
2025-08-17T19:35:14.1832861Z 
2025-08-17T19:35:14.1832975Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T19:35:14.1833191Z 
2025-08-17T19:35:14.1833295Z # logistics\_etl.tests.conftest
2025-08-17T19:35:14.1833471Z 
2025-08-17T19:35:14.1833595Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T19:35:14.1833849Z 
2025-08-17T19:35:14.1833956Z # logistics\_etl.tests.test\_repository
2025-08-17T19:35:14.1834155Z 
2025-08-17T19:35:14.1834273Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T19:35:14.1834482Z 
2025-08-17T19:35:14.1834581Z # logistics\_etl.tests.test\_cron
2025-08-17T19:35:14.1834786Z 
2025-08-17T19:35:14.1834902Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T19:35:14.1835128Z 
2025-08-17T19:35:14.1835234Z # logistics\_etl.tests.test\_imports
2025-08-17T19:35:14.1835425Z 
2025-08-17T19:35:14.1835545Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T19:35:14.1835755Z 
2025-08-17T19:35:14.1835856Z # logistics\_etl.tests.test\_smoke
2025-08-17T19:35:14.1836044Z 
2025-08-17T19:35:14.1836165Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T19:35:14.1836377Z 
2025-08-17T19:35:14.1836476Z # logistics\_etl.tests.test\_client
2025-08-17T19:35:14.1836669Z 
2025-08-17T19:35:14.1836769Z <a id="logistics_etl.tests"></a>
2025-08-17T19:35:14.1837078Z 
2025-08-17T19:35:14.1837179Z # logistics\_etl.tests
2025-08-17T19:35:14.1837325Z 
2025-08-17T19:35:14.1837420Z <a id="logistics_etl.flow"></a>
2025-08-17T19:35:14.1837590Z 
2025-08-17T19:35:14.1837686Z # logistics\_etl.flow
2025-08-17T19:35:14.1837828Z 
2025-08-17T19:35:14.1837927Z <a id="logistics_etl.client"></a>
2025-08-17T19:35:14.1838118Z 
2025-08-17T19:35:14.1838208Z # logistics\_etl.client
2025-08-17T19:35:14.1838353Z 
2025-08-17T19:35:14.1838448Z <a id="logistics_etl.cron"></a>
2025-08-17T19:35:14.1838627Z 
2025-08-17T19:35:14.1838714Z # logistics\_etl.cron
2025-08-17T19:35:14.1838852Z 
2025-08-17T19:35:14.1838956Z <a id="logistics_etl.db"></a>
2025-08-17T19:35:14.1839124Z 
2025-08-17T19:35:14.1839209Z # logistics\_etl.db
2025-08-17T19:35:14.1839349Z 
2025-08-17T19:35:14.1839454Z <a id="logistics_etl.repository"></a>
2025-08-17T19:35:14.1839652Z 
2025-08-17T19:35:14.1839746Z # logistics\_etl.repository
2025-08-17T19:35:14.1839917Z 
2025-08-17T19:35:14.1840003Z <a id="alert_bot"></a>
2025-08-17T19:35:14.1840153Z 
2025-08-17T19:35:14.1840246Z # alert\_bot
2025-08-17T19:35:14.1840360Z 
2025-08-17T19:35:14.1840464Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T19:35:14.1840672Z 
2025-08-17T19:35:14.1840769Z # alert\_bot.tests.test\_smoke
2025-08-17T19:35:14.1840940Z 
2025-08-17T19:35:14.1841032Z <a id="alert_bot.tests"></a>
2025-08-17T19:35:14.1841202Z 
2025-08-17T19:35:14.1841287Z # alert\_bot.tests
2025-08-17T19:35:14.1841417Z 
2025-08-17T19:35:14.1841724Z <a id="alert_bot.alert_bot"></a>
2025-08-17T19:35:14.1841912Z 
2025-08-17T19:35:14.1842001Z # alert\_bot.alert\_bot
2025-08-17T19:35:14.1842145Z 
2025-08-17T19:35:14.1842246Z <a id="alert_bot.rules"></a>
2025-08-17T19:35:14.1842408Z 
2025-08-17T19:35:14.1842487Z # alert\_bot.rules
2025-08-17T19:35:14.1842615Z 
2025-08-17T19:35:14.1842691Z <a id="common"></a>
2025-08-17T19:35:14.1842811Z 
2025-08-17T19:35:14.1842887Z # common
2025-08-17T19:35:14.1842988Z 
2025-08-17T19:35:14.1843070Z <a id="common.dsn"></a>
2025-08-17T19:35:14.1843209Z 
2025-08-17T19:35:14.1843290Z # common.dsn
2025-08-17T19:35:14.1843531Z 
2025-08-17T19:35:14.1843627Z <a id="common.dsn.build_dsn"></a>
2025-08-17T19:35:14.1843807Z 
2025-08-17T19:35:14.1843883Z #### build\_dsn
2025-08-17T19:35:14.1843999Z 
2025-08-17T19:35:14.1844072Z ```python
2025-08-17T19:35:14.1844280Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:35:14.1844564Z ```
2025-08-17T19:35:14.1844657Z 
2025-08-17T19:35:14.1844794Z Return a Postgres DSN, validating required variables.
2025-08-17T19:35:14.1845037Z 
2025-08-17T19:35:14.1845249Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T19:35:14.1845754Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T19:35:14.1846239Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T19:35:14.1846605Z missing.
2025-08-17T19:35:14.1846706Z 
2025-08-17T19:35:14.1846799Z <a id="common.models_vendor"></a>
2025-08-17T19:35:14.1846979Z 
2025-08-17T19:35:14.1847068Z # common.models\_vendor
2025-08-17T19:35:14.1847214Z 
2025-08-17T19:35:14.1847314Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T19:35:14.1847513Z 
2025-08-17T19:35:14.1847590Z ## Vendor Objects
2025-08-17T19:35:14.1847712Z 
2025-08-17T19:35:14.1847791Z ```python
2025-08-17T19:35:14.1847968Z class Vendor(Base)
2025-08-17T19:35:14.1848165Z ```
2025-08-17T19:35:14.1848259Z 
2025-08-17T19:35:14.1848346Z Vendor of inventory items.
2025-08-17T19:35:14.1848505Z 
2025-08-17T19:35:14.1848620Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T19:35:14.1848831Z 
2025-08-17T19:35:14.1848917Z ## VendorPrice Objects
2025-08-17T19:35:14.1849059Z 
2025-08-17T19:35:14.1849132Z ```python
2025-08-17T19:35:14.1849401Z class VendorPrice(Base)
2025-08-17T19:35:14.1849724Z ```
2025-08-17T19:35:14.1849886Z 
2025-08-17T19:35:14.1850083Z Association table linking vendors to pricing.
2025-08-17T19:35:14.1850469Z 
2025-08-17T19:35:14.1850624Z <a id="common.db_url"></a>
2025-08-17T19:35:14.1851873Z 
2025-08-17T19:35:14.1852208Z # common.db\_url
2025-08-17T19:35:14.1852416Z 
2025-08-17T19:35:14.1852567Z <a id="common.db_url.build_url"></a>
2025-08-17T19:35:14.1852864Z 
2025-08-17T19:35:14.1852979Z #### build\_url
2025-08-17T19:35:14.1853157Z 
2025-08-17T19:35:14.1853283Z ```python
2025-08-17T19:35:14.1853597Z def build_url(async_: bool = True) -> str
2025-08-17T19:35:14.1854017Z ```
2025-08-17T19:35:14.1854177Z 
2025-08-17T19:35:14.1854452Z Return Postgres DSN from env or PG_* parts.
2025-08-17T19:35:14.1854777Z 
2025-08-17T19:35:14.1854913Z <a id="common.keepa"></a>
2025-08-17T19:35:14.1855149Z 
2025-08-17T19:35:14.1855276Z # common.keepa
2025-08-17T19:35:14.1855453Z 
2025-08-17T19:35:14.1855586Z <a id="common.llm"></a>
2025-08-17T19:35:14.1855803Z 
2025-08-17T19:35:14.1855927Z # common.llm
2025-08-17T19:35:14.1856040Z 
2025-08-17T19:35:14.1856134Z <a id="common.settings"></a>
2025-08-17T19:35:14.1856307Z 
2025-08-17T19:35:14.1856386Z # common.settings
2025-08-17T19:35:14.1856511Z 
2025-08-17T19:35:14.1856592Z <a id="common.db"></a>
2025-08-17T19:35:14.1856753Z 
2025-08-17T19:35:14.1856826Z # common.db
2025-08-17T19:35:14.1856932Z 
2025-08-17T19:35:14.1857047Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T19:35:14.1857247Z 
2025-08-17T19:35:14.1857336Z #### build\_sqlalchemy\_url
2025-08-17T19:35:14.1857497Z 
2025-08-17T19:35:14.1857572Z ```python
2025-08-17T19:35:14.1857774Z def build_sqlalchemy_url() -> str
2025-08-17T19:35:14.1858029Z ```
2025-08-17T19:35:14.1858124Z 
2025-08-17T19:35:14.1858242Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T19:35:14.1858442Z 
2025-08-17T19:35:14.1858545Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T19:35:14.1858788Z 
2025-08-17T19:35:14.1858884Z #### build\_asyncpg\_dsn
2025-08-17T19:35:14.1859028Z 
2025-08-17T19:35:14.1859102Z ```python
2025-08-17T19:35:14.1859303Z def build_asyncpg_dsn() -> str
2025-08-17T19:35:14.1859532Z ```
2025-08-17T19:35:14.1859631Z 
2025-08-17T19:35:14.1859776Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T19:35:14.1860026Z 
2025-08-17T19:35:14.1860287Z <a id="common.db.refresh_mvs"></a>
2025-08-17T19:35:14.1860465Z 
2025-08-17T19:35:14.1860542Z #### refresh\_mvs
2025-08-17T19:35:14.1860661Z 
2025-08-17T19:35:14.1860743Z ```python
2025-08-17T19:35:14.1860968Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T19:35:14.1861268Z ```
2025-08-17T19:35:14.1861361Z 
2025-08-17T19:35:14.1861775Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T19:35:14.1862041Z 
2025-08-17T19:35:14.1862125Z <a id="common.config"></a>
2025-08-17T19:35:14.1862264Z 
2025-08-17T19:35:14.1862348Z # common.config
2025-08-17T19:35:14.1862459Z 
2025-08-17T19:35:14.1862540Z <a id="common.base"></a>
2025-08-17T19:35:14.1862681Z 
2025-08-17T19:35:14.1862751Z # common.base
2025-08-17T19:35:14.1862859Z 
2025-08-17T19:35:14.1862944Z <a id="common.base.Base"></a>
2025-08-17T19:35:14.1863107Z 
2025-08-17T19:35:14.1863177Z ## Base Objects
2025-08-17T19:35:14.1863288Z 
2025-08-17T19:35:14.1863364Z ```python
2025-08-17T19:35:14.1863551Z class Base(DeclarativeBase)
2025-08-17T19:35:14.1863783Z ```
2025-08-17T19:35:14.1863873Z 
2025-08-17T19:35:14.1863962Z Base class for SQLAlchemy models.
2025-08-17T19:35:14.1864130Z 
2025-08-17T19:35:14.1864209Z <a id="repricer"></a>
2025-08-17T19:35:14.1864335Z 
2025-08-17T19:35:14.1864406Z # repricer
2025-08-17T19:35:14.1864512Z 
2025-08-17T19:35:14.1864606Z <a id="repricer.app.schemas"></a>
2025-08-17T19:35:14.1864769Z 
2025-08-17T19:35:14.1864867Z # repricer.app.schemas
2025-08-17T19:35:14.1864999Z 
2025-08-17T19:35:14.1865091Z <a id="repricer.app.deps"></a>
2025-08-17T19:35:14.1865257Z 
2025-08-17T19:35:14.1865337Z # repricer.app.deps
2025-08-17T19:35:14.1865461Z 
2025-08-17T19:35:14.1865583Z Placeholder module for Keepa / SP-API clients.
2025-08-17T19:35:14.1865793Z 
2025-08-17T19:35:14.1865885Z <a id="repricer.app.logic"></a>
2025-08-17T19:35:14.1866041Z 
2025-08-17T19:35:14.1866147Z # repricer.app.logic
2025-08-17T19:35:14.1866278Z 
2025-08-17T19:35:14.1866385Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T19:35:14.1866720Z 
2025-08-17T19:35:14.1866798Z #### MIN\_MARGIN
2025-08-17T19:35:14.1866906Z 
2025-08-17T19:35:14.1866972Z 15 % ROI
2025-08-17T19:35:14.1867072Z 
2025-08-17T19:35:14.1867182Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T19:35:14.1867379Z 
2025-08-17T19:35:14.1867460Z #### compute\_price
2025-08-17T19:35:14.1867581Z 
2025-08-17T19:35:14.1867650Z ```python
2025-08-17T19:35:14.1867922Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T19:35:14.1868248Z ```
2025-08-17T19:35:14.1868345Z 
2025-08-17T19:35:14.1868459Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T19:35:14.1868761Z Replace with real competitive logic later.
2025-08-17T19:35:14.1868950Z 
2025-08-17T19:35:14.1869038Z <a id="repricer.app.main"></a>
2025-08-17T19:35:14.1869189Z 
2025-08-17T19:35:14.1869271Z # repricer.app.main
2025-08-17T19:35:14.1869393Z 
2025-08-17T19:35:14.1869479Z <a id="repricer.app"></a>
2025-08-17T19:35:14.1869621Z 
2025-08-17T19:35:14.1869711Z # repricer.app
2025-08-17T19:35:14.1869827Z 
2025-08-17T19:35:14.1869928Z <a id="repricer.tests.test_imports"></a>
2025-08-17T19:35:14.1870120Z 
2025-08-17T19:35:14.1870209Z # repricer.tests.test\_imports
2025-08-17T19:35:14.1870360Z 
2025-08-17T19:35:14.1870465Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T19:35:14.1870644Z 
2025-08-17T19:35:14.1870734Z # repricer.tests.test\_smoke
2025-08-17T19:35:14.1870884Z 
2025-08-17T19:35:14.1870978Z <a id="repricer.tests"></a>
2025-08-17T19:35:14.1871123Z 
2025-08-17T19:35:14.1871198Z # repricer.tests
2025-08-17T19:35:14.1871321Z 
2025-08-17T19:35:14.1871396Z <a id="db"></a>
2025-08-17T19:35:14.1871688Z 
2025-08-17T19:35:14.1871763Z # db
2025-08-17T19:35:14.1871881Z 
2025-08-17T19:35:14.1871973Z <a id="db.utils.views"></a>
2025-08-17T19:35:14.1872120Z 
2025-08-17T19:35:14.1872210Z # db.utils.views
2025-08-17T19:35:14.1872324Z 
2025-08-17T19:35:14.1872424Z <a id="db.utils.views.replace_view"></a>
2025-08-17T19:35:14.1872617Z 
2025-08-17T19:35:14.1872700Z #### replace\_view
2025-08-17T19:35:14.1872994Z 
2025-08-17T19:35:14.1873065Z ```python
2025-08-17T19:35:14.1873288Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T19:35:14.1873568Z ```
2025-08-17T19:35:14.1873659Z 
2025-08-17T19:35:14.1873761Z Drop and recreate a SQL view atomically.
2025-08-17T19:35:14.1873944Z 
2025-08-17T19:35:14.1874031Z <a id="db.utils"></a>
2025-08-17T19:35:14.1874156Z 
2025-08-17T19:35:14.1874227Z # db.utils
2025-08-17T19:35:14.1874337Z 
2025-08-17T19:35:14.1874422Z <a id="price_importer"></a>
2025-08-17T19:35:14.1874568Z 
2025-08-17T19:35:14.1874643Z # price\_importer
2025-08-17T19:35:14.1874767Z 
2025-08-17T19:35:14.1874877Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T19:35:14.1875076Z 
2025-08-17T19:35:14.1875180Z # price\_importer.services\_common.dsn
2025-08-17T19:35:14.1875357Z 
2025-08-17T19:35:14.1875492Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T19:35:14.1875720Z 
2025-08-17T19:35:14.1875790Z #### build\_dsn
2025-08-17T19:35:14.1875902Z 
2025-08-17T19:35:14.1875976Z ```python
2025-08-17T19:35:14.1876168Z def build_dsn(sync: bool = True) -> str
2025-08-17T19:35:14.1876408Z ```
2025-08-17T19:35:14.1876497Z 
2025-08-17T19:35:14.1876569Z Return safe DSN.
2025-08-17T19:35:14.1876680Z 
2025-08-17T19:35:14.1877095Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T19:35:14.1877320Z 
2025-08-17T19:35:14.1877455Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T19:35:14.1877692Z 
2025-08-17T19:35:14.1877809Z # price\_importer.services\_common.models\_vendor
2025-08-17T19:35:14.1878017Z 
2025-08-17T19:35:14.1878140Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T19:35:14.1878344Z 
2025-08-17T19:35:14.1878445Z # price\_importer.services\_common.db\_url
2025-08-17T19:35:14.1878640Z 
2025-08-17T19:35:14.1878795Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T19:35:14.1879035Z 
2025-08-17T19:35:14.1879108Z #### build\_url
2025-08-17T19:35:14.1879223Z 
2025-08-17T19:35:14.1879425Z ```python
2025-08-17T19:35:14.1879626Z def build_url(async_: bool = True) -> str
2025-08-17T19:35:14.1879876Z ```
2025-08-17T19:35:14.1879965Z 
2025-08-17T19:35:14.1880078Z Return Postgres DSN from env or PG_* parts.
2025-08-17T19:35:14.1880269Z 
2025-08-17T19:35:14.1880383Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T19:35:14.1880590Z 
2025-08-17T19:35:14.1880687Z # price\_importer.services\_common.keepa
2025-08-17T19:35:14.1880871Z 
2025-08-17T19:35:14.1880978Z <a id="price_importer.services_common.llm"></a>
2025-08-17T19:35:14.1881182Z 
2025-08-17T19:35:14.1881276Z # price\_importer.services\_common.llm
2025-08-17T19:35:14.1881648Z 
2025-08-17T19:35:14.1881788Z <a id="price_importer.services_common.settings"></a>
2025-08-17T19:35:14.1882007Z 
2025-08-17T19:35:14.1882108Z # price\_importer.services\_common.settings
2025-08-17T19:35:14.1882302Z 
2025-08-17T19:35:14.1882409Z <a id="price_importer.services_common.db"></a>
2025-08-17T19:35:14.1882598Z 
2025-08-17T19:35:14.1882699Z # price\_importer.services\_common.db
2025-08-17T19:35:14.1882881Z 
2025-08-17T19:35:14.1883047Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T19:35:14.1883303Z 
2025-08-17T19:35:14.1883392Z #### build\_sqlalchemy\_url
2025-08-17T19:35:14.1883533Z 
2025-08-17T19:35:14.1883602Z ```python
2025-08-17T19:35:14.1883790Z def build_sqlalchemy_url() -> str
2025-08-17T19:35:14.1884009Z ```
2025-08-17T19:35:14.1884102Z 
2025-08-17T19:35:14.1884203Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T19:35:14.1884388Z 
2025-08-17T19:35:14.1884547Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T19:35:14.1884795Z 
2025-08-17T19:35:14.1884874Z #### build\_asyncpg\_dsn
2025-08-17T19:35:14.1885005Z 
2025-08-17T19:35:14.1885083Z ```python
2025-08-17T19:35:14.1885263Z def build_asyncpg_dsn() -> str
2025-08-17T19:35:14.1885488Z ```
2025-08-17T19:35:14.1885582Z 
2025-08-17T19:35:14.1885718Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T19:35:14.1885957Z 
2025-08-17T19:35:14.1886228Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T19:35:14.1886453Z 
2025-08-17T19:35:14.1886532Z #### refresh\_mvs
2025-08-17T19:35:14.1886645Z 
2025-08-17T19:35:14.1886715Z ```python
2025-08-17T19:35:14.1886935Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T19:35:14.1887207Z ```
2025-08-17T19:35:14.1887303Z 
2025-08-17T19:35:14.1887448Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T19:35:14.1887683Z 
2025-08-17T19:35:14.1887791Z <a id="price_importer.services_common"></a>
2025-08-17T19:35:14.1887988Z 
2025-08-17T19:35:14.1888082Z # price\_importer.services\_common
2025-08-17T19:35:14.1888248Z 
2025-08-17T19:35:14.1888370Z <a id="price_importer.services_common.base"></a>
2025-08-17T19:35:14.1888576Z 
2025-08-17T19:35:14.1888674Z # price\_importer.services\_common.base
2025-08-17T19:35:14.1888857Z 
2025-08-17T19:35:14.1888954Z <a id="price_importer.normaliser"></a>
2025-08-17T19:35:14.1889130Z 
2025-08-17T19:35:14.1889234Z # price\_importer.normaliser
2025-08-17T19:35:14.1889390Z 
2025-08-17T19:35:14.1889505Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T19:35:14.1889704Z 
2025-08-17T19:35:14.1889812Z # price\_importer.common.models\_vendor
2025-08-17T19:35:14.1889991Z 
2025-08-17T19:35:14.1890089Z <a id="price_importer.common.db_url"></a>
2025-08-17T19:35:14.1890283Z 
2025-08-17T19:35:14.1890374Z # price\_importer.common.db\_url
2025-08-17T19:35:14.1890538Z 
2025-08-17T19:35:14.1890651Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T19:35:14.1890860Z 
2025-08-17T19:35:14.1890929Z #### make\_dsn
2025-08-17T19:35:14.1891034Z 
2025-08-17T19:35:14.1891113Z ```python
2025-08-17T19:35:14.1891298Z def make_dsn(async_: bool = False) -> str
2025-08-17T19:35:14.1891835Z ```
2025-08-17T19:35:14.1891933Z 
2025-08-17T19:35:14.1892062Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T19:35:14.1892291Z 
2025-08-17T19:35:14.1892410Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T19:35:14.1892753Z 
2025-08-17T19:35:14.1892841Z #### build\_url
2025-08-17T19:35:14.1892948Z 
2025-08-17T19:35:14.1893016Z ```python
2025-08-17T19:35:14.1893209Z def build_url(async_: bool = False) -> str
2025-08-17T19:35:14.1893449Z ```
2025-08-17T19:35:14.1893548Z 
2025-08-17T19:35:14.1893676Z Return Postgres DSN built from environment variables.
2025-08-17T19:35:14.1893892Z 
2025-08-17T19:35:14.1893981Z <a id="price_importer.common"></a>
2025-08-17T19:35:14.1894155Z 
2025-08-17T19:35:14.1894235Z # price\_importer.common
2025-08-17T19:35:14.1894371Z 
2025-08-17T19:35:14.1894473Z <a id="price_importer.common.base"></a>
2025-08-17T19:35:14.1894651Z 
2025-08-17T19:35:14.1894740Z # price\_importer.common.base
2025-08-17T19:35:14.1894901Z 
2025-08-17T19:35:14.1895002Z <a id="price_importer.tests.conftest"></a>
2025-08-17T19:35:14.1895187Z 
2025-08-17T19:35:14.1895282Z # price\_importer.tests.conftest
2025-08-17T19:35:14.1895446Z 
2025-08-17T19:35:14.1895550Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T19:35:14.1895756Z 
2025-08-17T19:35:14.1895860Z # price\_importer.tests.test\_reader
2025-08-17T19:35:14.1896028Z 
2025-08-17T19:35:14.1896137Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T19:35:14.1896335Z 
2025-08-17T19:35:14.1896431Z # price\_importer.tests.test\_imports
2025-08-17T19:35:14.1896605Z 
2025-08-17T19:35:14.1896705Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T19:35:14.1896899Z 
2025-08-17T19:35:14.1896990Z # price\_importer.tests.test\_smoke
2025-08-17T19:35:14.1897155Z 
2025-08-17T19:35:14.1897273Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T19:35:14.1897473Z 
2025-08-17T19:35:14.1897571Z # price\_importer.tests.test\_normaliser
2025-08-17T19:35:14.1897757Z 
2025-08-17T19:35:14.1897848Z <a id="price_importer.tests"></a>
2025-08-17T19:35:14.1898008Z 
2025-08-17T19:35:14.1898088Z # price\_importer.tests
2025-08-17T19:35:14.1898228Z 
2025-08-17T19:35:14.1898317Z <a id="price_importer.reader"></a>
2025-08-17T19:35:14.1898478Z 
2025-08-17T19:35:14.1898575Z # price\_importer.reader
2025-08-17T19:35:14.1898837Z 
2025-08-17T19:35:14.1898933Z <a id="price_importer.repository"></a>
2025-08-17T19:35:14.1899114Z 
2025-08-17T19:35:14.1899202Z # price\_importer.repository
2025-08-17T19:35:14.1899353Z 
2025-08-17T19:35:14.1899443Z <a id="price_importer.import"></a>
2025-08-17T19:35:14.1899611Z 
2025-08-17T19:35:14.1899695Z # price\_importer.import
2025-08-17T19:35:14.1899829Z 
2025-08-17T19:35:14.1899918Z <a id="fees_h10"></a>
2025-08-17T19:35:14.1900039Z 
2025-08-17T19:35:14.1900107Z # fees\_h10
2025-08-17T19:35:14.1900206Z 
2025-08-17T19:35:14.1900293Z <a id="fees_h10.worker"></a>
2025-08-17T19:35:14.1900434Z 
2025-08-17T19:35:14.1900507Z # fees\_h10.worker
2025-08-17T19:35:14.1900628Z 
2025-08-17T19:35:14.1900731Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T19:35:14.1900920Z 
2025-08-17T19:35:14.1901046Z #### list\_active\_asins
2025-08-17T19:35:14.1901176Z 
2025-08-17T19:35:14.1901244Z ```python
2025-08-17T19:35:14.1901634Z def list_active_asins() -> list[str]
2025-08-17T19:35:14.1901917Z ```
2025-08-17T19:35:14.1902023Z 
2025-08-17T19:35:14.1902151Z Return known ASINs or an empty list if unavailable.
2025-08-17T19:35:14.1902363Z 
2025-08-17T19:35:14.1902454Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T19:35:14.1902631Z 
2025-08-17T19:35:14.1902715Z # fees\_h10.tests.test\_smoke
2025-08-17T19:35:14.1902864Z 
2025-08-17T19:35:14.1902952Z <a id="fees_h10.tests"></a>
2025-08-17T19:35:14.1903089Z 
2025-08-17T19:35:14.1903158Z # fees\_h10.tests
2025-08-17T19:35:14.1903279Z 
2025-08-17T19:35:14.1903360Z <a id="fees_h10.client"></a>
2025-08-17T19:35:14.1903500Z 
2025-08-17T19:35:14.1903571Z # fees\_h10.client
2025-08-17T19:35:14.1903689Z 
2025-08-17T19:35:14.1903780Z <a id="fees_h10.repository"></a>
2025-08-17T19:35:14.1903933Z 
2025-08-17T19:35:14.1904019Z # fees\_h10.repository
2025-08-17T19:35:14.1904141Z 
2025-08-17T19:35:14.1904215Z <a id="emailer"></a>
2025-08-17T19:35:14.1904335Z 
2025-08-17T19:35:14.1904410Z # emailer
2025-08-17T19:35:14.1904632Z 
2025-08-17T19:35:14.1904745Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T19:35:14.1904947Z 
2025-08-17T19:35:14.1905039Z # emailer.tests.test\_import\_emailer
2025-08-17T19:35:14.1905212Z 
2025-08-17T19:35:14.1905308Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T19:35:14.1905476Z 
2025-08-17T19:35:14.1905563Z # emailer.tests.test\_smoke
2025-08-17T19:35:14.1905742Z 
2025-08-17T19:35:14.1905833Z <a id="emailer.tests"></a>
2025-08-17T19:35:14.1905971Z 
2025-08-17T19:35:14.1906044Z # emailer.tests
2025-08-17T19:35:14.1906162Z 
2025-08-17T19:35:14.1906249Z <a id="emailer.generate_body"></a>
2025-08-17T19:35:14.1906408Z 
2025-08-17T19:35:14.1906494Z # emailer.generate\_body
2025-08-17T19:35:14.1906626Z 
2025-08-17T19:35:14.1906700Z <a id="llm_server"></a>
2025-08-17T19:35:14.1906824Z 
2025-08-17T19:35:14.1906898Z # llm\_server
2025-08-17T19:35:14.1907002Z 
2025-08-17T19:35:14.1907086Z <a id="llm_server.app"></a>
2025-08-17T19:35:14.1907229Z 
2025-08-17T19:35:14.1907300Z # llm\_server.app
2025-08-17T19:35:14.1907423Z 
