2025-08-20T14:09:43.3771582Z ##[group]Run pydoc-markdown
2025-08-20T14:09:43.3771876Z [36;1mpydoc-markdown[0m
2025-08-20T14:09:43.3813685Z shell: /usr/bin/bash -e {0}
2025-08-20T14:09:43.3813912Z env:
2025-08-20T14:09:43.3814144Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:09:43.3814544Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T14:09:43.3814922Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:09:43.3815281Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:09:43.3815623Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:09:43.3816282Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T14:09:43.3816575Z ##[endgroup]
2025-08-20T14:09:43.6763601Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T14:09:43.6764259Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T14:09:43.6764718Z In "pydoc-markdown.yml"
2025-08-20T14:09:43.6765117Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T14:09:43.6765965Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T14:09:43.6767103Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T14:09:43.6767661Z 
2025-08-20T14:09:44.0355639Z <a id="__init__"></a>
2025-08-20T14:09:44.0356432Z 
2025-08-20T14:09:44.0356587Z # \_\_init\_\_
2025-08-20T14:09:44.0356799Z 
2025-08-20T14:09:44.0356946Z <a id="api"></a>
2025-08-20T14:09:44.0357182Z 
2025-08-20T14:09:44.0357305Z # api
2025-08-20T14:09:44.0357507Z 
2025-08-20T14:09:44.0357687Z <a id="api.errors"></a>
2025-08-20T14:09:44.0358014Z 
2025-08-20T14:09:44.0358154Z # api.errors
2025-08-20T14:09:44.0358343Z 
2025-08-20T14:09:44.0358498Z <a id="api.sentry_config"></a>
2025-08-20T14:09:44.0358780Z 
2025-08-20T14:09:44.0358926Z # api.sentry\_config
2025-08-20T14:09:44.0359179Z 
2025-08-20T14:09:44.0359401Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T14:09:44.0359784Z 
2025-08-20T14:09:44.0359957Z # api.tests.test\_stats\_contracts
2025-08-20T14:09:44.0360343Z 
2025-08-20T14:09:44.0360529Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T14:09:44.0360892Z 
2025-08-20T14:09:44.0361066Z # api.tests.test\_sentry\_scrub
2025-08-20T14:09:44.0361367Z 
2025-08-20T14:09:44.0361556Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T14:09:44.0361918Z 
2025-08-20T14:09:44.0362109Z # api.tests.test\_roi\_basic\_auth
2025-08-20T14:09:44.0362435Z 
2025-08-20T14:09:44.0362662Z <a id="api.tests.test_errors_json"></a>
2025-08-20T14:09:44.0363112Z 
2025-08-20T14:09:44.0363301Z # api.tests.test\_errors\_json
2025-08-20T14:09:44.0363669Z 
2025-08-20T14:09:44.0363891Z <a id="api.tests.test_llm"></a>
2025-08-20T14:09:44.0364257Z 
2025-08-20T14:09:44.0364459Z # api.tests.test\_llm
2025-08-20T14:09:44.0364743Z 
2025-08-20T14:09:44.0364945Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T14:09:44.0365318Z 
2025-08-20T14:09:44.0365507Z # api.tests.test\_roi\_filters
2025-08-20T14:09:44.0366027Z 
2025-08-20T14:09:44.0366209Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T14:09:44.0366983Z 
2025-08-20T14:09:44.0367160Z # api.tests.test\_sentry\_event
2025-08-20T14:09:44.0367441Z 
2025-08-20T14:09:44.0367684Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T14:09:44.0368103Z 
2025-08-20T14:09:44.0368297Z ## DummyTransport Objects
2025-08-20T14:09:44.0368589Z 
2025-08-20T14:09:44.0368731Z ```python
2025-08-20T14:09:44.0369101Z class DummyTransport()
2025-08-20T14:09:44.0369466Z ```
2025-08-20T14:09:44.0369659Z 
2025-08-20T14:09:44.0370019Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T14:09:44.0370551Z 
2025-08-20T14:09:44.0370731Z #### capture\_envelope
2025-08-20T14:09:44.0370962Z 
2025-08-20T14:09:44.0371092Z ```python
2025-08-20T14:09:44.0371444Z def capture_envelope(envelope)
2025-08-20T14:09:44.0371851Z ```
2025-08-20T14:09:44.0372024Z 
2025-08-20T14:09:44.0372271Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T14:09:44.0372692Z 
2025-08-20T14:09:44.0372857Z <a id="api.tests.test_cors"></a>
2025-08-20T14:09:44.0373487Z 
2025-08-20T14:09:44.0373629Z # api.tests.test\_cors
2025-08-20T14:09:44.0373874Z 
2025-08-20T14:09:44.0374043Z <a id="api.tests.test_imports"></a>
2025-08-20T14:09:44.0374370Z 
2025-08-20T14:09:44.0374523Z # api.tests.test\_imports
2025-08-20T14:09:44.0374794Z 
2025-08-20T14:09:44.0374972Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T14:09:44.0375254Z 
2025-08-20T14:09:44.0375391Z # api.tests.test\_rate\_limit
2025-08-20T14:09:44.0375631Z 
2025-08-20T14:09:44.0375987Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T14:09:44.0376279Z 
2025-08-20T14:09:44.0376392Z #### app
2025-08-20T14:09:44.0376536Z 
2025-08-20T14:09:44.0376647Z noqa: E402
2025-08-20T14:09:44.0376801Z 
2025-08-20T14:09:44.0376940Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T14:09:44.0377202Z 
2025-08-20T14:09:44.0377329Z # api.tests.test\_stats\_sql
2025-08-20T14:09:44.0377560Z 
2025-08-20T14:09:44.0377704Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T14:09:44.0377984Z 
2025-08-20T14:09:44.0378127Z # api.tests.test\_entrypoint
2025-08-20T14:09:44.0378361Z 
2025-08-20T14:09:44.0378594Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T14:09:44.0378939Z 
2025-08-20T14:09:44.0379111Z # api.tests.test\_stats\_future\_contracts
2025-08-20T14:09:44.0379385Z 
2025-08-20T14:09:44.0379536Z <a id="api.tests.test_health"></a>
2025-08-20T14:09:44.0379800Z 
2025-08-20T14:09:44.0379924Z # api.tests.test\_health
2025-08-20T14:09:44.0380128Z 
2025-08-20T14:09:44.0380267Z <a id="api.tests.test_score"></a>
2025-08-20T14:09:44.0380499Z 
2025-08-20T14:09:44.0380575Z # api.tests.test\_score
2025-08-20T14:09:44.0380717Z 
2025-08-20T14:09:44.0380799Z <a id="api.logging_config"></a>
2025-08-20T14:09:44.0380940Z 
2025-08-20T14:09:44.0381010Z # api.logging\_config
2025-08-20T14:09:44.0381130Z 
2025-08-20T14:09:44.0381207Z <a id="api.migrations.env"></a>
2025-08-20T14:09:44.0381345Z 
2025-08-20T14:09:44.0381421Z # api.migrations.env
2025-08-20T14:09:44.0381532Z 
2025-08-20T14:09:44.0381664Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T14:09:44.0381871Z 
2025-08-20T14:09:44.0381979Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T14:09:44.0382163Z 
2025-08-20T14:09:44.0382270Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T14:09:44.0382471Z 
2025-08-20T14:09:44.0382568Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T14:09:44.0382742Z 
2025-08-20T14:09:44.0382899Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T14:09:44.0383133Z 
2025-08-20T14:09:44.0383266Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T14:09:44.0383488Z 
2025-08-20T14:09:44.0383608Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T14:09:44.0383808Z 
2025-08-20T14:09:44.0383911Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T14:09:44.0384096Z 
2025-08-20T14:09:44.0384208Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T14:09:44.0384480Z 
2025-08-20T14:09:44.0384595Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T14:09:44.0384982Z 
2025-08-20T14:09:44.0385112Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T14:09:44.0385318Z 
2025-08-20T14:09:44.0385425Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T14:09:44.0385614Z 
2025-08-20T14:09:44.0385726Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T14:09:44.0386146Z 
2025-08-20T14:09:44.0386255Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T14:09:44.0386446Z 
2025-08-20T14:09:44.0386567Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T14:09:44.0386767Z 
2025-08-20T14:09:44.0386875Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T14:09:44.0387053Z 
2025-08-20T14:09:44.0387185Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T14:09:44.0387404Z 
2025-08-20T14:09:44.0387521Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T14:09:44.0387716Z 
2025-08-20T14:09:44.0387833Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T14:09:44.0388239Z 
2025-08-20T14:09:44.0388345Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T14:09:44.0388528Z 
2025-08-20T14:09:44.0388668Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T14:09:44.0388881Z 
2025-08-20T14:09:44.0388996Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T14:09:44.0389197Z 
2025-08-20T14:09:44.0389303Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T14:09:44.0389488Z 
2025-08-20T14:09:44.0389587Z # api.migrations.versions.0001\_baseline
2025-08-20T14:09:44.0389979Z 
2025-08-20T14:09:44.0390136Z <a id="api.migrations.versions"></a>
2025-08-20T14:09:44.0390417Z 
2025-08-20T14:09:44.0390565Z # api.migrations.versions
2025-08-20T14:09:44.0390800Z 
2025-08-20T14:09:44.0390952Z <a id="api.migrations"></a>
2025-08-20T14:09:44.0391191Z 
2025-08-20T14:09:44.0391308Z # api.migrations
2025-08-20T14:09:44.0391489Z 
2025-08-20T14:09:44.0391604Z <a id="api.db"></a>
2025-08-20T14:09:44.0391816Z 
2025-08-20T14:09:44.0391927Z # api.db
2025-08-20T14:09:44.0392083Z 
2025-08-20T14:09:44.0392175Z <a id="api.routes.score"></a>
2025-08-20T14:09:44.0392317Z 
2025-08-20T14:09:44.0392387Z # api.routes.score
2025-08-20T14:09:44.0392498Z 
2025-08-20T14:09:44.0392575Z <a id="api.routes.stats"></a>
2025-08-20T14:09:44.0392707Z 
2025-08-20T14:09:44.0392773Z # api.routes.stats
2025-08-20T14:09:44.0392881Z 
2025-08-20T14:09:44.0392956Z <a id="api.routes.roi"></a>
2025-08-20T14:09:44.0393081Z 
2025-08-20T14:09:44.0393151Z # api.routes.roi
2025-08-20T14:09:44.0393251Z 
2025-08-20T14:09:44.0393332Z <a id="api.routes.health"></a>
2025-08-20T14:09:44.0393473Z 
2025-08-20T14:09:44.0393541Z # api.routes.health
2025-08-20T14:09:44.0393645Z 
2025-08-20T14:09:44.0393737Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T14:09:44.0393910Z 
2025-08-20T14:09:44.0393972Z #### MAX\_SKEW
2025-08-20T14:09:44.0394068Z 
2025-08-20T14:09:44.0394138Z seconds
2025-08-20T14:09:44.0394223Z 
2025-08-20T14:09:44.0394312Z <a id="api.routes.health.health"></a>
2025-08-20T14:09:44.0394490Z 
2025-08-20T14:09:44.0394559Z #### health
2025-08-20T14:09:44.0394648Z 
2025-08-20T14:09:44.0394714Z ```python
2025-08-20T14:09:44.0394915Z @router.get("/health", include_in_schema=False)
2025-08-20T14:09:44.0395320Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T14:09:44.0395664Z ```
2025-08-20T14:09:44.0396041Z 
2025-08-20T14:09:44.0396176Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T14:09:44.0396374Z 
2025-08-20T14:09:44.0396462Z <a id="api.routes.repository"></a>
2025-08-20T14:09:44.0396618Z 
2025-08-20T14:09:44.0396703Z # api.routes.repository
2025-08-20T14:09:44.0396824Z 
2025-08-20T14:09:44.0396895Z <a id="api.routes"></a>
2025-08-20T14:09:44.0397017Z 
2025-08-20T14:09:44.0397080Z # api.routes
2025-08-20T14:09:44.0397174Z 
2025-08-20T14:09:44.0397253Z <a id="api.models.fee"></a>
2025-08-20T14:09:44.0397381Z 
2025-08-20T14:09:44.0397445Z # api.models.fee
2025-08-20T14:09:44.0397555Z 
2025-08-20T14:09:44.0397827Z <a id="api.models"></a>
2025-08-20T14:09:44.0397941Z 
2025-08-20T14:09:44.0398006Z # api.models
2025-08-20T14:09:44.0398105Z 
2025-08-20T14:09:44.0398183Z <a id="api.roi_repository"></a>
2025-08-20T14:09:44.0398323Z 
2025-08-20T14:09:44.0398396Z # api.roi\_repository
2025-08-20T14:09:44.0398513Z 
2025-08-20T14:09:44.0398582Z <a id="api.main"></a>
2025-08-20T14:09:44.0398693Z 
2025-08-20T14:09:44.0398761Z # api.main
2025-08-20T14:09:44.0398855Z 
2025-08-20T14:09:44.0398928Z <a id="api.main.ready"></a>
2025-08-20T14:09:44.0399060Z 
2025-08-20T14:09:44.0399122Z #### ready
2025-08-20T14:09:44.0399207Z 
2025-08-20T14:09:44.0399270Z ```python
2025-08-20T14:09:44.0399533Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T14:09:44.0399957Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T14:09:44.0400299Z                                                                       str]
2025-08-20T14:09:44.0400528Z ```
2025-08-20T14:09:44.0400742Z 
2025-08-20T14:09:44.0400837Z Return 200 only when migrations are at head.
2025-08-20T14:09:44.0401015Z 
2025-08-20T14:09:44.0401087Z <a id="api.config"></a>
2025-08-20T14:09:44.0401203Z 
2025-08-20T14:09:44.0401266Z # api.config
2025-08-20T14:09:44.0401365Z 
2025-08-20T14:09:44.0401438Z <a id="api.security"></a>
2025-08-20T14:09:44.0401562Z 
2025-08-20T14:09:44.0401636Z # api.security
2025-08-20T14:09:44.0401732Z 
2025-08-20T14:09:44.0401796Z <a id="etl"></a>
2025-08-20T14:09:44.0401904Z 
2025-08-20T14:09:44.0401963Z # etl
2025-08-20T14:09:44.0402047Z 
2025-08-20T14:09:44.0402140Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T14:09:44.0402285Z 
2025-08-20T14:09:44.0402359Z # etl.fba\_fee\_ingestor
2025-08-20T14:09:44.0402484Z 
2025-08-20T14:09:44.0402564Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T14:09:44.0402705Z 
2025-08-20T14:09:44.0402783Z # etl.sp\_fees\_ingestor
2025-08-20T14:09:44.0402902Z 
2025-08-20T14:09:44.0402980Z <a id="etl.keepa_ingestor"></a>
2025-08-20T14:09:44.0403132Z 
2025-08-20T14:09:44.0403207Z # etl.keepa\_ingestor
2025-08-20T14:09:44.0403317Z 
2025-08-20T14:09:44.0403384Z <a id="etl.db"></a>
2025-08-20T14:09:44.0403495Z 
2025-08-20T14:09:44.0403556Z # etl.db
2025-08-20T14:09:44.0403642Z 
2025-08-20T14:09:44.0403725Z <a id="etl.dialects.schemas"></a>
2025-08-20T14:09:44.0403878Z 
2025-08-20T14:09:44.0403952Z # etl.dialects.schemas
2025-08-20T14:09:44.0404068Z 
2025-08-20T14:09:44.0404184Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T14:09:44.0404365Z 
2025-08-20T14:09:44.0404453Z # etl.dialects.amazon\_reimbursements
2025-08-20T14:09:44.0404620Z 
2025-08-20T14:09:44.0404841Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T14:09:44.0405094Z 
2025-08-20T14:09:44.0405250Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T14:09:44.0405449Z 
2025-08-20T14:09:44.0405536Z <a id="etl.dialects.test_generic"></a>
2025-08-20T14:09:44.0405694Z 
2025-08-20T14:09:44.0405979Z # etl.dialects.test\_generic
2025-08-20T14:09:44.0406118Z 
2025-08-20T14:09:44.0406216Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T14:09:44.0406385Z 
2025-08-20T14:09:44.0406466Z # etl.dialects.amazon\_returns
2025-08-20T14:09:44.0406601Z 
2025-08-20T14:09:44.0406693Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T14:09:44.0406864Z 
2025-08-20T14:09:44.0406946Z # etl.dialects.amazon\_fee\_preview
2025-08-20T14:09:44.0407094Z 
2025-08-20T14:09:44.0407200Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T14:09:44.0407380Z 
2025-08-20T14:09:44.0407467Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T14:09:44.0407632Z 
2025-08-20T14:09:44.0407722Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T14:09:44.0407892Z 
2025-08-20T14:09:44.0407976Z # etl.dialects.amazon\_settlements
2025-08-20T14:09:44.0408131Z 
2025-08-20T14:09:44.0408204Z <a id="etl.dialects"></a>
2025-08-20T14:09:44.0408325Z 
2025-08-20T14:09:44.0408395Z # etl.dialects
2025-08-20T14:09:44.0408495Z 
2025-08-20T14:09:44.0408620Z <a id="ingest"></a>
2025-08-20T14:09:44.0408725Z 
2025-08-20T14:09:44.0408919Z # ingest
2025-08-20T14:09:44.0409012Z 
2025-08-20T14:09:44.0409093Z <a id="ingest.maintenance"></a>
2025-08-20T14:09:44.0409231Z 
2025-08-20T14:09:44.0409307Z # ingest.maintenance
2025-08-20T14:09:44.0409418Z 
2025-08-20T14:09:44.0409493Z <a id="ingest.copy_loader"></a>
2025-08-20T14:09:44.0409626Z 
2025-08-20T14:09:44.0409701Z # ingest.copy\_loader
2025-08-20T14:09:44.0409812Z 
2025-08-20T14:09:44.0409909Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T14:09:44.0410093Z 
2025-08-20T14:09:44.0410164Z #### copy\_df\_via\_temp
2025-08-20T14:09:44.0410282Z 
2025-08-20T14:09:44.0410344Z ```python
2025-08-20T14:09:44.0410515Z def copy_df_via_temp(engine: Engine,
2025-08-20T14:09:44.0410749Z                      df: pd.DataFrame,
2025-08-20T14:09:44.0410970Z                      target_table: str,
2025-08-20T14:09:44.0411185Z                      *,
2025-08-20T14:09:44.0411382Z                      target_schema: Optional[str] = None,
2025-08-20T14:09:44.0411642Z                      columns: Sequence[str],
2025-08-20T14:09:44.0412022Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T14:09:44.0412302Z                      analyze_after: bool = False,
2025-08-20T14:09:44.0412558Z                      connection: Any | None = None) -> int
2025-08-20T14:09:44.0412796Z ```
2025-08-20T14:09:44.0412881Z 
2025-08-20T14:09:44.0413036Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T14:09:44.0413265Z 
2025-08-20T14:09:44.0413351Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T14:09:44.0413510Z 
2025-08-20T14:09:44.0413589Z # ingest.tests.test\_smoke
2025-08-20T14:09:44.0413714Z 
2025-08-20T14:09:44.0413787Z <a id="ingest.tests"></a>
2025-08-20T14:09:44.0413917Z 
2025-08-20T14:09:44.0413982Z # ingest.tests
2025-08-20T14:09:44.0414079Z 
2025-08-20T14:09:44.0414165Z <a id="ingest.upload_router"></a>
2025-08-20T14:09:44.0414308Z 
2025-08-20T14:09:44.0414380Z # ingest.upload\_router
2025-08-20T14:09:44.0414506Z 
2025-08-20T14:09:44.0414594Z <a id="ingest.email_watcher"></a>
2025-08-20T14:09:44.0414740Z 
2025-08-20T14:09:44.0414809Z # ingest.email\_watcher
2025-08-20T14:09:44.0414927Z 
2025-08-20T14:09:44.0415014Z <a id="ingest.email_watcher.main"></a>
2025-08-20T14:09:44.0415171Z 
2025-08-20T14:09:44.0415238Z #### main
2025-08-20T14:09:44.0415323Z 
2025-08-20T14:09:44.0415385Z ```python
2025-08-20T14:09:44.0415553Z def main() -> dict[str, str]
2025-08-20T14:09:44.0415892Z ```
2025-08-20T14:09:44.0416010Z 
2025-08-20T14:09:44.0416151Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T14:09:44.0416371Z 
2025-08-20T14:09:44.0416494Z Returns {"status": "success"} when processing completes.
2025-08-20T14:09:44.0416702Z 
2025-08-20T14:09:44.0416778Z <a id="ingest.tasks"></a>
2025-08-20T14:09:44.0416901Z 
2025-08-20T14:09:44.0416972Z # ingest.tasks
2025-08-20T14:09:44.0417092Z 
2025-08-20T14:09:44.0417195Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T14:09:44.0417366Z 
2025-08-20T14:09:44.0417437Z #### task\_import\_file
2025-08-20T14:09:44.0417567Z 
2025-08-20T14:09:44.0417628Z ```python
2025-08-20T14:09:44.0417829Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T14:09:44.0418104Z def task_import_file(self: Any,
2025-08-20T14:09:44.0418316Z                      uri: str,
2025-08-20T14:09:44.0418528Z                      report_type: str | None = None,
2025-08-20T14:09:44.0418794Z                      force: bool = False) -> dict[str, Any]
2025-08-20T14:09:44.0419025Z ```
2025-08-20T14:09:44.0419110Z 
2025-08-20T14:09:44.0419237Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T14:09:44.0419442Z 
2025-08-20T14:09:44.0419525Z <a id="ingest.celery_app"></a>
2025-08-20T14:09:44.0419670Z 
2025-08-20T14:09:44.0419741Z # ingest.celery\_app
2025-08-20T14:09:44.0419859Z 
2025-08-20T14:09:44.0419946Z <a id="ingest.ingest_router"></a>
2025-08-20T14:09:44.0420095Z 
2025-08-20T14:09:44.0420168Z # ingest.ingest\_router
2025-08-20T14:09:44.0420290Z 
2025-08-20T14:09:44.0420367Z <a id="logistics_etl"></a>
2025-08-20T14:09:44.0420879Z 
2025-08-20T14:09:44.0420994Z # logistics\_etl
2025-08-20T14:09:44.0421175Z 
2025-08-20T14:09:44.0421304Z Daily logistics ETL job.
2025-08-20T14:09:44.0421517Z 
2025-08-20T14:09:44.0421666Z <a id="logistics_etl.__main__"></a>
2025-08-20T14:09:44.0421930Z 
2025-08-20T14:09:44.0422062Z # logistics\_etl.\_\_main\_\_
2025-08-20T14:09:44.0422298Z 
2025-08-20T14:09:44.0422427Z <a id="logistics_etl.dsn"></a>
2025-08-20T14:09:44.0422650Z 
2025-08-20T14:09:44.0422723Z # logistics\_etl.dsn
2025-08-20T14:09:44.0422842Z 
2025-08-20T14:09:44.0422957Z Local DSN builder to avoid cross-service dependency.
2025-08-20T14:09:44.0423159Z 
2025-08-20T14:09:44.0423259Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T14:09:44.0423426Z 
2025-08-20T14:09:44.0423491Z #### build\_dsn
2025-08-20T14:09:44.0423595Z 
2025-08-20T14:09:44.0423658Z ```python
2025-08-20T14:09:44.0423836Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:09:44.0424060Z ```
2025-08-20T14:09:44.0424141Z 
2025-08-20T14:09:44.0424775Z Return a Postgres DSN assembled from environment variables.
2025-08-20T14:09:44.0425065Z 
2025-08-20T14:09:44.0425226Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T14:09:44.0425626Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T14:09:44.0426283Z error when any required variable is missing.
2025-08-20T14:09:44.0426473Z 
2025-08-20T14:09:44.0426566Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T14:09:44.0426735Z 
2025-08-20T14:09:44.0426819Z # logistics\_etl.tests.conftest
2025-08-20T14:09:44.0426971Z 
2025-08-20T14:09:44.0427080Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T14:09:44.0427264Z 
2025-08-20T14:09:44.0427363Z # logistics\_etl.tests.test\_repository
2025-08-20T14:09:44.0427522Z 
2025-08-20T14:09:44.0427615Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T14:09:44.0427785Z 
2025-08-20T14:09:44.0427868Z # logistics\_etl.tests.test\_cron
2025-08-20T14:09:44.0428014Z 
2025-08-20T14:09:44.0428111Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T14:09:44.0428309Z 
2025-08-20T14:09:44.0428393Z # logistics\_etl.tests.test\_imports
2025-08-20T14:09:44.0428548Z 
2025-08-20T14:09:44.0428652Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T14:09:44.0428821Z 
2025-08-20T14:09:44.0428905Z # logistics\_etl.tests.test\_smoke
2025-08-20T14:09:44.0429065Z 
2025-08-20T14:09:44.0429157Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T14:09:44.0429324Z 
2025-08-20T14:09:44.0429410Z # logistics\_etl.tests.test\_client
2025-08-20T14:09:44.0429568Z 
2025-08-20T14:09:44.0429649Z <a id="logistics_etl.tests"></a>
2025-08-20T14:09:44.0429791Z 
2025-08-20T14:09:44.0429873Z # logistics\_etl.tests
2025-08-20T14:09:44.0429991Z 
2025-08-20T14:09:44.0430070Z <a id="logistics_etl.flow"></a>
2025-08-20T14:09:44.0430221Z 
2025-08-20T14:09:44.0430295Z # logistics\_etl.flow
2025-08-20T14:09:44.0430409Z 
2025-08-20T14:09:44.0430492Z <a id="logistics_etl.client"></a>
2025-08-20T14:09:44.0430644Z 
2025-08-20T14:09:44.0508136Z # logistics\_etl.client
2025-08-20T14:09:44.0508417Z 
2025-08-20T14:09:44.0508576Z <a id="logistics_etl.cron"></a>
2025-08-20T14:09:44.0508807Z 
2025-08-20T14:09:44.0508917Z # logistics\_etl.cron
2025-08-20T14:09:44.0509125Z 
2025-08-20T14:09:44.0509262Z <a id="logistics_etl.db"></a>
2025-08-20T14:09:44.0509501Z 
2025-08-20T14:09:44.0509630Z # logistics\_etl.db
2025-08-20T14:09:44.0509808Z 
2025-08-20T14:09:44.0509952Z <a id="logistics_etl.repository"></a>
2025-08-20T14:09:44.0510228Z 
2025-08-20T14:09:44.0510360Z # logistics\_etl.repository
2025-08-20T14:09:44.0510583Z 
2025-08-20T14:09:44.0510698Z <a id="alert_bot"></a>
2025-08-20T14:09:44.0510896Z 
2025-08-20T14:09:44.0511003Z # alert\_bot
2025-08-20T14:09:44.0511162Z 
2025-08-20T14:09:44.0511310Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T14:09:44.0511579Z 
2025-08-20T14:09:44.0511710Z # alert\_bot.tests.test\_smoke
2025-08-20T14:09:44.0511948Z 
2025-08-20T14:09:44.0512075Z <a id="alert_bot.tests"></a>
2025-08-20T14:09:44.0512295Z 
2025-08-20T14:09:44.0512795Z # alert\_bot.tests
2025-08-20T14:09:44.0512980Z 
2025-08-20T14:09:44.0513110Z <a id="alert_bot.alert_bot"></a>
2025-08-20T14:09:44.0513344Z 
2025-08-20T14:09:44.0513474Z # alert\_bot.alert\_bot
2025-08-20T14:09:44.0513682Z 
2025-08-20T14:09:44.0513781Z <a id="alert_bot.rules"></a>
2025-08-20T14:09:44.0513923Z 
2025-08-20T14:09:44.0513992Z # alert\_bot.rules
2025-08-20T14:09:44.0514103Z 
2025-08-20T14:09:44.0514170Z <a id="common"></a>
2025-08-20T14:09:44.0514286Z 
2025-08-20T14:09:44.0514347Z # common
2025-08-20T14:09:44.0514438Z 
2025-08-20T14:09:44.0514521Z <a id="common.dsn"></a>
2025-08-20T14:09:44.0514717Z 
2025-08-20T14:09:44.0514783Z # common.dsn
2025-08-20T14:09:44.0514878Z 
2025-08-20T14:09:44.0514971Z <a id="common.dsn.build_dsn"></a>
2025-08-20T14:09:44.0515121Z 
2025-08-20T14:09:44.0515184Z #### build\_dsn
2025-08-20T14:09:44.0515289Z 
2025-08-20T14:09:44.0515355Z ```python
2025-08-20T14:09:44.0515533Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:09:44.0515974Z ```
2025-08-20T14:09:44.0516315Z 
2025-08-20T14:09:44.0516455Z Return a Postgres DSN, validating required variables.
2025-08-20T14:09:44.0516665Z 
2025-08-20T14:09:44.0516855Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T14:09:44.0517297Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T14:09:44.0517711Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T14:09:44.0518025Z missing.
2025-08-20T14:09:44.0518114Z 
2025-08-20T14:09:44.0518204Z <a id="common.models_vendor"></a>
2025-08-20T14:09:44.0518355Z 
2025-08-20T14:09:44.0518428Z # common.models\_vendor
2025-08-20T14:09:44.0518549Z 
2025-08-20T14:09:44.0518643Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T14:09:44.0518809Z 
2025-08-20T14:09:44.0518877Z ## Vendor Objects
2025-08-20T14:09:44.0518991Z 
2025-08-20T14:09:44.0519055Z ```python
2025-08-20T14:09:44.0519207Z class Vendor(Base)
2025-08-20T14:09:44.0519375Z ```
2025-08-20T14:09:44.0519465Z 
2025-08-20T14:09:44.0519553Z Vendor of inventory items.
2025-08-20T14:09:44.0519686Z 
2025-08-20T14:09:44.0519786Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T14:09:44.0519967Z 
2025-08-20T14:09:44.0520048Z ## VendorPrice Objects
2025-08-20T14:09:44.0520166Z 
2025-08-20T14:09:44.0520227Z ```python
2025-08-20T14:09:44.0520391Z class VendorPrice(Base)
2025-08-20T14:09:44.0520569Z ```
2025-08-20T14:09:44.0520659Z 
2025-08-20T14:09:44.0520761Z Association table linking vendors to pricing.
2025-08-20T14:09:44.0520941Z 
2025-08-20T14:09:44.0521023Z <a id="common.db_url"></a>
2025-08-20T14:09:44.0521149Z 
2025-08-20T14:09:44.0521215Z # common.db\_url
2025-08-20T14:09:44.0521319Z 
2025-08-20T14:09:44.0521409Z <a id="common.db_url.build_url"></a>
2025-08-20T14:09:44.0521563Z 
2025-08-20T14:09:44.0521628Z #### build\_url
2025-08-20T14:09:44.0521735Z 
2025-08-20T14:09:44.0521797Z ```python
2025-08-20T14:09:44.0521968Z def build_url(async_: bool = True) -> str
2025-08-20T14:09:44.0522205Z ```
2025-08-20T14:09:44.0522296Z 
2025-08-20T14:09:44.0522403Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:09:44.0522581Z 
2025-08-20T14:09:44.0522660Z <a id="common.keepa"></a>
2025-08-20T14:09:44.0522794Z 
2025-08-20T14:09:44.0522862Z # common.keepa
2025-08-20T14:09:44.0522962Z 
2025-08-20T14:09:44.0523035Z <a id="common.llm"></a>
2025-08-20T14:09:44.0523158Z 
2025-08-20T14:09:44.0523222Z # common.llm
2025-08-20T14:09:44.0523319Z 
2025-08-20T14:09:44.0523405Z <a id="common.settings"></a>
2025-08-20T14:09:44.0523542Z 
2025-08-20T14:09:44.0523611Z # common.settings
2025-08-20T14:09:44.0523718Z 
2025-08-20T14:09:44.0523797Z <a id="common.db"></a>
2025-08-20T14:09:44.0523917Z 
2025-08-20T14:09:44.0523982Z # common.db
2025-08-20T14:09:44.0524077Z 
2025-08-20T14:09:44.0524170Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T14:09:44.0524343Z 
2025-08-20T14:09:44.0524425Z #### build\_sqlalchemy\_url
2025-08-20T14:09:44.0524555Z 
2025-08-20T14:09:44.0524618Z ```python
2025-08-20T14:09:44.0524788Z def build_sqlalchemy_url() -> str
2025-08-20T14:09:44.0525126Z ```
2025-08-20T14:09:44.0525210Z 
2025-08-20T14:09:44.0525310Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:09:44.0525479Z 
2025-08-20T14:09:44.0525567Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T14:09:44.0525737Z 
2025-08-20T14:09:44.0525941Z #### build\_asyncpg\_dsn
2025-08-20T14:09:44.0526062Z 
2025-08-20T14:09:44.0526130Z ```python
2025-08-20T14:09:44.0526297Z def build_asyncpg_dsn() -> str
2025-08-20T14:09:44.0526497Z ```
2025-08-20T14:09:44.0526577Z 
2025-08-20T14:09:44.0526701Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:09:44.0526913Z 
2025-08-20T14:09:44.0526997Z <a id="common.db.refresh_mvs"></a>
2025-08-20T14:09:44.0527146Z 
2025-08-20T14:09:44.0527210Z #### refresh\_mvs
2025-08-20T14:09:44.0527318Z 
2025-08-20T14:09:44.0527378Z ```python
2025-08-20T14:09:44.0527572Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:09:44.0527815Z ```
2025-08-20T14:09:44.0527892Z 
2025-08-20T14:09:44.0528163Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:09:44.0528382Z 
2025-08-20T14:09:44.0528457Z <a id="common.config"></a>
2025-08-20T14:09:44.0528587Z 
2025-08-20T14:09:44.0528653Z # common.config
2025-08-20T14:09:44.0528754Z 
2025-08-20T14:09:44.0528825Z <a id="common.base"></a>
2025-08-20T14:09:44.0528946Z 
2025-08-20T14:09:44.0529010Z # common.base
2025-08-20T14:09:44.0529105Z 
2025-08-20T14:09:44.0529189Z <a id="common.base.Base"></a>
2025-08-20T14:09:44.0529322Z 
2025-08-20T14:09:44.0529385Z ## Base Objects
2025-08-20T14:09:44.0529488Z 
2025-08-20T14:09:44.0529548Z ```python
2025-08-20T14:09:44.0529708Z class Base(DeclarativeBase)
2025-08-20T14:09:44.0529902Z ```
2025-08-20T14:09:44.0529980Z 
2025-08-20T14:09:44.0530060Z Base class for SQLAlchemy models.
2025-08-20T14:09:44.0530213Z 
2025-08-20T14:09:44.0530282Z <a id="repricer"></a>
2025-08-20T14:09:44.0530395Z 
2025-08-20T14:09:44.0530465Z # repricer
2025-08-20T14:09:44.0530552Z 
2025-08-20T14:09:44.0530637Z <a id="repricer.app.schemas"></a>
2025-08-20T14:09:44.0530801Z 
2025-08-20T14:09:44.0530875Z # repricer.app.schemas
2025-08-20T14:09:44.0530992Z 
2025-08-20T14:09:44.0531073Z <a id="repricer.app.deps"></a>
2025-08-20T14:09:44.0531217Z 
2025-08-20T14:09:44.0531287Z # repricer.app.deps
2025-08-20T14:09:44.0531399Z 
2025-08-20T14:09:44.0531535Z Placeholder module for Keepa / SP-API clients.
2025-08-20T14:09:44.0531717Z 
2025-08-20T14:09:44.0531798Z <a id="repricer.app.logic"></a>
2025-08-20T14:09:44.0531946Z 
2025-08-20T14:09:44.0532018Z # repricer.app.logic
2025-08-20T14:09:44.0532129Z 
2025-08-20T14:09:44.0532224Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T14:09:44.0532400Z 
2025-08-20T14:09:44.0532463Z #### MIN\_MARGIN
2025-08-20T14:09:44.0532565Z 
2025-08-20T14:09:44.0532633Z 15 % ROI
2025-08-20T14:09:44.0532717Z 
2025-08-20T14:09:44.0532817Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T14:09:44.0532994Z 
2025-08-20T14:09:44.0533071Z #### compute\_price
2025-08-20T14:09:44.0533173Z 
2025-08-20T14:09:44.0533246Z ```python
2025-08-20T14:09:44.0533494Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T14:09:44.0533784Z ```
2025-08-20T14:09:44.0533871Z 
2025-08-20T14:09:44.0533978Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T14:09:44.0534256Z Replace with real competitive logic later.
2025-08-20T14:09:44.0534423Z 
2025-08-20T14:09:44.0534503Z <a id="repricer.app.main"></a>
2025-08-20T14:09:44.0534646Z 
2025-08-20T14:09:44.0534716Z # repricer.app.main
2025-08-20T14:09:44.0534821Z 
2025-08-20T14:09:44.0534899Z <a id="repricer.app"></a>
2025-08-20T14:09:44.0535032Z 
2025-08-20T14:09:44.0535099Z # repricer.app
2025-08-20T14:09:44.0535195Z 
2025-08-20T14:09:44.0535289Z <a id="repricer.tests.test_imports"></a>
2025-08-20T14:09:44.0535454Z 
2025-08-20T14:09:44.0535534Z # repricer.tests.test\_imports
2025-08-20T14:09:44.0535667Z 
2025-08-20T14:09:44.0535858Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T14:09:44.0536018Z 
2025-08-20T14:09:44.0536097Z # repricer.tests.test\_smoke
2025-08-20T14:09:44.0536357Z 
2025-08-20T14:09:44.0536433Z <a id="repricer.tests"></a>
2025-08-20T14:09:44.0536562Z 
2025-08-20T14:09:44.0536634Z # repricer.tests
2025-08-20T14:09:44.0536738Z 
2025-08-20T14:09:44.0536799Z <a id="db"></a>
2025-08-20T14:09:44.0536893Z 
2025-08-20T14:09:44.0536960Z # db
2025-08-20T14:09:44.0537043Z 
2025-08-20T14:09:44.0537119Z <a id="db.utils.views"></a>
2025-08-20T14:09:44.0537253Z 
2025-08-20T14:09:44.0537317Z # db.utils.views
2025-08-20T14:09:44.0537415Z 
2025-08-20T14:09:44.0537505Z <a id="db.utils.views.replace_view"></a>
2025-08-20T14:09:44.0537671Z 
2025-08-20T14:09:44.0537736Z #### replace\_view
2025-08-20T14:09:44.0537840Z 
2025-08-20T14:09:44.0537908Z ```python
2025-08-20T14:09:44.0538092Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T14:09:44.0538335Z ```
2025-08-20T14:09:44.0538416Z 
2025-08-20T14:09:44.0538504Z Drop and recreate a SQL view atomically.
2025-08-20T14:09:44.0538670Z 
2025-08-20T14:09:44.0538739Z <a id="db.utils"></a>
2025-08-20T14:09:44.0538980Z 
2025-08-20T14:09:44.0539050Z # db.utils
2025-08-20T14:09:44.0539138Z 
2025-08-20T14:09:44.0539213Z <a id="price_importer"></a>
2025-08-20T14:09:44.0539343Z 
2025-08-20T14:09:44.0539424Z # price\_importer
2025-08-20T14:09:44.0539528Z 
2025-08-20T14:09:44.0539628Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T14:09:44.0539815Z 
2025-08-20T14:09:44.0539906Z # price\_importer.services\_common.dsn
2025-08-20T14:09:44.0540068Z 
2025-08-20T14:09:44.0540190Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T14:09:44.0540405Z 
2025-08-20T14:09:44.0540469Z #### build\_dsn
2025-08-20T14:09:44.0540569Z 
2025-08-20T14:09:44.0540639Z ```python
2025-08-20T14:09:44.0540805Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:09:44.0541027Z ```
2025-08-20T14:09:44.0541106Z 
2025-08-20T14:09:44.0541173Z Return safe DSN.
2025-08-20T14:09:44.0541284Z 
2025-08-20T14:09:44.0541708Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T14:09:44.0541912Z 
2025-08-20T14:09:44.0542065Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T14:09:44.0542267Z 
2025-08-20T14:09:44.0542379Z # price\_importer.services\_common.models\_vendor
2025-08-20T14:09:44.0542566Z 
2025-08-20T14:09:44.0542678Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T14:09:44.0542864Z 
2025-08-20T14:09:44.0542959Z # price\_importer.services\_common.db\_url
2025-08-20T14:09:44.0543136Z 
2025-08-20T14:09:44.0543265Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T14:09:44.0543479Z 
2025-08-20T14:09:44.0543549Z #### build\_url
2025-08-20T14:09:44.0543651Z 
2025-08-20T14:09:44.0543713Z ```python
2025-08-20T14:09:44.0543892Z def build_url(async_: bool = True) -> str
2025-08-20T14:09:44.0544115Z ```
2025-08-20T14:09:44.0544205Z 
2025-08-20T14:09:44.0544302Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:09:44.0544474Z 
2025-08-20T14:09:44.0544581Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T14:09:44.0544778Z 
2025-08-20T14:09:44.0544881Z # price\_importer.services\_common.keepa
2025-08-20T14:09:44.0545047Z 
2025-08-20T14:09:44.0545161Z <a id="price_importer.services_common.llm"></a>
2025-08-20T14:09:44.0545340Z 
2025-08-20T14:09:44.0545428Z # price\_importer.services\_common.llm
2025-08-20T14:09:44.0545594Z 
2025-08-20T14:09:44.0545705Z <a id="price_importer.services_common.settings"></a>
2025-08-20T14:09:44.0545999Z 
2025-08-20T14:09:44.0546093Z # price\_importer.services\_common.settings
2025-08-20T14:09:44.0546267Z 
2025-08-20T14:09:44.0546364Z <a id="price_importer.services_common.db"></a>
2025-08-20T14:09:44.0546537Z 
2025-08-20T14:09:44.0546630Z # price\_importer.services\_common.db
2025-08-20T14:09:44.0546784Z 
2025-08-20T14:09:44.0546936Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T14:09:44.0547175Z 
2025-08-20T14:09:44.0547249Z #### build\_sqlalchemy\_url
2025-08-20T14:09:44.0547380Z 
2025-08-20T14:09:44.0547442Z ```python
2025-08-20T14:09:44.0547617Z def build_sqlalchemy_url() -> str
2025-08-20T14:09:44.0547976Z ```
2025-08-20T14:09:44.0548059Z 
2025-08-20T14:09:44.0548153Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:09:44.0548320Z 
2025-08-20T14:09:44.0548464Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T14:09:44.0548684Z 
2025-08-20T14:09:44.0548757Z #### build\_asyncpg\_dsn
2025-08-20T14:09:44.0548889Z 
2025-08-20T14:09:44.0548950Z ```python
2025-08-20T14:09:44.0549112Z def build_asyncpg_dsn() -> str
2025-08-20T14:09:44.0549315Z ```
2025-08-20T14:09:44.0549394Z 
2025-08-20T14:09:44.0549526Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:09:44.0549735Z 
2025-08-20T14:09:44.0549859Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T14:09:44.0550069Z 
2025-08-20T14:09:44.0550134Z #### refresh\_mvs
2025-08-20T14:09:44.0550239Z 
2025-08-20T14:09:44.0550300Z ```python
2025-08-20T14:09:44.0550495Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:09:44.0550743Z ```
2025-08-20T14:09:44.0550939Z 
2025-08-20T14:09:44.0551080Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:09:44.0551292Z 
2025-08-20T14:09:44.0551395Z <a id="price_importer.services_common"></a>
2025-08-20T14:09:44.0551565Z 
2025-08-20T14:09:44.0551652Z # price\_importer.services\_common
2025-08-20T14:09:44.0551814Z 
2025-08-20T14:09:44.0551915Z <a id="price_importer.services_common.base"></a>
2025-08-20T14:09:44.0552094Z 
2025-08-20T14:09:44.0552188Z # price\_importer.services\_common.base
2025-08-20T14:09:44.0552349Z 
2025-08-20T14:09:44.0552438Z <a id="price_importer.normaliser"></a>
2025-08-20T14:09:44.0552596Z 
2025-08-20T14:09:44.0552684Z # price\_importer.normaliser
2025-08-20T14:09:44.0552819Z 
2025-08-20T14:09:44.0552919Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T14:09:44.0553111Z 
2025-08-20T14:09:44.0553197Z # price\_importer.common.models\_vendor
2025-08-20T14:09:44.0553356Z 
2025-08-20T14:09:44.0553449Z <a id="price_importer.common.db_url"></a>
2025-08-20T14:09:44.0553615Z 
2025-08-20T14:09:44.0553712Z # price\_importer.common.db\_url
2025-08-20T14:09:44.0553855Z 
2025-08-20T14:09:44.0553962Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T14:09:44.0554145Z 
2025-08-20T14:09:44.0554207Z #### make\_dsn
2025-08-20T14:09:44.0554312Z 
2025-08-20T14:09:44.0554375Z ```python
2025-08-20T14:09:44.0554542Z def make_dsn(async_: bool = False) -> str
2025-08-20T14:09:44.0554765Z ```
2025-08-20T14:09:44.0554845Z 
2025-08-20T14:09:44.0554973Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T14:09:44.0555167Z 
2025-08-20T14:09:44.0555271Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T14:09:44.0555459Z 
2025-08-20T14:09:44.0555522Z #### build\_url
2025-08-20T14:09:44.0555621Z 
2025-08-20T14:09:44.0555683Z ```python
2025-08-20T14:09:44.0556117Z def build_url(async_: bool = False) -> str
2025-08-20T14:09:44.0556352Z ```
2025-08-20T14:09:44.0556464Z 
2025-08-20T14:09:44.0556586Z Return Postgres DSN built from environment variables.
2025-08-20T14:09:44.0556792Z 
2025-08-20T14:09:44.0556891Z <a id="price_importer.common"></a>
2025-08-20T14:09:44.0557043Z 
2025-08-20T14:09:44.0557122Z # price\_importer.common
2025-08-20T14:09:44.0557254Z 
2025-08-20T14:09:44.0557344Z <a id="price_importer.common.base"></a>
2025-08-20T14:09:44.0557507Z 
2025-08-20T14:09:44.0557591Z # price\_importer.common.base
2025-08-20T14:09:44.0557740Z 
2025-08-20T14:09:44.0557837Z <a id="price_importer.tests.conftest"></a>
2025-08-20T14:09:44.0558007Z 
2025-08-20T14:09:44.0558111Z # price\_importer.tests.conftest
2025-08-20T14:09:44.0558260Z 
2025-08-20T14:09:44.0558361Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T14:09:44.0558544Z 
2025-08-20T14:09:44.0558631Z # price\_importer.tests.test\_reader
2025-08-20T14:09:44.0558787Z 
2025-08-20T14:09:44.0558887Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T14:09:44.0559117Z 
2025-08-20T14:09:44.0559203Z # price\_importer.tests.test\_imports
2025-08-20T14:09:44.0559359Z 
2025-08-20T14:09:44.0559460Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T14:09:44.0559768Z 
2025-08-20T14:09:44.0559851Z # price\_importer.tests.test\_smoke
2025-08-20T14:09:44.0560008Z 
2025-08-20T14:09:44.0560110Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T14:09:44.0560293Z 
2025-08-20T14:09:44.0560404Z # price\_importer.tests.test\_normaliser
2025-08-20T14:09:44.0560567Z 
2025-08-20T14:09:44.0560651Z <a id="price_importer.tests"></a>
2025-08-20T14:09:44.0560796Z 
2025-08-20T14:09:44.0560877Z # price\_importer.tests
2025-08-20T14:09:44.0560997Z 
2025-08-20T14:09:44.0561079Z <a id="price_importer.reader"></a>
2025-08-20T14:09:44.0561237Z 
2025-08-20T14:09:44.0561315Z # price\_importer.reader
2025-08-20T14:09:44.0561441Z 
2025-08-20T14:09:44.0561526Z <a id="price_importer.repository"></a>
2025-08-20T14:09:44.0561697Z 
2025-08-20T14:09:44.0561780Z # price\_importer.repository
2025-08-20T14:09:44.0561914Z 
2025-08-20T14:09:44.0562005Z <a id="price_importer.import"></a>
2025-08-20T14:09:44.0562151Z 
2025-08-20T14:09:44.0562225Z # price\_importer.import
2025-08-20T14:09:44.0562474Z 
2025-08-20T14:09:44.0562543Z <a id="fees_h10"></a>
2025-08-20T14:09:44.0562653Z 
2025-08-20T14:09:44.0562717Z # fees\_h10
2025-08-20T14:09:44.0562811Z 
2025-08-20T14:09:44.0562886Z <a id="fees_h10.worker"></a>
2025-08-20T14:09:44.0563013Z 
2025-08-20T14:09:44.0563085Z # fees\_h10.worker
2025-08-20T14:09:44.0563188Z 
2025-08-20T14:09:44.0563282Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T14:09:44.0563461Z 
2025-08-20T14:09:44.0563534Z #### list\_active\_asins
2025-08-20T14:09:44.0563650Z 
2025-08-20T14:09:44.0563712Z ```python
2025-08-20T14:09:44.0563882Z def list_active_asins() -> list[str]
2025-08-20T14:09:44.0564084Z ```
2025-08-20T14:09:44.0564171Z 
2025-08-20T14:09:44.0564280Z Return known ASINs or an empty list if unavailable.
2025-08-20T14:09:44.0564470Z 
2025-08-20T14:09:44.0564558Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T14:09:44.0564712Z 
2025-08-20T14:09:44.0564787Z # fees\_h10.tests.test\_smoke
2025-08-20T14:09:44.0564926Z 
2025-08-20T14:09:44.0565011Z <a id="fees_h10.tests"></a>
2025-08-20T14:09:44.0565137Z 
2025-08-20T14:09:44.0565202Z # fees\_h10.tests
2025-08-20T14:09:44.0565309Z 
2025-08-20T14:09:44.0565381Z <a id="fees_h10.client"></a>
2025-08-20T14:09:44.0565509Z 
2025-08-20T14:09:44.0565580Z # fees\_h10.client
2025-08-20T14:09:44.0565681Z 
2025-08-20T14:09:44.0565872Z <a id="fees_h10.repository"></a>
2025-08-20T14:09:44.0566019Z 
2025-08-20T14:09:44.0566089Z # fees\_h10.repository
2025-08-20T14:09:44.0566202Z 
2025-08-20T14:09:44.0566302Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T14:09:44.0566486Z 
2025-08-20T14:09:44.0566556Z #### upsert\_fees\_raw
2025-08-20T14:09:44.0566667Z 
2025-08-20T14:09:44.0566735Z ```python
2025-08-20T14:09:44.0566898Z def upsert_fees_raw(engine: Engine,
2025-08-20T14:09:44.0567145Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T14:09:44.0567378Z                     *,
2025-08-20T14:09:44.0567601Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T14:09:44.0567873Z ```
2025-08-20T14:09:44.0567960Z 
2025-08-20T14:09:44.0568037Z Idempotent upsert for fees.
2025-08-20T14:09:44.0568169Z 
2025-08-20T14:09:44.0568330Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T14:09:44.0568669Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T14:09:44.0568976Z Only updates when one of the mutable fields changes.
2025-08-20T14:09:44.0569172Z 
2025-08-20T14:09:44.0569242Z <a id="emailer"></a>
2025-08-20T14:09:44.0569359Z 
2025-08-20T14:09:44.0569422Z # emailer
2025-08-20T14:09:44.0569510Z 
2025-08-20T14:09:44.0569610Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T14:09:44.0569795Z 
2025-08-20T14:09:44.0569885Z # emailer.tests.test\_import\_emailer
2025-08-20T14:09:44.0570040Z 
2025-08-20T14:09:44.0570133Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T14:09:44.0570286Z 
2025-08-20T14:09:44.0570364Z # emailer.tests.test\_smoke
2025-08-20T14:09:44.0570504Z 
2025-08-20T14:09:44.0570583Z <a id="emailer.tests"></a>
2025-08-20T14:09:44.0570840Z 
2025-08-20T14:09:44.0570908Z # emailer.tests
2025-08-20T14:09:44.0571023Z 
2025-08-20T14:09:44.0571105Z <a id="emailer.generate_body"></a>
2025-08-20T14:09:44.0571252Z 
2025-08-20T14:09:44.0571337Z # emailer.generate\_body
2025-08-20T14:09:44.0571459Z 
2025-08-20T14:09:44.0571531Z <a id="llm_server"></a>
2025-08-20T14:09:44.0571653Z 
2025-08-20T14:09:44.0571717Z # llm\_server
2025-08-20T14:09:44.0571810Z 
2025-08-20T14:09:44.0571887Z <a id="llm_server.app"></a>
2025-08-20T14:09:44.0572019Z 
2025-08-20T14:09:44.0572089Z # llm\_server.app
2025-08-20T14:09:44.0572191Z 
