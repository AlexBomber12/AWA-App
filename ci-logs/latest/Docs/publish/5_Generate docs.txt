2025-08-19T03:57:25.4328034Z ##[group]Run pydoc-markdown
2025-08-19T03:57:25.4328337Z [36;1mpydoc-markdown[0m
2025-08-19T03:57:25.4368014Z shell: /usr/bin/bash -e {0}
2025-08-19T03:57:25.4368247Z env:
2025-08-19T03:57:25.4368485Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:57:25.4368902Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T03:57:25.4369465Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:57:25.4369820Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:57:25.4370171Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:57:25.4370518Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T03:57:25.4370810Z ##[endgroup]
2025-08-19T03:57:25.9843674Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T03:57:25.9844464Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T03:57:25.9844873Z In "pydoc-markdown.yml"
2025-08-19T03:57:25.9845242Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T03:57:25.9845863Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T03:57:25.9846486Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T03:57:25.9846915Z 
2025-08-19T03:57:26.3069210Z <a id="__init__"></a>
2025-08-19T03:57:26.3069574Z 
2025-08-19T03:57:26.3069702Z # \_\_init\_\_
2025-08-19T03:57:26.3069910Z 
2025-08-19T03:57:26.3070045Z <a id="api"></a>
2025-08-19T03:57:26.3070243Z 
2025-08-19T03:57:26.3070353Z # api
2025-08-19T03:57:26.3070520Z 
2025-08-19T03:57:26.3070660Z <a id="api.errors"></a>
2025-08-19T03:57:26.3070899Z 
2025-08-19T03:57:26.3071018Z # api.errors
2025-08-19T03:57:26.3071208Z 
2025-08-19T03:57:26.3071358Z <a id="api.sentry_config"></a>
2025-08-19T03:57:26.3071630Z 
2025-08-19T03:57:26.3071774Z # api.sentry\_config
2025-08-19T03:57:26.3071989Z 
2025-08-19T03:57:26.3072160Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T03:57:26.3072479Z 
2025-08-19T03:57:26.3072971Z # api.tests.test\_sentry\_scrub
2025-08-19T03:57:26.3073274Z 
2025-08-19T03:57:26.3073434Z <a id="api.tests.test_errors_json"></a>
2025-08-19T03:57:26.3073757Z 
2025-08-19T03:57:26.3073902Z # api.tests.test\_errors\_json
2025-08-19T03:57:26.3074167Z 
2025-08-19T03:57:26.3074318Z <a id="api.tests.test_llm"></a>
2025-08-19T03:57:26.3074578Z 
2025-08-19T03:57:26.3074713Z # api.tests.test\_llm
2025-08-19T03:57:26.3074935Z 
2025-08-19T03:57:26.3075111Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T03:57:26.3075430Z 
2025-08-19T03:57:26.3075576Z # api.tests.test\_sentry\_event
2025-08-19T03:57:26.3075852Z 
2025-08-19T03:57:26.3076083Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T03:57:26.3076480Z 
2025-08-19T03:57:26.3076632Z ## DummyTransport Objects
2025-08-19T03:57:26.3076873Z 
2025-08-19T03:57:26.3076988Z ```python
2025-08-19T03:57:26.3077301Z class DummyTransport()
2025-08-19T03:57:26.3077628Z ```
2025-08-19T03:57:26.3077786Z 
2025-08-19T03:57:26.3078113Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T03:57:26.3078615Z 
2025-08-19T03:57:26.3078761Z #### capture\_envelope
2025-08-19T03:57:26.3079213Z 
2025-08-19T03:57:26.3079337Z ```python
2025-08-19T03:57:26.3079672Z def capture_envelope(envelope)
2025-08-19T03:57:26.3080043Z ```
2025-08-19T03:57:26.3080195Z 
2025-08-19T03:57:26.3080433Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T03:57:26.3080825Z 
2025-08-19T03:57:26.3080982Z <a id="api.tests.test_cors"></a>
2025-08-19T03:57:26.3081265Z 
2025-08-19T03:57:26.3081397Z # api.tests.test\_cors
2025-08-19T03:57:26.3081618Z 
2025-08-19T03:57:26.3081776Z <a id="api.tests.test_imports"></a>
2025-08-19T03:57:26.3082079Z 
2025-08-19T03:57:26.3082220Z # api.tests.test\_imports
2025-08-19T03:57:26.3082458Z 
2025-08-19T03:57:26.3082625Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T03:57:26.3082936Z 
2025-08-19T03:57:26.3083082Z # api.tests.test\_rate\_limit
2025-08-19T03:57:26.3083355Z 
2025-08-19T03:57:26.3083534Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T03:57:26.3084239Z 
2025-08-19T03:57:26.3084367Z #### app
2025-08-19T03:57:26.3084545Z 
2025-08-19T03:57:26.3084657Z noqa: E402
2025-08-19T03:57:26.3084824Z 
2025-08-19T03:57:26.3084997Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T03:57:26.3085314Z 
2025-08-19T03:57:26.3085462Z # api.tests.test\_entrypoint
2025-08-19T03:57:26.3085726Z 
2025-08-19T03:57:26.3085880Z <a id="api.tests.test_health"></a>
2025-08-19T03:57:26.3086162Z 
2025-08-19T03:57:26.3086299Z # api.tests.test\_health
2025-08-19T03:57:26.3086540Z 
2025-08-19T03:57:26.3086688Z <a id="api.logging_config"></a>
2025-08-19T03:57:26.3086956Z 
2025-08-19T03:57:26.3087092Z # api.logging\_config
2025-08-19T03:57:26.3087310Z 
2025-08-19T03:57:26.3087457Z <a id="api.migrations.env"></a>
2025-08-19T03:57:26.3087719Z 
2025-08-19T03:57:26.3087862Z # api.migrations.env
2025-08-19T03:57:26.3088083Z 
2025-08-19T03:57:26.3088307Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T03:57:26.3088704Z 
2025-08-19T03:57:26.3088915Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T03:57:26.3089472Z 
2025-08-19T03:57:26.3089699Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T03:57:26.3090080Z 
2025-08-19T03:57:26.3090261Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T03:57:26.3090586Z 
2025-08-19T03:57:26.3090880Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T03:57:26.3091335Z 
2025-08-19T03:57:26.3091592Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T03:57:26.3092017Z 
2025-08-19T03:57:26.3092246Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T03:57:26.3092633Z 
2025-08-19T03:57:26.3092840Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T03:57:26.3093197Z 
2025-08-19T03:57:26.3093474Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T03:57:26.3093870Z 
2025-08-19T03:57:26.3094065Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T03:57:26.3094408Z 
2025-08-19T03:57:26.3094644Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T03:57:26.3095290Z 
2025-08-19T03:57:26.3095504Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T03:57:26.3095873Z 
2025-08-19T03:57:26.3096105Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T03:57:26.3096485Z 
2025-08-19T03:57:26.3096681Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T03:57:26.3097042Z 
2025-08-19T03:57:26.3097276Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T03:57:26.3097673Z 
2025-08-19T03:57:26.3097869Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T03:57:26.3098229Z 
2025-08-19T03:57:26.3098489Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T03:57:26.3098906Z 
2025-08-19T03:57:26.3099333Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T03:57:26.3099727Z 
2025-08-19T03:57:26.3099958Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T03:57:26.3100356Z 
2025-08-19T03:57:26.3100560Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T03:57:26.3100958Z 
2025-08-19T03:57:26.3101220Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T03:57:26.3101654Z 
2025-08-19T03:57:26.3101872Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T03:57:26.3102343Z 
2025-08-19T03:57:26.3102551Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T03:57:26.3102909Z 
2025-08-19T03:57:26.3103093Z # api.migrations.versions.0001\_baseline
2025-08-19T03:57:26.3103414Z 
2025-08-19T03:57:26.3103576Z <a id="api.migrations.versions"></a>
2025-08-19T03:57:26.3103885Z 
2025-08-19T03:57:26.3104031Z # api.migrations.versions
2025-08-19T03:57:26.3104280Z 
2025-08-19T03:57:26.3104426Z <a id="api.migrations"></a>
2025-08-19T03:57:26.3104692Z 
2025-08-19T03:57:26.3104821Z # api.migrations
2025-08-19T03:57:26.3105024Z 
2025-08-19T03:57:26.3105156Z <a id="api.db"></a>
2025-08-19T03:57:26.3105362Z 
2025-08-19T03:57:26.3105475Z # api.db
2025-08-19T03:57:26.3105644Z 
2025-08-19T03:57:26.3105798Z <a id="api.routes.stats"></a>
2025-08-19T03:57:26.3106318Z 
2025-08-19T03:57:26.3106451Z # api.routes.stats
2025-08-19T03:57:26.3106660Z 
2025-08-19T03:57:26.3106816Z <a id="api.routes.stats.kpi"></a>
2025-08-19T03:57:26.3107105Z 
2025-08-19T03:57:26.3107225Z #### kpi
2025-08-19T03:57:26.3107445Z 
2025-08-19T03:57:26.3107562Z ```python
2025-08-19T03:57:26.3107874Z @router.get("/stats/kpi")
2025-08-19T03:57:26.3108303Z def kpi() -> List[Dict[str, int]]
2025-08-19T03:57:26.3108695Z ```
2025-08-19T03:57:26.3108847Z 
2025-08-19T03:57:26.3109160Z Return KPI metrics (mock).
2025-08-19T03:57:26.3109725Z 
2025-08-19T03:57:26.3109969Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T03:57:26.3110315Z 
2025-08-19T03:57:26.3110451Z #### roi\_by\_vendor
2025-08-19T03:57:26.3110666Z 
2025-08-19T03:57:26.3110786Z ```python
2025-08-19T03:57:26.3111114Z @router.get("/stats/roi_by_vendor")
2025-08-19T03:57:26.3111576Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T03:57:26.3112000Z ```
2025-08-19T03:57:26.3112160Z 
2025-08-19T03:57:26.3112319Z Return ROI percent by vendor.
2025-08-19T03:57:26.3112596Z 
2025-08-19T03:57:26.3112765Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T03:57:26.3113081Z 
2025-08-19T03:57:26.3113203Z #### roi\_trend
2025-08-19T03:57:26.3113392Z 
2025-08-19T03:57:26.3113507Z ```python
2025-08-19T03:57:26.3113818Z @router.get("/stats/roi_trend")
2025-08-19T03:57:26.3114261Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T03:57:26.3114700Z ```
2025-08-19T03:57:26.3114924Z 
2025-08-19T03:57:26.3115062Z Return 30-day ROI trend.
2025-08-19T03:57:26.3115308Z 
2025-08-19T03:57:26.3115449Z <a id="api.routes.roi"></a>
2025-08-19T03:57:26.3115697Z 
2025-08-19T03:57:26.3115827Z # api.routes.roi
2025-08-19T03:57:26.3116023Z 
2025-08-19T03:57:26.3116172Z <a id="api.routes.health"></a>
2025-08-19T03:57:26.3116432Z 
2025-08-19T03:57:26.3116570Z # api.routes.health
2025-08-19T03:57:26.3116772Z 
2025-08-19T03:57:26.3116942Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T03:57:26.3117491Z 
2025-08-19T03:57:26.3117615Z #### MAX\_SKEW
2025-08-19T03:57:26.3117800Z 
2025-08-19T03:57:26.3117916Z seconds
2025-08-19T03:57:26.3118075Z 
2025-08-19T03:57:26.3118244Z <a id="api.routes.health.health"></a>
2025-08-19T03:57:26.3118560Z 
2025-08-19T03:57:26.3118682Z #### health
2025-08-19T03:57:26.3118850Z 
2025-08-19T03:57:26.3119171Z ```python
2025-08-19T03:57:26.3119556Z @router.get("/health", include_in_schema=False)
2025-08-19T03:57:26.3120307Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T03:57:26.3120959Z ```
2025-08-19T03:57:26.3121112Z 
2025-08-19T03:57:26.3121341Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T03:57:26.3121713Z 
2025-08-19T03:57:26.3121874Z <a id="api.routes.repository"></a>
2025-08-19T03:57:26.3122175Z 
2025-08-19T03:57:26.3122316Z # api.routes.repository
2025-08-19T03:57:26.3122545Z 
2025-08-19T03:57:26.3122678Z <a id="api.routes"></a>
2025-08-19T03:57:26.3122907Z 
2025-08-19T03:57:26.3123023Z # api.routes
2025-08-19T03:57:26.3123218Z 
2025-08-19T03:57:26.3123373Z <a id="api.models.fee"></a>
2025-08-19T03:57:26.3123624Z 
2025-08-19T03:57:26.3123747Z # api.models.fee
2025-08-19T03:57:26.3123940Z 
2025-08-19T03:57:26.3124061Z <a id="api.models"></a>
2025-08-19T03:57:26.3124267Z 
2025-08-19T03:57:26.3124379Z # api.models
2025-08-19T03:57:26.3124546Z 
2025-08-19T03:57:26.3124681Z <a id="api.roi_repository"></a>
2025-08-19T03:57:26.3124926Z 
2025-08-19T03:57:26.3125062Z # api.roi\_repository
2025-08-19T03:57:26.3125276Z 
2025-08-19T03:57:26.3125402Z <a id="api.main"></a>
2025-08-19T03:57:26.3125611Z 
2025-08-19T03:57:26.3125736Z # api.main
2025-08-19T03:57:26.3125907Z 
2025-08-19T03:57:26.3126049Z <a id="api.main.ready"></a>
2025-08-19T03:57:26.3126305Z 
2025-08-19T03:57:26.3126420Z #### ready
2025-08-19T03:57:26.3126585Z 
2025-08-19T03:57:26.3126701Z ```python
2025-08-19T03:57:26.3127194Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T03:57:26.3128009Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T03:57:26.3128941Z                                                                       str]
2025-08-19T03:57:26.3129588Z ```
2025-08-19T03:57:26.3129742Z 
2025-08-19T03:57:26.3129924Z Return 200 only when migrations are at head.
2025-08-19T03:57:26.3130264Z 
2025-08-19T03:57:26.3130400Z <a id="api.config"></a>
2025-08-19T03:57:26.3130625Z 
2025-08-19T03:57:26.3130741Z # api.config
2025-08-19T03:57:26.3130925Z 
2025-08-19T03:57:26.3131038Z <a id="etl"></a>
2025-08-19T03:57:26.3131225Z 
2025-08-19T03:57:26.3131340Z # etl
2025-08-19T03:57:26.3131497Z 
2025-08-19T03:57:26.3131647Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T03:57:26.3131935Z 
2025-08-19T03:57:26.3132066Z # etl.fba\_fee\_ingestor
2025-08-19T03:57:26.3132295Z 
2025-08-19T03:57:26.3132441Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T03:57:26.3132727Z 
2025-08-19T03:57:26.3132863Z # etl.sp\_fees\_ingestor
2025-08-19T03:57:26.3133089Z 
2025-08-19T03:57:26.3133237Z <a id="etl.keepa_ingestor"></a>
2025-08-19T03:57:26.3133521Z 
2025-08-19T03:57:26.3133650Z # etl.keepa\_ingestor
2025-08-19T03:57:26.3133874Z 
2025-08-19T03:57:26.3133996Z <a id="etl.db"></a>
2025-08-19T03:57:26.3134195Z 
2025-08-19T03:57:26.3134308Z # etl.db
2025-08-19T03:57:26.3134476Z 
2025-08-19T03:57:26.3134628Z <a id="etl.dialects.schemas"></a>
2025-08-19T03:57:26.3134908Z 
2025-08-19T03:57:26.3135050Z # etl.dialects.schemas
2025-08-19T03:57:26.3135272Z 
2025-08-19T03:57:26.3135463Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T03:57:26.3135812Z 
2025-08-19T03:57:26.3135980Z # etl.dialects.amazon\_reimbursements
2025-08-19T03:57:26.3136282Z 
2025-08-19T03:57:26.3136459Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T03:57:26.3136796Z 
2025-08-19T03:57:26.3136952Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T03:57:26.3137254Z 
2025-08-19T03:57:26.3137428Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T03:57:26.3137744Z 
2025-08-19T03:57:26.3137891Z # etl.dialects.amazon\_returns
2025-08-19T03:57:26.3138393Z 
2025-08-19T03:57:26.3138597Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T03:57:26.3138931Z 
2025-08-19T03:57:26.3139294Z # etl.dialects.amazon\_fee\_preview
2025-08-19T03:57:26.3139737Z 
2025-08-19T03:57:26.3139941Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T03:57:26.3140300Z 
2025-08-19T03:57:26.3140472Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T03:57:26.3140790Z 
2025-08-19T03:57:26.3140973Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T03:57:26.3141308Z 
2025-08-19T03:57:26.3141472Z # etl.dialects.amazon\_settlements
2025-08-19T03:57:26.3141762Z 
2025-08-19T03:57:26.3141900Z <a id="etl.dialects"></a>
2025-08-19T03:57:26.3142152Z 
2025-08-19T03:57:26.3142271Z # etl.dialects
2025-08-19T03:57:26.3142454Z 
2025-08-19T03:57:26.3142583Z <a id="ingest"></a>
2025-08-19T03:57:26.3142778Z 
2025-08-19T03:57:26.3142886Z # ingest
2025-08-19T03:57:26.3143043Z 
2025-08-19T03:57:26.3143202Z <a id="ingest.maintenance"></a>
2025-08-19T03:57:26.3143476Z 
2025-08-19T03:57:26.3143638Z # ingest.maintenance
2025-08-19T03:57:26.3143897Z 
2025-08-19T03:57:26.3144037Z <a id="ingest.copy_loader"></a>
2025-08-19T03:57:26.3144296Z 
2025-08-19T03:57:26.3144424Z # ingest.copy\_loader
2025-08-19T03:57:26.3144650Z 
2025-08-19T03:57:26.3144836Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T03:57:26.3145183Z 
2025-08-19T03:57:26.3145323Z #### copy\_df\_via\_temp
2025-08-19T03:57:26.3145552Z 
2025-08-19T03:57:26.3145666Z ```python
2025-08-19T03:57:26.3145982Z def copy_df_via_temp(engine: Engine,
2025-08-19T03:57:26.3146415Z                      df: pd.DataFrame,
2025-08-19T03:57:26.3146852Z                      target_table: str,
2025-08-19T03:57:26.3147251Z                      *,
2025-08-19T03:57:26.3147628Z                      target_schema: Optional[str] = None,
2025-08-19T03:57:26.3148125Z                      columns: Sequence[str],
2025-08-19T03:57:26.3148635Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T03:57:26.3149363Z                      analyze_after: bool = False,
2025-08-19T03:57:26.3150107Z                      connection: Any | None = None) -> int
2025-08-19T03:57:26.3150566Z ```
2025-08-19T03:57:26.3150719Z 
2025-08-19T03:57:26.3151010Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T03:57:26.3151452Z 
2025-08-19T03:57:26.3151609Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T03:57:26.3151908Z 
2025-08-19T03:57:26.3152059Z # ingest.tests.test\_smoke
2025-08-19T03:57:26.3152303Z 
2025-08-19T03:57:26.3152442Z <a id="ingest.tests"></a>
2025-08-19T03:57:26.3152682Z 
2025-08-19T03:57:26.3152800Z # ingest.tests
2025-08-19T03:57:26.3152987Z 
2025-08-19T03:57:26.3153136Z <a id="ingest.upload_router"></a>
2025-08-19T03:57:26.3153431Z 
2025-08-19T03:57:26.3153566Z # ingest.upload\_router
2025-08-19T03:57:26.3153797Z 
2025-08-19T03:57:26.3153950Z <a id="ingest.email_watcher"></a>
2025-08-19T03:57:26.3154229Z 
2025-08-19T03:57:26.3154360Z # ingest.email\_watcher
2025-08-19T03:57:26.3154580Z 
2025-08-19T03:57:26.3154756Z <a id="ingest.email_watcher.main"></a>
2025-08-19T03:57:26.3155072Z 
2025-08-19T03:57:26.3155185Z #### main
2025-08-19T03:57:26.3155356Z 
2025-08-19T03:57:26.3155468Z ```python
2025-08-19T03:57:26.3155772Z def main() -> dict[str, str]
2025-08-19T03:57:26.3156137Z ```
2025-08-19T03:57:26.3156285Z 
2025-08-19T03:57:26.3156557Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T03:57:26.3156996Z 
2025-08-19T03:57:26.3157247Z Returns {"status": "success"} when processing completes.
2025-08-19T03:57:26.3157648Z 
2025-08-19T03:57:26.3157787Z <a id="ingest.tasks"></a>
2025-08-19T03:57:26.3158032Z 
2025-08-19T03:57:26.3158152Z # ingest.tasks
2025-08-19T03:57:26.3158341Z 
2025-08-19T03:57:26.3158527Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T03:57:26.3158863Z 
2025-08-19T03:57:26.3159205Z #### task\_import\_file
2025-08-19T03:57:26.3159453Z 
2025-08-19T03:57:26.3159579Z ```python
2025-08-19T03:57:26.3159968Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T03:57:26.3160729Z def task_import_file(self: Any,
2025-08-19T03:57:26.3161141Z                      uri: str,
2025-08-19T03:57:26.3161560Z                      report_type: Optional[str] = None,
2025-08-19T03:57:26.3162059Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T03:57:26.3162507Z ```
2025-08-19T03:57:26.3162669Z 
2025-08-19T03:57:26.3162922Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T03:57:26.3163318Z 
2025-08-19T03:57:26.3163469Z <a id="ingest.celery_app"></a>
2025-08-19T03:57:26.3163742Z 
2025-08-19T03:57:26.3163870Z # ingest.celery\_app
2025-08-19T03:57:26.3164081Z 
2025-08-19T03:57:26.3164229Z <a id="ingest.ingest_router"></a>
2025-08-19T03:57:26.3164517Z 
2025-08-19T03:57:26.3164653Z # ingest.ingest\_router
2025-08-19T03:57:26.3164872Z 
2025-08-19T03:57:26.3165016Z <a id="logistics_etl"></a>
2025-08-19T03:57:26.3165254Z 
2025-08-19T03:57:26.3165372Z # logistics\_etl
2025-08-19T03:57:26.3165573Z 
2025-08-19T03:57:26.3165709Z Daily logistics ETL job.
2025-08-19T03:57:26.3165954Z 
2025-08-19T03:57:26.3166098Z <a id="logistics_etl.__main__"></a>
2025-08-19T03:57:26.3166388Z 
2025-08-19T03:57:26.3166524Z # logistics\_etl.\_\_main\_\_
2025-08-19T03:57:26.3166779Z 
2025-08-19T03:57:26.3166928Z <a id="logistics_etl.dsn"></a>
2025-08-19T03:57:26.3167187Z 
2025-08-19T03:57:26.3167310Z # logistics\_etl.dsn
2025-08-19T03:57:26.3167517Z 
2025-08-19T03:57:26.3167741Z Local DSN builder to avoid cross-service dependency.
2025-08-19T03:57:26.3168130Z 
2025-08-19T03:57:26.3168297Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T03:57:26.3168627Z 
2025-08-19T03:57:26.3168747Z #### build\_dsn
2025-08-19T03:57:26.3168940Z 
2025-08-19T03:57:26.3169266Z ```python
2025-08-19T03:57:26.3169590Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:57:26.3170010Z ```
2025-08-19T03:57:26.3170165Z 
2025-08-19T03:57:26.3170424Z Return a Postgres DSN assembled from environment variables.
2025-08-19T03:57:26.3170852Z 
2025-08-19T03:57:26.3171132Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T03:57:26.3172091Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T03:57:26.3172743Z error when any required variable is missing.
2025-08-19T03:57:26.3173073Z 
2025-08-19T03:57:26.3173251Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T03:57:26.3173577Z 
2025-08-19T03:57:26.3173726Z # logistics\_etl.tests.conftest
2025-08-19T03:57:26.3173994Z 
2025-08-19T03:57:26.3174203Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T03:57:26.3174555Z 
2025-08-19T03:57:26.3174724Z # logistics\_etl.tests.test\_repository
2025-08-19T03:57:26.3175049Z 
2025-08-19T03:57:26.3175221Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T03:57:26.3175543Z 
2025-08-19T03:57:26.3175700Z # logistics\_etl.tests.test\_cron
2025-08-19T03:57:26.3175983Z 
2025-08-19T03:57:26.3176162Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T03:57:26.3176509Z 
2025-08-19T03:57:26.3176661Z # logistics\_etl.tests.test\_imports
2025-08-19T03:57:26.3176969Z 
2025-08-19T03:57:26.3177153Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T03:57:26.3177485Z 
2025-08-19T03:57:26.3177636Z # logistics\_etl.tests.test\_smoke
2025-08-19T03:57:26.3177924Z 
2025-08-19T03:57:26.3178104Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T03:57:26.3178428Z 
2025-08-19T03:57:26.3178584Z # logistics\_etl.tests.test\_client
2025-08-19T03:57:26.3178880Z 
2025-08-19T03:57:26.3179192Z <a id="logistics_etl.tests"></a>
2025-08-19T03:57:26.3179475Z 
2025-08-19T03:57:26.3179607Z # logistics\_etl.tests
2025-08-19T03:57:26.3179835Z 
2025-08-19T03:57:26.3179983Z <a id="logistics_etl.flow"></a>
2025-08-19T03:57:26.3180246Z 
2025-08-19T03:57:26.3180388Z # logistics\_etl.flow
2025-08-19T03:57:26.3180607Z 
2025-08-19T03:57:26.3180755Z <a id="logistics_etl.client"></a>
2025-08-19T03:57:26.3181033Z 
2025-08-19T03:57:26.3181175Z # logistics\_etl.client
2025-08-19T03:57:26.3181401Z 
2025-08-19T03:57:26.3181541Z <a id="logistics_etl.cron"></a>
2025-08-19T03:57:26.3181809Z 
2025-08-19T03:57:26.3182152Z # logistics\_etl.cron
2025-08-19T03:57:26.3182378Z 
2025-08-19T03:57:26.3182526Z <a id="logistics_etl.db"></a>
2025-08-19T03:57:26.3182784Z 
2025-08-19T03:57:26.3209476Z # logistics\_etl.db
2025-08-19T03:57:26.3209725Z 
2025-08-19T03:57:26.3209897Z <a id="logistics_etl.repository"></a>
2025-08-19T03:57:26.3210183Z 
2025-08-19T03:57:26.3210312Z # logistics\_etl.repository
2025-08-19T03:57:26.3210540Z 
2025-08-19T03:57:26.3210646Z <a id="alert_bot"></a>
2025-08-19T03:57:26.3210833Z 
2025-08-19T03:57:26.3210942Z # alert\_bot
2025-08-19T03:57:26.3211096Z 
2025-08-19T03:57:26.3211238Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T03:57:26.3211504Z 
2025-08-19T03:57:26.3211632Z # alert\_bot.tests.test\_smoke
2025-08-19T03:57:26.3211931Z 
2025-08-19T03:57:26.3212048Z <a id="alert_bot.tests"></a>
2025-08-19T03:57:26.3212261Z 
2025-08-19T03:57:26.3212368Z # alert\_bot.tests
2025-08-19T03:57:26.3212530Z 
2025-08-19T03:57:26.3212657Z <a id="alert_bot.alert_bot"></a>
2025-08-19T03:57:26.3212879Z 
2025-08-19T03:57:26.3213013Z # alert\_bot.alert\_bot
2025-08-19T03:57:26.3213200Z 
2025-08-19T03:57:26.3213329Z <a id="alert_bot.rules"></a>
2025-08-19T03:57:26.3213536Z 
2025-08-19T03:57:26.3213636Z # alert\_bot.rules
2025-08-19T03:57:26.3213806Z 
2025-08-19T03:57:26.3213910Z <a id="common"></a>
2025-08-19T03:57:26.3214073Z 
2025-08-19T03:57:26.3214171Z # common
2025-08-19T03:57:26.3214302Z 
2025-08-19T03:57:26.3214408Z <a id="common.dsn"></a>
2025-08-19T03:57:26.3214583Z 
2025-08-19T03:57:26.3214686Z # common.dsn
2025-08-19T03:57:26.3214825Z 
2025-08-19T03:57:26.3214951Z <a id="common.dsn.build_dsn"></a>
2025-08-19T03:57:26.3215188Z 
2025-08-19T03:57:26.3215284Z #### build\_dsn
2025-08-19T03:57:26.3215434Z 
2025-08-19T03:57:26.3215533Z ```python
2025-08-19T03:57:26.3215821Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:57:26.3216178Z ```
2025-08-19T03:57:26.3216303Z 
2025-08-19T03:57:26.3216498Z Return a Postgres DSN, validating required variables.
2025-08-19T03:57:26.3216815Z 
2025-08-19T03:57:26.3217132Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T03:57:26.3218072Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T03:57:26.3218741Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T03:57:26.3219416Z missing.
2025-08-19T03:57:26.3219567Z 
2025-08-19T03:57:26.3219710Z <a id="common.models_vendor"></a>
2025-08-19T03:57:26.3219936Z 
2025-08-19T03:57:26.3220051Z # common.models\_vendor
2025-08-19T03:57:26.3220229Z 
2025-08-19T03:57:26.3220363Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T03:57:26.3220627Z 
2025-08-19T03:57:26.3220728Z ## Vendor Objects
2025-08-19T03:57:26.3220894Z 
2025-08-19T03:57:26.3220990Z ```python
2025-08-19T03:57:26.3221241Z class Vendor(Base)
2025-08-19T03:57:26.3221484Z ```
2025-08-19T03:57:26.3221612Z 
2025-08-19T03:57:26.3221732Z Vendor of inventory items.
2025-08-19T03:57:26.3221926Z 
2025-08-19T03:57:26.3222081Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T03:57:26.3222378Z 
2025-08-19T03:57:26.3222488Z ## VendorPrice Objects
2025-08-19T03:57:26.3222669Z 
2025-08-19T03:57:26.3222761Z ```python
2025-08-19T03:57:26.3223010Z class VendorPrice(Base)
2025-08-19T03:57:26.3223285Z ```
2025-08-19T03:57:26.3223409Z 
2025-08-19T03:57:26.3223568Z Association table linking vendors to pricing.
2025-08-19T03:57:26.3223847Z 
2025-08-19T03:57:26.3223970Z <a id="common.db_url"></a>
2025-08-19T03:57:26.3224162Z 
2025-08-19T03:57:26.3224269Z # common.db\_url
2025-08-19T03:57:26.3224424Z 
2025-08-19T03:57:26.3224545Z <a id="common.db_url.build_url"></a>
2025-08-19T03:57:26.3224787Z 
2025-08-19T03:57:26.3224884Z #### build\_url
2025-08-19T03:57:26.3225037Z 
2025-08-19T03:57:26.3225132Z ```python
2025-08-19T03:57:26.3225391Z def build_url(async_: bool = True) -> str
2025-08-19T03:57:26.3225731Z ```
2025-08-19T03:57:26.3225848Z 
2025-08-19T03:57:26.3225988Z Return Postgres DSN from env or PG_* parts.
2025-08-19T03:57:26.3226257Z 
2025-08-19T03:57:26.3226376Z <a id="common.keepa"></a>
2025-08-19T03:57:26.3226792Z 
2025-08-19T03:57:26.3226901Z # common.keepa
2025-08-19T03:57:26.3227071Z 
2025-08-19T03:57:26.3227178Z <a id="common.llm"></a>
2025-08-19T03:57:26.3227362Z 
2025-08-19T03:57:26.3227461Z # common.llm
2025-08-19T03:57:26.3227616Z 
2025-08-19T03:57:26.3227751Z <a id="common.settings"></a>
2025-08-19T03:57:26.3227965Z 
2025-08-19T03:57:26.3228076Z # common.settings
2025-08-19T03:57:26.3228231Z 
2025-08-19T03:57:26.3228338Z <a id="common.db"></a>
2025-08-19T03:57:26.3228529Z 
2025-08-19T03:57:26.3228630Z # common.db
2025-08-19T03:57:26.3228762Z 
2025-08-19T03:57:26.3228901Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T03:57:26.3229329Z 
2025-08-19T03:57:26.3229449Z #### build\_sqlalchemy\_url
2025-08-19T03:57:26.3229654Z 
2025-08-19T03:57:26.3229758Z ```python
2025-08-19T03:57:26.3230021Z def build_sqlalchemy_url() -> str
2025-08-19T03:57:26.3230343Z ```
2025-08-19T03:57:26.3230472Z 
2025-08-19T03:57:26.3230614Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T03:57:26.3230908Z 
2025-08-19T03:57:26.3231053Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T03:57:26.3231310Z 
2025-08-19T03:57:26.3231423Z #### build\_asyncpg\_dsn
2025-08-19T03:57:26.3231628Z 
2025-08-19T03:57:26.3231722Z ```python
2025-08-19T03:57:26.3231980Z def build_asyncpg_dsn() -> str
2025-08-19T03:57:26.3232272Z ```
2025-08-19T03:57:26.3232393Z 
2025-08-19T03:57:26.3232593Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T03:57:26.3232909Z 
2025-08-19T03:57:26.3233034Z <a id="common.db.refresh_mvs"></a>
2025-08-19T03:57:26.3233272Z 
2025-08-19T03:57:26.3233372Z #### refresh\_mvs
2025-08-19T03:57:26.3233528Z 
2025-08-19T03:57:26.3233628Z ```python
2025-08-19T03:57:26.3233912Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T03:57:26.3234294Z ```
2025-08-19T03:57:26.3234412Z 
2025-08-19T03:57:26.3234622Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T03:57:26.3234958Z 
2025-08-19T03:57:26.3235072Z <a id="common.config"></a>
2025-08-19T03:57:26.3235283Z 
2025-08-19T03:57:26.3235556Z # common.config
2025-08-19T03:57:26.3235718Z 
2025-08-19T03:57:26.3235825Z <a id="common.base"></a>
2025-08-19T03:57:26.3236012Z 
2025-08-19T03:57:26.3236120Z # common.base
2025-08-19T03:57:26.3236266Z 
2025-08-19T03:57:26.3236388Z <a id="common.base.Base"></a>
2025-08-19T03:57:26.3236598Z 
2025-08-19T03:57:26.3236705Z ## Base Objects
2025-08-19T03:57:26.3236857Z 
2025-08-19T03:57:26.3236947Z ```python
2025-08-19T03:57:26.3237202Z class Base(DeclarativeBase)
2025-08-19T03:57:26.3237497Z ```
2025-08-19T03:57:26.3237622Z 
2025-08-19T03:57:26.3237749Z Base class for SQLAlchemy models.
2025-08-19T03:57:26.3237985Z 
2025-08-19T03:57:26.3238103Z <a id="repricer"></a>
2025-08-19T03:57:26.3238285Z 
2025-08-19T03:57:26.3238381Z # repricer
2025-08-19T03:57:26.3238519Z 
2025-08-19T03:57:26.3238659Z <a id="repricer.app.schemas"></a>
2025-08-19T03:57:26.3238893Z 
2025-08-19T03:57:26.3239150Z # repricer.app.schemas
2025-08-19T03:57:26.3239358Z 
2025-08-19T03:57:26.3239490Z <a id="repricer.app.deps"></a>
2025-08-19T03:57:26.3239727Z 
2025-08-19T03:57:26.3239845Z # repricer.app.deps
2025-08-19T03:57:26.3240017Z 
2025-08-19T03:57:26.3240186Z Placeholder module for Keepa / SP-API clients.
2025-08-19T03:57:26.3240473Z 
2025-08-19T03:57:26.3240601Z <a id="repricer.app.logic"></a>
2025-08-19T03:57:26.3240815Z 
2025-08-19T03:57:26.3240926Z # repricer.app.logic
2025-08-19T03:57:26.3241105Z 
2025-08-19T03:57:26.3241259Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T03:57:26.3241523Z 
2025-08-19T03:57:26.3241622Z #### MIN\_MARGIN
2025-08-19T03:57:26.3241775Z 
2025-08-19T03:57:26.3241869Z 15 % ROI
2025-08-19T03:57:26.3241995Z 
2025-08-19T03:57:26.3242158Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T03:57:26.3242436Z 
2025-08-19T03:57:26.3242539Z #### compute\_price
2025-08-19T03:57:26.3242705Z 
2025-08-19T03:57:26.3242802Z ```python
2025-08-19T03:57:26.3243180Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T03:57:26.3243667Z ```
2025-08-19T03:57:26.3243962Z 
2025-08-19T03:57:26.3244145Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T03:57:26.3244575Z Replace with real competitive logic later.
2025-08-19T03:57:26.3244849Z 
2025-08-19T03:57:26.3244985Z <a id="repricer.app.main"></a>
2025-08-19T03:57:26.3245203Z 
2025-08-19T03:57:26.3245313Z # repricer.app.main
2025-08-19T03:57:26.3245491Z 
2025-08-19T03:57:26.3245608Z <a id="repricer.app"></a>
2025-08-19T03:57:26.3245804Z 
2025-08-19T03:57:26.3245907Z # repricer.app
2025-08-19T03:57:26.3246059Z 
2025-08-19T03:57:26.3246197Z <a id="repricer.tests.test_imports"></a>
2025-08-19T03:57:26.3246452Z 
2025-08-19T03:57:26.3246581Z # repricer.tests.test\_imports
2025-08-19T03:57:26.3246801Z 
2025-08-19T03:57:26.3246927Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T03:57:26.3247190Z 
2025-08-19T03:57:26.3247314Z # repricer.tests.test\_smoke
2025-08-19T03:57:26.3247519Z 
2025-08-19T03:57:26.3247642Z <a id="repricer.tests"></a>
2025-08-19T03:57:26.3247852Z 
2025-08-19T03:57:26.3247960Z # repricer.tests
2025-08-19T03:57:26.3248129Z 
2025-08-19T03:57:26.3248230Z <a id="db"></a>
2025-08-19T03:57:26.3248378Z 
2025-08-19T03:57:26.3248468Z # db
2025-08-19T03:57:26.3248603Z 
2025-08-19T03:57:26.3248723Z <a id="db.utils.views"></a>
2025-08-19T03:57:26.3248930Z 
2025-08-19T03:57:26.3249200Z # db.utils.views
2025-08-19T03:57:26.3249378Z 
2025-08-19T03:57:26.3249521Z <a id="db.utils.views.replace_view"></a>
2025-08-19T03:57:26.3249782Z 
2025-08-19T03:57:26.3249888Z #### replace\_view
2025-08-19T03:57:26.3250048Z 
2025-08-19T03:57:26.3250145Z ```python
2025-08-19T03:57:26.3250442Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T03:57:26.3250819Z ```
2025-08-19T03:57:26.3250952Z 
2025-08-19T03:57:26.3251089Z Drop and recreate a SQL view atomically.
2025-08-19T03:57:26.3251358Z 
2025-08-19T03:57:26.3251467Z <a id="db.utils"></a>
2025-08-19T03:57:26.3251647Z 
2025-08-19T03:57:26.3251743Z # db.utils
2025-08-19T03:57:26.3251881Z 
2025-08-19T03:57:26.3252004Z <a id="price_importer"></a>
2025-08-19T03:57:26.3252217Z 
2025-08-19T03:57:26.3252492Z # price\_importer
2025-08-19T03:57:26.3252666Z 
2025-08-19T03:57:26.3252827Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T03:57:26.3253127Z 
2025-08-19T03:57:26.3253265Z # price\_importer.services\_common.dsn
2025-08-19T03:57:26.3253522Z 
2025-08-19T03:57:26.3253711Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T03:57:26.3254027Z 
2025-08-19T03:57:26.3254130Z #### build\_dsn
2025-08-19T03:57:26.3254282Z 
2025-08-19T03:57:26.3254373Z ```python
2025-08-19T03:57:26.3254639Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:57:26.3254982Z ```
2025-08-19T03:57:26.3255114Z 
2025-08-19T03:57:26.3255213Z Return safe DSN.
2025-08-19T03:57:26.3255371Z 
2025-08-19T03:57:26.3255828Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T03:57:26.3256146Z 
2025-08-19T03:57:26.3256337Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T03:57:26.3256646Z 
2025-08-19T03:57:26.3256817Z # price\_importer.services\_common.models\_vendor
2025-08-19T03:57:26.3257132Z 
2025-08-19T03:57:26.3257292Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T03:57:26.3257586Z 
2025-08-19T03:57:26.3257734Z # price\_importer.services\_common.db\_url
2025-08-19T03:57:26.3257998Z 
2025-08-19T03:57:26.3258205Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T03:57:26.3258555Z 
2025-08-19T03:57:26.3258657Z #### build\_url
2025-08-19T03:57:26.3258813Z 
2025-08-19T03:57:26.3258925Z ```python
2025-08-19T03:57:26.3259343Z def build_url(async_: bool = True) -> str
2025-08-19T03:57:26.3259713Z ```
2025-08-19T03:57:26.3259839Z 
2025-08-19T03:57:26.3259992Z Return Postgres DSN from env or PG_* parts.
2025-08-19T03:57:26.3260273Z 
2025-08-19T03:57:26.3260438Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T03:57:26.3260739Z 
2025-08-19T03:57:26.3260893Z # price\_importer.services\_common.keepa
2025-08-19T03:57:26.3261173Z 
2025-08-19T03:57:26.3261340Z <a id="price_importer.services_common.llm"></a>
2025-08-19T03:57:26.3261837Z 
2025-08-19T03:57:26.3261987Z # price\_importer.services\_common.llm
2025-08-19T03:57:26.3262271Z 
2025-08-19T03:57:26.3262466Z <a id="price_importer.services_common.settings"></a>
2025-08-19T03:57:26.3262818Z 
2025-08-19T03:57:26.3262983Z # price\_importer.services\_common.settings
2025-08-19T03:57:26.3263293Z 
2025-08-19T03:57:26.3263472Z <a id="price_importer.services_common.db"></a>
2025-08-19T03:57:26.3263774Z 
2025-08-19T03:57:26.3263923Z # price\_importer.services\_common.db
2025-08-19T03:57:26.3264192Z 
2025-08-19T03:57:26.3264446Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T03:57:26.3264841Z 
2025-08-19T03:57:26.3264962Z #### build\_sqlalchemy\_url
2025-08-19T03:57:26.3265189Z 
2025-08-19T03:57:26.3265289Z ```python
2025-08-19T03:57:26.3265571Z def build_sqlalchemy_url() -> str
2025-08-19T03:57:26.3265904Z ```
2025-08-19T03:57:26.3266034Z 
2025-08-19T03:57:26.3266196Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T03:57:26.3266493Z 
2025-08-19T03:57:26.3266734Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T03:57:26.3267120Z 
2025-08-19T03:57:26.3267239Z #### build\_asyncpg\_dsn
2025-08-19T03:57:26.3267440Z 
2025-08-19T03:57:26.3267538Z ```python
2025-08-19T03:57:26.3267817Z def build_asyncpg_dsn() -> str
2025-08-19T03:57:26.3268146Z ```
2025-08-19T03:57:26.3268280Z 
2025-08-19T03:57:26.3268495Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T03:57:26.3268843Z 
2025-08-19T03:57:26.3269249Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T03:57:26.3269606Z 
2025-08-19T03:57:26.3269716Z #### refresh\_mvs
2025-08-19T03:57:26.3269900Z 
2025-08-19T03:57:26.3270000Z ```python
2025-08-19T03:57:26.3270326Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T03:57:26.3270747Z ```
2025-08-19T03:57:26.3270883Z 
2025-08-19T03:57:26.3271121Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T03:57:26.3271493Z 
2025-08-19T03:57:26.3271650Z <a id="price_importer.services_common"></a>
2025-08-19T03:57:26.3272130Z 
2025-08-19T03:57:26.3272274Z # price\_importer.services\_common
2025-08-19T03:57:26.3272526Z 
2025-08-19T03:57:26.3272694Z <a id="price_importer.services_common.base"></a>
2025-08-19T03:57:26.3273010Z 
2025-08-19T03:57:26.3273158Z # price\_importer.services\_common.base
2025-08-19T03:57:26.3273440Z 
2025-08-19T03:57:26.3273596Z <a id="price_importer.normaliser"></a>
2025-08-19T03:57:26.3273873Z 
2025-08-19T03:57:26.3274010Z # price\_importer.normaliser
2025-08-19T03:57:26.3274258Z 
2025-08-19T03:57:26.3274441Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T03:57:26.3274758Z 
2025-08-19T03:57:26.3274910Z # price\_importer.common.models\_vendor
2025-08-19T03:57:26.3275197Z 
2025-08-19T03:57:26.3275348Z <a id="price_importer.common.db_url"></a>
2025-08-19T03:57:26.3275629Z 
2025-08-19T03:57:26.3275776Z # price\_importer.common.db\_url
2025-08-19T03:57:26.3276028Z 
2025-08-19T03:57:26.3276203Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T03:57:26.3276545Z 
2025-08-19T03:57:26.3276649Z #### make\_dsn
2025-08-19T03:57:26.3276817Z 
2025-08-19T03:57:26.3276921Z ```python
2025-08-19T03:57:26.3277216Z def make_dsn(async_: bool = False) -> str
2025-08-19T03:57:26.3277603Z ```
2025-08-19T03:57:26.3277744Z 
2025-08-19T03:57:26.3277947Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T03:57:26.3278297Z 
2025-08-19T03:57:26.3278490Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T03:57:26.3278820Z 
2025-08-19T03:57:26.3278929Z #### build\_url
2025-08-19T03:57:26.3279254Z 
2025-08-19T03:57:26.3279361Z ```python
2025-08-19T03:57:26.3279652Z def build_url(async_: bool = False) -> str
2025-08-19T03:57:26.3280032Z ```
2025-08-19T03:57:26.3280169Z 
2025-08-19T03:57:26.3280382Z Return Postgres DSN built from environment variables.
2025-08-19T03:57:26.3280732Z 
2025-08-19T03:57:26.3280878Z <a id="price_importer.common"></a>
2025-08-19T03:57:26.3281149Z 
2025-08-19T03:57:26.3281282Z # price\_importer.common
2025-08-19T03:57:26.3281682Z 
2025-08-19T03:57:26.3281851Z <a id="price_importer.common.base"></a>
2025-08-19T03:57:26.3282158Z 
2025-08-19T03:57:26.3282301Z # price\_importer.common.base
2025-08-19T03:57:26.3282551Z 
2025-08-19T03:57:26.3282732Z <a id="price_importer.tests.conftest"></a>
2025-08-19T03:57:26.3283036Z 
2025-08-19T03:57:26.3283183Z # price\_importer.tests.conftest
2025-08-19T03:57:26.3283465Z 
2025-08-19T03:57:26.3283614Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T03:57:26.3283897Z 
2025-08-19T03:57:26.3284031Z # price\_importer.tests.test\_reader
2025-08-19T03:57:26.3284299Z 
2025-08-19T03:57:26.3284471Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T03:57:26.3284782Z 
2025-08-19T03:57:26.3284941Z # price\_importer.tests.test\_imports
2025-08-19T03:57:26.3285222Z 
2025-08-19T03:57:26.3285390Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T03:57:26.3285684Z 
2025-08-19T03:57:26.3285824Z # price\_importer.tests.test\_smoke
2025-08-19T03:57:26.3286078Z 
2025-08-19T03:57:26.3286257Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T03:57:26.3286576Z 
2025-08-19T03:57:26.3286724Z # price\_importer.tests.test\_normaliser
2025-08-19T03:57:26.3286993Z 
2025-08-19T03:57:26.3287130Z <a id="price_importer.tests"></a>
2025-08-19T03:57:26.3287373Z 
2025-08-19T03:57:26.3287496Z # price\_importer.tests
2025-08-19T03:57:26.3287702Z 
2025-08-19T03:57:26.3287842Z <a id="price_importer.reader"></a>
2025-08-19T03:57:26.3288088Z 
2025-08-19T03:57:26.3288207Z # price\_importer.reader
2025-08-19T03:57:26.3288416Z 
2025-08-19T03:57:26.3288558Z <a id="price_importer.repository"></a>
2025-08-19T03:57:26.3288823Z 
2025-08-19T03:57:26.3289122Z # price\_importer.repository
2025-08-19T03:57:26.3289354Z 
2025-08-19T03:57:26.3289486Z <a id="price_importer.import"></a>
2025-08-19T03:57:26.3289735Z 
2025-08-19T03:57:26.3289855Z # price\_importer.import
2025-08-19T03:57:26.3290051Z 
2025-08-19T03:57:26.3290149Z <a id="fees_h10"></a>
2025-08-19T03:57:26.3290335Z 
2025-08-19T03:57:26.3290450Z # fees\_h10
2025-08-19T03:57:26.3290772Z 
2025-08-19T03:57:26.3290900Z <a id="fees_h10.worker"></a>
2025-08-19T03:57:26.3291120Z 
2025-08-19T03:57:26.3291225Z # fees\_h10.worker
2025-08-19T03:57:26.3291398Z 
2025-08-19T03:57:26.3291564Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T03:57:26.3291858Z 
2025-08-19T03:57:26.3291973Z #### list\_active\_asins
2025-08-19T03:57:26.3292183Z 
2025-08-19T03:57:26.3292285Z ```python
2025-08-19T03:57:26.3292557Z def list_active_asins() -> list[str]
2025-08-19T03:57:26.3292911Z ```
2025-08-19T03:57:26.3293045Z 
2025-08-19T03:57:26.3293231Z Return known ASINs or an empty list if unavailable.
2025-08-19T03:57:26.3293598Z 
2025-08-19T03:57:26.3293737Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T03:57:26.3294005Z 
2025-08-19T03:57:26.3294133Z # fees\_h10.tests.test\_smoke
2025-08-19T03:57:26.3294356Z 
2025-08-19T03:57:26.3294476Z <a id="fees_h10.tests"></a>
2025-08-19T03:57:26.3294694Z 
2025-08-19T03:57:26.3294798Z # fees\_h10.tests
2025-08-19T03:57:26.3294968Z 
2025-08-19T03:57:26.3295094Z <a id="fees_h10.client"></a>
2025-08-19T03:57:26.3295296Z 
2025-08-19T03:57:26.3295390Z # fees\_h10.client
2025-08-19T03:57:26.3295542Z 
2025-08-19T03:57:26.3295671Z <a id="fees_h10.repository"></a>
2025-08-19T03:57:26.3295880Z 
2025-08-19T03:57:26.3295980Z # fees\_h10.repository
2025-08-19T03:57:26.3296189Z 
2025-08-19T03:57:26.3296283Z <a id="emailer"></a>
2025-08-19T03:57:26.3296450Z 
2025-08-19T03:57:26.3296566Z # emailer
2025-08-19T03:57:26.3296686Z 
2025-08-19T03:57:26.3296825Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T03:57:26.3297080Z 
2025-08-19T03:57:26.3297206Z # emailer.tests.test\_import\_emailer
2025-08-19T03:57:26.3297433Z 
2025-08-19T03:57:26.3297550Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T03:57:26.3297777Z 
2025-08-19T03:57:26.3297887Z # emailer.tests.test\_smoke
2025-08-19T03:57:26.3298079Z 
2025-08-19T03:57:26.3298186Z <a id="emailer.tests"></a>
2025-08-19T03:57:26.3298374Z 
2025-08-19T03:57:26.3298466Z # emailer.tests
2025-08-19T03:57:26.3298776Z 
2025-08-19T03:57:26.3298907Z <a id="emailer.generate_body"></a>
2025-08-19T03:57:26.3299270Z 
2025-08-19T03:57:26.3299379Z # emailer.generate\_body
2025-08-19T03:57:26.3299564Z 
2025-08-19T03:57:26.3299662Z <a id="llm_server"></a>
2025-08-19T03:57:26.3299826Z 
2025-08-19T03:57:26.3299913Z # llm\_server
2025-08-19T03:57:26.3300051Z 
2025-08-19T03:57:26.3300156Z <a id="llm_server.app"></a>
2025-08-19T03:57:26.3300338Z 
2025-08-19T03:57:26.3300440Z # llm\_server.app
2025-08-19T03:57:26.3300593Z 
