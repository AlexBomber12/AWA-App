2025-08-18T18:10:26.5887876Z ##[group]Run pydoc-markdown
2025-08-18T18:10:26.5888187Z [36;1mpydoc-markdown[0m
2025-08-18T18:10:26.5929926Z shell: /usr/bin/bash -e {0}
2025-08-18T18:10:26.5930148Z env:
2025-08-18T18:10:26.5930396Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:10:26.5930812Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T18:10:26.5931206Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:10:26.5931553Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:10:26.5931896Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T18:10:26.5932241Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T18:10:26.5932525Z ##[endgroup]
2025-08-18T18:10:26.9259805Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T18:10:26.9260484Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T18:10:26.9260939Z In "pydoc-markdown.yml"
2025-08-18T18:10:26.9261354Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T18:10:26.9262040Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T18:10:26.9262775Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T18:10:26.9263283Z 
2025-08-18T18:10:27.2328155Z <a id="__init__"></a>
2025-08-18T18:10:27.2328629Z 
2025-08-18T18:10:27.2328771Z # \_\_init\_\_
2025-08-18T18:10:27.2328967Z 
2025-08-18T18:10:27.2329101Z <a id="api"></a>
2025-08-18T18:10:27.2329329Z 
2025-08-18T18:10:27.2329470Z # api
2025-08-18T18:10:27.2329664Z 
2025-08-18T18:10:27.2329813Z <a id="api.errors"></a>
2025-08-18T18:10:27.2330062Z 
2025-08-18T18:10:27.2330191Z # api.errors
2025-08-18T18:10:27.2330386Z 
2025-08-18T18:10:27.2330566Z <a id="api.tests.test_errors_json"></a>
2025-08-18T18:10:27.2330912Z 
2025-08-18T18:10:27.2331082Z # api.tests.test\_errors\_json
2025-08-18T18:10:27.2331374Z 
2025-08-18T18:10:27.2331539Z <a id="api.tests.test_llm"></a>
2025-08-18T18:10:27.2331810Z 
2025-08-18T18:10:27.2331953Z # api.tests.test\_llm
2025-08-18T18:10:27.2332260Z 
2025-08-18T18:10:27.2332386Z <a id="api.tests.test_cors"></a>
2025-08-18T18:10:27.2332641Z 
2025-08-18T18:10:27.2332779Z # api.tests.test\_cors
2025-08-18T18:10:27.2333000Z 
2025-08-18T18:10:27.2333146Z <a id="api.tests.test_imports"></a>
2025-08-18T18:10:27.2333442Z 
2025-08-18T18:10:27.2333600Z # api.tests.test\_imports
2025-08-18T18:10:27.2333837Z 
2025-08-18T18:10:27.2333996Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T18:10:27.2334319Z 
2025-08-18T18:10:27.2334474Z # api.tests.test\_rate\_limit
2025-08-18T18:10:27.2334757Z 
2025-08-18T18:10:27.2334949Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T18:10:27.2335292Z 
2025-08-18T18:10:27.2335404Z #### app
2025-08-18T18:10:27.2335562Z 
2025-08-18T18:10:27.2335695Z noqa: E402
2025-08-18T18:10:27.2335856Z 
2025-08-18T18:10:27.2336350Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T18:10:27.2336666Z 
2025-08-18T18:10:27.2336810Z # api.tests.test\_entrypoint
2025-08-18T18:10:27.2337065Z 
2025-08-18T18:10:27.2337484Z <a id="api.tests.test_health"></a>
2025-08-18T18:10:27.2337679Z 
2025-08-18T18:10:27.2337771Z # api.tests.test\_health
2025-08-18T18:10:27.2337919Z 
2025-08-18T18:10:27.2338018Z <a id="api.logging_config"></a>
2025-08-18T18:10:27.2338183Z 
2025-08-18T18:10:27.2338265Z # api.logging\_config
2025-08-18T18:10:27.2338402Z 
2025-08-18T18:10:27.2338503Z <a id="api.migrations.env"></a>
2025-08-18T18:10:27.2338667Z 
2025-08-18T18:10:27.2338752Z # api.migrations.env
2025-08-18T18:10:27.2338893Z 
2025-08-18T18:10:27.2339031Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T18:10:27.2339275Z 
2025-08-18T18:10:27.2339404Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T18:10:27.2339623Z 
2025-08-18T18:10:27.2339748Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T18:10:27.2339975Z 
2025-08-18T18:10:27.2340091Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T18:10:27.2340295Z 
2025-08-18T18:10:27.2340473Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T18:10:27.2340989Z 
2025-08-18T18:10:27.2341146Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T18:10:27.2341403Z 
2025-08-18T18:10:27.2341548Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T18:10:27.2341785Z 
2025-08-18T18:10:27.2341914Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T18:10:27.2342134Z 
2025-08-18T18:10:27.2342268Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T18:10:27.2342498Z 
2025-08-18T18:10:27.2342599Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T18:10:27.2342779Z 
2025-08-18T18:10:27.2342899Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T18:10:27.2343107Z 
2025-08-18T18:10:27.2343225Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T18:10:27.2343419Z 
2025-08-18T18:10:27.2343537Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T18:10:27.2343737Z 
2025-08-18T18:10:27.2343842Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T18:10:27.2344035Z 
2025-08-18T18:10:27.2344159Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T18:10:27.2344367Z 
2025-08-18T18:10:27.2344469Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T18:10:27.2344650Z 
2025-08-18T18:10:27.2344791Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T18:10:27.2345007Z 
2025-08-18T18:10:27.2345123Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T18:10:27.2345324Z 
2025-08-18T18:10:27.2345445Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T18:10:27.2345639Z 
2025-08-18T18:10:27.2345750Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T18:10:27.2346134Z 
2025-08-18T18:10:27.2346331Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T18:10:27.2346551Z 
2025-08-18T18:10:27.2346669Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T18:10:27.2346864Z 
2025-08-18T18:10:27.2346971Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T18:10:27.2347179Z 
2025-08-18T18:10:27.2347272Z # api.migrations.versions.0001\_baseline
2025-08-18T18:10:27.2347441Z 
2025-08-18T18:10:27.2347535Z <a id="api.migrations.versions"></a>
2025-08-18T18:10:27.2347697Z 
2025-08-18T18:10:27.2347779Z # api.migrations.versions
2025-08-18T18:10:27.2347918Z 
2025-08-18T18:10:27.2347997Z <a id="api.migrations"></a>
2025-08-18T18:10:27.2348129Z 
2025-08-18T18:10:27.2348195Z # api.migrations
2025-08-18T18:10:27.2348305Z 
2025-08-18T18:10:27.2348371Z <a id="api.db"></a>
2025-08-18T18:10:27.2348477Z 
2025-08-18T18:10:27.2348543Z # api.db
2025-08-18T18:10:27.2348629Z 
2025-08-18T18:10:27.2348706Z <a id="api.routes.stats"></a>
2025-08-18T18:10:27.2348843Z 
2025-08-18T18:10:27.2348916Z # api.routes.stats
2025-08-18T18:10:27.2349023Z 
2025-08-18T18:10:27.2349109Z <a id="api.routes.stats.kpi"></a>
2025-08-18T18:10:27.2349263Z 
2025-08-18T18:10:27.2349327Z #### kpi
2025-08-18T18:10:27.2349411Z 
2025-08-18T18:10:27.2349476Z ```python
2025-08-18T18:10:27.2349647Z @router.get("/stats/kpi")
2025-08-18T18:10:27.2350029Z def kpi() -> List[Dict[str, int]]
2025-08-18T18:10:27.2350232Z ```
2025-08-18T18:10:27.2350402Z 
2025-08-18T18:10:27.2350479Z Return KPI metrics (mock).
2025-08-18T18:10:27.2350635Z 
2025-08-18T18:10:27.2350739Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T18:10:27.2350920Z 
2025-08-18T18:10:27.2350989Z #### roi\_by\_vendor
2025-08-18T18:10:27.2351100Z 
2025-08-18T18:10:27.2351167Z ```python
2025-08-18T18:10:27.2351333Z @router.get("/stats/roi_by_vendor")
2025-08-18T18:10:27.2351583Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T18:10:27.2351804Z ```
2025-08-18T18:10:27.2351891Z 
2025-08-18T18:10:27.2351969Z Return ROI percent by vendor.
2025-08-18T18:10:27.2352107Z 
2025-08-18T18:10:27.2352213Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T18:10:27.2352380Z 
2025-08-18T18:10:27.2352443Z #### roi\_trend
2025-08-18T18:10:27.2352544Z 
2025-08-18T18:10:27.2352613Z ```python
2025-08-18T18:10:27.2352775Z @router.get("/stats/roi_trend")
2025-08-18T18:10:27.2353168Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T18:10:27.2353398Z ```
2025-08-18T18:10:27.2353487Z 
2025-08-18T18:10:27.2353559Z Return 30-day ROI trend.
2025-08-18T18:10:27.2353888Z 
2025-08-18T18:10:27.2354038Z <a id="api.routes.roi"></a>
2025-08-18T18:10:27.2354272Z 
2025-08-18T18:10:27.2354396Z # api.routes.roi
2025-08-18T18:10:27.2354587Z 
2025-08-18T18:10:27.2354740Z <a id="api.routes.health"></a>
2025-08-18T18:10:27.2354994Z 
2025-08-18T18:10:27.2355120Z # api.routes.health
2025-08-18T18:10:27.2355322Z 
2025-08-18T18:10:27.2355479Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T18:10:27.2355776Z 
2025-08-18T18:10:27.2355906Z #### MAX\_SKEW
2025-08-18T18:10:27.2356166Z 
2025-08-18T18:10:27.2356231Z seconds
2025-08-18T18:10:27.2356315Z 
2025-08-18T18:10:27.2356412Z <a id="api.routes.health.health"></a>
2025-08-18T18:10:27.2356579Z 
2025-08-18T18:10:27.2356642Z #### health
2025-08-18T18:10:27.2356740Z 
2025-08-18T18:10:27.2356804Z ```python
2025-08-18T18:10:27.2356999Z @router.get("/health", include_in_schema=False)
2025-08-18T18:10:27.2357400Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T18:10:27.2357751Z ```
2025-08-18T18:10:27.2357835Z 
2025-08-18T18:10:27.2357952Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T18:10:27.2358149Z 
2025-08-18T18:10:27.2358245Z <a id="api.routes.repository"></a>
2025-08-18T18:10:27.2358405Z 
2025-08-18T18:10:27.2358482Z # api.routes.repository
2025-08-18T18:10:27.2358612Z 
2025-08-18T18:10:27.2358685Z <a id="api.routes"></a>
2025-08-18T18:10:27.2358800Z 
2025-08-18T18:10:27.2358864Z # api.routes
2025-08-18T18:10:27.2358966Z 
2025-08-18T18:10:27.2359045Z <a id="api.models.fee"></a>
2025-08-18T18:10:27.2359181Z 
2025-08-18T18:10:27.2359253Z # api.models.fee
2025-08-18T18:10:27.2359356Z 
2025-08-18T18:10:27.2359426Z <a id="api.models"></a>
2025-08-18T18:10:27.2359547Z 
2025-08-18T18:10:27.2359610Z # api.models
2025-08-18T18:10:27.2359702Z 
2025-08-18T18:10:27.2359780Z <a id="api.roi_repository"></a>
2025-08-18T18:10:27.2359934Z 
2025-08-18T18:10:27.2360004Z # api.roi\_repository
2025-08-18T18:10:27.2360116Z 
2025-08-18T18:10:27.2360190Z <a id="api.main"></a>
2025-08-18T18:10:27.2360301Z 
2025-08-18T18:10:27.2360363Z # api.main
2025-08-18T18:10:27.2360451Z 
2025-08-18T18:10:27.2360531Z <a id="api.main.ready"></a>
2025-08-18T18:10:27.2360660Z 
2025-08-18T18:10:27.2360722Z #### ready
2025-08-18T18:10:27.2360813Z 
2025-08-18T18:10:27.2360875Z ```python
2025-08-18T18:10:27.2361130Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T18:10:27.2361561Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T18:10:27.2361915Z                                                                       str]
2025-08-18T18:10:27.2362147Z ```
2025-08-18T18:10:27.2362234Z 
2025-08-18T18:10:27.2362329Z Return 200 only when migrations are at head.
2025-08-18T18:10:27.2362498Z 
2025-08-18T18:10:27.2362569Z <a id="api.config"></a>
2025-08-18T18:10:27.2362690Z 
2025-08-18T18:10:27.2362939Z # api.config
2025-08-18T18:10:27.2363035Z 
2025-08-18T18:10:27.2363104Z <a id="etl"></a>
2025-08-18T18:10:27.2363203Z 
2025-08-18T18:10:27.2363264Z # etl
2025-08-18T18:10:27.2363348Z 
2025-08-18T18:10:27.2363435Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T18:10:27.2363584Z 
2025-08-18T18:10:27.2363657Z # etl.fba\_fee\_ingestor
2025-08-18T18:10:27.2363787Z 
2025-08-18T18:10:27.2363866Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T18:10:27.2364015Z 
2025-08-18T18:10:27.2364093Z # etl.sp\_fees\_ingestor
2025-08-18T18:10:27.2364211Z 
2025-08-18T18:10:27.2364288Z <a id="etl.keepa_ingestor"></a>
2025-08-18T18:10:27.2364426Z 
2025-08-18T18:10:27.2364501Z # etl.keepa\_ingestor
2025-08-18T18:10:27.2364616Z 
2025-08-18T18:10:27.2364682Z <a id="etl.db"></a>
2025-08-18T18:10:27.2364793Z 
2025-08-18T18:10:27.2364854Z # etl.db
2025-08-18T18:10:27.2364942Z 
2025-08-18T18:10:27.2365023Z <a id="etl.dialects.schemas"></a>
2025-08-18T18:10:27.2365174Z 
2025-08-18T18:10:27.2365248Z # etl.dialects.schemas
2025-08-18T18:10:27.2365508Z 
2025-08-18T18:10:27.2365622Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T18:10:27.2365807Z 
2025-08-18T18:10:27.2365897Z # etl.dialects.amazon\_reimbursements
2025-08-18T18:10:27.2366177Z 
2025-08-18T18:10:27.2366273Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T18:10:27.2366445Z 
2025-08-18T18:10:27.2366529Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T18:10:27.2366688Z 
2025-08-18T18:10:27.2366775Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T18:10:27.2366938Z 
2025-08-18T18:10:27.2367024Z # etl.dialects.amazon\_returns
2025-08-18T18:10:27.2367161Z 
2025-08-18T18:10:27.2367253Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T18:10:27.2367424Z 
2025-08-18T18:10:27.2367505Z # etl.dialects.amazon\_fee\_preview
2025-08-18T18:10:27.2367657Z 
2025-08-18T18:10:27.2367761Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T18:10:27.2367950Z 
2025-08-18T18:10:27.2368037Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T18:10:27.2368211Z 
2025-08-18T18:10:27.2368310Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T18:10:27.2368479Z 
2025-08-18T18:10:27.2368563Z # etl.dialects.amazon\_settlements
2025-08-18T18:10:27.2368718Z 
2025-08-18T18:10:27.2368791Z <a id="etl.dialects"></a>
2025-08-18T18:10:27.2368918Z 
2025-08-18T18:10:27.2368982Z # etl.dialects
2025-08-18T18:10:27.2369085Z 
2025-08-18T18:10:27.2369150Z <a id="ingest"></a>
2025-08-18T18:10:27.2369254Z 
2025-08-18T18:10:27.2369322Z # ingest
2025-08-18T18:10:27.2369403Z 
2025-08-18T18:10:27.2369490Z <a id="ingest.maintenance"></a>
2025-08-18T18:10:27.2369629Z 
2025-08-18T18:10:27.2369699Z # ingest.maintenance
2025-08-18T18:10:27.2369819Z 
2025-08-18T18:10:27.2369897Z <a id="ingest.copy_loader"></a>
2025-08-18T18:10:27.2370031Z 
2025-08-18T18:10:27.2370109Z # ingest.copy\_loader
2025-08-18T18:10:27.2370223Z 
2025-08-18T18:10:27.2370323Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T18:10:27.2370502Z 
2025-08-18T18:10:27.2370582Z #### copy\_df\_via\_temp
2025-08-18T18:10:27.2370715Z 
2025-08-18T18:10:27.2370780Z ```python
2025-08-18T18:10:27.2370953Z def copy_df_via_temp(engine: Engine,
2025-08-18T18:10:27.2371184Z                      df: pd.DataFrame,
2025-08-18T18:10:27.2371423Z                      target_table: str,
2025-08-18T18:10:27.2371644Z                      *,
2025-08-18T18:10:27.2371850Z                      target_schema: Optional[str] = None,
2025-08-18T18:10:27.2372112Z                      columns: Sequence[str],
2025-08-18T18:10:27.2372375Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T18:10:27.2372661Z                      analyze_after: bool = False,
2025-08-18T18:10:27.2372921Z                      connection: Any | None = None) -> int
2025-08-18T18:10:27.2373161Z ```
2025-08-18T18:10:27.2373243Z 
2025-08-18T18:10:27.2373399Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T18:10:27.2373637Z 
2025-08-18T18:10:27.2373721Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T18:10:27.2374009Z 
2025-08-18T18:10:27.2374094Z # ingest.tests.test\_smoke
2025-08-18T18:10:27.2374222Z 
2025-08-18T18:10:27.2374297Z <a id="ingest.tests"></a>
2025-08-18T18:10:27.2374426Z 
2025-08-18T18:10:27.2374492Z # ingest.tests
2025-08-18T18:10:27.2374593Z 
2025-08-18T18:10:27.2374676Z <a id="ingest.upload_router"></a>
2025-08-18T18:10:27.2374827Z 
2025-08-18T18:10:27.2374899Z # ingest.upload\_router
2025-08-18T18:10:27.2375018Z 
2025-08-18T18:10:27.2375104Z <a id="ingest.email_watcher"></a>
2025-08-18T18:10:27.2375248Z 
2025-08-18T18:10:27.2375318Z # ingest.email\_watcher
2025-08-18T18:10:27.2375436Z 
2025-08-18T18:10:27.2375522Z <a id="ingest.email_watcher.main"></a>
2025-08-18T18:10:27.2375683Z 
2025-08-18T18:10:27.2375744Z #### main
2025-08-18T18:10:27.2375838Z 
2025-08-18T18:10:27.2375899Z ```python
2025-08-18T18:10:27.2376174Z def main() -> dict[str, str]
2025-08-18T18:10:27.2376363Z ```
2025-08-18T18:10:27.2376443Z 
2025-08-18T18:10:27.2376590Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T18:10:27.2376950Z 
2025-08-18T18:10:27.2377075Z Returns {"status": "success"} when processing completes.
2025-08-18T18:10:27.2377289Z 
2025-08-18T18:10:27.2377363Z <a id="ingest.tasks"></a>
2025-08-18T18:10:27.2377486Z 
2025-08-18T18:10:27.2377553Z # ingest.tasks
2025-08-18T18:10:27.2377655Z 
2025-08-18T18:10:27.2377749Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T18:10:27.2377921Z 
2025-08-18T18:10:27.2377998Z #### task\_import\_file
2025-08-18T18:10:27.2378111Z 
2025-08-18T18:10:27.2378174Z ```python
2025-08-18T18:10:27.2378381Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T18:10:27.2378654Z def task_import_file(self,
2025-08-18T18:10:27.2378854Z                      uri: str,
2025-08-18T18:10:27.2379065Z                      report_type: Optional[str] = None,
2025-08-18T18:10:27.2379337Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T18:10:27.2379579Z ```
2025-08-18T18:10:27.2379660Z 
2025-08-18T18:10:27.2379793Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T18:10:27.2380015Z 
2025-08-18T18:10:27.2380097Z <a id="ingest.celery_app"></a>
2025-08-18T18:10:27.2380234Z 
2025-08-18T18:10:27.2380305Z # ingest.celery\_app
2025-08-18T18:10:27.2380424Z 
2025-08-18T18:10:27.2380505Z <a id="ingest.ingest_router"></a>
2025-08-18T18:10:27.2380648Z 
2025-08-18T18:10:27.2380727Z # ingest.ingest\_router
2025-08-18T18:10:27.2380858Z 
2025-08-18T18:10:27.2380940Z <a id="logistics_etl"></a>
2025-08-18T18:10:27.2381064Z 
2025-08-18T18:10:27.2381130Z # logistics\_etl
2025-08-18T18:10:27.2381240Z 
2025-08-18T18:10:27.2381315Z Daily logistics ETL job.
2025-08-18T18:10:27.2381437Z 
2025-08-18T18:10:27.2381518Z <a id="logistics_etl.__main__"></a>
2025-08-18T18:10:27.2381675Z 
2025-08-18T18:10:27.2381751Z # logistics\_etl.\_\_main\_\_
2025-08-18T18:10:27.2381886Z 
2025-08-18T18:10:27.2381968Z <a id="logistics_etl.dsn"></a>
2025-08-18T18:10:27.2382099Z 
2025-08-18T18:10:27.2382168Z # logistics\_etl.dsn
2025-08-18T18:10:27.2382285Z 
2025-08-18T18:10:27.2382409Z Local DSN builder to avoid cross-service dependency.
2025-08-18T18:10:27.2382613Z 
2025-08-18T18:10:27.2382702Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T18:10:27.2382876Z 
2025-08-18T18:10:27.2382939Z #### build\_dsn
2025-08-18T18:10:27.2383039Z 
2025-08-18T18:10:27.2383107Z ```python
2025-08-18T18:10:27.2383277Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:10:27.2383504Z ```
2025-08-18T18:10:27.2383584Z 
2025-08-18T18:10:27.2383720Z Return a Postgres DSN assembled from environment variables.
2025-08-18T18:10:27.2383949Z 
2025-08-18T18:10:27.2384099Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T18:10:27.2384490Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T18:10:27.2384831Z error when any required variable is missing.
2025-08-18T18:10:27.2385004Z 
2025-08-18T18:10:27.2385103Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T18:10:27.2385270Z 
2025-08-18T18:10:27.2385349Z # logistics\_etl.tests.conftest
2025-08-18T18:10:27.2385617Z 
2025-08-18T18:10:27.2385720Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T18:10:27.2385901Z 
2025-08-18T18:10:27.2386227Z # logistics\_etl.tests.test\_repository
2025-08-18T18:10:27.2386446Z 
2025-08-18T18:10:27.2386539Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T18:10:27.2386708Z 
2025-08-18T18:10:27.2386795Z # logistics\_etl.tests.test\_cron
2025-08-18T18:10:27.2386941Z 
2025-08-18T18:10:27.2387036Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T18:10:27.2387214Z 
2025-08-18T18:10:27.2387297Z # logistics\_etl.tests.test\_imports
2025-08-18T18:10:27.2387450Z 
2025-08-18T18:10:27.2387539Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T18:10:27.2387714Z 
2025-08-18T18:10:27.2387795Z # logistics\_etl.tests.test\_smoke
2025-08-18T18:10:27.2387943Z 
2025-08-18T18:10:27.2388045Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T18:10:27.2388212Z 
2025-08-18T18:10:27.2388293Z # logistics\_etl.tests.test\_client
2025-08-18T18:10:27.2388448Z 
2025-08-18T18:10:27.2388679Z <a id="logistics_etl.tests"></a>
2025-08-18T18:10:27.2388823Z 
2025-08-18T18:10:27.2388892Z # logistics\_etl.tests
2025-08-18T18:10:27.2389015Z 
2025-08-18T18:10:27.2389092Z <a id="logistics_etl.flow"></a>
2025-08-18T18:10:27.2389228Z 
2025-08-18T18:10:27.2389304Z # logistics\_etl.flow
2025-08-18T18:10:27.2389417Z 
2025-08-18T18:10:27.2389498Z <a id="logistics_etl.client"></a>
2025-08-18T18:10:27.2389649Z 
2025-08-18T18:10:27.2389722Z # logistics\_etl.client
2025-08-18T18:10:27.2389837Z 
2025-08-18T18:10:27.2389914Z <a id="logistics_etl.cron"></a>
2025-08-18T18:10:27.2390055Z 
2025-08-18T18:10:27.2390123Z # logistics\_etl.cron
2025-08-18T18:10:27.2390234Z 
2025-08-18T18:10:27.2390319Z <a id="logistics_etl.db"></a>
2025-08-18T18:10:27.2390453Z 
2025-08-18T18:10:27.2390520Z # logistics\_etl.db
2025-08-18T18:10:27.2390624Z 
2025-08-18T18:10:27.2390720Z <a id="logistics_etl.repository"></a>
2025-08-18T18:10:27.2390878Z 
2025-08-18T18:10:27.2390956Z # logistics\_etl.repository
2025-08-18T18:10:27.2391107Z 
2025-08-18T18:10:27.2391176Z <a id="alert_bot"></a>
2025-08-18T18:10:27.2391290Z 
2025-08-18T18:10:27.2391360Z # alert\_bot
2025-08-18T18:10:27.2391455Z 
2025-08-18T18:10:27.2391541Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T18:10:27.2391704Z 
2025-08-18T18:10:27.2391806Z # alert\_bot.tests.test\_smoke
2025-08-18T18:10:27.2391943Z 
2025-08-18T18:10:27.2392020Z <a id="alert_bot.tests"></a>
2025-08-18T18:10:27.2392158Z 
2025-08-18T18:10:27.2392224Z # alert\_bot.tests
2025-08-18T18:10:27.2392327Z 
2025-08-18T18:10:27.2392411Z <a id="alert_bot.alert_bot"></a>
2025-08-18T18:10:27.2392550Z 
2025-08-18T18:10:27.2392620Z # alert\_bot.alert\_bot
2025-08-18T18:10:27.2392741Z 
2025-08-18T18:10:27.2392814Z <a id="alert_bot.rules"></a>
2025-08-18T18:10:27.2392941Z 
2025-08-18T18:10:27.2393007Z # alert\_bot.rules
2025-08-18T18:10:27.2393116Z 
2025-08-18T18:10:27.2393182Z <a id="common"></a>
2025-08-18T18:10:27.2393287Z 
2025-08-18T18:10:27.2393355Z # common
2025-08-18T18:10:27.2393443Z 
2025-08-18T18:10:27.2393523Z <a id="common.dsn"></a>
2025-08-18T18:10:27.2393641Z 
2025-08-18T18:10:27.2393712Z # common.dsn
2025-08-18T18:10:27.2393802Z 
2025-08-18T18:10:27.2393885Z <a id="common.dsn.build_dsn"></a>
2025-08-18T18:10:27.2394036Z 
2025-08-18T18:10:27.2394100Z #### build\_dsn
2025-08-18T18:10:27.2394199Z 
2025-08-18T18:10:27.2394261Z ```python
2025-08-18T18:10:27.2431811Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:10:27.2432327Z ```
2025-08-18T18:10:27.2432492Z 
2025-08-18T18:10:27.2432718Z Return a Postgres DSN, validating required variables.
2025-08-18T18:10:27.2433115Z 
2025-08-18T18:10:27.2433459Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T18:10:27.2434219Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T18:10:27.2434859Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T18:10:27.2435184Z missing.
2025-08-18T18:10:27.2435277Z 
2025-08-18T18:10:27.2435363Z <a id="common.models_vendor"></a>
2025-08-18T18:10:27.2436169Z 
2025-08-18T18:10:27.2436309Z # common.models\_vendor
2025-08-18T18:10:27.2436527Z 
2025-08-18T18:10:27.2436690Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T18:10:27.2436999Z 
2025-08-18T18:10:27.2437133Z ## Vendor Objects
2025-08-18T18:10:27.2437393Z 
2025-08-18T18:10:27.2437514Z ```python
2025-08-18T18:10:27.2437687Z class Vendor(Base)
2025-08-18T18:10:27.2437858Z ```
2025-08-18T18:10:27.2437942Z 
2025-08-18T18:10:27.2438026Z Vendor of inventory items.
2025-08-18T18:10:27.2438166Z 
2025-08-18T18:10:27.2438270Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T18:10:27.2438451Z 
2025-08-18T18:10:27.2438530Z ## VendorPrice Objects
2025-08-18T18:10:27.2438704Z 
2025-08-18T18:10:27.2438769Z ```python
2025-08-18T18:10:27.2438932Z class VendorPrice(Base)
2025-08-18T18:10:27.2439105Z ```
2025-08-18T18:10:27.2439192Z 
2025-08-18T18:10:27.2439293Z Association table linking vendors to pricing.
2025-08-18T18:10:27.2439472Z 
2025-08-18T18:10:27.2439553Z <a id="common.db_url"></a>
2025-08-18T18:10:27.2440169Z 
2025-08-18T18:10:27.2440241Z # common.db\_url
2025-08-18T18:10:27.2440348Z 
2025-08-18T18:10:27.2440439Z <a id="common.db_url.build_url"></a>
2025-08-18T18:10:27.2440595Z 
2025-08-18T18:10:27.2440659Z #### build\_url
2025-08-18T18:10:27.2440764Z 
2025-08-18T18:10:27.2440827Z ```python
2025-08-18T18:10:27.2441000Z def build_url(async_: bool = True) -> str
2025-08-18T18:10:27.2441223Z ```
2025-08-18T18:10:27.2441303Z 
2025-08-18T18:10:27.2441405Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:10:27.2441580Z 
2025-08-18T18:10:27.2441658Z <a id="common.keepa"></a>
2025-08-18T18:10:27.2441785Z 
2025-08-18T18:10:27.2441855Z # common.keepa
2025-08-18T18:10:27.2441953Z 
2025-08-18T18:10:27.2442025Z <a id="common.llm"></a>
2025-08-18T18:10:27.2442144Z 
2025-08-18T18:10:27.2442207Z # common.llm
2025-08-18T18:10:27.2442301Z 
2025-08-18T18:10:27.2442380Z <a id="common.settings"></a>
2025-08-18T18:10:27.2442520Z 
2025-08-18T18:10:27.2442587Z # common.settings
2025-08-18T18:10:27.2442701Z 
2025-08-18T18:10:27.2442776Z <a id="common.db"></a>
2025-08-18T18:10:27.2442893Z 
2025-08-18T18:10:27.2442955Z # common.db
2025-08-18T18:10:27.2443050Z 
2025-08-18T18:10:27.2443141Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T18:10:27.2443309Z 
2025-08-18T18:10:27.2443385Z #### build\_sqlalchemy\_url
2025-08-18T18:10:27.2443521Z 
2025-08-18T18:10:27.2443583Z ```python
2025-08-18T18:10:27.2443757Z def build_sqlalchemy_url() -> str
2025-08-18T18:10:27.2443963Z ```
2025-08-18T18:10:27.2444044Z 
2025-08-18T18:10:27.2444148Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:10:27.2444322Z 
2025-08-18T18:10:27.2444413Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T18:10:27.2444586Z 
2025-08-18T18:10:27.2444659Z #### build\_asyncpg\_dsn
2025-08-18T18:10:27.2444782Z 
2025-08-18T18:10:27.2444843Z ```python
2025-08-18T18:10:27.2445013Z def build_asyncpg_dsn() -> str
2025-08-18T18:10:27.2445209Z ```
2025-08-18T18:10:27.2445288Z 
2025-08-18T18:10:27.2445417Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:10:27.2445636Z 
2025-08-18T18:10:27.2445727Z <a id="common.db.refresh_mvs"></a>
2025-08-18T18:10:27.2445880Z 
2025-08-18T18:10:27.2446136Z #### refresh\_mvs
2025-08-18T18:10:27.2446288Z 
2025-08-18T18:10:27.2446354Z ```python
2025-08-18T18:10:27.2446549Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:10:27.2446806Z ```
2025-08-18T18:10:27.2446885Z 
2025-08-18T18:10:27.2447027Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:10:27.2447244Z 
2025-08-18T18:10:27.2447322Z <a id="common.config"></a>
2025-08-18T18:10:27.2447456Z 
2025-08-18T18:10:27.2447522Z # common.config
2025-08-18T18:10:27.2447624Z 
2025-08-18T18:10:27.2447696Z <a id="common.base"></a>
2025-08-18T18:10:27.2447821Z 
2025-08-18T18:10:27.2447883Z # common.base
2025-08-18T18:10:27.2447979Z 
2025-08-18T18:10:27.2448065Z <a id="common.base.Base"></a>
2025-08-18T18:10:27.2448201Z 
2025-08-18T18:10:27.2448265Z ## Base Objects
2025-08-18T18:10:27.2448498Z 
2025-08-18T18:10:27.2448564Z ```python
2025-08-18T18:10:27.2448728Z class Base(DeclarativeBase)
2025-08-18T18:10:27.2448921Z ```
2025-08-18T18:10:27.2449001Z 
2025-08-18T18:10:27.2449083Z Base class for SQLAlchemy models.
2025-08-18T18:10:27.2449236Z 
2025-08-18T18:10:27.2449306Z <a id="repricer"></a>
2025-08-18T18:10:27.2449419Z 
2025-08-18T18:10:27.2449489Z # repricer
2025-08-18T18:10:27.2449577Z 
2025-08-18T18:10:27.2449662Z <a id="repricer.app.schemas"></a>
2025-08-18T18:10:27.2449809Z 
2025-08-18T18:10:27.2449890Z # repricer.app.schemas
2025-08-18T18:10:27.2450009Z 
2025-08-18T18:10:27.2450090Z <a id="repricer.app.deps"></a>
2025-08-18T18:10:27.2450239Z 
2025-08-18T18:10:27.2450311Z # repricer.app.deps
2025-08-18T18:10:27.2450420Z 
2025-08-18T18:10:27.2450542Z Placeholder module for Keepa / SP-API clients.
2025-08-18T18:10:27.2450729Z 
2025-08-18T18:10:27.2450811Z <a id="repricer.app.logic"></a>
2025-08-18T18:10:27.2450951Z 
2025-08-18T18:10:27.2451032Z # repricer.app.logic
2025-08-18T18:10:27.2451275Z 
2025-08-18T18:10:27.2451371Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T18:10:27.2451548Z 
2025-08-18T18:10:27.2451611Z #### MIN\_MARGIN
2025-08-18T18:10:27.2451712Z 
2025-08-18T18:10:27.2451776Z 15 % ROI
2025-08-18T18:10:27.2451862Z 
2025-08-18T18:10:27.2451962Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T18:10:27.2452139Z 
2025-08-18T18:10:27.2452210Z #### compute\_price
2025-08-18T18:10:27.2452314Z 
2025-08-18T18:10:27.2452376Z ```python
2025-08-18T18:10:27.2452619Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T18:10:27.2452913Z ```
2025-08-18T18:10:27.2452998Z 
2025-08-18T18:10:27.2453102Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T18:10:27.2453380Z Replace with real competitive logic later.
2025-08-18T18:10:27.2453548Z 
2025-08-18T18:10:27.2453629Z <a id="repricer.app.main"></a>
2025-08-18T18:10:27.2453768Z 
2025-08-18T18:10:27.2453844Z # repricer.app.main
2025-08-18T18:10:27.2453948Z 
2025-08-18T18:10:27.2454021Z <a id="repricer.app"></a>
2025-08-18T18:10:27.2454166Z 
2025-08-18T18:10:27.2454231Z # repricer.app
2025-08-18T18:10:27.2454332Z 
2025-08-18T18:10:27.2454421Z <a id="repricer.tests.test_imports"></a>
2025-08-18T18:10:27.2454591Z 
2025-08-18T18:10:27.2454670Z # repricer.tests.test\_imports
2025-08-18T18:10:27.2454805Z 
2025-08-18T18:10:27.2454897Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T18:10:27.2455057Z 
2025-08-18T18:10:27.2455137Z # repricer.tests.test\_smoke
2025-08-18T18:10:27.2455277Z 
2025-08-18T18:10:27.2455354Z <a id="repricer.tests"></a>
2025-08-18T18:10:27.2455483Z 
2025-08-18T18:10:27.2455550Z # repricer.tests
2025-08-18T18:10:27.2455660Z 
2025-08-18T18:10:27.2455725Z <a id="db"></a>
2025-08-18T18:10:27.2455822Z 
2025-08-18T18:10:27.2455890Z # db
2025-08-18T18:10:27.2456183Z 
2025-08-18T18:10:27.2456266Z <a id="db.utils.views"></a>
2025-08-18T18:10:27.2456405Z 
2025-08-18T18:10:27.2456471Z # db.utils.views
2025-08-18T18:10:27.2456573Z 
2025-08-18T18:10:27.2456663Z <a id="db.utils.views.replace_view"></a>
2025-08-18T18:10:27.2456841Z 
2025-08-18T18:10:27.2456909Z #### replace\_view
2025-08-18T18:10:27.2457011Z 
2025-08-18T18:10:27.2457080Z ```python
2025-08-18T18:10:27.2457267Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T18:10:27.2457511Z ```
2025-08-18T18:10:27.2457591Z 
2025-08-18T18:10:27.2457678Z Drop and recreate a SQL view atomically.
2025-08-18T18:10:27.2457844Z 
2025-08-18T18:10:27.2457911Z <a id="db.utils"></a>
2025-08-18T18:10:27.2458024Z 
2025-08-18T18:10:27.2458084Z # db.utils
2025-08-18T18:10:27.2458177Z 
2025-08-18T18:10:27.2458252Z <a id="price_importer"></a>
2025-08-18T18:10:27.2458382Z 
2025-08-18T18:10:27.2458453Z # price\_importer
2025-08-18T18:10:27.2458555Z 
2025-08-18T18:10:27.2458654Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T18:10:27.2458842Z 
2025-08-18T18:10:27.2458929Z # price\_importer.services\_common.dsn
2025-08-18T18:10:27.2459090Z 
2025-08-18T18:10:27.2459212Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T18:10:27.2459592Z 
2025-08-18T18:10:27.2459656Z #### build\_dsn
2025-08-18T18:10:27.2459754Z 
2025-08-18T18:10:27.2459821Z ```python
2025-08-18T18:10:27.2459988Z def build_dsn(sync: bool = True) -> str
2025-08-18T18:10:27.2460216Z ```
2025-08-18T18:10:27.2460294Z 
2025-08-18T18:10:27.2460358Z Return safe DSN.
2025-08-18T18:10:27.2460469Z 
2025-08-18T18:10:27.2460815Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T18:10:27.2461018Z 
2025-08-18T18:10:27.2461143Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T18:10:27.2461352Z 
2025-08-18T18:10:27.2461459Z # price\_importer.services\_common.models\_vendor
2025-08-18T18:10:27.2461648Z 
2025-08-18T18:10:27.2461761Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T18:10:27.2461947Z 
2025-08-18T18:10:27.2462041Z # price\_importer.services\_common.db\_url
2025-08-18T18:10:27.2462222Z 
2025-08-18T18:10:27.2462351Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T18:10:27.2462561Z 
2025-08-18T18:10:27.2462781Z #### build\_url
2025-08-18T18:10:27.2462879Z 
2025-08-18T18:10:27.2462942Z ```python
2025-08-18T18:10:27.2463115Z def build_url(async_: bool = True) -> str
2025-08-18T18:10:27.2463332Z ```
2025-08-18T18:10:27.2463412Z 
2025-08-18T18:10:27.2463512Z Return Postgres DSN from env or PG_* parts.
2025-08-18T18:10:27.2463685Z 
2025-08-18T18:10:27.2463790Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T18:10:27.2463978Z 
2025-08-18T18:10:27.2464068Z # price\_importer.services\_common.keepa
2025-08-18T18:10:27.2464232Z 
2025-08-18T18:10:27.2464335Z <a id="price_importer.services_common.llm"></a>
2025-08-18T18:10:27.2464514Z 
2025-08-18T18:10:27.2464599Z # price\_importer.services\_common.llm
2025-08-18T18:10:27.2464762Z 
2025-08-18T18:10:27.2464874Z <a id="price_importer.services_common.settings"></a>
2025-08-18T18:10:27.2465063Z 
2025-08-18T18:10:27.2465156Z # price\_importer.services\_common.settings
2025-08-18T18:10:27.2465331Z 
2025-08-18T18:10:27.2465429Z <a id="price_importer.services_common.db"></a>
2025-08-18T18:10:27.2465614Z 
2025-08-18T18:10:27.2465707Z # price\_importer.services\_common.db
2025-08-18T18:10:27.2465865Z 
2025-08-18T18:10:27.2466226Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T18:10:27.2466479Z 
2025-08-18T18:10:27.2466556Z #### build\_sqlalchemy\_url
2025-08-18T18:10:27.2466686Z 
2025-08-18T18:10:27.2466748Z ```python
2025-08-18T18:10:27.2466922Z def build_sqlalchemy_url() -> str
2025-08-18T18:10:27.2467135Z ```
2025-08-18T18:10:27.2467215Z 
2025-08-18T18:10:27.2467308Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T18:10:27.2467477Z 
2025-08-18T18:10:27.2467625Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T18:10:27.2467849Z 
2025-08-18T18:10:27.2467925Z #### build\_asyncpg\_dsn
2025-08-18T18:10:27.2468052Z 
2025-08-18T18:10:27.2468114Z ```python
2025-08-18T18:10:27.2468277Z def build_asyncpg_dsn() -> str
2025-08-18T18:10:27.2468476Z ```
2025-08-18T18:10:27.2468554Z 
2025-08-18T18:10:27.2468689Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T18:10:27.2468902Z 
2025-08-18T18:10:27.2469027Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T18:10:27.2469238Z 
2025-08-18T18:10:27.2469302Z #### refresh\_mvs
2025-08-18T18:10:27.2469405Z 
2025-08-18T18:10:27.2469465Z ```python
2025-08-18T18:10:27.2469657Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T18:10:27.2469899Z ```
2025-08-18T18:10:27.2469988Z 
2025-08-18T18:10:27.2470121Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T18:10:27.2470333Z 
2025-08-18T18:10:27.2470437Z <a id="price_importer.services_common"></a>
2025-08-18T18:10:27.2470606Z 
2025-08-18T18:10:27.2470691Z # price\_importer.services\_common
2025-08-18T18:10:27.2470855Z 
2025-08-18T18:10:27.2470954Z <a id="price_importer.services_common.base"></a>
2025-08-18T18:10:27.2471135Z 
2025-08-18T18:10:27.2471224Z # price\_importer.services\_common.base
2025-08-18T18:10:27.2471393Z 
2025-08-18T18:10:27.2471481Z <a id="price_importer.normaliser"></a>
2025-08-18T18:10:27.2471772Z 
2025-08-18T18:10:27.2471862Z # price\_importer.normaliser
2025-08-18T18:10:27.2472001Z 
2025-08-18T18:10:27.2472105Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T18:10:27.2472294Z 
2025-08-18T18:10:27.2472383Z # price\_importer.common.models\_vendor
2025-08-18T18:10:27.2472546Z 
2025-08-18T18:10:27.2472635Z <a id="price_importer.common.db_url"></a>
2025-08-18T18:10:27.2472817Z 
2025-08-18T18:10:27.2472901Z # price\_importer.common.db\_url
2025-08-18T18:10:27.2473046Z 
2025-08-18T18:10:27.2473155Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T18:10:27.2473340Z 
2025-08-18T18:10:27.2473403Z #### make\_dsn
2025-08-18T18:10:27.2473504Z 
2025-08-18T18:10:27.2473564Z ```python
2025-08-18T18:10:27.2473734Z def make_dsn(async_: bool = False) -> str
2025-08-18T18:10:27.2473960Z ```
2025-08-18T18:10:27.2474042Z 
2025-08-18T18:10:27.2474167Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T18:10:27.2474365Z 
2025-08-18T18:10:27.2474606Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T18:10:27.2474791Z 
2025-08-18T18:10:27.2474863Z #### build\_url
2025-08-18T18:10:27.2474961Z 
2025-08-18T18:10:27.2475022Z ```python
2025-08-18T18:10:27.2475199Z def build_url(async_: bool = False) -> str
2025-08-18T18:10:27.2475419Z ```
2025-08-18T18:10:27.2475506Z 
2025-08-18T18:10:27.2475621Z Return Postgres DSN built from environment variables.
2025-08-18T18:10:27.2475818Z 
2025-08-18T18:10:27.2475905Z <a id="price_importer.common"></a>
2025-08-18T18:10:27.2476169Z 
2025-08-18T18:10:27.2476246Z # price\_importer.common
2025-08-18T18:10:27.2476377Z 
2025-08-18T18:10:27.2476463Z <a id="price_importer.common.base"></a>
2025-08-18T18:10:27.2476624Z 
2025-08-18T18:10:27.2476703Z # price\_importer.common.base
2025-08-18T18:10:27.2476846Z 
2025-08-18T18:10:27.2476940Z <a id="price_importer.tests.conftest"></a>
2025-08-18T18:10:27.2477109Z 
2025-08-18T18:10:27.2477196Z # price\_importer.tests.conftest
2025-08-18T18:10:27.2477348Z 
2025-08-18T18:10:27.2477450Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T18:10:27.2477628Z 
2025-08-18T18:10:27.2477713Z # price\_importer.tests.test\_reader
2025-08-18T18:10:27.2477868Z 
2025-08-18T18:10:27.2477967Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T18:10:27.2478149Z 
2025-08-18T18:10:27.2478237Z # price\_importer.tests.test\_imports
2025-08-18T18:10:27.2478393Z 
2025-08-18T18:10:27.2478493Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T18:10:27.2478663Z 
2025-08-18T18:10:27.2478747Z # price\_importer.tests.test\_smoke
2025-08-18T18:10:27.2478905Z 
2025-08-18T18:10:27.2479008Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T18:10:27.2479190Z 
2025-08-18T18:10:27.2479282Z # price\_importer.tests.test\_normaliser
2025-08-18T18:10:27.2479452Z 
2025-08-18T18:10:27.2479533Z <a id="price_importer.tests"></a>
2025-08-18T18:10:27.2479681Z 
2025-08-18T18:10:27.2479763Z # price\_importer.tests
2025-08-18T18:10:27.2479883Z 
2025-08-18T18:10:27.2479966Z <a id="price_importer.reader"></a>
2025-08-18T18:10:27.2480127Z 
2025-08-18T18:10:27.2480203Z # price\_importer.reader
2025-08-18T18:10:27.2480327Z 
2025-08-18T18:10:27.2480415Z <a id="price_importer.repository"></a>
2025-08-18T18:10:27.2480583Z 
2025-08-18T18:10:27.2480664Z # price\_importer.repository
2025-08-18T18:10:27.2480803Z 
2025-08-18T18:10:27.2480890Z <a id="price_importer.import"></a>
2025-08-18T18:10:27.2481037Z 
2025-08-18T18:10:27.2481113Z # price\_importer.import
2025-08-18T18:10:27.2481234Z 
2025-08-18T18:10:27.2481311Z <a id="fees_h10"></a>
2025-08-18T18:10:27.2481457Z 
2025-08-18T18:10:27.2481520Z # fees\_h10
2025-08-18T18:10:27.2481617Z 
2025-08-18T18:10:27.2481690Z <a id="fees_h10.worker"></a>
2025-08-18T18:10:27.2481821Z 
2025-08-18T18:10:27.2481894Z # fees\_h10.worker
2025-08-18T18:10:27.2481998Z 
2025-08-18T18:10:27.2482091Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T18:10:27.2482265Z 
2025-08-18T18:10:27.2482345Z #### list\_active\_asins
2025-08-18T18:10:27.2482460Z 
2025-08-18T18:10:27.2482650Z ```python
2025-08-18T18:10:27.2482822Z def list_active_asins() -> list[str]
2025-08-18T18:10:27.2483031Z ```
2025-08-18T18:10:27.2483118Z 
2025-08-18T18:10:27.2483228Z Return known ASINs or an empty list if unavailable.
2025-08-18T18:10:27.2483432Z 
2025-08-18T18:10:27.2483521Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T18:10:27.2483681Z 
2025-08-18T18:10:27.2483758Z # fees\_h10.tests.test\_smoke
2025-08-18T18:10:27.2483900Z 
2025-08-18T18:10:27.2483974Z <a id="fees_h10.tests"></a>
2025-08-18T18:10:27.2484102Z 
2025-08-18T18:10:27.2484168Z # fees\_h10.tests
2025-08-18T18:10:27.2484276Z 
2025-08-18T18:10:27.2484349Z <a id="fees_h10.client"></a>
2025-08-18T18:10:27.2484480Z 
2025-08-18T18:10:27.2484551Z # fees\_h10.client
2025-08-18T18:10:27.2484653Z 
2025-08-18T18:10:27.2484733Z <a id="fees_h10.repository"></a>
2025-08-18T18:10:27.2484876Z 
2025-08-18T18:10:27.2484954Z # fees\_h10.repository
2025-08-18T18:10:27.2485069Z 
2025-08-18T18:10:27.2485138Z <a id="emailer"></a>
2025-08-18T18:10:27.2485387Z 
2025-08-18T18:10:27.2485450Z # emailer
2025-08-18T18:10:27.2485538Z 
2025-08-18T18:10:27.2485643Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T18:10:27.2485817Z 
2025-08-18T18:10:27.2485903Z # emailer.tests.test\_import\_emailer
2025-08-18T18:10:27.2486273Z 
2025-08-18T18:10:27.2486366Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T18:10:27.2486523Z 
2025-08-18T18:10:27.2486603Z # emailer.tests.test\_smoke
2025-08-18T18:10:27.2486740Z 
2025-08-18T18:10:27.2486816Z <a id="emailer.tests"></a>
2025-08-18T18:10:27.2486942Z 
2025-08-18T18:10:27.2487013Z # emailer.tests
2025-08-18T18:10:27.2487114Z 
2025-08-18T18:10:27.2487200Z <a id="emailer.generate_body"></a>
2025-08-18T18:10:27.2487349Z 
2025-08-18T18:10:27.2487427Z # emailer.generate\_body
2025-08-18T18:10:27.2487554Z 
2025-08-18T18:10:27.2487623Z <a id="llm_server"></a>
2025-08-18T18:10:27.2487744Z 
2025-08-18T18:10:27.2487806Z # llm\_server
2025-08-18T18:10:27.2487900Z 
2025-08-18T18:10:27.2487976Z <a id="llm_server.app"></a>
2025-08-18T18:10:27.2488122Z 
2025-08-18T18:10:27.2488186Z # llm\_server.app
2025-08-18T18:10:27.2488287Z 
