2025-08-19T09:36:27.2434686Z ##[group]Run pydoc-markdown
2025-08-19T09:36:27.2434984Z [36;1mpydoc-markdown[0m
2025-08-19T09:36:27.2476090Z shell: /usr/bin/bash -e {0}
2025-08-19T09:36:27.2476335Z env:
2025-08-19T09:36:27.2476572Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:36:27.2476988Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T09:36:27.2477382Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:36:27.2477723Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:36:27.2478057Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:36:27.2478405Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T09:36:27.2478687Z ##[endgroup]
2025-08-19T09:36:27.6308616Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T09:36:27.6309384Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T09:36:27.6309929Z In "pydoc-markdown.yml"
2025-08-19T09:36:27.6310424Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T09:36:27.6311175Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T09:36:27.6312071Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T09:36:27.6312689Z 
2025-08-19T09:36:27.9406961Z <a id="__init__"></a>
2025-08-19T09:36:27.9407348Z 
2025-08-19T09:36:27.9407470Z # \_\_init\_\_
2025-08-19T09:36:27.9407664Z 
2025-08-19T09:36:27.9407790Z <a id="api"></a>
2025-08-19T09:36:27.9407987Z 
2025-08-19T09:36:27.9408096Z # api
2025-08-19T09:36:27.9408266Z 
2025-08-19T09:36:27.9408404Z <a id="api.errors"></a>
2025-08-19T09:36:27.9408637Z 
2025-08-19T09:36:27.9408756Z # api.errors
2025-08-19T09:36:27.9408948Z 
2025-08-19T09:36:27.9409100Z <a id="api.sentry_config"></a>
2025-08-19T09:36:27.9409372Z 
2025-08-19T09:36:27.9409511Z # api.sentry\_config
2025-08-19T09:36:27.9409725Z 
2025-08-19T09:36:27.9409895Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T09:36:27.9410231Z 
2025-08-19T09:36:27.9410781Z # api.tests.test\_sentry\_scrub
2025-08-19T09:36:27.9411073Z 
2025-08-19T09:36:27.9411234Z <a id="api.tests.test_errors_json"></a>
2025-08-19T09:36:27.9411550Z 
2025-08-19T09:36:27.9411696Z # api.tests.test\_errors\_json
2025-08-19T09:36:27.9411960Z 
2025-08-19T09:36:27.9412112Z <a id="api.tests.test_llm"></a>
2025-08-19T09:36:27.9412373Z 
2025-08-19T09:36:27.9412504Z # api.tests.test\_llm
2025-08-19T09:36:27.9412730Z 
2025-08-19T09:36:27.9412889Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T09:36:27.9413204Z 
2025-08-19T09:36:27.9413718Z # api.tests.test\_sentry\_event
2025-08-19T09:36:27.9414007Z 
2025-08-19T09:36:27.9414247Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T09:36:27.9414640Z 
2025-08-19T09:36:27.9414791Z ## DummyTransport Objects
2025-08-19T09:36:27.9415031Z 
2025-08-19T09:36:27.9415145Z ```python
2025-08-19T09:36:27.9415452Z class DummyTransport()
2025-08-19T09:36:27.9415779Z ```
2025-08-19T09:36:27.9415943Z 
2025-08-19T09:36:27.9416269Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T09:36:27.9416792Z 
2025-08-19T09:36:27.9416926Z #### capture\_envelope
2025-08-19T09:36:27.9417156Z 
2025-08-19T09:36:27.9417269Z ```python
2025-08-19T09:36:27.9417584Z def capture_envelope(envelope)
2025-08-19T09:36:27.9417953Z ```
2025-08-19T09:36:27.9418097Z 
2025-08-19T09:36:27.9418333Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T09:36:27.9418720Z 
2025-08-19T09:36:27.9418870Z <a id="api.tests.test_cors"></a>
2025-08-19T09:36:27.9419183Z 
2025-08-19T09:36:27.9419345Z # api.tests.test\_cors
2025-08-19T09:36:27.9419562Z 
2025-08-19T09:36:27.9419718Z <a id="api.tests.test_imports"></a>
2025-08-19T09:36:27.9420010Z 
2025-08-19T09:36:27.9420149Z # api.tests.test\_imports
2025-08-19T09:36:27.9420387Z 
2025-08-19T09:36:27.9420551Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T09:36:27.9420854Z 
2025-08-19T09:36:27.9421002Z # api.tests.test\_rate\_limit
2025-08-19T09:36:27.9421275Z 
2025-08-19T09:36:27.9421456Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T09:36:27.9422168Z 
2025-08-19T09:36:27.9422296Z #### app
2025-08-19T09:36:27.9422459Z 
2025-08-19T09:36:27.9422574Z noqa: E402
2025-08-19T09:36:27.9422743Z 
2025-08-19T09:36:27.9422916Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T09:36:27.9423231Z 
2025-08-19T09:36:27.9423607Z # api.tests.test\_entrypoint
2025-08-19T09:36:27.9423896Z 
2025-08-19T09:36:27.9424053Z <a id="api.tests.test_health"></a>
2025-08-19T09:36:27.9424341Z 
2025-08-19T09:36:27.9424480Z # api.tests.test\_health
2025-08-19T09:36:27.9424727Z 
2025-08-19T09:36:27.9424874Z <a id="api.logging_config"></a>
2025-08-19T09:36:27.9425144Z 
2025-08-19T09:36:27.9425279Z # api.logging\_config
2025-08-19T09:36:27.9425533Z 
2025-08-19T09:36:27.9425680Z <a id="api.migrations.env"></a>
2025-08-19T09:36:27.9425958Z 
2025-08-19T09:36:27.9426092Z # api.migrations.env
2025-08-19T09:36:27.9426310Z 
2025-08-19T09:36:27.9426534Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T09:36:27.9426940Z 
2025-08-19T09:36:27.9427144Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T09:36:27.9427507Z 
2025-08-19T09:36:27.9427716Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T09:36:27.9428081Z 
2025-08-19T09:36:27.9428257Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T09:36:27.9428597Z 
2025-08-19T09:36:27.9428884Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T09:36:27.9429332Z 
2025-08-19T09:36:27.9429588Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T09:36:27.9430006Z 
2025-08-19T09:36:27.9430232Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T09:36:27.9430616Z 
2025-08-19T09:36:27.9430817Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T09:36:27.9431160Z 
2025-08-19T09:36:27.9431379Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T09:36:27.9431764Z 
2025-08-19T09:36:27.9431955Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T09:36:27.9432300Z 
2025-08-19T09:36:27.9432860Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T09:36:27.9433260Z 
2025-08-19T09:36:27.9433640Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T09:36:27.9434008Z 
2025-08-19T09:36:27.9434229Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T09:36:27.9434600Z 
2025-08-19T09:36:27.9434799Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T09:36:27.9435155Z 
2025-08-19T09:36:27.9435385Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T09:36:27.9435777Z 
2025-08-19T09:36:27.9435984Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T09:36:27.9436341Z 
2025-08-19T09:36:27.9436602Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T09:36:27.9437030Z 
2025-08-19T09:36:27.9437253Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T09:36:27.9437633Z 
2025-08-19T09:36:27.9437864Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T09:36:27.9438252Z 
2025-08-19T09:36:27.9438468Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T09:36:27.9438830Z 
2025-08-19T09:36:27.9439090Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T09:36:27.9439525Z 
2025-08-19T09:36:27.9439756Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T09:36:27.9440204Z 
2025-08-19T09:36:27.9440408Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T09:36:27.9440780Z 
2025-08-19T09:36:27.9440952Z # api.migrations.versions.0001\_baseline
2025-08-19T09:36:27.9441272Z 
2025-08-19T09:36:27.9441433Z <a id="api.migrations.versions"></a>
2025-08-19T09:36:27.9441749Z 
2025-08-19T09:36:27.9441905Z # api.migrations.versions
2025-08-19T09:36:27.9442157Z 
2025-08-19T09:36:27.9442308Z <a id="api.migrations"></a>
2025-08-19T09:36:27.9442564Z 
2025-08-19T09:36:27.9442687Z # api.migrations
2025-08-19T09:36:27.9442887Z 
2025-08-19T09:36:27.9443016Z <a id="api.db"></a>
2025-08-19T09:36:27.9443210Z 
2025-08-19T09:36:27.9443487Z # api.db
2025-08-19T09:36:27.9443667Z 
2025-08-19T09:36:27.9443823Z <a id="api.routes.stats"></a>
2025-08-19T09:36:27.9444341Z 
2025-08-19T09:36:27.9444477Z # api.routes.stats
2025-08-19T09:36:27.9444676Z 
2025-08-19T09:36:27.9444835Z <a id="api.routes.stats.kpi"></a>
2025-08-19T09:36:27.9445121Z 
2025-08-19T09:36:27.9445244Z #### kpi
2025-08-19T09:36:27.9445404Z 
2025-08-19T09:36:27.9445516Z ```python
2025-08-19T09:36:27.9445825Z @router.get("/stats/kpi")
2025-08-19T09:36:27.9446251Z def kpi() -> List[Dict[str, int]]
2025-08-19T09:36:27.9446638Z ```
2025-08-19T09:36:27.9446789Z 
2025-08-19T09:36:27.9446930Z Return KPI metrics (mock).
2025-08-19T09:36:27.9447184Z 
2025-08-19T09:36:27.9447413Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T09:36:27.9447748Z 
2025-08-19T09:36:27.9447886Z #### roi\_by\_vendor
2025-08-19T09:36:27.9448091Z 
2025-08-19T09:36:27.9448209Z ```python
2025-08-19T09:36:27.9448533Z @router.get("/stats/roi_by_vendor")
2025-08-19T09:36:27.9448981Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T09:36:27.9449404Z ```
2025-08-19T09:36:27.9449563Z 
2025-08-19T09:36:27.9449718Z Return ROI percent by vendor.
2025-08-19T09:36:27.9449989Z 
2025-08-19T09:36:27.9450155Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T09:36:27.9450469Z 
2025-08-19T09:36:27.9450598Z #### roi\_trend
2025-08-19T09:36:27.9450780Z 
2025-08-19T09:36:27.9450892Z ```python
2025-08-19T09:36:27.9451195Z @router.get("/stats/roi_trend")
2025-08-19T09:36:27.9451624Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T09:36:27.9452057Z ```
2025-08-19T09:36:27.9452213Z 
2025-08-19T09:36:27.9452351Z Return 30-day ROI trend.
2025-08-19T09:36:27.9452590Z 
2025-08-19T09:36:27.9452731Z <a id="api.routes.roi"></a>
2025-08-19T09:36:27.9452983Z 
2025-08-19T09:36:27.9453110Z # api.routes.roi
2025-08-19T09:36:27.9453305Z 
2025-08-19T09:36:27.9453631Z <a id="api.routes.health"></a>
2025-08-19T09:36:27.9453905Z 
2025-08-19T09:36:27.9454032Z # api.routes.health
2025-08-19T09:36:27.9454233Z 
2025-08-19T09:36:27.9454398Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T09:36:27.9454945Z 
2025-08-19T09:36:27.9455067Z #### MAX\_SKEW
2025-08-19T09:36:27.9455248Z 
2025-08-19T09:36:27.9455358Z seconds
2025-08-19T09:36:27.9455521Z 
2025-08-19T09:36:27.9455682Z <a id="api.routes.health.health"></a>
2025-08-19T09:36:27.9455986Z 
2025-08-19T09:36:27.9456104Z #### health
2025-08-19T09:36:27.9456302Z 
2025-08-19T09:36:27.9456416Z ```python
2025-08-19T09:36:27.9456779Z @router.get("/health", include_in_schema=False)
2025-08-19T09:36:27.9457490Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T09:36:27.9458130Z ```
2025-08-19T09:36:27.9458281Z 
2025-08-19T09:36:27.9458494Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T09:36:27.9458866Z 
2025-08-19T09:36:27.9459025Z <a id="api.routes.repository"></a>
2025-08-19T09:36:27.9459317Z 
2025-08-19T09:36:27.9459463Z # api.routes.repository
2025-08-19T09:36:27.9459690Z 
2025-08-19T09:36:27.9459820Z <a id="api.routes"></a>
2025-08-19T09:36:27.9460046Z 
2025-08-19T09:36:27.9460164Z # api.routes
2025-08-19T09:36:27.9460355Z 
2025-08-19T09:36:27.9460502Z <a id="api.models.fee"></a>
2025-08-19T09:36:27.9460757Z 
2025-08-19T09:36:27.9460878Z # api.models.fee
2025-08-19T09:36:27.9461072Z 
2025-08-19T09:36:27.9461185Z <a id="api.models"></a>
2025-08-19T09:36:27.9461387Z 
2025-08-19T09:36:27.9461495Z # api.models
2025-08-19T09:36:27.9461658Z 
2025-08-19T09:36:27.9461800Z <a id="api.roi_repository"></a>
2025-08-19T09:36:27.9462048Z 
2025-08-19T09:36:27.9462181Z # api.roi\_repository
2025-08-19T09:36:27.9462403Z 
2025-08-19T09:36:27.9462528Z <a id="api.main"></a>
2025-08-19T09:36:27.9462743Z 
2025-08-19T09:36:27.9462867Z # api.main
2025-08-19T09:36:27.9463039Z 
2025-08-19T09:36:27.9463180Z <a id="api.main.ready"></a>
2025-08-19T09:36:27.9463611Z 
2025-08-19T09:36:27.9463738Z #### ready
2025-08-19T09:36:27.9463902Z 
2025-08-19T09:36:27.9464017Z ```python
2025-08-19T09:36:27.9464504Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T09:36:27.9465321Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T09:36:27.9466238Z                                                                       str]
2025-08-19T09:36:27.9466669Z ```
2025-08-19T09:36:27.9466818Z 
2025-08-19T09:36:27.9466994Z Return 200 only when migrations are at head.
2025-08-19T09:36:27.9467318Z 
2025-08-19T09:36:27.9467463Z <a id="api.config"></a>
2025-08-19T09:36:27.9467685Z 
2025-08-19T09:36:27.9467801Z # api.config
2025-08-19T09:36:27.9467979Z 
2025-08-19T09:36:27.9468092Z <a id="etl"></a>
2025-08-19T09:36:27.9468277Z 
2025-08-19T09:36:27.9468392Z # etl
2025-08-19T09:36:27.9468549Z 
2025-08-19T09:36:27.9468693Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T09:36:27.9468971Z 
2025-08-19T09:36:27.9469107Z # etl.fba\_fee\_ingestor
2025-08-19T09:36:27.9469333Z 
2025-08-19T09:36:27.9469476Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T09:36:27.9469756Z 
2025-08-19T09:36:27.9469885Z # etl.sp\_fees\_ingestor
2025-08-19T09:36:27.9470111Z 
2025-08-19T09:36:27.9470254Z <a id="etl.keepa_ingestor"></a>
2025-08-19T09:36:27.9470543Z 
2025-08-19T09:36:27.9470674Z # etl.keepa\_ingestor
2025-08-19T09:36:27.9470890Z 
2025-08-19T09:36:27.9471018Z <a id="etl.db"></a>
2025-08-19T09:36:27.9471216Z 
2025-08-19T09:36:27.9471325Z # etl.db
2025-08-19T09:36:27.9471492Z 
2025-08-19T09:36:27.9471640Z <a id="etl.dialects.schemas"></a>
2025-08-19T09:36:27.9471918Z 
2025-08-19T09:36:27.9472054Z # etl.dialects.schemas
2025-08-19T09:36:27.9472279Z 
2025-08-19T09:36:27.9472468Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T09:36:27.9472821Z 
2025-08-19T09:36:27.9472990Z # etl.dialects.amazon\_reimbursements
2025-08-19T09:36:27.9473293Z 
2025-08-19T09:36:27.9473675Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T09:36:27.9474011Z 
2025-08-19T09:36:27.9474167Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T09:36:27.9474459Z 
2025-08-19T09:36:27.9474616Z <a id="etl.dialects.test_generic"></a>
2025-08-19T09:36:27.9474924Z 
2025-08-19T09:36:27.9475065Z # etl.dialects.test\_generic
2025-08-19T09:36:27.9475534Z 
2025-08-19T09:36:27.9475725Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T09:36:27.9476042Z 
2025-08-19T09:36:27.9476188Z # etl.dialects.amazon\_returns
2025-08-19T09:36:27.9476470Z 
2025-08-19T09:36:27.9476654Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T09:36:27.9476987Z 
2025-08-19T09:36:27.9477141Z # etl.dialects.amazon\_fee\_preview
2025-08-19T09:36:27.9477438Z 
2025-08-19T09:36:27.9477632Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T09:36:27.9477989Z 
2025-08-19T09:36:27.9478162Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T09:36:27.9478481Z 
2025-08-19T09:36:27.9478660Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T09:36:27.9478996Z 
2025-08-19T09:36:27.9479151Z # etl.dialects.amazon\_settlements
2025-08-19T09:36:27.9479439Z 
2025-08-19T09:36:27.9479576Z <a id="etl.dialects"></a>
2025-08-19T09:36:27.9479823Z 
2025-08-19T09:36:27.9479942Z # etl.dialects
2025-08-19T09:36:27.9480126Z 
2025-08-19T09:36:27.9480253Z <a id="ingest"></a>
2025-08-19T09:36:27.9480463Z 
2025-08-19T09:36:27.9480582Z # ingest
2025-08-19T09:36:27.9480739Z 
2025-08-19T09:36:27.9480898Z <a id="ingest.maintenance"></a>
2025-08-19T09:36:27.9481161Z 
2025-08-19T09:36:27.9481292Z # ingest.maintenance
2025-08-19T09:36:27.9481511Z 
2025-08-19T09:36:27.9481655Z <a id="ingest.copy_loader"></a>
2025-08-19T09:36:27.9481915Z 
2025-08-19T09:36:27.9482051Z # ingest.copy\_loader
2025-08-19T09:36:27.9482267Z 
2025-08-19T09:36:27.9482452Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T09:36:27.9482799Z 
2025-08-19T09:36:27.9482936Z #### copy\_df\_via\_temp
2025-08-19T09:36:27.9483157Z 
2025-08-19T09:36:27.9483273Z ```python
2025-08-19T09:36:27.9483779Z def copy_df_via_temp(engine: Engine,
2025-08-19T09:36:27.9484204Z                      df: pd.DataFrame,
2025-08-19T09:36:27.9484631Z                      target_table: str,
2025-08-19T09:36:27.9485031Z                      *,
2025-08-19T09:36:27.9485412Z                      target_schema: Optional[str] = None,
2025-08-19T09:36:27.9485905Z                      columns: Sequence[str],
2025-08-19T09:36:27.9486630Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T09:36:27.9487155Z                      analyze_after: bool = False,
2025-08-19T09:36:27.9487640Z                      connection: Any | None = None) -> int
2025-08-19T09:36:27.9488080Z ```
2025-08-19T09:36:27.9488229Z 
2025-08-19T09:36:27.9488511Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T09:36:27.9488956Z 
2025-08-19T09:36:27.9489111Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T09:36:27.9489407Z 
2025-08-19T09:36:27.9489561Z # ingest.tests.test\_smoke
2025-08-19T09:36:27.9489802Z 
2025-08-19T09:36:27.9489935Z <a id="ingest.tests"></a>
2025-08-19T09:36:27.9490175Z 
2025-08-19T09:36:27.9490296Z # ingest.tests
2025-08-19T09:36:27.9490485Z 
2025-08-19T09:36:27.9490637Z <a id="ingest.upload_router"></a>
2025-08-19T09:36:27.9490921Z 
2025-08-19T09:36:27.9491056Z # ingest.upload\_router
2025-08-19T09:36:27.9491290Z 
2025-08-19T09:36:27.9491445Z <a id="ingest.email_watcher"></a>
2025-08-19T09:36:27.9491729Z 
2025-08-19T09:36:27.9491860Z # ingest.email\_watcher
2025-08-19T09:36:27.9492089Z 
2025-08-19T09:36:27.9492246Z <a id="ingest.email_watcher.main"></a>
2025-08-19T09:36:27.9492546Z 
2025-08-19T09:36:27.9492658Z #### main
2025-08-19T09:36:27.9492827Z 
2025-08-19T09:36:27.9492945Z ```python
2025-08-19T09:36:27.9493244Z def main() -> dict[str, str]
2025-08-19T09:36:27.9493797Z ```
2025-08-19T09:36:27.9493951Z 
2025-08-19T09:36:27.9494206Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T09:36:27.9494630Z 
2025-08-19T09:36:27.9494869Z Returns {"status": "success"} when processing completes.
2025-08-19T09:36:27.9495259Z 
2025-08-19T09:36:27.9495392Z <a id="ingest.tasks"></a>
2025-08-19T09:36:27.9495644Z 
2025-08-19T09:36:27.9495763Z # ingest.tasks
2025-08-19T09:36:27.9495951Z 
2025-08-19T09:36:27.9496135Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T09:36:27.9496466Z 
2025-08-19T09:36:27.9496830Z #### task\_import\_file
2025-08-19T09:36:27.9497061Z 
2025-08-19T09:36:27.9497185Z ```python
2025-08-19T09:36:27.9497562Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T09:36:27.9498090Z def task_import_file(self: Any,
2025-08-19T09:36:27.9498477Z                      uri: str,
2025-08-19T09:36:27.9498883Z                      report_type: Optional[str] = None,
2025-08-19T09:36:27.9499377Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T09:36:27.9499806Z ```
2025-08-19T09:36:27.9499957Z 
2025-08-19T09:36:27.9500203Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T09:36:27.9500598Z 
2025-08-19T09:36:27.9500743Z <a id="ingest.celery_app"></a>
2025-08-19T09:36:27.9501013Z 
2025-08-19T09:36:27.9501142Z # ingest.celery\_app
2025-08-19T09:36:27.9501355Z 
2025-08-19T09:36:27.9501504Z <a id="ingest.ingest_router"></a>
2025-08-19T09:36:27.9501799Z 
2025-08-19T09:36:27.9501930Z # ingest.ingest\_router
2025-08-19T09:36:27.9502149Z 
2025-08-19T09:36:27.9502304Z <a id="logistics_etl"></a>
2025-08-19T09:36:27.9502554Z 
2025-08-19T09:36:27.9502671Z # logistics\_etl
2025-08-19T09:36:27.9502870Z 
2025-08-19T09:36:27.9503004Z Daily logistics ETL job.
2025-08-19T09:36:27.9503233Z 
2025-08-19T09:36:27.9503556Z <a id="logistics_etl.__main__"></a>
2025-08-19T09:36:27.9503857Z 
2025-08-19T09:36:27.9503997Z # logistics\_etl.\_\_main\_\_
2025-08-19T09:36:27.9504252Z 
2025-08-19T09:36:27.9504403Z <a id="logistics_etl.dsn"></a>
2025-08-19T09:36:27.9504662Z 
2025-08-19T09:36:27.9504790Z # logistics\_etl.dsn
2025-08-19T09:36:27.9505012Z 
2025-08-19T09:36:27.9505227Z Local DSN builder to avoid cross-service dependency.
2025-08-19T09:36:27.9505606Z 
2025-08-19T09:36:27.9505774Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T09:36:27.9506101Z 
2025-08-19T09:36:27.9506218Z #### build\_dsn
2025-08-19T09:36:27.9506399Z 
2025-08-19T09:36:27.9506518Z ```python
2025-08-19T09:36:27.9506828Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:36:27.9507280Z ```
2025-08-19T09:36:27.9507438Z 
2025-08-19T09:36:27.9507936Z Return a Postgres DSN assembled from environment variables.
2025-08-19T09:36:27.9508362Z 
2025-08-19T09:36:27.9508635Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T09:36:27.9509355Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T09:36:27.9510003Z error when any required variable is missing.
2025-08-19T09:36:27.9510335Z 
2025-08-19T09:36:27.9510510Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T09:36:27.9510833Z 
2025-08-19T09:36:27.9510985Z # logistics\_etl.tests.conftest
2025-08-19T09:36:27.9511269Z 
2025-08-19T09:36:27.9511461Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T09:36:27.9511814Z 
2025-08-19T09:36:27.9511972Z # logistics\_etl.tests.test\_repository
2025-08-19T09:36:27.9512285Z 
2025-08-19T09:36:27.9512453Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T09:36:27.9512771Z 
2025-08-19T09:36:27.9512929Z # logistics\_etl.tests.test\_cron
2025-08-19T09:36:27.9513208Z 
2025-08-19T09:36:27.9513579Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T09:36:27.9513933Z 
2025-08-19T09:36:27.9514087Z # logistics\_etl.tests.test\_imports
2025-08-19T09:36:27.9514381Z 
2025-08-19T09:36:27.9514552Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T09:36:27.9514883Z 
2025-08-19T09:36:27.9515036Z # logistics\_etl.tests.test\_smoke
2025-08-19T09:36:27.9515320Z 
2025-08-19T09:36:27.9515494Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T09:36:27.9515813Z 
2025-08-19T09:36:27.9515965Z # logistics\_etl.tests.test\_client
2025-08-19T09:36:27.9516262Z 
2025-08-19T09:36:27.9516412Z <a id="logistics_etl.tests"></a>
2025-08-19T09:36:27.9516688Z 
2025-08-19T09:36:27.9516823Z # logistics\_etl.tests
2025-08-19T09:36:27.9517055Z 
2025-08-19T09:36:27.9517201Z <a id="logistics_etl.flow"></a>
2025-08-19T09:36:27.9517465Z 
2025-08-19T09:36:27.9517613Z # logistics\_etl.flow
2025-08-19T09:36:27.9517830Z 
2025-08-19T09:36:27.9517975Z <a id="logistics_etl.client"></a>
2025-08-19T09:36:27.9518484Z 
2025-08-19T09:36:27.9547737Z # logistics\_etl.client
2025-08-19T09:36:27.9574221Z 
2025-08-19T09:36:27.9574580Z <a id="logistics_etl.cron"></a>
2025-08-19T09:36:27.9575155Z 
2025-08-19T09:36:27.9575291Z # logistics\_etl.cron
2025-08-19T09:36:27.9575488Z 
2025-08-19T09:36:27.9575617Z <a id="logistics_etl.db"></a>
2025-08-19T09:36:27.9575835Z 
2025-08-19T09:36:27.9575941Z # logistics\_etl.db
2025-08-19T09:36:27.9576115Z 
2025-08-19T09:36:27.9576251Z <a id="logistics_etl.repository"></a>
2025-08-19T09:36:27.9576500Z 
2025-08-19T09:36:27.9576616Z # logistics\_etl.repository
2025-08-19T09:36:27.9576823Z 
2025-08-19T09:36:27.9576928Z <a id="alert_bot"></a>
2025-08-19T09:36:27.9577103Z 
2025-08-19T09:36:27.9577203Z # alert\_bot
2025-08-19T09:36:27.9577341Z 
2025-08-19T09:36:27.9577471Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T09:36:27.9577730Z 
2025-08-19T09:36:27.9577848Z # alert\_bot.tests.test\_smoke
2025-08-19T09:36:27.9578053Z 
2025-08-19T09:36:27.9578164Z <a id="alert_bot.tests"></a>
2025-08-19T09:36:27.9578398Z 
2025-08-19T09:36:27.9578507Z # alert\_bot.tests
2025-08-19T09:36:27.9578668Z 
2025-08-19T09:36:27.9578795Z <a id="alert_bot.alert_bot"></a>
2025-08-19T09:36:27.9579012Z 
2025-08-19T09:36:27.9579121Z # alert\_bot.alert\_bot
2025-08-19T09:36:27.9579304Z 
2025-08-19T09:36:27.9579591Z <a id="alert_bot.rules"></a>
2025-08-19T09:36:27.9579822Z 
2025-08-19T09:36:27.9579941Z # alert\_bot.rules
2025-08-19T09:36:27.9580198Z 
2025-08-19T09:36:27.9580395Z <a id="common"></a>
2025-08-19T09:36:27.9580556Z 
2025-08-19T09:36:27.9580736Z # common
2025-08-19T09:36:27.9580887Z 
2025-08-19T09:36:27.9581122Z <a id="common.dsn"></a>
2025-08-19T09:36:27.9581465Z 
2025-08-19T09:36:27.9581889Z # common.dsn
2025-08-19T09:36:27.9582053Z 
2025-08-19T09:36:27.9582195Z <a id="common.dsn.build_dsn"></a>
2025-08-19T09:36:27.9582440Z 
2025-08-19T09:36:27.9582561Z #### build\_dsn
2025-08-19T09:36:27.9582744Z 
2025-08-19T09:36:27.9583172Z ```python
2025-08-19T09:36:27.9583732Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:36:27.9584185Z ```
2025-08-19T09:36:27.9584564Z 
2025-08-19T09:36:27.9584760Z Return a Postgres DSN, validating required variables.
2025-08-19T09:36:27.9585162Z 
2025-08-19T09:36:27.9585747Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T09:36:27.9586449Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T09:36:27.9587176Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T09:36:27.9587641Z missing.
2025-08-19T09:36:27.9587780Z 
2025-08-19T09:36:27.9587906Z <a id="common.models_vendor"></a>
2025-08-19T09:36:27.9588136Z 
2025-08-19T09:36:27.9588248Z # common.models\_vendor
2025-08-19T09:36:27.9588443Z 
2025-08-19T09:36:27.9588581Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T09:36:27.9588847Z 
2025-08-19T09:36:27.9588958Z ## Vendor Objects
2025-08-19T09:36:27.9589128Z 
2025-08-19T09:36:27.9589227Z ```python
2025-08-19T09:36:27.9589463Z class Vendor(Base)
2025-08-19T09:36:27.9589724Z ```
2025-08-19T09:36:27.9589854Z 
2025-08-19T09:36:27.9589982Z Vendor of inventory items.
2025-08-19T09:36:27.9590184Z 
2025-08-19T09:36:27.9590336Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T09:36:27.9590622Z 
2025-08-19T09:36:27.9590733Z ## VendorPrice Objects
2025-08-19T09:36:27.9590914Z 
2025-08-19T09:36:27.9591013Z ```python
2025-08-19T09:36:27.9591252Z class VendorPrice(Base)
2025-08-19T09:36:27.9591523Z ```
2025-08-19T09:36:27.9591650Z 
2025-08-19T09:36:27.9591801Z Association table linking vendors to pricing.
2025-08-19T09:36:27.9592087Z 
2025-08-19T09:36:27.9592203Z <a id="common.db_url"></a>
2025-08-19T09:36:27.9592407Z 
2025-08-19T09:36:27.9592522Z # common.db\_url
2025-08-19T09:36:27.9592680Z 
2025-08-19T09:36:27.9592806Z <a id="common.db_url.build_url"></a>
2025-08-19T09:36:27.9593045Z 
2025-08-19T09:36:27.9593272Z #### build\_url
2025-08-19T09:36:27.9593606Z 
2025-08-19T09:36:27.9593702Z ```python
2025-08-19T09:36:27.9593964Z def build_url(async_: bool = True) -> str
2025-08-19T09:36:27.9594483Z ```
2025-08-19T09:36:27.9594624Z 
2025-08-19T09:36:27.9594764Z Return Postgres DSN from env or PG_* parts.
2025-08-19T09:36:27.9595030Z 
2025-08-19T09:36:27.9595149Z <a id="common.keepa"></a>
2025-08-19T09:36:27.9595339Z 
2025-08-19T09:36:27.9595438Z # common.keepa
2025-08-19T09:36:27.9595587Z 
2025-08-19T09:36:27.9595701Z <a id="common.llm"></a>
2025-08-19T09:36:27.9595883Z 
2025-08-19T09:36:27.9595979Z # common.llm
2025-08-19T09:36:27.9596138Z 
2025-08-19T09:36:27.9596260Z <a id="common.settings"></a>
2025-08-19T09:36:27.9596464Z 
2025-08-19T09:36:27.9596566Z # common.settings
2025-08-19T09:36:27.9596735Z 
2025-08-19T09:36:27.9596841Z <a id="common.db"></a>
2025-08-19T09:36:27.9597018Z 
2025-08-19T09:36:27.9597121Z # common.db
2025-08-19T09:36:27.9597267Z 
2025-08-19T09:36:27.9597412Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T09:36:27.9597696Z 
2025-08-19T09:36:27.9597811Z #### build\_sqlalchemy\_url
2025-08-19T09:36:27.9598020Z 
2025-08-19T09:36:27.9598115Z ```python
2025-08-19T09:36:27.9598391Z def build_sqlalchemy_url() -> str
2025-08-19T09:36:27.9598728Z ```
2025-08-19T09:36:27.9598852Z 
2025-08-19T09:36:27.9598993Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T09:36:27.9599257Z 
2025-08-19T09:36:27.9599399Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T09:36:27.9599652Z 
2025-08-19T09:36:27.9599763Z #### build\_asyncpg\_dsn
2025-08-19T09:36:27.9599952Z 
2025-08-19T09:36:27.9600042Z ```python
2025-08-19T09:36:27.9600303Z def build_asyncpg_dsn() -> str
2025-08-19T09:36:27.9600613Z ```
2025-08-19T09:36:27.9600737Z 
2025-08-19T09:36:27.9600941Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T09:36:27.9601271Z 
2025-08-19T09:36:27.9601401Z <a id="common.db.refresh_mvs"></a>
2025-08-19T09:36:27.9601639Z 
2025-08-19T09:36:27.9601747Z #### refresh\_mvs
2025-08-19T09:36:27.9601911Z 
2025-08-19T09:36:27.9602009Z ```python
2025-08-19T09:36:27.9602329Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T09:36:27.9602741Z ```
2025-08-19T09:36:27.9602898Z 
2025-08-19T09:36:27.9603291Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T09:36:27.9603811Z 
2025-08-19T09:36:27.9603948Z <a id="common.config"></a>
2025-08-19T09:36:27.9604157Z 
2025-08-19T09:36:27.9604259Z # common.config
2025-08-19T09:36:27.9604425Z 
2025-08-19T09:36:27.9604546Z <a id="common.base"></a>
2025-08-19T09:36:27.9604740Z 
2025-08-19T09:36:27.9604843Z # common.base
2025-08-19T09:36:27.9604997Z 
2025-08-19T09:36:27.9605119Z <a id="common.base.Base"></a>
2025-08-19T09:36:27.9605335Z 
2025-08-19T09:36:27.9605443Z ## Base Objects
2025-08-19T09:36:27.9605597Z 
2025-08-19T09:36:27.9605691Z ```python
2025-08-19T09:36:27.9605958Z class Base(DeclarativeBase)
2025-08-19T09:36:27.9606249Z ```
2025-08-19T09:36:27.9606386Z 
2025-08-19T09:36:27.9606516Z Base class for SQLAlchemy models.
2025-08-19T09:36:27.9606756Z 
2025-08-19T09:36:27.9606868Z <a id="repricer"></a>
2025-08-19T09:36:27.9607065Z 
2025-08-19T09:36:27.9607163Z # repricer
2025-08-19T09:36:27.9607309Z 
2025-08-19T09:36:27.9607455Z <a id="repricer.app.schemas"></a>
2025-08-19T09:36:27.9607704Z 
2025-08-19T09:36:27.9607820Z # repricer.app.schemas
2025-08-19T09:36:27.9608014Z 
2025-08-19T09:36:27.9608141Z <a id="repricer.app.deps"></a>
2025-08-19T09:36:27.9608361Z 
2025-08-19T09:36:27.9608474Z # repricer.app.deps
2025-08-19T09:36:27.9608649Z 
2025-08-19T09:36:27.9608832Z Placeholder module for Keepa / SP-API clients.
2025-08-19T09:36:27.9609123Z 
2025-08-19T09:36:27.9609262Z <a id="repricer.app.logic"></a>
2025-08-19T09:36:27.9609489Z 
2025-08-19T09:36:27.9609606Z # repricer.app.logic
2025-08-19T09:36:27.9609791Z 
2025-08-19T09:36:27.9609954Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T09:36:27.9610235Z 
2025-08-19T09:36:27.9610339Z #### MIN\_MARGIN
2025-08-19T09:36:27.9610503Z 
2025-08-19T09:36:27.9610596Z 15 % ROI
2025-08-19T09:36:27.9610730Z 
2025-08-19T09:36:27.9610900Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T09:36:27.9611192Z 
2025-08-19T09:36:27.9611298Z #### compute\_price
2025-08-19T09:36:27.9611695Z 
2025-08-19T09:36:27.9611813Z ```python
2025-08-19T09:36:27.9612203Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T09:36:27.9612687Z ```
2025-08-19T09:36:27.9612817Z 
2025-08-19T09:36:27.9612987Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T09:36:27.9613613Z Replace with real competitive logic later.
2025-08-19T09:36:27.9613896Z 
2025-08-19T09:36:27.9614032Z <a id="repricer.app.main"></a>
2025-08-19T09:36:27.9614250Z 
2025-08-19T09:36:27.9614364Z # repricer.app.main
2025-08-19T09:36:27.9614535Z 
2025-08-19T09:36:27.9614658Z <a id="repricer.app"></a>
2025-08-19T09:36:27.9614858Z 
2025-08-19T09:36:27.9614963Z # repricer.app
2025-08-19T09:36:27.9615125Z 
2025-08-19T09:36:27.9615264Z <a id="repricer.tests.test_imports"></a>
2025-08-19T09:36:27.9615533Z 
2025-08-19T09:36:27.9615668Z # repricer.tests.test\_imports
2025-08-19T09:36:27.9615891Z 
2025-08-19T09:36:27.9616032Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T09:36:27.9616298Z 
2025-08-19T09:36:27.9616442Z # repricer.tests.test\_smoke
2025-08-19T09:36:27.9616674Z 
2025-08-19T09:36:27.9616797Z <a id="repricer.tests"></a>
2025-08-19T09:36:27.9617017Z 
2025-08-19T09:36:27.9617121Z # repricer.tests
2025-08-19T09:36:27.9617290Z 
2025-08-19T09:36:27.9617393Z <a id="db"></a>
2025-08-19T09:36:27.9617559Z 
2025-08-19T09:36:27.9617656Z # db
2025-08-19T09:36:27.9617788Z 
2025-08-19T09:36:27.9617914Z <a id="db.utils.views"></a>
2025-08-19T09:36:27.9618120Z 
2025-08-19T09:36:27.9618230Z # db.utils.views
2025-08-19T09:36:27.9618406Z 
2025-08-19T09:36:27.9618550Z <a id="db.utils.views.replace_view"></a>
2025-08-19T09:36:27.9618821Z 
2025-08-19T09:36:27.9618925Z #### replace\_view
2025-08-19T09:36:27.9619097Z 
2025-08-19T09:36:27.9619199Z ```python
2025-08-19T09:36:27.9619508Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T09:36:27.9619900Z ```
2025-08-19T09:36:27.9620032Z 
2025-08-19T09:36:27.9620176Z Drop and recreate a SQL view atomically.
2025-08-19T09:36:27.9620443Z 
2025-08-19T09:36:27.9620565Z <a id="db.utils"></a>
2025-08-19T09:36:27.9620938Z 
2025-08-19T09:36:27.9621040Z # db.utils
2025-08-19T09:36:27.9621188Z 
2025-08-19T09:36:27.9621309Z <a id="price_importer"></a>
2025-08-19T09:36:27.9621525Z 
2025-08-19T09:36:27.9621633Z # price\_importer
2025-08-19T09:36:27.9621801Z 
2025-08-19T09:36:27.9621968Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T09:36:27.9622273Z 
2025-08-19T09:36:27.9622417Z # price\_importer.services\_common.dsn
2025-08-19T09:36:27.9622695Z 
2025-08-19T09:36:27.9622894Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T09:36:27.9623238Z 
2025-08-19T09:36:27.9623495Z #### build\_dsn
2025-08-19T09:36:27.9623668Z 
2025-08-19T09:36:27.9623767Z ```python
2025-08-19T09:36:27.9624042Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:36:27.9624397Z ```
2025-08-19T09:36:27.9624523Z 
2025-08-19T09:36:27.9624633Z Return safe DSN.
2025-08-19T09:36:27.9624804Z 
2025-08-19T09:36:27.9625324Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T09:36:27.9625673Z 
2025-08-19T09:36:27.9625882Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T09:36:27.9626217Z 
2025-08-19T09:36:27.9626389Z # price\_importer.services\_common.models\_vendor
2025-08-19T09:36:27.9626703Z 
2025-08-19T09:36:27.9626875Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T09:36:27.9627180Z 
2025-08-19T09:36:27.9627343Z # price\_importer.services\_common.db\_url
2025-08-19T09:36:27.9627632Z 
2025-08-19T09:36:27.9627853Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T09:36:27.9628224Z 
2025-08-19T09:36:27.9628342Z #### build\_url
2025-08-19T09:36:27.9628506Z 
2025-08-19T09:36:27.9628615Z ```python
2025-08-19T09:36:27.9628899Z def build_url(async_: bool = True) -> str
2025-08-19T09:36:27.9629270Z ```
2025-08-19T09:36:27.9629397Z 
2025-08-19T09:36:27.9629541Z Return Postgres DSN from env or PG_* parts.
2025-08-19T09:36:27.9629810Z 
2025-08-19T09:36:27.9629975Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T09:36:27.9630443Z 
2025-08-19T09:36:27.9630604Z # price\_importer.services\_common.keepa
2025-08-19T09:36:27.9630900Z 
2025-08-19T09:36:27.9631074Z <a id="price_importer.services_common.llm"></a>
2025-08-19T09:36:27.9631385Z 
2025-08-19T09:36:27.9631542Z # price\_importer.services\_common.llm
2025-08-19T09:36:27.9631822Z 
2025-08-19T09:36:27.9632015Z <a id="price_importer.services_common.settings"></a>
2025-08-19T09:36:27.9632341Z 
2025-08-19T09:36:27.9632500Z # price\_importer.services\_common.settings
2025-08-19T09:36:27.9632785Z 
2025-08-19T09:36:27.9632949Z <a id="price_importer.services_common.db"></a>
2025-08-19T09:36:27.9633249Z 
2025-08-19T09:36:27.9633539Z # price\_importer.services\_common.db
2025-08-19T09:36:27.9633805Z 
2025-08-19T09:36:27.9634064Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T09:36:27.9634458Z 
2025-08-19T09:36:27.9634582Z #### build\_sqlalchemy\_url
2025-08-19T09:36:27.9634809Z 
2025-08-19T09:36:27.9634908Z ```python
2025-08-19T09:36:27.9635195Z def build_sqlalchemy_url() -> str
2025-08-19T09:36:27.9635539Z ```
2025-08-19T09:36:27.9635673Z 
2025-08-19T09:36:27.9635826Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T09:36:27.9636118Z 
2025-08-19T09:36:27.9636353Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T09:36:27.9636708Z 
2025-08-19T09:36:27.9636840Z #### build\_asyncpg\_dsn
2025-08-19T09:36:27.9637052Z 
2025-08-19T09:36:27.9637156Z ```python
2025-08-19T09:36:27.9637439Z def build_asyncpg_dsn() -> str
2025-08-19T09:36:27.9637763Z ```
2025-08-19T09:36:27.9637903Z 
2025-08-19T09:36:27.9638117Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T09:36:27.9638468Z 
2025-08-19T09:36:27.9638686Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T09:36:27.9639034Z 
2025-08-19T09:36:27.9639147Z #### refresh\_mvs
2025-08-19T09:36:27.9639325Z 
2025-08-19T09:36:27.9639429Z ```python
2025-08-19T09:36:27.9639748Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T09:36:27.9640173Z ```
2025-08-19T09:36:27.9640484Z 
2025-08-19T09:36:27.9640712Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T09:36:27.9641079Z 
2025-08-19T09:36:27.9641236Z <a id="price_importer.services_common"></a>
2025-08-19T09:36:27.9641519Z 
2025-08-19T09:36:27.9641660Z # price\_importer.services\_common
2025-08-19T09:36:27.9641892Z 
2025-08-19T09:36:27.9642049Z <a id="price_importer.services_common.base"></a>
2025-08-19T09:36:27.9642334Z 
2025-08-19T09:36:27.9642465Z # price\_importer.services\_common.base
2025-08-19T09:36:27.9642702Z 
2025-08-19T09:36:27.9642832Z <a id="price_importer.normaliser"></a>
2025-08-19T09:36:27.9643076Z 
2025-08-19T09:36:27.9643194Z # price\_importer.normaliser
2025-08-19T09:36:27.9643623Z 
2025-08-19T09:36:27.9643780Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T09:36:27.9644044Z 
2025-08-19T09:36:27.9644173Z # price\_importer.common.models\_vendor
2025-08-19T09:36:27.9644415Z 
2025-08-19T09:36:27.9644544Z <a id="price_importer.common.db_url"></a>
2025-08-19T09:36:27.9644795Z 
2025-08-19T09:36:27.9644924Z # price\_importer.common.db\_url
2025-08-19T09:36:27.9645142Z 
2025-08-19T09:36:27.9645289Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T09:36:27.9645558Z 
2025-08-19T09:36:27.9645663Z #### make\_dsn
2025-08-19T09:36:27.9645802Z 
2025-08-19T09:36:27.9645890Z ```python
2025-08-19T09:36:27.9646209Z def make_dsn(async_: bool = False) -> str
2025-08-19T09:36:27.9646517Z ```
2025-08-19T09:36:27.9646638Z 
2025-08-19T09:36:27.9646808Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T09:36:27.9647108Z 
2025-08-19T09:36:27.9647278Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T09:36:27.9647637Z 
2025-08-19T09:36:27.9647742Z #### build\_url
2025-08-19T09:36:27.9647907Z 
2025-08-19T09:36:27.9648022Z ```python
2025-08-19T09:36:27.9648313Z def build_url(async_: bool = False) -> str
2025-08-19T09:36:27.9648669Z ```
2025-08-19T09:36:27.9648793Z 
2025-08-19T09:36:27.9648974Z Return Postgres DSN built from environment variables.
2025-08-19T09:36:27.9649494Z 
2025-08-19T09:36:27.9649637Z <a id="price_importer.common"></a>
2025-08-19T09:36:27.9649891Z 
2025-08-19T09:36:27.9650026Z # price\_importer.common
2025-08-19T09:36:27.9650239Z 
2025-08-19T09:36:27.9650384Z <a id="price_importer.common.base"></a>
2025-08-19T09:36:27.9650672Z 
2025-08-19T09:36:27.9650807Z # price\_importer.common.base
2025-08-19T09:36:27.9651061Z 
2025-08-19T09:36:27.9651205Z <a id="price_importer.tests.conftest"></a>
2025-08-19T09:36:27.9651479Z 
2025-08-19T09:36:27.9651604Z # price\_importer.tests.conftest
2025-08-19T09:36:27.9651818Z 
2025-08-19T09:36:27.9651966Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T09:36:27.9652223Z 
2025-08-19T09:36:27.9652344Z # price\_importer.tests.test\_reader
2025-08-19T09:36:27.9652591Z 
2025-08-19T09:36:27.9652763Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T09:36:27.9653074Z 
2025-08-19T09:36:27.9653226Z # price\_importer.tests.test\_imports
2025-08-19T09:36:27.9653705Z 
2025-08-19T09:36:27.9653880Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T09:36:27.9654191Z 
2025-08-19T09:36:27.9654347Z # price\_importer.tests.test\_smoke
2025-08-19T09:36:27.9654616Z 
2025-08-19T09:36:27.9654793Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T09:36:27.9655128Z 
2025-08-19T09:36:27.9655283Z # price\_importer.tests.test\_normaliser
2025-08-19T09:36:27.9655547Z 
2025-08-19T09:36:27.9655667Z <a id="price_importer.tests"></a>
2025-08-19T09:36:27.9655908Z 
2025-08-19T09:36:27.9656033Z # price\_importer.tests
2025-08-19T09:36:27.9656236Z 
2025-08-19T09:36:27.9656374Z <a id="price_importer.reader"></a>
2025-08-19T09:36:27.9656620Z 
2025-08-19T09:36:27.9656743Z # price\_importer.reader
2025-08-19T09:36:27.9656958Z 
2025-08-19T09:36:27.9657098Z <a id="price_importer.repository"></a>
2025-08-19T09:36:27.9657378Z 
2025-08-19T09:36:27.9657514Z # price\_importer.repository
2025-08-19T09:36:27.9657766Z 
2025-08-19T09:36:27.9657906Z <a id="price_importer.import"></a>
2025-08-19T09:36:27.9658168Z 
2025-08-19T09:36:27.9658302Z # price\_importer.import
2025-08-19T09:36:27.9658688Z 
2025-08-19T09:36:27.9658795Z <a id="fees_h10"></a>
2025-08-19T09:36:27.9659023Z 
2025-08-19T09:36:27.9659122Z # fees\_h10
2025-08-19T09:36:27.9659265Z 
2025-08-19T09:36:27.9659382Z <a id="fees_h10.worker"></a>
2025-08-19T09:36:27.9659606Z 
2025-08-19T09:36:27.9659712Z # fees\_h10.worker
2025-08-19T09:36:27.9659882Z 
2025-08-19T09:36:27.9660041Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T09:36:27.9660329Z 
2025-08-19T09:36:27.9660441Z #### list\_active\_asins
2025-08-19T09:36:27.9660629Z 
2025-08-19T09:36:27.9660732Z ```python
2025-08-19T09:36:27.9660991Z def list_active_asins() -> list[str]
2025-08-19T09:36:27.9661328Z ```
2025-08-19T09:36:27.9661452Z 
2025-08-19T09:36:27.9661623Z Return known ASINs or an empty list if unavailable.
2025-08-19T09:36:27.9661959Z 
2025-08-19T09:36:27.9662100Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T09:36:27.9662366Z 
2025-08-19T09:36:27.9662507Z # fees\_h10.tests.test\_smoke
2025-08-19T09:36:27.9662748Z 
2025-08-19T09:36:27.9662878Z <a id="fees_h10.tests"></a>
2025-08-19T09:36:27.9663110Z 
2025-08-19T09:36:27.9663245Z # fees\_h10.tests
2025-08-19T09:36:27.9663577Z 
2025-08-19T09:36:27.9663709Z <a id="fees_h10.client"></a>
2025-08-19T09:36:27.9663931Z 
2025-08-19T09:36:27.9664039Z # fees\_h10.client
2025-08-19T09:36:27.9664213Z 
2025-08-19T09:36:27.9664345Z <a id="fees_h10.repository"></a>
2025-08-19T09:36:27.9664589Z 
2025-08-19T09:36:27.9664706Z # fees\_h10.repository
2025-08-19T09:36:27.9664916Z 
2025-08-19T09:36:27.9665035Z <a id="emailer"></a>
2025-08-19T09:36:27.9665218Z 
2025-08-19T09:36:27.9665323Z # emailer
2025-08-19T09:36:27.9665471Z 
2025-08-19T09:36:27.9665632Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T09:36:27.9665934Z 
2025-08-19T09:36:27.9666079Z # emailer.tests.test\_import\_emailer
2025-08-19T09:36:27.9666341Z 
2025-08-19T09:36:27.9666484Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T09:36:27.9666756Z 
2025-08-19T09:36:27.9666885Z # emailer.tests.test\_smoke
2025-08-19T09:36:27.9667308Z 
2025-08-19T09:36:27.9694721Z <a id="emailer.tests"></a>
2025-08-19T09:36:27.9695040Z 
2025-08-19T09:36:27.9695161Z # emailer.tests
2025-08-19T09:36:27.9695342Z 
2025-08-19T09:36:27.9695501Z <a id="emailer.generate_body"></a>
2025-08-19T09:36:27.9695774Z 
2025-08-19T09:36:27.9695895Z # emailer.generate\_body
2025-08-19T09:36:27.9696101Z 
2025-08-19T09:36:27.9696219Z <a id="llm_server"></a>
2025-08-19T09:36:27.9696419Z 
2025-08-19T09:36:27.9696530Z # llm\_server
2025-08-19T09:36:27.9696702Z 
2025-08-19T09:36:27.9696838Z <a id="llm_server.app"></a>
2025-08-19T09:36:27.9697065Z 
2025-08-19T09:36:27.9697183Z # llm\_server.app
2025-08-19T09:36:27.9697361Z 
