2025-08-20T01:23:31.0457373Z ##[group]Run pydoc-markdown
2025-08-20T01:23:31.0457671Z [36;1mpydoc-markdown[0m
2025-08-20T01:23:31.0498189Z shell: /usr/bin/bash -e {0}
2025-08-20T01:23:31.0498421Z env:
2025-08-20T01:23:31.0498651Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:23:31.0499057Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T01:23:31.0499450Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:23:31.0499782Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:23:31.0500122Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:23:31.0500453Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T01:23:31.0500733Z ##[endgroup]
2025-08-20T01:23:31.4015052Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T01:23:31.4015813Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T01:23:31.4016156Z In "pydoc-markdown.yml"
2025-08-20T01:23:31.4016460Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T01:23:31.4016961Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T01:23:31.4017491Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T01:23:31.4017842Z 
2025-08-20T01:23:31.7562950Z <a id="__init__"></a>
2025-08-20T01:23:31.7563346Z 
2025-08-20T01:23:31.7563526Z # \_\_init\_\_
2025-08-20T01:23:31.7563763Z 
2025-08-20T01:23:31.7563934Z <a id="api"></a>
2025-08-20T01:23:31.7564202Z 
2025-08-20T01:23:31.7564341Z # api
2025-08-20T01:23:31.7564566Z 
2025-08-20T01:23:31.7564763Z <a id="api.errors"></a>
2025-08-20T01:23:31.7565094Z 
2025-08-20T01:23:31.7565229Z # api.errors
2025-08-20T01:23:31.7565429Z 
2025-08-20T01:23:31.7565604Z <a id="api.sentry_config"></a>
2025-08-20T01:23:31.7565907Z 
2025-08-20T01:23:31.7566058Z # api.sentry\_config
2025-08-20T01:23:31.7566320Z 
2025-08-20T01:23:31.7566515Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T01:23:31.7566772Z 
2025-08-20T01:23:31.7566886Z # api.tests.test\_stats\_contracts
2025-08-20T01:23:31.7567165Z 
2025-08-20T01:23:31.7567295Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T01:23:31.7567540Z 
2025-08-20T01:23:31.7567658Z # api.tests.test\_sentry\_scrub
2025-08-20T01:23:31.7567873Z 
2025-08-20T01:23:31.7568290Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T01:23:31.7568742Z 
2025-08-20T01:23:31.7568896Z # api.tests.test\_roi\_basic\_auth
2025-08-20T01:23:31.7569176Z 
2025-08-20T01:23:31.7569333Z <a id="api.tests.test_errors_json"></a>
2025-08-20T01:23:31.7569543Z 
2025-08-20T01:23:31.7569637Z # api.tests.test\_errors\_json
2025-08-20T01:23:31.7569806Z 
2025-08-20T01:23:31.7569903Z <a id="api.tests.test_llm"></a>
2025-08-20T01:23:31.7570146Z 
2025-08-20T01:23:31.7570230Z # api.tests.test\_llm
2025-08-20T01:23:31.7570374Z 
2025-08-20T01:23:31.7570474Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T01:23:31.7570667Z 
2025-08-20T01:23:31.7570756Z # api.tests.test\_roi\_filters
2025-08-20T01:23:31.7570921Z 
2025-08-20T01:23:31.7571024Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T01:23:31.7571490Z 
2025-08-20T01:23:31.7571589Z # api.tests.test\_sentry\_event
2025-08-20T01:23:31.7571753Z 
2025-08-20T01:23:31.7571896Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T01:23:31.7572147Z 
2025-08-20T01:23:31.7572239Z ## DummyTransport Objects
2025-08-20T01:23:31.7572392Z 
2025-08-20T01:23:31.7572469Z ```python
2025-08-20T01:23:31.7572669Z class DummyTransport()
2025-08-20T01:23:31.7572884Z ```
2025-08-20T01:23:31.7572983Z 
2025-08-20T01:23:31.7573194Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T01:23:31.7573511Z 
2025-08-20T01:23:31.7573600Z #### capture\_envelope
2025-08-20T01:23:31.7573738Z 
2025-08-20T01:23:31.7573810Z ```python
2025-08-20T01:23:31.7574016Z def capture_envelope(envelope)
2025-08-20T01:23:31.7574253Z ```
2025-08-20T01:23:31.7574352Z 
2025-08-20T01:23:31.7574498Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T01:23:31.7574747Z 
2025-08-20T01:23:31.7574860Z <a id="api.tests.test_cors"></a>
2025-08-20T01:23:31.7575239Z 
2025-08-20T01:23:31.7575326Z # api.tests.test\_cors
2025-08-20T01:23:31.7575468Z 
2025-08-20T01:23:31.7575583Z <a id="api.tests.test_imports"></a>
2025-08-20T01:23:31.7575780Z 
2025-08-20T01:23:31.7575871Z # api.tests.test\_imports
2025-08-20T01:23:31.7576033Z 
2025-08-20T01:23:31.7576134Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T01:23:31.7576330Z 
2025-08-20T01:23:31.7576426Z # api.tests.test\_rate\_limit
2025-08-20T01:23:31.7576591Z 
2025-08-20T01:23:31.7576702Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T01:23:31.7576915Z 
2025-08-20T01:23:31.7576989Z #### app
2025-08-20T01:23:31.7577090Z 
2025-08-20T01:23:31.7577163Z noqa: E402
2025-08-20T01:23:31.7577271Z 
2025-08-20T01:23:31.7577369Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T01:23:31.7577557Z 
2025-08-20T01:23:31.7577653Z # api.tests.test\_stats\_sql
2025-08-20T01:23:31.7577813Z 
2025-08-20T01:23:31.7577913Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T01:23:31.7578266Z 
2025-08-20T01:23:31.7578370Z # api.tests.test\_entrypoint
2025-08-20T01:23:31.7578529Z 
2025-08-20T01:23:31.7578653Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T01:23:31.7578886Z 
2025-08-20T01:23:31.7578975Z # api.tests.test\_stats\_future\_contracts
2025-08-20T01:23:31.7579138Z 
2025-08-20T01:23:31.7579225Z <a id="api.tests.test_health"></a>
2025-08-20T01:23:31.7579375Z 
2025-08-20T01:23:31.7579450Z # api.tests.test\_health
2025-08-20T01:23:31.7579574Z 
2025-08-20T01:23:31.7579659Z <a id="api.tests.test_score"></a>
2025-08-20T01:23:31.7579805Z 
2025-08-20T01:23:31.7579878Z # api.tests.test\_score
2025-08-20T01:23:31.7580002Z 
2025-08-20T01:23:31.7580078Z <a id="api.logging_config"></a>
2025-08-20T01:23:31.7580213Z 
2025-08-20T01:23:31.7580288Z # api.logging\_config
2025-08-20T01:23:31.7580401Z 
2025-08-20T01:23:31.7580479Z <a id="api.migrations.env"></a>
2025-08-20T01:23:31.7580615Z 
2025-08-20T01:23:31.7580691Z # api.migrations.env
2025-08-20T01:23:31.7580807Z 
2025-08-20T01:23:31.7580929Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T01:23:31.7581128Z 
2025-08-20T01:23:31.7581234Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T01:23:31.7581414Z 
2025-08-20T01:23:31.7581521Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T01:23:31.7581714Z 
2025-08-20T01:23:31.7581808Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T01:23:31.7581975Z 
2025-08-20T01:23:31.7582131Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T01:23:31.7582363Z 
2025-08-20T01:23:31.7582496Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T01:23:31.7582711Z 
2025-08-20T01:23:31.7582831Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T01:23:31.7583026Z 
2025-08-20T01:23:31.7583136Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T01:23:31.7583315Z 
2025-08-20T01:23:31.7583430Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T01:23:31.7583702Z 
2025-08-20T01:23:31.7583804Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T01:23:31.7584153Z 
2025-08-20T01:23:31.7584283Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T01:23:31.7584485Z 
2025-08-20T01:23:31.7584594Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T01:23:31.7584786Z 
2025-08-20T01:23:31.7584900Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T01:23:31.7585092Z 
2025-08-20T01:23:31.7585197Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T01:23:31.7585386Z 
2025-08-20T01:23:31.7585508Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T01:23:31.7585705Z 
2025-08-20T01:23:31.7585813Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T01:23:31.7585991Z 
2025-08-20T01:23:31.7586125Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T01:23:31.7586349Z 
2025-08-20T01:23:31.7586466Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T01:23:31.7586659Z 
2025-08-20T01:23:31.7586784Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T01:23:31.7587114Z 
2025-08-20T01:23:31.7587221Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T01:23:31.7587412Z 
2025-08-20T01:23:31.7587545Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T01:23:31.7587759Z 
2025-08-20T01:23:31.7587874Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T01:23:31.7588216Z 
2025-08-20T01:23:31.7588325Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T01:23:31.7588513Z 
2025-08-20T01:23:31.7588610Z # api.migrations.versions.0001\_baseline
2025-08-20T01:23:31.7588855Z 
2025-08-20T01:23:31.7588943Z <a id="api.migrations.versions"></a>
2025-08-20T01:23:31.7589107Z 
2025-08-20T01:23:31.7589186Z # api.migrations.versions
2025-08-20T01:23:31.7589314Z 
2025-08-20T01:23:31.7589390Z <a id="api.migrations"></a>
2025-08-20T01:23:31.7589523Z 
2025-08-20T01:23:31.7589590Z # api.migrations
2025-08-20T01:23:31.7589695Z 
2025-08-20T01:23:31.7589768Z <a id="api.db"></a>
2025-08-20T01:23:31.7589885Z 
2025-08-20T01:23:31.7589976Z # api.db
2025-08-20T01:23:31.7590065Z 
2025-08-20T01:23:31.7590151Z <a id="api.routes.score"></a>
2025-08-20T01:23:31.7590287Z 
2025-08-20T01:23:31.7590355Z # api.routes.score
2025-08-20T01:23:31.7590465Z 
2025-08-20T01:23:31.7590543Z <a id="api.routes.stats"></a>
2025-08-20T01:23:31.7590673Z 
2025-08-20T01:23:31.7590742Z # api.routes.stats
2025-08-20T01:23:31.7590844Z 
2025-08-20T01:23:31.7590918Z <a id="api.routes.roi"></a>
2025-08-20T01:23:31.7591054Z 
2025-08-20T01:23:31.7591126Z # api.routes.roi
2025-08-20T01:23:31.7591230Z 
2025-08-20T01:23:31.7591310Z <a id="api.routes.health"></a>
2025-08-20T01:23:31.7591459Z 
2025-08-20T01:23:31.7591530Z # api.routes.health
2025-08-20T01:23:31.7591638Z 
2025-08-20T01:23:31.7591729Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T01:23:31.7591902Z 
2025-08-20T01:23:31.7591966Z #### MAX\_SKEW
2025-08-20T01:23:31.7592064Z 
2025-08-20T01:23:31.7592130Z seconds
2025-08-20T01:23:31.7592214Z 
2025-08-20T01:23:31.7592303Z <a id="api.routes.health.health"></a>
2025-08-20T01:23:31.7592477Z 
2025-08-20T01:23:31.7592539Z #### health
2025-08-20T01:23:31.7592627Z 
2025-08-20T01:23:31.7592690Z ```python
2025-08-20T01:23:31.7592893Z @router.get("/health", include_in_schema=False)
2025-08-20T01:23:31.7593301Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T01:23:31.7593650Z ```
2025-08-20T01:23:31.7593735Z 
2025-08-20T01:23:31.7593858Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T01:23:31.7594055Z 
2025-08-20T01:23:31.7594143Z <a id="api.routes.repository"></a>
2025-08-20T01:23:31.7594306Z 
2025-08-20T01:23:31.7594382Z # api.routes.repository
2025-08-20T01:23:31.7594506Z 
2025-08-20T01:23:31.7594578Z <a id="api.routes"></a>
2025-08-20T01:23:31.7594701Z 
2025-08-20T01:23:31.7594765Z # api.routes
2025-08-20T01:23:31.7594861Z 
2025-08-20T01:23:31.7594946Z <a id="api.models.fee"></a>
2025-08-20T01:23:31.7595079Z 
2025-08-20T01:23:31.7595145Z # api.models.fee
2025-08-20T01:23:31.7595258Z 
2025-08-20T01:23:31.7595454Z <a id="api.models"></a>
2025-08-20T01:23:31.7595567Z 
2025-08-20T01:23:31.7595631Z # api.models
2025-08-20T01:23:31.7595730Z 
2025-08-20T01:23:31.7595809Z <a id="api.roi_repository"></a>
2025-08-20T01:23:31.7595947Z 
2025-08-20T01:23:31.7596022Z # api.roi\_repository
2025-08-20T01:23:31.7596135Z 
2025-08-20T01:23:31.7596204Z <a id="api.main"></a>
2025-08-20T01:23:31.7596311Z 
2025-08-20T01:23:31.7596379Z # api.main
2025-08-20T01:23:31.7596469Z 
2025-08-20T01:23:31.7596552Z <a id="api.main.ready"></a>
2025-08-20T01:23:31.7596682Z 
2025-08-20T01:23:31.7596743Z #### ready
2025-08-20T01:23:31.7596837Z 
2025-08-20T01:23:31.7596900Z ```python
2025-08-20T01:23:31.7597159Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T01:23:31.7597592Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T01:23:31.7597939Z                                                                       str]
2025-08-20T01:23:31.7598277Z ```
2025-08-20T01:23:31.7598483Z 
2025-08-20T01:23:31.7598580Z Return 200 only when migrations are at head.
2025-08-20T01:23:31.7598753Z 
2025-08-20T01:23:31.7598825Z <a id="api.config"></a>
2025-08-20T01:23:31.7598947Z 
2025-08-20T01:23:31.7599011Z # api.config
2025-08-20T01:23:31.7599105Z 
2025-08-20T01:23:31.7599185Z <a id="api.security"></a>
2025-08-20T01:23:31.7599315Z 
2025-08-20T01:23:31.7599381Z # api.security
2025-08-20T01:23:31.7599480Z 
2025-08-20T01:23:31.7599550Z <a id="etl"></a>
2025-08-20T01:23:31.7599651Z 
2025-08-20T01:23:31.7599712Z # etl
2025-08-20T01:23:31.7599804Z 
2025-08-20T01:23:31.7599885Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T01:23:31.7600032Z 
2025-08-20T01:23:31.7600105Z # etl.fba\_fee\_ingestor
2025-08-20T01:23:31.7600234Z 
2025-08-20T01:23:31.7600312Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T01:23:31.7600456Z 
2025-08-20T01:23:31.7600535Z # etl.sp\_fees\_ingestor
2025-08-20T01:23:31.7600654Z 
2025-08-20T01:23:31.7600732Z <a id="etl.keepa_ingestor"></a>
2025-08-20T01:23:31.7600882Z 
2025-08-20T01:23:31.7600952Z # etl.keepa\_ingestor
2025-08-20T01:23:31.7601063Z 
2025-08-20T01:23:31.7601130Z <a id="etl.db"></a>
2025-08-20T01:23:31.7601243Z 
2025-08-20T01:23:31.7601303Z # etl.db
2025-08-20T01:23:31.7601390Z 
2025-08-20T01:23:31.7601479Z <a id="etl.dialects.schemas"></a>
2025-08-20T01:23:31.7601625Z 
2025-08-20T01:23:31.7601699Z # etl.dialects.schemas
2025-08-20T01:23:31.7601822Z 
2025-08-20T01:23:31.7601932Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T01:23:31.7602116Z 
2025-08-20T01:23:31.7602206Z # etl.dialects.amazon\_reimbursements
2025-08-20T01:23:31.7602375Z 
2025-08-20T01:23:31.7602471Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T01:23:31.7602645Z 
2025-08-20T01:23:31.7602740Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T01:23:31.7602896Z 
2025-08-20T01:23:31.7602984Z <a id="etl.dialects.test_generic"></a>
2025-08-20T01:23:31.7603149Z 
2025-08-20T01:23:31.7603230Z # etl.dialects.test\_generic
2025-08-20T01:23:31.7603370Z 
2025-08-20T01:23:31.7603467Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T01:23:31.7603639Z 
2025-08-20T01:23:31.7603720Z # etl.dialects.amazon\_returns
2025-08-20T01:23:31.7603865Z 
2025-08-20T01:23:31.7603969Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T01:23:31.7604136Z 
2025-08-20T01:23:31.7604221Z # etl.dialects.amazon\_fee\_preview
2025-08-20T01:23:31.7604378Z 
2025-08-20T01:23:31.7604483Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T01:23:31.7604669Z 
2025-08-20T01:23:31.7604759Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T01:23:31.7604927Z 
2025-08-20T01:23:31.7605024Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T01:23:31.7605193Z 
2025-08-20T01:23:31.7605283Z # etl.dialects.amazon\_settlements
2025-08-20T01:23:31.7605434Z 
2025-08-20T01:23:31.7605510Z <a id="etl.dialects"></a>
2025-08-20T01:23:31.7605640Z 
2025-08-20T01:23:31.7605706Z # etl.dialects
2025-08-20T01:23:31.7605804Z 
2025-08-20T01:23:31.7605872Z <a id="ingest"></a>
2025-08-20T01:23:31.7605982Z 
2025-08-20T01:23:31.7606163Z # ingest
2025-08-20T01:23:31.7606377Z 
2025-08-20T01:23:31.7606610Z <a id="ingest.maintenance"></a>
2025-08-20T01:23:31.7606824Z 
2025-08-20T01:23:31.7606895Z # ingest.maintenance
2025-08-20T01:23:31.7607011Z 
2025-08-20T01:23:31.7607095Z <a id="ingest.copy_loader"></a>
2025-08-20T01:23:31.7607229Z 
2025-08-20T01:23:31.7607299Z # ingest.copy\_loader
2025-08-20T01:23:31.7607419Z 
2025-08-20T01:23:31.7607519Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T01:23:31.7607699Z 
2025-08-20T01:23:31.7607779Z #### copy\_df\_via\_temp
2025-08-20T01:23:31.7607899Z 
2025-08-20T01:23:31.7607970Z ```python
2025-08-20T01:23:31.7608270Z def copy_df_via_temp(engine: Engine,
2025-08-20T01:23:31.7608505Z                      df: pd.DataFrame,
2025-08-20T01:23:31.7608739Z                      target_table: str,
2025-08-20T01:23:31.7608954Z                      *,
2025-08-20T01:23:31.7609159Z                      target_schema: Optional[str] = None,
2025-08-20T01:23:31.7609416Z                      columns: Sequence[str],
2025-08-20T01:23:31.7609813Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T01:23:31.7610097Z                      analyze_after: bool = False,
2025-08-20T01:23:31.7610356Z                      connection: Any | None = None) -> int
2025-08-20T01:23:31.7610597Z ```
2025-08-20T01:23:31.7610679Z 
2025-08-20T01:23:31.7610832Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T01:23:31.7611064Z 
2025-08-20T01:23:31.7611151Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T01:23:31.7611308Z 
2025-08-20T01:23:31.7611386Z # ingest.tests.test\_smoke
2025-08-20T01:23:31.7611521Z 
2025-08-20T01:23:31.7611596Z <a id="ingest.tests"></a>
2025-08-20T01:23:31.7611720Z 
2025-08-20T01:23:31.7611791Z # ingest.tests
2025-08-20T01:23:31.7611892Z 
2025-08-20T01:23:31.7611977Z <a id="ingest.upload_router"></a>
2025-08-20T01:23:31.7612128Z 
2025-08-20T01:23:31.7612202Z # ingest.upload\_router
2025-08-20T01:23:31.7612319Z 
2025-08-20T01:23:31.7612402Z <a id="ingest.email_watcher"></a>
2025-08-20T01:23:31.7612554Z 
2025-08-20T01:23:31.7612627Z # ingest.email\_watcher
2025-08-20T01:23:31.7612740Z 
2025-08-20T01:23:31.7612832Z <a id="ingest.email_watcher.main"></a>
2025-08-20T01:23:31.7612990Z 
2025-08-20T01:23:31.7613053Z #### main
2025-08-20T01:23:31.7613145Z 
2025-08-20T01:23:31.7613207Z ```python
2025-08-20T01:23:31.7613368Z def main() -> dict[str, str]
2025-08-20T01:23:31.7613570Z ```
2025-08-20T01:23:31.7613652Z 
2025-08-20T01:23:31.7613795Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T01:23:31.7614021Z 
2025-08-20T01:23:31.7614151Z Returns {"status": "success"} when processing completes.
2025-08-20T01:23:31.7614358Z 
2025-08-20T01:23:31.7614443Z <a id="ingest.tasks"></a>
2025-08-20T01:23:31.7614565Z 
2025-08-20T01:23:31.7614630Z # ingest.tasks
2025-08-20T01:23:31.7614750Z 
2025-08-20T01:23:31.7614848Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T01:23:31.7615027Z 
2025-08-20T01:23:31.7615100Z #### task\_import\_file
2025-08-20T01:23:31.7615224Z 
2025-08-20T01:23:31.7615297Z ```python
2025-08-20T01:23:31.7615499Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T01:23:31.7615781Z def task_import_file(self: Any,
2025-08-20T01:23:31.7615985Z                      uri: str,
2025-08-20T01:23:31.7616206Z                      report_type: str | None = None,
2025-08-20T01:23:31.7616472Z                      force: bool = False) -> dict[str, Any]
2025-08-20T01:23:31.7616711Z ```
2025-08-20T01:23:31.7616793Z 
2025-08-20T01:23:31.7616927Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T01:23:31.7617134Z 
2025-08-20T01:23:31.7617215Z <a id="ingest.celery_app"></a>
2025-08-20T01:23:31.7617353Z 
2025-08-20T01:23:31.7617431Z # ingest.celery\_app
2025-08-20T01:23:31.7617542Z 
2025-08-20T01:23:31.7617623Z <a id="ingest.ingest_router"></a>
2025-08-20T01:23:31.7617773Z 
2025-08-20T01:23:31.7617844Z # ingest.ingest\_router
2025-08-20T01:23:31.7617962Z 
2025-08-20T01:23:31.7618136Z <a id="logistics_etl"></a>
2025-08-20T01:23:31.7618469Z 
2025-08-20T01:23:31.7618538Z # logistics\_etl
2025-08-20T01:23:31.7618642Z 
2025-08-20T01:23:31.7618725Z Daily logistics ETL job.
2025-08-20T01:23:31.7618846Z 
2025-08-20T01:23:31.7618928Z <a id="logistics_etl.__main__"></a>
2025-08-20T01:23:31.7619085Z 
2025-08-20T01:23:31.7619162Z # logistics\_etl.\_\_main\_\_
2025-08-20T01:23:31.7619298Z 
2025-08-20T01:23:31.7619374Z <a id="logistics_etl.dsn"></a>
2025-08-20T01:23:31.7619511Z 
2025-08-20T01:23:31.7619580Z # logistics\_etl.dsn
2025-08-20T01:23:31.7619686Z 
2025-08-20T01:23:31.7619807Z Local DSN builder to avoid cross-service dependency.
2025-08-20T01:23:31.7620004Z 
2025-08-20T01:23:31.7620098Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T01:23:31.7620279Z 
2025-08-20T01:23:31.7620343Z #### build\_dsn
2025-08-20T01:23:31.7620443Z 
2025-08-20T01:23:31.7620505Z ```python
2025-08-20T01:23:31.7620685Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:23:31.7620911Z ```
2025-08-20T01:23:31.7621016Z 
2025-08-20T01:23:31.7621422Z Return a Postgres DSN assembled from environment variables.
2025-08-20T01:23:31.7621651Z 
2025-08-20T01:23:31.7621812Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T01:23:31.7622197Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T01:23:31.7622546Z error when any required variable is missing.
2025-08-20T01:23:31.7622719Z 
2025-08-20T01:23:31.7622814Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T01:23:31.7622990Z 
2025-08-20T01:23:31.7623073Z # logistics\_etl.tests.conftest
2025-08-20T01:23:31.7623216Z 
2025-08-20T01:23:31.7623325Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T01:23:31.7623506Z 
2025-08-20T01:23:31.7623596Z # logistics\_etl.tests.test\_repository
2025-08-20T01:23:31.7623763Z 
2025-08-20T01:23:31.7623856Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T01:23:31.7624023Z 
2025-08-20T01:23:31.7624108Z # logistics\_etl.tests.test\_cron
2025-08-20T01:23:31.7624262Z 
2025-08-20T01:23:31.7624362Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T01:23:31.7624542Z 
2025-08-20T01:23:31.7624631Z # logistics\_etl.tests.test\_imports
2025-08-20T01:23:31.7624786Z 
2025-08-20T01:23:31.7624880Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T01:23:31.7625055Z 
2025-08-20T01:23:31.7625141Z # logistics\_etl.tests.test\_smoke
2025-08-20T01:23:31.7625290Z 
2025-08-20T01:23:31.7625385Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T01:23:31.7625559Z 
2025-08-20T01:23:31.7625641Z # logistics\_etl.tests.test\_client
2025-08-20T01:23:31.7625792Z 
2025-08-20T01:23:31.7625880Z <a id="logistics_etl.tests"></a>
2025-08-20T01:23:31.7626022Z 
2025-08-20T01:23:31.7626093Z # logistics\_etl.tests
2025-08-20T01:23:31.7626218Z 
2025-08-20T01:23:31.7626297Z <a id="logistics_etl.flow"></a>
2025-08-20T01:23:31.7626433Z 
2025-08-20T01:23:31.7626504Z # logistics\_etl.flow
2025-08-20T01:23:31.7626627Z 
2025-08-20T01:23:31.7626707Z <a id="logistics_etl.client"></a>
2025-08-20T01:23:31.7626852Z 
2025-08-20T01:23:31.7706985Z # logistics\_etl.client
2025-08-20T01:23:31.7707295Z 
2025-08-20T01:23:31.7707867Z <a id="logistics_etl.cron"></a>
2025-08-20T01:23:31.7708406Z 
2025-08-20T01:23:31.7708566Z # logistics\_etl.cron
2025-08-20T01:23:31.7708822Z 
2025-08-20T01:23:31.7709006Z <a id="logistics_etl.db"></a>
2025-08-20T01:23:31.7709309Z 
2025-08-20T01:23:31.7709451Z # logistics\_etl.db
2025-08-20T01:23:31.7709688Z 
2025-08-20T01:23:31.7709872Z <a id="logistics_etl.repository"></a>
2025-08-20T01:23:31.7710222Z 
2025-08-20T01:23:31.7710384Z # logistics\_etl.repository
2025-08-20T01:23:31.7710678Z 
2025-08-20T01:23:31.7710824Z <a id="alert_bot"></a>
2025-08-20T01:23:31.7711070Z 
2025-08-20T01:23:31.7711205Z # alert\_bot
2025-08-20T01:23:31.7711404Z 
2025-08-20T01:23:31.7711583Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T01:23:31.7711944Z 
2025-08-20T01:23:31.7712111Z # alert\_bot.tests.test\_smoke
2025-08-20T01:23:31.7712418Z 
2025-08-20T01:23:31.7712575Z <a id="alert_bot.tests"></a>
2025-08-20T01:23:31.7712867Z 
2025-08-20T01:23:31.7713252Z # alert\_bot.tests
2025-08-20T01:23:31.7713478Z 
2025-08-20T01:23:31.7713652Z <a id="alert_bot.alert_bot"></a>
2025-08-20T01:23:31.7713837Z 
2025-08-20T01:23:31.7713926Z # alert\_bot.alert\_bot
2025-08-20T01:23:31.7714082Z 
2025-08-20T01:23:31.7714179Z <a id="alert_bot.rules"></a>
2025-08-20T01:23:31.7714343Z 
2025-08-20T01:23:31.7714426Z # alert\_bot.rules
2025-08-20T01:23:31.7714578Z 
2025-08-20T01:23:31.7714664Z <a id="common"></a>
2025-08-20T01:23:31.7714801Z 
2025-08-20T01:23:31.7714882Z # common
2025-08-20T01:23:31.7714994Z 
2025-08-20T01:23:31.7715085Z <a id="common.dsn"></a>
2025-08-20T01:23:31.7715234Z 
2025-08-20T01:23:31.7715319Z # common.dsn
2025-08-20T01:23:31.7715441Z 
2025-08-20T01:23:31.7715548Z <a id="common.dsn.build_dsn"></a>
2025-08-20T01:23:31.7715749Z 
2025-08-20T01:23:31.7715830Z #### build\_dsn
2025-08-20T01:23:31.7715957Z 
2025-08-20T01:23:31.7716038Z ```python
2025-08-20T01:23:31.7716270Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:23:31.7716625Z ```
2025-08-20T01:23:31.7716938Z 
2025-08-20T01:23:31.7717098Z Return a Postgres DSN, validating required variables.
2025-08-20T01:23:31.7717360Z 
2025-08-20T01:23:31.7717599Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T01:23:31.7718422Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T01:23:31.7718850Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T01:23:31.7719163Z missing.
2025-08-20T01:23:31.7719252Z 
2025-08-20T01:23:31.7719338Z <a id="common.models_vendor"></a>
2025-08-20T01:23:31.7719489Z 
2025-08-20T01:23:31.7719573Z # common.models\_vendor
2025-08-20T01:23:31.7719694Z 
2025-08-20T01:23:31.7719782Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T01:23:31.7719954Z 
2025-08-20T01:23:31.7720020Z ## Vendor Objects
2025-08-20T01:23:31.7720126Z 
2025-08-20T01:23:31.7720189Z ```python
2025-08-20T01:23:31.7720347Z class Vendor(Base)
2025-08-20T01:23:31.7720514Z ```
2025-08-20T01:23:31.7720601Z 
2025-08-20T01:23:31.7720684Z Vendor of inventory items.
2025-08-20T01:23:31.7720818Z 
2025-08-20T01:23:31.7720928Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T01:23:31.7721108Z 
2025-08-20T01:23:31.7721183Z ## VendorPrice Objects
2025-08-20T01:23:31.7721306Z 
2025-08-20T01:23:31.7721370Z ```python
2025-08-20T01:23:31.7721533Z class VendorPrice(Base)
2025-08-20T01:23:31.7721712Z ```
2025-08-20T01:23:31.7721791Z 
2025-08-20T01:23:31.7721899Z Association table linking vendors to pricing.
2025-08-20T01:23:31.7722090Z 
2025-08-20T01:23:31.7722166Z <a id="common.db_url"></a>
2025-08-20T01:23:31.7722302Z 
2025-08-20T01:23:31.7722369Z # common.db\_url
2025-08-20T01:23:31.7722473Z 
2025-08-20T01:23:31.7722558Z <a id="common.db_url.build_url"></a>
2025-08-20T01:23:31.7722718Z 
2025-08-20T01:23:31.7722783Z #### build\_url
2025-08-20T01:23:31.7722882Z 
2025-08-20T01:23:31.7722949Z ```python
2025-08-20T01:23:31.7723125Z def build_url(async_: bool = True) -> str
2025-08-20T01:23:31.7723352Z ```
2025-08-20T01:23:31.7723440Z 
2025-08-20T01:23:31.7723542Z Return Postgres DSN from env or PG_* parts.
2025-08-20T01:23:31.7723725Z 
2025-08-20T01:23:31.7723805Z <a id="common.keepa"></a>
2025-08-20T01:23:31.7723936Z 
2025-08-20T01:23:31.7724004Z # common.keepa
2025-08-20T01:23:31.7724111Z 
2025-08-20T01:23:31.7724183Z <a id="common.llm"></a>
2025-08-20T01:23:31.7724298Z 
2025-08-20T01:23:31.7724370Z # common.llm
2025-08-20T01:23:31.7724467Z 
2025-08-20T01:23:31.7724548Z <a id="common.settings"></a>
2025-08-20T01:23:31.7724683Z 
2025-08-20T01:23:31.7724757Z # common.settings
2025-08-20T01:23:31.7724863Z 
2025-08-20T01:23:31.7724932Z <a id="common.db"></a>
2025-08-20T01:23:31.7725050Z 
2025-08-20T01:23:31.7725114Z # common.db
2025-08-20T01:23:31.7725204Z 
2025-08-20T01:23:31.7725306Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T01:23:31.7725480Z 
2025-08-20T01:23:31.7725557Z #### build\_sqlalchemy\_url
2025-08-20T01:23:31.7725688Z 
2025-08-20T01:23:31.7725757Z ```python
2025-08-20T01:23:31.7725926Z def build_sqlalchemy_url() -> str
2025-08-20T01:23:31.7726270Z ```
2025-08-20T01:23:31.7726358Z 
2025-08-20T01:23:31.7726455Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T01:23:31.7726629Z 
2025-08-20T01:23:31.7726720Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T01:23:31.7726888Z 
2025-08-20T01:23:31.7726967Z #### build\_asyncpg\_dsn
2025-08-20T01:23:31.7727091Z 
2025-08-20T01:23:31.7727153Z ```python
2025-08-20T01:23:31.7727332Z def build_asyncpg_dsn() -> str
2025-08-20T01:23:31.7727525Z ```
2025-08-20T01:23:31.7727613Z 
2025-08-20T01:23:31.7727744Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T01:23:31.7727956Z 
2025-08-20T01:23:31.7728160Z <a id="common.db.refresh_mvs"></a>
2025-08-20T01:23:31.7728321Z 
2025-08-20T01:23:31.7728388Z #### refresh\_mvs
2025-08-20T01:23:31.7728494Z 
2025-08-20T01:23:31.7728567Z ```python
2025-08-20T01:23:31.7728769Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T01:23:31.7729020Z ```
2025-08-20T01:23:31.7729101Z 
2025-08-20T01:23:31.7729356Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T01:23:31.7729583Z 
2025-08-20T01:23:31.7729659Z <a id="common.config"></a>
2025-08-20T01:23:31.7729790Z 
2025-08-20T01:23:31.7729859Z # common.config
2025-08-20T01:23:31.7729966Z 
2025-08-20T01:23:31.7730038Z <a id="common.base"></a>
2025-08-20T01:23:31.7730157Z 
2025-08-20T01:23:31.7730226Z # common.base
2025-08-20T01:23:31.7730322Z 
2025-08-20T01:23:31.7730403Z <a id="common.base.Base"></a>
2025-08-20T01:23:31.7730546Z 
2025-08-20T01:23:31.7730610Z ## Base Objects
2025-08-20T01:23:31.7730708Z 
2025-08-20T01:23:31.7730769Z ```python
2025-08-20T01:23:31.7730941Z class Base(DeclarativeBase)
2025-08-20T01:23:31.7731130Z ```
2025-08-20T01:23:31.7731216Z 
2025-08-20T01:23:31.7731301Z Base class for SQLAlchemy models.
2025-08-20T01:23:31.7731451Z 
2025-08-20T01:23:31.7731528Z <a id="repricer"></a>
2025-08-20T01:23:31.7731644Z 
2025-08-20T01:23:31.7731707Z # repricer
2025-08-20T01:23:31.7731802Z 
2025-08-20T01:23:31.7731888Z <a id="repricer.app.schemas"></a>
2025-08-20T01:23:31.7732045Z 
2025-08-20T01:23:31.7732120Z # repricer.app.schemas
2025-08-20T01:23:31.7732246Z 
2025-08-20T01:23:31.7732330Z <a id="repricer.app.deps"></a>
2025-08-20T01:23:31.7732474Z 
2025-08-20T01:23:31.7732551Z # repricer.app.deps
2025-08-20T01:23:31.7732663Z 
2025-08-20T01:23:31.7732783Z Placeholder module for Keepa / SP-API clients.
2025-08-20T01:23:31.7732974Z 
2025-08-20T01:23:31.7733059Z <a id="repricer.app.logic"></a>
2025-08-20T01:23:31.7733204Z 
2025-08-20T01:23:31.7733277Z # repricer.app.logic
2025-08-20T01:23:31.7733399Z 
2025-08-20T01:23:31.7733495Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T01:23:31.7733669Z 
2025-08-20T01:23:31.7733739Z #### MIN\_MARGIN
2025-08-20T01:23:31.7733843Z 
2025-08-20T01:23:31.7733904Z 15 % ROI
2025-08-20T01:23:31.7733992Z 
2025-08-20T01:23:31.7734101Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T01:23:31.7734282Z 
2025-08-20T01:23:31.7734352Z #### compute\_price
2025-08-20T01:23:31.7734465Z 
2025-08-20T01:23:31.7734535Z ```python
2025-08-20T01:23:31.7734775Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T01:23:31.7735074Z ```
2025-08-20T01:23:31.7735156Z 
2025-08-20T01:23:31.7735269Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T01:23:31.7735545Z Replace with real competitive logic later.
2025-08-20T01:23:31.7735721Z 
2025-08-20T01:23:31.7735805Z <a id="repricer.app.main"></a>
2025-08-20T01:23:31.7735946Z 
2025-08-20T01:23:31.7736021Z # repricer.app.main
2025-08-20T01:23:31.7736133Z 
2025-08-20T01:23:31.7736210Z <a id="repricer.app"></a>
2025-08-20T01:23:31.7736337Z 
2025-08-20T01:23:31.7736410Z # repricer.app
2025-08-20T01:23:31.7736511Z 
2025-08-20T01:23:31.7736601Z <a id="repricer.tests.test_imports"></a>
2025-08-20T01:23:31.7736768Z 
2025-08-20T01:23:31.7736855Z # repricer.tests.test\_imports
2025-08-20T01:23:31.7736993Z 
2025-08-20T01:23:31.7737080Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T01:23:31.7737243Z 
2025-08-20T01:23:31.7737326Z # repricer.tests.test\_smoke
2025-08-20T01:23:31.7737587Z 
2025-08-20T01:23:31.7737670Z <a id="repricer.tests"></a>
2025-08-20T01:23:31.7737805Z 
2025-08-20T01:23:31.7737872Z # repricer.tests
2025-08-20T01:23:31.7737977Z 
2025-08-20T01:23:31.7738152Z <a id="db"></a>
2025-08-20T01:23:31.7738255Z 
2025-08-20T01:23:31.7738315Z # db
2025-08-20T01:23:31.7738411Z 
2025-08-20T01:23:31.7738486Z <a id="db.utils.views"></a>
2025-08-20T01:23:31.7738616Z 
2025-08-20T01:23:31.7738683Z # db.utils.views
2025-08-20T01:23:31.7738789Z 
2025-08-20T01:23:31.7738883Z <a id="db.utils.views.replace_view"></a>
2025-08-20T01:23:31.7739052Z 
2025-08-20T01:23:31.7739128Z #### replace\_view
2025-08-20T01:23:31.7739235Z 
2025-08-20T01:23:31.7739299Z ```python
2025-08-20T01:23:31.7739495Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T01:23:31.7739736Z ```
2025-08-20T01:23:31.7739823Z 
2025-08-20T01:23:31.7739914Z Drop and recreate a SQL view atomically.
2025-08-20T01:23:31.7740078Z 
2025-08-20T01:23:31.7740153Z <a id="db.utils"></a>
2025-08-20T01:23:31.7740391Z 
2025-08-20T01:23:31.7740454Z # db.utils
2025-08-20T01:23:31.7740544Z 
2025-08-20T01:23:31.7740628Z <a id="price_importer"></a>
2025-08-20T01:23:31.7740758Z 
2025-08-20T01:23:31.7740826Z # price\_importer
2025-08-20T01:23:31.7740937Z 
2025-08-20T01:23:31.7741040Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T01:23:31.7741225Z 
2025-08-20T01:23:31.7741316Z # price\_importer.services\_common.dsn
2025-08-20T01:23:31.7741485Z 
2025-08-20T01:23:31.7741610Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T01:23:31.7741819Z 
2025-08-20T01:23:31.7741889Z #### build\_dsn
2025-08-20T01:23:31.7741989Z 
2025-08-20T01:23:31.7742052Z ```python
2025-08-20T01:23:31.7742226Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:23:31.7742440Z ```
2025-08-20T01:23:31.7742529Z 
2025-08-20T01:23:31.7742595Z Return safe DSN.
2025-08-20T01:23:31.7742699Z 
2025-08-20T01:23:31.7743042Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T01:23:31.7743247Z 
2025-08-20T01:23:31.7743387Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T01:23:31.7743590Z 
2025-08-20T01:23:31.7743708Z # price\_importer.services\_common.models\_vendor
2025-08-20T01:23:31.7743899Z 
2025-08-20T01:23:31.7744007Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T01:23:31.7744200Z 
2025-08-20T01:23:31.7744295Z # price\_importer.services\_common.db\_url
2025-08-20T01:23:31.7744469Z 
2025-08-20T01:23:31.7744607Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T01:23:31.7744819Z 
2025-08-20T01:23:31.7744885Z #### build\_url
2025-08-20T01:23:31.7744985Z 
2025-08-20T01:23:31.7745054Z ```python
2025-08-20T01:23:31.7745228Z def build_url(async_: bool = True) -> str
2025-08-20T01:23:31.7745453Z ```
2025-08-20T01:23:31.7745533Z 
2025-08-20T01:23:31.7745631Z Return Postgres DSN from env or PG_* parts.
2025-08-20T01:23:31.7745810Z 
2025-08-20T01:23:31.7745919Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T01:23:31.7746105Z 
2025-08-20T01:23:31.7746210Z # price\_importer.services\_common.keepa
2025-08-20T01:23:31.7746385Z 
2025-08-20T01:23:31.7746494Z <a id="price_importer.services_common.llm"></a>
2025-08-20T01:23:31.7746684Z 
2025-08-20T01:23:31.7746775Z # price\_importer.services\_common.llm
2025-08-20T01:23:31.7746937Z 
2025-08-20T01:23:31.7747053Z <a id="price_importer.services_common.settings"></a>
2025-08-20T01:23:31.7747254Z 
2025-08-20T01:23:31.7747353Z # price\_importer.services\_common.settings
2025-08-20T01:23:31.7747525Z 
2025-08-20T01:23:31.7747633Z <a id="price_importer.services_common.db"></a>
2025-08-20T01:23:31.7747810Z 
2025-08-20T01:23:31.7747899Z # price\_importer.services\_common.db
2025-08-20T01:23:31.7748170Z 
2025-08-20T01:23:31.7748328Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T01:23:31.7748569Z 
2025-08-20T01:23:31.7748645Z #### build\_sqlalchemy\_url
2025-08-20T01:23:31.7748781Z 
2025-08-20T01:23:31.7748846Z ```python
2025-08-20T01:23:31.7749023Z def build_sqlalchemy_url() -> str
2025-08-20T01:23:31.7749353Z ```
2025-08-20T01:23:31.7749435Z 
2025-08-20T01:23:31.7749539Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T01:23:31.7749711Z 
2025-08-20T01:23:31.7749856Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T01:23:31.7750086Z 
2025-08-20T01:23:31.7750163Z #### build\_asyncpg\_dsn
2025-08-20T01:23:31.7750288Z 
2025-08-20T01:23:31.7750355Z ```python
2025-08-20T01:23:31.7750521Z def build_asyncpg_dsn() -> str
2025-08-20T01:23:31.7750725Z ```
2025-08-20T01:23:31.7750807Z 
2025-08-20T01:23:31.7750935Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T01:23:31.7751148Z 
2025-08-20T01:23:31.7751272Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T01:23:31.7751480Z 
2025-08-20T01:23:31.7751546Z #### refresh\_mvs
2025-08-20T01:23:31.7751656Z 
2025-08-20T01:23:31.7751717Z ```python
2025-08-20T01:23:31.7751912Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T01:23:31.7752153Z ```
2025-08-20T01:23:31.7752347Z 
2025-08-20T01:23:31.7752492Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T01:23:31.7752704Z 
2025-08-20T01:23:31.7752799Z <a id="price_importer.services_common"></a>
2025-08-20T01:23:31.7752975Z 
2025-08-20T01:23:31.7753063Z # price\_importer.services\_common
2025-08-20T01:23:31.7753218Z 
2025-08-20T01:23:31.7753328Z <a id="price_importer.services_common.base"></a>
2025-08-20T01:23:31.7753513Z 
2025-08-20T01:23:31.7753604Z # price\_importer.services\_common.base
2025-08-20T01:23:31.7753767Z 
2025-08-20T01:23:31.7753862Z <a id="price_importer.normaliser"></a>
2025-08-20T01:23:31.7754025Z 
2025-08-20T01:23:31.7754109Z # price\_importer.normaliser
2025-08-20T01:23:31.7754253Z 
2025-08-20T01:23:31.7754359Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T01:23:31.7754541Z 
2025-08-20T01:23:31.7754635Z # price\_importer.common.models\_vendor
2025-08-20T01:23:31.7754798Z 
2025-08-20T01:23:31.7754889Z <a id="price_importer.common.db_url"></a>
2025-08-20T01:23:31.7755059Z 
2025-08-20T01:23:31.7755158Z # price\_importer.common.db\_url
2025-08-20T01:23:31.7755306Z 
2025-08-20T01:23:31.7755413Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T01:23:31.7755605Z 
2025-08-20T01:23:31.7755667Z #### make\_dsn
2025-08-20T01:23:31.7755766Z 
2025-08-20T01:23:31.7755831Z ```python
2025-08-20T01:23:31.7755997Z def make_dsn(async_: bool = False) -> str
2025-08-20T01:23:31.7756219Z ```
2025-08-20T01:23:31.7756300Z 
2025-08-20T01:23:31.7756419Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T01:23:31.7756622Z 
2025-08-20T01:23:31.7756730Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T01:23:31.7756917Z 
2025-08-20T01:23:31.7756983Z #### build\_url
2025-08-20T01:23:31.7757087Z 
2025-08-20T01:23:31.7757148Z ```python
2025-08-20T01:23:31.7757327Z def build_url(async_: bool = False) -> str
2025-08-20T01:23:31.7757546Z ```
2025-08-20T01:23:31.7757625Z 
2025-08-20T01:23:31.7757752Z Return Postgres DSN built from environment variables.
2025-08-20T01:23:31.7757955Z 
2025-08-20T01:23:31.7758224Z <a id="price_importer.common"></a>
2025-08-20T01:23:31.7758434Z 
2025-08-20T01:23:31.7758516Z # price\_importer.common
2025-08-20T01:23:31.7758645Z 
2025-08-20T01:23:31.7758737Z <a id="price_importer.common.base"></a>
2025-08-20T01:23:31.7758907Z 
2025-08-20T01:23:31.7758991Z # price\_importer.common.base
2025-08-20T01:23:31.7759132Z 
2025-08-20T01:23:31.7759236Z <a id="price_importer.tests.conftest"></a>
2025-08-20T01:23:31.7759409Z 
2025-08-20T01:23:31.7759495Z # price\_importer.tests.conftest
2025-08-20T01:23:31.7759646Z 
2025-08-20T01:23:31.7759746Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T01:23:31.7759925Z 
2025-08-20T01:23:31.7760015Z # price\_importer.tests.test\_reader
2025-08-20T01:23:31.7760178Z 
2025-08-20T01:23:31.7760279Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T01:23:31.7760489Z 
2025-08-20T01:23:31.7760585Z # price\_importer.tests.test\_imports
2025-08-20T01:23:31.7760745Z 
2025-08-20T01:23:31.7760842Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T01:23:31.7761159Z 
2025-08-20T01:23:31.7761246Z # price\_importer.tests.test\_smoke
2025-08-20T01:23:31.7761401Z 
2025-08-20T01:23:31.7761506Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T01:23:31.7761694Z 
2025-08-20T01:23:31.7761787Z # price\_importer.tests.test\_normaliser
2025-08-20T01:23:31.7761956Z 
2025-08-20T01:23:31.7762047Z <a id="price_importer.tests"></a>
2025-08-20T01:23:31.7762197Z 
2025-08-20T01:23:31.7762276Z # price\_importer.tests
2025-08-20T01:23:31.7762403Z 
2025-08-20T01:23:31.7762488Z <a id="price_importer.reader"></a>
2025-08-20T01:23:31.7762637Z 
2025-08-20T01:23:31.7762716Z # price\_importer.reader
2025-08-20T01:23:31.7762848Z 
2025-08-20T01:23:31.7762939Z <a id="price_importer.repository"></a>
2025-08-20T01:23:31.7763101Z 
2025-08-20T01:23:31.7763191Z # price\_importer.repository
2025-08-20T01:23:31.7763327Z 
2025-08-20T01:23:31.7763410Z <a id="price_importer.import"></a>
2025-08-20T01:23:31.7763564Z 
2025-08-20T01:23:31.7763641Z # price\_importer.import
2025-08-20T01:23:31.7763884Z 
2025-08-20T01:23:31.7763955Z <a id="fees_h10"></a>
2025-08-20T01:23:31.7764077Z 
2025-08-20T01:23:31.7764141Z # fees\_h10
2025-08-20T01:23:31.7764235Z 
2025-08-20T01:23:31.7764316Z <a id="fees_h10.worker"></a>
2025-08-20T01:23:31.7764445Z 
2025-08-20T01:23:31.7764515Z # fees\_h10.worker
2025-08-20T01:23:31.7764627Z 
2025-08-20T01:23:31.7764725Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T01:23:31.7764901Z 
2025-08-20T01:23:31.7764975Z #### list\_active\_asins
2025-08-20T01:23:31.7765098Z 
2025-08-20T01:23:31.7765161Z ```python
2025-08-20T01:23:31.7765332Z def list_active_asins() -> list[str]
2025-08-20T01:23:31.7765541Z ```
2025-08-20T01:23:31.7765621Z 
2025-08-20T01:23:31.7765741Z Return known ASINs or an empty list if unavailable.
2025-08-20T01:23:31.7765934Z 
2025-08-20T01:23:31.7766018Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T01:23:31.7766179Z 
2025-08-20T01:23:31.7766256Z # fees\_h10.tests.test\_smoke
2025-08-20T01:23:31.7766390Z 
2025-08-20T01:23:31.7766473Z <a id="fees_h10.tests"></a>
2025-08-20T01:23:31.7766606Z 
2025-08-20T01:23:31.7766671Z # fees\_h10.tests
2025-08-20T01:23:31.7766773Z 
2025-08-20T01:23:31.7766853Z <a id="fees_h10.client"></a>
2025-08-20T01:23:31.7766982Z 
2025-08-20T01:23:31.7767048Z # fees\_h10.client
2025-08-20T01:23:31.7767192Z 
2025-08-20T01:23:31.7767274Z <a id="fees_h10.repository"></a>
2025-08-20T01:23:31.7767417Z 
2025-08-20T01:23:31.7767489Z # fees\_h10.repository
2025-08-20T01:23:31.7767612Z 
2025-08-20T01:23:31.7767718Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T01:23:31.7767898Z 
2025-08-20T01:23:31.7767976Z #### upsert\_fees\_raw
2025-08-20T01:23:31.7768198Z 
2025-08-20T01:23:31.7768263Z ```python
2025-08-20T01:23:31.7768445Z def upsert_fees_raw(engine: Engine,
2025-08-20T01:23:31.7768692Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T01:23:31.7768933Z                     *,
2025-08-20T01:23:31.7769155Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T01:23:31.7769431Z ```
2025-08-20T01:23:31.7769510Z 
2025-08-20T01:23:31.7769594Z Idempotent upsert for fees.
2025-08-20T01:23:31.7769726Z 
2025-08-20T01:23:31.7769877Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T01:23:31.7770220Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T01:23:31.7770524Z Only updates when one of the mutable fields changes.
2025-08-20T01:23:31.7770722Z 
2025-08-20T01:23:31.7770795Z <a id="emailer"></a>
2025-08-20T01:23:31.7770906Z 
2025-08-20T01:23:31.7770974Z # emailer
2025-08-20T01:23:31.7771067Z 
2025-08-20T01:23:31.7771170Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T01:23:31.7771347Z 
2025-08-20T01:23:31.7771442Z # emailer.tests.test\_import\_emailer
2025-08-20T01:23:31.7771605Z 
2025-08-20T01:23:31.7771689Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T01:23:31.7771852Z 
2025-08-20T01:23:31.7771930Z # emailer.tests.test\_smoke
2025-08-20T01:23:31.7772063Z 
2025-08-20T01:23:31.7772139Z <a id="emailer.tests"></a>
2025-08-20T01:23:31.7772403Z 
2025-08-20T01:23:31.7772469Z # emailer.tests
2025-08-20T01:23:31.7772575Z 
2025-08-20T01:23:31.7772667Z <a id="emailer.generate_body"></a>
2025-08-20T01:23:31.7772817Z 
2025-08-20T01:23:31.7772893Z # emailer.generate\_body
2025-08-20T01:23:31.7773023Z 
2025-08-20T01:23:31.7773097Z <a id="llm_server"></a>
2025-08-20T01:23:31.7773215Z 
2025-08-20T01:23:31.7773278Z # llm\_server
2025-08-20T01:23:31.7773378Z 
2025-08-20T01:23:31.7773457Z <a id="llm_server.app"></a>
2025-08-20T01:23:31.7773588Z 
2025-08-20T01:23:31.7773659Z # llm\_server.app
2025-08-20T01:23:31.7773768Z 
