2025-08-20T00:37:18.1702359Z ##[group]Run pydoc-markdown
2025-08-20T00:37:18.1702689Z [36;1mpydoc-markdown[0m
2025-08-20T00:37:18.1745831Z shell: /usr/bin/bash -e {0}
2025-08-20T00:37:18.1746090Z env:
2025-08-20T00:37:18.1746334Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:37:18.1746742Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T00:37:18.1747144Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:37:18.1747494Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:37:18.1747844Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:37:18.1748189Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T00:37:18.1748470Z ##[endgroup]
2025-08-20T00:37:18.6068394Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T00:37:18.6069282Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T00:37:18.6069737Z In "pydoc-markdown.yml"
2025-08-20T00:37:18.6070127Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T00:37:18.6070825Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T00:37:18.6071548Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T00:37:18.6072046Z 
2025-08-20T00:37:18.9714060Z <a id="__init__"></a>
2025-08-20T00:37:18.9714507Z 
2025-08-20T00:37:18.9714661Z # \_\_init\_\_
2025-08-20T00:37:18.9714915Z 
2025-08-20T00:37:18.9715112Z <a id="api"></a>
2025-08-20T00:37:18.9715382Z 
2025-08-20T00:37:18.9715520Z # api
2025-08-20T00:37:18.9715713Z 
2025-08-20T00:37:18.9715885Z <a id="api.errors"></a>
2025-08-20T00:37:18.9716127Z 
2025-08-20T00:37:18.9716254Z # api.errors
2025-08-20T00:37:18.9716447Z 
2025-08-20T00:37:18.9716608Z <a id="api.sentry_config"></a>
2025-08-20T00:37:18.9716901Z 
2025-08-20T00:37:18.9717220Z # api.sentry\_config
2025-08-20T00:37:18.9717432Z 
2025-08-20T00:37:18.9717605Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T00:37:18.9717931Z 
2025-08-20T00:37:18.9718066Z # api.tests.test\_stats\_contracts
2025-08-20T00:37:18.9718348Z 
2025-08-20T00:37:18.9718491Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T00:37:18.9718751Z 
2025-08-20T00:37:18.9718882Z # api.tests.test\_sentry\_scrub
2025-08-20T00:37:18.9719332Z 
2025-08-20T00:37:18.9719507Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T00:37:18.9719783Z 
2025-08-20T00:37:18.9719907Z # api.tests.test\_roi\_basic\_auth
2025-08-20T00:37:18.9720132Z 
2025-08-20T00:37:18.9720264Z <a id="api.tests.test_errors_json"></a>
2025-08-20T00:37:18.9720528Z 
2025-08-20T00:37:18.9720665Z # api.tests.test\_errors\_json
2025-08-20T00:37:18.9720899Z 
2025-08-20T00:37:18.9721053Z <a id="api.tests.test_llm"></a>
2025-08-20T00:37:18.9721314Z 
2025-08-20T00:37:18.9721453Z # api.tests.test\_llm
2025-08-20T00:37:18.9721678Z 
2025-08-20T00:37:18.9721821Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T00:37:18.9722138Z 
2025-08-20T00:37:18.9722283Z # api.tests.test\_roi\_filters
2025-08-20T00:37:18.9722560Z 
2025-08-20T00:37:18.9722717Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T00:37:18.9723546Z 
2025-08-20T00:37:18.9723698Z # api.tests.test\_sentry\_event
2025-08-20T00:37:18.9723966Z 
2025-08-20T00:37:18.9724201Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T00:37:18.9724553Z 
2025-08-20T00:37:18.9724685Z ## DummyTransport Objects
2025-08-20T00:37:18.9724932Z 
2025-08-20T00:37:18.9725052Z ```python
2025-08-20T00:37:18.9725359Z class DummyTransport()
2025-08-20T00:37:18.9725692Z ```
2025-08-20T00:37:18.9725849Z 
2025-08-20T00:37:18.9726155Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T00:37:18.9726644Z 
2025-08-20T00:37:18.9726783Z #### capture\_envelope
2025-08-20T00:37:18.9727006Z 
2025-08-20T00:37:18.9727140Z ```python
2025-08-20T00:37:18.9727453Z def capture_envelope(envelope)
2025-08-20T00:37:18.9727824Z ```
2025-08-20T00:37:18.9727969Z 
2025-08-20T00:37:18.9728173Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T00:37:18.9728522Z 
2025-08-20T00:37:18.9728657Z <a id="api.tests.test_cors"></a>
2025-08-20T00:37:18.9729398Z 
2025-08-20T00:37:18.9729530Z # api.tests.test\_cors
2025-08-20T00:37:18.9729728Z 
2025-08-20T00:37:18.9729866Z <a id="api.tests.test_imports"></a>
2025-08-20T00:37:18.9730118Z 
2025-08-20T00:37:18.9730250Z # api.tests.test\_imports
2025-08-20T00:37:18.9730457Z 
2025-08-20T00:37:18.9730597Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T00:37:18.9730865Z 
2025-08-20T00:37:18.9730995Z # api.tests.test\_rate\_limit
2025-08-20T00:37:18.9731220Z 
2025-08-20T00:37:18.9731381Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T00:37:18.9731662Z 
2025-08-20T00:37:18.9731768Z #### app
2025-08-20T00:37:18.9731911Z 
2025-08-20T00:37:18.9732022Z noqa: E402
2025-08-20T00:37:18.9732163Z 
2025-08-20T00:37:18.9732301Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T00:37:18.9732527Z 
2025-08-20T00:37:18.9732610Z # api.tests.test\_stats\_sql
2025-08-20T00:37:18.9732747Z 
2025-08-20T00:37:18.9732839Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T00:37:18.9733022Z 
2025-08-20T00:37:18.9733108Z # api.tests.test\_entrypoint
2025-08-20T00:37:18.9733244Z 
2025-08-20T00:37:18.9733364Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T00:37:18.9733570Z 
2025-08-20T00:37:18.9733665Z # api.tests.test\_stats\_future\_contracts
2025-08-20T00:37:18.9733845Z 
2025-08-20T00:37:18.9733931Z <a id="api.tests.test_health"></a>
2025-08-20T00:37:18.9734084Z 
2025-08-20T00:37:18.9734160Z # api.tests.test\_health
2025-08-20T00:37:18.9734289Z 
2025-08-20T00:37:18.9734371Z <a id="api.tests.test_score"></a>
2025-08-20T00:37:18.9734517Z 
2025-08-20T00:37:18.9734597Z # api.tests.test\_score
2025-08-20T00:37:18.9734719Z 
2025-08-20T00:37:18.9734797Z <a id="api.logging_config"></a>
2025-08-20T00:37:18.9734941Z 
2025-08-20T00:37:18.9735011Z # api.logging\_config
2025-08-20T00:37:18.9735126Z 
2025-08-20T00:37:18.9735207Z <a id="api.migrations.env"></a>
2025-08-20T00:37:18.9735352Z 
2025-08-20T00:37:18.9735425Z # api.migrations.env
2025-08-20T00:37:18.9735538Z 
2025-08-20T00:37:18.9735672Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T00:37:18.9735872Z 
2025-08-20T00:37:18.9735979Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T00:37:18.9736164Z 
2025-08-20T00:37:18.9736270Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T00:37:18.9736455Z 
2025-08-20T00:37:18.9736548Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T00:37:18.9736724Z 
2025-08-20T00:37:18.9736876Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T00:37:18.9737114Z 
2025-08-20T00:37:18.9737254Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T00:37:18.9737475Z 
2025-08-20T00:37:18.9737595Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T00:37:18.9737802Z 
2025-08-20T00:37:18.9737907Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T00:37:18.9738091Z 
2025-08-20T00:37:18.9738207Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T00:37:18.9738489Z 
2025-08-20T00:37:18.9738597Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T00:37:18.9738965Z 
2025-08-20T00:37:18.9739290Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T00:37:18.9739602Z 
2025-08-20T00:37:18.9739720Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T00:37:18.9739910Z 
2025-08-20T00:37:18.9740025Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T00:37:18.9740227Z 
2025-08-20T00:37:18.9740333Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T00:37:18.9740520Z 
2025-08-20T00:37:18.9740640Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T00:37:18.9740847Z 
2025-08-20T00:37:18.9740952Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T00:37:18.9741133Z 
2025-08-20T00:37:18.9741284Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T00:37:18.9741502Z 
2025-08-20T00:37:18.9741618Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T00:37:18.9741821Z 
2025-08-20T00:37:18.9741941Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T00:37:18.9742303Z 
2025-08-20T00:37:18.9742416Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T00:37:18.9742605Z 
2025-08-20T00:37:18.9742736Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T00:37:18.9742950Z 
2025-08-20T00:37:18.9743069Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T00:37:18.9743264Z 
2025-08-20T00:37:18.9743370Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T00:37:18.9743562Z 
2025-08-20T00:37:18.9743653Z # api.migrations.versions.0001\_baseline
2025-08-20T00:37:18.9744054Z 
2025-08-20T00:37:18.9744219Z <a id="api.migrations.versions"></a>
2025-08-20T00:37:18.9744500Z 
2025-08-20T00:37:18.9744647Z # api.migrations.versions
2025-08-20T00:37:18.9744877Z 
2025-08-20T00:37:18.9745022Z <a id="api.migrations"></a>
2025-08-20T00:37:18.9745252Z 
2025-08-20T00:37:18.9745374Z # api.migrations
2025-08-20T00:37:18.9745567Z 
2025-08-20T00:37:18.9745686Z <a id="api.db"></a>
2025-08-20T00:37:18.9745890Z 
2025-08-20T00:37:18.9746007Z # api.db
2025-08-20T00:37:18.9746173Z 
2025-08-20T00:37:18.9746259Z <a id="api.routes.score"></a>
2025-08-20T00:37:18.9746405Z 
2025-08-20T00:37:18.9746479Z # api.routes.score
2025-08-20T00:37:18.9746587Z 
2025-08-20T00:37:18.9746664Z <a id="api.routes.stats"></a>
2025-08-20T00:37:18.9746808Z 
2025-08-20T00:37:18.9746875Z # api.routes.stats
2025-08-20T00:37:18.9746979Z 
2025-08-20T00:37:18.9747055Z <a id="api.routes.roi"></a>
2025-08-20T00:37:18.9747191Z 
2025-08-20T00:37:18.9747258Z # api.routes.roi
2025-08-20T00:37:18.9747359Z 
2025-08-20T00:37:18.9747446Z <a id="api.routes.health"></a>
2025-08-20T00:37:18.9747583Z 
2025-08-20T00:37:18.9747651Z # api.routes.health
2025-08-20T00:37:18.9747764Z 
2025-08-20T00:37:18.9747855Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T00:37:18.9748024Z 
2025-08-20T00:37:18.9748087Z #### MAX\_SKEW
2025-08-20T00:37:18.9748190Z 
2025-08-20T00:37:18.9748252Z seconds
2025-08-20T00:37:18.9748335Z 
2025-08-20T00:37:18.9748430Z <a id="api.routes.health.health"></a>
2025-08-20T00:37:18.9748602Z 
2025-08-20T00:37:18.9748665Z #### health
2025-08-20T00:37:18.9748754Z 
2025-08-20T00:37:18.9748823Z ```python
2025-08-20T00:37:18.9749023Z @router.get("/health", include_in_schema=False)
2025-08-20T00:37:18.9749683Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T00:37:18.9750026Z ```
2025-08-20T00:37:18.9750116Z 
2025-08-20T00:37:18.9750233Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T00:37:18.9750435Z 
2025-08-20T00:37:18.9750530Z <a id="api.routes.repository"></a>
2025-08-20T00:37:18.9750688Z 
2025-08-20T00:37:18.9750765Z # api.routes.repository
2025-08-20T00:37:18.9750893Z 
2025-08-20T00:37:18.9750965Z <a id="api.routes"></a>
2025-08-20T00:37:18.9751081Z 
2025-08-20T00:37:18.9751146Z # api.routes
2025-08-20T00:37:18.9751248Z 
2025-08-20T00:37:18.9751326Z <a id="api.models.fee"></a>
2025-08-20T00:37:18.9751457Z 
2025-08-20T00:37:18.9751531Z # api.models.fee
2025-08-20T00:37:18.9751639Z 
2025-08-20T00:37:18.9751881Z <a id="api.models"></a>
2025-08-20T00:37:18.9751998Z 
2025-08-20T00:37:18.9752068Z # api.models
2025-08-20T00:37:18.9752159Z 
2025-08-20T00:37:18.9752238Z <a id="api.roi_repository"></a>
2025-08-20T00:37:18.9752384Z 
2025-08-20T00:37:18.9752455Z # api.roi\_repository
2025-08-20T00:37:18.9752568Z 
2025-08-20T00:37:18.9752636Z <a id="api.main"></a>
2025-08-20T00:37:18.9752754Z 
2025-08-20T00:37:18.9752817Z # api.main
2025-08-20T00:37:18.9752908Z 
2025-08-20T00:37:18.9752989Z <a id="api.main.ready"></a>
2025-08-20T00:37:18.9753118Z 
2025-08-20T00:37:18.9753181Z #### ready
2025-08-20T00:37:18.9753274Z 
2025-08-20T00:37:18.9753337Z ```python
2025-08-20T00:37:18.9753603Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T00:37:18.9754046Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T00:37:18.9754408Z                                                                       str]
2025-08-20T00:37:18.9754638Z ```
2025-08-20T00:37:18.9754846Z 
2025-08-20T00:37:18.9754948Z Return 200 only when migrations are at head.
2025-08-20T00:37:18.9755121Z 
2025-08-20T00:37:18.9755195Z <a id="api.config"></a>
2025-08-20T00:37:18.9755323Z 
2025-08-20T00:37:18.9755389Z # api.config
2025-08-20T00:37:18.9755483Z 
2025-08-20T00:37:18.9755559Z <a id="api.security"></a>
2025-08-20T00:37:18.9755694Z 
2025-08-20T00:37:18.9755760Z # api.security
2025-08-20T00:37:18.9755860Z 
2025-08-20T00:37:18.9755930Z <a id="etl"></a>
2025-08-20T00:37:18.9756032Z 
2025-08-20T00:37:18.9756094Z # etl
2025-08-20T00:37:18.9756187Z 
2025-08-20T00:37:18.9756269Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T00:37:18.9756420Z 
2025-08-20T00:37:18.9756493Z # etl.fba\_fee\_ingestor
2025-08-20T00:37:18.9756627Z 
2025-08-20T00:37:18.9756708Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T00:37:18.9756854Z 
2025-08-20T00:37:18.9756933Z # etl.sp\_fees\_ingestor
2025-08-20T00:37:18.9757056Z 
2025-08-20T00:37:18.9757137Z <a id="etl.keepa_ingestor"></a>
2025-08-20T00:37:18.9757292Z 
2025-08-20T00:37:18.9757363Z # etl.keepa\_ingestor
2025-08-20T00:37:18.9757487Z 
2025-08-20T00:37:18.9757554Z <a id="etl.db"></a>
2025-08-20T00:37:18.9757668Z 
2025-08-20T00:37:18.9757733Z # etl.db
2025-08-20T00:37:18.9757820Z 
2025-08-20T00:37:18.9757910Z <a id="etl.dialects.schemas"></a>
2025-08-20T00:37:18.9758058Z 
2025-08-20T00:37:18.9758132Z # etl.dialects.schemas
2025-08-20T00:37:18.9758250Z 
2025-08-20T00:37:18.9758362Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T00:37:18.9758548Z 
2025-08-20T00:37:18.9758637Z # etl.dialects.amazon\_reimbursements
2025-08-20T00:37:18.9758803Z 
2025-08-20T00:37:18.9758897Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T00:37:18.9759069Z 
2025-08-20T00:37:18.9759354Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T00:37:18.9759515Z 
2025-08-20T00:37:18.9759605Z <a id="etl.dialects.test_generic"></a>
2025-08-20T00:37:18.9759770Z 
2025-08-20T00:37:18.9759848Z # etl.dialects.test\_generic
2025-08-20T00:37:18.9759983Z 
2025-08-20T00:37:18.9760082Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T00:37:18.9760284Z 
2025-08-20T00:37:18.9760364Z # etl.dialects.amazon\_returns
2025-08-20T00:37:18.9760503Z 
2025-08-20T00:37:18.9760600Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T00:37:18.9760769Z 
2025-08-20T00:37:18.9760853Z # etl.dialects.amazon\_fee\_preview
2025-08-20T00:37:18.9761004Z 
2025-08-20T00:37:18.9761112Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T00:37:18.9761299Z 
2025-08-20T00:37:18.9761386Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T00:37:18.9761554Z 
2025-08-20T00:37:18.9761647Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T00:37:18.9761816Z 
2025-08-20T00:37:18.9761905Z # etl.dialects.amazon\_settlements
2025-08-20T00:37:18.9762058Z 
2025-08-20T00:37:18.9762133Z <a id="etl.dialects"></a>
2025-08-20T00:37:18.9762267Z 
2025-08-20T00:37:18.9762335Z # etl.dialects
2025-08-20T00:37:18.9762433Z 
2025-08-20T00:37:18.9762499Z <a id="ingest"></a>
2025-08-20T00:37:18.9762611Z 
2025-08-20T00:37:18.9762815Z # ingest
2025-08-20T00:37:18.9762902Z 
2025-08-20T00:37:18.9762988Z <a id="ingest.maintenance"></a>
2025-08-20T00:37:18.9763129Z 
2025-08-20T00:37:18.9763200Z # ingest.maintenance
2025-08-20T00:37:18.9763313Z 
2025-08-20T00:37:18.9763397Z <a id="ingest.copy_loader"></a>
2025-08-20T00:37:18.9763532Z 
2025-08-20T00:37:18.9763604Z # ingest.copy\_loader
2025-08-20T00:37:18.9763724Z 
2025-08-20T00:37:18.9763825Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T00:37:18.9764005Z 
2025-08-20T00:37:18.9764080Z #### copy\_df\_via\_temp
2025-08-20T00:37:18.9764211Z 
2025-08-20T00:37:18.9764275Z ```python
2025-08-20T00:37:18.9764449Z def copy_df_via_temp(engine: Engine,
2025-08-20T00:37:18.9764682Z                      df: pd.DataFrame,
2025-08-20T00:37:18.9764920Z                      target_table: str,
2025-08-20T00:37:18.9765135Z                      *,
2025-08-20T00:37:18.9765344Z                      target_schema: Optional[str] = None,
2025-08-20T00:37:18.9765610Z                      columns: Sequence[str],
2025-08-20T00:37:18.9766011Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T00:37:18.9766299Z                      analyze_after: bool = False,
2025-08-20T00:37:18.9766562Z                      connection: Any | None = None) -> int
2025-08-20T00:37:18.9766807Z ```
2025-08-20T00:37:18.9766892Z 
2025-08-20T00:37:18.9767045Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T00:37:18.9767285Z 
2025-08-20T00:37:18.9767373Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T00:37:18.9767537Z 
2025-08-20T00:37:18.9767618Z # ingest.tests.test\_smoke
2025-08-20T00:37:18.9767756Z 
2025-08-20T00:37:18.9767832Z <a id="ingest.tests"></a>
2025-08-20T00:37:18.9767960Z 
2025-08-20T00:37:18.9768032Z # ingest.tests
2025-08-20T00:37:18.9768131Z 
2025-08-20T00:37:18.9768217Z <a id="ingest.upload_router"></a>
2025-08-20T00:37:18.9768371Z 
2025-08-20T00:37:18.9768448Z # ingest.upload\_router
2025-08-20T00:37:18.9768570Z 
2025-08-20T00:37:18.9768656Z <a id="ingest.email_watcher"></a>
2025-08-20T00:37:18.9768814Z 
2025-08-20T00:37:18.9768889Z # ingest.email\_watcher
2025-08-20T00:37:18.9769005Z 
2025-08-20T00:37:18.9769277Z <a id="ingest.email_watcher.main"></a>
2025-08-20T00:37:18.9769482Z 
2025-08-20T00:37:18.9769549Z #### main
2025-08-20T00:37:18.9769640Z 
2025-08-20T00:37:18.9769714Z ```python
2025-08-20T00:37:18.9769878Z def main() -> dict[str, str]
2025-08-20T00:37:18.9770078Z ```
2025-08-20T00:37:18.9770159Z 
2025-08-20T00:37:18.9770301Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T00:37:18.9770531Z 
2025-08-20T00:37:18.9770658Z Returns {"status": "success"} when processing completes.
2025-08-20T00:37:18.9770865Z 
2025-08-20T00:37:18.9770946Z <a id="ingest.tasks"></a>
2025-08-20T00:37:18.9771071Z 
2025-08-20T00:37:18.9771136Z # ingest.tasks
2025-08-20T00:37:18.9771256Z 
2025-08-20T00:37:18.9771351Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T00:37:18.9771530Z 
2025-08-20T00:37:18.9771601Z #### task\_import\_file
2025-08-20T00:37:18.9771726Z 
2025-08-20T00:37:18.9771794Z ```python
2025-08-20T00:37:18.9772001Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T00:37:18.9772283Z def task_import_file(self: Any,
2025-08-20T00:37:18.9772490Z                      uri: str,
2025-08-20T00:37:18.9772713Z                      report_type: str | None = None,
2025-08-20T00:37:18.9772977Z                      force: bool = False) -> dict[str, Any]
2025-08-20T00:37:18.9773216Z ```
2025-08-20T00:37:18.9773296Z 
2025-08-20T00:37:18.9773424Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T00:37:18.9773638Z 
2025-08-20T00:37:18.9773718Z <a id="ingest.celery_app"></a>
2025-08-20T00:37:18.9773857Z 
2025-08-20T00:37:18.9773934Z # ingest.celery\_app
2025-08-20T00:37:18.9774047Z 
2025-08-20T00:37:18.9774129Z <a id="ingest.ingest_router"></a>
2025-08-20T00:37:18.9774280Z 
2025-08-20T00:37:18.9774351Z # ingest.ingest\_router
2025-08-20T00:37:18.9774469Z 
2025-08-20T00:37:18.9774544Z <a id="logistics_etl"></a>
2025-08-20T00:37:18.9774809Z 
2025-08-20T00:37:18.9774876Z # logistics\_etl
2025-08-20T00:37:18.9774980Z 
2025-08-20T00:37:18.9775063Z Daily logistics ETL job.
2025-08-20T00:37:18.9775185Z 
2025-08-20T00:37:18.9775266Z <a id="logistics_etl.__main__"></a>
2025-08-20T00:37:18.9775422Z 
2025-08-20T00:37:18.9775499Z # logistics\_etl.\_\_main\_\_
2025-08-20T00:37:18.9775633Z 
2025-08-20T00:37:18.9775710Z <a id="logistics_etl.dsn"></a>
2025-08-20T00:37:18.9775851Z 
2025-08-20T00:37:18.9775920Z # logistics\_etl.dsn
2025-08-20T00:37:18.9776030Z 
2025-08-20T00:37:18.9776151Z Local DSN builder to avoid cross-service dependency.
2025-08-20T00:37:18.9776352Z 
2025-08-20T00:37:18.9776442Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T00:37:18.9776615Z 
2025-08-20T00:37:18.9776679Z #### build\_dsn
2025-08-20T00:37:18.9776778Z 
2025-08-20T00:37:18.9776841Z ```python
2025-08-20T00:37:18.9777018Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:37:18.9777237Z ```
2025-08-20T00:37:18.9777326Z 
2025-08-20T00:37:18.9777583Z Return a Postgres DSN assembled from environment variables.
2025-08-20T00:37:18.9777803Z 
2025-08-20T00:37:18.9777956Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T00:37:18.9778346Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T00:37:18.9778695Z error when any required variable is missing.
2025-08-20T00:37:18.9778871Z 
2025-08-20T00:37:18.9778962Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T00:37:18.9779328Z 
2025-08-20T00:37:18.9779475Z # logistics\_etl.tests.conftest
2025-08-20T00:37:18.9779625Z 
2025-08-20T00:37:18.9779738Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T00:37:18.9779923Z 
2025-08-20T00:37:18.9780011Z # logistics\_etl.tests.test\_repository
2025-08-20T00:37:18.9780182Z 
2025-08-20T00:37:18.9780275Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T00:37:18.9780443Z 
2025-08-20T00:37:18.9780525Z # logistics\_etl.tests.test\_cron
2025-08-20T00:37:18.9780687Z 
2025-08-20T00:37:18.9780782Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T00:37:18.9780969Z 
2025-08-20T00:37:18.9781058Z # logistics\_etl.tests.test\_imports
2025-08-20T00:37:18.9781215Z 
2025-08-20T00:37:18.9781307Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T00:37:18.9781484Z 
2025-08-20T00:37:18.9781566Z # logistics\_etl.tests.test\_smoke
2025-08-20T00:37:18.9781718Z 
2025-08-20T00:37:18.9781811Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T00:37:18.9781988Z 
2025-08-20T00:37:18.9782070Z # logistics\_etl.tests.test\_client
2025-08-20T00:37:18.9782224Z 
2025-08-20T00:37:18.9782311Z <a id="logistics_etl.tests"></a>
2025-08-20T00:37:18.9782455Z 
2025-08-20T00:37:18.9782526Z # logistics\_etl.tests
2025-08-20T00:37:18.9782650Z 
2025-08-20T00:37:18.9782727Z <a id="logistics_etl.flow"></a>
2025-08-20T00:37:18.9782866Z 
2025-08-20T00:37:18.9782935Z # logistics\_etl.flow
2025-08-20T00:37:18.9783054Z 
2025-08-20T00:37:18.9783134Z <a id="logistics_etl.client"></a>
2025-08-20T00:37:18.9783278Z 
2025-08-20T00:37:18.9858503Z # logistics\_etl.client
2025-08-20T00:37:18.9858769Z 
2025-08-20T00:37:18.9858924Z <a id="logistics_etl.cron"></a>
2025-08-20T00:37:18.9859309Z 
2025-08-20T00:37:18.9859437Z # logistics\_etl.cron
2025-08-20T00:37:18.9859638Z 
2025-08-20T00:37:18.9859788Z <a id="logistics_etl.db"></a>
2025-08-20T00:37:18.9860020Z 
2025-08-20T00:37:18.9860131Z # logistics\_etl.db
2025-08-20T00:37:18.9860321Z 
2025-08-20T00:37:18.9860472Z <a id="logistics_etl.repository"></a>
2025-08-20T00:37:18.9860756Z 
2025-08-20T00:37:18.9860915Z # logistics\_etl.repository
2025-08-20T00:37:18.9861168Z 
2025-08-20T00:37:18.9861299Z <a id="alert_bot"></a>
2025-08-20T00:37:18.9861515Z 
2025-08-20T00:37:18.9861642Z # alert\_bot
2025-08-20T00:37:18.9861820Z 
2025-08-20T00:37:18.9861967Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T00:37:18.9862250Z 
2025-08-20T00:37:18.9862379Z # alert\_bot.tests.test\_smoke
2025-08-20T00:37:18.9862602Z 
2025-08-20T00:37:18.9862740Z <a id="alert_bot.tests"></a>
2025-08-20T00:37:18.9862940Z 
2025-08-20T00:37:18.9863487Z # alert\_bot.tests
2025-08-20T00:37:18.9863681Z 
2025-08-20T00:37:18.9863830Z <a id="alert_bot.alert_bot"></a>
2025-08-20T00:37:18.9864090Z 
2025-08-20T00:37:18.9864230Z # alert\_bot.alert\_bot
2025-08-20T00:37:18.9864458Z 
2025-08-20T00:37:18.9864592Z <a id="alert_bot.rules"></a>
2025-08-20T00:37:18.9864834Z 
2025-08-20T00:37:18.9864965Z # alert\_bot.rules
2025-08-20T00:37:18.9865105Z 
2025-08-20T00:37:18.9865176Z <a id="common"></a>
2025-08-20T00:37:18.9865287Z 
2025-08-20T00:37:18.9865357Z # common
2025-08-20T00:37:18.9865446Z 
2025-08-20T00:37:18.9865522Z <a id="common.dsn"></a>
2025-08-20T00:37:18.9865647Z 
2025-08-20T00:37:18.9865713Z # common.dsn
2025-08-20T00:37:18.9865809Z 
2025-08-20T00:37:18.9865893Z <a id="common.dsn.build_dsn"></a>
2025-08-20T00:37:18.9866057Z 
2025-08-20T00:37:18.9866125Z #### build\_dsn
2025-08-20T00:37:18.9866228Z 
2025-08-20T00:37:18.9866302Z ```python
2025-08-20T00:37:18.9866480Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:37:18.9866711Z ```
2025-08-20T00:37:18.9867286Z 
2025-08-20T00:37:18.9867426Z Return a Postgres DSN, validating required variables.
2025-08-20T00:37:18.9867652Z 
2025-08-20T00:37:18.9867920Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T00:37:18.9868362Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T00:37:18.9868787Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T00:37:18.9869280Z missing.
2025-08-20T00:37:18.9869423Z 
2025-08-20T00:37:18.9869510Z <a id="common.models_vendor"></a>
2025-08-20T00:37:18.9869675Z 
2025-08-20T00:37:18.9869749Z # common.models\_vendor
2025-08-20T00:37:18.9869870Z 
2025-08-20T00:37:18.9869960Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T00:37:18.9870131Z 
2025-08-20T00:37:18.9870198Z ## Vendor Objects
2025-08-20T00:37:18.9870302Z 
2025-08-20T00:37:18.9870372Z ```python
2025-08-20T00:37:18.9870524Z class Vendor(Base)
2025-08-20T00:37:18.9870694Z ```
2025-08-20T00:37:18.9870784Z 
2025-08-20T00:37:18.9870866Z Vendor of inventory items.
2025-08-20T00:37:18.9871004Z 
2025-08-20T00:37:18.9871104Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T00:37:18.9871286Z 
2025-08-20T00:37:18.9871360Z ## VendorPrice Objects
2025-08-20T00:37:18.9871481Z 
2025-08-20T00:37:18.9871542Z ```python
2025-08-20T00:37:18.9871704Z class VendorPrice(Base)
2025-08-20T00:37:18.9871876Z ```
2025-08-20T00:37:18.9871959Z 
2025-08-20T00:37:18.9872071Z Association table linking vendors to pricing.
2025-08-20T00:37:18.9872254Z 
2025-08-20T00:37:18.9872328Z <a id="common.db_url"></a>
2025-08-20T00:37:18.9872460Z 
2025-08-20T00:37:18.9872526Z # common.db\_url
2025-08-20T00:37:18.9872628Z 
2025-08-20T00:37:18.9872710Z <a id="common.db_url.build_url"></a>
2025-08-20T00:37:18.9872871Z 
2025-08-20T00:37:18.9872936Z #### build\_url
2025-08-20T00:37:18.9873040Z 
2025-08-20T00:37:18.9873111Z ```python
2025-08-20T00:37:18.9873282Z def build_url(async_: bool = True) -> str
2025-08-20T00:37:18.9873510Z ```
2025-08-20T00:37:18.9873600Z 
2025-08-20T00:37:18.9873696Z Return Postgres DSN from env or PG_* parts.
2025-08-20T00:37:18.9873879Z 
2025-08-20T00:37:18.9873957Z <a id="common.keepa"></a>
2025-08-20T00:37:18.9874088Z 
2025-08-20T00:37:18.9874156Z # common.keepa
2025-08-20T00:37:18.9874264Z 
2025-08-20T00:37:18.9874337Z <a id="common.llm"></a>
2025-08-20T00:37:18.9874458Z 
2025-08-20T00:37:18.9874528Z # common.llm
2025-08-20T00:37:18.9874623Z 
2025-08-20T00:37:18.9874702Z <a id="common.settings"></a>
2025-08-20T00:37:18.9874843Z 
2025-08-20T00:37:18.9874911Z # common.settings
2025-08-20T00:37:18.9875016Z 
2025-08-20T00:37:18.9875086Z <a id="common.db"></a>
2025-08-20T00:37:18.9875206Z 
2025-08-20T00:37:18.9875268Z # common.db
2025-08-20T00:37:18.9875359Z 
2025-08-20T00:37:18.9875457Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T00:37:18.9875625Z 
2025-08-20T00:37:18.9875698Z #### build\_sqlalchemy\_url
2025-08-20T00:37:18.9875830Z 
2025-08-20T00:37:18.9875892Z ```python
2025-08-20T00:37:18.9876059Z def build_sqlalchemy_url() -> str
2025-08-20T00:37:18.9876410Z ```
2025-08-20T00:37:18.9876491Z 
2025-08-20T00:37:18.9876586Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T00:37:18.9876761Z 
2025-08-20T00:37:18.9876847Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T00:37:18.9877012Z 
2025-08-20T00:37:18.9877092Z #### build\_asyncpg\_dsn
2025-08-20T00:37:18.9877215Z 
2025-08-20T00:37:18.9877276Z ```python
2025-08-20T00:37:18.9877445Z def build_asyncpg_dsn() -> str
2025-08-20T00:37:18.9877644Z ```
2025-08-20T00:37:18.9877731Z 
2025-08-20T00:37:18.9877858Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T00:37:18.9878069Z 
2025-08-20T00:37:18.9878158Z <a id="common.db.refresh_mvs"></a>
2025-08-20T00:37:18.9878309Z 
2025-08-20T00:37:18.9878374Z #### refresh\_mvs
2025-08-20T00:37:18.9878480Z 
2025-08-20T00:37:18.9878548Z ```python
2025-08-20T00:37:18.9878737Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T00:37:18.9878985Z ```
2025-08-20T00:37:18.9879063Z 
2025-08-20T00:37:18.9879436Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T00:37:18.9879669Z 
2025-08-20T00:37:18.9879745Z <a id="common.config"></a>
2025-08-20T00:37:18.9879875Z 
2025-08-20T00:37:18.9879946Z # common.config
2025-08-20T00:37:18.9880048Z 
2025-08-20T00:37:18.9880121Z <a id="common.base"></a>
2025-08-20T00:37:18.9880243Z 
2025-08-20T00:37:18.9880313Z # common.base
2025-08-20T00:37:18.9880410Z 
2025-08-20T00:37:18.9880489Z <a id="common.base.Base"></a>
2025-08-20T00:37:18.9880633Z 
2025-08-20T00:37:18.9880696Z ## Base Objects
2025-08-20T00:37:18.9880794Z 
2025-08-20T00:37:18.9880861Z ```python
2025-08-20T00:37:18.9881022Z class Base(DeclarativeBase)
2025-08-20T00:37:18.9881220Z ```
2025-08-20T00:37:18.9881301Z 
2025-08-20T00:37:18.9881383Z Base class for SQLAlchemy models.
2025-08-20T00:37:18.9881532Z 
2025-08-20T00:37:18.9881610Z <a id="repricer"></a>
2025-08-20T00:37:18.9881726Z 
2025-08-20T00:37:18.9881789Z # repricer
2025-08-20T00:37:18.9881885Z 
2025-08-20T00:37:18.9881969Z <a id="repricer.app.schemas"></a>
2025-08-20T00:37:18.9882132Z 
2025-08-20T00:37:18.9882218Z # repricer.app.schemas
2025-08-20T00:37:18.9882335Z 
2025-08-20T00:37:18.9882416Z <a id="repricer.app.deps"></a>
2025-08-20T00:37:18.9882556Z 
2025-08-20T00:37:18.9882635Z # repricer.app.deps
2025-08-20T00:37:18.9882743Z 
2025-08-20T00:37:18.9882860Z Placeholder module for Keepa / SP-API clients.
2025-08-20T00:37:18.9883052Z 
2025-08-20T00:37:18.9883134Z <a id="repricer.app.logic"></a>
2025-08-20T00:37:18.9883274Z 
2025-08-20T00:37:18.9883348Z # repricer.app.logic
2025-08-20T00:37:18.9883469Z 
2025-08-20T00:37:18.9883565Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T00:37:18.9883741Z 
2025-08-20T00:37:18.9883813Z #### MIN\_MARGIN
2025-08-20T00:37:18.9883913Z 
2025-08-20T00:37:18.9883975Z 15 % ROI
2025-08-20T00:37:18.9884069Z 
2025-08-20T00:37:18.9884168Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T00:37:18.9884348Z 
2025-08-20T00:37:18.9884417Z #### compute\_price
2025-08-20T00:37:18.9884530Z 
2025-08-20T00:37:18.9884604Z ```python
2025-08-20T00:37:18.9884854Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T00:37:18.9885151Z ```
2025-08-20T00:37:18.9885231Z 
2025-08-20T00:37:18.9885342Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T00:37:18.9885617Z Replace with real competitive logic later.
2025-08-20T00:37:18.9885795Z 
2025-08-20T00:37:18.9885878Z <a id="repricer.app.main"></a>
2025-08-20T00:37:18.9886017Z 
2025-08-20T00:37:18.9886086Z # repricer.app.main
2025-08-20T00:37:18.9886198Z 
2025-08-20T00:37:18.9886273Z <a id="repricer.app"></a>
2025-08-20T00:37:18.9886399Z 
2025-08-20T00:37:18.9886472Z # repricer.app
2025-08-20T00:37:18.9886570Z 
2025-08-20T00:37:18.9886658Z <a id="repricer.tests.test_imports"></a>
2025-08-20T00:37:18.9886829Z 
2025-08-20T00:37:18.9886907Z # repricer.tests.test\_imports
2025-08-20T00:37:18.9887042Z 
2025-08-20T00:37:18.9887128Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T00:37:18.9887291Z 
2025-08-20T00:37:18.9887371Z # repricer.tests.test\_smoke
2025-08-20T00:37:18.9887642Z 
2025-08-20T00:37:18.9887725Z <a id="repricer.tests"></a>
2025-08-20T00:37:18.9887858Z 
2025-08-20T00:37:18.9887927Z # repricer.tests
2025-08-20T00:37:18.9888041Z 
2025-08-20T00:37:18.9888105Z <a id="db"></a>
2025-08-20T00:37:18.9888206Z 
2025-08-20T00:37:18.9888263Z # db
2025-08-20T00:37:18.9888353Z 
2025-08-20T00:37:18.9888429Z <a id="db.utils.views"></a>
2025-08-20T00:37:18.9888559Z 
2025-08-20T00:37:18.9888630Z # db.utils.views
2025-08-20T00:37:18.9888730Z 
2025-08-20T00:37:18.9888824Z <a id="db.utils.views.replace_view"></a>
2025-08-20T00:37:18.9888993Z 
2025-08-20T00:37:18.9889064Z #### replace\_view
2025-08-20T00:37:18.9889280Z 
2025-08-20T00:37:18.9889343Z ```python
2025-08-20T00:37:18.9889537Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T00:37:18.9889781Z ```
2025-08-20T00:37:18.9889870Z 
2025-08-20T00:37:18.9889958Z Drop and recreate a SQL view atomically.
2025-08-20T00:37:18.9890121Z 
2025-08-20T00:37:18.9890195Z <a id="db.utils"></a>
2025-08-20T00:37:18.9890434Z 
2025-08-20T00:37:18.9890496Z # db.utils
2025-08-20T00:37:18.9890589Z 
2025-08-20T00:37:18.9890665Z <a id="price_importer"></a>
2025-08-20T00:37:18.9890795Z 
2025-08-20T00:37:18.9890863Z # price\_importer
2025-08-20T00:37:18.9890974Z 
2025-08-20T00:37:18.9891076Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T00:37:18.9891257Z 
2025-08-20T00:37:18.9891352Z # price\_importer.services\_common.dsn
2025-08-20T00:37:18.9891513Z 
2025-08-20T00:37:18.9891635Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T00:37:18.9891843Z 
2025-08-20T00:37:18.9891907Z #### build\_dsn
2025-08-20T00:37:18.9892006Z 
2025-08-20T00:37:18.9892068Z ```python
2025-08-20T00:37:18.9892243Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:37:18.9892459Z ```
2025-08-20T00:37:18.9892549Z 
2025-08-20T00:37:18.9892615Z Return safe DSN.
2025-08-20T00:37:18.9892718Z 
2025-08-20T00:37:18.9893077Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T00:37:18.9893278Z 
2025-08-20T00:37:18.9893416Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T00:37:18.9893624Z 
2025-08-20T00:37:18.9893731Z # price\_importer.services\_common.models\_vendor
2025-08-20T00:37:18.9893917Z 
2025-08-20T00:37:18.9894020Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T00:37:18.9894212Z 
2025-08-20T00:37:18.9894306Z # price\_importer.services\_common.db\_url
2025-08-20T00:37:18.9894473Z 
2025-08-20T00:37:18.9894611Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T00:37:18.9894823Z 
2025-08-20T00:37:18.9894888Z #### build\_url
2025-08-20T00:37:18.9894996Z 
2025-08-20T00:37:18.9895059Z ```python
2025-08-20T00:37:18.9895230Z def build_url(async_: bool = True) -> str
2025-08-20T00:37:18.9895459Z ```
2025-08-20T00:37:18.9895542Z 
2025-08-20T00:37:18.9895641Z Return Postgres DSN from env or PG_* parts.
2025-08-20T00:37:18.9895813Z 
2025-08-20T00:37:18.9895919Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T00:37:18.9896102Z 
2025-08-20T00:37:18.9896210Z # price\_importer.services\_common.keepa
2025-08-20T00:37:18.9896378Z 
2025-08-20T00:37:18.9896477Z <a id="price_importer.services_common.llm"></a>
2025-08-20T00:37:18.9896663Z 
2025-08-20T00:37:18.9896752Z # price\_importer.services\_common.llm
2025-08-20T00:37:18.9896912Z 
2025-08-20T00:37:18.9897036Z <a id="price_importer.services_common.settings"></a>
2025-08-20T00:37:18.9897225Z 
2025-08-20T00:37:18.9897318Z # price\_importer.services\_common.settings
2025-08-20T00:37:18.9897494Z 
2025-08-20T00:37:18.9897601Z <a id="price_importer.services_common.db"></a>
2025-08-20T00:37:18.9897774Z 
2025-08-20T00:37:18.9897859Z # price\_importer.services\_common.db
2025-08-20T00:37:18.9898022Z 
2025-08-20T00:37:18.9898174Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T00:37:18.9898411Z 
2025-08-20T00:37:18.9898493Z #### build\_sqlalchemy\_url
2025-08-20T00:37:18.9898629Z 
2025-08-20T00:37:18.9898707Z ```python
2025-08-20T00:37:18.9898877Z def build_sqlalchemy_url() -> str
2025-08-20T00:37:18.9899445Z ```
2025-08-20T00:37:18.9899539Z 
2025-08-20T00:37:18.9899636Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T00:37:18.9899806Z 
2025-08-20T00:37:18.9899946Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T00:37:18.9900174Z 
2025-08-20T00:37:18.9900248Z #### build\_asyncpg\_dsn
2025-08-20T00:37:18.9900371Z 
2025-08-20T00:37:18.9900440Z ```python
2025-08-20T00:37:18.9900603Z def build_asyncpg_dsn() -> str
2025-08-20T00:37:18.9900801Z ```
2025-08-20T00:37:18.9900882Z 
2025-08-20T00:37:18.9901007Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T00:37:18.9901221Z 
2025-08-20T00:37:18.9901346Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T00:37:18.9901549Z 
2025-08-20T00:37:18.9901622Z #### refresh\_mvs
2025-08-20T00:37:18.9901724Z 
2025-08-20T00:37:18.9901784Z ```python
2025-08-20T00:37:18.9901980Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T00:37:18.9902223Z ```
2025-08-20T00:37:18.9902443Z 
2025-08-20T00:37:18.9902581Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T00:37:18.9902794Z 
2025-08-20T00:37:18.9902886Z <a id="price_importer.services_common"></a>
2025-08-20T00:37:18.9903060Z 
2025-08-20T00:37:18.9903145Z # price\_importer.services\_common
2025-08-20T00:37:18.9903296Z 
2025-08-20T00:37:18.9903402Z <a id="price_importer.services_common.base"></a>
2025-08-20T00:37:18.9903583Z 
2025-08-20T00:37:18.9903669Z # price\_importer.services\_common.base
2025-08-20T00:37:18.9903835Z 
2025-08-20T00:37:18.9904092Z <a id="price_importer.normaliser"></a>
2025-08-20T00:37:18.9904352Z 
2025-08-20T00:37:18.9904455Z # price\_importer.normaliser
2025-08-20T00:37:18.9904607Z 
2025-08-20T00:37:18.9904713Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T00:37:18.9904902Z 
2025-08-20T00:37:18.9904997Z # price\_importer.common.models\_vendor
2025-08-20T00:37:18.9905161Z 
2025-08-20T00:37:18.9905251Z <a id="price_importer.common.db_url"></a>
2025-08-20T00:37:18.9905426Z 
2025-08-20T00:37:18.9905521Z # price\_importer.common.db\_url
2025-08-20T00:37:18.9905668Z 
2025-08-20T00:37:18.9905771Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T00:37:18.9905963Z 
2025-08-20T00:37:18.9906026Z #### make\_dsn
2025-08-20T00:37:18.9906124Z 
2025-08-20T00:37:18.9906195Z ```python
2025-08-20T00:37:18.9906367Z def make_dsn(async_: bool = False) -> str
2025-08-20T00:37:18.9906591Z ```
2025-08-20T00:37:18.9906671Z 
2025-08-20T00:37:18.9906787Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T00:37:18.9906989Z 
2025-08-20T00:37:18.9907095Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T00:37:18.9907281Z 
2025-08-20T00:37:18.9907344Z #### build\_url
2025-08-20T00:37:18.9907461Z 
2025-08-20T00:37:18.9907524Z ```python
2025-08-20T00:37:18.9907701Z def build_url(async_: bool = False) -> str
2025-08-20T00:37:18.9907921Z ```
2025-08-20T00:37:18.9908000Z 
2025-08-20T00:37:18.9908127Z Return Postgres DSN built from environment variables.
2025-08-20T00:37:18.9908329Z 
2025-08-20T00:37:18.9908419Z <a id="price_importer.common"></a>
2025-08-20T00:37:18.9908580Z 
2025-08-20T00:37:18.9908657Z # price\_importer.common
2025-08-20T00:37:18.9908783Z 
2025-08-20T00:37:18.9908877Z <a id="price_importer.common.base"></a>
2025-08-20T00:37:18.9909041Z 
2025-08-20T00:37:18.9909279Z # price\_importer.common.base
2025-08-20T00:37:18.9909458Z 
2025-08-20T00:37:18.9909562Z <a id="price_importer.tests.conftest"></a>
2025-08-20T00:37:18.9909734Z 
2025-08-20T00:37:18.9909819Z # price\_importer.tests.conftest
2025-08-20T00:37:18.9909971Z 
2025-08-20T00:37:18.9910068Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T00:37:18.9910242Z 
2025-08-20T00:37:18.9910333Z # price\_importer.tests.test\_reader
2025-08-20T00:37:18.9910489Z 
2025-08-20T00:37:18.9910586Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T00:37:18.9910809Z 
2025-08-20T00:37:18.9910895Z # price\_importer.tests.test\_imports
2025-08-20T00:37:18.9911056Z 
2025-08-20T00:37:18.9911150Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T00:37:18.9911468Z 
2025-08-20T00:37:18.9911552Z # price\_importer.tests.test\_smoke
2025-08-20T00:37:18.9911705Z 
2025-08-20T00:37:18.9911815Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T00:37:18.9912201Z 
2025-08-20T00:37:18.9912310Z # price\_importer.tests.test\_normaliser
2025-08-20T00:37:18.9912483Z 
2025-08-20T00:37:18.9912566Z <a id="price_importer.tests"></a>
2025-08-20T00:37:18.9912717Z 
2025-08-20T00:37:18.9912791Z # price\_importer.tests
2025-08-20T00:37:18.9912915Z 
2025-08-20T00:37:18.9912999Z <a id="price_importer.reader"></a>
2025-08-20T00:37:18.9913147Z 
2025-08-20T00:37:18.9913227Z # price\_importer.reader
2025-08-20T00:37:18.9913353Z 
2025-08-20T00:37:18.9913439Z <a id="price_importer.repository"></a>
2025-08-20T00:37:18.9913599Z 
2025-08-20T00:37:18.9913685Z # price\_importer.repository
2025-08-20T00:37:18.9913822Z 
2025-08-20T00:37:18.9913903Z <a id="price_importer.import"></a>
2025-08-20T00:37:18.9914057Z 
2025-08-20T00:37:18.9914131Z # price\_importer.import
2025-08-20T00:37:18.9914387Z 
2025-08-20T00:37:18.9914462Z <a id="fees_h10"></a>
2025-08-20T00:37:18.9914574Z 
2025-08-20T00:37:18.9914638Z # fees\_h10
2025-08-20T00:37:18.9914728Z 
2025-08-20T00:37:18.9914874Z <a id="fees_h10.worker"></a>
2025-08-20T00:37:18.9915089Z 
2025-08-20T00:37:18.9915197Z # fees\_h10.worker
2025-08-20T00:37:18.9915361Z 
2025-08-20T00:37:18.9915460Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T00:37:18.9915635Z 
2025-08-20T00:37:18.9915712Z #### list\_active\_asins
2025-08-20T00:37:18.9915829Z 
2025-08-20T00:37:18.9915891Z ```python
2025-08-20T00:37:18.9916063Z def list_active_asins() -> list[str]
2025-08-20T00:37:18.9916278Z ```
2025-08-20T00:37:18.9916361Z 
2025-08-20T00:37:18.9916478Z Return known ASINs or an empty list if unavailable.
2025-08-20T00:37:18.9916669Z 
2025-08-20T00:37:18.9916752Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T00:37:18.9916915Z 
2025-08-20T00:37:18.9916993Z # fees\_h10.tests.test\_smoke
2025-08-20T00:37:18.9917129Z 
2025-08-20T00:37:18.9917219Z <a id="fees_h10.tests"></a>
2025-08-20T00:37:18.9917348Z 
2025-08-20T00:37:18.9917413Z # fees\_h10.tests
2025-08-20T00:37:18.9917513Z 
2025-08-20T00:37:18.9917594Z <a id="fees_h10.client"></a>
2025-08-20T00:37:18.9917723Z 
2025-08-20T00:37:18.9917788Z # fees\_h10.client
2025-08-20T00:37:18.9917896Z 
2025-08-20T00:37:18.9917979Z <a id="fees_h10.repository"></a>
2025-08-20T00:37:18.9918120Z 
2025-08-20T00:37:18.9918197Z # fees\_h10.repository
2025-08-20T00:37:18.9918312Z 
2025-08-20T00:37:18.9918411Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T00:37:18.9918594Z 
2025-08-20T00:37:18.9918673Z #### upsert\_fees\_raw
2025-08-20T00:37:18.9918786Z 
2025-08-20T00:37:18.9918847Z ```python
2025-08-20T00:37:18.9919022Z def upsert_fees_raw(engine: Engine,
2025-08-20T00:37:18.9919387Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T00:37:18.9919631Z                     *,
2025-08-20T00:37:18.9919852Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T00:37:18.9920130Z ```
2025-08-20T00:37:18.9920208Z 
2025-08-20T00:37:18.9920291Z Idempotent upsert for fees.
2025-08-20T00:37:18.9920424Z 
2025-08-20T00:37:18.9920571Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T00:37:18.9920914Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T00:37:18.9921219Z Only updates when one of the mutable fields changes.
2025-08-20T00:37:18.9921426Z 
2025-08-20T00:37:18.9921496Z <a id="emailer"></a>
2025-08-20T00:37:18.9921606Z 
2025-08-20T00:37:18.9921675Z # emailer
2025-08-20T00:37:18.9921762Z 
2025-08-20T00:37:18.9921861Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T00:37:18.9922040Z 
2025-08-20T00:37:18.9922134Z # emailer.tests.test\_import\_emailer
2025-08-20T00:37:18.9922296Z 
2025-08-20T00:37:18.9922378Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T00:37:18.9922537Z 
2025-08-20T00:37:18.9922614Z # emailer.tests.test\_smoke
2025-08-20T00:37:18.9922748Z 
2025-08-20T00:37:18.9922830Z <a id="emailer.tests"></a>
2025-08-20T00:37:18.9923101Z 
2025-08-20T00:37:18.9923169Z # emailer.tests
2025-08-20T00:37:18.9923272Z 
2025-08-20T00:37:18.9923360Z <a id="emailer.generate_body"></a>
2025-08-20T00:37:18.9923510Z 
2025-08-20T00:37:18.9923584Z # emailer.generate\_body
2025-08-20T00:37:18.9923714Z 
2025-08-20T00:37:18.9923783Z <a id="llm_server"></a>
2025-08-20T00:37:18.9923899Z 
2025-08-20T00:37:18.9923962Z # llm\_server
2025-08-20T00:37:18.9924065Z 
2025-08-20T00:37:18.9924140Z <a id="llm_server.app"></a>
2025-08-20T00:37:18.9924268Z 
2025-08-20T00:37:18.9924340Z # llm\_server.app
2025-08-20T00:37:18.9924444Z 
