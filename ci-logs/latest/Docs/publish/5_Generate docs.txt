2025-08-17T20:49:16.8102799Z ##[group]Run pydoc-markdown
2025-08-17T20:49:16.8103084Z [36;1mpydoc-markdown[0m
2025-08-17T20:49:16.8144762Z shell: /usr/bin/bash -e {0}
2025-08-17T20:49:16.8145004Z env:
2025-08-17T20:49:16.8145235Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:49:16.8145622Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T20:49:16.8145991Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:49:16.8146317Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:49:16.8146650Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:49:16.8146977Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T20:49:16.8147258Z ##[endgroup]
2025-08-17T20:49:17.2651560Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T20:49:17.2652378Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T20:49:17.2652850Z In "pydoc-markdown.yml"
2025-08-17T20:49:17.2653279Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T20:49:17.2653925Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T20:49:17.2654652Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T20:49:17.2655139Z 
2025-08-17T20:49:17.5068043Z <a id="__init__"></a>
2025-08-17T20:49:17.5068329Z 
2025-08-17T20:49:17.5068461Z # \_\_init\_\_
2025-08-17T20:49:17.5068645Z 
2025-08-17T20:49:17.5068766Z <a id="api"></a>
2025-08-17T20:49:17.5068966Z 
2025-08-17T20:49:17.5069131Z # api
2025-08-17T20:49:17.5069293Z 
2025-08-17T20:49:17.5069642Z <a id="api.tests.test_llm"></a>
2025-08-17T20:49:17.5069907Z 
2025-08-17T20:49:17.5070037Z # api.tests.test\_llm
2025-08-17T20:49:17.5070246Z 
2025-08-17T20:49:17.5070381Z <a id="api.tests.test_imports"></a>
2025-08-17T20:49:17.5070645Z 
2025-08-17T20:49:17.5070773Z # api.tests.test\_imports
2025-08-17T20:49:17.5070990Z 
2025-08-17T20:49:17.5071143Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T20:49:17.5071703Z 
2025-08-17T20:49:17.5071845Z # api.tests.test\_entrypoint
2025-08-17T20:49:17.5072114Z 
2025-08-17T20:49:17.5073744Z <a id="api.tests.test_health"></a>
2025-08-17T20:49:17.5074037Z 
2025-08-17T20:49:17.5074168Z # api.tests.test\_health
2025-08-17T20:49:17.5074392Z 
2025-08-17T20:49:17.5074536Z <a id="api.migrations.env"></a>
2025-08-17T20:49:17.5074785Z 
2025-08-17T20:49:17.5074907Z # api.migrations.env
2025-08-17T20:49:17.5075102Z 
2025-08-17T20:49:17.5075305Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T20:49:17.5075652Z 
2025-08-17T20:49:17.5075838Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T20:49:17.5076163Z 
2025-08-17T20:49:17.5076352Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T20:49:17.5076681Z 
2025-08-17T20:49:17.5076837Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T20:49:17.5077133Z 
2025-08-17T20:49:17.5077378Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T20:49:17.5077773Z 
2025-08-17T20:49:17.5078026Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T20:49:17.5078399Z 
2025-08-17T20:49:17.5078608Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T20:49:17.5078969Z 
2025-08-17T20:49:17.5079159Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T20:49:17.5079895Z 
2025-08-17T20:49:17.5080135Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T20:49:17.5080496Z 
2025-08-17T20:49:17.5080677Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T20:49:17.5080998Z 
2025-08-17T20:49:17.5081238Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T20:49:17.5081607Z 
2025-08-17T20:49:17.5081802Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T20:49:17.5082141Z 
2025-08-17T20:49:17.5082351Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T20:49:17.5082698Z 
2025-08-17T20:49:17.5082891Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T20:49:17.5083212Z 
2025-08-17T20:49:17.5083433Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T20:49:17.5084175Z 
2025-08-17T20:49:17.5084371Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T20:49:17.5084682Z 
2025-08-17T20:49:17.5084921Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-17T20:49:17.5085306Z 
2025-08-17T20:49:17.5085512Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-17T20:49:17.5085862Z 
2025-08-17T20:49:17.5086084Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T20:49:17.5086443Z 
2025-08-17T20:49:17.5086629Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T20:49:17.5086957Z 
2025-08-17T20:49:17.5087139Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T20:49:17.5087464Z 
2025-08-17T20:49:17.5087622Z # api.migrations.versions.0001\_baseline
2025-08-17T20:49:17.5087922Z 
2025-08-17T20:49:17.5088080Z <a id="api.migrations.versions"></a>
2025-08-17T20:49:17.5088354Z 
2025-08-17T20:49:17.5088497Z # api.migrations.versions
2025-08-17T20:49:17.5088731Z 
2025-08-17T20:49:17.5088876Z <a id="api.migrations"></a>
2025-08-17T20:49:17.5089108Z 
2025-08-17T20:49:17.5089226Z # api.migrations
2025-08-17T20:49:17.5089640Z 
2025-08-17T20:49:17.5089762Z <a id="api.db"></a>
2025-08-17T20:49:17.5089954Z 
2025-08-17T20:49:17.5090058Z # api.db
2025-08-17T20:49:17.5090209Z 
2025-08-17T20:49:17.5090355Z <a id="api.routes.stats"></a>
2025-08-17T20:49:17.5090596Z 
2025-08-17T20:49:17.5090714Z # api.routes.stats
2025-08-17T20:49:17.5090902Z 
2025-08-17T20:49:17.5091056Z <a id="api.routes.stats.kpi"></a>
2025-08-17T20:49:17.5091346Z 
2025-08-17T20:49:17.5091454Z #### kpi
2025-08-17T20:49:17.5091611Z 
2025-08-17T20:49:17.5091720Z ```python
2025-08-17T20:49:17.5092002Z @router.get("/stats/kpi")
2025-08-17T20:49:17.5092397Z def kpi() -> List[Dict[str, int]]
2025-08-17T20:49:17.5092755Z ```
2025-08-17T20:49:17.5092902Z 
2025-08-17T20:49:17.5093037Z Return KPI metrics (mock).
2025-08-17T20:49:17.5093274Z 
2025-08-17T20:49:17.5093464Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T20:49:17.5094049Z 
2025-08-17T20:49:17.5094192Z #### roi\_by\_vendor
2025-08-17T20:49:17.5094400Z 
2025-08-17T20:49:17.5094515Z ```python
2025-08-17T20:49:17.5094811Z @router.get("/stats/roi_by_vendor")
2025-08-17T20:49:17.5095249Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T20:49:17.5095655Z ```
2025-08-17T20:49:17.5095815Z 
2025-08-17T20:49:17.5095959Z Return ROI percent by vendor.
2025-08-17T20:49:17.5096217Z 
2025-08-17T20:49:17.5096394Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T20:49:17.5096688Z 
2025-08-17T20:49:17.5096806Z #### roi\_trend
2025-08-17T20:49:17.5096992Z 
2025-08-17T20:49:17.5097106Z ```python
2025-08-17T20:49:17.5097394Z @router.get("/stats/roi_trend")
2025-08-17T20:49:17.5097818Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T20:49:17.5098231Z ```
2025-08-17T20:49:17.5098374Z 
2025-08-17T20:49:17.5098501Z Return 30-day ROI trend.
2025-08-17T20:49:17.5098744Z 
2025-08-17T20:49:17.5098885Z <a id="api.routes.roi"></a>
2025-08-17T20:49:17.5099202Z 
2025-08-17T20:49:17.5099341Z # api.routes.roi
2025-08-17T20:49:17.5099764Z 
2025-08-17T20:49:17.5099910Z <a id="api.routes.health"></a>
2025-08-17T20:49:17.5100158Z 
2025-08-17T20:49:17.5100278Z # api.routes.health
2025-08-17T20:49:17.5100464Z 
2025-08-17T20:49:17.5100621Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T20:49:17.5100919Z 
2025-08-17T20:49:17.5101040Z #### MAX\_SKEW
2025-08-17T20:49:17.5101219Z 
2025-08-17T20:49:17.5101334Z seconds
2025-08-17T20:49:17.5101475Z 
2025-08-17T20:49:17.5101622Z <a id="api.routes.health.health"></a>
2025-08-17T20:49:17.5101891Z 
2025-08-17T20:49:17.5102011Z #### health
2025-08-17T20:49:17.5102164Z 
2025-08-17T20:49:17.5102268Z ```python
2025-08-17T20:49:17.5102585Z @router.get("/health", include_in_schema=False)
2025-08-17T20:49:17.5103210Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T20:49:17.5103791Z ```
2025-08-17T20:49:17.5103936Z 
2025-08-17T20:49:17.5104142Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T20:49:17.5104493Z 
2025-08-17T20:49:17.5104903Z <a id="api.routes.repository"></a>
2025-08-17T20:49:17.5105189Z 
2025-08-17T20:49:17.5105326Z # api.routes.repository
2025-08-17T20:49:17.5105535Z 
2025-08-17T20:49:17.5105655Z <a id="api.routes"></a>
2025-08-17T20:49:17.5105858Z 
2025-08-17T20:49:17.5106017Z # api.routes
2025-08-17T20:49:17.5106183Z 
2025-08-17T20:49:17.5106327Z <a id="api.models.fee"></a>
2025-08-17T20:49:17.5106552Z 
2025-08-17T20:49:17.5106662Z # api.models.fee
2025-08-17T20:49:17.5106840Z 
2025-08-17T20:49:17.5106966Z <a id="api.models"></a>
2025-08-17T20:49:17.5107238Z 
2025-08-17T20:49:17.5107346Z # api.models
2025-08-17T20:49:17.5107510Z 
2025-08-17T20:49:17.5107639Z <a id="api.roi_repository"></a>
2025-08-17T20:49:17.5107874Z 
2025-08-17T20:49:17.5107992Z # api.roi\_repository
2025-08-17T20:49:17.5108194Z 
2025-08-17T20:49:17.5108311Z <a id="api.main"></a>
2025-08-17T20:49:17.5108498Z 
2025-08-17T20:49:17.5108612Z # api.main
2025-08-17T20:49:17.5108765Z 
2025-08-17T20:49:17.5108906Z <a id="api.main.ready"></a>
2025-08-17T20:49:17.5109155Z 
2025-08-17T20:49:17.5109263Z #### ready
2025-08-17T20:49:17.5109599Z 
2025-08-17T20:49:17.5109706Z ```python
2025-08-17T20:49:17.5110140Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T20:49:17.5110906Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T20:49:17.5111505Z                                                                       str]
2025-08-17T20:49:17.5111905Z ```
2025-08-17T20:49:17.5112049Z 
2025-08-17T20:49:17.5112212Z Return 200 only when migrations are at head.
2025-08-17T20:49:17.5112518Z 
2025-08-17T20:49:17.5112643Z <a id="api.config"></a>
2025-08-17T20:49:17.5112849Z 
2025-08-17T20:49:17.5112962Z # api.config
2025-08-17T20:49:17.5113144Z 
2025-08-17T20:49:17.5113259Z <a id="etl"></a>
2025-08-17T20:49:17.5113442Z 
2025-08-17T20:49:17.5113556Z # etl
2025-08-17T20:49:17.5113703Z 
2025-08-17T20:49:17.5113836Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T20:49:17.5114296Z 
2025-08-17T20:49:17.5114428Z # etl.fba\_fee\_ingestor
2025-08-17T20:49:17.5114634Z 
2025-08-17T20:49:17.5114767Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T20:49:17.5115019Z 
2025-08-17T20:49:17.5115142Z # etl.sp\_fees\_ingestor
2025-08-17T20:49:17.5115345Z 
2025-08-17T20:49:17.5115481Z <a id="etl.keepa_ingestor"></a>
2025-08-17T20:49:17.5115723Z 
2025-08-17T20:49:17.5115839Z # etl.keepa\_ingestor
2025-08-17T20:49:17.5116052Z 
2025-08-17T20:49:17.5116163Z <a id="etl.db"></a>
2025-08-17T20:49:17.5116340Z 
2025-08-17T20:49:17.5116448Z # etl.db
2025-08-17T20:49:17.5116592Z 
2025-08-17T20:49:17.5116728Z <a id="etl.dialects.schemas"></a>
2025-08-17T20:49:17.5116975Z 
2025-08-17T20:49:17.5117107Z # etl.dialects.schemas
2025-08-17T20:49:17.5117301Z 
2025-08-17T20:49:17.5117476Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T20:49:17.5117804Z 
2025-08-17T20:49:17.5117960Z # etl.dialects.amazon\_reimbursements
2025-08-17T20:49:17.5118230Z 
2025-08-17T20:49:17.5118380Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T20:49:17.5118673Z 
2025-08-17T20:49:17.5118806Z # etl.dialects.amazon\_returns
2025-08-17T20:49:17.5119037Z 
2025-08-17T20:49:17.5119172Z <a id="etl.dialects"></a>
2025-08-17T20:49:17.5119589Z 
2025-08-17T20:49:17.5119711Z # etl.dialects
2025-08-17T20:49:17.5119889Z 
2025-08-17T20:49:17.5120005Z <a id="ingest"></a>
2025-08-17T20:49:17.5120186Z 
2025-08-17T20:49:17.5120291Z # ingest
2025-08-17T20:49:17.5120452Z 
2025-08-17T20:49:17.5120598Z <a id="ingest.maintenance"></a>
2025-08-17T20:49:17.5120846Z 
2025-08-17T20:49:17.5120978Z # ingest.maintenance
2025-08-17T20:49:17.5121175Z 
2025-08-17T20:49:17.5121312Z <a id="ingest.copy_loader"></a>
2025-08-17T20:49:17.5121557Z 
2025-08-17T20:49:17.5121684Z # ingest.copy\_loader
2025-08-17T20:49:17.5121879Z 
2025-08-17T20:49:17.5122049Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T20:49:17.5122364Z 
2025-08-17T20:49:17.5122485Z #### copy\_df\_via\_temp
2025-08-17T20:49:17.5122688Z 
2025-08-17T20:49:17.5122799Z ```python
2025-08-17T20:49:17.5123092Z def copy_df_via_temp(engine: Engine,
2025-08-17T20:49:17.5123677Z                      df: pd.DataFrame,
2025-08-17T20:49:17.5124056Z                      target_table: str,
2025-08-17T20:49:17.5124433Z                      *,
2025-08-17T20:49:17.5124767Z                      target_schema: Optional[str] = None,
2025-08-17T20:49:17.5125205Z                      columns: Sequence[str],
2025-08-17T20:49:17.5125662Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T20:49:17.5126148Z                      analyze_after: bool = False,
2025-08-17T20:49:17.5126591Z                      connection: Any | None = None) -> int
2025-08-17T20:49:17.5126980Z ```
2025-08-17T20:49:17.5127125Z 
2025-08-17T20:49:17.5127388Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T20:49:17.5127777Z 
2025-08-17T20:49:17.5127924Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T20:49:17.5128202Z 
2025-08-17T20:49:17.5128336Z # ingest.tests.test\_smoke
2025-08-17T20:49:17.5128570Z 
2025-08-17T20:49:17.5128719Z <a id="ingest.tests"></a>
2025-08-17T20:49:17.5128946Z 
2025-08-17T20:49:17.5129063Z # ingest.tests
2025-08-17T20:49:17.5129238Z 
2025-08-17T20:49:17.5129572Z <a id="ingest.upload_router"></a>
2025-08-17T20:49:17.5129836Z 
2025-08-17T20:49:17.5129960Z # ingest.upload\_router
2025-08-17T20:49:17.5130171Z 
2025-08-17T20:49:17.5130305Z <a id="ingest.email_watcher"></a>
2025-08-17T20:49:17.5130564Z 
2025-08-17T20:49:17.5130686Z # ingest.email\_watcher
2025-08-17T20:49:17.5130883Z 
2025-08-17T20:49:17.5131025Z <a id="ingest.email_watcher.main"></a>
2025-08-17T20:49:17.5131295Z 
2025-08-17T20:49:17.5131404Z #### main
2025-08-17T20:49:17.5131551Z 
2025-08-17T20:49:17.5131656Z ```python
2025-08-17T20:49:17.5131936Z def main() -> dict[str, str]
2025-08-17T20:49:17.5132252Z ```
2025-08-17T20:49:17.5132397Z 
2025-08-17T20:49:17.5132630Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T20:49:17.5133006Z 
2025-08-17T20:49:17.5133232Z Returns {"status": "success"} when processing completes.
2025-08-17T20:49:17.5133829Z 
2025-08-17T20:49:17.5133954Z <a id="ingest.tasks"></a>
2025-08-17T20:49:17.5134174Z 
2025-08-17T20:49:17.5134286Z # ingest.tasks
2025-08-17T20:49:17.5134455Z 
2025-08-17T20:49:17.5134609Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T20:49:17.5134903Z 
2025-08-17T20:49:17.5135026Z #### task\_import\_file
2025-08-17T20:49:17.5135224Z 
2025-08-17T20:49:17.5135340Z ```python
2025-08-17T20:49:17.5135684Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T20:49:17.5136163Z def task_import_file(self,
2025-08-17T20:49:17.5136512Z                      uri: str,
2025-08-17T20:49:17.5136906Z                      report_type: Optional[str] = None,
2025-08-17T20:49:17.5137362Z                      force: bool = False) -> Dict[str, Any]
2025-08-17T20:49:17.5137765Z ```
2025-08-17T20:49:17.5137903Z 
2025-08-17T20:49:17.5138122Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T20:49:17.5138493Z 
2025-08-17T20:49:17.5138644Z <a id="ingest.celery_app"></a>
2025-08-17T20:49:17.5138888Z 
2025-08-17T20:49:17.5139015Z # ingest.celery\_app
2025-08-17T20:49:17.5139207Z 
2025-08-17T20:49:17.5139340Z <a id="ingest.ingest_router"></a>
2025-08-17T20:49:17.5139783Z 
2025-08-17T20:49:17.5139907Z # ingest.ingest\_router
2025-08-17T20:49:17.5140103Z 
2025-08-17T20:49:17.5140229Z <a id="logistics_etl"></a>
2025-08-17T20:49:17.5140450Z 
2025-08-17T20:49:17.5140562Z # logistics\_etl
2025-08-17T20:49:17.5140739Z 
2025-08-17T20:49:17.5140877Z Daily logistics ETL job.
2025-08-17T20:49:17.5141091Z 
2025-08-17T20:49:17.5141226Z <a id="logistics_etl.__main__"></a>
2025-08-17T20:49:17.5141497Z 
2025-08-17T20:49:17.5141632Z # logistics\_etl.\_\_main\_\_
2025-08-17T20:49:17.5141865Z 
2025-08-17T20:49:17.5141992Z <a id="logistics_etl.dsn"></a>
2025-08-17T20:49:17.5142222Z 
2025-08-17T20:49:17.5142337Z # logistics\_etl.dsn
2025-08-17T20:49:17.5142524Z 
2025-08-17T20:49:17.5142723Z Local DSN builder to avoid cross-service dependency.
2025-08-17T20:49:17.5143067Z 
2025-08-17T20:49:17.5143405Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T20:49:17.5143704Z 
2025-08-17T20:49:17.5143817Z #### build\_dsn
2025-08-17T20:49:17.5143988Z 
2025-08-17T20:49:17.5144095Z ```python
2025-08-17T20:49:17.5144406Z def build_dsn(sync: bool = True) -> str
2025-08-17T20:49:17.5144789Z ```
2025-08-17T20:49:17.5144941Z 
2025-08-17T20:49:17.5145180Z Return a Postgres DSN assembled from environment variables.
2025-08-17T20:49:17.5145562Z 
2025-08-17T20:49:17.5145816Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T20:49:17.5146473Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T20:49:17.5147052Z error when any required variable is missing.
2025-08-17T20:49:17.5147354Z 
2025-08-17T20:49:17.5147505Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T20:49:17.5147797Z 
2025-08-17T20:49:17.5147931Z # logistics\_etl.tests.conftest
2025-08-17T20:49:17.5148169Z 
2025-08-17T20:49:17.5148343Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T20:49:17.5148674Z 
2025-08-17T20:49:17.5148829Z # logistics\_etl.tests.test\_repository
2025-08-17T20:49:17.5149126Z 
2025-08-17T20:49:17.5149280Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T20:49:17.5149793Z 
2025-08-17T20:49:17.5149941Z # logistics\_etl.tests.test\_cron
2025-08-17T20:49:17.5150222Z 
2025-08-17T20:49:17.5150402Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T20:49:17.5150716Z 
2025-08-17T20:49:17.5150869Z # logistics\_etl.tests.test\_imports
2025-08-17T20:49:17.5151141Z 
2025-08-17T20:49:17.5151313Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T20:49:17.5151612Z 
2025-08-17T20:49:17.5151754Z # logistics\_etl.tests.test\_smoke
2025-08-17T20:49:17.5152028Z 
2025-08-17T20:49:17.5152186Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T20:49:17.5152483Z 
2025-08-17T20:49:17.5152626Z # logistics\_etl.tests.test\_client
2025-08-17T20:49:17.5152883Z 
2025-08-17T20:49:17.5153021Z <a id="logistics_etl.tests"></a>
2025-08-17T20:49:17.5153508Z 
2025-08-17T20:49:17.5153665Z # logistics\_etl.tests
2025-08-17T20:49:17.5153881Z 
2025-08-17T20:49:17.5154019Z <a id="logistics_etl.flow"></a>
2025-08-17T20:49:17.5154281Z 
2025-08-17T20:49:17.5154407Z # logistics\_etl.flow
2025-08-17T20:49:17.5154619Z 
2025-08-17T20:49:17.5154771Z <a id="logistics_etl.client"></a>
2025-08-17T20:49:17.5155029Z 
2025-08-17T20:49:17.5155161Z # logistics\_etl.client
2025-08-17T20:49:17.5155416Z 
2025-08-17T20:49:17.5155568Z <a id="logistics_etl.cron"></a>
2025-08-17T20:49:17.5155812Z 
2025-08-17T20:49:17.5155939Z # logistics\_etl.cron
2025-08-17T20:49:17.5156160Z 
2025-08-17T20:49:17.5156305Z <a id="logistics_etl.db"></a>
2025-08-17T20:49:17.5156560Z 
2025-08-17T20:49:17.5156683Z # logistics\_etl.db
2025-08-17T20:49:17.5156889Z 
2025-08-17T20:49:17.5157048Z <a id="logistics_etl.repository"></a>
2025-08-17T20:49:17.5157342Z 
2025-08-17T20:49:17.5157560Z # logistics\_etl.repository
2025-08-17T20:49:17.5157802Z 
2025-08-17T20:49:17.5157930Z <a id="alert_bot"></a>
2025-08-17T20:49:17.5158166Z 
2025-08-17T20:49:17.5158287Z # alert\_bot
2025-08-17T20:49:17.5158465Z 
2025-08-17T20:49:17.5158621Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T20:49:17.5158926Z 
2025-08-17T20:49:17.5159068Z # alert\_bot.tests.test\_smoke
2025-08-17T20:49:17.5159318Z 
2025-08-17T20:49:17.5159669Z <a id="alert_bot.tests"></a>
2025-08-17T20:49:17.5159916Z 
2025-08-17T20:49:17.5160040Z # alert\_bot.tests
2025-08-17T20:49:17.5160239Z 
2025-08-17T20:49:17.5160380Z <a id="alert_bot.alert_bot"></a>
2025-08-17T20:49:17.5160632Z 
2025-08-17T20:49:17.5160761Z # alert\_bot.alert\_bot
2025-08-17T20:49:17.5160979Z 
2025-08-17T20:49:17.5161111Z <a id="alert_bot.rules"></a>
2025-08-17T20:49:17.5161354Z 
2025-08-17T20:49:17.5161486Z # alert\_bot.rules
2025-08-17T20:49:17.5161677Z 
2025-08-17T20:49:17.5161795Z <a id="common"></a>
2025-08-17T20:49:17.5161983Z 
2025-08-17T20:49:17.5162098Z # common
2025-08-17T20:49:17.5162253Z 
2025-08-17T20:49:17.5162383Z <a id="common.dsn"></a>
2025-08-17T20:49:17.5162611Z 
2025-08-17T20:49:17.5162725Z # common.dsn
2025-08-17T20:49:17.5163158Z 
2025-08-17T20:49:17.5163324Z <a id="common.dsn.build_dsn"></a>
2025-08-17T20:49:17.5163589Z 
2025-08-17T20:49:17.5163709Z #### build\_dsn
2025-08-17T20:49:17.5163889Z 
2025-08-17T20:49:17.5164009Z ```python
2025-08-17T20:49:17.5164318Z def build_dsn(sync: bool = True) -> str
2025-08-17T20:49:17.5164721Z ```
2025-08-17T20:49:17.5164872Z 
2025-08-17T20:49:17.5165091Z Return a Postgres DSN, validating required variables.
2025-08-17T20:49:17.5165460Z 
2025-08-17T20:49:17.5165791Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T20:49:17.5166570Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T20:49:17.5167297Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T20:49:17.5167855Z missing.
2025-08-17T20:49:17.5168021Z 
2025-08-17T20:49:17.5168170Z <a id="common.models_vendor"></a>
2025-08-17T20:49:17.5168445Z 
2025-08-17T20:49:17.5168588Z # common.models\_vendor
2025-08-17T20:49:17.5168812Z 
2025-08-17T20:49:17.5168972Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T20:49:17.5169281Z 
2025-08-17T20:49:17.5169614Z ## Vendor Objects
2025-08-17T20:49:17.5169817Z 
2025-08-17T20:49:17.5169942Z ```python
2025-08-17T20:49:17.5170218Z class Vendor(Base)
2025-08-17T20:49:17.5170576Z ```
2025-08-17T20:49:17.5170725Z 
2025-08-17T20:49:17.5170906Z Vendor of inventory items.
2025-08-17T20:49:17.5171177Z 
2025-08-17T20:49:17.5171357Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T20:49:17.5171681Z 
2025-08-17T20:49:17.5171821Z ## VendorPrice Objects
2025-08-17T20:49:17.5172024Z 
2025-08-17T20:49:17.5172139Z ```python
2025-08-17T20:49:17.5172421Z class VendorPrice(Base)
2025-08-17T20:49:17.5172730Z ```
2025-08-17T20:49:17.5172879Z 
2025-08-17T20:49:17.5173070Z Association table linking vendors to pricing.
2025-08-17T20:49:17.5173451Z 
2025-08-17T20:49:17.5173584Z <a id="common.db_url"></a>
2025-08-17T20:49:17.5173814Z 
2025-08-17T20:49:17.5174172Z # common.db\_url
2025-08-17T20:49:17.5174382Z 
2025-08-17T20:49:17.5174540Z <a id="common.db_url.build_url"></a>
2025-08-17T20:49:17.5174827Z 
2025-08-17T20:49:17.5174945Z #### build\_url
2025-08-17T20:49:17.5175126Z 
2025-08-17T20:49:17.5175249Z ```python
2025-08-17T20:49:17.5175563Z def build_url(async_: bool = True) -> str
2025-08-17T20:49:17.5175973Z ```
2025-08-17T20:49:17.5176125Z 
2025-08-17T20:49:17.5176395Z Return Postgres DSN from env or PG_* parts.
2025-08-17T20:49:17.5176716Z 
2025-08-17T20:49:17.5176855Z <a id="common.keepa"></a>
2025-08-17T20:49:17.5177082Z 
2025-08-17T20:49:17.5177206Z # common.keepa
2025-08-17T20:49:17.5177386Z 
2025-08-17T20:49:17.5177516Z <a id="common.llm"></a>
2025-08-17T20:49:17.5177736Z 
2025-08-17T20:49:17.5177851Z # common.llm
2025-08-17T20:49:17.5178019Z 
2025-08-17T20:49:17.5178154Z <a id="common.settings"></a>
2025-08-17T20:49:17.5178404Z 
2025-08-17T20:49:17.5178524Z # common.settings
2025-08-17T20:49:17.5178709Z 
2025-08-17T20:49:17.5178834Z <a id="common.db"></a>
2025-08-17T20:49:17.5179045Z 
2025-08-17T20:49:17.5179160Z # common.db
2025-08-17T20:49:17.5179317Z 
2025-08-17T20:49:17.5179687Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T20:49:17.5179985Z 
2025-08-17T20:49:17.5180120Z #### build\_sqlalchemy\_url
2025-08-17T20:49:17.5180349Z 
2025-08-17T20:49:17.5180454Z ```python
2025-08-17T20:49:17.5180736Z def build_sqlalchemy_url() -> str
2025-08-17T20:49:17.5181097Z ```
2025-08-17T20:49:17.5181241Z 
2025-08-17T20:49:17.5181414Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T20:49:17.5181719Z 
2025-08-17T20:49:17.5181879Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T20:49:17.5182176Z 
2025-08-17T20:49:17.5182304Z #### build\_asyncpg\_dsn
2025-08-17T20:49:17.5182514Z 
2025-08-17T20:49:17.5182622Z ```python
2025-08-17T20:49:17.5182917Z def build_asyncpg_dsn() -> str
2025-08-17T20:49:17.5183256Z ```
2025-08-17T20:49:17.5183410Z 
2025-08-17T20:49:17.5183632Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T20:49:17.5184015Z 
2025-08-17T20:49:17.5184400Z <a id="common.db.refresh_mvs"></a>
2025-08-17T20:49:17.5184678Z 
2025-08-17T20:49:17.5184796Z #### refresh\_mvs
2025-08-17T20:49:17.5184989Z 
2025-08-17T20:49:17.5185103Z ```python
2025-08-17T20:49:17.5185441Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T20:49:17.5185880Z ```
2025-08-17T20:49:17.5186031Z 
2025-08-17T20:49:17.5186271Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T20:49:17.5186643Z 
2025-08-17T20:49:17.5186777Z <a id="common.config"></a>
2025-08-17T20:49:17.5186999Z 
2025-08-17T20:49:17.5187117Z # common.config
2025-08-17T20:49:17.5187268Z 
2025-08-17T20:49:17.5187378Z <a id="common.base"></a>
2025-08-17T20:49:17.5187579Z 
2025-08-17T20:49:17.5187687Z # common.base
2025-08-17T20:49:17.5187845Z 
2025-08-17T20:49:17.5187977Z <a id="common.base.Base"></a>
2025-08-17T20:49:17.5188219Z 
2025-08-17T20:49:17.5188329Z ## Base Objects
2025-08-17T20:49:17.5188495Z 
2025-08-17T20:49:17.5188607Z ```python
2025-08-17T20:49:17.5188885Z class Base(DeclarativeBase)
2025-08-17T20:49:17.5189221Z ```
2025-08-17T20:49:17.5189355Z 
2025-08-17T20:49:17.5189684Z Base class for SQLAlchemy models.
2025-08-17T20:49:17.5189943Z 
2025-08-17T20:49:17.5190061Z <a id="repricer"></a>
2025-08-17T20:49:17.5190257Z 
2025-08-17T20:49:17.5190363Z # repricer
2025-08-17T20:49:17.5190523Z 
2025-08-17T20:49:17.5190665Z <a id="repricer.app.schemas"></a>
2025-08-17T20:49:17.5190925Z 
2025-08-17T20:49:17.5191061Z # repricer.app.schemas
2025-08-17T20:49:17.5191268Z 
2025-08-17T20:49:17.5191404Z <a id="repricer.app.deps"></a>
2025-08-17T20:49:17.5191655Z 
2025-08-17T20:49:17.5191774Z # repricer.app.deps
2025-08-17T20:49:17.5191957Z 
2025-08-17T20:49:17.5192144Z Placeholder module for Keepa / SP-API clients.
2025-08-17T20:49:17.5192476Z 
2025-08-17T20:49:17.5192618Z <a id="repricer.app.logic"></a>
2025-08-17T20:49:17.5192860Z 
2025-08-17T20:49:17.5192989Z # repricer.app.logic
2025-08-17T20:49:17.5193185Z 
2025-08-17T20:49:17.5193348Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T20:49:17.5194016Z 
2025-08-17T20:49:17.5194132Z #### MIN\_MARGIN
2025-08-17T20:49:17.5194307Z 
2025-08-17T20:49:17.5194414Z 15 % ROI
2025-08-17T20:49:17.5194571Z 
2025-08-17T20:49:17.5194750Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T20:49:17.5195065Z 
2025-08-17T20:49:17.5195197Z #### compute\_price
2025-08-17T20:49:17.5195377Z 
2025-08-17T20:49:17.5195481Z ```python
2025-08-17T20:49:17.5195893Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T20:49:17.5196406Z ```
2025-08-17T20:49:17.5196559Z 
2025-08-17T20:49:17.5196740Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T20:49:17.5197233Z Replace with real competitive logic later.
2025-08-17T20:49:17.5197547Z 
2025-08-17T20:49:17.5197695Z <a id="repricer.app.main"></a>
2025-08-17T20:49:17.5197940Z 
2025-08-17T20:49:17.5198076Z # repricer.app.main
2025-08-17T20:49:17.5198266Z 
2025-08-17T20:49:17.5198399Z <a id="repricer.app"></a>
2025-08-17T20:49:17.5198630Z 
2025-08-17T20:49:17.5198756Z # repricer.app
2025-08-17T20:49:17.5198936Z 
2025-08-17T20:49:17.5199093Z <a id="repricer.tests.test_imports"></a>
2025-08-17T20:49:17.5199586Z 
2025-08-17T20:49:17.5199738Z # repricer.tests.test\_imports
2025-08-17T20:49:17.5199993Z 
2025-08-17T20:49:17.5200155Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T20:49:17.5200438Z 
2025-08-17T20:49:17.5200578Z # repricer.tests.test\_smoke
2025-08-17T20:49:17.5200831Z 
2025-08-17T20:49:17.5200964Z <a id="repricer.tests"></a>
2025-08-17T20:49:17.5201193Z 
2025-08-17T20:49:17.5201311Z # repricer.tests
2025-08-17T20:49:17.5201495Z 
2025-08-17T20:49:17.5201600Z <a id="db"></a>
2025-08-17T20:49:17.5201767Z 
2025-08-17T20:49:17.5201874Z # db
2025-08-17T20:49:17.5202010Z 
2025-08-17T20:49:17.5202135Z <a id="db.utils.views"></a>
2025-08-17T20:49:17.5202355Z 
2025-08-17T20:49:17.5202475Z # db.utils.views
2025-08-17T20:49:17.5202646Z 
2025-08-17T20:49:17.5202798Z <a id="db.utils.views.replace_view"></a>
2025-08-17T20:49:17.5203086Z 
2025-08-17T20:49:17.5203207Z #### replace\_view
2025-08-17T20:49:17.5203581Z 
2025-08-17T20:49:17.5203687Z ```python
2025-08-17T20:49:17.5204008Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T20:49:17.5204417Z ```
2025-08-17T20:49:17.5204553Z 
2025-08-17T20:49:17.5204698Z Drop and recreate a SQL view atomically.
2025-08-17T20:49:17.5204979Z 
2025-08-17T20:49:17.5205101Z <a id="db.utils"></a>
2025-08-17T20:49:17.5205289Z 
2025-08-17T20:49:17.5205393Z # db.utils
2025-08-17T20:49:17.5205551Z 
2025-08-17T20:49:17.5205679Z <a id="price_importer"></a>
2025-08-17T20:49:17.5205911Z 
2025-08-17T20:49:17.5206034Z # price\_importer
2025-08-17T20:49:17.5206215Z 
2025-08-17T20:49:17.5206394Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T20:49:17.5206714Z 
2025-08-17T20:49:17.5206878Z # price\_importer.services\_common.dsn
2025-08-17T20:49:17.5207161Z 
2025-08-17T20:49:17.5207375Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T20:49:17.5207736Z 
2025-08-17T20:49:17.5207842Z #### build\_dsn
2025-08-17T20:49:17.5208019Z 
2025-08-17T20:49:17.5208132Z ```python
2025-08-17T20:49:17.5208429Z def build_dsn(sync: bool = True) -> str
2025-08-17T20:49:17.5208799Z ```
2025-08-17T20:49:17.5208936Z 
2025-08-17T20:49:17.5209045Z Return safe DSN.
2025-08-17T20:49:17.5209227Z 
2025-08-17T20:49:17.5209926Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T20:49:17.5210284Z 
2025-08-17T20:49:17.5210501Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T20:49:17.5210865Z 
2025-08-17T20:49:17.5211051Z # price\_importer.services\_common.models\_vendor
2025-08-17T20:49:17.5211379Z 
2025-08-17T20:49:17.5211562Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T20:49:17.5211871Z 
2025-08-17T20:49:17.5212024Z # price\_importer.services\_common.db\_url
2025-08-17T20:49:17.5212340Z 
2025-08-17T20:49:17.5212559Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T20:49:17.5212919Z 
2025-08-17T20:49:17.5213029Z #### build\_url
2025-08-17T20:49:17.5213201Z 
2025-08-17T20:49:17.5213580Z ```python
2025-08-17T20:49:17.5213954Z def build_url(async_: bool = True) -> str
2025-08-17T20:49:17.5214331Z ```
2025-08-17T20:49:17.5214458Z 
2025-08-17T20:49:17.5214608Z Return Postgres DSN from env or PG_* parts.
2025-08-17T20:49:17.5214868Z 
2025-08-17T20:49:17.5215030Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T20:49:17.5215321Z 
2025-08-17T20:49:17.5215468Z # price\_importer.services\_common.keepa
2025-08-17T20:49:17.5215734Z 
2025-08-17T20:49:17.5215900Z <a id="price_importer.services_common.llm"></a>
2025-08-17T20:49:17.5216221Z 
2025-08-17T20:49:17.5216371Z # price\_importer.services\_common.llm
2025-08-17T20:49:17.5216643Z 
2025-08-17T20:49:17.5216840Z <a id="price_importer.services_common.settings"></a>
2025-08-17T20:49:17.5217163Z 
2025-08-17T20:49:17.5217326Z # price\_importer.services\_common.settings
2025-08-17T20:49:17.5217631Z 
2025-08-17T20:49:17.5217803Z <a id="price_importer.services_common.db"></a>
2025-08-17T20:49:17.5218108Z 
2025-08-17T20:49:17.5218281Z # price\_importer.services\_common.db
2025-08-17T20:49:17.5218566Z 
2025-08-17T20:49:17.5218829Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T20:49:17.5219233Z 
2025-08-17T20:49:17.5219549Z #### build\_sqlalchemy\_url
2025-08-17T20:49:17.5219782Z 
2025-08-17T20:49:17.5219893Z ```python
2025-08-17T20:49:17.5220191Z def build_sqlalchemy_url() -> str
2025-08-17T20:49:17.5220550Z ```
2025-08-17T20:49:17.5220696Z 
2025-08-17T20:49:17.5220856Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T20:49:17.5221158Z 
2025-08-17T20:49:17.5221407Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T20:49:17.5221801Z 
2025-08-17T20:49:17.5221934Z #### build\_asyncpg\_dsn
2025-08-17T20:49:17.5222155Z 
2025-08-17T20:49:17.5222262Z ```python
2025-08-17T20:49:17.5222540Z def build_asyncpg_dsn() -> str
2025-08-17T20:49:17.5222881Z ```
2025-08-17T20:49:17.5223023Z 
2025-08-17T20:49:17.5223242Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T20:49:17.5223622Z 
2025-08-17T20:49:17.5224026Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T20:49:17.5224377Z 
2025-08-17T20:49:17.5224500Z #### refresh\_mvs
2025-08-17T20:49:17.5224681Z 
2025-08-17T20:49:17.5224793Z ```python
2025-08-17T20:49:17.5225123Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T20:49:17.5225536Z ```
2025-08-17T20:49:17.5225685Z 
2025-08-17T20:49:17.5225904Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T20:49:17.5226285Z 
2025-08-17T20:49:17.5226458Z <a id="price_importer.services_common"></a>
2025-08-17T20:49:17.5226762Z 
2025-08-17T20:49:17.5226909Z # price\_importer.services\_common
2025-08-17T20:49:17.5227174Z 
2025-08-17T20:49:17.5227358Z <a id="price_importer.services_common.base"></a>
2025-08-17T20:49:17.5227675Z 
2025-08-17T20:49:17.5227825Z # price\_importer.services\_common.base
2025-08-17T20:49:17.5228121Z 
2025-08-17T20:49:17.5228271Z <a id="price_importer.normaliser"></a>
2025-08-17T20:49:17.5228552Z 
2025-08-17T20:49:17.5228766Z # price\_importer.normaliser
2025-08-17T20:49:17.5229128Z 
2025-08-17T20:49:17.5229547Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T20:49:17.5230022Z 
2025-08-17T20:49:17.5230231Z # price\_importer.common.models\_vendor
2025-08-17T20:49:17.5230493Z 
2025-08-17T20:49:17.5230652Z <a id="price_importer.common.db_url"></a>
2025-08-17T20:49:17.5230951Z 
2025-08-17T20:49:17.5231093Z # price\_importer.common.db\_url
2025-08-17T20:49:17.5231344Z 
2025-08-17T20:49:17.5231526Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T20:49:17.5231845Z 
2025-08-17T20:49:17.5231954Z #### make\_dsn
2025-08-17T20:49:17.5232122Z 
2025-08-17T20:49:17.5232234Z ```python
2025-08-17T20:49:17.5232525Z def make_dsn(async_: bool = False) -> str
2025-08-17T20:49:17.5232914Z ```
2025-08-17T20:49:17.5233052Z 
2025-08-17T20:49:17.5233251Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T20:49:17.5233599Z 
2025-08-17T20:49:17.5233784Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T20:49:17.5234305Z 
2025-08-17T20:49:17.5234433Z #### build\_url
2025-08-17T20:49:17.5234603Z 
2025-08-17T20:49:17.5234710Z ```python
2025-08-17T20:49:17.5235015Z def build_url(async_: bool = False) -> str
2025-08-17T20:49:17.5235401Z ```
2025-08-17T20:49:17.5235549Z 
2025-08-17T20:49:17.5235758Z Return Postgres DSN built from environment variables.
2025-08-17T20:49:17.5236092Z 
2025-08-17T20:49:17.5236234Z <a id="price_importer.common"></a>
2025-08-17T20:49:17.5236502Z 
2025-08-17T20:49:17.5236630Z # price\_importer.common
2025-08-17T20:49:17.5236844Z 
2025-08-17T20:49:17.5236999Z <a id="price_importer.common.base"></a>
2025-08-17T20:49:17.5237273Z 
2025-08-17T20:49:17.5237401Z # price\_importer.common.base
2025-08-17T20:49:17.5237649Z 
2025-08-17T20:49:17.5237817Z <a id="price_importer.tests.conftest"></a>
2025-08-17T20:49:17.5238118Z 
2025-08-17T20:49:17.5238264Z # price\_importer.tests.conftest
2025-08-17T20:49:17.5238533Z 
2025-08-17T20:49:17.5238703Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T20:49:17.5239019Z 
2025-08-17T20:49:17.5239187Z # price\_importer.tests.test\_reader
2025-08-17T20:49:17.5239643Z 
2025-08-17T20:49:17.5239826Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T20:49:17.5240152Z 
2025-08-17T20:49:17.5240305Z # price\_importer.tests.test\_imports
2025-08-17T20:49:17.5240584Z 
2025-08-17T20:49:17.5240753Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T20:49:17.5241060Z 
2025-08-17T20:49:17.5241207Z # price\_importer.tests.test\_smoke
2025-08-17T20:49:17.5241462Z 
2025-08-17T20:49:17.5241646Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T20:49:17.5241942Z 
2025-08-17T20:49:17.5242100Z # price\_importer.tests.test\_normaliser
2025-08-17T20:49:17.5242396Z 
2025-08-17T20:49:17.5242540Z <a id="price_importer.tests"></a>
2025-08-17T20:49:17.5242798Z 
2025-08-17T20:49:17.5242926Z # price\_importer.tests
2025-08-17T20:49:17.5243139Z 
2025-08-17T20:49:17.5243281Z <a id="price_importer.reader"></a>
2025-08-17T20:49:17.5243535Z 
2025-08-17T20:49:17.5243676Z # price\_importer.reader
2025-08-17T20:49:17.5244074Z 
2025-08-17T20:49:17.5244223Z <a id="price_importer.repository"></a>
2025-08-17T20:49:17.5244499Z 
2025-08-17T20:49:17.5244634Z # price\_importer.repository
2025-08-17T20:49:17.5244856Z 
2025-08-17T20:49:17.5245043Z <a id="price_importer.import"></a>
2025-08-17T20:49:17.5245304Z 
2025-08-17T20:49:17.5245441Z # price\_importer.import
2025-08-17T20:49:17.5245601Z 
2025-08-17T20:49:17.5245678Z <a id="fees_h10"></a>
2025-08-17T20:49:17.5245790Z 
2025-08-17T20:49:17.5245852Z # fees\_h10
2025-08-17T20:49:17.5245946Z 
2025-08-17T20:49:17.5246019Z <a id="fees_h10.worker"></a>
2025-08-17T20:49:17.5246147Z 
2025-08-17T20:49:17.5246210Z # fees\_h10.worker
2025-08-17T20:49:17.5246319Z 
2025-08-17T20:49:17.5246414Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T20:49:17.5246584Z 
2025-08-17T20:49:17.5246662Z #### list\_active\_asins
2025-08-17T20:49:17.5246781Z 
2025-08-17T20:49:17.5246845Z ```python
2025-08-17T20:49:17.5247018Z def list_active_asins() -> list[str]
2025-08-17T20:49:17.5247243Z ```
2025-08-17T20:49:17.5247329Z 
2025-08-17T20:49:17.5247443Z Return known ASINs or an empty list if unavailable.
2025-08-17T20:49:17.5247638Z 
2025-08-17T20:49:17.5247720Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T20:49:17.5247884Z 
2025-08-17T20:49:17.5247963Z # fees\_h10.tests.test\_smoke
2025-08-17T20:49:17.5248099Z 
2025-08-17T20:49:17.5248179Z <a id="fees_h10.tests"></a>
2025-08-17T20:49:17.5248310Z 
2025-08-17T20:49:17.5248373Z # fees\_h10.tests
2025-08-17T20:49:17.5248480Z 
2025-08-17T20:49:17.5248555Z <a id="fees_h10.client"></a>
2025-08-17T20:49:17.5248684Z 
2025-08-17T20:49:17.5248748Z # fees\_h10.client
2025-08-17T20:49:17.5248856Z 
2025-08-17T20:49:17.5248934Z <a id="fees_h10.repository"></a>
2025-08-17T20:49:17.5249075Z 
2025-08-17T20:49:17.5249153Z # fees\_h10.repository
2025-08-17T20:49:17.5249266Z 
2025-08-17T20:49:17.5249333Z <a id="emailer"></a>
2025-08-17T20:49:17.5249697Z 
2025-08-17T20:49:17.5249762Z # emailer
2025-08-17T20:49:17.5250037Z 
2025-08-17T20:49:17.5250144Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T20:49:17.5250330Z 
2025-08-17T20:49:17.5250418Z # emailer.tests.test\_import\_emailer
2025-08-17T20:49:17.5250574Z 
2025-08-17T20:49:17.5250661Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T20:49:17.5250814Z 
2025-08-17T20:49:17.5250891Z # emailer.tests.test\_smoke
2025-08-17T20:49:17.5251055Z 
2025-08-17T20:49:17.5251130Z <a id="emailer.tests"></a>
2025-08-17T20:49:17.5251258Z 
2025-08-17T20:49:17.5251324Z # emailer.tests
2025-08-17T20:49:17.5251431Z 
2025-08-17T20:49:17.5251514Z <a id="emailer.generate_body"></a>
2025-08-17T20:49:17.5251665Z 
2025-08-17T20:49:17.5251745Z # emailer.generate\_body
2025-08-17T20:49:17.5251870Z 
2025-08-17T20:49:17.5251938Z <a id="llm_server"></a>
2025-08-17T20:49:17.5252052Z 
2025-08-17T20:49:17.5252124Z # llm\_server
2025-08-17T20:49:17.5252219Z 
2025-08-17T20:49:17.5252294Z <a id="llm_server.app"></a>
2025-08-17T20:49:17.5252429Z 
2025-08-17T20:49:17.5252493Z # llm\_server.app
2025-08-17T20:49:17.5252608Z 
