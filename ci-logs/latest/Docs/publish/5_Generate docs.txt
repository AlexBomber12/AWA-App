2025-08-19T15:26:20.7904446Z ##[group]Run pydoc-markdown
2025-08-19T15:26:20.7904760Z [36;1mpydoc-markdown[0m
2025-08-19T15:26:20.7945066Z shell: /usr/bin/bash -e {0}
2025-08-19T15:26:20.7945295Z env:
2025-08-19T15:26:20.7945541Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:26:20.7945946Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T15:26:20.7946326Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:26:20.7946662Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:26:20.7947012Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:26:20.7947352Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T15:26:20.7947641Z ##[endgroup]
2025-08-19T15:26:21.1614512Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T15:26:21.1615144Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T15:26:21.1615488Z In "pydoc-markdown.yml"
2025-08-19T15:26:21.1615791Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T15:26:21.1616387Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T15:26:21.1616946Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T15:26:21.1617328Z 
2025-08-19T15:26:21.5209812Z <a id="__init__"></a>
2025-08-19T15:26:21.5210456Z 
2025-08-19T15:26:21.5210600Z # \_\_init\_\_
2025-08-19T15:26:21.5210796Z 
2025-08-19T15:26:21.5210921Z <a id="api"></a>
2025-08-19T15:26:21.5211123Z 
2025-08-19T15:26:21.5211241Z # api
2025-08-19T15:26:21.5211401Z 
2025-08-19T15:26:21.5211538Z <a id="api.errors"></a>
2025-08-19T15:26:21.5211785Z 
2025-08-19T15:26:21.5211906Z # api.errors
2025-08-19T15:26:21.5212096Z 
2025-08-19T15:26:21.5212248Z <a id="api.sentry_config"></a>
2025-08-19T15:26:21.5212845Z 
2025-08-19T15:26:21.5212989Z # api.sentry\_config
2025-08-19T15:26:21.5213212Z 
2025-08-19T15:26:21.5213405Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T15:26:21.5213727Z 
2025-08-19T15:26:21.5213882Z # api.tests.test\_stats\_contracts
2025-08-19T15:26:21.5214223Z 
2025-08-19T15:26:21.5214390Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T15:26:21.5214705Z 
2025-08-19T15:26:21.5214861Z # api.tests.test\_sentry\_scrub
2025-08-19T15:26:21.5215139Z 
2025-08-19T15:26:21.5215313Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T15:26:21.5215640Z 
2025-08-19T15:26:21.5215799Z # api.tests.test\_roi\_basic\_auth
2025-08-19T15:26:21.5216080Z 
2025-08-19T15:26:21.5216242Z <a id="api.tests.test_errors_json"></a>
2025-08-19T15:26:21.5216559Z 
2025-08-19T15:26:21.5216707Z # api.tests.test\_errors\_json
2025-08-19T15:26:21.5217004Z 
2025-08-19T15:26:21.5217166Z <a id="api.tests.test_llm"></a>
2025-08-19T15:26:21.5217435Z 
2025-08-19T15:26:21.5217567Z # api.tests.test\_llm
2025-08-19T15:26:21.5217784Z 
2025-08-19T15:26:21.5217954Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T15:26:21.5218264Z 
2025-08-19T15:26:21.5218409Z # api.tests.test\_roi\_filters
2025-08-19T15:26:21.5218679Z 
2025-08-19T15:26:21.5218848Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T15:26:21.5219597Z 
2025-08-19T15:26:21.5219751Z # api.tests.test\_sentry\_event
2025-08-19T15:26:21.5220025Z 
2025-08-19T15:26:21.5220262Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T15:26:21.5220649Z 
2025-08-19T15:26:21.5220802Z ## DummyTransport Objects
2025-08-19T15:26:21.5221041Z 
2025-08-19T15:26:21.5221158Z ```python
2025-08-19T15:26:21.5221463Z class DummyTransport()
2025-08-19T15:26:21.5221786Z ```
2025-08-19T15:26:21.5221945Z 
2025-08-19T15:26:21.5222270Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T15:26:21.5222951Z 
2025-08-19T15:26:21.5223096Z #### capture\_envelope
2025-08-19T15:26:21.5223319Z 
2025-08-19T15:26:21.5223433Z ```python
2025-08-19T15:26:21.5223758Z def capture_envelope(envelope)
2025-08-19T15:26:21.5224127Z ```
2025-08-19T15:26:21.5224287Z 
2025-08-19T15:26:21.5224539Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T15:26:21.5224932Z 
2025-08-19T15:26:21.5225087Z <a id="api.tests.test_cors"></a>
2025-08-19T15:26:21.5225758Z 
2025-08-19T15:26:21.5225898Z # api.tests.test\_cors
2025-08-19T15:26:21.5226123Z 
2025-08-19T15:26:21.5226290Z <a id="api.tests.test_imports"></a>
2025-08-19T15:26:21.5226584Z 
2025-08-19T15:26:21.5226725Z # api.tests.test\_imports
2025-08-19T15:26:21.5226962Z 
2025-08-19T15:26:21.5227130Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T15:26:21.5227432Z 
2025-08-19T15:26:21.5227579Z # api.tests.test\_rate\_limit
2025-08-19T15:26:21.5227846Z 
2025-08-19T15:26:21.5228021Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T15:26:21.5228344Z 
2025-08-19T15:26:21.5228466Z #### app
2025-08-19T15:26:21.5228631Z 
2025-08-19T15:26:21.5228747Z noqa: E402
2025-08-19T15:26:21.5228912Z 
2025-08-19T15:26:21.5229085Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T15:26:21.5229394Z 
2025-08-19T15:26:21.5229547Z # api.tests.test\_entrypoint
2025-08-19T15:26:21.5229817Z 
2025-08-19T15:26:21.5229973Z <a id="api.tests.test_health"></a>
2025-08-19T15:26:21.5230271Z 
2025-08-19T15:26:21.5230418Z # api.tests.test\_health
2025-08-19T15:26:21.5230663Z 
2025-08-19T15:26:21.5230813Z <a id="api.tests.test_score"></a>
2025-08-19T15:26:21.5231093Z 
2025-08-19T15:26:21.5231247Z # api.tests.test\_score
2025-08-19T15:26:21.5231483Z 
2025-08-19T15:26:21.5231631Z <a id="api.logging_config"></a>
2025-08-19T15:26:21.5231901Z 
2025-08-19T15:26:21.5232032Z # api.logging\_config
2025-08-19T15:26:21.5232256Z 
2025-08-19T15:26:21.5232404Z <a id="api.migrations.env"></a>
2025-08-19T15:26:21.5232870Z 
2025-08-19T15:26:21.5233008Z # api.migrations.env
2025-08-19T15:26:21.5233223Z 
2025-08-19T15:26:21.5233449Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T15:26:21.5233832Z 
2025-08-19T15:26:21.5234032Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T15:26:21.5234385Z 
2025-08-19T15:26:21.5234591Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T15:26:21.5234946Z 
2025-08-19T15:26:21.5235126Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T15:26:21.5235481Z 
2025-08-19T15:26:21.5235768Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T15:26:21.5236224Z 
2025-08-19T15:26:21.5236492Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T15:26:21.5236905Z 
2025-08-19T15:26:21.5237137Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T15:26:21.5237537Z 
2025-08-19T15:26:21.5237735Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T15:26:21.5238077Z 
2025-08-19T15:26:21.5238469Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T15:26:21.5238869Z 
2025-08-19T15:26:21.5239077Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T15:26:21.5239431Z 
2025-08-19T15:26:21.5239675Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T15:26:21.5240065Z 
2025-08-19T15:26:21.5240272Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T15:26:21.5240639Z 
2025-08-19T15:26:21.5240860Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T15:26:21.5241521Z 
2025-08-19T15:26:21.5241731Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T15:26:21.5242198Z 
2025-08-19T15:26:21.5242602Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T15:26:21.5243018Z 
2025-08-19T15:26:21.5243220Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T15:26:21.5243569Z 
2025-08-19T15:26:21.5243835Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T15:26:21.5244254Z 
2025-08-19T15:26:21.5244495Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T15:26:21.5244888Z 
2025-08-19T15:26:21.5245130Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T15:26:21.5245536Z 
2025-08-19T15:26:21.5245751Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T15:26:21.5246110Z 
2025-08-19T15:26:21.5246363Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T15:26:21.5246774Z 
2025-08-19T15:26:21.5247003Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T15:26:21.5247647Z 
2025-08-19T15:26:21.5247860Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T15:26:21.5248230Z 
2025-08-19T15:26:21.5248405Z # api.migrations.versions.0001\_baseline
2025-08-19T15:26:21.5248729Z 
2025-08-19T15:26:21.5248902Z <a id="api.migrations.versions"></a>
2025-08-19T15:26:21.5249206Z 
2025-08-19T15:26:21.5249354Z # api.migrations.versions
2025-08-19T15:26:21.5249601Z 
2025-08-19T15:26:21.5249750Z <a id="api.migrations"></a>
2025-08-19T15:26:21.5250001Z 
2025-08-19T15:26:21.5250125Z # api.migrations
2025-08-19T15:26:21.5250352Z 
2025-08-19T15:26:21.5250475Z <a id="api.db"></a>
2025-08-19T15:26:21.5250680Z 
2025-08-19T15:26:21.5250802Z # api.db
2025-08-19T15:26:21.5250967Z 
2025-08-19T15:26:21.5251117Z <a id="api.routes.score"></a>
2025-08-19T15:26:21.5251386Z 
2025-08-19T15:26:21.5251526Z # api.routes.score
2025-08-19T15:26:21.5251728Z 
2025-08-19T15:26:21.5251874Z <a id="api.routes.stats"></a>
2025-08-19T15:26:21.5252143Z 
2025-08-19T15:26:21.5252267Z # api.routes.stats
2025-08-19T15:26:21.5252706Z 
2025-08-19T15:26:21.5252859Z <a id="api.routes.roi"></a>
2025-08-19T15:26:21.5253124Z 
2025-08-19T15:26:21.5253246Z # api.routes.roi
2025-08-19T15:26:21.5253445Z 
2025-08-19T15:26:21.5253603Z <a id="api.routes.health"></a>
2025-08-19T15:26:21.5253862Z 
2025-08-19T15:26:21.5253993Z # api.routes.health
2025-08-19T15:26:21.5254202Z 
2025-08-19T15:26:21.5254369Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T15:26:21.5254683Z 
2025-08-19T15:26:21.5254797Z #### MAX\_SKEW
2025-08-19T15:26:21.5254981Z 
2025-08-19T15:26:21.5255088Z seconds
2025-08-19T15:26:21.5255243Z 
2025-08-19T15:26:21.5255414Z <a id="api.routes.health.health"></a>
2025-08-19T15:26:21.5255754Z 
2025-08-19T15:26:21.5255865Z #### health
2025-08-19T15:26:21.5256032Z 
2025-08-19T15:26:21.5256155Z ```python
2025-08-19T15:26:21.5256504Z @router.get("/health", include_in_schema=False)
2025-08-19T15:26:21.5257246Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T15:26:21.5257868Z ```
2025-08-19T15:26:21.5258040Z 
2025-08-19T15:26:21.5258258Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T15:26:21.5258626Z 
2025-08-19T15:26:21.5258797Z <a id="api.routes.repository"></a>
2025-08-19T15:26:21.5259088Z 
2025-08-19T15:26:21.5259233Z # api.routes.repository
2025-08-19T15:26:21.5259480Z 
2025-08-19T15:26:21.5259614Z <a id="api.routes"></a>
2025-08-19T15:26:21.5259836Z 
2025-08-19T15:26:21.5259958Z # api.routes
2025-08-19T15:26:21.5260151Z 
2025-08-19T15:26:21.5260293Z <a id="api.models.fee"></a>
2025-08-19T15:26:21.5260541Z 
2025-08-19T15:26:21.5260668Z # api.models.fee
2025-08-19T15:26:21.5260864Z 
2025-08-19T15:26:21.5260995Z <a id="api.models"></a>
2025-08-19T15:26:21.5261213Z 
2025-08-19T15:26:21.5261339Z # api.models
2025-08-19T15:26:21.5261514Z 
2025-08-19T15:26:21.5261659Z <a id="api.roi_repository"></a>
2025-08-19T15:26:21.5261929Z 
2025-08-19T15:26:21.5262058Z # api.roi\_repository
2025-08-19T15:26:21.5262270Z 
2025-08-19T15:26:21.5262404Z <a id="api.main"></a>
2025-08-19T15:26:21.5263057Z 
2025-08-19T15:26:21.5263177Z # api.main
2025-08-19T15:26:21.5263352Z 
2025-08-19T15:26:21.5263502Z <a id="api.main.ready"></a>
2025-08-19T15:26:21.5263752Z 
2025-08-19T15:26:21.5263865Z #### ready
2025-08-19T15:26:21.5264038Z 
2025-08-19T15:26:21.5264152Z ```python
2025-08-19T15:26:21.5264642Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T15:26:21.5265458Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T15:26:21.5266116Z                                                                       str]
2025-08-19T15:26:21.5266519Z ```
2025-08-19T15:26:21.5266661Z 
2025-08-19T15:26:21.5266834Z Return 200 only when migrations are at head.
2025-08-19T15:26:21.5267152Z 
2025-08-19T15:26:21.5267290Z <a id="api.config"></a>
2025-08-19T15:26:21.5267519Z 
2025-08-19T15:26:21.5267634Z # api.config
2025-08-19T15:26:21.5267810Z 
2025-08-19T15:26:21.5267946Z <a id="api.security"></a>
2025-08-19T15:26:21.5268200Z 
2025-08-19T15:26:21.5268545Z # api.security
2025-08-19T15:26:21.5268735Z 
2025-08-19T15:26:21.5268861Z <a id="etl"></a>
2025-08-19T15:26:21.5269053Z 
2025-08-19T15:26:21.5269159Z # etl
2025-08-19T15:26:21.5269323Z 
2025-08-19T15:26:21.5269470Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T15:26:21.5269750Z 
2025-08-19T15:26:21.5269884Z # etl.fba\_fee\_ingestor
2025-08-19T15:26:21.5270123Z 
2025-08-19T15:26:21.5270276Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T15:26:21.5270550Z 
2025-08-19T15:26:21.5270691Z # etl.sp\_fees\_ingestor
2025-08-19T15:26:21.5270915Z 
2025-08-19T15:26:21.5271059Z <a id="etl.keepa_ingestor"></a>
2025-08-19T15:26:21.5271321Z 
2025-08-19T15:26:21.5271462Z # etl.keepa\_ingestor
2025-08-19T15:26:21.5271676Z 
2025-08-19T15:26:21.5271796Z <a id="etl.db"></a>
2025-08-19T15:26:21.5272000Z 
2025-08-19T15:26:21.5272113Z # etl.db
2025-08-19T15:26:21.5272270Z 
2025-08-19T15:26:21.5272609Z <a id="etl.dialects.schemas"></a>
2025-08-19T15:26:21.5272897Z 
2025-08-19T15:26:21.5273032Z # etl.dialects.schemas
2025-08-19T15:26:21.5273279Z 
2025-08-19T15:26:21.5273475Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T15:26:21.5273903Z 
2025-08-19T15:26:21.5274072Z # etl.dialects.amazon\_reimbursements
2025-08-19T15:26:21.5274380Z 
2025-08-19T15:26:21.5274564Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T15:26:21.5274887Z 
2025-08-19T15:26:21.5275039Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T15:26:21.5275341Z 
2025-08-19T15:26:21.5275510Z <a id="etl.dialects.test_generic"></a>
2025-08-19T15:26:21.5275835Z 
2025-08-19T15:26:21.5275995Z # etl.dialects.test\_generic
2025-08-19T15:26:21.5276254Z 
2025-08-19T15:26:21.5276416Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T15:26:21.5276726Z 
2025-08-19T15:26:21.5276882Z # etl.dialects.amazon\_returns
2025-08-19T15:26:21.5277144Z 
2025-08-19T15:26:21.5277326Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T15:26:21.5277655Z 
2025-08-19T15:26:21.5277819Z # etl.dialects.amazon\_fee\_preview
2025-08-19T15:26:21.5278110Z 
2025-08-19T15:26:21.5278317Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T15:26:21.5278691Z 
2025-08-19T15:26:21.5278861Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T15:26:21.5279177Z 
2025-08-19T15:26:21.5279373Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T15:26:21.5279707Z 
2025-08-19T15:26:21.5279868Z # etl.dialects.amazon\_settlements
2025-08-19T15:26:21.5280158Z 
2025-08-19T15:26:21.5280306Z <a id="etl.dialects"></a>
2025-08-19T15:26:21.5280541Z 
2025-08-19T15:26:21.5280659Z # etl.dialects
2025-08-19T15:26:21.5280853Z 
2025-08-19T15:26:21.5280978Z <a id="ingest"></a>
2025-08-19T15:26:21.5281178Z 
2025-08-19T15:26:21.5281295Z # ingest
2025-08-19T15:26:21.5281454Z 
2025-08-19T15:26:21.5281605Z <a id="ingest.maintenance"></a>
2025-08-19T15:26:21.5281875Z 
2025-08-19T15:26:21.5282015Z # ingest.maintenance
2025-08-19T15:26:21.5282229Z 
2025-08-19T15:26:21.5282375Z <a id="ingest.copy_loader"></a>
2025-08-19T15:26:21.5282823Z 
2025-08-19T15:26:21.5282961Z # ingest.copy\_loader
2025-08-19T15:26:21.5283185Z 
2025-08-19T15:26:21.5283599Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T15:26:21.5283962Z 
2025-08-19T15:26:21.5284095Z #### copy\_df\_via\_temp
2025-08-19T15:26:21.5284320Z 
2025-08-19T15:26:21.5284440Z ```python
2025-08-19T15:26:21.5284749Z def copy_df_via_temp(engine: Engine,
2025-08-19T15:26:21.5285189Z                      df: pd.DataFrame,
2025-08-19T15:26:21.5285604Z                      target_table: str,
2025-08-19T15:26:21.5286075Z                      *,
2025-08-19T15:26:21.5286448Z                      target_schema: Optional[str] = None,
2025-08-19T15:26:21.5286935Z                      columns: Sequence[str],
2025-08-19T15:26:21.5287434Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T15:26:21.5287947Z                      analyze_after: bool = False,
2025-08-19T15:26:21.5288448Z                      connection: Any | None = None) -> int
2025-08-19T15:26:21.5288878Z ```
2025-08-19T15:26:21.5289040Z 
2025-08-19T15:26:21.5289335Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T15:26:21.5290029Z 
2025-08-19T15:26:21.5290203Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T15:26:21.5290520Z 
2025-08-19T15:26:21.5290665Z # ingest.tests.test\_smoke
2025-08-19T15:26:21.5290911Z 
2025-08-19T15:26:21.5291053Z <a id="ingest.tests"></a>
2025-08-19T15:26:21.5291287Z 
2025-08-19T15:26:21.5291406Z # ingest.tests
2025-08-19T15:26:21.5291602Z 
2025-08-19T15:26:21.5291753Z <a id="ingest.upload_router"></a>
2025-08-19T15:26:21.5292037Z 
2025-08-19T15:26:21.5292170Z # ingest.upload\_router
2025-08-19T15:26:21.5292401Z 
2025-08-19T15:26:21.5292750Z <a id="ingest.email_watcher"></a>
2025-08-19T15:26:21.5293036Z 
2025-08-19T15:26:21.5293174Z # ingest.email\_watcher
2025-08-19T15:26:21.5293391Z 
2025-08-19T15:26:21.5293546Z <a id="ingest.email_watcher.main"></a>
2025-08-19T15:26:21.5293851Z 
2025-08-19T15:26:21.5293969Z #### main
2025-08-19T15:26:21.5294132Z 
2025-08-19T15:26:21.5294243Z ```python
2025-08-19T15:26:21.5294550Z def main() -> dict[str, str]
2025-08-19T15:26:21.5294916Z ```
2025-08-19T15:26:21.5295076Z 
2025-08-19T15:26:21.5295338Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T15:26:21.5295760Z 
2025-08-19T15:26:21.5296006Z Returns {"status": "success"} when processing completes.
2025-08-19T15:26:21.5296401Z 
2025-08-19T15:26:21.5296536Z <a id="ingest.tasks"></a>
2025-08-19T15:26:21.5296782Z 
2025-08-19T15:26:21.5296901Z # ingest.tasks
2025-08-19T15:26:21.5297085Z 
2025-08-19T15:26:21.5297258Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T15:26:21.5297590Z 
2025-08-19T15:26:21.5297720Z #### task\_import\_file
2025-08-19T15:26:21.5297943Z 
2025-08-19T15:26:21.5298063Z ```python
2025-08-19T15:26:21.5298441Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T15:26:21.5298977Z def task_import_file(self: Any,
2025-08-19T15:26:21.5299383Z                      uri: str,
2025-08-19T15:26:21.5299796Z                      report_type: str | None = None,
2025-08-19T15:26:21.5300300Z                      force: bool = False) -> dict[str, Any]
2025-08-19T15:26:21.5300749Z ```
2025-08-19T15:26:21.5300908Z 
2025-08-19T15:26:21.5301149Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T15:26:21.5301542Z 
2025-08-19T15:26:21.5301696Z <a id="ingest.celery_app"></a>
2025-08-19T15:26:21.5301958Z 
2025-08-19T15:26:21.5302089Z # ingest.celery\_app
2025-08-19T15:26:21.5302304Z 
2025-08-19T15:26:21.5302624Z <a id="ingest.ingest_router"></a>
2025-08-19T15:26:21.5302907Z 
2025-08-19T15:26:21.5303043Z # ingest.ingest\_router
2025-08-19T15:26:21.5303273Z 
2025-08-19T15:26:21.5303408Z <a id="logistics_etl"></a>
2025-08-19T15:26:21.5303643Z 
2025-08-19T15:26:21.5303768Z # logistics\_etl
2025-08-19T15:26:21.5303963Z 
2025-08-19T15:26:21.5304099Z Daily logistics ETL job.
2025-08-19T15:26:21.5304323Z 
2025-08-19T15:26:21.5304479Z <a id="logistics_etl.__main__"></a>
2025-08-19T15:26:21.5304763Z 
2025-08-19T15:26:21.5304901Z # logistics\_etl.\_\_main\_\_
2025-08-19T15:26:21.5305164Z 
2025-08-19T15:26:21.5305534Z <a id="logistics_etl.dsn"></a>
2025-08-19T15:26:21.5305794Z 
2025-08-19T15:26:21.5305932Z # logistics\_etl.dsn
2025-08-19T15:26:21.5306137Z 
2025-08-19T15:26:21.5306351Z Local DSN builder to avoid cross-service dependency.
2025-08-19T15:26:21.5306722Z 
2025-08-19T15:26:21.5306896Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T15:26:21.5307208Z 
2025-08-19T15:26:21.5307323Z #### build\_dsn
2025-08-19T15:26:21.5307520Z 
2025-08-19T15:26:21.5307632Z ```python
2025-08-19T15:26:21.5307948Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:26:21.5308366Z ```
2025-08-19T15:26:21.5308518Z 
2025-08-19T15:26:21.5308786Z Return a Postgres DSN assembled from environment variables.
2025-08-19T15:26:21.5309223Z 
2025-08-19T15:26:21.5309511Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T15:26:21.5310244Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T15:26:21.5310878Z error when any required variable is missing.
2025-08-19T15:26:21.5311215Z 
2025-08-19T15:26:21.5311618Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T15:26:21.5311941Z 
2025-08-19T15:26:21.5312101Z # logistics\_etl.tests.conftest
2025-08-19T15:26:21.5312370Z 
2025-08-19T15:26:21.5312747Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T15:26:21.5313103Z 
2025-08-19T15:26:21.5313277Z # logistics\_etl.tests.test\_repository
2025-08-19T15:26:21.5313585Z 
2025-08-19T15:26:21.5313756Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T15:26:21.5314083Z 
2025-08-19T15:26:21.5314241Z # logistics\_etl.tests.test\_cron
2025-08-19T15:26:21.5314525Z 
2025-08-19T15:26:21.5314725Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T15:26:21.5315073Z 
2025-08-19T15:26:21.5315231Z # logistics\_etl.tests.test\_imports
2025-08-19T15:26:21.5315537Z 
2025-08-19T15:26:21.5315711Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T15:26:21.5316066Z 
2025-08-19T15:26:21.5316221Z # logistics\_etl.tests.test\_smoke
2025-08-19T15:26:21.5316511Z 
2025-08-19T15:26:21.5316685Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T15:26:21.5317019Z 
2025-08-19T15:26:21.5317175Z # logistics\_etl.tests.test\_client
2025-08-19T15:26:21.5317459Z 
2025-08-19T15:26:21.5317605Z <a id="logistics_etl.tests"></a>
2025-08-19T15:26:21.5317881Z 
2025-08-19T15:26:21.5318014Z # logistics\_etl.tests
2025-08-19T15:26:21.5318236Z 
2025-08-19T15:26:21.5318379Z <a id="logistics_etl.flow"></a>
2025-08-19T15:26:21.5318645Z 
2025-08-19T15:26:21.5318772Z # logistics\_etl.flow
2025-08-19T15:26:21.5318991Z 
2025-08-19T15:26:21.5319153Z <a id="logistics_etl.client"></a>
2025-08-19T15:26:21.5319430Z 
2025-08-19T15:26:21.5319563Z # logistics\_etl.client
2025-08-19T15:26:21.5319788Z 
2025-08-19T15:26:21.5319937Z <a id="logistics_etl.cron"></a>
2025-08-19T15:26:21.5320199Z 
2025-08-19T15:26:21.5320334Z # logistics\_etl.cron
2025-08-19T15:26:21.5320561Z 
2025-08-19T15:26:21.5320704Z <a id="logistics_etl.db"></a>
2025-08-19T15:26:21.5320964Z 
2025-08-19T15:26:21.5321093Z # logistics\_etl.db
2025-08-19T15:26:21.5321305Z 
2025-08-19T15:26:21.5321473Z <a id="logistics_etl.repository"></a>
2025-08-19T15:26:21.5321776Z 
2025-08-19T15:26:21.5350674Z # logistics\_etl.repository
2025-08-19T15:26:21.5351003Z 
2025-08-19T15:26:21.5351122Z <a id="alert_bot"></a>
2025-08-19T15:26:21.5351320Z 
2025-08-19T15:26:21.5351427Z # alert\_bot
2025-08-19T15:26:21.5351584Z 
2025-08-19T15:26:21.5351720Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T15:26:21.5351998Z 
2025-08-19T15:26:21.5352121Z # alert\_bot.tests.test\_smoke
2025-08-19T15:26:21.5352362Z 
2025-08-19T15:26:21.5352765Z <a id="alert_bot.tests"></a>
2025-08-19T15:26:21.5352998Z 
2025-08-19T15:26:21.5353106Z # alert\_bot.tests
2025-08-19T15:26:21.5353282Z 
2025-08-19T15:26:21.5353409Z <a id="alert_bot.alert_bot"></a>
2025-08-19T15:26:21.5353633Z 
2025-08-19T15:26:21.5353749Z # alert\_bot.alert\_bot
2025-08-19T15:26:21.5353945Z 
2025-08-19T15:26:21.5354061Z <a id="alert_bot.rules"></a>
2025-08-19T15:26:21.5354280Z 
2025-08-19T15:26:21.5354394Z # alert\_bot.rules
2025-08-19T15:26:21.5354822Z 
2025-08-19T15:26:21.5354929Z <a id="common"></a>
2025-08-19T15:26:21.5355102Z 
2025-08-19T15:26:21.5355194Z # common
2025-08-19T15:26:21.5355327Z 
2025-08-19T15:26:21.5355443Z <a id="common.dsn"></a>
2025-08-19T15:26:21.5355634Z 
2025-08-19T15:26:21.5355729Z # common.dsn
2025-08-19T15:26:21.5355872Z 
2025-08-19T15:26:21.5356016Z <a id="common.dsn.build_dsn"></a>
2025-08-19T15:26:21.5356256Z 
2025-08-19T15:26:21.5356352Z #### build\_dsn
2025-08-19T15:26:21.5356503Z 
2025-08-19T15:26:21.5356602Z ```python
2025-08-19T15:26:21.5356870Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:26:21.5357212Z ```
2025-08-19T15:26:21.5357345Z 
2025-08-19T15:26:21.5357537Z Return a Postgres DSN, validating required variables.
2025-08-19T15:26:21.5357874Z 
2025-08-19T15:26:21.5358174Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T15:26:21.5358877Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T15:26:21.5359531Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T15:26:21.5360229Z missing.
2025-08-19T15:26:21.5360374Z 
2025-08-19T15:26:21.5360501Z <a id="common.models_vendor"></a>
2025-08-19T15:26:21.5360745Z 
2025-08-19T15:26:21.5360854Z # common.models\_vendor
2025-08-19T15:26:21.5361044Z 
2025-08-19T15:26:21.5361183Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T15:26:21.5361455Z 
2025-08-19T15:26:21.5361559Z ## Vendor Objects
2025-08-19T15:26:21.5361731Z 
2025-08-19T15:26:21.5361838Z ```python
2025-08-19T15:26:21.5362087Z class Vendor(Base)
2025-08-19T15:26:21.5362347Z ```
2025-08-19T15:26:21.5362624Z 
2025-08-19T15:26:21.5362745Z Vendor of inventory items.
2025-08-19T15:26:21.5362957Z 
2025-08-19T15:26:21.5363110Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T15:26:21.5363389Z 
2025-08-19T15:26:21.5363509Z ## VendorPrice Objects
2025-08-19T15:26:21.5363700Z 
2025-08-19T15:26:21.5363798Z ```python
2025-08-19T15:26:21.5364064Z class VendorPrice(Base)
2025-08-19T15:26:21.5364339Z ```
2025-08-19T15:26:21.5364474Z 
2025-08-19T15:26:21.5364637Z Association table linking vendors to pricing.
2025-08-19T15:26:21.5364919Z 
2025-08-19T15:26:21.5365035Z <a id="common.db_url"></a>
2025-08-19T15:26:21.5365235Z 
2025-08-19T15:26:21.5365335Z # common.db\_url
2025-08-19T15:26:21.5365490Z 
2025-08-19T15:26:21.5365624Z <a id="common.db_url.build_url"></a>
2025-08-19T15:26:21.5365863Z 
2025-08-19T15:26:21.5365959Z #### build\_url
2025-08-19T15:26:21.5366116Z 
2025-08-19T15:26:21.5366216Z ```python
2025-08-19T15:26:21.5366480Z def build_url(async_: bool = True) -> str
2025-08-19T15:26:21.5366829Z ```
2025-08-19T15:26:21.5366956Z 
2025-08-19T15:26:21.5367104Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:26:21.5367389Z 
2025-08-19T15:26:21.5367511Z <a id="common.keepa"></a>
2025-08-19T15:26:21.5367706Z 
2025-08-19T15:26:21.5367814Z # common.keepa
2025-08-19T15:26:21.5367979Z 
2025-08-19T15:26:21.5368089Z <a id="common.llm"></a>
2025-08-19T15:26:21.5368281Z 
2025-08-19T15:26:21.5368383Z # common.llm
2025-08-19T15:26:21.5368546Z 
2025-08-19T15:26:21.5368668Z <a id="common.settings"></a>
2025-08-19T15:26:21.5368897Z 
2025-08-19T15:26:21.5368996Z # common.settings
2025-08-19T15:26:21.5369154Z 
2025-08-19T15:26:21.5369263Z <a id="common.db"></a>
2025-08-19T15:26:21.5369436Z 
2025-08-19T15:26:21.5369527Z # common.db
2025-08-19T15:26:21.5369665Z 
2025-08-19T15:26:21.5369810Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T15:26:21.5370076Z 
2025-08-19T15:26:21.5370191Z #### build\_sqlalchemy\_url
2025-08-19T15:26:21.5370400Z 
2025-08-19T15:26:21.5370493Z ```python
2025-08-19T15:26:21.5370749Z def build_sqlalchemy_url() -> str
2025-08-19T15:26:21.5371070Z ```
2025-08-19T15:26:21.5371190Z 
2025-08-19T15:26:21.5371342Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:26:21.5371604Z 
2025-08-19T15:26:21.5371739Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T15:26:21.5372003Z 
2025-08-19T15:26:21.5372123Z #### build\_asyncpg\_dsn
2025-08-19T15:26:21.5372308Z 
2025-08-19T15:26:21.5372572Z ```python
2025-08-19T15:26:21.5373020Z def build_asyncpg_dsn() -> str
2025-08-19T15:26:21.5373314Z ```
2025-08-19T15:26:21.5373440Z 
2025-08-19T15:26:21.5373636Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:26:21.5373958Z 
2025-08-19T15:26:21.5374100Z <a id="common.db.refresh_mvs"></a>
2025-08-19T15:26:21.5374323Z 
2025-08-19T15:26:21.5374425Z #### refresh\_mvs
2025-08-19T15:26:21.5374598Z 
2025-08-19T15:26:21.5374695Z ```python
2025-08-19T15:26:21.5374991Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:26:21.5375382Z ```
2025-08-19T15:26:21.5375513Z 
2025-08-19T15:26:21.5375729Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:26:21.5376070Z 
2025-08-19T15:26:21.5376185Z <a id="common.config"></a>
2025-08-19T15:26:21.5376384Z 
2025-08-19T15:26:21.5376492Z # common.config
2025-08-19T15:26:21.5376651Z 
2025-08-19T15:26:21.5376759Z <a id="common.base"></a>
2025-08-19T15:26:21.5376954Z 
2025-08-19T15:26:21.5377049Z # common.base
2025-08-19T15:26:21.5377448Z 
2025-08-19T15:26:21.5377568Z <a id="common.base.Base"></a>
2025-08-19T15:26:21.5377790Z 
2025-08-19T15:26:21.5377889Z ## Base Objects
2025-08-19T15:26:21.5378044Z 
2025-08-19T15:26:21.5378142Z ```python
2025-08-19T15:26:21.5378391Z class Base(DeclarativeBase)
2025-08-19T15:26:21.5378686Z ```
2025-08-19T15:26:21.5378809Z 
2025-08-19T15:26:21.5378932Z Base class for SQLAlchemy models.
2025-08-19T15:26:21.5379178Z 
2025-08-19T15:26:21.5379286Z <a id="repricer"></a>
2025-08-19T15:26:21.5379460Z 
2025-08-19T15:26:21.5379554Z # repricer
2025-08-19T15:26:21.5379699Z 
2025-08-19T15:26:21.5379832Z <a id="repricer.app.schemas"></a>
2025-08-19T15:26:21.5380066Z 
2025-08-19T15:26:21.5380189Z # repricer.app.schemas
2025-08-19T15:26:21.5380370Z 
2025-08-19T15:26:21.5380489Z <a id="repricer.app.deps"></a>
2025-08-19T15:26:21.5380719Z 
2025-08-19T15:26:21.5380828Z # repricer.app.deps
2025-08-19T15:26:21.5381104Z 
2025-08-19T15:26:21.5381282Z Placeholder module for Keepa / SP-API clients.
2025-08-19T15:26:21.5381583Z 
2025-08-19T15:26:21.5381715Z <a id="repricer.app.logic"></a>
2025-08-19T15:26:21.5381934Z 
2025-08-19T15:26:21.5382051Z # repricer.app.logic
2025-08-19T15:26:21.5382228Z 
2025-08-19T15:26:21.5382376Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T15:26:21.5382801Z 
2025-08-19T15:26:21.5382902Z #### MIN\_MARGIN
2025-08-19T15:26:21.5383060Z 
2025-08-19T15:26:21.5383155Z 15 % ROI
2025-08-19T15:26:21.5383293Z 
2025-08-19T15:26:21.5383453Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T15:26:21.5383723Z 
2025-08-19T15:26:21.5383827Z #### compute\_price
2025-08-19T15:26:21.5383988Z 
2025-08-19T15:26:21.5384080Z ```python
2025-08-19T15:26:21.5384459Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T15:26:21.5384914Z ```
2025-08-19T15:26:21.5385044Z 
2025-08-19T15:26:21.5385207Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T15:26:21.5385639Z Replace with real competitive logic later.
2025-08-19T15:26:21.5385954Z 
2025-08-19T15:26:21.5386078Z <a id="repricer.app.main"></a>
2025-08-19T15:26:21.5386309Z 
2025-08-19T15:26:21.5386426Z # repricer.app.main
2025-08-19T15:26:21.5386593Z 
2025-08-19T15:26:21.5386712Z <a id="repricer.app"></a>
2025-08-19T15:26:21.5386917Z 
2025-08-19T15:26:21.5387023Z # repricer.app
2025-08-19T15:26:21.5387179Z 
2025-08-19T15:26:21.5387321Z <a id="repricer.tests.test_imports"></a>
2025-08-19T15:26:21.5387589Z 
2025-08-19T15:26:21.5387719Z # repricer.tests.test\_imports
2025-08-19T15:26:21.5387939Z 
2025-08-19T15:26:21.5388079Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T15:26:21.5388331Z 
2025-08-19T15:26:21.5388459Z # repricer.tests.test\_smoke
2025-08-19T15:26:21.5388679Z 
2025-08-19T15:26:21.5388798Z <a id="repricer.tests"></a>
2025-08-19T15:26:21.5389003Z 
2025-08-19T15:26:21.5389113Z # repricer.tests
2025-08-19T15:26:21.5389285Z 
2025-08-19T15:26:21.5389383Z <a id="db"></a>
2025-08-19T15:26:21.5389537Z 
2025-08-19T15:26:21.5389633Z # db
2025-08-19T15:26:21.5389757Z 
2025-08-19T15:26:21.5389871Z <a id="db.utils.views"></a>
2025-08-19T15:26:21.5390256Z 
2025-08-19T15:26:21.5390363Z # db.utils.views
2025-08-19T15:26:21.5390518Z 
2025-08-19T15:26:21.5390658Z <a id="db.utils.views.replace_view"></a>
2025-08-19T15:26:21.5390918Z 
2025-08-19T15:26:21.5391019Z #### replace\_view
2025-08-19T15:26:21.5391185Z 
2025-08-19T15:26:21.5391279Z ```python
2025-08-19T15:26:21.5391570Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T15:26:21.5391946Z ```
2025-08-19T15:26:21.5392072Z 
2025-08-19T15:26:21.5392208Z Drop and recreate a SQL view atomically.
2025-08-19T15:26:21.5392646Z 
2025-08-19T15:26:21.5392767Z <a id="db.utils"></a>
2025-08-19T15:26:21.5392943Z 
2025-08-19T15:26:21.5393038Z # db.utils
2025-08-19T15:26:21.5393178Z 
2025-08-19T15:26:21.5393296Z <a id="price_importer"></a>
2025-08-19T15:26:21.5393506Z 
2025-08-19T15:26:21.5393614Z # price\_importer
2025-08-19T15:26:21.5393781Z 
2025-08-19T15:26:21.5393941Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T15:26:21.5394229Z 
2025-08-19T15:26:21.5394371Z # price\_importer.services\_common.dsn
2025-08-19T15:26:21.5394803Z 
2025-08-19T15:26:21.5394997Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T15:26:21.5395317Z 
2025-08-19T15:26:21.5395419Z #### build\_dsn
2025-08-19T15:26:21.5395572Z 
2025-08-19T15:26:21.5395671Z ```python
2025-08-19T15:26:21.5395934Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:26:21.5396286Z ```
2025-08-19T15:26:21.5396412Z 
2025-08-19T15:26:21.5396510Z Return safe DSN.
2025-08-19T15:26:21.5396672Z 
2025-08-19T15:26:21.5397133Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T15:26:21.5397437Z 
2025-08-19T15:26:21.5397627Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T15:26:21.5397947Z 
2025-08-19T15:26:21.5398119Z # price\_importer.services\_common.models\_vendor
2025-08-19T15:26:21.5398416Z 
2025-08-19T15:26:21.5398579Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T15:26:21.5398875Z 
2025-08-19T15:26:21.5399018Z # price\_importer.services\_common.db\_url
2025-08-19T15:26:21.5399307Z 
2025-08-19T15:26:21.5399502Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T15:26:21.5399838Z 
2025-08-19T15:26:21.5399939Z #### build\_url
2025-08-19T15:26:21.5400098Z 
2025-08-19T15:26:21.5400199Z ```python
2025-08-19T15:26:21.5400482Z def build_url(async_: bool = True) -> str
2025-08-19T15:26:21.5400831Z ```
2025-08-19T15:26:21.5400954Z 
2025-08-19T15:26:21.5401107Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:26:21.5401373Z 
2025-08-19T15:26:21.5401539Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T15:26:21.5401831Z 
2025-08-19T15:26:21.5401974Z # price\_importer.services\_common.keepa
2025-08-19T15:26:21.5402231Z 
2025-08-19T15:26:21.5402393Z <a id="price_importer.services_common.llm"></a>
2025-08-19T15:26:21.5402855Z 
2025-08-19T15:26:21.5403002Z # price\_importer.services\_common.llm
2025-08-19T15:26:21.5403260Z 
2025-08-19T15:26:21.5403441Z <a id="price_importer.services_common.settings"></a>
2025-08-19T15:26:21.5403750Z 
2025-08-19T15:26:21.5403909Z # price\_importer.services\_common.settings
2025-08-19T15:26:21.5404191Z 
2025-08-19T15:26:21.5404346Z <a id="price_importer.services_common.db"></a>
2025-08-19T15:26:21.5404622Z 
2025-08-19T15:26:21.5404761Z # price\_importer.services\_common.db
2025-08-19T15:26:21.5405012Z 
2025-08-19T15:26:21.5405249Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T15:26:21.5405612Z 
2025-08-19T15:26:21.5405737Z #### build\_sqlalchemy\_url
2025-08-19T15:26:21.5405937Z 
2025-08-19T15:26:21.5406033Z ```python
2025-08-19T15:26:21.5406291Z def build_sqlalchemy_url() -> str
2025-08-19T15:26:21.5406602Z ```
2025-08-19T15:26:21.5406736Z 
2025-08-19T15:26:21.5406882Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:26:21.5407152Z 
2025-08-19T15:26:21.5407382Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T15:26:21.5407728Z 
2025-08-19T15:26:21.5407843Z #### build\_asyncpg\_dsn
2025-08-19T15:26:21.5408038Z 
2025-08-19T15:26:21.5408143Z ```python
2025-08-19T15:26:21.5408580Z def build_asyncpg_dsn() -> str
2025-08-19T15:26:21.5408877Z ```
2025-08-19T15:26:21.5409002Z 
2025-08-19T15:26:21.5409190Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:26:21.5409519Z 
2025-08-19T15:26:21.5409712Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T15:26:21.5410027Z 
2025-08-19T15:26:21.5410131Z #### refresh\_mvs
2025-08-19T15:26:21.5410292Z 
2025-08-19T15:26:21.5410387Z ```python
2025-08-19T15:26:21.5410693Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:26:21.5411066Z ```
2025-08-19T15:26:21.5411206Z 
2025-08-19T15:26:21.5411414Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:26:21.5411753Z 
2025-08-19T15:26:21.5411911Z <a id="price_importer.services_common"></a>
2025-08-19T15:26:21.5412186Z 
2025-08-19T15:26:21.5412318Z # price\_importer.services\_common
2025-08-19T15:26:21.5412705Z 
2025-08-19T15:26:21.5412878Z <a id="price_importer.services_common.base"></a>
2025-08-19T15:26:21.5413336Z 
2025-08-19T15:26:21.5413474Z # price\_importer.services\_common.base
2025-08-19T15:26:21.5413743Z 
2025-08-19T15:26:21.5413878Z <a id="price_importer.normaliser"></a>
2025-08-19T15:26:21.5414123Z 
2025-08-19T15:26:21.5414254Z # price\_importer.normaliser
2025-08-19T15:26:21.5414464Z 
2025-08-19T15:26:21.5414619Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T15:26:21.5414898Z 
2025-08-19T15:26:21.5415039Z # price\_importer.common.models\_vendor
2025-08-19T15:26:21.5415285Z 
2025-08-19T15:26:21.5415419Z <a id="price_importer.common.db_url"></a>
2025-08-19T15:26:21.5415676Z 
2025-08-19T15:26:21.5415799Z # price\_importer.common.db\_url
2025-08-19T15:26:21.5416019Z 
2025-08-19T15:26:21.5416182Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T15:26:21.5416485Z 
2025-08-19T15:26:21.5416582Z #### make\_dsn
2025-08-19T15:26:21.5416731Z 
2025-08-19T15:26:21.5416834Z ```python
2025-08-19T15:26:21.5417096Z def make_dsn(async_: bool = False) -> str
2025-08-19T15:26:21.5417449Z ```
2025-08-19T15:26:21.5417576Z 
2025-08-19T15:26:21.5417762Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T15:26:21.5418081Z 
2025-08-19T15:26:21.5418251Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T15:26:21.5418555Z 
2025-08-19T15:26:21.5418662Z #### build\_url
2025-08-19T15:26:21.5418824Z 
2025-08-19T15:26:21.5418921Z ```python
2025-08-19T15:26:21.5419210Z def build_url(async_: bool = False) -> str
2025-08-19T15:26:21.5419553Z ```
2025-08-19T15:26:21.5419694Z 
2025-08-19T15:26:21.5419897Z Return Postgres DSN built from environment variables.
2025-08-19T15:26:21.5420218Z 
2025-08-19T15:26:21.5420360Z <a id="price_importer.common"></a>
2025-08-19T15:26:21.5420605Z 
2025-08-19T15:26:21.5420800Z # price\_importer.common
2025-08-19T15:26:21.5421003Z 
2025-08-19T15:26:21.5421150Z <a id="price_importer.common.base"></a>
2025-08-19T15:26:21.5421400Z 
2025-08-19T15:26:21.5421529Z # price\_importer.common.base
2025-08-19T15:26:21.5421765Z 
2025-08-19T15:26:21.5421925Z <a id="price_importer.tests.conftest"></a>
2025-08-19T15:26:21.5422202Z 
2025-08-19T15:26:21.5422332Z # price\_importer.tests.conftest
2025-08-19T15:26:21.5422712Z 
2025-08-19T15:26:21.5422871Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T15:26:21.5423149Z 
2025-08-19T15:26:21.5423288Z # price\_importer.tests.test\_reader
2025-08-19T15:26:21.5423530Z 
2025-08-19T15:26:21.5423690Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T15:26:21.5423969Z 
2025-08-19T15:26:21.5424107Z # price\_importer.tests.test\_imports
2025-08-19T15:26:21.5424361Z 
2025-08-19T15:26:21.5424519Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T15:26:21.5424782Z 
2025-08-19T15:26:21.5424921Z # price\_importer.tests.test\_smoke
2025-08-19T15:26:21.5425168Z 
2025-08-19T15:26:21.5425340Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T15:26:21.5425654Z 
2025-08-19T15:26:21.5425807Z # price\_importer.tests.test\_normaliser
2025-08-19T15:26:21.5426073Z 
2025-08-19T15:26:21.5426198Z <a id="price_importer.tests"></a>
2025-08-19T15:26:21.5426610Z 
2025-08-19T15:26:21.5426732Z # price\_importer.tests
2025-08-19T15:26:21.5426920Z 
2025-08-19T15:26:21.5427049Z <a id="price_importer.reader"></a>
2025-08-19T15:26:21.5427275Z 
2025-08-19T15:26:21.5427402Z # price\_importer.reader
2025-08-19T15:26:21.5427595Z 
2025-08-19T15:26:21.5427733Z <a id="price_importer.repository"></a>
2025-08-19T15:26:21.5427998Z 
2025-08-19T15:26:21.5428123Z # price\_importer.repository
2025-08-19T15:26:21.5428334Z 
2025-08-19T15:26:21.5428471Z <a id="price_importer.import"></a>
2025-08-19T15:26:21.5428696Z 
2025-08-19T15:26:21.5428813Z # price\_importer.import
2025-08-19T15:26:21.5429012Z 
2025-08-19T15:26:21.5429124Z <a id="fees_h10"></a>
2025-08-19T15:26:21.5429297Z 
2025-08-19T15:26:21.5429394Z # fees\_h10
2025-08-19T15:26:21.5429538Z 
2025-08-19T15:26:21.5429650Z <a id="fees_h10.worker"></a>
2025-08-19T15:26:21.5429854Z 
2025-08-19T15:26:21.5429955Z # fees\_h10.worker
2025-08-19T15:26:21.5430123Z 
2025-08-19T15:26:21.5430435Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T15:26:21.5430719Z 
2025-08-19T15:26:21.5430836Z #### list\_active\_asins
2025-08-19T15:26:21.5431019Z 
2025-08-19T15:26:21.5431112Z ```python
2025-08-19T15:26:21.5431383Z def list_active_asins() -> list[str]
2025-08-19T15:26:21.5431711Z ```
2025-08-19T15:26:21.5431848Z 
2025-08-19T15:26:21.5432019Z Return known ASINs or an empty list if unavailable.
2025-08-19T15:26:21.5432327Z 
2025-08-19T15:26:21.5432645Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T15:26:21.5432899Z 
2025-08-19T15:26:21.5433020Z # fees\_h10.tests.test\_smoke
2025-08-19T15:26:21.5433231Z 
2025-08-19T15:26:21.5433353Z <a id="fees_h10.tests"></a>
2025-08-19T15:26:21.5433560Z 
2025-08-19T15:26:21.5433659Z # fees\_h10.tests
2025-08-19T15:26:21.5433830Z 
2025-08-19T15:26:21.5433944Z <a id="fees_h10.client"></a>
2025-08-19T15:26:21.5434153Z 
2025-08-19T15:26:21.5434256Z # fees\_h10.client
2025-08-19T15:26:21.5434426Z 
2025-08-19T15:26:21.5434549Z <a id="fees_h10.repository"></a>
2025-08-19T15:26:21.5434781Z 
2025-08-19T15:26:21.5434895Z # fees\_h10.repository
2025-08-19T15:26:21.5435071Z 
2025-08-19T15:26:21.5435175Z <a id="emailer"></a>
2025-08-19T15:26:21.5435348Z 
2025-08-19T15:26:21.5435439Z # emailer
2025-08-19T15:26:21.5435579Z 
2025-08-19T15:26:21.5435746Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T15:26:21.5436029Z 
2025-08-19T15:26:21.5436162Z # emailer.tests.test\_import\_emailer
2025-08-19T15:26:21.5436412Z 
2025-08-19T15:26:21.5436546Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T15:26:21.5436785Z 
2025-08-19T15:26:21.5436903Z # emailer.tests.test\_smoke
2025-08-19T15:26:21.5437119Z 
2025-08-19T15:26:21.5437234Z <a id="emailer.tests"></a>
2025-08-19T15:26:21.5437436Z 
2025-08-19T15:26:21.5437539Z # emailer.tests
2025-08-19T15:26:21.5437707Z 
2025-08-19T15:26:21.5437835Z <a id="emailer.generate_body"></a>
2025-08-19T15:26:21.5438076Z 
2025-08-19T15:26:21.5438200Z # emailer.generate\_body
2025-08-19T15:26:21.5438401Z 
2025-08-19T15:26:21.5438511Z <a id="llm_server"></a>
2025-08-19T15:26:21.5438699Z 
2025-08-19T15:26:21.5438807Z # llm\_server
2025-08-19T15:26:21.5438959Z 
2025-08-19T15:26:21.5439075Z <a id="llm_server.app"></a>
2025-08-19T15:26:21.5439284Z 
2025-08-19T15:26:21.5439384Z # llm\_server.app
2025-08-19T15:26:21.5439546Z 
