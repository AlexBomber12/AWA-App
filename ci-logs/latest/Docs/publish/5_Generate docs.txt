2025-08-17T16:44:37.6790325Z ##[group]Run pydoc-markdown
2025-08-17T16:44:37.6790680Z [36;1mpydoc-markdown[0m
2025-08-17T16:44:37.6831928Z shell: /usr/bin/bash -e {0}
2025-08-17T16:44:37.6832218Z env:
2025-08-17T16:44:37.6832512Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:44:37.6833035Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T16:44:37.6833542Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:44:37.6833982Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:44:37.6834439Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:44:37.6834889Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T16:44:37.6835261Z ##[endgroup]
2025-08-17T16:44:38.0485314Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T16:44:38.0486014Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T16:44:38.0486488Z In "pydoc-markdown.yml"
2025-08-17T16:44:38.0486904Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T16:44:38.0487607Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T16:44:38.0488374Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T16:44:38.0488908Z 
2025-08-17T16:44:38.2762773Z <a id="__init__"></a>
2025-08-17T16:44:38.2763201Z 
2025-08-17T16:44:38.2763387Z # \_\_init\_\_
2025-08-17T16:44:38.2763623Z 
2025-08-17T16:44:38.2763783Z <a id="api"></a>
2025-08-17T16:44:38.2764028Z 
2025-08-17T16:44:38.2764169Z # api
2025-08-17T16:44:38.2764368Z 
2025-08-17T16:44:38.2764546Z <a id="api.tests.test_llm"></a>
2025-08-17T16:44:38.2764763Z 
2025-08-17T16:44:38.2764872Z # api.tests.test\_llm
2025-08-17T16:44:38.2765054Z 
2025-08-17T16:44:38.2765176Z <a id="api.tests.test_imports"></a>
2025-08-17T16:44:38.2765409Z 
2025-08-17T16:44:38.2765527Z # api.tests.test\_imports
2025-08-17T16:44:38.2765722Z 
2025-08-17T16:44:38.2765855Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T16:44:38.2766110Z 
2025-08-17T16:44:38.2766225Z # api.tests.test\_entrypoint
2025-08-17T16:44:38.2766468Z 
2025-08-17T16:44:38.2766592Z <a id="api.tests.test_health"></a>
2025-08-17T16:44:38.2766823Z 
2025-08-17T16:44:38.2766932Z # api.tests.test\_health
2025-08-17T16:44:38.2767114Z 
2025-08-17T16:44:38.2767234Z <a id="api.migrations.env"></a>
2025-08-17T16:44:38.2767528Z 
2025-08-17T16:44:38.2767635Z # api.migrations.env
2025-08-17T16:44:38.2767807Z 
2025-08-17T16:44:38.2767979Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T16:44:38.2768274Z 
2025-08-17T16:44:38.2768425Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T16:44:38.2768704Z 
2025-08-17T16:44:38.2768857Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T16:44:38.2769133Z 
2025-08-17T16:44:38.2769276Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T16:44:38.2769645Z 
2025-08-17T16:44:38.2769866Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T16:44:38.2770224Z 
2025-08-17T16:44:38.2770417Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T16:44:38.2771027Z 
2025-08-17T16:44:38.2771205Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T16:44:38.2771508Z 
2025-08-17T16:44:38.2771658Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T16:44:38.2771923Z 
2025-08-17T16:44:38.2772095Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T16:44:38.2772381Z 
2025-08-17T16:44:38.2772523Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T16:44:38.2772791Z 
2025-08-17T16:44:38.2772964Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T16:44:38.2773262Z 
2025-08-17T16:44:38.2773421Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T16:44:38.2773695Z 
2025-08-17T16:44:38.2773859Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T16:44:38.2774145Z 
2025-08-17T16:44:38.2774301Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T16:44:38.2774568Z 
2025-08-17T16:44:38.2774741Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T16:44:38.2775258Z 
2025-08-17T16:44:38.2775408Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T16:44:38.2775671Z 
2025-08-17T16:44:38.2775851Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T16:44:38.2776144Z 
2025-08-17T16:44:38.2776295Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T16:44:38.2776572Z 
2025-08-17T16:44:38.2776724Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T16:44:38.2776995Z 
2025-08-17T16:44:38.2777129Z # api.migrations.versions.0001\_baseline
2025-08-17T16:44:38.2777384Z 
2025-08-17T16:44:38.2777520Z <a id="api.migrations.versions"></a>
2025-08-17T16:44:38.2777753Z 
2025-08-17T16:44:38.2777875Z # api.migrations.versions
2025-08-17T16:44:38.2778043Z 
2025-08-17T16:44:38.2778134Z <a id="api.migrations"></a>
2025-08-17T16:44:38.2778301Z 
2025-08-17T16:44:38.2778383Z # api.migrations
2025-08-17T16:44:38.2778509Z 
2025-08-17T16:44:38.2778590Z <a id="api.db"></a>
2025-08-17T16:44:38.2778724Z 
2025-08-17T16:44:38.2778813Z # api.db
2025-08-17T16:44:38.2778918Z 
2025-08-17T16:44:38.2779017Z <a id="api.routes.stats"></a>
2025-08-17T16:44:38.2779185Z 
2025-08-17T16:44:38.2779267Z # api.routes.stats
2025-08-17T16:44:38.2779525Z 
2025-08-17T16:44:38.2779711Z <a id="api.routes.stats.kpi"></a>
2025-08-17T16:44:38.2779922Z 
2025-08-17T16:44:38.2779997Z #### kpi
2025-08-17T16:44:38.2780106Z 
2025-08-17T16:44:38.2780183Z ```python
2025-08-17T16:44:38.2780384Z @router.get("/stats/kpi")
2025-08-17T16:44:38.2780675Z def kpi() -> List[Dict[str, int]]
2025-08-17T16:44:38.2780934Z ```
2025-08-17T16:44:38.2781033Z 
2025-08-17T16:44:38.2781127Z Return KPI metrics (mock).
2025-08-17T16:44:38.2781286Z 
2025-08-17T16:44:38.2781411Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T16:44:38.2781629Z 
2025-08-17T16:44:38.2781710Z #### roi\_by\_vendor
2025-08-17T16:44:38.2781849Z 
2025-08-17T16:44:38.2781926Z ```python
2025-08-17T16:44:38.2782131Z @router.get("/stats/roi_by_vendor")
2025-08-17T16:44:38.2782436Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T16:44:38.2782731Z ```
2025-08-17T16:44:38.2782828Z 
2025-08-17T16:44:38.2782925Z Return ROI percent by vendor.
2025-08-17T16:44:38.2783095Z 
2025-08-17T16:44:38.2783212Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T16:44:38.2783418Z 
2025-08-17T16:44:38.2783495Z #### roi\_trend
2025-08-17T16:44:38.2783620Z 
2025-08-17T16:44:38.2783696Z ```python
2025-08-17T16:44:38.2783915Z @router.get("/stats/roi_trend")
2025-08-17T16:44:38.2784245Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T16:44:38.2784535Z ```
2025-08-17T16:44:38.2784629Z 
2025-08-17T16:44:38.2784718Z Return 30-day ROI trend.
2025-08-17T16:44:38.2784873Z 
2025-08-17T16:44:38.2784965Z <a id="api.routes.roi"></a>
2025-08-17T16:44:38.2785124Z 
2025-08-17T16:44:38.2785212Z # api.routes.roi
2025-08-17T16:44:38.2785336Z 
2025-08-17T16:44:38.2785431Z <a id="api.routes.health"></a>
2025-08-17T16:44:38.2785602Z 
2025-08-17T16:44:38.2785693Z # api.routes.health
2025-08-17T16:44:38.2785824Z 
2025-08-17T16:44:38.2785935Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T16:44:38.2786282Z 
2025-08-17T16:44:38.2786358Z #### MAX\_SKEW
2025-08-17T16:44:38.2786474Z 
2025-08-17T16:44:38.2786548Z seconds
2025-08-17T16:44:38.2786656Z 
2025-08-17T16:44:38.2786765Z <a id="api.routes.health.health"></a>
2025-08-17T16:44:38.2786962Z 
2025-08-17T16:44:38.2787044Z #### health
2025-08-17T16:44:38.2787149Z 
2025-08-17T16:44:38.2787225Z ```python
2025-08-17T16:44:38.2787459Z @router.get("/health", include_in_schema=False)
2025-08-17T16:44:38.2788006Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T16:44:38.2788402Z ```
2025-08-17T16:44:38.2788491Z 
2025-08-17T16:44:38.2788623Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T16:44:38.2788847Z 
2025-08-17T16:44:38.2788942Z <a id="api.routes.repository"></a>
2025-08-17T16:44:38.2789118Z 
2025-08-17T16:44:38.2789209Z # api.routes.repository
2025-08-17T16:44:38.2789517Z 
2025-08-17T16:44:38.2789636Z <a id="api.routes"></a>
2025-08-17T16:44:38.2789938Z 
2025-08-17T16:44:38.2790012Z # api.routes
2025-08-17T16:44:38.2790123Z 
2025-08-17T16:44:38.2790209Z <a id="api.models.fee"></a>
2025-08-17T16:44:38.2790370Z 
2025-08-17T16:44:38.2790445Z # api.models.fee
2025-08-17T16:44:38.2790560Z 
2025-08-17T16:44:38.2790648Z <a id="api.models"></a>
2025-08-17T16:44:38.2790777Z 
2025-08-17T16:44:38.2790848Z # api.models
2025-08-17T16:44:38.2790957Z 
2025-08-17T16:44:38.2791045Z <a id="api.roi_repository"></a>
2025-08-17T16:44:38.2791203Z 
2025-08-17T16:44:38.2791281Z # api.roi\_repository
2025-08-17T16:44:38.2791412Z 
2025-08-17T16:44:38.2791488Z <a id="api.main"></a>
2025-08-17T16:44:38.2791612Z 
2025-08-17T16:44:38.2791685Z # api.main
2025-08-17T16:44:38.2791784Z 
2025-08-17T16:44:38.2791866Z <a id="api.main.ready"></a>
2025-08-17T16:44:38.2792012Z 
2025-08-17T16:44:38.2792085Z #### ready
2025-08-17T16:44:38.2792183Z 
2025-08-17T16:44:38.2792251Z ```python
2025-08-17T16:44:38.2792546Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T16:44:38.2793056Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T16:44:38.2793468Z                                                                       str]
2025-08-17T16:44:38.2793735Z ```
2025-08-17T16:44:38.2793827Z 
2025-08-17T16:44:38.2793935Z Return 200 only when migrations are at head.
2025-08-17T16:44:38.2794140Z 
2025-08-17T16:44:38.2794221Z <a id="api.config"></a>
2025-08-17T16:44:38.2794354Z 
2025-08-17T16:44:38.2794426Z # api.config
2025-08-17T16:44:38.2794538Z 
2025-08-17T16:44:38.2794610Z <a id="etl"></a>
2025-08-17T16:44:38.2794724Z 
2025-08-17T16:44:38.2794796Z # etl
2025-08-17T16:44:38.2794891Z 
2025-08-17T16:44:38.2794983Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T16:44:38.2795152Z 
2025-08-17T16:44:38.2795242Z # etl.fba\_fee\_ingestor
2025-08-17T16:44:38.2795380Z 
2025-08-17T16:44:38.2795470Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T16:44:38.2795648Z 
2025-08-17T16:44:38.2795727Z # etl.sp\_fees\_ingestor
2025-08-17T16:44:38.2795867Z 
2025-08-17T16:44:38.2795965Z <a id="etl.keepa_ingestor"></a>
2025-08-17T16:44:38.2796125Z 
2025-08-17T16:44:38.2796208Z # etl.keepa\_ingestor
2025-08-17T16:44:38.2796335Z 
2025-08-17T16:44:38.2796414Z <a id="etl.db"></a>
2025-08-17T16:44:38.2796532Z 
2025-08-17T16:44:38.2796599Z # etl.db
2025-08-17T16:44:38.2796700Z 
2025-08-17T16:44:38.2796793Z <a id="etl.dialects.schemas"></a>
2025-08-17T16:44:38.2796960Z 
2025-08-17T16:44:38.2797043Z # etl.dialects.schemas
2025-08-17T16:44:38.2797182Z 
2025-08-17T16:44:38.2797298Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T16:44:38.2797511Z 
2025-08-17T16:44:38.2797613Z # etl.dialects.amazon\_reimbursements
2025-08-17T16:44:38.2797797Z 
2025-08-17T16:44:38.2797896Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T16:44:38.2798085Z 
2025-08-17T16:44:38.2798168Z # etl.dialects.amazon\_returns
2025-08-17T16:44:38.2798317Z 
2025-08-17T16:44:38.2798394Z <a id="etl.dialects"></a>
2025-08-17T16:44:38.2798532Z 
2025-08-17T16:44:38.2798604Z # etl.dialects
2025-08-17T16:44:38.2798825Z 
2025-08-17T16:44:38.2798905Z <a id="ingest"></a>
2025-08-17T16:44:38.2799016Z 
2025-08-17T16:44:38.2799079Z # ingest
2025-08-17T16:44:38.2799174Z 
2025-08-17T16:44:38.2799258Z <a id="ingest.copy_loader"></a>
2025-08-17T16:44:38.2799514Z 
2025-08-17T16:44:38.2799595Z # ingest.copy\_loader
2025-08-17T16:44:38.2799723Z 
2025-08-17T16:44:38.2799829Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T16:44:38.2800026Z 
2025-08-17T16:44:38.2800109Z #### copy\_df\_via\_temp
2025-08-17T16:44:38.2800236Z 
2025-08-17T16:44:38.2800303Z ```python
2025-08-17T16:44:38.2800494Z def copy_df_via_temp(engine: Engine,
2025-08-17T16:44:38.2800754Z                      df: pd.DataFrame,
2025-08-17T16:44:38.2801011Z                      target_table: str,
2025-08-17T16:44:38.2801241Z                      *,
2025-08-17T16:44:38.2801463Z                      target_schema: Optional[str] = None,
2025-08-17T16:44:38.2801748Z                      columns: Sequence[str],
2025-08-17T16:44:38.2802149Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T16:44:38.2802468Z                      analyze_after: bool = False) -> int
2025-08-17T16:44:38.2802719Z ```
2025-08-17T16:44:38.2802808Z 
2025-08-17T16:44:38.2802970Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T16:44:38.2803222Z 
2025-08-17T16:44:38.2803414Z The dataframe is first written to a TEMP table created ``LIKE`` the target
2025-08-17T16:44:38.2803898Z including defaults and generated columns.  Data is streamed via ``COPY`` and
2025-08-17T16:44:38.2804378Z then inserted into the final table.  If ``conflict_cols`` is provided an
2025-08-17T16:44:38.2804818Z ``INSERT ... ON CONFLICT DO UPDATE`` is issued for the non-conflicting
2025-08-17T16:44:38.2805183Z columns, otherwise rows are simply appended.
2025-08-17T16:44:38.2805374Z 
2025-08-17T16:44:38.2805600Z Returns the number of rows provided in ``df``.
2025-08-17T16:44:38.2805959Z 
2025-08-17T16:44:38.2806123Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T16:44:38.2806304Z 
2025-08-17T16:44:38.2806391Z # ingest.tests.test\_smoke
2025-08-17T16:44:38.2806531Z 
2025-08-17T16:44:38.2806609Z <a id="ingest.tests"></a>
2025-08-17T16:44:38.2806743Z 
2025-08-17T16:44:38.2806927Z # ingest.tests
2025-08-17T16:44:38.2807104Z 
2025-08-17T16:44:38.2807261Z <a id="ingest.upload_router"></a>
2025-08-17T16:44:38.2807429Z 
2025-08-17T16:44:38.2807506Z # ingest.upload\_router
2025-08-17T16:44:38.2807633Z 
2025-08-17T16:44:38.2807715Z <a id="ingest.email_watcher"></a>
2025-08-17T16:44:38.2807876Z 
2025-08-17T16:44:38.2807951Z # ingest.email\_watcher
2025-08-17T16:44:38.2808072Z 
2025-08-17T16:44:38.2808172Z <a id="ingest.email_watcher.main"></a>
2025-08-17T16:44:38.2808339Z 
2025-08-17T16:44:38.2808403Z #### main
2025-08-17T16:44:38.2808500Z 
2025-08-17T16:44:38.2808562Z ```python
2025-08-17T16:44:38.2808729Z def main() -> dict[str, str]
2025-08-17T16:44:38.2808935Z ```
2025-08-17T16:44:38.2809018Z 
2025-08-17T16:44:38.2809167Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T16:44:38.2809605Z 
2025-08-17T16:44:38.2809748Z Returns {"status": "success"} when processing completes.
2025-08-17T16:44:38.2809967Z 
2025-08-17T16:44:38.2810052Z <a id="ingest.tasks"></a>
2025-08-17T16:44:38.2810182Z 
2025-08-17T16:44:38.2810249Z # ingest.tasks
2025-08-17T16:44:38.2810355Z 
2025-08-17T16:44:38.2810452Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T16:44:38.2810631Z 
2025-08-17T16:44:38.2810708Z #### task\_import\_file
2025-08-17T16:44:38.2810825Z 
2025-08-17T16:44:38.2810889Z ```python
2025-08-17T16:44:38.2811106Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T16:44:38.2811386Z def task_import_file(self,
2025-08-17T16:44:38.2811594Z                      uri: str,
2025-08-17T16:44:38.2811852Z                      report_type: Optional[str] = None) -> Dict[str, Any]
2025-08-17T16:44:38.2812135Z ```
2025-08-17T16:44:38.2812219Z 
2025-08-17T16:44:38.2812353Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T16:44:38.2812813Z 
2025-08-17T16:44:38.2812951Z <a id="ingest.celery_app"></a>
2025-08-17T16:44:38.2813174Z 
2025-08-17T16:44:38.2813309Z # ingest.celery\_app
2025-08-17T16:44:38.2813507Z 
2025-08-17T16:44:38.2813636Z <a id="ingest.ingest_router"></a>
2025-08-17T16:44:38.2813883Z 
2025-08-17T16:44:38.2813996Z # ingest.ingest\_router
2025-08-17T16:44:38.2814176Z 
2025-08-17T16:44:38.2814293Z <a id="logistics_etl"></a>
2025-08-17T16:44:38.2814534Z 
2025-08-17T16:44:38.2814657Z # logistics\_etl
2025-08-17T16:44:38.2814835Z 
2025-08-17T16:44:38.2814967Z Daily logistics ETL job.
2025-08-17T16:44:38.2815157Z 
2025-08-17T16:44:38.2815277Z <a id="logistics_etl.__main__"></a>
2025-08-17T16:44:38.2815521Z 
2025-08-17T16:44:38.2815637Z # logistics\_etl.\_\_main\_\_
2025-08-17T16:44:38.2815849Z 
2025-08-17T16:44:38.2815967Z <a id="logistics_etl.dsn"></a>
2025-08-17T16:44:38.2816192Z 
2025-08-17T16:44:38.2816302Z # logistics\_etl.dsn
2025-08-17T16:44:38.2816485Z 
2025-08-17T16:44:38.2816704Z Local DSN builder to avoid cross-service dependency.
2025-08-17T16:44:38.2817374Z 
2025-08-17T16:44:38.2817549Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T16:44:38.2817877Z 
2025-08-17T16:44:38.2817996Z #### build\_dsn
2025-08-17T16:44:38.2818184Z 
2025-08-17T16:44:38.2818301Z ```python
2025-08-17T16:44:38.2818614Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:44:38.2819041Z ```
2025-08-17T16:44:38.2819203Z 
2025-08-17T16:44:38.2819655Z Return a Postgres DSN assembled from environment variables.
2025-08-17T16:44:38.2820075Z 
2025-08-17T16:44:38.2820324Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T16:44:38.2821045Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T16:44:38.2821654Z error when any required variable is missing.
2025-08-17T16:44:38.2821855Z 
2025-08-17T16:44:38.2821967Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T16:44:38.2822149Z 
2025-08-17T16:44:38.2822241Z # logistics\_etl.tests.conftest
2025-08-17T16:44:38.2822395Z 
2025-08-17T16:44:38.2822515Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T16:44:38.2822712Z 
2025-08-17T16:44:38.2822803Z # logistics\_etl.tests.test\_repository
2025-08-17T16:44:38.2822978Z 
2025-08-17T16:44:38.2823071Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T16:44:38.2823244Z 
2025-08-17T16:44:38.2823336Z # logistics\_etl.tests.test\_cron
2025-08-17T16:44:38.2823488Z 
2025-08-17T16:44:38.2823588Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T16:44:38.2823793Z 
2025-08-17T16:44:38.2823877Z # logistics\_etl.tests.test\_imports
2025-08-17T16:44:38.2824037Z 
2025-08-17T16:44:38.2824130Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T16:44:38.2824311Z 
2025-08-17T16:44:38.2824393Z # logistics\_etl.tests.test\_smoke
2025-08-17T16:44:38.2824544Z 
2025-08-17T16:44:38.2824644Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T16:44:38.2824816Z 
2025-08-17T16:44:38.2824901Z # logistics\_etl.tests.test\_client
2025-08-17T16:44:38.2825060Z 
2025-08-17T16:44:38.2825140Z <a id="logistics_etl.tests"></a>
2025-08-17T16:44:38.2825293Z 
2025-08-17T16:44:38.2825364Z # logistics\_etl.tests
2025-08-17T16:44:38.2825490Z 
2025-08-17T16:44:38.2825570Z <a id="logistics_etl.flow"></a>
2025-08-17T16:44:38.2825711Z 
2025-08-17T16:44:38.2825788Z # logistics\_etl.flow
2025-08-17T16:44:38.2825904Z 
2025-08-17T16:44:38.2825988Z <a id="logistics_etl.client"></a>
2025-08-17T16:44:38.2826140Z 
2025-08-17T16:44:38.2826212Z # logistics\_etl.client
2025-08-17T16:44:38.2826337Z 
2025-08-17T16:44:38.2826425Z <a id="logistics_etl.cron"></a>
2025-08-17T16:44:38.2826568Z 
2025-08-17T16:44:38.2826639Z # logistics\_etl.cron
2025-08-17T16:44:38.2826752Z 
2025-08-17T16:44:38.2826836Z <a id="logistics_etl.db"></a>
2025-08-17T16:44:38.2826973Z 
2025-08-17T16:44:38.2827040Z # logistics\_etl.db
2025-08-17T16:44:38.2827153Z 
2025-08-17T16:44:38.2827240Z <a id="logistics_etl.repository"></a>
2025-08-17T16:44:38.2827401Z 
2025-08-17T16:44:38.2827478Z # logistics\_etl.repository
2025-08-17T16:44:38.2827618Z 
2025-08-17T16:44:38.2827693Z <a id="alert_bot"></a>
2025-08-17T16:44:38.2827966Z 
2025-08-17T16:44:38.2828037Z # alert\_bot
2025-08-17T16:44:38.2828133Z 
2025-08-17T16:44:38.2828220Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T16:44:38.2828381Z 
2025-08-17T16:44:38.2828467Z # alert\_bot.tests.test\_smoke
2025-08-17T16:44:38.2828604Z 
2025-08-17T16:44:38.2828680Z <a id="alert_bot.tests"></a>
2025-08-17T16:44:38.2828821Z 
2025-08-17T16:44:38.2828889Z # alert\_bot.tests
2025-08-17T16:44:38.2828997Z 
2025-08-17T16:44:38.2829084Z <a id="alert_bot.alert_bot"></a>
2025-08-17T16:44:38.2829225Z 
2025-08-17T16:44:38.2829297Z # alert\_bot.alert\_bot
2025-08-17T16:44:38.2829745Z 
2025-08-17T16:44:38.2829847Z <a id="alert_bot.rules"></a>
2025-08-17T16:44:38.2829981Z 
2025-08-17T16:44:38.2830048Z # alert\_bot.rules
2025-08-17T16:44:38.2830159Z 
2025-08-17T16:44:38.2830224Z <a id="common"></a>
2025-08-17T16:44:38.2830329Z 
2025-08-17T16:44:38.2830390Z # common
2025-08-17T16:44:38.2830485Z 
2025-08-17T16:44:38.2830556Z <a id="common.dsn"></a>
2025-08-17T16:44:38.2830811Z 
2025-08-17T16:44:38.2830882Z # common.dsn
2025-08-17T16:44:38.2830977Z 
2025-08-17T16:44:38.2831060Z <a id="common.dsn.build_dsn"></a>
2025-08-17T16:44:38.2831211Z 
2025-08-17T16:44:38.2831275Z #### build\_dsn
2025-08-17T16:44:38.2831374Z 
2025-08-17T16:44:38.2831441Z ```python
2025-08-17T16:44:38.2831625Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:44:38.2831845Z ```
2025-08-17T16:44:38.2831935Z 
2025-08-17T16:44:38.2832059Z Return a Postgres DSN, validating required variables.
2025-08-17T16:44:38.2832267Z 
2025-08-17T16:44:38.2832465Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T16:44:38.2833045Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T16:44:38.2833697Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T16:44:38.2834010Z missing.
2025-08-17T16:44:38.2834108Z 
2025-08-17T16:44:38.2834191Z <a id="common.models_vendor"></a>
2025-08-17T16:44:38.2834399Z 
2025-08-17T16:44:38.2834527Z # common.models\_vendor
2025-08-17T16:44:38.2834739Z 
2025-08-17T16:44:38.2834878Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T16:44:38.2835143Z 
2025-08-17T16:44:38.2835214Z ## Vendor Objects
2025-08-17T16:44:38.2835325Z 
2025-08-17T16:44:38.2835391Z ```python
2025-08-17T16:44:38.2835552Z class Vendor(Base)
2025-08-17T16:44:38.2835717Z ```
2025-08-17T16:44:38.2835807Z 
2025-08-17T16:44:38.2835889Z Vendor of inventory items.
2025-08-17T16:44:38.2836021Z 
2025-08-17T16:44:38.2836133Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T16:44:38.2836316Z 
2025-08-17T16:44:38.2836405Z ## VendorPrice Objects
2025-08-17T16:44:38.2836529Z 
2025-08-17T16:44:38.2836593Z ```python
2025-08-17T16:44:38.2836756Z class VendorPrice(Base)
2025-08-17T16:44:38.2836938Z ```
2025-08-17T16:44:38.2837021Z 
2025-08-17T16:44:38.2837134Z Association table linking vendors to pricing.
2025-08-17T16:44:38.2837316Z 
2025-08-17T16:44:38.2837395Z <a id="common.db_url"></a>
2025-08-17T16:44:38.2837530Z 
2025-08-17T16:44:38.2884915Z # common.db\_url
2025-08-17T16:44:38.2885124Z 
2025-08-17T16:44:38.2885269Z <a id="common.db_url.build_url"></a>
2025-08-17T16:44:38.2885563Z 
2025-08-17T16:44:38.2885677Z #### build\_url
2025-08-17T16:44:38.2885862Z 
2025-08-17T16:44:38.2885987Z ```python
2025-08-17T16:44:38.2886303Z def build_url(async_: bool = True) -> str
2025-08-17T16:44:38.2886735Z ```
2025-08-17T16:44:38.2886889Z 
2025-08-17T16:44:38.2887052Z Return Postgres DSN from env or PG_* parts.
2025-08-17T16:44:38.2887356Z 
2025-08-17T16:44:38.2887485Z <a id="common.keepa"></a>
2025-08-17T16:44:38.2887724Z 
2025-08-17T16:44:38.2887866Z # common.keepa
2025-08-17T16:44:38.2888117Z 
2025-08-17T16:44:38.2888222Z <a id="common.llm"></a>
2025-08-17T16:44:38.2888382Z 
2025-08-17T16:44:38.2888470Z # common.llm
2025-08-17T16:44:38.2888597Z 
2025-08-17T16:44:38.2888696Z <a id="common.settings"></a>
2025-08-17T16:44:38.2888876Z 
2025-08-17T16:44:38.2888959Z # common.settings
2025-08-17T16:44:38.2889091Z 
2025-08-17T16:44:38.2889724Z <a id="common.db"></a>
2025-08-17T16:44:38.2889907Z 
2025-08-17T16:44:38.2890059Z # common.db
2025-08-17T16:44:38.2890173Z 
2025-08-17T16:44:38.2890301Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T16:44:38.2890530Z 
2025-08-17T16:44:38.2890629Z #### build\_sqlalchemy\_url
2025-08-17T16:44:38.2890806Z 
2025-08-17T16:44:38.2890885Z ```python
2025-08-17T16:44:38.2891104Z def build_sqlalchemy_url() -> str
2025-08-17T16:44:38.2891372Z ```
2025-08-17T16:44:38.2891472Z 
2025-08-17T16:44:38.2891593Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T16:44:38.2891841Z 
2025-08-17T16:44:38.2891956Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T16:44:38.2892164Z 
2025-08-17T16:44:38.2892261Z #### build\_asyncpg\_dsn
2025-08-17T16:44:38.2892415Z 
2025-08-17T16:44:38.2892493Z ```python
2025-08-17T16:44:38.2892706Z def build_asyncpg_dsn() -> str
2025-08-17T16:44:38.2892957Z ```
2025-08-17T16:44:38.2893069Z 
2025-08-17T16:44:38.2893233Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T16:44:38.2893672Z 
2025-08-17T16:44:38.2893784Z <a id="common.db.refresh_mvs"></a>
2025-08-17T16:44:38.2893975Z 
2025-08-17T16:44:38.2894057Z #### refresh\_mvs
2025-08-17T16:44:38.2894186Z 
2025-08-17T16:44:38.2894315Z ```python
2025-08-17T16:44:38.2894568Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T16:44:38.2894885Z ```
2025-08-17T16:44:38.2894984Z 
2025-08-17T16:44:38.2895154Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T16:44:38.2895427Z 
2025-08-17T16:44:38.2895524Z <a id="common.config"></a>
2025-08-17T16:44:38.2895687Z 
2025-08-17T16:44:38.2895778Z # common.config
2025-08-17T16:44:38.2895907Z 
2025-08-17T16:44:38.2895998Z <a id="common.base"></a>
2025-08-17T16:44:38.2896158Z 
2025-08-17T16:44:38.2896236Z # common.base
2025-08-17T16:44:38.2896357Z 
2025-08-17T16:44:38.2896458Z <a id="common.base.Base"></a>
2025-08-17T16:44:38.2896632Z 
2025-08-17T16:44:38.2896711Z ## Base Objects
2025-08-17T16:44:38.2896832Z 
2025-08-17T16:44:38.2896916Z ```python
2025-08-17T16:44:38.2897134Z class Base(DeclarativeBase)
2025-08-17T16:44:38.2897391Z ```
2025-08-17T16:44:38.2897503Z 
2025-08-17T16:44:38.2897617Z Base class for SQLAlchemy models.
2025-08-17T16:44:38.2897823Z 
2025-08-17T16:44:38.2897904Z <a id="repricer"></a>
2025-08-17T16:44:38.2898037Z 
2025-08-17T16:44:38.2898108Z # repricer
2025-08-17T16:44:38.2898216Z 
2025-08-17T16:44:38.2898312Z <a id="repricer.app.schemas"></a>
2025-08-17T16:44:38.2898498Z 
2025-08-17T16:44:38.2898586Z # repricer.app.schemas
2025-08-17T16:44:38.2898720Z 
2025-08-17T16:44:38.2898816Z <a id="repricer.app.deps"></a>
2025-08-17T16:44:38.2898975Z 
2025-08-17T16:44:38.2899055Z # repricer.app.deps
2025-08-17T16:44:38.2899183Z 
2025-08-17T16:44:38.2899314Z Placeholder module for Keepa / SP-API clients.
2025-08-17T16:44:38.2899701Z 
2025-08-17T16:44:38.2899796Z <a id="repricer.app.logic"></a>
2025-08-17T16:44:38.2899966Z 
2025-08-17T16:44:38.2900049Z # repricer.app.logic
2025-08-17T16:44:38.2900178Z 
2025-08-17T16:44:38.2900293Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T16:44:38.2900502Z 
2025-08-17T16:44:38.2900573Z #### MIN\_MARGIN
2025-08-17T16:44:38.2900690Z 
2025-08-17T16:44:38.2900759Z 15 % ROI
2025-08-17T16:44:38.2900855Z 
2025-08-17T16:44:38.2900967Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T16:44:38.2901179Z 
2025-08-17T16:44:38.2901255Z #### compute\_price
2025-08-17T16:44:38.2901373Z 
2025-08-17T16:44:38.2901450Z ```python
2025-08-17T16:44:38.2901734Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T16:44:38.2902081Z ```
2025-08-17T16:44:38.2902170Z 
2025-08-17T16:44:38.2902289Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T16:44:38.2902613Z Replace with real competitive logic later.
2025-08-17T16:44:38.2902808Z 
2025-08-17T16:44:38.2902901Z <a id="repricer.app.main"></a>
2025-08-17T16:44:38.2903068Z 
2025-08-17T16:44:38.2903147Z # repricer.app.main
2025-08-17T16:44:38.2903268Z 
2025-08-17T16:44:38.2903358Z <a id="repricer.app"></a>
2025-08-17T16:44:38.2903633Z 
2025-08-17T16:44:38.2903707Z # repricer.app
2025-08-17T16:44:38.2903823Z 
2025-08-17T16:44:38.2903923Z <a id="repricer.tests.test_imports"></a>
2025-08-17T16:44:38.2904112Z 
2025-08-17T16:44:38.2904201Z # repricer.tests.test\_imports
2025-08-17T16:44:38.2904362Z 
2025-08-17T16:44:38.2904459Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T16:44:38.2904640Z 
2025-08-17T16:44:38.2904733Z # repricer.tests.test\_smoke
2025-08-17T16:44:38.2904889Z 
2025-08-17T16:44:38.2904974Z <a id="repricer.tests"></a>
2025-08-17T16:44:38.2905126Z 
2025-08-17T16:44:38.2905203Z # repricer.tests
2025-08-17T16:44:38.2905319Z 
2025-08-17T16:44:38.2905390Z <a id="db"></a>
2025-08-17T16:44:38.2905504Z 
2025-08-17T16:44:38.2905570Z # db
2025-08-17T16:44:38.2905661Z 
2025-08-17T16:44:38.2905748Z <a id="db.utils.views"></a>
2025-08-17T16:44:38.2905892Z 
2025-08-17T16:44:38.2905965Z # db.utils.views
2025-08-17T16:44:38.2906078Z 
2025-08-17T16:44:38.2906186Z <a id="db.utils.views.replace_view"></a>
2025-08-17T16:44:38.2906484Z 
2025-08-17T16:44:38.2906565Z #### replace\_view
2025-08-17T16:44:38.2906688Z 
2025-08-17T16:44:38.2906756Z ```python
2025-08-17T16:44:38.2906969Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T16:44:38.2907249Z ```
2025-08-17T16:44:38.2907338Z 
2025-08-17T16:44:38.2907441Z Drop and recreate a SQL view atomically.
2025-08-17T16:44:38.2907632Z 
2025-08-17T16:44:38.2907714Z <a id="db.utils"></a>
2025-08-17T16:44:38.2907846Z 
2025-08-17T16:44:38.2907917Z # db.utils
2025-08-17T16:44:38.2908015Z 
2025-08-17T16:44:38.2908101Z <a id="price_importer"></a>
2025-08-17T16:44:38.2908246Z 
2025-08-17T16:44:38.2908318Z # price\_importer
2025-08-17T16:44:38.2908435Z 
2025-08-17T16:44:38.2908552Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T16:44:38.2908754Z 
2025-08-17T16:44:38.2908847Z # price\_importer.services\_common.dsn
2025-08-17T16:44:38.2909020Z 
2025-08-17T16:44:38.2909158Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T16:44:38.2909491Z 
2025-08-17T16:44:38.2909568Z #### build\_dsn
2025-08-17T16:44:38.2909685Z 
2025-08-17T16:44:38.2909753Z ```python
2025-08-17T16:44:38.2909936Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:44:38.2910177Z ```
2025-08-17T16:44:38.2910260Z 
2025-08-17T16:44:38.2910335Z Return safe DSN.
2025-08-17T16:44:38.2910446Z 
2025-08-17T16:44:38.2910815Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T16:44:38.2911040Z 
2025-08-17T16:44:38.2911173Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T16:44:38.2911394Z 
2025-08-17T16:44:38.2911509Z # price\_importer.services\_common.models\_vendor
2025-08-17T16:44:38.2911720Z 
2025-08-17T16:44:38.2911831Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T16:44:38.2912031Z 
2025-08-17T16:44:38.2912137Z # price\_importer.services\_common.db\_url
2025-08-17T16:44:38.2912319Z 
2025-08-17T16:44:38.2912457Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T16:44:38.2912694Z 
2025-08-17T16:44:38.2912763Z #### build\_url
2025-08-17T16:44:38.2912880Z 
2025-08-17T16:44:38.2912947Z ```python
2025-08-17T16:44:38.2913132Z def build_url(async_: bool = True) -> str
2025-08-17T16:44:38.2913373Z ```
2025-08-17T16:44:38.2913458Z 
2025-08-17T16:44:38.2913558Z Return Postgres DSN from env or PG_* parts.
2025-08-17T16:44:38.2913742Z 
2025-08-17T16:44:38.2913856Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T16:44:38.2914052Z 
2025-08-17T16:44:38.2914148Z # price\_importer.services\_common.keepa
2025-08-17T16:44:38.2914330Z 
2025-08-17T16:44:38.2914432Z <a id="price_importer.services_common.llm"></a>
2025-08-17T16:44:38.2914625Z 
2025-08-17T16:44:38.2914724Z # price\_importer.services\_common.llm
2025-08-17T16:44:38.2914896Z 
2025-08-17T16:44:38.2915013Z <a id="price_importer.services_common.settings"></a>
2025-08-17T16:44:38.2915218Z 
2025-08-17T16:44:38.2915324Z # price\_importer.services\_common.settings
2025-08-17T16:44:38.2915506Z 
2025-08-17T16:44:38.2915613Z <a id="price_importer.services_common.db"></a>
2025-08-17T16:44:38.2915815Z 
2025-08-17T16:44:38.2916028Z # price\_importer.services\_common.db
2025-08-17T16:44:38.2916198Z 
2025-08-17T16:44:38.2916368Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T16:44:38.2916627Z 
2025-08-17T16:44:38.2916705Z #### build\_sqlalchemy\_url
2025-08-17T16:44:38.2916840Z 
2025-08-17T16:44:38.2916912Z ```python
2025-08-17T16:44:38.2917086Z def build_sqlalchemy_url() -> str
2025-08-17T16:44:38.2917310Z ```
2025-08-17T16:44:38.2917393Z 
2025-08-17T16:44:38.2917492Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T16:44:38.2917683Z 
2025-08-17T16:44:38.2917835Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T16:44:38.2918076Z 
2025-08-17T16:44:38.2918158Z #### build\_asyncpg\_dsn
2025-08-17T16:44:38.2918283Z 
2025-08-17T16:44:38.2918347Z ```python
2025-08-17T16:44:38.2918522Z def build_asyncpg_dsn() -> str
2025-08-17T16:44:38.2918717Z ```
2025-08-17T16:44:38.2918804Z 
2025-08-17T16:44:38.2918931Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T16:44:38.2919258Z 
2025-08-17T16:44:38.2919506Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T16:44:38.2919727Z 
2025-08-17T16:44:38.2919795Z #### refresh\_mvs
2025-08-17T16:44:38.2919899Z 
2025-08-17T16:44:38.2919971Z ```python
2025-08-17T16:44:38.2920166Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T16:44:38.2920421Z ```
2025-08-17T16:44:38.2920500Z 
2025-08-17T16:44:38.2920634Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T16:44:38.2920861Z 
2025-08-17T16:44:38.2920954Z <a id="price_importer.services_common"></a>
2025-08-17T16:44:38.2921127Z 
2025-08-17T16:44:38.2921223Z # price\_importer.services\_common
2025-08-17T16:44:38.2921380Z 
2025-08-17T16:44:38.2921483Z <a id="price_importer.services_common.base"></a>
2025-08-17T16:44:38.2921675Z 
2025-08-17T16:44:38.2921763Z # price\_importer.services\_common.base
2025-08-17T16:44:38.2921927Z 
2025-08-17T16:44:38.2922016Z <a id="price_importer.normaliser"></a>
2025-08-17T16:44:38.2922195Z 
2025-08-17T16:44:38.2922277Z # price\_importer.normaliser
2025-08-17T16:44:38.2922415Z 
2025-08-17T16:44:38.2922525Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T16:44:38.2922712Z 
2025-08-17T16:44:38.2922799Z # price\_importer.common.models\_vendor
2025-08-17T16:44:38.2922971Z 
2025-08-17T16:44:38.2923063Z <a id="price_importer.common.db_url"></a>
2025-08-17T16:44:38.2923233Z 
2025-08-17T16:44:38.2923317Z # price\_importer.common.db\_url
2025-08-17T16:44:38.2923471Z 
2025-08-17T16:44:38.2923576Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T16:44:38.2923766Z 
2025-08-17T16:44:38.2923838Z #### make\_dsn
2025-08-17T16:44:38.2923937Z 
2025-08-17T16:44:38.2924002Z ```python
2025-08-17T16:44:38.2924185Z def make_dsn(async_: bool = False) -> str
2025-08-17T16:44:38.2924422Z ```
2025-08-17T16:44:38.2924510Z 
2025-08-17T16:44:38.2924631Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T16:44:38.2924837Z 
2025-08-17T16:44:38.2924946Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T16:44:38.2925157Z 
2025-08-17T16:44:38.2925223Z #### build\_url
2025-08-17T16:44:38.2925322Z 
2025-08-17T16:44:38.2925391Z ```python
2025-08-17T16:44:38.2925562Z def build_url(async_: bool = False) -> str
2025-08-17T16:44:38.2925797Z ```
2025-08-17T16:44:38.2925876Z 
2025-08-17T16:44:38.2925996Z Return Postgres DSN built from environment variables.
2025-08-17T16:44:38.2926206Z 
2025-08-17T16:44:38.2926289Z <a id="price_importer.common"></a>
2025-08-17T16:44:38.2926442Z 
2025-08-17T16:44:38.2926529Z # price\_importer.common
2025-08-17T16:44:38.2926654Z 
2025-08-17T16:44:38.2926744Z <a id="price_importer.common.base"></a>
2025-08-17T16:44:38.2926909Z 
2025-08-17T16:44:38.2926999Z # price\_importer.common.base
2025-08-17T16:44:38.2927140Z 
2025-08-17T16:44:38.2927237Z <a id="price_importer.tests.conftest"></a>
2025-08-17T16:44:38.2927418Z 
2025-08-17T16:44:38.2927501Z # price\_importer.tests.conftest
2025-08-17T16:44:38.2927647Z 
2025-08-17T16:44:38.2927752Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T16:44:38.2928053Z 
2025-08-17T16:44:38.2928141Z # price\_importer.tests.test\_reader
2025-08-17T16:44:38.2928298Z 
2025-08-17T16:44:38.2928402Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T16:44:38.2928575Z 
2025-08-17T16:44:38.2928661Z # price\_importer.tests.test\_imports
2025-08-17T16:44:38.2928825Z 
2025-08-17T16:44:38.2928922Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T16:44:38.2929091Z 
2025-08-17T16:44:38.2929179Z # price\_importer.tests.test\_smoke
2025-08-17T16:44:38.2929436Z 
2025-08-17T16:44:38.2929546Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T16:44:38.2929836Z 
2025-08-17T16:44:38.2929936Z # price\_importer.tests.test\_normaliser
2025-08-17T16:44:38.2930103Z 
2025-08-17T16:44:38.2930185Z <a id="price_importer.tests"></a>
2025-08-17T16:44:38.2930347Z 
2025-08-17T16:44:38.2930422Z # price\_importer.tests
2025-08-17T16:44:38.2930544Z 
2025-08-17T16:44:38.2930634Z <a id="price_importer.reader"></a>
2025-08-17T16:44:38.2930962Z 
2025-08-17T16:44:38.2931038Z # price\_importer.reader
2025-08-17T16:44:38.2931160Z 
2025-08-17T16:44:38.2931253Z <a id="price_importer.repository"></a>
2025-08-17T16:44:38.2931412Z 
2025-08-17T16:44:38.2931495Z # price\_importer.repository
2025-08-17T16:44:38.2931637Z 
2025-08-17T16:44:38.2931719Z <a id="price_importer.import"></a>
2025-08-17T16:44:38.2931864Z 
2025-08-17T16:44:38.2931946Z # price\_importer.import
2025-08-17T16:44:38.2932066Z 
2025-08-17T16:44:38.2932136Z <a id="fees_h10"></a>
2025-08-17T16:44:38.2932247Z 
2025-08-17T16:44:38.2932317Z # fees\_h10
2025-08-17T16:44:38.2932410Z 
2025-08-17T16:44:38.2932484Z <a id="fees_h10.worker"></a>
2025-08-17T16:44:38.2932619Z 
2025-08-17T16:44:38.2932685Z # fees\_h10.worker
2025-08-17T16:44:38.2932787Z 
2025-08-17T16:44:38.2932885Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T16:44:38.2933064Z 
2025-08-17T16:44:38.2933134Z #### list\_active\_asins
2025-08-17T16:44:38.2933253Z 
2025-08-17T16:44:38.2933322Z ```python
2025-08-17T16:44:38.2933506Z def list_active_asins() -> list[str]
2025-08-17T16:44:38.2933719Z ```
2025-08-17T16:44:38.2933798Z 
2025-08-17T16:44:38.2933909Z Return known ASINs or an empty list if unavailable.
2025-08-17T16:44:38.2934106Z 
2025-08-17T16:44:38.2934189Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T16:44:38.2934341Z 
2025-08-17T16:44:38.2934426Z # fees\_h10.tests.test\_smoke
2025-08-17T16:44:38.2934560Z 
2025-08-17T16:44:38.2934635Z <a id="fees_h10.tests"></a>
2025-08-17T16:44:38.2934762Z 
2025-08-17T16:44:38.2934846Z # fees\_h10.tests
2025-08-17T16:44:38.2934948Z 
2025-08-17T16:44:38.2935023Z <a id="fees_h10.client"></a>
2025-08-17T16:44:38.2935160Z 
2025-08-17T16:44:38.2935226Z # fees\_h10.client
2025-08-17T16:44:38.2935328Z 
2025-08-17T16:44:38.2935407Z <a id="fees_h10.repository"></a>
2025-08-17T16:44:38.2935556Z 
2025-08-17T16:44:38.2935628Z # fees\_h10.repository
2025-08-17T16:44:38.2935741Z 
2025-08-17T16:44:38.2935819Z <a id="emailer"></a>
2025-08-17T16:44:38.2935932Z 
2025-08-17T16:44:38.2935998Z # emailer
2025-08-17T16:44:38.2936095Z 
2025-08-17T16:44:38.2936193Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T16:44:38.2936366Z 
2025-08-17T16:44:38.2936452Z # emailer.tests.test\_import\_emailer
2025-08-17T16:44:38.2936613Z 
2025-08-17T16:44:38.2936697Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T16:44:38.2936848Z 
2025-08-17T16:44:38.2936929Z # emailer.tests.test\_smoke
2025-08-17T16:44:38.2937060Z 
2025-08-17T16:44:38.2937136Z <a id="emailer.tests"></a>
2025-08-17T16:44:38.2937269Z 
2025-08-17T16:44:38.2937335Z # emailer.tests
2025-08-17T16:44:38.2937436Z 
2025-08-17T16:44:38.2937519Z <a id="emailer.generate_body"></a>
2025-08-17T16:44:38.2937678Z 
2025-08-17T16:44:38.2937753Z # emailer.generate\_body
2025-08-17T16:44:38.2937875Z 
2025-08-17T16:44:38.2937950Z <a id="llm_server"></a>
2025-08-17T16:44:38.2938066Z 
2025-08-17T16:44:38.2938128Z # llm\_server
2025-08-17T16:44:38.2938224Z 
2025-08-17T16:44:38.2938306Z <a id="llm_server.app"></a>
2025-08-17T16:44:38.2938433Z 
2025-08-17T16:44:38.2938625Z # llm\_server.app
2025-08-17T16:44:38.2938735Z 
