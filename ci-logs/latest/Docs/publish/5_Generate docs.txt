2025-08-20T13:30:08.0972397Z ##[group]Run pydoc-markdown
2025-08-20T13:30:08.0972706Z [36;1mpydoc-markdown[0m
2025-08-20T13:30:08.1012527Z shell: /usr/bin/bash -e {0}
2025-08-20T13:30:08.1012755Z env:
2025-08-20T13:30:08.1012989Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:30:08.1013391Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T13:30:08.1013790Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:30:08.1014126Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:30:08.1014468Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T13:30:08.1014812Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T13:30:08.1015098Z ##[endgroup]
2025-08-20T13:30:08.4531547Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T13:30:08.4532268Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T13:30:08.4532641Z In "pydoc-markdown.yml"
2025-08-20T13:30:08.4533002Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T13:30:08.4533517Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T13:30:08.4534091Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T13:30:08.4534483Z 
2025-08-20T13:30:08.8168473Z <a id="__init__"></a>
2025-08-20T13:30:08.8169045Z 
2025-08-20T13:30:08.8169186Z # \_\_init\_\_
2025-08-20T13:30:08.8169404Z 
2025-08-20T13:30:08.8169551Z <a id="api"></a>
2025-08-20T13:30:08.8169779Z 
2025-08-20T13:30:08.8169905Z # api
2025-08-20T13:30:08.8170105Z 
2025-08-20T13:30:08.8170268Z <a id="api.errors"></a>
2025-08-20T13:30:08.8170533Z 
2025-08-20T13:30:08.8170682Z # api.errors
2025-08-20T13:30:08.8170881Z 
2025-08-20T13:30:08.8171050Z <a id="api.sentry_config"></a>
2025-08-20T13:30:08.8171346Z 
2025-08-20T13:30:08.8171508Z # api.sentry\_config
2025-08-20T13:30:08.8171749Z 
2025-08-20T13:30:08.8171952Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T13:30:08.8172335Z 
2025-08-20T13:30:08.8172904Z # api.tests.test\_stats\_contracts
2025-08-20T13:30:08.8173259Z 
2025-08-20T13:30:08.8173435Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T13:30:08.8173726Z 
2025-08-20T13:30:08.8173865Z # api.tests.test\_sentry\_scrub
2025-08-20T13:30:08.8174114Z 
2025-08-20T13:30:08.8174224Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T13:30:08.8174418Z 
2025-08-20T13:30:08.8174714Z # api.tests.test\_roi\_basic\_auth
2025-08-20T13:30:08.8174895Z 
2025-08-20T13:30:08.8174995Z <a id="api.tests.test_errors_json"></a>
2025-08-20T13:30:08.8175180Z 
2025-08-20T13:30:08.8175273Z # api.tests.test\_errors\_json
2025-08-20T13:30:08.8175427Z 
2025-08-20T13:30:08.8175512Z <a id="api.tests.test_llm"></a>
2025-08-20T13:30:08.8175665Z 
2025-08-20T13:30:08.8175752Z # api.tests.test\_llm
2025-08-20T13:30:08.8175878Z 
2025-08-20T13:30:08.8175971Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T13:30:08.8176156Z 
2025-08-20T13:30:08.8176239Z # api.tests.test\_roi\_filters
2025-08-20T13:30:08.8176388Z 
2025-08-20T13:30:08.8176497Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T13:30:08.8176685Z 
2025-08-20T13:30:08.8176770Z # api.tests.test\_sentry\_event
2025-08-20T13:30:08.8176919Z 
2025-08-20T13:30:08.8177060Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T13:30:08.8177288Z 
2025-08-20T13:30:08.8177372Z ## DummyTransport Objects
2025-08-20T13:30:08.8177519Z 
2025-08-20T13:30:08.8177590Z ```python
2025-08-20T13:30:08.8177769Z class DummyTransport()
2025-08-20T13:30:08.8177970Z ```
2025-08-20T13:30:08.8178061Z 
2025-08-20T13:30:08.8178259Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T13:30:08.8178747Z 
2025-08-20T13:30:08.8178856Z #### capture\_envelope
2025-08-20T13:30:08.8178990Z 
2025-08-20T13:30:08.8179059Z ```python
2025-08-20T13:30:08.8179244Z def capture_envelope(envelope)
2025-08-20T13:30:08.8179468Z ```
2025-08-20T13:30:08.8179557Z 
2025-08-20T13:30:08.8179691Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T13:30:08.8179933Z 
2025-08-20T13:30:08.8180022Z <a id="api.tests.test_cors"></a>
2025-08-20T13:30:08.8180469Z 
2025-08-20T13:30:08.8180556Z # api.tests.test\_cors
2025-08-20T13:30:08.8180682Z 
2025-08-20T13:30:08.8180773Z <a id="api.tests.test_imports"></a>
2025-08-20T13:30:08.8180951Z 
2025-08-20T13:30:08.8181032Z # api.tests.test\_imports
2025-08-20T13:30:08.8181170Z 
2025-08-20T13:30:08.8181268Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T13:30:08.8181450Z 
2025-08-20T13:30:08.8181535Z # api.tests.test\_rate\_limit
2025-08-20T13:30:08.8181686Z 
2025-08-20T13:30:08.8181794Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T13:30:08.8181983Z 
2025-08-20T13:30:08.8182051Z #### app
2025-08-20T13:30:08.8182152Z 
2025-08-20T13:30:08.8182222Z noqa: E402
2025-08-20T13:30:08.8182319Z 
2025-08-20T13:30:08.8182411Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T13:30:08.8182588Z 
2025-08-20T13:30:08.8182673Z # api.tests.test\_stats\_sql
2025-08-20T13:30:08.8182821Z 
2025-08-20T13:30:08.8182919Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T13:30:08.8183108Z 
2025-08-20T13:30:08.8183195Z # api.tests.test\_entrypoint
2025-08-20T13:30:08.8183344Z 
2025-08-20T13:30:08.8183468Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T13:30:08.8183685Z 
2025-08-20T13:30:08.8183785Z # api.tests.test\_stats\_future\_contracts
2025-08-20T13:30:08.8183978Z 
2025-08-20T13:30:08.8184071Z <a id="api.tests.test_health"></a>
2025-08-20T13:30:08.8184228Z 
2025-08-20T13:30:08.8184314Z # api.tests.test\_health
2025-08-20T13:30:08.8184440Z 
2025-08-20T13:30:08.8184521Z <a id="api.tests.test_score"></a>
2025-08-20T13:30:08.8184669Z 
2025-08-20T13:30:08.8184751Z # api.tests.test\_score
2025-08-20T13:30:08.8184869Z 
2025-08-20T13:30:08.8184948Z <a id="api.logging_config"></a>
2025-08-20T13:30:08.8185090Z 
2025-08-20T13:30:08.8185161Z # api.logging\_config
2025-08-20T13:30:08.8185275Z 
2025-08-20T13:30:08.8185362Z <a id="api.migrations.env"></a>
2025-08-20T13:30:08.8185503Z 
2025-08-20T13:30:08.8185575Z # api.migrations.env
2025-08-20T13:30:08.8185820Z 
2025-08-20T13:30:08.8185949Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T13:30:08.8186148Z 
2025-08-20T13:30:08.8186250Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T13:30:08.8186434Z 
2025-08-20T13:30:08.8186538Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T13:30:08.8186720Z 
2025-08-20T13:30:08.8186819Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T13:30:08.8186986Z 
2025-08-20T13:30:08.8187135Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T13:30:08.8187365Z 
2025-08-20T13:30:08.8187505Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T13:30:08.8187717Z 
2025-08-20T13:30:08.8187835Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T13:30:08.8188037Z 
2025-08-20T13:30:08.8188140Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T13:30:08.8188319Z 
2025-08-20T13:30:08.8188438Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T13:30:08.8188837Z 
2025-08-20T13:30:08.8188943Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T13:30:08.8189188Z 
2025-08-20T13:30:08.8189309Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T13:30:08.8189508Z 
2025-08-20T13:30:08.8189630Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T13:30:08.8189814Z 
2025-08-20T13:30:08.8189930Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T13:30:08.8190126Z 
2025-08-20T13:30:08.8190231Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T13:30:08.8190414Z 
2025-08-20T13:30:08.8190539Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T13:30:08.8190737Z 
2025-08-20T13:30:08.8190837Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T13:30:08.8191017Z 
2025-08-20T13:30:08.8191155Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T13:30:08.8191371Z 
2025-08-20T13:30:08.8191487Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T13:30:08.8191685Z 
2025-08-20T13:30:08.8191808Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T13:30:08.8192162Z 
2025-08-20T13:30:08.8192277Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T13:30:08.8192463Z 
2025-08-20T13:30:08.8192597Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T13:30:08.8192819Z 
2025-08-20T13:30:08.8192935Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T13:30:08.8193129Z 
2025-08-20T13:30:08.8193243Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T13:30:08.8193441Z 
2025-08-20T13:30:08.8193534Z # api.migrations.versions.0001\_baseline
2025-08-20T13:30:08.8193718Z 
2025-08-20T13:30:08.8193814Z <a id="api.migrations.versions"></a>
2025-08-20T13:30:08.8193976Z 
2025-08-20T13:30:08.8194057Z # api.migrations.versions
2025-08-20T13:30:08.8194197Z 
2025-08-20T13:30:08.8194274Z <a id="api.migrations"></a>
2025-08-20T13:30:08.8194410Z 
2025-08-20T13:30:08.8194477Z # api.migrations
2025-08-20T13:30:08.8194587Z 
2025-08-20T13:30:08.8194658Z <a id="api.db"></a>
2025-08-20T13:30:08.8194770Z 
2025-08-20T13:30:08.8194839Z # api.db
2025-08-20T13:30:08.8194928Z 
2025-08-20T13:30:08.8195006Z <a id="api.routes.score"></a>
2025-08-20T13:30:08.8195151Z 
2025-08-20T13:30:08.8195220Z # api.routes.score
2025-08-20T13:30:08.8195326Z 
2025-08-20T13:30:08.8195403Z <a id="api.routes.stats"></a>
2025-08-20T13:30:08.8195545Z 
2025-08-20T13:30:08.8195611Z # api.routes.stats
2025-08-20T13:30:08.8195714Z 
2025-08-20T13:30:08.8195794Z <a id="api.routes.roi"></a>
2025-08-20T13:30:08.8195920Z 
2025-08-20T13:30:08.8195985Z # api.routes.roi
2025-08-20T13:30:08.8196086Z 
2025-08-20T13:30:08.8196173Z <a id="api.routes.health"></a>
2025-08-20T13:30:08.8196312Z 
2025-08-20T13:30:08.8196382Z # api.routes.health
2025-08-20T13:30:08.8196500Z 
2025-08-20T13:30:08.8196594Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T13:30:08.8196759Z 
2025-08-20T13:30:08.8196831Z #### MAX\_SKEW
2025-08-20T13:30:08.8196929Z 
2025-08-20T13:30:08.8196992Z seconds
2025-08-20T13:30:08.8197200Z 
2025-08-20T13:30:08.8197296Z <a id="api.routes.health.health"></a>
2025-08-20T13:30:08.8197465Z 
2025-08-20T13:30:08.8197528Z #### health
2025-08-20T13:30:08.8197625Z 
2025-08-20T13:30:08.8197689Z ```python
2025-08-20T13:30:08.8197885Z @router.get("/health", include_in_schema=False)
2025-08-20T13:30:08.8198290Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T13:30:08.8198750Z ```
2025-08-20T13:30:08.8198834Z 
2025-08-20T13:30:08.8198949Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T13:30:08.8199146Z 
2025-08-20T13:30:08.8199240Z <a id="api.routes.repository"></a>
2025-08-20T13:30:08.8199394Z 
2025-08-20T13:30:08.8199471Z # api.routes.repository
2025-08-20T13:30:08.8199600Z 
2025-08-20T13:30:08.8199672Z <a id="api.routes"></a>
2025-08-20T13:30:08.8199785Z 
2025-08-20T13:30:08.8199850Z # api.routes
2025-08-20T13:30:08.8199955Z 
2025-08-20T13:30:08.8200029Z <a id="api.models.fee"></a>
2025-08-20T13:30:08.8200159Z 
2025-08-20T13:30:08.8200241Z # api.models.fee
2025-08-20T13:30:08.8200351Z 
2025-08-20T13:30:08.8200422Z <a id="api.models"></a>
2025-08-20T13:30:08.8200540Z 
2025-08-20T13:30:08.8200602Z # api.models
2025-08-20T13:30:08.8200699Z 
2025-08-20T13:30:08.8200777Z <a id="api.roi_repository"></a>
2025-08-20T13:30:08.8200924Z 
2025-08-20T13:30:08.8200995Z # api.roi\_repository
2025-08-20T13:30:08.8201108Z 
2025-08-20T13:30:08.8201184Z <a id="api.main"></a>
2025-08-20T13:30:08.8201294Z 
2025-08-20T13:30:08.8201355Z # api.main
2025-08-20T13:30:08.8201444Z 
2025-08-20T13:30:08.8201525Z <a id="api.main.ready"></a>
2025-08-20T13:30:08.8201652Z 
2025-08-20T13:30:08.8201714Z #### ready
2025-08-20T13:30:08.8201806Z 
2025-08-20T13:30:08.8201867Z ```python
2025-08-20T13:30:08.8202140Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T13:30:08.8202564Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T13:30:08.8202927Z                                                                       str]
2025-08-20T13:30:08.8203162Z ```
2025-08-20T13:30:08.8203387Z 
2025-08-20T13:30:08.8203486Z Return 200 only when migrations are at head.
2025-08-20T13:30:08.8203667Z 
2025-08-20T13:30:08.8203747Z <a id="api.config"></a>
2025-08-20T13:30:08.8203864Z 
2025-08-20T13:30:08.8203927Z # api.config
2025-08-20T13:30:08.8204024Z 
2025-08-20T13:30:08.8204100Z <a id="api.security"></a>
2025-08-20T13:30:08.8204226Z 
2025-08-20T13:30:08.8204291Z # api.security
2025-08-20T13:30:08.8204397Z 
2025-08-20T13:30:08.8204462Z <a id="etl"></a>
2025-08-20T13:30:08.8204563Z 
2025-08-20T13:30:08.8204630Z # etl
2025-08-20T13:30:08.8204714Z 
2025-08-20T13:30:08.8204794Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T13:30:08.8204941Z 
2025-08-20T13:30:08.8205019Z # etl.fba\_fee\_ingestor
2025-08-20T13:30:08.8205140Z 
2025-08-20T13:30:08.8205220Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T13:30:08.8205369Z 
2025-08-20T13:30:08.8205439Z # etl.sp\_fees\_ingestor
2025-08-20T13:30:08.8205557Z 
2025-08-20T13:30:08.8205638Z <a id="etl.keepa_ingestor"></a>
2025-08-20T13:30:08.8205784Z 
2025-08-20T13:30:08.8205853Z # etl.keepa\_ingestor
2025-08-20T13:30:08.8205965Z 
2025-08-20T13:30:08.8206035Z <a id="etl.db"></a>
2025-08-20T13:30:08.8206139Z 
2025-08-20T13:30:08.8206199Z # etl.db
2025-08-20T13:30:08.8206289Z 
2025-08-20T13:30:08.8206370Z <a id="etl.dialects.schemas"></a>
2025-08-20T13:30:08.8206515Z 
2025-08-20T13:30:08.8206587Z # etl.dialects.schemas
2025-08-20T13:30:08.8206710Z 
2025-08-20T13:30:08.8206813Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T13:30:08.8206994Z 
2025-08-20T13:30:08.8207087Z # etl.dialects.amazon\_reimbursements
2025-08-20T13:30:08.8207248Z 
2025-08-20T13:30:08.8207341Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T13:30:08.8207513Z 
2025-08-20T13:30:08.8207597Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T13:30:08.8207750Z 
2025-08-20T13:30:08.8207839Z <a id="etl.dialects.test_generic"></a>
2025-08-20T13:30:08.8208004Z 
2025-08-20T13:30:08.8208085Z # etl.dialects.test\_generic
2025-08-20T13:30:08.8208340Z 
2025-08-20T13:30:08.8208445Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T13:30:08.8208723Z 
2025-08-20T13:30:08.8208803Z # etl.dialects.amazon\_returns
2025-08-20T13:30:08.8208947Z 
2025-08-20T13:30:08.8209039Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T13:30:08.8209235Z 
2025-08-20T13:30:08.8209319Z # etl.dialects.amazon\_fee\_preview
2025-08-20T13:30:08.8209479Z 
2025-08-20T13:30:08.8209584Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T13:30:08.8209767Z 
2025-08-20T13:30:08.8209859Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T13:30:08.8210021Z 
2025-08-20T13:30:08.8210114Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T13:30:08.8210286Z 
2025-08-20T13:30:08.8210369Z # etl.dialects.amazon\_settlements
2025-08-20T13:30:08.8210519Z 
2025-08-20T13:30:08.8210592Z <a id="etl.dialects"></a>
2025-08-20T13:30:08.8210721Z 
2025-08-20T13:30:08.8210785Z # etl.dialects
2025-08-20T13:30:08.8210882Z 
2025-08-20T13:30:08.8210954Z <a id="ingest"></a>
2025-08-20T13:30:08.8211065Z 
2025-08-20T13:30:08.8211131Z # ingest
2025-08-20T13:30:08.8211220Z 
2025-08-20T13:30:08.8211300Z <a id="ingest.maintenance"></a>
2025-08-20T13:30:08.8211440Z 
2025-08-20T13:30:08.8211511Z # ingest.maintenance
2025-08-20T13:30:08.8211629Z 
2025-08-20T13:30:08.8211706Z <a id="ingest.copy_loader"></a>
2025-08-20T13:30:08.8211841Z 
2025-08-20T13:30:08.8211917Z # ingest.copy\_loader
2025-08-20T13:30:08.8212030Z 
2025-08-20T13:30:08.8212129Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T13:30:08.8212316Z 
2025-08-20T13:30:08.8212388Z #### copy\_df\_via\_temp
2025-08-20T13:30:08.8212509Z 
2025-08-20T13:30:08.8212572Z ```python
2025-08-20T13:30:08.8212742Z def copy_df_via_temp(engine: Engine,
2025-08-20T13:30:08.8212974Z                      df: pd.DataFrame,
2025-08-20T13:30:08.8213212Z                      target_table: str,
2025-08-20T13:30:08.8213439Z                      *,
2025-08-20T13:30:08.8213639Z                      target_schema: Optional[str] = None,
2025-08-20T13:30:08.8213909Z                      columns: Sequence[str],
2025-08-20T13:30:08.8214297Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T13:30:08.8214578Z                      analyze_after: bool = False,
2025-08-20T13:30:08.8214835Z                      connection: Any | None = None) -> int
2025-08-20T13:30:08.8215076Z ```
2025-08-20T13:30:08.8215164Z 
2025-08-20T13:30:08.8215324Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T13:30:08.8215556Z 
2025-08-20T13:30:08.8215641Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T13:30:08.8215797Z 
2025-08-20T13:30:08.8215883Z # ingest.tests.test\_smoke
2025-08-20T13:30:08.8216011Z 
2025-08-20T13:30:08.8216085Z <a id="ingest.tests"></a>
2025-08-20T13:30:08.8216213Z 
2025-08-20T13:30:08.8216282Z # ingest.tests
2025-08-20T13:30:08.8216380Z 
2025-08-20T13:30:08.8216468Z <a id="ingest.upload_router"></a>
2025-08-20T13:30:08.8216613Z 
2025-08-20T13:30:08.8216685Z # ingest.upload\_router
2025-08-20T13:30:08.8216808Z 
2025-08-20T13:30:08.8216898Z <a id="ingest.email_watcher"></a>
2025-08-20T13:30:08.8217041Z 
2025-08-20T13:30:08.8217118Z # ingest.email\_watcher
2025-08-20T13:30:08.8217241Z 
2025-08-20T13:30:08.8217326Z <a id="ingest.email_watcher.main"></a>
2025-08-20T13:30:08.8217485Z 
2025-08-20T13:30:08.8217546Z #### main
2025-08-20T13:30:08.8217638Z 
2025-08-20T13:30:08.8217701Z ```python
2025-08-20T13:30:08.8217863Z def main() -> dict[str, str]
2025-08-20T13:30:08.8218050Z ```
2025-08-20T13:30:08.8218130Z 
2025-08-20T13:30:08.8218274Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T13:30:08.8218497Z 
2025-08-20T13:30:08.8218728Z Returns {"status": "success"} when processing completes.
2025-08-20T13:30:08.8218940Z 
2025-08-20T13:30:08.8219016Z <a id="ingest.tasks"></a>
2025-08-20T13:30:08.8219140Z 
2025-08-20T13:30:08.8219209Z # ingest.tasks
2025-08-20T13:30:08.8219314Z 
2025-08-20T13:30:08.8219412Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T13:30:08.8219586Z 
2025-08-20T13:30:08.8219791Z #### task\_import\_file
2025-08-20T13:30:08.8219921Z 
2025-08-20T13:30:08.8219984Z ```python
2025-08-20T13:30:08.8220187Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T13:30:08.8220468Z def task_import_file(self: Any,
2025-08-20T13:30:08.8220674Z                      uri: str,
2025-08-20T13:30:08.8220899Z                      report_type: str | None = None,
2025-08-20T13:30:08.8221183Z                      force: bool = False) -> dict[str, Any]
2025-08-20T13:30:08.8221427Z ```
2025-08-20T13:30:08.8221508Z 
2025-08-20T13:30:08.8221643Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T13:30:08.8221850Z 
2025-08-20T13:30:08.8221928Z <a id="ingest.celery_app"></a>
2025-08-20T13:30:08.8222072Z 
2025-08-20T13:30:08.8222143Z # ingest.celery\_app
2025-08-20T13:30:08.8222255Z 
2025-08-20T13:30:08.8222344Z <a id="ingest.ingest_router"></a>
2025-08-20T13:30:08.8222491Z 
2025-08-20T13:30:08.8222565Z # ingest.ingest\_router
2025-08-20T13:30:08.8222683Z 
2025-08-20T13:30:08.8222769Z <a id="logistics_etl"></a>
2025-08-20T13:30:08.8222900Z 
2025-08-20T13:30:08.8222966Z # logistics\_etl
2025-08-20T13:30:08.8223074Z 
2025-08-20T13:30:08.8223147Z Daily logistics ETL job.
2025-08-20T13:30:08.8223268Z 
2025-08-20T13:30:08.8223362Z <a id="logistics_etl.__main__"></a>
2025-08-20T13:30:08.8223512Z 
2025-08-20T13:30:08.8223589Z # logistics\_etl.\_\_main\_\_
2025-08-20T13:30:08.8223724Z 
2025-08-20T13:30:08.8223807Z <a id="logistics_etl.dsn"></a>
2025-08-20T13:30:08.8223938Z 
2025-08-20T13:30:08.8224005Z # logistics\_etl.dsn
2025-08-20T13:30:08.8224117Z 
2025-08-20T13:30:08.8224230Z Local DSN builder to avoid cross-service dependency.
2025-08-20T13:30:08.8224430Z 
2025-08-20T13:30:08.8224517Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T13:30:08.8224687Z 
2025-08-20T13:30:08.8224750Z #### build\_dsn
2025-08-20T13:30:08.8224847Z 
2025-08-20T13:30:08.8224915Z ```python
2025-08-20T13:30:08.8225084Z def build_dsn(sync: bool = True) -> str
2025-08-20T13:30:08.8225309Z ```
2025-08-20T13:30:08.8225395Z 
2025-08-20T13:30:08.8225657Z Return a Postgres DSN assembled from environment variables.
2025-08-20T13:30:08.8225889Z 
2025-08-20T13:30:08.8226034Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T13:30:08.8226418Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T13:30:08.8226751Z error when any required variable is missing.
2025-08-20T13:30:08.8226923Z 
2025-08-20T13:30:08.8227021Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T13:30:08.8227189Z 
2025-08-20T13:30:08.8227271Z # logistics\_etl.tests.conftest
2025-08-20T13:30:08.8227419Z 
2025-08-20T13:30:08.8227519Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T13:30:08.8227701Z 
2025-08-20T13:30:08.8227796Z # logistics\_etl.tests.test\_repository
2025-08-20T13:30:08.8227958Z 
2025-08-20T13:30:08.8228046Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T13:30:08.8228213Z 
2025-08-20T13:30:08.8228300Z # logistics\_etl.tests.test\_cron
2025-08-20T13:30:08.8228449Z 
2025-08-20T13:30:08.8228676Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T13:30:08.8228867Z 
2025-08-20T13:30:08.8228950Z # logistics\_etl.tests.test\_imports
2025-08-20T13:30:08.8229104Z 
2025-08-20T13:30:08.8229200Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T13:30:08.8229369Z 
2025-08-20T13:30:08.8229450Z # logistics\_etl.tests.test\_smoke
2025-08-20T13:30:08.8229596Z 
2025-08-20T13:30:08.8229693Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T13:30:08.8229858Z 
2025-08-20T13:30:08.8229939Z # logistics\_etl.tests.test\_client
2025-08-20T13:30:08.8230101Z 
2025-08-20T13:30:08.8230179Z <a id="logistics_etl.tests"></a>
2025-08-20T13:30:08.8230319Z 
2025-08-20T13:30:08.8230393Z # logistics\_etl.tests
2025-08-20T13:30:08.8230507Z 
2025-08-20T13:30:08.8230583Z <a id="logistics_etl.flow"></a>
2025-08-20T13:30:08.8230720Z 
2025-08-20T13:30:08.8230795Z # logistics\_etl.flow
2025-08-20T13:30:08.8230908Z 
2025-08-20T13:30:08.8230991Z <a id="logistics_etl.client"></a>
2025-08-20T13:30:08.8231261Z 
2025-08-20T13:30:08.8314091Z # logistics\_etl.client
2025-08-20T13:30:08.8314411Z 
2025-08-20T13:30:08.8314595Z <a id="logistics_etl.cron"></a>
2025-08-20T13:30:08.8314904Z 
2025-08-20T13:30:08.8315057Z # logistics\_etl.cron
2025-08-20T13:30:08.8315308Z 
2025-08-20T13:30:08.8315487Z <a id="logistics_etl.db"></a>
2025-08-20T13:30:08.8315780Z 
2025-08-20T13:30:08.8315941Z # logistics\_etl.db
2025-08-20T13:30:08.8316098Z 
2025-08-20T13:30:08.8316212Z <a id="logistics_etl.repository"></a>
2025-08-20T13:30:08.8316431Z 
2025-08-20T13:30:08.8316597Z # logistics\_etl.repository
2025-08-20T13:30:08.8316915Z 
2025-08-20T13:30:08.8317066Z <a id="alert_bot"></a>
2025-08-20T13:30:08.8317309Z 
2025-08-20T13:30:08.8317448Z # alert\_bot
2025-08-20T13:30:08.8317661Z 
2025-08-20T13:30:08.8317845Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T13:30:08.8318210Z 
2025-08-20T13:30:08.8318375Z # alert\_bot.tests.test\_smoke
2025-08-20T13:30:08.8319016Z 
2025-08-20T13:30:08.8319187Z <a id="alert_bot.tests"></a>
2025-08-20T13:30:08.8319489Z 
2025-08-20T13:30:08.8319647Z # alert\_bot.tests
2025-08-20T13:30:08.8319869Z 
2025-08-20T13:30:08.8320044Z <a id="alert_bot.alert_bot"></a>
2025-08-20T13:30:08.8320345Z 
2025-08-20T13:30:08.8320492Z # alert\_bot.alert\_bot
2025-08-20T13:30:08.8320749Z 
2025-08-20T13:30:08.8320905Z <a id="alert_bot.rules"></a>
2025-08-20T13:30:08.8321307Z 
2025-08-20T13:30:08.8321453Z # alert\_bot.rules
2025-08-20T13:30:08.8321674Z 
2025-08-20T13:30:08.8321813Z <a id="common"></a>
2025-08-20T13:30:08.8322037Z 
2025-08-20T13:30:08.8322178Z # common
2025-08-20T13:30:08.8322364Z 
2025-08-20T13:30:08.8322456Z <a id="common.dsn"></a>
2025-08-20T13:30:08.8322609Z 
2025-08-20T13:30:08.8322688Z # common.dsn
2025-08-20T13:30:08.8322802Z 
2025-08-20T13:30:08.8322905Z <a id="common.dsn.build_dsn"></a>
2025-08-20T13:30:08.8323097Z 
2025-08-20T13:30:08.8323175Z #### build\_dsn
2025-08-20T13:30:08.8323300Z 
2025-08-20T13:30:08.8323387Z ```python
2025-08-20T13:30:08.8323604Z def build_dsn(sync: bool = True) -> str
2025-08-20T13:30:08.8323899Z ```
2025-08-20T13:30:08.8324231Z 
2025-08-20T13:30:08.8324391Z Return a Postgres DSN, validating required variables.
2025-08-20T13:30:08.8324654Z 
2025-08-20T13:30:08.8324892Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T13:30:08.8325386Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T13:30:08.8325801Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T13:30:08.8326112Z missing.
2025-08-20T13:30:08.8326198Z 
2025-08-20T13:30:08.8326281Z <a id="common.models_vendor"></a>
2025-08-20T13:30:08.8326435Z 
2025-08-20T13:30:08.8326506Z # common.models\_vendor
2025-08-20T13:30:08.8326624Z 
2025-08-20T13:30:08.8326710Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T13:30:08.8326882Z 
2025-08-20T13:30:08.8326947Z ## Vendor Objects
2025-08-20T13:30:08.8327051Z 
2025-08-20T13:30:08.8327117Z ```python
2025-08-20T13:30:08.8327262Z class Vendor(Base)
2025-08-20T13:30:08.8327431Z ```
2025-08-20T13:30:08.8327516Z 
2025-08-20T13:30:08.8327591Z Vendor of inventory items.
2025-08-20T13:30:08.8327726Z 
2025-08-20T13:30:08.8327825Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T13:30:08.8328005Z 
2025-08-20T13:30:08.8328075Z ## VendorPrice Objects
2025-08-20T13:30:08.8328197Z 
2025-08-20T13:30:08.8328257Z ```python
2025-08-20T13:30:08.8328412Z class VendorPrice(Base)
2025-08-20T13:30:08.8328792Z ```
2025-08-20T13:30:08.8328875Z 
2025-08-20T13:30:08.8328984Z Association table linking vendors to pricing.
2025-08-20T13:30:08.8329165Z 
2025-08-20T13:30:08.8329237Z <a id="common.db_url"></a>
2025-08-20T13:30:08.8329367Z 
2025-08-20T13:30:08.8329430Z # common.db\_url
2025-08-20T13:30:08.8329532Z 
2025-08-20T13:30:08.8329613Z <a id="common.db_url.build_url"></a>
2025-08-20T13:30:08.8329771Z 
2025-08-20T13:30:08.8329833Z #### build\_url
2025-08-20T13:30:08.8329931Z 
2025-08-20T13:30:08.8329997Z ```python
2025-08-20T13:30:08.8330170Z def build_url(async_: bool = True) -> str
2025-08-20T13:30:08.8330547Z ```
2025-08-20T13:30:08.8330632Z 
2025-08-20T13:30:08.8330727Z Return Postgres DSN from env or PG_* parts.
2025-08-20T13:30:08.8330907Z 
2025-08-20T13:30:08.8330983Z <a id="common.keepa"></a>
2025-08-20T13:30:08.8331112Z 
2025-08-20T13:30:08.8331184Z # common.keepa
2025-08-20T13:30:08.8331284Z 
2025-08-20T13:30:08.8331354Z <a id="common.llm"></a>
2025-08-20T13:30:08.8331471Z 
2025-08-20T13:30:08.8331539Z # common.llm
2025-08-20T13:30:08.8331631Z 
2025-08-20T13:30:08.8331710Z <a id="common.settings"></a>
2025-08-20T13:30:08.8331850Z 
2025-08-20T13:30:08.8331916Z # common.settings
2025-08-20T13:30:08.8332018Z 
2025-08-20T13:30:08.8332089Z <a id="common.db"></a>
2025-08-20T13:30:08.8332207Z 
2025-08-20T13:30:08.8332268Z # common.db
2025-08-20T13:30:08.8332357Z 
2025-08-20T13:30:08.8332454Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T13:30:08.8332625Z 
2025-08-20T13:30:08.8332699Z #### build\_sqlalchemy\_url
2025-08-20T13:30:08.8332833Z 
2025-08-20T13:30:08.8332893Z ```python
2025-08-20T13:30:08.8333061Z def build_sqlalchemy_url() -> str
2025-08-20T13:30:08.8333272Z ```
2025-08-20T13:30:08.8333352Z 
2025-08-20T13:30:08.8333443Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T13:30:08.8333617Z 
2025-08-20T13:30:08.8333712Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T13:30:08.8333876Z 
2025-08-20T13:30:08.8333953Z #### build\_asyncpg\_dsn
2025-08-20T13:30:08.8334077Z 
2025-08-20T13:30:08.8334137Z ```python
2025-08-20T13:30:08.8334317Z def build_asyncpg_dsn() -> str
2025-08-20T13:30:08.8334511Z ```
2025-08-20T13:30:08.8334600Z 
2025-08-20T13:30:08.8334730Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T13:30:08.8334939Z 
2025-08-20T13:30:08.8335032Z <a id="common.db.refresh_mvs"></a>
2025-08-20T13:30:08.8335183Z 
2025-08-20T13:30:08.8335248Z #### refresh\_mvs
2025-08-20T13:30:08.8335350Z 
2025-08-20T13:30:08.8335419Z ```python
2025-08-20T13:30:08.8335606Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T13:30:08.8335857Z ```
2025-08-20T13:30:08.8335941Z 
2025-08-20T13:30:08.8336196Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T13:30:08.8336418Z 
2025-08-20T13:30:08.8336493Z <a id="common.config"></a>
2025-08-20T13:30:08.8336624Z 
2025-08-20T13:30:08.8336696Z # common.config
2025-08-20T13:30:08.8336796Z 
2025-08-20T13:30:08.8336868Z <a id="common.base"></a>
2025-08-20T13:30:08.8336988Z 
2025-08-20T13:30:08.8337055Z # common.base
2025-08-20T13:30:08.8337150Z 
2025-08-20T13:30:08.8337227Z <a id="common.base.Base"></a>
2025-08-20T13:30:08.8337372Z 
2025-08-20T13:30:08.8337434Z ## Base Objects
2025-08-20T13:30:08.8337529Z 
2025-08-20T13:30:08.8337592Z ```python
2025-08-20T13:30:08.8337750Z class Base(DeclarativeBase)
2025-08-20T13:30:08.8337938Z ```
2025-08-20T13:30:08.8338015Z 
2025-08-20T13:30:08.8338094Z Base class for SQLAlchemy models.
2025-08-20T13:30:08.8338244Z 
2025-08-20T13:30:08.8338314Z <a id="repricer"></a>
2025-08-20T13:30:08.8338427Z 
2025-08-20T13:30:08.8338490Z # repricer
2025-08-20T13:30:08.8338782Z 
2025-08-20T13:30:08.8338942Z <a id="repricer.app.schemas"></a>
2025-08-20T13:30:08.8339102Z 
2025-08-20T13:30:08.8339183Z # repricer.app.schemas
2025-08-20T13:30:08.8339300Z 
2025-08-20T13:30:08.8339382Z <a id="repricer.app.deps"></a>
2025-08-20T13:30:08.8339522Z 
2025-08-20T13:30:08.8339597Z # repricer.app.deps
2025-08-20T13:30:08.8339706Z 
2025-08-20T13:30:08.8339825Z Placeholder module for Keepa / SP-API clients.
2025-08-20T13:30:08.8340011Z 
2025-08-20T13:30:08.8340093Z <a id="repricer.app.logic"></a>
2025-08-20T13:30:08.8340235Z 
2025-08-20T13:30:08.8340313Z # repricer.app.logic
2025-08-20T13:30:08.8340425Z 
2025-08-20T13:30:08.8340518Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T13:30:08.8340691Z 
2025-08-20T13:30:08.8340761Z #### MIN\_MARGIN
2025-08-20T13:30:08.8340864Z 
2025-08-20T13:30:08.8340925Z 15 % ROI
2025-08-20T13:30:08.8341016Z 
2025-08-20T13:30:08.8341118Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T13:30:08.8341300Z 
2025-08-20T13:30:08.8341367Z #### compute\_price
2025-08-20T13:30:08.8341621Z 
2025-08-20T13:30:08.8341689Z ```python
2025-08-20T13:30:08.8341937Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T13:30:08.8342233Z ```
2025-08-20T13:30:08.8342317Z 
2025-08-20T13:30:08.8342430Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T13:30:08.8342706Z Replace with real competitive logic later.
2025-08-20T13:30:08.8342886Z 
2025-08-20T13:30:08.8342970Z <a id="repricer.app.main"></a>
2025-08-20T13:30:08.8343113Z 
2025-08-20T13:30:08.8343190Z # repricer.app.main
2025-08-20T13:30:08.8343297Z 
2025-08-20T13:30:08.8343371Z <a id="repricer.app"></a>
2025-08-20T13:30:08.8343497Z 
2025-08-20T13:30:08.8343569Z # repricer.app
2025-08-20T13:30:08.8343667Z 
2025-08-20T13:30:08.8343757Z <a id="repricer.tests.test_imports"></a>
2025-08-20T13:30:08.8343936Z 
2025-08-20T13:30:08.8344016Z # repricer.tests.test\_imports
2025-08-20T13:30:08.8344152Z 
2025-08-20T13:30:08.8344240Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T13:30:08.8344405Z 
2025-08-20T13:30:08.8344492Z # repricer.tests.test\_smoke
2025-08-20T13:30:08.8344635Z 
2025-08-20T13:30:08.8344719Z <a id="repricer.tests"></a>
2025-08-20T13:30:08.8344852Z 
2025-08-20T13:30:08.8344922Z # repricer.tests
2025-08-20T13:30:08.8345040Z 
2025-08-20T13:30:08.8345105Z <a id="db"></a>
2025-08-20T13:30:08.8345209Z 
2025-08-20T13:30:08.8345269Z # db
2025-08-20T13:30:08.8345359Z 
2025-08-20T13:30:08.8345435Z <a id="db.utils.views"></a>
2025-08-20T13:30:08.8345573Z 
2025-08-20T13:30:08.8345644Z # db.utils.views
2025-08-20T13:30:08.8345746Z 
2025-08-20T13:30:08.8345850Z <a id="db.utils.views.replace_view"></a>
2025-08-20T13:30:08.8346023Z 
2025-08-20T13:30:08.8346096Z #### replace\_view
2025-08-20T13:30:08.8346203Z 
2025-08-20T13:30:08.8346267Z ```python
2025-08-20T13:30:08.8346465Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T13:30:08.8346710Z ```
2025-08-20T13:30:08.8346801Z 
2025-08-20T13:30:08.8346889Z Drop and recreate a SQL view atomically.
2025-08-20T13:30:08.8347057Z 
2025-08-20T13:30:08.8347142Z <a id="db.utils"></a>
2025-08-20T13:30:08.8347433Z 
2025-08-20T13:30:08.8347497Z # db.utils
2025-08-20T13:30:08.8347593Z 
2025-08-20T13:30:08.8347671Z <a id="price_importer"></a>
2025-08-20T13:30:08.8347804Z 
2025-08-20T13:30:08.8347872Z # price\_importer
2025-08-20T13:30:08.8347981Z 
2025-08-20T13:30:08.8348082Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T13:30:08.8348265Z 
2025-08-20T13:30:08.8348359Z # price\_importer.services\_common.dsn
2025-08-20T13:30:08.8348695Z 
2025-08-20T13:30:08.8348889Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T13:30:08.8349108Z 
2025-08-20T13:30:08.8349172Z #### build\_dsn
2025-08-20T13:30:08.8349273Z 
2025-08-20T13:30:08.8349334Z ```python
2025-08-20T13:30:08.8349505Z def build_dsn(sync: bool = True) -> str
2025-08-20T13:30:08.8349719Z ```
2025-08-20T13:30:08.8349805Z 
2025-08-20T13:30:08.8349871Z Return safe DSN.
2025-08-20T13:30:08.8349972Z 
2025-08-20T13:30:08.8350328Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T13:30:08.8350543Z 
2025-08-20T13:30:08.8350681Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T13:30:08.8350891Z 
2025-08-20T13:30:08.8351001Z # price\_importer.services\_common.models\_vendor
2025-08-20T13:30:08.8351191Z 
2025-08-20T13:30:08.8351296Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T13:30:08.8351489Z 
2025-08-20T13:30:08.8351582Z # price\_importer.services\_common.db\_url
2025-08-20T13:30:08.8351750Z 
2025-08-20T13:30:08.8351888Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T13:30:08.8352100Z 
2025-08-20T13:30:08.8352166Z #### build\_url
2025-08-20T13:30:08.8352271Z 
2025-08-20T13:30:08.8352334Z ```python
2025-08-20T13:30:08.8352507Z def build_url(async_: bool = True) -> str
2025-08-20T13:30:08.8352739Z ```
2025-08-20T13:30:08.8352823Z 
2025-08-20T13:30:08.8352928Z Return Postgres DSN from env or PG_* parts.
2025-08-20T13:30:08.8353106Z 
2025-08-20T13:30:08.8353214Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T13:30:08.8353551Z 
2025-08-20T13:30:08.8353659Z # price\_importer.services\_common.keepa
2025-08-20T13:30:08.8353830Z 
2025-08-20T13:30:08.8353932Z <a id="price_importer.services_common.llm"></a>
2025-08-20T13:30:08.8354120Z 
2025-08-20T13:30:08.8354210Z # price\_importer.services\_common.llm
2025-08-20T13:30:08.8354372Z 
2025-08-20T13:30:08.8354493Z <a id="price_importer.services_common.settings"></a>
2025-08-20T13:30:08.8354688Z 
2025-08-20T13:30:08.8354782Z # price\_importer.services\_common.settings
2025-08-20T13:30:08.8354964Z 
2025-08-20T13:30:08.8355064Z <a id="price_importer.services_common.db"></a>
2025-08-20T13:30:08.8355241Z 
2025-08-20T13:30:08.8355330Z # price\_importer.services\_common.db
2025-08-20T13:30:08.8355497Z 
2025-08-20T13:30:08.8355649Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T13:30:08.8355891Z 
2025-08-20T13:30:08.8355977Z #### build\_sqlalchemy\_url
2025-08-20T13:30:08.8356113Z 
2025-08-20T13:30:08.8356176Z ```python
2025-08-20T13:30:08.8356362Z def build_sqlalchemy_url() -> str
2025-08-20T13:30:08.8356578Z ```
2025-08-20T13:30:08.8356667Z 
2025-08-20T13:30:08.8356761Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T13:30:08.8356944Z 
2025-08-20T13:30:08.8357086Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T13:30:08.8357322Z 
2025-08-20T13:30:08.8357397Z #### build\_asyncpg\_dsn
2025-08-20T13:30:08.8357521Z 
2025-08-20T13:30:08.8357589Z ```python
2025-08-20T13:30:08.8357757Z def build_asyncpg_dsn() -> str
2025-08-20T13:30:08.8357963Z ```
2025-08-20T13:30:08.8358044Z 
2025-08-20T13:30:08.8358172Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T13:30:08.8358389Z 
2025-08-20T13:30:08.8358516Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T13:30:08.8358972Z 
2025-08-20T13:30:08.8359052Z #### refresh\_mvs
2025-08-20T13:30:08.8359160Z 
2025-08-20T13:30:08.8359222Z ```python
2025-08-20T13:30:08.8359422Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T13:30:08.8359680Z ```
2025-08-20T13:30:08.8359896Z 
2025-08-20T13:30:08.8360033Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T13:30:08.8360251Z 
2025-08-20T13:30:08.8360345Z <a id="price_importer.services_common"></a>
2025-08-20T13:30:08.8360525Z 
2025-08-20T13:30:08.8360609Z # price\_importer.services\_common
2025-08-20T13:30:08.8360761Z 
2025-08-20T13:30:08.8360872Z <a id="price_importer.services_common.base"></a>
2025-08-20T13:30:08.8361058Z 
2025-08-20T13:30:08.8361150Z # price\_importer.services\_common.base
2025-08-20T13:30:08.8361319Z 
2025-08-20T13:30:08.8361407Z <a id="price_importer.normaliser"></a>
2025-08-20T13:30:08.8361570Z 
2025-08-20T13:30:08.8361652Z # price\_importer.normaliser
2025-08-20T13:30:08.8361798Z 
2025-08-20T13:30:08.8361900Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T13:30:08.8362080Z 
2025-08-20T13:30:08.8362175Z # price\_importer.common.models\_vendor
2025-08-20T13:30:08.8362339Z 
2025-08-20T13:30:08.8362432Z <a id="price_importer.common.db_url"></a>
2025-08-20T13:30:08.8362611Z 
2025-08-20T13:30:08.8362704Z # price\_importer.common.db\_url
2025-08-20T13:30:08.8362850Z 
2025-08-20T13:30:08.8362958Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T13:30:08.8363150Z 
2025-08-20T13:30:08.8363214Z #### make\_dsn
2025-08-20T13:30:08.8363313Z 
2025-08-20T13:30:08.8363381Z ```python
2025-08-20T13:30:08.8363551Z def make_dsn(async_: bool = False) -> str
2025-08-20T13:30:08.8363777Z ```
2025-08-20T13:30:08.8363868Z 
2025-08-20T13:30:08.8363984Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T13:30:08.8364203Z 
2025-08-20T13:30:08.8364311Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T13:30:08.8364498Z 
2025-08-20T13:30:08.8364566Z #### build\_url
2025-08-20T13:30:08.8364666Z 
2025-08-20T13:30:08.8364728Z ```python
2025-08-20T13:30:08.8364905Z def build_url(async_: bool = False) -> str
2025-08-20T13:30:08.8365131Z ```
2025-08-20T13:30:08.8365212Z 
2025-08-20T13:30:08.8365339Z Return Postgres DSN built from environment variables.
2025-08-20T13:30:08.8365680Z 
2025-08-20T13:30:08.8365767Z <a id="price_importer.common"></a>
2025-08-20T13:30:08.8365930Z 
2025-08-20T13:30:08.8366008Z # price\_importer.common
2025-08-20T13:30:08.8366134Z 
2025-08-20T13:30:08.8366228Z <a id="price_importer.common.base"></a>
2025-08-20T13:30:08.8366394Z 
2025-08-20T13:30:08.8366476Z # price\_importer.common.base
2025-08-20T13:30:08.8366619Z 
2025-08-20T13:30:08.8366722Z <a id="price_importer.tests.conftest"></a>
2025-08-20T13:30:08.8366892Z 
2025-08-20T13:30:08.8366980Z # price\_importer.tests.conftest
2025-08-20T13:30:08.8367133Z 
2025-08-20T13:30:08.8367233Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T13:30:08.8367410Z 
2025-08-20T13:30:08.8367501Z # price\_importer.tests.test\_reader
2025-08-20T13:30:08.8367659Z 
2025-08-20T13:30:08.8367757Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T13:30:08.8367968Z 
2025-08-20T13:30:08.8368056Z # price\_importer.tests.test\_imports
2025-08-20T13:30:08.8368216Z 
2025-08-20T13:30:08.8368318Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T13:30:08.8368501Z 
2025-08-20T13:30:08.8368862Z # price\_importer.tests.test\_smoke
2025-08-20T13:30:08.8369073Z 
2025-08-20T13:30:08.8369186Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T13:30:08.8369373Z 
2025-08-20T13:30:08.8369462Z # price\_importer.tests.test\_normaliser
2025-08-20T13:30:08.8369633Z 
2025-08-20T13:30:08.8369717Z <a id="price_importer.tests"></a>
2025-08-20T13:30:08.8369867Z 
2025-08-20T13:30:08.8369945Z # price\_importer.tests
2025-08-20T13:30:08.8370071Z 
2025-08-20T13:30:08.8370154Z <a id="price_importer.reader"></a>
2025-08-20T13:30:08.8370306Z 
2025-08-20T13:30:08.8370387Z # price\_importer.reader
2025-08-20T13:30:08.8370517Z 
2025-08-20T13:30:08.8370604Z <a id="price_importer.repository"></a>
2025-08-20T13:30:08.8370773Z 
2025-08-20T13:30:08.8370855Z # price\_importer.repository
2025-08-20T13:30:08.8370994Z 
2025-08-20T13:30:08.8371077Z <a id="price_importer.import"></a>
2025-08-20T13:30:08.8371238Z 
2025-08-20T13:30:08.8371314Z # price\_importer.import
2025-08-20T13:30:08.8371613Z 
2025-08-20T13:30:08.8371691Z <a id="fees_h10"></a>
2025-08-20T13:30:08.8371806Z 
2025-08-20T13:30:08.8371870Z # fees\_h10
2025-08-20T13:30:08.8371960Z 
2025-08-20T13:30:08.8372042Z <a id="fees_h10.worker"></a>
2025-08-20T13:30:08.8372173Z 
2025-08-20T13:30:08.8372241Z # fees\_h10.worker
2025-08-20T13:30:08.8372355Z 
2025-08-20T13:30:08.8372452Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T13:30:08.8372626Z 
2025-08-20T13:30:08.8372704Z #### list\_active\_asins
2025-08-20T13:30:08.8372822Z 
2025-08-20T13:30:08.8372884Z ```python
2025-08-20T13:30:08.8373057Z def list_active_asins() -> list[str]
2025-08-20T13:30:08.8373267Z ```
2025-08-20T13:30:08.8373351Z 
2025-08-20T13:30:08.8373468Z Return known ASINs or an empty list if unavailable.
2025-08-20T13:30:08.8373671Z 
2025-08-20T13:30:08.8373755Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T13:30:08.8373918Z 
2025-08-20T13:30:08.8373997Z # fees\_h10.tests.test\_smoke
2025-08-20T13:30:08.8374141Z 
2025-08-20T13:30:08.8374224Z <a id="fees_h10.tests"></a>
2025-08-20T13:30:08.8374353Z 
2025-08-20T13:30:08.8374418Z # fees\_h10.tests
2025-08-20T13:30:08.8374519Z 
2025-08-20T13:30:08.8374602Z <a id="fees_h10.client"></a>
2025-08-20T13:30:08.8374731Z 
2025-08-20T13:30:08.8374796Z # fees\_h10.client
2025-08-20T13:30:08.8374904Z 
2025-08-20T13:30:08.8374983Z <a id="fees_h10.repository"></a>
2025-08-20T13:30:08.8375124Z 
2025-08-20T13:30:08.8375200Z # fees\_h10.repository
2025-08-20T13:30:08.8375317Z 
2025-08-20T13:30:08.8375418Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T13:30:08.8375599Z 
2025-08-20T13:30:08.8375676Z #### upsert\_fees\_raw
2025-08-20T13:30:08.8375791Z 
2025-08-20T13:30:08.8375853Z ```python
2025-08-20T13:30:08.8376024Z def upsert_fees_raw(engine: Engine,
2025-08-20T13:30:08.8376262Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T13:30:08.8376502Z                     *,
2025-08-20T13:30:08.8376728Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T13:30:08.8377150Z ```
2025-08-20T13:30:08.8377231Z 
2025-08-20T13:30:08.8377315Z Idempotent upsert for fees.
2025-08-20T13:30:08.8377460Z 
2025-08-20T13:30:08.8377619Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T13:30:08.8377963Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T13:30:08.8378264Z Only updates when one of the mutable fields changes.
2025-08-20T13:30:08.8378466Z 
2025-08-20T13:30:08.8378667Z <a id="emailer"></a>
2025-08-20T13:30:08.8378781Z 
2025-08-20T13:30:08.8378849Z # emailer
2025-08-20T13:30:08.8378937Z 
2025-08-20T13:30:08.8379038Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T13:30:08.8379217Z 
2025-08-20T13:30:08.8379311Z # emailer.tests.test\_import\_emailer
2025-08-20T13:30:08.8379471Z 
2025-08-20T13:30:08.8379555Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T13:30:08.8379716Z 
2025-08-20T13:30:08.8379794Z # emailer.tests.test\_smoke
2025-08-20T13:30:08.8379928Z 
2025-08-20T13:30:08.8380020Z <a id="emailer.tests"></a>
2025-08-20T13:30:08.8380155Z 
2025-08-20T13:30:08.8380222Z # emailer.tests
2025-08-20T13:30:08.8380327Z 
2025-08-20T13:30:08.8380418Z <a id="emailer.generate_body"></a>
2025-08-20T13:30:08.8380568Z 
2025-08-20T13:30:08.8380644Z # emailer.generate\_body
2025-08-20T13:30:08.8380772Z 
2025-08-20T13:30:08.8380843Z <a id="llm_server"></a>
2025-08-20T13:30:08.8380959Z 
2025-08-20T13:30:08.8381027Z # llm\_server
2025-08-20T13:30:08.8381123Z 
2025-08-20T13:30:08.8381199Z <a id="llm_server.app"></a>
2025-08-20T13:30:08.8381327Z 
2025-08-20T13:30:08.8381401Z # llm\_server.app
2025-08-20T13:30:08.8381506Z 
