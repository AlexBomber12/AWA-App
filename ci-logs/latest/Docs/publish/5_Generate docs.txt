2025-08-19T23:17:03.9223006Z ##[group]Run pydoc-markdown
2025-08-19T23:17:03.9223312Z [36;1mpydoc-markdown[0m
2025-08-19T23:17:03.9264039Z shell: /usr/bin/bash -e {0}
2025-08-19T23:17:03.9264268Z env:
2025-08-19T23:17:03.9264502Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:17:03.9264893Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T23:17:03.9265295Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:17:03.9265627Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:17:03.9265951Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T23:17:03.9266287Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T23:17:03.9266652Z ##[endgroup]
2025-08-19T23:17:04.2884749Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T23:17:04.2885539Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T23:17:04.2886066Z In "pydoc-markdown.yml"
2025-08-19T23:17:04.2886507Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T23:17:04.2887265Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T23:17:04.2888064Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T23:17:04.2888631Z 
2025-08-19T23:17:04.6447904Z <a id="__init__"></a>
2025-08-19T23:17:04.6448334Z 
2025-08-19T23:17:04.6448457Z # \_\_init\_\_
2025-08-19T23:17:04.6448660Z 
2025-08-19T23:17:04.6448781Z <a id="api"></a>
2025-08-19T23:17:04.6448972Z 
2025-08-19T23:17:04.6449080Z # api
2025-08-19T23:17:04.6449245Z 
2025-08-19T23:17:04.6449385Z <a id="api.errors"></a>
2025-08-19T23:17:04.6449605Z 
2025-08-19T23:17:04.6449731Z # api.errors
2025-08-19T23:17:04.6449922Z 
2025-08-19T23:17:04.6450071Z <a id="api.sentry_config"></a>
2025-08-19T23:17:04.6450324Z 
2025-08-19T23:17:04.6450467Z # api.sentry\_config
2025-08-19T23:17:04.6450670Z 
2025-08-19T23:17:04.6450844Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T23:17:04.6451173Z 
2025-08-19T23:17:04.6451326Z # api.tests.test\_stats\_contracts
2025-08-19T23:17:04.6451650Z 
2025-08-19T23:17:04.6451821Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T23:17:04.6452131Z 
2025-08-19T23:17:04.6452281Z # api.tests.test\_sentry\_scrub
2025-08-19T23:17:04.6452543Z 
2025-08-19T23:17:04.6452723Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T23:17:04.6453037Z 
2025-08-19T23:17:04.6453191Z # api.tests.test\_roi\_basic\_auth
2025-08-19T23:17:04.6453473Z 
2025-08-19T23:17:04.6453630Z <a id="api.tests.test_errors_json"></a>
2025-08-19T23:17:04.6454206Z 
2025-08-19T23:17:04.6454364Z # api.tests.test\_errors\_json
2025-08-19T23:17:04.6454612Z 
2025-08-19T23:17:04.6454752Z <a id="api.tests.test_llm"></a>
2025-08-19T23:17:04.6455007Z 
2025-08-19T23:17:04.6455149Z # api.tests.test\_llm
2025-08-19T23:17:04.6455360Z 
2025-08-19T23:17:04.6455515Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T23:17:04.6455814Z 
2025-08-19T23:17:04.6455954Z # api.tests.test\_roi\_filters
2025-08-19T23:17:04.6456203Z 
2025-08-19T23:17:04.6456372Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T23:17:04.6457049Z 
2025-08-19T23:17:04.6457210Z # api.tests.test\_sentry\_event
2025-08-19T23:17:04.6457476Z 
2025-08-19T23:17:04.6457711Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T23:17:04.6458086Z 
2025-08-19T23:17:04.6458229Z ## DummyTransport Objects
2025-08-19T23:17:04.6458473Z 
2025-08-19T23:17:04.6458584Z ```python
2025-08-19T23:17:04.6458873Z class DummyTransport()
2025-08-19T23:17:04.6459192Z ```
2025-08-19T23:17:04.6459338Z 
2025-08-19T23:17:04.6459653Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T23:17:04.6460116Z 
2025-08-19T23:17:04.6460245Z #### capture\_envelope
2025-08-19T23:17:04.6460460Z 
2025-08-19T23:17:04.6460573Z ```python
2025-08-19T23:17:04.6460878Z def capture_envelope(envelope)
2025-08-19T23:17:04.6461239Z ```
2025-08-19T23:17:04.6461386Z 
2025-08-19T23:17:04.6461607Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T23:17:04.6461985Z 
2025-08-19T23:17:04.6462142Z <a id="api.tests.test_cors"></a>
2025-08-19T23:17:04.6462781Z 
2025-08-19T23:17:04.6462923Z # api.tests.test\_cors
2025-08-19T23:17:04.6463142Z 
2025-08-19T23:17:04.6463295Z <a id="api.tests.test_imports"></a>
2025-08-19T23:17:04.6463584Z 
2025-08-19T23:17:04.6463906Z # api.tests.test\_imports
2025-08-19T23:17:04.6464154Z 
2025-08-19T23:17:04.6464314Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T23:17:04.6464617Z 
2025-08-19T23:17:04.6464759Z # api.tests.test\_rate\_limit
2025-08-19T23:17:04.6465005Z 
2025-08-19T23:17:04.6465184Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T23:17:04.6465495Z 
2025-08-19T23:17:04.6465607Z #### app
2025-08-19T23:17:04.6465774Z 
2025-08-19T23:17:04.6465885Z noqa: E402
2025-08-19T23:17:04.6466046Z 
2025-08-19T23:17:04.6466195Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T23:17:04.6466490Z 
2025-08-19T23:17:04.6466640Z # api.tests.test\_stats\_sql
2025-08-19T23:17:04.6466892Z 
2025-08-19T23:17:04.6467054Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T23:17:04.6467359Z 
2025-08-19T23:17:04.6467509Z # api.tests.test\_entrypoint
2025-08-19T23:17:04.6467761Z 
2025-08-19T23:17:04.6467963Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T23:17:04.6468310Z 
2025-08-19T23:17:04.6468477Z # api.tests.test\_stats\_future\_contracts
2025-08-19T23:17:04.6468783Z 
2025-08-19T23:17:04.6468930Z <a id="api.tests.test_health"></a>
2025-08-19T23:17:04.6469199Z 
2025-08-19T23:17:04.6469346Z # api.tests.test\_health
2025-08-19T23:17:04.6469571Z 
2025-08-19T23:17:04.6469717Z <a id="api.tests.test_score"></a>
2025-08-19T23:17:04.6469997Z 
2025-08-19T23:17:04.6470131Z # api.tests.test\_score
2025-08-19T23:17:04.6470347Z 
2025-08-19T23:17:04.6470492Z <a id="api.logging_config"></a>
2025-08-19T23:17:04.6470749Z 
2025-08-19T23:17:04.6470876Z # api.logging\_config
2025-08-19T23:17:04.6471084Z 
2025-08-19T23:17:04.6471236Z <a id="api.migrations.env"></a>
2025-08-19T23:17:04.6471487Z 
2025-08-19T23:17:04.6471617Z # api.migrations.env
2025-08-19T23:17:04.6471822Z 
2025-08-19T23:17:04.6472064Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T23:17:04.6472419Z 
2025-08-19T23:17:04.6472881Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T23:17:04.6473229Z 
2025-08-19T23:17:04.6473490Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T23:17:04.6473997Z 
2025-08-19T23:17:04.6474182Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T23:17:04.6474490Z 
2025-08-19T23:17:04.6474765Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T23:17:04.6475193Z 
2025-08-19T23:17:04.6475436Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T23:17:04.6475824Z 
2025-08-19T23:17:04.6476052Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T23:17:04.6476412Z 
2025-08-19T23:17:04.6476608Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T23:17:04.6476948Z 
2025-08-19T23:17:04.6477167Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T23:17:04.6477532Z 
2025-08-19T23:17:04.6477723Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T23:17:04.6478311Z 
2025-08-19T23:17:04.6478540Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T23:17:04.6478908Z 
2025-08-19T23:17:04.6479117Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T23:17:04.6479455Z 
2025-08-19T23:17:04.6479673Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T23:17:04.6480025Z 
2025-08-19T23:17:04.6480216Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T23:17:04.6480550Z 
2025-08-19T23:17:04.6480779Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T23:17:04.6481155Z 
2025-08-19T23:17:04.6481345Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T23:17:04.6481674Z 
2025-08-19T23:17:04.6481935Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T23:17:04.6482329Z 
2025-08-19T23:17:04.6482546Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T23:17:04.6482915Z 
2025-08-19T23:17:04.6483144Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T23:17:04.6483985Z 
2025-08-19T23:17:04.6484205Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T23:17:04.6484545Z 
2025-08-19T23:17:04.6484789Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T23:17:04.6485200Z 
2025-08-19T23:17:04.6485415Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T23:17:04.6485766Z 
2025-08-19T23:17:04.6485958Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T23:17:04.6486308Z 
2025-08-19T23:17:04.6486479Z # api.migrations.versions.0001\_baseline
2025-08-19T23:17:04.6486781Z 
2025-08-19T23:17:04.6486951Z <a id="api.migrations.versions"></a>
2025-08-19T23:17:04.6487239Z 
2025-08-19T23:17:04.6487382Z # api.migrations.versions
2025-08-19T23:17:04.6487627Z 
2025-08-19T23:17:04.6487767Z <a id="api.migrations"></a>
2025-08-19T23:17:04.6488005Z 
2025-08-19T23:17:04.6488125Z # api.migrations
2025-08-19T23:17:04.6488328Z 
2025-08-19T23:17:04.6488448Z <a id="api.db"></a>
2025-08-19T23:17:04.6488660Z 
2025-08-19T23:17:04.6488778Z # api.db
2025-08-19T23:17:04.6488936Z 
2025-08-19T23:17:04.6489079Z <a id="api.routes.score"></a>
2025-08-19T23:17:04.6489332Z 
2025-08-19T23:17:04.6489469Z # api.routes.score
2025-08-19T23:17:04.6489668Z 
2025-08-19T23:17:04.6489809Z <a id="api.routes.stats"></a>
2025-08-19T23:17:04.6490126Z 
2025-08-19T23:17:04.6490248Z # api.routes.stats
2025-08-19T23:17:04.6490435Z 
2025-08-19T23:17:04.6490570Z <a id="api.routes.roi"></a>
2025-08-19T23:17:04.6490818Z 
2025-08-19T23:17:04.6490939Z # api.routes.roi
2025-08-19T23:17:04.6491125Z 
2025-08-19T23:17:04.6491280Z <a id="api.routes.health"></a>
2025-08-19T23:17:04.6491528Z 
2025-08-19T23:17:04.6491654Z # api.routes.health
2025-08-19T23:17:04.6491859Z 
2025-08-19T23:17:04.6492024Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T23:17:04.6492322Z 
2025-08-19T23:17:04.6492437Z #### MAX\_SKEW
2025-08-19T23:17:04.6492616Z 
2025-08-19T23:17:04.6492724Z seconds
2025-08-19T23:17:04.6492879Z 
2025-08-19T23:17:04.6493048Z <a id="api.routes.health.health"></a>
2025-08-19T23:17:04.6493360Z 
2025-08-19T23:17:04.6493470Z #### health
2025-08-19T23:17:04.6493636Z 
2025-08-19T23:17:04.6493917Z ```python
2025-08-19T23:17:04.6494272Z @router.get("/health", include_in_schema=False)
2025-08-19T23:17:04.6494987Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T23:17:04.6495575Z ```
2025-08-19T23:17:04.6495731Z 
2025-08-19T23:17:04.6495938Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T23:17:04.6496288Z 
2025-08-19T23:17:04.6496449Z <a id="api.routes.repository"></a>
2025-08-19T23:17:04.6496735Z 
2025-08-19T23:17:04.6496873Z # api.routes.repository
2025-08-19T23:17:04.6497105Z 
2025-08-19T23:17:04.6497236Z <a id="api.routes"></a>
2025-08-19T23:17:04.6497447Z 
2025-08-19T23:17:04.6497560Z # api.routes
2025-08-19T23:17:04.6497743Z 
2025-08-19T23:17:04.6497881Z <a id="api.models.fee"></a>
2025-08-19T23:17:04.6498125Z 
2025-08-19T23:17:04.6498244Z # api.models.fee
2025-08-19T23:17:04.6498446Z 
2025-08-19T23:17:04.6498813Z <a id="api.models"></a>
2025-08-19T23:17:04.6499045Z 
2025-08-19T23:17:04.6499163Z # api.models
2025-08-19T23:17:04.6499433Z 
2025-08-19T23:17:04.6499586Z <a id="api.roi_repository"></a>
2025-08-19T23:17:04.6499883Z 
2025-08-19T23:17:04.6500016Z # api.roi\_repository
2025-08-19T23:17:04.6500231Z 
2025-08-19T23:17:04.6500356Z <a id="api.main"></a>
2025-08-19T23:17:04.6500556Z 
2025-08-19T23:17:04.6500672Z # api.main
2025-08-19T23:17:04.6500831Z 
2025-08-19T23:17:04.6500974Z <a id="api.main.ready"></a>
2025-08-19T23:17:04.6501221Z 
2025-08-19T23:17:04.6501339Z #### ready
2025-08-19T23:17:04.6501500Z 
2025-08-19T23:17:04.6501611Z ```python
2025-08-19T23:17:04.6502070Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T23:17:04.6502878Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T23:17:04.6503409Z                                                                       str]
2025-08-19T23:17:04.6503940Z ```
2025-08-19T23:17:04.6504287Z 
2025-08-19T23:17:04.6504454Z Return 200 only when migrations are at head.
2025-08-19T23:17:04.6504745Z 
2025-08-19T23:17:04.6504869Z <a id="api.config"></a>
2025-08-19T23:17:04.6505104Z 
2025-08-19T23:17:04.6505216Z # api.config
2025-08-19T23:17:04.6505377Z 
2025-08-19T23:17:04.6505513Z <a id="api.security"></a>
2025-08-19T23:17:04.6505749Z 
2025-08-19T23:17:04.6505860Z # api.security
2025-08-19T23:17:04.6506028Z 
2025-08-19T23:17:04.6506141Z <a id="etl"></a>
2025-08-19T23:17:04.6506295Z 
2025-08-19T23:17:04.6506380Z # etl
2025-08-19T23:17:04.6506508Z 
2025-08-19T23:17:04.6506623Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T23:17:04.6506846Z 
2025-08-19T23:17:04.6506961Z # etl.fba\_fee\_ingestor
2025-08-19T23:17:04.6507434Z 
2025-08-19T23:17:04.6507698Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T23:17:04.6508080Z 
2025-08-19T23:17:04.6508210Z # etl.sp\_fees\_ingestor
2025-08-19T23:17:04.6508391Z 
2025-08-19T23:17:04.6508503Z <a id="etl.keepa_ingestor"></a>
2025-08-19T23:17:04.6508729Z 
2025-08-19T23:17:04.6508832Z # etl.keepa\_ingestor
2025-08-19T23:17:04.6509002Z 
2025-08-19T23:17:04.6509099Z <a id="etl.db"></a>
2025-08-19T23:17:04.6509265Z 
2025-08-19T23:17:04.6509361Z # etl.db
2025-08-19T23:17:04.6509498Z 
2025-08-19T23:17:04.6509633Z <a id="etl.dialects.schemas"></a>
2025-08-19T23:17:04.6509874Z 
2025-08-19T23:17:04.6509997Z # etl.dialects.schemas
2025-08-19T23:17:04.6510209Z 
2025-08-19T23:17:04.6510390Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T23:17:04.6510669Z 
2025-08-19T23:17:04.6510801Z # etl.dialects.amazon\_reimbursements
2025-08-19T23:17:04.6511053Z 
2025-08-19T23:17:04.6511200Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T23:17:04.6511478Z 
2025-08-19T23:17:04.6511629Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T23:17:04.6511896Z 
2025-08-19T23:17:04.6512045Z <a id="etl.dialects.test_generic"></a>
2025-08-19T23:17:04.6512323Z 
2025-08-19T23:17:04.6512469Z # etl.dialects.test\_generic
2025-08-19T23:17:04.6512682Z 
2025-08-19T23:17:04.6512828Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T23:17:04.6513085Z 
2025-08-19T23:17:04.6513204Z # etl.dialects.amazon\_returns
2025-08-19T23:17:04.6513402Z 
2025-08-19T23:17:04.6513540Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T23:17:04.6513978Z 
2025-08-19T23:17:04.6514097Z # etl.dialects.amazon\_fee\_preview
2025-08-19T23:17:04.6514305Z 
2025-08-19T23:17:04.6514454Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T23:17:04.6514731Z 
2025-08-19T23:17:04.6514880Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T23:17:04.6515165Z 
2025-08-19T23:17:04.6515323Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T23:17:04.6515611Z 
2025-08-19T23:17:04.6515759Z # etl.dialects.amazon\_settlements
2025-08-19T23:17:04.6516014Z 
2025-08-19T23:17:04.6516138Z <a id="etl.dialects"></a>
2025-08-19T23:17:04.6516351Z 
2025-08-19T23:17:04.6516465Z # etl.dialects
2025-08-19T23:17:04.6516727Z 
2025-08-19T23:17:04.6516962Z <a id="ingest"></a>
2025-08-19T23:17:04.6517424Z 
2025-08-19T23:17:04.6517881Z # ingest
2025-08-19T23:17:04.6518055Z 
2025-08-19T23:17:04.6518205Z <a id="ingest.maintenance"></a>
2025-08-19T23:17:04.6518481Z 
2025-08-19T23:17:04.6518613Z # ingest.maintenance
2025-08-19T23:17:04.6518821Z 
2025-08-19T23:17:04.6518982Z <a id="ingest.copy_loader"></a>
2025-08-19T23:17:04.6519240Z 
2025-08-19T23:17:04.6519375Z # ingest.copy\_loader
2025-08-19T23:17:04.6519594Z 
2025-08-19T23:17:04.6519782Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T23:17:04.6520113Z 
2025-08-19T23:17:04.6520241Z #### copy\_df\_via\_temp
2025-08-19T23:17:04.6520468Z 
2025-08-19T23:17:04.6520582Z ```python
2025-08-19T23:17:04.6520899Z def copy_df_via_temp(engine: Engine,
2025-08-19T23:17:04.6521316Z                      df: pd.DataFrame,
2025-08-19T23:17:04.6521733Z                      target_table: str,
2025-08-19T23:17:04.6522122Z                      *,
2025-08-19T23:17:04.6522493Z                      target_schema: Optional[str] = None,
2025-08-19T23:17:04.6522960Z                      columns: Sequence[str],
2025-08-19T23:17:04.6523695Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T23:17:04.6524387Z                      analyze_after: bool = False,
2025-08-19T23:17:04.6524867Z                      connection: Any | None = None) -> int
2025-08-19T23:17:04.6525291Z ```
2025-08-19T23:17:04.6525439Z 
2025-08-19T23:17:04.6525849Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T23:17:04.6526276Z 
2025-08-19T23:17:04.6526438Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T23:17:04.6526725Z 
2025-08-19T23:17:04.6526864Z # ingest.tests.test\_smoke
2025-08-19T23:17:04.6527104Z 
2025-08-19T23:17:04.6527235Z <a id="ingest.tests"></a>
2025-08-19T23:17:04.6527459Z 
2025-08-19T23:17:04.6527586Z # ingest.tests
2025-08-19T23:17:04.6527772Z 
2025-08-19T23:17:04.6527920Z <a id="ingest.upload_router"></a>
2025-08-19T23:17:04.6528198Z 
2025-08-19T23:17:04.6528327Z # ingest.upload\_router
2025-08-19T23:17:04.6528547Z 
2025-08-19T23:17:04.6528701Z <a id="ingest.email_watcher"></a>
2025-08-19T23:17:04.6528987Z 
2025-08-19T23:17:04.6529117Z # ingest.email\_watcher
2025-08-19T23:17:04.6529327Z 
2025-08-19T23:17:04.6529490Z <a id="ingest.email_watcher.main"></a>
2025-08-19T23:17:04.6529782Z 
2025-08-19T23:17:04.6529890Z #### main
2025-08-19T23:17:04.6530051Z 
2025-08-19T23:17:04.6530169Z ```python
2025-08-19T23:17:04.6530459Z def main() -> dict[str, str]
2025-08-19T23:17:04.6530809Z ```
2025-08-19T23:17:04.6530957Z 
2025-08-19T23:17:04.6531210Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T23:17:04.6531620Z 
2025-08-19T23:17:04.6531856Z Returns {"status": "success"} when processing completes.
2025-08-19T23:17:04.6532233Z 
2025-08-19T23:17:04.6532382Z <a id="ingest.tasks"></a>
2025-08-19T23:17:04.6532615Z 
2025-08-19T23:17:04.6532731Z # ingest.tasks
2025-08-19T23:17:04.6532917Z 
2025-08-19T23:17:04.6533083Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T23:17:04.6533398Z 
2025-08-19T23:17:04.6533526Z #### task\_import\_file
2025-08-19T23:17:04.6533969Z 
2025-08-19T23:17:04.6534090Z ```python
2025-08-19T23:17:04.6534470Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T23:17:04.6534972Z def task_import_file(self: Any,
2025-08-19T23:17:04.6535350Z                      uri: str,
2025-08-19T23:17:04.6535729Z                      report_type: str | None = None,
2025-08-19T23:17:04.6536212Z                      force: bool = False) -> dict[str, Any]
2025-08-19T23:17:04.6536629Z ```
2025-08-19T23:17:04.6536783Z 
2025-08-19T23:17:04.6537018Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T23:17:04.6537396Z 
2025-08-19T23:17:04.6537551Z <a id="ingest.celery_app"></a>
2025-08-19T23:17:04.6537801Z 
2025-08-19T23:17:04.6537930Z # ingest.celery\_app
2025-08-19T23:17:04.6538134Z 
2025-08-19T23:17:04.6538290Z <a id="ingest.ingest_router"></a>
2025-08-19T23:17:04.6538556Z 
2025-08-19T23:17:04.6538685Z # ingest.ingest\_router
2025-08-19T23:17:04.6538912Z 
2025-08-19T23:17:04.6539043Z <a id="logistics_etl"></a>
2025-08-19T23:17:04.6539576Z 
2025-08-19T23:17:04.6539695Z # logistics\_etl
2025-08-19T23:17:04.6539891Z 
2025-08-19T23:17:04.6540025Z Daily logistics ETL job.
2025-08-19T23:17:04.6540247Z 
2025-08-19T23:17:04.6540399Z <a id="logistics_etl.__main__"></a>
2025-08-19T23:17:04.6540677Z 
2025-08-19T23:17:04.6540815Z # logistics\_etl.\_\_main\_\_
2025-08-19T23:17:04.6541072Z 
2025-08-19T23:17:04.6541207Z <a id="logistics_etl.dsn"></a>
2025-08-19T23:17:04.6541454Z 
2025-08-19T23:17:04.6541590Z # logistics\_etl.dsn
2025-08-19T23:17:04.6541861Z 
2025-08-19T23:17:04.6542073Z Local DSN builder to avoid cross-service dependency.
2025-08-19T23:17:04.6542439Z 
2025-08-19T23:17:04.6542611Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T23:17:04.6542915Z 
2025-08-19T23:17:04.6543031Z #### build\_dsn
2025-08-19T23:17:04.6543221Z 
2025-08-19T23:17:04.6543335Z ```python
2025-08-19T23:17:04.6543640Z def build_dsn(sync: bool = True) -> str
2025-08-19T23:17:04.6544234Z ```
2025-08-19T23:17:04.6544385Z 
2025-08-19T23:17:04.6544971Z Return a Postgres DSN assembled from environment variables.
2025-08-19T23:17:04.6545383Z 
2025-08-19T23:17:04.6545654Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T23:17:04.6546359Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T23:17:04.6546974Z error when any required variable is missing.
2025-08-19T23:17:04.6547297Z 
2025-08-19T23:17:04.6547465Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T23:17:04.6547771Z 
2025-08-19T23:17:04.6547918Z # logistics\_etl.tests.conftest
2025-08-19T23:17:04.6548185Z 
2025-08-19T23:17:04.6548368Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T23:17:04.6548707Z 
2025-08-19T23:17:04.6548872Z # logistics\_etl.tests.test\_repository
2025-08-19T23:17:04.6549167Z 
2025-08-19T23:17:04.6549334Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T23:17:04.6549648Z 
2025-08-19T23:17:04.6549794Z # logistics\_etl.tests.test\_cron
2025-08-19T23:17:04.6550059Z 
2025-08-19T23:17:04.6550232Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T23:17:04.6550667Z 
2025-08-19T23:17:04.6550822Z # logistics\_etl.tests.test\_imports
2025-08-19T23:17:04.6551109Z 
2025-08-19T23:17:04.6551281Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T23:17:04.6551584Z 
2025-08-19T23:17:04.6551733Z # logistics\_etl.tests.test\_smoke
2025-08-19T23:17:04.6552012Z 
2025-08-19T23:17:04.6552186Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T23:17:04.6552503Z 
2025-08-19T23:17:04.6552659Z # logistics\_etl.tests.test\_client
2025-08-19T23:17:04.6552953Z 
2025-08-19T23:17:04.6553099Z <a id="logistics_etl.tests"></a>
2025-08-19T23:17:04.6553362Z 
2025-08-19T23:17:04.6553501Z # logistics\_etl.tests
2025-08-19T23:17:04.6553713Z 
2025-08-19T23:17:04.6554032Z <a id="logistics_etl.flow"></a>
2025-08-19T23:17:04.6554294Z 
2025-08-19T23:17:04.6554420Z # logistics\_etl.flow
2025-08-19T23:17:04.6554665Z 
2025-08-19T23:17:04.6554808Z <a id="logistics_etl.client"></a>
2025-08-19T23:17:04.6555078Z 
2025-08-19T23:17:04.6621931Z # logistics\_etl.client
2025-08-19T23:17:04.6622239Z 
2025-08-19T23:17:04.6622384Z <a id="logistics_etl.cron"></a>
2025-08-19T23:17:04.6622611Z 
2025-08-19T23:17:04.6622748Z # logistics\_etl.cron
2025-08-19T23:17:04.6622938Z 
2025-08-19T23:17:04.6623055Z <a id="logistics_etl.db"></a>
2025-08-19T23:17:04.6623272Z 
2025-08-19T23:17:04.6623378Z # logistics\_etl.db
2025-08-19T23:17:04.6623543Z 
2025-08-19T23:17:04.6623696Z <a id="logistics_etl.repository"></a>
2025-08-19T23:17:04.6624124Z 
2025-08-19T23:17:04.6624246Z # logistics\_etl.repository
2025-08-19T23:17:04.6624452Z 
2025-08-19T23:17:04.6624570Z <a id="alert_bot"></a>
2025-08-19T23:17:04.6624743Z 
2025-08-19T23:17:04.6624840Z # alert\_bot
2025-08-19T23:17:04.6624994Z 
2025-08-19T23:17:04.6625134Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T23:17:04.6625391Z 
2025-08-19T23:17:04.6625519Z # alert\_bot.tests.test\_smoke
2025-08-19T23:17:04.6625740Z 
2025-08-19T23:17:04.6625861Z <a id="alert_bot.tests"></a>
2025-08-19T23:17:04.6626065Z 
2025-08-19T23:17:04.6626413Z # alert\_bot.tests
2025-08-19T23:17:04.6626572Z 
2025-08-19T23:17:04.6626687Z <a id="alert_bot.alert_bot"></a>
2025-08-19T23:17:04.6626912Z 
2025-08-19T23:17:04.6627023Z # alert\_bot.alert\_bot
2025-08-19T23:17:04.6627206Z 
2025-08-19T23:17:04.6627319Z <a id="alert_bot.rules"></a>
2025-08-19T23:17:04.6627527Z 
2025-08-19T23:17:04.6627626Z # alert\_bot.rules
2025-08-19T23:17:04.6627778Z 
2025-08-19T23:17:04.6627875Z <a id="common"></a>
2025-08-19T23:17:04.6628033Z 
2025-08-19T23:17:04.6628124Z # common
2025-08-19T23:17:04.6628247Z 
2025-08-19T23:17:04.6628361Z <a id="common.dsn"></a>
2025-08-19T23:17:04.6628538Z 
2025-08-19T23:17:04.6628638Z # common.dsn
2025-08-19T23:17:04.6628795Z 
2025-08-19T23:17:04.6628926Z <a id="common.dsn.build_dsn"></a>
2025-08-19T23:17:04.6629159Z 
2025-08-19T23:17:04.6629254Z #### build\_dsn
2025-08-19T23:17:04.6629410Z 
2025-08-19T23:17:04.6629504Z ```python
2025-08-19T23:17:04.6629784Z def build_dsn(sync: bool = True) -> str
2025-08-19T23:17:04.6630111Z ```
2025-08-19T23:17:04.6630428Z 
2025-08-19T23:17:04.6630628Z Return a Postgres DSN, validating required variables.
2025-08-19T23:17:04.6630936Z 
2025-08-19T23:17:04.6631217Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T23:17:04.6631902Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T23:17:04.6632536Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T23:17:04.6633023Z missing.
2025-08-19T23:17:04.6633159Z 
2025-08-19T23:17:04.6633298Z <a id="common.models_vendor"></a>
2025-08-19T23:17:04.6633516Z 
2025-08-19T23:17:04.6633627Z # common.models\_vendor
2025-08-19T23:17:04.6633955Z 
2025-08-19T23:17:04.6634100Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T23:17:04.6634345Z 
2025-08-19T23:17:04.6634445Z ## Vendor Objects
2025-08-19T23:17:04.6634618Z 
2025-08-19T23:17:04.6634710Z ```python
2025-08-19T23:17:04.6634941Z class Vendor(Base)
2025-08-19T23:17:04.6635199Z ```
2025-08-19T23:17:04.6635328Z 
2025-08-19T23:17:04.6635463Z Vendor of inventory items.
2025-08-19T23:17:04.6635659Z 
2025-08-19T23:17:04.6635809Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T23:17:04.6636083Z 
2025-08-19T23:17:04.6636191Z ## VendorPrice Objects
2025-08-19T23:17:04.6636362Z 
2025-08-19T23:17:04.6636455Z ```python
2025-08-19T23:17:04.6636696Z class VendorPrice(Base)
2025-08-19T23:17:04.6636956Z ```
2025-08-19T23:17:04.6637090Z 
2025-08-19T23:17:04.6637242Z Association table linking vendors to pricing.
2025-08-19T23:17:04.6637517Z 
2025-08-19T23:17:04.6637638Z <a id="common.db_url"></a>
2025-08-19T23:17:04.6637824Z 
2025-08-19T23:17:04.6637923Z # common.db\_url
2025-08-19T23:17:04.6638095Z 
2025-08-19T23:17:04.6638230Z <a id="common.db_url.build_url"></a>
2025-08-19T23:17:04.6638460Z 
2025-08-19T23:17:04.6638558Z #### build\_url
2025-08-19T23:17:04.6638715Z 
2025-08-19T23:17:04.6638806Z ```python
2025-08-19T23:17:04.6639068Z def build_url(async_: bool = True) -> str
2025-08-19T23:17:04.6639407Z ```
2025-08-19T23:17:04.6639554Z 
2025-08-19T23:17:04.6639703Z Return Postgres DSN from env or PG_* parts.
2025-08-19T23:17:04.6639961Z 
2025-08-19T23:17:04.6640077Z <a id="common.keepa"></a>
2025-08-19T23:17:04.6640279Z 
2025-08-19T23:17:04.6640373Z # common.keepa
2025-08-19T23:17:04.6640521Z 
2025-08-19T23:17:04.6640629Z <a id="common.llm"></a>
2025-08-19T23:17:04.6640809Z 
2025-08-19T23:17:04.6640905Z # common.llm
2025-08-19T23:17:04.6641045Z 
2025-08-19T23:17:04.6641171Z <a id="common.settings"></a>
2025-08-19T23:17:04.6641376Z 
2025-08-19T23:17:04.6641481Z # common.settings
2025-08-19T23:17:04.6641646Z 
2025-08-19T23:17:04.6641751Z <a id="common.db"></a>
2025-08-19T23:17:04.6641921Z 
2025-08-19T23:17:04.6642017Z # common.db
2025-08-19T23:17:04.6642159Z 
2025-08-19T23:17:04.6642292Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T23:17:04.6642539Z 
2025-08-19T23:17:04.6642654Z #### build\_sqlalchemy\_url
2025-08-19T23:17:04.6642846Z 
2025-08-19T23:17:04.6642935Z ```python
2025-08-19T23:17:04.6643194Z def build_sqlalchemy_url() -> str
2025-08-19T23:17:04.6643896Z ```
2025-08-19T23:17:04.6644039Z 
2025-08-19T23:17:04.6644183Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T23:17:04.6644436Z 
2025-08-19T23:17:04.6644566Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T23:17:04.6644821Z 
2025-08-19T23:17:04.6644927Z #### build\_asyncpg\_dsn
2025-08-19T23:17:04.6645108Z 
2025-08-19T23:17:04.6645208Z ```python
2025-08-19T23:17:04.6645449Z def build_asyncpg_dsn() -> str
2025-08-19T23:17:04.6645739Z ```
2025-08-19T23:17:04.6645864Z 
2025-08-19T23:17:04.6646050Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T23:17:04.6646366Z 
2025-08-19T23:17:04.6646493Z <a id="common.db.refresh_mvs"></a>
2025-08-19T23:17:04.6646717Z 
2025-08-19T23:17:04.6646813Z #### refresh\_mvs
2025-08-19T23:17:04.6646978Z 
2025-08-19T23:17:04.6647069Z ```python
2025-08-19T23:17:04.6647364Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T23:17:04.6647732Z ```
2025-08-19T23:17:04.6647864Z 
2025-08-19T23:17:04.6648249Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T23:17:04.6648585Z 
2025-08-19T23:17:04.6648704Z <a id="common.config"></a>
2025-08-19T23:17:04.6648904Z 
2025-08-19T23:17:04.6649005Z # common.config
2025-08-19T23:17:04.6649228Z 
2025-08-19T23:17:04.6649346Z <a id="common.base"></a>
2025-08-19T23:17:04.6649535Z 
2025-08-19T23:17:04.6649635Z # common.base
2025-08-19T23:17:04.6649778Z 
2025-08-19T23:17:04.6649905Z <a id="common.base.Base"></a>
2025-08-19T23:17:04.6650113Z 
2025-08-19T23:17:04.6650212Z ## Base Objects
2025-08-19T23:17:04.6650371Z 
2025-08-19T23:17:04.6650468Z ```python
2025-08-19T23:17:04.6650713Z class Base(DeclarativeBase)
2025-08-19T23:17:04.6651004Z ```
2025-08-19T23:17:04.6651124Z 
2025-08-19T23:17:04.6651253Z Base class for SQLAlchemy models.
2025-08-19T23:17:04.6651483Z 
2025-08-19T23:17:04.6651585Z <a id="repricer"></a>
2025-08-19T23:17:04.6651753Z 
2025-08-19T23:17:04.6651862Z # repricer
2025-08-19T23:17:04.6651993Z 
2025-08-19T23:17:04.6652125Z <a id="repricer.app.schemas"></a>
2025-08-19T23:17:04.6652368Z 
2025-08-19T23:17:04.6652482Z # repricer.app.schemas
2025-08-19T23:17:04.6652664Z 
2025-08-19T23:17:04.6652796Z <a id="repricer.app.deps"></a>
2025-08-19T23:17:04.6653005Z 
2025-08-19T23:17:04.6653115Z # repricer.app.deps
2025-08-19T23:17:04.6653273Z 
2025-08-19T23:17:04.6653456Z Placeholder module for Keepa / SP-API clients.
2025-08-19T23:17:04.6653912Z 
2025-08-19T23:17:04.6654047Z <a id="repricer.app.logic"></a>
2025-08-19T23:17:04.6654262Z 
2025-08-19T23:17:04.6654370Z # repricer.app.logic
2025-08-19T23:17:04.6654540Z 
2025-08-19T23:17:04.6654691Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T23:17:04.6654950Z 
2025-08-19T23:17:04.6655048Z #### MIN\_MARGIN
2025-08-19T23:17:04.6655199Z 
2025-08-19T23:17:04.6655298Z 15 % ROI
2025-08-19T23:17:04.6655424Z 
2025-08-19T23:17:04.6655575Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T23:17:04.6655855Z 
2025-08-19T23:17:04.6655960Z #### compute\_price
2025-08-19T23:17:04.6656118Z 
2025-08-19T23:17:04.6656232Z ```python
2025-08-19T23:17:04.6656591Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T23:17:04.6657045Z ```
2025-08-19T23:17:04.6657170Z 
2025-08-19T23:17:04.6657335Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T23:17:04.6657747Z Replace with real competitive logic later.
2025-08-19T23:17:04.6658004Z 
2025-08-19T23:17:04.6658125Z <a id="repricer.app.main"></a>
2025-08-19T23:17:04.6658345Z 
2025-08-19T23:17:04.6658450Z # repricer.app.main
2025-08-19T23:17:04.6658616Z 
2025-08-19T23:17:04.6658728Z <a id="repricer.app"></a>
2025-08-19T23:17:04.6658922Z 
2025-08-19T23:17:04.6659020Z # repricer.app
2025-08-19T23:17:04.6659172Z 
2025-08-19T23:17:04.6659319Z <a id="repricer.tests.test_imports"></a>
2025-08-19T23:17:04.6659571Z 
2025-08-19T23:17:04.6659694Z # repricer.tests.test\_imports
2025-08-19T23:17:04.6659911Z 
2025-08-19T23:17:04.6660055Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T23:17:04.6660302Z 
2025-08-19T23:17:04.6660428Z # repricer.tests.test\_smoke
2025-08-19T23:17:04.6660833Z 
2025-08-19T23:17:04.6660953Z <a id="repricer.tests"></a>
2025-08-19T23:17:04.6661153Z 
2025-08-19T23:17:04.6661265Z # repricer.tests
2025-08-19T23:17:04.6661426Z 
2025-08-19T23:17:04.6661524Z <a id="db"></a>
2025-08-19T23:17:04.6661682Z 
2025-08-19T23:17:04.6661773Z # db
2025-08-19T23:17:04.6661895Z 
2025-08-19T23:17:04.6662010Z <a id="db.utils.views"></a>
2025-08-19T23:17:04.6662210Z 
2025-08-19T23:17:04.6662307Z # db.utils.views
2025-08-19T23:17:04.6662456Z 
2025-08-19T23:17:04.6662602Z <a id="db.utils.views.replace_view"></a>
2025-08-19T23:17:04.6662849Z 
2025-08-19T23:17:04.6662945Z #### replace\_view
2025-08-19T23:17:04.6663099Z 
2025-08-19T23:17:04.6663198Z ```python
2025-08-19T23:17:04.6663484Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T23:17:04.6664006Z ```
2025-08-19T23:17:04.6664135Z 
2025-08-19T23:17:04.6664269Z Drop and recreate a SQL view atomically.
2025-08-19T23:17:04.6664514Z 
2025-08-19T23:17:04.6664616Z <a id="db.utils"></a>
2025-08-19T23:17:04.6664960Z 
2025-08-19T23:17:04.6665060Z # db.utils
2025-08-19T23:17:04.6665190Z 
2025-08-19T23:17:04.6665308Z <a id="price_importer"></a>
2025-08-19T23:17:04.6665513Z 
2025-08-19T23:17:04.6665617Z # price\_importer
2025-08-19T23:17:04.6665776Z 
2025-08-19T23:17:04.6665934Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T23:17:04.6666214Z 
2025-08-19T23:17:04.6666352Z # price\_importer.services\_common.dsn
2025-08-19T23:17:04.6666584Z 
2025-08-19T23:17:04.6666775Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T23:17:04.6667079Z 
2025-08-19T23:17:04.6667174Z #### build\_dsn
2025-08-19T23:17:04.6667328Z 
2025-08-19T23:17:04.6667424Z ```python
2025-08-19T23:17:04.6667688Z def build_dsn(sync: bool = True) -> str
2025-08-19T23:17:04.6668023Z ```
2025-08-19T23:17:04.6668146Z 
2025-08-19T23:17:04.6668249Z Return safe DSN.
2025-08-19T23:17:04.6668419Z 
2025-08-19T23:17:04.6668875Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T23:17:04.6669172Z 
2025-08-19T23:17:04.6669386Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T23:17:04.6669701Z 
2025-08-19T23:17:04.6669865Z # price\_importer.services\_common.models\_vendor
2025-08-19T23:17:04.6670169Z 
2025-08-19T23:17:04.6670332Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T23:17:04.6670611Z 
2025-08-19T23:17:04.6670754Z # price\_importer.services\_common.db\_url
2025-08-19T23:17:04.6671018Z 
2025-08-19T23:17:04.6671218Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T23:17:04.6671534Z 
2025-08-19T23:17:04.6671644Z #### build\_url
2025-08-19T23:17:04.6671796Z 
2025-08-19T23:17:04.6671890Z ```python
2025-08-19T23:17:04.6672153Z def build_url(async_: bool = True) -> str
2025-08-19T23:17:04.6672506Z ```
2025-08-19T23:17:04.6672636Z 
2025-08-19T23:17:04.6672781Z Return Postgres DSN from env or PG_* parts.
2025-08-19T23:17:04.6673039Z 
2025-08-19T23:17:04.6673205Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T23:17:04.6673484Z 
2025-08-19T23:17:04.6673641Z # price\_importer.services\_common.keepa
2025-08-19T23:17:04.6674060Z 
2025-08-19T23:17:04.6674229Z <a id="price_importer.services_common.llm"></a>
2025-08-19T23:17:04.6674508Z 
2025-08-19T23:17:04.6674648Z # price\_importer.services\_common.llm
2025-08-19T23:17:04.6674913Z 
2025-08-19T23:17:04.6675089Z <a id="price_importer.services_common.settings"></a>
2025-08-19T23:17:04.6675385Z 
2025-08-19T23:17:04.6675541Z # price\_importer.services\_common.settings
2025-08-19T23:17:04.6675800Z 
2025-08-19T23:17:04.6675952Z <a id="price_importer.services_common.db"></a>
2025-08-19T23:17:04.6676226Z 
2025-08-19T23:17:04.6676354Z # price\_importer.services\_common.db
2025-08-19T23:17:04.6676598Z 
2025-08-19T23:17:04.6676831Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T23:17:04.6677189Z 
2025-08-19T23:17:04.6677303Z #### build\_sqlalchemy\_url
2025-08-19T23:17:04.6677496Z 
2025-08-19T23:17:04.6677599Z ```python
2025-08-19T23:17:04.6677853Z def build_sqlalchemy_url() -> str
2025-08-19T23:17:04.6678353Z ```
2025-08-19T23:17:04.6678477Z 
2025-08-19T23:17:04.6678620Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T23:17:04.6678893Z 
2025-08-19T23:17:04.6679115Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T23:17:04.6679457Z 
2025-08-19T23:17:04.6679568Z #### build\_asyncpg\_dsn
2025-08-19T23:17:04.6679761Z 
2025-08-19T23:17:04.6679849Z ```python
2025-08-19T23:17:04.6680113Z def build_asyncpg_dsn() -> str
2025-08-19T23:17:04.6680402Z ```
2025-08-19T23:17:04.6680524Z 
2025-08-19T23:17:04.6680717Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T23:17:04.6681023Z 
2025-08-19T23:17:04.6681213Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T23:17:04.6681535Z 
2025-08-19T23:17:04.6681637Z #### refresh\_mvs
2025-08-19T23:17:04.6681797Z 
2025-08-19T23:17:04.6681898Z ```python
2025-08-19T23:17:04.6682182Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T23:17:04.6682564Z ```
2025-08-19T23:17:04.6682869Z 
2025-08-19T23:17:04.6683086Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T23:17:04.6683419Z 
2025-08-19T23:17:04.6683578Z <a id="price_importer.services_common"></a>
2025-08-19T23:17:04.6684026Z 
2025-08-19T23:17:04.6684160Z # price\_importer.services\_common
2025-08-19T23:17:04.6684410Z 
2025-08-19T23:17:04.6684567Z <a id="price_importer.services_common.base"></a>
2025-08-19T23:17:04.6684830Z 
2025-08-19T23:17:04.6684971Z # price\_importer.services\_common.base
2025-08-19T23:17:04.6685213Z 
2025-08-19T23:17:04.6685344Z <a id="price_importer.normaliser"></a>
2025-08-19T23:17:04.6685593Z 
2025-08-19T23:17:04.6685715Z # price\_importer.normaliser
2025-08-19T23:17:04.6685921Z 
2025-08-19T23:17:04.6686072Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T23:17:04.6686348Z 
2025-08-19T23:17:04.6686482Z # price\_importer.common.models\_vendor
2025-08-19T23:17:04.6686722Z 
2025-08-19T23:17:04.6686865Z <a id="price_importer.common.db_url"></a>
2025-08-19T23:17:04.6687112Z 
2025-08-19T23:17:04.6687254Z # price\_importer.common.db\_url
2025-08-19T23:17:04.6687483Z 
2025-08-19T23:17:04.6687640Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T23:17:04.6687909Z 
2025-08-19T23:17:04.6688003Z #### make\_dsn
2025-08-19T23:17:04.6688152Z 
2025-08-19T23:17:04.6688245Z ```python
2025-08-19T23:17:04.6688504Z def make_dsn(async_: bool = False) -> str
2025-08-19T23:17:04.6688824Z ```
2025-08-19T23:17:04.6688944Z 
2025-08-19T23:17:04.6689126Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T23:17:04.6689442Z 
2025-08-19T23:17:04.6689611Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T23:17:04.6689914Z 
2025-08-19T23:17:04.6690013Z #### build\_url
2025-08-19T23:17:04.6690214Z 
2025-08-19T23:17:04.6690316Z ```python
2025-08-19T23:17:04.6690593Z def build_url(async_: bool = False) -> str
2025-08-19T23:17:04.6690975Z ```
2025-08-19T23:17:04.6691113Z 
2025-08-19T23:17:04.6691320Z Return Postgres DSN built from environment variables.
2025-08-19T23:17:04.6691675Z 
2025-08-19T23:17:04.6691814Z <a id="price_importer.common"></a>
2025-08-19T23:17:04.6692063Z 
2025-08-19T23:17:04.6692188Z # price\_importer.common
2025-08-19T23:17:04.6692398Z 
2025-08-19T23:17:04.6692537Z <a id="price_importer.common.base"></a>
2025-08-19T23:17:04.6692802Z 
2025-08-19T23:17:04.6692944Z # price\_importer.common.base
2025-08-19T23:17:04.6693163Z 
2025-08-19T23:17:04.6693318Z <a id="price_importer.tests.conftest"></a>
2025-08-19T23:17:04.6693594Z 
2025-08-19T23:17:04.6693882Z # price\_importer.tests.conftest
2025-08-19T23:17:04.6694121Z 
2025-08-19T23:17:04.6694281Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T23:17:04.6694562Z 
2025-08-19T23:17:04.6694700Z # price\_importer.tests.test\_reader
2025-08-19T23:17:04.6694949Z 
2025-08-19T23:17:04.6695126Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T23:17:04.6695413Z 
2025-08-19T23:17:04.6695554Z # price\_importer.tests.test\_imports
2025-08-19T23:17:04.6695802Z 
2025-08-19T23:17:04.6695962Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T23:17:04.6696416Z 
2025-08-19T23:17:04.6696549Z # price\_importer.tests.test\_smoke
2025-08-19T23:17:04.6696795Z 
2025-08-19T23:17:04.6696960Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T23:17:04.6697242Z 
2025-08-19T23:17:04.6697395Z # price\_importer.tests.test\_normaliser
2025-08-19T23:17:04.6697654Z 
2025-08-19T23:17:04.6697787Z <a id="price_importer.tests"></a>
2025-08-19T23:17:04.6698030Z 
2025-08-19T23:17:04.6698153Z # price\_importer.tests
2025-08-19T23:17:04.6698382Z 
2025-08-19T23:17:04.6698513Z <a id="price_importer.reader"></a>
2025-08-19T23:17:04.6698748Z 
2025-08-19T23:17:04.6698869Z # price\_importer.reader
2025-08-19T23:17:04.6699070Z 
2025-08-19T23:17:04.6699213Z <a id="price_importer.repository"></a>
2025-08-19T23:17:04.6699471Z 
2025-08-19T23:17:04.6699599Z # price\_importer.repository
2025-08-19T23:17:04.6699817Z 
2025-08-19T23:17:04.6699957Z <a id="price_importer.import"></a>
2025-08-19T23:17:04.6700190Z 
2025-08-19T23:17:04.6700313Z # price\_importer.import
2025-08-19T23:17:04.6700711Z 
2025-08-19T23:17:04.6700823Z <a id="fees_h10"></a>
2025-08-19T23:17:04.6700998Z 
2025-08-19T23:17:04.6701103Z # fees\_h10
2025-08-19T23:17:04.6701244Z 
2025-08-19T23:17:04.6701363Z <a id="fees_h10.worker"></a>
2025-08-19T23:17:04.6701572Z 
2025-08-19T23:17:04.6701688Z # fees\_h10.worker
2025-08-19T23:17:04.6701852Z 
2025-08-19T23:17:04.6702005Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T23:17:04.6702285Z 
2025-08-19T23:17:04.6702398Z #### list\_active\_asins
2025-08-19T23:17:04.6702585Z 
2025-08-19T23:17:04.6702679Z ```python
2025-08-19T23:17:04.6702937Z def list_active_asins() -> list[str]
2025-08-19T23:17:04.6703268Z ```
2025-08-19T23:17:04.6703392Z 
2025-08-19T23:17:04.6703564Z Return known ASINs or an empty list if unavailable.
2025-08-19T23:17:04.6704055Z 
2025-08-19T23:17:04.6704196Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T23:17:04.6704438Z 
2025-08-19T23:17:04.6704561Z # fees\_h10.tests.test\_smoke
2025-08-19T23:17:04.6704788Z 
2025-08-19T23:17:04.6704923Z <a id="fees_h10.tests"></a>
2025-08-19T23:17:04.6705129Z 
2025-08-19T23:17:04.6705239Z # fees\_h10.tests
2025-08-19T23:17:04.6705397Z 
2025-08-19T23:17:04.6705511Z <a id="fees_h10.client"></a>
2025-08-19T23:17:04.6705710Z 
2025-08-19T23:17:04.6705821Z # fees\_h10.client
2025-08-19T23:17:04.6705980Z 
2025-08-19T23:17:04.6706110Z <a id="fees_h10.repository"></a>
2025-08-19T23:17:04.6706349Z 
2025-08-19T23:17:04.6706461Z # fees\_h10.repository
2025-08-19T23:17:04.6706640Z 
2025-08-19T23:17:04.6706804Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T23:17:04.6707099Z 
2025-08-19T23:17:04.6707208Z #### upsert\_fees\_raw
2025-08-19T23:17:04.6707389Z 
2025-08-19T23:17:04.6707492Z ```python
2025-08-19T23:17:04.6707748Z def upsert_fees_raw(engine: Engine,
2025-08-19T23:17:04.6708136Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T23:17:04.6708506Z                     *,
2025-08-19T23:17:04.6708866Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T23:17:04.6709295Z ```
2025-08-19T23:17:04.6709433Z 
2025-08-19T23:17:04.6709559Z Idempotent upsert for fees.
2025-08-19T23:17:04.6709778Z 
2025-08-19T23:17:04.6710027Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T23:17:04.6710557Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T23:17:04.6711054Z Only updates when one of the mutable fields changes.
2025-08-19T23:17:04.6711372Z 
2025-08-19T23:17:04.6711486Z <a id="emailer"></a>
2025-08-19T23:17:04.6711667Z 
2025-08-19T23:17:04.6711763Z # emailer
2025-08-19T23:17:04.6711905Z 
2025-08-19T23:17:04.6712073Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T23:17:04.6712363Z 
2025-08-19T23:17:04.6712502Z # emailer.tests.test\_import\_emailer
2025-08-19T23:17:04.6712809Z 
2025-08-19T23:17:04.6712955Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T23:17:04.6713194Z 
2025-08-19T23:17:04.6713326Z # emailer.tests.test\_smoke
2025-08-19T23:17:04.6713552Z 
2025-08-19T23:17:04.6713681Z <a id="emailer.tests"></a>
2025-08-19T23:17:04.6714240Z 
2025-08-19T23:17:04.6714352Z # emailer.tests
2025-08-19T23:17:04.6714516Z 
2025-08-19T23:17:04.6714647Z <a id="emailer.generate_body"></a>
2025-08-19T23:17:04.6714888Z 
2025-08-19T23:17:04.6715012Z # emailer.generate\_body
2025-08-19T23:17:04.6715209Z 
2025-08-19T23:17:04.6715324Z <a id="llm_server"></a>
2025-08-19T23:17:04.6715515Z 
2025-08-19T23:17:04.6715617Z # llm\_server
2025-08-19T23:17:04.6715771Z 
2025-08-19T23:17:04.6715897Z <a id="llm_server.app"></a>
2025-08-19T23:17:04.6716110Z 
2025-08-19T23:17:04.6716219Z # llm\_server.app
2025-08-19T23:17:04.6716387Z 
