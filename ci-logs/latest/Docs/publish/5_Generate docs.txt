2025-08-19T08:20:33.3285145Z ##[group]Run pydoc-markdown
2025-08-19T08:20:33.3285483Z [36;1mpydoc-markdown[0m
2025-08-19T08:20:33.3325775Z shell: /usr/bin/bash -e {0}
2025-08-19T08:20:33.3326026Z env:
2025-08-19T08:20:33.3326274Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:33.3326720Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T08:20:33.3327142Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:33.3327513Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:33.3327875Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:20:33.3328227Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T08:20:33.3328524Z ##[endgroup]
2025-08-19T08:20:33.6278246Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T08:20:33.6279032Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T08:20:33.6279388Z In "pydoc-markdown.yml"
2025-08-19T08:20:33.6279699Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T08:20:33.6280299Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T08:20:33.6280837Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T08:20:33.6281194Z 
2025-08-19T08:20:33.9483333Z <a id="__init__"></a>
2025-08-19T08:20:33.9483905Z 
2025-08-19T08:20:33.9484072Z # \_\_init\_\_
2025-08-19T08:20:33.9484365Z 
2025-08-19T08:20:33.9484554Z <a id="api"></a>
2025-08-19T08:20:33.9484827Z 
2025-08-19T08:20:33.9484967Z # api
2025-08-19T08:20:33.9485168Z 
2025-08-19T08:20:33.9485363Z <a id="api.errors"></a>
2025-08-19T08:20:33.9485653Z 
2025-08-19T08:20:33.9485810Z # api.errors
2025-08-19T08:20:33.9486019Z 
2025-08-19T08:20:33.9486195Z <a id="api.sentry_config"></a>
2025-08-19T08:20:33.9486517Z 
2025-08-19T08:20:33.9486689Z # api.sentry\_config
2025-08-19T08:20:33.9486856Z 
2025-08-19T08:20:33.9486987Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T08:20:33.9487251Z 
2025-08-19T08:20:33.9487370Z # api.tests.test\_sentry\_scrub
2025-08-19T08:20:33.9487619Z 
2025-08-19T08:20:33.9487758Z <a id="api.tests.test_errors_json"></a>
2025-08-19T08:20:33.9488006Z 
2025-08-19T08:20:33.9488160Z # api.tests.test\_errors\_json
2025-08-19T08:20:33.9488371Z 
2025-08-19T08:20:33.9488491Z <a id="api.tests.test_llm"></a>
2025-08-19T08:20:33.9488668Z 
2025-08-19T08:20:33.9488749Z # api.tests.test\_llm
2025-08-19T08:20:33.9488888Z 
2025-08-19T08:20:33.9488988Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T08:20:33.9489181Z 
2025-08-19T08:20:33.9489277Z # api.tests.test\_sentry\_event
2025-08-19T08:20:33.9489439Z 
2025-08-19T08:20:33.9489581Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T08:20:33.9489825Z 
2025-08-19T08:20:33.9489912Z ## DummyTransport Objects
2025-08-19T08:20:33.9490056Z 
2025-08-19T08:20:33.9490131Z ```python
2025-08-19T08:20:33.9490330Z class DummyTransport()
2025-08-19T08:20:33.9490534Z ```
2025-08-19T08:20:33.9490637Z 
2025-08-19T08:20:33.9490835Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T08:20:33.9491416Z 
2025-08-19T08:20:33.9491505Z #### capture\_envelope
2025-08-19T08:20:33.9491638Z 
2025-08-19T08:20:33.9491709Z ```python
2025-08-19T08:20:33.9491912Z def capture_envelope(envelope)
2025-08-19T08:20:33.9492143Z ```
2025-08-19T08:20:33.9492244Z 
2025-08-19T08:20:33.9492388Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T08:20:33.9492627Z 
2025-08-19T08:20:33.9492727Z <a id="api.tests.test_cors"></a>
2025-08-19T08:20:33.9492895Z 
2025-08-19T08:20:33.9492977Z # api.tests.test\_cors
2025-08-19T08:20:33.9493289Z 
2025-08-19T08:20:33.9493435Z <a id="api.tests.test_imports"></a>
2025-08-19T08:20:33.9493617Z 
2025-08-19T08:20:33.9493704Z # api.tests.test\_imports
2025-08-19T08:20:33.9493856Z 
2025-08-19T08:20:33.9493952Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T08:20:33.9494136Z 
2025-08-19T08:20:33.9494224Z # api.tests.test\_rate\_limit
2025-08-19T08:20:33.9494387Z 
2025-08-19T08:20:33.9494494Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T08:20:33.9494907Z 
2025-08-19T08:20:33.9494986Z #### app
2025-08-19T08:20:33.9495088Z 
2025-08-19T08:20:33.9495162Z noqa: E402
2025-08-19T08:20:33.9495269Z 
2025-08-19T08:20:33.9495367Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T08:20:33.9495575Z 
2025-08-19T08:20:33.9495666Z # api.tests.test\_entrypoint
2025-08-19T08:20:33.9495828Z 
2025-08-19T08:20:33.9495924Z <a id="api.tests.test_health"></a>
2025-08-19T08:20:33.9496098Z 
2025-08-19T08:20:33.9496189Z # api.tests.test\_health
2025-08-19T08:20:33.9496333Z 
2025-08-19T08:20:33.9496422Z <a id="api.logging_config"></a>
2025-08-19T08:20:33.9496588Z 
2025-08-19T08:20:33.9496669Z # api.logging\_config
2025-08-19T08:20:33.9496799Z 
2025-08-19T08:20:33.9496889Z <a id="api.migrations.env"></a>
2025-08-19T08:20:33.9497055Z 
2025-08-19T08:20:33.9497137Z # api.migrations.env
2025-08-19T08:20:33.9497267Z 
2025-08-19T08:20:33.9497404Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T08:20:33.9497633Z 
2025-08-19T08:20:33.9497750Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T08:20:33.9497976Z 
2025-08-19T08:20:33.9498097Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T08:20:33.9498312Z 
2025-08-19T08:20:33.9498416Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T08:20:33.9498617Z 
2025-08-19T08:20:33.9498788Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T08:20:33.9499060Z 
2025-08-19T08:20:33.9499219Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T08:20:33.9499447Z 
2025-08-19T08:20:33.9499571Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T08:20:33.9499782Z 
2025-08-19T08:20:33.9499893Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T08:20:33.9500079Z 
2025-08-19T08:20:33.9500203Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T08:20:33.9500408Z 
2025-08-19T08:20:33.9500514Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T08:20:33.9500696Z 
2025-08-19T08:20:33.9500828Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T08:20:33.9501044Z 
2025-08-19T08:20:33.9501155Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T08:20:33.9501351Z 
2025-08-19T08:20:33.9501472Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T08:20:33.9501669Z 
2025-08-19T08:20:33.9501785Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T08:20:33.9501975Z 
2025-08-19T08:20:33.9502101Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T08:20:33.9502302Z 
2025-08-19T08:20:33.9502419Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T08:20:33.9502606Z 
2025-08-19T08:20:33.9502746Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T08:20:33.9502974Z 
2025-08-19T08:20:33.9503201Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T08:20:33.9503482Z 
2025-08-19T08:20:33.9503661Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T08:20:33.9503873Z 
2025-08-19T08:20:33.9503982Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T08:20:33.9504316Z 
2025-08-19T08:20:33.9504458Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T08:20:33.9504754Z 
2025-08-19T08:20:33.9504887Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T08:20:33.9505116Z 
2025-08-19T08:20:33.9505230Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T08:20:33.9505430Z 
2025-08-19T08:20:33.9505527Z # api.migrations.versions.0001\_baseline
2025-08-19T08:20:33.9505695Z 
2025-08-19T08:20:33.9505793Z <a id="api.migrations.versions"></a>
2025-08-19T08:20:33.9505957Z 
2025-08-19T08:20:33.9506041Z # api.migrations.versions
2025-08-19T08:20:33.9506176Z 
2025-08-19T08:20:33.9506265Z <a id="api.migrations"></a>
2025-08-19T08:20:33.9506400Z 
2025-08-19T08:20:33.9506472Z # api.migrations
2025-08-19T08:20:33.9506587Z 
2025-08-19T08:20:33.9506658Z <a id="api.db"></a>
2025-08-19T08:20:33.9506771Z 
2025-08-19T08:20:33.9506835Z # api.db
2025-08-19T08:20:33.9506932Z 
2025-08-19T08:20:33.9507015Z <a id="api.routes.stats"></a>
2025-08-19T08:20:33.9507295Z 
2025-08-19T08:20:33.9507374Z # api.routes.stats
2025-08-19T08:20:33.9507491Z 
2025-08-19T08:20:33.9507580Z <a id="api.routes.stats.kpi"></a>
2025-08-19T08:20:33.9507742Z 
2025-08-19T08:20:33.9507806Z #### kpi
2025-08-19T08:20:33.9507897Z 
2025-08-19T08:20:33.9507964Z ```python
2025-08-19T08:20:33.9508147Z @router.get("/stats/kpi")
2025-08-19T08:20:33.9508486Z def kpi() -> List[Dict[str, int]]
2025-08-19T08:20:33.9508708Z ```
2025-08-19T08:20:33.9508794Z 
2025-08-19T08:20:33.9508883Z Return KPI metrics (mock).
2025-08-19T08:20:33.9509019Z 
2025-08-19T08:20:33.9509125Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T08:20:33.9509309Z 
2025-08-19T08:20:33.9509381Z #### roi\_by\_vendor
2025-08-19T08:20:33.9509495Z 
2025-08-19T08:20:33.9509561Z ```python
2025-08-19T08:20:33.9509741Z @router.get("/stats/roi_by_vendor")
2025-08-19T08:20:33.9509989Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T08:20:33.9510221Z ```
2025-08-19T08:20:33.9510303Z 
2025-08-19T08:20:33.9510399Z Return ROI percent by vendor.
2025-08-19T08:20:33.9510540Z 
2025-08-19T08:20:33.9510633Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T08:20:33.9510807Z 
2025-08-19T08:20:33.9510876Z #### roi\_trend
2025-08-19T08:20:33.9510981Z 
2025-08-19T08:20:33.9511045Z ```python
2025-08-19T08:20:33.9511219Z @router.get("/stats/roi_trend")
2025-08-19T08:20:33.9511455Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T08:20:33.9511695Z ```
2025-08-19T08:20:33.9511776Z 
2025-08-19T08:20:33.9511858Z Return 30-day ROI trend.
2025-08-19T08:20:33.9511985Z 
2025-08-19T08:20:33.9512065Z <a id="api.routes.roi"></a>
2025-08-19T08:20:33.9512205Z 
2025-08-19T08:20:33.9512277Z # api.routes.roi
2025-08-19T08:20:33.9512386Z 
2025-08-19T08:20:33.9512473Z <a id="api.routes.health"></a>
2025-08-19T08:20:33.9512626Z 
2025-08-19T08:20:33.9512699Z # api.routes.health
2025-08-19T08:20:33.9512812Z 
2025-08-19T08:20:33.9512910Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T08:20:33.9513076Z 
2025-08-19T08:20:33.9513280Z #### MAX\_SKEW
2025-08-19T08:20:33.9513383Z 
2025-08-19T08:20:33.9513456Z seconds
2025-08-19T08:20:33.9513544Z 
2025-08-19T08:20:33.9513639Z <a id="api.routes.health.health"></a>
2025-08-19T08:20:33.9513809Z 
2025-08-19T08:20:33.9513875Z #### health
2025-08-19T08:20:33.9513968Z 
2025-08-19T08:20:33.9514034Z ```python
2025-08-19T08:20:33.9514240Z @router.get("/health", include_in_schema=False)
2025-08-19T08:20:33.9514623Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T08:20:33.9514964Z ```
2025-08-19T08:20:33.9515049Z 
2025-08-19T08:20:33.9515173Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T08:20:33.9515372Z 
2025-08-19T08:20:33.9515463Z <a id="api.routes.repository"></a>
2025-08-19T08:20:33.9515629Z 
2025-08-19T08:20:33.9515708Z # api.routes.repository
2025-08-19T08:20:33.9515833Z 
2025-08-19T08:20:33.9515911Z <a id="api.routes"></a>
2025-08-19T08:20:33.9516030Z 
2025-08-19T08:20:33.9516096Z # api.routes
2025-08-19T08:20:33.9516197Z 
2025-08-19T08:20:33.9516416Z <a id="api.models.fee"></a>
2025-08-19T08:20:33.9516555Z 
2025-08-19T08:20:33.9516626Z # api.models.fee
2025-08-19T08:20:33.9516740Z 
2025-08-19T08:20:33.9516814Z <a id="api.models"></a>
2025-08-19T08:20:33.9516934Z 
2025-08-19T08:20:33.9517001Z # api.models
2025-08-19T08:20:33.9517102Z 
2025-08-19T08:20:33.9517186Z <a id="api.roi_repository"></a>
2025-08-19T08:20:33.9517333Z 
2025-08-19T08:20:33.9517414Z # api.roi\_repository
2025-08-19T08:20:33.9517532Z 
2025-08-19T08:20:33.9517604Z <a id="api.main"></a>
2025-08-19T08:20:33.9517724Z 
2025-08-19T08:20:33.9517792Z # api.main
2025-08-19T08:20:33.9517886Z 
2025-08-19T08:20:33.9517965Z <a id="api.main.ready"></a>
2025-08-19T08:20:33.9518106Z 
2025-08-19T08:20:33.9518171Z #### ready
2025-08-19T08:20:33.9518262Z 
2025-08-19T08:20:33.9518334Z ```python
2025-08-19T08:20:33.9518597Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T08:20:33.9519042Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T08:20:33.9519512Z                                                                       str]
2025-08-19T08:20:33.9519755Z ```
2025-08-19T08:20:33.9519842Z 
2025-08-19T08:20:33.9519943Z Return 200 only when migrations are at head.
2025-08-19T08:20:33.9520122Z 
2025-08-19T08:20:33.9520198Z <a id="api.config"></a>
2025-08-19T08:20:33.9520321Z 
2025-08-19T08:20:33.9520394Z # api.config
2025-08-19T08:20:33.9520495Z 
2025-08-19T08:20:33.9520563Z <a id="etl"></a>
2025-08-19T08:20:33.9520673Z 
2025-08-19T08:20:33.9520737Z # etl
2025-08-19T08:20:33.9520828Z 
2025-08-19T08:20:33.9520912Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T08:20:33.9521068Z 
2025-08-19T08:20:33.9521144Z # etl.fba\_fee\_ingestor
2025-08-19T08:20:33.9521268Z 
2025-08-19T08:20:33.9521355Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T08:20:33.9521503Z 
2025-08-19T08:20:33.9521578Z # etl.sp\_fees\_ingestor
2025-08-19T08:20:33.9521700Z 
2025-08-19T08:20:33.9521787Z <a id="etl.keepa_ingestor"></a>
2025-08-19T08:20:33.9521931Z 
2025-08-19T08:20:33.9522010Z # etl.keepa\_ingestor
2025-08-19T08:20:33.9522132Z 
2025-08-19T08:20:33.9522203Z <a id="etl.db"></a>
2025-08-19T08:20:33.9522312Z 
2025-08-19T08:20:33.9522383Z # etl.db
2025-08-19T08:20:33.9522473Z 
2025-08-19T08:20:33.9522561Z <a id="etl.dialects.schemas"></a>
2025-08-19T08:20:33.9522716Z 
2025-08-19T08:20:33.9522800Z # etl.dialects.schemas
2025-08-19T08:20:33.9522924Z 
2025-08-19T08:20:33.9523032Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T08:20:33.9523446Z 
2025-08-19T08:20:33.9523550Z # etl.dialects.amazon\_reimbursements
2025-08-19T08:20:33.9523727Z 
2025-08-19T08:20:33.9523838Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T08:20:33.9524020Z 
2025-08-19T08:20:33.9524119Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T08:20:33.9524284Z 
2025-08-19T08:20:33.9524379Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T08:20:33.9524555Z 
2025-08-19T08:20:33.9524640Z # etl.dialects.amazon\_returns
2025-08-19T08:20:33.9524784Z 
2025-08-19T08:20:33.9524891Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T08:20:33.9525069Z 
2025-08-19T08:20:33.9525157Z # etl.dialects.amazon\_fee\_preview
2025-08-19T08:20:33.9525315Z 
2025-08-19T08:20:33.9525430Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T08:20:33.9525619Z 
2025-08-19T08:20:33.9525712Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T08:20:33.9525886Z 
2025-08-19T08:20:33.9525983Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T08:20:33.9526154Z 
2025-08-19T08:20:33.9526244Z # etl.dialects.amazon\_settlements
2025-08-19T08:20:33.9526405Z 
2025-08-19T08:20:33.9526483Z <a id="etl.dialects"></a>
2025-08-19T08:20:33.9526614Z 
2025-08-19T08:20:33.9526685Z # etl.dialects
2025-08-19T08:20:33.9526788Z 
2025-08-19T08:20:33.9526858Z <a id="ingest"></a>
2025-08-19T08:20:33.9526968Z 
2025-08-19T08:20:33.9527038Z # ingest
2025-08-19T08:20:33.9527130Z 
2025-08-19T08:20:33.9527214Z <a id="ingest.maintenance"></a>
2025-08-19T08:20:33.9527366Z 
2025-08-19T08:20:33.9527439Z # ingest.maintenance
2025-08-19T08:20:33.9527684Z 
2025-08-19T08:20:33.9527772Z <a id="ingest.copy_loader"></a>
2025-08-19T08:20:33.9527912Z 
2025-08-19T08:20:33.9527987Z # ingest.copy\_loader
2025-08-19T08:20:33.9528109Z 
2025-08-19T08:20:33.9528219Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T08:20:33.9528410Z 
2025-08-19T08:20:33.9528486Z #### copy\_df\_via\_temp
2025-08-19T08:20:33.9528616Z 
2025-08-19T08:20:33.9528682Z ```python
2025-08-19T08:20:33.9528861Z def copy_df_via_temp(engine: Engine,
2025-08-19T08:20:33.9529113Z                      df: pd.DataFrame,
2025-08-19T08:20:33.9529359Z                      target_table: str,
2025-08-19T08:20:33.9529579Z                      *,
2025-08-19T08:20:33.9529797Z                      target_schema: Optional[str] = None,
2025-08-19T08:20:33.9530063Z                      columns: Sequence[str],
2025-08-19T08:20:33.9530340Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T08:20:33.9530627Z                      analyze_after: bool = False,
2025-08-19T08:20:33.9531074Z                      connection: Any | None = None) -> int
2025-08-19T08:20:33.9531317Z ```
2025-08-19T08:20:33.9531408Z 
2025-08-19T08:20:33.9531565Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T08:20:33.9531801Z 
2025-08-19T08:20:33.9531897Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T08:20:33.9532058Z 
2025-08-19T08:20:33.9532140Z # ingest.tests.test\_smoke
2025-08-19T08:20:33.9532276Z 
2025-08-19T08:20:33.9532355Z <a id="ingest.tests"></a>
2025-08-19T08:20:33.9532486Z 
2025-08-19T08:20:33.9532555Z # ingest.tests
2025-08-19T08:20:33.9532663Z 
2025-08-19T08:20:33.9532749Z <a id="ingest.upload_router"></a>
2025-08-19T08:20:33.9532905Z 
2025-08-19T08:20:33.9532988Z # ingest.upload\_router
2025-08-19T08:20:33.9533226Z 
2025-08-19T08:20:33.9533313Z <a id="ingest.email_watcher"></a>
2025-08-19T08:20:33.9533472Z 
2025-08-19T08:20:33.9533548Z # ingest.email\_watcher
2025-08-19T08:20:33.9533669Z 
2025-08-19T08:20:33.9533762Z <a id="ingest.email_watcher.main"></a>
2025-08-19T08:20:33.9533943Z 
2025-08-19T08:20:33.9534008Z #### main
2025-08-19T08:20:33.9534099Z 
2025-08-19T08:20:33.9534175Z ```python
2025-08-19T08:20:33.9534348Z def main() -> dict[str, str]
2025-08-19T08:20:33.9534552Z ```
2025-08-19T08:20:33.9534638Z 
2025-08-19T08:20:33.9534779Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T08:20:33.9535026Z 
2025-08-19T08:20:33.9535160Z Returns {"status": "success"} when processing completes.
2025-08-19T08:20:33.9535381Z 
2025-08-19T08:20:33.9535460Z <a id="ingest.tasks"></a>
2025-08-19T08:20:33.9535592Z 
2025-08-19T08:20:33.9535667Z # ingest.tasks
2025-08-19T08:20:33.9535770Z 
2025-08-19T08:20:33.9535869Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T08:20:33.9536055Z 
2025-08-19T08:20:33.9536129Z #### task\_import\_file
2025-08-19T08:20:33.9536248Z 
2025-08-19T08:20:33.9536314Z ```python
2025-08-19T08:20:33.9536536Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T08:20:33.9536820Z def task_import_file(self: Any,
2025-08-19T08:20:33.9537050Z                      uri: str,
2025-08-19T08:20:33.9537301Z                      report_type: Optional[str] = None,
2025-08-19T08:20:33.9537575Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T08:20:33.9537854Z ```
2025-08-19T08:20:33.9537938Z 
2025-08-19T08:20:33.9538070Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T08:20:33.9538290Z 
2025-08-19T08:20:33.9538374Z <a id="ingest.celery_app"></a>
2025-08-19T08:20:33.9538517Z 
2025-08-19T08:20:33.9538590Z # ingest.celery\_app
2025-08-19T08:20:33.9538722Z 
2025-08-19T08:20:33.9538807Z <a id="ingest.ingest_router"></a>
2025-08-19T08:20:33.9538955Z 
2025-08-19T08:20:33.9539036Z # ingest.ingest\_router
2025-08-19T08:20:33.9539154Z 
2025-08-19T08:20:33.9539232Z <a id="logistics_etl"></a>
2025-08-19T08:20:33.9539369Z 
2025-08-19T08:20:33.9539437Z # logistics\_etl
2025-08-19T08:20:33.9539546Z 
2025-08-19T08:20:33.9539625Z Daily logistics ETL job.
2025-08-19T08:20:33.9539765Z 
2025-08-19T08:20:33.9540153Z <a id="logistics_etl.__main__"></a>
2025-08-19T08:20:33.9540323Z 
2025-08-19T08:20:33.9540411Z # logistics\_etl.\_\_main\_\_
2025-08-19T08:20:33.9540553Z 
2025-08-19T08:20:33.9540634Z <a id="logistics_etl.dsn"></a>
2025-08-19T08:20:33.9540779Z 
2025-08-19T08:20:33.9540852Z # logistics\_etl.dsn
2025-08-19T08:20:33.9540965Z 
2025-08-19T08:20:33.9541084Z Local DSN builder to avoid cross-service dependency.
2025-08-19T08:20:33.9541298Z 
2025-08-19T08:20:33.9541391Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T08:20:33.9541592Z 
2025-08-19T08:20:33.9541661Z #### build\_dsn
2025-08-19T08:20:33.9541767Z 
2025-08-19T08:20:33.9541833Z ```python
2025-08-19T08:20:33.9542018Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:20:33.9542241Z ```
2025-08-19T08:20:33.9542331Z 
2025-08-19T08:20:33.9542470Z Return a Postgres DSN assembled from environment variables.
2025-08-19T08:20:33.9542697Z 
2025-08-19T08:20:33.9542860Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T08:20:33.9543773Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T08:20:33.9544171Z error when any required variable is missing.
2025-08-19T08:20:33.9544351Z 
2025-08-19T08:20:33.9544452Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T08:20:33.9544635Z 
2025-08-19T08:20:33.9544721Z # logistics\_etl.tests.conftest
2025-08-19T08:20:33.9544869Z 
2025-08-19T08:20:33.9544986Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T08:20:33.9545176Z 
2025-08-19T08:20:33.9545269Z # logistics\_etl.tests.test\_repository
2025-08-19T08:20:33.9545443Z 
2025-08-19T08:20:33.9545539Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T08:20:33.9545716Z 
2025-08-19T08:20:33.9545803Z # logistics\_etl.tests.test\_cron
2025-08-19T08:20:33.9545967Z 
2025-08-19T08:20:33.9546067Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T08:20:33.9546251Z 
2025-08-19T08:20:33.9546351Z # logistics\_etl.tests.test\_imports
2025-08-19T08:20:33.9546512Z 
2025-08-19T08:20:33.9546616Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T08:20:33.9546799Z 
2025-08-19T08:20:33.9546886Z # logistics\_etl.tests.test\_smoke
2025-08-19T08:20:33.9547041Z 
2025-08-19T08:20:33.9547140Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T08:20:33.9547322Z 
2025-08-19T08:20:33.9547411Z # logistics\_etl.tests.test\_client
2025-08-19T08:20:33.9547568Z 
2025-08-19T08:20:33.9547658Z <a id="logistics_etl.tests"></a>
2025-08-19T08:20:33.9547804Z 
2025-08-19T08:20:33.9547878Z # logistics\_etl.tests
2025-08-19T08:20:33.9548003Z 
2025-08-19T08:20:33.9548087Z <a id="logistics_etl.flow"></a>
2025-08-19T08:20:33.9548228Z 
2025-08-19T08:20:33.9548302Z # logistics\_etl.flow
2025-08-19T08:20:33.9548427Z 
2025-08-19T08:20:33.9548513Z <a id="logistics_etl.client"></a>
2025-08-19T08:20:33.9548667Z 
2025-08-19T08:20:33.9548755Z # logistics\_etl.client
2025-08-19T08:20:33.9548879Z 
2025-08-19T08:20:33.9548960Z <a id="logistics_etl.cron"></a>
2025-08-19T08:20:33.9549102Z 
2025-08-19T08:20:33.9549185Z # logistics\_etl.cron
2025-08-19T08:20:33.9549307Z 
2025-08-19T08:20:33.9549388Z <a id="logistics_etl.db"></a>
2025-08-19T08:20:33.9549534Z 
2025-08-19T08:20:33.9595395Z # logistics\_etl.db
2025-08-19T08:20:33.9595619Z 
2025-08-19T08:20:33.9595795Z <a id="logistics_etl.repository"></a>
2025-08-19T08:20:33.9596089Z 
2025-08-19T08:20:33.9596232Z # logistics\_etl.repository
2025-08-19T08:20:33.9596475Z 
2025-08-19T08:20:33.9596613Z <a id="alert_bot"></a>
2025-08-19T08:20:33.9596752Z 
2025-08-19T08:20:33.9596822Z # alert\_bot
2025-08-19T08:20:33.9596929Z 
2025-08-19T08:20:33.9597022Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T08:20:33.9597190Z 
2025-08-19T08:20:33.9597282Z # alert\_bot.tests.test\_smoke
2025-08-19T08:20:33.9597427Z 
2025-08-19T08:20:33.9597507Z <a id="alert_bot.tests"></a>
2025-08-19T08:20:33.9597653Z 
2025-08-19T08:20:33.9597724Z # alert\_bot.tests
2025-08-19T08:20:33.9597835Z 
2025-08-19T08:20:33.9597918Z <a id="alert_bot.alert_bot"></a>
2025-08-19T08:20:33.9598068Z 
2025-08-19T08:20:33.9598152Z # alert\_bot.alert\_bot
2025-08-19T08:20:33.9598441Z 
2025-08-19T08:20:33.9598526Z <a id="alert_bot.rules"></a>
2025-08-19T08:20:33.9598663Z 
2025-08-19T08:20:33.9598746Z # alert\_bot.rules
2025-08-19T08:20:33.9598855Z 
2025-08-19T08:20:33.9598947Z <a id="common"></a>
2025-08-19T08:20:33.9599082Z 
2025-08-19T08:20:33.9599163Z # common
2025-08-19T08:20:33.9599277Z 
2025-08-19T08:20:33.9599378Z <a id="common.dsn"></a>
2025-08-19T08:20:33.9599531Z 
2025-08-19T08:20:33.9599614Z # common.dsn
2025-08-19T08:20:33.9599747Z 
2025-08-19T08:20:33.9599856Z <a id="common.dsn.build_dsn"></a>
2025-08-19T08:20:33.9600046Z 
2025-08-19T08:20:33.9600210Z #### build\_dsn
2025-08-19T08:20:33.9600339Z 
2025-08-19T08:20:33.9600424Z ```python
2025-08-19T08:20:33.9600674Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:20:33.9600967Z ```
2025-08-19T08:20:33.9601084Z 
2025-08-19T08:20:33.9601252Z Return a Postgres DSN, validating required variables.
2025-08-19T08:20:33.9601519Z 
2025-08-19T08:20:33.9601756Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T08:20:33.9602457Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T08:20:33.9602982Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T08:20:33.9603654Z missing.
2025-08-19T08:20:33.9603772Z 
2025-08-19T08:20:33.9603889Z <a id="common.models_vendor"></a>
2025-08-19T08:20:33.9604080Z 
2025-08-19T08:20:33.9604175Z # common.models\_vendor
2025-08-19T08:20:33.9604334Z 
2025-08-19T08:20:33.9604452Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T08:20:33.9604666Z 
2025-08-19T08:20:33.9604760Z ## Vendor Objects
2025-08-19T08:20:33.9604894Z 
2025-08-19T08:20:33.9604975Z ```python
2025-08-19T08:20:33.9605179Z class Vendor(Base)
2025-08-19T08:20:33.9605389Z ```
2025-08-19T08:20:33.9605500Z 
2025-08-19T08:20:33.9605600Z Vendor of inventory items.
2025-08-19T08:20:33.9605768Z 
2025-08-19T08:20:33.9605899Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T08:20:33.9606146Z 
2025-08-19T08:20:33.9606245Z ## VendorPrice Objects
2025-08-19T08:20:33.9606395Z 
2025-08-19T08:20:33.9606482Z ```python
2025-08-19T08:20:33.9606688Z class VendorPrice(Base)
2025-08-19T08:20:33.9606922Z ```
2025-08-19T08:20:33.9607026Z 
2025-08-19T08:20:33.9607157Z Association table linking vendors to pricing.
2025-08-19T08:20:33.9607394Z 
2025-08-19T08:20:33.9607495Z <a id="common.db_url"></a>
2025-08-19T08:20:33.9607659Z 
2025-08-19T08:20:33.9607745Z # common.db\_url
2025-08-19T08:20:33.9607884Z 
2025-08-19T08:20:33.9607992Z <a id="common.db_url.build_url"></a>
2025-08-19T08:20:33.9608189Z 
2025-08-19T08:20:33.9608277Z #### build\_url
2025-08-19T08:20:33.9608406Z 
2025-08-19T08:20:33.9608487Z ```python
2025-08-19T08:20:33.9608721Z def build_url(async_: bool = True) -> str
2025-08-19T08:20:33.9608954Z ```
2025-08-19T08:20:33.9609046Z 
2025-08-19T08:20:33.9609149Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:20:33.9609330Z 
2025-08-19T08:20:33.9609413Z <a id="common.keepa"></a>
2025-08-19T08:20:33.9609558Z 
2025-08-19T08:20:33.9609630Z # common.keepa
2025-08-19T08:20:33.9609734Z 
2025-08-19T08:20:33.9609816Z <a id="common.llm"></a>
2025-08-19T08:20:33.9609935Z 
2025-08-19T08:20:33.9610001Z # common.llm
2025-08-19T08:20:33.9610104Z 
2025-08-19T08:20:33.9610187Z <a id="common.settings"></a>
2025-08-19T08:20:33.9610326Z 
2025-08-19T08:20:33.9610397Z # common.settings
2025-08-19T08:20:33.9610513Z 
2025-08-19T08:20:33.9610586Z <a id="common.db"></a>
2025-08-19T08:20:33.9610703Z 
2025-08-19T08:20:33.9610775Z # common.db
2025-08-19T08:20:33.9610867Z 
2025-08-19T08:20:33.9610961Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T08:20:33.9611135Z 
2025-08-19T08:20:33.9611224Z #### build\_sqlalchemy\_url
2025-08-19T08:20:33.9611361Z 
2025-08-19T08:20:33.9611426Z ```python
2025-08-19T08:20:33.9611611Z def build_sqlalchemy_url() -> str
2025-08-19T08:20:33.9611824Z ```
2025-08-19T08:20:33.9611914Z 
2025-08-19T08:20:33.9612014Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:20:33.9612191Z 
2025-08-19T08:20:33.9612430Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T08:20:33.9612602Z 
2025-08-19T08:20:33.9612681Z #### build\_asyncpg\_dsn
2025-08-19T08:20:33.9612816Z 
2025-08-19T08:20:33.9612882Z ```python
2025-08-19T08:20:33.9613054Z def build_asyncpg_dsn() -> str
2025-08-19T08:20:33.9613373Z ```
2025-08-19T08:20:33.9613460Z 
2025-08-19T08:20:33.9613592Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:20:33.9613816Z 
2025-08-19T08:20:33.9613909Z <a id="common.db.refresh_mvs"></a>
2025-08-19T08:20:33.9614065Z 
2025-08-19T08:20:33.9614140Z #### refresh\_mvs
2025-08-19T08:20:33.9614245Z 
2025-08-19T08:20:33.9614310Z ```python
2025-08-19T08:20:33.9614517Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:20:33.9614775Z ```
2025-08-19T08:20:33.9614869Z 
2025-08-19T08:20:33.9615008Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:20:33.9615231Z 
2025-08-19T08:20:33.9615318Z <a id="common.config"></a>
2025-08-19T08:20:33.9615450Z 
2025-08-19T08:20:33.9615649Z # common.config
2025-08-19T08:20:33.9615757Z 
2025-08-19T08:20:33.9615837Z <a id="common.base"></a>
2025-08-19T08:20:33.9615960Z 
2025-08-19T08:20:33.9616026Z # common.base
2025-08-19T08:20:33.9616130Z 
2025-08-19T08:20:33.9616211Z <a id="common.base.Base"></a>
2025-08-19T08:20:33.9616354Z 
2025-08-19T08:20:33.9616422Z ## Base Objects
2025-08-19T08:20:33.9616529Z 
2025-08-19T08:20:33.9616595Z ```python
2025-08-19T08:20:33.9616770Z class Base(DeclarativeBase)
2025-08-19T08:20:33.9616966Z ```
2025-08-19T08:20:33.9617049Z 
2025-08-19T08:20:33.9617140Z Base class for SQLAlchemy models.
2025-08-19T08:20:33.9617291Z 
2025-08-19T08:20:33.9617365Z <a id="repricer"></a>
2025-08-19T08:20:33.9617488Z 
2025-08-19T08:20:33.9617557Z # repricer
2025-08-19T08:20:33.9617650Z 
2025-08-19T08:20:33.9617739Z <a id="repricer.app.schemas"></a>
2025-08-19T08:20:33.9617896Z 
2025-08-19T08:20:33.9617975Z # repricer.app.schemas
2025-08-19T08:20:33.9618096Z 
2025-08-19T08:20:33.9618187Z <a id="repricer.app.deps"></a>
2025-08-19T08:20:33.9618340Z 
2025-08-19T08:20:33.9618416Z # repricer.app.deps
2025-08-19T08:20:33.9618535Z 
2025-08-19T08:20:33.9618659Z Placeholder module for Keepa / SP-API clients.
2025-08-19T08:20:33.9618853Z 
2025-08-19T08:20:33.9618942Z <a id="repricer.app.logic"></a>
2025-08-19T08:20:33.9619097Z 
2025-08-19T08:20:33.9619174Z # repricer.app.logic
2025-08-19T08:20:33.9619291Z 
2025-08-19T08:20:33.9619399Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T08:20:33.9619581Z 
2025-08-19T08:20:33.9619649Z #### MIN\_MARGIN
2025-08-19T08:20:33.9619760Z 
2025-08-19T08:20:33.9619825Z 15 % ROI
2025-08-19T08:20:33.9619915Z 
2025-08-19T08:20:33.9620025Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T08:20:33.9620217Z 
2025-08-19T08:20:33.9620289Z #### compute\_price
2025-08-19T08:20:33.9620399Z 
2025-08-19T08:20:33.9620471Z ```python
2025-08-19T08:20:33.9620721Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T08:20:33.9621031Z ```
2025-08-19T08:20:33.9621117Z 
2025-08-19T08:20:33.9621235Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T08:20:33.9621528Z Replace with real competitive logic later.
2025-08-19T08:20:33.9621700Z 
2025-08-19T08:20:33.9621785Z <a id="repricer.app.main"></a>
2025-08-19T08:20:33.9621937Z 
2025-08-19T08:20:33.9622011Z # repricer.app.main
2025-08-19T08:20:33.9622123Z 
2025-08-19T08:20:33.9622210Z <a id="repricer.app"></a>
2025-08-19T08:20:33.9622339Z 
2025-08-19T08:20:33.9622408Z # repricer.app
2025-08-19T08:20:33.9622517Z 
2025-08-19T08:20:33.9622613Z <a id="repricer.tests.test_imports"></a>
2025-08-19T08:20:33.9622785Z 
2025-08-19T08:20:33.9622867Z # repricer.tests.test\_imports
2025-08-19T08:20:33.9623014Z 
2025-08-19T08:20:33.9623205Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T08:20:33.9623382Z 
2025-08-19T08:20:33.9623477Z # repricer.tests.test\_smoke
2025-08-19T08:20:33.9623620Z 
2025-08-19T08:20:33.9623701Z <a id="repricer.tests"></a>
2025-08-19T08:20:33.9623842Z 
2025-08-19T08:20:33.9623914Z # repricer.tests
2025-08-19T08:20:33.9624156Z 
2025-08-19T08:20:33.9624224Z <a id="db"></a>
2025-08-19T08:20:33.9624336Z 
2025-08-19T08:20:33.9624400Z # db
2025-08-19T08:20:33.9624488Z 
2025-08-19T08:20:33.9624574Z <a id="db.utils.views"></a>
2025-08-19T08:20:33.9624707Z 
2025-08-19T08:20:33.9624777Z # db.utils.views
2025-08-19T08:20:33.9624884Z 
2025-08-19T08:20:33.9624993Z <a id="db.utils.views.replace_view"></a>
2025-08-19T08:20:33.9625170Z 
2025-08-19T08:20:33.9625242Z #### replace\_view
2025-08-19T08:20:33.9625358Z 
2025-08-19T08:20:33.9625424Z ```python
2025-08-19T08:20:33.9625626Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T08:20:33.9625882Z ```
2025-08-19T08:20:33.9625966Z 
2025-08-19T08:20:33.9626063Z Drop and recreate a SQL view atomically.
2025-08-19T08:20:33.9626229Z 
2025-08-19T08:20:33.9626300Z <a id="db.utils"></a>
2025-08-19T08:20:33.9626419Z 
2025-08-19T08:20:33.9626489Z # db.utils
2025-08-19T08:20:33.9626582Z 
2025-08-19T08:20:33.9626662Z <a id="price_importer"></a>
2025-08-19T08:20:33.9626801Z 
2025-08-19T08:20:33.9627033Z # price\_importer
2025-08-19T08:20:33.9627142Z 
2025-08-19T08:20:33.9627255Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T08:20:33.9627444Z 
2025-08-19T08:20:33.9627537Z # price\_importer.services\_common.dsn
2025-08-19T08:20:33.9627704Z 
2025-08-19T08:20:33.9627837Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T08:20:33.9628048Z 
2025-08-19T08:20:33.9628114Z #### build\_dsn
2025-08-19T08:20:33.9628221Z 
2025-08-19T08:20:33.9628287Z ```python
2025-08-19T08:20:33.9628464Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:20:33.9628701Z ```
2025-08-19T08:20:33.9628785Z 
2025-08-19T08:20:33.9628861Z Return safe DSN.
2025-08-19T08:20:33.9628965Z 
2025-08-19T08:20:33.9629307Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T08:20:33.9629519Z 
2025-08-19T08:20:33.9629656Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T08:20:33.9629871Z 
2025-08-19T08:20:33.9629986Z # price\_importer.services\_common.models\_vendor
2025-08-19T08:20:33.9630200Z 
2025-08-19T08:20:33.9630310Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T08:20:33.9630502Z 
2025-08-19T08:20:33.9630605Z # price\_importer.services\_common.db\_url
2025-08-19T08:20:33.9630779Z 
2025-08-19T08:20:33.9630919Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T08:20:33.9631144Z 
2025-08-19T08:20:33.9631212Z #### build\_url
2025-08-19T08:20:33.9631314Z 
2025-08-19T08:20:33.9631380Z ```python
2025-08-19T08:20:33.9631564Z def build_url(async_: bool = True) -> str
2025-08-19T08:20:33.9631793Z ```
2025-08-19T08:20:33.9631884Z 
2025-08-19T08:20:33.9631987Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:20:33.9632165Z 
2025-08-19T08:20:33.9632283Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T08:20:33.9632508Z 
2025-08-19T08:20:33.9632606Z # price\_importer.services\_common.keepa
2025-08-19T08:20:33.9632783Z 
2025-08-19T08:20:33.9632886Z <a id="price_importer.services_common.llm"></a>
2025-08-19T08:20:33.9633075Z 
2025-08-19T08:20:33.9633263Z # price\_importer.services\_common.llm
2025-08-19T08:20:33.9633436Z 
2025-08-19T08:20:33.9633555Z <a id="price_importer.services_common.settings"></a>
2025-08-19T08:20:33.9633750Z 
2025-08-19T08:20:33.9633857Z # price\_importer.services\_common.settings
2025-08-19T08:20:33.9634033Z 
2025-08-19T08:20:33.9634139Z <a id="price_importer.services_common.db"></a>
2025-08-19T08:20:33.9634324Z 
2025-08-19T08:20:33.9634418Z # price\_importer.services\_common.db
2025-08-19T08:20:33.9634583Z 
2025-08-19T08:20:33.9634747Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T08:20:33.9634990Z 
2025-08-19T08:20:33.9635069Z #### build\_sqlalchemy\_url
2025-08-19T08:20:33.9635202Z 
2025-08-19T08:20:33.9635273Z ```python
2025-08-19T08:20:33.9635448Z def build_sqlalchemy_url() -> str
2025-08-19T08:20:33.9635662Z ```
2025-08-19T08:20:33.9635745Z 
2025-08-19T08:20:33.9635845Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:20:33.9636024Z 
2025-08-19T08:20:33.9636297Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T08:20:33.9636532Z 
2025-08-19T08:20:33.9636615Z #### build\_asyncpg\_dsn
2025-08-19T08:20:33.9636742Z 
2025-08-19T08:20:33.9636806Z ```python
2025-08-19T08:20:33.9636986Z def build_asyncpg_dsn() -> str
2025-08-19T08:20:33.9637188Z ```
2025-08-19T08:20:33.9637278Z 
2025-08-19T08:20:33.9637412Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:20:33.9637626Z 
2025-08-19T08:20:33.9637758Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T08:20:33.9637976Z 
2025-08-19T08:20:33.9638045Z #### refresh\_mvs
2025-08-19T08:20:33.9638154Z 
2025-08-19T08:20:33.9638229Z ```python
2025-08-19T08:20:33.9638429Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:20:33.9638688Z ```
2025-08-19T08:20:33.9638771Z 
2025-08-19T08:20:33.9638913Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:20:33.9639139Z 
2025-08-19T08:20:33.9639239Z <a id="price_importer.services_common"></a>
2025-08-19T08:20:33.9639528Z 
2025-08-19T08:20:33.9639623Z # price\_importer.services\_common
2025-08-19T08:20:33.9639782Z 
2025-08-19T08:20:33.9639889Z <a id="price_importer.services_common.base"></a>
2025-08-19T08:20:33.9640077Z 
2025-08-19T08:20:33.9640176Z # price\_importer.services\_common.base
2025-08-19T08:20:33.9640345Z 
2025-08-19T08:20:33.9640439Z <a id="price_importer.normaliser"></a>
2025-08-19T08:20:33.9640609Z 
2025-08-19T08:20:33.9640694Z # price\_importer.normaliser
2025-08-19T08:20:33.9640834Z 
2025-08-19T08:20:33.9640944Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T08:20:33.9641130Z 
2025-08-19T08:20:33.9641222Z # price\_importer.common.models\_vendor
2025-08-19T08:20:33.9641389Z 
2025-08-19T08:20:33.9641490Z <a id="price_importer.common.db_url"></a>
2025-08-19T08:20:33.9641661Z 
2025-08-19T08:20:33.9641751Z # price\_importer.common.db\_url
2025-08-19T08:20:33.9641905Z 
2025-08-19T08:20:33.9642014Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T08:20:33.9642211Z 
2025-08-19T08:20:33.9642281Z #### make\_dsn
2025-08-19T08:20:33.9642382Z 
2025-08-19T08:20:33.9642447Z ```python
2025-08-19T08:20:33.9642630Z def make_dsn(async_: bool = False) -> str
2025-08-19T08:20:33.9642857Z ```
2025-08-19T08:20:33.9642945Z 
2025-08-19T08:20:33.9643070Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T08:20:33.9643492Z 
2025-08-19T08:20:33.9643609Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T08:20:33.9643808Z 
2025-08-19T08:20:33.9643877Z #### build\_url
2025-08-19T08:20:33.9643981Z 
2025-08-19T08:20:33.9644052Z ```python
2025-08-19T08:20:33.9644237Z def build_url(async_: bool = False) -> str
2025-08-19T08:20:33.9644473Z ```
2025-08-19T08:20:33.9644557Z 
2025-08-19T08:20:33.9644682Z Return Postgres DSN built from environment variables.
2025-08-19T08:20:33.9644890Z 
2025-08-19T08:20:33.9644977Z <a id="price_importer.common"></a>
2025-08-19T08:20:33.9645132Z 
2025-08-19T08:20:33.9645219Z # price\_importer.common
2025-08-19T08:20:33.9645350Z 
2025-08-19T08:20:33.9645450Z <a id="price_importer.common.base"></a>
2025-08-19T08:20:33.9645620Z 
2025-08-19T08:20:33.9645712Z # price\_importer.common.base
2025-08-19T08:20:33.9645856Z 
2025-08-19T08:20:33.9645956Z <a id="price_importer.tests.conftest"></a>
2025-08-19T08:20:33.9646137Z 
2025-08-19T08:20:33.9646227Z # price\_importer.tests.conftest
2025-08-19T08:20:33.9646411Z 
2025-08-19T08:20:33.9646520Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T08:20:33.9646698Z 
2025-08-19T08:20:33.9646789Z # price\_importer.tests.test\_reader
2025-08-19T08:20:33.9646952Z 
2025-08-19T08:20:33.9647063Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T08:20:33.9647246Z 
2025-08-19T08:20:33.9647338Z # price\_importer.tests.test\_imports
2025-08-19T08:20:33.9647506Z 
2025-08-19T08:20:33.9647606Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T08:20:33.9647781Z 
2025-08-19T08:20:33.9647873Z # price\_importer.tests.test\_smoke
2025-08-19T08:20:33.9648034Z 
2025-08-19T08:20:33.9648142Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T08:20:33.9648472Z 
2025-08-19T08:20:33.9648575Z # price\_importer.tests.test\_normaliser
2025-08-19T08:20:33.9648750Z 
2025-08-19T08:20:33.9648836Z <a id="price_importer.tests"></a>
2025-08-19T08:20:33.9648997Z 
2025-08-19T08:20:33.9649076Z # price\_importer.tests
2025-08-19T08:20:33.9649202Z 
2025-08-19T08:20:33.9649295Z <a id="price_importer.reader"></a>
2025-08-19T08:20:33.9649448Z 
2025-08-19T08:20:33.9649529Z # price\_importer.reader
2025-08-19T08:20:33.9649658Z 
2025-08-19T08:20:33.9649759Z <a id="price_importer.repository"></a>
2025-08-19T08:20:33.9649925Z 
2025-08-19T08:20:33.9650009Z # price\_importer.repository
2025-08-19T08:20:33.9650162Z 
2025-08-19T08:20:33.9650248Z <a id="price_importer.import"></a>
2025-08-19T08:20:33.9650398Z 
2025-08-19T08:20:33.9650482Z # price\_importer.import
2025-08-19T08:20:33.9650610Z 
2025-08-19T08:20:33.9650682Z <a id="fees_h10"></a>
2025-08-19T08:20:33.9650799Z 
2025-08-19T08:20:33.9650872Z # fees\_h10
2025-08-19T08:20:33.9651076Z 
2025-08-19T08:20:33.9651155Z <a id="fees_h10.worker"></a>
2025-08-19T08:20:33.9651299Z 
2025-08-19T08:20:33.9651369Z # fees\_h10.worker
2025-08-19T08:20:33.9651477Z 
2025-08-19T08:20:33.9651575Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T08:20:33.9651760Z 
2025-08-19T08:20:33.9651836Z #### list\_active\_asins
2025-08-19T08:20:33.9651957Z 
2025-08-19T08:20:33.9652031Z ```python
2025-08-19T08:20:33.9652208Z def list_active_asins() -> list[str]
2025-08-19T08:20:33.9652429Z ```
2025-08-19T08:20:33.9652511Z 
2025-08-19T08:20:33.9652626Z Return known ASINs or an empty list if unavailable.
2025-08-19T08:20:33.9652828Z 
2025-08-19T08:20:33.9652915Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T08:20:33.9653075Z 
2025-08-19T08:20:33.9653368Z # fees\_h10.tests.test\_smoke
2025-08-19T08:20:33.9653518Z 
2025-08-19T08:20:33.9653598Z <a id="fees_h10.tests"></a>
2025-08-19T08:20:33.9653732Z 
2025-08-19T08:20:33.9653810Z # fees\_h10.tests
2025-08-19T08:20:33.9653919Z 
2025-08-19T08:20:33.9654001Z <a id="fees_h10.client"></a>
2025-08-19T08:20:33.9654142Z 
2025-08-19T08:20:33.9654211Z # fees\_h10.client
2025-08-19T08:20:33.9654319Z 
2025-08-19T08:20:33.9654404Z <a id="fees_h10.repository"></a>
2025-08-19T08:20:33.9654555Z 
2025-08-19T08:20:33.9654628Z # fees\_h10.repository
2025-08-19T08:20:33.9654749Z 
2025-08-19T08:20:33.9654827Z <a id="emailer"></a>
2025-08-19T08:20:33.9654942Z 
2025-08-19T08:20:33.9655005Z # emailer
2025-08-19T08:20:33.9655100Z 
2025-08-19T08:20:33.9655203Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T08:20:33.9655387Z 
2025-08-19T08:20:33.9655478Z # emailer.tests.test\_import\_emailer
2025-08-19T08:20:33.9655645Z 
2025-08-19T08:20:33.9655735Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T08:20:33.9655895Z 
2025-08-19T08:20:33.9655984Z # emailer.tests.test\_smoke
2025-08-19T08:20:33.9656122Z 
2025-08-19T08:20:33.9656202Z <a id="emailer.tests"></a>
2025-08-19T08:20:33.9656339Z 
2025-08-19T08:20:33.9656407Z # emailer.tests
2025-08-19T08:20:33.9656513Z 
2025-08-19T08:20:33.9656607Z <a id="emailer.generate_body"></a>
2025-08-19T08:20:33.9656769Z 
2025-08-19T08:20:33.9656849Z # emailer.generate\_body
2025-08-19T08:20:33.9656976Z 
2025-08-19T08:20:33.9657057Z <a id="llm_server"></a>
2025-08-19T08:20:33.9657177Z 
2025-08-19T08:20:33.9657243Z # llm\_server
2025-08-19T08:20:33.9657343Z 
2025-08-19T08:20:33.9657430Z <a id="llm_server.app"></a>
2025-08-19T08:20:33.9657564Z 
2025-08-19T08:20:33.9657635Z # llm\_server.app
2025-08-19T08:20:33.9657751Z 
