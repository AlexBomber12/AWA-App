2025-08-18T23:48:58.5009483Z ##[group]Run pydoc-markdown
2025-08-18T23:48:58.5009810Z [36;1mpydoc-markdown[0m
2025-08-18T23:48:58.5050504Z shell: /usr/bin/bash -e {0}
2025-08-18T23:48:58.5050878Z env:
2025-08-18T23:48:58.5051139Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:48:58.5051543Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T23:48:58.5051938Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:48:58.5052282Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:48:58.5052621Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T23:48:58.5052959Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T23:48:58.5053229Z ##[endgroup]
2025-08-18T23:48:58.8349086Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T23:48:58.8349607Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T23:48:58.8349934Z In "pydoc-markdown.yml"
2025-08-18T23:48:58.8350233Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T23:48:58.8350716Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T23:48:58.8351450Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T23:48:58.8351798Z 
2025-08-18T23:48:59.1514035Z <a id="__init__"></a>
2025-08-18T23:48:59.1514629Z 
2025-08-18T23:48:59.1514765Z # \_\_init\_\_
2025-08-18T23:48:59.1514968Z 
2025-08-18T23:48:59.1515094Z <a id="api"></a>
2025-08-18T23:48:59.1515294Z 
2025-08-18T23:48:59.1515403Z # api
2025-08-18T23:48:59.1515576Z 
2025-08-18T23:48:59.1515714Z <a id="api.errors"></a>
2025-08-18T23:48:59.1515948Z 
2025-08-18T23:48:59.1516079Z # api.errors
2025-08-18T23:48:59.1516269Z 
2025-08-18T23:48:59.1516421Z <a id="api.sentry_config"></a>
2025-08-18T23:48:59.1516697Z 
2025-08-18T23:48:59.1516830Z # api.sentry\_config
2025-08-18T23:48:59.1517050Z 
2025-08-18T23:48:59.1517223Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T23:48:59.1517559Z 
2025-08-18T23:48:59.1517708Z # api.tests.test\_sentry\_scrub
2025-08-18T23:48:59.1518018Z 
2025-08-18T23:48:59.1518190Z <a id="api.tests.test_errors_json"></a>
2025-08-18T23:48:59.1518500Z 
2025-08-18T23:48:59.1518646Z # api.tests.test\_errors\_json
2025-08-18T23:48:59.1518917Z 
2025-08-18T23:48:59.1519065Z <a id="api.tests.test_llm"></a>
2025-08-18T23:48:59.1519327Z 
2025-08-18T23:48:59.1519458Z # api.tests.test\_llm
2025-08-18T23:48:59.1519687Z 
2025-08-18T23:48:59.1519854Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T23:48:59.1520172Z 
2025-08-18T23:48:59.1520329Z # api.tests.test\_sentry\_event
2025-08-18T23:48:59.1520595Z 
2025-08-18T23:48:59.1521027Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T23:48:59.1521438Z 
2025-08-18T23:48:59.1521588Z ## DummyTransport Objects
2025-08-18T23:48:59.1521834Z 
2025-08-18T23:48:59.1521953Z ```python
2025-08-18T23:48:59.1522265Z class DummyTransport()
2025-08-18T23:48:59.1522600Z ```
2025-08-18T23:48:59.1522773Z 
2025-08-18T23:48:59.1523106Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T23:48:59.1523966Z 
2025-08-18T23:48:59.1524117Z #### capture\_envelope
2025-08-18T23:48:59.1524345Z 
2025-08-18T23:48:59.1524464Z ```python
2025-08-18T23:48:59.1524796Z def capture_envelope(envelope)
2025-08-18T23:48:59.1525170Z ```
2025-08-18T23:48:59.1525333Z 
2025-08-18T23:48:59.1525569Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T23:48:59.1525959Z 
2025-08-18T23:48:59.1526126Z <a id="api.tests.test_cors"></a>
2025-08-18T23:48:59.1526406Z 
2025-08-18T23:48:59.1526548Z # api.tests.test\_cors
2025-08-18T23:48:59.1526770Z 
2025-08-18T23:48:59.1526936Z <a id="api.tests.test_imports"></a>
2025-08-18T23:48:59.1527233Z 
2025-08-18T23:48:59.1527377Z # api.tests.test\_imports
2025-08-18T23:48:59.1527636Z 
2025-08-18T23:48:59.1527791Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T23:48:59.1528100Z 
2025-08-18T23:48:59.1528254Z # api.tests.test\_rate\_limit
2025-08-18T23:48:59.1528541Z 
2025-08-18T23:48:59.1528724Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T23:48:59.1529418Z 
2025-08-18T23:48:59.1529549Z #### app
2025-08-18T23:48:59.1529723Z 
2025-08-18T23:48:59.1529842Z noqa: E402
2025-08-18T23:48:59.1530018Z 
2025-08-18T23:48:59.1530185Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T23:48:59.1530493Z 
2025-08-18T23:48:59.1530642Z # api.tests.test\_entrypoint
2025-08-18T23:48:59.1531099Z 
2025-08-18T23:48:59.1531259Z <a id="api.tests.test_health"></a>
2025-08-18T23:48:59.1531544Z 
2025-08-18T23:48:59.1531694Z # api.tests.test\_health
2025-08-18T23:48:59.1531926Z 
2025-08-18T23:48:59.1532075Z <a id="api.logging_config"></a>
2025-08-18T23:48:59.1532348Z 
2025-08-18T23:48:59.1532477Z # api.logging\_config
2025-08-18T23:48:59.1532696Z 
2025-08-18T23:48:59.1532845Z <a id="api.migrations.env"></a>
2025-08-18T23:48:59.1533120Z 
2025-08-18T23:48:59.1533261Z # api.migrations.env
2025-08-18T23:48:59.1533483Z 
2025-08-18T23:48:59.1533716Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T23:48:59.1534100Z 
2025-08-18T23:48:59.1534303Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T23:48:59.1534678Z 
2025-08-18T23:48:59.1534883Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T23:48:59.1535242Z 
2025-08-18T23:48:59.1535417Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T23:48:59.1535749Z 
2025-08-18T23:48:59.1536039Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T23:48:59.1536481Z 
2025-08-18T23:48:59.1536751Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T23:48:59.1537161Z 
2025-08-18T23:48:59.1537391Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T23:48:59.1537774Z 
2025-08-18T23:48:59.1537969Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T23:48:59.1538313Z 
2025-08-18T23:48:59.1538538Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T23:48:59.1538913Z 
2025-08-18T23:48:59.1539107Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T23:48:59.1539452Z 
2025-08-18T23:48:59.1539694Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T23:48:59.1540093Z 
2025-08-18T23:48:59.1540297Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T23:48:59.1540664Z 
2025-08-18T23:48:59.1541052Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T23:48:59.1541434Z 
2025-08-18T23:48:59.1541643Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T23:48:59.1541998Z 
2025-08-18T23:48:59.1542229Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T23:48:59.1542618Z 
2025-08-18T23:48:59.1542828Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T23:48:59.1543184Z 
2025-08-18T23:48:59.1543445Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T23:48:59.1543879Z 
2025-08-18T23:48:59.1544109Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T23:48:59.1544488Z 
2025-08-18T23:48:59.1544733Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T23:48:59.1545114Z 
2025-08-18T23:48:59.1545318Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T23:48:59.1545918Z 
2025-08-18T23:48:59.1546177Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T23:48:59.1546604Z 
2025-08-18T23:48:59.1546834Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T23:48:59.1547273Z 
2025-08-18T23:48:59.1547541Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T23:48:59.1547917Z 
2025-08-18T23:48:59.1548092Z # api.migrations.versions.0001\_baseline
2025-08-18T23:48:59.1548412Z 
2025-08-18T23:48:59.1548585Z <a id="api.migrations.versions"></a>
2025-08-18T23:48:59.1548894Z 
2025-08-18T23:48:59.1549046Z # api.migrations.versions
2025-08-18T23:48:59.1549305Z 
2025-08-18T23:48:59.1549460Z <a id="api.migrations"></a>
2025-08-18T23:48:59.1549719Z 
2025-08-18T23:48:59.1549845Z # api.migrations
2025-08-18T23:48:59.1550053Z 
2025-08-18T23:48:59.1550177Z <a id="api.db"></a>
2025-08-18T23:48:59.1550375Z 
2025-08-18T23:48:59.1550488Z # api.db
2025-08-18T23:48:59.1550659Z 
2025-08-18T23:48:59.1550992Z <a id="api.routes.stats"></a>
2025-08-18T23:48:59.1551535Z 
2025-08-18T23:48:59.1551678Z # api.routes.stats
2025-08-18T23:48:59.1551889Z 
2025-08-18T23:48:59.1552051Z <a id="api.routes.stats.kpi"></a>
2025-08-18T23:48:59.1552351Z 
2025-08-18T23:48:59.1552468Z #### kpi
2025-08-18T23:48:59.1552633Z 
2025-08-18T23:48:59.1552746Z ```python
2025-08-18T23:48:59.1553058Z @router.get("/stats/kpi")
2025-08-18T23:48:59.1553494Z def kpi() -> List[Dict[str, int]]
2025-08-18T23:48:59.1553887Z ```
2025-08-18T23:48:59.1554040Z 
2025-08-18T23:48:59.1554190Z Return KPI metrics (mock).
2025-08-18T23:48:59.1554440Z 
2025-08-18T23:48:59.1554623Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T23:48:59.1554973Z 
2025-08-18T23:48:59.1555107Z #### roi\_by\_vendor
2025-08-18T23:48:59.1555323Z 
2025-08-18T23:48:59.1555443Z ```python
2025-08-18T23:48:59.1555775Z @router.get("/stats/roi_by_vendor")
2025-08-18T23:48:59.1556231Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T23:48:59.1556659Z ```
2025-08-18T23:48:59.1556809Z 
2025-08-18T23:48:59.1556985Z Return ROI percent by vendor.
2025-08-18T23:48:59.1557251Z 
2025-08-18T23:48:59.1557421Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T23:48:59.1557743Z 
2025-08-18T23:48:59.1557861Z #### roi\_trend
2025-08-18T23:48:59.1558047Z 
2025-08-18T23:48:59.1558159Z ```python
2025-08-18T23:48:59.1558468Z @router.get("/stats/roi_trend")
2025-08-18T23:48:59.1558897Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T23:48:59.1559325Z ```
2025-08-18T23:48:59.1559474Z 
2025-08-18T23:48:59.1559617Z Return 30-day ROI trend.
2025-08-18T23:48:59.1559850Z 
2025-08-18T23:48:59.1559994Z <a id="api.routes.roi"></a>
2025-08-18T23:48:59.1560254Z 
2025-08-18T23:48:59.1560375Z # api.routes.roi
2025-08-18T23:48:59.1560571Z 
2025-08-18T23:48:59.1560717Z <a id="api.routes.health"></a>
2025-08-18T23:48:59.1561235Z 
2025-08-18T23:48:59.1561372Z # api.routes.health
2025-08-18T23:48:59.1561577Z 
2025-08-18T23:48:59.1561750Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T23:48:59.1562063Z 
2025-08-18T23:48:59.1562200Z #### MAX\_SKEW
2025-08-18T23:48:59.1562418Z 
2025-08-18T23:48:59.1562536Z seconds
2025-08-18T23:48:59.1562694Z 
2025-08-18T23:48:59.1562862Z <a id="api.routes.health.health"></a>
2025-08-18T23:48:59.1563180Z 
2025-08-18T23:48:59.1563291Z #### health
2025-08-18T23:48:59.1563456Z 
2025-08-18T23:48:59.1563577Z ```python
2025-08-18T23:48:59.1563944Z @router.get("/health", include_in_schema=False)
2025-08-18T23:48:59.1564685Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T23:48:59.1565319Z ```
2025-08-18T23:48:59.1565472Z 
2025-08-18T23:48:59.1565700Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T23:48:59.1566065Z 
2025-08-18T23:48:59.1566224Z <a id="api.routes.repository"></a>
2025-08-18T23:48:59.1566530Z 
2025-08-18T23:48:59.1566681Z # api.routes.repository
2025-08-18T23:48:59.1566912Z 
2025-08-18T23:48:59.1567054Z <a id="api.routes"></a>
2025-08-18T23:48:59.1567277Z 
2025-08-18T23:48:59.1567395Z # api.routes
2025-08-18T23:48:59.1567576Z 
2025-08-18T23:48:59.1567957Z <a id="api.models.fee"></a>
2025-08-18T23:48:59.1568211Z 
2025-08-18T23:48:59.1568333Z # api.models.fee
2025-08-18T23:48:59.1568518Z 
2025-08-18T23:48:59.1568643Z <a id="api.models"></a>
2025-08-18T23:48:59.1568848Z 
2025-08-18T23:48:59.1568957Z # api.models
2025-08-18T23:48:59.1569132Z 
2025-08-18T23:48:59.1569265Z <a id="api.roi_repository"></a>
2025-08-18T23:48:59.1569527Z 
2025-08-18T23:48:59.1569666Z # api.roi\_repository
2025-08-18T23:48:59.1569881Z 
2025-08-18T23:48:59.1570009Z <a id="api.main"></a>
2025-08-18T23:48:59.1570233Z 
2025-08-18T23:48:59.1570347Z # api.main
2025-08-18T23:48:59.1570518Z 
2025-08-18T23:48:59.1570662Z <a id="api.main.ready"></a>
2025-08-18T23:48:59.1571101Z 
2025-08-18T23:48:59.1571225Z #### ready
2025-08-18T23:48:59.1571397Z 
2025-08-18T23:48:59.1571523Z ```python
2025-08-18T23:48:59.1572004Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T23:48:59.1572820Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T23:48:59.1573708Z                                                                       str]
2025-08-18T23:48:59.1574143Z ```
2025-08-18T23:48:59.1574303Z 
2025-08-18T23:48:59.1574484Z Return 200 only when migrations are at head.
2025-08-18T23:48:59.1574811Z 
2025-08-18T23:48:59.1574960Z <a id="api.config"></a>
2025-08-18T23:48:59.1575183Z 
2025-08-18T23:48:59.1575300Z # api.config
2025-08-18T23:48:59.1575483Z 
2025-08-18T23:48:59.1575599Z <a id="etl"></a>
2025-08-18T23:48:59.1575792Z 
2025-08-18T23:48:59.1575904Z # etl
2025-08-18T23:48:59.1576071Z 
2025-08-18T23:48:59.1576217Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T23:48:59.1576493Z 
2025-08-18T23:48:59.1576634Z # etl.fba\_fee\_ingestor
2025-08-18T23:48:59.1576863Z 
2025-08-18T23:48:59.1577008Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T23:48:59.1577276Z 
2025-08-18T23:48:59.1577418Z # etl.sp\_fees\_ingestor
2025-08-18T23:48:59.1577643Z 
2025-08-18T23:48:59.1577789Z <a id="etl.keepa_ingestor"></a>
2025-08-18T23:48:59.1578066Z 
2025-08-18T23:48:59.1578201Z # etl.keepa\_ingestor
2025-08-18T23:48:59.1578415Z 
2025-08-18T23:48:59.1578537Z <a id="etl.db"></a>
2025-08-18T23:48:59.1578746Z 
2025-08-18T23:48:59.1578856Z # etl.db
2025-08-18T23:48:59.1579018Z 
2025-08-18T23:48:59.1579177Z <a id="etl.dialects.schemas"></a>
2025-08-18T23:48:59.1579455Z 
2025-08-18T23:48:59.1579591Z # etl.dialects.schemas
2025-08-18T23:48:59.1579966Z 
2025-08-18T23:48:59.1580173Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T23:48:59.1580523Z 
2025-08-18T23:48:59.1580685Z # etl.dialects.amazon\_reimbursements
2025-08-18T23:48:59.1581167Z 
2025-08-18T23:48:59.1581358Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T23:48:59.1581694Z 
2025-08-18T23:48:59.1581863Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T23:48:59.1582163Z 
2025-08-18T23:48:59.1582326Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T23:48:59.1582640Z 
2025-08-18T23:48:59.1582791Z # etl.dialects.amazon\_returns
2025-08-18T23:48:59.1583059Z 
2025-08-18T23:48:59.1583256Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T23:48:59.1583592Z 
2025-08-18T23:48:59.1583754Z # etl.dialects.amazon\_fee\_preview
2025-08-18T23:48:59.1584058Z 
2025-08-18T23:48:59.1584278Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T23:48:59.1584640Z 
2025-08-18T23:48:59.1584811Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T23:48:59.1585136Z 
2025-08-18T23:48:59.1585315Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T23:48:59.1585646Z 
2025-08-18T23:48:59.1585802Z # etl.dialects.amazon\_settlements
2025-08-18T23:48:59.1586098Z 
2025-08-18T23:48:59.1586240Z <a id="etl.dialects"></a>
2025-08-18T23:48:59.1586474Z 
2025-08-18T23:48:59.1586599Z # etl.dialects
2025-08-18T23:48:59.1586785Z 
2025-08-18T23:48:59.1586907Z <a id="ingest"></a>
2025-08-18T23:48:59.1587111Z 
2025-08-18T23:48:59.1587222Z # ingest
2025-08-18T23:48:59.1587383Z 
2025-08-18T23:48:59.1587532Z <a id="ingest.maintenance"></a>
2025-08-18T23:48:59.1587812Z 
2025-08-18T23:48:59.1587946Z # ingest.maintenance
2025-08-18T23:48:59.1588398Z 
2025-08-18T23:48:59.1588556Z <a id="ingest.copy_loader"></a>
2025-08-18T23:48:59.1588860Z 
2025-08-18T23:48:59.1588989Z # ingest.copy\_loader
2025-08-18T23:48:59.1589206Z 
2025-08-18T23:48:59.1589405Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T23:48:59.1589747Z 
2025-08-18T23:48:59.1589883Z #### copy\_df\_via\_temp
2025-08-18T23:48:59.1590122Z 
2025-08-18T23:48:59.1590238Z ```python
2025-08-18T23:48:59.1590554Z def copy_df_via_temp(engine: Engine,
2025-08-18T23:48:59.1591175Z                      df: pd.DataFrame,
2025-08-18T23:48:59.1591612Z                      target_table: str,
2025-08-18T23:48:59.1592009Z                      *,
2025-08-18T23:48:59.1592391Z                      target_schema: Optional[str] = None,
2025-08-18T23:48:59.1592878Z                      columns: Sequence[str],
2025-08-18T23:48:59.1593387Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T23:48:59.1593912Z                      analyze_after: bool = False,
2025-08-18T23:48:59.1594655Z                      connection: Any | None = None) -> int
2025-08-18T23:48:59.1595117Z ```
2025-08-18T23:48:59.1595271Z 
2025-08-18T23:48:59.1595562Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T23:48:59.1595990Z 
2025-08-18T23:48:59.1596158Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T23:48:59.1596461Z 
2025-08-18T23:48:59.1596607Z # ingest.tests.test\_smoke
2025-08-18T23:48:59.1596864Z 
2025-08-18T23:48:59.1597004Z <a id="ingest.tests"></a>
2025-08-18T23:48:59.1597241Z 
2025-08-18T23:48:59.1597372Z # ingest.tests
2025-08-18T23:48:59.1597561Z 
2025-08-18T23:48:59.1597711Z <a id="ingest.upload_router"></a>
2025-08-18T23:48:59.1598001Z 
2025-08-18T23:48:59.1598145Z # ingest.upload\_router
2025-08-18T23:48:59.1598372Z 
2025-08-18T23:48:59.1598522Z <a id="ingest.email_watcher"></a>
2025-08-18T23:48:59.1598808Z 
2025-08-18T23:48:59.1598941Z # ingest.email\_watcher
2025-08-18T23:48:59.1599161Z 
2025-08-18T23:48:59.1599320Z <a id="ingest.email_watcher.main"></a>
2025-08-18T23:48:59.1599652Z 
2025-08-18T23:48:59.1599766Z #### main
2025-08-18T23:48:59.1599929Z 
2025-08-18T23:48:59.1600051Z ```python
2025-08-18T23:48:59.1600349Z def main() -> dict[str, str]
2025-08-18T23:48:59.1600709Z ```
2025-08-18T23:48:59.1601036Z 
2025-08-18T23:48:59.1601310Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T23:48:59.1601757Z 
2025-08-18T23:48:59.1602039Z Returns {"status": "success"} when processing completes.
2025-08-18T23:48:59.1602446Z 
2025-08-18T23:48:59.1602586Z <a id="ingest.tasks"></a>
2025-08-18T23:48:59.1602822Z 
2025-08-18T23:48:59.1602949Z # ingest.tasks
2025-08-18T23:48:59.1603137Z 
2025-08-18T23:48:59.1603321Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T23:48:59.1603663Z 
2025-08-18T23:48:59.1603805Z #### task\_import\_file
2025-08-18T23:48:59.1604033Z 
2025-08-18T23:48:59.1604153Z ```python
2025-08-18T23:48:59.1604558Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T23:48:59.1605087Z def task_import_file(self: Any,
2025-08-18T23:48:59.1605493Z                      uri: str,
2025-08-18T23:48:59.1605908Z                      report_type: Optional[str] = None,
2025-08-18T23:48:59.1606400Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T23:48:59.1606841Z ```
2025-08-18T23:48:59.1606993Z 
2025-08-18T23:48:59.1607237Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T23:48:59.1607639Z 
2025-08-18T23:48:59.1607786Z <a id="ingest.celery_app"></a>
2025-08-18T23:48:59.1608046Z 
2025-08-18T23:48:59.1608181Z # ingest.celery\_app
2025-08-18T23:48:59.1608393Z 
2025-08-18T23:48:59.1608542Z <a id="ingest.ingest_router"></a>
2025-08-18T23:48:59.1608823Z 
2025-08-18T23:48:59.1608974Z # ingest.ingest\_router
2025-08-18T23:48:59.1609199Z 
2025-08-18T23:48:59.1609340Z <a id="logistics_etl"></a>
2025-08-18T23:48:59.1609589Z 
2025-08-18T23:48:59.1609711Z # logistics\_etl
2025-08-18T23:48:59.1609907Z 
2025-08-18T23:48:59.1610047Z Daily logistics ETL job.
2025-08-18T23:48:59.1610300Z 
2025-08-18T23:48:59.1610692Z <a id="logistics_etl.__main__"></a>
2025-08-18T23:48:59.1611194Z 
2025-08-18T23:48:59.1611349Z # logistics\_etl.\_\_main\_\_
2025-08-18T23:48:59.1611612Z 
2025-08-18T23:48:59.1611758Z <a id="logistics_etl.dsn"></a>
2025-08-18T23:48:59.1612030Z 
2025-08-18T23:48:59.1612158Z # logistics\_etl.dsn
2025-08-18T23:48:59.1612369Z 
2025-08-18T23:48:59.1612592Z Local DSN builder to avoid cross-service dependency.
2025-08-18T23:48:59.1612986Z 
2025-08-18T23:48:59.1613160Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T23:48:59.1613479Z 
2025-08-18T23:48:59.1613612Z #### build\_dsn
2025-08-18T23:48:59.1613809Z 
2025-08-18T23:48:59.1613926Z ```python
2025-08-18T23:48:59.1614256Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:48:59.1614662Z ```
2025-08-18T23:48:59.1614819Z 
2025-08-18T23:48:59.1615082Z Return a Postgres DSN assembled from environment variables.
2025-08-18T23:48:59.1615502Z 
2025-08-18T23:48:59.1615790Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T23:48:59.1616766Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T23:48:59.1617427Z error when any required variable is missing.
2025-08-18T23:48:59.1617760Z 
2025-08-18T23:48:59.1617937Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T23:48:59.1618271Z 
2025-08-18T23:48:59.1618422Z # logistics\_etl.tests.conftest
2025-08-18T23:48:59.1618696Z 
2025-08-18T23:48:59.1618893Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T23:48:59.1619273Z 
2025-08-18T23:48:59.1619445Z # logistics\_etl.tests.test\_repository
2025-08-18T23:48:59.1619764Z 
2025-08-18T23:48:59.1619952Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T23:48:59.1620280Z 
2025-08-18T23:48:59.1620434Z # logistics\_etl.tests.test\_cron
2025-08-18T23:48:59.1620894Z 
2025-08-18T23:48:59.1621087Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T23:48:59.1621427Z 
2025-08-18T23:48:59.1621590Z # logistics\_etl.tests.test\_imports
2025-08-18T23:48:59.1621884Z 
2025-08-18T23:48:59.1622071Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T23:48:59.1622407Z 
2025-08-18T23:48:59.1622570Z # logistics\_etl.tests.test\_smoke
2025-08-18T23:48:59.1622857Z 
2025-08-18T23:48:59.1623032Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T23:48:59.1623369Z 
2025-08-18T23:48:59.1623522Z # logistics\_etl.tests.test\_client
2025-08-18T23:48:59.1623817Z 
2025-08-18T23:48:59.1623973Z <a id="logistics_etl.tests"></a>
2025-08-18T23:48:59.1624253Z 
2025-08-18T23:48:59.1624386Z # logistics\_etl.tests
2025-08-18T23:48:59.1624609Z 
2025-08-18T23:48:59.1624764Z <a id="logistics_etl.flow"></a>
2025-08-18T23:48:59.1625032Z 
2025-08-18T23:48:59.1625167Z # logistics\_etl.flow
2025-08-18T23:48:59.1625399Z 
2025-08-18T23:48:59.1625551Z <a id="logistics_etl.client"></a>
2025-08-18T23:48:59.1625832Z 
2025-08-18T23:48:59.1625966Z # logistics\_etl.client
2025-08-18T23:48:59.1626202Z 
2025-08-18T23:48:59.1626348Z <a id="logistics_etl.cron"></a>
2025-08-18T23:48:59.1626611Z 
2025-08-18T23:48:59.1626750Z # logistics\_etl.cron
2025-08-18T23:48:59.1626985Z 
2025-08-18T23:48:59.1627129Z <a id="logistics_etl.db"></a>
2025-08-18T23:48:59.1627399Z 
2025-08-18T23:48:59.1654449Z # logistics\_etl.db
2025-08-18T23:48:59.1654728Z 
2025-08-18T23:48:59.1654902Z <a id="logistics_etl.repository"></a>
2025-08-18T23:48:59.1655175Z 
2025-08-18T23:48:59.1655308Z # logistics\_etl.repository
2025-08-18T23:48:59.1655529Z 
2025-08-18T23:48:59.1655640Z <a id="alert_bot"></a>
2025-08-18T23:48:59.1655835Z 
2025-08-18T23:48:59.1655939Z # alert\_bot
2025-08-18T23:48:59.1656093Z 
2025-08-18T23:48:59.1656229Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T23:48:59.1656496Z 
2025-08-18T23:48:59.1656621Z # alert\_bot.tests.test\_smoke
2025-08-18T23:48:59.1656844Z 
2025-08-18T23:48:59.1656972Z <a id="alert_bot.tests"></a>
2025-08-18T23:48:59.1657187Z 
2025-08-18T23:48:59.1657286Z # alert\_bot.tests
2025-08-18T23:48:59.1657449Z 
2025-08-18T23:48:59.1657583Z <a id="alert_bot.alert_bot"></a>
2025-08-18T23:48:59.1657804Z 
2025-08-18T23:48:59.1657924Z # alert\_bot.alert\_bot
2025-08-18T23:48:59.1658333Z 
2025-08-18T23:48:59.1658456Z <a id="alert_bot.rules"></a>
2025-08-18T23:48:59.1658663Z 
2025-08-18T23:48:59.1658770Z # alert\_bot.rules
2025-08-18T23:48:59.1658928Z 
2025-08-18T23:48:59.1659036Z <a id="common"></a>
2025-08-18T23:48:59.1659197Z 
2025-08-18T23:48:59.1659293Z # common
2025-08-18T23:48:59.1659428Z 
2025-08-18T23:48:59.1659548Z <a id="common.dsn"></a>
2025-08-18T23:48:59.1659745Z 
2025-08-18T23:48:59.1659842Z # common.dsn
2025-08-18T23:48:59.1659993Z 
2025-08-18T23:48:59.1660121Z <a id="common.dsn.build_dsn"></a>
2025-08-18T23:48:59.1660369Z 
2025-08-18T23:48:59.1660467Z #### build\_dsn
2025-08-18T23:48:59.1660624Z 
2025-08-18T23:48:59.1660951Z ```python
2025-08-18T23:48:59.1661236Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:48:59.1661599Z ```
2025-08-18T23:48:59.1661727Z 
2025-08-18T23:48:59.1661931Z Return a Postgres DSN, validating required variables.
2025-08-18T23:48:59.1662264Z 
2025-08-18T23:48:59.1662584Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T23:48:59.1663506Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T23:48:59.1664148Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T23:48:59.1664661Z missing.
2025-08-18T23:48:59.1664798Z 
2025-08-18T23:48:59.1664924Z <a id="common.models_vendor"></a>
2025-08-18T23:48:59.1665158Z 
2025-08-18T23:48:59.1665272Z # common.models\_vendor
2025-08-18T23:48:59.1665451Z 
2025-08-18T23:48:59.1665588Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T23:48:59.1665863Z 
2025-08-18T23:48:59.1665960Z ## Vendor Objects
2025-08-18T23:48:59.1666122Z 
2025-08-18T23:48:59.1666223Z ```python
2025-08-18T23:48:59.1666463Z class Vendor(Base)
2025-08-18T23:48:59.1666719Z ```
2025-08-18T23:48:59.1666847Z 
2025-08-18T23:48:59.1666966Z Vendor of inventory items.
2025-08-18T23:48:59.1667180Z 
2025-08-18T23:48:59.1667339Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T23:48:59.1667630Z 
2025-08-18T23:48:59.1667745Z ## VendorPrice Objects
2025-08-18T23:48:59.1667934Z 
2025-08-18T23:48:59.1668026Z ```python
2025-08-18T23:48:59.1668287Z class VendorPrice(Base)
2025-08-18T23:48:59.1668555Z ```
2025-08-18T23:48:59.1668679Z 
2025-08-18T23:48:59.1668844Z Association table linking vendors to pricing.
2025-08-18T23:48:59.1669126Z 
2025-08-18T23:48:59.1669236Z <a id="common.db_url"></a>
2025-08-18T23:48:59.1669435Z 
2025-08-18T23:48:59.1669534Z # common.db\_url
2025-08-18T23:48:59.1669695Z 
2025-08-18T23:48:59.1669821Z <a id="common.db_url.build_url"></a>
2025-08-18T23:48:59.1670088Z 
2025-08-18T23:48:59.1670186Z #### build\_url
2025-08-18T23:48:59.1670345Z 
2025-08-18T23:48:59.1670453Z ```python
2025-08-18T23:48:59.1670867Z def build_url(async_: bool = True) -> str
2025-08-18T23:48:59.1671237Z ```
2025-08-18T23:48:59.1671357Z 
2025-08-18T23:48:59.1671511Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:48:59.1671794Z 
2025-08-18T23:48:59.1671909Z <a id="common.keepa"></a>
2025-08-18T23:48:59.1672123Z 
2025-08-18T23:48:59.1672224Z # common.keepa
2025-08-18T23:48:59.1672389Z 
2025-08-18T23:48:59.1672499Z <a id="common.llm"></a>
2025-08-18T23:48:59.1672687Z 
2025-08-18T23:48:59.1672791Z # common.llm
2025-08-18T23:48:59.1672945Z 
2025-08-18T23:48:59.1673064Z <a id="common.settings"></a>
2025-08-18T23:48:59.1673288Z 
2025-08-18T23:48:59.1673397Z # common.settings
2025-08-18T23:48:59.1673552Z 
2025-08-18T23:48:59.1673658Z <a id="common.db"></a>
2025-08-18T23:48:59.1673850Z 
2025-08-18T23:48:59.1673950Z # common.db
2025-08-18T23:48:59.1674092Z 
2025-08-18T23:48:59.1674241Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T23:48:59.1674514Z 
2025-08-18T23:48:59.1674633Z #### build\_sqlalchemy\_url
2025-08-18T23:48:59.1674841Z 
2025-08-18T23:48:59.1674935Z ```python
2025-08-18T23:48:59.1675190Z def build_sqlalchemy_url() -> str
2025-08-18T23:48:59.1675515Z ```
2025-08-18T23:48:59.1675635Z 
2025-08-18T23:48:59.1675781Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:48:59.1676056Z 
2025-08-18T23:48:59.1676372Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T23:48:59.1676639Z 
2025-08-18T23:48:59.1676758Z #### build\_asyncpg\_dsn
2025-08-18T23:48:59.1676952Z 
2025-08-18T23:48:59.1677053Z ```python
2025-08-18T23:48:59.1677321Z def build_asyncpg_dsn() -> str
2025-08-18T23:48:59.1677628Z ```
2025-08-18T23:48:59.1677761Z 
2025-08-18T23:48:59.1677966Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:48:59.1678300Z 
2025-08-18T23:48:59.1678435Z <a id="common.db.refresh_mvs"></a>
2025-08-18T23:48:59.1678669Z 
2025-08-18T23:48:59.1678776Z #### refresh\_mvs
2025-08-18T23:48:59.1679012Z 
2025-08-18T23:48:59.1679119Z ```python
2025-08-18T23:48:59.1679422Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:48:59.1679828Z ```
2025-08-18T23:48:59.1679956Z 
2025-08-18T23:48:59.1680183Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:48:59.1680538Z 
2025-08-18T23:48:59.1680662Z <a id="common.config"></a>
2025-08-18T23:48:59.1681020Z 
2025-08-18T23:48:59.1681310Z # common.config
2025-08-18T23:48:59.1681476Z 
2025-08-18T23:48:59.1681595Z <a id="common.base"></a>
2025-08-18T23:48:59.1681795Z 
2025-08-18T23:48:59.1681898Z # common.base
2025-08-18T23:48:59.1682051Z 
2025-08-18T23:48:59.1682178Z <a id="common.base.Base"></a>
2025-08-18T23:48:59.1682403Z 
2025-08-18T23:48:59.1682508Z ## Base Objects
2025-08-18T23:48:59.1682658Z 
2025-08-18T23:48:59.1682759Z ```python
2025-08-18T23:48:59.1683007Z class Base(DeclarativeBase)
2025-08-18T23:48:59.1683304Z ```
2025-08-18T23:48:59.1683428Z 
2025-08-18T23:48:59.1683555Z Base class for SQLAlchemy models.
2025-08-18T23:48:59.1683796Z 
2025-08-18T23:48:59.1683908Z <a id="repricer"></a>
2025-08-18T23:48:59.1684082Z 
2025-08-18T23:48:59.1684173Z # repricer
2025-08-18T23:48:59.1684316Z 
2025-08-18T23:48:59.1684444Z <a id="repricer.app.schemas"></a>
2025-08-18T23:48:59.1684674Z 
2025-08-18T23:48:59.1684798Z # repricer.app.schemas
2025-08-18T23:48:59.1684983Z 
2025-08-18T23:48:59.1685111Z <a id="repricer.app.deps"></a>
2025-08-18T23:48:59.1685345Z 
2025-08-18T23:48:59.1685468Z # repricer.app.deps
2025-08-18T23:48:59.1685645Z 
2025-08-18T23:48:59.1685817Z Placeholder module for Keepa / SP-API clients.
2025-08-18T23:48:59.1686127Z 
2025-08-18T23:48:59.1686257Z <a id="repricer.app.logic"></a>
2025-08-18T23:48:59.1686475Z 
2025-08-18T23:48:59.1686595Z # repricer.app.logic
2025-08-18T23:48:59.1686777Z 
2025-08-18T23:48:59.1686932Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T23:48:59.1687199Z 
2025-08-18T23:48:59.1687308Z #### MIN\_MARGIN
2025-08-18T23:48:59.1687464Z 
2025-08-18T23:48:59.1687560Z 15 % ROI
2025-08-18T23:48:59.1687700Z 
2025-08-18T23:48:59.1687859Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T23:48:59.1688152Z 
2025-08-18T23:48:59.1688263Z #### compute\_price
2025-08-18T23:48:59.1688435Z 
2025-08-18T23:48:59.1688531Z ```python
2025-08-18T23:48:59.1688909Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T23:48:59.1689364Z ```
2025-08-18T23:48:59.1689488Z 
2025-08-18T23:48:59.1689681Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T23:48:59.1690117Z Replace with real competitive logic later.
2025-08-18T23:48:59.1690385Z 
2025-08-18T23:48:59.1690507Z <a id="repricer.app.main"></a>
2025-08-18T23:48:59.1690865Z 
2025-08-18T23:48:59.1690987Z # repricer.app.main
2025-08-18T23:48:59.1691164Z 
2025-08-18T23:48:59.1691290Z <a id="repricer.app"></a>
2025-08-18T23:48:59.1691495Z 
2025-08-18T23:48:59.1691612Z # repricer.app
2025-08-18T23:48:59.1691779Z 
2025-08-18T23:48:59.1691928Z <a id="repricer.tests.test_imports"></a>
2025-08-18T23:48:59.1692194Z 
2025-08-18T23:48:59.1692324Z # repricer.tests.test\_imports
2025-08-18T23:48:59.1692537Z 
2025-08-18T23:48:59.1692677Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T23:48:59.1692938Z 
2025-08-18T23:48:59.1693066Z # repricer.tests.test\_smoke
2025-08-18T23:48:59.1693287Z 
2025-08-18T23:48:59.1693415Z <a id="repricer.tests"></a>
2025-08-18T23:48:59.1693622Z 
2025-08-18T23:48:59.1693730Z # repricer.tests
2025-08-18T23:48:59.1694082Z 
2025-08-18T23:48:59.1694185Z <a id="db"></a>
2025-08-18T23:48:59.1694346Z 
2025-08-18T23:48:59.1694441Z # db
2025-08-18T23:48:59.1694580Z 
2025-08-18T23:48:59.1694694Z <a id="db.utils.views"></a>
2025-08-18T23:48:59.1694899Z 
2025-08-18T23:48:59.1695012Z # db.utils.views
2025-08-18T23:48:59.1695170Z 
2025-08-18T23:48:59.1695315Z <a id="db.utils.views.replace_view"></a>
2025-08-18T23:48:59.1695591Z 
2025-08-18T23:48:59.1695696Z #### replace\_view
2025-08-18T23:48:59.1695856Z 
2025-08-18T23:48:59.1695949Z ```python
2025-08-18T23:48:59.1696255Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T23:48:59.1696627Z ```
2025-08-18T23:48:59.1696762Z 
2025-08-18T23:48:59.1696905Z Drop and recreate a SQL view atomically.
2025-08-18T23:48:59.1697169Z 
2025-08-18T23:48:59.1697290Z <a id="db.utils"></a>
2025-08-18T23:48:59.1697472Z 
2025-08-18T23:48:59.1697569Z # db.utils
2025-08-18T23:48:59.1697717Z 
2025-08-18T23:48:59.1697838Z <a id="price_importer"></a>
2025-08-18T23:48:59.1698043Z 
2025-08-18T23:48:59.1698377Z # price\_importer
2025-08-18T23:48:59.1698546Z 
2025-08-18T23:48:59.1698711Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T23:48:59.1698994Z 
2025-08-18T23:48:59.1699138Z # price\_importer.services\_common.dsn
2025-08-18T23:48:59.1699388Z 
2025-08-18T23:48:59.1699576Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T23:48:59.1699909Z 
2025-08-18T23:48:59.1700010Z #### build\_dsn
2025-08-18T23:48:59.1700167Z 
2025-08-18T23:48:59.1700262Z ```python
2025-08-18T23:48:59.1700530Z def build_dsn(sync: bool = True) -> str
2025-08-18T23:48:59.1701049Z ```
2025-08-18T23:48:59.1701203Z 
2025-08-18T23:48:59.1701308Z Return safe DSN.
2025-08-18T23:48:59.1701476Z 
2025-08-18T23:48:59.1702028Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T23:48:59.1702355Z 
2025-08-18T23:48:59.1702565Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T23:48:59.1702904Z 
2025-08-18T23:48:59.1703082Z # price\_importer.services\_common.models\_vendor
2025-08-18T23:48:59.1703423Z 
2025-08-18T23:48:59.1703601Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T23:48:59.1703933Z 
2025-08-18T23:48:59.1704091Z # price\_importer.services\_common.db\_url
2025-08-18T23:48:59.1704388Z 
2025-08-18T23:48:59.1704624Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T23:48:59.1704996Z 
2025-08-18T23:48:59.1705108Z #### build\_url
2025-08-18T23:48:59.1705285Z 
2025-08-18T23:48:59.1705388Z ```python
2025-08-18T23:48:59.1705682Z def build_url(async_: bool = True) -> str
2025-08-18T23:48:59.1706063Z ```
2025-08-18T23:48:59.1706198Z 
2025-08-18T23:48:59.1706377Z Return Postgres DSN from env or PG_* parts.
2025-08-18T23:48:59.1706710Z 
2025-08-18T23:48:59.1706885Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T23:48:59.1707206Z 
2025-08-18T23:48:59.1707358Z # price\_importer.services\_common.keepa
2025-08-18T23:48:59.1707643Z 
2025-08-18T23:48:59.1707806Z <a id="price_importer.services_common.llm"></a>
2025-08-18T23:48:59.1708136Z 
2025-08-18T23:48:59.1708289Z # price\_importer.services\_common.llm
2025-08-18T23:48:59.1708564Z 
2025-08-18T23:48:59.1708759Z <a id="price_importer.services_common.settings"></a>
2025-08-18T23:48:59.1709087Z 
2025-08-18T23:48:59.1709240Z # price\_importer.services\_common.settings
2025-08-18T23:48:59.1709534Z 
2025-08-18T23:48:59.1709694Z <a id="price_importer.services_common.db"></a>
2025-08-18T23:48:59.1709994Z 
2025-08-18T23:48:59.1710143Z # price\_importer.services\_common.db
2025-08-18T23:48:59.1710418Z 
2025-08-18T23:48:59.1710669Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T23:48:59.1711219Z 
2025-08-18T23:48:59.1711362Z #### build\_sqlalchemy\_url
2025-08-18T23:48:59.1711579Z 
2025-08-18T23:48:59.1711684Z ```python
2025-08-18T23:48:59.1711973Z def build_sqlalchemy_url() -> str
2025-08-18T23:48:59.1712325Z ```
2025-08-18T23:48:59.1712475Z 
2025-08-18T23:48:59.1712639Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T23:48:59.1712939Z 
2025-08-18T23:48:59.1713193Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T23:48:59.1713774Z 
2025-08-18T23:48:59.1713902Z #### build\_asyncpg\_dsn
2025-08-18T23:48:59.1714107Z 
2025-08-18T23:48:59.1714216Z ```python
2025-08-18T23:48:59.1714490Z def build_asyncpg_dsn() -> str
2025-08-18T23:48:59.1714818Z ```
2025-08-18T23:48:59.1714952Z 
2025-08-18T23:48:59.1715165Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T23:48:59.1715530Z 
2025-08-18T23:48:59.1715749Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T23:48:59.1716113Z 
2025-08-18T23:48:59.1716230Z #### refresh\_mvs
2025-08-18T23:48:59.1716408Z 
2025-08-18T23:48:59.1716512Z ```python
2025-08-18T23:48:59.1716850Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T23:48:59.1717264Z ```
2025-08-18T23:48:59.1717411Z 
2025-08-18T23:48:59.1717643Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T23:48:59.1718012Z 
2025-08-18T23:48:59.1718173Z <a id="price_importer.services_common"></a>
2025-08-18T23:48:59.1718664Z 
2025-08-18T23:48:59.1718810Z # price\_importer.services\_common
2025-08-18T23:48:59.1719074Z 
2025-08-18T23:48:59.1719261Z <a id="price_importer.services_common.base"></a>
2025-08-18T23:48:59.1719592Z 
2025-08-18T23:48:59.1719742Z # price\_importer.services\_common.base
2025-08-18T23:48:59.1720034Z 
2025-08-18T23:48:59.1720185Z <a id="price_importer.normaliser"></a>
2025-08-18T23:48:59.1720467Z 
2025-08-18T23:48:59.1720606Z # price\_importer.normaliser
2025-08-18T23:48:59.1721010Z 
2025-08-18T23:48:59.1721193Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T23:48:59.1721522Z 
2025-08-18T23:48:59.1721687Z # price\_importer.common.models\_vendor
2025-08-18T23:48:59.1721977Z 
2025-08-18T23:48:59.1722136Z <a id="price_importer.common.db_url"></a>
2025-08-18T23:48:59.1722433Z 
2025-08-18T23:48:59.1722576Z # price\_importer.common.db\_url
2025-08-18T23:48:59.1722833Z 
2025-08-18T23:48:59.1723033Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T23:48:59.1723412Z 
2025-08-18T23:48:59.1723523Z #### make\_dsn
2025-08-18T23:48:59.1723690Z 
2025-08-18T23:48:59.1723805Z ```python
2025-08-18T23:48:59.1724094Z def make_dsn(async_: bool = False) -> str
2025-08-18T23:48:59.1724479Z ```
2025-08-18T23:48:59.1724621Z 
2025-08-18T23:48:59.1724825Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T23:48:59.1725189Z 
2025-08-18T23:48:59.1725384Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T23:48:59.1725725Z 
2025-08-18T23:48:59.1725842Z #### build\_url
2025-08-18T23:48:59.1726013Z 
2025-08-18T23:48:59.1726117Z ```python
2025-08-18T23:48:59.1726387Z def build_url(async_: bool = False) -> str
2025-08-18T23:48:59.1726735Z ```
2025-08-18T23:48:59.1726866Z 
2025-08-18T23:48:59.1727074Z Return Postgres DSN built from environment variables.
2025-08-18T23:48:59.1727428Z 
2025-08-18T23:48:59.1727574Z <a id="price_importer.common"></a>
2025-08-18T23:48:59.1727854Z 
2025-08-18T23:48:59.1727988Z # price\_importer.common
2025-08-18T23:48:59.1728208Z 
2025-08-18T23:48:59.1728388Z <a id="price_importer.common.base"></a>
2025-08-18T23:48:59.1728660Z 
2025-08-18T23:48:59.1728793Z # price\_importer.common.base
2025-08-18T23:48:59.1729026Z 
2025-08-18T23:48:59.1729182Z <a id="price_importer.tests.conftest"></a>
2025-08-18T23:48:59.1729467Z 
2025-08-18T23:48:59.1729604Z # price\_importer.tests.conftest
2025-08-18T23:48:59.1729875Z 
2025-08-18T23:48:59.1730037Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T23:48:59.1730327Z 
2025-08-18T23:48:59.1730472Z # price\_importer.tests.test\_reader
2025-08-18T23:48:59.1730871Z 
2025-08-18T23:48:59.1731041Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T23:48:59.1731335Z 
2025-08-18T23:48:59.1731476Z # price\_importer.tests.test\_imports
2025-08-18T23:48:59.1731734Z 
2025-08-18T23:48:59.1731884Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T23:48:59.1732168Z 
2025-08-18T23:48:59.1732306Z # price\_importer.tests.test\_smoke
2025-08-18T23:48:59.1732555Z 
2025-08-18T23:48:59.1732731Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T23:48:59.1733207Z 
2025-08-18T23:48:59.1733363Z # price\_importer.tests.test\_normaliser
2025-08-18T23:48:59.1733653Z 
2025-08-18T23:48:59.1733794Z <a id="price_importer.tests"></a>
2025-08-18T23:48:59.1734042Z 
2025-08-18T23:48:59.1734164Z # price\_importer.tests
2025-08-18T23:48:59.1734374Z 
2025-08-18T23:48:59.1734512Z <a id="price_importer.reader"></a>
2025-08-18T23:48:59.1734766Z 
2025-08-18T23:48:59.1734896Z # price\_importer.reader
2025-08-18T23:48:59.1735104Z 
2025-08-18T23:48:59.1735248Z <a id="price_importer.repository"></a>
2025-08-18T23:48:59.1735524Z 
2025-08-18T23:48:59.1735656Z # price\_importer.repository
2025-08-18T23:48:59.1735885Z 
2025-08-18T23:48:59.1736022Z <a id="price_importer.import"></a>
2025-08-18T23:48:59.1736278Z 
2025-08-18T23:48:59.1736404Z # price\_importer.import
2025-08-18T23:48:59.1736607Z 
2025-08-18T23:48:59.1736726Z <a id="fees_h10"></a>
2025-08-18T23:48:59.1736908Z 
2025-08-18T23:48:59.1737012Z # fees\_h10
2025-08-18T23:48:59.1737346Z 
2025-08-18T23:48:59.1737476Z <a id="fees_h10.worker"></a>
2025-08-18T23:48:59.1737695Z 
2025-08-18T23:48:59.1737797Z # fees\_h10.worker
2025-08-18T23:48:59.1737965Z 
2025-08-18T23:48:59.1738115Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T23:48:59.1738381Z 
2025-08-18T23:48:59.1738495Z #### list\_active\_asins
2025-08-18T23:48:59.1738679Z 
2025-08-18T23:48:59.1738769Z ```python
2025-08-18T23:48:59.1739011Z def list_active_asins() -> list[str]
2025-08-18T23:48:59.1739309Z ```
2025-08-18T23:48:59.1739430Z 
2025-08-18T23:48:59.1739587Z Return known ASINs or an empty list if unavailable.
2025-08-18T23:48:59.1739860Z 
2025-08-18T23:48:59.1739978Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T23:48:59.1740207Z 
2025-08-18T23:48:59.1740317Z # fees\_h10.tests.test\_smoke
2025-08-18T23:48:59.1740509Z 
2025-08-18T23:48:59.1740621Z <a id="fees_h10.tests"></a>
2025-08-18T23:48:59.1740954Z 
2025-08-18T23:48:59.1741052Z # fees\_h10.tests
2025-08-18T23:48:59.1741209Z 
2025-08-18T23:48:59.1741324Z <a id="fees_h10.client"></a>
2025-08-18T23:48:59.1741517Z 
2025-08-18T23:48:59.1741608Z # fees\_h10.client
2025-08-18T23:48:59.1741757Z 
2025-08-18T23:48:59.1741870Z <a id="fees_h10.repository"></a>
2025-08-18T23:48:59.1742071Z 
2025-08-18T23:48:59.1742177Z # fees\_h10.repository
2025-08-18T23:48:59.1742339Z 
2025-08-18T23:48:59.1742441Z <a id="emailer"></a>
2025-08-18T23:48:59.1742599Z 
2025-08-18T23:48:59.1742694Z # emailer
2025-08-18T23:48:59.1742819Z 
2025-08-18T23:48:59.1742959Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T23:48:59.1743218Z 
2025-08-18T23:48:59.1743347Z # emailer.tests.test\_import\_emailer
2025-08-18T23:48:59.1743596Z 
2025-08-18T23:48:59.1743747Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T23:48:59.1744033Z 
2025-08-18T23:48:59.1744153Z # emailer.tests.test\_smoke
2025-08-18T23:48:59.1744361Z 
2025-08-18T23:48:59.1744501Z <a id="emailer.tests"></a>
2025-08-18T23:48:59.1744726Z 
2025-08-18T23:48:59.1744835Z # emailer.tests
2025-08-18T23:48:59.1745018Z 
2025-08-18T23:48:59.1745173Z <a id="emailer.generate_body"></a>
2025-08-18T23:48:59.1745422Z 
2025-08-18T23:48:59.1745535Z # emailer.generate\_body
2025-08-18T23:48:59.1745729Z 
2025-08-18T23:48:59.1745832Z <a id="llm_server"></a>
2025-08-18T23:48:59.1746005Z 
2025-08-18T23:48:59.1746120Z # llm\_server
2025-08-18T23:48:59.1746285Z 
2025-08-18T23:48:59.1746421Z <a id="llm_server.app"></a>
2025-08-18T23:48:59.1746654Z 
2025-08-18T23:48:59.1746765Z # llm\_server.app
2025-08-18T23:48:59.1746944Z 
