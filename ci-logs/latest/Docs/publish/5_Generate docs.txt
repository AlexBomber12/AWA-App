2025-08-19T20:23:14.0487306Z ##[group]Run pydoc-markdown
2025-08-19T20:23:14.0487591Z [36;1mpydoc-markdown[0m
2025-08-19T20:23:14.0527477Z shell: /usr/bin/bash -e {0}
2025-08-19T20:23:14.0527705Z env:
2025-08-19T20:23:14.0527934Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:23:14.0528350Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T20:23:14.0528767Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:23:14.0529112Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:23:14.0529458Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:23:14.0529792Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T20:23:14.0530075Z ##[endgroup]
2025-08-19T20:23:14.3878583Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T20:23:14.3879267Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T20:23:14.3879736Z In "pydoc-markdown.yml"
2025-08-19T20:23:14.3880181Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T20:23:14.3880818Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T20:23:14.3881599Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T20:23:14.3882133Z 
2025-08-19T20:23:14.7315719Z <a id="__init__"></a>
2025-08-19T20:23:14.7316324Z 
2025-08-19T20:23:14.7316508Z # \_\_init\_\_
2025-08-19T20:23:14.7316715Z 
2025-08-19T20:23:14.7316848Z <a id="api"></a>
2025-08-19T20:23:14.7317046Z 
2025-08-19T20:23:14.7317172Z # api
2025-08-19T20:23:14.7317339Z 
2025-08-19T20:23:14.7317488Z <a id="api.errors"></a>
2025-08-19T20:23:14.7317750Z 
2025-08-19T20:23:14.7317894Z # api.errors
2025-08-19T20:23:14.7318102Z 
2025-08-19T20:23:14.7318263Z <a id="api.sentry_config"></a>
2025-08-19T20:23:14.7318561Z 
2025-08-19T20:23:14.7318711Z # api.sentry\_config
2025-08-19T20:23:14.7318941Z 
2025-08-19T20:23:14.7319145Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T20:23:14.7319509Z 
2025-08-19T20:23:14.7320104Z # api.tests.test\_stats\_contracts
2025-08-19T20:23:14.7320473Z 
2025-08-19T20:23:14.7320656Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T20:23:14.7321051Z 
2025-08-19T20:23:14.7321203Z # api.tests.test\_sentry\_scrub
2025-08-19T20:23:14.7321472Z 
2025-08-19T20:23:14.7321655Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T20:23:14.7321982Z 
2025-08-19T20:23:14.7322145Z # api.tests.test\_roi\_basic\_auth
2025-08-19T20:23:14.7322434Z 
2025-08-19T20:23:14.7322595Z <a id="api.tests.test_errors_json"></a>
2025-08-19T20:23:14.7322937Z 
2025-08-19T20:23:14.7323097Z # api.tests.test\_errors\_json
2025-08-19T20:23:14.7323939Z 
2025-08-19T20:23:14.7324109Z <a id="api.tests.test_llm"></a>
2025-08-19T20:23:14.7324389Z 
2025-08-19T20:23:14.7324526Z # api.tests.test\_llm
2025-08-19T20:23:14.7324745Z 
2025-08-19T20:23:14.7324909Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T20:23:14.7325218Z 
2025-08-19T20:23:14.7325337Z # api.tests.test\_roi\_filters
2025-08-19T20:23:14.7325520Z 
2025-08-19T20:23:14.7325638Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T20:23:14.7325847Z 
2025-08-19T20:23:14.7325943Z # api.tests.test\_sentry\_event
2025-08-19T20:23:14.7326119Z 
2025-08-19T20:23:14.7326268Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T20:23:14.7326516Z 
2025-08-19T20:23:14.7326612Z ## DummyTransport Objects
2025-08-19T20:23:14.7326765Z 
2025-08-19T20:23:14.7326843Z ```python
2025-08-19T20:23:14.7327045Z class DummyTransport()
2025-08-19T20:23:14.7327259Z ```
2025-08-19T20:23:14.7327362Z 
2025-08-19T20:23:14.7327569Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T20:23:14.7327879Z 
2025-08-19T20:23:14.7327963Z #### capture\_envelope
2025-08-19T20:23:14.7328105Z 
2025-08-19T20:23:14.7328180Z ```python
2025-08-19T20:23:14.7328383Z def capture_envelope(envelope)
2025-08-19T20:23:14.7328620Z ```
2025-08-19T20:23:14.7328716Z 
2025-08-19T20:23:14.7328867Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T20:23:14.7329119Z 
2025-08-19T20:23:14.7329216Z <a id="api.tests.test_cors"></a>
2025-08-19T20:23:14.7329668Z 
2025-08-19T20:23:14.7329755Z # api.tests.test\_cors
2025-08-19T20:23:14.7329894Z 
2025-08-19T20:23:14.7329997Z <a id="api.tests.test_imports"></a>
2025-08-19T20:23:14.7330184Z 
2025-08-19T20:23:14.7330274Z # api.tests.test\_imports
2025-08-19T20:23:14.7330423Z 
2025-08-19T20:23:14.7330531Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T20:23:14.7330725Z 
2025-08-19T20:23:14.7330818Z # api.tests.test\_rate\_limit
2025-08-19T20:23:14.7330995Z 
2025-08-19T20:23:14.7331107Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T20:23:14.7331312Z 
2025-08-19T20:23:14.7331391Z #### app
2025-08-19T20:23:14.7331496Z 
2025-08-19T20:23:14.7331571Z noqa: E402
2025-08-19T20:23:14.7331677Z 
2025-08-19T20:23:14.7331785Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T20:23:14.7331940Z 
2025-08-19T20:23:14.7332019Z # api.tests.test\_entrypoint
2025-08-19T20:23:14.7332158Z 
2025-08-19T20:23:14.7332240Z <a id="api.tests.test_health"></a>
2025-08-19T20:23:14.7332399Z 
2025-08-19T20:23:14.7332471Z # api.tests.test\_health
2025-08-19T20:23:14.7332599Z 
2025-08-19T20:23:14.7332681Z <a id="api.tests.test_score"></a>
2025-08-19T20:23:14.7332824Z 
2025-08-19T20:23:14.7332903Z # api.tests.test\_score
2025-08-19T20:23:14.7333020Z 
2025-08-19T20:23:14.7333097Z <a id="api.logging_config"></a>
2025-08-19T20:23:14.7333239Z 
2025-08-19T20:23:14.7333308Z # api.logging\_config
2025-08-19T20:23:14.7333655Z 
2025-08-19T20:23:14.7333743Z <a id="api.migrations.env"></a>
2025-08-19T20:23:14.7333902Z 
2025-08-19T20:23:14.7333979Z # api.migrations.env
2025-08-19T20:23:14.7334098Z 
2025-08-19T20:23:14.7334228Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T20:23:14.7334430Z 
2025-08-19T20:23:14.7334536Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T20:23:14.7334721Z 
2025-08-19T20:23:14.7334826Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T20:23:14.7335013Z 
2025-08-19T20:23:14.7335106Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T20:23:14.7335424Z 
2025-08-19T20:23:14.7335579Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T20:23:14.7335811Z 
2025-08-19T20:23:14.7335949Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T20:23:14.7336164Z 
2025-08-19T20:23:14.7336282Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T20:23:14.7336484Z 
2025-08-19T20:23:14.7336593Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T20:23:14.7336769Z 
2025-08-19T20:23:14.7336889Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T20:23:14.7337079Z 
2025-08-19T20:23:14.7337179Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T20:23:14.7337353Z 
2025-08-19T20:23:14.7337481Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T20:23:14.7337679Z 
2025-08-19T20:23:14.7337786Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T20:23:14.7337975Z 
2025-08-19T20:23:14.7338089Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T20:23:14.7338380Z 
2025-08-19T20:23:14.7338493Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T20:23:14.7338716Z 
2025-08-19T20:23:14.7338839Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T20:23:14.7339046Z 
2025-08-19T20:23:14.7339152Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T20:23:14.7339330Z 
2025-08-19T20:23:14.7339476Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T20:23:14.7339692Z 
2025-08-19T20:23:14.7339813Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T20:23:14.7340014Z 
2025-08-19T20:23:14.7340133Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T20:23:14.7340329Z 
2025-08-19T20:23:14.7340441Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T20:23:14.7340623Z 
2025-08-19T20:23:14.7340756Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T20:23:14.7340973Z 
2025-08-19T20:23:14.7341096Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T20:23:14.7341428Z 
2025-08-19T20:23:14.7341536Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T20:23:14.7341730Z 
2025-08-19T20:23:14.7341821Z # api.migrations.versions.0001\_baseline
2025-08-19T20:23:14.7341987Z 
2025-08-19T20:23:14.7342080Z <a id="api.migrations.versions"></a>
2025-08-19T20:23:14.7342238Z 
2025-08-19T20:23:14.7342318Z # api.migrations.versions
2025-08-19T20:23:14.7342448Z 
2025-08-19T20:23:14.7342531Z <a id="api.migrations"></a>
2025-08-19T20:23:14.7342663Z 
2025-08-19T20:23:14.7342731Z # api.migrations
2025-08-19T20:23:14.7343025Z 
2025-08-19T20:23:14.7343146Z <a id="api.db"></a>
2025-08-19T20:23:14.7343481Z 
2025-08-19T20:23:14.7343607Z # api.db
2025-08-19T20:23:14.7343763Z 
2025-08-19T20:23:14.7343905Z <a id="api.routes.score"></a>
2025-08-19T20:23:14.7344160Z 
2025-08-19T20:23:14.7344289Z # api.routes.score
2025-08-19T20:23:14.7344483Z 
2025-08-19T20:23:14.7344624Z <a id="api.routes.stats"></a>
2025-08-19T20:23:14.7344883Z 
2025-08-19T20:23:14.7345021Z # api.routes.stats
2025-08-19T20:23:14.7345228Z 
2025-08-19T20:23:14.7345316Z <a id="api.routes.roi"></a>
2025-08-19T20:23:14.7345458Z 
2025-08-19T20:23:14.7345526Z # api.routes.roi
2025-08-19T20:23:14.7345630Z 
2025-08-19T20:23:14.7345716Z <a id="api.routes.health"></a>
2025-08-19T20:23:14.7345856Z 
2025-08-19T20:23:14.7345925Z # api.routes.health
2025-08-19T20:23:14.7346036Z 
2025-08-19T20:23:14.7346129Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T20:23:14.7346294Z 
2025-08-19T20:23:14.7346359Z #### MAX\_SKEW
2025-08-19T20:23:14.7346463Z 
2025-08-19T20:23:14.7346525Z seconds
2025-08-19T20:23:14.7346607Z 
2025-08-19T20:23:14.7346702Z <a id="api.routes.health.health"></a>
2025-08-19T20:23:14.7346865Z 
2025-08-19T20:23:14.7346928Z #### health
2025-08-19T20:23:14.7347023Z 
2025-08-19T20:23:14.7347096Z ```python
2025-08-19T20:23:14.7347299Z @router.get("/health", include_in_schema=False)
2025-08-19T20:23:14.7347701Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T20:23:14.7348219Z ```
2025-08-19T20:23:14.7348320Z 
2025-08-19T20:23:14.7348440Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T20:23:14.7348636Z 
2025-08-19T20:23:14.7348732Z <a id="api.routes.repository"></a>
2025-08-19T20:23:14.7348890Z 
2025-08-19T20:23:14.7348967Z # api.routes.repository
2025-08-19T20:23:14.7349095Z 
2025-08-19T20:23:14.7349168Z <a id="api.routes"></a>
2025-08-19T20:23:14.7349285Z 
2025-08-19T20:23:14.7349350Z # api.routes
2025-08-19T20:23:14.7349451Z 
2025-08-19T20:23:14.7349530Z <a id="api.models.fee"></a>
2025-08-19T20:23:14.7349660Z 
2025-08-19T20:23:14.7349732Z # api.models.fee
2025-08-19T20:23:14.7349836Z 
2025-08-19T20:23:14.7349907Z <a id="api.models"></a>
2025-08-19T20:23:14.7350021Z 
2025-08-19T20:23:14.7350090Z # api.models
2025-08-19T20:23:14.7350183Z 
2025-08-19T20:23:14.7350262Z <a id="api.roi_repository"></a>
2025-08-19T20:23:14.7350407Z 
2025-08-19T20:23:14.7350478Z # api.roi\_repository
2025-08-19T20:23:14.7350590Z 
2025-08-19T20:23:14.7350665Z <a id="api.main"></a>
2025-08-19T20:23:14.7350785Z 
2025-08-19T20:23:14.7350847Z # api.main
2025-08-19T20:23:14.7350952Z 
2025-08-19T20:23:14.7351044Z <a id="api.main.ready"></a>
2025-08-19T20:23:14.7351173Z 
2025-08-19T20:23:14.7351237Z #### ready
2025-08-19T20:23:14.7351332Z 
2025-08-19T20:23:14.7351397Z ```python
2025-08-19T20:23:14.7351654Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T20:23:14.7352088Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T20:23:14.7352439Z                                                                       str]
2025-08-19T20:23:14.7352677Z ```
2025-08-19T20:23:14.7352761Z 
2025-08-19T20:23:14.7352867Z Return 200 only when migrations are at head.
2025-08-19T20:23:14.7353041Z 
2025-08-19T20:23:14.7353115Z <a id="api.config"></a>
2025-08-19T20:23:14.7353241Z 
2025-08-19T20:23:14.7353305Z # api.config
2025-08-19T20:23:14.7353575Z 
2025-08-19T20:23:14.7353653Z <a id="api.security"></a>
2025-08-19T20:23:14.7353794Z 
2025-08-19T20:23:14.7353978Z # api.security
2025-08-19T20:23:14.7354078Z 
2025-08-19T20:23:14.7354147Z <a id="etl"></a>
2025-08-19T20:23:14.7354249Z 
2025-08-19T20:23:14.7354310Z # etl
2025-08-19T20:23:14.7354402Z 
2025-08-19T20:23:14.7354482Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T20:23:14.7354628Z 
2025-08-19T20:23:14.7354701Z # etl.fba\_fee\_ingestor
2025-08-19T20:23:14.7354828Z 
2025-08-19T20:23:14.7354907Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T20:23:14.7355048Z 
2025-08-19T20:23:14.7355125Z # etl.sp\_fees\_ingestor
2025-08-19T20:23:14.7355247Z 
2025-08-19T20:23:14.7355325Z <a id="etl.keepa_ingestor"></a>
2025-08-19T20:23:14.7355463Z 
2025-08-19T20:23:14.7355539Z # etl.keepa\_ingestor
2025-08-19T20:23:14.7355653Z 
2025-08-19T20:23:14.7355719Z <a id="etl.db"></a>
2025-08-19T20:23:14.7355831Z 
2025-08-19T20:23:14.7355892Z # etl.db
2025-08-19T20:23:14.7355980Z 
2025-08-19T20:23:14.7356067Z <a id="etl.dialects.schemas"></a>
2025-08-19T20:23:14.7356210Z 
2025-08-19T20:23:14.7356291Z # etl.dialects.schemas
2025-08-19T20:23:14.7356413Z 
2025-08-19T20:23:14.7356528Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T20:23:14.7356717Z 
2025-08-19T20:23:14.7356808Z # etl.dialects.amazon\_reimbursements
2025-08-19T20:23:14.7356979Z 
2025-08-19T20:23:14.7357073Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T20:23:14.7357243Z 
2025-08-19T20:23:14.7357336Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T20:23:14.7357492Z 
2025-08-19T20:23:14.7357578Z <a id="etl.dialects.test_generic"></a>
2025-08-19T20:23:14.7357735Z 
2025-08-19T20:23:14.7357821Z # etl.dialects.test\_generic
2025-08-19T20:23:14.7357958Z 
2025-08-19T20:23:14.7358048Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T20:23:14.7358221Z 
2025-08-19T20:23:14.7358302Z # etl.dialects.amazon\_returns
2025-08-19T20:23:14.7358441Z 
2025-08-19T20:23:14.7358541Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T20:23:14.7358748Z 
2025-08-19T20:23:14.7358835Z # etl.dialects.amazon\_fee\_preview
2025-08-19T20:23:14.7359108Z 
2025-08-19T20:23:14.7359226Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T20:23:14.7359410Z 
2025-08-19T20:23:14.7359498Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T20:23:14.7359666Z 
2025-08-19T20:23:14.7359760Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T20:23:14.7359928Z 
2025-08-19T20:23:14.7360020Z # etl.dialects.amazon\_settlements
2025-08-19T20:23:14.7360172Z 
2025-08-19T20:23:14.7360247Z <a id="etl.dialects"></a>
2025-08-19T20:23:14.7360374Z 
2025-08-19T20:23:14.7360446Z # etl.dialects
2025-08-19T20:23:14.7360546Z 
2025-08-19T20:23:14.7360613Z <a id="ingest"></a>
2025-08-19T20:23:14.7360728Z 
2025-08-19T20:23:14.7360790Z # ingest
2025-08-19T20:23:14.7360875Z 
2025-08-19T20:23:14.7360955Z <a id="ingest.maintenance"></a>
2025-08-19T20:23:14.7361114Z 
2025-08-19T20:23:14.7361186Z # ingest.maintenance
2025-08-19T20:23:14.7361300Z 
2025-08-19T20:23:14.7361385Z <a id="ingest.copy_loader"></a>
2025-08-19T20:23:14.7361523Z 
2025-08-19T20:23:14.7361595Z # ingest.copy\_loader
2025-08-19T20:23:14.7361726Z 
2025-08-19T20:23:14.7361831Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T20:23:14.7362011Z 
2025-08-19T20:23:14.7362086Z #### copy\_df\_via\_temp
2025-08-19T20:23:14.7362212Z 
2025-08-19T20:23:14.7362274Z ```python
2025-08-19T20:23:14.7362447Z def copy_df_via_temp(engine: Engine,
2025-08-19T20:23:14.7362680Z                      df: pd.DataFrame,
2025-08-19T20:23:14.7362919Z                      target_table: str,
2025-08-19T20:23:14.7363136Z                      *,
2025-08-19T20:23:14.7363479Z                      target_schema: Optional[str] = None,
2025-08-19T20:23:14.7363741Z                      columns: Sequence[str],
2025-08-19T20:23:14.7364015Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T20:23:14.7364290Z                      analyze_after: bool = False,
2025-08-19T20:23:14.7364551Z                      connection: Any | None = None) -> int
2025-08-19T20:23:14.7364789Z ```
2025-08-19T20:23:14.7364872Z 
2025-08-19T20:23:14.7365030Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T20:23:14.7365692Z 
2025-08-19T20:23:14.7365854Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T20:23:14.7366151Z 
2025-08-19T20:23:14.7366293Z # ingest.tests.test\_smoke
2025-08-19T20:23:14.7366543Z 
2025-08-19T20:23:14.7366683Z <a id="ingest.tests"></a>
2025-08-19T20:23:14.7366914Z 
2025-08-19T20:23:14.7366990Z # ingest.tests
2025-08-19T20:23:14.7367092Z 
2025-08-19T20:23:14.7367177Z <a id="ingest.upload_router"></a>
2025-08-19T20:23:14.7367326Z 
2025-08-19T20:23:14.7367406Z # ingest.upload\_router
2025-08-19T20:23:14.7367525Z 
2025-08-19T20:23:14.7367604Z <a id="ingest.email_watcher"></a>
2025-08-19T20:23:14.7367749Z 
2025-08-19T20:23:14.7367820Z # ingest.email\_watcher
2025-08-19T20:23:14.7367935Z 
2025-08-19T20:23:14.7368024Z <a id="ingest.email_watcher.main"></a>
2025-08-19T20:23:14.7368182Z 
2025-08-19T20:23:14.7368244Z #### main
2025-08-19T20:23:14.7368331Z 
2025-08-19T20:23:14.7368398Z ```python
2025-08-19T20:23:14.7368571Z def main() -> dict[str, str]
2025-08-19T20:23:14.7368780Z ```
2025-08-19T20:23:14.7368862Z 
2025-08-19T20:23:14.7369002Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T20:23:14.7369235Z 
2025-08-19T20:23:14.7369362Z Returns {"status": "success"} when processing completes.
2025-08-19T20:23:14.7369565Z 
2025-08-19T20:23:14.7369648Z <a id="ingest.tasks"></a>
2025-08-19T20:23:14.7369774Z 
2025-08-19T20:23:14.7369840Z # ingest.tasks
2025-08-19T20:23:14.7369938Z 
2025-08-19T20:23:14.7370039Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T20:23:14.7370210Z 
2025-08-19T20:23:14.7370281Z #### task\_import\_file
2025-08-19T20:23:14.7370401Z 
2025-08-19T20:23:14.7370463Z ```python
2025-08-19T20:23:14.7370666Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T20:23:14.7370968Z def task_import_file(self: Any,
2025-08-19T20:23:14.7371174Z                      uri: str,
2025-08-19T20:23:14.7371403Z                      report_type: str | None = None,
2025-08-19T20:23:14.7372141Z                      force: bool = False) -> dict[str, Any]
2025-08-19T20:23:14.7372395Z ```
2025-08-19T20:23:14.7372480Z 
2025-08-19T20:23:14.7372617Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T20:23:14.7372829Z 
2025-08-19T20:23:14.7372915Z <a id="ingest.celery_app"></a>
2025-08-19T20:23:14.7373057Z 
2025-08-19T20:23:14.7373133Z # ingest.celery\_app
2025-08-19T20:23:14.7373252Z 
2025-08-19T20:23:14.7373462Z <a id="ingest.ingest_router"></a>
2025-08-19T20:23:14.7373623Z 
2025-08-19T20:23:14.7373697Z # ingest.ingest\_router
2025-08-19T20:23:14.7373817Z 
2025-08-19T20:23:14.7373893Z <a id="logistics_etl"></a>
2025-08-19T20:23:14.7374030Z 
2025-08-19T20:23:14.7374098Z # logistics\_etl
2025-08-19T20:23:14.7374205Z 
2025-08-19T20:23:14.7374286Z Daily logistics ETL job.
2025-08-19T20:23:14.7374413Z 
2025-08-19T20:23:14.7374493Z <a id="logistics_etl.__main__"></a>
2025-08-19T20:23:14.7374648Z 
2025-08-19T20:23:14.7374729Z # logistics\_etl.\_\_main\_\_
2025-08-19T20:23:14.7374873Z 
2025-08-19T20:23:14.7374959Z <a id="logistics_etl.dsn"></a>
2025-08-19T20:23:14.7375102Z 
2025-08-19T20:23:14.7375175Z # logistics\_etl.dsn
2025-08-19T20:23:14.7375287Z 
2025-08-19T20:23:14.7375410Z Local DSN builder to avoid cross-service dependency.
2025-08-19T20:23:14.7375612Z 
2025-08-19T20:23:14.7375701Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T20:23:14.7375866Z 
2025-08-19T20:23:14.7375936Z #### build\_dsn
2025-08-19T20:23:14.7376042Z 
2025-08-19T20:23:14.7376107Z ```python
2025-08-19T20:23:14.7376285Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:23:14.7376505Z ```
2025-08-19T20:23:14.7376595Z 
2025-08-19T20:23:14.7376732Z Return a Postgres DSN assembled from environment variables.
2025-08-19T20:23:14.7376964Z 
2025-08-19T20:23:14.7377121Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T20:23:14.7377504Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T20:23:14.7377847Z error when any required variable is missing.
2025-08-19T20:23:14.7378026Z 
2025-08-19T20:23:14.7378246Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T20:23:14.7378423Z 
2025-08-19T20:23:14.7378505Z # logistics\_etl.tests.conftest
2025-08-19T20:23:14.7378648Z 
2025-08-19T20:23:14.7378758Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T20:23:14.7378942Z 
2025-08-19T20:23:14.7379030Z # logistics\_etl.tests.test\_repository
2025-08-19T20:23:14.7379195Z 
2025-08-19T20:23:14.7379292Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T20:23:14.7379460Z 
2025-08-19T20:23:14.7379542Z # logistics\_etl.tests.test\_cron
2025-08-19T20:23:14.7379695Z 
2025-08-19T20:23:14.7379793Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T20:23:14.7379967Z 
2025-08-19T20:23:14.7380056Z # logistics\_etl.tests.test\_imports
2025-08-19T20:23:14.7380212Z 
2025-08-19T20:23:14.7380303Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T20:23:14.7380470Z 
2025-08-19T20:23:14.7380562Z # logistics\_etl.tests.test\_smoke
2025-08-19T20:23:14.7380721Z 
2025-08-19T20:23:14.7380814Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T20:23:14.7380991Z 
2025-08-19T20:23:14.7381074Z # logistics\_etl.tests.test\_client
2025-08-19T20:23:14.7381225Z 
2025-08-19T20:23:14.7381310Z <a id="logistics_etl.tests"></a>
2025-08-19T20:23:14.7381454Z 
2025-08-19T20:23:14.7381524Z # logistics\_etl.tests
2025-08-19T20:23:14.7381641Z 
2025-08-19T20:23:14.7381725Z <a id="logistics_etl.flow"></a>
2025-08-19T20:23:14.7381861Z 
2025-08-19T20:23:14.7381930Z # logistics\_etl.flow
2025-08-19T20:23:14.7382049Z 
2025-08-19T20:23:14.7382131Z <a id="logistics_etl.client"></a>
2025-08-19T20:23:14.7382276Z 
2025-08-19T20:23:14.7382354Z # logistics\_etl.client
2025-08-19T20:23:14.7382474Z 
2025-08-19T20:23:14.7382552Z <a id="logistics_etl.cron"></a>
2025-08-19T20:23:14.7382686Z 
2025-08-19T20:23:14.7382762Z # logistics\_etl.cron
2025-08-19T20:23:14.7382874Z 
2025-08-19T20:23:14.7382949Z <a id="logistics_etl.db"></a>
2025-08-19T20:23:14.7383092Z 
2025-08-19T20:23:14.7383160Z # logistics\_etl.db
2025-08-19T20:23:14.7383497Z 
2025-08-19T20:23:14.7383588Z <a id="logistics_etl.repository"></a>
2025-08-19T20:23:14.7383752Z 
2025-08-19T20:23:14.7452716Z # logistics\_etl.repository
2025-08-19T20:23:14.7453156Z 
2025-08-19T20:23:14.7453512Z <a id="alert_bot"></a>
2025-08-19T20:23:14.7453775Z 
2025-08-19T20:23:14.7453912Z # alert\_bot
2025-08-19T20:23:14.7454122Z 
2025-08-19T20:23:14.7454306Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T20:23:14.7454659Z 
2025-08-19T20:23:14.7454829Z # alert\_bot.tests.test\_smoke
2025-08-19T20:23:14.7455125Z 
2025-08-19T20:23:14.7455298Z <a id="alert_bot.tests"></a>
2025-08-19T20:23:14.7455481Z 
2025-08-19T20:23:14.7455571Z # alert\_bot.tests
2025-08-19T20:23:14.7455708Z 
2025-08-19T20:23:14.7455808Z <a id="alert_bot.alert_bot"></a>
2025-08-19T20:23:14.7455991Z 
2025-08-19T20:23:14.7456082Z # alert\_bot.alert\_bot
2025-08-19T20:23:14.7456247Z 
2025-08-19T20:23:14.7456351Z <a id="alert_bot.rules"></a>
2025-08-19T20:23:14.7456519Z 
2025-08-19T20:23:14.7456618Z # alert\_bot.rules
2025-08-19T20:23:14.7456754Z 
2025-08-19T20:23:14.7456843Z <a id="common"></a>
2025-08-19T20:23:14.7456974Z 
2025-08-19T20:23:14.7457049Z # common
2025-08-19T20:23:14.7457163Z 
2025-08-19T20:23:14.7457254Z <a id="common.dsn"></a>
2025-08-19T20:23:14.7457400Z 
2025-08-19T20:23:14.7457478Z # common.dsn
2025-08-19T20:23:14.7457605Z 
2025-08-19T20:23:14.7457708Z <a id="common.dsn.build_dsn"></a>
2025-08-19T20:23:14.7457891Z 
2025-08-19T20:23:14.7457976Z #### build\_dsn
2025-08-19T20:23:14.7458101Z 
2025-08-19T20:23:14.7458180Z ```python
2025-08-19T20:23:14.7458405Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:23:14.7458683Z ```
2025-08-19T20:23:14.7458793Z 
2025-08-19T20:23:14.7458950Z Return a Postgres DSN, validating required variables.
2025-08-19T20:23:14.7459208Z 
2025-08-19T20:23:14.7459445Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T20:23:14.7459979Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T20:23:14.7460488Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T20:23:14.7461092Z missing.
2025-08-19T20:23:14.7461217Z 
2025-08-19T20:23:14.7461319Z <a id="common.models_vendor"></a>
2025-08-19T20:23:14.7461467Z 
2025-08-19T20:23:14.7461540Z # common.models\_vendor
2025-08-19T20:23:14.7461660Z 
2025-08-19T20:23:14.7461748Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T20:23:14.7461912Z 
2025-08-19T20:23:14.7461982Z ## Vendor Objects
2025-08-19T20:23:14.7462088Z 
2025-08-19T20:23:14.7462151Z ```python
2025-08-19T20:23:14.7462311Z class Vendor(Base)
2025-08-19T20:23:14.7462473Z ```
2025-08-19T20:23:14.7462559Z 
2025-08-19T20:23:14.7462636Z Vendor of inventory items.
2025-08-19T20:23:14.7462766Z 
2025-08-19T20:23:14.7462869Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T20:23:14.7463056Z 
2025-08-19T20:23:14.7463127Z ## VendorPrice Objects
2025-08-19T20:23:14.7463244Z 
2025-08-19T20:23:14.7463311Z ```python
2025-08-19T20:23:14.7463709Z class VendorPrice(Base)
2025-08-19T20:23:14.7463901Z ```
2025-08-19T20:23:14.7463989Z 
2025-08-19T20:23:14.7464089Z Association table linking vendors to pricing.
2025-08-19T20:23:14.7464272Z 
2025-08-19T20:23:14.7464345Z <a id="common.db_url"></a>
2025-08-19T20:23:14.7464471Z 
2025-08-19T20:23:14.7464539Z # common.db\_url
2025-08-19T20:23:14.7464651Z 
2025-08-19T20:23:14.7464733Z <a id="common.db_url.build_url"></a>
2025-08-19T20:23:14.7464887Z 
2025-08-19T20:23:14.7464954Z #### build\_url
2025-08-19T20:23:14.7465055Z 
2025-08-19T20:23:14.7465115Z ```python
2025-08-19T20:23:14.7465290Z def build_url(async_: bool = True) -> str
2025-08-19T20:23:14.7465506Z ```
2025-08-19T20:23:14.7465591Z 
2025-08-19T20:23:14.7465684Z Return Postgres DSN from env or PG_* parts.
2025-08-19T20:23:14.7465851Z 
2025-08-19T20:23:14.7465932Z <a id="common.keepa"></a>
2025-08-19T20:23:14.7466059Z 
2025-08-19T20:23:14.7466124Z # common.keepa
2025-08-19T20:23:14.7466223Z 
2025-08-19T20:23:14.7466299Z <a id="common.llm"></a>
2025-08-19T20:23:14.7466550Z 
2025-08-19T20:23:14.7466616Z # common.llm
2025-08-19T20:23:14.7466718Z 
2025-08-19T20:23:14.7466796Z <a id="common.settings"></a>
2025-08-19T20:23:14.7466930Z 
2025-08-19T20:23:14.7466998Z # common.settings
2025-08-19T20:23:14.7467108Z 
2025-08-19T20:23:14.7467176Z <a id="common.db"></a>
2025-08-19T20:23:14.7467288Z 
2025-08-19T20:23:14.7467355Z # common.db
2025-08-19T20:23:14.7467442Z 
2025-08-19T20:23:14.7467531Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T20:23:14.7467703Z 
2025-08-19T20:23:14.7467778Z #### build\_sqlalchemy\_url
2025-08-19T20:23:14.7467904Z 
2025-08-19T20:23:14.7467965Z ```python
2025-08-19T20:23:14.7468137Z def build_sqlalchemy_url() -> str
2025-08-19T20:23:14.7468338Z ```
2025-08-19T20:23:14.7468424Z 
2025-08-19T20:23:14.7468518Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T20:23:14.7468687Z 
2025-08-19T20:23:14.7468785Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T20:23:14.7468951Z 
2025-08-19T20:23:14.7469024Z #### build\_asyncpg\_dsn
2025-08-19T20:23:14.7469168Z 
2025-08-19T20:23:14.7469236Z ```python
2025-08-19T20:23:14.7469404Z def build_asyncpg_dsn() -> str
2025-08-19T20:23:14.7469605Z ```
2025-08-19T20:23:14.7469686Z 
2025-08-19T20:23:14.7469814Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T20:23:14.7470032Z 
2025-08-19T20:23:14.7470116Z <a id="common.db.refresh_mvs"></a>
2025-08-19T20:23:14.7470267Z 
2025-08-19T20:23:14.7470337Z #### refresh\_mvs
2025-08-19T20:23:14.7470439Z 
2025-08-19T20:23:14.7470499Z ```python
2025-08-19T20:23:14.7470698Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T20:23:14.7470940Z ```
2025-08-19T20:23:14.7471027Z 
2025-08-19T20:23:14.7471161Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T20:23:14.7471371Z 
2025-08-19T20:23:14.7471454Z <a id="common.config"></a>
2025-08-19T20:23:14.7471581Z 
2025-08-19T20:23:14.7471647Z # common.config
2025-08-19T20:23:14.7471749Z 
2025-08-19T20:23:14.7471827Z <a id="common.base"></a>
2025-08-19T20:23:14.7471947Z 
2025-08-19T20:23:14.7472017Z # common.base
2025-08-19T20:23:14.7472243Z 
2025-08-19T20:23:14.7472322Z <a id="common.base.Base"></a>
2025-08-19T20:23:14.7472458Z 
2025-08-19T20:23:14.7472527Z ## Base Objects
2025-08-19T20:23:14.7472629Z 
2025-08-19T20:23:14.7472691Z ```python
2025-08-19T20:23:14.7472856Z class Base(DeclarativeBase)
2025-08-19T20:23:14.7473046Z ```
2025-08-19T20:23:14.7473129Z 
2025-08-19T20:23:14.7473218Z Base class for SQLAlchemy models.
2025-08-19T20:23:14.7473504Z 
2025-08-19T20:23:14.7473578Z <a id="repricer"></a>
2025-08-19T20:23:14.7473702Z 
2025-08-19T20:23:14.7473765Z # repricer
2025-08-19T20:23:14.7473855Z 
2025-08-19T20:23:14.7473944Z <a id="repricer.app.schemas"></a>
2025-08-19T20:23:14.7474092Z 
2025-08-19T20:23:14.7474167Z # repricer.app.schemas
2025-08-19T20:23:14.7474284Z 
2025-08-19T20:23:14.7474371Z <a id="repricer.app.deps"></a>
2025-08-19T20:23:14.7474511Z 
2025-08-19T20:23:14.7474582Z # repricer.app.deps
2025-08-19T20:23:14.7474697Z 
2025-08-19T20:23:14.7474813Z Placeholder module for Keepa / SP-API clients.
2025-08-19T20:23:14.7475009Z 
2025-08-19T20:23:14.7475101Z <a id="repricer.app.logic"></a>
2025-08-19T20:23:14.7475243Z 
2025-08-19T20:23:14.7475316Z # repricer.app.logic
2025-08-19T20:23:14.7475431Z 
2025-08-19T20:23:14.7475538Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T20:23:14.7475709Z 
2025-08-19T20:23:14.7475775Z #### MIN\_MARGIN
2025-08-19T20:23:14.7475884Z 
2025-08-19T20:23:14.7475945Z 15 % ROI
2025-08-19T20:23:14.7476033Z 
2025-08-19T20:23:14.7476134Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T20:23:14.7476317Z 
2025-08-19T20:23:14.7476388Z #### compute\_price
2025-08-19T20:23:14.7476490Z 
2025-08-19T20:23:14.7476558Z ```python
2025-08-19T20:23:14.7476798Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T20:23:14.7477100Z ```
2025-08-19T20:23:14.7477184Z 
2025-08-19T20:23:14.7477292Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T20:23:14.7477579Z Replace with real competitive logic later.
2025-08-19T20:23:14.7477922Z 
2025-08-19T20:23:14.7478005Z <a id="repricer.app.main"></a>
2025-08-19T20:23:14.7478157Z 
2025-08-19T20:23:14.7478228Z # repricer.app.main
2025-08-19T20:23:14.7478336Z 
2025-08-19T20:23:14.7478418Z <a id="repricer.app"></a>
2025-08-19T20:23:14.7478543Z 
2025-08-19T20:23:14.7478608Z # repricer.app
2025-08-19T20:23:14.7478712Z 
2025-08-19T20:23:14.7478806Z <a id="repricer.tests.test_imports"></a>
2025-08-19T20:23:14.7478970Z 
2025-08-19T20:23:14.7479051Z # repricer.tests.test\_imports
2025-08-19T20:23:14.7479197Z 
2025-08-19T20:23:14.7479282Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T20:23:14.7479443Z 
2025-08-19T20:23:14.7479529Z # repricer.tests.test\_smoke
2025-08-19T20:23:14.7479663Z 
2025-08-19T20:23:14.7479741Z <a id="repricer.tests"></a>
2025-08-19T20:23:14.7479875Z 
2025-08-19T20:23:14.7479942Z # repricer.tests
2025-08-19T20:23:14.7480049Z 
2025-08-19T20:23:14.7480112Z <a id="db"></a>
2025-08-19T20:23:14.7480218Z 
2025-08-19T20:23:14.7480278Z # db
2025-08-19T20:23:14.7480361Z 
2025-08-19T20:23:14.7480452Z <a id="db.utils.views"></a>
2025-08-19T20:23:14.7480586Z 
2025-08-19T20:23:14.7480651Z # db.utils.views
2025-08-19T20:23:14.7480752Z 
2025-08-19T20:23:14.7480850Z <a id="db.utils.views.replace_view"></a>
2025-08-19T20:23:14.7481014Z 
2025-08-19T20:23:14.7481080Z #### replace\_view
2025-08-19T20:23:14.7481197Z 
2025-08-19T20:23:14.7481259Z ```python
2025-08-19T20:23:14.7481448Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T20:23:14.7481699Z ```
2025-08-19T20:23:14.7481784Z 
2025-08-19T20:23:14.7481876Z Drop and recreate a SQL view atomically.
2025-08-19T20:23:14.7482036Z 
2025-08-19T20:23:14.7482105Z <a id="db.utils"></a>
2025-08-19T20:23:14.7482225Z 
2025-08-19T20:23:14.7482287Z # db.utils
2025-08-19T20:23:14.7482376Z 
2025-08-19T20:23:14.7482452Z <a id="price_importer"></a>
2025-08-19T20:23:14.7482584Z 
2025-08-19T20:23:14.7482651Z # price\_importer
2025-08-19T20:23:14.7482753Z 
2025-08-19T20:23:14.7482856Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T20:23:14.7483038Z 
2025-08-19T20:23:14.7483125Z # price\_importer.services\_common.dsn
2025-08-19T20:23:14.7483513Z 
2025-08-19T20:23:14.7483648Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T20:23:14.7483850Z 
2025-08-19T20:23:14.7483912Z #### build\_dsn
2025-08-19T20:23:14.7484015Z 
2025-08-19T20:23:14.7484076Z ```python
2025-08-19T20:23:14.7484247Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:23:14.7484465Z ```
2025-08-19T20:23:14.7484547Z 
2025-08-19T20:23:14.7484621Z Return safe DSN.
2025-08-19T20:23:14.7484722Z 
2025-08-19T20:23:14.7485070Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T20:23:14.7485275Z 
2025-08-19T20:23:14.7485398Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T20:23:14.7485600Z 
2025-08-19T20:23:14.7485708Z # price\_importer.services\_common.models\_vendor
2025-08-19T20:23:14.7485898Z 
2025-08-19T20:23:14.7486004Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T20:23:14.7486184Z 
2025-08-19T20:23:14.7486283Z # price\_importer.services\_common.db\_url
2025-08-19T20:23:14.7486470Z 
2025-08-19T20:23:14.7486600Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T20:23:14.7486815Z 
2025-08-19T20:23:14.7486879Z #### build\_url
2025-08-19T20:23:14.7486977Z 
2025-08-19T20:23:14.7487038Z ```python
2025-08-19T20:23:14.7487219Z def build_url(async_: bool = True) -> str
2025-08-19T20:23:14.7487450Z ```
2025-08-19T20:23:14.7487534Z 
2025-08-19T20:23:14.7487633Z Return Postgres DSN from env or PG_* parts.
2025-08-19T20:23:14.7487806Z 
2025-08-19T20:23:14.7487952Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T20:23:14.7488144Z 
2025-08-19T20:23:14.7488237Z # price\_importer.services\_common.keepa
2025-08-19T20:23:14.7488403Z 
2025-08-19T20:23:14.7488505Z <a id="price_importer.services_common.llm"></a>
2025-08-19T20:23:14.7488689Z 
2025-08-19T20:23:14.7488779Z # price\_importer.services\_common.llm
2025-08-19T20:23:14.7488941Z 
2025-08-19T20:23:14.7489059Z <a id="price_importer.services_common.settings"></a>
2025-08-19T20:23:14.7489382Z 
2025-08-19T20:23:14.7489478Z # price\_importer.services\_common.settings
2025-08-19T20:23:14.7489653Z 
2025-08-19T20:23:14.7489752Z <a id="price_importer.services_common.db"></a>
2025-08-19T20:23:14.7489925Z 
2025-08-19T20:23:14.7490018Z # price\_importer.services\_common.db
2025-08-19T20:23:14.7490174Z 
2025-08-19T20:23:14.7490329Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T20:23:14.7490566Z 
2025-08-19T20:23:14.7490650Z #### build\_sqlalchemy\_url
2025-08-19T20:23:14.7490784Z 
2025-08-19T20:23:14.7490848Z ```python
2025-08-19T20:23:14.7491024Z def build_sqlalchemy_url() -> str
2025-08-19T20:23:14.7491229Z ```
2025-08-19T20:23:14.7491316Z 
2025-08-19T20:23:14.7491411Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T20:23:14.7491579Z 
2025-08-19T20:23:14.7491726Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T20:23:14.7491946Z 
2025-08-19T20:23:14.7492020Z #### build\_asyncpg\_dsn
2025-08-19T20:23:14.7492160Z 
2025-08-19T20:23:14.7492226Z ```python
2025-08-19T20:23:14.7492397Z def build_asyncpg_dsn() -> str
2025-08-19T20:23:14.7492599Z ```
2025-08-19T20:23:14.7492683Z 
2025-08-19T20:23:14.7492807Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T20:23:14.7493025Z 
2025-08-19T20:23:14.7493150Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T20:23:14.7493465Z 
2025-08-19T20:23:14.7493541Z #### refresh\_mvs
2025-08-19T20:23:14.7493649Z 
2025-08-19T20:23:14.7493711Z ```python
2025-08-19T20:23:14.7493911Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T20:23:14.7494156Z ```
2025-08-19T20:23:14.7494245Z 
2025-08-19T20:23:14.7494381Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T20:23:14.7494593Z 
2025-08-19T20:23:14.7494692Z <a id="price_importer.services_common"></a>
2025-08-19T20:23:14.7494860Z 
2025-08-19T20:23:14.7494944Z # price\_importer.services\_common
2025-08-19T20:23:14.7495093Z 
2025-08-19T20:23:14.7495203Z <a id="price_importer.services_common.base"></a>
2025-08-19T20:23:14.7495508Z 
2025-08-19T20:23:14.7495595Z # price\_importer.services\_common.base
2025-08-19T20:23:14.7495760Z 
2025-08-19T20:23:14.7495848Z <a id="price_importer.normaliser"></a>
2025-08-19T20:23:14.7496006Z 
2025-08-19T20:23:14.7496092Z # price\_importer.normaliser
2025-08-19T20:23:14.7496230Z 
2025-08-19T20:23:14.7496332Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T20:23:14.7496512Z 
2025-08-19T20:23:14.7496603Z # price\_importer.common.models\_vendor
2025-08-19T20:23:14.7496763Z 
2025-08-19T20:23:14.7496851Z <a id="price_importer.common.db_url"></a>
2025-08-19T20:23:14.7497021Z 
2025-08-19T20:23:14.7497104Z # price\_importer.common.db\_url
2025-08-19T20:23:14.7497248Z 
2025-08-19T20:23:14.7497356Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T20:23:14.7497540Z 
2025-08-19T20:23:14.7497604Z #### make\_dsn
2025-08-19T20:23:14.7497702Z 
2025-08-19T20:23:14.7497769Z ```python
2025-08-19T20:23:14.7497937Z def make_dsn(async_: bool = False) -> str
2025-08-19T20:23:14.7498170Z ```
2025-08-19T20:23:14.7498249Z 
2025-08-19T20:23:14.7498366Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T20:23:14.7498566Z 
2025-08-19T20:23:14.7498671Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T20:23:14.7498854Z 
2025-08-19T20:23:14.7498924Z #### build\_url
2025-08-19T20:23:14.7499024Z 
2025-08-19T20:23:14.7499083Z ```python
2025-08-19T20:23:14.7499261Z def build_url(async_: bool = False) -> str
2025-08-19T20:23:14.7499478Z ```
2025-08-19T20:23:14.7499566Z 
2025-08-19T20:23:14.7499685Z Return Postgres DSN built from environment variables.
2025-08-19T20:23:14.7499880Z 
2025-08-19T20:23:14.7499974Z <a id="price_importer.common"></a>
2025-08-19T20:23:14.7500123Z 
2025-08-19T20:23:14.7500199Z # price\_importer.common
2025-08-19T20:23:14.7500328Z 
2025-08-19T20:23:14.7500422Z <a id="price_importer.common.base"></a>
2025-08-19T20:23:14.7500582Z 
2025-08-19T20:23:14.7500665Z # price\_importer.common.base
2025-08-19T20:23:14.7500928Z 
2025-08-19T20:23:14.7501031Z <a id="price_importer.tests.conftest"></a>
2025-08-19T20:23:14.7501200Z 
2025-08-19T20:23:14.7501284Z # price\_importer.tests.conftest
2025-08-19T20:23:14.7501432Z 
2025-08-19T20:23:14.7501530Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T20:23:14.7501702Z 
2025-08-19T20:23:14.7501797Z # price\_importer.tests.test\_reader
2025-08-19T20:23:14.7501956Z 
2025-08-19T20:23:14.7502055Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T20:23:14.7502233Z 
2025-08-19T20:23:14.7502320Z # price\_importer.tests.test\_imports
2025-08-19T20:23:14.7502474Z 
2025-08-19T20:23:14.7502569Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T20:23:14.7502745Z 
2025-08-19T20:23:14.7502829Z # price\_importer.tests.test\_smoke
2025-08-19T20:23:14.7502983Z 
2025-08-19T20:23:14.7503091Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T20:23:14.7503308Z 
2025-08-19T20:23:14.7503531Z # price\_importer.tests.test\_normaliser
2025-08-19T20:23:14.7503702Z 
2025-08-19T20:23:14.7503792Z <a id="price_importer.tests"></a>
2025-08-19T20:23:14.7503944Z 
2025-08-19T20:23:14.7504024Z # price\_importer.tests
2025-08-19T20:23:14.7504147Z 
2025-08-19T20:23:14.7504232Z <a id="price_importer.reader"></a>
2025-08-19T20:23:14.7504382Z 
2025-08-19T20:23:14.7504465Z # price\_importer.reader
2025-08-19T20:23:14.7504589Z 
2025-08-19T20:23:14.7504679Z <a id="price_importer.repository"></a>
2025-08-19T20:23:14.7504843Z 
2025-08-19T20:23:14.7504925Z # price\_importer.repository
2025-08-19T20:23:14.7505063Z 
2025-08-19T20:23:14.7505146Z <a id="price_importer.import"></a>
2025-08-19T20:23:14.7505302Z 
2025-08-19T20:23:14.7505378Z # price\_importer.import
2025-08-19T20:23:14.7505503Z 
2025-08-19T20:23:14.7505580Z <a id="fees_h10"></a>
2025-08-19T20:23:14.7505692Z 
2025-08-19T20:23:14.7505757Z # fees\_h10
2025-08-19T20:23:14.7505858Z 
2025-08-19T20:23:14.7505932Z <a id="fees_h10.worker"></a>
2025-08-19T20:23:14.7506061Z 
2025-08-19T20:23:14.7506128Z # fees\_h10.worker
2025-08-19T20:23:14.7506248Z 
2025-08-19T20:23:14.7506466Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T20:23:14.7506635Z 
2025-08-19T20:23:14.7506713Z #### list\_active\_asins
2025-08-19T20:23:14.7506832Z 
2025-08-19T20:23:14.7506894Z ```python
2025-08-19T20:23:14.7507065Z def list_active_asins() -> list[str]
2025-08-19T20:23:14.7507271Z ```
2025-08-19T20:23:14.7507358Z 
2025-08-19T20:23:14.7507469Z Return known ASINs or an empty list if unavailable.
2025-08-19T20:23:14.7507657Z 
2025-08-19T20:23:14.7507742Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T20:23:14.7507893Z 
2025-08-19T20:23:14.7507973Z # fees\_h10.tests.test\_smoke
2025-08-19T20:23:14.7508107Z 
2025-08-19T20:23:14.7508188Z <a id="fees_h10.tests"></a>
2025-08-19T20:23:14.7508317Z 
2025-08-19T20:23:14.7508382Z # fees\_h10.tests
2025-08-19T20:23:14.7508494Z 
2025-08-19T20:23:14.7508567Z <a id="fees_h10.client"></a>
2025-08-19T20:23:14.7508695Z 
2025-08-19T20:23:14.7508759Z # fees\_h10.client
2025-08-19T20:23:14.7508864Z 
2025-08-19T20:23:14.7508948Z <a id="fees_h10.repository"></a>
2025-08-19T20:23:14.7509095Z 
2025-08-19T20:23:14.7509170Z # fees\_h10.repository
2025-08-19T20:23:14.7509285Z 
2025-08-19T20:23:14.7509386Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T20:23:14.7509568Z 
2025-08-19T20:23:14.7509639Z #### upsert\_fees\_raw
2025-08-19T20:23:14.7509750Z 
2025-08-19T20:23:14.7509813Z ```python
2025-08-19T20:23:14.7509987Z def upsert_fees_raw(engine: Engine,
2025-08-19T20:23:14.7510227Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T20:23:14.7510458Z                     *,
2025-08-19T20:23:14.7510682Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T20:23:14.7510939Z ```
2025-08-19T20:23:14.7511026Z 
2025-08-19T20:23:14.7511103Z Idempotent upsert for fees.
2025-08-19T20:23:14.7511233Z 
2025-08-19T20:23:14.7511384Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T20:23:14.7511724Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T20:23:14.7512143Z Only updates when one of the mutable fields changes.
2025-08-19T20:23:14.7512339Z 
2025-08-19T20:23:14.7512411Z <a id="emailer"></a>
2025-08-19T20:23:14.7512521Z 
2025-08-19T20:23:14.7512588Z # emailer
2025-08-19T20:23:14.7512675Z 
2025-08-19T20:23:14.7512775Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T20:23:14.7512954Z 
2025-08-19T20:23:14.7513042Z # emailer.tests.test\_import\_emailer
2025-08-19T20:23:14.7513198Z 
2025-08-19T20:23:14.7513283Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T20:23:14.7513546Z 
2025-08-19T20:23:14.7513625Z # emailer.tests.test\_smoke
2025-08-19T20:23:14.7513755Z 
2025-08-19T20:23:14.7513837Z <a id="emailer.tests"></a>
2025-08-19T20:23:14.7513965Z 
2025-08-19T20:23:14.7514031Z # emailer.tests
2025-08-19T20:23:14.7514139Z 
2025-08-19T20:23:14.7514223Z <a id="emailer.generate_body"></a>
2025-08-19T20:23:14.7514372Z 
2025-08-19T20:23:14.7514447Z # emailer.generate\_body
2025-08-19T20:23:14.7514576Z 
2025-08-19T20:23:14.7514647Z <a id="llm_server"></a>
2025-08-19T20:23:14.7514768Z 
2025-08-19T20:23:14.7514843Z # llm\_server
2025-08-19T20:23:14.7514939Z 
2025-08-19T20:23:14.7515021Z <a id="llm_server.app"></a>
2025-08-19T20:23:14.7515155Z 
2025-08-19T20:23:14.7515222Z # llm\_server.app
2025-08-19T20:23:14.7515326Z 
