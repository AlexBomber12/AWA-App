2025-08-19T15:45:08.9279330Z ##[group]Run pydoc-markdown
2025-08-19T15:45:08.9279688Z [36;1mpydoc-markdown[0m
2025-08-19T15:45:08.9320522Z shell: /usr/bin/bash -e {0}
2025-08-19T15:45:08.9320797Z env:
2025-08-19T15:45:08.9321083Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:45:08.9321595Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T15:45:08.9322080Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:45:08.9322824Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:45:08.9323259Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:45:08.9323737Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T15:45:08.9324140Z ##[endgroup]
2025-08-19T15:45:09.2730999Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T15:45:09.2731660Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T15:45:09.2732118Z In "pydoc-markdown.yml"
2025-08-19T15:45:09.2732707Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T15:45:09.2733385Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T15:45:09.2734111Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T15:45:09.2734610Z 
2025-08-19T15:45:09.6139528Z <a id="__init__"></a>
2025-08-19T15:45:09.6140100Z 
2025-08-19T15:45:09.6140265Z # \_\_init\_\_
2025-08-19T15:45:09.6140513Z 
2025-08-19T15:45:09.6140691Z <a id="api"></a>
2025-08-19T15:45:09.6140959Z 
2025-08-19T15:45:09.6141119Z # api
2025-08-19T15:45:09.6141360Z 
2025-08-19T15:45:09.6141577Z <a id="api.errors"></a>
2025-08-19T15:45:09.6141916Z 
2025-08-19T15:45:09.6142086Z # api.errors
2025-08-19T15:45:09.6142661Z 
2025-08-19T15:45:09.6142892Z <a id="api.sentry_config"></a>
2025-08-19T15:45:09.6143316Z 
2025-08-19T15:45:09.6143501Z # api.sentry\_config
2025-08-19T15:45:09.6143902Z 
2025-08-19T15:45:09.6144193Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T15:45:09.6144770Z 
2025-08-19T15:45:09.6145033Z # api.tests.test\_stats\_contracts
2025-08-19T15:45:09.6145613Z 
2025-08-19T15:45:09.6145873Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T15:45:09.6146436Z 
2025-08-19T15:45:09.6146670Z # api.tests.test\_sentry\_scrub
2025-08-19T15:45:09.6146957Z 
2025-08-19T15:45:09.6147166Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T15:45:09.6147576Z 
2025-08-19T15:45:09.6147788Z # api.tests.test\_roi\_basic\_auth
2025-08-19T15:45:09.6148183Z 
2025-08-19T15:45:09.6148429Z <a id="api.tests.test_errors_json"></a>
2025-08-19T15:45:09.6148927Z 
2025-08-19T15:45:09.6149143Z # api.tests.test\_errors\_json
2025-08-19T15:45:09.6149481Z 
2025-08-19T15:45:09.6149617Z <a id="api.tests.test_llm"></a>
2025-08-19T15:45:09.6149840Z 
2025-08-19T15:45:09.6149954Z # api.tests.test\_llm
2025-08-19T15:45:09.6150140Z 
2025-08-19T15:45:09.6150285Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T15:45:09.6150544Z 
2025-08-19T15:45:09.6150665Z # api.tests.test\_roi\_filters
2025-08-19T15:45:09.6150889Z 
2025-08-19T15:45:09.6151027Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T15:45:09.6151657Z 
2025-08-19T15:45:09.6151790Z # api.tests.test\_sentry\_event
2025-08-19T15:45:09.6152015Z 
2025-08-19T15:45:09.6152212Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T15:45:09.6152791Z 
2025-08-19T15:45:09.6152922Z ## DummyTransport Objects
2025-08-19T15:45:09.6153127Z 
2025-08-19T15:45:09.6153230Z ```python
2025-08-19T15:45:09.6153499Z class DummyTransport()
2025-08-19T15:45:09.6153782Z ```
2025-08-19T15:45:09.6153921Z 
2025-08-19T15:45:09.6154195Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T15:45:09.6154606Z 
2025-08-19T15:45:09.6154726Z #### capture\_envelope
2025-08-19T15:45:09.6154908Z 
2025-08-19T15:45:09.6155009Z ```python
2025-08-19T15:45:09.6155287Z def capture_envelope(envelope)
2025-08-19T15:45:09.6155605Z ```
2025-08-19T15:45:09.6155740Z 
2025-08-19T15:45:09.6155935Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T15:45:09.6156266Z 
2025-08-19T15:45:09.6156398Z <a id="api.tests.test_cors"></a>
2025-08-19T15:45:09.6156871Z 
2025-08-19T15:45:09.6156987Z # api.tests.test\_cors
2025-08-19T15:45:09.6157168Z 
2025-08-19T15:45:09.6157272Z <a id="api.tests.test_imports"></a>
2025-08-19T15:45:09.6157458Z 
2025-08-19T15:45:09.6157550Z # api.tests.test\_imports
2025-08-19T15:45:09.6157709Z 
2025-08-19T15:45:09.6157812Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T15:45:09.6158003Z 
2025-08-19T15:45:09.6158097Z # api.tests.test\_rate\_limit
2025-08-19T15:45:09.6158269Z 
2025-08-19T15:45:09.6158382Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T15:45:09.6158587Z 
2025-08-19T15:45:09.6158668Z #### app
2025-08-19T15:45:09.6158771Z 
2025-08-19T15:45:09.6158846Z noqa: E402
2025-08-19T15:45:09.6158954Z 
2025-08-19T15:45:09.6159055Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T15:45:09.6159244Z 
2025-08-19T15:45:09.6159338Z # api.tests.test\_entrypoint
2025-08-19T15:45:09.6159507Z 
2025-08-19T15:45:09.6159606Z <a id="api.tests.test_health"></a>
2025-08-19T15:45:09.6159794Z 
2025-08-19T15:45:09.6159896Z # api.tests.test\_health
2025-08-19T15:45:09.6160045Z 
2025-08-19T15:45:09.6160143Z <a id="api.tests.test_score"></a>
2025-08-19T15:45:09.6160323Z 
2025-08-19T15:45:09.6160411Z # api.tests.test\_score
2025-08-19T15:45:09.6160554Z 
2025-08-19T15:45:09.6160648Z <a id="api.logging_config"></a>
2025-08-19T15:45:09.6160820Z 
2025-08-19T15:45:09.6160907Z # api.logging\_config
2025-08-19T15:45:09.6161046Z 
2025-08-19T15:45:09.6161149Z <a id="api.migrations.env"></a>
2025-08-19T15:45:09.6161320Z 
2025-08-19T15:45:09.6161408Z # api.migrations.env
2025-08-19T15:45:09.6161547Z 
2025-08-19T15:45:09.6161691Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T15:45:09.6161931Z 
2025-08-19T15:45:09.6162054Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T15:45:09.6162278Z 
2025-08-19T15:45:09.6162549Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T15:45:09.6162776Z 
2025-08-19T15:45:09.6162892Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T15:45:09.6163108Z 
2025-08-19T15:45:09.6163286Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T15:45:09.6163573Z 
2025-08-19T15:45:09.6163732Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T15:45:09.6163990Z 
2025-08-19T15:45:09.6164130Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T15:45:09.6164377Z 
2025-08-19T15:45:09.6164501Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T15:45:09.6164720Z 
2025-08-19T15:45:09.6164863Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T15:45:09.6165101Z 
2025-08-19T15:45:09.6165220Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T15:45:09.6165441Z 
2025-08-19T15:45:09.6165586Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T15:45:09.6165829Z 
2025-08-19T15:45:09.6165955Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T15:45:09.6166189Z 
2025-08-19T15:45:09.6166324Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T15:45:09.6166784Z 
2025-08-19T15:45:09.6166914Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T15:45:09.6167173Z 
2025-08-19T15:45:09.6167324Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T15:45:09.6167558Z 
2025-08-19T15:45:09.6167665Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T15:45:09.6167860Z 
2025-08-19T15:45:09.6168001Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T15:45:09.6168226Z 
2025-08-19T15:45:09.6168348Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T15:45:09.6168566Z 
2025-08-19T15:45:09.6168692Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T15:45:09.6168904Z 
2025-08-19T15:45:09.6169022Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T15:45:09.6169218Z 
2025-08-19T15:45:09.6169356Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T15:45:09.6169587Z 
2025-08-19T15:45:09.6169706Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T15:45:09.6170046Z 
2025-08-19T15:45:09.6170158Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T15:45:09.6170360Z 
2025-08-19T15:45:09.6170458Z # api.migrations.versions.0001\_baseline
2025-08-19T15:45:09.6170633Z 
2025-08-19T15:45:09.6170737Z <a id="api.migrations.versions"></a>
2025-08-19T15:45:09.6170902Z 
2025-08-19T15:45:09.6170986Z # api.migrations.versions
2025-08-19T15:45:09.6171128Z 
2025-08-19T15:45:09.6171209Z <a id="api.migrations"></a>
2025-08-19T15:45:09.6171347Z 
2025-08-19T15:45:09.6171419Z # api.migrations
2025-08-19T15:45:09.6171708Z 
2025-08-19T15:45:09.6171834Z <a id="api.db"></a>
2025-08-19T15:45:09.6172031Z 
2025-08-19T15:45:09.6172161Z # api.db
2025-08-19T15:45:09.6172483Z 
2025-08-19T15:45:09.6172641Z <a id="api.routes.score"></a>
2025-08-19T15:45:09.6172911Z 
2025-08-19T15:45:09.6173040Z # api.routes.score
2025-08-19T15:45:09.6173241Z 
2025-08-19T15:45:09.6173394Z <a id="api.routes.stats"></a>
2025-08-19T15:45:09.6173658Z 
2025-08-19T15:45:09.6173791Z # api.routes.stats
2025-08-19T15:45:09.6173978Z 
2025-08-19T15:45:09.6174067Z <a id="api.routes.roi"></a>
2025-08-19T15:45:09.6174210Z 
2025-08-19T15:45:09.6174285Z # api.routes.roi
2025-08-19T15:45:09.6174391Z 
2025-08-19T15:45:09.6174488Z <a id="api.routes.health"></a>
2025-08-19T15:45:09.6174631Z 
2025-08-19T15:45:09.6174706Z # api.routes.health
2025-08-19T15:45:09.6174823Z 
2025-08-19T15:45:09.6174917Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T15:45:09.6175092Z 
2025-08-19T15:45:09.6175170Z #### MAX\_SKEW
2025-08-19T15:45:09.6175270Z 
2025-08-19T15:45:09.6175334Z seconds
2025-08-19T15:45:09.6175422Z 
2025-08-19T15:45:09.6175523Z <a id="api.routes.health.health"></a>
2025-08-19T15:45:09.6175690Z 
2025-08-19T15:45:09.6175756Z #### health
2025-08-19T15:45:09.6175853Z 
2025-08-19T15:45:09.6175921Z ```python
2025-08-19T15:45:09.6176124Z @router.get("/health", include_in_schema=False)
2025-08-19T15:45:09.6176548Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T15:45:09.6176901Z ```
2025-08-19T15:45:09.6176994Z 
2025-08-19T15:45:09.6177119Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T15:45:09.6177321Z 
2025-08-19T15:45:09.6177416Z <a id="api.routes.repository"></a>
2025-08-19T15:45:09.6177575Z 
2025-08-19T15:45:09.6177654Z # api.routes.repository
2025-08-19T15:45:09.6177785Z 
2025-08-19T15:45:09.6177859Z <a id="api.routes"></a>
2025-08-19T15:45:09.6177980Z 
2025-08-19T15:45:09.6178050Z # api.routes
2025-08-19T15:45:09.6178147Z 
2025-08-19T15:45:09.6178226Z <a id="api.models.fee"></a>
2025-08-19T15:45:09.6178357Z 
2025-08-19T15:45:09.6178432Z # api.models.fee
2025-08-19T15:45:09.6178534Z 
2025-08-19T15:45:09.6178605Z <a id="api.models"></a>
2025-08-19T15:45:09.6178724Z 
2025-08-19T15:45:09.6178787Z # api.models
2025-08-19T15:45:09.6178881Z 
2025-08-19T15:45:09.6178962Z <a id="api.roi_repository"></a>
2025-08-19T15:45:09.6179109Z 
2025-08-19T15:45:09.6179181Z # api.roi\_repository
2025-08-19T15:45:09.6179299Z 
2025-08-19T15:45:09.6179378Z <a id="api.main"></a>
2025-08-19T15:45:09.6179674Z 
2025-08-19T15:45:09.6179742Z # api.main
2025-08-19T15:45:09.6179859Z 
2025-08-19T15:45:09.6179952Z <a id="api.main.ready"></a>
2025-08-19T15:45:09.6180083Z 
2025-08-19T15:45:09.6180145Z #### ready
2025-08-19T15:45:09.6180239Z 
2025-08-19T15:45:09.6180302Z ```python
2025-08-19T15:45:09.6180567Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T15:45:09.6180997Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T15:45:09.6181345Z                                                                       str]
2025-08-19T15:45:09.6181571Z ```
2025-08-19T15:45:09.6181661Z 
2025-08-19T15:45:09.6181757Z Return 200 only when migrations are at head.
2025-08-19T15:45:09.6181929Z 
2025-08-19T15:45:09.6182005Z <a id="api.config"></a>
2025-08-19T15:45:09.6182128Z 
2025-08-19T15:45:09.6182195Z # api.config
2025-08-19T15:45:09.6182290Z 
2025-08-19T15:45:09.6182539Z <a id="api.security"></a>
2025-08-19T15:45:09.6182666Z 
2025-08-19T15:45:09.6182853Z # api.security
2025-08-19T15:45:09.6182953Z 
2025-08-19T15:45:09.6183024Z <a id="etl"></a>
2025-08-19T15:45:09.6183124Z 
2025-08-19T15:45:09.6183186Z # etl
2025-08-19T15:45:09.6183278Z 
2025-08-19T15:45:09.6183358Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T15:45:09.6183503Z 
2025-08-19T15:45:09.6183585Z # etl.fba\_fee\_ingestor
2025-08-19T15:45:09.6183708Z 
2025-08-19T15:45:09.6183790Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T15:45:09.6183933Z 
2025-08-19T15:45:09.6184014Z # etl.sp\_fees\_ingestor
2025-08-19T15:45:09.6184133Z 
2025-08-19T15:45:09.6184212Z <a id="etl.keepa_ingestor"></a>
2025-08-19T15:45:09.6184353Z 
2025-08-19T15:45:09.6184425Z # etl.keepa\_ingestor
2025-08-19T15:45:09.6184538Z 
2025-08-19T15:45:09.6184607Z <a id="etl.db"></a>
2025-08-19T15:45:09.6184722Z 
2025-08-19T15:45:09.6184785Z # etl.db
2025-08-19T15:45:09.6184873Z 
2025-08-19T15:45:09.6184961Z <a id="etl.dialects.schemas"></a>
2025-08-19T15:45:09.6185107Z 
2025-08-19T15:45:09.6185181Z # etl.dialects.schemas
2025-08-19T15:45:09.6185312Z 
2025-08-19T15:45:09.6185419Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T15:45:09.6185605Z 
2025-08-19T15:45:09.6185699Z # etl.dialects.amazon\_reimbursements
2025-08-19T15:45:09.6185858Z 
2025-08-19T15:45:09.6185953Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T15:45:09.6186120Z 
2025-08-19T15:45:09.6186210Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T15:45:09.6186362Z 
2025-08-19T15:45:09.6186448Z <a id="etl.dialects.test_generic"></a>
2025-08-19T15:45:09.6186610Z 
2025-08-19T15:45:09.6186689Z # etl.dialects.test\_generic
2025-08-19T15:45:09.6186823Z 
2025-08-19T15:45:09.6186917Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T15:45:09.6187081Z 
2025-08-19T15:45:09.6187161Z # etl.dialects.amazon\_returns
2025-08-19T15:45:09.6187298Z 
2025-08-19T15:45:09.6187398Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T15:45:09.6187564Z 
2025-08-19T15:45:09.6187647Z # etl.dialects.amazon\_fee\_preview
2025-08-19T15:45:09.6187803Z 
2025-08-19T15:45:09.6187911Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T15:45:09.6188098Z 
2025-08-19T15:45:09.6188193Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T15:45:09.6188354Z 
2025-08-19T15:45:09.6188447Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T15:45:09.6188614Z 
2025-08-19T15:45:09.6188707Z # etl.dialects.amazon\_settlements
2025-08-19T15:45:09.6188855Z 
2025-08-19T15:45:09.6188931Z <a id="etl.dialects"></a>
2025-08-19T15:45:09.6189061Z 
2025-08-19T15:45:09.6189127Z # etl.dialects
2025-08-19T15:45:09.6189225Z 
2025-08-19T15:45:09.6189297Z <a id="ingest"></a>
2025-08-19T15:45:09.6189401Z 
2025-08-19T15:45:09.6189463Z # ingest
2025-08-19T15:45:09.6189547Z 
2025-08-19T15:45:09.6189635Z <a id="ingest.maintenance"></a>
2025-08-19T15:45:09.6189773Z 
2025-08-19T15:45:09.6189846Z # ingest.maintenance
2025-08-19T15:45:09.6189962Z 
2025-08-19T15:45:09.6190041Z <a id="ingest.copy_loader"></a>
2025-08-19T15:45:09.6190175Z 
2025-08-19T15:45:09.6190246Z # ingest.copy\_loader
2025-08-19T15:45:09.6190369Z 
2025-08-19T15:45:09.6190586Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T15:45:09.6190763Z 
2025-08-19T15:45:09.6190844Z #### copy\_df\_via\_temp
2025-08-19T15:45:09.6190962Z 
2025-08-19T15:45:09.6191028Z ```python
2025-08-19T15:45:09.6191321Z def copy_df_via_temp(engine: Engine,
2025-08-19T15:45:09.6191706Z                      df: pd.DataFrame,
2025-08-19T15:45:09.6192018Z                      target_table: str,
2025-08-19T15:45:09.6192239Z                      *,
2025-08-19T15:45:09.6192578Z                      target_schema: Optional[str] = None,
2025-08-19T15:45:09.6192847Z                      columns: Sequence[str],
2025-08-19T15:45:09.6193119Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T15:45:09.6193405Z                      analyze_after: bool = False,
2025-08-19T15:45:09.6193668Z                      connection: Any | None = None) -> int
2025-08-19T15:45:09.6193908Z ```
2025-08-19T15:45:09.6193993Z 
2025-08-19T15:45:09.6194149Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T15:45:09.6194828Z 
2025-08-19T15:45:09.6194974Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T15:45:09.6195246Z 
2025-08-19T15:45:09.6195444Z # ingest.tests.test\_smoke
2025-08-19T15:45:09.6195690Z 
2025-08-19T15:45:09.6195828Z <a id="ingest.tests"></a>
2025-08-19T15:45:09.6196071Z 
2025-08-19T15:45:09.6196200Z # ingest.tests
2025-08-19T15:45:09.6196386Z 
2025-08-19T15:45:09.6196483Z <a id="ingest.upload_router"></a>
2025-08-19T15:45:09.6196639Z 
2025-08-19T15:45:09.6196717Z # ingest.upload\_router
2025-08-19T15:45:09.6196848Z 
2025-08-19T15:45:09.6196933Z <a id="ingest.email_watcher"></a>
2025-08-19T15:45:09.6197078Z 
2025-08-19T15:45:09.6197151Z # ingest.email\_watcher
2025-08-19T15:45:09.6197273Z 
2025-08-19T15:45:09.6197362Z <a id="ingest.email_watcher.main"></a>
2025-08-19T15:45:09.6197564Z 
2025-08-19T15:45:09.6197637Z #### main
2025-08-19T15:45:09.6197732Z 
2025-08-19T15:45:09.6197798Z ```python
2025-08-19T15:45:09.6197973Z def main() -> dict[str, str]
2025-08-19T15:45:09.6198187Z ```
2025-08-19T15:45:09.6198277Z 
2025-08-19T15:45:09.6198424Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T15:45:09.6198645Z 
2025-08-19T15:45:09.6198773Z Returns {"status": "success"} when processing completes.
2025-08-19T15:45:09.6198984Z 
2025-08-19T15:45:09.6199060Z <a id="ingest.tasks"></a>
2025-08-19T15:45:09.6199186Z 
2025-08-19T15:45:09.6199260Z # ingest.tasks
2025-08-19T15:45:09.6199363Z 
2025-08-19T15:45:09.6199459Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T15:45:09.6199639Z 
2025-08-19T15:45:09.6199711Z #### task\_import\_file
2025-08-19T15:45:09.6199827Z 
2025-08-19T15:45:09.6199890Z ```python
2025-08-19T15:45:09.6200099Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T15:45:09.6200400Z def task_import_file(self: Any,
2025-08-19T15:45:09.6200614Z                      uri: str,
2025-08-19T15:45:09.6200828Z                      report_type: str | None = None,
2025-08-19T15:45:09.6201094Z                      force: bool = False) -> dict[str, Any]
2025-08-19T15:45:09.6201336Z ```
2025-08-19T15:45:09.6201426Z 
2025-08-19T15:45:09.6201554Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T15:45:09.6201759Z 
2025-08-19T15:45:09.6201848Z <a id="ingest.celery_app"></a>
2025-08-19T15:45:09.6201985Z 
2025-08-19T15:45:09.6202057Z # ingest.celery\_app
2025-08-19T15:45:09.6202169Z 
2025-08-19T15:45:09.6202259Z <a id="ingest.ingest_router"></a>
2025-08-19T15:45:09.6202540Z 
2025-08-19T15:45:09.6202613Z # ingest.ingest\_router
2025-08-19T15:45:09.6202740Z 
2025-08-19T15:45:09.6202816Z <a id="logistics_etl"></a>
2025-08-19T15:45:09.6202941Z 
2025-08-19T15:45:09.6203010Z # logistics\_etl
2025-08-19T15:45:09.6203121Z 
2025-08-19T15:45:09.6203197Z Daily logistics ETL job.
2025-08-19T15:45:09.6203319Z 
2025-08-19T15:45:09.6203406Z <a id="logistics_etl.__main__"></a>
2025-08-19T15:45:09.6203555Z 
2025-08-19T15:45:09.6203633Z # logistics\_etl.\_\_main\_\_
2025-08-19T15:45:09.6203773Z 
2025-08-19T15:45:09.6204310Z <a id="logistics_etl.dsn"></a>
2025-08-19T15:45:09.6204468Z 
2025-08-19T15:45:09.6204542Z # logistics\_etl.dsn
2025-08-19T15:45:09.6204666Z 
2025-08-19T15:45:09.6204787Z Local DSN builder to avoid cross-service dependency.
2025-08-19T15:45:09.6204991Z 
2025-08-19T15:45:09.6205090Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T15:45:09.6205259Z 
2025-08-19T15:45:09.6205324Z #### build\_dsn
2025-08-19T15:45:09.6205433Z 
2025-08-19T15:45:09.6205498Z ```python
2025-08-19T15:45:09.6205675Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:45:09.6205906Z ```
2025-08-19T15:45:09.6205988Z 
2025-08-19T15:45:09.6206129Z Return a Postgres DSN assembled from environment variables.
2025-08-19T15:45:09.6206358Z 
2025-08-19T15:45:09.6206512Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T15:45:09.6206914Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T15:45:09.6207253Z error when any required variable is missing.
2025-08-19T15:45:09.6207433Z 
2025-08-19T15:45:09.6207654Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T15:45:09.6207828Z 
2025-08-19T15:45:09.6207914Z # logistics\_etl.tests.conftest
2025-08-19T15:45:09.6208066Z 
2025-08-19T15:45:09.6208170Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T15:45:09.6208352Z 
2025-08-19T15:45:09.6208449Z # logistics\_etl.tests.test\_repository
2025-08-19T15:45:09.6208612Z 
2025-08-19T15:45:09.6208704Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T15:45:09.6208879Z 
2025-08-19T15:45:09.6208962Z # logistics\_etl.tests.test\_cron
2025-08-19T15:45:09.6209111Z 
2025-08-19T15:45:09.6209209Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T15:45:09.6209389Z 
2025-08-19T15:45:09.6209477Z # logistics\_etl.tests.test\_imports
2025-08-19T15:45:09.6209631Z 
2025-08-19T15:45:09.6209729Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T15:45:09.6209903Z 
2025-08-19T15:45:09.6209988Z # logistics\_etl.tests.test\_smoke
2025-08-19T15:45:09.6210144Z 
2025-08-19T15:45:09.6210241Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T15:45:09.6210426Z 
2025-08-19T15:45:09.6210512Z # logistics\_etl.tests.test\_client
2025-08-19T15:45:09.6210673Z 
2025-08-19T15:45:09.6210756Z <a id="logistics_etl.tests"></a>
2025-08-19T15:45:09.6210900Z 
2025-08-19T15:45:09.6210980Z # logistics\_etl.tests
2025-08-19T15:45:09.6211097Z 
2025-08-19T15:45:09.6211178Z <a id="logistics_etl.flow"></a>
2025-08-19T15:45:09.6211320Z 
2025-08-19T15:45:09.6211394Z # logistics\_etl.flow
2025-08-19T15:45:09.6211509Z 
2025-08-19T15:45:09.6211594Z <a id="logistics_etl.client"></a>
2025-08-19T15:45:09.6211746Z 
2025-08-19T15:45:09.6211819Z # logistics\_etl.client
2025-08-19T15:45:09.6211938Z 
2025-08-19T15:45:09.6212020Z <a id="logistics_etl.cron"></a>
2025-08-19T15:45:09.6212154Z 
2025-08-19T15:45:09.6212225Z # logistics\_etl.cron
2025-08-19T15:45:09.6212486Z 
2025-08-19T15:45:09.6212566Z <a id="logistics_etl.db"></a>
2025-08-19T15:45:09.6212704Z 
2025-08-19T15:45:09.6212782Z # logistics\_etl.db
2025-08-19T15:45:09.6212895Z 
2025-08-19T15:45:09.6212988Z <a id="logistics_etl.repository"></a>
2025-08-19T15:45:09.6213155Z 
2025-08-19T15:45:09.6243854Z # logistics\_etl.repository
2025-08-19T15:45:09.6244156Z 
2025-08-19T15:45:09.6244373Z <a id="alert_bot"></a>
2025-08-19T15:45:09.6244617Z 
2025-08-19T15:45:09.6244757Z # alert\_bot
2025-08-19T15:45:09.6244958Z 
2025-08-19T15:45:09.6245137Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T15:45:09.6245484Z 
2025-08-19T15:45:09.6245650Z # alert\_bot.tests.test\_smoke
2025-08-19T15:45:09.6245936Z 
2025-08-19T15:45:09.6246042Z <a id="alert_bot.tests"></a>
2025-08-19T15:45:09.6246211Z 
2025-08-19T15:45:09.6246296Z # alert\_bot.tests
2025-08-19T15:45:09.6246428Z 
2025-08-19T15:45:09.6246542Z <a id="alert_bot.alert_bot"></a>
2025-08-19T15:45:09.6246721Z 
2025-08-19T15:45:09.6246810Z # alert\_bot.alert\_bot
2025-08-19T15:45:09.6246959Z 
2025-08-19T15:45:09.6247052Z <a id="alert_bot.rules"></a>
2025-08-19T15:45:09.6247212Z 
2025-08-19T15:45:09.6247293Z # alert\_bot.rules
2025-08-19T15:45:09.6247608Z 
2025-08-19T15:45:09.6247693Z <a id="common"></a>
2025-08-19T15:45:09.6247827Z 
2025-08-19T15:45:09.6247912Z # common
2025-08-19T15:45:09.6248024Z 
2025-08-19T15:45:09.6248111Z <a id="common.dsn"></a>
2025-08-19T15:45:09.6248261Z 
2025-08-19T15:45:09.6248341Z # common.dsn
2025-08-19T15:45:09.6248458Z 
2025-08-19T15:45:09.6248561Z <a id="common.dsn.build_dsn"></a>
2025-08-19T15:45:09.6248750Z 
2025-08-19T15:45:09.6248831Z #### build\_dsn
2025-08-19T15:45:09.6248954Z 
2025-08-19T15:45:09.6249038Z ```python
2025-08-19T15:45:09.6249251Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:45:09.6249525Z ```
2025-08-19T15:45:09.6249631Z 
2025-08-19T15:45:09.6249780Z Return a Postgres DSN, validating required variables.
2025-08-19T15:45:09.6250040Z 
2025-08-19T15:45:09.6250267Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T15:45:09.6250806Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T15:45:09.6251312Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T15:45:09.6251893Z missing.
2025-08-19T15:45:09.6252003Z 
2025-08-19T15:45:09.6252107Z <a id="common.models_vendor"></a>
2025-08-19T15:45:09.6252488Z 
2025-08-19T15:45:09.6252595Z # common.models\_vendor
2025-08-19T15:45:09.6252741Z 
2025-08-19T15:45:09.6252853Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T15:45:09.6253067Z 
2025-08-19T15:45:09.6253150Z ## Vendor Objects
2025-08-19T15:45:09.6253280Z 
2025-08-19T15:45:09.6253366Z ```python
2025-08-19T15:45:09.6253556Z class Vendor(Base)
2025-08-19T15:45:09.6253766Z ```
2025-08-19T15:45:09.6253869Z 
2025-08-19T15:45:09.6253967Z Vendor of inventory items.
2025-08-19T15:45:09.6254127Z 
2025-08-19T15:45:09.6254262Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T15:45:09.6254484Z 
2025-08-19T15:45:09.6254575Z ## VendorPrice Objects
2025-08-19T15:45:09.6254722Z 
2025-08-19T15:45:09.6254801Z ```python
2025-08-19T15:45:09.6254997Z class VendorPrice(Base)
2025-08-19T15:45:09.6255226Z ```
2025-08-19T15:45:09.6255338Z 
2025-08-19T15:45:09.6255470Z Association table linking vendors to pricing.
2025-08-19T15:45:09.6255693Z 
2025-08-19T15:45:09.6255790Z <a id="common.db_url"></a>
2025-08-19T15:45:09.6255954Z 
2025-08-19T15:45:09.6256037Z # common.db\_url
2025-08-19T15:45:09.6256166Z 
2025-08-19T15:45:09.6256272Z <a id="common.db_url.build_url"></a>
2025-08-19T15:45:09.6256473Z 
2025-08-19T15:45:09.6256552Z #### build\_url
2025-08-19T15:45:09.6256675Z 
2025-08-19T15:45:09.6256760Z ```python
2025-08-19T15:45:09.6256974Z def build_url(async_: bool = True) -> str
2025-08-19T15:45:09.6257239Z ```
2025-08-19T15:45:09.6257320Z 
2025-08-19T15:45:09.6257418Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:45:09.6257599Z 
2025-08-19T15:45:09.6257678Z <a id="common.keepa"></a>
2025-08-19T15:45:09.6257806Z 
2025-08-19T15:45:09.6257875Z # common.keepa
2025-08-19T15:45:09.6257984Z 
2025-08-19T15:45:09.6258058Z <a id="common.llm"></a>
2025-08-19T15:45:09.6258174Z 
2025-08-19T15:45:09.6258247Z # common.llm
2025-08-19T15:45:09.6258352Z 
2025-08-19T15:45:09.6258431Z <a id="common.settings"></a>
2025-08-19T15:45:09.6258572Z 
2025-08-19T15:45:09.6258641Z # common.settings
2025-08-19T15:45:09.6258747Z 
2025-08-19T15:45:09.6258818Z <a id="common.db"></a>
2025-08-19T15:45:09.6258941Z 
2025-08-19T15:45:09.6259006Z # common.db
2025-08-19T15:45:09.6259098Z 
2025-08-19T15:45:09.6259197Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T15:45:09.6259368Z 
2025-08-19T15:45:09.6259445Z #### build\_sqlalchemy\_url
2025-08-19T15:45:09.6259574Z 
2025-08-19T15:45:09.6259641Z ```python
2025-08-19T15:45:09.6259806Z def build_sqlalchemy_url() -> str
2025-08-19T15:45:09.6260018Z ```
2025-08-19T15:45:09.6260100Z 
2025-08-19T15:45:09.6260194Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:45:09.6260375Z 
2025-08-19T15:45:09.6260463Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T15:45:09.6260630Z 
2025-08-19T15:45:09.6260709Z #### build\_asyncpg\_dsn
2025-08-19T15:45:09.6260833Z 
2025-08-19T15:45:09.6260904Z ```python
2025-08-19T15:45:09.6261202Z def build_asyncpg_dsn() -> str
2025-08-19T15:45:09.6261401Z ```
2025-08-19T15:45:09.6261486Z 
2025-08-19T15:45:09.6261613Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:45:09.6261827Z 
2025-08-19T15:45:09.6261912Z <a id="common.db.refresh_mvs"></a>
2025-08-19T15:45:09.6262069Z 
2025-08-19T15:45:09.6262135Z #### refresh\_mvs
2025-08-19T15:45:09.6262238Z 
2025-08-19T15:45:09.6262408Z ```python
2025-08-19T15:45:09.6262600Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:45:09.6262854Z ```
2025-08-19T15:45:09.6262937Z 
2025-08-19T15:45:09.6263074Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:45:09.6263298Z 
2025-08-19T15:45:09.6263375Z <a id="common.config"></a>
2025-08-19T15:45:09.6263504Z 
2025-08-19T15:45:09.6263580Z # common.config
2025-08-19T15:45:09.6263682Z 
2025-08-19T15:45:09.6263756Z <a id="common.base"></a>
2025-08-19T15:45:09.6263877Z 
2025-08-19T15:45:09.6263949Z # common.base
2025-08-19T15:45:09.6264163Z 
2025-08-19T15:45:09.6264246Z <a id="common.base.Base"></a>
2025-08-19T15:45:09.6264388Z 
2025-08-19T15:45:09.6264456Z ## Base Objects
2025-08-19T15:45:09.6264556Z 
2025-08-19T15:45:09.6264620Z ```python
2025-08-19T15:45:09.6264793Z class Base(DeclarativeBase)
2025-08-19T15:45:09.6264992Z ```
2025-08-19T15:45:09.6265072Z 
2025-08-19T15:45:09.6265154Z Base class for SQLAlchemy models.
2025-08-19T15:45:09.6265301Z 
2025-08-19T15:45:09.6265380Z <a id="repricer"></a>
2025-08-19T15:45:09.6265495Z 
2025-08-19T15:45:09.6265560Z # repricer
2025-08-19T15:45:09.6265658Z 
2025-08-19T15:45:09.6265746Z <a id="repricer.app.schemas"></a>
2025-08-19T15:45:09.6265896Z 
2025-08-19T15:45:09.6265974Z # repricer.app.schemas
2025-08-19T15:45:09.6266104Z 
2025-08-19T15:45:09.6266188Z <a id="repricer.app.deps"></a>
2025-08-19T15:45:09.6266330Z 
2025-08-19T15:45:09.6266412Z # repricer.app.deps
2025-08-19T15:45:09.6266524Z 
2025-08-19T15:45:09.6266631Z Placeholder module for Keepa / SP-API clients.
2025-08-19T15:45:09.6266831Z 
2025-08-19T15:45:09.6266920Z <a id="repricer.app.logic"></a>
2025-08-19T15:45:09.6267064Z 
2025-08-19T15:45:09.6267139Z # repricer.app.logic
2025-08-19T15:45:09.6267262Z 
2025-08-19T15:45:09.6267359Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T15:45:09.6267533Z 
2025-08-19T15:45:09.6267604Z #### MIN\_MARGIN
2025-08-19T15:45:09.6267705Z 
2025-08-19T15:45:09.6267771Z 15 % ROI
2025-08-19T15:45:09.6267866Z 
2025-08-19T15:45:09.6267970Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T15:45:09.6268148Z 
2025-08-19T15:45:09.6268218Z #### compute\_price
2025-08-19T15:45:09.6268332Z 
2025-08-19T15:45:09.6268397Z ```python
2025-08-19T15:45:09.6268650Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T15:45:09.6268947Z ```
2025-08-19T15:45:09.6269031Z 
2025-08-19T15:45:09.6269148Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T15:45:09.6269428Z Replace with real competitive logic later.
2025-08-19T15:45:09.6269604Z 
2025-08-19T15:45:09.6269686Z <a id="repricer.app.main"></a>
2025-08-19T15:45:09.6269837Z 
2025-08-19T15:45:09.6269909Z # repricer.app.main
2025-08-19T15:45:09.6270024Z 
2025-08-19T15:45:09.6270101Z <a id="repricer.app"></a>
2025-08-19T15:45:09.6270229Z 
2025-08-19T15:45:09.6270303Z # repricer.app
2025-08-19T15:45:09.6270402Z 
2025-08-19T15:45:09.6270492Z <a id="repricer.tests.test_imports"></a>
2025-08-19T15:45:09.6270666Z 
2025-08-19T15:45:09.6270746Z # repricer.tests.test\_imports
2025-08-19T15:45:09.6270883Z 
2025-08-19T15:45:09.6270969Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T15:45:09.6271132Z 
2025-08-19T15:45:09.6271213Z # repricer.tests.test\_smoke
2025-08-19T15:45:09.6271347Z 
2025-08-19T15:45:09.6271430Z <a id="repricer.tests"></a>
2025-08-19T15:45:09.6271562Z 
2025-08-19T15:45:09.6271630Z # repricer.tests
2025-08-19T15:45:09.6271734Z 
2025-08-19T15:45:09.6271807Z <a id="db"></a>
2025-08-19T15:45:09.6271906Z 
2025-08-19T15:45:09.6271966Z # db
2025-08-19T15:45:09.6272058Z 
2025-08-19T15:45:09.6272135Z <a id="db.utils.views"></a>
2025-08-19T15:45:09.6272495Z 
2025-08-19T15:45:09.6272572Z # db.utils.views
2025-08-19T15:45:09.6272674Z 
2025-08-19T15:45:09.6272765Z <a id="db.utils.views.replace_view"></a>
2025-08-19T15:45:09.6272930Z 
2025-08-19T15:45:09.6273006Z #### replace\_view
2025-08-19T15:45:09.6273109Z 
2025-08-19T15:45:09.6273173Z ```python
2025-08-19T15:45:09.6273369Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T15:45:09.6273611Z ```
2025-08-19T15:45:09.6273698Z 
2025-08-19T15:45:09.6273786Z Drop and recreate a SQL view atomically.
2025-08-19T15:45:09.6273947Z 
2025-08-19T15:45:09.6274027Z <a id="db.utils"></a>
2025-08-19T15:45:09.6274142Z 
2025-08-19T15:45:09.6274206Z # db.utils
2025-08-19T15:45:09.6274294Z 
2025-08-19T15:45:09.6274377Z <a id="price_importer"></a>
2025-08-19T15:45:09.6274504Z 
2025-08-19T15:45:09.6274573Z # price\_importer
2025-08-19T15:45:09.6274683Z 
2025-08-19T15:45:09.6274785Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T15:45:09.6274968Z 
2025-08-19T15:45:09.6275064Z # price\_importer.services\_common.dsn
2025-08-19T15:45:09.6275354Z 
2025-08-19T15:45:09.6275512Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T15:45:09.6275717Z 
2025-08-19T15:45:09.6275784Z #### build\_dsn
2025-08-19T15:45:09.6275888Z 
2025-08-19T15:45:09.6275953Z ```python
2025-08-19T15:45:09.6276126Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:45:09.6276354Z ```
2025-08-19T15:45:09.6276437Z 
2025-08-19T15:45:09.6276510Z Return safe DSN.
2025-08-19T15:45:09.6276617Z 
2025-08-19T15:45:09.6276981Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T15:45:09.6277189Z 
2025-08-19T15:45:09.6277320Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T15:45:09.6277526Z 
2025-08-19T15:45:09.6277636Z # price\_importer.services\_common.models\_vendor
2025-08-19T15:45:09.6277832Z 
2025-08-19T15:45:09.6277939Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T15:45:09.6278123Z 
2025-08-19T15:45:09.6278226Z # price\_importer.services\_common.db\_url
2025-08-19T15:45:09.6278418Z 
2025-08-19T15:45:09.6278549Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T15:45:09.6278759Z 
2025-08-19T15:45:09.6278835Z #### build\_url
2025-08-19T15:45:09.6278933Z 
2025-08-19T15:45:09.6278998Z ```python
2025-08-19T15:45:09.6279183Z def build_url(async_: bool = True) -> str
2025-08-19T15:45:09.6279408Z ```
2025-08-19T15:45:09.6279498Z 
2025-08-19T15:45:09.6279595Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:45:09.6279765Z 
2025-08-19T15:45:09.6279877Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T15:45:09.6280063Z 
2025-08-19T15:45:09.6280155Z # price\_importer.services\_common.keepa
2025-08-19T15:45:09.6280329Z 
2025-08-19T15:45:09.6280432Z <a id="price_importer.services_common.llm"></a>
2025-08-19T15:45:09.6280611Z 
2025-08-19T15:45:09.6280702Z # price\_importer.services\_common.llm
2025-08-19T15:45:09.6280870Z 
2025-08-19T15:45:09.6280986Z <a id="price_importer.services_common.settings"></a>
2025-08-19T15:45:09.6281184Z 
2025-08-19T15:45:09.6281292Z # price\_importer.services\_common.settings
2025-08-19T15:45:09.6281465Z 
2025-08-19T15:45:09.6281565Z <a id="price_importer.services_common.db"></a>
2025-08-19T15:45:09.6281748Z 
2025-08-19T15:45:09.6281840Z # price\_importer.services\_common.db
2025-08-19T15:45:09.6281999Z 
2025-08-19T15:45:09.6282152Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T15:45:09.6282498Z 
2025-08-19T15:45:09.6282575Z #### build\_sqlalchemy\_url
2025-08-19T15:45:09.6282704Z 
2025-08-19T15:45:09.6282775Z ```python
2025-08-19T15:45:09.6282943Z def build_sqlalchemy_url() -> str
2025-08-19T15:45:09.6283156Z ```
2025-08-19T15:45:09.6283238Z 
2025-08-19T15:45:09.6283330Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:45:09.6283503Z 
2025-08-19T15:45:09.6283644Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T15:45:09.6283869Z 
2025-08-19T15:45:09.6283948Z #### build\_asyncpg\_dsn
2025-08-19T15:45:09.6284073Z 
2025-08-19T15:45:09.6284261Z ```python
2025-08-19T15:45:09.6284433Z def build_asyncpg_dsn() -> str
2025-08-19T15:45:09.6284626Z ```
2025-08-19T15:45:09.6284713Z 
2025-08-19T15:45:09.6284838Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:45:09.6285045Z 
2025-08-19T15:45:09.6285168Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T15:45:09.6285380Z 
2025-08-19T15:45:09.6285445Z #### refresh\_mvs
2025-08-19T15:45:09.6285549Z 
2025-08-19T15:45:09.6285617Z ```python
2025-08-19T15:45:09.6285810Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:45:09.6286056Z ```
2025-08-19T15:45:09.6286137Z 
2025-08-19T15:45:09.6286269Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:45:09.6286486Z 
2025-08-19T15:45:09.6286580Z <a id="price_importer.services_common"></a>
2025-08-19T15:45:09.6286750Z 
2025-08-19T15:45:09.6286836Z # price\_importer.services\_common
2025-08-19T15:45:09.6287003Z 
2025-08-19T15:45:09.6287105Z <a id="price_importer.services_common.base"></a>
2025-08-19T15:45:09.6287408Z 
2025-08-19T15:45:09.6287502Z # price\_importer.services\_common.base
2025-08-19T15:45:09.6287665Z 
2025-08-19T15:45:09.6287754Z <a id="price_importer.normaliser"></a>
2025-08-19T15:45:09.6287921Z 
2025-08-19T15:45:09.6288006Z # price\_importer.normaliser
2025-08-19T15:45:09.6288143Z 
2025-08-19T15:45:09.6288244Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T15:45:09.6288431Z 
2025-08-19T15:45:09.6288520Z # price\_importer.common.models\_vendor
2025-08-19T15:45:09.6288683Z 
2025-08-19T15:45:09.6288780Z <a id="price_importer.common.db_url"></a>
2025-08-19T15:45:09.6288946Z 
2025-08-19T15:45:09.6289030Z # price\_importer.common.db\_url
2025-08-19T15:45:09.6289181Z 
2025-08-19T15:45:09.6289283Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T15:45:09.6289466Z 
2025-08-19T15:45:09.6289540Z #### make\_dsn
2025-08-19T15:45:09.6289636Z 
2025-08-19T15:45:09.6289701Z ```python
2025-08-19T15:45:09.6289876Z def make_dsn(async_: bool = False) -> str
2025-08-19T15:45:09.6290106Z ```
2025-08-19T15:45:09.6290188Z 
2025-08-19T15:45:09.6290311Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T15:45:09.6290506Z 
2025-08-19T15:45:09.6290612Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T15:45:09.6290808Z 
2025-08-19T15:45:09.6290872Z #### build\_url
2025-08-19T15:45:09.6290971Z 
2025-08-19T15:45:09.6291042Z ```python
2025-08-19T15:45:09.6291218Z def build_url(async_: bool = False) -> str
2025-08-19T15:45:09.6291456Z ```
2025-08-19T15:45:09.6291539Z 
2025-08-19T15:45:09.6291660Z Return Postgres DSN built from environment variables.
2025-08-19T15:45:09.6291864Z 
2025-08-19T15:45:09.6291953Z <a id="price_importer.common"></a>
2025-08-19T15:45:09.6292104Z 
2025-08-19T15:45:09.6292182Z # price\_importer.common
2025-08-19T15:45:09.6292434Z 
2025-08-19T15:45:09.6292532Z <a id="price_importer.common.base"></a>
2025-08-19T15:45:09.6292696Z 
2025-08-19T15:45:09.6292786Z # price\_importer.common.base
2025-08-19T15:45:09.6292928Z 
2025-08-19T15:45:09.6293028Z <a id="price_importer.tests.conftest"></a>
2025-08-19T15:45:09.6293211Z 
2025-08-19T15:45:09.6293298Z # price\_importer.tests.conftest
2025-08-19T15:45:09.6293443Z 
2025-08-19T15:45:09.6293540Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T15:45:09.6293722Z 
2025-08-19T15:45:09.6293810Z # price\_importer.tests.test\_reader
2025-08-19T15:45:09.6293966Z 
2025-08-19T15:45:09.6294073Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T15:45:09.6294253Z 
2025-08-19T15:45:09.6294344Z # price\_importer.tests.test\_imports
2025-08-19T15:45:09.6294510Z 
2025-08-19T15:45:09.6294607Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T15:45:09.6294780Z 
2025-08-19T15:45:09.6294864Z # price\_importer.tests.test\_smoke
2025-08-19T15:45:09.6295025Z 
2025-08-19T15:45:09.6295127Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T15:45:09.6295338Z 
2025-08-19T15:45:09.6295436Z # price\_importer.tests.test\_normaliser
2025-08-19T15:45:09.6295601Z 
2025-08-19T15:45:09.6295684Z <a id="price_importer.tests"></a>
2025-08-19T15:45:09.6295969Z 
2025-08-19T15:45:09.6296046Z # price\_importer.tests
2025-08-19T15:45:09.6296170Z 
2025-08-19T15:45:09.6296256Z <a id="price_importer.reader"></a>
2025-08-19T15:45:09.6296413Z 
2025-08-19T15:45:09.6296491Z # price\_importer.reader
2025-08-19T15:45:09.6296616Z 
2025-08-19T15:45:09.6296712Z <a id="price_importer.repository"></a>
2025-08-19T15:45:09.6296874Z 
2025-08-19T15:45:09.6296958Z # price\_importer.repository
2025-08-19T15:45:09.6297100Z 
2025-08-19T15:45:09.6297185Z <a id="price_importer.import"></a>
2025-08-19T15:45:09.6297333Z 
2025-08-19T15:45:09.6297412Z # price\_importer.import
2025-08-19T15:45:09.6297545Z 
2025-08-19T15:45:09.6297615Z <a id="fees_h10"></a>
2025-08-19T15:45:09.6297726Z 
2025-08-19T15:45:09.6297797Z # fees\_h10
2025-08-19T15:45:09.6297889Z 
2025-08-19T15:45:09.6297964Z <a id="fees_h10.worker"></a>
2025-08-19T15:45:09.6298100Z 
2025-08-19T15:45:09.6298167Z # fees\_h10.worker
2025-08-19T15:45:09.6298271Z 
2025-08-19T15:45:09.6298480Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T15:45:09.6298667Z 
2025-08-19T15:45:09.6298741Z #### list\_active\_asins
2025-08-19T15:45:09.6298861Z 
2025-08-19T15:45:09.6298931Z ```python
2025-08-19T15:45:09.6299098Z def list_active_asins() -> list[str]
2025-08-19T15:45:09.6299314Z ```
2025-08-19T15:45:09.6299399Z 
2025-08-19T15:45:09.6299511Z Return known ASINs or an empty list if unavailable.
2025-08-19T15:45:09.6299708Z 
2025-08-19T15:45:09.6299791Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T15:45:09.6299952Z 
2025-08-19T15:45:09.6300030Z # fees\_h10.tests.test\_smoke
2025-08-19T15:45:09.6300171Z 
2025-08-19T15:45:09.6300249Z <a id="fees_h10.tests"></a>
2025-08-19T15:45:09.6300377Z 
2025-08-19T15:45:09.6300452Z # fees\_h10.tests
2025-08-19T15:45:09.6300554Z 
2025-08-19T15:45:09.6300628Z <a id="fees_h10.client"></a>
2025-08-19T15:45:09.6300762Z 
2025-08-19T15:45:09.6300830Z # fees\_h10.client
2025-08-19T15:45:09.6300934Z 
2025-08-19T15:45:09.6301014Z <a id="fees_h10.repository"></a>
2025-08-19T15:45:09.6301183Z 
2025-08-19T15:45:09.6301255Z # fees\_h10.repository
2025-08-19T15:45:09.6301370Z 
2025-08-19T15:45:09.6301447Z <a id="emailer"></a>
2025-08-19T15:45:09.6301558Z 
2025-08-19T15:45:09.6301621Z # emailer
2025-08-19T15:45:09.6301710Z 
2025-08-19T15:45:09.6301818Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T15:45:09.6301994Z 
2025-08-19T15:45:09.6302085Z # emailer.tests.test\_import\_emailer
2025-08-19T15:45:09.6302249Z 
2025-08-19T15:45:09.6302435Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T15:45:09.6302591Z 
2025-08-19T15:45:09.6302682Z # emailer.tests.test\_smoke
2025-08-19T15:45:09.6302815Z 
2025-08-19T15:45:09.6302893Z <a id="emailer.tests"></a>
2025-08-19T15:45:09.6303023Z 
2025-08-19T15:45:09.6303099Z # emailer.tests
2025-08-19T15:45:09.6303204Z 
2025-08-19T15:45:09.6303289Z <a id="emailer.generate_body"></a>
2025-08-19T15:45:09.6303449Z 
2025-08-19T15:45:09.6303526Z # emailer.generate\_body
2025-08-19T15:45:09.6303649Z 
2025-08-19T15:45:09.6303732Z <a id="llm_server"></a>
2025-08-19T15:45:09.6303859Z 
2025-08-19T15:45:09.6303926Z # llm\_server
2025-08-19T15:45:09.6304026Z 
2025-08-19T15:45:09.6304116Z <a id="llm_server.app"></a>
2025-08-19T15:45:09.6304247Z 
2025-08-19T15:45:09.6304316Z # llm\_server.app
2025-08-19T15:45:09.6304429Z 
