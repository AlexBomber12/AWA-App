2025-08-19T21:55:49.1416616Z ##[group]Run pydoc-markdown
2025-08-19T21:55:49.1416934Z [36;1mpydoc-markdown[0m
2025-08-19T21:55:49.1461210Z shell: /usr/bin/bash -e {0}
2025-08-19T21:55:49.1461487Z env:
2025-08-19T21:55:49.1461780Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:55:49.1462277Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T21:55:49.1462767Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:55:49.1463204Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:55:49.1463625Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:55:49.1464062Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T21:55:49.1464414Z ##[endgroup]
2025-08-19T21:55:49.7802951Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T21:55:49.7803735Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T21:55:49.7804256Z In "pydoc-markdown.yml"
2025-08-19T21:55:49.7804716Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T21:55:49.7805493Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T21:55:49.7806326Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T21:55:49.7806912Z 
2025-08-19T21:55:50.1366930Z <a id="__init__"></a>
2025-08-19T21:55:50.1367749Z 
2025-08-19T21:55:50.1368017Z # \_\_init\_\_
2025-08-19T21:55:50.1368343Z 
2025-08-19T21:55:50.1368839Z <a id="api"></a>
2025-08-19T21:55:50.1369195Z 
2025-08-19T21:55:50.1369415Z # api
2025-08-19T21:55:50.1369704Z 
2025-08-19T21:55:50.1369960Z <a id="api.errors"></a>
2025-08-19T21:55:50.1370378Z 
2025-08-19T21:55:50.1370601Z # api.errors
2025-08-19T21:55:50.1370922Z 
2025-08-19T21:55:50.1371189Z <a id="api.sentry_config"></a>
2025-08-19T21:55:50.1371661Z 
2025-08-19T21:55:50.1371909Z # api.sentry\_config
2025-08-19T21:55:50.1372295Z 
2025-08-19T21:55:50.1372630Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T21:55:50.1373018Z 
2025-08-19T21:55:50.1373610Z # api.tests.test\_stats\_contracts
2025-08-19T21:55:50.1373951Z 
2025-08-19T21:55:50.1374137Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T21:55:50.1374483Z 
2025-08-19T21:55:50.1374647Z # api.tests.test\_sentry\_scrub
2025-08-19T21:55:50.1374940Z 
2025-08-19T21:55:50.1375125Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T21:55:50.1375469Z 
2025-08-19T21:55:50.1375640Z # api.tests.test\_roi\_basic\_auth
2025-08-19T21:55:50.1375940Z 
2025-08-19T21:55:50.1376114Z <a id="api.tests.test_errors_json"></a>
2025-08-19T21:55:50.1376445Z 
2025-08-19T21:55:50.1376603Z # api.tests.test\_errors\_json
2025-08-19T21:55:50.1376882Z 
2025-08-19T21:55:50.1377040Z <a id="api.tests.test_llm"></a>
2025-08-19T21:55:50.1377333Z 
2025-08-19T21:55:50.1377470Z # api.tests.test\_llm
2025-08-19T21:55:50.1377658Z 
2025-08-19T21:55:50.1377798Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T21:55:50.1378054Z 
2025-08-19T21:55:50.1378166Z # api.tests.test\_roi\_filters
2025-08-19T21:55:50.1378367Z 
2025-08-19T21:55:50.1378675Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T21:55:50.1378922Z 
2025-08-19T21:55:50.1379041Z # api.tests.test\_sentry\_event
2025-08-19T21:55:50.1379248Z 
2025-08-19T21:55:50.1379423Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T21:55:50.1379722Z 
2025-08-19T21:55:50.1379842Z ## DummyTransport Objects
2025-08-19T21:55:50.1380029Z 
2025-08-19T21:55:50.1380125Z ```python
2025-08-19T21:55:50.1380377Z class DummyTransport()
2025-08-19T21:55:50.1380641Z ```
2025-08-19T21:55:50.1380769Z 
2025-08-19T21:55:50.1381015Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T21:55:50.1381389Z 
2025-08-19T21:55:50.1381494Z #### capture\_envelope
2025-08-19T21:55:50.1381667Z 
2025-08-19T21:55:50.1381760Z ```python
2025-08-19T21:55:50.1382018Z def capture_envelope(envelope)
2025-08-19T21:55:50.1382308Z ```
2025-08-19T21:55:50.1382428Z 
2025-08-19T21:55:50.1382608Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T21:55:50.1382912Z 
2025-08-19T21:55:50.1383032Z <a id="api.tests.test_cors"></a>
2025-08-19T21:55:50.1383470Z 
2025-08-19T21:55:50.1383578Z # api.tests.test\_cors
2025-08-19T21:55:50.1383746Z 
2025-08-19T21:55:50.1383873Z <a id="api.tests.test_imports"></a>
2025-08-19T21:55:50.1384102Z 
2025-08-19T21:55:50.1384213Z # api.tests.test\_imports
2025-08-19T21:55:50.1384397Z 
2025-08-19T21:55:50.1384526Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T21:55:50.1384759Z 
2025-08-19T21:55:50.1384876Z # api.tests.test\_rate\_limit
2025-08-19T21:55:50.1385082Z 
2025-08-19T21:55:50.1385219Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T21:55:50.1385466Z 
2025-08-19T21:55:50.1385564Z #### app
2025-08-19T21:55:50.1385692Z 
2025-08-19T21:55:50.1385787Z noqa: E402
2025-08-19T21:55:50.1385918Z 
2025-08-19T21:55:50.1386050Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T21:55:50.1386281Z 
2025-08-19T21:55:50.1386395Z # api.tests.test\_stats\_sql
2025-08-19T21:55:50.1386599Z 
2025-08-19T21:55:50.1386724Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T21:55:50.1386968Z 
2025-08-19T21:55:50.1387082Z # api.tests.test\_entrypoint
2025-08-19T21:55:50.1387285Z 
2025-08-19T21:55:50.1387437Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T21:55:50.1387713Z 
2025-08-19T21:55:50.1387846Z # api.tests.test\_stats\_future\_contracts
2025-08-19T21:55:50.1388033Z 
2025-08-19T21:55:50.1388129Z <a id="api.tests.test_health"></a>
2025-08-19T21:55:50.1388303Z 
2025-08-19T21:55:50.1388389Z # api.tests.test\_health
2025-08-19T21:55:50.1388657Z 
2025-08-19T21:55:50.1388753Z <a id="api.tests.test_score"></a>
2025-08-19T21:55:50.1388934Z 
2025-08-19T21:55:50.1389023Z # api.tests.test\_score
2025-08-19T21:55:50.1389158Z 
2025-08-19T21:55:50.1389254Z <a id="api.logging_config"></a>
2025-08-19T21:55:50.1389412Z 
2025-08-19T21:55:50.1389497Z # api.logging\_config
2025-08-19T21:55:50.1389633Z 
2025-08-19T21:55:50.1389725Z <a id="api.migrations.env"></a>
2025-08-19T21:55:50.1389881Z 
2025-08-19T21:55:50.1389965Z # api.migrations.env
2025-08-19T21:55:50.1390232Z 
2025-08-19T21:55:50.1390372Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T21:55:50.1390598Z 
2025-08-19T21:55:50.1390722Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T21:55:50.1390928Z 
2025-08-19T21:55:50.1391048Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T21:55:50.1391265Z 
2025-08-19T21:55:50.1391370Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T21:55:50.1391562Z 
2025-08-19T21:55:50.1391730Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T21:55:50.1392000Z 
2025-08-19T21:55:50.1392152Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T21:55:50.1392395Z 
2025-08-19T21:55:50.1392535Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T21:55:50.1392759Z 
2025-08-19T21:55:50.1392877Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T21:55:50.1393087Z 
2025-08-19T21:55:50.1393216Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T21:55:50.1393537Z 
2025-08-19T21:55:50.1393654Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T21:55:50.1393894Z 
2025-08-19T21:55:50.1394031Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T21:55:50.1394265Z 
2025-08-19T21:55:50.1394385Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T21:55:50.1394596Z 
2025-08-19T21:55:50.1394729Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T21:55:50.1394950Z 
2025-08-19T21:55:50.1395066Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T21:55:50.1395279Z 
2025-08-19T21:55:50.1395415Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T21:55:50.1395641Z 
2025-08-19T21:55:50.1395757Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T21:55:50.1395967Z 
2025-08-19T21:55:50.1396118Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T21:55:50.1396363Z 
2025-08-19T21:55:50.1396499Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T21:55:50.1396722Z 
2025-08-19T21:55:50.1396863Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T21:55:50.1397230Z 
2025-08-19T21:55:50.1397351Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T21:55:50.1397572Z 
2025-08-19T21:55:50.1397732Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T21:55:50.1397976Z 
2025-08-19T21:55:50.1398097Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T21:55:50.1398307Z 
2025-08-19T21:55:50.1398544Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T21:55:50.1398744Z 
2025-08-19T21:55:50.1398843Z # api.migrations.versions.0001\_baseline
2025-08-19T21:55:50.1399106Z 
2025-08-19T21:55:50.1399219Z <a id="api.migrations.versions"></a>
2025-08-19T21:55:50.1399386Z 
2025-08-19T21:55:50.1399471Z # api.migrations.versions
2025-08-19T21:55:50.1399612Z 
2025-08-19T21:55:50.1399693Z <a id="api.migrations"></a>
2025-08-19T21:55:50.1399830Z 
2025-08-19T21:55:50.1399906Z # api.migrations
2025-08-19T21:55:50.1400014Z 
2025-08-19T21:55:50.1400089Z <a id="api.db"></a>
2025-08-19T21:55:50.1400205Z 
2025-08-19T21:55:50.1400275Z # api.db
2025-08-19T21:55:50.1400366Z 
2025-08-19T21:55:50.1400448Z <a id="api.routes.score"></a>
2025-08-19T21:55:50.1400599Z 
2025-08-19T21:55:50.1400673Z # api.routes.score
2025-08-19T21:55:50.1400784Z 
2025-08-19T21:55:50.1400876Z <a id="api.routes.stats"></a>
2025-08-19T21:55:50.1401014Z 
2025-08-19T21:55:50.1401086Z # api.routes.stats
2025-08-19T21:55:50.1401194Z 
2025-08-19T21:55:50.1401279Z <a id="api.routes.roi"></a>
2025-08-19T21:55:50.1401412Z 
2025-08-19T21:55:50.1401482Z # api.routes.roi
2025-08-19T21:55:50.1401592Z 
2025-08-19T21:55:50.1401676Z <a id="api.routes.health"></a>
2025-08-19T21:55:50.1401817Z 
2025-08-19T21:55:50.1401889Z # api.routes.health
2025-08-19T21:55:50.1402004Z 
2025-08-19T21:55:50.1402098Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T21:55:50.1402269Z 
2025-08-19T21:55:50.1402343Z #### MAX\_SKEW
2025-08-19T21:55:50.1402442Z 
2025-08-19T21:55:50.1402506Z seconds
2025-08-19T21:55:50.1402757Z 
2025-08-19T21:55:50.1402851Z <a id="api.routes.health.health"></a>
2025-08-19T21:55:50.1403022Z 
2025-08-19T21:55:50.1403087Z #### health
2025-08-19T21:55:50.1403185Z 
2025-08-19T21:55:50.1403255Z ```python
2025-08-19T21:55:50.1403463Z @router.get("/health", include_in_schema=False)
2025-08-19T21:55:50.1403875Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T21:55:50.1404229Z ```
2025-08-19T21:55:50.1404317Z 
2025-08-19T21:55:50.1404437Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T21:55:50.1404649Z 
2025-08-19T21:55:50.1404741Z <a id="api.routes.repository"></a>
2025-08-19T21:55:50.1404903Z 
2025-08-19T21:55:50.1404983Z # api.routes.repository
2025-08-19T21:55:50.1405115Z 
2025-08-19T21:55:50.1405192Z <a id="api.routes"></a>
2025-08-19T21:55:50.1405310Z 
2025-08-19T21:55:50.1405386Z # api.routes
2025-08-19T21:55:50.1405485Z 
2025-08-19T21:55:50.1405565Z <a id="api.models.fee"></a>
2025-08-19T21:55:50.1405705Z 
2025-08-19T21:55:50.1405776Z # api.models.fee
2025-08-19T21:55:50.1405891Z 
2025-08-19T21:55:50.1405965Z <a id="api.models"></a>
2025-08-19T21:55:50.1406089Z 
2025-08-19T21:55:50.1406157Z # api.models
2025-08-19T21:55:50.1406253Z 
2025-08-19T21:55:50.1406344Z <a id="api.roi_repository"></a>
2025-08-19T21:55:50.1406488Z 
2025-08-19T21:55:50.1406563Z # api.roi\_repository
2025-08-19T21:55:50.1406681Z 
2025-08-19T21:55:50.1406762Z <a id="api.main"></a>
2025-08-19T21:55:50.1406873Z 
2025-08-19T21:55:50.1406940Z # api.main
2025-08-19T21:55:50.1407039Z 
2025-08-19T21:55:50.1407119Z <a id="api.main.ready"></a>
2025-08-19T21:55:50.1407259Z 
2025-08-19T21:55:50.1407331Z #### ready
2025-08-19T21:55:50.1407421Z 
2025-08-19T21:55:50.1407488Z ```python
2025-08-19T21:55:50.1407758Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T21:55:50.1408211Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T21:55:50.1408720Z                                                                       str]
2025-08-19T21:55:50.1408962Z ```
2025-08-19T21:55:50.1409177Z 
2025-08-19T21:55:50.1409281Z Return 200 only when migrations are at head.
2025-08-19T21:55:50.1409457Z 
2025-08-19T21:55:50.1409543Z <a id="api.config"></a>
2025-08-19T21:55:50.1409664Z 
2025-08-19T21:55:50.1409732Z # api.config
2025-08-19T21:55:50.1409828Z 
2025-08-19T21:55:50.1409913Z <a id="api.security"></a>
2025-08-19T21:55:50.1410042Z 
2025-08-19T21:55:50.1410111Z # api.security
2025-08-19T21:55:50.1410220Z 
2025-08-19T21:55:50.1410287Z <a id="etl"></a>
2025-08-19T21:55:50.1410391Z 
2025-08-19T21:55:50.1410455Z # etl
2025-08-19T21:55:50.1410551Z 
2025-08-19T21:55:50.1410635Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T21:55:50.1410785Z 
2025-08-19T21:55:50.1410871Z # etl.fba\_fee\_ingestor
2025-08-19T21:55:50.1410997Z 
2025-08-19T21:55:50.1411081Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T21:55:50.1411233Z 
2025-08-19T21:55:50.1411310Z # etl.sp\_fees\_ingestor
2025-08-19T21:55:50.1411432Z 
2025-08-19T21:55:50.1411516Z <a id="etl.keepa_ingestor"></a>
2025-08-19T21:55:50.1411677Z 
2025-08-19T21:55:50.1411750Z # etl.keepa\_ingestor
2025-08-19T21:55:50.1411870Z 
2025-08-19T21:55:50.1411948Z <a id="etl.db"></a>
2025-08-19T21:55:50.1412055Z 
2025-08-19T21:55:50.1412121Z # etl.db
2025-08-19T21:55:50.1412211Z 
2025-08-19T21:55:50.1412312Z <a id="etl.dialects.schemas"></a>
2025-08-19T21:55:50.1412459Z 
2025-08-19T21:55:50.1412537Z # etl.dialects.schemas
2025-08-19T21:55:50.1412663Z 
2025-08-19T21:55:50.1412774Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T21:55:50.1412959Z 
2025-08-19T21:55:50.1413056Z # etl.dialects.amazon\_reimbursements
2025-08-19T21:55:50.1413218Z 
2025-08-19T21:55:50.1413315Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T21:55:50.1413488Z 
2025-08-19T21:55:50.1413583Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T21:55:50.1413739Z 
2025-08-19T21:55:50.1413828Z <a id="etl.dialects.test_generic"></a>
2025-08-19T21:55:50.1413994Z 
2025-08-19T21:55:50.1414077Z # etl.dialects.test\_generic
2025-08-19T21:55:50.1414336Z 
2025-08-19T21:55:50.1414441Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T21:55:50.1414611Z 
2025-08-19T21:55:50.1414695Z # etl.dialects.amazon\_returns
2025-08-19T21:55:50.1414835Z 
2025-08-19T21:55:50.1414936Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T21:55:50.1415107Z 
2025-08-19T21:55:50.1415195Z # etl.dialects.amazon\_fee\_preview
2025-08-19T21:55:50.1415355Z 
2025-08-19T21:55:50.1415464Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T21:55:50.1415649Z 
2025-08-19T21:55:50.1415744Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T21:55:50.1415910Z 
2025-08-19T21:55:50.1416006Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T21:55:50.1416176Z 
2025-08-19T21:55:50.1416275Z # etl.dialects.amazon\_settlements
2025-08-19T21:55:50.1416429Z 
2025-08-19T21:55:50.1416507Z <a id="etl.dialects"></a>
2025-08-19T21:55:50.1416638Z 
2025-08-19T21:55:50.1416706Z # etl.dialects
2025-08-19T21:55:50.1416808Z 
2025-08-19T21:55:50.1416880Z <a id="ingest"></a>
2025-08-19T21:55:50.1416993Z 
2025-08-19T21:55:50.1417063Z # ingest
2025-08-19T21:55:50.1417150Z 
2025-08-19T21:55:50.1417240Z <a id="ingest.maintenance"></a>
2025-08-19T21:55:50.1417386Z 
2025-08-19T21:55:50.1417460Z # ingest.maintenance
2025-08-19T21:55:50.1417581Z 
2025-08-19T21:55:50.1417664Z <a id="ingest.copy_loader"></a>
2025-08-19T21:55:50.1417804Z 
2025-08-19T21:55:50.1417879Z # ingest.copy\_loader
2025-08-19T21:55:50.1418002Z 
2025-08-19T21:55:50.1418104Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T21:55:50.1418284Z 
2025-08-19T21:55:50.1418365Z #### copy\_df\_via\_temp
2025-08-19T21:55:50.1418605Z 
2025-08-19T21:55:50.1418673Z ```python
2025-08-19T21:55:50.1418859Z def copy_df_via_temp(engine: Engine,
2025-08-19T21:55:50.1419093Z                      df: pd.DataFrame,
2025-08-19T21:55:50.1419330Z                      target_table: str,
2025-08-19T21:55:50.1419548Z                      *,
2025-08-19T21:55:50.1419760Z                      target_schema: Optional[str] = None,
2025-08-19T21:55:50.1420030Z                      columns: Sequence[str],
2025-08-19T21:55:50.1420421Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T21:55:50.1420709Z                      analyze_after: bool = False,
2025-08-19T21:55:50.1420971Z                      connection: Any | None = None) -> int
2025-08-19T21:55:50.1421222Z ```
2025-08-19T21:55:50.1421313Z 
2025-08-19T21:55:50.1421466Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T21:55:50.1421702Z 
2025-08-19T21:55:50.1421791Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T21:55:50.1421952Z 
2025-08-19T21:55:50.1422043Z # ingest.tests.test\_smoke
2025-08-19T21:55:50.1422174Z 
2025-08-19T21:55:50.1422255Z <a id="ingest.tests"></a>
2025-08-19T21:55:50.1422387Z 
2025-08-19T21:55:50.1422456Z # ingest.tests
2025-08-19T21:55:50.1422560Z 
2025-08-19T21:55:50.1422647Z <a id="ingest.upload_router"></a>
2025-08-19T21:55:50.1422802Z 
2025-08-19T21:55:50.1422881Z # ingest.upload\_router
2025-08-19T21:55:50.1423010Z 
2025-08-19T21:55:50.1423106Z <a id="ingest.email_watcher"></a>
2025-08-19T21:55:50.1423253Z 
2025-08-19T21:55:50.1423329Z # ingest.email\_watcher
2025-08-19T21:55:50.1423447Z 
2025-08-19T21:55:50.1423544Z <a id="ingest.email_watcher.main"></a>
2025-08-19T21:55:50.1423706Z 
2025-08-19T21:55:50.1423772Z #### main
2025-08-19T21:55:50.1423870Z 
2025-08-19T21:55:50.1423938Z ```python
2025-08-19T21:55:50.1424108Z def main() -> dict[str, str]
2025-08-19T21:55:50.1424315Z ```
2025-08-19T21:55:50.1424400Z 
2025-08-19T21:55:50.1424553Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T21:55:50.1424778Z 
2025-08-19T21:55:50.1424912Z Returns {"status": "success"} when processing completes.
2025-08-19T21:55:50.1425125Z 
2025-08-19T21:55:50.1425206Z <a id="ingest.tasks"></a>
2025-08-19T21:55:50.1425333Z 
2025-08-19T21:55:50.1425403Z # ingest.tasks
2025-08-19T21:55:50.1425532Z 
2025-08-19T21:55:50.1425636Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T21:55:50.1425812Z 
2025-08-19T21:55:50.1426014Z #### task\_import\_file
2025-08-19T21:55:50.1426137Z 
2025-08-19T21:55:50.1426213Z ```python
2025-08-19T21:55:50.1426421Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T21:55:50.1426706Z def task_import_file(self: Any,
2025-08-19T21:55:50.1426917Z                      uri: str,
2025-08-19T21:55:50.1427145Z                      report_type: str | None = None,
2025-08-19T21:55:50.1427411Z                      force: bool = False) -> dict[str, Any]
2025-08-19T21:55:50.1427658Z ```
2025-08-19T21:55:50.1427746Z 
2025-08-19T21:55:50.1427880Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T21:55:50.1428086Z 
2025-08-19T21:55:50.1428171Z <a id="ingest.celery_app"></a>
2025-08-19T21:55:50.1428314Z 
2025-08-19T21:55:50.1428389Z # ingest.celery\_app
2025-08-19T21:55:50.1428631Z 
2025-08-19T21:55:50.1428717Z <a id="ingest.ingest_router"></a>
2025-08-19T21:55:50.1428875Z 
2025-08-19T21:55:50.1428952Z # ingest.ingest\_router
2025-08-19T21:55:50.1429072Z 
2025-08-19T21:55:50.1429163Z <a id="logistics_etl"></a>
2025-08-19T21:55:50.1429297Z 
2025-08-19T21:55:50.1429367Z # logistics\_etl
2025-08-19T21:55:50.1429479Z 
2025-08-19T21:55:50.1429560Z Daily logistics ETL job.
2025-08-19T21:55:50.1429683Z 
2025-08-19T21:55:50.1429767Z <a id="logistics_etl.__main__"></a>
2025-08-19T21:55:50.1429925Z 
2025-08-19T21:55:50.1430004Z # logistics\_etl.\_\_main\_\_
2025-08-19T21:55:50.1430140Z 
2025-08-19T21:55:50.1430228Z <a id="logistics_etl.dsn"></a>
2025-08-19T21:55:50.1430363Z 
2025-08-19T21:55:50.1430435Z # logistics\_etl.dsn
2025-08-19T21:55:50.1430548Z 
2025-08-19T21:55:50.1430674Z Local DSN builder to avoid cross-service dependency.
2025-08-19T21:55:50.1430874Z 
2025-08-19T21:55:50.1430965Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T21:55:50.1431141Z 
2025-08-19T21:55:50.1431210Z #### build\_dsn
2025-08-19T21:55:50.1431313Z 
2025-08-19T21:55:50.1431389Z ```python
2025-08-19T21:55:50.1431567Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:55:50.1431793Z ```
2025-08-19T21:55:50.1431882Z 
2025-08-19T21:55:50.1432142Z Return a Postgres DSN assembled from environment variables.
2025-08-19T21:55:50.1432369Z 
2025-08-19T21:55:50.1432522Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T21:55:50.1432921Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T21:55:50.1433273Z error when any required variable is missing.
2025-08-19T21:55:50.1433452Z 
2025-08-19T21:55:50.1433558Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T21:55:50.1433732Z 
2025-08-19T21:55:50.1433822Z # logistics\_etl.tests.conftest
2025-08-19T21:55:50.1433976Z 
2025-08-19T21:55:50.1434084Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T21:55:50.1434273Z 
2025-08-19T21:55:50.1434369Z # logistics\_etl.tests.test\_repository
2025-08-19T21:55:50.1434539Z 
2025-08-19T21:55:50.1434634Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T21:55:50.1434804Z 
2025-08-19T21:55:50.1434897Z # logistics\_etl.tests.test\_cron
2025-08-19T21:55:50.1435058Z 
2025-08-19T21:55:50.1435166Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T21:55:50.1435363Z 
2025-08-19T21:55:50.1435450Z # logistics\_etl.tests.test\_imports
2025-08-19T21:55:50.1435613Z 
2025-08-19T21:55:50.1435710Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T21:55:50.1435888Z 
2025-08-19T21:55:50.1435974Z # logistics\_etl.tests.test\_smoke
2025-08-19T21:55:50.1436124Z 
2025-08-19T21:55:50.1436228Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T21:55:50.1436399Z 
2025-08-19T21:55:50.1436486Z # logistics\_etl.tests.test\_client
2025-08-19T21:55:50.1436647Z 
2025-08-19T21:55:50.1436732Z <a id="logistics_etl.tests"></a>
2025-08-19T21:55:50.1436880Z 
2025-08-19T21:55:50.1436957Z # logistics\_etl.tests
2025-08-19T21:55:50.1437082Z 
2025-08-19T21:55:50.1437165Z <a id="logistics_etl.flow"></a>
2025-08-19T21:55:50.1437304Z 
2025-08-19T21:55:50.1437383Z # logistics\_etl.flow
2025-08-19T21:55:50.1437501Z 
2025-08-19T21:55:50.1437586Z <a id="logistics_etl.client"></a>
2025-08-19T21:55:50.1437851Z 
2025-08-19T21:55:50.1513864Z # logistics\_etl.client
2025-08-19T21:55:50.1514315Z 
2025-08-19T21:55:50.1514519Z <a id="logistics_etl.cron"></a>
2025-08-19T21:55:50.1514851Z 
2025-08-19T21:55:50.1515009Z # logistics\_etl.cron
2025-08-19T21:55:50.1515263Z 
2025-08-19T21:55:50.1515445Z <a id="logistics_etl.db"></a>
2025-08-19T21:55:50.1515743Z 
2025-08-19T21:55:50.1515897Z # logistics\_etl.db
2025-08-19T21:55:50.1516125Z 
2025-08-19T21:55:50.1516248Z <a id="logistics_etl.repository"></a>
2025-08-19T21:55:50.1516468Z 
2025-08-19T21:55:50.1516583Z # logistics\_etl.repository
2025-08-19T21:55:50.1516760Z 
2025-08-19T21:55:50.1516857Z <a id="alert_bot"></a>
2025-08-19T21:55:50.1517008Z 
2025-08-19T21:55:50.1517183Z # alert\_bot
2025-08-19T21:55:50.1517313Z 
2025-08-19T21:55:50.1517431Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T21:55:50.1517669Z 
2025-08-19T21:55:50.1517764Z # alert\_bot.tests.test\_smoke
2025-08-19T21:55:50.1517913Z 
2025-08-19T21:55:50.1517996Z <a id="alert_bot.tests"></a>
2025-08-19T21:55:50.1518156Z 
2025-08-19T21:55:50.1518237Z # alert\_bot.tests
2025-08-19T21:55:50.1518350Z 
2025-08-19T21:55:50.1518632Z <a id="alert_bot.alert_bot"></a>
2025-08-19T21:55:50.1518790Z 
2025-08-19T21:55:50.1518868Z # alert\_bot.alert\_bot
2025-08-19T21:55:50.1519001Z 
2025-08-19T21:55:50.1519081Z <a id="alert_bot.rules"></a>
2025-08-19T21:55:50.1519220Z 
2025-08-19T21:55:50.1519292Z # alert\_bot.rules
2025-08-19T21:55:50.1519412Z 
2025-08-19T21:55:50.1519484Z <a id="common"></a>
2025-08-19T21:55:50.1519594Z 
2025-08-19T21:55:50.1519666Z # common
2025-08-19T21:55:50.1519760Z 
2025-08-19T21:55:50.1519836Z <a id="common.dsn"></a>
2025-08-19T21:55:50.1519960Z 
2025-08-19T21:55:50.1520034Z # common.dsn
2025-08-19T21:55:50.1520135Z 
2025-08-19T21:55:50.1520224Z <a id="common.dsn.build_dsn"></a>
2025-08-19T21:55:50.1520385Z 
2025-08-19T21:55:50.1520454Z #### build\_dsn
2025-08-19T21:55:50.1520561Z 
2025-08-19T21:55:50.1520637Z ```python
2025-08-19T21:55:50.1520829Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:55:50.1521075Z ```
2025-08-19T21:55:50.1521396Z 
2025-08-19T21:55:50.1521527Z Return a Postgres DSN, validating required variables.
2025-08-19T21:55:50.1521751Z 
2025-08-19T21:55:50.1521957Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T21:55:50.1522423Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T21:55:50.1522874Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T21:55:50.1523209Z missing.
2025-08-19T21:55:50.1523305Z 
2025-08-19T21:55:50.1523397Z <a id="common.models_vendor"></a>
2025-08-19T21:55:50.1523556Z 
2025-08-19T21:55:50.1523688Z # common.models\_vendor
2025-08-19T21:55:50.1544160Z 
2025-08-19T21:55:50.1544317Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T21:55:50.1544527Z 
2025-08-19T21:55:50.1544614Z ## Vendor Objects
2025-08-19T21:55:50.1544738Z 
2025-08-19T21:55:50.1544812Z ```python
2025-08-19T21:55:50.1545007Z class Vendor(Base)
2025-08-19T21:55:50.1545198Z ```
2025-08-19T21:55:50.1545302Z 
2025-08-19T21:55:50.1545396Z Vendor of inventory items.
2025-08-19T21:55:50.1545536Z 
2025-08-19T21:55:50.1545655Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T21:55:50.1545862Z 
2025-08-19T21:55:50.1545945Z ## VendorPrice Objects
2025-08-19T21:55:50.1546068Z 
2025-08-19T21:55:50.1546149Z ```python
2025-08-19T21:55:50.1546322Z class VendorPrice(Base)
2025-08-19T21:55:50.1546520Z ```
2025-08-19T21:55:50.1546609Z 
2025-08-19T21:55:50.1546719Z Association table linking vendors to pricing.
2025-08-19T21:55:50.1546913Z 
2025-08-19T21:55:50.1546998Z <a id="common.db_url"></a>
2025-08-19T21:55:50.1547128Z 
2025-08-19T21:55:50.1547201Z # common.db\_url
2025-08-19T21:55:50.1547317Z 
2025-08-19T21:55:50.1547402Z <a id="common.db_url.build_url"></a>
2025-08-19T21:55:50.1547564Z 
2025-08-19T21:55:50.1547644Z #### build\_url
2025-08-19T21:55:50.1547753Z 
2025-08-19T21:55:50.1547820Z ```python
2025-08-19T21:55:50.1548016Z def build_url(async_: bool = True) -> str
2025-08-19T21:55:50.1548666Z ```
2025-08-19T21:55:50.1548771Z 
2025-08-19T21:55:50.1548879Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:55:50.1549057Z 
2025-08-19T21:55:50.1549148Z <a id="common.keepa"></a>
2025-08-19T21:55:50.1549279Z 
2025-08-19T21:55:50.1549349Z # common.keepa
2025-08-19T21:55:50.1549454Z 
2025-08-19T21:55:50.1549538Z <a id="common.llm"></a>
2025-08-19T21:55:50.1549663Z 
2025-08-19T21:55:50.1549733Z # common.llm
2025-08-19T21:55:50.1549843Z 
2025-08-19T21:55:50.1549932Z <a id="common.settings"></a>
2025-08-19T21:55:50.1550073Z 
2025-08-19T21:55:50.1550146Z # common.settings
2025-08-19T21:55:50.1550261Z 
2025-08-19T21:55:50.1550336Z <a id="common.db"></a>
2025-08-19T21:55:50.1550455Z 
2025-08-19T21:55:50.1550529Z # common.db
2025-08-19T21:55:50.1550625Z 
2025-08-19T21:55:50.1550723Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T21:55:50.1550908Z 
2025-08-19T21:55:50.1550990Z #### build\_sqlalchemy\_url
2025-08-19T21:55:50.1551123Z 
2025-08-19T21:55:50.1551194Z ```python
2025-08-19T21:55:50.1551387Z def build_sqlalchemy_url() -> str
2025-08-19T21:55:50.1551612Z ```
2025-08-19T21:55:50.1551701Z 
2025-08-19T21:55:50.1551801Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:55:50.1551976Z 
2025-08-19T21:55:50.1552075Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T21:55:50.1552245Z 
2025-08-19T21:55:50.1552323Z #### build\_asyncpg\_dsn
2025-08-19T21:55:50.1552456Z 
2025-08-19T21:55:50.1552524Z ```python
2025-08-19T21:55:50.1552704Z def build_asyncpg_dsn() -> str
2025-08-19T21:55:50.1552917Z ```
2025-08-19T21:55:50.1553005Z 
2025-08-19T21:55:50.1553142Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:55:50.1553354Z 
2025-08-19T21:55:50.1553446Z <a id="common.db.refresh_mvs"></a>
2025-08-19T21:55:50.1553602Z 
2025-08-19T21:55:50.1553678Z #### refresh\_mvs
2025-08-19T21:55:50.1553784Z 
2025-08-19T21:55:50.1553851Z ```python
2025-08-19T21:55:50.1554058Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:55:50.1554312Z ```
2025-08-19T21:55:50.1554409Z 
2025-08-19T21:55:50.1554691Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:55:50.1554907Z 
2025-08-19T21:55:50.1554995Z <a id="common.config"></a>
2025-08-19T21:55:50.1555125Z 
2025-08-19T21:55:50.1555198Z # common.config
2025-08-19T21:55:50.1555310Z 
2025-08-19T21:55:50.1555389Z <a id="common.base"></a>
2025-08-19T21:55:50.1555512Z 
2025-08-19T21:55:50.1555582Z # common.base
2025-08-19T21:55:50.1555691Z 
2025-08-19T21:55:50.1555777Z <a id="common.base.Base"></a>
2025-08-19T21:55:50.1555918Z 
2025-08-19T21:55:50.1555995Z ## Base Objects
2025-08-19T21:55:50.1556101Z 
2025-08-19T21:55:50.1556168Z ```python
2025-08-19T21:55:50.1556350Z class Base(DeclarativeBase)
2025-08-19T21:55:50.1556550Z ```
2025-08-19T21:55:50.1556643Z 
2025-08-19T21:55:50.1556733Z Base class for SQLAlchemy models.
2025-08-19T21:55:50.1556894Z 
2025-08-19T21:55:50.1556976Z <a id="repricer"></a>
2025-08-19T21:55:50.1557105Z 
2025-08-19T21:55:50.1557174Z # repricer
2025-08-19T21:55:50.1557271Z 
2025-08-19T21:55:50.1557377Z <a id="repricer.app.schemas"></a>
2025-08-19T21:55:50.1557541Z 
2025-08-19T21:55:50.1557622Z # repricer.app.schemas
2025-08-19T21:55:50.1557746Z 
2025-08-19T21:55:50.1557875Z <a id="repricer.app.deps"></a>
2025-08-19T21:55:50.1558019Z 
2025-08-19T21:55:50.1558097Z # repricer.app.deps
2025-08-19T21:55:50.1558217Z 
2025-08-19T21:55:50.1558356Z Placeholder module for Keepa / SP-API clients.
2025-08-19T21:55:50.1558807Z 
2025-08-19T21:55:50.1558909Z <a id="repricer.app.logic"></a>
2025-08-19T21:55:50.1559060Z 
2025-08-19T21:55:50.1559138Z # repricer.app.logic
2025-08-19T21:55:50.1559256Z 
2025-08-19T21:55:50.1559364Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T21:55:50.1559549Z 
2025-08-19T21:55:50.1559618Z #### MIN\_MARGIN
2025-08-19T21:55:50.1559729Z 
2025-08-19T21:55:50.1559796Z 15 % ROI
2025-08-19T21:55:50.1559887Z 
2025-08-19T21:55:50.1559993Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T21:55:50.1560180Z 
2025-08-19T21:55:50.1560254Z #### compute\_price
2025-08-19T21:55:50.1560565Z 
2025-08-19T21:55:50.1560648Z ```python
2025-08-19T21:55:50.1560899Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T21:55:50.1561210Z ```
2025-08-19T21:55:50.1561294Z 
2025-08-19T21:55:50.1561404Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T21:55:50.1561688Z Replace with real competitive logic later.
2025-08-19T21:55:50.1561856Z 
2025-08-19T21:55:50.1561948Z <a id="repricer.app.main"></a>
2025-08-19T21:55:50.1562091Z 
2025-08-19T21:55:50.1562166Z # repricer.app.main
2025-08-19T21:55:50.1562276Z 
2025-08-19T21:55:50.1562366Z <a id="repricer.app"></a>
2025-08-19T21:55:50.1562498Z 
2025-08-19T21:55:50.1562570Z # repricer.app
2025-08-19T21:55:50.1562680Z 
2025-08-19T21:55:50.1562777Z <a id="repricer.tests.test_imports"></a>
2025-08-19T21:55:50.1562947Z 
2025-08-19T21:55:50.1563032Z # repricer.tests.test\_imports
2025-08-19T21:55:50.1563208Z 
2025-08-19T21:55:50.1563300Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T21:55:50.1563464Z 
2025-08-19T21:55:50.1563582Z # repricer.tests.test\_smoke
2025-08-19T21:55:50.1563725Z 
2025-08-19T21:55:50.1563807Z <a id="repricer.tests"></a>
2025-08-19T21:55:50.1563944Z 
2025-08-19T21:55:50.1564033Z # repricer.tests
2025-08-19T21:55:50.1564141Z 
2025-08-19T21:55:50.1564233Z <a id="db"></a>
2025-08-19T21:55:50.1564340Z 
2025-08-19T21:55:50.1564404Z # db
2025-08-19T21:55:50.1564492Z 
2025-08-19T21:55:50.1564571Z <a id="db.utils.views"></a>
2025-08-19T21:55:50.1564710Z 
2025-08-19T21:55:50.1564781Z # db.utils.views
2025-08-19T21:55:50.1564885Z 
2025-08-19T21:55:50.1564988Z <a id="db.utils.views.replace_view"></a>
2025-08-19T21:55:50.1565155Z 
2025-08-19T21:55:50.1565226Z #### replace\_view
2025-08-19T21:55:50.1565339Z 
2025-08-19T21:55:50.1565406Z ```python
2025-08-19T21:55:50.1565604Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T21:55:50.1565859Z ```
2025-08-19T21:55:50.1565946Z 
2025-08-19T21:55:50.1566040Z Drop and recreate a SQL view atomically.
2025-08-19T21:55:50.1566212Z 
2025-08-19T21:55:50.1566292Z <a id="db.utils"></a>
2025-08-19T21:55:50.1566542Z 
2025-08-19T21:55:50.1566617Z # db.utils
2025-08-19T21:55:50.1566714Z 
2025-08-19T21:55:50.1566800Z <a id="price_importer"></a>
2025-08-19T21:55:50.1566938Z 
2025-08-19T21:55:50.1567014Z # price\_importer
2025-08-19T21:55:50.1567121Z 
2025-08-19T21:55:50.1567226Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T21:55:50.1567417Z 
2025-08-19T21:55:50.1567511Z # price\_importer.services\_common.dsn
2025-08-19T21:55:50.1567676Z 
2025-08-19T21:55:50.1567819Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T21:55:50.1568035Z 
2025-08-19T21:55:50.1568106Z #### build\_dsn
2025-08-19T21:55:50.1568216Z 
2025-08-19T21:55:50.1568283Z ```python
2025-08-19T21:55:50.1568697Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:55:50.1569014Z ```
2025-08-19T21:55:50.1569102Z 
2025-08-19T21:55:50.1569173Z Return safe DSN.
2025-08-19T21:55:50.1569285Z 
2025-08-19T21:55:50.1569653Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T21:55:50.1569875Z 
2025-08-19T21:55:50.1570021Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T21:55:50.1570229Z 
2025-08-19T21:55:50.1570344Z # price\_importer.services\_common.models\_vendor
2025-08-19T21:55:50.1570539Z 
2025-08-19T21:55:50.1570648Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T21:55:50.1570836Z 
2025-08-19T21:55:50.1570940Z # price\_importer.services\_common.db\_url
2025-08-19T21:55:50.1571113Z 
2025-08-19T21:55:50.1571320Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T21:55:50.1571540Z 
2025-08-19T21:55:50.1571611Z #### build\_url
2025-08-19T21:55:50.1571720Z 
2025-08-19T21:55:50.1571786Z ```python
2025-08-19T21:55:50.1571966Z def build_url(async_: bool = True) -> str
2025-08-19T21:55:50.1572227Z ```
2025-08-19T21:55:50.1572314Z 
2025-08-19T21:55:50.1572421Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:55:50.1572598Z 
2025-08-19T21:55:50.1572705Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T21:55:50.1573048Z 
2025-08-19T21:55:50.1573155Z # price\_importer.services\_common.keepa
2025-08-19T21:55:50.1573322Z 
2025-08-19T21:55:50.1573427Z <a id="price_importer.services_common.llm"></a>
2025-08-19T21:55:50.1573613Z 
2025-08-19T21:55:50.1573706Z # price\_importer.services\_common.llm
2025-08-19T21:55:50.1573871Z 
2025-08-19T21:55:50.1573992Z <a id="price_importer.services_common.settings"></a>
2025-08-19T21:55:50.1574184Z 
2025-08-19T21:55:50.1574282Z # price\_importer.services\_common.settings
2025-08-19T21:55:50.1574455Z 
2025-08-19T21:55:50.1574567Z <a id="price_importer.services_common.db"></a>
2025-08-19T21:55:50.1574746Z 
2025-08-19T21:55:50.1574840Z # price\_importer.services\_common.db
2025-08-19T21:55:50.1575009Z 
2025-08-19T21:55:50.1575165Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T21:55:50.1575405Z 
2025-08-19T21:55:50.1575493Z #### build\_sqlalchemy\_url
2025-08-19T21:55:50.1575627Z 
2025-08-19T21:55:50.1575695Z ```python
2025-08-19T21:55:50.1575883Z def build_sqlalchemy_url() -> str
2025-08-19T21:55:50.1576098Z ```
2025-08-19T21:55:50.1576190Z 
2025-08-19T21:55:50.1576287Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:55:50.1576459Z 
2025-08-19T21:55:50.1576608Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T21:55:50.1576900Z 
2025-08-19T21:55:50.1576980Z #### build\_asyncpg\_dsn
2025-08-19T21:55:50.1577106Z 
2025-08-19T21:55:50.1577176Z ```python
2025-08-19T21:55:50.1577349Z def build_asyncpg_dsn() -> str
2025-08-19T21:55:50.1577559Z ```
2025-08-19T21:55:50.1577645Z 
2025-08-19T21:55:50.1577775Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:55:50.1577993Z 
2025-08-19T21:55:50.1578122Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T21:55:50.1578333Z 
2025-08-19T21:55:50.1578621Z #### refresh\_mvs
2025-08-19T21:55:50.1578770Z 
2025-08-19T21:55:50.1578838Z ```python
2025-08-19T21:55:50.1579053Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:55:50.1579318Z ```
2025-08-19T21:55:50.1579542Z 
2025-08-19T21:55:50.1579684Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:55:50.1579903Z 
2025-08-19T21:55:50.1580009Z <a id="price_importer.services_common"></a>
2025-08-19T21:55:50.1580191Z 
2025-08-19T21:55:50.1580284Z # price\_importer.services\_common
2025-08-19T21:55:50.1580439Z 
2025-08-19T21:55:50.1580551Z <a id="price_importer.services_common.base"></a>
2025-08-19T21:55:50.1580735Z 
2025-08-19T21:55:50.1580830Z # price\_importer.services\_common.base
2025-08-19T21:55:50.1581002Z 
2025-08-19T21:55:50.1581093Z <a id="price_importer.normaliser"></a>
2025-08-19T21:55:50.1581258Z 
2025-08-19T21:55:50.1581346Z # price\_importer.normaliser
2025-08-19T21:55:50.1581494Z 
2025-08-19T21:55:50.1581601Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T21:55:50.1581786Z 
2025-08-19T21:55:50.1581887Z # price\_importer.common.models\_vendor
2025-08-19T21:55:50.1582049Z 
2025-08-19T21:55:50.1582145Z <a id="price_importer.common.db_url"></a>
2025-08-19T21:55:50.1582326Z 
2025-08-19T21:55:50.1582418Z # price\_importer.common.db\_url
2025-08-19T21:55:50.1582567Z 
2025-08-19T21:55:50.1582674Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T21:55:50.1582865Z 
2025-08-19T21:55:50.1582933Z #### make\_dsn
2025-08-19T21:55:50.1583034Z 
2025-08-19T21:55:50.1583105Z ```python
2025-08-19T21:55:50.1583284Z def make_dsn(async_: bool = False) -> str
2025-08-19T21:55:50.1583523Z ```
2025-08-19T21:55:50.1583609Z 
2025-08-19T21:55:50.1583727Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T21:55:50.1583930Z 
2025-08-19T21:55:50.1584039Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T21:55:50.1584229Z 
2025-08-19T21:55:50.1584302Z #### build\_url
2025-08-19T21:55:50.1584405Z 
2025-08-19T21:55:50.1584471Z ```python
2025-08-19T21:55:50.1584654Z def build_url(async_: bool = False) -> str
2025-08-19T21:55:50.1584881Z ```
2025-08-19T21:55:50.1584965Z 
2025-08-19T21:55:50.1585094Z Return Postgres DSN built from environment variables.
2025-08-19T21:55:50.1585425Z 
2025-08-19T21:55:50.1585516Z <a id="price_importer.common"></a>
2025-08-19T21:55:50.1585674Z 
2025-08-19T21:55:50.1585757Z # price\_importer.common
2025-08-19T21:55:50.1585887Z 
2025-08-19T21:55:50.1585988Z <a id="price_importer.common.base"></a>
2025-08-19T21:55:50.1586154Z 
2025-08-19T21:55:50.1586240Z # price\_importer.common.base
2025-08-19T21:55:50.1586384Z 
2025-08-19T21:55:50.1586490Z <a id="price_importer.tests.conftest"></a>
2025-08-19T21:55:50.1586663Z 
2025-08-19T21:55:50.1586751Z # price\_importer.tests.conftest
2025-08-19T21:55:50.1586905Z 
2025-08-19T21:55:50.1587007Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T21:55:50.1587182Z 
2025-08-19T21:55:50.1587278Z # price\_importer.tests.test\_reader
2025-08-19T21:55:50.1587437Z 
2025-08-19T21:55:50.1587540Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T21:55:50.1587775Z 
2025-08-19T21:55:50.1587868Z # price\_importer.tests.test\_imports
2025-08-19T21:55:50.1588030Z 
2025-08-19T21:55:50.1588136Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T21:55:50.1588322Z 
2025-08-19T21:55:50.1588539Z # price\_importer.tests.test\_smoke
2025-08-19T21:55:50.1588784Z 
2025-08-19T21:55:50.1588940Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T21:55:50.1589136Z 
2025-08-19T21:55:50.1589233Z # price\_importer.tests.test\_normaliser
2025-08-19T21:55:50.1589409Z 
2025-08-19T21:55:50.1589499Z <a id="price_importer.tests"></a>
2025-08-19T21:55:50.1589651Z 
2025-08-19T21:55:50.1589730Z # price\_importer.tests
2025-08-19T21:55:50.1589863Z 
2025-08-19T21:55:50.1589949Z <a id="price_importer.reader"></a>
2025-08-19T21:55:50.1590100Z 
2025-08-19T21:55:50.1590192Z # price\_importer.reader
2025-08-19T21:55:50.1590321Z 
2025-08-19T21:55:50.1590417Z <a id="price_importer.repository"></a>
2025-08-19T21:55:50.1590581Z 
2025-08-19T21:55:50.1590673Z # price\_importer.repository
2025-08-19T21:55:50.1590813Z 
2025-08-19T21:55:50.1590902Z <a id="price_importer.import"></a>
2025-08-19T21:55:50.1591067Z 
2025-08-19T21:55:50.1591146Z # price\_importer.import
2025-08-19T21:55:50.1591408Z 
2025-08-19T21:55:50.1591490Z <a id="fees_h10"></a>
2025-08-19T21:55:50.1591606Z 
2025-08-19T21:55:50.1591674Z # fees\_h10
2025-08-19T21:55:50.1591769Z 
2025-08-19T21:55:50.1591857Z <a id="fees_h10.worker"></a>
2025-08-19T21:55:50.1591991Z 
2025-08-19T21:55:50.1592063Z # fees\_h10.worker
2025-08-19T21:55:50.1592177Z 
2025-08-19T21:55:50.1592276Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T21:55:50.1592453Z 
2025-08-19T21:55:50.1592536Z #### list\_active\_asins
2025-08-19T21:55:50.1592659Z 
2025-08-19T21:55:50.1592726Z ```python
2025-08-19T21:55:50.1592911Z def list_active_asins() -> list[str]
2025-08-19T21:55:50.1593128Z ```
2025-08-19T21:55:50.1593214Z 
2025-08-19T21:55:50.1593335Z Return known ASINs or an empty list if unavailable.
2025-08-19T21:55:50.1593531Z 
2025-08-19T21:55:50.1593620Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T21:55:50.1593789Z 
2025-08-19T21:55:50.1593876Z # fees\_h10.tests.test\_smoke
2025-08-19T21:55:50.1594023Z 
2025-08-19T21:55:50.1594115Z <a id="fees_h10.tests"></a>
2025-08-19T21:55:50.1594245Z 
2025-08-19T21:55:50.1594315Z # fees\_h10.tests
2025-08-19T21:55:50.1594420Z 
2025-08-19T21:55:50.1594507Z <a id="fees_h10.client"></a>
2025-08-19T21:55:50.1594640Z 
2025-08-19T21:55:50.1594710Z # fees\_h10.client
2025-08-19T21:55:50.1594824Z 
2025-08-19T21:55:50.1594909Z <a id="fees_h10.repository"></a>
2025-08-19T21:55:50.1595051Z 
2025-08-19T21:55:50.1595131Z # fees\_h10.repository
2025-08-19T21:55:50.1595249Z 
2025-08-19T21:55:50.1595354Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T21:55:50.1595537Z 
2025-08-19T21:55:50.1595618Z #### upsert\_fees\_raw
2025-08-19T21:55:50.1595736Z 
2025-08-19T21:55:50.1595805Z ```python
2025-08-19T21:55:50.1595984Z def upsert_fees_raw(engine: Engine,
2025-08-19T21:55:50.1596230Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T21:55:50.1596479Z                     *,
2025-08-19T21:55:50.1596705Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T21:55:50.1597112Z ```
2025-08-19T21:55:50.1597201Z 
2025-08-19T21:55:50.1597292Z Idempotent upsert for fees.
2025-08-19T21:55:50.1597428Z 
2025-08-19T21:55:50.1597583Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T21:55:50.1597937Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T21:55:50.1598248Z Only updates when one of the mutable fields changes.
2025-08-19T21:55:50.1598675Z 
2025-08-19T21:55:50.1598769Z <a id="emailer"></a>
2025-08-19T21:55:50.1598887Z 
2025-08-19T21:55:50.1598961Z # emailer
2025-08-19T21:55:50.1599055Z 
2025-08-19T21:55:50.1599159Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T21:55:50.1599339Z 
2025-08-19T21:55:50.1599442Z # emailer.tests.test\_import\_emailer
2025-08-19T21:55:50.1599610Z 
2025-08-19T21:55:50.1599699Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T21:55:50.1599861Z 
2025-08-19T21:55:50.1600053Z # emailer.tests.test\_smoke
2025-08-19T21:55:50.1600283Z 
2025-08-19T21:55:50.1600435Z <a id="emailer.tests"></a>
2025-08-19T21:55:50.1600617Z 
2025-08-19T21:55:50.1600693Z # emailer.tests
2025-08-19T21:55:50.1600804Z 
2025-08-19T21:55:50.1600903Z <a id="emailer.generate_body"></a>
2025-08-19T21:55:50.1601060Z 
2025-08-19T21:55:50.1601142Z # emailer.generate\_body
2025-08-19T21:55:50.1601278Z 
2025-08-19T21:55:50.1601354Z <a id="llm_server"></a>
2025-08-19T21:55:50.1601473Z 
2025-08-19T21:55:50.1601547Z # llm\_server
2025-08-19T21:55:50.1601649Z 
2025-08-19T21:55:50.1601732Z <a id="llm_server.app"></a>
2025-08-19T21:55:50.1601866Z 
2025-08-19T21:55:50.1601944Z # llm\_server.app
2025-08-19T21:55:50.1602053Z 
