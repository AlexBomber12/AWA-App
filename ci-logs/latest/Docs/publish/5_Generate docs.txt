2025-08-20T19:32:25.2314045Z ##[group]Run pydoc-markdown
2025-08-20T19:32:25.2314340Z [36;1mpydoc-markdown[0m
2025-08-20T19:32:25.2354813Z shell: /usr/bin/bash -e {0}
2025-08-20T19:32:25.2355046Z env:
2025-08-20T19:32:25.2355293Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:32:25.2355703Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T19:32:25.2356108Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:32:25.2356455Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:32:25.2356803Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:32:25.2357145Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T19:32:25.2357438Z ##[endgroup]
2025-08-20T19:32:25.5917462Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T19:32:25.5918178Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T19:32:25.5918894Z In "pydoc-markdown.yml"
2025-08-20T19:32:25.5919328Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T19:32:25.5920006Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T19:32:25.5920792Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T19:32:25.5921329Z 
2025-08-20T19:32:25.9419578Z <a id="__init__"></a>
2025-08-20T19:32:25.9420056Z 
2025-08-20T19:32:25.9420223Z # \_\_init\_\_
2025-08-20T19:32:25.9420468Z 
2025-08-20T19:32:25.9420629Z <a id="api"></a>
2025-08-20T19:32:25.9420810Z 
2025-08-20T19:32:25.9420925Z # api
2025-08-20T19:32:25.9421135Z 
2025-08-20T19:32:25.9421316Z <a id="api.errors"></a>
2025-08-20T19:32:25.9421622Z 
2025-08-20T19:32:25.9421778Z # api.errors
2025-08-20T19:32:25.9421999Z 
2025-08-20T19:32:25.9422187Z <a id="api.sentry_config"></a>
2025-08-20T19:32:25.9422411Z 
2025-08-20T19:32:25.9422527Z # api.sentry\_config
2025-08-20T19:32:25.9422707Z 
2025-08-20T19:32:25.9422867Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T19:32:25.9423425Z 
2025-08-20T19:32:25.9423555Z # api.tests.test\_stats\_contracts
2025-08-20T19:32:25.9423810Z 
2025-08-20T19:32:25.9423962Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T19:32:25.9424370Z 
2025-08-20T19:32:25.9424582Z # api.tests.test\_sentry\_scrub
2025-08-20T19:32:25.9424926Z 
2025-08-20T19:32:25.9425164Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T19:32:25.9425586Z 
2025-08-20T19:32:25.9425784Z # api.tests.test\_roi\_basic\_auth
2025-08-20T19:32:25.9426131Z 
2025-08-20T19:32:25.9426342Z <a id="api.tests.test_errors_json"></a>
2025-08-20T19:32:25.9426744Z 
2025-08-20T19:32:25.9426939Z # api.tests.test\_errors\_json
2025-08-20T19:32:25.9427270Z 
2025-08-20T19:32:25.9427471Z <a id="api.tests.test_llm"></a>
2025-08-20T19:32:25.9427799Z 
2025-08-20T19:32:25.9427972Z # api.tests.test\_llm
2025-08-20T19:32:25.9428250Z 
2025-08-20T19:32:25.9428727Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T19:32:25.9429114Z 
2025-08-20T19:32:25.9429302Z # api.tests.test\_roi\_filters
2025-08-20T19:32:25.9429593Z 
2025-08-20T19:32:25.9429731Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T19:32:25.9429992Z 
2025-08-20T19:32:25.9430118Z # api.tests.test\_sentry\_event
2025-08-20T19:32:25.9430330Z 
2025-08-20T19:32:25.9430517Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T19:32:25.9430831Z 
2025-08-20T19:32:25.9430934Z ## DummyTransport Objects
2025-08-20T19:32:25.9431090Z 
2025-08-20T19:32:25.9431172Z ```python
2025-08-20T19:32:25.9431383Z class DummyTransport()
2025-08-20T19:32:25.9431613Z ```
2025-08-20T19:32:25.9431725Z 
2025-08-20T19:32:25.9431939Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T19:32:25.9432258Z 
2025-08-20T19:32:25.9432352Z #### capture\_envelope
2025-08-20T19:32:25.9432494Z 
2025-08-20T19:32:25.9432576Z ```python
2025-08-20T19:32:25.9432793Z def capture_envelope(envelope)
2025-08-20T19:32:25.9433038Z ```
2025-08-20T19:32:25.9433146Z 
2025-08-20T19:32:25.9433297Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T19:32:25.9433553Z 
2025-08-20T19:32:25.9433658Z <a id="api.tests.test_cors"></a>
2025-08-20T19:32:25.9434079Z 
2025-08-20T19:32:25.9434171Z # api.tests.test\_cors
2025-08-20T19:32:25.9434315Z 
2025-08-20T19:32:25.9434426Z <a id="api.tests.test_imports"></a>
2025-08-20T19:32:25.9434616Z 
2025-08-20T19:32:25.9434712Z # api.tests.test\_imports
2025-08-20T19:32:25.9434872Z 
2025-08-20T19:32:25.9434978Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T19:32:25.9435177Z 
2025-08-20T19:32:25.9435275Z # api.tests.test\_rate\_limit
2025-08-20T19:32:25.9435451Z 
2025-08-20T19:32:25.9435567Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T19:32:25.9435777Z 
2025-08-20T19:32:25.9435863Z #### app
2025-08-20T19:32:25.9435972Z 
2025-08-20T19:32:25.9436054Z noqa: E402
2025-08-20T19:32:25.9436171Z 
2025-08-20T19:32:25.9436275Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T19:32:25.9436468Z 
2025-08-20T19:32:25.9436566Z # api.tests.test\_stats\_sql
2025-08-20T19:32:25.9436737Z 
2025-08-20T19:32:25.9436850Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T19:32:25.9437054Z 
2025-08-20T19:32:25.9437157Z # api.tests.test\_entrypoint
2025-08-20T19:32:25.9437323Z 
2025-08-20T19:32:25.9437451Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T19:32:25.9437684Z 
2025-08-20T19:32:25.9437796Z # api.tests.test\_stats\_future\_contracts
2025-08-20T19:32:25.9438002Z 
2025-08-20T19:32:25.9438104Z <a id="api.tests.test_health"></a>
2025-08-20T19:32:25.9438480Z 
2025-08-20T19:32:25.9438589Z # api.tests.test\_health
2025-08-20T19:32:25.9438742Z 
2025-08-20T19:32:25.9438850Z <a id="api.tests.test_score"></a>
2025-08-20T19:32:25.9439034Z 
2025-08-20T19:32:25.9439126Z # api.tests.test\_score
2025-08-20T19:32:25.9439279Z 
2025-08-20T19:32:25.9439377Z <a id="api.logging_config"></a>
2025-08-20T19:32:25.9439548Z 
2025-08-20T19:32:25.9439638Z # api.logging\_config
2025-08-20T19:32:25.9439785Z 
2025-08-20T19:32:25.9439885Z <a id="api.migrations.env"></a>
2025-08-20T19:32:25.9440056Z 
2025-08-20T19:32:25.9440293Z # api.migrations.env
2025-08-20T19:32:25.9440435Z 
2025-08-20T19:32:25.9440584Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T19:32:25.9440825Z 
2025-08-20T19:32:25.9440973Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T19:32:25.9441196Z 
2025-08-20T19:32:25.9441327Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T19:32:25.9441540Z 
2025-08-20T19:32:25.9441643Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T19:32:25.9441825Z 
2025-08-20T19:32:25.9441993Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T19:32:25.9442236Z 
2025-08-20T19:32:25.9442375Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T19:32:25.9442605Z 
2025-08-20T19:32:25.9442738Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T19:32:25.9442947Z 
2025-08-20T19:32:25.9443059Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T19:32:25.9443255Z 
2025-08-20T19:32:25.9443376Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T19:32:25.9443604Z 
2025-08-20T19:32:25.9443711Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T19:32:25.9443949Z 
2025-08-20T19:32:25.9444087Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T19:32:25.9444294Z 
2025-08-20T19:32:25.9444408Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T19:32:25.9444599Z 
2025-08-20T19:32:25.9444727Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T19:32:25.9444926Z 
2025-08-20T19:32:25.9445035Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T19:32:25.9445227Z 
2025-08-20T19:32:25.9445352Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T19:32:25.9445557Z 
2025-08-20T19:32:25.9445672Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T19:32:25.9445858Z 
2025-08-20T19:32:25.9445996Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T19:32:25.9446222Z 
2025-08-20T19:32:25.9446345Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T19:32:25.9446552Z 
2025-08-20T19:32:25.9446678Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T19:32:25.9447023Z 
2025-08-20T19:32:25.9447134Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T19:32:25.9447324Z 
2025-08-20T19:32:25.9447463Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T19:32:25.9447680Z 
2025-08-20T19:32:25.9447799Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T19:32:25.9447999Z 
2025-08-20T19:32:25.9448111Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T19:32:25.9448481Z 
2025-08-20T19:32:25.9448585Z # api.migrations.versions.0001\_baseline
2025-08-20T19:32:25.9448829Z 
2025-08-20T19:32:25.9448924Z <a id="api.migrations.versions"></a>
2025-08-20T19:32:25.9449089Z 
2025-08-20T19:32:25.9449178Z # api.migrations.versions
2025-08-20T19:32:25.9449314Z 
2025-08-20T19:32:25.9449395Z <a id="api.migrations"></a>
2025-08-20T19:32:25.9449537Z 
2025-08-20T19:32:25.9449610Z # api.migrations
2025-08-20T19:32:25.9449728Z 
2025-08-20T19:32:25.9449801Z <a id="api.db"></a>
2025-08-20T19:32:25.9449923Z 
2025-08-20T19:32:25.9449990Z # api.db
2025-08-20T19:32:25.9450082Z 
2025-08-20T19:32:25.9450173Z <a id="api.routes.score"></a>
2025-08-20T19:32:25.9450315Z 
2025-08-20T19:32:25.9450389Z # api.routes.score
2025-08-20T19:32:25.9450506Z 
2025-08-20T19:32:25.9450589Z <a id="api.routes.stats"></a>
2025-08-20T19:32:25.9450731Z 
2025-08-20T19:32:25.9450804Z # api.routes.stats
2025-08-20T19:32:25.9450926Z 
2025-08-20T19:32:25.9451006Z <a id="api.routes.roi"></a>
2025-08-20T19:32:25.9451138Z 
2025-08-20T19:32:25.9451215Z # api.routes.roi
2025-08-20T19:32:25.9451324Z 
2025-08-20T19:32:25.9451411Z <a id="api.routes.health"></a>
2025-08-20T19:32:25.9451556Z 
2025-08-20T19:32:25.9451637Z # api.routes.health
2025-08-20T19:32:25.9451749Z 
2025-08-20T19:32:25.9451846Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T19:32:25.9452020Z 
2025-08-20T19:32:25.9452090Z #### MAX\_SKEW
2025-08-20T19:32:25.9452193Z 
2025-08-20T19:32:25.9452395Z seconds
2025-08-20T19:32:25.9452487Z 
2025-08-20T19:32:25.9452583Z <a id="api.routes.health.health"></a>
2025-08-20T19:32:25.9452754Z 
2025-08-20T19:32:25.9452827Z #### health
2025-08-20T19:32:25.9452921Z 
2025-08-20T19:32:25.9452990Z ```python
2025-08-20T19:32:25.9453204Z @router.get("/health", include_in_schema=False)
2025-08-20T19:32:25.9453605Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T19:32:25.9453955Z ```
2025-08-20T19:32:25.9454045Z 
2025-08-20T19:32:25.9454169Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T19:32:25.9454367Z 
2025-08-20T19:32:25.9454460Z <a id="api.routes.repository"></a>
2025-08-20T19:32:25.9454623Z 
2025-08-20T19:32:25.9454712Z # api.routes.repository
2025-08-20T19:32:25.9454841Z 
2025-08-20T19:32:25.9454918Z <a id="api.routes"></a>
2025-08-20T19:32:25.9455045Z 
2025-08-20T19:32:25.9455115Z # api.routes
2025-08-20T19:32:25.9455214Z 
2025-08-20T19:32:25.9455346Z <a id="api.models.fee"></a>
2025-08-20T19:32:25.9455490Z 
2025-08-20T19:32:25.9455568Z # api.models.fee
2025-08-20T19:32:25.9455682Z 
2025-08-20T19:32:25.9455758Z <a id="api.models"></a>
2025-08-20T19:32:25.9455889Z 
2025-08-20T19:32:25.9455957Z # api.models
2025-08-20T19:32:25.9456053Z 
2025-08-20T19:32:25.9456137Z <a id="api.roi_repository"></a>
2025-08-20T19:32:25.9456289Z 
2025-08-20T19:32:25.9456366Z # api.roi\_repository
2025-08-20T19:32:25.9456485Z 
2025-08-20T19:32:25.9456566Z <a id="api.main"></a>
2025-08-20T19:32:25.9456681Z 
2025-08-20T19:32:25.9456749Z # api.main
2025-08-20T19:32:25.9456847Z 
2025-08-20T19:32:25.9456938Z <a id="api.main.ready"></a>
2025-08-20T19:32:25.9457074Z 
2025-08-20T19:32:25.9457155Z #### ready
2025-08-20T19:32:25.9457246Z 
2025-08-20T19:32:25.9457317Z ```python
2025-08-20T19:32:25.9457585Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T19:32:25.9458032Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T19:32:25.9458598Z                                                                       str]
2025-08-20T19:32:25.9458858Z ```
2025-08-20T19:32:25.9459082Z 
2025-08-20T19:32:25.9459186Z Return 200 only when migrations are at head.
2025-08-20T19:32:25.9459371Z 
2025-08-20T19:32:25.9459448Z <a id="api.config"></a>
2025-08-20T19:32:25.9459570Z 
2025-08-20T19:32:25.9459648Z # api.config
2025-08-20T19:32:25.9459746Z 
2025-08-20T19:32:25.9459829Z <a id="api.security"></a>
2025-08-20T19:32:25.9459959Z 
2025-08-20T19:32:25.9460035Z # api.security
2025-08-20T19:32:25.9460141Z 
2025-08-20T19:32:25.9460210Z <a id="etl"></a>
2025-08-20T19:32:25.9460323Z 
2025-08-20T19:32:25.9460390Z # etl
2025-08-20T19:32:25.9460479Z 
2025-08-20T19:32:25.9460568Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T19:32:25.9460721Z 
2025-08-20T19:32:25.9460799Z # etl.fba\_fee\_ingestor
2025-08-20T19:32:25.9460926Z 
2025-08-20T19:32:25.9461014Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T19:32:25.9461161Z 
2025-08-20T19:32:25.9461237Z # etl.sp\_fees\_ingestor
2025-08-20T19:32:25.9461372Z 
2025-08-20T19:32:25.9461454Z <a id="etl.keepa_ingestor"></a>
2025-08-20T19:32:25.9461604Z 
2025-08-20T19:32:25.9461679Z # etl.keepa\_ingestor
2025-08-20T19:32:25.9461801Z 
2025-08-20T19:32:25.9461873Z <a id="etl.db"></a>
2025-08-20T19:32:25.9461983Z 
2025-08-20T19:32:25.9462054Z # etl.db
2025-08-20T19:32:25.9462145Z 
2025-08-20T19:32:25.9462233Z <a id="etl.dialects.schemas"></a>
2025-08-20T19:32:25.9462391Z 
2025-08-20T19:32:25.9462469Z # etl.dialects.schemas
2025-08-20T19:32:25.9462591Z 
2025-08-20T19:32:25.9462703Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T19:32:25.9462896Z 
2025-08-20T19:32:25.9462989Z # etl.dialects.amazon\_reimbursements
2025-08-20T19:32:25.9463153Z 
2025-08-20T19:32:25.9463263Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T19:32:25.9463441Z 
2025-08-20T19:32:25.9463532Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T19:32:25.9463696Z 
2025-08-20T19:32:25.9463785Z <a id="etl.dialects.test_generic"></a>
2025-08-20T19:32:25.9463948Z 
2025-08-20T19:32:25.9464150Z # etl.dialects.test\_generic
2025-08-20T19:32:25.9464297Z 
2025-08-20T19:32:25.9464395Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T19:32:25.9464563Z 
2025-08-20T19:32:25.9464656Z # etl.dialects.amazon\_returns
2025-08-20T19:32:25.9464805Z 
2025-08-20T19:32:25.9464908Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T19:32:25.9465093Z 
2025-08-20T19:32:25.9465186Z # etl.dialects.amazon\_fee\_preview
2025-08-20T19:32:25.9465345Z 
2025-08-20T19:32:25.9465454Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T19:32:25.9465651Z 
2025-08-20T19:32:25.9465746Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T19:32:25.9465916Z 
2025-08-20T19:32:25.9466019Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T19:32:25.9466194Z 
2025-08-20T19:32:25.9466284Z # etl.dialects.amazon\_settlements
2025-08-20T19:32:25.9466445Z 
2025-08-20T19:32:25.9466527Z <a id="etl.dialects"></a>
2025-08-20T19:32:25.9466658Z 
2025-08-20T19:32:25.9466731Z # etl.dialects
2025-08-20T19:32:25.9466843Z 
2025-08-20T19:32:25.9466920Z <a id="ingest"></a>
2025-08-20T19:32:25.9467031Z 
2025-08-20T19:32:25.9467109Z # ingest
2025-08-20T19:32:25.9467199Z 
2025-08-20T19:32:25.9467284Z <a id="ingest.maintenance"></a>
2025-08-20T19:32:25.9467431Z 
2025-08-20T19:32:25.9467513Z # ingest.maintenance
2025-08-20T19:32:25.9467632Z 
2025-08-20T19:32:25.9467715Z <a id="ingest.copy_loader"></a>
2025-08-20T19:32:25.9467862Z 
2025-08-20T19:32:25.9467937Z # ingest.copy\_loader
2025-08-20T19:32:25.9468059Z 
2025-08-20T19:32:25.9468168Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T19:32:25.9468567Z 
2025-08-20T19:32:25.9468652Z #### copy\_df\_via\_temp
2025-08-20T19:32:25.9468782Z 
2025-08-20T19:32:25.9468855Z ```python
2025-08-20T19:32:25.9469036Z def copy_df_via_temp(engine: Engine,
2025-08-20T19:32:25.9469289Z                      df: pd.DataFrame,
2025-08-20T19:32:25.9469532Z                      target_table: str,
2025-08-20T19:32:25.9469764Z                      *,
2025-08-20T19:32:25.9469973Z                      target_schema: str | None = None,
2025-08-20T19:32:25.9470253Z                      columns: Sequence[str],
2025-08-20T19:32:25.9470665Z                      conflict_cols: Sequence[str] | None = None,
2025-08-20T19:32:25.9470948Z                      analyze_after: bool = False,
2025-08-20T19:32:25.9471228Z                      connection: Any | None = None) -> int
2025-08-20T19:32:25.9471474Z ```
2025-08-20T19:32:25.9471571Z 
2025-08-20T19:32:25.9471728Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T19:32:25.9471964Z 
2025-08-20T19:32:25.9472056Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T19:32:25.9472227Z 
2025-08-20T19:32:25.9472311Z # ingest.tests.test\_smoke
2025-08-20T19:32:25.9472446Z 
2025-08-20T19:32:25.9472531Z <a id="ingest.tests"></a>
2025-08-20T19:32:25.9472663Z 
2025-08-20T19:32:25.9472734Z # ingest.tests
2025-08-20T19:32:25.9472847Z 
2025-08-20T19:32:25.9472934Z <a id="ingest.upload_router"></a>
2025-08-20T19:32:25.9473088Z 
2025-08-20T19:32:25.9473164Z # ingest.upload\_router
2025-08-20T19:32:25.9473301Z 
2025-08-20T19:32:25.9473385Z <a id="ingest.email_watcher"></a>
2025-08-20T19:32:25.9473541Z 
2025-08-20T19:32:25.9473625Z # ingest.email\_watcher
2025-08-20T19:32:25.9473748Z 
2025-08-20T19:32:25.9473839Z <a id="ingest.email_watcher.main"></a>
2025-08-20T19:32:25.9474008Z 
2025-08-20T19:32:25.9474073Z #### main
2025-08-20T19:32:25.9474166Z 
2025-08-20T19:32:25.9474233Z ```python
2025-08-20T19:32:25.9474410Z def main() -> dict[str, str]
2025-08-20T19:32:25.9474608Z ```
2025-08-20T19:32:25.9474700Z 
2025-08-20T19:32:25.9474841Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T19:32:25.9475066Z 
2025-08-20T19:32:25.9475204Z Returns {"status": "success"} when processing completes.
2025-08-20T19:32:25.9475413Z 
2025-08-20T19:32:25.9475493Z <a id="ingest.tasks"></a>
2025-08-20T19:32:25.9475629Z 
2025-08-20T19:32:25.9475699Z # ingest.tasks
2025-08-20T19:32:25.9475818Z 
2025-08-20T19:32:25.9475919Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T19:32:25.9476276Z 
2025-08-20T19:32:25.9476361Z #### task\_import\_file
2025-08-20T19:32:25.9476489Z 
2025-08-20T19:32:25.9476558Z ```python
2025-08-20T19:32:25.9476779Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T19:32:25.9477066Z def task_import_file(self: Any,
2025-08-20T19:32:25.9477296Z                      uri: str,
2025-08-20T19:32:25.9477525Z                      report_type: str | None = None,
2025-08-20T19:32:25.9477805Z                      force: bool = False) -> dict[str, Any]
2025-08-20T19:32:25.9478054Z ```
2025-08-20T19:32:25.9478143Z 
2025-08-20T19:32:25.9478440Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T19:32:25.9478704Z 
2025-08-20T19:32:25.9478797Z <a id="ingest.celery_app"></a>
2025-08-20T19:32:25.9478942Z 
2025-08-20T19:32:25.9479019Z # ingest.celery\_app
2025-08-20T19:32:25.9479144Z 
2025-08-20T19:32:25.9479232Z <a id="ingest.ingest_router"></a>
2025-08-20T19:32:25.9479383Z 
2025-08-20T19:32:25.9479460Z # ingest.ingest\_router
2025-08-20T19:32:25.9479598Z 
2025-08-20T19:32:25.9479677Z <a id="logistics_etl"></a>
2025-08-20T19:32:25.9479813Z 
2025-08-20T19:32:25.9479889Z # logistics\_etl
2025-08-20T19:32:25.9480000Z 
2025-08-20T19:32:25.9480079Z Daily logistics ETL job.
2025-08-20T19:32:25.9480210Z 
2025-08-20T19:32:25.9480293Z <a id="logistics_etl.__main__"></a>
2025-08-20T19:32:25.9480450Z 
2025-08-20T19:32:25.9480530Z # logistics\_etl.\_\_main\_\_
2025-08-20T19:32:25.9480673Z 
2025-08-20T19:32:25.9480753Z <a id="logistics_etl.dsn"></a>
2025-08-20T19:32:25.9480893Z 
2025-08-20T19:32:25.9480973Z # logistics\_etl.dsn
2025-08-20T19:32:25.9481087Z 
2025-08-20T19:32:25.9481206Z Local DSN builder to avoid cross-service dependency.
2025-08-20T19:32:25.9481412Z 
2025-08-20T19:32:25.9481508Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T19:32:25.9481680Z 
2025-08-20T19:32:25.9481751Z #### build\_dsn
2025-08-20T19:32:25.9481862Z 
2025-08-20T19:32:25.9481929Z ```python
2025-08-20T19:32:25.9482118Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:32:25.9482350Z ```
2025-08-20T19:32:25.9482435Z 
2025-08-20T19:32:25.9482713Z Return a Postgres DSN assembled from environment variables.
2025-08-20T19:32:25.9482939Z 
2025-08-20T19:32:25.9483090Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T19:32:25.9483498Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T19:32:25.9483842Z error when any required variable is missing.
2025-08-20T19:32:25.9484027Z 
2025-08-20T19:32:25.9484126Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T19:32:25.9484303Z 
2025-08-20T19:32:25.9484396Z # logistics\_etl.tests.conftest
2025-08-20T19:32:25.9484543Z 
2025-08-20T19:32:25.9484653Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T19:32:25.9484847Z 
2025-08-20T19:32:25.9484939Z # logistics\_etl.tests.test\_repository
2025-08-20T19:32:25.9485104Z 
2025-08-20T19:32:25.9485199Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T19:32:25.9485378Z 
2025-08-20T19:32:25.9485463Z # logistics\_etl.tests.test\_cron
2025-08-20T19:32:25.9485619Z 
2025-08-20T19:32:25.9485723Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T19:32:25.9485904Z 
2025-08-20T19:32:25.9485991Z # logistics\_etl.tests.test\_imports
2025-08-20T19:32:25.9486158Z 
2025-08-20T19:32:25.9486252Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T19:32:25.9486422Z 
2025-08-20T19:32:25.9486508Z # logistics\_etl.tests.test\_smoke
2025-08-20T19:32:25.9486667Z 
2025-08-20T19:32:25.9486763Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T19:32:25.9486934Z 
2025-08-20T19:32:25.9487026Z # logistics\_etl.tests.test\_client
2025-08-20T19:32:25.9487180Z 
2025-08-20T19:32:25.9487300Z <a id="logistics_etl.tests"></a>
2025-08-20T19:32:25.9487450Z 
2025-08-20T19:32:25.9487524Z # logistics\_etl.tests
2025-08-20T19:32:25.9487646Z 
2025-08-20T19:32:25.9487728Z <a id="logistics_etl.flow"></a>
2025-08-20T19:32:25.9487876Z 
2025-08-20T19:32:25.9487949Z # logistics\_etl.flow
2025-08-20T19:32:25.9488067Z 
2025-08-20T19:32:25.9488161Z <a id="logistics_etl.client"></a>
2025-08-20T19:32:25.9488537Z 
2025-08-20T19:32:25.9553205Z # logistics\_etl.client
2025-08-20T19:32:25.9553581Z 
2025-08-20T19:32:25.9553761Z <a id="logistics_etl.cron"></a>
2025-08-20T19:32:25.9554080Z 
2025-08-20T19:32:25.9554235Z # logistics\_etl.cron
2025-08-20T19:32:25.9554487Z 
2025-08-20T19:32:25.9554666Z <a id="logistics_etl.db"></a>
2025-08-20T19:32:25.9554965Z 
2025-08-20T19:32:25.9555115Z # logistics\_etl.db
2025-08-20T19:32:25.9555362Z 
2025-08-20T19:32:25.9555514Z <a id="logistics_etl.repository"></a>
2025-08-20T19:32:25.9555784Z 
2025-08-20T19:32:25.9555959Z # logistics\_etl.repository
2025-08-20T19:32:25.9556261Z 
2025-08-20T19:32:25.9556414Z <a id="alert_bot"></a>
2025-08-20T19:32:25.9556665Z 
2025-08-20T19:32:25.9556815Z # alert\_bot
2025-08-20T19:32:25.9556998Z 
2025-08-20T19:32:25.9557114Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T19:32:25.9557326Z 
2025-08-20T19:32:25.9557437Z # alert\_bot.tests.test\_smoke
2025-08-20T19:32:25.9557615Z 
2025-08-20T19:32:25.9557727Z <a id="alert_bot.tests"></a>
2025-08-20T19:32:25.9557904Z 
2025-08-20T19:32:25.9557998Z # alert\_bot.tests
2025-08-20T19:32:25.9558142Z 
2025-08-20T19:32:25.9558460Z <a id="alert_bot.alert_bot"></a>
2025-08-20T19:32:25.9558711Z 
2025-08-20T19:32:25.9558809Z # alert\_bot.alert\_bot
2025-08-20T19:32:25.9558966Z 
2025-08-20T19:32:25.9559073Z <a id="alert_bot.rules"></a>
2025-08-20T19:32:25.9559242Z 
2025-08-20T19:32:25.9559330Z # alert\_bot.rules
2025-08-20T19:32:25.9559469Z 
2025-08-20T19:32:25.9559556Z <a id="common"></a>
2025-08-20T19:32:25.9559691Z 
2025-08-20T19:32:25.9559773Z # common
2025-08-20T19:32:25.9559897Z 
2025-08-20T19:32:25.9559991Z <a id="common.dsn"></a>
2025-08-20T19:32:25.9560143Z 
2025-08-20T19:32:25.9560235Z # common.dsn
2025-08-20T19:32:25.9560360Z 
2025-08-20T19:32:25.9560469Z <a id="common.dsn.build_dsn"></a>
2025-08-20T19:32:25.9560667Z 
2025-08-20T19:32:25.9560751Z #### build\_dsn
2025-08-20T19:32:25.9560880Z 
2025-08-20T19:32:25.9560964Z ```python
2025-08-20T19:32:25.9561198Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:32:25.9561429Z ```
2025-08-20T19:32:25.9561685Z 
2025-08-20T19:32:25.9561818Z Return a Postgres DSN, validating required variables.
2025-08-20T19:32:25.9562030Z 
2025-08-20T19:32:25.9562227Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T19:32:25.9562672Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T19:32:25.9563096Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T19:32:25.9563410Z missing.
2025-08-20T19:32:25.9563510Z 
2025-08-20T19:32:25.9563598Z <a id="common.models_vendor"></a>
2025-08-20T19:32:25.9563752Z 
2025-08-20T19:32:25.9563837Z # common.models\_vendor
2025-08-20T19:32:25.9563961Z 
2025-08-20T19:32:25.9564052Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T19:32:25.9564221Z 
2025-08-20T19:32:25.9564296Z ## Vendor Objects
2025-08-20T19:32:25.9564406Z 
2025-08-20T19:32:25.9564471Z ```python
2025-08-20T19:32:25.9564641Z class Vendor(Base)
2025-08-20T19:32:25.9564810Z ```
2025-08-20T19:32:25.9564903Z 
2025-08-20T19:32:25.9564990Z Vendor of inventory items.
2025-08-20T19:32:25.9565127Z 
2025-08-20T19:32:25.9565238Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T19:32:25.9565419Z 
2025-08-20T19:32:25.9565495Z ## VendorPrice Objects
2025-08-20T19:32:25.9565623Z 
2025-08-20T19:32:25.9565690Z ```python
2025-08-20T19:32:25.9565857Z class VendorPrice(Base)
2025-08-20T19:32:25.9566044Z ```
2025-08-20T19:32:25.9566128Z 
2025-08-20T19:32:25.9566234Z Association table linking vendors to pricing.
2025-08-20T19:32:25.9566425Z 
2025-08-20T19:32:25.9566503Z <a id="common.db_url"></a>
2025-08-20T19:32:25.9566635Z 
2025-08-20T19:32:25.9566712Z # common.db\_url
2025-08-20T19:32:25.9566821Z 
2025-08-20T19:32:25.9566908Z <a id="common.db_url.build_url"></a>
2025-08-20T19:32:25.9567072Z 
2025-08-20T19:32:25.9567139Z #### build\_url
2025-08-20T19:32:25.9567242Z 
2025-08-20T19:32:25.9567307Z ```python
2025-08-20T19:32:25.9567497Z def build_url(async_: bool = True) -> str
2025-08-20T19:32:25.9567851Z ```
2025-08-20T19:32:25.9567949Z 
2025-08-20T19:32:25.9568060Z Return Postgres DSN from environment variables.
2025-08-20T19:32:25.9568360Z 
2025-08-20T19:32:25.9568452Z <a id="common.keepa"></a>
2025-08-20T19:32:25.9568588Z 
2025-08-20T19:32:25.9568658Z # common.keepa
2025-08-20T19:32:25.9568770Z 
2025-08-20T19:32:25.9568846Z <a id="common.llm"></a>
2025-08-20T19:32:25.9568967Z 
2025-08-20T19:32:25.9569035Z # common.llm
2025-08-20T19:32:25.9569140Z 
2025-08-20T19:32:25.9569223Z <a id="common.settings"></a>
2025-08-20T19:32:25.9569365Z 
2025-08-20T19:32:25.9569442Z # common.settings
2025-08-20T19:32:25.9569553Z 
2025-08-20T19:32:25.9569625Z <a id="common.db"></a>
2025-08-20T19:32:25.9569749Z 
2025-08-20T19:32:25.9569817Z # common.db
2025-08-20T19:32:25.9569912Z 
2025-08-20T19:32:25.9570011Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T19:32:25.9570195Z 
2025-08-20T19:32:25.9570280Z #### build\_sqlalchemy\_url
2025-08-20T19:32:25.9570421Z 
2025-08-20T19:32:25.9570498Z ```python
2025-08-20T19:32:25.9570678Z def build_sqlalchemy_url() -> str
2025-08-20T19:32:25.9570902Z ```
2025-08-20T19:32:25.9570986Z 
2025-08-20T19:32:25.9571083Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T19:32:25.9571272Z 
2025-08-20T19:32:25.9571364Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T19:32:25.9571534Z 
2025-08-20T19:32:25.9571612Z #### build\_asyncpg\_dsn
2025-08-20T19:32:25.9571745Z 
2025-08-20T19:32:25.9571811Z ```python
2025-08-20T19:32:25.9571998Z def build_asyncpg_dsn() -> str
2025-08-20T19:32:25.9572203Z ```
2025-08-20T19:32:25.9572288Z 
2025-08-20T19:32:25.9572424Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T19:32:25.9572644Z 
2025-08-20T19:32:25.9572735Z <a id="common.db.refresh_mvs"></a>
2025-08-20T19:32:25.9572896Z 
2025-08-20T19:32:25.9572969Z #### refresh\_mvs
2025-08-20T19:32:25.9573079Z 
2025-08-20T19:32:25.9573144Z ```python
2025-08-20T19:32:25.9573351Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T19:32:25.9573619Z ```
2025-08-20T19:32:25.9573705Z 
2025-08-20T19:32:25.9573970Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T19:32:25.9574192Z 
2025-08-20T19:32:25.9574281Z <a id="common.config"></a>
2025-08-20T19:32:25.9574416Z 
2025-08-20T19:32:25.9574487Z # common.config
2025-08-20T19:32:25.9574600Z 
2025-08-20T19:32:25.9574678Z <a id="common.base"></a>
2025-08-20T19:32:25.9574804Z 
2025-08-20T19:32:25.9574878Z # common.base
2025-08-20T19:32:25.9574979Z 
2025-08-20T19:32:25.9575061Z <a id="common.base.Base"></a>
2025-08-20T19:32:25.9575205Z 
2025-08-20T19:32:25.9575284Z ## Base Objects
2025-08-20T19:32:25.9575385Z 
2025-08-20T19:32:25.9575450Z ```python
2025-08-20T19:32:25.9575628Z class Base(DeclarativeBase)
2025-08-20T19:32:25.9575826Z ```
2025-08-20T19:32:25.9575915Z 
2025-08-20T19:32:25.9576000Z Base class for SQLAlchemy models.
2025-08-20T19:32:25.9576151Z 
2025-08-20T19:32:25.9576233Z <a id="repricer"></a>
2025-08-20T19:32:25.9576352Z 
2025-08-20T19:32:25.9576419Z # repricer
2025-08-20T19:32:25.9576518Z 
2025-08-20T19:32:25.9576614Z <a id="repricer.app.schemas"></a>
2025-08-20T19:32:25.9576773Z 
2025-08-20T19:32:25.9576852Z # repricer.app.schemas
2025-08-20T19:32:25.9576986Z 
2025-08-20T19:32:25.9577071Z <a id="repricer.app.deps"></a>
2025-08-20T19:32:25.9577216Z 
2025-08-20T19:32:25.9577292Z # repricer.app.deps
2025-08-20T19:32:25.9577413Z 
2025-08-20T19:32:25.9577530Z Placeholder module for Keepa / SP-API clients.
2025-08-20T19:32:25.9577720Z 
2025-08-20T19:32:25.9577814Z <a id="repricer.app.logic"></a>
2025-08-20T19:32:25.9577958Z 
2025-08-20T19:32:25.9578034Z # repricer.app.logic
2025-08-20T19:32:25.9578160Z 
2025-08-20T19:32:25.9578362Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T19:32:25.9578541Z 
2025-08-20T19:32:25.9578610Z #### MIN\_MARGIN
2025-08-20T19:32:25.9578719Z 
2025-08-20T19:32:25.9578784Z 15 % ROI
2025-08-20T19:32:25.9578875Z 
2025-08-20T19:32:25.9578987Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T19:32:25.9579169Z 
2025-08-20T19:32:25.9579362Z #### compute\_price
2025-08-20T19:32:25.9579478Z 
2025-08-20T19:32:25.9579596Z ```python
2025-08-20T19:32:25.9579844Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T19:32:25.9580152Z ```
2025-08-20T19:32:25.9580238Z 
2025-08-20T19:32:25.9580355Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T19:32:25.9580640Z Replace with real competitive logic later.
2025-08-20T19:32:25.9580812Z 
2025-08-20T19:32:25.9580902Z <a id="repricer.app.main"></a>
2025-08-20T19:32:25.9581046Z 
2025-08-20T19:32:25.9581121Z # repricer.app.main
2025-08-20T19:32:25.9581239Z 
2025-08-20T19:32:25.9581318Z <a id="repricer.app"></a>
2025-08-20T19:32:25.9581449Z 
2025-08-20T19:32:25.9581519Z # repricer.app
2025-08-20T19:32:25.9581628Z 
2025-08-20T19:32:25.9581722Z <a id="repricer.tests.test_imports"></a>
2025-08-20T19:32:25.9581892Z 
2025-08-20T19:32:25.9581983Z # repricer.tests.test\_imports
2025-08-20T19:32:25.9582125Z 
2025-08-20T19:32:25.9582218Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T19:32:25.9582395Z 
2025-08-20T19:32:25.9582480Z # repricer.tests.test\_smoke
2025-08-20T19:32:25.9582626Z 
2025-08-20T19:32:25.9582706Z <a id="repricer.tests"></a>
2025-08-20T19:32:25.9582846Z 
2025-08-20T19:32:25.9582918Z # repricer.tests
2025-08-20T19:32:25.9583025Z 
2025-08-20T19:32:25.9583099Z <a id="db"></a>
2025-08-20T19:32:25.9583204Z 
2025-08-20T19:32:25.9583266Z # db
2025-08-20T19:32:25.9583361Z 
2025-08-20T19:32:25.9583441Z <a id="db.utils.views"></a>
2025-08-20T19:32:25.9583573Z 
2025-08-20T19:32:25.9583642Z # db.utils.views
2025-08-20T19:32:25.9583754Z 
2025-08-20T19:32:25.9583849Z <a id="db.utils.views.replace_view"></a>
2025-08-20T19:32:25.9584018Z 
2025-08-20T19:32:25.9584095Z #### replace\_view
2025-08-20T19:32:25.9584203Z 
2025-08-20T19:32:25.9584271Z ```python
2025-08-20T19:32:25.9584475Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T19:32:25.9584726Z ```
2025-08-20T19:32:25.9584818Z 
2025-08-20T19:32:25.9584910Z Drop and recreate a SQL view atomically.
2025-08-20T19:32:25.9585083Z 
2025-08-20T19:32:25.9585157Z <a id="db.utils"></a>
2025-08-20T19:32:25.9585399Z 
2025-08-20T19:32:25.9585464Z # db.utils
2025-08-20T19:32:25.9585558Z 
2025-08-20T19:32:25.9585644Z <a id="price_importer"></a>
2025-08-20T19:32:25.9585777Z 
2025-08-20T19:32:25.9585849Z # price\_importer
2025-08-20T19:32:25.9585961Z 
2025-08-20T19:32:25.9586065Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T19:32:25.9586250Z 
2025-08-20T19:32:25.9586341Z # price\_importer.services\_common.dsn
2025-08-20T19:32:25.9586512Z 
2025-08-20T19:32:25.9586641Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T19:32:25.9586851Z 
2025-08-20T19:32:25.9586922Z #### build\_dsn
2025-08-20T19:32:25.9587023Z 
2025-08-20T19:32:25.9587089Z ```python
2025-08-20T19:32:25.9587274Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:32:25.9587499Z ```
2025-08-20T19:32:25.9587589Z 
2025-08-20T19:32:25.9587658Z Return safe DSN.
2025-08-20T19:32:25.9587766Z 
2025-08-20T19:32:25.9587949Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T19:32:25.9588428Z Falls back to individual PG_* variables.
2025-08-20T19:32:25.9588938Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T19:32:25.9589145Z 
2025-08-20T19:32:25.9589279Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T19:32:25.9589497Z 
2025-08-20T19:32:25.9589618Z # price\_importer.services\_common.models\_vendor
2025-08-20T19:32:25.9589814Z 
2025-08-20T19:32:25.9589931Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T19:32:25.9590127Z 
2025-08-20T19:32:25.9590223Z # price\_importer.services\_common.db\_url
2025-08-20T19:32:25.9590398Z 
2025-08-20T19:32:25.9590537Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T19:32:25.9590753Z 
2025-08-20T19:32:25.9590823Z #### build\_url
2025-08-20T19:32:25.9590933Z 
2025-08-20T19:32:25.9591001Z ```python
2025-08-20T19:32:25.9591181Z def build_url(async_: bool = True) -> str
2025-08-20T19:32:25.9591555Z ```
2025-08-20T19:32:25.9591643Z 
2025-08-20T19:32:25.9591752Z Return Postgres DSN from environment variables.
2025-08-20T19:32:25.9591957Z 
2025-08-20T19:32:25.9592065Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T19:32:25.9592252Z 
2025-08-20T19:32:25.9592353Z # price\_importer.services\_common.keepa
2025-08-20T19:32:25.9592524Z 
2025-08-20T19:32:25.9592625Z <a id="price_importer.services_common.llm"></a>
2025-08-20T19:32:25.9592817Z 
2025-08-20T19:32:25.9592911Z # price\_importer.services\_common.llm
2025-08-20T19:32:25.9593076Z 
2025-08-20T19:32:25.9593198Z <a id="price_importer.services_common.settings"></a>
2025-08-20T19:32:25.9593393Z 
2025-08-20T19:32:25.9593494Z # price\_importer.services\_common.settings
2025-08-20T19:32:25.9593673Z 
2025-08-20T19:32:25.9593782Z <a id="price_importer.services_common.db"></a>
2025-08-20T19:32:25.9593960Z 
2025-08-20T19:32:25.9594053Z # price\_importer.services\_common.db
2025-08-20T19:32:25.9594226Z 
2025-08-20T19:32:25.9594382Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T19:32:25.9594631Z 
2025-08-20T19:32:25.9594727Z #### build\_sqlalchemy\_url
2025-08-20T19:32:25.9594864Z 
2025-08-20T19:32:25.9594932Z ```python
2025-08-20T19:32:25.9595117Z def build_sqlalchemy_url() -> str
2025-08-20T19:32:25.9595333Z ```
2025-08-20T19:32:25.9595425Z 
2025-08-20T19:32:25.9595523Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T19:32:25.9595698Z 
2025-08-20T19:32:25.9595844Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T19:32:25.9596079Z 
2025-08-20T19:32:25.9596159Z #### build\_asyncpg\_dsn
2025-08-20T19:32:25.9596289Z 
2025-08-20T19:32:25.9596362Z ```python
2025-08-20T19:32:25.9596535Z def build_asyncpg_dsn() -> str
2025-08-20T19:32:25.9596748Z ```
2025-08-20T19:32:25.9596834Z 
2025-08-20T19:32:25.9596963Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T19:32:25.9597184Z 
2025-08-20T19:32:25.9597318Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T19:32:25.9597534Z 
2025-08-20T19:32:25.9597612Z #### refresh\_mvs
2025-08-20T19:32:25.9597842Z 
2025-08-20T19:32:25.9597909Z ```python
2025-08-20T19:32:25.9598114Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T19:32:25.9598570Z ```
2025-08-20T19:32:25.9598660Z 
2025-08-20T19:32:25.9598804Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T19:32:25.9599022Z 
2025-08-20T19:32:25.9599121Z <a id="price_importer.services_common"></a>
2025-08-20T19:32:25.9599300Z 
2025-08-20T19:32:25.9599390Z # price\_importer.services\_common
2025-08-20T19:32:25.9599548Z 
2025-08-20T19:32:25.9599660Z <a id="price_importer.services_common.base"></a>
2025-08-20T19:32:25.9599847Z 
2025-08-20T19:32:25.9599937Z # price\_importer.services\_common.base
2025-08-20T19:32:25.9600112Z 
2025-08-20T19:32:25.9600204Z <a id="price_importer.normaliser"></a>
2025-08-20T19:32:25.9600373Z 
2025-08-20T19:32:25.9600460Z # price\_importer.normaliser
2025-08-20T19:32:25.9600609Z 
2025-08-20T19:32:25.9600714Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T19:32:25.9600908Z 
2025-08-20T19:32:25.9601012Z # price\_importer.common.models\_vendor
2025-08-20T19:32:25.9601179Z 
2025-08-20T19:32:25.9601273Z <a id="price_importer.common.db_url"></a>
2025-08-20T19:32:25.9601451Z 
2025-08-20T19:32:25.9601538Z # price\_importer.common.db\_url
2025-08-20T19:32:25.9601698Z 
2025-08-20T19:32:25.9601806Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T19:32:25.9601999Z 
2025-08-20T19:32:25.9602067Z #### make\_dsn
2025-08-20T19:32:25.9602169Z 
2025-08-20T19:32:25.9602242Z ```python
2025-08-20T19:32:25.9602419Z def make_dsn(async_: bool = False) -> str
2025-08-20T19:32:25.9602654Z ```
2025-08-20T19:32:25.9602739Z 
2025-08-20T19:32:25.9602822Z Return DSN using shared builder.
2025-08-20T19:32:25.9602978Z 
2025-08-20T19:32:25.9603092Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T19:32:25.9603285Z 
2025-08-20T19:32:25.9603353Z #### build\_url
2025-08-20T19:32:25.9603463Z 
2025-08-20T19:32:25.9603530Z ```python
2025-08-20T19:32:25.9603859Z def build_url(async_: bool = False) -> str
2025-08-20T19:32:25.9604097Z ```
2025-08-20T19:32:25.9604183Z 
2025-08-20T19:32:25.9604317Z Return Postgres DSN built from environment variables.
2025-08-20T19:32:25.9604524Z 
2025-08-20T19:32:25.9604613Z <a id="price_importer.common"></a>
2025-08-20T19:32:25.9604778Z 
2025-08-20T19:32:25.9604859Z # price\_importer.common
2025-08-20T19:32:25.9604991Z 
2025-08-20T19:32:25.9605084Z <a id="price_importer.common.base"></a>
2025-08-20T19:32:25.9605259Z 
2025-08-20T19:32:25.9605345Z # price\_importer.common.base
2025-08-20T19:32:25.9605490Z 
2025-08-20T19:32:25.9605595Z <a id="price_importer.tests.conftest"></a>
2025-08-20T19:32:25.9605773Z 
2025-08-20T19:32:25.9605861Z # price\_importer.tests.conftest
2025-08-20T19:32:25.9606022Z 
2025-08-20T19:32:25.9606125Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T19:32:25.9606323Z 
2025-08-20T19:32:25.9606420Z # price\_importer.tests.test\_reader
2025-08-20T19:32:25.9606581Z 
2025-08-20T19:32:25.9606691Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T19:32:25.9606877Z 
2025-08-20T19:32:25.9606978Z # price\_importer.tests.test\_imports
2025-08-20T19:32:25.9607141Z 
2025-08-20T19:32:25.9607239Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T19:32:25.9607420Z 
2025-08-20T19:32:25.9607508Z # price\_importer.tests.test\_smoke
2025-08-20T19:32:25.9607667Z 
2025-08-20T19:32:25.9607782Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T19:32:25.9607972Z 
2025-08-20T19:32:25.9608066Z # price\_importer.tests.test\_normaliser
2025-08-20T19:32:25.9608234Z 
2025-08-20T19:32:25.9608433Z <a id="price_importer.tests"></a>
2025-08-20T19:32:25.9608588Z 
2025-08-20T19:32:25.9608667Z # price\_importer.tests
2025-08-20T19:32:25.9608800Z 
2025-08-20T19:32:25.9608887Z <a id="price_importer.reader"></a>
2025-08-20T19:32:25.9609044Z 
2025-08-20T19:32:25.9609136Z # price\_importer.reader
2025-08-20T19:32:25.9609270Z 
2025-08-20T19:32:25.9609363Z <a id="price_importer.repository"></a>
2025-08-20T19:32:25.9609534Z 
2025-08-20T19:32:25.9609626Z # price\_importer.repository
2025-08-20T19:32:25.9609901Z 
2025-08-20T19:32:25.9609990Z <a id="price_importer.import"></a>
2025-08-20T19:32:25.9610153Z 
2025-08-20T19:32:25.9610232Z # price\_importer.import
2025-08-20T19:32:25.9610362Z 
2025-08-20T19:32:25.9610438Z <a id="fees_h10"></a>
2025-08-20T19:32:25.9610563Z 
2025-08-20T19:32:25.9610630Z # fees\_h10
2025-08-20T19:32:25.9610727Z 
2025-08-20T19:32:25.9610812Z <a id="fees_h10.worker"></a>
2025-08-20T19:32:25.9610950Z 
2025-08-20T19:32:25.9611021Z # fees\_h10.worker
2025-08-20T19:32:25.9611135Z 
2025-08-20T19:32:25.9611234Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T19:32:25.9611413Z 
2025-08-20T19:32:25.9611489Z #### list\_active\_asins
2025-08-20T19:32:25.9611621Z 
2025-08-20T19:32:25.9611690Z ```python
2025-08-20T19:32:25.9611872Z def list_active_asins() -> list[str]
2025-08-20T19:32:25.9612088Z ```
2025-08-20T19:32:25.9612173Z 
2025-08-20T19:32:25.9612294Z Return known ASINs or an empty list if unavailable.
2025-08-20T19:32:25.9612494Z 
2025-08-20T19:32:25.9612586Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T19:32:25.9612752Z 
2025-08-20T19:32:25.9612833Z # fees\_h10.tests.test\_smoke
2025-08-20T19:32:25.9612972Z 
2025-08-20T19:32:25.9613054Z <a id="fees_h10.tests"></a>
2025-08-20T19:32:25.9613188Z 
2025-08-20T19:32:25.9613259Z # fees\_h10.tests
2025-08-20T19:32:25.9613367Z 
2025-08-20T19:32:25.9613449Z <a id="fees_h10.client"></a>
2025-08-20T19:32:25.9613585Z 
2025-08-20T19:32:25.9613655Z # fees\_h10.client
2025-08-20T19:32:25.9613766Z 
2025-08-20T19:32:25.9613849Z <a id="fees_h10.repository"></a>
2025-08-20T19:32:25.9613994Z 
2025-08-20T19:32:25.9614068Z # fees\_h10.repository
2025-08-20T19:32:25.9614195Z 
2025-08-20T19:32:25.9614301Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T19:32:25.9614486Z 
2025-08-20T19:32:25.9614565Z #### upsert\_fees\_raw
2025-08-20T19:32:25.9614683Z 
2025-08-20T19:32:25.9614750Z ```python
2025-08-20T19:32:25.9614931Z def upsert_fees_raw(engine: Engine,
2025-08-20T19:32:25.9615301Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T19:32:25.9615556Z                     *,
2025-08-20T19:32:25.9615780Z                     testing: bool = False) -> dict[str, int] | None
2025-08-20T19:32:25.9616050Z ```
2025-08-20T19:32:25.9616136Z 
2025-08-20T19:32:25.9616224Z Idempotent upsert for fees.
2025-08-20T19:32:25.9616362Z 
2025-08-20T19:32:25.9616518Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T19:32:25.9616870Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T19:32:25.9617176Z Only updates when one of the mutable fields changes.
2025-08-20T19:32:25.9617381Z 
2025-08-20T19:32:25.9617455Z <a id="emailer"></a>
2025-08-20T19:32:25.9617568Z 
2025-08-20T19:32:25.9617640Z # emailer
2025-08-20T19:32:25.9617732Z 
2025-08-20T19:32:25.9617835Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T19:32:25.9618015Z 
2025-08-20T19:32:25.9618113Z # emailer.tests.test\_import\_emailer
2025-08-20T19:32:25.9618379Z 
2025-08-20T19:32:25.9618470Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T19:32:25.9618642Z 
2025-08-20T19:32:25.9618724Z # emailer.tests.test\_smoke
2025-08-20T19:32:25.9618862Z 
2025-08-20T19:32:25.9618942Z <a id="emailer.tests"></a>
2025-08-20T19:32:25.9619078Z 
2025-08-20T19:32:25.9619149Z # emailer.tests
2025-08-20T19:32:25.9619257Z 
2025-08-20T19:32:25.9619352Z <a id="emailer.generate_body"></a>
2025-08-20T19:32:25.9619508Z 
2025-08-20T19:32:25.9619588Z # emailer.generate\_body
2025-08-20T19:32:25.9619723Z 
2025-08-20T19:32:25.9619797Z <a id="llm_server"></a>
2025-08-20T19:32:25.9619920Z 
2025-08-20T19:32:25.9619988Z # llm\_server
2025-08-20T19:32:25.9620095Z 
2025-08-20T19:32:25.9620175Z <a id="llm_server.app"></a>
2025-08-20T19:32:25.9620311Z 
2025-08-20T19:32:25.9640298Z # llm\_server.app
2025-08-20T19:32:25.9640557Z 
