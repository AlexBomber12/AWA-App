2025-08-20T14:29:02.6505218Z ##[group]Run pydoc-markdown
2025-08-20T14:29:02.6505526Z [36;1mpydoc-markdown[0m
2025-08-20T14:29:02.6547091Z shell: /usr/bin/bash -e {0}
2025-08-20T14:29:02.6547332Z env:
2025-08-20T14:29:02.6547572Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:29:02.6547994Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T14:29:02.6548386Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:29:02.6548724Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:29:02.6549069Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:29:02.6549409Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T14:29:02.6549692Z ##[endgroup]
2025-08-20T14:29:03.0705224Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T14:29:03.0706285Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T14:29:03.0706744Z In "pydoc-markdown.yml"
2025-08-20T14:29:03.0707146Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T14:29:03.0707742Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T14:29:03.0708412Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T14:29:03.0708875Z 
2025-08-20T14:29:03.4444839Z <a id="__init__"></a>
2025-08-20T14:29:03.4445280Z 
2025-08-20T14:29:03.4445424Z # \_\_init\_\_
2025-08-20T14:29:03.4445621Z 
2025-08-20T14:29:03.4445744Z <a id="api"></a>
2025-08-20T14:29:03.4445951Z 
2025-08-20T14:29:03.4446062Z # api
2025-08-20T14:29:03.4446218Z 
2025-08-20T14:29:03.4446356Z <a id="api.errors"></a>
2025-08-20T14:29:03.4446594Z 
2025-08-20T14:29:03.4446710Z # api.errors
2025-08-20T14:29:03.4446892Z 
2025-08-20T14:29:03.4447046Z <a id="api.sentry_config"></a>
2025-08-20T14:29:03.4447354Z 
2025-08-20T14:29:03.4447487Z # api.sentry\_config
2025-08-20T14:29:03.4447709Z 
2025-08-20T14:29:03.4447890Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T14:29:03.4448235Z 
2025-08-20T14:29:03.4448802Z # api.tests.test\_stats\_contracts
2025-08-20T14:29:03.4449119Z 
2025-08-20T14:29:03.4449286Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T14:29:03.4449596Z 
2025-08-20T14:29:03.4449753Z # api.tests.test\_sentry\_scrub
2025-08-20T14:29:03.4450016Z 
2025-08-20T14:29:03.4450185Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T14:29:03.4450505Z 
2025-08-20T14:29:03.4450658Z # api.tests.test\_roi\_basic\_auth
2025-08-20T14:29:03.4450941Z 
2025-08-20T14:29:03.4451099Z <a id="api.tests.test_errors_json"></a>
2025-08-20T14:29:03.4451412Z 
2025-08-20T14:29:03.4451559Z # api.tests.test\_errors\_json
2025-08-20T14:29:03.4451815Z 
2025-08-20T14:29:03.4451963Z <a id="api.tests.test_llm"></a>
2025-08-20T14:29:03.4452218Z 
2025-08-20T14:29:03.4452348Z # api.tests.test\_llm
2025-08-20T14:29:03.4452570Z 
2025-08-20T14:29:03.4452728Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T14:29:03.4453028Z 
2025-08-20T14:29:03.4453171Z # api.tests.test\_roi\_filters
2025-08-20T14:29:03.4453430Z 
2025-08-20T14:29:03.4453602Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T14:29:03.4453917Z 
2025-08-20T14:29:03.4454074Z # api.tests.test\_sentry\_event
2025-08-20T14:29:03.4454342Z 
2025-08-20T14:29:03.4454786Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T14:29:03.4455196Z 
2025-08-20T14:29:03.4455342Z ## DummyTransport Objects
2025-08-20T14:29:03.4455584Z 
2025-08-20T14:29:03.4455697Z ```python
2025-08-20T14:29:03.4456007Z class DummyTransport()
2025-08-20T14:29:03.4456331Z ```
2025-08-20T14:29:03.4456479Z 
2025-08-20T14:29:03.4456799Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T14:29:03.4457271Z 
2025-08-20T14:29:03.4457410Z #### capture\_envelope
2025-08-20T14:29:03.4457625Z 
2025-08-20T14:29:03.4457738Z ```python
2025-08-20T14:29:03.4458048Z def capture_envelope(envelope)
2025-08-20T14:29:03.4458403Z ```
2025-08-20T14:29:03.4458561Z 
2025-08-20T14:29:03.4458789Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T14:29:03.4459177Z 
2025-08-20T14:29:03.4459336Z <a id="api.tests.test_cors"></a>
2025-08-20T14:29:03.4459998Z 
2025-08-20T14:29:03.4460146Z # api.tests.test\_cors
2025-08-20T14:29:03.4460375Z 
2025-08-20T14:29:03.4460539Z <a id="api.tests.test_imports"></a>
2025-08-20T14:29:03.4460831Z 
2025-08-20T14:29:03.4460970Z # api.tests.test\_imports
2025-08-20T14:29:03.4461217Z 
2025-08-20T14:29:03.4461374Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T14:29:03.4461668Z 
2025-08-20T14:29:03.4461818Z # api.tests.test\_rate\_limit
2025-08-20T14:29:03.4462069Z 
2025-08-20T14:29:03.4462240Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T14:29:03.4462553Z 
2025-08-20T14:29:03.4462671Z #### app
2025-08-20T14:29:03.4462828Z 
2025-08-20T14:29:03.4462939Z noqa: E402
2025-08-20T14:29:03.4463107Z 
2025-08-20T14:29:03.4463256Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T14:29:03.4463544Z 
2025-08-20T14:29:03.4463680Z # api.tests.test\_stats\_sql
2025-08-20T14:29:03.4463933Z 
2025-08-20T14:29:03.4464089Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T14:29:03.4464410Z 
2025-08-20T14:29:03.4464778Z # api.tests.test\_entrypoint
2025-08-20T14:29:03.4465049Z 
2025-08-20T14:29:03.4465257Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T14:29:03.4465624Z 
2025-08-20T14:29:03.4465801Z # api.tests.test\_stats\_future\_contracts
2025-08-20T14:29:03.4466118Z 
2025-08-20T14:29:03.4466267Z <a id="api.tests.test_health"></a>
2025-08-20T14:29:03.4466557Z 
2025-08-20T14:29:03.4466696Z # api.tests.test\_health
2025-08-20T14:29:03.4466929Z 
2025-08-20T14:29:03.4467085Z <a id="api.tests.test_score"></a>
2025-08-20T14:29:03.4467359Z 
2025-08-20T14:29:03.4467493Z # api.tests.test\_score
2025-08-20T14:29:03.4467721Z 
2025-08-20T14:29:03.4467863Z <a id="api.logging_config"></a>
2025-08-20T14:29:03.4468120Z 
2025-08-20T14:29:03.4468246Z # api.logging\_config
2025-08-20T14:29:03.4468464Z 
2025-08-20T14:29:03.4468609Z <a id="api.migrations.env"></a>
2025-08-20T14:29:03.4468859Z 
2025-08-20T14:29:03.4469000Z # api.migrations.env
2025-08-20T14:29:03.4469455Z 
2025-08-20T14:29:03.4469683Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T14:29:03.4470063Z 
2025-08-20T14:29:03.4470255Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T14:29:03.4470592Z 
2025-08-20T14:29:03.4470791Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T14:29:03.4471157Z 
2025-08-20T14:29:03.4471330Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T14:29:03.4471652Z 
2025-08-20T14:29:03.4471941Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T14:29:03.4472379Z 
2025-08-20T14:29:03.4472627Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T14:29:03.4473034Z 
2025-08-20T14:29:03.4473260Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T14:29:03.4473631Z 
2025-08-20T14:29:03.4473835Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T14:29:03.4474177Z 
2025-08-20T14:29:03.4474394Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T14:29:03.4475050Z 
2025-08-20T14:29:03.4475261Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T14:29:03.4475652Z 
2025-08-20T14:29:03.4475893Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T14:29:03.4476269Z 
2025-08-20T14:29:03.4476469Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T14:29:03.4476830Z 
2025-08-20T14:29:03.4477046Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T14:29:03.4477408Z 
2025-08-20T14:29:03.4477600Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T14:29:03.4477948Z 
2025-08-20T14:29:03.4478180Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T14:29:03.4478622Z 
2025-08-20T14:29:03.4478824Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T14:29:03.4479165Z 
2025-08-20T14:29:03.4479411Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T14:29:03.4479824Z 
2025-08-20T14:29:03.4480041Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T14:29:03.4480409Z 
2025-08-20T14:29:03.4480658Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T14:29:03.4481324Z 
2025-08-20T14:29:03.4481531Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T14:29:03.4481884Z 
2025-08-20T14:29:03.4482142Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T14:29:03.4482541Z 
2025-08-20T14:29:03.4482755Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T14:29:03.4483123Z 
2025-08-20T14:29:03.4483319Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T14:29:03.4483667Z 
2025-08-20T14:29:03.4483844Z # api.migrations.versions.0001\_baseline
2025-08-20T14:29:03.4484296Z 
2025-08-20T14:29:03.4484459Z <a id="api.migrations.versions"></a>
2025-08-20T14:29:03.4484928Z 
2025-08-20T14:29:03.4485088Z # api.migrations.versions
2025-08-20T14:29:03.4485330Z 
2025-08-20T14:29:03.4485468Z <a id="api.migrations"></a>
2025-08-20T14:29:03.4485723Z 
2025-08-20T14:29:03.4485841Z # api.migrations
2025-08-20T14:29:03.4486034Z 
2025-08-20T14:29:03.4486169Z <a id="api.db"></a>
2025-08-20T14:29:03.4486376Z 
2025-08-20T14:29:03.4486486Z # api.db
2025-08-20T14:29:03.4486650Z 
2025-08-20T14:29:03.4486805Z <a id="api.routes.score"></a>
2025-08-20T14:29:03.4487073Z 
2025-08-20T14:29:03.4487201Z # api.routes.score
2025-08-20T14:29:03.4487407Z 
2025-08-20T14:29:03.4487551Z <a id="api.routes.stats"></a>
2025-08-20T14:29:03.4487804Z 
2025-08-20T14:29:03.4487926Z # api.routes.stats
2025-08-20T14:29:03.4488127Z 
2025-08-20T14:29:03.4488276Z <a id="api.routes.roi"></a>
2025-08-20T14:29:03.4488520Z 
2025-08-20T14:29:03.4488647Z # api.routes.roi
2025-08-20T14:29:03.4488836Z 
2025-08-20T14:29:03.4488982Z <a id="api.routes.health"></a>
2025-08-20T14:29:03.4489248Z 
2025-08-20T14:29:03.4489375Z # api.routes.health
2025-08-20T14:29:03.4489575Z 
2025-08-20T14:29:03.4489738Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T14:29:03.4490050Z 
2025-08-20T14:29:03.4490163Z #### MAX\_SKEW
2025-08-20T14:29:03.4490340Z 
2025-08-20T14:29:03.4490456Z seconds
2025-08-20T14:29:03.4490844Z 
2025-08-20T14:29:03.4491011Z <a id="api.routes.health.health"></a>
2025-08-20T14:29:03.4491324Z 
2025-08-20T14:29:03.4491441Z #### health
2025-08-20T14:29:03.4491602Z 
2025-08-20T14:29:03.4491718Z ```python
2025-08-20T14:29:03.4492077Z @router.get("/health", include_in_schema=False)
2025-08-20T14:29:03.4492783Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T14:29:03.4493396Z ```
2025-08-20T14:29:03.4493543Z 
2025-08-20T14:29:03.4493764Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T14:29:03.4494129Z 
2025-08-20T14:29:03.4494290Z <a id="api.routes.repository"></a>
2025-08-20T14:29:03.4494763Z 
2025-08-20T14:29:03.4494910Z # api.routes.repository
2025-08-20T14:29:03.4495144Z 
2025-08-20T14:29:03.4495276Z <a id="api.routes"></a>
2025-08-20T14:29:03.4495509Z 
2025-08-20T14:29:03.4495628Z # api.routes
2025-08-20T14:29:03.4495807Z 
2025-08-20T14:29:03.4495969Z <a id="api.models.fee"></a>
2025-08-20T14:29:03.4496222Z 
2025-08-20T14:29:03.4496346Z # api.models.fee
2025-08-20T14:29:03.4496554Z 
2025-08-20T14:29:03.4496695Z <a id="api.models"></a>
2025-08-20T14:29:03.4496926Z 
2025-08-20T14:29:03.4497041Z # api.models
2025-08-20T14:29:03.4497222Z 
2025-08-20T14:29:03.4497366Z <a id="api.roi_repository"></a>
2025-08-20T14:29:03.4497621Z 
2025-08-20T14:29:03.4497756Z # api.roi\_repository
2025-08-20T14:29:03.4497966Z 
2025-08-20T14:29:03.4498088Z <a id="api.main"></a>
2025-08-20T14:29:03.4498301Z 
2025-08-20T14:29:03.4498422Z # api.main
2025-08-20T14:29:03.4498582Z 
2025-08-20T14:29:03.4498719Z <a id="api.main.ready"></a>
2025-08-20T14:29:03.4498971Z 
2025-08-20T14:29:03.4499082Z #### ready
2025-08-20T14:29:03.4499241Z 
2025-08-20T14:29:03.4499351Z ```python
2025-08-20T14:29:03.4499821Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T14:29:03.4500489Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T14:29:03.4501012Z                                                                       str]
2025-08-20T14:29:03.4501368Z ```
2025-08-20T14:29:03.4501695Z 
2025-08-20T14:29:03.4501841Z Return 200 only when migrations are at head.
2025-08-20T14:29:03.4502108Z 
2025-08-20T14:29:03.4502213Z <a id="api.config"></a>
2025-08-20T14:29:03.4502394Z 
2025-08-20T14:29:03.4502497Z # api.config
2025-08-20T14:29:03.4502641Z 
2025-08-20T14:29:03.4502753Z <a id="api.security"></a>
2025-08-20T14:29:03.4502943Z 
2025-08-20T14:29:03.4503047Z # api.security
2025-08-20T14:29:03.4503196Z 
2025-08-20T14:29:03.4503292Z <a id="etl"></a>
2025-08-20T14:29:03.4503454Z 
2025-08-20T14:29:03.4503543Z # etl
2025-08-20T14:29:03.4503673Z 
2025-08-20T14:29:03.4503794Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T14:29:03.4504041Z 
2025-08-20T14:29:03.4504153Z # etl.fba\_fee\_ingestor
2025-08-20T14:29:03.4504354Z 
2025-08-20T14:29:03.4504491Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T14:29:03.4504920Z 
2025-08-20T14:29:03.4505043Z # etl.sp\_fees\_ingestor
2025-08-20T14:29:03.4505253Z 
2025-08-20T14:29:03.4505379Z <a id="etl.keepa_ingestor"></a>
2025-08-20T14:29:03.4505601Z 
2025-08-20T14:29:03.4505700Z # etl.keepa\_ingestor
2025-08-20T14:29:03.4506017Z 
2025-08-20T14:29:03.4506131Z <a id="etl.db"></a>
2025-08-20T14:29:03.4506295Z 
2025-08-20T14:29:03.4506387Z # etl.db
2025-08-20T14:29:03.4506524Z 
2025-08-20T14:29:03.4506653Z <a id="etl.dialects.schemas"></a>
2025-08-20T14:29:03.4506911Z 
2025-08-20T14:29:03.4507036Z # etl.dialects.schemas
2025-08-20T14:29:03.4507244Z 
2025-08-20T14:29:03.4507421Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T14:29:03.4507718Z 
2025-08-20T14:29:03.4507853Z # etl.dialects.amazon\_reimbursements
2025-08-20T14:29:03.4508089Z 
2025-08-20T14:29:03.4508230Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T14:29:03.4508486Z 
2025-08-20T14:29:03.4508606Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T14:29:03.4508851Z 
2025-08-20T14:29:03.4508981Z <a id="etl.dialects.test_generic"></a>
2025-08-20T14:29:03.4509239Z 
2025-08-20T14:29:03.4509368Z # etl.dialects.test\_generic
2025-08-20T14:29:03.4509808Z 
2025-08-20T14:29:03.4509968Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T14:29:03.4510222Z 
2025-08-20T14:29:03.4510336Z # etl.dialects.amazon\_returns
2025-08-20T14:29:03.4510549Z 
2025-08-20T14:29:03.4510688Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T14:29:03.4510951Z 
2025-08-20T14:29:03.4511074Z # etl.dialects.amazon\_fee\_preview
2025-08-20T14:29:03.4511328Z 
2025-08-20T14:29:03.4511497Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T14:29:03.4511804Z 
2025-08-20T14:29:03.4511957Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T14:29:03.4512238Z 
2025-08-20T14:29:03.4512395Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T14:29:03.4512671Z 
2025-08-20T14:29:03.4512795Z # etl.dialects.amazon\_settlements
2025-08-20T14:29:03.4513024Z 
2025-08-20T14:29:03.4513133Z <a id="etl.dialects"></a>
2025-08-20T14:29:03.4513319Z 
2025-08-20T14:29:03.4513407Z # etl.dialects
2025-08-20T14:29:03.4513542Z 
2025-08-20T14:29:03.4513639Z <a id="ingest"></a>
2025-08-20T14:29:03.4513795Z 
2025-08-20T14:29:03.4513883Z # ingest
2025-08-20T14:29:03.4513997Z 
2025-08-20T14:29:03.4514113Z <a id="ingest.maintenance"></a>
2025-08-20T14:29:03.4514308Z 
2025-08-20T14:29:03.4514426Z # ingest.maintenance
2025-08-20T14:29:03.4514779Z 
2025-08-20T14:29:03.4514916Z <a id="ingest.copy_loader"></a>
2025-08-20T14:29:03.4515160Z 
2025-08-20T14:29:03.4515285Z # ingest.copy\_loader
2025-08-20T14:29:03.4515480Z 
2025-08-20T14:29:03.4515650Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T14:29:03.4515967Z 
2025-08-20T14:29:03.4516093Z #### copy\_df\_via\_temp
2025-08-20T14:29:03.4516298Z 
2025-08-20T14:29:03.4516406Z ```python
2025-08-20T14:29:03.4516697Z def copy_df_via_temp(engine: Engine,
2025-08-20T14:29:03.4517092Z                      df: pd.DataFrame,
2025-08-20T14:29:03.4517508Z                      target_table: str,
2025-08-20T14:29:03.4517905Z                      *,
2025-08-20T14:29:03.4518289Z                      target_schema: Optional[str] = None,
2025-08-20T14:29:03.4518828Z                      columns: Sequence[str],
2025-08-20T14:29:03.4519584Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T14:29:03.4520112Z                      analyze_after: bool = False,
2025-08-20T14:29:03.4520600Z                      connection: Any | None = None) -> int
2025-08-20T14:29:03.4521034Z ```
2025-08-20T14:29:03.4521187Z 
2025-08-20T14:29:03.4521481Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T14:29:03.4521907Z 
2025-08-20T14:29:03.4522065Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T14:29:03.4522366Z 
2025-08-20T14:29:03.4522506Z # ingest.tests.test\_smoke
2025-08-20T14:29:03.4522754Z 
2025-08-20T14:29:03.4522896Z <a id="ingest.tests"></a>
2025-08-20T14:29:03.4523130Z 
2025-08-20T14:29:03.4523247Z # ingest.tests
2025-08-20T14:29:03.4523427Z 
2025-08-20T14:29:03.4523580Z <a id="ingest.upload_router"></a>
2025-08-20T14:29:03.4523855Z 
2025-08-20T14:29:03.4523987Z # ingest.upload\_router
2025-08-20T14:29:03.4524228Z 
2025-08-20T14:29:03.4524380Z <a id="ingest.email_watcher"></a>
2025-08-20T14:29:03.4524839Z 
2025-08-20T14:29:03.4524983Z # ingest.email\_watcher
2025-08-20T14:29:03.4525200Z 
2025-08-20T14:29:03.4525357Z <a id="ingest.email_watcher.main"></a>
2025-08-20T14:29:03.4525665Z 
2025-08-20T14:29:03.4525782Z #### main
2025-08-20T14:29:03.4525939Z 
2025-08-20T14:29:03.4526050Z ```python
2025-08-20T14:29:03.4526357Z def main() -> dict[str, str]
2025-08-20T14:29:03.4526705Z ```
2025-08-20T14:29:03.4526861Z 
2025-08-20T14:29:03.4527114Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T14:29:03.4527516Z 
2025-08-20T14:29:03.4527756Z Returns {"status": "success"} when processing completes.
2025-08-20T14:29:03.4528143Z 
2025-08-20T14:29:03.4528284Z <a id="ingest.tasks"></a>
2025-08-20T14:29:03.4528516Z 
2025-08-20T14:29:03.4528633Z # ingest.tasks
2025-08-20T14:29:03.4528849Z 
2025-08-20T14:29:03.4529019Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T14:29:03.4529339Z 
2025-08-20T14:29:03.4529824Z #### task\_import\_file
2025-08-20T14:29:03.4530060Z 
2025-08-20T14:29:03.4530174Z ```python
2025-08-20T14:29:03.4530560Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T14:29:03.4531074Z def task_import_file(self: Any,
2025-08-20T14:29:03.4531468Z                      uri: str,
2025-08-20T14:29:03.4531867Z                      report_type: str | None = None,
2025-08-20T14:29:03.4532369Z                      force: bool = False) -> dict[str, Any]
2025-08-20T14:29:03.4532800Z ```
2025-08-20T14:29:03.4532958Z 
2025-08-20T14:29:03.4533205Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T14:29:03.4533602Z 
2025-08-20T14:29:03.4533755Z <a id="ingest.celery_app"></a>
2025-08-20T14:29:03.4534015Z 
2025-08-20T14:29:03.4534147Z # ingest.celery\_app
2025-08-20T14:29:03.4534362Z 
2025-08-20T14:29:03.4534509Z <a id="ingest.ingest_router"></a>
2025-08-20T14:29:03.4534976Z 
2025-08-20T14:29:03.4535112Z # ingest.ingest\_router
2025-08-20T14:29:03.4535339Z 
2025-08-20T14:29:03.4535483Z <a id="logistics_etl"></a>
2025-08-20T14:29:03.4535729Z 
2025-08-20T14:29:03.4535856Z # logistics\_etl
2025-08-20T14:29:03.4536042Z 
2025-08-20T14:29:03.4536175Z Daily logistics ETL job.
2025-08-20T14:29:03.4536406Z 
2025-08-20T14:29:03.4536557Z <a id="logistics_etl.__main__"></a>
2025-08-20T14:29:03.4536836Z 
2025-08-20T14:29:03.4536972Z # logistics\_etl.\_\_main\_\_
2025-08-20T14:29:03.4537234Z 
2025-08-20T14:29:03.4537370Z <a id="logistics_etl.dsn"></a>
2025-08-20T14:29:03.4537624Z 
2025-08-20T14:29:03.4537754Z # logistics\_etl.dsn
2025-08-20T14:29:03.4537960Z 
2025-08-20T14:29:03.4538175Z Local DSN builder to avoid cross-service dependency.
2025-08-20T14:29:03.4538543Z 
2025-08-20T14:29:03.4538711Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T14:29:03.4539016Z 
2025-08-20T14:29:03.4539131Z #### build\_dsn
2025-08-20T14:29:03.4539321Z 
2025-08-20T14:29:03.4539432Z ```python
2025-08-20T14:29:03.4539740Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:29:03.4540142Z ```
2025-08-20T14:29:03.4540297Z 
2025-08-20T14:29:03.4540995Z Return a Postgres DSN assembled from environment variables.
2025-08-20T14:29:03.4541414Z 
2025-08-20T14:29:03.4541687Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T14:29:03.4542415Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T14:29:03.4543049Z error when any required variable is missing.
2025-08-20T14:29:03.4543386Z 
2025-08-20T14:29:03.4543554Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T14:29:03.4543873Z 
2025-08-20T14:29:03.4544028Z # logistics\_etl.tests.conftest
2025-08-20T14:29:03.4544294Z 
2025-08-20T14:29:03.4544483Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T14:29:03.4545011Z 
2025-08-20T14:29:03.4545186Z # logistics\_etl.tests.test\_repository
2025-08-20T14:29:03.4545490Z 
2025-08-20T14:29:03.4545656Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T14:29:03.4545979Z 
2025-08-20T14:29:03.4546126Z # logistics\_etl.tests.test\_cron
2025-08-20T14:29:03.4546409Z 
2025-08-20T14:29:03.4546589Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T14:29:03.4546922Z 
2025-08-20T14:29:03.4547069Z # logistics\_etl.tests.test\_imports
2025-08-20T14:29:03.4547352Z 
2025-08-20T14:29:03.4547525Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T14:29:03.4547838Z 
2025-08-20T14:29:03.4547986Z # logistics\_etl.tests.test\_smoke
2025-08-20T14:29:03.4548277Z 
2025-08-20T14:29:03.4548443Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T14:29:03.4548755Z 
2025-08-20T14:29:03.4548910Z # logistics\_etl.tests.test\_client
2025-08-20T14:29:03.4549193Z 
2025-08-20T14:29:03.4549335Z <a id="logistics_etl.tests"></a>
2025-08-20T14:29:03.4549595Z 
2025-08-20T14:29:03.4549730Z # logistics\_etl.tests
2025-08-20T14:29:03.4549945Z 
2025-08-20T14:29:03.4550083Z <a id="logistics_etl.flow"></a>
2025-08-20T14:29:03.4550344Z 
2025-08-20T14:29:03.4550469Z # logistics\_etl.flow
2025-08-20T14:29:03.4550683Z 
2025-08-20T14:29:03.4550836Z <a id="logistics_etl.client"></a>
2025-08-20T14:29:03.4551331Z 
2025-08-20T14:29:03.4622989Z # logistics\_etl.client
2025-08-20T14:29:03.4623312Z 
2025-08-20T14:29:03.4623451Z <a id="logistics_etl.cron"></a>
2025-08-20T14:29:03.4623697Z 
2025-08-20T14:29:03.4623804Z # logistics\_etl.cron
2025-08-20T14:29:03.4623985Z 
2025-08-20T14:29:03.4624106Z <a id="logistics_etl.db"></a>
2025-08-20T14:29:03.4624334Z 
2025-08-20T14:29:03.4624445Z # logistics\_etl.db
2025-08-20T14:29:03.4624840Z 
2025-08-20T14:29:03.4625004Z <a id="logistics_etl.repository"></a>
2025-08-20T14:29:03.4625263Z 
2025-08-20T14:29:03.4625378Z # logistics\_etl.repository
2025-08-20T14:29:03.4625597Z 
2025-08-20T14:29:03.4625699Z <a id="alert_bot"></a>
2025-08-20T14:29:03.4625881Z 
2025-08-20T14:29:03.4625972Z # alert\_bot
2025-08-20T14:29:03.4626123Z 
2025-08-20T14:29:03.4626255Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T14:29:03.4626517Z 
2025-08-20T14:29:03.4626646Z # alert\_bot.tests.test\_smoke
2025-08-20T14:29:03.4626867Z 
2025-08-20T14:29:03.4626983Z <a id="alert_bot.tests"></a>
2025-08-20T14:29:03.4627213Z 
2025-08-20T14:29:03.4627320Z # alert\_bot.tests
2025-08-20T14:29:03.4627482Z 
2025-08-20T14:29:03.4627598Z <a id="alert_bot.alert_bot"></a>
2025-08-20T14:29:03.4627825Z 
2025-08-20T14:29:03.4627926Z # alert\_bot.alert\_bot
2025-08-20T14:29:03.4628105Z 
2025-08-20T14:29:03.4628221Z <a id="alert_bot.rules"></a>
2025-08-20T14:29:03.4628427Z 
2025-08-20T14:29:03.4628533Z # alert\_bot.rules
2025-08-20T14:29:03.4628695Z 
2025-08-20T14:29:03.4628790Z <a id="common"></a>
2025-08-20T14:29:03.4628954Z 
2025-08-20T14:29:03.4629041Z # common
2025-08-20T14:29:03.4629177Z 
2025-08-20T14:29:03.4629278Z <a id="common.dsn"></a>
2025-08-20T14:29:03.4629458Z 
2025-08-20T14:29:03.4629553Z # common.dsn
2025-08-20T14:29:03.4629692Z 
2025-08-20T14:29:03.4629818Z <a id="common.dsn.build_dsn"></a>
2025-08-20T14:29:03.4630050Z 
2025-08-20T14:29:03.4630158Z #### build\_dsn
2025-08-20T14:29:03.4630311Z 
2025-08-20T14:29:03.4630405Z ```python
2025-08-20T14:29:03.4630683Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:29:03.4631031Z ```
2025-08-20T14:29:03.4631481Z 
2025-08-20T14:29:03.4631672Z Return a Postgres DSN, validating required variables.
2025-08-20T14:29:03.4631980Z 
2025-08-20T14:29:03.4632283Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T14:29:03.4632987Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T14:29:03.4633637Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T14:29:03.4634114Z missing.
2025-08-20T14:29:03.4634256Z 
2025-08-20T14:29:03.4634381Z <a id="common.models_vendor"></a>
2025-08-20T14:29:03.4634802Z 
2025-08-20T14:29:03.4634916Z # common.models\_vendor
2025-08-20T14:29:03.4635114Z 
2025-08-20T14:29:03.4635261Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T14:29:03.4635512Z 
2025-08-20T14:29:03.4635612Z ## Vendor Objects
2025-08-20T14:29:03.4635759Z 
2025-08-20T14:29:03.4635847Z ```python
2025-08-20T14:29:03.4636094Z class Vendor(Base)
2025-08-20T14:29:03.4636344Z ```
2025-08-20T14:29:03.4636485Z 
2025-08-20T14:29:03.4636603Z Vendor of inventory items.
2025-08-20T14:29:03.4636799Z 
2025-08-20T14:29:03.4636959Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T14:29:03.4637233Z 
2025-08-20T14:29:03.4637338Z ## VendorPrice Objects
2025-08-20T14:29:03.4637509Z 
2025-08-20T14:29:03.4637609Z ```python
2025-08-20T14:29:03.4637839Z class VendorPrice(Base)
2025-08-20T14:29:03.4638100Z ```
2025-08-20T14:29:03.4638218Z 
2025-08-20T14:29:03.4638366Z Association table linking vendors to pricing.
2025-08-20T14:29:03.4638653Z 
2025-08-20T14:29:03.4638761Z <a id="common.db_url"></a>
2025-08-20T14:29:03.4638957Z 
2025-08-20T14:29:03.4639062Z # common.db\_url
2025-08-20T14:29:03.4639222Z 
2025-08-20T14:29:03.4639343Z <a id="common.db_url.build_url"></a>
2025-08-20T14:29:03.4639575Z 
2025-08-20T14:29:03.4639674Z #### build\_url
2025-08-20T14:29:03.4639827Z 
2025-08-20T14:29:03.4639921Z ```python
2025-08-20T14:29:03.4640179Z def build_url(async_: bool = True) -> str
2025-08-20T14:29:03.4640698Z ```
2025-08-20T14:29:03.4640832Z 
2025-08-20T14:29:03.4640979Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:29:03.4641266Z 
2025-08-20T14:29:03.4641387Z <a id="common.keepa"></a>
2025-08-20T14:29:03.4641577Z 
2025-08-20T14:29:03.4641675Z # common.keepa
2025-08-20T14:29:03.4641820Z 
2025-08-20T14:29:03.4641927Z <a id="common.llm"></a>
2025-08-20T14:29:03.4642101Z 
2025-08-20T14:29:03.4642194Z # common.llm
2025-08-20T14:29:03.4642340Z 
2025-08-20T14:29:03.4642453Z <a id="common.settings"></a>
2025-08-20T14:29:03.4642662Z 
2025-08-20T14:29:03.4642765Z # common.settings
2025-08-20T14:29:03.4642918Z 
2025-08-20T14:29:03.4643020Z <a id="common.db"></a>
2025-08-20T14:29:03.4643197Z 
2025-08-20T14:29:03.4643294Z # common.db
2025-08-20T14:29:03.4643427Z 
2025-08-20T14:29:03.4643563Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T14:29:03.4643821Z 
2025-08-20T14:29:03.4643930Z #### build\_sqlalchemy\_url
2025-08-20T14:29:03.4644136Z 
2025-08-20T14:29:03.4644229Z ```python
2025-08-20T14:29:03.4644495Z def build_sqlalchemy_url() -> str
2025-08-20T14:29:03.4644947Z ```
2025-08-20T14:29:03.4645067Z 
2025-08-20T14:29:03.4645212Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:29:03.4645465Z 
2025-08-20T14:29:03.4645602Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T14:29:03.4645847Z 
2025-08-20T14:29:03.4645949Z #### build\_asyncpg\_dsn
2025-08-20T14:29:03.4646138Z 
2025-08-20T14:29:03.4646232Z ```python
2025-08-20T14:29:03.4646474Z def build_asyncpg_dsn() -> str
2025-08-20T14:29:03.4646765Z ```
2025-08-20T14:29:03.4646881Z 
2025-08-20T14:29:03.4647075Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:29:03.4647393Z 
2025-08-20T14:29:03.4647516Z <a id="common.db.refresh_mvs"></a>
2025-08-20T14:29:03.4647743Z 
2025-08-20T14:29:03.4647839Z #### refresh\_mvs
2025-08-20T14:29:03.4647991Z 
2025-08-20T14:29:03.4648082Z ```python
2025-08-20T14:29:03.4648366Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:29:03.4648734Z ```
2025-08-20T14:29:03.4648867Z 
2025-08-20T14:29:03.4649239Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:29:03.4649561Z 
2025-08-20T14:29:03.4649676Z <a id="common.config"></a>
2025-08-20T14:29:03.4649863Z 
2025-08-20T14:29:03.4649958Z # common.config
2025-08-20T14:29:03.4650118Z 
2025-08-20T14:29:03.4650230Z <a id="common.base"></a>
2025-08-20T14:29:03.4650418Z 
2025-08-20T14:29:03.4650510Z # common.base
2025-08-20T14:29:03.4650658Z 
2025-08-20T14:29:03.4650771Z <a id="common.base.Base"></a>
2025-08-20T14:29:03.4650985Z 
2025-08-20T14:29:03.4651091Z ## Base Objects
2025-08-20T14:29:03.4651243Z 
2025-08-20T14:29:03.4651336Z ```python
2025-08-20T14:29:03.4651586Z class Base(DeclarativeBase)
2025-08-20T14:29:03.4651866Z ```
2025-08-20T14:29:03.4651990Z 
2025-08-20T14:29:03.4652115Z Base class for SQLAlchemy models.
2025-08-20T14:29:03.4652340Z 
2025-08-20T14:29:03.4652444Z <a id="repricer"></a>
2025-08-20T14:29:03.4652621Z 
2025-08-20T14:29:03.4652710Z # repricer
2025-08-20T14:29:03.4652843Z 
2025-08-20T14:29:03.4652982Z <a id="repricer.app.schemas"></a>
2025-08-20T14:29:03.4653215Z 
2025-08-20T14:29:03.4653324Z # repricer.app.schemas
2025-08-20T14:29:03.4653508Z 
2025-08-20T14:29:03.4653628Z <a id="repricer.app.deps"></a>
2025-08-20T14:29:03.4653834Z 
2025-08-20T14:29:03.4653939Z # repricer.app.deps
2025-08-20T14:29:03.4654113Z 
2025-08-20T14:29:03.4654285Z Placeholder module for Keepa / SP-API clients.
2025-08-20T14:29:03.4654715Z 
2025-08-20T14:29:03.4654852Z <a id="repricer.app.logic"></a>
2025-08-20T14:29:03.4655065Z 
2025-08-20T14:29:03.4655171Z # repricer.app.logic
2025-08-20T14:29:03.4655365Z 
2025-08-20T14:29:03.4655519Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T14:29:03.4655783Z 
2025-08-20T14:29:03.4655878Z #### MIN\_MARGIN
2025-08-20T14:29:03.4656032Z 
2025-08-20T14:29:03.4656120Z 15 % ROI
2025-08-20T14:29:03.4656248Z 
2025-08-20T14:29:03.4656407Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T14:29:03.4656679Z 
2025-08-20T14:29:03.4656775Z #### compute\_price
2025-08-20T14:29:03.4657108Z 
2025-08-20T14:29:03.4657282Z ```python
2025-08-20T14:29:03.4657641Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T14:29:03.4658091Z ```
2025-08-20T14:29:03.4658211Z 
2025-08-20T14:29:03.4658367Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T14:29:03.4658790Z Replace with real competitive logic later.
2025-08-20T14:29:03.4659037Z 
2025-08-20T14:29:03.4659161Z <a id="repricer.app.main"></a>
2025-08-20T14:29:03.4659368Z 
2025-08-20T14:29:03.4659470Z # repricer.app.main
2025-08-20T14:29:03.4659641Z 
2025-08-20T14:29:03.4659753Z <a id="repricer.app"></a>
2025-08-20T14:29:03.4659944Z 
2025-08-20T14:29:03.4660042Z # repricer.app
2025-08-20T14:29:03.4660201Z 
2025-08-20T14:29:03.4660334Z <a id="repricer.tests.test_imports"></a>
2025-08-20T14:29:03.4660581Z 
2025-08-20T14:29:03.4660707Z # repricer.tests.test\_imports
2025-08-20T14:29:03.4660916Z 
2025-08-20T14:29:03.4661048Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T14:29:03.4661292Z 
2025-08-20T14:29:03.4661417Z # repricer.tests.test\_smoke
2025-08-20T14:29:03.4661629Z 
2025-08-20T14:29:03.4661743Z <a id="repricer.tests"></a>
2025-08-20T14:29:03.4661946Z 
2025-08-20T14:29:03.4662048Z # repricer.tests
2025-08-20T14:29:03.4662207Z 
2025-08-20T14:29:03.4662309Z <a id="db"></a>
2025-08-20T14:29:03.4662454Z 
2025-08-20T14:29:03.4662545Z # db
2025-08-20T14:29:03.4662666Z 
2025-08-20T14:29:03.4662784Z <a id="db.utils.views"></a>
2025-08-20T14:29:03.4662985Z 
2025-08-20T14:29:03.4663083Z # db.utils.views
2025-08-20T14:29:03.4663245Z 
2025-08-20T14:29:03.4663386Z <a id="db.utils.views.replace_view"></a>
2025-08-20T14:29:03.4663638Z 
2025-08-20T14:29:03.4663739Z #### replace\_view
2025-08-20T14:29:03.4663903Z 
2025-08-20T14:29:03.4663994Z ```python
2025-08-20T14:29:03.4664286Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T14:29:03.4664797Z ```
2025-08-20T14:29:03.4664923Z 
2025-08-20T14:29:03.4665065Z Drop and recreate a SQL view atomically.
2025-08-20T14:29:03.4665309Z 
2025-08-20T14:29:03.4665418Z <a id="db.utils"></a>
2025-08-20T14:29:03.4665767Z 
2025-08-20T14:29:03.4665860Z # db.utils
2025-08-20T14:29:03.4665990Z 
2025-08-20T14:29:03.4666109Z <a id="price_importer"></a>
2025-08-20T14:29:03.4666306Z 
2025-08-20T14:29:03.4666407Z # price\_importer
2025-08-20T14:29:03.4666564Z 
2025-08-20T14:29:03.4666722Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T14:29:03.4666991Z 
2025-08-20T14:29:03.4667122Z # price\_importer.services\_common.dsn
2025-08-20T14:29:03.4667370Z 
2025-08-20T14:29:03.4667554Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T14:29:03.4667860Z 
2025-08-20T14:29:03.4667958Z #### build\_dsn
2025-08-20T14:29:03.4668103Z 
2025-08-20T14:29:03.4668195Z ```python
2025-08-20T14:29:03.4668455Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:29:03.4668776Z ```
2025-08-20T14:29:03.4668897Z 
2025-08-20T14:29:03.4669009Z Return safe DSN.
2025-08-20T14:29:03.4669164Z 
2025-08-20T14:29:03.4669595Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T14:29:03.4669914Z 
2025-08-20T14:29:03.4670113Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T14:29:03.4670416Z 
2025-08-20T14:29:03.4670590Z # price\_importer.services\_common.models\_vendor
2025-08-20T14:29:03.4670880Z 
2025-08-20T14:29:03.4671039Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T14:29:03.4671330Z 
2025-08-20T14:29:03.4671475Z # price\_importer.services\_common.db\_url
2025-08-20T14:29:03.4671730Z 
2025-08-20T14:29:03.4671923Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T14:29:03.4672249Z 
2025-08-20T14:29:03.4672341Z #### build\_url
2025-08-20T14:29:03.4672485Z 
2025-08-20T14:29:03.4672581Z ```python
2025-08-20T14:29:03.4672833Z def build_url(async_: bool = True) -> str
2025-08-20T14:29:03.4673167Z ```
2025-08-20T14:29:03.4673291Z 
2025-08-20T14:29:03.4673435Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:29:03.4673691Z 
2025-08-20T14:29:03.4673852Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T14:29:03.4674314Z 
2025-08-20T14:29:03.4674460Z # price\_importer.services\_common.keepa
2025-08-20T14:29:03.4674893Z 
2025-08-20T14:29:03.4675054Z <a id="price_importer.services_common.llm"></a>
2025-08-20T14:29:03.4675346Z 
2025-08-20T14:29:03.4675483Z # price\_importer.services\_common.llm
2025-08-20T14:29:03.4675738Z 
2025-08-20T14:29:03.4675912Z <a id="price_importer.services_common.settings"></a>
2025-08-20T14:29:03.4676207Z 
2025-08-20T14:29:03.4676348Z # price\_importer.services\_common.settings
2025-08-20T14:29:03.4676612Z 
2025-08-20T14:29:03.4676760Z <a id="price_importer.services_common.db"></a>
2025-08-20T14:29:03.4677034Z 
2025-08-20T14:29:03.4677162Z # price\_importer.services\_common.db
2025-08-20T14:29:03.4677401Z 
2025-08-20T14:29:03.4677651Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T14:29:03.4678026Z 
2025-08-20T14:29:03.4678144Z #### build\_sqlalchemy\_url
2025-08-20T14:29:03.4678358Z 
2025-08-20T14:29:03.4678448Z ```python
2025-08-20T14:29:03.4678756Z def build_sqlalchemy_url() -> str
2025-08-20T14:29:03.4679077Z ```
2025-08-20T14:29:03.4679202Z 
2025-08-20T14:29:03.4679352Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:29:03.4679617Z 
2025-08-20T14:29:03.4679831Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T14:29:03.4680185Z 
2025-08-20T14:29:03.4680296Z #### build\_asyncpg\_dsn
2025-08-20T14:29:03.4680483Z 
2025-08-20T14:29:03.4680572Z ```python
2025-08-20T14:29:03.4680821Z def build_asyncpg_dsn() -> str
2025-08-20T14:29:03.4681110Z ```
2025-08-20T14:29:03.4681237Z 
2025-08-20T14:29:03.4681430Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:29:03.4681749Z 
2025-08-20T14:29:03.4681943Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T14:29:03.4682263Z 
2025-08-20T14:29:03.4682360Z #### refresh\_mvs
2025-08-20T14:29:03.4682524Z 
2025-08-20T14:29:03.4682617Z ```python
2025-08-20T14:29:03.4682906Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:29:03.4683285Z ```
2025-08-20T14:29:03.4683577Z 
2025-08-20T14:29:03.4683790Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:29:03.4684117Z 
2025-08-20T14:29:03.4684258Z <a id="price_importer.services_common"></a>
2025-08-20T14:29:03.4684519Z 
2025-08-20T14:29:03.4684803Z # price\_importer.services\_common
2025-08-20T14:29:03.4685035Z 
2025-08-20T14:29:03.4685191Z <a id="price_importer.services_common.base"></a>
2025-08-20T14:29:03.4685496Z 
2025-08-20T14:29:03.4685630Z # price\_importer.services\_common.base
2025-08-20T14:29:03.4685881Z 
2025-08-20T14:29:03.4686016Z <a id="price_importer.normaliser"></a>
2025-08-20T14:29:03.4686267Z 
2025-08-20T14:29:03.4686392Z # price\_importer.normaliser
2025-08-20T14:29:03.4686602Z 
2025-08-20T14:29:03.4686777Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T14:29:03.4687065Z 
2025-08-20T14:29:03.4687202Z # price\_importer.common.models\_vendor
2025-08-20T14:29:03.4687462Z 
2025-08-20T14:29:03.4687601Z <a id="price_importer.common.db_url"></a>
2025-08-20T14:29:03.4687865Z 
2025-08-20T14:29:03.4688000Z # price\_importer.common.db\_url
2025-08-20T14:29:03.4688224Z 
2025-08-20T14:29:03.4688385Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T14:29:03.4688669Z 
2025-08-20T14:29:03.4688766Z #### make\_dsn
2025-08-20T14:29:03.4688906Z 
2025-08-20T14:29:03.4688993Z ```python
2025-08-20T14:29:03.4689243Z def make_dsn(async_: bool = False) -> str
2025-08-20T14:29:03.4689565Z ```
2025-08-20T14:29:03.4689691Z 
2025-08-20T14:29:03.4689864Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T14:29:03.4690157Z 
2025-08-20T14:29:03.4690321Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T14:29:03.4690601Z 
2025-08-20T14:29:03.4690692Z #### build\_url
2025-08-20T14:29:03.4690840Z 
2025-08-20T14:29:03.4690929Z ```python
2025-08-20T14:29:03.4691180Z def build_url(async_: bool = False) -> str
2025-08-20T14:29:03.4691517Z ```
2025-08-20T14:29:03.4691642Z 
2025-08-20T14:29:03.4691821Z Return Postgres DSN built from environment variables.
2025-08-20T14:29:03.4692298Z 
2025-08-20T14:29:03.4692420Z <a id="price_importer.common"></a>
2025-08-20T14:29:03.4692645Z 
2025-08-20T14:29:03.4692763Z # price\_importer.common
2025-08-20T14:29:03.4692952Z 
2025-08-20T14:29:03.4693080Z <a id="price_importer.common.base"></a>
2025-08-20T14:29:03.4693328Z 
2025-08-20T14:29:03.4693446Z # price\_importer.common.base
2025-08-20T14:29:03.4693654Z 
2025-08-20T14:29:03.4693793Z <a id="price_importer.tests.conftest"></a>
2025-08-20T14:29:03.4694055Z 
2025-08-20T14:29:03.4694179Z # price\_importer.tests.conftest
2025-08-20T14:29:03.4694402Z 
2025-08-20T14:29:03.4694711Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T14:29:03.4694997Z 
2025-08-20T14:29:03.4695129Z # price\_importer.tests.test\_reader
2025-08-20T14:29:03.4695393Z 
2025-08-20T14:29:03.4695554Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T14:29:03.4695901Z 
2025-08-20T14:29:03.4696055Z # price\_importer.tests.test\_imports
2025-08-20T14:29:03.4696331Z 
2025-08-20T14:29:03.4696480Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T14:29:03.4696755Z 
2025-08-20T14:29:03.4696900Z # price\_importer.tests.test\_smoke
2025-08-20T14:29:03.4697144Z 
2025-08-20T14:29:03.4697307Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T14:29:03.4697607Z 
2025-08-20T14:29:03.4697754Z # price\_importer.tests.test\_normaliser
2025-08-20T14:29:03.4698016Z 
2025-08-20T14:29:03.4698151Z <a id="price_importer.tests"></a>
2025-08-20T14:29:03.4698377Z 
2025-08-20T14:29:03.4698492Z # price\_importer.tests
2025-08-20T14:29:03.4698687Z 
2025-08-20T14:29:03.4698817Z <a id="price_importer.reader"></a>
2025-08-20T14:29:03.4699048Z 
2025-08-20T14:29:03.4699159Z # price\_importer.reader
2025-08-20T14:29:03.4699359Z 
2025-08-20T14:29:03.4699490Z <a id="price_importer.repository"></a>
2025-08-20T14:29:03.4699738Z 
2025-08-20T14:29:03.4699865Z # price\_importer.repository
2025-08-20T14:29:03.4700089Z 
2025-08-20T14:29:03.4700214Z <a id="price_importer.import"></a>
2025-08-20T14:29:03.4700453Z 
2025-08-20T14:29:03.4700579Z # price\_importer.import
2025-08-20T14:29:03.4700947Z 
2025-08-20T14:29:03.4701052Z <a id="fees_h10"></a>
2025-08-20T14:29:03.4701233Z 
2025-08-20T14:29:03.4701329Z # fees\_h10
2025-08-20T14:29:03.4701459Z 
2025-08-20T14:29:03.4701569Z <a id="fees_h10.worker"></a>
2025-08-20T14:29:03.4701780Z 
2025-08-20T14:29:03.4701880Z # fees\_h10.worker
2025-08-20T14:29:03.4702036Z 
2025-08-20T14:29:03.4702191Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T14:29:03.4702450Z 
2025-08-20T14:29:03.4702558Z #### list\_active\_asins
2025-08-20T14:29:03.4702746Z 
2025-08-20T14:29:03.4702839Z ```python
2025-08-20T14:29:03.4703085Z def list_active_asins() -> list[str]
2025-08-20T14:29:03.4703402Z ```
2025-08-20T14:29:03.4703524Z 
2025-08-20T14:29:03.4703690Z Return known ASINs or an empty list if unavailable.
2025-08-20T14:29:03.4703991Z 
2025-08-20T14:29:03.4704110Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T14:29:03.4704348Z 
2025-08-20T14:29:03.4704466Z # fees\_h10.tests.test\_smoke
2025-08-20T14:29:03.4704829Z 
2025-08-20T14:29:03.4704949Z <a id="fees_h10.tests"></a>
2025-08-20T14:29:03.4705153Z 
2025-08-20T14:29:03.4705248Z # fees\_h10.tests
2025-08-20T14:29:03.4705401Z 
2025-08-20T14:29:03.4705509Z <a id="fees_h10.client"></a>
2025-08-20T14:29:03.4705713Z 
2025-08-20T14:29:03.4705807Z # fees\_h10.client
2025-08-20T14:29:03.4705965Z 
2025-08-20T14:29:03.4706092Z <a id="fees_h10.repository"></a>
2025-08-20T14:29:03.4706312Z 
2025-08-20T14:29:03.4706415Z # fees\_h10.repository
2025-08-20T14:29:03.4706589Z 
2025-08-20T14:29:03.4706737Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T14:29:03.4707013Z 
2025-08-20T14:29:03.4707115Z #### upsert\_fees\_raw
2025-08-20T14:29:03.4707304Z 
2025-08-20T14:29:03.4707396Z ```python
2025-08-20T14:29:03.4707652Z def upsert_fees_raw(engine: Engine,
2025-08-20T14:29:03.4708016Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T14:29:03.4708384Z                     *,
2025-08-20T14:29:03.4708725Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T14:29:03.4709308Z ```
2025-08-20T14:29:03.4709437Z 
2025-08-20T14:29:03.4709555Z Idempotent upsert for fees.
2025-08-20T14:29:03.4709768Z 
2025-08-20T14:29:03.4709999Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T14:29:03.4710533Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T14:29:03.4711003Z Only updates when one of the mutable fields changes.
2025-08-20T14:29:03.4711304Z 
2025-08-20T14:29:03.4711414Z <a id="emailer"></a>
2025-08-20T14:29:03.4711579Z 
2025-08-20T14:29:03.4711666Z # emailer
2025-08-20T14:29:03.4711808Z 
2025-08-20T14:29:03.4711955Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T14:29:03.4712224Z 
2025-08-20T14:29:03.4712360Z # emailer.tests.test\_import\_emailer
2025-08-20T14:29:03.4712611Z 
2025-08-20T14:29:03.4712732Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T14:29:03.4712972Z 
2025-08-20T14:29:03.4713096Z # emailer.tests.test\_smoke
2025-08-20T14:29:03.4713296Z 
2025-08-20T14:29:03.4742128Z <a id="emailer.tests"></a>
2025-08-20T14:29:03.4742436Z 
2025-08-20T14:29:03.4742554Z # emailer.tests
2025-08-20T14:29:03.4742738Z 
2025-08-20T14:29:03.4742887Z <a id="emailer.generate_body"></a>
2025-08-20T14:29:03.4743148Z 
2025-08-20T14:29:03.4743271Z # emailer.generate\_body
2025-08-20T14:29:03.4743501Z 
2025-08-20T14:29:03.4743619Z <a id="llm_server"></a>
2025-08-20T14:29:03.4743818Z 
2025-08-20T14:29:03.4743928Z # llm\_server
2025-08-20T14:29:03.4744087Z 
2025-08-20T14:29:03.4744208Z <a id="llm_server.app"></a>
2025-08-20T14:29:03.4744422Z 
2025-08-20T14:29:03.4744519Z # llm\_server.app
2025-08-20T14:29:03.4744831Z 
