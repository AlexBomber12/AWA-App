2025-08-19T12:40:53.6532353Z ##[group]Run pydoc-markdown
2025-08-19T12:40:53.6532664Z [36;1mpydoc-markdown[0m
2025-08-19T12:40:53.6572592Z shell: /usr/bin/bash -e {0}
2025-08-19T12:40:53.6572824Z env:
2025-08-19T12:40:53.6573071Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:40:53.6573598Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T12:40:53.6573997Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:40:53.6574343Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:40:53.6574688Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:40:53.6575035Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T12:40:53.6575327Z ##[endgroup]
2025-08-19T12:40:54.0198742Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T12:40:54.0199489Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T12:40:54.0199963Z In "pydoc-markdown.yml"
2025-08-19T12:40:54.0200389Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T12:40:54.0201102Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T12:40:54.0201889Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T12:40:54.0202435Z 
2025-08-19T12:40:54.3660603Z <a id="__init__"></a>
2025-08-19T12:40:54.3661046Z 
2025-08-19T12:40:54.3661168Z # \_\_init\_\_
2025-08-19T12:40:54.3661371Z 
2025-08-19T12:40:54.3661497Z <a id="api"></a>
2025-08-19T12:40:54.3661702Z 
2025-08-19T12:40:54.3661809Z # api
2025-08-19T12:40:54.3661977Z 
2025-08-19T12:40:54.3662114Z <a id="api.errors"></a>
2025-08-19T12:40:54.3662350Z 
2025-08-19T12:40:54.3662475Z # api.errors
2025-08-19T12:40:54.3662659Z 
2025-08-19T12:40:54.3662805Z <a id="api.sentry_config"></a>
2025-08-19T12:40:54.3663086Z 
2025-08-19T12:40:54.3663222Z # api.sentry\_config
2025-08-19T12:40:54.3667634Z 
2025-08-19T12:40:54.3667870Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T12:40:54.3668250Z 
2025-08-19T12:40:54.3668413Z # api.tests.test\_stats\_contracts
2025-08-19T12:40:54.3668763Z 
2025-08-19T12:40:54.3668946Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T12:40:54.3669270Z 
2025-08-19T12:40:54.3669417Z # api.tests.test\_sentry\_scrub
2025-08-19T12:40:54.3669705Z 
2025-08-19T12:40:54.3669882Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T12:40:54.3670217Z 
2025-08-19T12:40:54.3670381Z # api.tests.test\_roi\_basic\_auth
2025-08-19T12:40:54.3670680Z 
2025-08-19T12:40:54.3670841Z <a id="api.tests.test_errors_json"></a>
2025-08-19T12:40:54.3671155Z 
2025-08-19T12:40:54.3671313Z # api.tests.test\_errors\_json
2025-08-19T12:40:54.3671584Z 
2025-08-19T12:40:54.3671731Z <a id="api.tests.test_llm"></a>
2025-08-19T12:40:54.3672004Z 
2025-08-19T12:40:54.3672139Z # api.tests.test\_llm
2025-08-19T12:40:54.3672357Z 
2025-08-19T12:40:54.3672515Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T12:40:54.3672834Z 
2025-08-19T12:40:54.3672980Z # api.tests.test\_roi\_filters
2025-08-19T12:40:54.3673244Z 
2025-08-19T12:40:54.3673620Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T12:40:54.3674314Z 
2025-08-19T12:40:54.3674469Z # api.tests.test\_sentry\_event
2025-08-19T12:40:54.3674744Z 
2025-08-19T12:40:54.3674976Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T12:40:54.3675371Z 
2025-08-19T12:40:54.3675520Z ## DummyTransport Objects
2025-08-19T12:40:54.3675771Z 
2025-08-19T12:40:54.3675892Z ```python
2025-08-19T12:40:54.3676208Z class DummyTransport()
2025-08-19T12:40:54.3676533Z ```
2025-08-19T12:40:54.3676683Z 
2025-08-19T12:40:54.3677019Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T12:40:54.3677510Z 
2025-08-19T12:40:54.3677644Z #### capture\_envelope
2025-08-19T12:40:54.3677865Z 
2025-08-19T12:40:54.3677979Z ```python
2025-08-19T12:40:54.3678290Z def capture_envelope(envelope)
2025-08-19T12:40:54.3678663Z ```
2025-08-19T12:40:54.3678812Z 
2025-08-19T12:40:54.3679050Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T12:40:54.3679441Z 
2025-08-19T12:40:54.3679601Z <a id="api.tests.test_cors"></a>
2025-08-19T12:40:54.3680236Z 
2025-08-19T12:40:54.3680386Z # api.tests.test\_cors
2025-08-19T12:40:54.3680615Z 
2025-08-19T12:40:54.3680770Z <a id="api.tests.test_imports"></a>
2025-08-19T12:40:54.3681080Z 
2025-08-19T12:40:54.3681227Z # api.tests.test\_imports
2025-08-19T12:40:54.3681480Z 
2025-08-19T12:40:54.3681643Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T12:40:54.3681959Z 
2025-08-19T12:40:54.3682106Z # api.tests.test\_rate\_limit
2025-08-19T12:40:54.3682368Z 
2025-08-19T12:40:54.3682550Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T12:40:54.3682881Z 
2025-08-19T12:40:54.3682992Z #### app
2025-08-19T12:40:54.3683161Z 
2025-08-19T12:40:54.3683273Z noqa: E402
2025-08-19T12:40:54.3683626Z 
2025-08-19T12:40:54.3683791Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T12:40:54.3684114Z 
2025-08-19T12:40:54.3684258Z # api.tests.test\_entrypoint
2025-08-19T12:40:54.3684522Z 
2025-08-19T12:40:54.3684683Z <a id="api.tests.test_health"></a>
2025-08-19T12:40:54.3684988Z 
2025-08-19T12:40:54.3685133Z # api.tests.test\_health
2025-08-19T12:40:54.3685373Z 
2025-08-19T12:40:54.3685518Z <a id="api.tests.test_score"></a>
2025-08-19T12:40:54.3685799Z 
2025-08-19T12:40:54.3685932Z # api.tests.test\_score
2025-08-19T12:40:54.3686165Z 
2025-08-19T12:40:54.3686307Z <a id="api.logging_config"></a>
2025-08-19T12:40:54.3686572Z 
2025-08-19T12:40:54.3686711Z # api.logging\_config
2025-08-19T12:40:54.3686932Z 
2025-08-19T12:40:54.3687078Z <a id="api.migrations.env"></a>
2025-08-19T12:40:54.3687359Z 
2025-08-19T12:40:54.3687491Z # api.migrations.env
2025-08-19T12:40:54.3687709Z 
2025-08-19T12:40:54.3687929Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T12:40:54.3688324Z 
2025-08-19T12:40:54.3688520Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T12:40:54.3688878Z 
2025-08-19T12:40:54.3689095Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T12:40:54.3689458Z 
2025-08-19T12:40:54.3689633Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T12:40:54.3689992Z 
2025-08-19T12:40:54.3690286Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T12:40:54.3690744Z 
2025-08-19T12:40:54.3691010Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T12:40:54.3691437Z 
2025-08-19T12:40:54.3691667Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T12:40:54.3692054Z 
2025-08-19T12:40:54.3692260Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T12:40:54.3692612Z 
2025-08-19T12:40:54.3692835Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T12:40:54.3693220Z 
2025-08-19T12:40:54.3693579Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T12:40:54.3693934Z 
2025-08-19T12:40:54.3694172Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T12:40:54.3694572Z 
2025-08-19T12:40:54.3694777Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T12:40:54.3695140Z 
2025-08-19T12:40:54.3695370Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T12:40:54.3696069Z 
2025-08-19T12:40:54.3696292Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T12:40:54.3696694Z 
2025-08-19T12:40:54.3696937Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T12:40:54.3697331Z 
2025-08-19T12:40:54.3697531Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T12:40:54.3697896Z 
2025-08-19T12:40:54.3698159Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T12:40:54.3698593Z 
2025-08-19T12:40:54.3698816Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T12:40:54.3699191Z 
2025-08-19T12:40:54.3699429Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T12:40:54.3699816Z 
2025-08-19T12:40:54.3700016Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T12:40:54.3700382Z 
2025-08-19T12:40:54.3700637Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T12:40:54.3701046Z 
2025-08-19T12:40:54.3701262Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T12:40:54.3701895Z 
2025-08-19T12:40:54.3702108Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T12:40:54.3702477Z 
2025-08-19T12:40:54.3702665Z # api.migrations.versions.0001\_baseline
2025-08-19T12:40:54.3702995Z 
2025-08-19T12:40:54.3703157Z <a id="api.migrations.versions"></a>
2025-08-19T12:40:54.3703719Z 
2025-08-19T12:40:54.3703876Z # api.migrations.versions
2025-08-19T12:40:54.3704133Z 
2025-08-19T12:40:54.3704286Z <a id="api.migrations"></a>
2025-08-19T12:40:54.3704540Z 
2025-08-19T12:40:54.3704662Z # api.migrations
2025-08-19T12:40:54.3704964Z 
2025-08-19T12:40:54.3705097Z <a id="api.db"></a>
2025-08-19T12:40:54.3705299Z 
2025-08-19T12:40:54.3705411Z # api.db
2025-08-19T12:40:54.3705580Z 
2025-08-19T12:40:54.3705730Z <a id="api.routes.score"></a>
2025-08-19T12:40:54.3705997Z 
2025-08-19T12:40:54.3706124Z # api.routes.score
2025-08-19T12:40:54.3706330Z 
2025-08-19T12:40:54.3706471Z <a id="api.routes.stats"></a>
2025-08-19T12:40:54.3706727Z 
2025-08-19T12:40:54.3706864Z # api.routes.stats
2025-08-19T12:40:54.3707084Z 
2025-08-19T12:40:54.3707222Z <a id="api.routes.roi"></a>
2025-08-19T12:40:54.3707472Z 
2025-08-19T12:40:54.3707593Z # api.routes.roi
2025-08-19T12:40:54.3707787Z 
2025-08-19T12:40:54.3707930Z <a id="api.routes.health"></a>
2025-08-19T12:40:54.3708196Z 
2025-08-19T12:40:54.3708326Z # api.routes.health
2025-08-19T12:40:54.3708528Z 
2025-08-19T12:40:54.3708702Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T12:40:54.3709024Z 
2025-08-19T12:40:54.3709136Z #### MAX\_SKEW
2025-08-19T12:40:54.3709321Z 
2025-08-19T12:40:54.3709441Z seconds
2025-08-19T12:40:54.3709596Z 
2025-08-19T12:40:54.3709762Z <a id="api.routes.health.health"></a>
2025-08-19T12:40:54.3710079Z 
2025-08-19T12:40:54.3710190Z #### health
2025-08-19T12:40:54.3710355Z 
2025-08-19T12:40:54.3710474Z ```python
2025-08-19T12:40:54.3710822Z @router.get("/health", include_in_schema=False)
2025-08-19T12:40:54.3711570Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T12:40:54.3712210Z ```
2025-08-19T12:40:54.3712379Z 
2025-08-19T12:40:54.3712608Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T12:40:54.3712981Z 
2025-08-19T12:40:54.3713140Z <a id="api.routes.repository"></a>
2025-08-19T12:40:54.3713651Z 
2025-08-19T12:40:54.3713798Z # api.routes.repository
2025-08-19T12:40:54.3714030Z 
2025-08-19T12:40:54.3714171Z <a id="api.routes"></a>
2025-08-19T12:40:54.3714391Z 
2025-08-19T12:40:54.3714508Z # api.routes
2025-08-19T12:40:54.3714685Z 
2025-08-19T12:40:54.3714831Z <a id="api.models.fee"></a>
2025-08-19T12:40:54.3715083Z 
2025-08-19T12:40:54.3715205Z # api.models.fee
2025-08-19T12:40:54.3715406Z 
2025-08-19T12:40:54.3715538Z <a id="api.models"></a>
2025-08-19T12:40:54.3715746Z 
2025-08-19T12:40:54.3715854Z # api.models
2025-08-19T12:40:54.3716025Z 
2025-08-19T12:40:54.3716158Z <a id="api.roi_repository"></a>
2025-08-19T12:40:54.3716404Z 
2025-08-19T12:40:54.3716536Z # api.roi\_repository
2025-08-19T12:40:54.3716731Z 
2025-08-19T12:40:54.3716854Z <a id="api.main"></a>
2025-08-19T12:40:54.3717311Z 
2025-08-19T12:40:54.3717430Z # api.main
2025-08-19T12:40:54.3717659Z 
2025-08-19T12:40:54.3717803Z <a id="api.main.ready"></a>
2025-08-19T12:40:54.3718068Z 
2025-08-19T12:40:54.3718183Z #### ready
2025-08-19T12:40:54.3718351Z 
2025-08-19T12:40:54.3718474Z ```python
2025-08-19T12:40:54.3718956Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T12:40:54.3719787Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T12:40:54.3720455Z                                                                       str]
2025-08-19T12:40:54.3720889Z ```
2025-08-19T12:40:54.3721035Z 
2025-08-19T12:40:54.3721216Z Return 200 only when migrations are at head.
2025-08-19T12:40:54.3721556Z 
2025-08-19T12:40:54.3721690Z <a id="api.config"></a>
2025-08-19T12:40:54.3721912Z 
2025-08-19T12:40:54.3722038Z # api.config
2025-08-19T12:40:54.3722212Z 
2025-08-19T12:40:54.3722345Z <a id="api.security"></a>
2025-08-19T12:40:54.3722589Z 
2025-08-19T12:40:54.3722928Z # api.security
2025-08-19T12:40:54.3723114Z 
2025-08-19T12:40:54.3723230Z <a id="etl"></a>
2025-08-19T12:40:54.3723634Z 
2025-08-19T12:40:54.3723748Z # etl
2025-08-19T12:40:54.3723904Z 
2025-08-19T12:40:54.3724054Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T12:40:54.3724328Z 
2025-08-19T12:40:54.3724459Z # etl.fba\_fee\_ingestor
2025-08-19T12:40:54.3724688Z 
2025-08-19T12:40:54.3724842Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T12:40:54.3725114Z 
2025-08-19T12:40:54.3725244Z # etl.sp\_fees\_ingestor
2025-08-19T12:40:54.3725477Z 
2025-08-19T12:40:54.3725618Z <a id="etl.keepa_ingestor"></a>
2025-08-19T12:40:54.3725877Z 
2025-08-19T12:40:54.3726013Z # etl.keepa\_ingestor
2025-08-19T12:40:54.3726227Z 
2025-08-19T12:40:54.3726347Z <a id="etl.db"></a>
2025-08-19T12:40:54.3726542Z 
2025-08-19T12:40:54.3726655Z # etl.db
2025-08-19T12:40:54.3726813Z 
2025-08-19T12:40:54.3726962Z <a id="etl.dialects.schemas"></a>
2025-08-19T12:40:54.3727248Z 
2025-08-19T12:40:54.3727382Z # etl.dialects.schemas
2025-08-19T12:40:54.3727621Z 
2025-08-19T12:40:54.3727810Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T12:40:54.3728170Z 
2025-08-19T12:40:54.3728336Z # etl.dialects.amazon\_reimbursements
2025-08-19T12:40:54.3728641Z 
2025-08-19T12:40:54.3728826Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T12:40:54.3729156Z 
2025-08-19T12:40:54.3729310Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T12:40:54.3729610Z 
2025-08-19T12:40:54.3729775Z <a id="etl.dialects.test_generic"></a>
2025-08-19T12:40:54.3730080Z 
2025-08-19T12:40:54.3730235Z # etl.dialects.test\_generic
2025-08-19T12:40:54.3730497Z 
2025-08-19T12:40:54.3730723Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T12:40:54.3731037Z 
2025-08-19T12:40:54.3731190Z # etl.dialects.amazon\_returns
2025-08-19T12:40:54.3731467Z 
2025-08-19T12:40:54.3731646Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T12:40:54.3731975Z 
2025-08-19T12:40:54.3732125Z # etl.dialects.amazon\_fee\_preview
2025-08-19T12:40:54.3732425Z 
2025-08-19T12:40:54.3732637Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T12:40:54.3732999Z 
2025-08-19T12:40:54.3733172Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T12:40:54.3733663Z 
2025-08-19T12:40:54.3733844Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T12:40:54.3734179Z 
2025-08-19T12:40:54.3734340Z # etl.dialects.amazon\_settlements
2025-08-19T12:40:54.3734621Z 
2025-08-19T12:40:54.3734766Z <a id="etl.dialects"></a>
2025-08-19T12:40:54.3735007Z 
2025-08-19T12:40:54.3735123Z # etl.dialects
2025-08-19T12:40:54.3735303Z 
2025-08-19T12:40:54.3735430Z <a id="ingest"></a>
2025-08-19T12:40:54.3735624Z 
2025-08-19T12:40:54.3735732Z # ingest
2025-08-19T12:40:54.3735898Z 
2025-08-19T12:40:54.3736041Z <a id="ingest.maintenance"></a>
2025-08-19T12:40:54.3736303Z 
2025-08-19T12:40:54.3736431Z # ingest.maintenance
2025-08-19T12:40:54.3736652Z 
2025-08-19T12:40:54.3736791Z <a id="ingest.copy_loader"></a>
2025-08-19T12:40:54.3737046Z 
2025-08-19T12:40:54.3737181Z # ingest.copy\_loader
2025-08-19T12:40:54.3737404Z 
2025-08-19T12:40:54.3737807Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T12:40:54.3738168Z 
2025-08-19T12:40:54.3738302Z #### copy\_df\_via\_temp
2025-08-19T12:40:54.3738528Z 
2025-08-19T12:40:54.3738642Z ```python
2025-08-19T12:40:54.3738955Z def copy_df_via_temp(engine: Engine,
2025-08-19T12:40:54.3739384Z                      df: pd.DataFrame,
2025-08-19T12:40:54.3739813Z                      target_table: str,
2025-08-19T12:40:54.3740227Z                      *,
2025-08-19T12:40:54.3740604Z                      target_schema: Optional[str] = None,
2025-08-19T12:40:54.3741103Z                      columns: Sequence[str],
2025-08-19T12:40:54.3741610Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T12:40:54.3742152Z                      analyze_after: bool = False,
2025-08-19T12:40:54.3742636Z                      connection: Any | None = None) -> int
2025-08-19T12:40:54.3743082Z ```
2025-08-19T12:40:54.3743233Z 
2025-08-19T12:40:54.3743709Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T12:40:54.3744509Z 
2025-08-19T12:40:54.3744676Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T12:40:54.3744979Z 
2025-08-19T12:40:54.3745132Z # ingest.tests.test\_smoke
2025-08-19T12:40:54.3745376Z 
2025-08-19T12:40:54.3745515Z <a id="ingest.tests"></a>
2025-08-19T12:40:54.3745763Z 
2025-08-19T12:40:54.3745881Z # ingest.tests
2025-08-19T12:40:54.3746064Z 
2025-08-19T12:40:54.3746218Z <a id="ingest.upload_router"></a>
2025-08-19T12:40:54.3746497Z 
2025-08-19T12:40:54.3746630Z # ingest.upload\_router
2025-08-19T12:40:54.3746857Z 
2025-08-19T12:40:54.3747011Z <a id="ingest.email_watcher"></a>
2025-08-19T12:40:54.3747287Z 
2025-08-19T12:40:54.3747418Z # ingest.email\_watcher
2025-08-19T12:40:54.3747649Z 
2025-08-19T12:40:54.3747806Z <a id="ingest.email_watcher.main"></a>
2025-08-19T12:40:54.3748111Z 
2025-08-19T12:40:54.3748229Z #### main
2025-08-19T12:40:54.3748390Z 
2025-08-19T12:40:54.3748501Z ```python
2025-08-19T12:40:54.3748799Z def main() -> dict[str, str]
2025-08-19T12:40:54.3749168Z ```
2025-08-19T12:40:54.3749317Z 
2025-08-19T12:40:54.3749590Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T12:40:54.3750017Z 
2025-08-19T12:40:54.3750256Z Returns {"status": "success"} when processing completes.
2025-08-19T12:40:54.3750650Z 
2025-08-19T12:40:54.3750792Z <a id="ingest.tasks"></a>
2025-08-19T12:40:54.3751034Z 
2025-08-19T12:40:54.3751164Z # ingest.tasks
2025-08-19T12:40:54.3751355Z 
2025-08-19T12:40:54.3751531Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T12:40:54.3751862Z 
2025-08-19T12:40:54.3751997Z #### task\_import\_file
2025-08-19T12:40:54.3752211Z 
2025-08-19T12:40:54.3752322Z ```python
2025-08-19T12:40:54.3752710Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T12:40:54.3753264Z def task_import_file(self: Any,
2025-08-19T12:40:54.3753907Z                      uri: str,
2025-08-19T12:40:54.3754316Z                      report_type: str | None = None,
2025-08-19T12:40:54.3754824Z                      force: bool = False) -> dict[str, Any]
2025-08-19T12:40:54.3755283Z ```
2025-08-19T12:40:54.3755437Z 
2025-08-19T12:40:54.3755679Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T12:40:54.3756078Z 
2025-08-19T12:40:54.3756224Z <a id="ingest.celery_app"></a>
2025-08-19T12:40:54.3756503Z 
2025-08-19T12:40:54.3756633Z # ingest.celery\_app
2025-08-19T12:40:54.3756846Z 
2025-08-19T12:40:54.3757001Z <a id="ingest.ingest_router"></a>
2025-08-19T12:40:54.3757278Z 
2025-08-19T12:40:54.3757409Z # ingest.ingest\_router
2025-08-19T12:40:54.3757631Z 
2025-08-19T12:40:54.3757775Z <a id="logistics_etl"></a>
2025-08-19T12:40:54.3758014Z 
2025-08-19T12:40:54.3758132Z # logistics\_etl
2025-08-19T12:40:54.3758335Z 
2025-08-19T12:40:54.3758468Z Daily logistics ETL job.
2025-08-19T12:40:54.3758699Z 
2025-08-19T12:40:54.3758853Z <a id="logistics_etl.__main__"></a>
2025-08-19T12:40:54.3759138Z 
2025-08-19T12:40:54.3759276Z # logistics\_etl.\_\_main\_\_
2025-08-19T12:40:54.3759532Z 
2025-08-19T12:40:54.3760144Z <a id="logistics_etl.dsn"></a>
2025-08-19T12:40:54.3760424Z 
2025-08-19T12:40:54.3760563Z # logistics\_etl.dsn
2025-08-19T12:40:54.3760795Z 
2025-08-19T12:40:54.3761017Z Local DSN builder to avoid cross-service dependency.
2025-08-19T12:40:54.3761396Z 
2025-08-19T12:40:54.3761567Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T12:40:54.3761880Z 
2025-08-19T12:40:54.3761995Z #### build\_dsn
2025-08-19T12:40:54.3762181Z 
2025-08-19T12:40:54.3762301Z ```python
2025-08-19T12:40:54.3762619Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:40:54.3763032Z ```
2025-08-19T12:40:54.3763179Z 
2025-08-19T12:40:54.3763628Z Return a Postgres DSN assembled from environment variables.
2025-08-19T12:40:54.3764066Z 
2025-08-19T12:40:54.3764353Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T12:40:54.3765101Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T12:40:54.3765748Z error when any required variable is missing.
2025-08-19T12:40:54.3766085Z 
2025-08-19T12:40:54.3766516Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T12:40:54.3766853Z 
2025-08-19T12:40:54.3767011Z # logistics\_etl.tests.conftest
2025-08-19T12:40:54.3767303Z 
2025-08-19T12:40:54.3767498Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T12:40:54.3767855Z 
2025-08-19T12:40:54.3768024Z # logistics\_etl.tests.test\_repository
2025-08-19T12:40:54.3768339Z 
2025-08-19T12:40:54.3768506Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T12:40:54.3768832Z 
2025-08-19T12:40:54.3768990Z # logistics\_etl.tests.test\_cron
2025-08-19T12:40:54.3769268Z 
2025-08-19T12:40:54.3769447Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T12:40:54.3769807Z 
2025-08-19T12:40:54.3769959Z # logistics\_etl.tests.test\_imports
2025-08-19T12:40:54.3770257Z 
2025-08-19T12:40:54.3770435Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T12:40:54.3770767Z 
2025-08-19T12:40:54.3770915Z # logistics\_etl.tests.test\_smoke
2025-08-19T12:40:54.3771201Z 
2025-08-19T12:40:54.3771387Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T12:40:54.3771736Z 
2025-08-19T12:40:54.3771884Z # logistics\_etl.tests.test\_client
2025-08-19T12:40:54.3772187Z 
2025-08-19T12:40:54.3772342Z <a id="logistics_etl.tests"></a>
2025-08-19T12:40:54.3772617Z 
2025-08-19T12:40:54.3772765Z # logistics\_etl.tests
2025-08-19T12:40:54.3772990Z 
2025-08-19T12:40:54.3773134Z <a id="logistics_etl.flow"></a>
2025-08-19T12:40:54.3773565Z 
2025-08-19T12:40:54.3773714Z # logistics\_etl.flow
2025-08-19T12:40:54.3773936Z 
2025-08-19T12:40:54.3774086Z <a id="logistics_etl.client"></a>
2025-08-19T12:40:54.3774380Z 
2025-08-19T12:40:54.3774512Z # logistics\_etl.client
2025-08-19T12:40:54.3774738Z 
2025-08-19T12:40:54.3774880Z <a id="logistics_etl.cron"></a>
2025-08-19T12:40:54.3775156Z 
2025-08-19T12:40:54.3775285Z # logistics\_etl.cron
2025-08-19T12:40:54.3775498Z 
2025-08-19T12:40:54.3775644Z <a id="logistics_etl.db"></a>
2025-08-19T12:40:54.3775876Z 
2025-08-19T12:40:54.3775992Z # logistics\_etl.db
2025-08-19T12:40:54.3776194Z 
2025-08-19T12:40:54.3776351Z <a id="logistics_etl.repository"></a>
2025-08-19T12:40:54.3776637Z 
2025-08-19T12:40:54.3803561Z # logistics\_etl.repository
2025-08-19T12:40:54.3803880Z 
2025-08-19T12:40:54.3804011Z <a id="alert_bot"></a>
2025-08-19T12:40:54.3804222Z 
2025-08-19T12:40:54.3804336Z # alert\_bot
2025-08-19T12:40:54.3805342Z 
2025-08-19T12:40:54.3805532Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T12:40:54.3805807Z 
2025-08-19T12:40:54.3805935Z # alert\_bot.tests.test\_smoke
2025-08-19T12:40:54.3806153Z 
2025-08-19T12:40:54.3806277Z <a id="alert_bot.tests"></a>
2025-08-19T12:40:54.3806491Z 
2025-08-19T12:40:54.3806592Z # alert\_bot.tests
2025-08-19T12:40:54.3806758Z 
2025-08-19T12:40:54.3806878Z <a id="alert_bot.alert_bot"></a>
2025-08-19T12:40:54.3807108Z 
2025-08-19T12:40:54.3807219Z # alert\_bot.alert\_bot
2025-08-19T12:40:54.3807402Z 
2025-08-19T12:40:54.3807522Z <a id="alert_bot.rules"></a>
2025-08-19T12:40:54.3807738Z 
2025-08-19T12:40:54.3807838Z # alert\_bot.rules
2025-08-19T12:40:54.3808233Z 
2025-08-19T12:40:54.3808335Z <a id="common"></a>
2025-08-19T12:40:54.3808494Z 
2025-08-19T12:40:54.3808587Z # common
2025-08-19T12:40:54.3808725Z 
2025-08-19T12:40:54.3808836Z <a id="common.dsn"></a>
2025-08-19T12:40:54.3809022Z 
2025-08-19T12:40:54.3809124Z # common.dsn
2025-08-19T12:40:54.3809267Z 
2025-08-19T12:40:54.3809394Z <a id="common.dsn.build_dsn"></a>
2025-08-19T12:40:54.3809623Z 
2025-08-19T12:40:54.3809725Z #### build\_dsn
2025-08-19T12:40:54.3809874Z 
2025-08-19T12:40:54.3809969Z ```python
2025-08-19T12:40:54.3810245Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:40:54.3810595Z ```
2025-08-19T12:40:54.3810733Z 
2025-08-19T12:40:54.3810928Z Return a Postgres DSN, validating required variables.
2025-08-19T12:40:54.3811246Z 
2025-08-19T12:40:54.3811550Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T12:40:54.3812223Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T12:40:54.3812873Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T12:40:54.3813822Z missing.
2025-08-19T12:40:54.3813966Z 
2025-08-19T12:40:54.3814097Z <a id="common.models_vendor"></a>
2025-08-19T12:40:54.3814334Z 
2025-08-19T12:40:54.3814448Z # common.models\_vendor
2025-08-19T12:40:54.3814636Z 
2025-08-19T12:40:54.3814766Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T12:40:54.3815034Z 
2025-08-19T12:40:54.3815146Z ## Vendor Objects
2025-08-19T12:40:54.3815317Z 
2025-08-19T12:40:54.3815422Z ```python
2025-08-19T12:40:54.3815661Z class Vendor(Base)
2025-08-19T12:40:54.3815896Z ```
2025-08-19T12:40:54.3816024Z 
2025-08-19T12:40:54.3816141Z Vendor of inventory items.
2025-08-19T12:40:54.3816347Z 
2025-08-19T12:40:54.3816512Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T12:40:54.3816813Z 
2025-08-19T12:40:54.3816925Z ## VendorPrice Objects
2025-08-19T12:40:54.3817118Z 
2025-08-19T12:40:54.3817220Z ```python
2025-08-19T12:40:54.3817456Z class VendorPrice(Base)
2025-08-19T12:40:54.3817780Z ```
2025-08-19T12:40:54.3817920Z 
2025-08-19T12:40:54.3818084Z Association table linking vendors to pricing.
2025-08-19T12:40:54.3818361Z 
2025-08-19T12:40:54.3818474Z <a id="common.db_url"></a>
2025-08-19T12:40:54.3818668Z 
2025-08-19T12:40:54.3818772Z # common.db\_url
2025-08-19T12:40:54.3818927Z 
2025-08-19T12:40:54.3819044Z <a id="common.db_url.build_url"></a>
2025-08-19T12:40:54.3819286Z 
2025-08-19T12:40:54.3819381Z #### build\_url
2025-08-19T12:40:54.3819535Z 
2025-08-19T12:40:54.3819627Z ```python
2025-08-19T12:40:54.3819893Z def build_url(async_: bool = True) -> str
2025-08-19T12:40:54.3820241Z ```
2025-08-19T12:40:54.3820368Z 
2025-08-19T12:40:54.3820515Z Return Postgres DSN from env or PG_* parts.
2025-08-19T12:40:54.3820793Z 
2025-08-19T12:40:54.3820913Z <a id="common.keepa"></a>
2025-08-19T12:40:54.3821111Z 
2025-08-19T12:40:54.3821208Z # common.keepa
2025-08-19T12:40:54.3821366Z 
2025-08-19T12:40:54.3821474Z <a id="common.llm"></a>
2025-08-19T12:40:54.3821659Z 
2025-08-19T12:40:54.3821756Z # common.llm
2025-08-19T12:40:54.3821935Z 
2025-08-19T12:40:54.3822050Z <a id="common.settings"></a>
2025-08-19T12:40:54.3822252Z 
2025-08-19T12:40:54.3822357Z # common.settings
2025-08-19T12:40:54.3822512Z 
2025-08-19T12:40:54.3822613Z <a id="common.db"></a>
2025-08-19T12:40:54.3822782Z 
2025-08-19T12:40:54.3822886Z # common.db
2025-08-19T12:40:54.3823013Z 
2025-08-19T12:40:54.3823151Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T12:40:54.3823578Z 
2025-08-19T12:40:54.3823693Z #### build\_sqlalchemy\_url
2025-08-19T12:40:54.3823892Z 
2025-08-19T12:40:54.3823990Z ```python
2025-08-19T12:40:54.3824236Z def build_sqlalchemy_url() -> str
2025-08-19T12:40:54.3824542Z ```
2025-08-19T12:40:54.3824665Z 
2025-08-19T12:40:54.3824807Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T12:40:54.3825068Z 
2025-08-19T12:40:54.3825199Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T12:40:54.3825444Z 
2025-08-19T12:40:54.3825549Z #### build\_asyncpg\_dsn
2025-08-19T12:40:54.3825740Z 
2025-08-19T12:40:54.3825838Z ```python
2025-08-19T12:40:54.3826264Z def build_asyncpg_dsn() -> str
2025-08-19T12:40:54.3826558Z ```
2025-08-19T12:40:54.3826687Z 
2025-08-19T12:40:54.3826899Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T12:40:54.3827222Z 
2025-08-19T12:40:54.3827355Z <a id="common.db.refresh_mvs"></a>
2025-08-19T12:40:54.3827608Z 
2025-08-19T12:40:54.3827709Z #### refresh\_mvs
2025-08-19T12:40:54.3827867Z 
2025-08-19T12:40:54.3827961Z ```python
2025-08-19T12:40:54.3828258Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T12:40:54.3828645Z ```
2025-08-19T12:40:54.3828766Z 
2025-08-19T12:40:54.3828964Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T12:40:54.3829296Z 
2025-08-19T12:40:54.3829418Z <a id="common.config"></a>
2025-08-19T12:40:54.3829618Z 
2025-08-19T12:40:54.3829715Z # common.config
2025-08-19T12:40:54.3829887Z 
2025-08-19T12:40:54.3829996Z <a id="common.base"></a>
2025-08-19T12:40:54.3830181Z 
2025-08-19T12:40:54.3830280Z # common.base
2025-08-19T12:40:54.3830611Z 
2025-08-19T12:40:54.3830737Z <a id="common.base.Base"></a>
2025-08-19T12:40:54.3830946Z 
2025-08-19T12:40:54.3831046Z ## Base Objects
2025-08-19T12:40:54.3831192Z 
2025-08-19T12:40:54.3831283Z ```python
2025-08-19T12:40:54.3831540Z class Base(DeclarativeBase)
2025-08-19T12:40:54.3831829Z ```
2025-08-19T12:40:54.3831952Z 
2025-08-19T12:40:54.3832067Z Base class for SQLAlchemy models.
2025-08-19T12:40:54.3832294Z 
2025-08-19T12:40:54.3832399Z <a id="repricer"></a>
2025-08-19T12:40:54.3832578Z 
2025-08-19T12:40:54.3832674Z # repricer
2025-08-19T12:40:54.3832804Z 
2025-08-19T12:40:54.3832935Z <a id="repricer.app.schemas"></a>
2025-08-19T12:40:54.3833160Z 
2025-08-19T12:40:54.3833267Z # repricer.app.schemas
2025-08-19T12:40:54.3833647Z 
2025-08-19T12:40:54.3833772Z <a id="repricer.app.deps"></a>
2025-08-19T12:40:54.3833990Z 
2025-08-19T12:40:54.3834100Z # repricer.app.deps
2025-08-19T12:40:54.3834270Z 
2025-08-19T12:40:54.3834439Z Placeholder module for Keepa / SP-API clients.
2025-08-19T12:40:54.3834736Z 
2025-08-19T12:40:54.3834874Z <a id="repricer.app.logic"></a>
2025-08-19T12:40:54.3835091Z 
2025-08-19T12:40:54.3835201Z # repricer.app.logic
2025-08-19T12:40:54.3835376Z 
2025-08-19T12:40:54.3835522Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T12:40:54.3835793Z 
2025-08-19T12:40:54.3835891Z #### MIN\_MARGIN
2025-08-19T12:40:54.3836051Z 
2025-08-19T12:40:54.3836140Z 15 % ROI
2025-08-19T12:40:54.3836267Z 
2025-08-19T12:40:54.3836432Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T12:40:54.3836717Z 
2025-08-19T12:40:54.3836826Z #### compute\_price
2025-08-19T12:40:54.3836996Z 
2025-08-19T12:40:54.3837088Z ```python
2025-08-19T12:40:54.3837460Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T12:40:54.3837921Z ```
2025-08-19T12:40:54.3838046Z 
2025-08-19T12:40:54.3838209Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T12:40:54.3838647Z Replace with real competitive logic later.
2025-08-19T12:40:54.3838920Z 
2025-08-19T12:40:54.3839051Z <a id="repricer.app.main"></a>
2025-08-19T12:40:54.3839284Z 
2025-08-19T12:40:54.3839391Z # repricer.app.main
2025-08-19T12:40:54.3839567Z 
2025-08-19T12:40:54.3839682Z <a id="repricer.app"></a>
2025-08-19T12:40:54.3839881Z 
2025-08-19T12:40:54.3839981Z # repricer.app
2025-08-19T12:40:54.3840148Z 
2025-08-19T12:40:54.3840287Z <a id="repricer.tests.test_imports"></a>
2025-08-19T12:40:54.3840547Z 
2025-08-19T12:40:54.3840676Z # repricer.tests.test\_imports
2025-08-19T12:40:54.3840889Z 
2025-08-19T12:40:54.3841017Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T12:40:54.3841274Z 
2025-08-19T12:40:54.3841397Z # repricer.tests.test\_smoke
2025-08-19T12:40:54.3841601Z 
2025-08-19T12:40:54.3841712Z <a id="repricer.tests"></a>
2025-08-19T12:40:54.3841922Z 
2025-08-19T12:40:54.3842027Z # repricer.tests
2025-08-19T12:40:54.3842185Z 
2025-08-19T12:40:54.3842286Z <a id="db"></a>
2025-08-19T12:40:54.3842434Z 
2025-08-19T12:40:54.3842521Z # db
2025-08-19T12:40:54.3842645Z 
2025-08-19T12:40:54.3842763Z <a id="db.utils.views"></a>
2025-08-19T12:40:54.3843142Z 
2025-08-19T12:40:54.3843241Z # db.utils.views
2025-08-19T12:40:54.3843552Z 
2025-08-19T12:40:54.3843700Z <a id="db.utils.views.replace_view"></a>
2025-08-19T12:40:54.3843962Z 
2025-08-19T12:40:54.3844065Z #### replace\_view
2025-08-19T12:40:54.3844233Z 
2025-08-19T12:40:54.3844328Z ```python
2025-08-19T12:40:54.3844625Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T12:40:54.3844990Z ```
2025-08-19T12:40:54.3845113Z 
2025-08-19T12:40:54.3845259Z Drop and recreate a SQL view atomically.
2025-08-19T12:40:54.3845508Z 
2025-08-19T12:40:54.3845608Z <a id="db.utils"></a>
2025-08-19T12:40:54.3845789Z 
2025-08-19T12:40:54.3845884Z # db.utils
2025-08-19T12:40:54.3846015Z 
2025-08-19T12:40:54.3846140Z <a id="price_importer"></a>
2025-08-19T12:40:54.3846344Z 
2025-08-19T12:40:54.3846443Z # price\_importer
2025-08-19T12:40:54.3846607Z 
2025-08-19T12:40:54.3846775Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T12:40:54.3847058Z 
2025-08-19T12:40:54.3847191Z # price\_importer.services\_common.dsn
2025-08-19T12:40:54.3847621Z 
2025-08-19T12:40:54.3847808Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T12:40:54.3848120Z 
2025-08-19T12:40:54.3848219Z #### build\_dsn
2025-08-19T12:40:54.3848366Z 
2025-08-19T12:40:54.3848459Z ```python
2025-08-19T12:40:54.3848724Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:40:54.3849048Z ```
2025-08-19T12:40:54.3849167Z 
2025-08-19T12:40:54.3849269Z Return safe DSN.
2025-08-19T12:40:54.3849425Z 
2025-08-19T12:40:54.3849853Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T12:40:54.3850176Z 
2025-08-19T12:40:54.3850365Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T12:40:54.3850695Z 
2025-08-19T12:40:54.3850870Z # price\_importer.services\_common.models\_vendor
2025-08-19T12:40:54.3851155Z 
2025-08-19T12:40:54.3851315Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T12:40:54.3851601Z 
2025-08-19T12:40:54.3851740Z # price\_importer.services\_common.db\_url
2025-08-19T12:40:54.3852017Z 
2025-08-19T12:40:54.3852222Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T12:40:54.3852564Z 
2025-08-19T12:40:54.3852663Z #### build\_url
2025-08-19T12:40:54.3852816Z 
2025-08-19T12:40:54.3852919Z ```python
2025-08-19T12:40:54.3853186Z def build_url(async_: bool = True) -> str
2025-08-19T12:40:54.3853725Z ```
2025-08-19T12:40:54.3853854Z 
2025-08-19T12:40:54.3854001Z Return Postgres DSN from env or PG_* parts.
2025-08-19T12:40:54.3854270Z 
2025-08-19T12:40:54.3854434Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T12:40:54.3854713Z 
2025-08-19T12:40:54.3854855Z # price\_importer.services\_common.keepa
2025-08-19T12:40:54.3855121Z 
2025-08-19T12:40:54.3855276Z <a id="price_importer.services_common.llm"></a>
2025-08-19T12:40:54.3855547Z 
2025-08-19T12:40:54.3855688Z # price\_importer.services\_common.llm
2025-08-19T12:40:54.3855929Z 
2025-08-19T12:40:54.3856100Z <a id="price_importer.services_common.settings"></a>
2025-08-19T12:40:54.3856408Z 
2025-08-19T12:40:54.3856565Z # price\_importer.services\_common.settings
2025-08-19T12:40:54.3856825Z 
2025-08-19T12:40:54.3856974Z <a id="price_importer.services_common.db"></a>
2025-08-19T12:40:54.3857253Z 
2025-08-19T12:40:54.3857385Z # price\_importer.services\_common.db
2025-08-19T12:40:54.3857628Z 
2025-08-19T12:40:54.3857873Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T12:40:54.3858225Z 
2025-08-19T12:40:54.3858336Z #### build\_sqlalchemy\_url
2025-08-19T12:40:54.3858543Z 
2025-08-19T12:40:54.3858679Z ```python
2025-08-19T12:40:54.3858936Z def build_sqlalchemy_url() -> str
2025-08-19T12:40:54.3859247Z ```
2025-08-19T12:40:54.3859368Z 
2025-08-19T12:40:54.3859505Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T12:40:54.3859770Z 
2025-08-19T12:40:54.3860001Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T12:40:54.3860346Z 
2025-08-19T12:40:54.3860458Z #### build\_asyncpg\_dsn
2025-08-19T12:40:54.3860662Z 
2025-08-19T12:40:54.3860940Z ```python
2025-08-19T12:40:54.3861203Z def build_asyncpg_dsn() -> str
2025-08-19T12:40:54.3861516Z ```
2025-08-19T12:40:54.3861639Z 
2025-08-19T12:40:54.3861847Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T12:40:54.3862172Z 
2025-08-19T12:40:54.3862368Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T12:40:54.3862703Z 
2025-08-19T12:40:54.3862802Z #### refresh\_mvs
2025-08-19T12:40:54.3862957Z 
2025-08-19T12:40:54.3863047Z ```python
2025-08-19T12:40:54.3863490Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T12:40:54.3863877Z ```
2025-08-19T12:40:54.3863994Z 
2025-08-19T12:40:54.3864195Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T12:40:54.3864514Z 
2025-08-19T12:40:54.3864661Z <a id="price_importer.services_common"></a>
2025-08-19T12:40:54.3864928Z 
2025-08-19T12:40:54.3865066Z # price\_importer.services\_common
2025-08-19T12:40:54.3865309Z 
2025-08-19T12:40:54.3865468Z <a id="price_importer.services_common.base"></a>
2025-08-19T12:40:54.3865935Z 
2025-08-19T12:40:54.3866140Z # price\_importer.services\_common.base
2025-08-19T12:40:54.3866410Z 
2025-08-19T12:40:54.3866549Z <a id="price_importer.normaliser"></a>
2025-08-19T12:40:54.3866815Z 
2025-08-19T12:40:54.3866954Z # price\_importer.normaliser
2025-08-19T12:40:54.3867187Z 
2025-08-19T12:40:54.3867357Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T12:40:54.3867685Z 
2025-08-19T12:40:54.3867826Z # price\_importer.common.models\_vendor
2025-08-19T12:40:54.3868105Z 
2025-08-19T12:40:54.3868264Z <a id="price_importer.common.db_url"></a>
2025-08-19T12:40:54.3868542Z 
2025-08-19T12:40:54.3868677Z # price\_importer.common.db\_url
2025-08-19T12:40:54.3868924Z 
2025-08-19T12:40:54.3869098Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T12:40:54.3869394Z 
2025-08-19T12:40:54.3869492Z #### make\_dsn
2025-08-19T12:40:54.3869654Z 
2025-08-19T12:40:54.3869751Z ```python
2025-08-19T12:40:54.3870022Z def make_dsn(async_: bool = False) -> str
2025-08-19T12:40:54.3870397Z ```
2025-08-19T12:40:54.3870528Z 
2025-08-19T12:40:54.3870724Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T12:40:54.3871042Z 
2025-08-19T12:40:54.3871218Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T12:40:54.3871530Z 
2025-08-19T12:40:54.3871629Z #### build\_url
2025-08-19T12:40:54.3871784Z 
2025-08-19T12:40:54.3871878Z ```python
2025-08-19T12:40:54.3872154Z def build_url(async_: bool = False) -> str
2025-08-19T12:40:54.3872513Z ```
2025-08-19T12:40:54.3872645Z 
2025-08-19T12:40:54.3872837Z Return Postgres DSN built from environment variables.
2025-08-19T12:40:54.3873166Z 
2025-08-19T12:40:54.3873306Z <a id="price_importer.common"></a>
2025-08-19T12:40:54.3873740Z 
2025-08-19T12:40:54.3873865Z # price\_importer.common
2025-08-19T12:40:54.3874086Z 
2025-08-19T12:40:54.3874234Z <a id="price_importer.common.base"></a>
2025-08-19T12:40:54.3874499Z 
2025-08-19T12:40:54.3874627Z # price\_importer.common.base
2025-08-19T12:40:54.3874862Z 
2025-08-19T12:40:54.3875021Z <a id="price_importer.tests.conftest"></a>
2025-08-19T12:40:54.3875319Z 
2025-08-19T12:40:54.3875466Z # price\_importer.tests.conftest
2025-08-19T12:40:54.3875718Z 
2025-08-19T12:40:54.3875882Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T12:40:54.3876201Z 
2025-08-19T12:40:54.3876341Z # price\_importer.tests.test\_reader
2025-08-19T12:40:54.3876598Z 
2025-08-19T12:40:54.3876761Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T12:40:54.3877069Z 
2025-08-19T12:40:54.3877212Z # price\_importer.tests.test\_imports
2025-08-19T12:40:54.3877478Z 
2025-08-19T12:40:54.3877638Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T12:40:54.3877920Z 
2025-08-19T12:40:54.3878052Z # price\_importer.tests.test\_smoke
2025-08-19T12:40:54.3878311Z 
2025-08-19T12:40:54.3878477Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T12:40:54.3878824Z 
2025-08-19T12:40:54.3878973Z # price\_importer.tests.test\_normaliser
2025-08-19T12:40:54.3879258Z 
2025-08-19T12:40:54.3879395Z <a id="price_importer.tests"></a>
2025-08-19T12:40:54.3879831Z 
2025-08-19T12:40:54.3879964Z # price\_importer.tests
2025-08-19T12:40:54.3880162Z 
2025-08-19T12:40:54.3880291Z <a id="price_importer.reader"></a>
2025-08-19T12:40:54.3880549Z 
2025-08-19T12:40:54.3880673Z # price\_importer.reader
2025-08-19T12:40:54.3880884Z 
2025-08-19T12:40:54.3881029Z <a id="price_importer.repository"></a>
2025-08-19T12:40:54.3881306Z 
2025-08-19T12:40:54.3881439Z # price\_importer.repository
2025-08-19T12:40:54.3881668Z 
2025-08-19T12:40:54.3881807Z <a id="price_importer.import"></a>
2025-08-19T12:40:54.3882049Z 
2025-08-19T12:40:54.3882169Z # price\_importer.import
2025-08-19T12:40:54.3882381Z 
2025-08-19T12:40:54.3882491Z <a id="fees_h10"></a>
2025-08-19T12:40:54.3882681Z 
2025-08-19T12:40:54.3882777Z # fees\_h10
2025-08-19T12:40:54.3882934Z 
2025-08-19T12:40:54.3883053Z <a id="fees_h10.worker"></a>
2025-08-19T12:40:54.3883268Z 
2025-08-19T12:40:54.3883529Z # fees\_h10.worker
2025-08-19T12:40:54.3883706Z 
2025-08-19T12:40:54.3884029Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T12:40:54.3884348Z 
2025-08-19T12:40:54.3884465Z #### list\_active\_asins
2025-08-19T12:40:54.3884661Z 
2025-08-19T12:40:54.3884756Z ```python
2025-08-19T12:40:54.3885026Z def list_active_asins() -> list[str]
2025-08-19T12:40:54.3885369Z ```
2025-08-19T12:40:54.3885512Z 
2025-08-19T12:40:54.3885695Z Return known ASINs or an empty list if unavailable.
2025-08-19T12:40:54.3886026Z 
2025-08-19T12:40:54.3886173Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T12:40:54.3886439Z 
2025-08-19T12:40:54.3886563Z # fees\_h10.tests.test\_smoke
2025-08-19T12:40:54.3886799Z 
2025-08-19T12:40:54.3886913Z <a id="fees_h10.tests"></a>
2025-08-19T12:40:54.3887128Z 
2025-08-19T12:40:54.3887231Z # fees\_h10.tests
2025-08-19T12:40:54.3887401Z 
2025-08-19T12:40:54.3887515Z <a id="fees_h10.client"></a>
2025-08-19T12:40:54.3887727Z 
2025-08-19T12:40:54.3887837Z # fees\_h10.client
2025-08-19T12:40:54.3887999Z 
2025-08-19T12:40:54.3888129Z <a id="fees_h10.repository"></a>
2025-08-19T12:40:54.3888393Z 
2025-08-19T12:40:54.3888507Z # fees\_h10.repository
2025-08-19T12:40:54.3888694Z 
2025-08-19T12:40:54.3888808Z <a id="emailer"></a>
2025-08-19T12:40:54.3889000Z 
2025-08-19T12:40:54.3889096Z # emailer
2025-08-19T12:40:54.3889235Z 
2025-08-19T12:40:54.3889406Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T12:40:54.3889699Z 
2025-08-19T12:40:54.3889839Z # emailer.tests.test\_import\_emailer
2025-08-19T12:40:54.3890098Z 
2025-08-19T12:40:54.3890252Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T12:40:54.3890510Z 
2025-08-19T12:40:54.3890637Z # emailer.tests.test\_smoke
2025-08-19T12:40:54.3890875Z 
2025-08-19T12:40:54.3891004Z <a id="emailer.tests"></a>
2025-08-19T12:40:54.3891222Z 
2025-08-19T12:40:54.3891341Z # emailer.tests
2025-08-19T12:40:54.3891523Z 
2025-08-19T12:40:54.3891659Z <a id="emailer.generate_body"></a>
2025-08-19T12:40:54.3891918Z 
2025-08-19T12:40:54.3892044Z # emailer.generate\_body
2025-08-19T12:40:54.3892234Z 
2025-08-19T12:40:54.3892334Z <a id="llm_server"></a>
2025-08-19T12:40:54.3892530Z 
2025-08-19T12:40:54.3892620Z # llm\_server
2025-08-19T12:40:54.3892761Z 
2025-08-19T12:40:54.3892872Z <a id="llm_server.app"></a>
2025-08-19T12:40:54.3893082Z 
2025-08-19T12:40:54.3893178Z # llm\_server.app
2025-08-19T12:40:54.3893490Z 
