2025-08-17T21:10:58.6774212Z ##[group]Run pydoc-markdown
2025-08-17T21:10:58.6774522Z [36;1mpydoc-markdown[0m
2025-08-17T21:10:58.6814743Z shell: /usr/bin/bash -e {0}
2025-08-17T21:10:58.6814973Z env:
2025-08-17T21:10:58.6815217Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:10:58.6815606Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T21:10:58.6816003Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:10:58.6816341Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:10:58.6816689Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T21:10:58.6817034Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T21:10:58.6817313Z ##[endgroup]
2025-08-17T21:10:59.0354826Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T21:10:59.0355640Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T21:10:59.0356108Z In "pydoc-markdown.yml"
2025-08-17T21:10:59.0356529Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T21:10:59.0357227Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T21:10:59.0358222Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T21:10:59.0358746Z 
2025-08-17T21:10:59.2853039Z <a id="__init__"></a>
2025-08-17T21:10:59.2853403Z 
2025-08-17T21:10:59.2853560Z # \_\_init\_\_
2025-08-17T21:10:59.2853778Z 
2025-08-17T21:10:59.2853931Z <a id="api"></a>
2025-08-17T21:10:59.2854167Z 
2025-08-17T21:10:59.2854301Z # api
2025-08-17T21:10:59.2854496Z 
2025-08-17T21:10:59.2854675Z <a id="api.tests.test_llm"></a>
2025-08-17T21:10:59.2854993Z 
2025-08-17T21:10:59.2855179Z # api.tests.test\_llm
2025-08-17T21:10:59.2855447Z 
2025-08-17T21:10:59.2855640Z <a id="api.tests.test_imports"></a>
2025-08-17T21:10:59.2855996Z 
2025-08-17T21:10:59.2856171Z # api.tests.test\_imports
2025-08-17T21:10:59.2856447Z 
2025-08-17T21:10:59.2856654Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T21:10:59.2857021Z 
2025-08-17T21:10:59.2857200Z # api.tests.test\_entrypoint
2025-08-17T21:10:59.2857800Z 
2025-08-17T21:10:59.2858002Z <a id="api.tests.test_health"></a>
2025-08-17T21:10:59.2858332Z 
2025-08-17T21:10:59.2858502Z # api.tests.test\_health
2025-08-17T21:10:59.2858787Z 
2025-08-17T21:10:59.2858967Z <a id="api.migrations.env"></a>
2025-08-17T21:10:59.2859287Z 
2025-08-17T21:10:59.2859453Z # api.migrations.env
2025-08-17T21:10:59.2859710Z 
2025-08-17T21:10:59.2859956Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T21:10:59.2860494Z 
2025-08-17T21:10:59.2860720Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T21:10:59.2861119Z 
2025-08-17T21:10:59.2861347Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T21:10:59.2861752Z 
2025-08-17T21:10:59.2861953Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T21:10:59.2862323Z 
2025-08-17T21:10:59.2862640Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T21:10:59.2863046Z 
2025-08-17T21:10:59.2863274Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T21:10:59.2863928Z 
2025-08-17T21:10:59.2864133Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T21:10:59.2864443Z 
2025-08-17T21:10:59.2864565Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T21:10:59.2864785Z 
2025-08-17T21:10:59.2864917Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T21:10:59.2865140Z 
2025-08-17T21:10:59.2865261Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T21:10:59.2865468Z 
2025-08-17T21:10:59.2865605Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T21:10:59.2865844Z 
2025-08-17T21:10:59.2865966Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T21:10:59.2866177Z 
2025-08-17T21:10:59.2866308Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T21:10:59.2866538Z 
2025-08-17T21:10:59.2866658Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T21:10:59.2866868Z 
2025-08-17T21:10:59.2867010Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T21:10:59.2867667Z 
2025-08-17T21:10:59.2867791Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T21:10:59.2868005Z 
2025-08-17T21:10:59.2868155Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-17T21:10:59.2868400Z 
2025-08-17T21:10:59.2868534Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-17T21:10:59.2868754Z 
2025-08-17T21:10:59.2868887Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T21:10:59.2869110Z 
2025-08-17T21:10:59.2869233Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T21:10:59.2869441Z 
2025-08-17T21:10:59.2869558Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T21:10:59.2869772Z 
2025-08-17T21:10:59.2869874Z # api.migrations.versions.0001\_baseline
2025-08-17T21:10:59.2870061Z 
2025-08-17T21:10:59.2870165Z <a id="api.migrations.versions"></a>
2025-08-17T21:10:59.2870345Z 
2025-08-17T21:10:59.2870433Z # api.migrations.versions
2025-08-17T21:10:59.2870583Z 
2025-08-17T21:10:59.2870682Z <a id="api.migrations"></a>
2025-08-17T21:10:59.2870838Z 
2025-08-17T21:10:59.2870913Z # api.migrations
2025-08-17T21:10:59.2871042Z 
2025-08-17T21:10:59.2871117Z <a id="api.db"></a>
2025-08-17T21:10:59.2871236Z 
2025-08-17T21:10:59.2871311Z # api.db
2025-08-17T21:10:59.2871410Z 
2025-08-17T21:10:59.2871499Z <a id="api.routes.stats"></a>
2025-08-17T21:10:59.2871653Z 
2025-08-17T21:10:59.2871736Z # api.routes.stats
2025-08-17T21:10:59.2871857Z 
2025-08-17T21:10:59.2871954Z <a id="api.routes.stats.kpi"></a>
2025-08-17T21:10:59.2872135Z 
2025-08-17T21:10:59.2872204Z #### kpi
2025-08-17T21:10:59.2872301Z 
2025-08-17T21:10:59.2872376Z ```python
2025-08-17T21:10:59.2872571Z @router.get("/stats/kpi")
2025-08-17T21:10:59.2872833Z def kpi() -> List[Dict[str, int]]
2025-08-17T21:10:59.2873037Z ```
2025-08-17T21:10:59.2873124Z 
2025-08-17T21:10:59.2873213Z Return KPI metrics (mock).
2025-08-17T21:10:59.2873355Z 
2025-08-17T21:10:59.2873459Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T21:10:59.2873645Z 
2025-08-17T21:10:59.2873726Z #### roi\_by\_vendor
2025-08-17T21:10:59.2873843Z 
2025-08-17T21:10:59.2873908Z ```python
2025-08-17T21:10:59.2874085Z @router.get("/stats/roi_by_vendor")
2025-08-17T21:10:59.2874340Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T21:10:59.2874564Z ```
2025-08-17T21:10:59.2874645Z 
2025-08-17T21:10:59.2874731Z Return ROI percent by vendor.
2025-08-17T21:10:59.2874867Z 
2025-08-17T21:10:59.2874959Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T21:10:59.2875131Z 
2025-08-17T21:10:59.2875196Z #### roi\_trend
2025-08-17T21:10:59.2875300Z 
2025-08-17T21:10:59.2875364Z ```python
2025-08-17T21:10:59.2875533Z @router.get("/stats/roi_trend")
2025-08-17T21:10:59.2875772Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T21:10:59.2876002Z ```
2025-08-17T21:10:59.2876083Z 
2025-08-17T21:10:59.2876166Z Return 30-day ROI trend.
2025-08-17T21:10:59.2876311Z 
2025-08-17T21:10:59.2876395Z <a id="api.routes.roi"></a>
2025-08-17T21:10:59.2876578Z 
2025-08-17T21:10:59.2876646Z # api.routes.roi
2025-08-17T21:10:59.2876890Z 
2025-08-17T21:10:59.2876984Z <a id="api.routes.health"></a>
2025-08-17T21:10:59.2877128Z 
2025-08-17T21:10:59.2877197Z # api.routes.health
2025-08-17T21:10:59.2877311Z 
2025-08-17T21:10:59.2877588Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T21:10:59.2877768Z 
2025-08-17T21:10:59.2877836Z #### MAX\_SKEW
2025-08-17T21:10:59.2877948Z 
2025-08-17T21:10:59.2878011Z seconds
2025-08-17T21:10:59.2878098Z 
2025-08-17T21:10:59.2878199Z <a id="api.routes.health.health"></a>
2025-08-17T21:10:59.2878365Z 
2025-08-17T21:10:59.2878426Z #### health
2025-08-17T21:10:59.2878524Z 
2025-08-17T21:10:59.2878587Z ```python
2025-08-17T21:10:59.2878786Z @router.get("/health", include_in_schema=False)
2025-08-17T21:10:59.2879169Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T21:10:59.2879503Z ```
2025-08-17T21:10:59.2879595Z 
2025-08-17T21:10:59.2879711Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T21:10:59.2879907Z 
2025-08-17T21:10:59.2880148Z <a id="api.routes.repository"></a>
2025-08-17T21:10:59.2880321Z 
2025-08-17T21:10:59.2880400Z # api.routes.repository
2025-08-17T21:10:59.2880529Z 
2025-08-17T21:10:59.2880604Z <a id="api.routes"></a>
2025-08-17T21:10:59.2880722Z 
2025-08-17T21:10:59.2880788Z # api.routes
2025-08-17T21:10:59.2880896Z 
2025-08-17T21:10:59.2880977Z <a id="api.models.fee"></a>
2025-08-17T21:10:59.2881110Z 
2025-08-17T21:10:59.2881181Z # api.models.fee
2025-08-17T21:10:59.2881285Z 
2025-08-17T21:10:59.2881357Z <a id="api.models"></a>
2025-08-17T21:10:59.2881476Z 
2025-08-17T21:10:59.2881540Z # api.models
2025-08-17T21:10:59.2881633Z 
2025-08-17T21:10:59.2881712Z <a id="api.roi_repository"></a>
2025-08-17T21:10:59.2881856Z 
2025-08-17T21:10:59.2881928Z # api.roi\_repository
2025-08-17T21:10:59.2882040Z 
2025-08-17T21:10:59.2882114Z <a id="api.main"></a>
2025-08-17T21:10:59.2882223Z 
2025-08-17T21:10:59.2882293Z # api.main
2025-08-17T21:10:59.2882383Z 
2025-08-17T21:10:59.2882466Z <a id="api.main.ready"></a>
2025-08-17T21:10:59.2882607Z 
2025-08-17T21:10:59.2882670Z #### ready
2025-08-17T21:10:59.2882763Z 
2025-08-17T21:10:59.2882826Z ```python
2025-08-17T21:10:59.2883081Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T21:10:59.2883516Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T21:10:59.2883872Z                                                                       str]
2025-08-17T21:10:59.2884094Z ```
2025-08-17T21:10:59.2884176Z 
2025-08-17T21:10:59.2884278Z Return 200 only when migrations are at head.
2025-08-17T21:10:59.2884451Z 
2025-08-17T21:10:59.2884525Z <a id="api.config"></a>
2025-08-17T21:10:59.2884647Z 
2025-08-17T21:10:59.2884711Z # api.config
2025-08-17T21:10:59.2884805Z 
2025-08-17T21:10:59.2884877Z <a id="etl"></a>
2025-08-17T21:10:59.2884979Z 
2025-08-17T21:10:59.2885038Z # etl
2025-08-17T21:10:59.2885124Z 
2025-08-17T21:10:59.2885212Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T21:10:59.2885359Z 
2025-08-17T21:10:59.2885443Z # etl.fba\_fee\_ingestor
2025-08-17T21:10:59.2885569Z 
2025-08-17T21:10:59.2885649Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T21:10:59.2885792Z 
2025-08-17T21:10:59.2885866Z # etl.sp\_fees\_ingestor
2025-08-17T21:10:59.2885994Z 
2025-08-17T21:10:59.2886072Z <a id="etl.keepa_ingestor"></a>
2025-08-17T21:10:59.2886209Z 
2025-08-17T21:10:59.2886285Z # etl.keepa\_ingestor
2025-08-17T21:10:59.2886397Z 
2025-08-17T21:10:59.2886463Z <a id="etl.db"></a>
2025-08-17T21:10:59.2886574Z 
2025-08-17T21:10:59.2886638Z # etl.db
2025-08-17T21:10:59.2886729Z 
2025-08-17T21:10:59.2886817Z <a id="etl.dialects.schemas"></a>
2025-08-17T21:10:59.2886970Z 
2025-08-17T21:10:59.2887045Z # etl.dialects.schemas
2025-08-17T21:10:59.2887163Z 
2025-08-17T21:10:59.2887277Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T21:10:59.2887683Z 
2025-08-17T21:10:59.2887781Z # etl.dialects.amazon\_reimbursements
2025-08-17T21:10:59.2887950Z 
2025-08-17T21:10:59.2888041Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T21:10:59.2888337Z 
2025-08-17T21:10:59.2888419Z # etl.dialects.amazon\_returns
2025-08-17T21:10:59.2888563Z 
2025-08-17T21:10:59.2888639Z <a id="etl.dialects"></a>
2025-08-17T21:10:59.2888764Z 
2025-08-17T21:10:59.2888833Z # etl.dialects
2025-08-17T21:10:59.2888931Z 
2025-08-17T21:10:59.2888997Z <a id="ingest"></a>
2025-08-17T21:10:59.2889103Z 
2025-08-17T21:10:59.2889170Z # ingest
2025-08-17T21:10:59.2889256Z 
2025-08-17T21:10:59.2889338Z <a id="ingest.maintenance"></a>
2025-08-17T21:10:59.2889484Z 
2025-08-17T21:10:59.2889556Z # ingest.maintenance
2025-08-17T21:10:59.2889670Z 
2025-08-17T21:10:59.2889756Z <a id="ingest.copy_loader"></a>
2025-08-17T21:10:59.2889890Z 
2025-08-17T21:10:59.2889963Z # ingest.copy\_loader
2025-08-17T21:10:59.2890077Z 
2025-08-17T21:10:59.2890184Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T21:10:59.2890363Z 
2025-08-17T21:10:59.2890437Z #### copy\_df\_via\_temp
2025-08-17T21:10:59.2890568Z 
2025-08-17T21:10:59.2890633Z ```python
2025-08-17T21:10:59.2890813Z def copy_df_via_temp(engine: Engine,
2025-08-17T21:10:59.2891173Z                      df: pd.DataFrame,
2025-08-17T21:10:59.2891417Z                      target_table: str,
2025-08-17T21:10:59.2891634Z                      *,
2025-08-17T21:10:59.2891849Z                      target_schema: Optional[str] = None,
2025-08-17T21:10:59.2892112Z                      columns: Sequence[str],
2025-08-17T21:10:59.2892395Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T21:10:59.2892673Z                      analyze_after: bool = False,
2025-08-17T21:10:59.2892937Z                      connection: Any | None = None) -> int
2025-08-17T21:10:59.2893176Z ```
2025-08-17T21:10:59.2893265Z 
2025-08-17T21:10:59.2893420Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T21:10:59.2893650Z 
2025-08-17T21:10:59.2893744Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T21:10:59.2893904Z 
2025-08-17T21:10:59.2893988Z # ingest.tests.test\_smoke
2025-08-17T21:10:59.2894123Z 
2025-08-17T21:10:59.2894207Z <a id="ingest.tests"></a>
2025-08-17T21:10:59.2894334Z 
2025-08-17T21:10:59.2894404Z # ingest.tests
2025-08-17T21:10:59.2894508Z 
2025-08-17T21:10:59.2894593Z <a id="ingest.upload_router"></a>
2025-08-17T21:10:59.2894738Z 
2025-08-17T21:10:59.2894822Z # ingest.upload\_router
2025-08-17T21:10:59.2894940Z 
2025-08-17T21:10:59.2895020Z <a id="ingest.email_watcher"></a>
2025-08-17T21:10:59.2895170Z 
2025-08-17T21:10:59.2895243Z # ingest.email\_watcher
2025-08-17T21:10:59.2895357Z 
2025-08-17T21:10:59.2895445Z <a id="ingest.email_watcher.main"></a>
2025-08-17T21:10:59.2895612Z 
2025-08-17T21:10:59.2895673Z #### main
2025-08-17T21:10:59.2895759Z 
2025-08-17T21:10:59.2895831Z ```python
2025-08-17T21:10:59.2896006Z def main() -> dict[str, str]
2025-08-17T21:10:59.2896202Z ```
2025-08-17T21:10:59.2896289Z 
2025-08-17T21:10:59.2896431Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T21:10:59.2896660Z 
2025-08-17T21:10:59.2896790Z Returns {"status": "success"} when processing completes.
2025-08-17T21:10:59.2897004Z 
2025-08-17T21:10:59.2897089Z <a id="ingest.tasks"></a>
2025-08-17T21:10:59.2897216Z 
2025-08-17T21:10:59.2897284Z # ingest.tasks
2025-08-17T21:10:59.2897577Z 
2025-08-17T21:10:59.2897707Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T21:10:59.2897888Z 
2025-08-17T21:10:59.2897965Z #### task\_import\_file
2025-08-17T21:10:59.2898090Z 
2025-08-17T21:10:59.2898154Z ```python
2025-08-17T21:10:59.2898370Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T21:10:59.2898654Z def task_import_file(self,
2025-08-17T21:10:59.2898860Z                      uri: str,
2025-08-17T21:10:59.2899082Z                      report_type: Optional[str] = None,
2025-08-17T21:10:59.2899354Z                      force: bool = False) -> Dict[str, Any]
2025-08-17T21:10:59.2899590Z ```
2025-08-17T21:10:59.2899679Z 
2025-08-17T21:10:59.2899810Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T21:10:59.2900016Z 
2025-08-17T21:10:59.2900100Z <a id="ingest.celery_app"></a>
2025-08-17T21:10:59.2900500Z 
2025-08-17T21:10:59.2900574Z # ingest.celery\_app
2025-08-17T21:10:59.2900693Z 
2025-08-17T21:10:59.2900783Z <a id="ingest.ingest_router"></a>
2025-08-17T21:10:59.2900933Z 
2025-08-17T21:10:59.2901008Z # ingest.ingest\_router
2025-08-17T21:10:59.2901137Z 
2025-08-17T21:10:59.2901211Z <a id="logistics_etl"></a>
2025-08-17T21:10:59.2901337Z 
2025-08-17T21:10:59.2901405Z # logistics\_etl
2025-08-17T21:10:59.2901515Z 
2025-08-17T21:10:59.2901593Z Daily logistics ETL job.
2025-08-17T21:10:59.2901719Z 
2025-08-17T21:10:59.2901809Z <a id="logistics_etl.__main__"></a>
2025-08-17T21:10:59.2901965Z 
2025-08-17T21:10:59.2902044Z # logistics\_etl.\_\_main\_\_
2025-08-17T21:10:59.2902182Z 
2025-08-17T21:10:59.2902268Z <a id="logistics_etl.dsn"></a>
2025-08-17T21:10:59.2902413Z 
2025-08-17T21:10:59.2902483Z # logistics\_etl.dsn
2025-08-17T21:10:59.2902601Z 
2025-08-17T21:10:59.2902716Z Local DSN builder to avoid cross-service dependency.
2025-08-17T21:10:59.2902918Z 
2025-08-17T21:10:59.2903148Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T21:10:59.2903317Z 
2025-08-17T21:10:59.2903383Z #### build\_dsn
2025-08-17T21:10:59.2903485Z 
2025-08-17T21:10:59.2903552Z ```python
2025-08-17T21:10:59.2903726Z def build_dsn(sync: bool = True) -> str
2025-08-17T21:10:59.2903949Z ```
2025-08-17T21:10:59.2904032Z 
2025-08-17T21:10:59.2904175Z Return a Postgres DSN assembled from environment variables.
2025-08-17T21:10:59.2904400Z 
2025-08-17T21:10:59.2904548Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T21:10:59.2904949Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T21:10:59.2905292Z error when any required variable is missing.
2025-08-17T21:10:59.2905470Z 
2025-08-17T21:10:59.2905571Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T21:10:59.2905742Z 
2025-08-17T21:10:59.2905826Z # logistics\_etl.tests.conftest
2025-08-17T21:10:59.2905977Z 
2025-08-17T21:10:59.2906082Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T21:10:59.2906272Z 
2025-08-17T21:10:59.2906370Z # logistics\_etl.tests.test\_repository
2025-08-17T21:10:59.2906534Z 
2025-08-17T21:10:59.2906627Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T21:10:59.2906800Z 
2025-08-17T21:10:59.2906886Z # logistics\_etl.tests.test\_cron
2025-08-17T21:10:59.2907047Z 
2025-08-17T21:10:59.2907144Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T21:10:59.2907319Z 
2025-08-17T21:10:59.2907589Z # logistics\_etl.tests.test\_imports
2025-08-17T21:10:59.2907750Z 
2025-08-17T21:10:59.2907846Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T21:10:59.2908016Z 
2025-08-17T21:10:59.2908110Z # logistics\_etl.tests.test\_smoke
2025-08-17T21:10:59.2908262Z 
2025-08-17T21:10:59.2908357Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T21:10:59.2908532Z 
2025-08-17T21:10:59.2908616Z # logistics\_etl.tests.test\_client
2025-08-17T21:10:59.2908766Z 
2025-08-17T21:10:59.2908852Z <a id="logistics_etl.tests"></a>
2025-08-17T21:10:59.2908996Z 
2025-08-17T21:10:59.2909077Z # logistics\_etl.tests
2025-08-17T21:10:59.2909193Z 
2025-08-17T21:10:59.2909280Z <a id="logistics_etl.flow"></a>
2025-08-17T21:10:59.2909417Z 
2025-08-17T21:10:59.2909490Z # logistics\_etl.flow
2025-08-17T21:10:59.2909615Z 
2025-08-17T21:10:59.2909697Z <a id="logistics_etl.client"></a>
2025-08-17T21:10:59.2909844Z 
2025-08-17T21:10:59.2909917Z # logistics\_etl.client
2025-08-17T21:10:59.2910040Z 
2025-08-17T21:10:59.2910116Z <a id="logistics_etl.cron"></a>
2025-08-17T21:10:59.2910251Z 
2025-08-17T21:10:59.2910327Z # logistics\_etl.cron
2025-08-17T21:10:59.2910439Z 
2025-08-17T21:10:59.2910517Z <a id="logistics_etl.db"></a>
2025-08-17T21:10:59.2910655Z 
2025-08-17T21:10:59.2910723Z # logistics\_etl.db
2025-08-17T21:10:59.2910829Z 
2025-08-17T21:10:59.2910918Z <a id="logistics_etl.repository"></a>
2025-08-17T21:10:59.2911082Z 
2025-08-17T21:10:59.2911163Z # logistics\_etl.repository
2025-08-17T21:10:59.2911296Z 
2025-08-17T21:10:59.2911373Z <a id="alert_bot"></a>
2025-08-17T21:10:59.2911486Z 
2025-08-17T21:10:59.2911675Z # alert\_bot
2025-08-17T21:10:59.2911779Z 
2025-08-17T21:10:59.2911864Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T21:10:59.2912024Z 
2025-08-17T21:10:59.2912103Z # alert\_bot.tests.test\_smoke
2025-08-17T21:10:59.2912250Z 
2025-08-17T21:10:59.2912328Z <a id="alert_bot.tests"></a>
2025-08-17T21:10:59.2912460Z 
2025-08-17T21:10:59.2912533Z # alert\_bot.tests
2025-08-17T21:10:59.2912637Z 
2025-08-17T21:10:59.2912716Z <a id="alert_bot.alert_bot"></a>
2025-08-17T21:10:59.2912858Z 
2025-08-17T21:10:59.2912937Z # alert\_bot.alert\_bot
2025-08-17T21:10:59.2913053Z 
2025-08-17T21:10:59.2913131Z <a id="alert_bot.rules"></a>
2025-08-17T21:10:59.2913270Z 
2025-08-17T21:10:59.2913337Z # alert\_bot.rules
2025-08-17T21:10:59.2913439Z 
2025-08-17T21:10:59.2913511Z <a id="common"></a>
2025-08-17T21:10:59.2913617Z 
2025-08-17T21:10:59.2913678Z # common
2025-08-17T21:10:59.2913766Z 
2025-08-17T21:10:59.2913846Z <a id="common.dsn"></a>
2025-08-17T21:10:59.2913962Z 
2025-08-17T21:10:59.2914025Z # common.dsn
2025-08-17T21:10:59.2914238Z 
2025-08-17T21:10:59.2914321Z <a id="common.dsn.build_dsn"></a>
2025-08-17T21:10:59.2914465Z 
2025-08-17T21:10:59.2914530Z #### build\_dsn
2025-08-17T21:10:59.2914638Z 
2025-08-17T21:10:59.2914701Z ```python
2025-08-17T21:10:59.2914878Z def build_dsn(sync: bool = True) -> str
2025-08-17T21:10:59.2915095Z ```
2025-08-17T21:10:59.2915177Z 
2025-08-17T21:10:59.2915301Z Return a Postgres DSN, validating required variables.
2025-08-17T21:10:59.2915501Z 
2025-08-17T21:10:59.2915683Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T21:10:59.2916112Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T21:10:59.2916521Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T21:10:59.2916829Z missing.
2025-08-17T21:10:59.2916920Z 
2025-08-17T21:10:59.2917008Z <a id="common.models_vendor"></a>
2025-08-17T21:10:59.2917157Z 
2025-08-17T21:10:59.2917231Z # common.models\_vendor
2025-08-17T21:10:59.2917526Z 
2025-08-17T21:10:59.2917668Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T21:10:59.2917839Z 
2025-08-17T21:10:59.2917909Z ## Vendor Objects
2025-08-17T21:10:59.2918021Z 
2025-08-17T21:10:59.2918083Z ```python
2025-08-17T21:10:59.2918265Z class Vendor(Base)
2025-08-17T21:10:59.2918428Z ```
2025-08-17T21:10:59.2918511Z 
2025-08-17T21:10:59.2918599Z Vendor of inventory items.
2025-08-17T21:10:59.2918730Z 
2025-08-17T21:10:59.2918833Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T21:10:59.2919019Z 
2025-08-17T21:10:59.2919093Z ## VendorPrice Objects
2025-08-17T21:10:59.2919210Z 
2025-08-17T21:10:59.2919278Z ```python
2025-08-17T21:10:59.2919437Z class VendorPrice(Base)
2025-08-17T21:10:59.2919616Z ```
2025-08-17T21:10:59.2919702Z 
2025-08-17T21:10:59.2919804Z Association table linking vendors to pricing.
2025-08-17T21:10:59.2919981Z 
2025-08-17T21:10:59.2920067Z <a id="common.db_url"></a>
2025-08-17T21:10:59.2920193Z 
2025-08-17T21:10:59.2920259Z # common.db\_url
2025-08-17T21:10:59.2920379Z 
2025-08-17T21:10:59.2920464Z <a id="common.db_url.build_url"></a>
2025-08-17T21:10:59.2920616Z 
2025-08-17T21:10:59.2920686Z #### build\_url
2025-08-17T21:10:59.2920785Z 
2025-08-17T21:10:59.2920846Z ```python
2025-08-17T21:10:59.2921021Z def build_url(async_: bool = True) -> str
2025-08-17T21:10:59.2921243Z ```
2025-08-17T21:10:59.2921329Z 
2025-08-17T21:10:59.2946294Z Return Postgres DSN from env or PG_* parts.
2025-08-17T21:10:59.2946646Z 
2025-08-17T21:10:59.2946788Z <a id="common.keepa"></a>
2025-08-17T21:10:59.2947028Z 
2025-08-17T21:10:59.2947143Z # common.keepa
2025-08-17T21:10:59.2947316Z 
2025-08-17T21:10:59.2947616Z <a id="common.llm"></a>
2025-08-17T21:10:59.2947856Z 
2025-08-17T21:10:59.2947964Z # common.llm
2025-08-17T21:10:59.2948131Z 
2025-08-17T21:10:59.2948261Z <a id="common.settings"></a>
2025-08-17T21:10:59.2948530Z 
2025-08-17T21:10:59.2948643Z # common.settings
2025-08-17T21:10:59.2948835Z 
2025-08-17T21:10:59.2948952Z <a id="common.db"></a>
2025-08-17T21:10:59.2949155Z 
2025-08-17T21:10:59.2949457Z # common.db
2025-08-17T21:10:59.2949646Z 
2025-08-17T21:10:59.2949805Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T21:10:59.2950131Z 
2025-08-17T21:10:59.2950261Z #### build\_sqlalchemy\_url
2025-08-17T21:10:59.2950481Z 
2025-08-17T21:10:59.2950590Z ```python
2025-08-17T21:10:59.2950881Z def build_sqlalchemy_url() -> str
2025-08-17T21:10:59.2951308Z ```
2025-08-17T21:10:59.2951479Z 
2025-08-17T21:10:59.2951642Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T21:10:59.2951970Z 
2025-08-17T21:10:59.2952125Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T21:10:59.2952395Z 
2025-08-17T21:10:59.2952508Z #### build\_asyncpg\_dsn
2025-08-17T21:10:59.2952707Z 
2025-08-17T21:10:59.2952801Z ```python
2025-08-17T21:10:59.2953193Z def build_asyncpg_dsn() -> str
2025-08-17T21:10:59.2953404Z ```
2025-08-17T21:10:59.2953489Z 
2025-08-17T21:10:59.2953628Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T21:10:59.2953842Z 
2025-08-17T21:10:59.2954063Z <a id="common.db.refresh_mvs"></a>
2025-08-17T21:10:59.2954222Z 
2025-08-17T21:10:59.2954295Z #### refresh\_mvs
2025-08-17T21:10:59.2954402Z 
2025-08-17T21:10:59.2954466Z ```python
2025-08-17T21:10:59.2954865Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T21:10:59.2955485Z ```
2025-08-17T21:10:59.2955574Z 
2025-08-17T21:10:59.2955716Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T21:10:59.2955935Z 
2025-08-17T21:10:59.2956022Z <a id="common.config"></a>
2025-08-17T21:10:59.2956313Z 
2025-08-17T21:10:59.2956417Z # common.config
2025-08-17T21:10:59.2956586Z 
2025-08-17T21:10:59.2956706Z <a id="common.base"></a>
2025-08-17T21:10:59.2956893Z 
2025-08-17T21:10:59.2956965Z # common.base
2025-08-17T21:10:59.2958166Z 
2025-08-17T21:10:59.2958251Z <a id="common.base.Base"></a>
2025-08-17T21:10:59.2958392Z 
2025-08-17T21:10:59.2959288Z ## Base Objects
2025-08-17T21:10:59.2959580Z 
2025-08-17T21:10:59.2959646Z ```python
2025-08-17T21:10:59.2960467Z class Base(DeclarativeBase)
2025-08-17T21:10:59.2960784Z ```
2025-08-17T21:10:59.2960919Z 
2025-08-17T21:10:59.2961100Z Base class for SQLAlchemy models.
2025-08-17T21:10:59.2961253Z 
2025-08-17T21:10:59.2961327Z <a id="repricer"></a>
2025-08-17T21:10:59.2961472Z 
2025-08-17T21:10:59.2961539Z # repricer
2025-08-17T21:10:59.2961630Z 
2025-08-17T21:10:59.2961726Z <a id="repricer.app.schemas"></a>
2025-08-17T21:10:59.2961878Z 
2025-08-17T21:10:59.2961955Z # repricer.app.schemas
2025-08-17T21:10:59.2962076Z 
2025-08-17T21:10:59.2962168Z <a id="repricer.app.deps"></a>
2025-08-17T21:10:59.2962329Z 
2025-08-17T21:10:59.2962423Z # repricer.app.deps
2025-08-17T21:10:59.2962583Z 
2025-08-17T21:10:59.2962759Z Placeholder module for Keepa / SP-API clients.
2025-08-17T21:10:59.2963394Z 
2025-08-17T21:10:59.2963482Z <a id="repricer.app.logic"></a>
2025-08-17T21:10:59.2963625Z 
2025-08-17T21:10:59.2963699Z # repricer.app.logic
2025-08-17T21:10:59.2963814Z 
2025-08-17T21:10:59.2963919Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T21:10:59.2964101Z 
2025-08-17T21:10:59.2964190Z #### MIN\_MARGIN
2025-08-17T21:10:59.2964337Z 
2025-08-17T21:10:59.2964402Z 15 % ROI
2025-08-17T21:10:59.2964529Z 
2025-08-17T21:10:59.2964652Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T21:10:59.2964889Z 
2025-08-17T21:10:59.2964974Z #### compute\_price
2025-08-17T21:10:59.2965099Z 
2025-08-17T21:10:59.2965186Z ```python
2025-08-17T21:10:59.2965497Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T21:10:59.2966337Z ```
2025-08-17T21:10:59.2966426Z 
2025-08-17T21:10:59.2966535Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T21:10:59.2966815Z Replace with real competitive logic later.
2025-08-17T21:10:59.2966987Z 
2025-08-17T21:10:59.2967247Z <a id="repricer.app.main"></a>
2025-08-17T21:10:59.2968001Z 
2025-08-17T21:10:59.2968075Z # repricer.app.main
2025-08-17T21:10:59.2968187Z 
2025-08-17T21:10:59.2968273Z <a id="repricer.app"></a>
2025-08-17T21:10:59.2968402Z 
2025-08-17T21:10:59.2968471Z # repricer.app
2025-08-17T21:10:59.2968957Z 
2025-08-17T21:10:59.2969433Z <a id="repricer.tests.test_imports"></a>
2025-08-17T21:10:59.2969606Z 
2025-08-17T21:10:59.2969691Z # repricer.tests.test\_imports
2025-08-17T21:10:59.2969838Z 
2025-08-17T21:10:59.2969928Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T21:10:59.2970090Z 
2025-08-17T21:10:59.2970181Z # repricer.tests.test\_smoke
2025-08-17T21:10:59.2970319Z 
2025-08-17T21:10:59.2970485Z <a id="repricer.tests"></a>
2025-08-17T21:10:59.2970703Z 
2025-08-17T21:10:59.2970787Z # repricer.tests
2025-08-17T21:10:59.2971679Z 
2025-08-17T21:10:59.2971959Z <a id="db"></a>
2025-08-17T21:10:59.2972068Z 
2025-08-17T21:10:59.2972128Z # db
2025-08-17T21:10:59.2972212Z 
2025-08-17T21:10:59.2972296Z <a id="db.utils.views"></a>
2025-08-17T21:10:59.2972436Z 
2025-08-17T21:10:59.2972503Z # db.utils.views
2025-08-17T21:10:59.2972623Z 
2025-08-17T21:10:59.2972715Z <a id="db.utils.views.replace_view"></a>
2025-08-17T21:10:59.2973820Z 
2025-08-17T21:10:59.2973889Z #### replace\_view
2025-08-17T21:10:59.2974119Z 
2025-08-17T21:10:59.2974182Z ```python
2025-08-17T21:10:59.2974384Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T21:10:59.2974723Z ```
2025-08-17T21:10:59.2974850Z 
2025-08-17T21:10:59.2975613Z Drop and recreate a SQL view atomically.
2025-08-17T21:10:59.2975779Z 
2025-08-17T21:10:59.2975850Z <a id="db.utils"></a>
2025-08-17T21:10:59.2975973Z 
2025-08-17T21:10:59.2976037Z # db.utils
2025-08-17T21:10:59.2976127Z 
2025-08-17T21:10:59.2976202Z <a id="price_importer"></a>
2025-08-17T21:10:59.2976339Z 
2025-08-17T21:10:59.2976410Z # price\_importer
2025-08-17T21:10:59.2976518Z 
2025-08-17T21:10:59.2976633Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T21:10:59.2976814Z 
2025-08-17T21:10:59.2976906Z # price\_importer.services\_common.dsn
2025-08-17T21:10:59.2977073Z 
2025-08-17T21:10:59.2977199Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T21:10:59.2977501Z 
2025-08-17T21:10:59.2977569Z #### build\_dsn
2025-08-17T21:10:59.2977677Z 
2025-08-17T21:10:59.2977751Z ```python
2025-08-17T21:10:59.2977963Z def build_dsn(sync: bool = True) -> str
2025-08-17T21:10:59.2978313Z ```
2025-08-17T21:10:59.2978441Z 
2025-08-17T21:10:59.2978941Z Return safe DSN.
2025-08-17T21:10:59.2979046Z 
2025-08-17T21:10:59.2979372Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T21:10:59.2979580Z 
2025-08-17T21:10:59.2979855Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T21:10:59.2980381Z 
2025-08-17T21:10:59.2980494Z # price\_importer.services\_common.models\_vendor
2025-08-17T21:10:59.2980687Z 
2025-08-17T21:10:59.2980793Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T21:10:59.2980984Z 
2025-08-17T21:10:59.2981081Z # price\_importer.services\_common.db\_url
2025-08-17T21:10:59.2981271Z 
2025-08-17T21:10:59.2981438Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T21:10:59.2981727Z 
2025-08-17T21:10:59.2981808Z #### build\_url
2025-08-17T21:10:59.2981943Z 
2025-08-17T21:10:59.2982030Z ```python
2025-08-17T21:10:59.2982269Z def build_url(async_: bool = True) -> str
2025-08-17T21:10:59.2983121Z ```
2025-08-17T21:10:59.2983210Z 
2025-08-17T21:10:59.2983309Z Return Postgres DSN from env or PG_* parts.
2025-08-17T21:10:59.2983512Z 
2025-08-17T21:10:59.2983692Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T21:10:59.2983992Z 
2025-08-17T21:10:59.2984636Z # price\_importer.services\_common.keepa
2025-08-17T21:10:59.2984810Z 
2025-08-17T21:10:59.2984929Z <a id="price_importer.services_common.llm"></a>
2025-08-17T21:10:59.2985167Z 
2025-08-17T21:10:59.2985300Z # price\_importer.services\_common.llm
2025-08-17T21:10:59.2985514Z 
2025-08-17T21:10:59.2985680Z <a id="price_importer.services_common.settings"></a>
2025-08-17T21:10:59.2986307Z 
2025-08-17T21:10:59.2986411Z # price\_importer.services\_common.settings
2025-08-17T21:10:59.2986593Z 
2025-08-17T21:10:59.2986692Z <a id="price_importer.services_common.db"></a>
2025-08-17T21:10:59.2986910Z 
2025-08-17T21:10:59.2987045Z # price\_importer.services\_common.db
2025-08-17T21:10:59.2988019Z 
2025-08-17T21:10:59.2988184Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T21:10:59.2989079Z 
2025-08-17T21:10:59.2989198Z #### build\_sqlalchemy\_url
2025-08-17T21:10:59.2989410Z 
2025-08-17T21:10:59.2989500Z ```python
2025-08-17T21:10:59.2989674Z def build_sqlalchemy_url() -> str
2025-08-17T21:10:59.2990075Z ```
2025-08-17T21:10:59.2990251Z 
2025-08-17T21:10:59.2990347Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T21:10:59.2990528Z 
2025-08-17T21:10:59.2990673Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T21:10:59.2990897Z 
2025-08-17T21:10:59.2990978Z #### build\_asyncpg\_dsn
2025-08-17T21:10:59.2991106Z 
2025-08-17T21:10:59.2991449Z ```python
2025-08-17T21:10:59.2991715Z def build_asyncpg_dsn() -> str
2025-08-17T21:10:59.2992001Z ```
2025-08-17T21:10:59.2992091Z 
2025-08-17T21:10:59.2992868Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T21:10:59.2993354Z 
2025-08-17T21:10:59.2993704Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T21:10:59.2994051Z 
2025-08-17T21:10:59.2994120Z #### refresh\_mvs
2025-08-17T21:10:59.2994233Z 
2025-08-17T21:10:59.2994303Z ```python
2025-08-17T21:10:59.2994497Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T21:10:59.2994747Z ```
2025-08-17T21:10:59.2994942Z 
2025-08-17T21:10:59.2995158Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T21:10:59.2995506Z 
2025-08-17T21:10:59.2995603Z <a id="price_importer.services_common"></a>
2025-08-17T21:10:59.2995780Z 
2025-08-17T21:10:59.2995872Z # price\_importer.services\_common
2025-08-17T21:10:59.2996024Z 
2025-08-17T21:10:59.2996130Z <a id="price_importer.services_common.base"></a>
2025-08-17T21:10:59.2997121Z 
2025-08-17T21:10:59.2997213Z # price\_importer.services\_common.base
2025-08-17T21:10:59.2997473Z 
2025-08-17T21:10:59.2997564Z <a id="price_importer.normaliser"></a>
2025-08-17T21:10:59.2997730Z 
2025-08-17T21:10:59.2997815Z # price\_importer.normaliser
2025-08-17T21:10:59.2998142Z 
2025-08-17T21:10:59.2998312Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T21:10:59.2998942Z 
2025-08-17T21:10:59.2999034Z # price\_importer.common.models\_vendor
2025-08-17T21:10:59.2999203Z 
2025-08-17T21:10:59.2999295Z <a id="price_importer.common.db_url"></a>
2025-08-17T21:10:59.2999607Z 
2025-08-17T21:10:59.2999738Z # price\_importer.common.db\_url
2025-08-17T21:10:59.2999979Z 
2025-08-17T21:10:59.3000332Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T21:10:59.3000520Z 
2025-08-17T21:10:59.3000590Z #### make\_dsn
2025-08-17T21:10:59.3000687Z 
2025-08-17T21:10:59.3000748Z ```python
2025-08-17T21:10:59.3000928Z def make_dsn(async_: bool = False) -> str
2025-08-17T21:10:59.3001256Z ```
2025-08-17T21:10:59.3001391Z 
2025-08-17T21:10:59.3001667Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T21:10:59.3001874Z 
2025-08-17T21:10:59.3001990Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T21:10:59.3002180Z 
2025-08-17T21:10:59.3002252Z #### build\_url
2025-08-17T21:10:59.3002351Z 
2025-08-17T21:10:59.3002417Z ```python
2025-08-17T21:10:59.3002866Z def build_url(async_: bool = False) -> str
2025-08-17T21:10:59.3003236Z ```
2025-08-17T21:10:59.3003362Z 
2025-08-17T21:10:59.3003522Z Return Postgres DSN built from environment variables.
2025-08-17T21:10:59.3003722Z 
2025-08-17T21:10:59.3003807Z <a id="price_importer.common"></a>
2025-08-17T21:10:59.3003958Z 
2025-08-17T21:10:59.3004039Z # price\_importer.common
2025-08-17T21:10:59.3004168Z 
2025-08-17T21:10:59.3004256Z <a id="price_importer.common.base"></a>
2025-08-17T21:10:59.3004517Z 
2025-08-17T21:10:59.3004644Z # price\_importer.common.base
2025-08-17T21:10:59.3004868Z 
2025-08-17T21:10:59.3004971Z <a id="price_importer.tests.conftest"></a>
2025-08-17T21:10:59.3005155Z 
2025-08-17T21:10:59.3005248Z # price\_importer.tests.conftest
2025-08-17T21:10:59.3005393Z 
2025-08-17T21:10:59.3005499Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T21:10:59.3005680Z 
2025-08-17T21:10:59.3006084Z # price\_importer.tests.test\_reader
2025-08-17T21:10:59.3006351Z 
2025-08-17T21:10:59.3006513Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T21:10:59.3006796Z 
2025-08-17T21:10:59.3006887Z # price\_importer.tests.test\_imports
2025-08-17T21:10:59.3007051Z 
2025-08-17T21:10:59.3007147Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T21:10:59.3007315Z 
2025-08-17T21:10:59.3007526Z # price\_importer.tests.test\_smoke
2025-08-17T21:10:59.3007685Z 
2025-08-17T21:10:59.3007795Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T21:10:59.3007985Z 
2025-08-17T21:10:59.3008078Z # price\_importer.tests.test\_normaliser
2025-08-17T21:10:59.3008243Z 
2025-08-17T21:10:59.3008329Z <a id="price_importer.tests"></a>
2025-08-17T21:10:59.3008483Z 
2025-08-17T21:10:59.3008559Z # price\_importer.tests
2025-08-17T21:10:59.3008836Z 
2025-08-17T21:10:59.3008973Z <a id="price_importer.reader"></a>
2025-08-17T21:10:59.3009215Z 
2025-08-17T21:10:59.3009339Z # price\_importer.reader
2025-08-17T21:10:59.3009642Z 
2025-08-17T21:10:59.3009734Z <a id="price_importer.repository"></a>
2025-08-17T21:10:59.3009896Z 
2025-08-17T21:10:59.3009978Z # price\_importer.repository
2025-08-17T21:10:59.3010122Z 
2025-08-17T21:10:59.3010205Z <a id="price_importer.import"></a>
2025-08-17T21:10:59.3010533Z 
2025-08-17T21:10:59.3010657Z # price\_importer.import
2025-08-17T21:10:59.3010862Z 
2025-08-17T21:10:59.3010947Z <a id="fees_h10"></a>
2025-08-17T21:10:59.3011071Z 
2025-08-17T21:10:59.3011148Z # fees\_h10
2025-08-17T21:10:59.3011242Z 
2025-08-17T21:10:59.3011319Z <a id="fees_h10.worker"></a>
2025-08-17T21:10:59.3011458Z 
2025-08-17T21:10:59.3011524Z # fees\_h10.worker
2025-08-17T21:10:59.3011630Z 
2025-08-17T21:10:59.3011735Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T21:10:59.3011916Z 
2025-08-17T21:10:59.3011991Z #### list\_active\_asins
2025-08-17T21:10:59.3012244Z 
2025-08-17T21:10:59.3012348Z ```python
2025-08-17T21:10:59.3012609Z def list_active_asins() -> list[str]
2025-08-17T21:10:59.3012849Z ```
2025-08-17T21:10:59.3012931Z 
2025-08-17T21:10:59.3013052Z Return known ASINs or an empty list if unavailable.
2025-08-17T21:10:59.3013253Z 
2025-08-17T21:10:59.3013342Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T21:10:59.3013500Z 
2025-08-17T21:10:59.3013587Z # fees\_h10.tests.test\_smoke
2025-08-17T21:10:59.3013726Z 
2025-08-17T21:10:59.3013804Z <a id="fees_h10.tests"></a>
2025-08-17T21:10:59.3014080Z 
2025-08-17T21:10:59.3014187Z # fees\_h10.tests
2025-08-17T21:10:59.3014349Z 
2025-08-17T21:10:59.3014449Z <a id="fees_h10.client"></a>
2025-08-17T21:10:59.3014588Z 
2025-08-17T21:10:59.3014658Z # fees\_h10.client
2025-08-17T21:10:59.3014764Z 
2025-08-17T21:10:59.3014849Z <a id="fees_h10.repository"></a>
2025-08-17T21:10:59.3014994Z 
2025-08-17T21:10:59.3015066Z # fees\_h10.repository
2025-08-17T21:10:59.3015441Z 
2025-08-17T21:10:59.3015558Z <a id="emailer"></a>
2025-08-17T21:10:59.3015733Z 
2025-08-17T21:10:59.3015831Z # emailer
2025-08-17T21:10:59.3015981Z 
2025-08-17T21:10:59.3016097Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T21:10:59.3016278Z 
2025-08-17T21:10:59.3016368Z # emailer.tests.test\_import\_emailer
2025-08-17T21:10:59.3016532Z 
2025-08-17T21:10:59.3016618Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T21:10:59.3016772Z 
2025-08-17T21:10:59.3016856Z # emailer.tests.test\_smoke
2025-08-17T21:10:59.3017181Z 
2025-08-17T21:10:59.3017299Z <a id="emailer.tests"></a>
2025-08-17T21:10:59.3017567Z 
2025-08-17T21:10:59.3017639Z # emailer.tests
2025-08-17T21:10:59.3017747Z 
2025-08-17T21:10:59.3017833Z <a id="emailer.generate_body"></a>
2025-08-17T21:10:59.3017995Z 
2025-08-17T21:10:59.3018073Z # emailer.generate\_body
2025-08-17T21:10:59.3018201Z 
2025-08-17T21:10:59.3018280Z <a id="llm_server"></a>
2025-08-17T21:10:59.3018398Z 
2025-08-17T21:10:59.3018460Z # llm\_server
2025-08-17T21:10:59.3018564Z 
2025-08-17T21:10:59.3018644Z <a id="llm_server.app"></a>
2025-08-17T21:10:59.3018774Z 
2025-08-17T21:10:59.3018839Z # llm\_server.app
2025-08-17T21:10:59.3018958Z 
