2025-08-20T19:38:22.1692409Z ##[group]Run pydoc-markdown
2025-08-20T19:38:22.1692717Z [36;1mpydoc-markdown[0m
2025-08-20T19:38:22.1734856Z shell: /usr/bin/bash -e {0}
2025-08-20T19:38:22.1735077Z env:
2025-08-20T19:38:22.1735317Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:38:22.1735717Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T19:38:22.1736207Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:38:22.1736546Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:38:22.1736875Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T19:38:22.1737213Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T19:38:22.1737498Z ##[endgroup]
2025-08-20T19:38:22.5296412Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T19:38:22.5297111Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T19:38:22.5297421Z In "pydoc-markdown.yml"
2025-08-20T19:38:22.5297720Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T19:38:22.5298138Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T19:38:22.5298629Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T19:38:22.5298966Z 
2025-08-20T19:38:22.8888203Z <a id="__init__"></a>
2025-08-20T19:38:22.8888677Z 
2025-08-20T19:38:22.8888828Z # \_\_init\_\_
2025-08-20T19:38:22.8889107Z 
2025-08-20T19:38:22.8889290Z <a id="api"></a>
2025-08-20T19:38:22.8889547Z 
2025-08-20T19:38:22.8889687Z # api
2025-08-20T19:38:22.8889862Z 
2025-08-20T19:38:22.8889985Z <a id="api.errors"></a>
2025-08-20T19:38:22.8890172Z 
2025-08-20T19:38:22.8890275Z # api.errors
2025-08-20T19:38:22.8890432Z 
2025-08-20T19:38:22.8890555Z <a id="api.sentry_config"></a>
2025-08-20T19:38:22.8890776Z 
2025-08-20T19:38:22.8890885Z # api.sentry\_config
2025-08-20T19:38:22.8891061Z 
2025-08-20T19:38:22.8891207Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T19:38:22.8891475Z 
2025-08-20T19:38:22.8891634Z # api.tests.test\_stats\_contracts
2025-08-20T19:38:22.8891877Z 
2025-08-20T19:38:22.8892009Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T19:38:22.8892266Z 
2025-08-20T19:38:22.8892385Z # api.tests.test\_sentry\_scrub
2025-08-20T19:38:22.8892595Z 
2025-08-20T19:38:22.8892728Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T19:38:22.8892986Z 
2025-08-20T19:38:22.8893106Z # api.tests.test\_roi\_basic\_auth
2025-08-20T19:38:22.8893325Z 
2025-08-20T19:38:22.8893456Z <a id="api.tests.test_errors_json"></a>
2025-08-20T19:38:22.8893700Z 
2025-08-20T19:38:22.8893816Z # api.tests.test\_errors\_json
2025-08-20T19:38:22.8894028Z 
2025-08-20T19:38:22.8894251Z <a id="api.tests.test_llm"></a>
2025-08-20T19:38:22.8894460Z 
2025-08-20T19:38:22.8894567Z # api.tests.test\_llm
2025-08-20T19:38:22.8894746Z 
2025-08-20T19:38:22.8894873Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T19:38:22.8895114Z 
2025-08-20T19:38:22.8895235Z # api.tests.test\_roi\_filters
2025-08-20T19:38:22.8895437Z 
2025-08-20T19:38:22.8895900Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T19:38:22.8896378Z 
2025-08-20T19:38:22.8896481Z # api.tests.test\_sentry\_event
2025-08-20T19:38:22.8896652Z 
2025-08-20T19:38:22.8896800Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T19:38:22.8897055Z 
2025-08-20T19:38:22.8897148Z ## DummyTransport Objects
2025-08-20T19:38:22.8897301Z 
2025-08-20T19:38:22.8897386Z ```python
2025-08-20T19:38:22.8897592Z class DummyTransport()
2025-08-20T19:38:22.8897818Z ```
2025-08-20T19:38:22.8897918Z 
2025-08-20T19:38:22.8898128Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T19:38:22.8898449Z 
2025-08-20T19:38:22.8898535Z #### capture\_envelope
2025-08-20T19:38:22.8898672Z 
2025-08-20T19:38:22.8898749Z ```python
2025-08-20T19:38:22.8898957Z def capture_envelope(envelope)
2025-08-20T19:38:22.8899201Z ```
2025-08-20T19:38:22.8899296Z 
2025-08-20T19:38:22.8899444Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T19:38:22.8899699Z 
2025-08-20T19:38:22.8899803Z <a id="api.tests.test_cors"></a>
2025-08-20T19:38:22.8900204Z 
2025-08-20T19:38:22.8900291Z # api.tests.test\_cors
2025-08-20T19:38:22.8900437Z 
2025-08-20T19:38:22.8900535Z <a id="api.tests.test_imports"></a>
2025-08-20T19:38:22.8900720Z 
2025-08-20T19:38:22.8900815Z # api.tests.test\_imports
2025-08-20T19:38:22.8900964Z 
2025-08-20T19:38:22.8901064Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T19:38:22.8901254Z 
2025-08-20T19:38:22.8901352Z # api.tests.test\_rate\_limit
2025-08-20T19:38:22.8901515Z 
2025-08-20T19:38:22.8901626Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T19:38:22.8901834Z 
2025-08-20T19:38:22.8901908Z #### app
2025-08-20T19:38:22.8902012Z 
2025-08-20T19:38:22.8902088Z noqa: E402
2025-08-20T19:38:22.8902197Z 
2025-08-20T19:38:22.8902296Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T19:38:22.8902482Z 
2025-08-20T19:38:22.8902580Z # api.tests.test\_stats\_sql
2025-08-20T19:38:22.8902740Z 
2025-08-20T19:38:22.8902839Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T19:38:22.8903042Z 
2025-08-20T19:38:22.8903134Z # api.tests.test\_entrypoint
2025-08-20T19:38:22.8903292Z 
2025-08-20T19:38:22.8903416Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T19:38:22.8903650Z 
2025-08-20T19:38:22.8903754Z # api.tests.test\_stats\_future\_contracts
2025-08-20T19:38:22.8903956Z 
2025-08-20T19:38:22.8904059Z <a id="api.tests.test_health"></a>
2025-08-20T19:38:22.8904237Z 
2025-08-20T19:38:22.8904325Z # api.tests.test\_health
2025-08-20T19:38:22.8904479Z 
2025-08-20T19:38:22.8904574Z <a id="api.tests.test_score"></a>
2025-08-20T19:38:22.8904746Z 
2025-08-20T19:38:22.8904832Z # api.tests.test\_score
2025-08-20T19:38:22.8904979Z 
2025-08-20T19:38:22.8905072Z <a id="api.logging_config"></a>
2025-08-20T19:38:22.8905238Z 
2025-08-20T19:38:22.8905331Z # api.logging\_config
2025-08-20T19:38:22.8905466Z 
2025-08-20T19:38:22.8905559Z <a id="api.migrations.env"></a>
2025-08-20T19:38:22.8905729Z 
2025-08-20T19:38:22.8905823Z # api.migrations.env
2025-08-20T19:38:22.8905959Z 
2025-08-20T19:38:22.8906221Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T19:38:22.8906450Z 
2025-08-20T19:38:22.8906560Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T19:38:22.8906757Z 
2025-08-20T19:38:22.8906880Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T19:38:22.8907083Z 
2025-08-20T19:38:22.8907180Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T19:38:22.8907364Z 
2025-08-20T19:38:22.8907520Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T19:38:22.8907760Z 
2025-08-20T19:38:22.8907897Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T19:38:22.8908118Z 
2025-08-20T19:38:22.8908241Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T19:38:22.8908443Z 
2025-08-20T19:38:22.8908555Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T19:38:22.8908739Z 
2025-08-20T19:38:22.8908853Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T19:38:22.8909214Z 
2025-08-20T19:38:22.8909323Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T19:38:22.8909623Z 
2025-08-20T19:38:22.8909751Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T19:38:22.8909959Z 
2025-08-20T19:38:22.8910067Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T19:38:22.8910263Z 
2025-08-20T19:38:22.8910379Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T19:38:22.8910573Z 
2025-08-20T19:38:22.8910684Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T19:38:22.8910866Z 
2025-08-20T19:38:22.8910987Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T19:38:22.8911190Z 
2025-08-20T19:38:22.8911294Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T19:38:22.8911476Z 
2025-08-20T19:38:22.8911611Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T19:38:22.8911832Z 
2025-08-20T19:38:22.8911956Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T19:38:22.8912160Z 
2025-08-20T19:38:22.8912293Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T19:38:22.8912633Z 
2025-08-20T19:38:22.8912743Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T19:38:22.8912939Z 
2025-08-20T19:38:22.8913075Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T19:38:22.8913289Z 
2025-08-20T19:38:22.8913416Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T19:38:22.8913615Z 
2025-08-20T19:38:22.8913730Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T19:38:22.8913933Z 
2025-08-20T19:38:22.8914032Z # api.migrations.versions.0001\_baseline
2025-08-20T19:38:22.8914227Z 
2025-08-20T19:38:22.8914324Z <a id="api.migrations.versions"></a>
2025-08-20T19:38:22.8914492Z 
2025-08-20T19:38:22.8914573Z # api.migrations.versions
2025-08-20T19:38:22.8914699Z 
2025-08-20T19:38:22.8914783Z <a id="api.migrations"></a>
2025-08-20T19:38:22.8914912Z 
2025-08-20T19:38:22.8914981Z # api.migrations
2025-08-20T19:38:22.8915086Z 
2025-08-20T19:38:22.8915166Z <a id="api.db"></a>
2025-08-20T19:38:22.8915280Z 
2025-08-20T19:38:22.8915346Z # api.db
2025-08-20T19:38:22.8915442Z 
2025-08-20T19:38:22.8915522Z <a id="api.routes.score"></a>
2025-08-20T19:38:22.8915663Z 
2025-08-20T19:38:22.8915739Z # api.routes.score
2025-08-20T19:38:22.8915852Z 
2025-08-20T19:38:22.8915930Z <a id="api.routes.stats"></a>
2025-08-20T19:38:22.8916196Z 
2025-08-20T19:38:22.8916272Z # api.routes.stats
2025-08-20T19:38:22.8916376Z 
2025-08-20T19:38:22.8916451Z <a id="api.routes.roi"></a>
2025-08-20T19:38:22.8916588Z 
2025-08-20T19:38:22.8916655Z # api.routes.roi
2025-08-20T19:38:22.8916756Z 
2025-08-20T19:38:22.8916836Z <a id="api.routes.health"></a>
2025-08-20T19:38:22.8916980Z 
2025-08-20T19:38:22.8917050Z # api.routes.health
2025-08-20T19:38:22.8917156Z 
2025-08-20T19:38:22.8917251Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T19:38:22.8917415Z 
2025-08-20T19:38:22.8917479Z #### MAX\_SKEW
2025-08-20T19:38:22.8917580Z 
2025-08-20T19:38:22.8917642Z seconds
2025-08-20T19:38:22.8917731Z 
2025-08-20T19:38:22.8917820Z <a id="api.routes.health.health"></a>
2025-08-20T19:38:22.8917989Z 
2025-08-20T19:38:22.8918054Z #### health
2025-08-20T19:38:22.8918146Z 
2025-08-20T19:38:22.8918217Z ```python
2025-08-20T19:38:22.8918413Z @router.get("/health", include_in_schema=False)
2025-08-20T19:38:22.8918823Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T19:38:22.8919173Z ```
2025-08-20T19:38:22.8919268Z 
2025-08-20T19:38:22.8919389Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T19:38:22.8919587Z 
2025-08-20T19:38:22.8919677Z <a id="api.routes.repository"></a>
2025-08-20T19:38:22.8919842Z 
2025-08-20T19:38:22.8919922Z # api.routes.repository
2025-08-20T19:38:22.8920049Z 
2025-08-20T19:38:22.8920128Z <a id="api.routes"></a>
2025-08-20T19:38:22.8920244Z 
2025-08-20T19:38:22.8920309Z # api.routes
2025-08-20T19:38:22.8920405Z 
2025-08-20T19:38:22.8920489Z <a id="api.models.fee"></a>
2025-08-20T19:38:22.8920625Z 
2025-08-20T19:38:22.8920814Z # api.models.fee
2025-08-20T19:38:22.8920931Z 
2025-08-20T19:38:22.8921004Z <a id="api.models"></a>
2025-08-20T19:38:22.8921118Z 
2025-08-20T19:38:22.8921187Z # api.models
2025-08-20T19:38:22.8921278Z 
2025-08-20T19:38:22.8921357Z <a id="api.roi_repository"></a>
2025-08-20T19:38:22.8921498Z 
2025-08-20T19:38:22.8921576Z # api.roi\_repository
2025-08-20T19:38:22.8921691Z 
2025-08-20T19:38:22.8921761Z <a id="api.main"></a>
2025-08-20T19:38:22.8921876Z 
2025-08-20T19:38:22.8921940Z # api.main
2025-08-20T19:38:22.8922030Z 
2025-08-20T19:38:22.8922112Z <a id="api.main.ready"></a>
2025-08-20T19:38:22.8922249Z 
2025-08-20T19:38:22.8922312Z #### ready
2025-08-20T19:38:22.8922400Z 
2025-08-20T19:38:22.8922471Z ```python
2025-08-20T19:38:22.8922732Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T19:38:22.8923172Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T19:38:22.8923519Z                                                                       str]
2025-08-20T19:38:22.8923758Z ```
2025-08-20T19:38:22.8923959Z 
2025-08-20T19:38:22.8924056Z Return 200 only when migrations are at head.
2025-08-20T19:38:22.8924234Z 
2025-08-20T19:38:22.8924309Z <a id="api.config"></a>
2025-08-20T19:38:22.8924428Z 
2025-08-20T19:38:22.8924502Z # api.config
2025-08-20T19:38:22.8924597Z 
2025-08-20T19:38:22.8924677Z <a id="api.security"></a>
2025-08-20T19:38:22.8924813Z 
2025-08-20T19:38:22.8924880Z # api.security
2025-08-20T19:38:22.8924980Z 
2025-08-20T19:38:22.8925047Z <a id="etl"></a>
2025-08-20T19:38:22.8925154Z 
2025-08-20T19:38:22.8925218Z # etl
2025-08-20T19:38:22.8925303Z 
2025-08-20T19:38:22.8925401Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T19:38:22.8925553Z 
2025-08-20T19:38:22.8925627Z # etl.fba\_fee\_ingestor
2025-08-20T19:38:22.8925767Z 
2025-08-20T19:38:22.8925847Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T19:38:22.8925990Z 
2025-08-20T19:38:22.8926169Z # etl.sp\_fees\_ingestor
2025-08-20T19:38:22.8926297Z 
2025-08-20T19:38:22.8926375Z <a id="etl.keepa_ingestor"></a>
2025-08-20T19:38:22.8926524Z 
2025-08-20T19:38:22.8926600Z # etl.keepa\_ingestor
2025-08-20T19:38:22.8926715Z 
2025-08-20T19:38:22.8926784Z <a id="etl.db"></a>
2025-08-20T19:38:22.8926892Z 
2025-08-20T19:38:22.8926955Z # etl.db
2025-08-20T19:38:22.8927041Z 
2025-08-20T19:38:22.8927124Z <a id="etl.dialects.schemas"></a>
2025-08-20T19:38:22.8927275Z 
2025-08-20T19:38:22.8927347Z # etl.dialects.schemas
2025-08-20T19:38:22.8927463Z 
2025-08-20T19:38:22.8927573Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T19:38:22.8927759Z 
2025-08-20T19:38:22.8927848Z # etl.dialects.amazon\_reimbursements
2025-08-20T19:38:22.8928013Z 
2025-08-20T19:38:22.8928108Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T19:38:22.8928280Z 
2025-08-20T19:38:22.8928365Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T19:38:22.8928527Z 
2025-08-20T19:38:22.8928612Z <a id="etl.dialects.test_generic"></a>
2025-08-20T19:38:22.8928771Z 
2025-08-20T19:38:22.8928857Z # etl.dialects.test\_generic
2025-08-20T19:38:22.8929001Z 
2025-08-20T19:38:22.8929092Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T19:38:22.8929262Z 
2025-08-20T19:38:22.8929343Z # etl.dialects.amazon\_returns
2025-08-20T19:38:22.8929484Z 
2025-08-20T19:38:22.8929577Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T19:38:22.8929763Z 
2025-08-20T19:38:22.8929849Z # etl.dialects.amazon\_fee\_preview
2025-08-20T19:38:22.8930002Z 
2025-08-20T19:38:22.8930113Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T19:38:22.8930297Z 
2025-08-20T19:38:22.8930386Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T19:38:22.8930554Z 
2025-08-20T19:38:22.8930648Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T19:38:22.8930816Z 
2025-08-20T19:38:22.8930902Z # etl.dialects.amazon\_settlements
2025-08-20T19:38:22.8931056Z 
2025-08-20T19:38:22.8931132Z <a id="etl.dialects"></a>
2025-08-20T19:38:22.8931257Z 
2025-08-20T19:38:22.8931332Z # etl.dialects
2025-08-20T19:38:22.8931429Z 
2025-08-20T19:38:22.8931495Z <a id="ingest"></a>
2025-08-20T19:38:22.8931718Z 
2025-08-20T19:38:22.8931791Z # ingest
2025-08-20T19:38:22.8931876Z 
2025-08-20T19:38:22.8931957Z <a id="ingest.maintenance"></a>
2025-08-20T19:38:22.8932105Z 
2025-08-20T19:38:22.8932180Z # ingest.maintenance
2025-08-20T19:38:22.8932295Z 
2025-08-20T19:38:22.8932381Z <a id="ingest.copy_loader"></a>
2025-08-20T19:38:22.8932517Z 
2025-08-20T19:38:22.8932588Z # ingest.copy\_loader
2025-08-20T19:38:22.8932702Z 
2025-08-20T19:38:22.8932807Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T19:38:22.8932986Z 
2025-08-20T19:38:22.8933059Z #### copy\_df\_via\_temp
2025-08-20T19:38:22.8933186Z 
2025-08-20T19:38:22.8933250Z ```python
2025-08-20T19:38:22.8933420Z def copy_df_via_temp(engine: Engine,
2025-08-20T19:38:22.8933655Z                      df: pd.DataFrame,
2025-08-20T19:38:22.8933892Z                      target_table: str,
2025-08-20T19:38:22.8934106Z                      *,
2025-08-20T19:38:22.8934311Z                      target_schema: str | None = None,
2025-08-20T19:38:22.8934567Z                      columns: Sequence[str],
2025-08-20T19:38:22.8934946Z                      conflict_cols: Sequence[str] | None = None,
2025-08-20T19:38:22.8935215Z                      analyze_after: bool = False,
2025-08-20T19:38:22.8935484Z                      connection: Any | None = None) -> int
2025-08-20T19:38:22.8935722Z ```
2025-08-20T19:38:22.8935813Z 
2025-08-20T19:38:22.8935970Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T19:38:22.8936417Z 
2025-08-20T19:38:22.8936515Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T19:38:22.8936676Z 
2025-08-20T19:38:22.8936756Z # ingest.tests.test\_smoke
2025-08-20T19:38:22.8936894Z 
2025-08-20T19:38:22.8936973Z <a id="ingest.tests"></a>
2025-08-20T19:38:22.8937099Z 
2025-08-20T19:38:22.8937168Z # ingest.tests
2025-08-20T19:38:22.8937274Z 
2025-08-20T19:38:22.8937359Z <a id="ingest.upload_router"></a>
2025-08-20T19:38:22.8937511Z 
2025-08-20T19:38:22.8937593Z # ingest.upload\_router
2025-08-20T19:38:22.8937718Z 
2025-08-20T19:38:22.8937802Z <a id="ingest.email_watcher"></a>
2025-08-20T19:38:22.8937954Z 
2025-08-20T19:38:22.8938027Z # ingest.email\_watcher
2025-08-20T19:38:22.8938143Z 
2025-08-20T19:38:22.8938229Z <a id="ingest.email_watcher.main"></a>
2025-08-20T19:38:22.8938396Z 
2025-08-20T19:38:22.8938461Z #### main
2025-08-20T19:38:22.8938550Z 
2025-08-20T19:38:22.8938617Z ```python
2025-08-20T19:38:22.8938781Z def main() -> dict[str, str]
2025-08-20T19:38:22.8938975Z ```
2025-08-20T19:38:22.8939057Z 
2025-08-20T19:38:22.8939193Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T19:38:22.8939424Z 
2025-08-20T19:38:22.8939553Z Returns {"status": "success"} when processing completes.
2025-08-20T19:38:22.8939760Z 
2025-08-20T19:38:22.8939835Z <a id="ingest.tasks"></a>
2025-08-20T19:38:22.8939966Z 
2025-08-20T19:38:22.8940032Z # ingest.tasks
2025-08-20T19:38:22.8940147Z 
2025-08-20T19:38:22.8940244Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T19:38:22.8940415Z 
2025-08-20T19:38:22.8940496Z #### task\_import\_file
2025-08-20T19:38:22.8940615Z 
2025-08-20T19:38:22.8940678Z ```python
2025-08-20T19:38:22.8940894Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T19:38:22.8941172Z def task_import_file(self: Any,
2025-08-20T19:38:22.8941385Z                      uri: str,
2025-08-20T19:38:22.8941605Z                      report_type: str | None = None,
2025-08-20T19:38:22.8941870Z                      force: bool = False) -> dict[str, Any]
2025-08-20T19:38:22.8942111Z ```
2025-08-20T19:38:22.8942194Z 
2025-08-20T19:38:22.8942326Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T19:38:22.8942541Z 
2025-08-20T19:38:22.8942623Z <a id="ingest.celery_app"></a>
2025-08-20T19:38:22.8942803Z 
2025-08-20T19:38:22.8942877Z # ingest.celery\_app
2025-08-20T19:38:22.8942998Z 
2025-08-20T19:38:22.8943080Z <a id="ingest.ingest_router"></a>
2025-08-20T19:38:22.8943231Z 
2025-08-20T19:38:22.8943310Z # ingest.ingest\_router
2025-08-20T19:38:22.8943428Z 
2025-08-20T19:38:22.8943631Z <a id="logistics_etl"></a>
2025-08-20T19:38:22.8943768Z 
2025-08-20T19:38:22.8943836Z # logistics\_etl
2025-08-20T19:38:22.8943941Z 
2025-08-20T19:38:22.8944016Z Daily logistics ETL job.
2025-08-20T19:38:22.8944145Z 
2025-08-20T19:38:22.8944227Z <a id="logistics_etl.__main__"></a>
2025-08-20T19:38:22.8944380Z 
2025-08-20T19:38:22.8944462Z # logistics\_etl.\_\_main\_\_
2025-08-20T19:38:22.8944596Z 
2025-08-20T19:38:22.8944674Z <a id="logistics_etl.dsn"></a>
2025-08-20T19:38:22.8944813Z 
2025-08-20T19:38:22.8944882Z # logistics\_etl.dsn
2025-08-20T19:38:22.8944992Z 
2025-08-20T19:38:22.8945106Z Local DSN builder to avoid cross-service dependency.
2025-08-20T19:38:22.8945311Z 
2025-08-20T19:38:22.8945401Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T19:38:22.8945566Z 
2025-08-20T19:38:22.8945642Z #### build\_dsn
2025-08-20T19:38:22.8945741Z 
2025-08-20T19:38:22.8945806Z ```python
2025-08-20T19:38:22.8946101Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:38:22.8946329Z ```
2025-08-20T19:38:22.8946421Z 
2025-08-20T19:38:22.8946681Z Return a Postgres DSN assembled from environment variables.
2025-08-20T19:38:22.8946902Z 
2025-08-20T19:38:22.8947052Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T19:38:22.8947449Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T19:38:22.8947799Z error when any required variable is missing.
2025-08-20T19:38:22.8947974Z 
2025-08-20T19:38:22.8948068Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T19:38:22.8948248Z 
2025-08-20T19:38:22.8948330Z # logistics\_etl.tests.conftest
2025-08-20T19:38:22.8948472Z 
2025-08-20T19:38:22.8948578Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T19:38:22.8948769Z 
2025-08-20T19:38:22.8948858Z # logistics\_etl.tests.test\_repository
2025-08-20T19:38:22.8949021Z 
2025-08-20T19:38:22.8949123Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T19:38:22.8949291Z 
2025-08-20T19:38:22.8949373Z # logistics\_etl.tests.test\_cron
2025-08-20T19:38:22.8949527Z 
2025-08-20T19:38:22.8949629Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T19:38:22.8949807Z 
2025-08-20T19:38:22.8949892Z # logistics\_etl.tests.test\_imports
2025-08-20T19:38:22.8950056Z 
2025-08-20T19:38:22.8950147Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T19:38:22.8950318Z 
2025-08-20T19:38:22.8950410Z # logistics\_etl.tests.test\_smoke
2025-08-20T19:38:22.8950559Z 
2025-08-20T19:38:22.8950651Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T19:38:22.8950830Z 
2025-08-20T19:38:22.8950912Z # logistics\_etl.tests.test\_client
2025-08-20T19:38:22.8951062Z 
2025-08-20T19:38:22.8951142Z <a id="logistics_etl.tests"></a>
2025-08-20T19:38:22.8951290Z 
2025-08-20T19:38:22.8951360Z # logistics\_etl.tests
2025-08-20T19:38:22.8951475Z 
2025-08-20T19:38:22.8951559Z <a id="logistics_etl.flow"></a>
2025-08-20T19:38:22.8951696Z 
2025-08-20T19:38:22.8951766Z # logistics\_etl.flow
2025-08-20T19:38:22.8951887Z 
2025-08-20T19:38:22.8951966Z <a id="logistics_etl.client"></a>
2025-08-20T19:38:22.8952113Z 
2025-08-20T19:38:22.9023069Z # logistics\_etl.client
2025-08-20T19:38:22.9023381Z 
2025-08-20T19:38:22.9023571Z <a id="logistics_etl.cron"></a>
2025-08-20T19:38:22.9023874Z 
2025-08-20T19:38:22.9024036Z # logistics\_etl.cron
2025-08-20T19:38:22.9024284Z 
2025-08-20T19:38:22.9024446Z <a id="logistics_etl.db"></a>
2025-08-20T19:38:22.9024740Z 
2025-08-20T19:38:22.9024880Z # logistics\_etl.db
2025-08-20T19:38:22.9025102Z 
2025-08-20T19:38:22.9025287Z <a id="logistics_etl.repository"></a>
2025-08-20T19:38:22.9025631Z 
2025-08-20T19:38:22.9025738Z # logistics\_etl.repository
2025-08-20T19:38:22.9025909Z 
2025-08-20T19:38:22.9026236Z <a id="alert_bot"></a>
2025-08-20T19:38:22.9026429Z 
2025-08-20T19:38:22.9026512Z # alert\_bot
2025-08-20T19:38:22.9026725Z 
2025-08-20T19:38:22.9026910Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T19:38:22.9027254Z 
2025-08-20T19:38:22.9027420Z # alert\_bot.tests.test\_smoke
2025-08-20T19:38:22.9027718Z 
2025-08-20T19:38:22.9027864Z <a id="alert_bot.tests"></a>
2025-08-20T19:38:22.9028308Z 
2025-08-20T19:38:22.9028402Z # alert\_bot.tests
2025-08-20T19:38:22.9028546Z 
2025-08-20T19:38:22.9028648Z <a id="alert_bot.alert_bot"></a>
2025-08-20T19:38:22.9028825Z 
2025-08-20T19:38:22.9028925Z # alert\_bot.alert\_bot
2025-08-20T19:38:22.9029072Z 
2025-08-20T19:38:22.9029165Z <a id="alert_bot.rules"></a>
2025-08-20T19:38:22.9029335Z 
2025-08-20T19:38:22.9029416Z # alert\_bot.rules
2025-08-20T19:38:22.9029547Z 
2025-08-20T19:38:22.9029629Z <a id="common"></a>
2025-08-20T19:38:22.9029768Z 
2025-08-20T19:38:22.9029845Z # common
2025-08-20T19:38:22.9029953Z 
2025-08-20T19:38:22.9030051Z <a id="common.dsn"></a>
2025-08-20T19:38:22.9030195Z 
2025-08-20T19:38:22.9030276Z # common.dsn
2025-08-20T19:38:22.9030394Z 
2025-08-20T19:38:22.9030504Z <a id="common.dsn.build_dsn"></a>
2025-08-20T19:38:22.9030688Z 
2025-08-20T19:38:22.9030768Z #### build\_dsn
2025-08-20T19:38:22.9030903Z 
2025-08-20T19:38:22.9030982Z ```python
2025-08-20T19:38:22.9031203Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:38:22.9031492Z ```
2025-08-20T19:38:22.9031748Z 
2025-08-20T19:38:22.9031907Z Return a Postgres DSN, validating required variables.
2025-08-20T19:38:22.9032162Z 
2025-08-20T19:38:22.9032401Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T19:38:22.9033031Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T19:38:22.9033536Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T19:38:22.9033924Z missing.
2025-08-20T19:38:22.9034031Z 
2025-08-20T19:38:22.9034141Z <a id="common.models_vendor"></a>
2025-08-20T19:38:22.9034326Z 
2025-08-20T19:38:22.9034422Z # common.models\_vendor
2025-08-20T19:38:22.9034577Z 
2025-08-20T19:38:22.9034685Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T19:38:22.9034895Z 
2025-08-20T19:38:22.9034976Z ## Vendor Objects
2025-08-20T19:38:22.9035111Z 
2025-08-20T19:38:22.9035189Z ```python
2025-08-20T19:38:22.9035381Z class Vendor(Base)
2025-08-20T19:38:22.9035587Z ```
2025-08-20T19:38:22.9035690Z 
2025-08-20T19:38:22.9035801Z Vendor of inventory items.
2025-08-20T19:38:22.9035973Z 
2025-08-20T19:38:22.9036204Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T19:38:22.9036392Z 
2025-08-20T19:38:22.9036464Z ## VendorPrice Objects
2025-08-20T19:38:22.9036581Z 
2025-08-20T19:38:22.9036645Z ```python
2025-08-20T19:38:22.9036809Z class VendorPrice(Base)
2025-08-20T19:38:22.9036981Z ```
2025-08-20T19:38:22.9037066Z 
2025-08-20T19:38:22.9037167Z Association table linking vendors to pricing.
2025-08-20T19:38:22.9037346Z 
2025-08-20T19:38:22.9037428Z <a id="common.db_url"></a>
2025-08-20T19:38:22.9037552Z 
2025-08-20T19:38:22.9037618Z # common.db\_url
2025-08-20T19:38:22.9037730Z 
2025-08-20T19:38:22.9037814Z <a id="common.db_url.build_url"></a>
2025-08-20T19:38:22.9037968Z 
2025-08-20T19:38:22.9038033Z #### build\_url
2025-08-20T19:38:22.9038140Z 
2025-08-20T19:38:22.9038203Z ```python
2025-08-20T19:38:22.9038381Z def build_url(async_: bool = True) -> str
2025-08-20T19:38:22.9038611Z ```
2025-08-20T19:38:22.9038700Z 
2025-08-20T19:38:22.9038817Z Return Postgres DSN from environment variables.
2025-08-20T19:38:22.9039005Z 
2025-08-20T19:38:22.9039086Z <a id="common.keepa"></a>
2025-08-20T19:38:22.9039220Z 
2025-08-20T19:38:22.9039286Z # common.keepa
2025-08-20T19:38:22.9039386Z 
2025-08-20T19:38:22.9039456Z <a id="common.llm"></a>
2025-08-20T19:38:22.9039580Z 
2025-08-20T19:38:22.9039644Z # common.llm
2025-08-20T19:38:22.9039737Z 
2025-08-20T19:38:22.9039826Z <a id="common.settings"></a>
2025-08-20T19:38:22.9039961Z 
2025-08-20T19:38:22.9040029Z # common.settings
2025-08-20T19:38:22.9040139Z 
2025-08-20T19:38:22.9040212Z <a id="common.db"></a>
2025-08-20T19:38:22.9040325Z 
2025-08-20T19:38:22.9040392Z # common.db
2025-08-20T19:38:22.9040491Z 
2025-08-20T19:38:22.9040582Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T19:38:22.9040754Z 
2025-08-20T19:38:22.9040836Z #### build\_sqlalchemy\_url
2025-08-20T19:38:22.9040965Z 
2025-08-20T19:38:22.9041026Z ```python
2025-08-20T19:38:22.9041334Z def build_sqlalchemy_url() -> str
2025-08-20T19:38:22.9041544Z ```
2025-08-20T19:38:22.9041632Z 
2025-08-20T19:38:22.9041727Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T19:38:22.9041899Z 
2025-08-20T19:38:22.9041989Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T19:38:22.9042159Z 
2025-08-20T19:38:22.9042232Z #### build\_asyncpg\_dsn
2025-08-20T19:38:22.9042356Z 
2025-08-20T19:38:22.9042424Z ```python
2025-08-20T19:38:22.9042590Z def build_asyncpg_dsn() -> str
2025-08-20T19:38:22.9042791Z ```
2025-08-20T19:38:22.9042871Z 
2025-08-20T19:38:22.9042997Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T19:38:22.9043216Z 
2025-08-20T19:38:22.9043300Z <a id="common.db.refresh_mvs"></a>
2025-08-20T19:38:22.9043452Z 
2025-08-20T19:38:22.9043522Z #### refresh\_mvs
2025-08-20T19:38:22.9043626Z 
2025-08-20T19:38:22.9043687Z ```python
2025-08-20T19:38:22.9043880Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T19:38:22.9044125Z ```
2025-08-20T19:38:22.9044211Z 
2025-08-20T19:38:22.9044465Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T19:38:22.9044683Z 
2025-08-20T19:38:22.9044759Z <a id="common.config"></a>
2025-08-20T19:38:22.9044893Z 
2025-08-20T19:38:22.9044959Z # common.config
2025-08-20T19:38:22.9045060Z 
2025-08-20T19:38:22.9045138Z <a id="common.base"></a>
2025-08-20T19:38:22.9045259Z 
2025-08-20T19:38:22.9045322Z # common.base
2025-08-20T19:38:22.9045419Z 
2025-08-20T19:38:22.9045503Z <a id="common.base.Base"></a>
2025-08-20T19:38:22.9045640Z 
2025-08-20T19:38:22.9045706Z ## Base Objects
2025-08-20T19:38:22.9045812Z 
2025-08-20T19:38:22.9045873Z ```python
2025-08-20T19:38:22.9046150Z class Base(DeclarativeBase)
2025-08-20T19:38:22.9046345Z ```
2025-08-20T19:38:22.9046424Z 
2025-08-20T19:38:22.9046512Z Base class for SQLAlchemy models.
2025-08-20T19:38:22.9046658Z 
2025-08-20T19:38:22.9046729Z <a id="repricer"></a>
2025-08-20T19:38:22.9046843Z 
2025-08-20T19:38:22.9046911Z # repricer
2025-08-20T19:38:22.9046999Z 
2025-08-20T19:38:22.9047090Z <a id="repricer.app.schemas"></a>
2025-08-20T19:38:22.9047248Z 
2025-08-20T19:38:22.9047323Z # repricer.app.schemas
2025-08-20T19:38:22.9047442Z 
2025-08-20T19:38:22.9047529Z <a id="repricer.app.deps"></a>
2025-08-20T19:38:22.9047668Z 
2025-08-20T19:38:22.9047741Z # repricer.app.deps
2025-08-20T19:38:22.9047850Z 
2025-08-20T19:38:22.9047974Z Placeholder module for Keepa / SP-API clients.
2025-08-20T19:38:22.9048159Z 
2025-08-20T19:38:22.9048241Z <a id="repricer.app.logic"></a>
2025-08-20T19:38:22.9048390Z 
2025-08-20T19:38:22.9048466Z # repricer.app.logic
2025-08-20T19:38:22.9048581Z 
2025-08-20T19:38:22.9048676Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T19:38:22.9048859Z 
2025-08-20T19:38:22.9048924Z #### MIN\_MARGIN
2025-08-20T19:38:22.9049025Z 
2025-08-20T19:38:22.9049092Z 15 % ROI
2025-08-20T19:38:22.9049178Z 
2025-08-20T19:38:22.9049279Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T19:38:22.9049465Z 
2025-08-20T19:38:22.9049533Z #### compute\_price
2025-08-20T19:38:22.9049642Z 
2025-08-20T19:38:22.9049708Z ```python
2025-08-20T19:38:22.9049955Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T19:38:22.9050258Z ```
2025-08-20T19:38:22.9050339Z 
2025-08-20T19:38:22.9050445Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T19:38:22.9050728Z Replace with real competitive logic later.
2025-08-20T19:38:22.9050899Z 
2025-08-20T19:38:22.9050979Z <a id="repricer.app.main"></a>
2025-08-20T19:38:22.9051130Z 
2025-08-20T19:38:22.9051201Z # repricer.app.main
2025-08-20T19:38:22.9051308Z 
2025-08-20T19:38:22.9051383Z <a id="repricer.app"></a>
2025-08-20T19:38:22.9051516Z 
2025-08-20T19:38:22.9051584Z # repricer.app
2025-08-20T19:38:22.9051684Z 
2025-08-20T19:38:22.9051783Z <a id="repricer.tests.test_imports"></a>
2025-08-20T19:38:22.9051951Z 
2025-08-20T19:38:22.9052036Z # repricer.tests.test\_imports
2025-08-20T19:38:22.9052180Z 
2025-08-20T19:38:22.9052269Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T19:38:22.9052430Z 
2025-08-20T19:38:22.9052701Z # repricer.tests.test\_smoke
2025-08-20T19:38:22.9052848Z 
2025-08-20T19:38:22.9052927Z <a id="repricer.tests"></a>
2025-08-20T19:38:22.9053059Z 
2025-08-20T19:38:22.9053132Z # repricer.tests
2025-08-20T19:38:22.9053236Z 
2025-08-20T19:38:22.9053298Z <a id="db"></a>
2025-08-20T19:38:22.9053400Z 
2025-08-20T19:38:22.9053460Z # db
2025-08-20T19:38:22.9053545Z 
2025-08-20T19:38:22.9053620Z <a id="db.utils.views"></a>
2025-08-20T19:38:22.9053755Z 
2025-08-20T19:38:22.9053820Z # db.utils.views
2025-08-20T19:38:22.9053920Z 
2025-08-20T19:38:22.9054016Z <a id="db.utils.views.replace_view"></a>
2025-08-20T19:38:22.9054181Z 
2025-08-20T19:38:22.9054246Z #### replace\_view
2025-08-20T19:38:22.9054348Z 
2025-08-20T19:38:22.9054415Z ```python
2025-08-20T19:38:22.9054601Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T19:38:22.9054854Z ```
2025-08-20T19:38:22.9054935Z 
2025-08-20T19:38:22.9055023Z Drop and recreate a SQL view atomically.
2025-08-20T19:38:22.9055191Z 
2025-08-20T19:38:22.9055265Z <a id="db.utils"></a>
2025-08-20T19:38:22.9055497Z 
2025-08-20T19:38:22.9055568Z # db.utils
2025-08-20T19:38:22.9055655Z 
2025-08-20T19:38:22.9055733Z <a id="price_importer"></a>
2025-08-20T19:38:22.9055861Z 
2025-08-20T19:38:22.9055934Z # price\_importer
2025-08-20T19:38:22.9056142Z 
2025-08-20T19:38:22.9056244Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T19:38:22.9056435Z 
2025-08-20T19:38:22.9056525Z # price\_importer.services\_common.dsn
2025-08-20T19:38:22.9056685Z 
2025-08-20T19:38:22.9056819Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T19:38:22.9057028Z 
2025-08-20T19:38:22.9057090Z #### build\_dsn
2025-08-20T19:38:22.9057190Z 
2025-08-20T19:38:22.9057259Z ```python
2025-08-20T19:38:22.9057430Z def build_dsn(sync: bool = True) -> str
2025-08-20T19:38:22.9057655Z ```
2025-08-20T19:38:22.9057735Z 
2025-08-20T19:38:22.9057800Z Return safe DSN.
2025-08-20T19:38:22.9057908Z 
2025-08-20T19:38:22.9058092Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T19:38:22.9058463Z Falls back to individual PG_* variables.
2025-08-20T19:38:22.9058976Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T19:38:22.9059184Z 
2025-08-20T19:38:22.9059317Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T19:38:22.9059523Z 
2025-08-20T19:38:22.9059634Z # price\_importer.services\_common.models\_vendor
2025-08-20T19:38:22.9059830Z 
2025-08-20T19:38:22.9059939Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T19:38:22.9060128Z 
2025-08-20T19:38:22.9060228Z # price\_importer.services\_common.db\_url
2025-08-20T19:38:22.9060401Z 
2025-08-20T19:38:22.9060533Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T19:38:22.9060752Z 
2025-08-20T19:38:22.9060819Z #### build\_url
2025-08-20T19:38:22.9060919Z 
2025-08-20T19:38:22.9060984Z ```python
2025-08-20T19:38:22.9061163Z def build_url(async_: bool = True) -> str
2025-08-20T19:38:22.9061385Z ```
2025-08-20T19:38:22.9061473Z 
2025-08-20T19:38:22.9061591Z Return Postgres DSN from environment variables.
2025-08-20T19:38:22.9061784Z 
2025-08-20T19:38:22.9061898Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T19:38:22.9062084Z 
2025-08-20T19:38:22.9062176Z # price\_importer.services\_common.keepa
2025-08-20T19:38:22.9062347Z 
2025-08-20T19:38:22.9062450Z <a id="price_importer.services_common.llm"></a>
2025-08-20T19:38:22.9062628Z 
2025-08-20T19:38:22.9062718Z # price\_importer.services\_common.llm
2025-08-20T19:38:22.9062889Z 
2025-08-20T19:38:22.9063004Z <a id="price_importer.services_common.settings"></a>
2025-08-20T19:38:22.9063196Z 
2025-08-20T19:38:22.9063308Z # price\_importer.services\_common.settings
2025-08-20T19:38:22.9063483Z 
2025-08-20T19:38:22.9063582Z <a id="price_importer.services_common.db"></a>
2025-08-20T19:38:22.9063768Z 
2025-08-20T19:38:22.9063859Z # price\_importer.services\_common.db
2025-08-20T19:38:22.9064017Z 
2025-08-20T19:38:22.9064173Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T19:38:22.9064544Z 
2025-08-20T19:38:22.9064627Z #### build\_sqlalchemy\_url
2025-08-20T19:38:22.9064758Z 
2025-08-20T19:38:22.9064826Z ```python
2025-08-20T19:38:22.9064994Z def build_sqlalchemy_url() -> str
2025-08-20T19:38:22.9065204Z ```
2025-08-20T19:38:22.9065285Z 
2025-08-20T19:38:22.9065377Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T19:38:22.9065555Z 
2025-08-20T19:38:22.9065698Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T19:38:22.9065931Z 
2025-08-20T19:38:22.9066177Z #### build\_asyncpg\_dsn
2025-08-20T19:38:22.9066365Z 
2025-08-20T19:38:22.9066431Z ```python
2025-08-20T19:38:22.9066604Z def build_asyncpg_dsn() -> str
2025-08-20T19:38:22.9066798Z ```
2025-08-20T19:38:22.9066884Z 
2025-08-20T19:38:22.9067008Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T19:38:22.9067215Z 
2025-08-20T19:38:22.9067338Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T19:38:22.9067550Z 
2025-08-20T19:38:22.9067616Z #### refresh\_mvs
2025-08-20T19:38:22.9067853Z 
2025-08-20T19:38:22.9067921Z ```python
2025-08-20T19:38:22.9068111Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T19:38:22.9068365Z ```
2025-08-20T19:38:22.9068445Z 
2025-08-20T19:38:22.9068579Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T19:38:22.9068798Z 
2025-08-20T19:38:22.9068893Z <a id="price_importer.services_common"></a>
2025-08-20T19:38:22.9069066Z 
2025-08-20T19:38:22.9069157Z # price\_importer.services\_common
2025-08-20T19:38:22.9069313Z 
2025-08-20T19:38:22.9069416Z <a id="price_importer.services_common.base"></a>
2025-08-20T19:38:22.9069600Z 
2025-08-20T19:38:22.9069697Z # price\_importer.services\_common.base
2025-08-20T19:38:22.9069860Z 
2025-08-20T19:38:22.9069950Z <a id="price_importer.normaliser"></a>
2025-08-20T19:38:22.9070119Z 
2025-08-20T19:38:22.9070200Z # price\_importer.normaliser
2025-08-20T19:38:22.9070337Z 
2025-08-20T19:38:22.9070446Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T19:38:22.9070632Z 
2025-08-20T19:38:22.9070725Z # price\_importer.common.models\_vendor
2025-08-20T19:38:22.9070888Z 
2025-08-20T19:38:22.9070985Z <a id="price_importer.common.db_url"></a>
2025-08-20T19:38:22.9071154Z 
2025-08-20T19:38:22.9071237Z # price\_importer.common.db\_url
2025-08-20T19:38:22.9071391Z 
2025-08-20T19:38:22.9071495Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T19:38:22.9071680Z 
2025-08-20T19:38:22.9071749Z #### make\_dsn
2025-08-20T19:38:22.9071846Z 
2025-08-20T19:38:22.9071909Z ```python
2025-08-20T19:38:22.9072083Z def make_dsn(async_: bool = False) -> str
2025-08-20T19:38:22.9072307Z ```
2025-08-20T19:38:22.9072393Z 
2025-08-20T19:38:22.9072473Z Return DSN using shared builder.
2025-08-20T19:38:22.9072613Z 
2025-08-20T19:38:22.9072722Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T19:38:22.9072917Z 
2025-08-20T19:38:22.9072979Z #### build\_url
2025-08-20T19:38:22.9073079Z 
2025-08-20T19:38:22.9073145Z ```python
2025-08-20T19:38:22.9073314Z def build_url(async_: bool = False) -> str
2025-08-20T19:38:22.9073550Z ```
2025-08-20T19:38:22.9073630Z 
2025-08-20T19:38:22.9073752Z Return Postgres DSN built from environment variables.
2025-08-20T19:38:22.9073961Z 
2025-08-20T19:38:22.9074047Z <a id="price_importer.common"></a>
2025-08-20T19:38:22.9074201Z 
2025-08-20T19:38:22.9074278Z # price\_importer.common
2025-08-20T19:38:22.9074410Z 
2025-08-20T19:38:22.9074500Z <a id="price_importer.common.base"></a>
2025-08-20T19:38:22.9074666Z 
2025-08-20T19:38:22.9074763Z # price\_importer.common.base
2025-08-20T19:38:22.9074904Z 
2025-08-20T19:38:22.9075000Z <a id="price_importer.tests.conftest"></a>
2025-08-20T19:38:22.9075180Z 
2025-08-20T19:38:22.9075267Z # price\_importer.tests.conftest
2025-08-20T19:38:22.9075412Z 
2025-08-20T19:38:22.9075512Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T19:38:22.9075729Z 
2025-08-20T19:38:22.9075823Z # price\_importer.tests.test\_reader
2025-08-20T19:38:22.9075979Z 
2025-08-20T19:38:22.9076199Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T19:38:22.9076515Z 
2025-08-20T19:38:22.9076605Z # price\_importer.tests.test\_imports
2025-08-20T19:38:22.9076770Z 
2025-08-20T19:38:22.9076865Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T19:38:22.9077036Z 
2025-08-20T19:38:22.9077120Z # price\_importer.tests.test\_smoke
2025-08-20T19:38:22.9077282Z 
2025-08-20T19:38:22.9077390Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T19:38:22.9077579Z 
2025-08-20T19:38:22.9077682Z # price\_importer.tests.test\_normaliser
2025-08-20T19:38:22.9077851Z 
2025-08-20T19:38:22.9077937Z <a id="price_importer.tests"></a>
2025-08-20T19:38:22.9078093Z 
2025-08-20T19:38:22.9078168Z # price\_importer.tests
2025-08-20T19:38:22.9078291Z 
2025-08-20T19:38:22.9078377Z <a id="price_importer.reader"></a>
2025-08-20T19:38:22.9078531Z 
2025-08-20T19:38:22.9078607Z # price\_importer.reader
2025-08-20T19:38:22.9078732Z 
2025-08-20T19:38:22.9078827Z <a id="price_importer.repository"></a>
2025-08-20T19:38:22.9078988Z 
2025-08-20T19:38:22.9079075Z # price\_importer.repository
2025-08-20T19:38:22.9079333Z 
2025-08-20T19:38:22.9079419Z <a id="price_importer.import"></a>
2025-08-20T19:38:22.9079567Z 
2025-08-20T19:38:22.9079642Z # price\_importer.import
2025-08-20T19:38:22.9079769Z 
2025-08-20T19:38:22.9079840Z <a id="fees_h10"></a>
2025-08-20T19:38:22.9079952Z 
2025-08-20T19:38:22.9080022Z # fees\_h10
2025-08-20T19:38:22.9080113Z 
2025-08-20T19:38:22.9080187Z <a id="fees_h10.worker"></a>
2025-08-20T19:38:22.9080321Z 
2025-08-20T19:38:22.9080386Z # fees\_h10.worker
2025-08-20T19:38:22.9080492Z 
2025-08-20T19:38:22.9080586Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T19:38:22.9080768Z 
2025-08-20T19:38:22.9080841Z #### list\_active\_asins
2025-08-20T19:38:22.9080958Z 
2025-08-20T19:38:22.9081028Z ```python
2025-08-20T19:38:22.9081194Z def list_active_asins() -> list[str]
2025-08-20T19:38:22.9081409Z ```
2025-08-20T19:38:22.9081490Z 
2025-08-20T19:38:22.9081600Z Return known ASINs or an empty list if unavailable.
2025-08-20T19:38:22.9081802Z 
2025-08-20T19:38:22.9081888Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T19:38:22.9082045Z 
2025-08-20T19:38:22.9082126Z # fees\_h10.tests.test\_smoke
2025-08-20T19:38:22.9082267Z 
2025-08-20T19:38:22.9082343Z <a id="fees_h10.tests"></a>
2025-08-20T19:38:22.9082470Z 
2025-08-20T19:38:22.9082541Z # fees\_h10.tests
2025-08-20T19:38:22.9082643Z 
2025-08-20T19:38:22.9082717Z <a id="fees_h10.client"></a>
2025-08-20T19:38:22.9082852Z 
2025-08-20T19:38:22.9082918Z # fees\_h10.client
2025-08-20T19:38:22.9083022Z 
2025-08-20T19:38:22.9083101Z <a id="fees_h10.repository"></a>
2025-08-20T19:38:22.9083249Z 
2025-08-20T19:38:22.9083319Z # fees\_h10.repository
2025-08-20T19:38:22.9083435Z 
2025-08-20T19:38:22.9083546Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T19:38:22.9083730Z 
2025-08-20T19:38:22.9083800Z #### upsert\_fees\_raw
2025-08-20T19:38:22.9083919Z 
2025-08-20T19:38:22.9083982Z ```python
2025-08-20T19:38:22.9084151Z def upsert_fees_raw(engine: Engine,
2025-08-20T19:38:22.9084403Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T19:38:22.9084644Z                     *,
2025-08-20T19:38:22.9084865Z                     testing: bool = False) -> dict[str, int] | None
2025-08-20T19:38:22.9085129Z ```
2025-08-20T19:38:22.9085210Z 
2025-08-20T19:38:22.9085289Z Idempotent upsert for fees.
2025-08-20T19:38:22.9085420Z 
2025-08-20T19:38:22.9085579Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T19:38:22.9085918Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T19:38:22.9086330Z Only updates when one of the mutable fields changes.
2025-08-20T19:38:22.9086525Z 
2025-08-20T19:38:22.9086596Z <a id="emailer"></a>
2025-08-20T19:38:22.9086715Z 
2025-08-20T19:38:22.9086778Z # emailer
2025-08-20T19:38:22.9086867Z 
2025-08-20T19:38:22.9086973Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T19:38:22.9087153Z 
2025-08-20T19:38:22.9087244Z # emailer.tests.test\_import\_emailer
2025-08-20T19:38:22.9087412Z 
2025-08-20T19:38:22.9087615Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T19:38:22.9087783Z 
2025-08-20T19:38:22.9087863Z # emailer.tests.test\_smoke
2025-08-20T19:38:22.9088004Z 
2025-08-20T19:38:22.9088081Z <a id="emailer.tests"></a>
2025-08-20T19:38:22.9088209Z 
2025-08-20T19:38:22.9088284Z # emailer.tests
2025-08-20T19:38:22.9088387Z 
2025-08-20T19:38:22.9088470Z <a id="emailer.generate_body"></a>
2025-08-20T19:38:22.9088627Z 
2025-08-20T19:38:22.9088703Z # emailer.generate\_body
2025-08-20T19:38:22.9088825Z 
2025-08-20T19:38:22.9088896Z <a id="llm_server"></a>
2025-08-20T19:38:22.9089020Z 
2025-08-20T19:38:22.9089083Z # llm\_server
2025-08-20T19:38:22.9089180Z 
2025-08-20T19:38:22.9089264Z <a id="llm_server.app"></a>
2025-08-20T19:38:22.9089393Z 
2025-08-20T19:38:22.9089459Z # llm\_server.app
2025-08-20T19:38:22.9089563Z 
