2025-08-17T02:55:27.8288349Z ##[group]Run pydoc-markdown
2025-08-17T02:55:27.8288639Z [36;1mpydoc-markdown[0m
2025-08-17T02:55:27.8328748Z shell: /usr/bin/bash -e {0}
2025-08-17T02:55:27.8328985Z env:
2025-08-17T02:55:27.8329217Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:55:27.8329629Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T02:55:27.8330018Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:55:27.8330358Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:55:27.8330697Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:55:27.8331030Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T02:55:27.8331306Z ##[endgroup]
2025-08-17T02:55:28.3942373Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T02:55:28.3943371Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T02:55:28.3943909Z In "pydoc-markdown.yml"
2025-08-17T02:55:28.3944395Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T02:55:28.3945128Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T02:55:28.3945998Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T02:55:28.3946432Z 
2025-08-17T02:55:28.6039789Z <a id="__init__"></a>
2025-08-17T02:55:28.6040059Z 
2025-08-17T02:55:28.6040177Z # \_\_init\_\_
2025-08-17T02:55:28.6040371Z 
2025-08-17T02:55:28.6040490Z <a id="api"></a>
2025-08-17T02:55:28.6040686Z 
2025-08-17T02:55:28.6040797Z # api
2025-08-17T02:55:28.6040969Z 
2025-08-17T02:55:28.6041123Z <a id="api.tests.test_llm"></a>
2025-08-17T02:55:28.6041402Z 
2025-08-17T02:55:28.6041550Z # api.tests.test\_llm
2025-08-17T02:55:28.6041945Z 
2025-08-17T02:55:28.6042104Z <a id="api.tests.test_imports"></a>
2025-08-17T02:55:28.6042413Z 
2025-08-17T02:55:28.6042671Z # api.tests.test\_imports
2025-08-17T02:55:28.6042914Z 
2025-08-17T02:55:28.6043073Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T02:55:28.6043688Z 
2025-08-17T02:55:28.6043836Z # api.tests.test\_entrypoint
2025-08-17T02:55:28.6044118Z 
2025-08-17T02:55:28.6044277Z <a id="api.tests.test_health"></a>
2025-08-17T02:55:28.6044560Z 
2025-08-17T02:55:28.6044695Z # api.tests.test\_health
2025-08-17T02:55:28.6044935Z 
2025-08-17T02:55:28.6045079Z <a id="api.migrations.env"></a>
2025-08-17T02:55:28.6045341Z 
2025-08-17T02:55:28.6045471Z # api.migrations.env
2025-08-17T02:55:28.6045684Z 
2025-08-17T02:55:28.6045900Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T02:55:28.6046278Z 
2025-08-17T02:55:28.6046473Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T02:55:28.6046811Z 
2025-08-17T02:55:28.6047014Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T02:55:28.6047389Z 
2025-08-17T02:55:28.6047562Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T02:55:28.6047889Z 
2025-08-17T02:55:28.6048170Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T02:55:28.6048625Z 
2025-08-17T02:55:28.6048885Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T02:55:28.6049296Z 
2025-08-17T02:55:28.6049519Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T02:55:28.6049891Z 
2025-08-17T02:55:28.6050081Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T02:55:28.6050431Z 
2025-08-17T02:55:28.6050650Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T02:55:28.6051022Z 
2025-08-17T02:55:28.6051221Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T02:55:28.6051568Z 
2025-08-17T02:55:28.6051987Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T02:55:28.6052384Z 
2025-08-17T02:55:28.6052595Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T02:55:28.6052958Z 
2025-08-17T02:55:28.6053183Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T02:55:28.6053564Z 
2025-08-17T02:55:28.6053757Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T02:55:28.6054102Z 
2025-08-17T02:55:28.6054335Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T02:55:28.6055063Z 
2025-08-17T02:55:28.6055260Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T02:55:28.6055613Z 
2025-08-17T02:55:28.6055849Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T02:55:28.6056239Z 
2025-08-17T02:55:28.6056439Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T02:55:28.6056815Z 
2025-08-17T02:55:28.6057014Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T02:55:28.6057370Z 
2025-08-17T02:55:28.6057544Z # api.migrations.versions.0001\_baseline
2025-08-17T02:55:28.6057863Z 
2025-08-17T02:55:28.6058020Z <a id="api.migrations.versions"></a>
2025-08-17T02:55:28.6058377Z 
2025-08-17T02:55:28.6058523Z # api.migrations.versions
2025-08-17T02:55:28.6058763Z 
2025-08-17T02:55:28.6058904Z <a id="api.migrations"></a>
2025-08-17T02:55:28.6059155Z 
2025-08-17T02:55:28.6059274Z # api.migrations
2025-08-17T02:55:28.6059464Z 
2025-08-17T02:55:28.6059592Z <a id="api.db"></a>
2025-08-17T02:55:28.6059791Z 
2025-08-17T02:55:28.6059905Z # api.db
2025-08-17T02:55:28.6060061Z 
2025-08-17T02:55:28.6060211Z <a id="api.routes.stats"></a>
2025-08-17T02:55:28.6060464Z 
2025-08-17T02:55:28.6060587Z # api.routes.stats
2025-08-17T02:55:28.6060790Z 
2025-08-17T02:55:28.6060944Z <a id="api.routes.stats.kpi"></a>
2025-08-17T02:55:28.6061224Z 
2025-08-17T02:55:28.6061341Z #### kpi
2025-08-17T02:55:28.6061500Z 
2025-08-17T02:55:28.6061611Z ```python
2025-08-17T02:55:28.6062094Z @router.get("/stats/kpi")
2025-08-17T02:55:28.6062490Z def kpi() -> List[Dict[str, int]]
2025-08-17T02:55:28.6062873Z ```
2025-08-17T02:55:28.6063024Z 
2025-08-17T02:55:28.6063167Z Return KPI metrics (mock).
2025-08-17T02:55:28.6063424Z 
2025-08-17T02:55:28.6063602Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T02:55:28.6063932Z 
2025-08-17T02:55:28.6064052Z #### roi\_by\_vendor
2025-08-17T02:55:28.6064262Z 
2025-08-17T02:55:28.6064374Z ```python
2025-08-17T02:55:28.6064684Z @router.get("/stats/roi_by_vendor")
2025-08-17T02:55:28.6065351Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T02:55:28.6065786Z ```
2025-08-17T02:55:28.6065937Z 
2025-08-17T02:55:28.6066079Z Return ROI percent by vendor.
2025-08-17T02:55:28.6066342Z 
2025-08-17T02:55:28.6066500Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T02:55:28.6066815Z 
2025-08-17T02:55:28.6066930Z #### roi\_trend
2025-08-17T02:55:28.6067118Z 
2025-08-17T02:55:28.6067226Z ```python
2025-08-17T02:55:28.6067520Z @router.get("/stats/roi_trend")
2025-08-17T02:55:28.6067946Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T02:55:28.6068376Z ```
2025-08-17T02:55:28.6068519Z 
2025-08-17T02:55:28.6068649Z Return 30-day ROI trend.
2025-08-17T02:55:28.6068889Z 
2025-08-17T02:55:28.6069028Z <a id="api.routes.roi"></a>
2025-08-17T02:55:28.6069269Z 
2025-08-17T02:55:28.6069389Z # api.routes.roi
2025-08-17T02:55:28.6069609Z 
2025-08-17T02:55:28.6069753Z <a id="api.routes.health"></a>
2025-08-17T02:55:28.6070063Z 
2025-08-17T02:55:28.6070187Z # api.routes.health
2025-08-17T02:55:28.6070397Z 
2025-08-17T02:55:28.6070571Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T02:55:28.6070877Z 
2025-08-17T02:55:28.6070990Z #### MAX\_SKEW
2025-08-17T02:55:28.6071167Z 
2025-08-17T02:55:28.6071281Z seconds
2025-08-17T02:55:28.6071435Z 
2025-08-17T02:55:28.6071595Z <a id="api.routes.health.health"></a>
2025-08-17T02:55:28.6072101Z 
2025-08-17T02:55:28.6072215Z #### health
2025-08-17T02:55:28.6072383Z 
2025-08-17T02:55:28.6072495Z ```python
2025-08-17T02:55:28.6072852Z @router.get("/health", include_in_schema=False)
2025-08-17T02:55:28.6073556Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T02:55:28.6074185Z ```
2025-08-17T02:55:28.6074333Z 
2025-08-17T02:55:28.6074549Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T02:55:28.6074918Z 
2025-08-17T02:55:28.6075073Z <a id="api.routes.repository"></a>
2025-08-17T02:55:28.6075375Z 
2025-08-17T02:55:28.6075514Z # api.routes.repository
2025-08-17T02:55:28.6075742Z 
2025-08-17T02:55:28.6075888Z <a id="api.routes"></a>
2025-08-17T02:55:28.6076374Z 
2025-08-17T02:55:28.6076490Z # api.routes
2025-08-17T02:55:28.6076665Z 
2025-08-17T02:55:28.6076809Z <a id="api.models.fee"></a>
2025-08-17T02:55:28.6077054Z 
2025-08-17T02:55:28.6077171Z # api.models.fee
2025-08-17T02:55:28.6077370Z 
2025-08-17T02:55:28.6077501Z <a id="api.models"></a>
2025-08-17T02:55:28.6077720Z 
2025-08-17T02:55:28.6077833Z # api.models
2025-08-17T02:55:28.6078016Z 
2025-08-17T02:55:28.6078158Z <a id="api.roi_repository"></a>
2025-08-17T02:55:28.6078424Z 
2025-08-17T02:55:28.6078557Z # api.roi\_repository
2025-08-17T02:55:28.6078753Z 
2025-08-17T02:55:28.6078869Z <a id="api.main"></a>
2025-08-17T02:55:28.6079069Z 
2025-08-17T02:55:28.6079171Z # api.main
2025-08-17T02:55:28.6079323Z 
2025-08-17T02:55:28.6079448Z <a id="api.main.ready"></a>
2025-08-17T02:55:28.6079690Z 
2025-08-17T02:55:28.6079798Z #### ready
2025-08-17T02:55:28.6079959Z 
2025-08-17T02:55:28.6080076Z ```python
2025-08-17T02:55:28.6080538Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T02:55:28.6081351Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T02:55:28.6082165Z                                                                       str]
2025-08-17T02:55:28.6082599Z ```
2025-08-17T02:55:28.6082752Z 
2025-08-17T02:55:28.6082931Z Return 200 only when migrations are at head.
2025-08-17T02:55:28.6083266Z 
2025-08-17T02:55:28.6083406Z <a id="api.config"></a>
2025-08-17T02:55:28.6083633Z 
2025-08-17T02:55:28.6083760Z # api.config
2025-08-17T02:55:28.6083938Z 
2025-08-17T02:55:28.6084056Z <a id="etl"></a>
2025-08-17T02:55:28.6084242Z 
2025-08-17T02:55:28.6084354Z # etl
2025-08-17T02:55:28.6084508Z 
2025-08-17T02:55:28.6084652Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T02:55:28.6084941Z 
2025-08-17T02:55:28.6085071Z # etl.fba\_fee\_ingestor
2025-08-17T02:55:28.6085292Z 
2025-08-17T02:55:28.6085446Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T02:55:28.6085722Z 
2025-08-17T02:55:28.6085854Z # etl.sp\_fees\_ingestor
2025-08-17T02:55:28.6086311Z 
2025-08-17T02:55:28.6086467Z <a id="etl.keepa_ingestor"></a>
2025-08-17T02:55:28.6086732Z 
2025-08-17T02:55:28.6086858Z # etl.keepa\_ingestor
2025-08-17T02:55:28.6087078Z 
2025-08-17T02:55:28.6087197Z <a id="etl.db"></a>
2025-08-17T02:55:28.6087389Z 
2025-08-17T02:55:28.6087496Z # etl.db
2025-08-17T02:55:28.6087666Z 
2025-08-17T02:55:28.6087853Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T02:55:28.6088196Z 
2025-08-17T02:55:28.6088364Z # etl.dialects.amazon\_reimbursements
2025-08-17T02:55:28.6088664Z 
2025-08-17T02:55:28.6088828Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T02:55:28.6089151Z 
2025-08-17T02:55:28.6089305Z # etl.dialects.amazon\_returns
2025-08-17T02:55:28.6089572Z 
2025-08-17T02:55:28.6089710Z <a id="etl.dialects"></a>
2025-08-17T02:55:28.6089955Z 
2025-08-17T02:55:28.6090069Z # etl.dialects
2025-08-17T02:55:28.6090256Z 
2025-08-17T02:55:28.6090377Z <a id="ingest"></a>
2025-08-17T02:55:28.6090573Z 
2025-08-17T02:55:28.6090696Z # ingest
2025-08-17T02:55:28.6090858Z 
2025-08-17T02:55:28.6091007Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T02:55:28.6091309Z 
2025-08-17T02:55:28.6091447Z # ingest.tests.test\_smoke
2025-08-17T02:55:28.6091684Z 
2025-08-17T02:55:28.6092001Z <a id="ingest.tests"></a>
2025-08-17T02:55:28.6092241Z 
2025-08-17T02:55:28.6092357Z # ingest.tests
2025-08-17T02:55:28.6092535Z 
2025-08-17T02:55:28.6092700Z <a id="ingest.upload_router"></a>
2025-08-17T02:55:28.6092987Z 
2025-08-17T02:55:28.6093122Z # ingest.upload\_router
2025-08-17T02:55:28.6093343Z 
2025-08-17T02:55:28.6093503Z <a id="ingest.email_watcher"></a>
2025-08-17T02:55:28.6093772Z 
2025-08-17T02:55:28.6093899Z # ingest.email\_watcher
2025-08-17T02:55:28.6094120Z 
2025-08-17T02:55:28.6094272Z <a id="ingest.email_watcher.main"></a>
2025-08-17T02:55:28.6094570Z 
2025-08-17T02:55:28.6094679Z #### main
2025-08-17T02:55:28.6094852Z 
2025-08-17T02:55:28.6094968Z ```python
2025-08-17T02:55:28.6095275Z def main() -> dict[str, str]
2025-08-17T02:55:28.6095641Z ```
2025-08-17T02:55:28.6095788Z 
2025-08-17T02:55:28.6096278Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T02:55:28.6096701Z 
2025-08-17T02:55:28.6096941Z Returns {"status": "success"} when processing completes.
2025-08-17T02:55:28.6097342Z 
2025-08-17T02:55:28.6097491Z <a id="ingest.ingest_router"></a>
2025-08-17T02:55:28.6097768Z 
2025-08-17T02:55:28.6097907Z # ingest.ingest\_router
2025-08-17T02:55:28.6098125Z 
2025-08-17T02:55:28.6098259Z <a id="logistics_etl"></a>
2025-08-17T02:55:28.6098494Z 
2025-08-17T02:55:28.6098622Z # logistics\_etl
2025-08-17T02:55:28.6098813Z 
2025-08-17T02:55:28.6098948Z Daily logistics ETL job.
2025-08-17T02:55:28.6099180Z 
2025-08-17T02:55:28.6099322Z <a id="logistics_etl.__main__"></a>
2025-08-17T02:55:28.6099607Z 
2025-08-17T02:55:28.6099741Z # logistics\_etl.\_\_main\_\_
2025-08-17T02:55:28.6099998Z 
2025-08-17T02:55:28.6100134Z <a id="logistics_etl.dsn"></a>
2025-08-17T02:55:28.6100390Z 
2025-08-17T02:55:28.6100517Z # logistics\_etl.dsn
2025-08-17T02:55:28.6100729Z 
2025-08-17T02:55:28.6100946Z Local DSN builder to avoid cross-service dependency.
2025-08-17T02:55:28.6101324Z 
2025-08-17T02:55:28.6101484Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T02:55:28.6102034Z 
2025-08-17T02:55:28.6102155Z #### build\_dsn
2025-08-17T02:55:28.6102351Z 
2025-08-17T02:55:28.6102461Z ```python
2025-08-17T02:55:28.6102781Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:55:28.6103181Z ```
2025-08-17T02:55:28.6103330Z 
2025-08-17T02:55:28.6103605Z Return a Postgres DSN assembled from environment variables.
2025-08-17T02:55:28.6104028Z 
2025-08-17T02:55:28.6104305Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T02:55:28.6105038Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T02:55:28.6105675Z error when any required variable is missing.
2025-08-17T02:55:28.6106017Z 
2025-08-17T02:55:28.6106183Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T02:55:28.6106501Z 
2025-08-17T02:55:28.6106881Z # logistics\_etl.tests.conftest
2025-08-17T02:55:28.6107164Z 
2025-08-17T02:55:28.6107354Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T02:55:28.6107702Z 
2025-08-17T02:55:28.6107863Z # logistics\_etl.tests.test\_repository
2025-08-17T02:55:28.6108173Z 
2025-08-17T02:55:28.6108342Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T02:55:28.6108666Z 
2025-08-17T02:55:28.6108810Z # logistics\_etl.tests.test\_cron
2025-08-17T02:55:28.6109086Z 
2025-08-17T02:55:28.6109270Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T02:55:28.6109600Z 
2025-08-17T02:55:28.6109749Z # logistics\_etl.tests.test\_imports
2025-08-17T02:55:28.6110046Z 
2025-08-17T02:55:28.6110213Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T02:55:28.6110532Z 
2025-08-17T02:55:28.6110684Z # logistics\_etl.tests.test\_smoke
2025-08-17T02:55:28.6110976Z 
2025-08-17T02:55:28.6111148Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T02:55:28.6111464Z 
2025-08-17T02:55:28.6111620Z # logistics\_etl.tests.test\_client
2025-08-17T02:55:28.6112097Z 
2025-08-17T02:55:28.6112246Z <a id="logistics_etl.tests"></a>
2025-08-17T02:55:28.6112522Z 
2025-08-17T02:55:28.6112651Z # logistics\_etl.tests
2025-08-17T02:55:28.6112868Z 
2025-08-17T02:55:28.6113008Z <a id="logistics_etl.flow"></a>
2025-08-17T02:55:28.6113272Z 
2025-08-17T02:55:28.6113398Z # logistics\_etl.flow
2025-08-17T02:55:28.6113609Z 
2025-08-17T02:55:28.6113766Z <a id="logistics_etl.client"></a>
2025-08-17T02:55:28.6114044Z 
2025-08-17T02:55:28.6114179Z # logistics\_etl.client
2025-08-17T02:55:28.6114415Z 
2025-08-17T02:55:28.6114555Z <a id="logistics_etl.cron"></a>
2025-08-17T02:55:28.6114812Z 
2025-08-17T02:55:28.6114938Z # logistics\_etl.cron
2025-08-17T02:55:28.6115155Z 
2025-08-17T02:55:28.6115296Z <a id="logistics_etl.db"></a>
2025-08-17T02:55:28.6115556Z 
2025-08-17T02:55:28.6115684Z # logistics\_etl.db
2025-08-17T02:55:28.6115877Z 
2025-08-17T02:55:28.6116037Z <a id="logistics_etl.repository"></a>
2025-08-17T02:55:28.6116345Z 
2025-08-17T02:55:28.6116496Z # logistics\_etl.repository
2025-08-17T02:55:28.6116958Z 
2025-08-17T02:55:28.6117088Z <a id="alert_bot"></a>
2025-08-17T02:55:28.6117314Z 
2025-08-17T02:55:28.6117428Z # alert\_bot
2025-08-17T02:55:28.6117603Z 
2025-08-17T02:55:28.6117765Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T02:55:28.6118068Z 
2025-08-17T02:55:28.6118209Z # alert\_bot.tests.test\_smoke
2025-08-17T02:55:28.6118463Z 
2025-08-17T02:55:28.6118607Z <a id="alert_bot.tests"></a>
2025-08-17T02:55:28.6118857Z 
2025-08-17T02:55:28.6118975Z # alert\_bot.tests
2025-08-17T02:55:28.6119177Z 
2025-08-17T02:55:28.6119321Z <a id="alert_bot.alert_bot"></a>
2025-08-17T02:55:28.6119586Z 
2025-08-17T02:55:28.6119724Z # alert\_bot.alert\_bot
2025-08-17T02:55:28.6119944Z 
2025-08-17T02:55:28.6120074Z <a id="alert_bot.rules"></a>
2025-08-17T02:55:28.6120317Z 
2025-08-17T02:55:28.6120447Z # alert\_bot.rules
2025-08-17T02:55:28.6120639Z 
2025-08-17T02:55:28.6120758Z <a id="common"></a>
2025-08-17T02:55:28.6120953Z 
2025-08-17T02:55:28.6121059Z # common
2025-08-17T02:55:28.6121224Z 
2025-08-17T02:55:28.6121358Z <a id="common.dsn"></a>
2025-08-17T02:55:28.6121581Z 
2025-08-17T02:55:28.6121855Z # common.dsn
2025-08-17T02:55:28.6122034Z 
2025-08-17T02:55:28.6122193Z <a id="common.dsn.build_dsn"></a>
2025-08-17T02:55:28.6122466Z 
2025-08-17T02:55:28.6122577Z #### build\_dsn
2025-08-17T02:55:28.6122762Z 
2025-08-17T02:55:28.6122872Z ```python
2025-08-17T02:55:28.6123188Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:55:28.6123620Z ```
2025-08-17T02:55:28.6123779Z 
2025-08-17T02:55:28.6124004Z Return a Postgres DSN, validating required variables.
2025-08-17T02:55:28.6124392Z 
2025-08-17T02:55:28.6124749Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T02:55:28.6125564Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T02:55:28.6126340Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T02:55:28.6126911Z missing.
2025-08-17T02:55:28.6127313Z 
2025-08-17T02:55:28.6127464Z <a id="common.models_vendor"></a>
2025-08-17T02:55:28.6127752Z 
2025-08-17T02:55:28.6127889Z # common.models\_vendor
2025-08-17T02:55:28.6128112Z 
2025-08-17T02:55:28.6128272Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T02:55:28.6128583Z 
2025-08-17T02:55:28.6128708Z ## Vendor Objects
2025-08-17T02:55:28.6128898Z 
2025-08-17T02:55:28.6129010Z ```python
2025-08-17T02:55:28.6129289Z class Vendor(Base)
2025-08-17T02:55:28.6129578Z ```
2025-08-17T02:55:28.6129728Z 
2025-08-17T02:55:28.6129867Z Vendor of inventory items.
2025-08-17T02:55:28.6130108Z 
2025-08-17T02:55:28.6130294Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T02:55:28.6130629Z 
2025-08-17T02:55:28.6130761Z ## VendorPrice Objects
2025-08-17T02:55:28.6130976Z 
2025-08-17T02:55:28.6131095Z ```python
2025-08-17T02:55:28.6131382Z class VendorPrice(Base)
2025-08-17T02:55:28.6131872Z ```
2025-08-17T02:55:28.6132030Z 
2025-08-17T02:55:28.6132219Z Association table linking vendors to pricing.
2025-08-17T02:55:28.6132575Z 
2025-08-17T02:55:28.6132718Z <a id="common.db_url"></a>
2025-08-17T02:55:28.6132960Z 
2025-08-17T02:55:28.6133086Z # common.db\_url
2025-08-17T02:55:28.6133280Z 
2025-08-17T02:55:28.6133431Z <a id="common.db_url.build_url"></a>
2025-08-17T02:55:28.6133736Z 
2025-08-17T02:55:28.6133853Z #### build\_url
2025-08-17T02:55:28.6134038Z 
2025-08-17T02:55:28.6134148Z ```python
2025-08-17T02:55:28.6134471Z def build_url(async_: bool = True) -> str
2025-08-17T02:55:28.6134880Z ```
2025-08-17T02:55:28.6135034Z 
2025-08-17T02:55:28.6135213Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:55:28.6135539Z 
2025-08-17T02:55:28.6135683Z <a id="common.keepa"></a>
2025-08-17T02:55:28.6135917Z 
2025-08-17T02:55:28.6136033Z # common.keepa
2025-08-17T02:55:28.6136224Z 
2025-08-17T02:55:28.6136353Z <a id="common.llm"></a>
2025-08-17T02:55:28.6136576Z 
2025-08-17T02:55:28.6136687Z # common.llm
2025-08-17T02:55:28.6136866Z 
2025-08-17T02:55:28.6137006Z <a id="common.settings"></a>
2025-08-17T02:55:28.6137268Z 
2025-08-17T02:55:28.6137394Z # common.settings
2025-08-17T02:55:28.6137806Z 
2025-08-17T02:55:28.6137935Z <a id="common.db"></a>
2025-08-17T02:55:28.6138140Z 
2025-08-17T02:55:28.6138248Z # common.db
2025-08-17T02:55:28.6138404Z 
2025-08-17T02:55:28.6138554Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T02:55:28.6138863Z 
2025-08-17T02:55:28.6138994Z #### build\_sqlalchemy\_url
2025-08-17T02:55:28.6139235Z 
2025-08-17T02:55:28.6139352Z ```python
2025-08-17T02:55:28.6139652Z def build_sqlalchemy_url() -> str
2025-08-17T02:55:28.6140028Z ```
2025-08-17T02:55:28.6140176Z 
2025-08-17T02:55:28.6140346Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:55:28.6140673Z 
2025-08-17T02:55:28.6140831Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T02:55:28.6141136Z 
2025-08-17T02:55:28.6141265Z #### build\_asyncpg\_dsn
2025-08-17T02:55:28.6141497Z 
2025-08-17T02:55:28.6141607Z ```python
2025-08-17T02:55:28.6142131Z def build_asyncpg_dsn() -> str
2025-08-17T02:55:28.6142496Z ```
2025-08-17T02:55:28.6142654Z 
2025-08-17T02:55:28.6142896Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:55:28.6143296Z 
2025-08-17T02:55:28.6143441Z <a id="common.db.refresh_mvs"></a>
2025-08-17T02:55:28.6143730Z 
2025-08-17T02:55:28.6143842Z #### refresh\_mvs
2025-08-17T02:55:28.6144026Z 
2025-08-17T02:55:28.6144135Z ```python
2025-08-17T02:55:28.6144466Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:55:28.6144890Z ```
2025-08-17T02:55:28.6145019Z 
2025-08-17T02:55:28.6145248Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:55:28.6145626Z 
2025-08-17T02:55:28.6145770Z <a id="common.config"></a>
2025-08-17T02:55:28.6145992Z 
2025-08-17T02:55:28.6146105Z # common.config
2025-08-17T02:55:28.6146293Z 
2025-08-17T02:55:28.6146424Z <a id="common.base"></a>
2025-08-17T02:55:28.6146637Z 
2025-08-17T02:55:28.6146733Z # common.base
2025-08-17T02:55:28.6146890Z 
2025-08-17T02:55:28.6147005Z <a id="common.base.Base"></a>
2025-08-17T02:55:28.6147225Z 
2025-08-17T02:55:28.6147537Z ## Base Objects
2025-08-17T02:55:28.6147706Z 
2025-08-17T02:55:28.6147803Z ```python
2025-08-17T02:55:28.6148056Z class Base(DeclarativeBase)
2025-08-17T02:55:28.6148342Z ```
2025-08-17T02:55:28.6148464Z 
2025-08-17T02:55:28.6148586Z Base class for SQLAlchemy models.
2025-08-17T02:55:28.6148813Z 
2025-08-17T02:55:28.6148919Z <a id="repricer"></a>
2025-08-17T02:55:28.6149089Z 
2025-08-17T02:55:28.6149180Z # repricer
2025-08-17T02:55:28.6149316Z 
2025-08-17T02:55:28.6149446Z <a id="repricer.app.schemas"></a>
2025-08-17T02:55:28.6149674Z 
2025-08-17T02:55:28.6149784Z # repricer.app.schemas
2025-08-17T02:55:28.6149972Z 
2025-08-17T02:55:28.6150094Z <a id="repricer.app.deps"></a>
2025-08-17T02:55:28.6150307Z 
2025-08-17T02:55:28.6150411Z # repricer.app.deps
2025-08-17T02:55:28.6150593Z 
2025-08-17T02:55:28.6150773Z Placeholder module for Keepa / SP-API clients.
2025-08-17T02:55:28.6151065Z 
2025-08-17T02:55:28.6151192Z <a id="repricer.app.logic"></a>
2025-08-17T02:55:28.6151412Z 
2025-08-17T02:55:28.6151528Z # repricer.app.logic
2025-08-17T02:55:28.6151889Z 
2025-08-17T02:55:28.6152047Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T02:55:28.6152320Z 
2025-08-17T02:55:28.6152415Z #### MIN\_MARGIN
2025-08-17T02:55:28.6152573Z 
2025-08-17T02:55:28.6152659Z 15 % ROI
2025-08-17T02:55:28.6152784Z 
2025-08-17T02:55:28.6152941Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T02:55:28.6153224Z 
2025-08-17T02:55:28.6153402Z #### compute\_price
2025-08-17T02:55:28.6153570Z 
2025-08-17T02:55:28.6153664Z ```python
2025-08-17T02:55:28.6154026Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T02:55:28.6154493Z ```
2025-08-17T02:55:28.6154611Z 
2025-08-17T02:55:28.6154775Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T02:55:28.6155182Z Replace with real competitive logic later.
2025-08-17T02:55:28.6155440Z 
2025-08-17T02:55:28.6155564Z <a id="repricer.app.main"></a>
2025-08-17T02:55:28.6155777Z 
2025-08-17T02:55:28.6155879Z # repricer.app.main
2025-08-17T02:55:28.6156054Z 
2025-08-17T02:55:28.6156343Z <a id="repricer.app"></a>
2025-08-17T02:55:28.6156538Z 
2025-08-17T02:55:28.6156634Z # repricer.app
2025-08-17T02:55:28.6156783Z 
2025-08-17T02:55:28.6156913Z <a id="repricer.tests.test_imports"></a>
2025-08-17T02:55:28.6157165Z 
2025-08-17T02:55:28.6157285Z # repricer.tests.test\_imports
2025-08-17T02:55:28.6157495Z 
2025-08-17T02:55:28.6157622Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T02:55:28.6157875Z 
2025-08-17T02:55:28.6157998Z # repricer.tests.test\_smoke
2025-08-17T02:55:28.6158267Z 
2025-08-17T02:55:28.6158386Z <a id="repricer.tests"></a>
2025-08-17T02:55:28.6158600Z 
2025-08-17T02:55:28.6158704Z # repricer.tests
2025-08-17T02:55:28.6158870Z 
2025-08-17T02:55:28.6158972Z <a id="db"></a>
2025-08-17T02:55:28.6159125Z 
2025-08-17T02:55:28.6159209Z # db
2025-08-17T02:55:28.6159333Z 
2025-08-17T02:55:28.6159454Z <a id="db.utils.views"></a>
2025-08-17T02:55:28.6159660Z 
2025-08-17T02:55:28.6159760Z # db.utils.views
2025-08-17T02:55:28.6159919Z 
2025-08-17T02:55:28.6160068Z <a id="db.utils.views.replace_view"></a>
2025-08-17T02:55:28.6160340Z 
2025-08-17T02:55:28.6160447Z #### replace\_view
2025-08-17T02:55:28.6160607Z 
2025-08-17T02:55:28.6160702Z ```python
2025-08-17T02:55:28.6160997Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T02:55:28.6161384Z ```
2025-08-17T02:55:28.6161509Z 
2025-08-17T02:55:28.6161647Z Drop and recreate a SQL view atomically.
2025-08-17T02:55:28.6162062Z 
2025-08-17T02:55:28.6162171Z <a id="db.utils"></a>
2025-08-17T02:55:28.6162351Z 
2025-08-17T02:55:28.6162444Z # db.utils
2025-08-17T02:55:28.6162581Z 
2025-08-17T02:55:28.6162702Z <a id="price_importer"></a>
2025-08-17T02:55:28.6162909Z 
2025-08-17T02:55:28.6163011Z # price\_importer
2025-08-17T02:55:28.6163172Z 
2025-08-17T02:55:28.6163332Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T02:55:28.6163617Z 
2025-08-17T02:55:28.6163760Z # price\_importer.services\_common.dsn
2025-08-17T02:55:28.6164021Z 
2025-08-17T02:55:28.6164208Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T02:55:28.6164708Z 
2025-08-17T02:55:28.6164812Z #### build\_dsn
2025-08-17T02:55:28.6164965Z 
2025-08-17T02:55:28.6165057Z ```python
2025-08-17T02:55:28.6165323Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:55:28.6165658Z ```
2025-08-17T02:55:28.6165790Z 
2025-08-17T02:55:28.6165890Z Return safe DSN.
2025-08-17T02:55:28.6166049Z 
2025-08-17T02:55:28.6166479Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T02:55:28.6166809Z 
2025-08-17T02:55:28.6167005Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T02:55:28.6167332Z 
2025-08-17T02:55:28.6167511Z # price\_importer.services\_common.models\_vendor
2025-08-17T02:55:28.6167821Z 
2025-08-17T02:55:28.6167984Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T02:55:28.6168290Z 
2025-08-17T02:55:28.6168432Z # price\_importer.services\_common.db\_url
2025-08-17T02:55:28.6168697Z 
2025-08-17T02:55:28.6168901Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T02:55:28.6169260Z 
2025-08-17T02:55:28.6169367Z #### build\_url
2025-08-17T02:55:28.6169520Z 
2025-08-17T02:55:28.6169619Z ```python
2025-08-17T02:55:28.6169889Z def build_url(async_: bool = True) -> str
2025-08-17T02:55:28.6170243Z ```
2025-08-17T02:55:28.6170369Z 
2025-08-17T02:55:28.6170516Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:55:28.6170803Z 
2025-08-17T02:55:28.6170970Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T02:55:28.6171266Z 
2025-08-17T02:55:28.6171414Z # price\_importer.services\_common.keepa
2025-08-17T02:55:28.6171683Z 
2025-08-17T02:55:28.6172272Z <a id="price_importer.services_common.llm"></a>
2025-08-17T02:55:28.6172609Z 
2025-08-17T02:55:28.6172755Z # price\_importer.services\_common.llm
2025-08-17T02:55:28.6172981Z 
2025-08-17T02:55:28.6173141Z <a id="price_importer.services_common.settings"></a>
2025-08-17T02:55:28.6173398Z 
2025-08-17T02:55:28.6173524Z # price\_importer.services\_common.settings
2025-08-17T02:55:28.6173745Z 
2025-08-17T02:55:28.6173895Z <a id="price_importer.services_common.db"></a>
2025-08-17T02:55:28.6174350Z 
2025-08-17T02:55:28.6174464Z # price\_importer.services\_common.db
2025-08-17T02:55:28.6174663Z 
2025-08-17T02:55:28.6174862Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T02:55:28.6175155Z 
2025-08-17T02:55:28.6175251Z #### build\_sqlalchemy\_url
2025-08-17T02:55:28.6175423Z 
2025-08-17T02:55:28.6175503Z ```python
2025-08-17T02:55:28.6175727Z def build_sqlalchemy_url() -> str
2025-08-17T02:55:28.6175977Z ```
2025-08-17T02:55:28.6176077Z 
2025-08-17T02:55:28.6176201Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:55:28.6176418Z 
2025-08-17T02:55:28.6176592Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T02:55:28.6176881Z 
2025-08-17T02:55:28.6176973Z #### build\_asyncpg\_dsn
2025-08-17T02:55:28.6177126Z 
2025-08-17T02:55:28.6177203Z ```python
2025-08-17T02:55:28.6177418Z def build_asyncpg_dsn() -> str
2025-08-17T02:55:28.6177662Z ```
2025-08-17T02:55:28.6177769Z 
2025-08-17T02:55:28.6177931Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:55:28.6178192Z 
2025-08-17T02:55:28.6178356Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T02:55:28.6178609Z 
2025-08-17T02:55:28.6178688Z #### refresh\_mvs
2025-08-17T02:55:28.6178824Z 
2025-08-17T02:55:28.6178899Z ```python
2025-08-17T02:55:28.6179142Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:55:28.6179447Z ```
2025-08-17T02:55:28.6179546Z 
2025-08-17T02:55:28.6179717Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:55:28.6179976Z 
2025-08-17T02:55:28.6180092Z <a id="price_importer.services_common"></a>
2025-08-17T02:55:28.6180308Z 
2025-08-17T02:55:28.6180413Z # price\_importer.services\_common
2025-08-17T02:55:28.6180601Z 
2025-08-17T02:55:28.6180725Z <a id="price_importer.services_common.base"></a>
2025-08-17T02:55:28.6180954Z 
2025-08-17T02:55:28.6181065Z # price\_importer.services\_common.base
2025-08-17T02:55:28.6181416Z 
2025-08-17T02:55:28.6181532Z <a id="price_importer.normaliser"></a>
2025-08-17T02:55:28.6181890Z 
2025-08-17T02:55:28.6181995Z # price\_importer.normaliser
2025-08-17T02:55:28.6182171Z 
2025-08-17T02:55:28.6182299Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T02:55:28.6182522Z 
2025-08-17T02:55:28.6182628Z # price\_importer.common.models\_vendor
2025-08-17T02:55:28.6182829Z 
2025-08-17T02:55:28.6182940Z <a id="price_importer.common.db_url"></a>
2025-08-17T02:55:28.6183145Z 
2025-08-17T02:55:28.6183253Z # price\_importer.common.db\_url
2025-08-17T02:55:28.6183434Z 
2025-08-17T02:55:28.6183562Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T02:55:28.6183790Z 
2025-08-17T02:55:28.6183855Z #### make\_dsn
2025-08-17T02:55:28.6183952Z 
2025-08-17T02:55:28.6184012Z ```python
2025-08-17T02:55:28.6184186Z def make_dsn(async_: bool = False) -> str
2025-08-17T02:55:28.6184404Z ```
2025-08-17T02:55:28.6184490Z 
2025-08-17T02:55:28.6184607Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T02:55:28.6184810Z 
2025-08-17T02:55:28.6184926Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T02:55:28.6185115Z 
2025-08-17T02:55:28.6185178Z #### build\_url
2025-08-17T02:55:28.6185282Z 
2025-08-17T02:55:28.6185342Z ```python
2025-08-17T02:55:28.6185513Z def build_url(async_: bool = False) -> str
2025-08-17T02:55:28.6185739Z ```
2025-08-17T02:55:28.6185818Z 
2025-08-17T02:55:28.6185940Z Return Postgres DSN built from environment variables.
2025-08-17T02:55:28.6186140Z 
2025-08-17T02:55:28.6186224Z <a id="price_importer.common"></a>
2025-08-17T02:55:28.6186378Z 
2025-08-17T02:55:28.6186460Z # price\_importer.common
2025-08-17T02:55:28.6186586Z 
2025-08-17T02:55:28.6186675Z <a id="price_importer.common.base"></a>
2025-08-17T02:55:28.6186844Z 
2025-08-17T02:55:28.6186928Z # price\_importer.common.base
2025-08-17T02:55:28.6187070Z 
2025-08-17T02:55:28.6187171Z <a id="price_importer.tests.conftest"></a>
2025-08-17T02:55:28.6187343Z 
2025-08-17T02:55:28.6187427Z # price\_importer.tests.conftest
2025-08-17T02:55:28.6187706Z 
2025-08-17T02:55:28.6187810Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T02:55:28.6187987Z 
2025-08-17T02:55:28.6188073Z # price\_importer.tests.test\_reader
2025-08-17T02:55:28.6188235Z 
2025-08-17T02:55:28.6188331Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T02:55:28.6188511Z 
2025-08-17T02:55:28.6188602Z # price\_importer.tests.test\_imports
2025-08-17T02:55:28.6188761Z 
2025-08-17T02:55:28.6188854Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T02:55:28.6189025Z 
2025-08-17T02:55:28.6189115Z # price\_importer.tests.test\_smoke
2025-08-17T02:55:28.6189269Z 
2025-08-17T02:55:28.6189372Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T02:55:28.6189563Z 
2025-08-17T02:55:28.6189653Z # price\_importer.tests.test\_normaliser
2025-08-17T02:55:28.6189819Z 
2025-08-17T02:55:28.6189905Z <a id="price_importer.tests"></a>
2025-08-17T02:55:28.6190056Z 
2025-08-17T02:55:28.6190130Z # price\_importer.tests
2025-08-17T02:55:28.6190256Z 
2025-08-17T02:55:28.6190354Z <a id="price_importer.reader"></a>
2025-08-17T02:55:28.6190504Z 
2025-08-17T02:55:28.6190578Z # price\_importer.reader
2025-08-17T02:55:28.6190708Z 
2025-08-17T02:55:28.6190802Z <a id="price_importer.reader.load_file"></a>
2025-08-17T02:55:28.6190973Z 
2025-08-17T02:55:28.6191042Z #### load\_file
2025-08-17T02:55:28.6191142Z 
2025-08-17T02:55:28.6191202Z ```python
2025-08-17T02:55:28.6191379Z def load_file(path: str | Path) -> Any
2025-08-17T02:55:28.6191597Z ```
2025-08-17T02:55:28.6191685Z 
2025-08-17T02:55:28.6191877Z Return DataFrame from CSV or Excel file.
2025-08-17T02:55:28.6192048Z 
2025-08-17T02:55:28.6192152Z Raises RuntimeError if pandas is unavailable.
2025-08-17T02:55:28.6192340Z 
2025-08-17T02:55:28.6192428Z <a id="price_importer.repository"></a>
2025-08-17T02:55:28.6192592Z 
2025-08-17T02:55:28.6192680Z # price\_importer.repository
2025-08-17T02:55:28.6192822Z 
2025-08-17T02:55:28.6192906Z <a id="price_importer.import"></a>
2025-08-17T02:55:28.6193063Z 
2025-08-17T02:55:28.6193260Z # price\_importer.import
2025-08-17T02:55:28.6193394Z 
2025-08-17T02:55:28.6193463Z <a id="fees_h10"></a>
2025-08-17T02:55:28.6193583Z 
2025-08-17T02:55:28.6193647Z # fees\_h10
2025-08-17T02:55:28.6193742Z 
2025-08-17T02:55:28.6193828Z <a id="fees_h10.worker"></a>
2025-08-17T02:55:28.6193963Z 
2025-08-17T02:55:28.6194031Z # fees\_h10.worker
2025-08-17T02:55:28.6194137Z 
2025-08-17T02:55:28.6194239Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T02:55:28.6194417Z 
2025-08-17T02:55:28.6194489Z #### list\_active\_asins
2025-08-17T02:55:28.6194615Z 
2025-08-17T02:55:28.6194677Z ```python
2025-08-17T02:55:28.6194844Z def list_active_asins() -> list[str]
2025-08-17T02:55:28.6195056Z ```
2025-08-17T02:55:28.6195136Z 
2025-08-17T02:55:28.6195250Z Return known ASINs or an empty list if unavailable.
2025-08-17T02:55:28.6195443Z 
2025-08-17T02:55:28.6195525Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T02:55:28.6195685Z 
2025-08-17T02:55:28.6195766Z # fees\_h10.tests.test\_smoke
2025-08-17T02:55:28.6195912Z 
2025-08-17T02:55:28.6195992Z <a id="fees_h10.tests"></a>
2025-08-17T02:55:28.6196128Z 
2025-08-17T02:55:28.6196194Z # fees\_h10.tests
2025-08-17T02:55:28.6196297Z 
2025-08-17T02:55:28.6196377Z <a id="fees_h10.client"></a>
2025-08-17T02:55:28.6196506Z 
2025-08-17T02:55:28.6196570Z # fees\_h10.client
2025-08-17T02:55:28.6196670Z 
2025-08-17T02:55:28.6196758Z <a id="fees_h10.repository"></a>
2025-08-17T02:55:28.6196898Z 
2025-08-17T02:55:28.6196967Z # fees\_h10.repository
2025-08-17T02:55:28.6197084Z 
2025-08-17T02:55:28.6197151Z <a id="emailer"></a>
2025-08-17T02:55:28.6197260Z 
2025-08-17T02:55:28.6197326Z # emailer
2025-08-17T02:55:28.6197414Z 
2025-08-17T02:55:28.6197512Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T02:55:28.6197687Z 
2025-08-17T02:55:28.6197784Z # emailer.tests.test\_import\_emailer
2025-08-17T02:55:28.6197938Z 
2025-08-17T02:55:28.6198024Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T02:55:28.6198183Z 
2025-08-17T02:55:28.6198260Z # emailer.tests.test\_smoke
2025-08-17T02:55:28.6198520Z 
2025-08-17T02:55:28.6198597Z <a id="emailer.tests"></a>
2025-08-17T02:55:28.6198730Z 
2025-08-17T02:55:28.6198797Z # emailer.tests
2025-08-17T02:55:28.6198900Z 
2025-08-17T02:55:28.6198989Z <a id="emailer.generate_body"></a>
2025-08-17T02:55:28.6199138Z 
2025-08-17T02:55:28.6199211Z # emailer.generate\_body
2025-08-17T02:55:28.6199341Z 
2025-08-17T02:55:28.6199410Z <a id="llm_server"></a>
2025-08-17T02:55:28.6199526Z 
2025-08-17T02:55:28.6199587Z # llm\_server
2025-08-17T02:55:28.6199688Z 
2025-08-17T02:55:28.6199764Z <a id="llm_server.app"></a>
2025-08-17T02:55:28.6199891Z 
2025-08-17T02:55:28.6199965Z # llm\_server.app
2025-08-17T02:55:28.6200068Z 
