2025-08-19T03:33:12.0664778Z ##[group]Run pydoc-markdown
2025-08-19T03:33:12.0665099Z [36;1mpydoc-markdown[0m
2025-08-19T03:33:12.0708127Z shell: /usr/bin/bash -e {0}
2025-08-19T03:33:12.0708369Z env:
2025-08-19T03:33:12.0708618Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:12.0709031Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T03:33:12.0709425Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:12.0709778Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:12.0710131Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:12.0710485Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T03:33:12.0710768Z ##[endgroup]
2025-08-19T03:33:12.4078263Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T03:33:12.4078931Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T03:33:12.4079383Z In "pydoc-markdown.yml"
2025-08-19T03:33:12.4079797Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T03:33:12.4080427Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T03:33:12.4081329Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T03:33:12.4081681Z 
2025-08-19T03:33:12.7269028Z <a id="__init__"></a>
2025-08-19T03:33:12.7269408Z 
2025-08-19T03:33:12.7269542Z # \_\_init\_\_
2025-08-19T03:33:12.7270153Z 
2025-08-19T03:33:12.7270296Z <a id="api"></a>
2025-08-19T03:33:12.7270516Z 
2025-08-19T03:33:12.7270640Z # api
2025-08-19T03:33:12.7271026Z 
2025-08-19T03:33:12.7271188Z <a id="api.errors"></a>
2025-08-19T03:33:12.7271435Z 
2025-08-19T03:33:12.7271571Z # api.errors
2025-08-19T03:33:12.7271761Z 
2025-08-19T03:33:12.7271916Z <a id="api.sentry_config"></a>
2025-08-19T03:33:12.7272200Z 
2025-08-19T03:33:12.7272342Z # api.sentry\_config
2025-08-19T03:33:12.7272564Z 
2025-08-19T03:33:12.7272739Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T03:33:12.7273064Z 
2025-08-19T03:33:12.7273612Z # api.tests.test\_sentry\_scrub
2025-08-19T03:33:12.7273905Z 
2025-08-19T03:33:12.7274083Z <a id="api.tests.test_errors_json"></a>
2025-08-19T03:33:12.7274391Z 
2025-08-19T03:33:12.7274543Z # api.tests.test\_errors\_json
2025-08-19T03:33:12.7274816Z 
2025-08-19T03:33:12.7274968Z <a id="api.tests.test_llm"></a>
2025-08-19T03:33:12.7275232Z 
2025-08-19T03:33:12.7275368Z # api.tests.test\_llm
2025-08-19T03:33:12.7275596Z 
2025-08-19T03:33:12.7275763Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T03:33:12.7276072Z 
2025-08-19T03:33:12.7276234Z # api.tests.test\_sentry\_event
2025-08-19T03:33:12.7276497Z 
2025-08-19T03:33:12.7276733Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T03:33:12.7277217Z 
2025-08-19T03:33:12.7277370Z ## DummyTransport Objects
2025-08-19T03:33:12.7277621Z 
2025-08-19T03:33:12.7277754Z ```python
2025-08-19T03:33:12.7278071Z class DummyTransport()
2025-08-19T03:33:12.7278422Z ```
2025-08-19T03:33:12.7278577Z 
2025-08-19T03:33:12.7278897Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T03:33:12.7279406Z 
2025-08-19T03:33:12.7279545Z #### capture\_envelope
2025-08-19T03:33:12.7279766Z 
2025-08-19T03:33:12.7279887Z ```python
2025-08-19T03:33:12.7280212Z def capture_envelope(envelope)
2025-08-19T03:33:12.7280638Z ```
2025-08-19T03:33:12.7280804Z 
2025-08-19T03:33:12.7281218Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T03:33:12.7281596Z 
2025-08-19T03:33:12.7281759Z <a id="api.tests.test_cors"></a>
2025-08-19T03:33:12.7282035Z 
2025-08-19T03:33:12.7282175Z # api.tests.test\_cors
2025-08-19T03:33:12.7282401Z 
2025-08-19T03:33:12.7282559Z <a id="api.tests.test_imports"></a>
2025-08-19T03:33:12.7282848Z 
2025-08-19T03:33:12.7282991Z # api.tests.test\_imports
2025-08-19T03:33:12.7283240Z 
2025-08-19T03:33:12.7283404Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T03:33:12.7283708Z 
2025-08-19T03:33:12.7283867Z # api.tests.test\_rate\_limit
2025-08-19T03:33:12.7284124Z 
2025-08-19T03:33:12.7284302Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T03:33:12.7284991Z 
2025-08-19T03:33:12.7285115Z #### app
2025-08-19T03:33:12.7285284Z 
2025-08-19T03:33:12.7285404Z noqa: E402
2025-08-19T03:33:12.7285581Z 
2025-08-19T03:33:12.7285748Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T03:33:12.7286056Z 
2025-08-19T03:33:12.7286216Z # api.tests.test\_entrypoint
2025-08-19T03:33:12.7286486Z 
2025-08-19T03:33:12.7286645Z <a id="api.tests.test_health"></a>
2025-08-19T03:33:12.7286939Z 
2025-08-19T03:33:12.7287081Z # api.tests.test\_health
2025-08-19T03:33:12.7287319Z 
2025-08-19T03:33:12.7287470Z <a id="api.logging_config"></a>
2025-08-19T03:33:12.7287740Z 
2025-08-19T03:33:12.7287875Z # api.logging\_config
2025-08-19T03:33:12.7288093Z 
2025-08-19T03:33:12.7288250Z <a id="api.migrations.env"></a>
2025-08-19T03:33:12.7288521Z 
2025-08-19T03:33:12.7288663Z # api.migrations.env
2025-08-19T03:33:12.7288883Z 
2025-08-19T03:33:12.7289116Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T03:33:12.7289499Z 
2025-08-19T03:33:12.7289710Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T03:33:12.7290072Z 
2025-08-19T03:33:12.7290274Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T03:33:12.7290620Z 
2025-08-19T03:33:12.7291012Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T03:33:12.7291367Z 
2025-08-19T03:33:12.7291658Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T03:33:12.7292108Z 
2025-08-19T03:33:12.7292361Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T03:33:12.7292766Z 
2025-08-19T03:33:12.7292998Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T03:33:12.7293383Z 
2025-08-19T03:33:12.7293582Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T03:33:12.7293924Z 
2025-08-19T03:33:12.7294158Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T03:33:12.7294525Z 
2025-08-19T03:33:12.7294721Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T03:33:12.7295063Z 
2025-08-19T03:33:12.7295297Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T03:33:12.7295916Z 
2025-08-19T03:33:12.7296129Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T03:33:12.7296496Z 
2025-08-19T03:33:12.7296728Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T03:33:12.7297109Z 
2025-08-19T03:33:12.7297319Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T03:33:12.7297668Z 
2025-08-19T03:33:12.7297909Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T03:33:12.7298298Z 
2025-08-19T03:33:12.7298504Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T03:33:12.7298857Z 
2025-08-19T03:33:12.7299127Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T03:33:12.7299537Z 
2025-08-19T03:33:12.7299761Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T03:33:12.7300129Z 
2025-08-19T03:33:12.7300372Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T03:33:12.7300749Z 
2025-08-19T03:33:12.7301174Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T03:33:12.7301572Z 
2025-08-19T03:33:12.7301834Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T03:33:12.7302354Z 
2025-08-19T03:33:12.7302576Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T03:33:12.7302990Z 
2025-08-19T03:33:12.7303196Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T03:33:12.7303563Z 
2025-08-19T03:33:12.7303738Z # api.migrations.versions.0001\_baseline
2025-08-19T03:33:12.7304059Z 
2025-08-19T03:33:12.7304236Z <a id="api.migrations.versions"></a>
2025-08-19T03:33:12.7304544Z 
2025-08-19T03:33:12.7304699Z # api.migrations.versions
2025-08-19T03:33:12.7304958Z 
2025-08-19T03:33:12.7305104Z <a id="api.migrations"></a>
2025-08-19T03:33:12.7305351Z 
2025-08-19T03:33:12.7305479Z # api.migrations
2025-08-19T03:33:12.7305685Z 
2025-08-19T03:33:12.7305809Z <a id="api.db"></a>
2025-08-19T03:33:12.7306011Z 
2025-08-19T03:33:12.7306136Z # api.db
2025-08-19T03:33:12.7306300Z 
2025-08-19T03:33:12.7306459Z <a id="api.routes.stats"></a>
2025-08-19T03:33:12.7306996Z 
2025-08-19T03:33:12.7307130Z # api.routes.stats
2025-08-19T03:33:12.7307336Z 
2025-08-19T03:33:12.7307501Z <a id="api.routes.stats.kpi"></a>
2025-08-19T03:33:12.7307796Z 
2025-08-19T03:33:12.7307915Z #### kpi
2025-08-19T03:33:12.7308079Z 
2025-08-19T03:33:12.7308205Z ```python
2025-08-19T03:33:12.7308517Z @router.get("/stats/kpi")
2025-08-19T03:33:12.7309068Z def kpi() -> List[Dict[str, int]]
2025-08-19T03:33:12.7309449Z ```
2025-08-19T03:33:12.7309604Z 
2025-08-19T03:33:12.7309760Z Return KPI metrics (mock).
2025-08-19T03:33:12.7310005Z 
2025-08-19T03:33:12.7310196Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T03:33:12.7310537Z 
2025-08-19T03:33:12.7310670Z #### roi\_by\_vendor
2025-08-19T03:33:12.7311055Z 
2025-08-19T03:33:12.7311190Z ```python
2025-08-19T03:33:12.7311519Z @router.get("/stats/roi_by_vendor")
2025-08-19T03:33:12.7311989Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T03:33:12.7312415Z ```
2025-08-19T03:33:12.7312576Z 
2025-08-19T03:33:12.7312747Z Return ROI percent by vendor.
2025-08-19T03:33:12.7313011Z 
2025-08-19T03:33:12.7313186Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T03:33:12.7313511Z 
2025-08-19T03:33:12.7313637Z #### roi\_trend
2025-08-19T03:33:12.7313827Z 
2025-08-19T03:33:12.7313953Z ```python
2025-08-19T03:33:12.7314265Z @router.get("/stats/roi_trend")
2025-08-19T03:33:12.7314704Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T03:33:12.7315190Z ```
2025-08-19T03:33:12.7315344Z 
2025-08-19T03:33:12.7315491Z Return 30-day ROI trend.
2025-08-19T03:33:12.7315733Z 
2025-08-19T03:33:12.7315878Z <a id="api.routes.roi"></a>
2025-08-19T03:33:12.7316136Z 
2025-08-19T03:33:12.7316264Z # api.routes.roi
2025-08-19T03:33:12.7316462Z 
2025-08-19T03:33:12.7316619Z <a id="api.routes.health"></a>
2025-08-19T03:33:12.7316882Z 
2025-08-19T03:33:12.7317012Z # api.routes.health
2025-08-19T03:33:12.7317216Z 
2025-08-19T03:33:12.7317391Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T03:33:12.7317919Z 
2025-08-19T03:33:12.7318056Z #### MAX\_SKEW
2025-08-19T03:33:12.7318251Z 
2025-08-19T03:33:12.7318368Z seconds
2025-08-19T03:33:12.7318530Z 
2025-08-19T03:33:12.7318699Z <a id="api.routes.health.health"></a>
2025-08-19T03:33:12.7319019Z 
2025-08-19T03:33:12.7319141Z #### health
2025-08-19T03:33:12.7319313Z 
2025-08-19T03:33:12.7319445Z ```python
2025-08-19T03:33:12.7319817Z @router.get("/health", include_in_schema=False)
2025-08-19T03:33:12.7320525Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T03:33:12.7321332Z ```
2025-08-19T03:33:12.7321500Z 
2025-08-19T03:33:12.7321722Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T03:33:12.7322087Z 
2025-08-19T03:33:12.7322261Z <a id="api.routes.repository"></a>
2025-08-19T03:33:12.7322553Z 
2025-08-19T03:33:12.7322700Z # api.routes.repository
2025-08-19T03:33:12.7322933Z 
2025-08-19T03:33:12.7323082Z <a id="api.routes"></a>
2025-08-19T03:33:12.7323304Z 
2025-08-19T03:33:12.7323426Z # api.routes
2025-08-19T03:33:12.7323633Z 
2025-08-19T03:33:12.7323770Z <a id="api.models.fee"></a>
2025-08-19T03:33:12.7324002Z 
2025-08-19T03:33:12.7324121Z # api.models.fee
2025-08-19T03:33:12.7324309Z 
2025-08-19T03:33:12.7324437Z <a id="api.models"></a>
2025-08-19T03:33:12.7324639Z 
2025-08-19T03:33:12.7324764Z # api.models
2025-08-19T03:33:12.7324942Z 
2025-08-19T03:33:12.7325090Z <a id="api.roi_repository"></a>
2025-08-19T03:33:12.7325368Z 
2025-08-19T03:33:12.7325508Z # api.roi\_repository
2025-08-19T03:33:12.7325726Z 
2025-08-19T03:33:12.7325861Z <a id="api.main"></a>
2025-08-19T03:33:12.7326079Z 
2025-08-19T03:33:12.7326200Z # api.main
2025-08-19T03:33:12.7326375Z 
2025-08-19T03:33:12.7326528Z <a id="api.main.ready"></a>
2025-08-19T03:33:12.7326783Z 
2025-08-19T03:33:12.7326901Z #### ready
2025-08-19T03:33:12.7327068Z 
2025-08-19T03:33:12.7327188Z ```python
2025-08-19T03:33:12.7327689Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T03:33:12.7328488Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T03:33:12.7329365Z                                                                       str]
2025-08-19T03:33:12.7329812Z ```
2025-08-19T03:33:12.7329967Z 
2025-08-19T03:33:12.7330147Z Return 200 only when migrations are at head.
2025-08-19T03:33:12.7330476Z 
2025-08-19T03:33:12.7330611Z <a id="api.config"></a>
2025-08-19T03:33:12.7331037Z 
2025-08-19T03:33:12.7331172Z # api.config
2025-08-19T03:33:12.7331366Z 
2025-08-19T03:33:12.7331487Z <a id="etl"></a>
2025-08-19T03:33:12.7331680Z 
2025-08-19T03:33:12.7331799Z # etl
2025-08-19T03:33:12.7331957Z 
2025-08-19T03:33:12.7332106Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T03:33:12.7332386Z 
2025-08-19T03:33:12.7332523Z # etl.fba\_fee\_ingestor
2025-08-19T03:33:12.7332758Z 
2025-08-19T03:33:12.7332912Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T03:33:12.7333195Z 
2025-08-19T03:33:12.7333328Z # etl.sp\_fees\_ingestor
2025-08-19T03:33:12.7333553Z 
2025-08-19T03:33:12.7333713Z <a id="etl.keepa_ingestor"></a>
2025-08-19T03:33:12.7333998Z 
2025-08-19T03:33:12.7334132Z # etl.keepa\_ingestor
2025-08-19T03:33:12.7334350Z 
2025-08-19T03:33:12.7334486Z <a id="etl.db"></a>
2025-08-19T03:33:12.7334680Z 
2025-08-19T03:33:12.7334794Z # etl.db
2025-08-19T03:33:12.7334967Z 
2025-08-19T03:33:12.7335126Z <a id="etl.dialects.schemas"></a>
2025-08-19T03:33:12.7335403Z 
2025-08-19T03:33:12.7335544Z # etl.dialects.schemas
2025-08-19T03:33:12.7335766Z 
2025-08-19T03:33:12.7335958Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T03:33:12.7336306Z 
2025-08-19T03:33:12.7336478Z # etl.dialects.amazon\_reimbursements
2025-08-19T03:33:12.7336784Z 
2025-08-19T03:33:12.7336964Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T03:33:12.7337297Z 
2025-08-19T03:33:12.7337458Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T03:33:12.7337755Z 
2025-08-19T03:33:12.7337934Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T03:33:12.7338258Z 
2025-08-19T03:33:12.7338414Z # etl.dialects.amazon\_returns
2025-08-19T03:33:12.7338912Z 
2025-08-19T03:33:12.7339124Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T03:33:12.7339456Z 
2025-08-19T03:33:12.7339620Z # etl.dialects.amazon\_fee\_preview
2025-08-19T03:33:12.7339919Z 
2025-08-19T03:33:12.7340118Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T03:33:12.7340469Z 
2025-08-19T03:33:12.7340646Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T03:33:12.7341141Z 
2025-08-19T03:33:12.7341334Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T03:33:12.7341668Z 
2025-08-19T03:33:12.7341836Z # etl.dialects.amazon\_settlements
2025-08-19T03:33:12.7342120Z 
2025-08-19T03:33:12.7342265Z <a id="etl.dialects"></a>
2025-08-19T03:33:12.7342508Z 
2025-08-19T03:33:12.7342631Z # etl.dialects
2025-08-19T03:33:12.7342815Z 
2025-08-19T03:33:12.7342940Z <a id="ingest"></a>
2025-08-19T03:33:12.7343149Z 
2025-08-19T03:33:12.7343263Z # ingest
2025-08-19T03:33:12.7343428Z 
2025-08-19T03:33:12.7343586Z <a id="ingest.maintenance"></a>
2025-08-19T03:33:12.7343850Z 
2025-08-19T03:33:12.7343995Z # ingest.maintenance
2025-08-19T03:33:12.7344228Z 
2025-08-19T03:33:12.7344377Z <a id="ingest.copy_loader"></a>
2025-08-19T03:33:12.7344635Z 
2025-08-19T03:33:12.7344767Z # ingest.copy\_loader
2025-08-19T03:33:12.7344990Z 
2025-08-19T03:33:12.7345182Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T03:33:12.7345521Z 
2025-08-19T03:33:12.7345663Z #### copy\_df\_via\_temp
2025-08-19T03:33:12.7345892Z 
2025-08-19T03:33:12.7346011Z ```python
2025-08-19T03:33:12.7346330Z def copy_df_via_temp(engine: Engine,
2025-08-19T03:33:12.7346880Z                      df: pd.DataFrame,
2025-08-19T03:33:12.7347318Z                      target_table: str,
2025-08-19T03:33:12.7347720Z                      *,
2025-08-19T03:33:12.7348112Z                      target_schema: Optional[str] = None,
2025-08-19T03:33:12.7348602Z                      columns: Sequence[str],
2025-08-19T03:33:12.7349111Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T03:33:12.7349652Z                      analyze_after: bool = False,
2025-08-19T03:33:12.7350417Z                      connection: Any | None = None) -> int
2025-08-19T03:33:12.7351063Z ```
2025-08-19T03:33:12.7351232Z 
2025-08-19T03:33:12.7351528Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T03:33:12.7351966Z 
2025-08-19T03:33:12.7352126Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T03:33:12.7352422Z 
2025-08-19T03:33:12.7352577Z # ingest.tests.test\_smoke
2025-08-19T03:33:12.7352819Z 
2025-08-19T03:33:12.7352959Z <a id="ingest.tests"></a>
2025-08-19T03:33:12.7353195Z 
2025-08-19T03:33:12.7353334Z # ingest.tests
2025-08-19T03:33:12.7353525Z 
2025-08-19T03:33:12.7353679Z <a id="ingest.upload_router"></a>
2025-08-19T03:33:12.7353966Z 
2025-08-19T03:33:12.7354103Z # ingest.upload\_router
2025-08-19T03:33:12.7354327Z 
2025-08-19T03:33:12.7354484Z <a id="ingest.email_watcher"></a>
2025-08-19T03:33:12.7354761Z 
2025-08-19T03:33:12.7354895Z # ingest.email\_watcher
2025-08-19T03:33:12.7355116Z 
2025-08-19T03:33:12.7355294Z <a id="ingest.email_watcher.main"></a>
2025-08-19T03:33:12.7355611Z 
2025-08-19T03:33:12.7355725Z #### main
2025-08-19T03:33:12.7355898Z 
2025-08-19T03:33:12.7356015Z ```python
2025-08-19T03:33:12.7356317Z def main() -> dict[str, str]
2025-08-19T03:33:12.7356681Z ```
2025-08-19T03:33:12.7356832Z 
2025-08-19T03:33:12.7357095Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T03:33:12.7357535Z 
2025-08-19T03:33:12.7357786Z Returns {"status": "success"} when processing completes.
2025-08-19T03:33:12.7358176Z 
2025-08-19T03:33:12.7358316Z <a id="ingest.tasks"></a>
2025-08-19T03:33:12.7358568Z 
2025-08-19T03:33:12.7358694Z # ingest.tasks
2025-08-19T03:33:12.7358888Z 
2025-08-19T03:33:12.7359069Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T03:33:12.7359406Z 
2025-08-19T03:33:12.7359542Z #### task\_import\_file
2025-08-19T03:33:12.7359765Z 
2025-08-19T03:33:12.7359888Z ```python
2025-08-19T03:33:12.7360276Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T03:33:12.7361263Z def task_import_file(self: Any,
2025-08-19T03:33:12.7361678Z                      uri: str,
2025-08-19T03:33:12.7362101Z                      report_type: Optional[str] = None,
2025-08-19T03:33:12.7362604Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T03:33:12.7363052Z ```
2025-08-19T03:33:12.7363204Z 
2025-08-19T03:33:12.7363456Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T03:33:12.7363846Z 
2025-08-19T03:33:12.7363995Z <a id="ingest.celery_app"></a>
2025-08-19T03:33:12.7364265Z 
2025-08-19T03:33:12.7364397Z # ingest.celery\_app
2025-08-19T03:33:12.7364609Z 
2025-08-19T03:33:12.7364760Z <a id="ingest.ingest_router"></a>
2025-08-19T03:33:12.7365046Z 
2025-08-19T03:33:12.7365183Z # ingest.ingest\_router
2025-08-19T03:33:12.7365404Z 
2025-08-19T03:33:12.7365553Z <a id="logistics_etl"></a>
2025-08-19T03:33:12.7365799Z 
2025-08-19T03:33:12.7365922Z # logistics\_etl
2025-08-19T03:33:12.7366117Z 
2025-08-19T03:33:12.7366262Z Daily logistics ETL job.
2025-08-19T03:33:12.7366511Z 
2025-08-19T03:33:12.7366662Z <a id="logistics_etl.__main__"></a>
2025-08-19T03:33:12.7366954Z 
2025-08-19T03:33:12.7367096Z # logistics\_etl.\_\_main\_\_
2025-08-19T03:33:12.7367356Z 
2025-08-19T03:33:12.7367506Z <a id="logistics_etl.dsn"></a>
2025-08-19T03:33:12.7367765Z 
2025-08-19T03:33:12.7367898Z # logistics\_etl.dsn
2025-08-19T03:33:12.7368111Z 
2025-08-19T03:33:12.7368336Z Local DSN builder to avoid cross-service dependency.
2025-08-19T03:33:12.7368717Z 
2025-08-19T03:33:12.7368889Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T03:33:12.7369214Z 
2025-08-19T03:33:12.7369338Z #### build\_dsn
2025-08-19T03:33:12.7369531Z 
2025-08-19T03:33:12.7369655Z ```python
2025-08-19T03:33:12.7369982Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:33:12.7370399Z ```
2025-08-19T03:33:12.7370550Z 
2025-08-19T03:33:12.7371011Z Return a Postgres DSN assembled from environment variables.
2025-08-19T03:33:12.7371446Z 
2025-08-19T03:33:12.7371731Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T03:33:12.7372698Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T03:33:12.7373338Z error when any required variable is missing.
2025-08-19T03:33:12.7373671Z 
2025-08-19T03:33:12.7373856Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T03:33:12.7374178Z 
2025-08-19T03:33:12.7374336Z # logistics\_etl.tests.conftest
2025-08-19T03:33:12.7374609Z 
2025-08-19T03:33:12.7374818Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T03:33:12.7375176Z 
2025-08-19T03:33:12.7375341Z # logistics\_etl.tests.test\_repository
2025-08-19T03:33:12.7375655Z 
2025-08-19T03:33:12.7375827Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T03:33:12.7376145Z 
2025-08-19T03:33:12.7376305Z # logistics\_etl.tests.test\_cron
2025-08-19T03:33:12.7376585Z 
2025-08-19T03:33:12.7376764Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T03:33:12.7377094Z 
2025-08-19T03:33:12.7377261Z # logistics\_etl.tests.test\_imports
2025-08-19T03:33:12.7377566Z 
2025-08-19T03:33:12.7377750Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T03:33:12.7378079Z 
2025-08-19T03:33:12.7378236Z # logistics\_etl.tests.test\_smoke
2025-08-19T03:33:12.7378522Z 
2025-08-19T03:33:12.7378707Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T03:33:12.7379025Z 
2025-08-19T03:33:12.7379180Z # logistics\_etl.tests.test\_client
2025-08-19T03:33:12.7379470Z 
2025-08-19T03:33:12.7379630Z <a id="logistics_etl.tests"></a>
2025-08-19T03:33:12.7379901Z 
2025-08-19T03:33:12.7380038Z # logistics\_etl.tests
2025-08-19T03:33:12.7380276Z 
2025-08-19T03:33:12.7380481Z <a id="logistics_etl.flow"></a>
2025-08-19T03:33:12.7380750Z 
2025-08-19T03:33:12.7381043Z # logistics\_etl.flow
2025-08-19T03:33:12.7381273Z 
2025-08-19T03:33:12.7381431Z <a id="logistics_etl.client"></a>
2025-08-19T03:33:12.7381713Z 
2025-08-19T03:33:12.7381862Z # logistics\_etl.client
2025-08-19T03:33:12.7382086Z 
2025-08-19T03:33:12.7382234Z <a id="logistics_etl.cron"></a>
2025-08-19T03:33:12.7382502Z 
2025-08-19T03:33:12.7382860Z # logistics\_etl.cron
2025-08-19T03:33:12.7383094Z 
2025-08-19T03:33:12.7383249Z <a id="logistics_etl.db"></a>
2025-08-19T03:33:12.7383508Z 
2025-08-19T03:33:12.7410143Z # logistics\_etl.db
2025-08-19T03:33:12.7410433Z 
2025-08-19T03:33:12.7410590Z <a id="logistics_etl.repository"></a>
2025-08-19T03:33:12.7411060Z 
2025-08-19T03:33:12.7411204Z # logistics\_etl.repository
2025-08-19T03:33:12.7411431Z 
2025-08-19T03:33:12.7411546Z <a id="alert_bot"></a>
2025-08-19T03:33:12.7411743Z 
2025-08-19T03:33:12.7411849Z # alert\_bot
2025-08-19T03:33:12.7412002Z 
2025-08-19T03:33:12.7412152Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T03:33:12.7412422Z 
2025-08-19T03:33:12.7412547Z # alert\_bot.tests.test\_smoke
2025-08-19T03:33:12.7412772Z 
2025-08-19T03:33:12.7412893Z <a id="alert_bot.tests"></a>
2025-08-19T03:33:12.7413102Z 
2025-08-19T03:33:12.7413209Z # alert\_bot.tests
2025-08-19T03:33:12.7413374Z 
2025-08-19T03:33:12.7413497Z <a id="alert_bot.alert_bot"></a>
2025-08-19T03:33:12.7413734Z 
2025-08-19T03:33:12.7413862Z # alert\_bot.alert\_bot
2025-08-19T03:33:12.7414046Z 
2025-08-19T03:33:12.7414163Z <a id="alert_bot.rules"></a>
2025-08-19T03:33:12.7414377Z 
2025-08-19T03:33:12.7414485Z # alert\_bot.rules
2025-08-19T03:33:12.7414650Z 
2025-08-19T03:33:12.7414757Z <a id="common"></a>
2025-08-19T03:33:12.7414935Z 
2025-08-19T03:33:12.7415034Z # common
2025-08-19T03:33:12.7415174Z 
2025-08-19T03:33:12.7415290Z <a id="common.dsn"></a>
2025-08-19T03:33:12.7415483Z 
2025-08-19T03:33:12.7415588Z # common.dsn
2025-08-19T03:33:12.7415743Z 
2025-08-19T03:33:12.7415881Z <a id="common.dsn.build_dsn"></a>
2025-08-19T03:33:12.7416112Z 
2025-08-19T03:33:12.7416216Z #### build\_dsn
2025-08-19T03:33:12.7416387Z 
2025-08-19T03:33:12.7416489Z ```python
2025-08-19T03:33:12.7416765Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:33:12.7417261Z ```
2025-08-19T03:33:12.7417406Z 
2025-08-19T03:33:12.7417606Z Return a Postgres DSN, validating required variables.
2025-08-19T03:33:12.7417917Z 
2025-08-19T03:33:12.7418217Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T03:33:12.7419192Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T03:33:12.7419848Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T03:33:12.7420356Z missing.
2025-08-19T03:33:12.7420494Z 
2025-08-19T03:33:12.7420628Z <a id="common.models_vendor"></a>
2025-08-19T03:33:12.7421041Z 
2025-08-19T03:33:12.7421161Z # common.models\_vendor
2025-08-19T03:33:12.7421352Z 
2025-08-19T03:33:12.7421493Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T03:33:12.7421760Z 
2025-08-19T03:33:12.7421860Z ## Vendor Objects
2025-08-19T03:33:12.7422028Z 
2025-08-19T03:33:12.7422125Z ```python
2025-08-19T03:33:12.7422381Z class Vendor(Base)
2025-08-19T03:33:12.7422649Z ```
2025-08-19T03:33:12.7422778Z 
2025-08-19T03:33:12.7422910Z Vendor of inventory items.
2025-08-19T03:33:12.7423118Z 
2025-08-19T03:33:12.7423283Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T03:33:12.7423579Z 
2025-08-19T03:33:12.7423719Z ## VendorPrice Objects
2025-08-19T03:33:12.7423926Z 
2025-08-19T03:33:12.7424046Z ```python
2025-08-19T03:33:12.7424308Z class VendorPrice(Base)
2025-08-19T03:33:12.7424585Z ```
2025-08-19T03:33:12.7424711Z 
2025-08-19T03:33:12.7424870Z Association table linking vendors to pricing.
2025-08-19T03:33:12.7425149Z 
2025-08-19T03:33:12.7425269Z <a id="common.db_url"></a>
2025-08-19T03:33:12.7425469Z 
2025-08-19T03:33:12.7425571Z # common.db\_url
2025-08-19T03:33:12.7425736Z 
2025-08-19T03:33:12.7425866Z <a id="common.db_url.build_url"></a>
2025-08-19T03:33:12.7426098Z 
2025-08-19T03:33:12.7426203Z #### build\_url
2025-08-19T03:33:12.7426363Z 
2025-08-19T03:33:12.7426460Z ```python
2025-08-19T03:33:12.7426737Z def build_url(async_: bool = True) -> str
2025-08-19T03:33:12.7427076Z ```
2025-08-19T03:33:12.7427216Z 
2025-08-19T03:33:12.7427365Z Return Postgres DSN from env or PG_* parts.
2025-08-19T03:33:12.7427626Z 
2025-08-19T03:33:12.7427745Z <a id="common.keepa"></a>
2025-08-19T03:33:12.7428191Z 
2025-08-19T03:33:12.7428297Z # common.keepa
2025-08-19T03:33:12.7428447Z 
2025-08-19T03:33:12.7428568Z <a id="common.llm"></a>
2025-08-19T03:33:12.7428747Z 
2025-08-19T03:33:12.7428847Z # common.llm
2025-08-19T03:33:12.7428997Z 
2025-08-19T03:33:12.7429117Z <a id="common.settings"></a>
2025-08-19T03:33:12.7429319Z 
2025-08-19T03:33:12.7429423Z # common.settings
2025-08-19T03:33:12.7429588Z 
2025-08-19T03:33:12.7429695Z <a id="common.db"></a>
2025-08-19T03:33:12.7429870Z 
2025-08-19T03:33:12.7429977Z # common.db
2025-08-19T03:33:12.7430118Z 
2025-08-19T03:33:12.7430257Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T03:33:12.7430514Z 
2025-08-19T03:33:12.7430636Z #### build\_sqlalchemy\_url
2025-08-19T03:33:12.7431007Z 
2025-08-19T03:33:12.7431113Z ```python
2025-08-19T03:33:12.7431383Z def build_sqlalchemy_url() -> str
2025-08-19T03:33:12.7431695Z ```
2025-08-19T03:33:12.7431826Z 
2025-08-19T03:33:12.7431971Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T03:33:12.7432244Z 
2025-08-19T03:33:12.7432401Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T03:33:12.7432649Z 
2025-08-19T03:33:12.7432764Z #### build\_asyncpg\_dsn
2025-08-19T03:33:12.7432969Z 
2025-08-19T03:33:12.7433067Z ```python
2025-08-19T03:33:12.7433336Z def build_asyncpg_dsn() -> str
2025-08-19T03:33:12.7433642Z ```
2025-08-19T03:33:12.7433776Z 
2025-08-19T03:33:12.7433974Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T03:33:12.7434299Z 
2025-08-19T03:33:12.7434438Z <a id="common.db.refresh_mvs"></a>
2025-08-19T03:33:12.7434669Z 
2025-08-19T03:33:12.7434772Z #### refresh\_mvs
2025-08-19T03:33:12.7434935Z 
2025-08-19T03:33:12.7435040Z ```python
2025-08-19T03:33:12.7435344Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T03:33:12.7435734Z ```
2025-08-19T03:33:12.7435869Z 
2025-08-19T03:33:12.7436071Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T03:33:12.7436398Z 
2025-08-19T03:33:12.7436517Z <a id="common.config"></a>
2025-08-19T03:33:12.7436723Z 
2025-08-19T03:33:12.7437025Z # common.config
2025-08-19T03:33:12.7437189Z 
2025-08-19T03:33:12.7437308Z <a id="common.base"></a>
2025-08-19T03:33:12.7437505Z 
2025-08-19T03:33:12.7437603Z # common.base
2025-08-19T03:33:12.7437754Z 
2025-08-19T03:33:12.7437873Z <a id="common.base.Base"></a>
2025-08-19T03:33:12.7438091Z 
2025-08-19T03:33:12.7438193Z ## Base Objects
2025-08-19T03:33:12.7438345Z 
2025-08-19T03:33:12.7438450Z ```python
2025-08-19T03:33:12.7438700Z class Base(DeclarativeBase)
2025-08-19T03:33:12.7439001Z ```
2025-08-19T03:33:12.7439130Z 
2025-08-19T03:33:12.7439254Z Base class for SQLAlchemy models.
2025-08-19T03:33:12.7439494Z 
2025-08-19T03:33:12.7439671Z <a id="repricer"></a>
2025-08-19T03:33:12.7439851Z 
2025-08-19T03:33:12.7439950Z # repricer
2025-08-19T03:33:12.7440093Z 
2025-08-19T03:33:12.7440225Z <a id="repricer.app.schemas"></a>
2025-08-19T03:33:12.7440459Z 
2025-08-19T03:33:12.7440579Z # repricer.app.schemas
2025-08-19T03:33:12.7440760Z 
2025-08-19T03:33:12.7441064Z <a id="repricer.app.deps"></a>
2025-08-19T03:33:12.7441313Z 
2025-08-19T03:33:12.7441432Z # repricer.app.deps
2025-08-19T03:33:12.7441601Z 
2025-08-19T03:33:12.7441781Z Placeholder module for Keepa / SP-API clients.
2025-08-19T03:33:12.7442079Z 
2025-08-19T03:33:12.7442208Z <a id="repricer.app.logic"></a>
2025-08-19T03:33:12.7442423Z 
2025-08-19T03:33:12.7442546Z # repricer.app.logic
2025-08-19T03:33:12.7442720Z 
2025-08-19T03:33:12.7442866Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T03:33:12.7443134Z 
2025-08-19T03:33:12.7443236Z #### MIN\_MARGIN
2025-08-19T03:33:12.7443383Z 
2025-08-19T03:33:12.7443480Z 15 % ROI
2025-08-19T03:33:12.7443625Z 
2025-08-19T03:33:12.7443784Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T03:33:12.7444067Z 
2025-08-19T03:33:12.7444182Z #### compute\_price
2025-08-19T03:33:12.7444350Z 
2025-08-19T03:33:12.7444448Z ```python
2025-08-19T03:33:12.7444821Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T03:33:12.7445287Z ```
2025-08-19T03:33:12.7445610Z 
2025-08-19T03:33:12.7445789Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T03:33:12.7446227Z Replace with real competitive logic later.
2025-08-19T03:33:12.7446495Z 
2025-08-19T03:33:12.7446623Z <a id="repricer.app.main"></a>
2025-08-19T03:33:12.7446837Z 
2025-08-19T03:33:12.7446956Z # repricer.app.main
2025-08-19T03:33:12.7447127Z 
2025-08-19T03:33:12.7447250Z <a id="repricer.app"></a>
2025-08-19T03:33:12.7447456Z 
2025-08-19T03:33:12.7447566Z # repricer.app
2025-08-19T03:33:12.7447723Z 
2025-08-19T03:33:12.7447869Z <a id="repricer.tests.test_imports"></a>
2025-08-19T03:33:12.7448130Z 
2025-08-19T03:33:12.7448258Z # repricer.tests.test\_imports
2025-08-19T03:33:12.7448474Z 
2025-08-19T03:33:12.7448619Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T03:33:12.7448862Z 
2025-08-19T03:33:12.7448994Z # repricer.tests.test\_smoke
2025-08-19T03:33:12.7449203Z 
2025-08-19T03:33:12.7449328Z <a id="repricer.tests"></a>
2025-08-19T03:33:12.7449529Z 
2025-08-19T03:33:12.7449646Z # repricer.tests
2025-08-19T03:33:12.7449827Z 
2025-08-19T03:33:12.7449927Z <a id="db"></a>
2025-08-19T03:33:12.7450075Z 
2025-08-19T03:33:12.7450173Z # db
2025-08-19T03:33:12.7450302Z 
2025-08-19T03:33:12.7450418Z <a id="db.utils.views"></a>
2025-08-19T03:33:12.7450609Z 
2025-08-19T03:33:12.7450721Z # db.utils.views
2025-08-19T03:33:12.7451024Z 
2025-08-19T03:33:12.7451171Z <a id="db.utils.views.replace_view"></a>
2025-08-19T03:33:12.7451437Z 
2025-08-19T03:33:12.7451552Z #### replace\_view
2025-08-19T03:33:12.7451715Z 
2025-08-19T03:33:12.7451815Z ```python
2025-08-19T03:33:12.7452120Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T03:33:12.7452502Z ```
2025-08-19T03:33:12.7452630Z 
2025-08-19T03:33:12.7452761Z Drop and recreate a SQL view atomically.
2025-08-19T03:33:12.7453008Z 
2025-08-19T03:33:12.7453123Z <a id="db.utils"></a>
2025-08-19T03:33:12.7453294Z 
2025-08-19T03:33:12.7453391Z # db.utils
2025-08-19T03:33:12.7453531Z 
2025-08-19T03:33:12.7453648Z <a id="price_importer"></a>
2025-08-19T03:33:12.7453856Z 
2025-08-19T03:33:12.7454135Z # price\_importer
2025-08-19T03:33:12.7454305Z 
2025-08-19T03:33:12.7454467Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T03:33:12.7454746Z 
2025-08-19T03:33:12.7454889Z # price\_importer.services\_common.dsn
2025-08-19T03:33:12.7455134Z 
2025-08-19T03:33:12.7455328Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T03:33:12.7455657Z 
2025-08-19T03:33:12.7455760Z #### build\_dsn
2025-08-19T03:33:12.7455918Z 
2025-08-19T03:33:12.7456023Z ```python
2025-08-19T03:33:12.7456293Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:33:12.7456640Z ```
2025-08-19T03:33:12.7456771Z 
2025-08-19T03:33:12.7456873Z Return safe DSN.
2025-08-19T03:33:12.7457039Z 
2025-08-19T03:33:12.7457503Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T03:33:12.7457813Z 
2025-08-19T03:33:12.7458010Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T03:33:12.7458345Z 
2025-08-19T03:33:12.7458529Z # price\_importer.services\_common.models\_vendor
2025-08-19T03:33:12.7458853Z 
2025-08-19T03:33:12.7459034Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T03:33:12.7459341Z 
2025-08-19T03:33:12.7459497Z # price\_importer.services\_common.db\_url
2025-08-19T03:33:12.7459785Z 
2025-08-19T03:33:12.7459996Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T03:33:12.7460341Z 
2025-08-19T03:33:12.7460449Z #### build\_url
2025-08-19T03:33:12.7460619Z 
2025-08-19T03:33:12.7460720Z ```python
2025-08-19T03:33:12.7461196Z def build_url(async_: bool = True) -> str
2025-08-19T03:33:12.7461537Z ```
2025-08-19T03:33:12.7461663Z 
2025-08-19T03:33:12.7461822Z Return Postgres DSN from env or PG_* parts.
2025-08-19T03:33:12.7462095Z 
2025-08-19T03:33:12.7462260Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T03:33:12.7462545Z 
2025-08-19T03:33:12.7462688Z # price\_importer.services\_common.keepa
2025-08-19T03:33:12.7462949Z 
2025-08-19T03:33:12.7463107Z <a id="price_importer.services_common.llm"></a>
2025-08-19T03:33:12.7463593Z 
2025-08-19T03:33:12.7463735Z # price\_importer.services\_common.llm
2025-08-19T03:33:12.7463986Z 
2025-08-19T03:33:12.7464173Z <a id="price_importer.services_common.settings"></a>
2025-08-19T03:33:12.7464469Z 
2025-08-19T03:33:12.7464622Z # price\_importer.services\_common.settings
2025-08-19T03:33:12.7464898Z 
2025-08-19T03:33:12.7465057Z <a id="price_importer.services_common.db"></a>
2025-08-19T03:33:12.7465320Z 
2025-08-19T03:33:12.7465458Z # price\_importer.services\_common.db
2025-08-19T03:33:12.7465705Z 
2025-08-19T03:33:12.7465938Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T03:33:12.7466296Z 
2025-08-19T03:33:12.7466421Z #### build\_sqlalchemy\_url
2025-08-19T03:33:12.7466626Z 
2025-08-19T03:33:12.7466721Z ```python
2025-08-19T03:33:12.7466988Z def build_sqlalchemy_url() -> str
2025-08-19T03:33:12.7467301Z ```
2025-08-19T03:33:12.7467438Z 
2025-08-19T03:33:12.7467583Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T03:33:12.7467860Z 
2025-08-19T03:33:12.7468094Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T03:33:12.7468447Z 
2025-08-19T03:33:12.7468565Z #### build\_asyncpg\_dsn
2025-08-19T03:33:12.7468754Z 
2025-08-19T03:33:12.7468862Z ```python
2025-08-19T03:33:12.7469121Z def build_asyncpg_dsn() -> str
2025-08-19T03:33:12.7469442Z ```
2025-08-19T03:33:12.7469569Z 
2025-08-19T03:33:12.7469773Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T03:33:12.7470099Z 
2025-08-19T03:33:12.7470302Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T03:33:12.7470620Z 
2025-08-19T03:33:12.7470734Z #### refresh\_mvs
2025-08-19T03:33:12.7471043Z 
2025-08-19T03:33:12.7471150Z ```python
2025-08-19T03:33:12.7471472Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T03:33:12.7471855Z ```
2025-08-19T03:33:12.7471993Z 
2025-08-19T03:33:12.7472207Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T03:33:12.7472542Z 
2025-08-19T03:33:12.7472700Z <a id="price_importer.services_common"></a>
2025-08-19T03:33:12.7473148Z 
2025-08-19T03:33:12.7473279Z # price\_importer.services\_common
2025-08-19T03:33:12.7473514Z 
2025-08-19T03:33:12.7473679Z <a id="price_importer.services_common.base"></a>
2025-08-19T03:33:12.7473959Z 
2025-08-19T03:33:12.7474099Z # price\_importer.services\_common.base
2025-08-19T03:33:12.7474355Z 
2025-08-19T03:33:12.7474492Z <a id="price_importer.normaliser"></a>
2025-08-19T03:33:12.7474740Z 
2025-08-19T03:33:12.7474875Z # price\_importer.normaliser
2025-08-19T03:33:12.7475087Z 
2025-08-19T03:33:12.7475246Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T03:33:12.7475527Z 
2025-08-19T03:33:12.7475676Z # price\_importer.common.models\_vendor
2025-08-19T03:33:12.7475936Z 
2025-08-19T03:33:12.7476081Z <a id="price_importer.common.db_url"></a>
2025-08-19T03:33:12.7476362Z 
2025-08-19T03:33:12.7476500Z # price\_importer.common.db\_url
2025-08-19T03:33:12.7476725Z 
2025-08-19T03:33:12.7476893Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T03:33:12.7477196Z 
2025-08-19T03:33:12.7477294Z #### make\_dsn
2025-08-19T03:33:12.7477449Z 
2025-08-19T03:33:12.7477557Z ```python
2025-08-19T03:33:12.7477831Z def make_dsn(async_: bool = False) -> str
2025-08-19T03:33:12.7478186Z ```
2025-08-19T03:33:12.7478321Z 
2025-08-19T03:33:12.7478510Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T03:33:12.7478817Z 
2025-08-19T03:33:12.7478984Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T03:33:12.7479268Z 
2025-08-19T03:33:12.7479375Z #### build\_url
2025-08-19T03:33:12.7479525Z 
2025-08-19T03:33:12.7479627Z ```python
2025-08-19T03:33:12.7479896Z def build_url(async_: bool = False) -> str
2025-08-19T03:33:12.7480254Z ```
2025-08-19T03:33:12.7480395Z 
2025-08-19T03:33:12.7480634Z Return Postgres DSN built from environment variables.
2025-08-19T03:33:12.7481109Z 
2025-08-19T03:33:12.7481246Z <a id="price_importer.common"></a>
2025-08-19T03:33:12.7481496Z 
2025-08-19T03:33:12.7481631Z # price\_importer.common
2025-08-19T03:33:12.7482015Z 
2025-08-19T03:33:12.7482181Z <a id="price_importer.common.base"></a>
2025-08-19T03:33:12.7482438Z 
2025-08-19T03:33:12.7482566Z # price\_importer.common.base
2025-08-19T03:33:12.7482790Z 
2025-08-19T03:33:12.7482945Z <a id="price_importer.tests.conftest"></a>
2025-08-19T03:33:12.7483213Z 
2025-08-19T03:33:12.7483347Z # price\_importer.tests.conftest
2025-08-19T03:33:12.7483588Z 
2025-08-19T03:33:12.7483751Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T03:33:12.7484031Z 
2025-08-19T03:33:12.7484180Z # price\_importer.tests.test\_reader
2025-08-19T03:33:12.7484429Z 
2025-08-19T03:33:12.7484589Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T03:33:12.7484874Z 
2025-08-19T03:33:12.7485011Z # price\_importer.tests.test\_imports
2025-08-19T03:33:12.7485255Z 
2025-08-19T03:33:12.7485408Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T03:33:12.7485685Z 
2025-08-19T03:33:12.7485821Z # price\_importer.tests.test\_smoke
2025-08-19T03:33:12.7486062Z 
2025-08-19T03:33:12.7486241Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T03:33:12.7486529Z 
2025-08-19T03:33:12.7486674Z # price\_importer.tests.test\_normaliser
2025-08-19T03:33:12.7486942Z 
2025-08-19T03:33:12.7487072Z <a id="price_importer.tests"></a>
2025-08-19T03:33:12.7487314Z 
2025-08-19T03:33:12.7487436Z # price\_importer.tests
2025-08-19T03:33:12.7487633Z 
2025-08-19T03:33:12.7487765Z <a id="price_importer.reader"></a>
2025-08-19T03:33:12.7488002Z 
2025-08-19T03:33:12.7488131Z # price\_importer.reader
2025-08-19T03:33:12.7488327Z 
2025-08-19T03:33:12.7488470Z <a id="price_importer.repository"></a>
2025-08-19T03:33:12.7488717Z 
2025-08-19T03:33:12.7488843Z # price\_importer.repository
2025-08-19T03:33:12.7489054Z 
2025-08-19T03:33:12.7489183Z <a id="price_importer.import"></a>
2025-08-19T03:33:12.7489421Z 
2025-08-19T03:33:12.7489539Z # price\_importer.import
2025-08-19T03:33:12.7489735Z 
2025-08-19T03:33:12.7489849Z <a id="fees_h10"></a>
2025-08-19T03:33:12.7490019Z 
2025-08-19T03:33:12.7490130Z # fees\_h10
2025-08-19T03:33:12.7490442Z 
2025-08-19T03:33:12.7490565Z <a id="fees_h10.worker"></a>
2025-08-19T03:33:12.7490770Z 
2025-08-19T03:33:12.7491019Z # fees\_h10.worker
2025-08-19T03:33:12.7491206Z 
2025-08-19T03:33:12.7491364Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T03:33:12.7491652Z 
2025-08-19T03:33:12.7491778Z #### list\_active\_asins
2025-08-19T03:33:12.7491971Z 
2025-08-19T03:33:12.7492077Z ```python
2025-08-19T03:33:12.7492351Z def list_active_asins() -> list[str]
2025-08-19T03:33:12.7492685Z ```
2025-08-19T03:33:12.7492825Z 
2025-08-19T03:33:12.7493003Z Return known ASINs or an empty list if unavailable.
2025-08-19T03:33:12.7493292Z 
2025-08-19T03:33:12.7493412Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T03:33:12.7493664Z 
2025-08-19T03:33:12.7493785Z # fees\_h10.tests.test\_smoke
2025-08-19T03:33:12.7494002Z 
2025-08-19T03:33:12.7494132Z <a id="fees_h10.tests"></a>
2025-08-19T03:33:12.7494353Z 
2025-08-19T03:33:12.7494460Z # fees\_h10.tests
2025-08-19T03:33:12.7494650Z 
2025-08-19T03:33:12.7494786Z <a id="fees_h10.client"></a>
2025-08-19T03:33:12.7495006Z 
2025-08-19T03:33:12.7495120Z # fees\_h10.client
2025-08-19T03:33:12.7495303Z 
2025-08-19T03:33:12.7495435Z <a id="fees_h10.repository"></a>
2025-08-19T03:33:12.7495666Z 
2025-08-19T03:33:12.7495790Z # fees\_h10.repository
2025-08-19T03:33:12.7495964Z 
2025-08-19T03:33:12.7496072Z <a id="emailer"></a>
2025-08-19T03:33:12.7496245Z 
2025-08-19T03:33:12.7496346Z # emailer
2025-08-19T03:33:12.7496478Z 
2025-08-19T03:33:12.7496628Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T03:33:12.7496911Z 
2025-08-19T03:33:12.7497047Z # emailer.tests.test\_import\_emailer
2025-08-19T03:33:12.7497288Z 
2025-08-19T03:33:12.7497430Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T03:33:12.7497667Z 
2025-08-19T03:33:12.7497788Z # emailer.tests.test\_smoke
2025-08-19T03:33:12.7497990Z 
2025-08-19T03:33:12.7498117Z <a id="emailer.tests"></a>
2025-08-19T03:33:12.7498309Z 
2025-08-19T03:33:12.7498414Z # emailer.tests
2025-08-19T03:33:12.7498748Z 
2025-08-19T03:33:12.7498887Z <a id="emailer.generate_body"></a>
2025-08-19T03:33:12.7499116Z 
2025-08-19T03:33:12.7499238Z # emailer.generate\_body
2025-08-19T03:33:12.7499435Z 
2025-08-19T03:33:12.7499544Z <a id="llm_server"></a>
2025-08-19T03:33:12.7499728Z 
2025-08-19T03:33:12.7499836Z # llm\_server
2025-08-19T03:33:12.7499980Z 
2025-08-19T03:33:12.7500098Z <a id="llm_server.app"></a>
2025-08-19T03:33:12.7500306Z 
2025-08-19T03:33:12.7500408Z # llm\_server.app
2025-08-19T03:33:12.7500566Z 
