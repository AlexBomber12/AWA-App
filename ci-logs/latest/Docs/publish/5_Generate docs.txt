2025-08-18T17:58:03.0692294Z ##[group]Run pydoc-markdown
2025-08-18T17:58:03.0692584Z [36;1mpydoc-markdown[0m
2025-08-18T17:58:03.0732067Z shell: /usr/bin/bash -e {0}
2025-08-18T17:58:03.0732293Z env:
2025-08-18T17:58:03.0732529Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:58:03.0732934Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T17:58:03.0733319Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:58:03.0733650Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:58:03.0733981Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:58:03.0734307Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T17:58:03.0734590Z ##[endgroup]
2025-08-18T17:58:03.4030622Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T17:58:03.4031262Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T17:58:03.4031706Z In "pydoc-markdown.yml"
2025-08-18T17:58:03.4032120Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T17:58:03.4032779Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T17:58:03.4033680Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T17:58:03.4034166Z 
2025-08-18T17:58:03.6957538Z <a id="__init__"></a>
2025-08-18T17:58:03.6958096Z 
2025-08-18T17:58:03.6958249Z # \_\_init\_\_
2025-08-18T17:58:03.6958481Z 
2025-08-18T17:58:03.6958629Z <a id="api"></a>
2025-08-18T17:58:03.6958876Z 
2025-08-18T17:58:03.6959009Z # api
2025-08-18T17:58:03.6959130Z 
2025-08-18T17:58:03.6959235Z <a id="api.errors"></a>
2025-08-18T17:58:03.6959428Z 
2025-08-18T17:58:03.6959588Z # api.errors
2025-08-18T17:58:03.6959814Z 
2025-08-18T17:58:03.6960009Z <a id="api.tests.test_errors_json"></a>
2025-08-18T17:58:03.6960404Z 
2025-08-18T17:58:03.6960593Z # api.tests.test\_errors\_json
2025-08-18T17:58:03.6960913Z 
2025-08-18T17:58:03.6961099Z <a id="api.tests.test_llm"></a>
2025-08-18T17:58:03.6961421Z 
2025-08-18T17:58:03.6961929Z # api.tests.test\_llm
2025-08-18T17:58:03.6962225Z 
2025-08-18T17:58:03.6962413Z <a id="api.tests.test_cors"></a>
2025-08-18T17:58:03.6962752Z 
2025-08-18T17:58:03.6962922Z # api.tests.test\_cors
2025-08-18T17:58:03.6963194Z 
2025-08-18T17:58:03.6963382Z <a id="api.tests.test_imports"></a>
2025-08-18T17:58:03.6963737Z 
2025-08-18T17:58:03.6963918Z # api.tests.test\_imports
2025-08-18T17:58:03.6964201Z 
2025-08-18T17:58:03.6964391Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T17:58:03.6964756Z 
2025-08-18T17:58:03.6964929Z # api.tests.test\_rate\_limit
2025-08-18T17:58:03.6965229Z 
2025-08-18T17:58:03.6965433Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T17:58:03.6966083Z 
2025-08-18T17:58:03.6966224Z #### app
2025-08-18T17:58:03.6966416Z 
2025-08-18T17:58:03.6966567Z noqa: E402
2025-08-18T17:58:03.6966766Z 
2025-08-18T17:58:03.6966954Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T17:58:03.6967317Z 
2025-08-18T17:58:03.6967499Z # api.tests.test\_entrypoint
2025-08-18T17:58:03.6967808Z 
2025-08-18T17:58:03.6967999Z <a id="api.tests.test_health"></a>
2025-08-18T17:58:03.6968292Z 
2025-08-18T17:58:03.6968419Z # api.tests.test\_health
2025-08-18T17:58:03.6968635Z 
2025-08-18T17:58:03.6968778Z <a id="api.logging_config"></a>
2025-08-18T17:58:03.6969019Z 
2025-08-18T17:58:03.6969139Z # api.logging\_config
2025-08-18T17:58:03.6969341Z 
2025-08-18T17:58:03.6969485Z <a id="api.migrations.env"></a>
2025-08-18T17:58:03.6969728Z 
2025-08-18T17:58:03.6969852Z # api.migrations.env
2025-08-18T17:58:03.6970056Z 
2025-08-18T17:58:03.6970257Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T17:58:03.6970594Z 
2025-08-18T17:58:03.6970711Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T17:58:03.6970893Z 
2025-08-18T17:58:03.6971001Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T17:58:03.6971188Z 
2025-08-18T17:58:03.6971285Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T17:58:03.6971454Z 
2025-08-18T17:58:03.6971605Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T17:58:03.6972092Z 
2025-08-18T17:58:03.6972230Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T17:58:03.6972448Z 
2025-08-18T17:58:03.6972575Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T17:58:03.6972774Z 
2025-08-18T17:58:03.6972879Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T17:58:03.6973065Z 
2025-08-18T17:58:03.6973183Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T17:58:03.6973375Z 
2025-08-18T17:58:03.6973477Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T17:58:03.6973664Z 
2025-08-18T17:58:03.6973786Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T17:58:03.6973987Z 
2025-08-18T17:58:03.6974101Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T17:58:03.6974289Z 
2025-08-18T17:58:03.6974403Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T17:58:03.6974600Z 
2025-08-18T17:58:03.6974705Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T17:58:03.6974898Z 
2025-08-18T17:58:03.6975019Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T17:58:03.6975223Z 
2025-08-18T17:58:03.6975330Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T17:58:03.6975515Z 
2025-08-18T17:58:03.6975888Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T17:58:03.6976120Z 
2025-08-18T17:58:03.6976241Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T17:58:03.6976444Z 
2025-08-18T17:58:03.6976564Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T17:58:03.6976762Z 
2025-08-18T17:58:03.6976874Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T17:58:03.6977059Z 
2025-08-18T17:58:03.6977193Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T17:58:03.6977406Z 
2025-08-18T17:58:03.6977532Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T17:58:03.6977728Z 
2025-08-18T17:58:03.6977835Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T17:58:03.6978179Z 
2025-08-18T17:58:03.6978272Z # api.migrations.versions.0001\_baseline
2025-08-18T17:58:03.6978443Z 
2025-08-18T17:58:03.6978538Z <a id="api.migrations.versions"></a>
2025-08-18T17:58:03.6978698Z 
2025-08-18T17:58:03.6978780Z # api.migrations.versions
2025-08-18T17:58:03.6978911Z 
2025-08-18T17:58:03.6978998Z <a id="api.migrations"></a>
2025-08-18T17:58:03.6979133Z 
2025-08-18T17:58:03.6979205Z # api.migrations
2025-08-18T17:58:03.6979318Z 
2025-08-18T17:58:03.6979387Z <a id="api.db"></a>
2025-08-18T17:58:03.6979495Z 
2025-08-18T17:58:03.6979567Z # api.db
2025-08-18T17:58:03.6979661Z 
2025-08-18T17:58:03.6979748Z <a id="api.routes.stats"></a>
2025-08-18T17:58:03.6979887Z 
2025-08-18T17:58:03.6979966Z # api.routes.stats
2025-08-18T17:58:03.6980071Z 
2025-08-18T17:58:03.6980158Z <a id="api.routes.stats.kpi"></a>
2025-08-18T17:58:03.6980311Z 
2025-08-18T17:58:03.6980374Z #### kpi
2025-08-18T17:58:03.6980459Z 
2025-08-18T17:58:03.6980524Z ```python
2025-08-18T17:58:03.6980698Z @router.get("/stats/kpi")
2025-08-18T17:58:03.6980944Z def kpi() -> List[Dict[str, int]]
2025-08-18T17:58:03.6981151Z ```
2025-08-18T17:58:03.6981261Z 
2025-08-18T17:58:03.6981343Z Return KPI metrics (mock).
2025-08-18T17:58:03.6981528Z 
2025-08-18T17:58:03.6981637Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T17:58:03.6981816Z 
2025-08-18T17:58:03.6981885Z #### roi\_by\_vendor
2025-08-18T17:58:03.6981996Z 
2025-08-18T17:58:03.6982066Z ```python
2025-08-18T17:58:03.6982240Z @router.get("/stats/roi_by_vendor")
2025-08-18T17:58:03.6982493Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T17:58:03.6982720Z ```
2025-08-18T17:58:03.6982806Z 
2025-08-18T17:58:03.6982887Z Return ROI percent by vendor.
2025-08-18T17:58:03.6983029Z 
2025-08-18T17:58:03.6983129Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T17:58:03.6983301Z 
2025-08-18T17:58:03.6983366Z #### roi\_trend
2025-08-18T17:58:03.6983468Z 
2025-08-18T17:58:03.6983536Z ```python
2025-08-18T17:58:03.6983700Z @router.get("/stats/roi_trend")
2025-08-18T17:58:03.6984087Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T17:58:03.6984320Z ```
2025-08-18T17:58:03.6984405Z 
2025-08-18T17:58:03.6984480Z Return 30-day ROI trend.
2025-08-18T17:58:03.6984619Z 
2025-08-18T17:58:03.6984702Z <a id="api.routes.roi"></a>
2025-08-18T17:58:03.6984871Z 
2025-08-18T17:58:03.6984940Z # api.routes.roi
2025-08-18T17:58:03.6985046Z 
2025-08-18T17:58:03.6985135Z <a id="api.routes.health"></a>
2025-08-18T17:58:03.6985274Z 
2025-08-18T17:58:03.6985347Z # api.routes.health
2025-08-18T17:58:03.6985466Z 
2025-08-18T17:58:03.6985558Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T17:58:03.6985902Z 
2025-08-18T17:58:03.6985971Z #### MAX\_SKEW
2025-08-18T17:58:03.6986076Z 
2025-08-18T17:58:03.6986139Z seconds
2025-08-18T17:58:03.6986223Z 
2025-08-18T17:58:03.6986320Z <a id="api.routes.health.health"></a>
2025-08-18T17:58:03.6986486Z 
2025-08-18T17:58:03.6986549Z #### health
2025-08-18T17:58:03.6986649Z 
2025-08-18T17:58:03.6986712Z ```python
2025-08-18T17:58:03.6986909Z @router.get("/health", include_in_schema=False)
2025-08-18T17:58:03.6987300Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T17:58:03.6987641Z ```
2025-08-18T17:58:03.6987730Z 
2025-08-18T17:58:03.6987846Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T17:58:03.6988045Z 
2025-08-18T17:58:03.6988142Z <a id="api.routes.repository"></a>
2025-08-18T17:58:03.6988301Z 
2025-08-18T17:58:03.6988378Z # api.routes.repository
2025-08-18T17:58:03.6988510Z 
2025-08-18T17:58:03.6988584Z <a id="api.routes"></a>
2025-08-18T17:58:03.6988701Z 
2025-08-18T17:58:03.6988767Z # api.routes
2025-08-18T17:58:03.6988871Z 
2025-08-18T17:58:03.6988948Z <a id="api.models.fee"></a>
2025-08-18T17:58:03.6989081Z 
2025-08-18T17:58:03.6989157Z # api.models.fee
2025-08-18T17:58:03.6989261Z 
2025-08-18T17:58:03.6989333Z <a id="api.models"></a>
2025-08-18T17:58:03.6989456Z 
2025-08-18T17:58:03.6989520Z # api.models
2025-08-18T17:58:03.6989614Z 
2025-08-18T17:58:03.6989829Z <a id="api.roi_repository"></a>
2025-08-18T17:58:03.6989983Z 
2025-08-18T17:58:03.6990056Z # api.roi\_repository
2025-08-18T17:58:03.6990173Z 
2025-08-18T17:58:03.6990250Z <a id="api.main"></a>
2025-08-18T17:58:03.6990364Z 
2025-08-18T17:58:03.6990427Z # api.main
2025-08-18T17:58:03.6990518Z 
2025-08-18T17:58:03.6990603Z <a id="api.main.ready"></a>
2025-08-18T17:58:03.6990735Z 
2025-08-18T17:58:03.6990798Z #### ready
2025-08-18T17:58:03.6990892Z 
2025-08-18T17:58:03.6990955Z ```python
2025-08-18T17:58:03.6991217Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T17:58:03.6991664Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T17:58:03.6992026Z                                                                       str]
2025-08-18T17:58:03.6992252Z ```
2025-08-18T17:58:03.6992333Z 
2025-08-18T17:58:03.6992441Z Return 200 only when migrations are at head.
2025-08-18T17:58:03.6992617Z 
2025-08-18T17:58:03.6992693Z <a id="api.config"></a>
2025-08-18T17:58:03.6992823Z 
2025-08-18T17:58:03.6992891Z # api.config
2025-08-18T17:58:03.6992986Z 
2025-08-18T17:58:03.6993057Z <a id="etl"></a>
2025-08-18T17:58:03.6993162Z 
2025-08-18T17:58:03.6993222Z # etl
2025-08-18T17:58:03.6993310Z 
2025-08-18T17:58:03.6993398Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T17:58:03.6993549Z 
2025-08-18T17:58:03.6993622Z # etl.fba\_fee\_ingestor
2025-08-18T17:58:03.6993753Z 
2025-08-18T17:58:03.6993833Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T17:58:03.6993977Z 
2025-08-18T17:58:03.6994050Z # etl.sp\_fees\_ingestor
2025-08-18T17:58:03.6994179Z 
2025-08-18T17:58:03.6994258Z <a id="etl.keepa_ingestor"></a>
2025-08-18T17:58:03.6994400Z 
2025-08-18T17:58:03.6994476Z # etl.keepa\_ingestor
2025-08-18T17:58:03.6994590Z 
2025-08-18T17:58:03.6994656Z <a id="etl.db"></a>
2025-08-18T17:58:03.6994769Z 
2025-08-18T17:58:03.6994838Z # etl.db
2025-08-18T17:58:03.6994927Z 
2025-08-18T17:58:03.6995012Z <a id="etl.dialects.schemas"></a>
2025-08-18T17:58:03.6995164Z 
2025-08-18T17:58:03.6995254Z # etl.dialects.schemas
2025-08-18T17:58:03.6995538Z 
2025-08-18T17:58:03.6995814Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T17:58:03.6996023Z 
2025-08-18T17:58:03.6996119Z # etl.dialects.amazon\_reimbursements
2025-08-18T17:58:03.6996284Z 
2025-08-18T17:58:03.6996394Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T17:58:03.6996570Z 
2025-08-18T17:58:03.6996658Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T17:58:03.6996825Z 
2025-08-18T17:58:03.6996916Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T17:58:03.6997084Z 
2025-08-18T17:58:03.6997171Z # etl.dialects.amazon\_returns
2025-08-18T17:58:03.6997314Z 
2025-08-18T17:58:03.6997408Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T17:58:03.6997579Z 
2025-08-18T17:58:03.6997670Z # etl.dialects.amazon\_fee\_preview
2025-08-18T17:58:03.6997824Z 
2025-08-18T17:58:03.6997931Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T17:58:03.6998125Z 
2025-08-18T17:58:03.6998219Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T17:58:03.6998401Z 
2025-08-18T17:58:03.6998502Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T17:58:03.6998676Z 
2025-08-18T17:58:03.6998761Z # etl.dialects.amazon\_settlements
2025-08-18T17:58:03.6998914Z 
2025-08-18T17:58:03.6998997Z <a id="etl.dialects"></a>
2025-08-18T17:58:03.6999127Z 
2025-08-18T17:58:03.6999192Z # etl.dialects
2025-08-18T17:58:03.6999303Z 
2025-08-18T17:58:03.6999370Z <a id="ingest"></a>
2025-08-18T17:58:03.6999480Z 
2025-08-18T17:58:03.6999545Z # ingest
2025-08-18T17:58:03.6999634Z 
2025-08-18T17:58:03.6999718Z <a id="ingest.maintenance"></a>
2025-08-18T17:58:03.6999865Z 
2025-08-18T17:58:03.6999944Z # ingest.maintenance
2025-08-18T17:58:03.7000061Z 
2025-08-18T17:58:03.7000143Z <a id="ingest.copy_loader"></a>
2025-08-18T17:58:03.7000291Z 
2025-08-18T17:58:03.7000363Z # ingest.copy\_loader
2025-08-18T17:58:03.7000478Z 
2025-08-18T17:58:03.7000585Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T17:58:03.7000774Z 
2025-08-18T17:58:03.7000973Z #### copy\_df\_via\_temp
2025-08-18T17:58:03.7001111Z 
2025-08-18T17:58:03.7001180Z ```python
2025-08-18T17:58:03.7001356Z def copy_df_via_temp(engine: Engine,
2025-08-18T17:58:03.7001599Z                      df: pd.DataFrame,
2025-08-18T17:58:03.7001851Z                      target_table: str,
2025-08-18T17:58:03.7002081Z                      *,
2025-08-18T17:58:03.7002292Z                      target_schema: Optional[str] = None,
2025-08-18T17:58:03.7002561Z                      columns: Sequence[str],
2025-08-18T17:58:03.7002839Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T17:58:03.7003124Z                      analyze_after: bool = False,
2025-08-18T17:58:03.7003395Z                      connection: Any | None = None) -> int
2025-08-18T17:58:03.7003633Z ```
2025-08-18T17:58:03.7003725Z 
2025-08-18T17:58:03.7003878Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T17:58:03.7004114Z 
2025-08-18T17:58:03.7004203Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T17:58:03.7004382Z 
2025-08-18T17:58:03.7004463Z # ingest.tests.test\_smoke
2025-08-18T17:58:03.7004597Z 
2025-08-18T17:58:03.7004682Z <a id="ingest.tests"></a>
2025-08-18T17:58:03.7004810Z 
2025-08-18T17:58:03.7004880Z # ingest.tests
2025-08-18T17:58:03.7004988Z 
2025-08-18T17:58:03.7005074Z <a id="ingest.upload_router"></a>
2025-08-18T17:58:03.7005233Z 
2025-08-18T17:58:03.7005310Z # ingest.upload\_router
2025-08-18T17:58:03.7005441Z 
2025-08-18T17:58:03.7005526Z <a id="ingest.email_watcher"></a>
2025-08-18T17:58:03.7005874Z 
2025-08-18T17:58:03.7005970Z # ingest.email\_watcher
2025-08-18T17:58:03.7006098Z 
2025-08-18T17:58:03.7006188Z <a id="ingest.email_watcher.main"></a>
2025-08-18T17:58:03.7006354Z 
2025-08-18T17:58:03.7006426Z #### main
2025-08-18T17:58:03.7006517Z 
2025-08-18T17:58:03.7006581Z ```python
2025-08-18T17:58:03.7006756Z def main() -> dict[str, str]
2025-08-18T17:58:03.7006950Z ```
2025-08-18T17:58:03.7007043Z 
2025-08-18T17:58:03.7007183Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T17:58:03.7007554Z 
2025-08-18T17:58:03.7007692Z Returns {"status": "success"} when processing completes.
2025-08-18T17:58:03.7007912Z 
2025-08-18T17:58:03.7007989Z <a id="ingest.tasks"></a>
2025-08-18T17:58:03.7008124Z 
2025-08-18T17:58:03.7008190Z # ingest.tasks
2025-08-18T17:58:03.7008293Z 
2025-08-18T17:58:03.7008392Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T17:58:03.7008574Z 
2025-08-18T17:58:03.7008652Z #### task\_import\_file
2025-08-18T17:58:03.7008771Z 
2025-08-18T17:58:03.7008842Z ```python
2025-08-18T17:58:03.7009052Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T17:58:03.7009335Z def task_import_file(self,
2025-08-18T17:58:03.7009534Z                      uri: str,
2025-08-18T17:58:03.7009762Z                      report_type: Optional[str] = None,
2025-08-18T17:58:03.7010033Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T17:58:03.7010277Z ```
2025-08-18T17:58:03.7010362Z 
2025-08-18T17:58:03.7010506Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T17:58:03.7010721Z 
2025-08-18T17:58:03.7010803Z <a id="ingest.celery_app"></a>
2025-08-18T17:58:03.7010942Z 
2025-08-18T17:58:03.7011019Z # ingest.celery\_app
2025-08-18T17:58:03.7011134Z 
2025-08-18T17:58:03.7011216Z <a id="ingest.ingest_router"></a>
2025-08-18T17:58:03.7011372Z 
2025-08-18T17:58:03.7011447Z # ingest.ingest\_router
2025-08-18T17:58:03.7011577Z 
2025-08-18T17:58:03.7011653Z <a id="logistics_etl"></a>
2025-08-18T17:58:03.7011784Z 
2025-08-18T17:58:03.7011858Z # logistics\_etl
2025-08-18T17:58:03.7011964Z 
2025-08-18T17:58:03.7012042Z Daily logistics ETL job.
2025-08-18T17:58:03.7012170Z 
2025-08-18T17:58:03.7012252Z <a id="logistics_etl.__main__"></a>
2025-08-18T17:58:03.7012404Z 
2025-08-18T17:58:03.7012480Z # logistics\_etl.\_\_main\_\_
2025-08-18T17:58:03.7012620Z 
2025-08-18T17:58:03.7012697Z <a id="logistics_etl.dsn"></a>
2025-08-18T17:58:03.7012832Z 
2025-08-18T17:58:03.7012908Z # logistics\_etl.dsn
2025-08-18T17:58:03.7013143Z 
2025-08-18T17:58:03.7013268Z Local DSN builder to avoid cross-service dependency.
2025-08-18T17:58:03.7013470Z 
2025-08-18T17:58:03.7013566Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T17:58:03.7013733Z 
2025-08-18T17:58:03.7013798Z #### build\_dsn
2025-08-18T17:58:03.7013906Z 
2025-08-18T17:58:03.7013971Z ```python
2025-08-18T17:58:03.7014142Z def build_dsn(sync: bool = True) -> str
2025-08-18T17:58:03.7014368Z ```
2025-08-18T17:58:03.7014450Z 
2025-08-18T17:58:03.7014593Z Return a Postgres DSN assembled from environment variables.
2025-08-18T17:58:03.7014815Z 
2025-08-18T17:58:03.7014960Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T17:58:03.7015351Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T17:58:03.7015888Z error when any required variable is missing.
2025-08-18T17:58:03.7016084Z 
2025-08-18T17:58:03.7016177Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T17:58:03.7016350Z 
2025-08-18T17:58:03.7016438Z # logistics\_etl.tests.conftest
2025-08-18T17:58:03.7016596Z 
2025-08-18T17:58:03.7016701Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T17:58:03.7016893Z 
2025-08-18T17:58:03.7016982Z # logistics\_etl.tests.test\_repository
2025-08-18T17:58:03.7017151Z 
2025-08-18T17:58:03.7017245Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T17:58:03.7017422Z 
2025-08-18T17:58:03.7017504Z # logistics\_etl.tests.test\_cron
2025-08-18T17:58:03.7017656Z 
2025-08-18T17:58:03.7017760Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T17:58:03.7017936Z 
2025-08-18T17:58:03.7018022Z # logistics\_etl.tests.test\_imports
2025-08-18T17:58:03.7018185Z 
2025-08-18T17:58:03.7018276Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T17:58:03.7018448Z 
2025-08-18T17:58:03.7018531Z # logistics\_etl.tests.test\_smoke
2025-08-18T17:58:03.7018687Z 
2025-08-18T17:58:03.7018781Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T17:58:03.7018952Z 
2025-08-18T17:58:03.7019041Z # logistics\_etl.tests.test\_client
2025-08-18T17:58:03.7019202Z 
2025-08-18T17:58:03.7019410Z <a id="logistics_etl.tests"></a>
2025-08-18T17:58:03.7019563Z 
2025-08-18T17:58:03.7019636Z # logistics\_etl.tests
2025-08-18T17:58:03.7019754Z 
2025-08-18T17:58:03.7019833Z <a id="logistics_etl.flow"></a>
2025-08-18T17:58:03.7019976Z 
2025-08-18T17:58:03.7020048Z # logistics\_etl.flow
2025-08-18T17:58:03.7020164Z 
2025-08-18T17:58:03.7020252Z <a id="logistics_etl.client"></a>
2025-08-18T17:58:03.7020399Z 
2025-08-18T17:58:03.7020472Z # logistics\_etl.client
2025-08-18T17:58:03.7020594Z 
2025-08-18T17:58:03.7020681Z <a id="logistics_etl.cron"></a>
2025-08-18T17:58:03.7020819Z 
2025-08-18T17:58:03.7020891Z # logistics\_etl.cron
2025-08-18T17:58:03.7021014Z 
2025-08-18T17:58:03.7021093Z <a id="logistics_etl.db"></a>
2025-08-18T17:58:03.7021230Z 
2025-08-18T17:58:03.7021306Z # logistics\_etl.db
2025-08-18T17:58:03.7021416Z 
2025-08-18T17:58:03.7021507Z <a id="logistics_etl.repository"></a>
2025-08-18T17:58:03.7021670Z 
2025-08-18T17:58:03.7021756Z # logistics\_etl.repository
2025-08-18T17:58:03.7021902Z 
2025-08-18T17:58:03.7021974Z <a id="alert_bot"></a>
2025-08-18T17:58:03.7022095Z 
2025-08-18T17:58:03.7022161Z # alert\_bot
2025-08-18T17:58:03.7022259Z 
2025-08-18T17:58:03.7022348Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T17:58:03.7022518Z 
2025-08-18T17:58:03.7022603Z # alert\_bot.tests.test\_smoke
2025-08-18T17:58:03.7022743Z 
2025-08-18T17:58:03.7022827Z <a id="alert_bot.tests"></a>
2025-08-18T17:58:03.7022963Z 
2025-08-18T17:58:03.7023029Z # alert\_bot.tests
2025-08-18T17:58:03.7023141Z 
2025-08-18T17:58:03.7023222Z <a id="alert_bot.alert_bot"></a>
2025-08-18T17:58:03.7023364Z 
2025-08-18T17:58:03.7023438Z # alert\_bot.alert\_bot
2025-08-18T17:58:03.7023564Z 
2025-08-18T17:58:03.7023640Z <a id="alert_bot.rules"></a>
2025-08-18T17:58:03.7023770Z 
2025-08-18T17:58:03.7023843Z # alert\_bot.rules
2025-08-18T17:58:03.7023947Z 
2025-08-18T17:58:03.7024014Z <a id="common"></a>
2025-08-18T17:58:03.7024126Z 
2025-08-18T17:58:03.7024187Z # common
2025-08-18T17:58:03.7024395Z 
2025-08-18T17:58:03.7024473Z <a id="common.dsn"></a>
2025-08-18T17:58:03.7024600Z 
2025-08-18T17:58:03.7024663Z # common.dsn
2025-08-18T17:58:03.7024758Z 
2025-08-18T17:58:03.7024847Z <a id="common.dsn.build_dsn"></a>
2025-08-18T17:58:03.7024996Z 
2025-08-18T17:58:03.7025060Z #### build\_dsn
2025-08-18T17:58:03.7025163Z 
2025-08-18T17:58:03.7025231Z ```python
2025-08-18T17:58:03.7056499Z def build_dsn(sync: bool = True) -> str
2025-08-18T17:58:03.7057019Z ```
2025-08-18T17:58:03.7057211Z 
2025-08-18T17:58:03.7057492Z Return a Postgres DSN, validating required variables.
2025-08-18T17:58:03.7057943Z 
2025-08-18T17:58:03.7058346Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T17:58:03.7059157Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T17:58:03.7059690Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T17:58:03.7060093Z missing.
2025-08-18T17:58:03.7060207Z 
2025-08-18T17:58:03.7060335Z <a id="common.models_vendor"></a>
2025-08-18T17:58:03.7060535Z 
2025-08-18T17:58:03.7060632Z # common.models\_vendor
2025-08-18T17:58:03.7060791Z 
2025-08-18T17:58:03.7060905Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T17:58:03.7061114Z 
2025-08-18T17:58:03.7061197Z ## Vendor Objects
2025-08-18T17:58:03.7061337Z 
2025-08-18T17:58:03.7061417Z ```python
2025-08-18T17:58:03.7061618Z class Vendor(Base)
2025-08-18T17:58:03.7061827Z ```
2025-08-18T17:58:03.7061932Z 
2025-08-18T17:58:03.7062039Z Vendor of inventory items.
2025-08-18T17:58:03.7062206Z 
2025-08-18T17:58:03.7062337Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T17:58:03.7062567Z 
2025-08-18T17:58:03.7062660Z ## VendorPrice Objects
2025-08-18T17:58:03.7062809Z 
2025-08-18T17:58:03.7062887Z ```python
2025-08-18T17:58:03.7063091Z class VendorPrice(Base)
2025-08-18T17:58:03.7063322Z ```
2025-08-18T17:58:03.7063429Z 
2025-08-18T17:58:03.7063561Z Association table linking vendors to pricing.
2025-08-18T17:58:03.7063797Z 
2025-08-18T17:58:03.7063899Z <a id="common.db_url"></a>
2025-08-18T17:58:03.7064261Z 
2025-08-18T17:58:03.7064346Z # common.db\_url
2025-08-18T17:58:03.7064487Z 
2025-08-18T17:58:03.7064595Z <a id="common.db_url.build_url"></a>
2025-08-18T17:58:03.7064794Z 
2025-08-18T17:58:03.7064874Z #### build\_url
2025-08-18T17:58:03.7065014Z 
2025-08-18T17:58:03.7065094Z ```python
2025-08-18T17:58:03.7065320Z def build_url(async_: bool = True) -> str
2025-08-18T17:58:03.7065601Z ```
2025-08-18T17:58:03.7065916Z 
2025-08-18T17:58:03.7066049Z Return Postgres DSN from env or PG_* parts.
2025-08-18T17:58:03.7066271Z 
2025-08-18T17:58:03.7066370Z <a id="common.keepa"></a>
2025-08-18T17:58:03.7066540Z 
2025-08-18T17:58:03.7066627Z # common.keepa
2025-08-18T17:58:03.7066756Z 
2025-08-18T17:58:03.7066847Z <a id="common.llm"></a>
2025-08-18T17:58:03.7067004Z 
2025-08-18T17:58:03.7067085Z # common.llm
2025-08-18T17:58:03.7067208Z 
2025-08-18T17:58:03.7067315Z <a id="common.settings"></a>
2025-08-18T17:58:03.7067486Z 
2025-08-18T17:58:03.7067576Z # common.settings
2025-08-18T17:58:03.7067725Z 
2025-08-18T17:58:03.7067813Z <a id="common.db"></a>
2025-08-18T17:58:03.7067961Z 
2025-08-18T17:58:03.7068040Z # common.db
2025-08-18T17:58:03.7068168Z 
2025-08-18T17:58:03.7068279Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T17:58:03.7068455Z 
2025-08-18T17:58:03.7068536Z #### build\_sqlalchemy\_url
2025-08-18T17:58:03.7068669Z 
2025-08-18T17:58:03.7068732Z ```python
2025-08-18T17:58:03.7068909Z def build_sqlalchemy_url() -> str
2025-08-18T17:58:03.7069118Z ```
2025-08-18T17:58:03.7069206Z 
2025-08-18T17:58:03.7069301Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T17:58:03.7069471Z 
2025-08-18T17:58:03.7069563Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T17:58:03.7069736Z 
2025-08-18T17:58:03.7069811Z #### build\_asyncpg\_dsn
2025-08-18T17:58:03.7069939Z 
2025-08-18T17:58:03.7070011Z ```python
2025-08-18T17:58:03.7070184Z def build_asyncpg_dsn() -> str
2025-08-18T17:58:03.7070385Z ```
2025-08-18T17:58:03.7070596Z 
2025-08-18T17:58:03.7070727Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T17:58:03.7070953Z 
2025-08-18T17:58:03.7071041Z <a id="common.db.refresh_mvs"></a>
2025-08-18T17:58:03.7071194Z 
2025-08-18T17:58:03.7071267Z #### refresh\_mvs
2025-08-18T17:58:03.7071373Z 
2025-08-18T17:58:03.7071437Z ```python
2025-08-18T17:58:03.7071639Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T17:58:03.7071887Z ```
2025-08-18T17:58:03.7071974Z 
2025-08-18T17:58:03.7072110Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T17:58:03.7072327Z 
2025-08-18T17:58:03.7072405Z <a id="common.config"></a>
2025-08-18T17:58:03.7072544Z 
2025-08-18T17:58:03.7072610Z # common.config
2025-08-18T17:58:03.7072718Z 
2025-08-18T17:58:03.7072800Z <a id="common.base"></a>
2025-08-18T17:58:03.7072929Z 
2025-08-18T17:58:03.7073045Z # common.base
2025-08-18T17:58:03.7073150Z 
2025-08-18T17:58:03.7073231Z <a id="common.base.Base"></a>
2025-08-18T17:58:03.7073371Z 
2025-08-18T17:58:03.7073444Z ## Base Objects
2025-08-18T17:58:03.7073554Z 
2025-08-18T17:58:03.7073618Z ```python
2025-08-18T17:58:03.7073792Z class Base(DeclarativeBase)
2025-08-18T17:58:03.7073986Z ```
2025-08-18T17:58:03.7074069Z 
2025-08-18T17:58:03.7074160Z Base class for SQLAlchemy models.
2025-08-18T17:58:03.7074312Z 
2025-08-18T17:58:03.7074386Z <a id="repricer"></a>
2025-08-18T17:58:03.7074514Z 
2025-08-18T17:58:03.7074579Z # repricer
2025-08-18T17:58:03.7074671Z 
2025-08-18T17:58:03.7074760Z <a id="repricer.app.schemas"></a>
2025-08-18T17:58:03.7074919Z 
2025-08-18T17:58:03.7074996Z # repricer.app.schemas
2025-08-18T17:58:03.7075121Z 
2025-08-18T17:58:03.7075216Z <a id="repricer.app.deps"></a>
2025-08-18T17:58:03.7075369Z 
2025-08-18T17:58:03.7075442Z # repricer.app.deps
2025-08-18T17:58:03.7075556Z 
2025-08-18T17:58:03.7075782Z Placeholder module for Keepa / SP-API clients.
2025-08-18T17:58:03.7075977Z 
2025-08-18T17:58:03.7076063Z <a id="repricer.app.logic"></a>
2025-08-18T17:58:03.7076216Z 
2025-08-18T17:58:03.7076292Z # repricer.app.logic
2025-08-18T17:58:03.7076543Z 
2025-08-18T17:58:03.7076651Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T17:58:03.7076828Z 
2025-08-18T17:58:03.7076894Z #### MIN\_MARGIN
2025-08-18T17:58:03.7077001Z 
2025-08-18T17:58:03.7077069Z 15 % ROI
2025-08-18T17:58:03.7077157Z 
2025-08-18T17:58:03.7077262Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T17:58:03.7077448Z 
2025-08-18T17:58:03.7077523Z #### compute\_price
2025-08-18T17:58:03.7077632Z 
2025-08-18T17:58:03.7077707Z ```python
2025-08-18T17:58:03.7077953Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T17:58:03.7078268Z ```
2025-08-18T17:58:03.7078353Z 
2025-08-18T17:58:03.7078459Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T17:58:03.7078745Z Replace with real competitive logic later.
2025-08-18T17:58:03.7078919Z 
2025-08-18T17:58:03.7079003Z <a id="repricer.app.main"></a>
2025-08-18T17:58:03.7079154Z 
2025-08-18T17:58:03.7079226Z # repricer.app.main
2025-08-18T17:58:03.7079340Z 
2025-08-18T17:58:03.7079423Z <a id="repricer.app"></a>
2025-08-18T17:58:03.7079556Z 
2025-08-18T17:58:03.7079623Z # repricer.app
2025-08-18T17:58:03.7079727Z 
2025-08-18T17:58:03.7079826Z <a id="repricer.tests.test_imports"></a>
2025-08-18T17:58:03.7079995Z 
2025-08-18T17:58:03.7080078Z # repricer.tests.test\_imports
2025-08-18T17:58:03.7080224Z 
2025-08-18T17:58:03.7080312Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T17:58:03.7080473Z 
2025-08-18T17:58:03.7080561Z # repricer.tests.test\_smoke
2025-08-18T17:58:03.7080698Z 
2025-08-18T17:58:03.7080776Z <a id="repricer.tests"></a>
2025-08-18T17:58:03.7080911Z 
2025-08-18T17:58:03.7080985Z # repricer.tests
2025-08-18T17:58:03.7081092Z 
2025-08-18T17:58:03.7081158Z <a id="db"></a>
2025-08-18T17:58:03.7081263Z 
2025-08-18T17:58:03.7081324Z # db
2025-08-18T17:58:03.7081409Z 
2025-08-18T17:58:03.7081489Z <a id="db.utils.views"></a>
2025-08-18T17:58:03.7081628Z 
2025-08-18T17:58:03.7081695Z # db.utils.views
2025-08-18T17:58:03.7081800Z 
2025-08-18T17:58:03.7082074Z <a id="db.utils.views.replace_view"></a>
2025-08-18T17:58:03.7082255Z 
2025-08-18T17:58:03.7082323Z #### replace\_view
2025-08-18T17:58:03.7082438Z 
2025-08-18T17:58:03.7082502Z ```python
2025-08-18T17:58:03.7082703Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T17:58:03.7082960Z ```
2025-08-18T17:58:03.7083046Z 
2025-08-18T17:58:03.7083140Z Drop and recreate a SQL view atomically.
2025-08-18T17:58:03.7083317Z 
2025-08-18T17:58:03.7083389Z <a id="db.utils"></a>
2025-08-18T17:58:03.7083506Z 
2025-08-18T17:58:03.7083576Z # db.utils
2025-08-18T17:58:03.7083666Z 
2025-08-18T17:58:03.7083748Z <a id="price_importer"></a>
2025-08-18T17:58:03.7083888Z 
2025-08-18T17:58:03.7083957Z # price\_importer
2025-08-18T17:58:03.7084065Z 
2025-08-18T17:58:03.7084174Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T17:58:03.7084371Z 
2025-08-18T17:58:03.7084462Z # price\_importer.services\_common.dsn
2025-08-18T17:58:03.7084627Z 
2025-08-18T17:58:03.7084758Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T17:58:03.7084979Z 
2025-08-18T17:58:03.7085046Z #### build\_dsn
2025-08-18T17:58:03.7085153Z 
2025-08-18T17:58:03.7085216Z ```python
2025-08-18T17:58:03.7085394Z def build_dsn(sync: bool = True) -> str
2025-08-18T17:58:03.7085618Z ```
2025-08-18T17:58:03.7085827Z 
2025-08-18T17:58:03.7085897Z Return safe DSN.
2025-08-18T17:58:03.7086014Z 
2025-08-18T17:58:03.7086364Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T17:58:03.7086572Z 
2025-08-18T17:58:03.7086706Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T17:58:03.7086915Z 
2025-08-18T17:58:03.7087027Z # price\_importer.services\_common.models\_vendor
2025-08-18T17:58:03.7087227Z 
2025-08-18T17:58:03.7087336Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T17:58:03.7087531Z 
2025-08-18T17:58:03.7087633Z # price\_importer.services\_common.db\_url
2025-08-18T17:58:03.7087807Z 
2025-08-18T17:58:03.7087941Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T17:58:03.7088167Z 
2025-08-18T17:58:03.7088365Z #### build\_url
2025-08-18T17:58:03.7088469Z 
2025-08-18T17:58:03.7088535Z ```python
2025-08-18T17:58:03.7088720Z def build_url(async_: bool = True) -> str
2025-08-18T17:58:03.7088948Z ```
2025-08-18T17:58:03.7089040Z 
2025-08-18T17:58:03.7089138Z Return Postgres DSN from env or PG_* parts.
2025-08-18T17:58:03.7089313Z 
2025-08-18T17:58:03.7089428Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T17:58:03.7089615Z 
2025-08-18T17:58:03.7089711Z # price\_importer.services\_common.keepa
2025-08-18T17:58:03.7089890Z 
2025-08-18T17:58:03.7089993Z <a id="price_importer.services_common.llm"></a>
2025-08-18T17:58:03.7090175Z 
2025-08-18T17:58:03.7090267Z # price\_importer.services\_common.llm
2025-08-18T17:58:03.7090439Z 
2025-08-18T17:58:03.7090558Z <a id="price_importer.services_common.settings"></a>
2025-08-18T17:58:03.7090754Z 
2025-08-18T17:58:03.7090855Z # price\_importer.services\_common.settings
2025-08-18T17:58:03.7091030Z 
2025-08-18T17:58:03.7091136Z <a id="price_importer.services_common.db"></a>
2025-08-18T17:58:03.7091325Z 
2025-08-18T17:58:03.7091416Z # price\_importer.services\_common.db
2025-08-18T17:58:03.7091576Z 
2025-08-18T17:58:03.7091735Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T17:58:03.7091983Z 
2025-08-18T17:58:03.7092063Z #### build\_sqlalchemy\_url
2025-08-18T17:58:03.7092194Z 
2025-08-18T17:58:03.7092264Z ```python
2025-08-18T17:58:03.7092432Z def build_sqlalchemy_url() -> str
2025-08-18T17:58:03.7092642Z ```
2025-08-18T17:58:03.7092723Z 
2025-08-18T17:58:03.7092820Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T17:58:03.7092998Z 
2025-08-18T17:58:03.7093150Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T17:58:03.7093383Z 
2025-08-18T17:58:03.7093465Z #### build\_asyncpg\_dsn
2025-08-18T17:58:03.7093596Z 
2025-08-18T17:58:03.7093658Z ```python
2025-08-18T17:58:03.7093836Z def build_asyncpg_dsn() -> str
2025-08-18T17:58:03.7094036Z ```
2025-08-18T17:58:03.7094245Z 
2025-08-18T17:58:03.7094386Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T17:58:03.7094600Z 
2025-08-18T17:58:03.7094730Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T17:58:03.7094943Z 
2025-08-18T17:58:03.7095009Z #### refresh\_mvs
2025-08-18T17:58:03.7095116Z 
2025-08-18T17:58:03.7095183Z ```python
2025-08-18T17:58:03.7095384Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T17:58:03.7095741Z ```
2025-08-18T17:58:03.7095828Z 
2025-08-18T17:58:03.7095969Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T17:58:03.7096192Z 
2025-08-18T17:58:03.7096290Z <a id="price_importer.services_common"></a>
2025-08-18T17:58:03.7096467Z 
2025-08-18T17:58:03.7096556Z # price\_importer.services\_common
2025-08-18T17:58:03.7096718Z 
2025-08-18T17:58:03.7096822Z <a id="price_importer.services_common.base"></a>
2025-08-18T17:58:03.7097010Z 
2025-08-18T17:58:03.7097106Z # price\_importer.services\_common.base
2025-08-18T17:58:03.7097275Z 
2025-08-18T17:58:03.7097374Z <a id="price_importer.normaliser"></a>
2025-08-18T17:58:03.7097552Z 
2025-08-18T17:58:03.7097637Z # price\_importer.normaliser
2025-08-18T17:58:03.7097781Z 
2025-08-18T17:58:03.7097886Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T17:58:03.7098077Z 
2025-08-18T17:58:03.7098168Z # price\_importer.common.models\_vendor
2025-08-18T17:58:03.7098335Z 
2025-08-18T17:58:03.7098436Z <a id="price_importer.common.db_url"></a>
2025-08-18T17:58:03.7098608Z 
2025-08-18T17:58:03.7098695Z # price\_importer.common.db\_url
2025-08-18T17:58:03.7098848Z 
2025-08-18T17:58:03.7098954Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T17:58:03.7099146Z 
2025-08-18T17:58:03.7099209Z #### make\_dsn
2025-08-18T17:58:03.7099314Z 
2025-08-18T17:58:03.7099377Z ```python
2025-08-18T17:58:03.7099557Z def make_dsn(async_: bool = False) -> str
2025-08-18T17:58:03.7099780Z ```
2025-08-18T17:58:03.7099862Z 
2025-08-18T17:58:03.7099990Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T17:58:03.7100196Z 
2025-08-18T17:58:03.7100425Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T17:58:03.7100623Z 
2025-08-18T17:58:03.7100691Z #### build\_url
2025-08-18T17:58:03.7100794Z 
2025-08-18T17:58:03.7100867Z ```python
2025-08-18T17:58:03.7101051Z def build_url(async_: bool = False) -> str
2025-08-18T17:58:03.7101288Z ```
2025-08-18T17:58:03.7101372Z 
2025-08-18T17:58:03.7101494Z Return Postgres DSN built from environment variables.
2025-08-18T17:58:03.7101706Z 
2025-08-18T17:58:03.7101794Z <a id="price_importer.common"></a>
2025-08-18T17:58:03.7101950Z 
2025-08-18T17:58:03.7102029Z # price\_importer.common
2025-08-18T17:58:03.7102165Z 
2025-08-18T17:58:03.7102257Z <a id="price_importer.common.base"></a>
2025-08-18T17:58:03.7102422Z 
2025-08-18T17:58:03.7102516Z # price\_importer.common.base
2025-08-18T17:58:03.7102661Z 
2025-08-18T17:58:03.7102759Z <a id="price_importer.tests.conftest"></a>
2025-08-18T17:58:03.7102938Z 
2025-08-18T17:58:03.7103025Z # price\_importer.tests.conftest
2025-08-18T17:58:03.7103187Z 
2025-08-18T17:58:03.7103287Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T17:58:03.7103471Z 
2025-08-18T17:58:03.7103558Z # price\_importer.tests.test\_reader
2025-08-18T17:58:03.7103718Z 
2025-08-18T17:58:03.7103826Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T17:58:03.7104004Z 
2025-08-18T17:58:03.7104095Z # price\_importer.tests.test\_imports
2025-08-18T17:58:03.7104260Z 
2025-08-18T17:58:03.7104358Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T17:58:03.7104533Z 
2025-08-18T17:58:03.7104619Z # price\_importer.tests.test\_smoke
2025-08-18T17:58:03.7104784Z 
2025-08-18T17:58:03.7104890Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T17:58:03.7105076Z 
2025-08-18T17:58:03.7105175Z # price\_importer.tests.test\_normaliser
2025-08-18T17:58:03.7105346Z 
2025-08-18T17:58:03.7105430Z <a id="price_importer.tests"></a>
2025-08-18T17:58:03.7105587Z 
2025-08-18T17:58:03.7105781Z # price\_importer.tests
2025-08-18T17:58:03.7106030Z 
2025-08-18T17:58:03.7106118Z <a id="price_importer.reader"></a>
2025-08-18T17:58:03.7106281Z 
2025-08-18T17:58:03.7106358Z # price\_importer.reader
2025-08-18T17:58:03.7106485Z 
2025-08-18T17:58:03.7106581Z <a id="price_importer.repository"></a>
2025-08-18T17:58:03.7106749Z 
2025-08-18T17:58:03.7106834Z # price\_importer.repository
2025-08-18T17:58:03.7106979Z 
2025-08-18T17:58:03.7107065Z <a id="price_importer.import"></a>
2025-08-18T17:58:03.7107217Z 
2025-08-18T17:58:03.7107295Z # price\_importer.import
2025-08-18T17:58:03.7107427Z 
2025-08-18T17:58:03.7107501Z <a id="fees_h10"></a>
2025-08-18T17:58:03.7107635Z 
2025-08-18T17:58:03.7107705Z # fees\_h10
2025-08-18T17:58:03.7107801Z 
2025-08-18T17:58:03.7107878Z <a id="fees_h10.worker"></a>
2025-08-18T17:58:03.7108013Z 
2025-08-18T17:58:03.7108090Z # fees\_h10.worker
2025-08-18T17:58:03.7108196Z 
2025-08-18T17:58:03.7108293Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T17:58:03.7108477Z 
2025-08-18T17:58:03.7108551Z #### list\_active\_asins
2025-08-18T17:58:03.7108682Z 
2025-08-18T17:58:03.7108761Z ```python
2025-08-18T17:58:03.7108940Z def list_active_asins() -> list[str]
2025-08-18T17:58:03.7109159Z ```
2025-08-18T17:58:03.7109246Z 
2025-08-18T17:58:03.7109364Z Return known ASINs or an empty list if unavailable.
2025-08-18T17:58:03.7109566Z 
2025-08-18T17:58:03.7109652Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T17:58:03.7109811Z 
2025-08-18T17:58:03.7109892Z # fees\_h10.tests.test\_smoke
2025-08-18T17:58:03.7110037Z 
2025-08-18T17:58:03.7110113Z <a id="fees_h10.tests"></a>
2025-08-18T17:58:03.7110245Z 
2025-08-18T17:58:03.7110317Z # fees\_h10.tests
2025-08-18T17:58:03.7110421Z 
2025-08-18T17:58:03.7110497Z <a id="fees_h10.client"></a>
2025-08-18T17:58:03.7110636Z 
2025-08-18T17:58:03.7110703Z # fees\_h10.client
2025-08-18T17:58:03.7110808Z 
2025-08-18T17:58:03.7110889Z <a id="fees_h10.repository"></a>
2025-08-18T17:58:03.7111045Z 
2025-08-18T17:58:03.7111118Z # fees\_h10.repository
2025-08-18T17:58:03.7111237Z 
2025-08-18T17:58:03.7111319Z <a id="emailer"></a>
2025-08-18T17:58:03.7111551Z 
2025-08-18T17:58:03.7111614Z # emailer
2025-08-18T17:58:03.7111703Z 
2025-08-18T17:58:03.7111812Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T17:58:03.7111991Z 
2025-08-18T17:58:03.7112080Z # emailer.tests.test\_import\_emailer
2025-08-18T17:58:03.7112251Z 
2025-08-18T17:58:03.7112337Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T17:58:03.7112496Z 
2025-08-18T17:58:03.7112583Z # emailer.tests.test\_smoke
2025-08-18T17:58:03.7112723Z 
2025-08-18T17:58:03.7112800Z <a id="emailer.tests"></a>
2025-08-18T17:58:03.7112929Z 
2025-08-18T17:58:03.7113006Z # emailer.tests
2025-08-18T17:58:03.7113111Z 
2025-08-18T17:58:03.7113198Z <a id="emailer.generate_body"></a>
2025-08-18T17:58:03.7113356Z 
2025-08-18T17:58:03.7113434Z # emailer.generate\_body
2025-08-18T17:58:03.7113564Z 
2025-08-18T17:58:03.7113639Z <a id="llm_server"></a>
2025-08-18T17:58:03.7113765Z 
2025-08-18T17:58:03.7113831Z # llm\_server
2025-08-18T17:58:03.7113930Z 
2025-08-18T17:58:03.7114020Z <a id="llm_server.app"></a>
2025-08-18T17:58:03.7114158Z 
2025-08-18T17:58:03.7114259Z # llm\_server.app
2025-08-18T17:58:03.7114374Z 
