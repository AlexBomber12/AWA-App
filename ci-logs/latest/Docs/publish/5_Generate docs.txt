2025-08-18T20:51:10.1610283Z ##[group]Run pydoc-markdown
2025-08-18T20:51:10.1610578Z [36;1mpydoc-markdown[0m
2025-08-18T20:51:10.1650467Z shell: /usr/bin/bash -e {0}
2025-08-18T20:51:10.1650694Z env:
2025-08-18T20:51:10.1650933Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:51:10.1651359Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T20:51:10.1651760Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:51:10.1652112Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:51:10.1652469Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:51:10.1652822Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T20:51:10.1653124Z ##[endgroup]
2025-08-18T20:51:10.4561676Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T20:51:10.4562216Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T20:51:10.4562566Z In "pydoc-markdown.yml"
2025-08-18T20:51:10.4562894Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T20:51:10.4563365Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T20:51:10.4563935Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T20:51:10.4564340Z 
2025-08-18T20:51:10.7674440Z <a id="__init__"></a>
2025-08-18T20:51:10.7674865Z 
2025-08-18T20:51:10.7674993Z # \_\_init\_\_
2025-08-18T20:51:10.7675189Z 
2025-08-18T20:51:10.7675323Z <a id="api"></a>
2025-08-18T20:51:10.7675524Z 
2025-08-18T20:51:10.7675631Z # api
2025-08-18T20:51:10.7675803Z 
2025-08-18T20:51:10.7675947Z <a id="api.errors"></a>
2025-08-18T20:51:10.7676187Z 
2025-08-18T20:51:10.7676310Z # api.errors
2025-08-18T20:51:10.7676500Z 
2025-08-18T20:51:10.7676650Z <a id="api.sentry_config"></a>
2025-08-18T20:51:10.7676917Z 
2025-08-18T20:51:10.7677058Z # api.sentry\_config
2025-08-18T20:51:10.7677270Z 
2025-08-18T20:51:10.7677440Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T20:51:10.7677757Z 
2025-08-18T20:51:10.7678519Z # api.tests.test\_sentry\_scrub
2025-08-18T20:51:10.7678819Z 
2025-08-18T20:51:10.7678987Z <a id="api.tests.test_errors_json"></a>
2025-08-18T20:51:10.7679319Z 
2025-08-18T20:51:10.7679470Z # api.tests.test\_errors\_json
2025-08-18T20:51:10.7679737Z 
2025-08-18T20:51:10.7679891Z <a id="api.tests.test_llm"></a>
2025-08-18T20:51:10.7680150Z 
2025-08-18T20:51:10.7680283Z # api.tests.test\_llm
2025-08-18T20:51:10.7680497Z 
2025-08-18T20:51:10.7680665Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T20:51:10.7680985Z 
2025-08-18T20:51:10.7681135Z # api.tests.test\_sentry\_event
2025-08-18T20:51:10.7681416Z 
2025-08-18T20:51:10.7681646Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T20:51:10.7682032Z 
2025-08-18T20:51:10.7682185Z ## DummyTransport Objects
2025-08-18T20:51:10.7682428Z 
2025-08-18T20:51:10.7682545Z ```python
2025-08-18T20:51:10.7682869Z class DummyTransport()
2025-08-18T20:51:10.7683208Z ```
2025-08-18T20:51:10.7683369Z 
2025-08-18T20:51:10.7683684Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T20:51:10.7684190Z 
2025-08-18T20:51:10.7684321Z #### capture\_envelope
2025-08-18T20:51:10.7684541Z 
2025-08-18T20:51:10.7684655Z ```python
2025-08-18T20:51:10.7684974Z def capture_envelope(envelope)
2025-08-18T20:51:10.7685340Z ```
2025-08-18T20:51:10.7685495Z 
2025-08-18T20:51:10.7685729Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T20:51:10.7686123Z 
2025-08-18T20:51:10.7686276Z <a id="api.tests.test_cors"></a>
2025-08-18T20:51:10.7686561Z 
2025-08-18T20:51:10.7686693Z # api.tests.test\_cors
2025-08-18T20:51:10.7686917Z 
2025-08-18T20:51:10.7687068Z <a id="api.tests.test_imports"></a>
2025-08-18T20:51:10.7687368Z 
2025-08-18T20:51:10.7687508Z # api.tests.test\_imports
2025-08-18T20:51:10.7687750Z 
2025-08-18T20:51:10.7687924Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T20:51:10.7688418Z 
2025-08-18T20:51:10.7688574Z # api.tests.test\_rate\_limit
2025-08-18T20:51:10.7688896Z 
2025-08-18T20:51:10.7689072Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T20:51:10.7689759Z 
2025-08-18T20:51:10.7689876Z #### app
2025-08-18T20:51:10.7690048Z 
2025-08-18T20:51:10.7690167Z noqa: E402
2025-08-18T20:51:10.7690334Z 
2025-08-18T20:51:10.7690506Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T20:51:10.7690813Z 
2025-08-18T20:51:10.7690964Z # api.tests.test\_entrypoint
2025-08-18T20:51:10.7691234Z 
2025-08-18T20:51:10.7691382Z <a id="api.tests.test_health"></a>
2025-08-18T20:51:10.7691663Z 
2025-08-18T20:51:10.7691798Z # api.tests.test\_health
2025-08-18T20:51:10.7692039Z 
2025-08-18T20:51:10.7692185Z <a id="api.logging_config"></a>
2025-08-18T20:51:10.7692446Z 
2025-08-18T20:51:10.7692583Z # api.logging\_config
2025-08-18T20:51:10.7692796Z 
2025-08-18T20:51:10.7692943Z <a id="api.migrations.env"></a>
2025-08-18T20:51:10.7693212Z 
2025-08-18T20:51:10.7693359Z # api.migrations.env
2025-08-18T20:51:10.7693574Z 
2025-08-18T20:51:10.7693796Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T20:51:10.7694193Z 
2025-08-18T20:51:10.7694387Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T20:51:10.7694742Z 
2025-08-18T20:51:10.7694949Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T20:51:10.7695309Z 
2025-08-18T20:51:10.7695482Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T20:51:10.7695800Z 
2025-08-18T20:51:10.7696090Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T20:51:10.7696527Z 
2025-08-18T20:51:10.7696779Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T20:51:10.7697255Z 
2025-08-18T20:51:10.7697483Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T20:51:10.7697856Z 
2025-08-18T20:51:10.7698056Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T20:51:10.7698567Z 
2025-08-18T20:51:10.7698789Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T20:51:10.7699180Z 
2025-08-18T20:51:10.7699375Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T20:51:10.7699730Z 
2025-08-18T20:51:10.7700190Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T20:51:10.7700604Z 
2025-08-18T20:51:10.7700805Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T20:51:10.7701158Z 
2025-08-18T20:51:10.7701386Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T20:51:10.7701762Z 
2025-08-18T20:51:10.7701956Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T20:51:10.7702311Z 
2025-08-18T20:51:10.7702545Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T20:51:10.7702932Z 
2025-08-18T20:51:10.7703138Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T20:51:10.7703491Z 
2025-08-18T20:51:10.7703756Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T20:51:10.7704174Z 
2025-08-18T20:51:10.7704406Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T20:51:10.7704781Z 
2025-08-18T20:51:10.7705014Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T20:51:10.7705410Z 
2025-08-18T20:51:10.7705626Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T20:51:10.7705985Z 
2025-08-18T20:51:10.7706240Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T20:51:10.7706754Z 
2025-08-18T20:51:10.7706974Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T20:51:10.7707387Z 
2025-08-18T20:51:10.7707595Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T20:51:10.7707962Z 
2025-08-18T20:51:10.7708347Z # api.migrations.versions.0001\_baseline
2025-08-18T20:51:10.7708684Z 
2025-08-18T20:51:10.7708853Z <a id="api.migrations.versions"></a>
2025-08-18T20:51:10.7709174Z 
2025-08-18T20:51:10.7709324Z # api.migrations.versions
2025-08-18T20:51:10.7709577Z 
2025-08-18T20:51:10.7709715Z <a id="api.migrations"></a>
2025-08-18T20:51:10.7709970Z 
2025-08-18T20:51:10.7710089Z # api.migrations
2025-08-18T20:51:10.7710284Z 
2025-08-18T20:51:10.7710412Z <a id="api.db"></a>
2025-08-18T20:51:10.7710607Z 
2025-08-18T20:51:10.7710717Z # api.db
2025-08-18T20:51:10.7710885Z 
2025-08-18T20:51:10.7711045Z <a id="api.routes.stats"></a>
2025-08-18T20:51:10.7711555Z 
2025-08-18T20:51:10.7711683Z # api.routes.stats
2025-08-18T20:51:10.7711894Z 
2025-08-18T20:51:10.7712048Z <a id="api.routes.stats.kpi"></a>
2025-08-18T20:51:10.7712334Z 
2025-08-18T20:51:10.7712455Z #### kpi
2025-08-18T20:51:10.7712617Z 
2025-08-18T20:51:10.7712731Z ```python
2025-08-18T20:51:10.7713032Z @router.get("/stats/kpi")
2025-08-18T20:51:10.7713568Z def kpi() -> List[Dict[str, int]]
2025-08-18T20:51:10.7713954Z ```
2025-08-18T20:51:10.7714104Z 
2025-08-18T20:51:10.7714250Z Return KPI metrics (mock).
2025-08-18T20:51:10.7714506Z 
2025-08-18T20:51:10.7714698Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T20:51:10.7715034Z 
2025-08-18T20:51:10.7715169Z #### roi\_by\_vendor
2025-08-18T20:51:10.7715376Z 
2025-08-18T20:51:10.7715489Z ```python
2025-08-18T20:51:10.7715803Z @router.get("/stats/roi_by_vendor")
2025-08-18T20:51:10.7716318Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T20:51:10.7716739Z ```
2025-08-18T20:51:10.7716897Z 
2025-08-18T20:51:10.7717050Z Return ROI percent by vendor.
2025-08-18T20:51:10.7717327Z 
2025-08-18T20:51:10.7717493Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T20:51:10.7717802Z 
2025-08-18T20:51:10.7717925Z #### roi\_trend
2025-08-18T20:51:10.7718110Z 
2025-08-18T20:51:10.7718404Z ```python
2025-08-18T20:51:10.7718719Z @router.get("/stats/roi_trend")
2025-08-18T20:51:10.7719151Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T20:51:10.7719589Z ```
2025-08-18T20:51:10.7719736Z 
2025-08-18T20:51:10.7719875Z Return 30-day ROI trend.
2025-08-18T20:51:10.7720118Z 
2025-08-18T20:51:10.7720260Z <a id="api.routes.roi"></a>
2025-08-18T20:51:10.7720511Z 
2025-08-18T20:51:10.7720639Z # api.routes.roi
2025-08-18T20:51:10.7720835Z 
2025-08-18T20:51:10.7720982Z <a id="api.routes.health"></a>
2025-08-18T20:51:10.7721244Z 
2025-08-18T20:51:10.7721379Z # api.routes.health
2025-08-18T20:51:10.7721581Z 
2025-08-18T20:51:10.7721744Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T20:51:10.7722350Z 
2025-08-18T20:51:10.7722481Z #### MAX\_SKEW
2025-08-18T20:51:10.7722664Z 
2025-08-18T20:51:10.7722772Z seconds
2025-08-18T20:51:10.7722939Z 
2025-08-18T20:51:10.7723106Z <a id="api.routes.health.health"></a>
2025-08-18T20:51:10.7723416Z 
2025-08-18T20:51:10.7723536Z #### health
2025-08-18T20:51:10.7723713Z 
2025-08-18T20:51:10.7723832Z ```python
2025-08-18T20:51:10.7724195Z @router.get("/health", include_in_schema=False)
2025-08-18T20:51:10.7724902Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T20:51:10.7725534Z ```
2025-08-18T20:51:10.7725685Z 
2025-08-18T20:51:10.7725905Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T20:51:10.7726270Z 
2025-08-18T20:51:10.7726428Z <a id="api.routes.repository"></a>
2025-08-18T20:51:10.7726720Z 
2025-08-18T20:51:10.7726869Z # api.routes.repository
2025-08-18T20:51:10.7727100Z 
2025-08-18T20:51:10.7727231Z <a id="api.routes"></a>
2025-08-18T20:51:10.7727453Z 
2025-08-18T20:51:10.7727568Z # api.routes
2025-08-18T20:51:10.7727758Z 
2025-08-18T20:51:10.7727884Z <a id="api.models.fee"></a>
2025-08-18T20:51:10.7728298Z 
2025-08-18T20:51:10.7728421Z # api.models.fee
2025-08-18T20:51:10.7728595Z 
2025-08-18T20:51:10.7728722Z <a id="api.models"></a>
2025-08-18T20:51:10.7728919Z 
2025-08-18T20:51:10.7729023Z # api.models
2025-08-18T20:51:10.7729227Z 
2025-08-18T20:51:10.7729396Z <a id="api.roi_repository"></a>
2025-08-18T20:51:10.7729657Z 
2025-08-18T20:51:10.7729787Z # api.roi\_repository
2025-08-18T20:51:10.7730020Z 
2025-08-18T20:51:10.7730147Z <a id="api.main"></a>
2025-08-18T20:51:10.7730358Z 
2025-08-18T20:51:10.7730480Z # api.main
2025-08-18T20:51:10.7730650Z 
2025-08-18T20:51:10.7730792Z <a id="api.main.ready"></a>
2025-08-18T20:51:10.7731043Z 
2025-08-18T20:51:10.7731164Z #### ready
2025-08-18T20:51:10.7731331Z 
2025-08-18T20:51:10.7731443Z ```python
2025-08-18T20:51:10.7731918Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T20:51:10.7732806Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T20:51:10.7733702Z                                                                       str]
2025-08-18T20:51:10.7734130Z ```
2025-08-18T20:51:10.7734286Z 
2025-08-18T20:51:10.7734478Z Return 200 only when migrations are at head.
2025-08-18T20:51:10.7734797Z 
2025-08-18T20:51:10.7734930Z <a id="api.config"></a>
2025-08-18T20:51:10.7735158Z 
2025-08-18T20:51:10.7735275Z # api.config
2025-08-18T20:51:10.7735454Z 
2025-08-18T20:51:10.7735580Z <a id="etl"></a>
2025-08-18T20:51:10.7735766Z 
2025-08-18T20:51:10.7735876Z # etl
2025-08-18T20:51:10.7736030Z 
2025-08-18T20:51:10.7736186Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T20:51:10.7736461Z 
2025-08-18T20:51:10.7736590Z # etl.fba\_fee\_ingestor
2025-08-18T20:51:10.7736821Z 
2025-08-18T20:51:10.7736969Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T20:51:10.7737247Z 
2025-08-18T20:51:10.7737380Z # etl.sp\_fees\_ingestor
2025-08-18T20:51:10.7737612Z 
2025-08-18T20:51:10.7737759Z <a id="etl.keepa_ingestor"></a>
2025-08-18T20:51:10.7738040Z 
2025-08-18T20:51:10.7738350Z # etl.keepa\_ingestor
2025-08-18T20:51:10.7738577Z 
2025-08-18T20:51:10.7738701Z <a id="etl.db"></a>
2025-08-18T20:51:10.7738901Z 
2025-08-18T20:51:10.7739009Z # etl.db
2025-08-18T20:51:10.7739171Z 
2025-08-18T20:51:10.7739322Z <a id="etl.dialects.schemas"></a>
2025-08-18T20:51:10.7739608Z 
2025-08-18T20:51:10.7739740Z # etl.dialects.schemas
2025-08-18T20:51:10.7739958Z 
2025-08-18T20:51:10.7740156Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T20:51:10.7740498Z 
2025-08-18T20:51:10.7740659Z # etl.dialects.amazon\_reimbursements
2025-08-18T20:51:10.7740972Z 
2025-08-18T20:51:10.7741148Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T20:51:10.7741477Z 
2025-08-18T20:51:10.7741632Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T20:51:10.7741931Z 
2025-08-18T20:51:10.7742095Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T20:51:10.7742414Z 
2025-08-18T20:51:10.7742572Z # etl.dialects.amazon\_returns
2025-08-18T20:51:10.7743062Z 
2025-08-18T20:51:10.7743261Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T20:51:10.7743606Z 
2025-08-18T20:51:10.7743766Z # etl.dialects.amazon\_fee\_preview
2025-08-18T20:51:10.7744060Z 
2025-08-18T20:51:10.7744251Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T20:51:10.7744614Z 
2025-08-18T20:51:10.7744782Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T20:51:10.7745092Z 
2025-08-18T20:51:10.7745276Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T20:51:10.7745603Z 
2025-08-18T20:51:10.7745760Z # etl.dialects.amazon\_settlements
2025-08-18T20:51:10.7746057Z 
2025-08-18T20:51:10.7746193Z <a id="etl.dialects"></a>
2025-08-18T20:51:10.7746425Z 
2025-08-18T20:51:10.7746542Z # etl.dialects
2025-08-18T20:51:10.7746733Z 
2025-08-18T20:51:10.7746852Z <a id="ingest"></a>
2025-08-18T20:51:10.7747051Z 
2025-08-18T20:51:10.7747166Z # ingest
2025-08-18T20:51:10.7747325Z 
2025-08-18T20:51:10.7747473Z <a id="ingest.maintenance"></a>
2025-08-18T20:51:10.7747734Z 
2025-08-18T20:51:10.7747883Z # ingest.maintenance
2025-08-18T20:51:10.7748102Z 
2025-08-18T20:51:10.7748418Z <a id="ingest.copy_loader"></a>
2025-08-18T20:51:10.7748697Z 
2025-08-18T20:51:10.7748828Z # ingest.copy\_loader
2025-08-18T20:51:10.7749040Z 
2025-08-18T20:51:10.7749228Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T20:51:10.7749582Z 
2025-08-18T20:51:10.7749714Z #### copy\_df\_via\_temp
2025-08-18T20:51:10.7749940Z 
2025-08-18T20:51:10.7750060Z ```python
2025-08-18T20:51:10.7750374Z def copy_df_via_temp(engine: Engine,
2025-08-18T20:51:10.7750808Z                      df: pd.DataFrame,
2025-08-18T20:51:10.7751227Z                      target_table: str,
2025-08-18T20:51:10.7751629Z                      *,
2025-08-18T20:51:10.7752006Z                      target_schema: Optional[str] = None,
2025-08-18T20:51:10.7752492Z                      columns: Sequence[str],
2025-08-18T20:51:10.7753003Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T20:51:10.7753527Z                      analyze_after: bool = False,
2025-08-18T20:51:10.7754409Z                      connection: Any | None = None) -> int
2025-08-18T20:51:10.7754849Z ```
2025-08-18T20:51:10.7755011Z 
2025-08-18T20:51:10.7755297Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T20:51:10.7755727Z 
2025-08-18T20:51:10.7755883Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T20:51:10.7756235Z 
2025-08-18T20:51:10.7756432Z # ingest.tests.test\_smoke
2025-08-18T20:51:10.7756674Z 
2025-08-18T20:51:10.7756817Z <a id="ingest.tests"></a>
2025-08-18T20:51:10.7757055Z 
2025-08-18T20:51:10.7757174Z # ingest.tests
2025-08-18T20:51:10.7757370Z 
2025-08-18T20:51:10.7757519Z <a id="ingest.upload_router"></a>
2025-08-18T20:51:10.7757793Z 
2025-08-18T20:51:10.7757927Z # ingest.upload\_router
2025-08-18T20:51:10.7758331Z 
2025-08-18T20:51:10.7758485Z <a id="ingest.email_watcher"></a>
2025-08-18T20:51:10.7758761Z 
2025-08-18T20:51:10.7758903Z # ingest.email\_watcher
2025-08-18T20:51:10.7759120Z 
2025-08-18T20:51:10.7759289Z <a id="ingest.email_watcher.main"></a>
2025-08-18T20:51:10.7759612Z 
2025-08-18T20:51:10.7759723Z #### main
2025-08-18T20:51:10.7759883Z 
2025-08-18T20:51:10.7759992Z ```python
2025-08-18T20:51:10.7760299Z def main() -> dict[str, str]
2025-08-18T20:51:10.7760645Z ```
2025-08-18T20:51:10.7760798Z 
2025-08-18T20:51:10.7761054Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T20:51:10.7761504Z 
2025-08-18T20:51:10.7761738Z Returns {"status": "success"} when processing completes.
2025-08-18T20:51:10.7762135Z 
2025-08-18T20:51:10.7762274Z <a id="ingest.tasks"></a>
2025-08-18T20:51:10.7762517Z 
2025-08-18T20:51:10.7762638Z # ingest.tasks
2025-08-18T20:51:10.7762842Z 
2025-08-18T20:51:10.7763023Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T20:51:10.7763354Z 
2025-08-18T20:51:10.7763493Z #### task\_import\_file
2025-08-18T20:51:10.7763711Z 
2025-08-18T20:51:10.7763823Z ```python
2025-08-18T20:51:10.7764210Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T20:51:10.7765254Z def task_import_file(self: Any,
2025-08-18T20:51:10.7765690Z                      uri: str,
2025-08-18T20:51:10.7766097Z                      report_type: Optional[str] = None,
2025-08-18T20:51:10.7766606Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T20:51:10.7767052Z ```
2025-08-18T20:51:10.7767205Z 
2025-08-18T20:51:10.7767449Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T20:51:10.7767839Z 
2025-08-18T20:51:10.7768015Z <a id="ingest.celery_app"></a>
2025-08-18T20:51:10.7768495Z 
2025-08-18T20:51:10.7768635Z # ingest.celery\_app
2025-08-18T20:51:10.7768886Z 
2025-08-18T20:51:10.7769112Z <a id="ingest.ingest_router"></a>
2025-08-18T20:51:10.7769399Z 
2025-08-18T20:51:10.7769534Z # ingest.ingest\_router
2025-08-18T20:51:10.7769768Z 
2025-08-18T20:51:10.7769905Z <a id="logistics_etl"></a>
2025-08-18T20:51:10.7770145Z 
2025-08-18T20:51:10.7770276Z # logistics\_etl
2025-08-18T20:51:10.7770469Z 
2025-08-18T20:51:10.7770606Z Daily logistics ETL job.
2025-08-18T20:51:10.7770863Z 
2025-08-18T20:51:10.7771013Z <a id="logistics_etl.__main__"></a>
2025-08-18T20:51:10.7771300Z 
2025-08-18T20:51:10.7771435Z # logistics\_etl.\_\_main\_\_
2025-08-18T20:51:10.7771699Z 
2025-08-18T20:51:10.7771845Z <a id="logistics_etl.dsn"></a>
2025-08-18T20:51:10.7772114Z 
2025-08-18T20:51:10.7772253Z # logistics\_etl.dsn
2025-08-18T20:51:10.7772466Z 
2025-08-18T20:51:10.7772689Z Local DSN builder to avoid cross-service dependency.
2025-08-18T20:51:10.7773078Z 
2025-08-18T20:51:10.7773246Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T20:51:10.7773560Z 
2025-08-18T20:51:10.7773678Z #### build\_dsn
2025-08-18T20:51:10.7773874Z 
2025-08-18T20:51:10.7773987Z ```python
2025-08-18T20:51:10.7774309Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:51:10.7774711Z ```
2025-08-18T20:51:10.7774859Z 
2025-08-18T20:51:10.7775124Z Return a Postgres DSN assembled from environment variables.
2025-08-18T20:51:10.7775540Z 
2025-08-18T20:51:10.7775818Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T20:51:10.7776784Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T20:51:10.7777416Z error when any required variable is missing.
2025-08-18T20:51:10.7777755Z 
2025-08-18T20:51:10.7777926Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T20:51:10.7778427Z 
2025-08-18T20:51:10.7778605Z # logistics\_etl.tests.conftest
2025-08-18T20:51:10.7778884Z 
2025-08-18T20:51:10.7779082Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T20:51:10.7779439Z 
2025-08-18T20:51:10.7779597Z # logistics\_etl.tests.test\_repository
2025-08-18T20:51:10.7779912Z 
2025-08-18T20:51:10.7780086Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T20:51:10.7780415Z 
2025-08-18T20:51:10.7780566Z # logistics\_etl.tests.test\_cron
2025-08-18T20:51:10.7780843Z 
2025-08-18T20:51:10.7781027Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T20:51:10.7781354Z 
2025-08-18T20:51:10.7781507Z # logistics\_etl.tests.test\_imports
2025-08-18T20:51:10.7781823Z 
2025-08-18T20:51:10.7782006Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T20:51:10.7782338Z 
2025-08-18T20:51:10.7782490Z # logistics\_etl.tests.test\_smoke
2025-08-18T20:51:10.7782784Z 
2025-08-18T20:51:10.7782959Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T20:51:10.7783281Z 
2025-08-18T20:51:10.7783442Z # logistics\_etl.tests.test\_client
2025-08-18T20:51:10.7783734Z 
2025-08-18T20:51:10.7783885Z <a id="logistics_etl.tests"></a>
2025-08-18T20:51:10.7784180Z 
2025-08-18T20:51:10.7784319Z # logistics\_etl.tests
2025-08-18T20:51:10.7784549Z 
2025-08-18T20:51:10.7784696Z <a id="logistics_etl.flow"></a>
2025-08-18T20:51:10.7784968Z 
2025-08-18T20:51:10.7785095Z # logistics\_etl.flow
2025-08-18T20:51:10.7785305Z 
2025-08-18T20:51:10.7785463Z <a id="logistics_etl.client"></a>
2025-08-18T20:51:10.7785741Z 
2025-08-18T20:51:10.7785875Z # logistics\_etl.client
2025-08-18T20:51:10.7786104Z 
2025-08-18T20:51:10.7786243Z <a id="logistics_etl.cron"></a>
2025-08-18T20:51:10.7786502Z 
2025-08-18T20:51:10.7786851Z # logistics\_etl.cron
2025-08-18T20:51:10.7787093Z 
2025-08-18T20:51:10.7787239Z <a id="logistics_etl.db"></a>
2025-08-18T20:51:10.7787473Z 
2025-08-18T20:51:10.7814768Z # logistics\_etl.db
2025-08-18T20:51:10.7815181Z 
2025-08-18T20:51:10.7815356Z <a id="logistics_etl.repository"></a>
2025-08-18T20:51:10.7815636Z 
2025-08-18T20:51:10.7815771Z # logistics\_etl.repository
2025-08-18T20:51:10.7815992Z 
2025-08-18T20:51:10.7816104Z <a id="alert_bot"></a>
2025-08-18T20:51:10.7816285Z 
2025-08-18T20:51:10.7816389Z # alert\_bot
2025-08-18T20:51:10.7816537Z 
2025-08-18T20:51:10.7816678Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T20:51:10.7816963Z 
2025-08-18T20:51:10.7817096Z # alert\_bot.tests.test\_smoke
2025-08-18T20:51:10.7817312Z 
2025-08-18T20:51:10.7817429Z <a id="alert_bot.tests"></a>
2025-08-18T20:51:10.7817644Z 
2025-08-18T20:51:10.7817741Z # alert\_bot.tests
2025-08-18T20:51:10.7817911Z 
2025-08-18T20:51:10.7818032Z <a id="alert_bot.alert_bot"></a>
2025-08-18T20:51:10.7818456Z 
2025-08-18T20:51:10.7818578Z # alert\_bot.alert\_bot
2025-08-18T20:51:10.7818761Z 
2025-08-18T20:51:10.7818884Z <a id="alert_bot.rules"></a>
2025-08-18T20:51:10.7819080Z 
2025-08-18T20:51:10.7819176Z # alert\_bot.rules
2025-08-18T20:51:10.7819341Z 
2025-08-18T20:51:10.7819442Z <a id="common"></a>
2025-08-18T20:51:10.7819607Z 
2025-08-18T20:51:10.7819702Z # common
2025-08-18T20:51:10.7819853Z 
2025-08-18T20:51:10.7819961Z <a id="common.dsn"></a>
2025-08-18T20:51:10.7820145Z 
2025-08-18T20:51:10.7820253Z # common.dsn
2025-08-18T20:51:10.7820392Z 
2025-08-18T20:51:10.7820526Z <a id="common.dsn.build_dsn"></a>
2025-08-18T20:51:10.7820763Z 
2025-08-18T20:51:10.7820860Z #### build\_dsn
2025-08-18T20:51:10.7821020Z 
2025-08-18T20:51:10.7821117Z ```python
2025-08-18T20:51:10.7821393Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:51:10.7821751Z ```
2025-08-18T20:51:10.7821887Z 
2025-08-18T20:51:10.7822119Z Return a Postgres DSN, validating required variables.
2025-08-18T20:51:10.7822443Z 
2025-08-18T20:51:10.7822765Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T20:51:10.7823684Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T20:51:10.7824358Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T20:51:10.7824839Z missing.
2025-08-18T20:51:10.7824985Z 
2025-08-18T20:51:10.7825109Z <a id="common.models_vendor"></a>
2025-08-18T20:51:10.7825339Z 
2025-08-18T20:51:10.7825453Z # common.models\_vendor
2025-08-18T20:51:10.7825639Z 
2025-08-18T20:51:10.7825778Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T20:51:10.7826039Z 
2025-08-18T20:51:10.7826146Z ## Vendor Objects
2025-08-18T20:51:10.7826307Z 
2025-08-18T20:51:10.7826403Z ```python
2025-08-18T20:51:10.7826658Z class Vendor(Base)
2025-08-18T20:51:10.7826911Z ```
2025-08-18T20:51:10.7827044Z 
2025-08-18T20:51:10.7827160Z Vendor of inventory items.
2025-08-18T20:51:10.7827365Z 
2025-08-18T20:51:10.7827537Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T20:51:10.7827833Z 
2025-08-18T20:51:10.7827944Z ## VendorPrice Objects
2025-08-18T20:51:10.7828280Z 
2025-08-18T20:51:10.7828376Z ```python
2025-08-18T20:51:10.7828613Z class VendorPrice(Base)
2025-08-18T20:51:10.7828884Z ```
2025-08-18T20:51:10.7829003Z 
2025-08-18T20:51:10.7829158Z Association table linking vendors to pricing.
2025-08-18T20:51:10.7829445Z 
2025-08-18T20:51:10.7829551Z <a id="common.db_url"></a>
2025-08-18T20:51:10.7829741Z 
2025-08-18T20:51:10.7829843Z # common.db\_url
2025-08-18T20:51:10.7830002Z 
2025-08-18T20:51:10.7830165Z <a id="common.db_url.build_url"></a>
2025-08-18T20:51:10.7830430Z 
2025-08-18T20:51:10.7830536Z #### build\_url
2025-08-18T20:51:10.7830695Z 
2025-08-18T20:51:10.7830792Z ```python
2025-08-18T20:51:10.7831075Z def build_url(async_: bool = True) -> str
2025-08-18T20:51:10.7831430Z ```
2025-08-18T20:51:10.7831568Z 
2025-08-18T20:51:10.7831713Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:51:10.7831980Z 
2025-08-18T20:51:10.7832103Z <a id="common.keepa"></a>
2025-08-18T20:51:10.7832486Z 
2025-08-18T20:51:10.7832587Z # common.keepa
2025-08-18T20:51:10.7832753Z 
2025-08-18T20:51:10.7832860Z <a id="common.llm"></a>
2025-08-18T20:51:10.7833046Z 
2025-08-18T20:51:10.7833144Z # common.llm
2025-08-18T20:51:10.7833298Z 
2025-08-18T20:51:10.7833415Z <a id="common.settings"></a>
2025-08-18T20:51:10.7833625Z 
2025-08-18T20:51:10.7833739Z # common.settings
2025-08-18T20:51:10.7833891Z 
2025-08-18T20:51:10.7833996Z <a id="common.db"></a>
2025-08-18T20:51:10.7834186Z 
2025-08-18T20:51:10.7834283Z # common.db
2025-08-18T20:51:10.7834422Z 
2025-08-18T20:51:10.7834559Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T20:51:10.7834835Z 
2025-08-18T20:51:10.7834951Z #### build\_sqlalchemy\_url
2025-08-18T20:51:10.7835149Z 
2025-08-18T20:51:10.7835252Z ```python
2025-08-18T20:51:10.7835504Z def build_sqlalchemy_url() -> str
2025-08-18T20:51:10.7835827Z ```
2025-08-18T20:51:10.7835947Z 
2025-08-18T20:51:10.7836090Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:51:10.7836369Z 
2025-08-18T20:51:10.7836513Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T20:51:10.7836760Z 
2025-08-18T20:51:10.7836870Z #### build\_asyncpg\_dsn
2025-08-18T20:51:10.7837062Z 
2025-08-18T20:51:10.7837152Z ```python
2025-08-18T20:51:10.7837415Z def build_asyncpg_dsn() -> str
2025-08-18T20:51:10.7837713Z ```
2025-08-18T20:51:10.7837837Z 
2025-08-18T20:51:10.7838041Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:51:10.7838529Z 
2025-08-18T20:51:10.7838660Z <a id="common.db.refresh_mvs"></a>
2025-08-18T20:51:10.7838902Z 
2025-08-18T20:51:10.7838998Z #### refresh\_mvs
2025-08-18T20:51:10.7839154Z 
2025-08-18T20:51:10.7839259Z ```python
2025-08-18T20:51:10.7839572Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:51:10.7839961Z ```
2025-08-18T20:51:10.7840089Z 
2025-08-18T20:51:10.7840301Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:51:10.7840645Z 
2025-08-18T20:51:10.7840773Z <a id="common.config"></a>
2025-08-18T20:51:10.7840989Z 
2025-08-18T20:51:10.7841263Z # common.config
2025-08-18T20:51:10.7841431Z 
2025-08-18T20:51:10.7841547Z <a id="common.base"></a>
2025-08-18T20:51:10.7841740Z 
2025-08-18T20:51:10.7841846Z # common.base
2025-08-18T20:51:10.7841997Z 
2025-08-18T20:51:10.7842119Z <a id="common.base.Base"></a>
2025-08-18T20:51:10.7842334Z 
2025-08-18T20:51:10.7842440Z ## Base Objects
2025-08-18T20:51:10.7842595Z 
2025-08-18T20:51:10.7842689Z ```python
2025-08-18T20:51:10.7842955Z class Base(DeclarativeBase)
2025-08-18T20:51:10.7843241Z ```
2025-08-18T20:51:10.7843370Z 
2025-08-18T20:51:10.7843494Z Base class for SQLAlchemy models.
2025-08-18T20:51:10.7843719Z 
2025-08-18T20:51:10.7843831Z <a id="repricer"></a>
2025-08-18T20:51:10.7844009Z 
2025-08-18T20:51:10.7844104Z # repricer
2025-08-18T20:51:10.7844242Z 
2025-08-18T20:51:10.7844373Z <a id="repricer.app.schemas"></a>
2025-08-18T20:51:10.7844608Z 
2025-08-18T20:51:10.7844722Z # repricer.app.schemas
2025-08-18T20:51:10.7844913Z 
2025-08-18T20:51:10.7845049Z <a id="repricer.app.deps"></a>
2025-08-18T20:51:10.7845280Z 
2025-08-18T20:51:10.7845389Z # repricer.app.deps
2025-08-18T20:51:10.7845566Z 
2025-08-18T20:51:10.7845742Z Placeholder module for Keepa / SP-API clients.
2025-08-18T20:51:10.7846032Z 
2025-08-18T20:51:10.7846168Z <a id="repricer.app.logic"></a>
2025-08-18T20:51:10.7846390Z 
2025-08-18T20:51:10.7846499Z # repricer.app.logic
2025-08-18T20:51:10.7846679Z 
2025-08-18T20:51:10.7846828Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T20:51:10.7847098Z 
2025-08-18T20:51:10.7847200Z #### MIN\_MARGIN
2025-08-18T20:51:10.7847371Z 
2025-08-18T20:51:10.7847463Z 15 % ROI
2025-08-18T20:51:10.7847600Z 
2025-08-18T20:51:10.7847766Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T20:51:10.7848054Z 
2025-08-18T20:51:10.7848309Z #### compute\_price
2025-08-18T20:51:10.7848490Z 
2025-08-18T20:51:10.7848585Z ```python
2025-08-18T20:51:10.7848957Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T20:51:10.7849411Z ```
2025-08-18T20:51:10.7849766Z 
2025-08-18T20:51:10.7849952Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T20:51:10.7850390Z Replace with real competitive logic later.
2025-08-18T20:51:10.7850654Z 
2025-08-18T20:51:10.7850789Z <a id="repricer.app.main"></a>
2025-08-18T20:51:10.7851003Z 
2025-08-18T20:51:10.7851113Z # repricer.app.main
2025-08-18T20:51:10.7851295Z 
2025-08-18T20:51:10.7851413Z <a id="repricer.app"></a>
2025-08-18T20:51:10.7851617Z 
2025-08-18T20:51:10.7851724Z # repricer.app
2025-08-18T20:51:10.7851889Z 
2025-08-18T20:51:10.7852028Z <a id="repricer.tests.test_imports"></a>
2025-08-18T20:51:10.7852288Z 
2025-08-18T20:51:10.7852421Z # repricer.tests.test\_imports
2025-08-18T20:51:10.7852637Z 
2025-08-18T20:51:10.7852771Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T20:51:10.7853029Z 
2025-08-18T20:51:10.7853151Z # repricer.tests.test\_smoke
2025-08-18T20:51:10.7853373Z 
2025-08-18T20:51:10.7853491Z <a id="repricer.tests"></a>
2025-08-18T20:51:10.7853711Z 
2025-08-18T20:51:10.7853827Z # repricer.tests
2025-08-18T20:51:10.7854005Z 
2025-08-18T20:51:10.7854113Z <a id="db"></a>
2025-08-18T20:51:10.7854272Z 
2025-08-18T20:51:10.7854362Z # db
2025-08-18T20:51:10.7854494Z 
2025-08-18T20:51:10.7854616Z <a id="db.utils.views"></a>
2025-08-18T20:51:10.7854815Z 
2025-08-18T20:51:10.7854917Z # db.utils.views
2025-08-18T20:51:10.7855082Z 
2025-08-18T20:51:10.7855225Z <a id="db.utils.views.replace_view"></a>
2025-08-18T20:51:10.7855493Z 
2025-08-18T20:51:10.7855602Z #### replace\_view
2025-08-18T20:51:10.7855767Z 
2025-08-18T20:51:10.7855864Z ```python
2025-08-18T20:51:10.7856171Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T20:51:10.7856543Z ```
2025-08-18T20:51:10.7856680Z 
2025-08-18T20:51:10.7856823Z Drop and recreate a SQL view atomically.
2025-08-18T20:51:10.7857081Z 
2025-08-18T20:51:10.7857191Z <a id="db.utils"></a>
2025-08-18T20:51:10.7857379Z 
2025-08-18T20:51:10.7857473Z # db.utils
2025-08-18T20:51:10.7857611Z 
2025-08-18T20:51:10.7857742Z <a id="price_importer"></a>
2025-08-18T20:51:10.7857964Z 
2025-08-18T20:51:10.7858432Z # price\_importer
2025-08-18T20:51:10.7858600Z 
2025-08-18T20:51:10.7858766Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T20:51:10.7859051Z 
2025-08-18T20:51:10.7859187Z # price\_importer.services\_common.dsn
2025-08-18T20:51:10.7859433Z 
2025-08-18T20:51:10.7859619Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T20:51:10.7859946Z 
2025-08-18T20:51:10.7860053Z #### build\_dsn
2025-08-18T20:51:10.7860209Z 
2025-08-18T20:51:10.7860312Z ```python
2025-08-18T20:51:10.7860569Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:51:10.7860920Z ```
2025-08-18T20:51:10.7861052Z 
2025-08-18T20:51:10.7861154Z Return safe DSN.
2025-08-18T20:51:10.7861326Z 
2025-08-18T20:51:10.7861794Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T20:51:10.7862117Z 
2025-08-18T20:51:10.7862326Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T20:51:10.7862649Z 
2025-08-18T20:51:10.7862821Z # price\_importer.services\_common.models\_vendor
2025-08-18T20:51:10.7863152Z 
2025-08-18T20:51:10.7863326Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T20:51:10.7863628Z 
2025-08-18T20:51:10.7863777Z # price\_importer.services\_common.db\_url
2025-08-18T20:51:10.7864051Z 
2025-08-18T20:51:10.7864268Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T20:51:10.7864624Z 
2025-08-18T20:51:10.7864738Z #### build\_url
2025-08-18T20:51:10.7864898Z 
2025-08-18T20:51:10.7865002Z ```python
2025-08-18T20:51:10.7865294Z def build_url(async_: bool = True) -> str
2025-08-18T20:51:10.7865665Z ```
2025-08-18T20:51:10.7865812Z 
2025-08-18T20:51:10.7865970Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:51:10.7866264Z 
2025-08-18T20:51:10.7866441Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T20:51:10.7866764Z 
2025-08-18T20:51:10.7866922Z # price\_importer.services\_common.keepa
2025-08-18T20:51:10.7867206Z 
2025-08-18T20:51:10.7867393Z <a id="price_importer.services_common.llm"></a>
2025-08-18T20:51:10.7867877Z 
2025-08-18T20:51:10.7868024Z # price\_importer.services\_common.llm
2025-08-18T20:51:10.7868460Z 
2025-08-18T20:51:10.7868651Z <a id="price_importer.services_common.settings"></a>
2025-08-18T20:51:10.7868982Z 
2025-08-18T20:51:10.7869139Z # price\_importer.services\_common.settings
2025-08-18T20:51:10.7869428Z 
2025-08-18T20:51:10.7869591Z <a id="price_importer.services_common.db"></a>
2025-08-18T20:51:10.7869888Z 
2025-08-18T20:51:10.7870038Z # price\_importer.services\_common.db
2025-08-18T20:51:10.7870303Z 
2025-08-18T20:51:10.7870559Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T20:51:10.7870971Z 
2025-08-18T20:51:10.7871096Z #### build\_sqlalchemy\_url
2025-08-18T20:51:10.7871315Z 
2025-08-18T20:51:10.7871417Z ```python
2025-08-18T20:51:10.7871711Z def build_sqlalchemy_url() -> str
2025-08-18T20:51:10.7872057Z ```
2025-08-18T20:51:10.7872197Z 
2025-08-18T20:51:10.7872355Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:51:10.7872663Z 
2025-08-18T20:51:10.7872924Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T20:51:10.7873313Z 
2025-08-18T20:51:10.7873438Z #### build\_asyncpg\_dsn
2025-08-18T20:51:10.7873656Z 
2025-08-18T20:51:10.7873761Z ```python
2025-08-18T20:51:10.7874032Z def build_asyncpg_dsn() -> str
2025-08-18T20:51:10.7874360Z ```
2025-08-18T20:51:10.7874495Z 
2025-08-18T20:51:10.7874710Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:51:10.7875058Z 
2025-08-18T20:51:10.7875268Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T20:51:10.7875630Z 
2025-08-18T20:51:10.7875742Z #### refresh\_mvs
2025-08-18T20:51:10.7875915Z 
2025-08-18T20:51:10.7876014Z ```python
2025-08-18T20:51:10.7876342Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:51:10.7876767Z ```
2025-08-18T20:51:10.7876903Z 
2025-08-18T20:51:10.7877133Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:51:10.7877499Z 
2025-08-18T20:51:10.7877674Z <a id="price_importer.services_common"></a>
2025-08-18T20:51:10.7878345Z 
2025-08-18T20:51:10.7878504Z # price\_importer.services\_common
2025-08-18T20:51:10.7878773Z 
2025-08-18T20:51:10.7878949Z <a id="price_importer.services_common.base"></a>
2025-08-18T20:51:10.7879268Z 
2025-08-18T20:51:10.7879429Z # price\_importer.services\_common.base
2025-08-18T20:51:10.7879718Z 
2025-08-18T20:51:10.7879866Z <a id="price_importer.normaliser"></a>
2025-08-18T20:51:10.7880144Z 
2025-08-18T20:51:10.7880291Z # price\_importer.normaliser
2025-08-18T20:51:10.7880533Z 
2025-08-18T20:51:10.7880717Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T20:51:10.7881051Z 
2025-08-18T20:51:10.7881201Z # price\_importer.common.models\_vendor
2025-08-18T20:51:10.7881490Z 
2025-08-18T20:51:10.7881658Z <a id="price_importer.common.db_url"></a>
2025-08-18T20:51:10.7881950Z 
2025-08-18T20:51:10.7882090Z # price\_importer.common.db\_url
2025-08-18T20:51:10.7882351Z 
2025-08-18T20:51:10.7882538Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T20:51:10.7882880Z 
2025-08-18T20:51:10.7882993Z #### make\_dsn
2025-08-18T20:51:10.7883166Z 
2025-08-18T20:51:10.7883271Z ```python
2025-08-18T20:51:10.7883562Z def make_dsn(async_: bool = False) -> str
2025-08-18T20:51:10.7883944Z ```
2025-08-18T20:51:10.7884084Z 
2025-08-18T20:51:10.7884294Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T20:51:10.7884645Z 
2025-08-18T20:51:10.7884831Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T20:51:10.7885164Z 
2025-08-18T20:51:10.7885273Z #### build\_url
2025-08-18T20:51:10.7885442Z 
2025-08-18T20:51:10.7885545Z ```python
2025-08-18T20:51:10.7885809Z def build_url(async_: bool = False) -> str
2025-08-18T20:51:10.7886145Z ```
2025-08-18T20:51:10.7886272Z 
2025-08-18T20:51:10.7886464Z Return Postgres DSN built from environment variables.
2025-08-18T20:51:10.7886801Z 
2025-08-18T20:51:10.7886950Z <a id="price_importer.common"></a>
2025-08-18T20:51:10.7887214Z 
2025-08-18T20:51:10.7887342Z # price\_importer.common
2025-08-18T20:51:10.7887745Z 
2025-08-18T20:51:10.7887904Z <a id="price_importer.common.base"></a>
2025-08-18T20:51:10.7888328Z 
2025-08-18T20:51:10.7888465Z # price\_importer.common.base
2025-08-18T20:51:10.7888698Z 
2025-08-18T20:51:10.7888854Z <a id="price_importer.tests.conftest"></a>
2025-08-18T20:51:10.7889136Z 
2025-08-18T20:51:10.7889280Z # price\_importer.tests.conftest
2025-08-18T20:51:10.7889566Z 
2025-08-18T20:51:10.7889723Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T20:51:10.7890016Z 
2025-08-18T20:51:10.7890156Z # price\_importer.tests.test\_reader
2025-08-18T20:51:10.7890412Z 
2025-08-18T20:51:10.7890573Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T20:51:10.7890868Z 
2025-08-18T20:51:10.7891011Z # price\_importer.tests.test\_imports
2025-08-18T20:51:10.7891270Z 
2025-08-18T20:51:10.7891428Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T20:51:10.7891702Z 
2025-08-18T20:51:10.7891836Z # price\_importer.tests.test\_smoke
2025-08-18T20:51:10.7892090Z 
2025-08-18T20:51:10.7892265Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T20:51:10.7892566Z 
2025-08-18T20:51:10.7892702Z # price\_importer.tests.test\_normaliser
2025-08-18T20:51:10.7892985Z 
2025-08-18T20:51:10.7893125Z <a id="price_importer.tests"></a>
2025-08-18T20:51:10.7893377Z 
2025-08-18T20:51:10.7893506Z # price\_importer.tests
2025-08-18T20:51:10.7893703Z 
2025-08-18T20:51:10.7893839Z <a id="price_importer.reader"></a>
2025-08-18T20:51:10.7894100Z 
2025-08-18T20:51:10.7894223Z # price\_importer.reader
2025-08-18T20:51:10.7894431Z 
2025-08-18T20:51:10.7894575Z <a id="price_importer.repository"></a>
2025-08-18T20:51:10.7894853Z 
2025-08-18T20:51:10.7894985Z # price\_importer.repository
2025-08-18T20:51:10.7895212Z 
2025-08-18T20:51:10.7895354Z <a id="price_importer.import"></a>
2025-08-18T20:51:10.7895605Z 
2025-08-18T20:51:10.7895729Z # price\_importer.import
2025-08-18T20:51:10.7895939Z 
2025-08-18T20:51:10.7896050Z <a id="fees_h10"></a>
2025-08-18T20:51:10.7896230Z 
2025-08-18T20:51:10.7896341Z # fees\_h10
2025-08-18T20:51:10.7896672Z 
2025-08-18T20:51:10.7896790Z <a id="fees_h10.worker"></a>
2025-08-18T20:51:10.7897006Z 
2025-08-18T20:51:10.7897165Z # fees\_h10.worker
2025-08-18T20:51:10.7897335Z 
2025-08-18T20:51:10.7897483Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T20:51:10.7897770Z 
2025-08-18T20:51:10.7897872Z #### list\_active\_asins
2025-08-18T20:51:10.7898051Z 
2025-08-18T20:51:10.7898303Z ```python
2025-08-18T20:51:10.7898566Z def list_active_asins() -> list[str]
2025-08-18T20:51:10.7898865Z ```
2025-08-18T20:51:10.7898988Z 
2025-08-18T20:51:10.7899145Z Return known ASINs or an empty list if unavailable.
2025-08-18T20:51:10.7899420Z 
2025-08-18T20:51:10.7899544Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T20:51:10.7899768Z 
2025-08-18T20:51:10.7899875Z # fees\_h10.tests.test\_smoke
2025-08-18T20:51:10.7900075Z 
2025-08-18T20:51:10.7900177Z <a id="fees_h10.tests"></a>
2025-08-18T20:51:10.7900363Z 
2025-08-18T20:51:10.7900452Z # fees\_h10.tests
2025-08-18T20:51:10.7900614Z 
2025-08-18T20:51:10.7900726Z <a id="fees_h10.client"></a>
2025-08-18T20:51:10.7900915Z 
2025-08-18T20:51:10.7901011Z # fees\_h10.client
2025-08-18T20:51:10.7901154Z 
2025-08-18T20:51:10.7901265Z <a id="fees_h10.repository"></a>
2025-08-18T20:51:10.7901473Z 
2025-08-18T20:51:10.7901572Z # fees\_h10.repository
2025-08-18T20:51:10.7901734Z 
2025-08-18T20:51:10.7901830Z <a id="emailer"></a>
2025-08-18T20:51:10.7901992Z 
2025-08-18T20:51:10.7902076Z # emailer
2025-08-18T20:51:10.7902197Z 
2025-08-18T20:51:10.7902341Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T20:51:10.7902589Z 
2025-08-18T20:51:10.7902707Z # emailer.tests.test\_import\_emailer
2025-08-18T20:51:10.7902942Z 
2025-08-18T20:51:10.7903063Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T20:51:10.7903299Z 
2025-08-18T20:51:10.7903417Z # emailer.tests.test\_smoke
2025-08-18T20:51:10.7903638Z 
2025-08-18T20:51:10.7903763Z <a id="emailer.tests"></a>
2025-08-18T20:51:10.7903979Z 
2025-08-18T20:51:10.7904098Z # emailer.tests
2025-08-18T20:51:10.7904449Z 
2025-08-18T20:51:10.7904578Z <a id="emailer.generate_body"></a>
2025-08-18T20:51:10.7904801Z 
2025-08-18T20:51:10.7904920Z # emailer.generate\_body
2025-08-18T20:51:10.7905107Z 
2025-08-18T20:51:10.7905211Z <a id="llm_server"></a>
2025-08-18T20:51:10.7905396Z 
2025-08-18T20:51:10.7905489Z # llm\_server
2025-08-18T20:51:10.7905647Z 
2025-08-18T20:51:10.7905779Z <a id="llm_server.app"></a>
2025-08-18T20:51:10.7906001Z 
2025-08-18T20:51:10.7906116Z # llm\_server.app
2025-08-18T20:51:10.7906297Z 
