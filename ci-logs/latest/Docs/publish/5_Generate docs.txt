2025-08-19T20:44:10.4947884Z ##[group]Run pydoc-markdown
2025-08-19T20:44:10.4948185Z [36;1mpydoc-markdown[0m
2025-08-19T20:44:10.4988615Z shell: /usr/bin/bash -e {0}
2025-08-19T20:44:10.4988861Z env:
2025-08-19T20:44:10.4989104Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:44:10.4989533Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T20:44:10.4989946Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:44:10.4990306Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:44:10.4990670Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T20:44:10.4991028Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T20:44:10.4991330Z ##[endgroup]
2025-08-19T20:44:10.8286564Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T20:44:10.8287382Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T20:44:10.8287838Z In "pydoc-markdown.yml"
2025-08-19T20:44:10.8288280Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T20:44:10.8288733Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T20:44:10.8289476Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T20:44:10.8289996Z 
2025-08-19T20:44:11.1663511Z <a id="__init__"></a>
2025-08-19T20:44:11.1663873Z 
2025-08-19T20:44:11.1664001Z # \_\_init\_\_
2025-08-19T20:44:11.1664212Z 
2025-08-19T20:44:11.1664337Z <a id="api"></a>
2025-08-19T20:44:11.1664540Z 
2025-08-19T20:44:11.1664658Z # api
2025-08-19T20:44:11.1664821Z 
2025-08-19T20:44:11.1664963Z <a id="api.errors"></a>
2025-08-19T20:44:11.1665204Z 
2025-08-19T20:44:11.1665323Z # api.errors
2025-08-19T20:44:11.1665503Z 
2025-08-19T20:44:11.1665652Z <a id="api.sentry_config"></a>
2025-08-19T20:44:11.1665931Z 
2025-08-19T20:44:11.1666089Z # api.sentry\_config
2025-08-19T20:44:11.1666301Z 
2025-08-19T20:44:11.1666492Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T20:44:11.1666823Z 
2025-08-19T20:44:11.1667285Z # api.tests.test\_stats\_contracts
2025-08-19T20:44:11.1667595Z 
2025-08-19T20:44:11.1667771Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T20:44:11.1668089Z 
2025-08-19T20:44:11.1668236Z # api.tests.test\_sentry\_scrub
2025-08-19T20:44:11.1668516Z 
2025-08-19T20:44:11.1668685Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T20:44:11.1669000Z 
2025-08-19T20:44:11.1669159Z # api.tests.test\_roi\_basic\_auth
2025-08-19T20:44:11.1669442Z 
2025-08-19T20:44:11.1669597Z <a id="api.tests.test_errors_json"></a>
2025-08-19T20:44:11.1669902Z 
2025-08-19T20:44:11.1670055Z # api.tests.test\_errors\_json
2025-08-19T20:44:11.1670313Z 
2025-08-19T20:44:11.1670454Z <a id="api.tests.test_llm"></a>
2025-08-19T20:44:11.1670721Z 
2025-08-19T20:44:11.1670849Z # api.tests.test\_llm
2025-08-19T20:44:11.1671064Z 
2025-08-19T20:44:11.1671226Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T20:44:11.1671531Z 
2025-08-19T20:44:11.1671673Z # api.tests.test\_roi\_filters
2025-08-19T20:44:11.1672184Z 
2025-08-19T20:44:11.1672372Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T20:44:11.1672696Z 
2025-08-19T20:44:11.1672845Z # api.tests.test\_sentry\_event
2025-08-19T20:44:11.1673124Z 
2025-08-19T20:44:11.1673359Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T20:44:11.1673747Z 
2025-08-19T20:44:11.1673897Z ## DummyTransport Objects
2025-08-19T20:44:11.1674144Z 
2025-08-19T20:44:11.1674259Z ```python
2025-08-19T20:44:11.1674565Z class DummyTransport()
2025-08-19T20:44:11.1674887Z ```
2025-08-19T20:44:11.1675038Z 
2025-08-19T20:44:11.1675367Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T20:44:11.1675853Z 
2025-08-19T20:44:11.1675985Z #### capture\_envelope
2025-08-19T20:44:11.1676212Z 
2025-08-19T20:44:11.1676328Z ```python
2025-08-19T20:44:11.1676648Z def capture_envelope(envelope)
2025-08-19T20:44:11.1677008Z ```
2025-08-19T20:44:11.1677156Z 
2025-08-19T20:44:11.1677393Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T20:44:11.1677793Z 
2025-08-19T20:44:11.1677945Z <a id="api.tests.test_cors"></a>
2025-08-19T20:44:11.1678612Z 
2025-08-19T20:44:11.1678755Z # api.tests.test\_cors
2025-08-19T20:44:11.1678984Z 
2025-08-19T20:44:11.1679137Z <a id="api.tests.test_imports"></a>
2025-08-19T20:44:11.1679437Z 
2025-08-19T20:44:11.1679575Z # api.tests.test\_imports
2025-08-19T20:44:11.1679873Z 
2025-08-19T20:44:11.1680045Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T20:44:11.1680354Z 
2025-08-19T20:44:11.1680498Z # api.tests.test\_rate\_limit
2025-08-19T20:44:11.1680762Z 
2025-08-19T20:44:11.1680937Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T20:44:11.1681258Z 
2025-08-19T20:44:11.1681369Z #### app
2025-08-19T20:44:11.1681540Z 
2025-08-19T20:44:11.1681650Z noqa: E402
2025-08-19T20:44:11.1681972Z 
2025-08-19T20:44:11.1682142Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T20:44:11.1682442Z 
2025-08-19T20:44:11.1682583Z # api.tests.test\_entrypoint
2025-08-19T20:44:11.1682837Z 
2025-08-19T20:44:11.1682994Z <a id="api.tests.test_health"></a>
2025-08-19T20:44:11.1683297Z 
2025-08-19T20:44:11.1683435Z # api.tests.test\_health
2025-08-19T20:44:11.1683682Z 
2025-08-19T20:44:11.1683835Z <a id="api.tests.test_score"></a>
2025-08-19T20:44:11.1684117Z 
2025-08-19T20:44:11.1684262Z # api.tests.test\_score
2025-08-19T20:44:11.1684491Z 
2025-08-19T20:44:11.1684635Z <a id="api.logging_config"></a>
2025-08-19T20:44:11.1684897Z 
2025-08-19T20:44:11.1685033Z # api.logging\_config
2025-08-19T20:44:11.1685251Z 
2025-08-19T20:44:11.1685399Z <a id="api.migrations.env"></a>
2025-08-19T20:44:11.1685685Z 
2025-08-19T20:44:11.1685815Z # api.migrations.env
2025-08-19T20:44:11.1686031Z 
2025-08-19T20:44:11.1686252Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T20:44:11.1686624Z 
2025-08-19T20:44:11.1686812Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T20:44:11.1687160Z 
2025-08-19T20:44:11.1687367Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T20:44:11.1687716Z 
2025-08-19T20:44:11.1687884Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T20:44:11.1688438Z 
2025-08-19T20:44:11.1688719Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T20:44:11.1689154Z 
2025-08-19T20:44:11.1689414Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T20:44:11.1689815Z 
2025-08-19T20:44:11.1690036Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T20:44:11.1690421Z 
2025-08-19T20:44:11.1690613Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T20:44:11.1690952Z 
2025-08-19T20:44:11.1691166Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T20:44:11.1691546Z 
2025-08-19T20:44:11.1691733Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T20:44:11.1692245Z 
2025-08-19T20:44:11.1692486Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T20:44:11.1692876Z 
2025-08-19T20:44:11.1693075Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T20:44:11.1693440Z 
2025-08-19T20:44:11.1693661Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T20:44:11.1694074Z 
2025-08-19T20:44:11.1694276Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T20:44:11.1694733Z 
2025-08-19T20:44:11.1694960Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T20:44:11.1695348Z 
2025-08-19T20:44:11.1695541Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T20:44:11.1695888Z 
2025-08-19T20:44:11.1696146Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T20:44:11.1696556Z 
2025-08-19T20:44:11.1696773Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T20:44:11.1697150Z 
2025-08-19T20:44:11.1697373Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T20:44:11.1697752Z 
2025-08-19T20:44:11.1698034Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T20:44:11.1698397Z 
2025-08-19T20:44:11.1698645Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T20:44:11.1699053Z 
2025-08-19T20:44:11.1699280Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T20:44:11.1699911Z 
2025-08-19T20:44:11.1700118Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T20:44:11.1700490Z 
2025-08-19T20:44:11.1700656Z # api.migrations.versions.0001\_baseline
2025-08-19T20:44:11.1700975Z 
2025-08-19T20:44:11.1701132Z <a id="api.migrations.versions"></a>
2025-08-19T20:44:11.1701434Z 
2025-08-19T20:44:11.1701579Z # api.migrations.versions
2025-08-19T20:44:11.1701997Z 
2025-08-19T20:44:11.1702148Z <a id="api.migrations"></a>
2025-08-19T20:44:11.1702403Z 
2025-08-19T20:44:11.1702522Z # api.migrations
2025-08-19T20:44:11.1702741Z 
2025-08-19T20:44:11.1702859Z <a id="api.db"></a>
2025-08-19T20:44:11.1703058Z 
2025-08-19T20:44:11.1703168Z # api.db
2025-08-19T20:44:11.1703333Z 
2025-08-19T20:44:11.1703475Z <a id="api.routes.score"></a>
2025-08-19T20:44:11.1703738Z 
2025-08-19T20:44:11.1703869Z # api.routes.score
2025-08-19T20:44:11.1704068Z 
2025-08-19T20:44:11.1704206Z <a id="api.routes.stats"></a>
2025-08-19T20:44:11.1704467Z 
2025-08-19T20:44:11.1704600Z # api.routes.stats
2025-08-19T20:44:11.1704810Z 
2025-08-19T20:44:11.1704954Z <a id="api.routes.roi"></a>
2025-08-19T20:44:11.1705213Z 
2025-08-19T20:44:11.1705334Z # api.routes.roi
2025-08-19T20:44:11.1705527Z 
2025-08-19T20:44:11.1705684Z <a id="api.routes.health"></a>
2025-08-19T20:44:11.1705947Z 
2025-08-19T20:44:11.1706072Z # api.routes.health
2025-08-19T20:44:11.1706270Z 
2025-08-19T20:44:11.1706442Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T20:44:11.1706753Z 
2025-08-19T20:44:11.1706865Z #### MAX\_SKEW
2025-08-19T20:44:11.1707052Z 
2025-08-19T20:44:11.1707157Z seconds
2025-08-19T20:44:11.1707310Z 
2025-08-19T20:44:11.1707478Z <a id="api.routes.health.health"></a>
2025-08-19T20:44:11.1707778Z 
2025-08-19T20:44:11.1707886Z #### health
2025-08-19T20:44:11.1708048Z 
2025-08-19T20:44:11.1708165Z ```python
2025-08-19T20:44:11.1708511Z @router.get("/health", include_in_schema=False)
2025-08-19T20:44:11.1709249Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T20:44:11.1710091Z ```
2025-08-19T20:44:11.1710260Z 
2025-08-19T20:44:11.1710471Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T20:44:11.1710838Z 
2025-08-19T20:44:11.1711000Z <a id="api.routes.repository"></a>
2025-08-19T20:44:11.1711290Z 
2025-08-19T20:44:11.1711425Z # api.routes.repository
2025-08-19T20:44:11.1711652Z 
2025-08-19T20:44:11.1711978Z <a id="api.routes"></a>
2025-08-19T20:44:11.1712211Z 
2025-08-19T20:44:11.1712326Z # api.routes
2025-08-19T20:44:11.1712510Z 
2025-08-19T20:44:11.1712648Z <a id="api.models.fee"></a>
2025-08-19T20:44:11.1712891Z 
2025-08-19T20:44:11.1713008Z # api.models.fee
2025-08-19T20:44:11.1713207Z 
2025-08-19T20:44:11.1713338Z <a id="api.models"></a>
2025-08-19T20:44:11.1713553Z 
2025-08-19T20:44:11.1713677Z # api.models
2025-08-19T20:44:11.1713850Z 
2025-08-19T20:44:11.1713996Z <a id="api.roi_repository"></a>
2025-08-19T20:44:11.1714265Z 
2025-08-19T20:44:11.1714392Z # api.roi\_repository
2025-08-19T20:44:11.1714604Z 
2025-08-19T20:44:11.1714741Z <a id="api.main"></a>
2025-08-19T20:44:11.1714962Z 
2025-08-19T20:44:11.1715088Z # api.main
2025-08-19T20:44:11.1715258Z 
2025-08-19T20:44:11.1715397Z <a id="api.main.ready"></a>
2025-08-19T20:44:11.1715637Z 
2025-08-19T20:44:11.1715773Z #### ready
2025-08-19T20:44:11.1715933Z 
2025-08-19T20:44:11.1716042Z ```python
2025-08-19T20:44:11.1716511Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T20:44:11.1717314Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T20:44:11.1717973Z                                                                       str]
2025-08-19T20:44:11.1718401Z ```
2025-08-19T20:44:11.1718552Z 
2025-08-19T20:44:11.1718731Z Return 200 only when migrations are at head.
2025-08-19T20:44:11.1719057Z 
2025-08-19T20:44:11.1719198Z <a id="api.config"></a>
2025-08-19T20:44:11.1719424Z 
2025-08-19T20:44:11.1719541Z # api.config
2025-08-19T20:44:11.1719726Z 
2025-08-19T20:44:11.1719848Z <a id="api.security"></a>
2025-08-19T20:44:11.1720080Z 
2025-08-19T20:44:11.1720394Z # api.security
2025-08-19T20:44:11.1720578Z 
2025-08-19T20:44:11.1720684Z <a id="etl"></a>
2025-08-19T20:44:11.1720861Z 
2025-08-19T20:44:11.1720974Z # etl
2025-08-19T20:44:11.1721128Z 
2025-08-19T20:44:11.1721275Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T20:44:11.1721559Z 
2025-08-19T20:44:11.1721686Z # etl.fba\_fee\_ingestor
2025-08-19T20:44:11.1722099Z 
2025-08-19T20:44:11.1722246Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T20:44:11.1722527Z 
2025-08-19T20:44:11.1722657Z # etl.sp\_fees\_ingestor
2025-08-19T20:44:11.1722881Z 
2025-08-19T20:44:11.1723031Z <a id="etl.keepa_ingestor"></a>
2025-08-19T20:44:11.1723296Z 
2025-08-19T20:44:11.1723422Z # etl.keepa\_ingestor
2025-08-19T20:44:11.1723634Z 
2025-08-19T20:44:11.1723762Z <a id="etl.db"></a>
2025-08-19T20:44:11.1723956Z 
2025-08-19T20:44:11.1724063Z # etl.db
2025-08-19T20:44:11.1724226Z 
2025-08-19T20:44:11.1724374Z <a id="etl.dialects.schemas"></a>
2025-08-19T20:44:11.1724647Z 
2025-08-19T20:44:11.1724789Z # etl.dialects.schemas
2025-08-19T20:44:11.1725022Z 
2025-08-19T20:44:11.1725215Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T20:44:11.1725563Z 
2025-08-19T20:44:11.1725729Z # etl.dialects.amazon\_reimbursements
2025-08-19T20:44:11.1726026Z 
2025-08-19T20:44:11.1726200Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T20:44:11.1726534Z 
2025-08-19T20:44:11.1726686Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T20:44:11.1726978Z 
2025-08-19T20:44:11.1727140Z <a id="etl.dialects.test_generic"></a>
2025-08-19T20:44:11.1727436Z 
2025-08-19T20:44:11.1727579Z # etl.dialects.test\_generic
2025-08-19T20:44:11.1727833Z 
2025-08-19T20:44:11.1728000Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T20:44:11.1728308Z 
2025-08-19T20:44:11.1728454Z # etl.dialects.amazon\_returns
2025-08-19T20:44:11.1728717Z 
2025-08-19T20:44:11.1728895Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T20:44:11.1729220Z 
2025-08-19T20:44:11.1729379Z # etl.dialects.amazon\_fee\_preview
2025-08-19T20:44:11.1729867Z 
2025-08-19T20:44:11.1730065Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T20:44:11.1730413Z 
2025-08-19T20:44:11.1730586Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T20:44:11.1730895Z 
2025-08-19T20:44:11.1731071Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T20:44:11.1731402Z 
2025-08-19T20:44:11.1731555Z # etl.dialects.amazon\_settlements
2025-08-19T20:44:11.1732003Z 
2025-08-19T20:44:11.1732156Z <a id="etl.dialects"></a>
2025-08-19T20:44:11.1732396Z 
2025-08-19T20:44:11.1732514Z # etl.dialects
2025-08-19T20:44:11.1732698Z 
2025-08-19T20:44:11.1732827Z <a id="ingest"></a>
2025-08-19T20:44:11.1733029Z 
2025-08-19T20:44:11.1733140Z # ingest
2025-08-19T20:44:11.1733303Z 
2025-08-19T20:44:11.1733450Z <a id="ingest.maintenance"></a>
2025-08-19T20:44:11.1733720Z 
2025-08-19T20:44:11.1733846Z # ingest.maintenance
2025-08-19T20:44:11.1734066Z 
2025-08-19T20:44:11.1734208Z <a id="ingest.copy_loader"></a>
2025-08-19T20:44:11.1734464Z 
2025-08-19T20:44:11.1734602Z # ingest.copy\_loader
2025-08-19T20:44:11.1734834Z 
2025-08-19T20:44:11.1735018Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T20:44:11.1735364Z 
2025-08-19T20:44:11.1735496Z #### copy\_df\_via\_temp
2025-08-19T20:44:11.1735724Z 
2025-08-19T20:44:11.1735844Z ```python
2025-08-19T20:44:11.1736159Z def copy_df_via_temp(engine: Engine,
2025-08-19T20:44:11.1736591Z                      df: pd.DataFrame,
2025-08-19T20:44:11.1737009Z                      target_table: str,
2025-08-19T20:44:11.1737412Z                      *,
2025-08-19T20:44:11.1737776Z                      target_schema: Optional[str] = None,
2025-08-19T20:44:11.1738266Z                      columns: Sequence[str],
2025-08-19T20:44:11.1738756Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T20:44:11.1739276Z                      analyze_after: bool = False,
2025-08-19T20:44:11.1739754Z                      connection: Any | None = None) -> int
2025-08-19T20:44:11.1740187Z ```
2025-08-19T20:44:11.1740338Z 
2025-08-19T20:44:11.1740639Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T20:44:11.1741278Z 
2025-08-19T20:44:11.1741432Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T20:44:11.1741743Z 
2025-08-19T20:44:11.1742058Z # ingest.tests.test\_smoke
2025-08-19T20:44:11.1742302Z 
2025-08-19T20:44:11.1742435Z <a id="ingest.tests"></a>
2025-08-19T20:44:11.1742675Z 
2025-08-19T20:44:11.1742794Z # ingest.tests
2025-08-19T20:44:11.1742978Z 
2025-08-19T20:44:11.1743133Z <a id="ingest.upload_router"></a>
2025-08-19T20:44:11.1743415Z 
2025-08-19T20:44:11.1743552Z # ingest.upload\_router
2025-08-19T20:44:11.1743775Z 
2025-08-19T20:44:11.1743933Z <a id="ingest.email_watcher"></a>
2025-08-19T20:44:11.1744205Z 
2025-08-19T20:44:11.1744333Z # ingest.email\_watcher
2025-08-19T20:44:11.1744559Z 
2025-08-19T20:44:11.1744717Z <a id="ingest.email_watcher.main"></a>
2025-08-19T20:44:11.1745023Z 
2025-08-19T20:44:11.1745140Z #### main
2025-08-19T20:44:11.1745303Z 
2025-08-19T20:44:11.1745414Z ```python
2025-08-19T20:44:11.1745728Z def main() -> dict[str, str]
2025-08-19T20:44:11.1746087Z ```
2025-08-19T20:44:11.1746235Z 
2025-08-19T20:44:11.1746495Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T20:44:11.1746915Z 
2025-08-19T20:44:11.1747153Z Returns {"status": "success"} when processing completes.
2025-08-19T20:44:11.1747545Z 
2025-08-19T20:44:11.1747678Z <a id="ingest.tasks"></a>
2025-08-19T20:44:11.1747915Z 
2025-08-19T20:44:11.1748035Z # ingest.tasks
2025-08-19T20:44:11.1748217Z 
2025-08-19T20:44:11.1748390Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T20:44:11.1748716Z 
2025-08-19T20:44:11.1748853Z #### task\_import\_file
2025-08-19T20:44:11.1749071Z 
2025-08-19T20:44:11.1749183Z ```python
2025-08-19T20:44:11.1749572Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T20:44:11.1750110Z def task_import_file(self: Any,
2025-08-19T20:44:11.1750494Z                      uri: str,
2025-08-19T20:44:11.1750890Z                      report_type: str | None = None,
2025-08-19T20:44:11.1751617Z                      force: bool = False) -> dict[str, Any]
2025-08-19T20:44:11.1752285Z ```
2025-08-19T20:44:11.1752450Z 
2025-08-19T20:44:11.1752696Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T20:44:11.1753098Z 
2025-08-19T20:44:11.1753246Z <a id="ingest.celery_app"></a>
2025-08-19T20:44:11.1753518Z 
2025-08-19T20:44:11.1753646Z # ingest.celery\_app
2025-08-19T20:44:11.1753861Z 
2025-08-19T20:44:11.1754016Z <a id="ingest.ingest_router"></a>
2025-08-19T20:44:11.1754291Z 
2025-08-19T20:44:11.1754423Z # ingest.ingest\_router
2025-08-19T20:44:11.1754645Z 
2025-08-19T20:44:11.1754787Z <a id="logistics_etl"></a>
2025-08-19T20:44:11.1755027Z 
2025-08-19T20:44:11.1755143Z # logistics\_etl
2025-08-19T20:44:11.1755348Z 
2025-08-19T20:44:11.1755482Z Daily logistics ETL job.
2025-08-19T20:44:11.1755708Z 
2025-08-19T20:44:11.1755858Z <a id="logistics_etl.__main__"></a>
2025-08-19T20:44:11.1756138Z 
2025-08-19T20:44:11.1756275Z # logistics\_etl.\_\_main\_\_
2025-08-19T20:44:11.1756535Z 
2025-08-19T20:44:11.1756686Z <a id="logistics_etl.dsn"></a>
2025-08-19T20:44:11.1756936Z 
2025-08-19T20:44:11.1757062Z # logistics\_etl.dsn
2025-08-19T20:44:11.1757279Z 
2025-08-19T20:44:11.1757490Z Local DSN builder to avoid cross-service dependency.
2025-08-19T20:44:11.1757861Z 
2025-08-19T20:44:11.1758031Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T20:44:11.1758345Z 
2025-08-19T20:44:11.1758459Z #### build\_dsn
2025-08-19T20:44:11.1758647Z 
2025-08-19T20:44:11.1758765Z ```python
2025-08-19T20:44:11.1759076Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:44:11.1759480Z ```
2025-08-19T20:44:11.1759624Z 
2025-08-19T20:44:11.1759876Z Return a Postgres DSN assembled from environment variables.
2025-08-19T20:44:11.1760299Z 
2025-08-19T20:44:11.1760572Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T20:44:11.1761306Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T20:44:11.1762123Z error when any required variable is missing.
2025-08-19T20:44:11.1762479Z 
2025-08-19T20:44:11.1762890Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T20:44:11.1763216Z 
2025-08-19T20:44:11.1763360Z # logistics\_etl.tests.conftest
2025-08-19T20:44:11.1763636Z 
2025-08-19T20:44:11.1763821Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T20:44:11.1764167Z 
2025-08-19T20:44:11.1764332Z # logistics\_etl.tests.test\_repository
2025-08-19T20:44:11.1764637Z 
2025-08-19T20:44:11.1764805Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T20:44:11.1765120Z 
2025-08-19T20:44:11.1765283Z # logistics\_etl.tests.test\_cron
2025-08-19T20:44:11.1765561Z 
2025-08-19T20:44:11.1765738Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T20:44:11.1766079Z 
2025-08-19T20:44:11.1766229Z # logistics\_etl.tests.test\_imports
2025-08-19T20:44:11.1766519Z 
2025-08-19T20:44:11.1766695Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T20:44:11.1767012Z 
2025-08-19T20:44:11.1767158Z # logistics\_etl.tests.test\_smoke
2025-08-19T20:44:11.1767459Z 
2025-08-19T20:44:11.1767641Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T20:44:11.1767982Z 
2025-08-19T20:44:11.1768132Z # logistics\_etl.tests.test\_client
2025-08-19T20:44:11.1768431Z 
2025-08-19T20:44:11.1768616Z <a id="logistics_etl.tests"></a>
2025-08-19T20:44:11.1768887Z 
2025-08-19T20:44:11.1769021Z # logistics\_etl.tests
2025-08-19T20:44:11.1769239Z 
2025-08-19T20:44:11.1769380Z <a id="logistics_etl.flow"></a>
2025-08-19T20:44:11.1769638Z 
2025-08-19T20:44:11.1769772Z # logistics\_etl.flow
2025-08-19T20:44:11.1769985Z 
2025-08-19T20:44:11.1770131Z <a id="logistics_etl.client"></a>
2025-08-19T20:44:11.1770413Z 
2025-08-19T20:44:11.1770543Z # logistics\_etl.client
2025-08-19T20:44:11.1770761Z 
2025-08-19T20:44:11.1770908Z <a id="logistics_etl.cron"></a>
2025-08-19T20:44:11.1771165Z 
2025-08-19T20:44:11.1771291Z # logistics\_etl.cron
2025-08-19T20:44:11.1771500Z 
2025-08-19T20:44:11.1771644Z <a id="logistics_etl.db"></a>
2025-08-19T20:44:11.1772071Z 
2025-08-19T20:44:11.1772200Z # logistics\_etl.db
2025-08-19T20:44:11.1772632Z 
2025-08-19T20:44:11.1772795Z <a id="logistics_etl.repository"></a>
2025-08-19T20:44:11.1773101Z 
2025-08-19T20:44:11.1834748Z # logistics\_etl.repository
2025-08-19T20:44:11.1835055Z 
2025-08-19T20:44:11.1835175Z <a id="alert_bot"></a>
2025-08-19T20:44:11.1835390Z 
2025-08-19T20:44:11.1835489Z # alert\_bot
2025-08-19T20:44:11.1835648Z 
2025-08-19T20:44:11.1835794Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T20:44:11.1836079Z 
2025-08-19T20:44:11.1836199Z # alert\_bot.tests.test\_smoke
2025-08-19T20:44:11.1836430Z 
2025-08-19T20:44:11.1836558Z <a id="alert_bot.tests"></a>
2025-08-19T20:44:11.1836769Z 
2025-08-19T20:44:11.1836873Z # alert\_bot.tests
2025-08-19T20:44:11.1837047Z 
2025-08-19T20:44:11.1837169Z <a id="alert_bot.alert_bot"></a>
2025-08-19T20:44:11.1837395Z 
2025-08-19T20:44:11.1837516Z # alert\_bot.alert\_bot
2025-08-19T20:44:11.1837705Z 
2025-08-19T20:44:11.1837822Z <a id="alert_bot.rules"></a>
2025-08-19T20:44:11.1838038Z 
2025-08-19T20:44:11.1838166Z # alert\_bot.rules
2025-08-19T20:44:11.1838335Z 
2025-08-19T20:44:11.1838437Z <a id="common"></a>
2025-08-19T20:44:11.1838609Z 
2025-08-19T20:44:11.1838707Z # common
2025-08-19T20:44:11.1838848Z 
2025-08-19T20:44:11.1838959Z <a id="common.dsn"></a>
2025-08-19T20:44:11.1839156Z 
2025-08-19T20:44:11.1839259Z # common.dsn
2025-08-19T20:44:11.1839417Z 
2025-08-19T20:44:11.1839551Z <a id="common.dsn.build_dsn"></a>
2025-08-19T20:44:11.1839792Z 
2025-08-19T20:44:11.1839890Z #### build\_dsn
2025-08-19T20:44:11.1840058Z 
2025-08-19T20:44:11.1840159Z ```python
2025-08-19T20:44:11.1840432Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:44:11.1840796Z ```
2025-08-19T20:44:11.1840933Z 
2025-08-19T20:44:11.1841124Z Return a Postgres DSN, validating required variables.
2025-08-19T20:44:11.1841455Z 
2025-08-19T20:44:11.1841983Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T20:44:11.1842702Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T20:44:11.1843352Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T20:44:11.1844043Z missing.
2025-08-19T20:44:11.1844176Z 
2025-08-19T20:44:11.1844303Z <a id="common.models_vendor"></a>
2025-08-19T20:44:11.1844564Z 
2025-08-19T20:44:11.1844685Z # common.models\_vendor
2025-08-19T20:44:11.1844880Z 
2025-08-19T20:44:11.1845033Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T20:44:11.1845322Z 
2025-08-19T20:44:11.1845426Z ## Vendor Objects
2025-08-19T20:44:11.1845593Z 
2025-08-19T20:44:11.1845692Z ```python
2025-08-19T20:44:11.1845935Z class Vendor(Base)
2025-08-19T20:44:11.1846193Z ```
2025-08-19T20:44:11.1846321Z 
2025-08-19T20:44:11.1846444Z Vendor of inventory items.
2025-08-19T20:44:11.1846665Z 
2025-08-19T20:44:11.1846827Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T20:44:11.1847114Z 
2025-08-19T20:44:11.1847242Z ## VendorPrice Objects
2025-08-19T20:44:11.1847426Z 
2025-08-19T20:44:11.1847526Z ```python
2025-08-19T20:44:11.1847784Z class VendorPrice(Base)
2025-08-19T20:44:11.1848066Z ```
2025-08-19T20:44:11.1848212Z 
2025-08-19T20:44:11.1848374Z Association table linking vendors to pricing.
2025-08-19T20:44:11.1848656Z 
2025-08-19T20:44:11.1848777Z <a id="common.db_url"></a>
2025-08-19T20:44:11.1848987Z 
2025-08-19T20:44:11.1849089Z # common.db\_url
2025-08-19T20:44:11.1849252Z 
2025-08-19T20:44:11.1849385Z <a id="common.db_url.build_url"></a>
2025-08-19T20:44:11.1849630Z 
2025-08-19T20:44:11.1849729Z #### build\_url
2025-08-19T20:44:11.1849901Z 
2025-08-19T20:44:11.1849998Z ```python
2025-08-19T20:44:11.1850277Z def build_url(async_: bool = True) -> str
2025-08-19T20:44:11.1850662Z ```
2025-08-19T20:44:11.1850795Z 
2025-08-19T20:44:11.1850957Z Return Postgres DSN from env or PG_* parts.
2025-08-19T20:44:11.1851238Z 
2025-08-19T20:44:11.1851355Z <a id="common.keepa"></a>
2025-08-19T20:44:11.1851551Z 
2025-08-19T20:44:11.1851661Z # common.keepa
2025-08-19T20:44:11.1851972Z 
2025-08-19T20:44:11.1852170Z <a id="common.llm"></a>
2025-08-19T20:44:11.1852552Z 
2025-08-19T20:44:11.1852653Z # common.llm
2025-08-19T20:44:11.1852812Z 
2025-08-19T20:44:11.1852952Z <a id="common.settings"></a>
2025-08-19T20:44:11.1853168Z 
2025-08-19T20:44:11.1853275Z # common.settings
2025-08-19T20:44:11.1853447Z 
2025-08-19T20:44:11.1853566Z <a id="common.db"></a>
2025-08-19T20:44:11.1853751Z 
2025-08-19T20:44:11.1853852Z # common.db
2025-08-19T20:44:11.1854006Z 
2025-08-19T20:44:11.1854155Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T20:44:11.1854441Z 
2025-08-19T20:44:11.1854561Z #### build\_sqlalchemy\_url
2025-08-19T20:44:11.1854781Z 
2025-08-19T20:44:11.1854880Z ```python
2025-08-19T20:44:11.1855147Z def build_sqlalchemy_url() -> str
2025-08-19T20:44:11.1855461Z ```
2025-08-19T20:44:11.1855590Z 
2025-08-19T20:44:11.1855754Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T20:44:11.1856025Z 
2025-08-19T20:44:11.1856161Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T20:44:11.1856428Z 
2025-08-19T20:44:11.1856543Z #### build\_asyncpg\_dsn
2025-08-19T20:44:11.1856749Z 
2025-08-19T20:44:11.1856859Z ```python
2025-08-19T20:44:11.1857134Z def build_asyncpg_dsn() -> str
2025-08-19T20:44:11.1857454Z ```
2025-08-19T20:44:11.1857588Z 
2025-08-19T20:44:11.1857795Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T20:44:11.1858133Z 
2025-08-19T20:44:11.1858267Z <a id="common.db.refresh_mvs"></a>
2025-08-19T20:44:11.1858503Z 
2025-08-19T20:44:11.1858611Z #### refresh\_mvs
2025-08-19T20:44:11.1858789Z 
2025-08-19T20:44:11.1858888Z ```python
2025-08-19T20:44:11.1859211Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T20:44:11.1859608Z ```
2025-08-19T20:44:11.1859739Z 
2025-08-19T20:44:11.1859953Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T20:44:11.1860295Z 
2025-08-19T20:44:11.1860414Z <a id="common.config"></a>
2025-08-19T20:44:11.1860634Z 
2025-08-19T20:44:11.1860738Z # common.config
2025-08-19T20:44:11.1860904Z 
2025-08-19T20:44:11.1861021Z <a id="common.base"></a>
2025-08-19T20:44:11.1861227Z 
2025-08-19T20:44:11.1861334Z # common.base
2025-08-19T20:44:11.1861680Z 
2025-08-19T20:44:11.1861974Z <a id="common.base.Base"></a>
2025-08-19T20:44:11.1862221Z 
2025-08-19T20:44:11.1862324Z ## Base Objects
2025-08-19T20:44:11.1862486Z 
2025-08-19T20:44:11.1862583Z ```python
2025-08-19T20:44:11.1862835Z class Base(DeclarativeBase)
2025-08-19T20:44:11.1863141Z ```
2025-08-19T20:44:11.1863266Z 
2025-08-19T20:44:11.1863396Z Base class for SQLAlchemy models.
2025-08-19T20:44:11.1863647Z 
2025-08-19T20:44:11.1863764Z <a id="repricer"></a>
2025-08-19T20:44:11.1863961Z 
2025-08-19T20:44:11.1864070Z # repricer
2025-08-19T20:44:11.1864211Z 
2025-08-19T20:44:11.1864351Z <a id="repricer.app.schemas"></a>
2025-08-19T20:44:11.1864611Z 
2025-08-19T20:44:11.1864733Z # repricer.app.schemas
2025-08-19T20:44:11.1864933Z 
2025-08-19T20:44:11.1865066Z <a id="repricer.app.deps"></a>
2025-08-19T20:44:11.1865304Z 
2025-08-19T20:44:11.1865420Z # repricer.app.deps
2025-08-19T20:44:11.1865592Z 
2025-08-19T20:44:11.1865777Z Placeholder module for Keepa / SP-API clients.
2025-08-19T20:44:11.1866093Z 
2025-08-19T20:44:11.1866223Z <a id="repricer.app.logic"></a>
2025-08-19T20:44:11.1866457Z 
2025-08-19T20:44:11.1866581Z # repricer.app.logic
2025-08-19T20:44:11.1866770Z 
2025-08-19T20:44:11.1866927Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T20:44:11.1867215Z 
2025-08-19T20:44:11.1867317Z #### MIN\_MARGIN
2025-08-19T20:44:11.1867472Z 
2025-08-19T20:44:11.1867568Z 15 % ROI
2025-08-19T20:44:11.1867703Z 
2025-08-19T20:44:11.1867866Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T20:44:11.1868145Z 
2025-08-19T20:44:11.1868258Z #### compute\_price
2025-08-19T20:44:11.1868426Z 
2025-08-19T20:44:11.1868524Z ```python
2025-08-19T20:44:11.1868924Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T20:44:11.1869403Z ```
2025-08-19T20:44:11.1869549Z 
2025-08-19T20:44:11.1869729Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T20:44:11.1870196Z Replace with real competitive logic later.
2025-08-19T20:44:11.1870658Z 
2025-08-19T20:44:11.1870794Z <a id="repricer.app.main"></a>
2025-08-19T20:44:11.1871028Z 
2025-08-19T20:44:11.1871146Z # repricer.app.main
2025-08-19T20:44:11.1871315Z 
2025-08-19T20:44:11.1871437Z <a id="repricer.app"></a>
2025-08-19T20:44:11.1871660Z 
2025-08-19T20:44:11.1871924Z # repricer.app
2025-08-19T20:44:11.1872096Z 
2025-08-19T20:44:11.1872260Z <a id="repricer.tests.test_imports"></a>
2025-08-19T20:44:11.1872557Z 
2025-08-19T20:44:11.1872699Z # repricer.tests.test\_imports
2025-08-19T20:44:11.1872947Z 
2025-08-19T20:44:11.1873105Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T20:44:11.1873390Z 
2025-08-19T20:44:11.1873525Z # repricer.tests.test\_smoke
2025-08-19T20:44:11.1873783Z 
2025-08-19T20:44:11.1873915Z <a id="repricer.tests"></a>
2025-08-19T20:44:11.1874142Z 
2025-08-19T20:44:11.1874265Z # repricer.tests
2025-08-19T20:44:11.1874449Z 
2025-08-19T20:44:11.1874558Z <a id="db"></a>
2025-08-19T20:44:11.1874723Z 
2025-08-19T20:44:11.1874829Z # db
2025-08-19T20:44:11.1874971Z 
2025-08-19T20:44:11.1875103Z <a id="db.utils.views"></a>
2025-08-19T20:44:11.1875343Z 
2025-08-19T20:44:11.1875454Z # db.utils.views
2025-08-19T20:44:11.1875631Z 
2025-08-19T20:44:11.1875785Z <a id="db.utils.views.replace_view"></a>
2025-08-19T20:44:11.1876083Z 
2025-08-19T20:44:11.1876197Z #### replace\_view
2025-08-19T20:44:11.1876387Z 
2025-08-19T20:44:11.1876498Z ```python
2025-08-19T20:44:11.1876823Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T20:44:11.1877253Z ```
2025-08-19T20:44:11.1877395Z 
2025-08-19T20:44:11.1877549Z Drop and recreate a SQL view atomically.
2025-08-19T20:44:11.1877838Z 
2025-08-19T20:44:11.1877958Z <a id="db.utils"></a>
2025-08-19T20:44:11.1878153Z 
2025-08-19T20:44:11.1878256Z # db.utils
2025-08-19T20:44:11.1878413Z 
2025-08-19T20:44:11.1878540Z <a id="price_importer"></a>
2025-08-19T20:44:11.1878768Z 
2025-08-19T20:44:11.1878889Z # price\_importer
2025-08-19T20:44:11.1879070Z 
2025-08-19T20:44:11.1879244Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T20:44:11.1879579Z 
2025-08-19T20:44:11.1879734Z # price\_importer.services\_common.dsn
2025-08-19T20:44:11.1880312Z 
2025-08-19T20:44:11.1880530Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T20:44:11.1880902Z 
2025-08-19T20:44:11.1881015Z #### build\_dsn
2025-08-19T20:44:11.1881190Z 
2025-08-19T20:44:11.1881308Z ```python
2025-08-19T20:44:11.1881596Z def build_dsn(sync: bool = True) -> str
2025-08-19T20:44:11.1882166Z ```
2025-08-19T20:44:11.1882306Z 
2025-08-19T20:44:11.1882414Z Return safe DSN.
2025-08-19T20:44:11.1882596Z 
2025-08-19T20:44:11.1883098Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T20:44:11.1883455Z 
2025-08-19T20:44:11.1883668Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T20:44:11.1884032Z 
2025-08-19T20:44:11.1884223Z # price\_importer.services\_common.models\_vendor
2025-08-19T20:44:11.1884555Z 
2025-08-19T20:44:11.1884746Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T20:44:11.1885072Z 
2025-08-19T20:44:11.1885250Z # price\_importer.services\_common.db\_url
2025-08-19T20:44:11.1885570Z 
2025-08-19T20:44:11.1885803Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T20:44:11.1886188Z 
2025-08-19T20:44:11.1886309Z #### build\_url
2025-08-19T20:44:11.1886490Z 
2025-08-19T20:44:11.1886597Z ```python
2025-08-19T20:44:11.1886911Z def build_url(async_: bool = True) -> str
2025-08-19T20:44:11.1887293Z ```
2025-08-19T20:44:11.1887438Z 
2025-08-19T20:44:11.1887605Z Return Postgres DSN from env or PG_* parts.
2025-08-19T20:44:11.1887907Z 
2025-08-19T20:44:11.1888094Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T20:44:11.1888433Z 
2025-08-19T20:44:11.1888593Z # price\_importer.services\_common.keepa
2025-08-19T20:44:11.1888892Z 
2025-08-19T20:44:11.1889074Z <a id="price_importer.services_common.llm"></a>
2025-08-19T20:44:11.1889395Z 
2025-08-19T20:44:11.1889546Z # price\_importer.services\_common.llm
2025-08-19T20:44:11.1889845Z 
2025-08-19T20:44:11.1890044Z <a id="price_importer.services_common.settings"></a>
2025-08-19T20:44:11.1890572Z 
2025-08-19T20:44:11.1890740Z # price\_importer.services\_common.settings
2025-08-19T20:44:11.1891061Z 
2025-08-19T20:44:11.1891233Z <a id="price_importer.services_common.db"></a>
2025-08-19T20:44:11.1891556Z 
2025-08-19T20:44:11.1891715Z # price\_importer.services\_common.db
2025-08-19T20:44:11.1892165Z 
2025-08-19T20:44:11.1892440Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T20:44:11.1892867Z 
2025-08-19T20:44:11.1892992Z #### build\_sqlalchemy\_url
2025-08-19T20:44:11.1893197Z 
2025-08-19T20:44:11.1893290Z ```python
2025-08-19T20:44:11.1893550Z def build_sqlalchemy_url() -> str
2025-08-19T20:44:11.1893895Z ```
2025-08-19T20:44:11.1894034Z 
2025-08-19T20:44:11.1894198Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T20:44:11.1894506Z 
2025-08-19T20:44:11.1894758Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T20:44:11.1895164Z 
2025-08-19T20:44:11.1895290Z #### build\_asyncpg\_dsn
2025-08-19T20:44:11.1895518Z 
2025-08-19T20:44:11.1895630Z ```python
2025-08-19T20:44:11.1895907Z def build_asyncpg_dsn() -> str
2025-08-19T20:44:11.1896246Z ```
2025-08-19T20:44:11.1896383Z 
2025-08-19T20:44:11.1896600Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T20:44:11.1896949Z 
2025-08-19T20:44:11.1897159Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T20:44:11.1897520Z 
2025-08-19T20:44:11.1897631Z #### refresh\_mvs
2025-08-19T20:44:11.1897801Z 
2025-08-19T20:44:11.1897903Z ```python
2025-08-19T20:44:11.1898223Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T20:44:11.1898630Z ```
2025-08-19T20:44:11.1898768Z 
2025-08-19T20:44:11.1898986Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T20:44:11.1899339Z 
2025-08-19T20:44:11.1899503Z <a id="price_importer.services_common"></a>
2025-08-19T20:44:11.1899787Z 
2025-08-19T20:44:11.1899914Z # price\_importer.services\_common
2025-08-19T20:44:11.1900171Z 
2025-08-19T20:44:11.1900345Z <a id="price_importer.services_common.base"></a>
2025-08-19T20:44:11.1900850Z 
2025-08-19T20:44:11.1901000Z # price\_importer.services\_common.base
2025-08-19T20:44:11.1901295Z 
2025-08-19T20:44:11.1901443Z <a id="price_importer.normaliser"></a>
2025-08-19T20:44:11.1901721Z 
2025-08-19T20:44:11.1902015Z # price\_importer.normaliser
2025-08-19T20:44:11.1902253Z 
2025-08-19T20:44:11.1902423Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T20:44:11.1902745Z 
2025-08-19T20:44:11.1902897Z # price\_importer.common.models\_vendor
2025-08-19T20:44:11.1903178Z 
2025-08-19T20:44:11.1903326Z <a id="price_importer.common.db_url"></a>
2025-08-19T20:44:11.1903621Z 
2025-08-19T20:44:11.1903757Z # price\_importer.common.db\_url
2025-08-19T20:44:11.1904007Z 
2025-08-19T20:44:11.1904189Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T20:44:11.1904506Z 
2025-08-19T20:44:11.1904613Z #### make\_dsn
2025-08-19T20:44:11.1904783Z 
2025-08-19T20:44:11.1904881Z ```python
2025-08-19T20:44:11.1905156Z def make_dsn(async_: bool = False) -> str
2025-08-19T20:44:11.1905511Z ```
2025-08-19T20:44:11.1905638Z 
2025-08-19T20:44:11.1905819Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T20:44:11.1906109Z 
2025-08-19T20:44:11.1906265Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T20:44:11.1906540Z 
2025-08-19T20:44:11.1906640Z #### build\_url
2025-08-19T20:44:11.1906784Z 
2025-08-19T20:44:11.1906871Z ```python
2025-08-19T20:44:11.1907120Z def build_url(async_: bool = False) -> str
2025-08-19T20:44:11.1907439Z ```
2025-08-19T20:44:11.1907563Z 
2025-08-19T20:44:11.1907734Z Return Postgres DSN built from environment variables.
2025-08-19T20:44:11.1908026Z 
2025-08-19T20:44:11.1908155Z <a id="price_importer.common"></a>
2025-08-19T20:44:11.1908376Z 
2025-08-19T20:44:11.1908485Z # price\_importer.common
2025-08-19T20:44:11.1908673Z 
2025-08-19T20:44:11.1908801Z <a id="price_importer.common.base"></a>
2025-08-19T20:44:11.1909038Z 
2025-08-19T20:44:11.1909155Z # price\_importer.common.base
2025-08-19T20:44:11.1909534Z 
2025-08-19T20:44:11.1909676Z <a id="price_importer.tests.conftest"></a>
2025-08-19T20:44:11.1909919Z 
2025-08-19T20:44:11.1910041Z # price\_importer.tests.conftest
2025-08-19T20:44:11.1910262Z 
2025-08-19T20:44:11.1910410Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T20:44:11.1910682Z 
2025-08-19T20:44:11.1910820Z # price\_importer.tests.test\_reader
2025-08-19T20:44:11.1911083Z 
2025-08-19T20:44:11.1911253Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T20:44:11.1911584Z 
2025-08-19T20:44:11.1911729Z # price\_importer.tests.test\_imports
2025-08-19T20:44:11.1912128Z 
2025-08-19T20:44:11.1912282Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T20:44:11.1912567Z 
2025-08-19T20:44:11.1912698Z # price\_importer.tests.test\_smoke
2025-08-19T20:44:11.1912980Z 
2025-08-19T20:44:11.1913165Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T20:44:11.1913529Z 
2025-08-19T20:44:11.1913691Z # price\_importer.tests.test\_normaliser
2025-08-19T20:44:11.1913964Z 
2025-08-19T20:44:11.1914097Z <a id="price_importer.tests"></a>
2025-08-19T20:44:11.1914333Z 
2025-08-19T20:44:11.1914448Z # price\_importer.tests
2025-08-19T20:44:11.1914624Z 
2025-08-19T20:44:11.1914742Z <a id="price_importer.reader"></a>
2025-08-19T20:44:11.1914967Z 
2025-08-19T20:44:11.1915074Z # price\_importer.reader
2025-08-19T20:44:11.1915273Z 
2025-08-19T20:44:11.1915426Z <a id="price_importer.repository"></a>
2025-08-19T20:44:11.1915721Z 
2025-08-19T20:44:11.1915858Z # price\_importer.repository
2025-08-19T20:44:11.1916098Z 
2025-08-19T20:44:11.1916247Z <a id="price_importer.import"></a>
2025-08-19T20:44:11.1916513Z 
2025-08-19T20:44:11.1916640Z # price\_importer.import
2025-08-19T20:44:11.1916866Z 
2025-08-19T20:44:11.1916983Z <a id="fees_h10"></a>
2025-08-19T20:44:11.1917180Z 
2025-08-19T20:44:11.1917286Z # fees\_h10
2025-08-19T20:44:11.1917440Z 
2025-08-19T20:44:11.1917560Z <a id="fees_h10.worker"></a>
2025-08-19T20:44:11.1917782Z 
2025-08-19T20:44:11.1917892Z # fees\_h10.worker
2025-08-19T20:44:11.1918081Z 
2025-08-19T20:44:11.1918417Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T20:44:11.1918715Z 
2025-08-19T20:44:11.1918841Z #### list\_active\_asins
2025-08-19T20:44:11.1919047Z 
2025-08-19T20:44:11.1919156Z ```python
2025-08-19T20:44:11.1919447Z def list_active_asins() -> list[str]
2025-08-19T20:44:11.1919801Z ```
2025-08-19T20:44:11.1919948Z 
2025-08-19T20:44:11.1920128Z Return known ASINs or an empty list if unavailable.
2025-08-19T20:44:11.1920445Z 
2025-08-19T20:44:11.1920582Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T20:44:11.1920843Z 
2025-08-19T20:44:11.1920966Z # fees\_h10.tests.test\_smoke
2025-08-19T20:44:11.1921203Z 
2025-08-19T20:44:11.1921320Z <a id="fees_h10.tests"></a>
2025-08-19T20:44:11.1921536Z 
2025-08-19T20:44:11.1921637Z # fees\_h10.tests
2025-08-19T20:44:11.1921983Z 
2025-08-19T20:44:11.1922101Z <a id="fees_h10.client"></a>
2025-08-19T20:44:11.1922312Z 
2025-08-19T20:44:11.1922416Z # fees\_h10.client
2025-08-19T20:44:11.1922579Z 
2025-08-19T20:44:11.1922720Z <a id="fees_h10.repository"></a>
2025-08-19T20:44:11.1922962Z 
2025-08-19T20:44:11.1923081Z # fees\_h10.repository
2025-08-19T20:44:11.1923263Z 
2025-08-19T20:44:11.1923418Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T20:44:11.1923716Z 
2025-08-19T20:44:11.1923836Z #### upsert\_fees\_raw
2025-08-19T20:44:11.1924037Z 
2025-08-19T20:44:11.1924153Z ```python
2025-08-19T20:44:11.1924443Z def upsert_fees_raw(engine: Engine,
2025-08-19T20:44:11.1924881Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T20:44:11.1925299Z                     *,
2025-08-19T20:44:11.1925709Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T20:44:11.1926174Z ```
2025-08-19T20:44:11.1926329Z 
2025-08-19T20:44:11.1926466Z Idempotent upsert for fees.
2025-08-19T20:44:11.1926709Z 
2025-08-19T20:44:11.1926989Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T20:44:11.1927605Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T20:44:11.1928344Z Only updates when one of the mutable fields changes.
2025-08-19T20:44:11.1928711Z 
2025-08-19T20:44:11.1928833Z <a id="emailer"></a>
2025-08-19T20:44:11.1929036Z 
2025-08-19T20:44:11.1929141Z # emailer
2025-08-19T20:44:11.1929297Z 
2025-08-19T20:44:11.1929471Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T20:44:11.1929799Z 
2025-08-19T20:44:11.1929957Z # emailer.tests.test\_import\_emailer
2025-08-19T20:44:11.1930239Z 
2025-08-19T20:44:11.1930401Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T20:44:11.1930680Z 
2025-08-19T20:44:11.1930820Z # emailer.tests.test\_smoke
2025-08-19T20:44:11.1931070Z 
2025-08-19T20:44:11.1931201Z <a id="emailer.tests"></a>
2025-08-19T20:44:11.1931432Z 
2025-08-19T20:44:11.1931547Z # emailer.tests
2025-08-19T20:44:11.1931739Z 
2025-08-19T20:44:11.1932036Z <a id="emailer.generate_body"></a>
2025-08-19T20:44:11.1932313Z 
2025-08-19T20:44:11.1932452Z # emailer.generate\_body
2025-08-19T20:44:11.1932679Z 
2025-08-19T20:44:11.1932800Z <a id="llm_server"></a>
2025-08-19T20:44:11.1933020Z 
2025-08-19T20:44:11.1933146Z # llm\_server
2025-08-19T20:44:11.1933314Z 
2025-08-19T20:44:11.1933448Z <a id="llm_server.app"></a>
2025-08-19T20:44:11.1933692Z 
2025-08-19T20:44:11.1933809Z # llm\_server.app
2025-08-19T20:44:11.1933996Z 
