2025-08-20T17:23:30.6523100Z ##[group]Run pydoc-markdown
2025-08-20T17:23:30.6523424Z [36;1mpydoc-markdown[0m
2025-08-20T17:23:30.6564122Z shell: /usr/bin/bash -e {0}
2025-08-20T17:23:30.6564351Z env:
2025-08-20T17:23:30.6564597Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:23:30.6565011Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T17:23:30.6565414Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:23:30.6565759Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:23:30.6566105Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T17:23:30.6566450Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T17:23:30.6566734Z ##[endgroup]
2025-08-20T17:23:31.1857869Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T17:23:31.1859076Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T17:23:31.1859637Z In "pydoc-markdown.yml"
2025-08-20T17:23:31.1860121Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T17:23:31.1860936Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T17:23:31.1861653Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T17:23:31.1862038Z 
2025-08-20T17:23:31.5753087Z <a id="__init__"></a>
2025-08-20T17:23:31.5753463Z 
2025-08-20T17:23:31.5753600Z # \_\_init\_\_
2025-08-20T17:23:31.5753804Z 
2025-08-20T17:23:31.5753954Z <a id="api"></a>
2025-08-20T17:23:31.5754166Z 
2025-08-20T17:23:31.5754284Z # api
2025-08-20T17:23:31.5754456Z 
2025-08-20T17:23:31.5754617Z <a id="api.errors"></a>
2025-08-20T17:23:31.5754861Z 
2025-08-20T17:23:31.5754988Z # api.errors
2025-08-20T17:23:31.5755186Z 
2025-08-20T17:23:31.5755345Z <a id="api.sentry_config"></a>
2025-08-20T17:23:31.5755625Z 
2025-08-20T17:23:31.5755767Z # api.sentry\_config
2025-08-20T17:23:31.5756001Z 
2025-08-20T17:23:31.5756189Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T17:23:31.5756550Z 
2025-08-20T17:23:31.5756789Z # api.tests.test\_stats\_contracts
2025-08-20T17:23:31.5757131Z 
2025-08-20T17:23:31.5757311Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T17:23:31.5757643Z 
2025-08-20T17:23:31.5757812Z # api.tests.test\_sentry\_scrub
2025-08-20T17:23:31.5758088Z 
2025-08-20T17:23:31.5758272Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T17:23:31.5758615Z 
2025-08-20T17:23:31.5758777Z # api.tests.test\_roi\_basic\_auth
2025-08-20T17:23:31.5759061Z 
2025-08-20T17:23:31.5759238Z <a id="api.tests.test_errors_json"></a>
2025-08-20T17:23:31.5759556Z 
2025-08-20T17:23:31.5759711Z # api.tests.test\_errors\_json
2025-08-20T17:23:31.5759987Z 
2025-08-20T17:23:31.5760139Z <a id="api.tests.test_llm"></a>
2025-08-20T17:23:31.5760412Z 
2025-08-20T17:23:31.5760763Z # api.tests.test\_llm
2025-08-20T17:23:31.5760996Z 
2025-08-20T17:23:31.5761166Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T17:23:31.5761482Z 
2025-08-20T17:23:31.5761644Z # api.tests.test\_roi\_filters
2025-08-20T17:23:31.5761908Z 
2025-08-20T17:23:31.5762081Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T17:23:31.5763169Z 
2025-08-20T17:23:31.5763343Z # api.tests.test\_sentry\_event
2025-08-20T17:23:31.5763620Z 
2025-08-20T17:23:31.5763866Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T17:23:31.5764269Z 
2025-08-20T17:23:31.5764425Z ## DummyTransport Objects
2025-08-20T17:23:31.5764677Z 
2025-08-20T17:23:31.5764812Z ```python
2025-08-20T17:23:31.5765128Z class DummyTransport()
2025-08-20T17:23:31.5765476Z ```
2025-08-20T17:23:31.5765635Z 
2025-08-20T17:23:31.5765967Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T17:23:31.5766469Z 
2025-08-20T17:23:31.5766608Z #### capture\_envelope
2025-08-20T17:23:31.5766833Z 
2025-08-20T17:23:31.5766960Z ```python
2025-08-20T17:23:31.5767291Z def capture_envelope(envelope)
2025-08-20T17:23:31.5767687Z ```
2025-08-20T17:23:31.5767853Z 
2025-08-20T17:23:31.5768098Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T17:23:31.5768503Z 
2025-08-20T17:23:31.5768669Z <a id="api.tests.test_cors"></a>
2025-08-20T17:23:31.5769353Z 
2025-08-20T17:23:31.5769504Z # api.tests.test\_cors
2025-08-20T17:23:31.5769742Z 
2025-08-20T17:23:31.5769901Z <a id="api.tests.test_imports"></a>
2025-08-20T17:23:31.5770197Z 
2025-08-20T17:23:31.5770353Z # api.tests.test\_imports
2025-08-20T17:23:31.5770596Z 
2025-08-20T17:23:31.5770761Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T17:23:31.5771080Z 
2025-08-20T17:23:31.5771233Z # api.tests.test\_rate\_limit
2025-08-20T17:23:31.5771496Z 
2025-08-20T17:23:31.5771678Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T17:23:31.5772026Z 
2025-08-20T17:23:31.5772368Z #### app
2025-08-20T17:23:31.5772549Z 
2025-08-20T17:23:31.5772678Z noqa: E402
2025-08-20T17:23:31.5772850Z 
2025-08-20T17:23:31.5773014Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T17:23:31.5773325Z 
2025-08-20T17:23:31.5773498Z # api.tests.test\_stats\_sql
2025-08-20T17:23:31.5773771Z 
2025-08-20T17:23:31.5773947Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T17:23:31.5774284Z 
2025-08-20T17:23:31.5774444Z # api.tests.test\_entrypoint
2025-08-20T17:23:31.5774707Z 
2025-08-20T17:23:31.5774926Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T17:23:31.5775297Z 
2025-08-20T17:23:31.5775478Z # api.tests.test\_stats\_future\_contracts
2025-08-20T17:23:31.5775804Z 
2025-08-20T17:23:31.5775974Z <a id="api.tests.test_health"></a>
2025-08-20T17:23:31.5776268Z 
2025-08-20T17:23:31.5776408Z # api.tests.test\_health
2025-08-20T17:23:31.5776658Z 
2025-08-20T17:23:31.5776814Z <a id="api.tests.test_score"></a>
2025-08-20T17:23:31.5777100Z 
2025-08-20T17:23:31.5777256Z # api.tests.test\_score
2025-08-20T17:23:31.5777493Z 
2025-08-20T17:23:31.5777643Z <a id="api.logging_config"></a>
2025-08-20T17:23:31.5777910Z 
2025-08-20T17:23:31.5778056Z # api.logging\_config
2025-08-20T17:23:31.5778283Z 
2025-08-20T17:23:31.5778444Z <a id="api.migrations.env"></a>
2025-08-20T17:23:31.5778728Z 
2025-08-20T17:23:31.5778868Z # api.migrations.env
2025-08-20T17:23:31.5779087Z 
2025-08-20T17:23:31.5779333Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T17:23:31.5779718Z 
2025-08-20T17:23:31.5779920Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T17:23:31.5780269Z 
2025-08-20T17:23:31.5780486Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T17:23:31.5780847Z 
2025-08-20T17:23:31.5781027Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T17:23:31.5781364Z 
2025-08-20T17:23:31.5781660Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T17:23:31.5782284Z 
2025-08-20T17:23:31.5782571Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T17:23:31.5782984Z 
2025-08-20T17:23:31.5783224Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T17:23:31.5783663Z 
2025-08-20T17:23:31.5783875Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T17:23:31.5784237Z 
2025-08-20T17:23:31.5784473Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T17:23:31.5784975Z 
2025-08-20T17:23:31.5785182Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T17:23:31.5785884Z 
2025-08-20T17:23:31.5786135Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T17:23:31.5786548Z 
2025-08-20T17:23:31.5786781Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T17:23:31.5787160Z 
2025-08-20T17:23:31.5787390Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T17:23:31.5787774Z 
2025-08-20T17:23:31.5787993Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T17:23:31.5788352Z 
2025-08-20T17:23:31.5788591Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T17:23:31.5788989Z 
2025-08-20T17:23:31.5789199Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T17:23:31.5789561Z 
2025-08-20T17:23:31.5789841Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T17:23:31.5790264Z 
2025-08-20T17:23:31.5790495Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T17:23:31.5790886Z 
2025-08-20T17:23:31.5791134Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T17:23:31.5791905Z 
2025-08-20T17:23:31.5792340Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T17:23:31.5792729Z 
2025-08-20T17:23:31.5792990Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T17:23:31.5793403Z 
2025-08-20T17:23:31.5793639Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T17:23:31.5794011Z 
2025-08-20T17:23:31.5794230Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T17:23:31.5794601Z 
2025-08-20T17:23:31.5794779Z # api.migrations.versions.0001\_baseline
2025-08-20T17:23:31.5795236Z 
2025-08-20T17:23:31.5795462Z <a id="api.migrations.versions"></a>
2025-08-20T17:23:31.5795796Z 
2025-08-20T17:23:31.5795955Z # api.migrations.versions
2025-08-20T17:23:31.5796211Z 
2025-08-20T17:23:31.5796373Z <a id="api.migrations"></a>
2025-08-20T17:23:31.5796626Z 
2025-08-20T17:23:31.5796758Z # api.migrations
2025-08-20T17:23:31.5796975Z 
2025-08-20T17:23:31.5797115Z <a id="api.db"></a>
2025-08-20T17:23:31.5797342Z 
2025-08-20T17:23:31.5797463Z # api.db
2025-08-20T17:23:31.5797642Z 
2025-08-20T17:23:31.5797798Z <a id="api.routes.score"></a>
2025-08-20T17:23:31.5798067Z 
2025-08-20T17:23:31.5798216Z # api.routes.score
2025-08-20T17:23:31.5798422Z 
2025-08-20T17:23:31.5798568Z <a id="api.routes.stats"></a>
2025-08-20T17:23:31.5798843Z 
2025-08-20T17:23:31.5798979Z # api.routes.stats
2025-08-20T17:23:31.5799183Z 
2025-08-20T17:23:31.5799328Z <a id="api.routes.roi"></a>
2025-08-20T17:23:31.5799585Z 
2025-08-20T17:23:31.5799715Z # api.routes.roi
2025-08-20T17:23:31.5799918Z 
2025-08-20T17:23:31.5800072Z <a id="api.routes.health"></a>
2025-08-20T17:23:31.5800352Z 
2025-08-20T17:23:31.5800485Z # api.routes.health
2025-08-20T17:23:31.5800692Z 
2025-08-20T17:23:31.5800870Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T17:23:31.5801187Z 
2025-08-20T17:23:31.5801309Z #### MAX\_SKEW
2025-08-20T17:23:31.5801506Z 
2025-08-20T17:23:31.5801628Z seconds
2025-08-20T17:23:31.5801788Z 
2025-08-20T17:23:31.5801960Z <a id="api.routes.health.health"></a>
2025-08-20T17:23:31.5802487Z 
2025-08-20T17:23:31.5802618Z #### health
2025-08-20T17:23:31.5802792Z 
2025-08-20T17:23:31.5802924Z ```python
2025-08-20T17:23:31.5803296Z @router.get("/health", include_in_schema=False)
2025-08-20T17:23:31.5804043Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T17:23:31.5804677Z ```
2025-08-20T17:23:31.5804854Z 
2025-08-20T17:23:31.5805088Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T17:23:31.5805470Z 
2025-08-20T17:23:31.5805639Z <a id="api.routes.repository"></a>
2025-08-20T17:23:31.5805955Z 
2025-08-20T17:23:31.5806104Z # api.routes.repository
2025-08-20T17:23:31.5806346Z 
2025-08-20T17:23:31.5806498Z <a id="api.routes"></a>
2025-08-20T17:23:31.5806725Z 
2025-08-20T17:23:31.5806850Z # api.routes
2025-08-20T17:23:31.5807045Z 
2025-08-20T17:23:31.5807194Z <a id="api.models.fee"></a>
2025-08-20T17:23:31.5807445Z 
2025-08-20T17:23:31.5807575Z # api.models.fee
2025-08-20T17:23:31.5807795Z 
2025-08-20T17:23:31.5808178Z <a id="api.models"></a>
2025-08-20T17:23:31.5808415Z 
2025-08-20T17:23:31.5808548Z # api.models
2025-08-20T17:23:31.5808733Z 
2025-08-20T17:23:31.5808885Z <a id="api.roi_repository"></a>
2025-08-20T17:23:31.5809159Z 
2025-08-20T17:23:31.5809276Z # api.roi\_repository
2025-08-20T17:23:31.5809467Z 
2025-08-20T17:23:31.5809580Z <a id="api.main"></a>
2025-08-20T17:23:31.5809762Z 
2025-08-20T17:23:31.5809862Z # api.main
2025-08-20T17:23:31.5810003Z 
2025-08-20T17:23:31.5810131Z <a id="api.main.ready"></a>
2025-08-20T17:23:31.5810337Z 
2025-08-20T17:23:31.5810439Z #### ready
2025-08-20T17:23:31.5810578Z 
2025-08-20T17:23:31.5810686Z ```python
2025-08-20T17:23:31.5811093Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T17:23:31.5811770Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T17:23:31.5812563Z                                                                       str]
2025-08-20T17:23:31.5812926Z ```
2025-08-20T17:23:31.5813276Z 
2025-08-20T17:23:31.5813435Z Return 200 only when migrations are at head.
2025-08-20T17:23:31.5813708Z 
2025-08-20T17:23:31.5813823Z <a id="api.config"></a>
2025-08-20T17:23:31.5814008Z 
2025-08-20T17:23:31.5814121Z # api.config
2025-08-20T17:23:31.5814267Z 
2025-08-20T17:23:31.5814383Z <a id="api.security"></a>
2025-08-20T17:23:31.5814585Z 
2025-08-20T17:23:31.5814687Z # api.security
2025-08-20T17:23:31.5814840Z 
2025-08-20T17:23:31.5814952Z <a id="etl"></a>
2025-08-20T17:23:31.5815113Z 
2025-08-20T17:23:31.5815210Z # etl
2025-08-20T17:23:31.5815340Z 
2025-08-20T17:23:31.5815477Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T17:23:31.5815703Z 
2025-08-20T17:23:31.5815817Z # etl.fba\_fee\_ingestor
2025-08-20T17:23:31.5816025Z 
2025-08-20T17:23:31.5816154Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T17:23:31.5816380Z 
2025-08-20T17:23:31.5816511Z # etl.sp\_fees\_ingestor
2025-08-20T17:23:31.5816703Z 
2025-08-20T17:23:31.5816835Z <a id="etl.keepa_ingestor"></a>
2025-08-20T17:23:31.5817087Z 
2025-08-20T17:23:31.5817211Z # etl.keepa\_ingestor
2025-08-20T17:23:31.5817402Z 
2025-08-20T17:23:31.5817512Z <a id="etl.db"></a>
2025-08-20T17:23:31.5817702Z 
2025-08-20T17:23:31.5817809Z # etl.db
2025-08-20T17:23:31.5817945Z 
2025-08-20T17:23:31.5818082Z <a id="etl.dialects.schemas"></a>
2025-08-20T17:23:31.5818304Z 
2025-08-20T17:23:31.5818421Z # etl.dialects.schemas
2025-08-20T17:23:31.5818615Z 
2025-08-20T17:23:31.5818774Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T17:23:31.5819054Z 
2025-08-20T17:23:31.5819195Z # etl.dialects.amazon\_reimbursements
2025-08-20T17:23:31.5819458Z 
2025-08-20T17:23:31.5819609Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T17:23:31.5819895Z 
2025-08-20T17:23:31.5820051Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T17:23:31.5820325Z 
2025-08-20T17:23:31.5820477Z <a id="etl.dialects.test_generic"></a>
2025-08-20T17:23:31.5820763Z 
2025-08-20T17:23:31.5820902Z # etl.dialects.test\_generic
2025-08-20T17:23:31.5821117Z 
2025-08-20T17:23:31.5821269Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T17:23:31.5821534Z 
2025-08-20T17:23:31.5821657Z # etl.dialects.amazon\_returns
2025-08-20T17:23:31.5821874Z 
2025-08-20T17:23:31.5822028Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T17:23:31.5822465Z 
2025-08-20T17:23:31.5822603Z # etl.dialects.amazon\_fee\_preview
2025-08-20T17:23:31.5822861Z 
2025-08-20T17:23:31.5823034Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T17:23:31.5823379Z 
2025-08-20T17:23:31.5823539Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T17:23:31.5823829Z 
2025-08-20T17:23:31.5823981Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T17:23:31.5824255Z 
2025-08-20T17:23:31.5824404Z # etl.dialects.amazon\_settlements
2025-08-20T17:23:31.5824651Z 
2025-08-20T17:23:31.5824773Z <a id="etl.dialects"></a>
2025-08-20T17:23:31.5825000Z 
2025-08-20T17:23:31.5825114Z # etl.dialects
2025-08-20T17:23:31.5825284Z 
2025-08-20T17:23:31.5825401Z <a id="ingest"></a>
2025-08-20T17:23:31.5825885Z 
2025-08-20T17:23:31.5826292Z # ingest
2025-08-20T17:23:31.5826547Z 
2025-08-20T17:23:31.5826685Z <a id="ingest.maintenance"></a>
2025-08-20T17:23:31.5826911Z 
2025-08-20T17:23:31.5827023Z # ingest.maintenance
2025-08-20T17:23:31.5827200Z 
2025-08-20T17:23:31.5827326Z <a id="ingest.copy_loader"></a>
2025-08-20T17:23:31.5827533Z 
2025-08-20T17:23:31.5827642Z # ingest.copy\_loader
2025-08-20T17:23:31.5827821Z 
2025-08-20T17:23:31.5827969Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T17:23:31.5828237Z 
2025-08-20T17:23:31.5828373Z #### copy\_df\_via\_temp
2025-08-20T17:23:31.5828593Z 
2025-08-20T17:23:31.5828705Z ```python
2025-08-20T17:23:31.5829014Z def copy_df_via_temp(engine: Engine,
2025-08-20T17:23:31.5829429Z                      df: pd.DataFrame,
2025-08-20T17:23:31.5829839Z                      target_table: str,
2025-08-20T17:23:31.5830227Z                      *,
2025-08-20T17:23:31.5830593Z                      target_schema: Optional[str] = None,
2025-08-20T17:23:31.5831036Z                      columns: Sequence[str],
2025-08-20T17:23:31.5831781Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T17:23:31.5832594Z                      analyze_after: bool = False,
2025-08-20T17:23:31.5833095Z                      connection: Any | None = None) -> int
2025-08-20T17:23:31.5833555Z ```
2025-08-20T17:23:31.5833728Z 
2025-08-20T17:23:31.5834038Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T17:23:31.5834482Z 
2025-08-20T17:23:31.5834649Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T17:23:31.5834956Z 
2025-08-20T17:23:31.5835122Z # ingest.tests.test\_smoke
2025-08-20T17:23:31.5835378Z 
2025-08-20T17:23:31.5835521Z <a id="ingest.tests"></a>
2025-08-20T17:23:31.5835764Z 
2025-08-20T17:23:31.5835901Z # ingest.tests
2025-08-20T17:23:31.5836098Z 
2025-08-20T17:23:31.5836257Z <a id="ingest.upload_router"></a>
2025-08-20T17:23:31.5836559Z 
2025-08-20T17:23:31.5836705Z # ingest.upload\_router
2025-08-20T17:23:31.5836939Z 
2025-08-20T17:23:31.5837122Z <a id="ingest.email_watcher"></a>
2025-08-20T17:23:31.5837427Z 
2025-08-20T17:23:31.5837566Z # ingest.email\_watcher
2025-08-20T17:23:31.5837793Z 
2025-08-20T17:23:31.5837968Z <a id="ingest.email_watcher.main"></a>
2025-08-20T17:23:31.5838281Z 
2025-08-20T17:23:31.5838400Z #### main
2025-08-20T17:23:31.5838577Z 
2025-08-20T17:23:31.5838699Z ```python
2025-08-20T17:23:31.5839016Z def main() -> dict[str, str]
2025-08-20T17:23:31.5839388Z ```
2025-08-20T17:23:31.5839544Z 
2025-08-20T17:23:31.5839811Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T17:23:31.5840242Z 
2025-08-20T17:23:31.5840486Z Returns {"status": "success"} when processing completes.
2025-08-20T17:23:31.5840887Z 
2025-08-20T17:23:31.5841041Z <a id="ingest.tasks"></a>
2025-08-20T17:23:31.5841285Z 
2025-08-20T17:23:31.5841409Z # ingest.tasks
2025-08-20T17:23:31.5841645Z 
2025-08-20T17:23:31.5841821Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T17:23:31.5842337Z 
2025-08-20T17:23:31.5842482Z #### task\_import\_file
2025-08-20T17:23:31.5842728Z 
2025-08-20T17:23:31.5842854Z ```python
2025-08-20T17:23:31.5843252Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T17:23:31.5843785Z def task_import_file(self: Any,
2025-08-20T17:23:31.5844183Z                      uri: str,
2025-08-20T17:23:31.5844605Z                      report_type: str | None = None,
2025-08-20T17:23:31.5845109Z                      force: bool = False) -> dict[str, Any]
2025-08-20T17:23:31.5845575Z ```
2025-08-20T17:23:31.5845737Z 
2025-08-20T17:23:31.5845999Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T17:23:31.5846449Z 
2025-08-20T17:23:31.5846609Z <a id="ingest.celery_app"></a>
2025-08-20T17:23:31.5846891Z 
2025-08-20T17:23:31.5847044Z # ingest.celery\_app
2025-08-20T17:23:31.5847273Z 
2025-08-20T17:23:31.5847432Z <a id="ingest.ingest_router"></a>
2025-08-20T17:23:31.5847725Z 
2025-08-20T17:23:31.5847866Z # ingest.ingest\_router
2025-08-20T17:23:31.5848097Z 
2025-08-20T17:23:31.5848241Z <a id="logistics_etl"></a>
2025-08-20T17:23:31.5848756Z 
2025-08-20T17:23:31.5848894Z # logistics\_etl
2025-08-20T17:23:31.5849102Z 
2025-08-20T17:23:31.5849258Z Daily logistics ETL job.
2025-08-20T17:23:31.5849501Z 
2025-08-20T17:23:31.5849659Z <a id="logistics_etl.__main__"></a>
2025-08-20T17:23:31.5849962Z 
2025-08-20T17:23:31.5850107Z # logistics\_etl.\_\_main\_\_
2025-08-20T17:23:31.5850369Z 
2025-08-20T17:23:31.5850519Z <a id="logistics_etl.dsn"></a>
2025-08-20T17:23:31.5850795Z 
2025-08-20T17:23:31.5850930Z # logistics\_etl.dsn
2025-08-20T17:23:31.5851146Z 
2025-08-20T17:23:31.5851375Z Local DSN builder to avoid cross-service dependency.
2025-08-20T17:23:31.5851749Z 
2025-08-20T17:23:31.5851924Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T17:23:31.5852442Z 
2025-08-20T17:23:31.5852574Z #### build\_dsn
2025-08-20T17:23:31.5852767Z 
2025-08-20T17:23:31.5852887Z ```python
2025-08-20T17:23:31.5853229Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:23:31.5853643Z ```
2025-08-20T17:23:31.5853799Z 
2025-08-20T17:23:31.5854314Z Return a Postgres DSN assembled from environment variables.
2025-08-20T17:23:31.5854742Z 
2025-08-20T17:23:31.5855196Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T17:23:31.5855959Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T17:23:31.5856624Z error when any required variable is missing.
2025-08-20T17:23:31.5856975Z 
2025-08-20T17:23:31.5857158Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T17:23:31.5857504Z 
2025-08-20T17:23:31.5857672Z # logistics\_etl.tests.conftest
2025-08-20T17:23:31.5857956Z 
2025-08-20T17:23:31.5858172Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T17:23:31.5858530Z 
2025-08-20T17:23:31.5858701Z # logistics\_etl.tests.test\_repository
2025-08-20T17:23:31.5859019Z 
2025-08-20T17:23:31.5859202Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T17:23:31.5859532Z 
2025-08-20T17:23:31.5859691Z # logistics\_etl.tests.test\_cron
2025-08-20T17:23:31.5859997Z 
2025-08-20T17:23:31.5860191Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T17:23:31.5860550Z 
2025-08-20T17:23:31.5860722Z # logistics\_etl.tests.test\_imports
2025-08-20T17:23:31.5861022Z 
2025-08-20T17:23:31.5861206Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T17:23:31.5861551Z 
2025-08-20T17:23:31.5861708Z # logistics\_etl.tests.test\_smoke
2025-08-20T17:23:31.5862000Z 
2025-08-20T17:23:31.5862501Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T17:23:31.5862861Z 
2025-08-20T17:23:31.5863025Z # logistics\_etl.tests.test\_client
2025-08-20T17:23:31.5863319Z 
2025-08-20T17:23:31.5863485Z <a id="logistics_etl.tests"></a>
2025-08-20T17:23:31.5863763Z 
2025-08-20T17:23:31.5863903Z # logistics\_etl.tests
2025-08-20T17:23:31.5864162Z 
2025-08-20T17:23:31.5864315Z <a id="logistics_etl.flow"></a>
2025-08-20T17:23:31.5864584Z 
2025-08-20T17:23:31.5864728Z # logistics\_etl.flow
2025-08-20T17:23:31.5864948Z 
2025-08-20T17:23:31.5865102Z <a id="logistics_etl.client"></a>
2025-08-20T17:23:31.5865383Z 
2025-08-20T17:23:31.5935794Z # logistics\_etl.client
2025-08-20T17:23:31.5936197Z 
2025-08-20T17:23:31.5936336Z <a id="logistics_etl.cron"></a>
2025-08-20T17:23:31.5936572Z 
2025-08-20T17:23:31.5936698Z # logistics\_etl.cron
2025-08-20T17:23:31.5936893Z 
2025-08-20T17:23:31.5937033Z <a id="logistics_etl.db"></a>
2025-08-20T17:23:31.5937264Z 
2025-08-20T17:23:31.5937374Z # logistics\_etl.db
2025-08-20T17:23:31.5937544Z 
2025-08-20T17:23:31.5937682Z <a id="logistics_etl.repository"></a>
2025-08-20T17:23:31.5937942Z 
2025-08-20T17:23:31.5938066Z # logistics\_etl.repository
2025-08-20T17:23:31.5938275Z 
2025-08-20T17:23:31.5938399Z <a id="alert_bot"></a>
2025-08-20T17:23:31.5938587Z 
2025-08-20T17:23:31.5938695Z # alert\_bot
2025-08-20T17:23:31.5938853Z 
2025-08-20T17:23:31.5939007Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T17:23:31.5939292Z 
2025-08-20T17:23:31.5939433Z # alert\_bot.tests.test\_smoke
2025-08-20T17:23:31.5939675Z 
2025-08-20T17:23:31.5939809Z <a id="alert_bot.tests"></a>
2025-08-20T17:23:31.5940039Z 
2025-08-20T17:23:31.5940772Z # alert\_bot.tests
2025-08-20T17:23:31.5940970Z 
2025-08-20T17:23:31.5941098Z <a id="alert_bot.alert_bot"></a>
2025-08-20T17:23:31.5941341Z 
2025-08-20T17:23:31.5941468Z # alert\_bot.alert\_bot
2025-08-20T17:23:31.5941663Z 
2025-08-20T17:23:31.5941786Z <a id="alert_bot.rules"></a>
2025-08-20T17:23:31.5942007Z 
2025-08-20T17:23:31.5942373Z # alert\_bot.rules
2025-08-20T17:23:31.5942568Z 
2025-08-20T17:23:31.5942697Z <a id="common"></a>
2025-08-20T17:23:31.5942877Z 
2025-08-20T17:23:31.5942982Z # common
2025-08-20T17:23:31.5943122Z 
2025-08-20T17:23:31.5943252Z <a id="common.dsn"></a>
2025-08-20T17:23:31.5943447Z 
2025-08-20T17:23:31.5943547Z # common.dsn
2025-08-20T17:23:31.5943713Z 
2025-08-20T17:23:31.5943847Z <a id="common.dsn.build_dsn"></a>
2025-08-20T17:23:31.5944087Z 
2025-08-20T17:23:31.5944199Z #### build\_dsn
2025-08-20T17:23:31.5944371Z 
2025-08-20T17:23:31.5944474Z ```python
2025-08-20T17:23:31.5944772Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:23:31.5945129Z ```
2025-08-20T17:23:31.5945604Z 
2025-08-20T17:23:31.5945811Z Return a Postgres DSN, validating required variables.
2025-08-20T17:23:31.5946140Z 
2025-08-20T17:23:31.5946491Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T17:23:31.5947177Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T17:23:31.5947816Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T17:23:31.5948317Z missing.
2025-08-20T17:23:31.5948462Z 
2025-08-20T17:23:31.5948608Z <a id="common.models_vendor"></a>
2025-08-20T17:23:31.5948861Z 
2025-08-20T17:23:31.5948984Z # common.models\_vendor
2025-08-20T17:23:31.5949196Z 
2025-08-20T17:23:31.5949340Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T17:23:31.5949608Z 
2025-08-20T17:23:31.5949719Z ## Vendor Objects
2025-08-20T17:23:31.5949894Z 
2025-08-20T17:23:31.5949996Z ```python
2025-08-20T17:23:31.5950255Z class Vendor(Base)
2025-08-20T17:23:31.5950520Z ```
2025-08-20T17:23:31.5950668Z 
2025-08-20T17:23:31.5950818Z Vendor of inventory items.
2025-08-20T17:23:31.5951038Z 
2025-08-20T17:23:31.5951198Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T17:23:31.5951497Z 
2025-08-20T17:23:31.5951616Z ## VendorPrice Objects
2025-08-20T17:23:31.5951817Z 
2025-08-20T17:23:31.5951924Z ```python
2025-08-20T17:23:31.5952371Z class VendorPrice(Base)
2025-08-20T17:23:31.5952667Z ```
2025-08-20T17:23:31.5952801Z 
2025-08-20T17:23:31.5952963Z Association table linking vendors to pricing.
2025-08-20T17:23:31.5953254Z 
2025-08-20T17:23:31.5953386Z <a id="common.db_url"></a>
2025-08-20T17:23:31.5953590Z 
2025-08-20T17:23:31.5953702Z # common.db\_url
2025-08-20T17:23:31.5953887Z 
2025-08-20T17:23:31.5954021Z <a id="common.db_url.build_url"></a>
2025-08-20T17:23:31.5954287Z 
2025-08-20T17:23:31.5954388Z #### build\_url
2025-08-20T17:23:31.5954552Z 
2025-08-20T17:23:31.5954654Z ```python
2025-08-20T17:23:31.5954936Z def build_url(async_: bool = True) -> str
2025-08-20T17:23:31.5955285Z ```
2025-08-20T17:23:31.5955439Z 
2025-08-20T17:23:31.5955631Z Return Postgres DSN from environment variables.
2025-08-20T17:23:31.5955938Z 
2025-08-20T17:23:31.5956070Z <a id="common.keepa"></a>
2025-08-20T17:23:31.5956298Z 
2025-08-20T17:23:31.5956419Z # common.keepa
2025-08-20T17:23:31.5956580Z 
2025-08-20T17:23:31.5956696Z <a id="common.llm"></a>
2025-08-20T17:23:31.5956897Z 
2025-08-20T17:23:31.5956998Z # common.llm
2025-08-20T17:23:31.5957151Z 
2025-08-20T17:23:31.5957286Z <a id="common.settings"></a>
2025-08-20T17:23:31.5957505Z 
2025-08-20T17:23:31.5957613Z # common.settings
2025-08-20T17:23:31.5957784Z 
2025-08-20T17:23:31.5957901Z <a id="common.db"></a>
2025-08-20T17:23:31.5958081Z 
2025-08-20T17:23:31.5958183Z # common.db
2025-08-20T17:23:31.5958334Z 
2025-08-20T17:23:31.5958476Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T17:23:31.5958744Z 
2025-08-20T17:23:31.5958870Z #### build\_sqlalchemy\_url
2025-08-20T17:23:31.5959080Z 
2025-08-20T17:23:31.5959181Z ```python
2025-08-20T17:23:31.5959450Z def build_sqlalchemy_url() -> str
2025-08-20T17:23:31.5960249Z ```
2025-08-20T17:23:31.5960392Z 
2025-08-20T17:23:31.5960551Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T17:23:31.5960834Z 
2025-08-20T17:23:31.5960978Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T17:23:31.5961249Z 
2025-08-20T17:23:31.5961368Z #### build\_asyncpg\_dsn
2025-08-20T17:23:31.5961568Z 
2025-08-20T17:23:31.5961676Z ```python
2025-08-20T17:23:31.5961946Z def build_asyncpg_dsn() -> str
2025-08-20T17:23:31.5962447Z ```
2025-08-20T17:23:31.5962584Z 
2025-08-20T17:23:31.5962791Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T17:23:31.5963137Z 
2025-08-20T17:23:31.5963267Z <a id="common.db.refresh_mvs"></a>
2025-08-20T17:23:31.5963504Z 
2025-08-20T17:23:31.5963618Z #### refresh\_mvs
2025-08-20T17:23:31.5963779Z 
2025-08-20T17:23:31.5963880Z ```python
2025-08-20T17:23:31.5964194Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T17:23:31.5964586Z ```
2025-08-20T17:23:31.5964726Z 
2025-08-20T17:23:31.5965189Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T17:23:31.5965524Z 
2025-08-20T17:23:31.5965645Z <a id="common.config"></a>
2025-08-20T17:23:31.5965854Z 
2025-08-20T17:23:31.5965957Z # common.config
2025-08-20T17:23:31.5966120Z 
2025-08-20T17:23:31.5966239Z <a id="common.base"></a>
2025-08-20T17:23:31.5966432Z 
2025-08-20T17:23:31.5966534Z # common.base
2025-08-20T17:23:31.5966687Z 
2025-08-20T17:23:31.5966819Z <a id="common.base.Base"></a>
2025-08-20T17:23:31.5967030Z 
2025-08-20T17:23:31.5967135Z ## Base Objects
2025-08-20T17:23:31.5967292Z 
2025-08-20T17:23:31.5967391Z ```python
2025-08-20T17:23:31.5967651Z class Base(DeclarativeBase)
2025-08-20T17:23:31.5967956Z ```
2025-08-20T17:23:31.5968085Z 
2025-08-20T17:23:31.5968223Z Base class for SQLAlchemy models.
2025-08-20T17:23:31.5968461Z 
2025-08-20T17:23:31.5968574Z <a id="repricer"></a>
2025-08-20T17:23:31.5968757Z 
2025-08-20T17:23:31.5968867Z # repricer
2025-08-20T17:23:31.5969014Z 
2025-08-20T17:23:31.5969148Z <a id="repricer.app.schemas"></a>
2025-08-20T17:23:31.5969410Z 
2025-08-20T17:23:31.5969533Z # repricer.app.schemas
2025-08-20T17:23:31.5969726Z 
2025-08-20T17:23:31.5969863Z <a id="repricer.app.deps"></a>
2025-08-20T17:23:31.5970082Z 
2025-08-20T17:23:31.5970198Z # repricer.app.deps
2025-08-20T17:23:31.5970376Z 
2025-08-20T17:23:31.5970547Z Placeholder module for Keepa / SP-API clients.
2025-08-20T17:23:31.5970833Z 
2025-08-20T17:23:31.5970967Z <a id="repricer.app.logic"></a>
2025-08-20T17:23:31.5971199Z 
2025-08-20T17:23:31.5971315Z # repricer.app.logic
2025-08-20T17:23:31.5971493Z 
2025-08-20T17:23:31.5971651Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T17:23:31.5971926Z 
2025-08-20T17:23:31.5972030Z #### MIN\_MARGIN
2025-08-20T17:23:31.5972335Z 
2025-08-20T17:23:31.5972442Z 15 % ROI
2025-08-20T17:23:31.5972576Z 
2025-08-20T17:23:31.5972734Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T17:23:31.5973026Z 
2025-08-20T17:23:31.5973142Z #### compute\_price
2025-08-20T17:23:31.5973314Z 
2025-08-20T17:23:31.5973429Z ```python
2025-08-20T17:23:31.5973815Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T17:23:31.5974305Z ```
2025-08-20T17:23:31.5974438Z 
2025-08-20T17:23:31.5974609Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T17:23:31.5975056Z Replace with real competitive logic later.
2025-08-20T17:23:31.5975338Z 
2025-08-20T17:23:31.5975470Z <a id="repricer.app.main"></a>
2025-08-20T17:23:31.5975703Z 
2025-08-20T17:23:31.5975815Z # repricer.app.main
2025-08-20T17:23:31.5975987Z 
2025-08-20T17:23:31.5976108Z <a id="repricer.app"></a>
2025-08-20T17:23:31.5976313Z 
2025-08-20T17:23:31.5976419Z # repricer.app
2025-08-20T17:23:31.5976578Z 
2025-08-20T17:23:31.5976729Z <a id="repricer.tests.test_imports"></a>
2025-08-20T17:23:31.5976988Z 
2025-08-20T17:23:31.5977121Z # repricer.tests.test\_imports
2025-08-20T17:23:31.5977349Z 
2025-08-20T17:23:31.5977489Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T17:23:31.5977743Z 
2025-08-20T17:23:31.5977869Z # repricer.tests.test\_smoke
2025-08-20T17:23:31.5978301Z 
2025-08-20T17:23:31.5978420Z <a id="repricer.tests"></a>
2025-08-20T17:23:31.5978626Z 
2025-08-20T17:23:31.5978743Z # repricer.tests
2025-08-20T17:23:31.5978905Z 
2025-08-20T17:23:31.5979007Z <a id="db"></a>
2025-08-20T17:23:31.5979177Z 
2025-08-20T17:23:31.5979277Z # db
2025-08-20T17:23:31.5979407Z 
2025-08-20T17:23:31.5979529Z <a id="db.utils.views"></a>
2025-08-20T17:23:31.5979739Z 
2025-08-20T17:23:31.5979842Z # db.utils.views
2025-08-20T17:23:31.5980001Z 
2025-08-20T17:23:31.5980153Z <a id="db.utils.views.replace_view"></a>
2025-08-20T17:23:31.5980421Z 
2025-08-20T17:23:31.5980527Z #### replace\_view
2025-08-20T17:23:31.5980694Z 
2025-08-20T17:23:31.5980802Z ```python
2025-08-20T17:23:31.5981100Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T17:23:31.5981487Z ```
2025-08-20T17:23:31.5981620Z 
2025-08-20T17:23:31.5981766Z Drop and recreate a SQL view atomically.
2025-08-20T17:23:31.5982027Z 
2025-08-20T17:23:31.5982299Z <a id="db.utils"></a>
2025-08-20T17:23:31.5982791Z 
2025-08-20T17:23:31.5982900Z # db.utils
2025-08-20T17:23:31.5983034Z 
2025-08-20T17:23:31.5983163Z <a id="price_importer"></a>
2025-08-20T17:23:31.5983379Z 
2025-08-20T17:23:31.5983485Z # price\_importer
2025-08-20T17:23:31.5983645Z 
2025-08-20T17:23:31.5983807Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T17:23:31.5984112Z 
2025-08-20T17:23:31.5984260Z # price\_importer.services\_common.dsn
2025-08-20T17:23:31.5984513Z 
2025-08-20T17:23:31.5984786Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T17:23:31.5985102Z 
2025-08-20T17:23:31.5985213Z #### build\_dsn
2025-08-20T17:23:31.5985374Z 
2025-08-20T17:23:31.5985472Z ```python
2025-08-20T17:23:31.5985752Z def build_dsn(sync: bool = True) -> str
2025-08-20T17:23:31.5986093Z ```
2025-08-20T17:23:31.5986227Z 
2025-08-20T17:23:31.5986333Z Return safe DSN.
2025-08-20T17:23:31.5986499Z 
2025-08-20T17:23:31.5986790Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T17:23:31.5987362Z Falls back to individual PG_* variables.
2025-08-20T17:23:31.5988100Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T17:23:31.5988433Z 
2025-08-20T17:23:31.5988634Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T17:23:31.5988968Z 
2025-08-20T17:23:31.5989147Z # price\_importer.services\_common.models\_vendor
2025-08-20T17:23:31.5989448Z 
2025-08-20T17:23:31.5989627Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T17:23:31.5989919Z 
2025-08-20T17:23:31.5990070Z # price\_importer.services\_common.db\_url
2025-08-20T17:23:31.5990335Z 
2025-08-20T17:23:31.5990552Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T17:23:31.5990893Z 
2025-08-20T17:23:31.5990998Z #### build\_url
2025-08-20T17:23:31.5991164Z 
2025-08-20T17:23:31.5991266Z ```python
2025-08-20T17:23:31.5991539Z def build_url(async_: bool = True) -> str
2025-08-20T17:23:31.5991886Z ```
2025-08-20T17:23:31.5992015Z 
2025-08-20T17:23:31.5992389Z Return Postgres DSN from environment variables.
2025-08-20T17:23:31.5992708Z 
2025-08-20T17:23:31.5992876Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T17:23:31.5993167Z 
2025-08-20T17:23:31.5993315Z # price\_importer.services\_common.keepa
2025-08-20T17:23:31.5993575Z 
2025-08-20T17:23:31.5993729Z <a id="price_importer.services_common.llm"></a>
2025-08-20T17:23:31.5994013Z 
2025-08-20T17:23:31.5994155Z # price\_importer.services\_common.llm
2025-08-20T17:23:31.5994409Z 
2025-08-20T17:23:31.5994593Z <a id="price_importer.services_common.settings"></a>
2025-08-20T17:23:31.5994894Z 
2025-08-20T17:23:31.5995043Z # price\_importer.services\_common.settings
2025-08-20T17:23:31.5995318Z 
2025-08-20T17:23:31.5995480Z <a id="price_importer.services_common.db"></a>
2025-08-20T17:23:31.5995758Z 
2025-08-20T17:23:31.5995900Z # price\_importer.services\_common.db
2025-08-20T17:23:31.5996162Z 
2025-08-20T17:23:31.5996407Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T17:23:31.5996767Z 
2025-08-20T17:23:31.5997093Z #### build\_sqlalchemy\_url
2025-08-20T17:23:31.5997305Z 
2025-08-20T17:23:31.5997403Z ```python
2025-08-20T17:23:31.5997688Z def build_sqlalchemy_url() -> str
2025-08-20T17:23:31.5998013Z ```
2025-08-20T17:23:31.5998151Z 
2025-08-20T17:23:31.5998301Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T17:23:31.5998574Z 
2025-08-20T17:23:31.5998817Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T17:23:31.5999175Z 
2025-08-20T17:23:31.5999289Z #### build\_asyncpg\_dsn
2025-08-20T17:23:31.5999480Z 
2025-08-20T17:23:31.5999587Z ```python
2025-08-20T17:23:31.5999849Z def build_asyncpg_dsn() -> str
2025-08-20T17:23:31.6000160Z ```
2025-08-20T17:23:31.6000290Z 
2025-08-20T17:23:31.6000490Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T17:23:31.6000822Z 
2025-08-20T17:23:31.6001025Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T17:23:31.6001343Z 
2025-08-20T17:23:31.6001457Z #### refresh\_mvs
2025-08-20T17:23:31.6001811Z 
2025-08-20T17:23:31.6001910Z ```python
2025-08-20T17:23:31.6002379Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T17:23:31.6002774Z ```
2025-08-20T17:23:31.6002918Z 
2025-08-20T17:23:31.6003132Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T17:23:31.6003463Z 
2025-08-20T17:23:31.6003626Z <a id="price_importer.services_common"></a>
2025-08-20T17:23:31.6003903Z 
2025-08-20T17:23:31.6004037Z # price\_importer.services\_common
2025-08-20T17:23:31.6004273Z 
2025-08-20T17:23:31.6004443Z <a id="price_importer.services_common.base"></a>
2025-08-20T17:23:31.6004726Z 
2025-08-20T17:23:31.6004866Z # price\_importer.services\_common.base
2025-08-20T17:23:31.6005126Z 
2025-08-20T17:23:31.6005266Z <a id="price_importer.normaliser"></a>
2025-08-20T17:23:31.6005525Z 
2025-08-20T17:23:31.6005663Z # price\_importer.normaliser
2025-08-20T17:23:31.6005891Z 
2025-08-20T17:23:31.6006061Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T17:23:31.6006362Z 
2025-08-20T17:23:31.6006532Z # price\_importer.common.models\_vendor
2025-08-20T17:23:31.6006796Z 
2025-08-20T17:23:31.6006942Z <a id="price_importer.common.db_url"></a>
2025-08-20T17:23:31.6007217Z 
2025-08-20T17:23:31.6007350Z # price\_importer.common.db\_url
2025-08-20T17:23:31.6007585Z 
2025-08-20T17:23:31.6007755Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T17:23:31.6008055Z 
2025-08-20T17:23:31.6008180Z #### make\_dsn
2025-08-20T17:23:31.6008336Z 
2025-08-20T17:23:31.6008446Z ```python
2025-08-20T17:23:31.6008723Z def make_dsn(async_: bool = False) -> str
2025-08-20T17:23:31.6009078Z ```
2025-08-20T17:23:31.6009211Z 
2025-08-20T17:23:31.6009343Z Return DSN using shared builder.
2025-08-20T17:23:31.6009585Z 
2025-08-20T17:23:31.6009756Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T17:23:31.6010053Z 
2025-08-20T17:23:31.6010167Z #### build\_url
2025-08-20T17:23:31.6010325Z 
2025-08-20T17:23:31.6010425Z ```python
2025-08-20T17:23:31.6010707Z def build_url(async_: bool = False) -> str
2025-08-20T17:23:31.6011066Z ```
2025-08-20T17:23:31.6011201Z 
2025-08-20T17:23:31.6011387Z Return Postgres DSN built from environment variables.
2025-08-20T17:23:31.6011700Z 
2025-08-20T17:23:31.6011832Z <a id="price_importer.common"></a>
2025-08-20T17:23:31.6012074Z 
2025-08-20T17:23:31.6012356Z # price\_importer.common
2025-08-20T17:23:31.6012560Z 
2025-08-20T17:23:31.6012711Z <a id="price_importer.common.base"></a>
2025-08-20T17:23:31.6012973Z 
2025-08-20T17:23:31.6013102Z # price\_importer.common.base
2025-08-20T17:23:31.6013322Z 
2025-08-20T17:23:31.6013472Z <a id="price_importer.tests.conftest"></a>
2025-08-20T17:23:31.6013750Z 
2025-08-20T17:23:31.6013879Z # price\_importer.tests.conftest
2025-08-20T17:23:31.6014125Z 
2025-08-20T17:23:31.6014281Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T17:23:31.6014615Z 
2025-08-20T17:23:31.6014764Z # price\_importer.tests.test\_reader
2025-08-20T17:23:31.6015009Z 
2025-08-20T17:23:31.6015166Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T17:23:31.6015664Z 
2025-08-20T17:23:31.6015807Z # price\_importer.tests.test\_imports
2025-08-20T17:23:31.6016061Z 
2025-08-20T17:23:31.6016219Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T17:23:31.6016489Z 
2025-08-20T17:23:31.6016623Z # price\_importer.tests.test\_smoke
2025-08-20T17:23:31.6016873Z 
2025-08-20T17:23:31.6017052Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T17:23:31.6017354Z 
2025-08-20T17:23:31.6017501Z # price\_importer.tests.test\_normaliser
2025-08-20T17:23:31.6017785Z 
2025-08-20T17:23:31.6017918Z <a id="price_importer.tests"></a>
2025-08-20T17:23:31.6018156Z 
2025-08-20T17:23:31.6018274Z # price\_importer.tests
2025-08-20T17:23:31.6018470Z 
2025-08-20T17:23:31.6018603Z <a id="price_importer.reader"></a>
2025-08-20T17:23:31.6018849Z 
2025-08-20T17:23:31.6018985Z # price\_importer.reader
2025-08-20T17:23:31.6019178Z 
2025-08-20T17:23:31.6019316Z <a id="price_importer.repository"></a>
2025-08-20T17:23:31.6019572Z 
2025-08-20T17:23:31.6019701Z # price\_importer.repository
2025-08-20T17:23:31.6020147Z 
2025-08-20T17:23:31.6020277Z <a id="price_importer.import"></a>
2025-08-20T17:23:31.6020512Z 
2025-08-20T17:23:31.6020626Z # price\_importer.import
2025-08-20T17:23:31.6020814Z 
2025-08-20T17:23:31.6020930Z <a id="fees_h10"></a>
2025-08-20T17:23:31.6021102Z 
2025-08-20T17:23:31.6021205Z # fees\_h10
2025-08-20T17:23:31.6021352Z 
2025-08-20T17:23:31.6021466Z <a id="fees_h10.worker"></a>
2025-08-20T17:23:31.6021668Z 
2025-08-20T17:23:31.6021773Z # fees\_h10.worker
2025-08-20T17:23:31.6021939Z 
2025-08-20T17:23:31.6022091Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T17:23:31.6022531Z 
2025-08-20T17:23:31.6022651Z #### list\_active\_asins
2025-08-20T17:23:31.6022844Z 
2025-08-20T17:23:31.6022942Z ```python
2025-08-20T17:23:31.6023215Z def list_active_asins() -> list[str]
2025-08-20T17:23:31.6023536Z ```
2025-08-20T17:23:31.6023672Z 
2025-08-20T17:23:31.6023843Z Return known ASINs or an empty list if unavailable.
2025-08-20T17:23:31.6024133Z 
2025-08-20T17:23:31.6024277Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T17:23:31.6024524Z 
2025-08-20T17:23:31.6024648Z # fees\_h10.tests.test\_smoke
2025-08-20T17:23:31.6024861Z 
2025-08-20T17:23:31.6024984Z <a id="fees_h10.tests"></a>
2025-08-20T17:23:31.6025183Z 
2025-08-20T17:23:31.6025283Z # fees\_h10.tests
2025-08-20T17:23:31.6025447Z 
2025-08-20T17:23:31.6025563Z <a id="fees_h10.client"></a>
2025-08-20T17:23:31.6025761Z 
2025-08-20T17:23:31.6025867Z # fees\_h10.client
2025-08-20T17:23:31.6026041Z 
2025-08-20T17:23:31.6026168Z <a id="fees_h10.repository"></a>
2025-08-20T17:23:31.6026386Z 
2025-08-20T17:23:31.6026510Z # fees\_h10.repository
2025-08-20T17:23:31.6026689Z 
2025-08-20T17:23:31.6026845Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T17:23:31.6027138Z 
2025-08-20T17:23:31.6027251Z #### upsert\_fees\_raw
2025-08-20T17:23:31.6027430Z 
2025-08-20T17:23:31.6027541Z ```python
2025-08-20T17:23:31.6027813Z def upsert_fees_raw(engine: Engine,
2025-08-20T17:23:31.6028198Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T17:23:31.6028579Z                     *,
2025-08-20T17:23:31.6028935Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T17:23:31.6029349Z ```
2025-08-20T17:23:31.6029482Z 
2025-08-20T17:23:31.6029618Z Idempotent upsert for fees.
2025-08-20T17:23:31.6029833Z 
2025-08-20T17:23:31.6030058Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T17:23:31.6030629Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T17:23:31.6031115Z Only updates when one of the mutable fields changes.
2025-08-20T17:23:31.6031440Z 
2025-08-20T17:23:31.6031558Z <a id="emailer"></a>
2025-08-20T17:23:31.6031739Z 
2025-08-20T17:23:31.6031847Z # emailer
2025-08-20T17:23:31.6031987Z 
2025-08-20T17:23:31.6032325Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T17:23:31.6032633Z 
2025-08-20T17:23:31.6032778Z # emailer.tests.test\_import\_emailer
2025-08-20T17:23:31.6033026Z 
2025-08-20T17:23:31.6033160Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T17:23:31.6033621Z 
2025-08-20T17:23:31.6033750Z # emailer.tests.test\_smoke
2025-08-20T17:23:31.6033963Z 
2025-08-20T17:23:31.6034096Z <a id="emailer.tests"></a>
2025-08-20T17:23:31.6034301Z 
2025-08-20T17:23:31.6034410Z # emailer.tests
2025-08-20T17:23:31.6034578Z 
2025-08-20T17:23:31.6034710Z <a id="emailer.generate_body"></a>
2025-08-20T17:23:31.6034955Z 
2025-08-20T17:23:31.6035073Z # emailer.generate\_body
2025-08-20T17:23:31.6035276Z 
2025-08-20T17:23:31.6035391Z <a id="llm_server"></a>
2025-08-20T17:23:31.6035579Z 
2025-08-20T17:23:31.6035692Z # llm\_server
2025-08-20T17:23:31.6035847Z 
2025-08-20T17:23:31.6035967Z <a id="llm_server.app"></a>
2025-08-20T17:23:31.6036179Z 
2025-08-20T17:23:31.6036302Z # llm\_server.app
2025-08-20T17:23:31.6036476Z 
