2025-08-16T23:25:34.4234660Z ##[group]Run pydoc-markdown
2025-08-16T23:25:34.4235137Z [36;1mpydoc-markdown[0m
2025-08-16T23:25:34.4281536Z shell: /usr/bin/bash -e {0}
2025-08-16T23:25:34.4281933Z env:
2025-08-16T23:25:34.4282341Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:25:34.4283062Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T23:25:34.4283758Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:25:34.4284371Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:25:34.4284991Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:25:34.4285610Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T23:25:34.4286125Z ##[endgroup]
2025-08-16T23:25:34.9675939Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T23:25:34.9677367Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T23:25:34.9678074Z In "pydoc-markdown.yml"
2025-08-16T23:25:34.9678671Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T23:25:34.9679748Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T23:25:34.9681127Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T23:25:34.9681883Z 
2025-08-16T23:25:35.1755246Z <a id="__init__"></a>
2025-08-16T23:25:35.1755805Z 
2025-08-16T23:25:35.1756119Z # \_\_init\_\_
2025-08-16T23:25:35.1756568Z 
2025-08-16T23:25:35.1756904Z <a id="api"></a>
2025-08-16T23:25:35.1757441Z 
2025-08-16T23:25:35.1757764Z # api
2025-08-16T23:25:35.1758209Z 
2025-08-16T23:25:35.1758601Z <a id="api.tests.test_llm"></a>
2025-08-16T23:25:35.1759263Z 
2025-08-16T23:25:35.1759564Z # api.tests.test\_llm
2025-08-16T23:25:35.1760089Z 
2025-08-16T23:25:35.1760474Z <a id="api.tests.test_imports"></a>
2025-08-16T23:25:35.1761454Z 
2025-08-16T23:25:35.1761741Z # api.tests.test\_imports
2025-08-16T23:25:35.1762235Z 
2025-08-16T23:25:35.1762552Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T23:25:35.1763176Z 
2025-08-16T23:25:35.1763493Z # api.tests.test\_entrypoint
2025-08-16T23:25:35.1764056Z 
2025-08-16T23:25:35.1764322Z <a id="api.tests.test_health"></a>
2025-08-16T23:25:35.1764876Z 
2025-08-16T23:25:35.1765141Z # api.tests.test\_health
2025-08-16T23:25:35.1765913Z 
2025-08-16T23:25:35.1766209Z <a id="api.migrations.env"></a>
2025-08-16T23:25:35.1766740Z 
2025-08-16T23:25:35.1767002Z # api.migrations.env
2025-08-16T23:25:35.1767411Z 
2025-08-16T23:25:35.1767830Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T23:25:35.1768559Z 
2025-08-16T23:25:35.1768924Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T23:25:35.1769593Z 
2025-08-16T23:25:35.1769975Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T23:25:35.1770843Z 
2025-08-16T23:25:35.1771179Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T23:25:35.1771830Z 
2025-08-16T23:25:35.1772292Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T23:25:35.1772726Z 
2025-08-16T23:25:35.1772969Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T23:25:35.1773617Z 
2025-08-16T23:25:35.1773835Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T23:25:35.1774215Z 
2025-08-16T23:25:35.1774405Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T23:25:35.1774742Z 
2025-08-16T23:25:35.1774949Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T23:25:35.1775321Z 
2025-08-16T23:25:35.1775499Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T23:25:35.1775827Z 
2025-08-16T23:25:35.1776053Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T23:25:35.1776425Z 
2025-08-16T23:25:35.1776614Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T23:25:35.1776965Z 
2025-08-16T23:25:35.1777166Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T23:25:35.1777521Z 
2025-08-16T23:25:35.1777707Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T23:25:35.1778049Z 
2025-08-16T23:25:35.1778263Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T23:25:35.1778842Z 
2025-08-16T23:25:35.1779031Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T23:25:35.1779369Z 
2025-08-16T23:25:35.1779587Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T23:25:35.1779963Z 
2025-08-16T23:25:35.1780150Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T23:25:35.1780490Z 
2025-08-16T23:25:35.1780892Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T23:25:35.1781271Z 
2025-08-16T23:25:35.1781436Z # api.migrations.versions.0001\_baseline
2025-08-16T23:25:35.1781730Z 
2025-08-16T23:25:35.1781873Z <a id="api.migrations.versions"></a>
2025-08-16T23:25:35.1782130Z 
2025-08-16T23:25:35.1782256Z # api.migrations.versions
2025-08-16T23:25:35.1782470Z 
2025-08-16T23:25:35.1782594Z <a id="api.migrations"></a>
2025-08-16T23:25:35.1782805Z 
2025-08-16T23:25:35.1782913Z # api.migrations
2025-08-16T23:25:35.1783090Z 
2025-08-16T23:25:35.1783197Z <a id="api.db"></a>
2025-08-16T23:25:35.1783368Z 
2025-08-16T23:25:35.1783489Z # api.db
2025-08-16T23:25:35.1783627Z 
2025-08-16T23:25:35.1783754Z <a id="api.routes.stats"></a>
2025-08-16T23:25:35.1783984Z 
2025-08-16T23:25:35.1784093Z # api.routes.stats
2025-08-16T23:25:35.1784261Z 
2025-08-16T23:25:35.1784393Z <a id="api.routes.stats.kpi"></a>
2025-08-16T23:25:35.1784641Z 
2025-08-16T23:25:35.1784741Z #### kpi
2025-08-16T23:25:35.1784876Z 
2025-08-16T23:25:35.1784986Z ```python
2025-08-16T23:25:35.1785252Z @router.get("/stats/kpi")
2025-08-16T23:25:35.1785605Z def kpi() -> List[Dict[str, int]]
2025-08-16T23:25:35.1785933Z ```
2025-08-16T23:25:35.1786071Z 
2025-08-16T23:25:35.1786193Z Return KPI metrics (mock).
2025-08-16T23:25:35.1786401Z 
2025-08-16T23:25:35.1786554Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T23:25:35.1786846Z 
2025-08-16T23:25:35.1786953Z #### roi\_by\_vendor
2025-08-16T23:25:35.1787127Z 
2025-08-16T23:25:35.1787232Z ```python
2025-08-16T23:25:35.1787504Z @router.get("/stats/roi_by_vendor")
2025-08-16T23:25:35.1787903Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T23:25:35.1788277Z ```
2025-08-16T23:25:35.1788409Z 
2025-08-16T23:25:35.1788534Z Return ROI percent by vendor.
2025-08-16T23:25:35.1788757Z 
2025-08-16T23:25:35.1788897Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T23:25:35.1789171Z 
2025-08-16T23:25:35.1789275Z #### roi\_trend
2025-08-16T23:25:35.1789432Z 
2025-08-16T23:25:35.1789535Z ```python
2025-08-16T23:25:35.1789794Z @router.get("/stats/roi_trend")
2025-08-16T23:25:35.1790173Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T23:25:35.1790547Z ```
2025-08-16T23:25:35.1790841Z 
2025-08-16T23:25:35.1790958Z Return 30-day ROI trend.
2025-08-16T23:25:35.1791159Z 
2025-08-16T23:25:35.1791278Z <a id="api.routes.roi"></a>
2025-08-16T23:25:35.1791494Z 
2025-08-16T23:25:35.1791602Z # api.routes.roi
2025-08-16T23:25:35.1791789Z 
2025-08-16T23:25:35.1791918Z <a id="api.routes.health"></a>
2025-08-16T23:25:35.1792188Z 
2025-08-16T23:25:35.1792302Z # api.routes.health
2025-08-16T23:25:35.1792491Z 
2025-08-16T23:25:35.1792641Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T23:25:35.1793049Z 
2025-08-16T23:25:35.1793157Z #### MAX\_SKEW
2025-08-16T23:25:35.1793313Z 
2025-08-16T23:25:35.1793410Z seconds
2025-08-16T23:25:35.1793551Z 
2025-08-16T23:25:35.1793694Z <a id="api.routes.health.health"></a>
2025-08-16T23:25:35.1793955Z 
2025-08-16T23:25:35.1794053Z #### health
2025-08-16T23:25:35.1794200Z 
2025-08-16T23:25:35.1794300Z ```python
2025-08-16T23:25:35.1794616Z @router.get("/health", include_in_schema=False)
2025-08-16T23:25:35.1795229Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T23:25:35.1795785Z ```
2025-08-16T23:25:35.1795917Z 
2025-08-16T23:25:35.1796098Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T23:25:35.1796427Z 
2025-08-16T23:25:35.1796565Z <a id="api.routes.repository"></a>
2025-08-16T23:25:35.1796814Z 
2025-08-16T23:25:35.1796936Z # api.routes.repository
2025-08-16T23:25:35.1797141Z 
2025-08-16T23:25:35.1797256Z <a id="api.routes"></a>
2025-08-16T23:25:35.1797592Z 
2025-08-16T23:25:35.1797701Z # api.routes
2025-08-16T23:25:35.1797853Z 
2025-08-16T23:25:35.1797974Z <a id="api.models.fee"></a>
2025-08-16T23:25:35.1798191Z 
2025-08-16T23:25:35.1798296Z # api.models.fee
2025-08-16T23:25:35.1798463Z 
2025-08-16T23:25:35.1798577Z <a id="api.models"></a>
2025-08-16T23:25:35.1798770Z 
2025-08-16T23:25:35.1798871Z # api.models
2025-08-16T23:25:35.1799021Z 
2025-08-16T23:25:35.1799152Z <a id="api.roi_repository"></a>
2025-08-16T23:25:35.1799377Z 
2025-08-16T23:25:35.1799491Z # api.roi\_repository
2025-08-16T23:25:35.1799675Z 
2025-08-16T23:25:35.1799792Z <a id="api.main"></a>
2025-08-16T23:25:35.1799970Z 
2025-08-16T23:25:35.1800070Z # api.main
2025-08-16T23:25:35.1800220Z 
2025-08-16T23:25:35.1800339Z <a id="api.main.ready"></a>
2025-08-16T23:25:35.1800547Z 
2025-08-16T23:25:35.1800798Z #### ready
2025-08-16T23:25:35.1801006Z 
2025-08-16T23:25:35.1801107Z ```python
2025-08-16T23:25:35.1801529Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T23:25:35.1802243Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T23:25:35.1802811Z                                                                       str]
2025-08-16T23:25:35.1803184Z ```
2025-08-16T23:25:35.1803320Z 
2025-08-16T23:25:35.1803471Z Return 200 only when migrations are at head.
2025-08-16T23:25:35.1803755Z 
2025-08-16T23:25:35.1803873Z <a id="api.config"></a>
2025-08-16T23:25:35.1804061Z 
2025-08-16T23:25:35.1804166Z # api.config
2025-08-16T23:25:35.1804315Z 
2025-08-16T23:25:35.1804425Z <a id="etl"></a>
2025-08-16T23:25:35.1804586Z 
2025-08-16T23:25:35.1804682Z # etl
2025-08-16T23:25:35.1804821Z 
2025-08-16T23:25:35.1804946Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T23:25:35.1805183Z 
2025-08-16T23:25:35.1805298Z # etl.fba\_fee\_ingestor
2025-08-16T23:25:35.1805499Z 
2025-08-16T23:25:35.1805624Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T23:25:35.1805857Z 
2025-08-16T23:25:35.1805978Z # etl.sp\_fees\_ingestor
2025-08-16T23:25:35.1806180Z 
2025-08-16T23:25:35.1806309Z <a id="etl.keepa_ingestor"></a>
2025-08-16T23:25:35.1806538Z 
2025-08-16T23:25:35.1806649Z # etl.keepa\_ingestor
2025-08-16T23:25:35.1806829Z 
2025-08-16T23:25:35.1806933Z <a id="etl.db"></a>
2025-08-16T23:25:35.1807107Z 
2025-08-16T23:25:35.1807205Z # etl.db
2025-08-16T23:25:35.1807343Z 
2025-08-16T23:25:35.1807513Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T23:25:35.1807812Z 
2025-08-16T23:25:35.1807950Z # etl.dialects.amazon\_reimbursements
2025-08-16T23:25:35.1808209Z 
2025-08-16T23:25:35.1808353Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T23:25:35.1808622Z 
2025-08-16T23:25:35.1808747Z # etl.dialects.amazon\_returns
2025-08-16T23:25:35.1808975Z 
2025-08-16T23:25:35.1809094Z <a id="etl.dialects"></a>
2025-08-16T23:25:35.1809294Z 
2025-08-16T23:25:35.1809401Z # etl.dialects
2025-08-16T23:25:35.1809559Z 
2025-08-16T23:25:35.1809663Z <a id="ingest"></a>
2025-08-16T23:25:35.1809831Z 
2025-08-16T23:25:35.1809935Z # ingest
2025-08-16T23:25:35.1810076Z 
2025-08-16T23:25:35.1810338Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T23:25:35.1810593Z 
2025-08-16T23:25:35.1810895Z # ingest.tests.test\_smoke
2025-08-16T23:25:35.1811106Z 
2025-08-16T23:25:35.1811223Z <a id="ingest.tests"></a>
2025-08-16T23:25:35.1811428Z 
2025-08-16T23:25:35.1811531Z # ingest.tests
2025-08-16T23:25:35.1811688Z 
2025-08-16T23:25:35.1811824Z <a id="ingest.upload_router"></a>
2025-08-16T23:25:35.1812062Z 
2025-08-16T23:25:35.1812177Z # ingest.upload\_router
2025-08-16T23:25:35.1812374Z 
2025-08-16T23:25:35.1812499Z <a id="ingest.email_watcher"></a>
2025-08-16T23:25:35.1812732Z 
2025-08-16T23:25:35.1812846Z # ingest.email\_watcher
2025-08-16T23:25:35.1813040Z 
2025-08-16T23:25:35.1813177Z <a id="ingest.email_watcher.main"></a>
2025-08-16T23:25:35.1813436Z 
2025-08-16T23:25:35.1813540Z #### main
2025-08-16T23:25:35.1813678Z 
2025-08-16T23:25:35.1813779Z ```python
2025-08-16T23:25:35.1814041Z def main() -> dict[str, str]
2025-08-16T23:25:35.1814345Z ```
2025-08-16T23:25:35.1814480Z 
2025-08-16T23:25:35.1814826Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T23:25:35.1815189Z 
2025-08-16T23:25:35.1815387Z Returns {"status": "success"} when processing completes.
2025-08-16T23:25:35.1815902Z 
2025-08-16T23:25:35.1816100Z <a id="ingest.ingest_router"></a>
2025-08-16T23:25:35.1816521Z 
2025-08-16T23:25:35.1816753Z # ingest.ingest\_router
2025-08-16T23:25:35.1817087Z 
2025-08-16T23:25:35.1817284Z <a id="logistics_etl"></a>
2025-08-16T23:25:35.1817628Z 
2025-08-16T23:25:35.1817807Z # logistics\_etl
2025-08-16T23:25:35.1818086Z 
2025-08-16T23:25:35.1818284Z Daily logistics ETL job.
2025-08-16T23:25:35.1818487Z 
2025-08-16T23:25:35.1818628Z <a id="logistics_etl.__main__"></a>
2025-08-16T23:25:35.1818873Z 
2025-08-16T23:25:35.1818991Z # logistics\_etl.\_\_main\_\_
2025-08-16T23:25:35.1819211Z 
2025-08-16T23:25:35.1819354Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T23:25:35.1819626Z 
2025-08-16T23:25:35.1819750Z # logistics\_etl.tests.conftest
2025-08-16T23:25:35.1819995Z 
2025-08-16T23:25:35.1820160Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T23:25:35.1820458Z 
2025-08-16T23:25:35.1820605Z # logistics\_etl.tests.test\_repository
2025-08-16T23:25:35.1821037Z 
2025-08-16T23:25:35.1821179Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T23:25:35.1821460Z 
2025-08-16T23:25:35.1821583Z # logistics\_etl.tests.test\_cron
2025-08-16T23:25:35.1821816Z 
2025-08-16T23:25:35.1821967Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T23:25:35.1822253Z 
2025-08-16T23:25:35.1822380Z # logistics\_etl.tests.test\_imports
2025-08-16T23:25:35.1822629Z 
2025-08-16T23:25:35.1822762Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T23:25:35.1823006Z 
2025-08-16T23:25:35.1823121Z # logistics\_etl.tests.test\_smoke
2025-08-16T23:25:35.1823341Z 
2025-08-16T23:25:35.1823470Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T23:25:35.1823716Z 
2025-08-16T23:25:35.1823832Z # logistics\_etl.tests.test\_client
2025-08-16T23:25:35.1824056Z 
2025-08-16T23:25:35.1824180Z <a id="logistics_etl.tests"></a>
2025-08-16T23:25:35.1824388Z 
2025-08-16T23:25:35.1824494Z # logistics\_etl.tests
2025-08-16T23:25:35.1824662Z 
2025-08-16T23:25:35.1824771Z <a id="logistics_etl.flow"></a>
2025-08-16T23:25:35.1824974Z 
2025-08-16T23:25:35.1825073Z # logistics\_etl.flow
2025-08-16T23:25:35.1825235Z 
2025-08-16T23:25:35.1825347Z <a id="logistics_etl.client"></a>
2025-08-16T23:25:35.1825563Z 
2025-08-16T23:25:35.1825664Z # logistics\_etl.client
2025-08-16T23:25:35.1825831Z 
2025-08-16T23:25:35.1825944Z <a id="logistics_etl.cron"></a>
2025-08-16T23:25:35.1826139Z 
2025-08-16T23:25:35.1826240Z # logistics\_etl.cron
2025-08-16T23:25:35.1826398Z 
2025-08-16T23:25:35.1826512Z <a id="logistics_etl.db"></a>
2025-08-16T23:25:35.1826709Z 
2025-08-16T23:25:35.1826805Z # logistics\_etl.db
2025-08-16T23:25:35.1826967Z 
2025-08-16T23:25:35.1827087Z <a id="logistics_etl.repository"></a>
2025-08-16T23:25:35.1827318Z 
2025-08-16T23:25:35.1827432Z # logistics\_etl.repository
2025-08-16T23:25:35.1827625Z 
2025-08-16T23:25:35.1827873Z <a id="alert_bot"></a>
2025-08-16T23:25:35.1828035Z 
2025-08-16T23:25:35.1828131Z # alert\_bot
2025-08-16T23:25:35.1828264Z 
2025-08-16T23:25:35.1828385Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T23:25:35.1828624Z 
2025-08-16T23:25:35.1828736Z # alert\_bot.tests.test\_smoke
2025-08-16T23:25:35.1828934Z 
2025-08-16T23:25:35.1829043Z <a id="alert_bot.tests"></a>
2025-08-16T23:25:35.1829240Z 
2025-08-16T23:25:35.1829334Z # alert\_bot.tests
2025-08-16T23:25:35.1829482Z 
2025-08-16T23:25:35.1829601Z <a id="alert_bot.alert_bot"></a>
2025-08-16T23:25:35.1829802Z 
2025-08-16T23:25:35.1829903Z # alert\_bot.alert\_bot
2025-08-16T23:25:35.1830074Z 
2025-08-16T23:25:35.1830180Z <a id="alert_bot.rules"></a>
2025-08-16T23:25:35.1830368Z 
2025-08-16T23:25:35.1830462Z # alert\_bot.rules
2025-08-16T23:25:35.1830616Z 
2025-08-16T23:25:35.1830864Z <a id="common"></a>
2025-08-16T23:25:35.1831019Z 
2025-08-16T23:25:35.1831113Z # common
2025-08-16T23:25:35.1831237Z 
2025-08-16T23:25:35.1831468Z <a id="common.dsn"></a>
2025-08-16T23:25:35.1831641Z 
2025-08-16T23:25:35.1831731Z # common.dsn
2025-08-16T23:25:35.1831870Z 
2025-08-16T23:25:35.1831984Z <a id="common.dsn.build_dsn"></a>
2025-08-16T23:25:35.1832198Z 
2025-08-16T23:25:35.1832288Z #### build\_dsn
2025-08-16T23:25:35.1832429Z 
2025-08-16T23:25:35.1832524Z ```python
2025-08-16T23:25:35.1832765Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:25:35.1833091Z ```
2025-08-16T23:25:35.1833208Z 
2025-08-16T23:25:35.1833379Z Return a Postgres DSN, validating required variables.
2025-08-16T23:25:35.1833686Z 
2025-08-16T23:25:35.1833966Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T23:25:35.1834612Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T23:25:35.1835232Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T23:25:35.1835688Z missing.
2025-08-16T23:25:35.1835811Z 
2025-08-16T23:25:35.1835926Z <a id="common.models_vendor"></a>
2025-08-16T23:25:35.1836151Z 
2025-08-16T23:25:35.1836261Z # common.models\_vendor
2025-08-16T23:25:35.1836432Z 
2025-08-16T23:25:35.1836554Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T23:25:35.1836800Z 
2025-08-16T23:25:35.1836894Z ## Vendor Objects
2025-08-16T23:25:35.1837042Z 
2025-08-16T23:25:35.1837136Z ```python
2025-08-16T23:25:35.1837355Z class Vendor(Base)
2025-08-16T23:25:35.1837608Z ```
2025-08-16T23:25:35.1837723Z 
2025-08-16T23:25:35.1837835Z Vendor of inventory items.
2025-08-16T23:25:35.1838022Z 
2025-08-16T23:25:35.1838162Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T23:25:35.1838425Z 
2025-08-16T23:25:35.1838527Z ## VendorPrice Objects
2025-08-16T23:25:35.1838692Z 
2025-08-16T23:25:35.1838778Z ```python
2025-08-16T23:25:35.1839013Z class VendorPrice(Base)
2025-08-16T23:25:35.1839271Z ```
2025-08-16T23:25:35.1839384Z 
2025-08-16T23:25:35.1839528Z Association table linking vendors to pricing.
2025-08-16T23:25:35.1839794Z 
2025-08-16T23:25:35.1839904Z <a id="common.db_url"></a>
2025-08-16T23:25:35.1840097Z 
2025-08-16T23:25:35.1840195Z # common.db\_url
2025-08-16T23:25:35.1840351Z 
2025-08-16T23:25:35.1840465Z <a id="common.db_url.build_url"></a>
2025-08-16T23:25:35.1840895Z 
2025-08-16T23:25:35.1841011Z #### build\_url
2025-08-16T23:25:35.1841160Z 
2025-08-16T23:25:35.1841248Z ```python
2025-08-16T23:25:35.1841499Z def build_url(async_: bool = True) -> str
2025-08-16T23:25:35.1841824Z ```
2025-08-16T23:25:35.1841937Z 
2025-08-16T23:25:35.1842080Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:25:35.1842333Z 
2025-08-16T23:25:35.1842441Z <a id="common.keepa"></a>
2025-08-16T23:25:35.1842628Z 
2025-08-16T23:25:35.1842722Z # common.keepa
2025-08-16T23:25:35.1842865Z 
2025-08-16T23:25:35.1842970Z <a id="common.llm"></a>
2025-08-16T23:25:35.1843145Z 
2025-08-16T23:25:35.1843234Z # common.llm
2025-08-16T23:25:35.1843368Z 
2025-08-16T23:25:35.1843485Z <a id="common.settings"></a>
2025-08-16T23:25:35.1843682Z 
2025-08-16T23:25:35.1843777Z # common.settings
2025-08-16T23:25:35.1844069Z 
2025-08-16T23:25:35.1844168Z <a id="common.db"></a>
2025-08-16T23:25:35.1844332Z 
2025-08-16T23:25:35.1844425Z # common.db
2025-08-16T23:25:35.1844559Z 
2025-08-16T23:25:35.1844688Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T23:25:35.1844934Z 
2025-08-16T23:25:35.1845048Z #### build\_sqlalchemy\_url
2025-08-16T23:25:35.1845233Z 
2025-08-16T23:25:35.1845323Z ```python
2025-08-16T23:25:35.1845572Z def build_sqlalchemy_url() -> str
2025-08-16T23:25:35.1845864Z ```
2025-08-16T23:25:35.1845986Z 
2025-08-16T23:25:35.1846121Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:25:35.1846374Z 
2025-08-16T23:25:35.1846504Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T23:25:35.1846745Z 
2025-08-16T23:25:35.1846848Z #### build\_asyncpg\_dsn
2025-08-16T23:25:35.1847027Z 
2025-08-16T23:25:35.1847123Z ```python
2025-08-16T23:25:35.1847357Z def build_asyncpg_dsn() -> str
2025-08-16T23:25:35.1847643Z ```
2025-08-16T23:25:35.1847759Z 
2025-08-16T23:25:35.1847944Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:25:35.1848381Z 
2025-08-16T23:25:35.1848500Z <a id="common.db.refresh_mvs"></a>
2025-08-16T23:25:35.1848720Z 
2025-08-16T23:25:35.1848820Z #### refresh\_mvs
2025-08-16T23:25:35.1848966Z 
2025-08-16T23:25:35.1849056Z ```python
2025-08-16T23:25:35.1849337Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:25:35.1849698Z ```
2025-08-16T23:25:35.1849821Z 
2025-08-16T23:25:35.1850015Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:25:35.1850333Z 
2025-08-16T23:25:35.1850440Z <a id="common.config"></a>
2025-08-16T23:25:35.1850784Z 
2025-08-16T23:25:35.1850899Z # common.config
2025-08-16T23:25:35.1851047Z 
2025-08-16T23:25:35.1851157Z <a id="common.base"></a>
2025-08-16T23:25:35.1851334Z 
2025-08-16T23:25:35.1851426Z # common.base
2025-08-16T23:25:35.1851571Z 
2025-08-16T23:25:35.1851684Z <a id="common.base.Base"></a>
2025-08-16T23:25:35.1851903Z 
2025-08-16T23:25:35.1851995Z ## Base Objects
2025-08-16T23:25:35.1852137Z 
2025-08-16T23:25:35.1852246Z ```python
2025-08-16T23:25:35.1852475Z class Base(DeclarativeBase)
2025-08-16T23:25:35.1852758Z ```
2025-08-16T23:25:35.1852873Z 
2025-08-16T23:25:35.1852993Z Base class for SQLAlchemy models.
2025-08-16T23:25:35.1853212Z 
2025-08-16T23:25:35.1853313Z <a id="repricer"></a>
2025-08-16T23:25:35.1853487Z 
2025-08-16T23:25:35.1853577Z # repricer
2025-08-16T23:25:35.1853713Z 
2025-08-16T23:25:35.1853835Z <a id="repricer.app.schemas"></a>
2025-08-16T23:25:35.1854054Z 
2025-08-16T23:25:35.1854166Z # repricer.app.schemas
2025-08-16T23:25:35.1854336Z 
2025-08-16T23:25:35.1854451Z <a id="repricer.app.deps"></a>
2025-08-16T23:25:35.1854659Z 
2025-08-16T23:25:35.1854761Z # repricer.app.deps
2025-08-16T23:25:35.1854917Z 
2025-08-16T23:25:35.1855071Z Placeholder module for Keepa / SP-API clients.
2025-08-16T23:25:35.1855347Z 
2025-08-16T23:25:35.1855461Z <a id="repricer.app.logic"></a>
2025-08-16T23:25:35.1855665Z 
2025-08-16T23:25:35.1855774Z # repricer.app.logic
2025-08-16T23:25:35.1855938Z 
2025-08-16T23:25:35.1856089Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T23:25:35.1856339Z 
2025-08-16T23:25:35.1856435Z #### MIN\_MARGIN
2025-08-16T23:25:35.1856582Z 
2025-08-16T23:25:35.1856667Z 15 % ROI
2025-08-16T23:25:35.1856794Z 
2025-08-16T23:25:35.1856937Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T23:25:35.1857198Z 
2025-08-16T23:25:35.1857300Z #### compute\_price
2025-08-16T23:25:35.1857451Z 
2025-08-16T23:25:35.1857540Z ```python
2025-08-16T23:25:35.1857896Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T23:25:35.1858331Z ```
2025-08-16T23:25:35.1858450Z 
2025-08-16T23:25:35.1858603Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T23:25:35.1859001Z Replace with real competitive logic later.
2025-08-16T23:25:35.1859254Z 
2025-08-16T23:25:35.1859368Z <a id="repricer.app.main"></a>
2025-08-16T23:25:35.1859568Z 
2025-08-16T23:25:35.1859672Z # repricer.app.main
2025-08-16T23:25:35.1859827Z 
2025-08-16T23:25:35.1859933Z <a id="repricer.app"></a>
2025-08-16T23:25:35.1860262Z 
2025-08-16T23:25:35.1860362Z # repricer.app
2025-08-16T23:25:35.1860506Z 
2025-08-16T23:25:35.1860785Z <a id="repricer.tests.test_imports"></a>
2025-08-16T23:25:35.1861043Z 
2025-08-16T23:25:35.1861157Z # repricer.tests.test\_imports
2025-08-16T23:25:35.1861354Z 
2025-08-16T23:25:35.1861484Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T23:25:35.1861721Z 
2025-08-16T23:25:35.1861835Z # repricer.tests.test\_smoke
2025-08-16T23:25:35.1862032Z 
2025-08-16T23:25:35.1862149Z <a id="repricer.tests"></a>
2025-08-16T23:25:35.1862335Z 
2025-08-16T23:25:35.1862486Z # repricer.tests
2025-08-16T23:25:35.1862636Z 
2025-08-16T23:25:35.1862727Z <a id="db"></a>
2025-08-16T23:25:35.1862877Z 
2025-08-16T23:25:35.1862962Z # db
2025-08-16T23:25:35.1863081Z 
2025-08-16T23:25:35.1863195Z <a id="db.utils.views"></a>
2025-08-16T23:25:35.1863383Z 
2025-08-16T23:25:35.1863477Z # db.utils.views
2025-08-16T23:25:35.1863625Z 
2025-08-16T23:25:35.1863760Z <a id="db.utils.views.replace_view"></a>
2025-08-16T23:25:35.1864129Z 
2025-08-16T23:25:35.1864224Z #### replace\_view
2025-08-16T23:25:35.1864380Z 
2025-08-16T23:25:35.1864468Z ```python
2025-08-16T23:25:35.1864739Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T23:25:35.1865099Z ```
2025-08-16T23:25:35.1865216Z 
2025-08-16T23:25:35.1865347Z Drop and recreate a SQL view atomically.
2025-08-16T23:25:35.1865589Z 
2025-08-16T23:25:35.1865689Z <a id="db.utils"></a>
2025-08-16T23:25:35.1865861Z 
2025-08-16T23:25:35.1865950Z # db.utils
2025-08-16T23:25:35.1866077Z 
2025-08-16T23:25:35.1866186Z <a id="price_importer"></a>
2025-08-16T23:25:35.1866384Z 
2025-08-16T23:25:35.1866484Z # price\_importer
2025-08-16T23:25:35.1866634Z 
2025-08-16T23:25:35.1866787Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T23:25:35.1867057Z 
2025-08-16T23:25:35.1867184Z # price\_importer.services\_common.dsn
2025-08-16T23:25:35.1867425Z 
2025-08-16T23:25:35.1867599Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T23:25:35.1867907Z 
2025-08-16T23:25:35.1868002Z #### build\_dsn
2025-08-16T23:25:35.1868152Z 
2025-08-16T23:25:35.1868243Z ```python
2025-08-16T23:25:35.1868494Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:25:35.1868810Z ```
2025-08-16T23:25:35.1868927Z 
2025-08-16T23:25:35.1869032Z Return safe DSN.
2025-08-16T23:25:35.1869182Z 
2025-08-16T23:25:35.1869607Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T23:25:35.1869905Z 
2025-08-16T23:25:35.1870081Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T23:25:35.1870378Z 
2025-08-16T23:25:35.1870533Z # price\_importer.services\_common.models\_vendor
2025-08-16T23:25:35.1870975Z 
2025-08-16T23:25:35.1871128Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T23:25:35.1871402Z 
2025-08-16T23:25:35.1871538Z # price\_importer.services\_common.db\_url
2025-08-16T23:25:35.1871787Z 
2025-08-16T23:25:35.1871974Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T23:25:35.1872290Z 
2025-08-16T23:25:35.1872390Z #### build\_url
2025-08-16T23:25:35.1872540Z 
2025-08-16T23:25:35.1872627Z ```python
2025-08-16T23:25:35.1872879Z def build_url(async_: bool = True) -> str
2025-08-16T23:25:35.1873202Z ```
2025-08-16T23:25:35.1873317Z 
2025-08-16T23:25:35.1873452Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:25:35.1873703Z 
2025-08-16T23:25:35.1873855Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T23:25:35.1874123Z 
2025-08-16T23:25:35.1874251Z # price\_importer.services\_common.keepa
2025-08-16T23:25:35.1874500Z 
2025-08-16T23:25:35.1874641Z <a id="price_importer.services_common.llm"></a>
2025-08-16T23:25:35.1874902Z 
2025-08-16T23:25:35.1875030Z # price\_importer.services\_common.llm
2025-08-16T23:25:35.1875267Z 
2025-08-16T23:25:35.1875426Z <a id="price_importer.services_common.settings"></a>
2025-08-16T23:25:35.1875706Z 
2025-08-16T23:25:35.1875844Z # price\_importer.services\_common.settings
2025-08-16T23:25:35.1876095Z 
2025-08-16T23:25:35.1876234Z <a id="price_importer.services_common.db"></a>
2025-08-16T23:25:35.1876630Z 
2025-08-16T23:25:35.1876754Z # price\_importer.services\_common.db
2025-08-16T23:25:35.1876984Z 
2025-08-16T23:25:35.1877209Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T23:25:35.1877555Z 
2025-08-16T23:25:35.1877660Z #### build\_sqlalchemy\_url
2025-08-16T23:25:35.1877851Z 
2025-08-16T23:25:35.1877940Z ```python
2025-08-16T23:25:35.1878179Z def build_sqlalchemy_url() -> str
2025-08-16T23:25:35.1878477Z ```
2025-08-16T23:25:35.1878595Z 
2025-08-16T23:25:35.1878726Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:25:35.1878982Z 
2025-08-16T23:25:35.1879187Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T23:25:35.1879517Z 
2025-08-16T23:25:35.1879626Z #### build\_asyncpg\_dsn
2025-08-16T23:25:35.1879803Z 
2025-08-16T23:25:35.1879893Z ```python
2025-08-16T23:25:35.1880132Z def build_asyncpg_dsn() -> str
2025-08-16T23:25:35.1880412Z ```
2025-08-16T23:25:35.1880532Z 
2025-08-16T23:25:35.1880901Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:25:35.1881436Z 
2025-08-16T23:25:35.1881627Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T23:25:35.1881903Z 
2025-08-16T23:25:35.1881987Z #### refresh\_mvs
2025-08-16T23:25:35.1882124Z 
2025-08-16T23:25:35.1882211Z ```python
2025-08-16T23:25:35.1882471Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:25:35.1882803Z ```
2025-08-16T23:25:35.1882908Z 
2025-08-16T23:25:35.1883085Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:25:35.1883378Z 
2025-08-16T23:25:35.1883503Z <a id="price_importer.services_common"></a>
2025-08-16T23:25:35.1883732Z 
2025-08-16T23:25:35.1883848Z # price\_importer.services\_common
2025-08-16T23:25:35.1884051Z 
2025-08-16T23:25:35.1884181Z <a id="price_importer.services_common.base"></a>
2025-08-16T23:25:35.1884429Z 
2025-08-16T23:25:35.1884547Z # price\_importer.services\_common.base
2025-08-16T23:25:35.1884763Z 
2025-08-16T23:25:35.1884876Z <a id="price_importer.normaliser"></a>
2025-08-16T23:25:35.1885105Z 
2025-08-16T23:25:35.1885212Z # price\_importer.normaliser
2025-08-16T23:25:35.1885396Z 
2025-08-16T23:25:35.1885534Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T23:25:35.1885777Z 
2025-08-16T23:25:35.1885889Z # price\_importer.common.models\_vendor
2025-08-16T23:25:35.1886110Z 
2025-08-16T23:25:35.1886229Z <a id="price_importer.common.db_url"></a>
2025-08-16T23:25:35.1886454Z 
2025-08-16T23:25:35.1886561Z # price\_importer.common.db\_url
2025-08-16T23:25:35.1886759Z 
2025-08-16T23:25:35.1886890Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T23:25:35.1887135Z 
2025-08-16T23:25:35.1887222Z #### make\_dsn
2025-08-16T23:25:35.1887348Z 
2025-08-16T23:25:35.1887429Z ```python
2025-08-16T23:25:35.1887654Z def make_dsn(async_: bool = False) -> str
2025-08-16T23:25:35.1887944Z ```
2025-08-16T23:25:35.1888056Z 
2025-08-16T23:25:35.1888207Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T23:25:35.1888475Z 
2025-08-16T23:25:35.1888627Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T23:25:35.1888874Z 
2025-08-16T23:25:35.1888957Z #### build\_url
2025-08-16T23:25:35.1889083Z 
2025-08-16T23:25:35.1889170Z ```python
2025-08-16T23:25:35.1889394Z def build_url(async_: bool = False) -> str
2025-08-16T23:25:35.1889688Z ```
2025-08-16T23:25:35.1889790Z 
2025-08-16T23:25:35.1889943Z Return Postgres DSN built from environment variables.
2025-08-16T23:25:35.1890217Z 
2025-08-16T23:25:35.1890323Z <a id="price_importer.common"></a>
2025-08-16T23:25:35.1890522Z 
2025-08-16T23:25:35.1890775Z # price\_importer.common
2025-08-16T23:25:35.1891001Z 
2025-08-16T23:25:35.1891116Z <a id="price_importer.common.base"></a>
2025-08-16T23:25:35.1891332Z 
2025-08-16T23:25:35.1891442Z # price\_importer.common.base
2025-08-16T23:25:35.1891623Z 
2025-08-16T23:25:35.1891744Z <a id="price_importer.tests.conftest"></a>
2025-08-16T23:25:35.1891977Z 
2025-08-16T23:25:35.1892087Z # price\_importer.tests.conftest
2025-08-16T23:25:35.1892278Z 
2025-08-16T23:25:35.1892551Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T23:25:35.1892781Z 
2025-08-16T23:25:35.1892891Z # price\_importer.tests.test\_reader
2025-08-16T23:25:35.1893098Z 
2025-08-16T23:25:35.1893232Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T23:25:35.1893465Z 
2025-08-16T23:25:35.1893576Z # price\_importer.tests.test\_imports
2025-08-16T23:25:35.1893790Z 
2025-08-16T23:25:35.1893910Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T23:25:35.1894135Z 
2025-08-16T23:25:35.1894247Z # price\_importer.tests.test\_smoke
2025-08-16T23:25:35.1894454Z 
2025-08-16T23:25:35.1894587Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T23:25:35.1894839Z 
2025-08-16T23:25:35.1894953Z # price\_importer.tests.test\_normaliser
2025-08-16T23:25:35.1895171Z 
2025-08-16T23:25:35.1895277Z <a id="price_importer.tests"></a>
2025-08-16T23:25:35.1895477Z 
2025-08-16T23:25:35.1895572Z # price\_importer.tests
2025-08-16T23:25:35.1895729Z 
2025-08-16T23:25:35.1895840Z <a id="price_importer.reader"></a>
2025-08-16T23:25:35.1896153Z 
2025-08-16T23:25:35.1896249Z # price\_importer.reader
2025-08-16T23:25:35.1896412Z 
2025-08-16T23:25:35.1896542Z <a id="price_importer.reader.load_file"></a>
2025-08-16T23:25:35.1896768Z 
2025-08-16T23:25:35.1896850Z #### load\_file
2025-08-16T23:25:35.1896986Z 
2025-08-16T23:25:35.1897067Z ```python
2025-08-16T23:25:35.1897292Z def load_file(path: str | Path) -> Any
2025-08-16T23:25:35.1897585Z ```
2025-08-16T23:25:35.1897688Z 
2025-08-16T23:25:35.1897808Z Return DataFrame from CSV or Excel file.
2025-08-16T23:25:35.1898026Z 
2025-08-16T23:25:35.1898160Z Raises RuntimeError if pandas is unavailable.
2025-08-16T23:25:35.1898402Z 
2025-08-16T23:25:35.1898516Z <a id="price_importer.repository"></a>
2025-08-16T23:25:35.1898727Z 
2025-08-16T23:25:35.1898830Z # price\_importer.repository
2025-08-16T23:25:35.1899015Z 
2025-08-16T23:25:35.1899124Z <a id="price_importer.import"></a>
2025-08-16T23:25:35.1899322Z 
2025-08-16T23:25:35.1899425Z # price\_importer.import
2025-08-16T23:25:35.1899598Z 
2025-08-16T23:25:35.1899688Z <a id="fees_h10"></a>
2025-08-16T23:25:35.1899844Z 
2025-08-16T23:25:35.1899927Z # fees\_h10
2025-08-16T23:25:35.1900048Z 
2025-08-16T23:25:35.1900145Z <a id="fees_h10.worker"></a>
2025-08-16T23:25:35.1900323Z 
2025-08-16T23:25:35.1900409Z # fees\_h10.worker
2025-08-16T23:25:35.1900544Z 
2025-08-16T23:25:35.1900799Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T23:25:35.1901029Z 
2025-08-16T23:25:35.1901129Z # fees\_h10.tests.test\_smoke
2025-08-16T23:25:35.1901307Z 
2025-08-16T23:25:35.1901407Z <a id="fees_h10.tests"></a>
2025-08-16T23:25:35.1901572Z 
2025-08-16T23:25:35.1901655Z # fees\_h10.tests
2025-08-16T23:25:35.1901792Z 
2025-08-16T23:25:35.1901886Z <a id="fees_h10.client"></a>
2025-08-16T23:25:35.1902055Z 
2025-08-16T23:25:35.1902144Z # fees\_h10.client
2025-08-16T23:25:35.1902281Z 
2025-08-16T23:25:35.1902384Z <a id="fees_h10.repository"></a>
2025-08-16T23:25:35.1902569Z 
2025-08-16T23:25:35.1902667Z # fees\_h10.repository
2025-08-16T23:25:35.1902827Z 
2025-08-16T23:25:35.1902915Z <a id="emailer"></a>
2025-08-16T23:25:35.1903065Z 
2025-08-16T23:25:35.1903144Z # emailer
2025-08-16T23:25:35.1903256Z 
2025-08-16T23:25:35.1903384Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T23:25:35.1903630Z 
2025-08-16T23:25:35.1903742Z # emailer.tests.test\_import\_emailer
2025-08-16T23:25:35.1903954Z 
2025-08-16T23:25:35.1904067Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T23:25:35.1904271Z 
2025-08-16T23:25:35.1904370Z # emailer.tests.test\_smoke
2025-08-16T23:25:35.1904549Z 
2025-08-16T23:25:35.1904645Z <a id="emailer.tests"></a>
2025-08-16T23:25:35.1904812Z 
2025-08-16T23:25:35.1904895Z # emailer.tests
2025-08-16T23:25:35.1905034Z 
2025-08-16T23:25:35.1905141Z <a id="emailer.generate_body"></a>
2025-08-16T23:25:35.1905337Z 
2025-08-16T23:25:35.1905440Z # emailer.generate\_body
2025-08-16T23:25:35.1905601Z 
2025-08-16T23:25:35.1905692Z <a id="llm_server"></a>
2025-08-16T23:25:35.1905848Z 
2025-08-16T23:25:35.1905930Z # llm\_server
2025-08-16T23:25:35.1906185Z 
2025-08-16T23:25:35.1906283Z <a id="llm_server.app"></a>
2025-08-16T23:25:35.1906457Z 
2025-08-16T23:25:35.1906543Z # llm\_server.app
2025-08-16T23:25:35.1906678Z 
