2025-08-18T13:06:19.8439773Z ##[group]Run pydoc-markdown
2025-08-18T13:06:19.8440089Z [36;1mpydoc-markdown[0m
2025-08-18T13:06:19.8481227Z shell: /usr/bin/bash -e {0}
2025-08-18T13:06:19.8481466Z env:
2025-08-18T13:06:19.8481706Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:06:19.8482101Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T13:06:19.8482487Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:06:19.8482825Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:06:19.8483165Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T13:06:19.8483501Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T13:06:19.8483785Z ##[endgroup]
2025-08-18T13:06:20.1774445Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T13:06:20.1775677Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T13:06:20.1776164Z In "pydoc-markdown.yml"
2025-08-18T13:06:20.1776581Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T13:06:20.1777296Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T13:06:20.1778086Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T13:06:20.1778615Z 
2025-08-18T13:06:20.4787260Z <a id="__init__"></a>
2025-08-18T13:06:20.4789844Z 
2025-08-18T13:06:20.4789992Z # \_\_init\_\_
2025-08-18T13:06:20.4790185Z 
2025-08-18T13:06:20.4790305Z <a id="api"></a>
2025-08-18T13:06:20.4790504Z 
2025-08-18T13:06:20.4790608Z # api
2025-08-18T13:06:20.4790754Z 
2025-08-18T13:06:20.4790878Z <a id="api.errors"></a>
2025-08-18T13:06:20.4791101Z 
2025-08-18T13:06:20.4791207Z # api.errors
2025-08-18T13:06:20.4791373Z 
2025-08-18T13:06:20.4791544Z <a id="api.tests.test_errors_json"></a>
2025-08-18T13:06:20.4791848Z 
2025-08-18T13:06:20.4791992Z # api.tests.test\_errors\_json
2025-08-18T13:06:20.4792245Z 
2025-08-18T13:06:20.4792381Z <a id="api.tests.test_llm"></a>
2025-08-18T13:06:20.4792636Z 
2025-08-18T13:06:20.4792765Z # api.tests.test\_llm
2025-08-18T13:06:20.4793027Z 
2025-08-18T13:06:20.4793183Z <a id="api.tests.test_imports"></a>
2025-08-18T13:06:20.4793466Z 
2025-08-18T13:06:20.4793605Z # api.tests.test\_imports
2025-08-18T13:06:20.4793835Z 
2025-08-18T13:06:20.4793990Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T13:06:20.4794285Z 
2025-08-18T13:06:20.4794434Z # api.tests.test\_entrypoint
2025-08-18T13:06:20.4794691Z 
2025-08-18T13:06:20.4794842Z <a id="api.tests.test_health"></a>
2025-08-18T13:06:20.4795322Z 
2025-08-18T13:06:20.4795459Z # api.tests.test\_health
2025-08-18T13:06:20.4795678Z 
2025-08-18T13:06:20.4795828Z <a id="api.logging_config"></a>
2025-08-18T13:06:20.4796078Z 
2025-08-18T13:06:20.4796201Z # api.logging\_config
2025-08-18T13:06:20.4796395Z 
2025-08-18T13:06:20.4796535Z <a id="api.migrations.env"></a>
2025-08-18T13:06:20.4796785Z 
2025-08-18T13:06:20.4796910Z # api.migrations.env
2025-08-18T13:06:20.4797119Z 
2025-08-18T13:06:20.4797334Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T13:06:20.4798046Z 
2025-08-18T13:06:20.4798244Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T13:06:20.4798578Z 
2025-08-18T13:06:20.4798770Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T13:06:20.4799115Z 
2025-08-18T13:06:20.4799293Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T13:06:20.4799602Z 
2025-08-18T13:06:20.4799876Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T13:06:20.4800323Z 
2025-08-18T13:06:20.4800573Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T13:06:20.4800971Z 
2025-08-18T13:06:20.4801244Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T13:06:20.4801646Z 
2025-08-18T13:06:20.4801836Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T13:06:20.4802175Z 
2025-08-18T13:06:20.4802388Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T13:06:20.4802749Z 
2025-08-18T13:06:20.4802933Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T13:06:20.4803270Z 
2025-08-18T13:06:20.4803779Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T13:06:20.4804155Z 
2025-08-18T13:06:20.4804354Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T13:06:20.4804694Z 
2025-08-18T13:06:20.4804905Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T13:06:20.4805591Z 
2025-08-18T13:06:20.4805791Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T13:06:20.4806135Z 
2025-08-18T13:06:20.4806360Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T13:06:20.4806746Z 
2025-08-18T13:06:20.4806940Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T13:06:20.4807278Z 
2025-08-18T13:06:20.4807530Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T13:06:20.4807932Z 
2025-08-18T13:06:20.4808148Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T13:06:20.4808519Z 
2025-08-18T13:06:20.4808737Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T13:06:20.4809104Z 
2025-08-18T13:06:20.4809322Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T13:06:20.4809651Z 
2025-08-18T13:06:20.4809892Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T13:06:20.4810338Z 
2025-08-18T13:06:20.4810580Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T13:06:20.4810967Z 
2025-08-18T13:06:20.4811178Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T13:06:20.4811558Z 
2025-08-18T13:06:20.4811728Z # api.migrations.versions.0001\_baseline
2025-08-18T13:06:20.4812040Z 
2025-08-18T13:06:20.4812208Z <a id="api.migrations.versions"></a>
2025-08-18T13:06:20.4812511Z 
2025-08-18T13:06:20.4812665Z # api.migrations.versions
2025-08-18T13:06:20.4812921Z 
2025-08-18T13:06:20.4813073Z <a id="api.migrations"></a>
2025-08-18T13:06:20.4813329Z 
2025-08-18T13:06:20.4813452Z # api.migrations
2025-08-18T13:06:20.4813656Z 
2025-08-18T13:06:20.4813784Z <a id="api.db"></a>
2025-08-18T13:06:20.4813987Z 
2025-08-18T13:06:20.4814116Z # api.db
2025-08-18T13:06:20.4814298Z 
2025-08-18T13:06:20.4814454Z <a id="api.routes.stats"></a>
2025-08-18T13:06:20.4814722Z 
2025-08-18T13:06:20.4814859Z # api.routes.stats
2025-08-18T13:06:20.4815279Z 
2025-08-18T13:06:20.4815445Z <a id="api.routes.stats.kpi"></a>
2025-08-18T13:06:20.4815751Z 
2025-08-18T13:06:20.4815876Z #### kpi
2025-08-18T13:06:20.4816036Z 
2025-08-18T13:06:20.4816152Z ```python
2025-08-18T13:06:20.4816468Z @router.get("/stats/kpi")
2025-08-18T13:06:20.4816900Z def kpi() -> List[Dict[str, int]]
2025-08-18T13:06:20.4817289Z ```
2025-08-18T13:06:20.4817453Z 
2025-08-18T13:06:20.4817610Z Return KPI metrics (mock).
2025-08-18T13:06:20.4817849Z 
2025-08-18T13:06:20.4818025Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T13:06:20.4818351Z 
2025-08-18T13:06:20.4818480Z #### roi\_by\_vendor
2025-08-18T13:06:20.4818689Z 
2025-08-18T13:06:20.4818806Z ```python
2025-08-18T13:06:20.4819125Z @router.get("/stats/roi_by_vendor")
2025-08-18T13:06:20.4819597Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T13:06:20.4820037Z ```
2025-08-18T13:06:20.4820467Z 
2025-08-18T13:06:20.4820623Z Return ROI percent by vendor.
2025-08-18T13:06:20.4820953Z 
2025-08-18T13:06:20.4821132Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T13:06:20.4821457Z 
2025-08-18T13:06:20.4821580Z #### roi\_trend
2025-08-18T13:06:20.4821775Z 
2025-08-18T13:06:20.4821900Z ```python
2025-08-18T13:06:20.4822216Z @router.get("/stats/roi_trend")
2025-08-18T13:06:20.4822671Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T13:06:20.4823105Z ```
2025-08-18T13:06:20.4823259Z 
2025-08-18T13:06:20.4823388Z Return 30-day ROI trend.
2025-08-18T13:06:20.4823621Z 
2025-08-18T13:06:20.4823778Z <a id="api.routes.roi"></a>
2025-08-18T13:06:20.4824030Z 
2025-08-18T13:06:20.4824153Z # api.routes.roi
2025-08-18T13:06:20.4824349Z 
2025-08-18T13:06:20.4824507Z <a id="api.routes.health"></a>
2025-08-18T13:06:20.4824767Z 
2025-08-18T13:06:20.4824894Z # api.routes.health
2025-08-18T13:06:20.4825304Z 
2025-08-18T13:06:20.4825470Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T13:06:20.4826025Z 
2025-08-18T13:06:20.4826142Z #### MAX\_SKEW
2025-08-18T13:06:20.4826331Z 
2025-08-18T13:06:20.4826440Z seconds
2025-08-18T13:06:20.4826616Z 
2025-08-18T13:06:20.4826788Z <a id="api.routes.health.health"></a>
2025-08-18T13:06:20.4827096Z 
2025-08-18T13:06:20.4827205Z #### health
2025-08-18T13:06:20.4827368Z 
2025-08-18T13:06:20.4827479Z ```python
2025-08-18T13:06:20.4827814Z @router.get("/health", include_in_schema=False)
2025-08-18T13:06:20.4828524Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T13:06:20.4829159Z ```
2025-08-18T13:06:20.4829309Z 
2025-08-18T13:06:20.4829522Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T13:06:20.4829888Z 
2025-08-18T13:06:20.4830056Z <a id="api.routes.repository"></a>
2025-08-18T13:06:20.4830408Z 
2025-08-18T13:06:20.4830573Z # api.routes.repository
2025-08-18T13:06:20.4830830Z 
2025-08-18T13:06:20.4830959Z <a id="api.routes"></a>
2025-08-18T13:06:20.4831173Z 
2025-08-18T13:06:20.4831298Z # api.routes
2025-08-18T13:06:20.4831484Z 
2025-08-18T13:06:20.4831618Z <a id="api.models.fee"></a>
2025-08-18T13:06:20.4831864Z 
2025-08-18T13:06:20.4832001Z # api.models.fee
2025-08-18T13:06:20.4832200Z 
2025-08-18T13:06:20.4832334Z <a id="api.models"></a>
2025-08-18T13:06:20.4832560Z 
2025-08-18T13:06:20.4832681Z # api.models
2025-08-18T13:06:20.4832857Z 
2025-08-18T13:06:20.4833000Z <a id="api.roi_repository"></a>
2025-08-18T13:06:20.4833266Z 
2025-08-18T13:06:20.4833399Z # api.roi\_repository
2025-08-18T13:06:20.4833664Z 
2025-08-18T13:06:20.4833807Z <a id="api.main"></a>
2025-08-18T13:06:20.4834024Z 
2025-08-18T13:06:20.4834145Z # api.main
2025-08-18T13:06:20.4834323Z 
2025-08-18T13:06:20.4834481Z <a id="api.main.ready"></a>
2025-08-18T13:06:20.4834734Z 
2025-08-18T13:06:20.4834856Z #### ready
2025-08-18T13:06:20.4835226Z 
2025-08-18T13:06:20.4835347Z ```python
2025-08-18T13:06:20.4835825Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T13:06:20.4836658Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T13:06:20.4837375Z                                                                       str]
2025-08-18T13:06:20.4837821Z ```
2025-08-18T13:06:20.4837985Z 
2025-08-18T13:06:20.4838178Z Return 200 only when migrations are at head.
2025-08-18T13:06:20.4838516Z 
2025-08-18T13:06:20.4838655Z <a id="api.config"></a>
2025-08-18T13:06:20.4838890Z 
2025-08-18T13:06:20.4839012Z # api.config
2025-08-18T13:06:20.4839192Z 
2025-08-18T13:06:20.4839317Z <a id="etl"></a>
2025-08-18T13:06:20.4839503Z 
2025-08-18T13:06:20.4839610Z # etl
2025-08-18T13:06:20.4839763Z 
2025-08-18T13:06:20.4839911Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T13:06:20.4840183Z 
2025-08-18T13:06:20.4840317Z # etl.fba\_fee\_ingestor
2025-08-18T13:06:20.4840554Z 
2025-08-18T13:06:20.4840701Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T13:06:20.4840967Z 
2025-08-18T13:06:20.4841103Z # etl.sp\_fees\_ingestor
2025-08-18T13:06:20.4841342Z 
2025-08-18T13:06:20.4841489Z <a id="etl.keepa_ingestor"></a>
2025-08-18T13:06:20.4841996Z 
2025-08-18T13:06:20.4842132Z # etl.keepa\_ingestor
2025-08-18T13:06:20.4842341Z 
2025-08-18T13:06:20.4842461Z <a id="etl.db"></a>
2025-08-18T13:06:20.4842668Z 
2025-08-18T13:06:20.4842775Z # etl.db
2025-08-18T13:06:20.4842935Z 
2025-08-18T13:06:20.4843086Z <a id="etl.dialects.schemas"></a>
2025-08-18T13:06:20.4843378Z 
2025-08-18T13:06:20.4843515Z # etl.dialects.schemas
2025-08-18T13:06:20.4843735Z 
2025-08-18T13:06:20.4843935Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T13:06:20.4844286Z 
2025-08-18T13:06:20.4844459Z # etl.dialects.amazon\_reimbursements
2025-08-18T13:06:20.4844787Z 
2025-08-18T13:06:20.4845280Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T13:06:20.4845654Z 
2025-08-18T13:06:20.4845822Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T13:06:20.4846127Z 
2025-08-18T13:06:20.4846295Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T13:06:20.4846607Z 
2025-08-18T13:06:20.4846762Z # etl.dialects.amazon\_returns
2025-08-18T13:06:20.4847299Z 
2025-08-18T13:06:20.4847488Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T13:06:20.4847826Z 
2025-08-18T13:06:20.4847986Z # etl.dialects.amazon\_fee\_preview
2025-08-18T13:06:20.4848280Z 
2025-08-18T13:06:20.4848536Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T13:06:20.4848904Z 
2025-08-18T13:06:20.4849067Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T13:06:20.4849385Z 
2025-08-18T13:06:20.4849575Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T13:06:20.4849901Z 
2025-08-18T13:06:20.4850061Z # etl.dialects.amazon\_settlements
2025-08-18T13:06:20.4850352Z 
2025-08-18T13:06:20.4850491Z <a id="etl.dialects"></a>
2025-08-18T13:06:20.4850730Z 
2025-08-18T13:06:20.4850850Z # etl.dialects
2025-08-18T13:06:20.4851037Z 
2025-08-18T13:06:20.4851156Z <a id="ingest"></a>
2025-08-18T13:06:20.4851366Z 
2025-08-18T13:06:20.4851513Z # ingest
2025-08-18T13:06:20.4851671Z 
2025-08-18T13:06:20.4851819Z <a id="ingest.maintenance"></a>
2025-08-18T13:06:20.4852111Z 
2025-08-18T13:06:20.4852244Z # ingest.maintenance
2025-08-18T13:06:20.4852454Z 
2025-08-18T13:06:20.4852600Z <a id="ingest.copy_loader"></a>
2025-08-18T13:06:20.4852865Z 
2025-08-18T13:06:20.4852995Z # ingest.copy\_loader
2025-08-18T13:06:20.4853213Z 
2025-08-18T13:06:20.4853404Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T13:06:20.4853747Z 
2025-08-18T13:06:20.4853884Z #### copy\_df\_via\_temp
2025-08-18T13:06:20.4854124Z 
2025-08-18T13:06:20.4854249Z ```python
2025-08-18T13:06:20.4854569Z def copy_df_via_temp(engine: Engine,
2025-08-18T13:06:20.4855217Z                      df: pd.DataFrame,
2025-08-18T13:06:20.4855656Z                      target_table: str,
2025-08-18T13:06:20.4856064Z                      *,
2025-08-18T13:06:20.4856452Z                      target_schema: Optional[str] = None,
2025-08-18T13:06:20.4856953Z                      columns: Sequence[str],
2025-08-18T13:06:20.4857487Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T13:06:20.4858040Z                      analyze_after: bool = False,
2025-08-18T13:06:20.4858532Z                      connection: Any | None = None) -> int
2025-08-18T13:06:20.4858969Z ```
2025-08-18T13:06:20.4859137Z 
2025-08-18T13:06:20.4859410Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T13:06:20.4859848Z 
2025-08-18T13:06:20.4860028Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T13:06:20.4860373Z 
2025-08-18T13:06:20.4860545Z # ingest.tests.test\_smoke
2025-08-18T13:06:20.4860792Z 
2025-08-18T13:06:20.4860944Z <a id="ingest.tests"></a>
2025-08-18T13:06:20.4861185Z 
2025-08-18T13:06:20.4861303Z # ingest.tests
2025-08-18T13:06:20.4861509Z 
2025-08-18T13:06:20.4861666Z <a id="ingest.upload_router"></a>
2025-08-18T13:06:20.4861954Z 
2025-08-18T13:06:20.4862104Z # ingest.upload\_router
2025-08-18T13:06:20.4862334Z 
2025-08-18T13:06:20.4862488Z <a id="ingest.email_watcher"></a>
2025-08-18T13:06:20.4862763Z 
2025-08-18T13:06:20.4862898Z # ingest.email\_watcher
2025-08-18T13:06:20.4863132Z 
2025-08-18T13:06:20.4863530Z <a id="ingest.email_watcher.main"></a>
2025-08-18T13:06:20.4863842Z 
2025-08-18T13:06:20.4863955Z #### main
2025-08-18T13:06:20.4864120Z 
2025-08-18T13:06:20.4864235Z ```python
2025-08-18T13:06:20.4864542Z def main() -> dict[str, str]
2025-08-18T13:06:20.4864889Z ```
2025-08-18T13:06:20.4865237Z 
2025-08-18T13:06:20.4865498Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T13:06:20.4865916Z 
2025-08-18T13:06:20.4866162Z Returns {"status": "success"} when processing completes.
2025-08-18T13:06:20.4866546Z 
2025-08-18T13:06:20.4866688Z <a id="ingest.tasks"></a>
2025-08-18T13:06:20.4866927Z 
2025-08-18T13:06:20.4867043Z # ingest.tasks
2025-08-18T13:06:20.4867225Z 
2025-08-18T13:06:20.4867406Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T13:06:20.4867730Z 
2025-08-18T13:06:20.4867860Z #### task\_import\_file
2025-08-18T13:06:20.4868070Z 
2025-08-18T13:06:20.4868187Z ```python
2025-08-18T13:06:20.4868570Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T13:06:20.4869368Z def task_import_file(self,
2025-08-18T13:06:20.4869739Z                      uri: str,
2025-08-18T13:06:20.4870159Z                      report_type: Optional[str] = None,
2025-08-18T13:06:20.4870669Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T13:06:20.4871110Z ```
2025-08-18T13:06:20.4871262Z 
2025-08-18T13:06:20.4871514Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T13:06:20.4871912Z 
2025-08-18T13:06:20.4872062Z <a id="ingest.celery_app"></a>
2025-08-18T13:06:20.4872329Z 
2025-08-18T13:06:20.4872456Z # ingest.celery\_app
2025-08-18T13:06:20.4872667Z 
2025-08-18T13:06:20.4872818Z <a id="ingest.ingest_router"></a>
2025-08-18T13:06:20.4873106Z 
2025-08-18T13:06:20.4873241Z # ingest.ingest\_router
2025-08-18T13:06:20.4873460Z 
2025-08-18T13:06:20.4873601Z <a id="logistics_etl"></a>
2025-08-18T13:06:20.4873840Z 
2025-08-18T13:06:20.4873960Z # logistics\_etl
2025-08-18T13:06:20.4874157Z 
2025-08-18T13:06:20.4874290Z Daily logistics ETL job.
2025-08-18T13:06:20.4874545Z 
2025-08-18T13:06:20.4874697Z <a id="logistics_etl.__main__"></a>
2025-08-18T13:06:20.4875189Z 
2025-08-18T13:06:20.4875335Z # logistics\_etl.\_\_main\_\_
2025-08-18T13:06:20.4875598Z 
2025-08-18T13:06:20.4875758Z <a id="logistics_etl.dsn"></a>
2025-08-18T13:06:20.4876026Z 
2025-08-18T13:06:20.4876159Z # logistics\_etl.dsn
2025-08-18T13:06:20.4876405Z 
2025-08-18T13:06:20.4876625Z Local DSN builder to avoid cross-service dependency.
2025-08-18T13:06:20.4877007Z 
2025-08-18T13:06:20.4877178Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T13:06:20.4877499Z 
2025-08-18T13:06:20.4877629Z #### build\_dsn
2025-08-18T13:06:20.4877810Z 
2025-08-18T13:06:20.4877925Z ```python
2025-08-18T13:06:20.4878252Z def build_dsn(sync: bool = True) -> str
2025-08-18T13:06:20.4878651Z ```
2025-08-18T13:06:20.4878806Z 
2025-08-18T13:06:20.4879076Z Return a Postgres DSN assembled from environment variables.
2025-08-18T13:06:20.4879496Z 
2025-08-18T13:06:20.4879772Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T13:06:20.4880533Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T13:06:20.4881319Z error when any required variable is missing.
2025-08-18T13:06:20.4881666Z 
2025-08-18T13:06:20.4881843Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T13:06:20.4882174Z 
2025-08-18T13:06:20.4882345Z # logistics\_etl.tests.conftest
2025-08-18T13:06:20.4882614Z 
2025-08-18T13:06:20.4882806Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T13:06:20.4883168Z 
2025-08-18T13:06:20.4883340Z # logistics\_etl.tests.test\_repository
2025-08-18T13:06:20.4883652Z 
2025-08-18T13:06:20.4883834Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T13:06:20.4884159Z 
2025-08-18T13:06:20.4884314Z # logistics\_etl.tests.test\_cron
2025-08-18T13:06:20.4884601Z 
2025-08-18T13:06:20.4884795Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T13:06:20.4885478Z 
2025-08-18T13:06:20.4885650Z # logistics\_etl.tests.test\_imports
2025-08-18T13:06:20.4886239Z 
2025-08-18T13:06:20.4886432Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T13:06:20.4886760Z 
2025-08-18T13:06:20.4886929Z # logistics\_etl.tests.test\_smoke
2025-08-18T13:06:20.4887220Z 
2025-08-18T13:06:20.4887399Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T13:06:20.4887728Z 
2025-08-18T13:06:20.4887899Z # logistics\_etl.tests.test\_client
2025-08-18T13:06:20.4888193Z 
2025-08-18T13:06:20.4888345Z <a id="logistics_etl.tests"></a>
2025-08-18T13:06:20.4888626Z 
2025-08-18T13:06:20.4888759Z # logistics\_etl.tests
2025-08-18T13:06:20.4888980Z 
2025-08-18T13:06:20.4889131Z <a id="logistics_etl.flow"></a>
2025-08-18T13:06:20.4889387Z 
2025-08-18T13:06:20.4889518Z # logistics\_etl.flow
2025-08-18T13:06:20.4889734Z 
2025-08-18T13:06:20.4889892Z <a id="logistics_etl.client"></a>
2025-08-18T13:06:20.4890176Z 
2025-08-18T13:06:20.4890313Z # logistics\_etl.client
2025-08-18T13:06:20.4890548Z 
2025-08-18T13:06:20.4890695Z <a id="logistics_etl.cron"></a>
2025-08-18T13:06:20.4891220Z 
2025-08-18T13:06:20.4891368Z # logistics\_etl.cron
2025-08-18T13:06:20.4891643Z 
2025-08-18T13:06:20.4891789Z <a id="logistics_etl.db"></a>
2025-08-18T13:06:20.4892053Z 
2025-08-18T13:06:20.4892192Z # logistics\_etl.db
2025-08-18T13:06:20.4892397Z 
2025-08-18T13:06:20.4892562Z <a id="logistics_etl.repository"></a>
2025-08-18T13:06:20.4892888Z 
2025-08-18T13:06:20.4893040Z # logistics\_etl.repository
2025-08-18T13:06:20.4893305Z 
2025-08-18T13:06:20.4893441Z <a id="alert_bot"></a>
2025-08-18T13:06:20.4893674Z 
2025-08-18T13:06:20.4893798Z # alert\_bot
2025-08-18T13:06:20.4893982Z 
2025-08-18T13:06:20.4894157Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T13:06:20.4894481Z 
2025-08-18T13:06:20.4894633Z # alert\_bot.tests.test\_smoke
2025-08-18T13:06:20.4894902Z 
2025-08-18T13:06:20.4895243Z <a id="alert_bot.tests"></a>
2025-08-18T13:06:20.4895506Z 
2025-08-18T13:06:20.4895631Z # alert\_bot.tests
2025-08-18T13:06:20.4895838Z 
2025-08-18T13:06:20.4895990Z <a id="alert_bot.alert_bot"></a>
2025-08-18T13:06:20.4896278Z 
2025-08-18T13:06:20.4896423Z # alert\_bot.alert\_bot
2025-08-18T13:06:20.4896648Z 
2025-08-18T13:06:20.4896792Z <a id="alert_bot.rules"></a>
2025-08-18T13:06:20.4897060Z 
2025-08-18T13:06:20.4897190Z # alert\_bot.rules
2025-08-18T13:06:20.4897394Z 
2025-08-18T13:06:20.4897514Z <a id="common"></a>
2025-08-18T13:06:20.4897718Z 
2025-08-18T13:06:20.4897828Z # common
2025-08-18T13:06:20.4897982Z 
2025-08-18T13:06:20.4898116Z <a id="common.dsn"></a>
2025-08-18T13:06:20.4898331Z 
2025-08-18T13:06:20.4898438Z # common.dsn
2025-08-18T13:06:20.4898611Z 
2025-08-18T13:06:20.4898765Z <a id="common.dsn.build_dsn"></a>
2025-08-18T13:06:20.4899038Z 
2025-08-18T13:06:20.4899153Z #### build\_dsn
2025-08-18T13:06:20.4899343Z 
2025-08-18T13:06:20.4899459Z ```python
2025-08-18T13:06:20.4899786Z def build_dsn(sync: bool = True) -> str
2025-08-18T13:06:20.4900209Z ```
2025-08-18T13:06:20.4900362Z 
2025-08-18T13:06:20.4900573Z Return a Postgres DSN, validating required variables.
2025-08-18T13:06:20.4900947Z 
2025-08-18T13:06:20.4901310Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T13:06:20.4902169Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T13:06:20.4902960Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T13:06:20.4925675Z missing.
2025-08-18T13:06:20.4925874Z 
2025-08-18T13:06:20.4926029Z <a id="common.models_vendor"></a>
2025-08-18T13:06:20.4926313Z 
2025-08-18T13:06:20.4926449Z # common.models\_vendor
2025-08-18T13:06:20.4926669Z 
2025-08-18T13:06:20.4926835Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T13:06:20.4927148Z 
2025-08-18T13:06:20.4927264Z ## Vendor Objects
2025-08-18T13:06:20.4927447Z 
2025-08-18T13:06:20.4927628Z ```python
2025-08-18T13:06:20.4927898Z class Vendor(Base)
2025-08-18T13:06:20.4928196Z ```
2025-08-18T13:06:20.4928342Z 
2025-08-18T13:06:20.4928484Z Vendor of inventory items.
2025-08-18T13:06:20.4928733Z 
2025-08-18T13:06:20.4928918Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T13:06:20.4929492Z 
2025-08-18T13:06:20.4929628Z ## VendorPrice Objects
2025-08-18T13:06:20.4929845Z 
2025-08-18T13:06:20.4929953Z ```python
2025-08-18T13:06:20.4930245Z class VendorPrice(Base)
2025-08-18T13:06:20.4930559Z ```
2025-08-18T13:06:20.4930704Z 
2025-08-18T13:06:20.4930894Z Association table linking vendors to pricing.
2025-08-18T13:06:20.4931221Z 
2025-08-18T13:06:20.4931354Z <a id="common.db_url"></a>
2025-08-18T13:06:20.4931594Z 
2025-08-18T13:06:20.4931703Z # common.db\_url
2025-08-18T13:06:20.4931874Z 
2025-08-18T13:06:20.4932093Z <a id="common.db_url.build_url"></a>
2025-08-18T13:06:20.4932376Z 
2025-08-18T13:06:20.4932481Z #### build\_url
2025-08-18T13:06:20.4932650Z 
2025-08-18T13:06:20.4932752Z ```python
2025-08-18T13:06:20.4933023Z def build_url(async_: bool = True) -> str
2025-08-18T13:06:20.4933378Z ```
2025-08-18T13:06:20.4933505Z 
2025-08-18T13:06:20.4933654Z Return Postgres DSN from env or PG_* parts.
2025-08-18T13:06:20.4933938Z 
2025-08-18T13:06:20.4934242Z <a id="common.keepa"></a>
2025-08-18T13:06:20.4934480Z 
2025-08-18T13:06:20.4934604Z # common.keepa
2025-08-18T13:06:20.4934785Z 
2025-08-18T13:06:20.4934916Z <a id="common.llm"></a>
2025-08-18T13:06:20.4935323Z 
2025-08-18T13:06:20.4935449Z # common.llm
2025-08-18T13:06:20.4935629Z 
2025-08-18T13:06:20.4935764Z <a id="common.settings"></a>
2025-08-18T13:06:20.4936011Z 
2025-08-18T13:06:20.4936127Z # common.settings
2025-08-18T13:06:20.4936325Z 
2025-08-18T13:06:20.4936463Z <a id="common.db"></a>
2025-08-18T13:06:20.4936681Z 
2025-08-18T13:06:20.4936795Z # common.db
2025-08-18T13:06:20.4936956Z 
2025-08-18T13:06:20.4937131Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T13:06:20.4937454Z 
2025-08-18T13:06:20.4937591Z #### build\_sqlalchemy\_url
2025-08-18T13:06:20.4937842Z 
2025-08-18T13:06:20.4937957Z ```python
2025-08-18T13:06:20.4938262Z def build_sqlalchemy_url() -> str
2025-08-18T13:06:20.4938632Z ```
2025-08-18T13:06:20.4938779Z 
2025-08-18T13:06:20.4938954Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T13:06:20.4939278Z 
2025-08-18T13:06:20.4939435Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T13:06:20.4939731Z 
2025-08-18T13:06:20.4939869Z #### build\_asyncpg\_dsn
2025-08-18T13:06:20.4940089Z 
2025-08-18T13:06:20.4940199Z ```python
2025-08-18T13:06:20.4940495Z def build_asyncpg_dsn() -> str
2025-08-18T13:06:20.4940829Z ```
2025-08-18T13:06:20.4940975Z 
2025-08-18T13:06:20.4941191Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T13:06:20.4941570Z 
2025-08-18T13:06:20.4941730Z <a id="common.db.refresh_mvs"></a>
2025-08-18T13:06:20.4942004Z 
2025-08-18T13:06:20.4942118Z #### refresh\_mvs
2025-08-18T13:06:20.4942313Z 
2025-08-18T13:06:20.4942425Z ```python
2025-08-18T13:06:20.4942781Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T13:06:20.4943235Z ```
2025-08-18T13:06:20.4943386Z 
2025-08-18T13:06:20.4943629Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T13:06:20.4944029Z 
2025-08-18T13:06:20.4944159Z <a id="common.config"></a>
2025-08-18T13:06:20.4944407Z 
2025-08-18T13:06:20.4944530Z # common.config
2025-08-18T13:06:20.4944706Z 
2025-08-18T13:06:20.4944831Z <a id="common.base"></a>
2025-08-18T13:06:20.4945231Z 
2025-08-18T13:06:20.4945346Z # common.base
2025-08-18T13:06:20.4945519Z 
2025-08-18T13:06:20.4945655Z <a id="common.base.Base"></a>
2025-08-18T13:06:20.4945906Z 
2025-08-18T13:06:20.4946024Z ## Base Objects
2025-08-18T13:06:20.4946207Z 
2025-08-18T13:06:20.4946328Z ```python
2025-08-18T13:06:20.4946626Z class Base(DeclarativeBase)
2025-08-18T13:06:20.4946977Z ```
2025-08-18T13:06:20.4947125Z 
2025-08-18T13:06:20.4947275Z Base class for SQLAlchemy models.
2025-08-18T13:06:20.4947541Z 
2025-08-18T13:06:20.4947665Z <a id="repricer"></a>
2025-08-18T13:06:20.4947879Z 
2025-08-18T13:06:20.4947992Z # repricer
2025-08-18T13:06:20.4948159Z 
2025-08-18T13:06:20.4948300Z <a id="repricer.app.schemas"></a>
2025-08-18T13:06:20.4948623Z 
2025-08-18T13:06:20.4948766Z # repricer.app.schemas
2025-08-18T13:06:20.4948968Z 
2025-08-18T13:06:20.4949326Z <a id="repricer.app.deps"></a>
2025-08-18T13:06:20.4949580Z 
2025-08-18T13:06:20.4949697Z # repricer.app.deps
2025-08-18T13:06:20.4949887Z 
2025-08-18T13:06:20.4950090Z Placeholder module for Keepa / SP-API clients.
2025-08-18T13:06:20.4950439Z 
2025-08-18T13:06:20.4950582Z <a id="repricer.app.logic"></a>
2025-08-18T13:06:20.4950833Z 
2025-08-18T13:06:20.4950973Z # repricer.app.logic
2025-08-18T13:06:20.4951187Z 
2025-08-18T13:06:20.4951365Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T13:06:20.4951693Z 
2025-08-18T13:06:20.4951806Z #### MIN\_MARGIN
2025-08-18T13:06:20.4951993Z 
2025-08-18T13:06:20.4952101Z 15 % ROI
2025-08-18T13:06:20.4952260Z 
2025-08-18T13:06:20.4952441Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T13:06:20.4952770Z 
2025-08-18T13:06:20.4952899Z #### compute\_price
2025-08-18T13:06:20.4953091Z 
2025-08-18T13:06:20.4953197Z ```python
2025-08-18T13:06:20.4953645Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T13:06:20.4954363Z ```
2025-08-18T13:06:20.4954532Z 
2025-08-18T13:06:20.4954726Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T13:06:20.4955426Z Replace with real competitive logic later.
2025-08-18T13:06:20.4955756Z 
2025-08-18T13:06:20.4955906Z <a id="repricer.app.main"></a>
2025-08-18T13:06:20.4956166Z 
2025-08-18T13:06:20.4956309Z # repricer.app.main
2025-08-18T13:06:20.4956505Z 
2025-08-18T13:06:20.4956641Z <a id="repricer.app"></a>
2025-08-18T13:06:20.4956880Z 
2025-08-18T13:06:20.4957010Z # repricer.app
2025-08-18T13:06:20.4957193Z 
2025-08-18T13:06:20.4957358Z <a id="repricer.tests.test_imports"></a>
2025-08-18T13:06:20.4957679Z 
2025-08-18T13:06:20.4957820Z # repricer.tests.test\_imports
2025-08-18T13:06:20.4958080Z 
2025-08-18T13:06:20.4958292Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T13:06:20.4958704Z 
2025-08-18T13:06:20.4958852Z # repricer.tests.test\_smoke
2025-08-18T13:06:20.4959111Z 
2025-08-18T13:06:20.4959256Z <a id="repricer.tests"></a>
2025-08-18T13:06:20.4959501Z 
2025-08-18T13:06:20.4959636Z # repricer.tests
2025-08-18T13:06:20.4959831Z 
2025-08-18T13:06:20.4959943Z <a id="db"></a>
2025-08-18T13:06:20.4960121Z 
2025-08-18T13:06:20.4960223Z # db
2025-08-18T13:06:20.4960378Z 
2025-08-18T13:06:20.4960515Z <a id="db.utils.views"></a>
2025-08-18T13:06:20.4960750Z 
2025-08-18T13:06:20.4960868Z # db.utils.views
2025-08-18T13:06:20.4961052Z 
2025-08-18T13:06:20.4961214Z <a id="db.utils.views.replace_view"></a>
2025-08-18T13:06:20.4961532Z 
2025-08-18T13:06:20.4961655Z #### replace\_view
2025-08-18T13:06:20.4961853Z 
2025-08-18T13:06:20.4961964Z ```python
2025-08-18T13:06:20.4962308Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T13:06:20.4962765Z ```
2025-08-18T13:06:20.4962920Z 
2025-08-18T13:06:20.4963085Z Drop and recreate a SQL view atomically.
2025-08-18T13:06:20.4963396Z 
2025-08-18T13:06:20.4963534Z <a id="db.utils"></a>
2025-08-18T13:06:20.4963749Z 
2025-08-18T13:06:20.4963862Z # db.utils
2025-08-18T13:06:20.4964035Z 
2025-08-18T13:06:20.4964177Z <a id="price_importer"></a>
2025-08-18T13:06:20.4964440Z 
2025-08-18T13:06:20.4964558Z # price\_importer
2025-08-18T13:06:20.4964749Z 
2025-08-18T13:06:20.4964936Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T13:06:20.4965486Z 
2025-08-18T13:06:20.4965658Z # price\_importer.services\_common.dsn
2025-08-18T13:06:20.4965948Z 
2025-08-18T13:06:20.4966172Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T13:06:20.4966551Z 
2025-08-18T13:06:20.4966662Z #### build\_dsn
2025-08-18T13:06:20.4966836Z 
2025-08-18T13:06:20.4966944Z ```python
2025-08-18T13:06:20.4967245Z def build_dsn(sync: bool = True) -> str
2025-08-18T13:06:20.4967674Z ```
2025-08-18T13:06:20.4967832Z 
2025-08-18T13:06:20.4967953Z Return safe DSN.
2025-08-18T13:06:20.4968150Z 
2025-08-18T13:06:20.4968669Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T13:06:20.4969037Z 
2025-08-18T13:06:20.4969262Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T13:06:20.4969658Z 
2025-08-18T13:06:20.4969867Z # price\_importer.services\_common.models\_vendor
2025-08-18T13:06:20.4970554Z 
2025-08-18T13:06:20.4970774Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T13:06:20.4971132Z 
2025-08-18T13:06:20.4971309Z # price\_importer.services\_common.db\_url
2025-08-18T13:06:20.4971633Z 
2025-08-18T13:06:20.4971896Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T13:06:20.4972313Z 
2025-08-18T13:06:20.4972440Z #### build\_url
2025-08-18T13:06:20.4972639Z 
2025-08-18T13:06:20.4972758Z ```python
2025-08-18T13:06:20.4973087Z def build_url(async_: bool = True) -> str
2025-08-18T13:06:20.4973506Z ```
2025-08-18T13:06:20.4973665Z 
2025-08-18T13:06:20.4973854Z Return Postgres DSN from env or PG_* parts.
2025-08-18T13:06:20.4974188Z 
2025-08-18T13:06:20.4974392Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T13:06:20.4974752Z 
2025-08-18T13:06:20.4974928Z # price\_importer.services\_common.keepa
2025-08-18T13:06:20.4975447Z 
2025-08-18T13:06:20.4975643Z <a id="price_importer.services_common.llm"></a>
2025-08-18T13:06:20.4976219Z 
2025-08-18T13:06:20.4976379Z # price\_importer.services\_common.llm
2025-08-18T13:06:20.4976680Z 
2025-08-18T13:06:20.4976902Z <a id="price_importer.services_common.settings"></a>
2025-08-18T13:06:20.4977263Z 
2025-08-18T13:06:20.4977438Z # price\_importer.services\_common.settings
2025-08-18T13:06:20.4977767Z 
2025-08-18T13:06:20.4977952Z <a id="price_importer.services_common.db"></a>
2025-08-18T13:06:20.4978286Z 
2025-08-18T13:06:20.4978451Z # price\_importer.services\_common.db
2025-08-18T13:06:20.4978754Z 
2025-08-18T13:06:20.4979057Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T13:06:20.4979503Z 
2025-08-18T13:06:20.4979663Z #### build\_sqlalchemy\_url
2025-08-18T13:06:20.4979911Z 
2025-08-18T13:06:20.4980024Z ```python
2025-08-18T13:06:20.4980350Z def build_sqlalchemy_url() -> str
2025-08-18T13:06:20.4980740Z ```
2025-08-18T13:06:20.4980907Z 
2025-08-18T13:06:20.4981089Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T13:06:20.4981436Z 
2025-08-18T13:06:20.4981719Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T13:06:20.4982163Z 
2025-08-18T13:06:20.4982310Z #### build\_asyncpg\_dsn
2025-08-18T13:06:20.4982556Z 
2025-08-18T13:06:20.4982687Z ```python
2025-08-18T13:06:20.4983001Z def build_asyncpg_dsn() -> str
2025-08-18T13:06:20.4983426Z ```
2025-08-18T13:06:20.4983578Z 
2025-08-18T13:06:20.4983814Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T13:06:20.4984212Z 
2025-08-18T13:06:20.4984446Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T13:06:20.4984844Z 
2025-08-18T13:06:20.4985280Z #### refresh\_mvs
2025-08-18T13:06:20.4985496Z 
2025-08-18T13:06:20.4985610Z ```python
2025-08-18T13:06:20.4985977Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T13:06:20.4986436Z ```
2025-08-18T13:06:20.4986598Z 
2025-08-18T13:06:20.4986849Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T13:06:20.4987252Z 
2025-08-18T13:06:20.4987461Z <a id="price_importer.services_common"></a>
2025-08-18T13:06:20.4987790Z 
2025-08-18T13:06:20.4987939Z # price\_importer.services\_common
2025-08-18T13:06:20.4988225Z 
2025-08-18T13:06:20.4988425Z <a id="price_importer.services_common.base"></a>
2025-08-18T13:06:20.4988771Z 
2025-08-18T13:06:20.4988935Z # price\_importer.services\_common.base
2025-08-18T13:06:20.4989251Z 
2025-08-18T13:06:20.4989424Z <a id="price_importer.normaliser"></a>
2025-08-18T13:06:20.4989737Z 
2025-08-18T13:06:20.4989903Z # price\_importer.normaliser
2025-08-18T13:06:20.4990170Z 
2025-08-18T13:06:20.4990364Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T13:06:20.4990715Z 
2025-08-18T13:06:20.4990885Z # price\_importer.common.models\_vendor
2025-08-18T13:06:20.4991200Z 
2025-08-18T13:06:20.4991370Z <a id="price_importer.common.db_url"></a>
2025-08-18T13:06:20.4991695Z 
2025-08-18T13:06:20.4991851Z # price\_importer.common.db\_url
2025-08-18T13:06:20.4992126Z 
2025-08-18T13:06:20.4992334Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T13:06:20.4992947Z 
2025-08-18T13:06:20.4993068Z #### make\_dsn
2025-08-18T13:06:20.4993254Z 
2025-08-18T13:06:20.4993379Z ```python
2025-08-18T13:06:20.4993707Z def make_dsn(async_: bool = False) -> str
2025-08-18T13:06:20.4994143Z ```
2025-08-18T13:06:20.4994297Z 
2025-08-18T13:06:20.4994527Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T13:06:20.4994916Z 
2025-08-18T13:06:20.4995440Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T13:06:20.4995819Z 
2025-08-18T13:06:20.4995961Z #### build\_url
2025-08-18T13:06:20.4996160Z 
2025-08-18T13:06:20.4996280Z ```python
2025-08-18T13:06:20.4996624Z def build_url(async_: bool = False) -> str
2025-08-18T13:06:20.4997054Z ```
2025-08-18T13:06:20.4997222Z 
2025-08-18T13:06:20.4997458Z Return Postgres DSN built from environment variables.
2025-08-18T13:06:20.4997843Z 
2025-08-18T13:06:20.4998005Z <a id="price_importer.common"></a>
2025-08-18T13:06:20.4998302Z 
2025-08-18T13:06:20.4998447Z # price\_importer.common
2025-08-18T13:06:20.4998957Z 
2025-08-18T13:06:20.4999134Z <a id="price_importer.common.base"></a>
2025-08-18T13:06:20.4999454Z 
2025-08-18T13:06:20.4999618Z # price\_importer.common.base
2025-08-18T13:06:20.4999898Z 
2025-08-18T13:06:20.5000080Z <a id="price_importer.tests.conftest"></a>
2025-08-18T13:06:20.5000411Z 
2025-08-18T13:06:20.5000569Z # price\_importer.tests.conftest
2025-08-18T13:06:20.5000862Z 
2025-08-18T13:06:20.5001054Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T13:06:20.5001432Z 
2025-08-18T13:06:20.5001651Z # price\_importer.tests.test\_reader
2025-08-18T13:06:20.5001961Z 
2025-08-18T13:06:20.5002164Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T13:06:20.5002518Z 
2025-08-18T13:06:20.5002715Z # price\_importer.tests.test\_imports
2025-08-18T13:06:20.5003050Z 
2025-08-18T13:06:20.5003249Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T13:06:20.5003594Z 
2025-08-18T13:06:20.5003825Z # price\_importer.tests.test\_smoke
2025-08-18T13:06:20.5004156Z 
2025-08-18T13:06:20.5004379Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T13:06:20.5004739Z 
2025-08-18T13:06:20.5004909Z # price\_importer.tests.test\_normaliser
2025-08-18T13:06:20.5005429Z 
2025-08-18T13:06:20.5005593Z <a id="price_importer.tests"></a>
2025-08-18T13:06:20.5005886Z 
2025-08-18T13:06:20.5006023Z # price\_importer.tests
2025-08-18T13:06:20.5006257Z 
2025-08-18T13:06:20.5006469Z <a id="price_importer.reader"></a>
2025-08-18T13:06:20.5006776Z 
2025-08-18T13:06:20.5006923Z # price\_importer.reader
2025-08-18T13:06:20.5007160Z 
2025-08-18T13:06:20.5007328Z <a id="price_importer.repository"></a>
2025-08-18T13:06:20.5007648Z 
2025-08-18T13:06:20.5007797Z # price\_importer.repository
2025-08-18T13:06:20.5008052Z 
2025-08-18T13:06:20.5008213Z <a id="price_importer.import"></a>
2025-08-18T13:06:20.5008508Z 
2025-08-18T13:06:20.5008660Z # price\_importer.import
2025-08-18T13:06:20.5008902Z 
2025-08-18T13:06:20.5009048Z <a id="fees_h10"></a>
2025-08-18T13:06:20.5009293Z 
2025-08-18T13:06:20.5009432Z # fees\_h10
2025-08-18T13:06:20.5009602Z 
2025-08-18T13:06:20.5009752Z <a id="fees_h10.worker"></a>
2025-08-18T13:06:20.5010008Z 
2025-08-18T13:06:20.5010139Z # fees\_h10.worker
2025-08-18T13:06:20.5010355Z 
2025-08-18T13:06:20.5010548Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T13:06:20.5010907Z 
2025-08-18T13:06:20.5011054Z #### list\_active\_asins
2025-08-18T13:06:20.5011281Z 
2025-08-18T13:06:20.5011400Z ```python
2025-08-18T13:06:20.5011718Z def list_active_asins() -> list[str]
2025-08-18T13:06:20.5012146Z ```
2025-08-18T13:06:20.5012310Z 
2025-08-18T13:06:20.5012522Z Return known ASINs or an empty list if unavailable.
2025-08-18T13:06:20.5012892Z 
2025-08-18T13:06:20.5013050Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T13:06:20.5013359Z 
2025-08-18T13:06:20.5013506Z # fees\_h10.tests.test\_smoke
2025-08-18T13:06:20.5013764Z 
2025-08-18T13:06:20.5013916Z <a id="fees_h10.tests"></a>
2025-08-18T13:06:20.5014158Z 
2025-08-18T13:06:20.5014280Z # fees\_h10.tests
2025-08-18T13:06:20.5014752Z 
2025-08-18T13:06:20.5014900Z <a id="fees_h10.client"></a>
2025-08-18T13:06:20.5015357Z 
2025-08-18T13:06:20.5015478Z # fees\_h10.client
2025-08-18T13:06:20.5015728Z 
2025-08-18T13:06:20.5015877Z <a id="fees_h10.repository"></a>
2025-08-18T13:06:20.5016151Z 
2025-08-18T13:06:20.5016295Z # fees\_h10.repository
2025-08-18T13:06:20.5016518Z 
2025-08-18T13:06:20.5016650Z <a id="emailer"></a>
2025-08-18T13:06:20.5016861Z 
2025-08-18T13:06:20.5016985Z # emailer
2025-08-18T13:06:20.5017156Z 
2025-08-18T13:06:20.5017336Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T13:06:20.5017551Z 
2025-08-18T13:06:20.5017645Z # emailer.tests.test\_import\_emailer
2025-08-18T13:06:20.5017810Z 
2025-08-18T13:06:20.5017901Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T13:06:20.5018056Z 
2025-08-18T13:06:20.5018136Z # emailer.tests.test\_smoke
2025-08-18T13:06:20.5018276Z 
2025-08-18T13:06:20.5018364Z <a id="emailer.tests"></a>
2025-08-18T13:06:20.5018500Z 
2025-08-18T13:06:20.5018572Z # emailer.tests
2025-08-18T13:06:20.5019154Z 
2025-08-18T13:06:20.5019254Z <a id="emailer.generate_body"></a>
2025-08-18T13:06:20.5019418Z 
2025-08-18T13:06:20.5019503Z # emailer.generate\_body
2025-08-18T13:06:20.5019634Z 
2025-08-18T13:06:20.5019709Z <a id="llm_server"></a>
2025-08-18T13:06:20.5019829Z 
2025-08-18T13:06:20.5019901Z # llm\_server
2025-08-18T13:06:20.5020000Z 
2025-08-18T13:06:20.5020081Z <a id="llm_server.app"></a>
2025-08-18T13:06:20.5020221Z 
2025-08-18T13:06:20.5020290Z # llm\_server.app
2025-08-18T13:06:20.5020397Z 
