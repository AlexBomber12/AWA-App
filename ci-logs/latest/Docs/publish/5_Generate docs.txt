2025-08-19T14:45:47.0975603Z ##[group]Run pydoc-markdown
2025-08-19T14:45:47.0976003Z [36;1mpydoc-markdown[0m
2025-08-19T14:45:47.1024765Z shell: /usr/bin/bash -e {0}
2025-08-19T14:45:47.1024989Z env:
2025-08-19T14:45:47.1025221Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:45:47.1025634Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T14:45:47.1026016Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:45:47.1026346Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:45:47.1026789Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:45:47.1027376Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T14:45:47.1027852Z ##[endgroup]
2025-08-19T14:45:47.5712311Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T14:45:47.5712979Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T14:45:47.5713300Z In "pydoc-markdown.yml"
2025-08-19T14:45:47.5713591Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T14:45:47.5714102Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T14:45:47.5714617Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T14:45:47.5714966Z 
2025-08-19T14:45:47.9110217Z <a id="__init__"></a>
2025-08-19T14:45:47.9110787Z 
2025-08-19T14:45:47.9110935Z # \_\_init\_\_
2025-08-19T14:45:47.9111148Z 
2025-08-19T14:45:47.9111286Z <a id="api"></a>
2025-08-19T14:45:47.9111503Z 
2025-08-19T14:45:47.9111624Z # api
2025-08-19T14:45:47.9111808Z 
2025-08-19T14:45:47.9111978Z <a id="api.errors"></a>
2025-08-19T14:45:47.9112253Z 
2025-08-19T14:45:47.9112366Z # api.errors
2025-08-19T14:45:47.9112503Z 
2025-08-19T14:45:47.9112620Z <a id="api.sentry_config"></a>
2025-08-19T14:45:47.9112825Z 
2025-08-19T14:45:47.9112981Z # api.sentry\_config
2025-08-19T14:45:47.9113238Z 
2025-08-19T14:45:47.9113442Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T14:45:47.9113812Z 
2025-08-19T14:45:47.9114006Z # api.tests.test\_stats\_contracts
2025-08-19T14:45:47.9114382Z 
2025-08-19T14:45:47.9114575Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T14:45:47.9114930Z 
2025-08-19T14:45:47.9115105Z # api.tests.test\_sentry\_scrub
2025-08-19T14:45:47.9115417Z 
2025-08-19T14:45:47.9115611Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T14:45:47.9115971Z 
2025-08-19T14:45:47.9116145Z # api.tests.test\_roi\_basic\_auth
2025-08-19T14:45:47.9116471Z 
2025-08-19T14:45:47.9116651Z <a id="api.tests.test_errors_json"></a>
2025-08-19T14:45:47.9116995Z 
2025-08-19T14:45:47.9117159Z # api.tests.test\_errors\_json
2025-08-19T14:45:47.9117356Z 
2025-08-19T14:45:47.9117482Z <a id="api.tests.test_llm"></a>
2025-08-19T14:45:47.9117809Z 
2025-08-19T14:45:47.9117963Z # api.tests.test\_llm
2025-08-19T14:45:47.9118210Z 
2025-08-19T14:45:47.9118354Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T14:45:47.9118630Z 
2025-08-19T14:45:47.9119045Z # api.tests.test\_roi\_filters
2025-08-19T14:45:47.9119233Z 
2025-08-19T14:45:47.9119339Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T14:45:47.9119868Z 
2025-08-19T14:45:47.9119957Z # api.tests.test\_sentry\_event
2025-08-19T14:45:47.9120115Z 
2025-08-19T14:45:47.9120250Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T14:45:47.9120475Z 
2025-08-19T14:45:47.9120558Z ## DummyTransport Objects
2025-08-19T14:45:47.9120707Z 
2025-08-19T14:45:47.9120785Z ```python
2025-08-19T14:45:47.9120973Z class DummyTransport()
2025-08-19T14:45:47.9121167Z ```
2025-08-19T14:45:47.9121258Z 
2025-08-19T14:45:47.9121456Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T14:45:47.9121744Z 
2025-08-19T14:45:47.9121823Z #### capture\_envelope
2025-08-19T14:45:47.9121954Z 
2025-08-19T14:45:47.9122023Z ```python
2025-08-19T14:45:47.9122210Z def capture_envelope(envelope)
2025-08-19T14:45:47.9122433Z ```
2025-08-19T14:45:47.9122522Z 
2025-08-19T14:45:47.9122662Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T14:45:47.9122885Z 
2025-08-19T14:45:47.9122974Z <a id="api.tests.test_cors"></a>
2025-08-19T14:45:47.9123339Z 
2025-08-19T14:45:47.9123425Z # api.tests.test\_cors
2025-08-19T14:45:47.9123551Z 
2025-08-19T14:45:47.9123641Z <a id="api.tests.test_imports"></a>
2025-08-19T14:45:47.9123820Z 
2025-08-19T14:45:47.9123902Z # api.tests.test\_imports
2025-08-19T14:45:47.9124040Z 
2025-08-19T14:45:47.9124133Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T14:45:47.9124313Z 
2025-08-19T14:45:47.9124400Z # api.tests.test\_rate\_limit
2025-08-19T14:45:47.9124552Z 
2025-08-19T14:45:47.9124659Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T14:45:47.9124846Z 
2025-08-19T14:45:47.9124915Z #### app
2025-08-19T14:45:47.9125016Z 
2025-08-19T14:45:47.9125086Z noqa: E402
2025-08-19T14:45:47.9125184Z 
2025-08-19T14:45:47.9125277Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T14:45:47.9125460Z 
2025-08-19T14:45:47.9125545Z # api.tests.test\_entrypoint
2025-08-19T14:45:47.9125693Z 
2025-08-19T14:45:47.9125790Z <a id="api.tests.test_health"></a>
2025-08-19T14:45:47.9125960Z 
2025-08-19T14:45:47.9126047Z # api.tests.test\_health
2025-08-19T14:45:47.9126186Z 
2025-08-19T14:45:47.9126275Z <a id="api.tests.test_score"></a>
2025-08-19T14:45:47.9126434Z 
2025-08-19T14:45:47.9126515Z # api.tests.test\_score
2025-08-19T14:45:47.9126651Z 
2025-08-19T14:45:47.9126738Z <a id="api.logging_config"></a>
2025-08-19T14:45:47.9126890Z 
2025-08-19T14:45:47.9126975Z # api.logging\_config
2025-08-19T14:45:47.9127101Z 
2025-08-19T14:45:47.9127189Z <a id="api.migrations.env"></a>
2025-08-19T14:45:47.9127348Z 
2025-08-19T14:45:47.9127427Z # api.migrations.env
2025-08-19T14:45:47.9127551Z 
2025-08-19T14:45:47.9127676Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T14:45:47.9127899Z 
2025-08-19T14:45:47.9128016Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T14:45:47.9128222Z 
2025-08-19T14:45:47.9128347Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T14:45:47.9128560Z 
2025-08-19T14:45:47.9128842Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T14:45:47.9129077Z 
2025-08-19T14:45:47.9129231Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T14:45:47.9129467Z 
2025-08-19T14:45:47.9129603Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T14:45:47.9129825Z 
2025-08-19T14:45:47.9129945Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T14:45:47.9130144Z 
2025-08-19T14:45:47.9130255Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T14:45:47.9130436Z 
2025-08-19T14:45:47.9130552Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T14:45:47.9130754Z 
2025-08-19T14:45:47.9130854Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T14:45:47.9131032Z 
2025-08-19T14:45:47.9131152Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T14:45:47.9131357Z 
2025-08-19T14:45:47.9131464Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T14:45:47.9131652Z 
2025-08-19T14:45:47.9131773Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T14:45:47.9132127Z 
2025-08-19T14:45:47.9132243Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T14:45:47.9132529Z 
2025-08-19T14:45:47.9132657Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T14:45:47.9132865Z 
2025-08-19T14:45:47.9132971Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T14:45:47.9133148Z 
2025-08-19T14:45:47.9133282Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T14:45:47.9133502Z 
2025-08-19T14:45:47.9133619Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T14:45:47.9133812Z 
2025-08-19T14:45:47.9133937Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T14:45:47.9134136Z 
2025-08-19T14:45:47.9134240Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T14:45:47.9134431Z 
2025-08-19T14:45:47.9134564Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T14:45:47.9134774Z 
2025-08-19T14:45:47.9134888Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T14:45:47.9135223Z 
2025-08-19T14:45:47.9135331Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T14:45:47.9135517Z 
2025-08-19T14:45:47.9135616Z # api.migrations.versions.0001\_baseline
2025-08-19T14:45:47.9135784Z 
2025-08-19T14:45:47.9135873Z <a id="api.migrations.versions"></a>
2025-08-19T14:45:47.9136037Z 
2025-08-19T14:45:47.9136119Z # api.migrations.versions
2025-08-19T14:45:47.9136244Z 
2025-08-19T14:45:47.9136325Z <a id="api.migrations"></a>
2025-08-19T14:45:47.9136454Z 
2025-08-19T14:45:47.9136520Z # api.migrations
2025-08-19T14:45:47.9136638Z 
2025-08-19T14:45:47.9136709Z <a id="api.db"></a>
2025-08-19T14:45:47.9136815Z 
2025-08-19T14:45:47.9136877Z # api.db
2025-08-19T14:45:47.9136971Z 
2025-08-19T14:45:47.9137051Z <a id="api.routes.score"></a>
2025-08-19T14:45:47.9137187Z 
2025-08-19T14:45:47.9137255Z # api.routes.score
2025-08-19T14:45:47.9137362Z 
2025-08-19T14:45:47.9137438Z <a id="api.routes.stats"></a>
2025-08-19T14:45:47.9137575Z 
2025-08-19T14:45:47.9137648Z # api.routes.stats
2025-08-19T14:45:47.9137764Z 
2025-08-19T14:45:47.9137840Z <a id="api.routes.roi"></a>
2025-08-19T14:45:47.9137979Z 
2025-08-19T14:45:47.9138054Z # api.routes.roi
2025-08-19T14:45:47.9138156Z 
2025-08-19T14:45:47.9138238Z <a id="api.routes.health"></a>
2025-08-19T14:45:47.9138383Z 
2025-08-19T14:45:47.9138453Z # api.routes.health
2025-08-19T14:45:47.9138563Z 
2025-08-19T14:45:47.9138817Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T14:45:47.9139080Z 
2025-08-19T14:45:47.9139146Z #### MAX\_SKEW
2025-08-19T14:45:47.9139245Z 
2025-08-19T14:45:47.9139310Z seconds
2025-08-19T14:45:47.9139394Z 
2025-08-19T14:45:47.9139484Z <a id="api.routes.health.health"></a>
2025-08-19T14:45:47.9139650Z 
2025-08-19T14:45:47.9139710Z #### health
2025-08-19T14:45:47.9139799Z 
2025-08-19T14:45:47.9139868Z ```python
2025-08-19T14:45:47.9140061Z @router.get("/health", include_in_schema=False)
2025-08-19T14:45:47.9140468Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T14:45:47.9140800Z ```
2025-08-19T14:45:47.9140893Z 
2025-08-19T14:45:47.9141012Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T14:45:47.9141205Z 
2025-08-19T14:45:47.9141293Z <a id="api.routes.repository"></a>
2025-08-19T14:45:47.9141452Z 
2025-08-19T14:45:47.9141528Z # api.routes.repository
2025-08-19T14:45:47.9141650Z 
2025-08-19T14:45:47.9141725Z <a id="api.routes"></a>
2025-08-19T14:45:47.9141841Z 
2025-08-19T14:45:47.9141904Z # api.routes
2025-08-19T14:45:47.9141998Z 
2025-08-19T14:45:47.9142082Z <a id="api.models.fee"></a>
2025-08-19T14:45:47.9142215Z 
2025-08-19T14:45:47.9142286Z # api.models.fee
2025-08-19T14:45:47.9142399Z 
2025-08-19T14:45:47.9142470Z <a id="api.models"></a>
2025-08-19T14:45:47.9142584Z 
2025-08-19T14:45:47.9142647Z # api.models
2025-08-19T14:45:47.9142746Z 
2025-08-19T14:45:47.9142825Z <a id="api.roi_repository"></a>
2025-08-19T14:45:47.9142966Z 
2025-08-19T14:45:47.9143043Z # api.roi\_repository
2025-08-19T14:45:47.9143156Z 
2025-08-19T14:45:47.9143227Z <a id="api.main"></a>
2025-08-19T14:45:47.9143480Z 
2025-08-19T14:45:47.9143544Z # api.main
2025-08-19T14:45:47.9143635Z 
2025-08-19T14:45:47.9143714Z <a id="api.main.ready"></a>
2025-08-19T14:45:47.9143852Z 
2025-08-19T14:45:47.9143916Z #### ready
2025-08-19T14:45:47.9144003Z 
2025-08-19T14:45:47.9144071Z ```python
2025-08-19T14:45:47.9144333Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T14:45:47.9144761Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T14:45:47.9145103Z                                                                       str]
2025-08-19T14:45:47.9145347Z ```
2025-08-19T14:45:47.9145432Z 
2025-08-19T14:45:47.9145530Z Return 200 only when migrations are at head.
2025-08-19T14:45:47.9145709Z 
2025-08-19T14:45:47.9145783Z <a id="api.config"></a>
2025-08-19T14:45:47.9145903Z 
2025-08-19T14:45:47.9145977Z # api.config
2025-08-19T14:45:47.9146070Z 
2025-08-19T14:45:47.9146145Z <a id="api.security"></a>
2025-08-19T14:45:47.9146276Z 
2025-08-19T14:45:47.9146460Z # api.security
2025-08-19T14:45:47.9146561Z 
2025-08-19T14:45:47.9146625Z <a id="etl"></a>
2025-08-19T14:45:47.9146732Z 
2025-08-19T14:45:47.9146790Z # etl
2025-08-19T14:45:47.9146874Z 
2025-08-19T14:45:47.9146961Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T14:45:47.9147106Z 
2025-08-19T14:45:47.9147179Z # etl.fba\_fee\_ingestor
2025-08-19T14:45:47.9147303Z 
2025-08-19T14:45:47.9147390Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T14:45:47.9147532Z 
2025-08-19T14:45:47.9147603Z # etl.sp\_fees\_ingestor
2025-08-19T14:45:47.9147726Z 
2025-08-19T14:45:47.9147803Z <a id="etl.keepa_ingestor"></a>
2025-08-19T14:45:47.9147942Z 
2025-08-19T14:45:47.9148015Z # etl.keepa\_ingestor
2025-08-19T14:45:47.9148126Z 
2025-08-19T14:45:47.9148191Z <a id="etl.db"></a>
2025-08-19T14:45:47.9148295Z 
2025-08-19T14:45:47.9148363Z # etl.db
2025-08-19T14:45:47.9148453Z 
2025-08-19T14:45:47.9148538Z <a id="etl.dialects.schemas"></a>
2025-08-19T14:45:47.9148885Z 
2025-08-19T14:45:47.9148982Z # etl.dialects.schemas
2025-08-19T14:45:47.9149116Z 
2025-08-19T14:45:47.9149223Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T14:45:47.9149420Z 
2025-08-19T14:45:47.9149511Z # etl.dialects.amazon\_reimbursements
2025-08-19T14:45:47.9149679Z 
2025-08-19T14:45:47.9149776Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T14:45:47.9149954Z 
2025-08-19T14:45:47.9150046Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T14:45:47.9150199Z 
2025-08-19T14:45:47.9150289Z <a id="etl.dialects.test_generic"></a>
2025-08-19T14:45:47.9150453Z 
2025-08-19T14:45:47.9150532Z # etl.dialects.test\_generic
2025-08-19T14:45:47.9150668Z 
2025-08-19T14:45:47.9150756Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T14:45:47.9150928Z 
2025-08-19T14:45:47.9151009Z # etl.dialects.amazon\_returns
2025-08-19T14:45:47.9151147Z 
2025-08-19T14:45:47.9151248Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T14:45:47.9151416Z 
2025-08-19T14:45:47.9151499Z # etl.dialects.amazon\_fee\_preview
2025-08-19T14:45:47.9151650Z 
2025-08-19T14:45:47.9151766Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T14:45:47.9151953Z 
2025-08-19T14:45:47.9152045Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T14:45:47.9152214Z 
2025-08-19T14:45:47.9152310Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T14:45:47.9152479Z 
2025-08-19T14:45:47.9152569Z # etl.dialects.amazon\_settlements
2025-08-19T14:45:47.9152717Z 
2025-08-19T14:45:47.9152792Z <a id="etl.dialects"></a>
2025-08-19T14:45:47.9152923Z 
2025-08-19T14:45:47.9152987Z # etl.dialects
2025-08-19T14:45:47.9153087Z 
2025-08-19T14:45:47.9153153Z <a id="ingest"></a>
2025-08-19T14:45:47.9153265Z 
2025-08-19T14:45:47.9153325Z # ingest
2025-08-19T14:45:47.9153410Z 
2025-08-19T14:45:47.9153496Z <a id="ingest.maintenance"></a>
2025-08-19T14:45:47.9153637Z 
2025-08-19T14:45:47.9153708Z # ingest.maintenance
2025-08-19T14:45:47.9153822Z 
2025-08-19T14:45:47.9153906Z <a id="ingest.copy_loader"></a>
2025-08-19T14:45:47.9154041Z 
2025-08-19T14:45:47.9154114Z # ingest.copy\_loader
2025-08-19T14:45:47.9154239Z 
2025-08-19T14:45:47.9154478Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T14:45:47.9154660Z 
2025-08-19T14:45:47.9154732Z #### copy\_df\_via\_temp
2025-08-19T14:45:47.9154863Z 
2025-08-19T14:45:47.9154925Z ```python
2025-08-19T14:45:47.9155098Z def copy_df_via_temp(engine: Engine,
2025-08-19T14:45:47.9155324Z                      df: pd.DataFrame,
2025-08-19T14:45:47.9155555Z                      target_table: str,
2025-08-19T14:45:47.9155770Z                      *,
2025-08-19T14:45:47.9155977Z                      target_schema: Optional[str] = None,
2025-08-19T14:45:47.9156231Z                      columns: Sequence[str],
2025-08-19T14:45:47.9156504Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T14:45:47.9156785Z                      analyze_after: bool = False,
2025-08-19T14:45:47.9157042Z                      connection: Any | None = None) -> int
2025-08-19T14:45:47.9157275Z ```
2025-08-19T14:45:47.9157360Z 
2025-08-19T14:45:47.9157511Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T14:45:47.9157869Z 
2025-08-19T14:45:47.9157956Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T14:45:47.9158110Z 
2025-08-19T14:45:47.9158189Z # ingest.tests.test\_smoke
2025-08-19T14:45:47.9158322Z 
2025-08-19T14:45:47.9158397Z <a id="ingest.tests"></a>
2025-08-19T14:45:47.9158520Z 
2025-08-19T14:45:47.9158589Z # ingest.tests
2025-08-19T14:45:47.9158878Z 
2025-08-19T14:45:47.9158980Z <a id="ingest.upload_router"></a>
2025-08-19T14:45:47.9159135Z 
2025-08-19T14:45:47.9159211Z # ingest.upload\_router
2025-08-19T14:45:47.9159331Z 
2025-08-19T14:45:47.9159412Z <a id="ingest.email_watcher"></a>
2025-08-19T14:45:47.9159562Z 
2025-08-19T14:45:47.9159633Z # ingest.email\_watcher
2025-08-19T14:45:47.9159747Z 
2025-08-19T14:45:47.9159838Z <a id="ingest.email_watcher.main"></a>
2025-08-19T14:45:47.9160000Z 
2025-08-19T14:45:47.9160062Z #### main
2025-08-19T14:45:47.9160149Z 
2025-08-19T14:45:47.9160217Z ```python
2025-08-19T14:45:47.9160377Z def main() -> dict[str, str]
2025-08-19T14:45:47.9160584Z ```
2025-08-19T14:45:47.9160666Z 
2025-08-19T14:45:47.9160835Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T14:45:47.9161064Z 
2025-08-19T14:45:47.9161189Z Returns {"status": "success"} when processing completes.
2025-08-19T14:45:47.9161394Z 
2025-08-19T14:45:47.9161475Z <a id="ingest.tasks"></a>
2025-08-19T14:45:47.9161598Z 
2025-08-19T14:45:47.9161664Z # ingest.tasks
2025-08-19T14:45:47.9161769Z 
2025-08-19T14:45:47.9161863Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T14:45:47.9162034Z 
2025-08-19T14:45:47.9162104Z #### task\_import\_file
2025-08-19T14:45:47.9162224Z 
2025-08-19T14:45:47.9162284Z ```python
2025-08-19T14:45:47.9162490Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T14:45:47.9162776Z def task_import_file(self: Any,
2025-08-19T14:45:47.9162978Z                      uri: str,
2025-08-19T14:45:47.9163196Z                      report_type: str | None = None,
2025-08-19T14:45:47.9163456Z                      force: bool = False) -> dict[str, Any]
2025-08-19T14:45:47.9163702Z ```
2025-08-19T14:45:47.9163783Z 
2025-08-19T14:45:47.9163910Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T14:45:47.9164120Z 
2025-08-19T14:45:47.9164201Z <a id="ingest.celery_app"></a>
2025-08-19T14:45:47.9164338Z 
2025-08-19T14:45:47.9164415Z # ingest.celery\_app
2025-08-19T14:45:47.9164526Z 
2025-08-19T14:45:47.9164606Z <a id="ingest.ingest_router"></a>
2025-08-19T14:45:47.9164757Z 
2025-08-19T14:45:47.9164831Z # ingest.ingest\_router
2025-08-19T14:45:47.9164950Z 
2025-08-19T14:45:47.9165023Z <a id="logistics_etl"></a>
2025-08-19T14:45:47.9165154Z 
2025-08-19T14:45:47.9165220Z # logistics\_etl
2025-08-19T14:45:47.9165324Z 
2025-08-19T14:45:47.9165406Z Daily logistics ETL job.
2025-08-19T14:45:47.9165528Z 
2025-08-19T14:45:47.9165607Z <a id="logistics_etl.__main__"></a>
2025-08-19T14:45:47.9165765Z 
2025-08-19T14:45:47.9165840Z # logistics\_etl.\_\_main\_\_
2025-08-19T14:45:47.9165977Z 
2025-08-19T14:45:47.9166199Z <a id="logistics_etl.dsn"></a>
2025-08-19T14:45:47.9166339Z 
2025-08-19T14:45:47.9166405Z # logistics\_etl.dsn
2025-08-19T14:45:47.9166512Z 
2025-08-19T14:45:47.9166631Z Local DSN builder to avoid cross-service dependency.
2025-08-19T14:45:47.9166828Z 
2025-08-19T14:45:47.9166916Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T14:45:47.9167083Z 
2025-08-19T14:45:47.9167146Z #### build\_dsn
2025-08-19T14:45:47.9167247Z 
2025-08-19T14:45:47.9167309Z ```python
2025-08-19T14:45:47.9167481Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:45:47.9167694Z ```
2025-08-19T14:45:47.9167780Z 
2025-08-19T14:45:47.9167919Z Return a Postgres DSN assembled from environment variables.
2025-08-19T14:45:47.9168139Z 
2025-08-19T14:45:47.9168290Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T14:45:47.9168848Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T14:45:47.9169236Z error when any required variable is missing.
2025-08-19T14:45:47.9169409Z 
2025-08-19T14:45:47.9169635Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T14:45:47.9169811Z 
2025-08-19T14:45:47.9169894Z # logistics\_etl.tests.conftest
2025-08-19T14:45:47.9170037Z 
2025-08-19T14:45:47.9170145Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T14:45:47.9170330Z 
2025-08-19T14:45:47.9170420Z # logistics\_etl.tests.test\_repository
2025-08-19T14:45:47.9170587Z 
2025-08-19T14:45:47.9170677Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T14:45:47.9170845Z 
2025-08-19T14:45:47.9170928Z # logistics\_etl.tests.test\_cron
2025-08-19T14:45:47.9171083Z 
2025-08-19T14:45:47.9171181Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T14:45:47.9171354Z 
2025-08-19T14:45:47.9171445Z # logistics\_etl.tests.test\_imports
2025-08-19T14:45:47.9171619Z 
2025-08-19T14:45:47.9171709Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T14:45:47.9171882Z 
2025-08-19T14:45:47.9171963Z # logistics\_etl.tests.test\_smoke
2025-08-19T14:45:47.9172111Z 
2025-08-19T14:45:47.9172208Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T14:45:47.9172383Z 
2025-08-19T14:45:47.9172467Z # logistics\_etl.tests.test\_client
2025-08-19T14:45:47.9172616Z 
2025-08-19T14:45:47.9172703Z <a id="logistics_etl.tests"></a>
2025-08-19T14:45:47.9172845Z 
2025-08-19T14:45:47.9172916Z # logistics\_etl.tests
2025-08-19T14:45:47.9173074Z 
2025-08-19T14:45:47.9173152Z <a id="logistics_etl.flow"></a>
2025-08-19T14:45:47.9173289Z 
2025-08-19T14:45:47.9173366Z # logistics\_etl.flow
2025-08-19T14:45:47.9173479Z 
2025-08-19T14:45:47.9173559Z <a id="logistics_etl.client"></a>
2025-08-19T14:45:47.9173702Z 
2025-08-19T14:45:47.9173781Z # logistics\_etl.client
2025-08-19T14:45:47.9173899Z 
2025-08-19T14:45:47.9173976Z <a id="logistics_etl.cron"></a>
2025-08-19T14:45:47.9174116Z 
2025-08-19T14:45:47.9174186Z # logistics\_etl.cron
2025-08-19T14:45:47.9174298Z 
2025-08-19T14:45:47.9174376Z <a id="logistics_etl.db"></a>
2025-08-19T14:45:47.9174521Z 
2025-08-19T14:45:47.9174587Z # logistics\_etl.db
2025-08-19T14:45:47.9174702Z 
2025-08-19T14:45:47.9174800Z <a id="logistics_etl.repository"></a>
2025-08-19T14:45:47.9174957Z 
2025-08-19T14:45:47.9221347Z # logistics\_etl.repository
2025-08-19T14:45:47.9221666Z 
2025-08-19T14:45:47.9221786Z <a id="alert_bot"></a>
2025-08-19T14:45:47.9221940Z 
2025-08-19T14:45:47.9222019Z # alert\_bot
2025-08-19T14:45:47.9222150Z 
2025-08-19T14:45:47.9222260Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T14:45:47.9222469Z 
2025-08-19T14:45:47.9222574Z # alert\_bot.tests.test\_smoke
2025-08-19T14:45:47.9222747Z 
2025-08-19T14:45:47.9222841Z <a id="alert_bot.tests"></a>
2025-08-19T14:45:47.9223011Z 
2025-08-19T14:45:47.9223164Z # alert\_bot.tests
2025-08-19T14:45:47.9223294Z 
2025-08-19T14:45:47.9223394Z <a id="alert_bot.alert_bot"></a>
2025-08-19T14:45:47.9223574Z 
2025-08-19T14:45:47.9223663Z # alert\_bot.alert\_bot
2025-08-19T14:45:47.9223806Z 
2025-08-19T14:45:47.9223909Z <a id="alert_bot.rules"></a>
2025-08-19T14:45:47.9224070Z 
2025-08-19T14:45:47.9224149Z # alert\_bot.rules
2025-08-19T14:45:47.9224487Z 
2025-08-19T14:45:47.9224569Z <a id="common"></a>
2025-08-19T14:45:47.9224697Z 
2025-08-19T14:45:47.9224774Z # common
2025-08-19T14:45:47.9224889Z 
2025-08-19T14:45:47.9224979Z <a id="common.dsn"></a>
2025-08-19T14:45:47.9225124Z 
2025-08-19T14:45:47.9225210Z # common.dsn
2025-08-19T14:45:47.9225331Z 
2025-08-19T14:45:47.9225437Z <a id="common.dsn.build_dsn"></a>
2025-08-19T14:45:47.9225625Z 
2025-08-19T14:45:47.9225712Z #### build\_dsn
2025-08-19T14:45:47.9225837Z 
2025-08-19T14:45:47.9225917Z ```python
2025-08-19T14:45:47.9226140Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:45:47.9226410Z ```
2025-08-19T14:45:47.9226523Z 
2025-08-19T14:45:47.9226674Z Return a Postgres DSN, validating required variables.
2025-08-19T14:45:47.9226925Z 
2025-08-19T14:45:47.9227162Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T14:45:47.9227693Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T14:45:47.9228208Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T14:45:47.9228851Z missing.
2025-08-19T14:45:47.9228998Z 
2025-08-19T14:45:47.9229086Z <a id="common.models_vendor"></a>
2025-08-19T14:45:47.9229238Z 
2025-08-19T14:45:47.9229311Z # common.models\_vendor
2025-08-19T14:45:47.9229438Z 
2025-08-19T14:45:47.9229529Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T14:45:47.9229694Z 
2025-08-19T14:45:47.9229767Z ## Vendor Objects
2025-08-19T14:45:47.9229871Z 
2025-08-19T14:45:47.9229931Z ```python
2025-08-19T14:45:47.9230084Z class Vendor(Base)
2025-08-19T14:45:47.9230242Z ```
2025-08-19T14:45:47.9230328Z 
2025-08-19T14:45:47.9230405Z Vendor of inventory items.
2025-08-19T14:45:47.9230534Z 
2025-08-19T14:45:47.9230635Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T14:45:47.9230816Z 
2025-08-19T14:45:47.9230888Z ## VendorPrice Objects
2025-08-19T14:45:47.9231003Z 
2025-08-19T14:45:47.9231073Z ```python
2025-08-19T14:45:47.9231228Z class VendorPrice(Base)
2025-08-19T14:45:47.9231405Z ```
2025-08-19T14:45:47.9231496Z 
2025-08-19T14:45:47.9231601Z Association table linking vendors to pricing.
2025-08-19T14:45:47.9231781Z 
2025-08-19T14:45:47.9231856Z <a id="common.db_url"></a>
2025-08-19T14:45:47.9231982Z 
2025-08-19T14:45:47.9232052Z # common.db\_url
2025-08-19T14:45:47.9232154Z 
2025-08-19T14:45:47.9232237Z <a id="common.db_url.build_url"></a>
2025-08-19T14:45:47.9232388Z 
2025-08-19T14:45:47.9232455Z #### build\_url
2025-08-19T14:45:47.9232555Z 
2025-08-19T14:45:47.9232616Z ```python
2025-08-19T14:45:47.9232791Z def build_url(async_: bool = True) -> str
2025-08-19T14:45:47.9233007Z ```
2025-08-19T14:45:47.9233091Z 
2025-08-19T14:45:47.9233184Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:45:47.9233356Z 
2025-08-19T14:45:47.9233438Z <a id="common.keepa"></a>
2025-08-19T14:45:47.9233564Z 
2025-08-19T14:45:47.9233628Z # common.keepa
2025-08-19T14:45:47.9233727Z 
2025-08-19T14:45:47.9233803Z <a id="common.llm"></a>
2025-08-19T14:45:47.9233919Z 
2025-08-19T14:45:47.9233983Z # common.llm
2025-08-19T14:45:47.9234093Z 
2025-08-19T14:45:47.9234172Z <a id="common.settings"></a>
2025-08-19T14:45:47.9234308Z 
2025-08-19T14:45:47.9234380Z # common.settings
2025-08-19T14:45:47.9234485Z 
2025-08-19T14:45:47.9234558Z <a id="common.db"></a>
2025-08-19T14:45:47.9234675Z 
2025-08-19T14:45:47.9234745Z # common.db
2025-08-19T14:45:47.9234835Z 
2025-08-19T14:45:47.9234926Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T14:45:47.9235102Z 
2025-08-19T14:45:47.9235179Z #### build\_sqlalchemy\_url
2025-08-19T14:45:47.9235305Z 
2025-08-19T14:45:47.9235365Z ```python
2025-08-19T14:45:47.9235539Z def build_sqlalchemy_url() -> str
2025-08-19T14:45:47.9235748Z ```
2025-08-19T14:45:47.9235831Z 
2025-08-19T14:45:47.9235923Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:45:47.9236092Z 
2025-08-19T14:45:47.9236188Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T14:45:47.9236352Z 
2025-08-19T14:45:47.9236423Z #### build\_asyncpg\_dsn
2025-08-19T14:45:47.9236551Z 
2025-08-19T14:45:47.9236616Z ```python
2025-08-19T14:45:47.9236911Z def build_asyncpg_dsn() -> str
2025-08-19T14:45:47.9237113Z ```
2025-08-19T14:45:47.9237194Z 
2025-08-19T14:45:47.9237326Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:45:47.9237535Z 
2025-08-19T14:45:47.9237619Z <a id="common.db.refresh_mvs"></a>
2025-08-19T14:45:47.9237776Z 
2025-08-19T14:45:47.9237840Z #### refresh\_mvs
2025-08-19T14:45:47.9237945Z 
2025-08-19T14:45:47.9238005Z ```python
2025-08-19T14:45:47.9238212Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:45:47.9238455Z ```
2025-08-19T14:45:47.9238541Z 
2025-08-19T14:45:47.9238784Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:45:47.9239000Z 
2025-08-19T14:45:47.9239082Z <a id="common.config"></a>
2025-08-19T14:45:47.9239209Z 
2025-08-19T14:45:47.9239273Z # common.config
2025-08-19T14:45:47.9239380Z 
2025-08-19T14:45:47.9239453Z <a id="common.base"></a>
2025-08-19T14:45:47.9239570Z 
2025-08-19T14:45:47.9239632Z # common.base
2025-08-19T14:45:47.9239857Z 
2025-08-19T14:45:47.9239937Z <a id="common.base.Base"></a>
2025-08-19T14:45:47.9240072Z 
2025-08-19T14:45:47.9240140Z ## Base Objects
2025-08-19T14:45:47.9240239Z 
2025-08-19T14:45:47.9240299Z ```python
2025-08-19T14:45:47.9240469Z class Base(DeclarativeBase)
2025-08-19T14:45:47.9240652Z ```
2025-08-19T14:45:47.9240738Z 
2025-08-19T14:45:47.9240821Z Base class for SQLAlchemy models.
2025-08-19T14:45:47.9240965Z 
2025-08-19T14:45:47.9241034Z <a id="repricer"></a>
2025-08-19T14:45:47.9241154Z 
2025-08-19T14:45:47.9241216Z # repricer
2025-08-19T14:45:47.9241304Z 
2025-08-19T14:45:47.9241395Z <a id="repricer.app.schemas"></a>
2025-08-19T14:45:47.9241543Z 
2025-08-19T14:45:47.9241618Z # repricer.app.schemas
2025-08-19T14:45:47.9241743Z 
2025-08-19T14:45:47.9241824Z <a id="repricer.app.deps"></a>
2025-08-19T14:45:47.9241963Z 
2025-08-19T14:45:47.9242034Z # repricer.app.deps
2025-08-19T14:45:47.9242148Z 
2025-08-19T14:45:47.9242263Z Placeholder module for Keepa / SP-API clients.
2025-08-19T14:45:47.9242456Z 
2025-08-19T14:45:47.9242550Z <a id="repricer.app.logic"></a>
2025-08-19T14:45:47.9242693Z 
2025-08-19T14:45:47.9242769Z # repricer.app.logic
2025-08-19T14:45:47.9242884Z 
2025-08-19T14:45:47.9242990Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T14:45:47.9243163Z 
2025-08-19T14:45:47.9243228Z #### MIN\_MARGIN
2025-08-19T14:45:47.9243337Z 
2025-08-19T14:45:47.9243396Z 15 % ROI
2025-08-19T14:45:47.9243482Z 
2025-08-19T14:45:47.9243588Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T14:45:47.9243764Z 
2025-08-19T14:45:47.9243833Z #### compute\_price
2025-08-19T14:45:47.9243939Z 
2025-08-19T14:45:47.9244007Z ```python
2025-08-19T14:45:47.9244248Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T14:45:47.9244546Z ```
2025-08-19T14:45:47.9244626Z 
2025-08-19T14:45:47.9244736Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T14:45:47.9245014Z Replace with real competitive logic later.
2025-08-19T14:45:47.9245184Z 
2025-08-19T14:45:47.9245273Z <a id="repricer.app.main"></a>
2025-08-19T14:45:47.9245421Z 
2025-08-19T14:45:47.9245492Z # repricer.app.main
2025-08-19T14:45:47.9245597Z 
2025-08-19T14:45:47.9245681Z <a id="repricer.app"></a>
2025-08-19T14:45:47.9245809Z 
2025-08-19T14:45:47.9245873Z # repricer.app
2025-08-19T14:45:47.9245981Z 
2025-08-19T14:45:47.9246075Z <a id="repricer.tests.test_imports"></a>
2025-08-19T14:45:47.9246243Z 
2025-08-19T14:45:47.9246329Z # repricer.tests.test\_imports
2025-08-19T14:45:47.9246466Z 
2025-08-19T14:45:47.9246554Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T14:45:47.9246713Z 
2025-08-19T14:45:47.9246800Z # repricer.tests.test\_smoke
2025-08-19T14:45:47.9246936Z 
2025-08-19T14:45:47.9247015Z <a id="repricer.tests"></a>
2025-08-19T14:45:47.9247150Z 
2025-08-19T14:45:47.9247217Z # repricer.tests
2025-08-19T14:45:47.9247320Z 
2025-08-19T14:45:47.9247384Z <a id="db"></a>
2025-08-19T14:45:47.9247490Z 
2025-08-19T14:45:47.9247550Z # db
2025-08-19T14:45:47.9247633Z 
2025-08-19T14:45:47.9247718Z <a id="db.utils.views"></a>
2025-08-19T14:45:47.9248013Z 
2025-08-19T14:45:47.9248081Z # db.utils.views
2025-08-19T14:45:47.9248188Z 
2025-08-19T14:45:47.9248285Z <a id="db.utils.views.replace_view"></a>
2025-08-19T14:45:47.9248448Z 
2025-08-19T14:45:47.9248516Z #### replace\_view
2025-08-19T14:45:47.9248626Z 
2025-08-19T14:45:47.9248784Z ```python
2025-08-19T14:45:47.9248983Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T14:45:47.9249219Z ```
2025-08-19T14:45:47.9249298Z 
2025-08-19T14:45:47.9249393Z Drop and recreate a SQL view atomically.
2025-08-19T14:45:47.9249554Z 
2025-08-19T14:45:47.9249623Z <a id="db.utils"></a>
2025-08-19T14:45:47.9249744Z 
2025-08-19T14:45:47.9249809Z # db.utils
2025-08-19T14:45:47.9249895Z 
2025-08-19T14:45:47.9249969Z <a id="price_importer"></a>
2025-08-19T14:45:47.9250102Z 
2025-08-19T14:45:47.9250169Z # price\_importer
2025-08-19T14:45:47.9250272Z 
2025-08-19T14:45:47.9250379Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T14:45:47.9250559Z 
2025-08-19T14:45:47.9250648Z # price\_importer.services\_common.dsn
2025-08-19T14:45:47.9250939Z 
2025-08-19T14:45:47.9251064Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T14:45:47.9251267Z 
2025-08-19T14:45:47.9251329Z #### build\_dsn
2025-08-19T14:45:47.9251432Z 
2025-08-19T14:45:47.9251493Z ```python
2025-08-19T14:45:47.9251666Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:45:47.9251882Z ```
2025-08-19T14:45:47.9251964Z 
2025-08-19T14:45:47.9252035Z Return safe DSN.
2025-08-19T14:45:47.9252137Z 
2025-08-19T14:45:47.9252474Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T14:45:47.9252678Z 
2025-08-19T14:45:47.9252802Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T14:45:47.9253003Z 
2025-08-19T14:45:47.9253114Z # price\_importer.services\_common.models\_vendor
2025-08-19T14:45:47.9253298Z 
2025-08-19T14:45:47.9253401Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T14:45:47.9253582Z 
2025-08-19T14:45:47.9253680Z # price\_importer.services\_common.db\_url
2025-08-19T14:45:47.9253863Z 
2025-08-19T14:45:47.9253995Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T14:45:47.9254211Z 
2025-08-19T14:45:47.9254273Z #### build\_url
2025-08-19T14:45:47.9254373Z 
2025-08-19T14:45:47.9254441Z ```python
2025-08-19T14:45:47.9254613Z def build_url(async_: bool = True) -> str
2025-08-19T14:45:47.9254839Z ```
2025-08-19T14:45:47.9254919Z 
2025-08-19T14:45:47.9255013Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:45:47.9255188Z 
2025-08-19T14:45:47.9255293Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T14:45:47.9255472Z 
2025-08-19T14:45:47.9255566Z # price\_importer.services\_common.keepa
2025-08-19T14:45:47.9255750Z 
2025-08-19T14:45:47.9255855Z <a id="price_importer.services_common.llm"></a>
2025-08-19T14:45:47.9256037Z 
2025-08-19T14:45:47.9256133Z # price\_importer.services\_common.llm
2025-08-19T14:45:47.9256294Z 
2025-08-19T14:45:47.9256408Z <a id="price_importer.services_common.settings"></a>
2025-08-19T14:45:47.9256615Z 
2025-08-19T14:45:47.9256715Z # price\_importer.services\_common.settings
2025-08-19T14:45:47.9256886Z 
2025-08-19T14:45:47.9256985Z <a id="price_importer.services_common.db"></a>
2025-08-19T14:45:47.9257166Z 
2025-08-19T14:45:47.9257254Z # price\_importer.services\_common.db
2025-08-19T14:45:47.9257409Z 
2025-08-19T14:45:47.9257574Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T14:45:47.9257807Z 
2025-08-19T14:45:47.9257884Z #### build\_sqlalchemy\_url
2025-08-19T14:45:47.9258016Z 
2025-08-19T14:45:47.9258077Z ```python
2025-08-19T14:45:47.9258248Z def build_sqlalchemy_url() -> str
2025-08-19T14:45:47.9258457Z ```
2025-08-19T14:45:47.9258536Z 
2025-08-19T14:45:47.9258636Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:45:47.9258903Z 
2025-08-19T14:45:47.9259047Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T14:45:47.9259270Z 
2025-08-19T14:45:47.9259349Z #### build\_asyncpg\_dsn
2025-08-19T14:45:47.9259470Z 
2025-08-19T14:45:47.9259657Z ```python
2025-08-19T14:45:47.9259838Z def build_asyncpg_dsn() -> str
2025-08-19T14:45:47.9260029Z ```
2025-08-19T14:45:47.9260115Z 
2025-08-19T14:45:47.9260242Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:45:47.9260448Z 
2025-08-19T14:45:47.9260582Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T14:45:47.9260789Z 
2025-08-19T14:45:47.9260855Z #### refresh\_mvs
2025-08-19T14:45:47.9260966Z 
2025-08-19T14:45:47.9261027Z ```python
2025-08-19T14:45:47.9261223Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:45:47.9261471Z ```
2025-08-19T14:45:47.9261549Z 
2025-08-19T14:45:47.9261684Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:45:47.9261902Z 
2025-08-19T14:45:47.9261994Z <a id="price_importer.services_common"></a>
2025-08-19T14:45:47.9262166Z 
2025-08-19T14:45:47.9262259Z # price\_importer.services\_common
2025-08-19T14:45:47.9262410Z 
2025-08-19T14:45:47.9262512Z <a id="price_importer.services_common.base"></a>
2025-08-19T14:45:47.9262816Z 
2025-08-19T14:45:47.9262905Z # price\_importer.services\_common.base
2025-08-19T14:45:47.9263067Z 
2025-08-19T14:45:47.9263156Z <a id="price_importer.normaliser"></a>
2025-08-19T14:45:47.9263323Z 
2025-08-19T14:45:47.9263405Z # price\_importer.normaliser
2025-08-19T14:45:47.9263541Z 
2025-08-19T14:45:47.9263657Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T14:45:47.9263836Z 
2025-08-19T14:45:47.9263923Z # price\_importer.common.models\_vendor
2025-08-19T14:45:47.9264086Z 
2025-08-19T14:45:47.9264175Z <a id="price_importer.common.db_url"></a>
2025-08-19T14:45:47.9264348Z 
2025-08-19T14:45:47.9264435Z # price\_importer.common.db\_url
2025-08-19T14:45:47.9264584Z 
2025-08-19T14:45:47.9264692Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T14:45:47.9264876Z 
2025-08-19T14:45:47.9264946Z #### make\_dsn
2025-08-19T14:45:47.9265044Z 
2025-08-19T14:45:47.9265105Z ```python
2025-08-19T14:45:47.9265285Z def make_dsn(async_: bool = False) -> str
2025-08-19T14:45:47.9265515Z ```
2025-08-19T14:45:47.9265603Z 
2025-08-19T14:45:47.9265722Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T14:45:47.9265917Z 
2025-08-19T14:45:47.9266030Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T14:45:47.9266217Z 
2025-08-19T14:45:47.9266280Z #### build\_url
2025-08-19T14:45:47.9266378Z 
2025-08-19T14:45:47.9266445Z ```python
2025-08-19T14:45:47.9266616Z def build_url(async_: bool = False) -> str
2025-08-19T14:45:47.9266847Z ```
2025-08-19T14:45:47.9266933Z 
2025-08-19T14:45:47.9267061Z Return Postgres DSN built from environment variables.
2025-08-19T14:45:47.9267257Z 
2025-08-19T14:45:47.9267341Z <a id="price_importer.common"></a>
2025-08-19T14:45:47.9267502Z 
2025-08-19T14:45:47.9267579Z # price\_importer.common
2025-08-19T14:45:47.9267709Z 
2025-08-19T14:45:47.9267806Z <a id="price_importer.common.base"></a>
2025-08-19T14:45:47.9267969Z 
2025-08-19T14:45:47.9268050Z # price\_importer.common.base
2025-08-19T14:45:47.9268198Z 
2025-08-19T14:45:47.9268311Z <a id="price_importer.tests.conftest"></a>
2025-08-19T14:45:47.9268486Z 
2025-08-19T14:45:47.9268570Z # price\_importer.tests.conftest
2025-08-19T14:45:47.9268941Z 
2025-08-19T14:45:47.9269049Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T14:45:47.9269224Z 
2025-08-19T14:45:47.9269318Z # price\_importer.tests.test\_reader
2025-08-19T14:45:47.9269472Z 
2025-08-19T14:45:47.9269570Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T14:45:47.9269746Z 
2025-08-19T14:45:47.9269840Z # price\_importer.tests.test\_imports
2025-08-19T14:45:47.9269995Z 
2025-08-19T14:45:47.9270088Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T14:45:47.9270261Z 
2025-08-19T14:45:47.9270349Z # price\_importer.tests.test\_smoke
2025-08-19T14:45:47.9270503Z 
2025-08-19T14:45:47.9270610Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T14:45:47.9270795Z 
2025-08-19T14:45:47.9270887Z # price\_importer.tests.test\_normaliser
2025-08-19T14:45:47.9271049Z 
2025-08-19T14:45:47.9271138Z <a id="price_importer.tests"></a>
2025-08-19T14:45:47.9271419Z 
2025-08-19T14:45:47.9271494Z # price\_importer.tests
2025-08-19T14:45:47.9271619Z 
2025-08-19T14:45:47.9271704Z <a id="price_importer.reader"></a>
2025-08-19T14:45:47.9271854Z 
2025-08-19T14:45:47.9271935Z # price\_importer.reader
2025-08-19T14:45:47.9272059Z 
2025-08-19T14:45:47.9272146Z <a id="price_importer.repository"></a>
2025-08-19T14:45:47.9272304Z 
2025-08-19T14:45:47.9272393Z # price\_importer.repository
2025-08-19T14:45:47.9272529Z 
2025-08-19T14:45:47.9272611Z <a id="price_importer.import"></a>
2025-08-19T14:45:47.9272764Z 
2025-08-19T14:45:47.9272839Z # price\_importer.import
2025-08-19T14:45:47.9272962Z 
2025-08-19T14:45:47.9273033Z <a id="fees_h10"></a>
2025-08-19T14:45:47.9273150Z 
2025-08-19T14:45:47.9273212Z # fees\_h10
2025-08-19T14:45:47.9273305Z 
2025-08-19T14:45:47.9273387Z <a id="fees_h10.worker"></a>
2025-08-19T14:45:47.9273516Z 
2025-08-19T14:45:47.9273582Z # fees\_h10.worker
2025-08-19T14:45:47.9273693Z 
2025-08-19T14:45:47.9273897Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T14:45:47.9274075Z 
2025-08-19T14:45:47.9274147Z #### list\_active\_asins
2025-08-19T14:45:47.9274271Z 
2025-08-19T14:45:47.9274331Z ```python
2025-08-19T14:45:47.9274502Z def list_active_asins() -> list[str]
2025-08-19T14:45:47.9274706Z ```
2025-08-19T14:45:47.9274786Z 
2025-08-19T14:45:47.9274903Z Return known ASINs or an empty list if unavailable.
2025-08-19T14:45:47.9275093Z 
2025-08-19T14:45:47.9275176Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T14:45:47.9275337Z 
2025-08-19T14:45:47.9275415Z # fees\_h10.tests.test\_smoke
2025-08-19T14:45:47.9275552Z 
2025-08-19T14:45:47.9275633Z <a id="fees_h10.tests"></a>
2025-08-19T14:45:47.9275764Z 
2025-08-19T14:45:47.9275828Z # fees\_h10.tests
2025-08-19T14:45:47.9275930Z 
2025-08-19T14:45:47.9276009Z <a id="fees_h10.client"></a>
2025-08-19T14:45:47.9276136Z 
2025-08-19T14:45:47.9276201Z # fees\_h10.client
2025-08-19T14:45:47.9276307Z 
2025-08-19T14:45:47.9276387Z <a id="fees_h10.repository"></a>
2025-08-19T14:45:47.9276537Z 
2025-08-19T14:45:47.9276609Z # fees\_h10.repository
2025-08-19T14:45:47.9276727Z 
2025-08-19T14:45:47.9276794Z <a id="emailer"></a>
2025-08-19T14:45:47.9276903Z 
2025-08-19T14:45:47.9276971Z # emailer
2025-08-19T14:45:47.9277058Z 
2025-08-19T14:45:47.9277161Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T14:45:47.9277345Z 
2025-08-19T14:45:47.9277431Z # emailer.tests.test\_import\_emailer
2025-08-19T14:45:47.9277589Z 
2025-08-19T14:45:47.9277672Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T14:45:47.9277832Z 
2025-08-19T14:45:47.9277909Z # emailer.tests.test\_smoke
2025-08-19T14:45:47.9278042Z 
2025-08-19T14:45:47.9278124Z <a id="emailer.tests"></a>
2025-08-19T14:45:47.9278250Z 
2025-08-19T14:45:47.9278315Z # emailer.tests
2025-08-19T14:45:47.9278423Z 
2025-08-19T14:45:47.9278508Z <a id="emailer.generate_body"></a>
2025-08-19T14:45:47.9278816Z 
2025-08-19T14:45:47.9278945Z # emailer.generate\_body
2025-08-19T14:45:47.9279147Z 
2025-08-19T14:45:47.9279254Z <a id="llm_server"></a>
2025-08-19T14:45:47.9279453Z 
2025-08-19T14:45:47.9279570Z # llm\_server
2025-08-19T14:45:47.9279714Z 
2025-08-19T14:45:47.9279796Z <a id="llm_server.app"></a>
2025-08-19T14:45:47.9279934Z 
2025-08-19T14:45:47.9280012Z # llm\_server.app
2025-08-19T14:45:47.9280118Z 
