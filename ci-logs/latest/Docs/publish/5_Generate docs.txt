2025-08-19T16:05:08.6191479Z ##[group]Run pydoc-markdown
2025-08-19T16:05:08.6191768Z [36;1mpydoc-markdown[0m
2025-08-19T16:05:08.6234571Z shell: /usr/bin/bash -e {0}
2025-08-19T16:05:08.6234815Z env:
2025-08-19T16:05:08.6235052Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:08.6235450Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T16:05:08.6235836Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:08.6236170Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:08.6236505Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T16:05:08.6236833Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T16:05:08.6237112Z ##[endgroup]
2025-08-19T16:05:08.9585864Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T16:05:08.9586527Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T16:05:08.9586836Z In "pydoc-markdown.yml"
2025-08-19T16:05:08.9587131Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T16:05:08.9587556Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T16:05:08.9588049Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T16:05:08.9588389Z 
2025-08-19T16:05:09.3019896Z <a id="__init__"></a>
2025-08-19T16:05:09.3020258Z 
2025-08-19T16:05:09.3020387Z # \_\_init\_\_
2025-08-19T16:05:09.3020586Z 
2025-08-19T16:05:09.3020729Z <a id="api"></a>
2025-08-19T16:05:09.3020946Z 
2025-08-19T16:05:09.3021066Z # api
2025-08-19T16:05:09.3021245Z 
2025-08-19T16:05:09.3021400Z <a id="api.errors"></a>
2025-08-19T16:05:09.3021655Z 
2025-08-19T16:05:09.3021782Z # api.errors
2025-08-19T16:05:09.3021990Z 
2025-08-19T16:05:09.3022153Z <a id="api.sentry_config"></a>
2025-08-19T16:05:09.3022734Z 
2025-08-19T16:05:09.3022900Z # api.sentry\_config
2025-08-19T16:05:09.3023165Z 
2025-08-19T16:05:09.3023370Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T16:05:09.3023753Z 
2025-08-19T16:05:09.3024355Z # api.tests.test\_stats\_contracts
2025-08-19T16:05:09.3024703Z 
2025-08-19T16:05:09.3024894Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T16:05:09.3025240Z 
2025-08-19T16:05:09.3025404Z # api.tests.test\_sentry\_scrub
2025-08-19T16:05:09.3025698Z 
2025-08-19T16:05:09.3025900Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T16:05:09.3026302Z 
2025-08-19T16:05:09.3026496Z # api.tests.test\_roi\_basic\_auth
2025-08-19T16:05:09.3026845Z 
2025-08-19T16:05:09.3027055Z <a id="api.tests.test_errors_json"></a>
2025-08-19T16:05:09.3027432Z 
2025-08-19T16:05:09.3027623Z # api.tests.test\_errors\_json
2025-08-19T16:05:09.3027983Z 
2025-08-19T16:05:09.3028280Z <a id="api.tests.test_llm"></a>
2025-08-19T16:05:09.3028565Z 
2025-08-19T16:05:09.3028736Z # api.tests.test\_llm
2025-08-19T16:05:09.3028976Z 
2025-08-19T16:05:09.3029144Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T16:05:09.3029352Z 
2025-08-19T16:05:09.3029448Z # api.tests.test\_roi\_filters
2025-08-19T16:05:09.3029615Z 
2025-08-19T16:05:09.3029738Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T16:05:09.3029946Z 
2025-08-19T16:05:09.3030043Z # api.tests.test\_sentry\_event
2025-08-19T16:05:09.3030209Z 
2025-08-19T16:05:09.3030363Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T16:05:09.3030609Z 
2025-08-19T16:05:09.3030701Z ## DummyTransport Objects
2025-08-19T16:05:09.3030864Z 
2025-08-19T16:05:09.3030940Z ```python
2025-08-19T16:05:09.3031138Z class DummyTransport()
2025-08-19T16:05:09.3031357Z ```
2025-08-19T16:05:09.3031455Z 
2025-08-19T16:05:09.3031667Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T16:05:09.3031981Z 
2025-08-19T16:05:09.3032065Z #### capture\_envelope
2025-08-19T16:05:09.3032207Z 
2025-08-19T16:05:09.3032445Z ```python
2025-08-19T16:05:09.3032652Z def capture_envelope(envelope)
2025-08-19T16:05:09.3032894Z ```
2025-08-19T16:05:09.3032992Z 
2025-08-19T16:05:09.3033140Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T16:05:09.3033395Z 
2025-08-19T16:05:09.3033492Z <a id="api.tests.test_cors"></a>
2025-08-19T16:05:09.3033936Z 
2025-08-19T16:05:09.3034029Z # api.tests.test\_cors
2025-08-19T16:05:09.3034165Z 
2025-08-19T16:05:09.3034264Z <a id="api.tests.test_imports"></a>
2025-08-19T16:05:09.3034456Z 
2025-08-19T16:05:09.3034550Z # api.tests.test\_imports
2025-08-19T16:05:09.3034698Z 
2025-08-19T16:05:09.3034799Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T16:05:09.3034998Z 
2025-08-19T16:05:09.3035090Z # api.tests.test\_rate\_limit
2025-08-19T16:05:09.3035255Z 
2025-08-19T16:05:09.3035370Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T16:05:09.3035578Z 
2025-08-19T16:05:09.3035655Z #### app
2025-08-19T16:05:09.3035765Z 
2025-08-19T16:05:09.3035840Z noqa: E402
2025-08-19T16:05:09.3035946Z 
2025-08-19T16:05:09.3036048Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T16:05:09.3036245Z 
2025-08-19T16:05:09.3036339Z # api.tests.test\_entrypoint
2025-08-19T16:05:09.3036501Z 
2025-08-19T16:05:09.3036603Z <a id="api.tests.test_health"></a>
2025-08-19T16:05:09.3036792Z 
2025-08-19T16:05:09.3036879Z # api.tests.test\_health
2025-08-19T16:05:09.3037028Z 
2025-08-19T16:05:09.3037129Z <a id="api.tests.test_score"></a>
2025-08-19T16:05:09.3037302Z 
2025-08-19T16:05:09.3037389Z # api.tests.test\_score
2025-08-19T16:05:09.3037536Z 
2025-08-19T16:05:09.3037629Z <a id="api.logging_config"></a>
2025-08-19T16:05:09.3037797Z 
2025-08-19T16:05:09.3037886Z # api.logging\_config
2025-08-19T16:05:09.3038023Z 
2025-08-19T16:05:09.3038117Z <a id="api.migrations.env"></a>
2025-08-19T16:05:09.3038283Z 
2025-08-19T16:05:09.3038376Z # api.migrations.env
2025-08-19T16:05:09.3038512Z 
2025-08-19T16:05:09.3038649Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T16:05:09.3038878Z 
2025-08-19T16:05:09.3038986Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T16:05:09.3039178Z 
2025-08-19T16:05:09.3039304Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T16:05:09.3039500Z 
2025-08-19T16:05:09.3039596Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T16:05:09.3039914Z 
2025-08-19T16:05:09.3040090Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T16:05:09.3040334Z 
2025-08-19T16:05:09.3040469Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T16:05:09.3040690Z 
2025-08-19T16:05:09.3040813Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T16:05:09.3041014Z 
2025-08-19T16:05:09.3041126Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T16:05:09.3041314Z 
2025-08-19T16:05:09.3041483Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T16:05:09.3041686Z 
2025-08-19T16:05:09.3041789Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T16:05:09.3041968Z 
2025-08-19T16:05:09.3042089Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T16:05:09.3042429Z 
2025-08-19T16:05:09.3042537Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T16:05:09.3042724Z 
2025-08-19T16:05:09.3042843Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T16:05:09.3043098Z 
2025-08-19T16:05:09.3043212Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T16:05:09.3043423Z 
2025-08-19T16:05:09.3043545Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T16:05:09.3043755Z 
2025-08-19T16:05:09.3043859Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T16:05:09.3044041Z 
2025-08-19T16:05:09.3044185Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T16:05:09.3044407Z 
2025-08-19T16:05:09.3044524Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T16:05:09.3044719Z 
2025-08-19T16:05:09.3044844Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T16:05:09.3045044Z 
2025-08-19T16:05:09.3045152Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T16:05:09.3045344Z 
2025-08-19T16:05:09.3045475Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T16:05:09.3045689Z 
2025-08-19T16:05:09.3045804Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T16:05:09.3046154Z 
2025-08-19T16:05:09.3046262Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T16:05:09.3046447Z 
2025-08-19T16:05:09.3046547Z # api.migrations.versions.0001\_baseline
2025-08-19T16:05:09.3046716Z 
2025-08-19T16:05:09.3046802Z <a id="api.migrations.versions"></a>
2025-08-19T16:05:09.3046966Z 
2025-08-19T16:05:09.3047044Z # api.migrations.versions
2025-08-19T16:05:09.3047168Z 
2025-08-19T16:05:09.3047246Z <a id="api.migrations"></a>
2025-08-19T16:05:09.3047383Z 
2025-08-19T16:05:09.3047448Z # api.migrations
2025-08-19T16:05:09.3047566Z 
2025-08-19T16:05:09.3047635Z <a id="api.db"></a>
2025-08-19T16:05:09.3047738Z 
2025-08-19T16:05:09.3047799Z # api.db
2025-08-19T16:05:09.3047888Z 
2025-08-19T16:05:09.3047964Z <a id="api.routes.score"></a>
2025-08-19T16:05:09.3048101Z 
2025-08-19T16:05:09.3048166Z # api.routes.score
2025-08-19T16:05:09.3048276Z 
2025-08-19T16:05:09.3048350Z <a id="api.routes.stats"></a>
2025-08-19T16:05:09.3048482Z 
2025-08-19T16:05:09.3048559Z # api.routes.stats
2025-08-19T16:05:09.3048666Z 
2025-08-19T16:05:09.3048738Z <a id="api.routes.roi"></a>
2025-08-19T16:05:09.3048869Z 
2025-08-19T16:05:09.3048933Z # api.routes.roi
2025-08-19T16:05:09.3049035Z 
2025-08-19T16:05:09.3049114Z <a id="api.routes.health"></a>
2025-08-19T16:05:09.3049255Z 
2025-08-19T16:05:09.3049323Z # api.routes.health
2025-08-19T16:05:09.3049430Z 
2025-08-19T16:05:09.3049524Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T16:05:09.3049688Z 
2025-08-19T16:05:09.3049749Z #### MAX\_SKEW
2025-08-19T16:05:09.3049844Z 
2025-08-19T16:05:09.3049910Z seconds
2025-08-19T16:05:09.3049991Z 
2025-08-19T16:05:09.3050080Z <a id="api.routes.health.health"></a>
2025-08-19T16:05:09.3050246Z 
2025-08-19T16:05:09.3050306Z #### health
2025-08-19T16:05:09.3050394Z 
2025-08-19T16:05:09.3050457Z ```python
2025-08-19T16:05:09.3050656Z @router.get("/health", include_in_schema=False)
2025-08-19T16:05:09.3051066Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T16:05:09.3051530Z ```
2025-08-19T16:05:09.3051618Z 
2025-08-19T16:05:09.3051739Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T16:05:09.3051933Z 
2025-08-19T16:05:09.3052019Z <a id="api.routes.repository"></a>
2025-08-19T16:05:09.3052183Z 
2025-08-19T16:05:09.3052367Z # api.routes.repository
2025-08-19T16:05:09.3052494Z 
2025-08-19T16:05:09.3052569Z <a id="api.routes"></a>
2025-08-19T16:05:09.3052683Z 
2025-08-19T16:05:09.3052747Z # api.routes
2025-08-19T16:05:09.3052841Z 
2025-08-19T16:05:09.3052924Z <a id="api.models.fee"></a>
2025-08-19T16:05:09.3053053Z 
2025-08-19T16:05:09.3053122Z # api.models.fee
2025-08-19T16:05:09.3053227Z 
2025-08-19T16:05:09.3053310Z <a id="api.models"></a>
2025-08-19T16:05:09.3053433Z 
2025-08-19T16:05:09.3053496Z # api.models
2025-08-19T16:05:09.3053587Z 
2025-08-19T16:05:09.3053664Z <a id="api.roi_repository"></a>
2025-08-19T16:05:09.3053809Z 
2025-08-19T16:05:09.3053878Z # api.roi\_repository
2025-08-19T16:05:09.3053988Z 
2025-08-19T16:05:09.3054072Z <a id="api.main"></a>
2025-08-19T16:05:09.3054185Z 
2025-08-19T16:05:09.3054247Z # api.main
2025-08-19T16:05:09.3054340Z 
2025-08-19T16:05:09.3054417Z <a id="api.main.ready"></a>
2025-08-19T16:05:09.3054543Z 
2025-08-19T16:05:09.3054604Z #### ready
2025-08-19T16:05:09.3054698Z 
2025-08-19T16:05:09.3054760Z ```python
2025-08-19T16:05:09.3055026Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T16:05:09.3055448Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T16:05:09.3055800Z                                                                       str]
2025-08-19T16:05:09.3056021Z ```
2025-08-19T16:05:09.3056106Z 
2025-08-19T16:05:09.3056198Z Return 200 only when migrations are at head.
2025-08-19T16:05:09.3056366Z 
2025-08-19T16:05:09.3056437Z <a id="api.config"></a>
2025-08-19T16:05:09.3056558Z 
2025-08-19T16:05:09.3056620Z # api.config
2025-08-19T16:05:09.3056710Z 
2025-08-19T16:05:09.3056789Z <a id="api.security"></a>
2025-08-19T16:05:09.3056916Z 
2025-08-19T16:05:09.3057104Z # api.security
2025-08-19T16:05:09.3057211Z 
2025-08-19T16:05:09.3057274Z <a id="etl"></a>
2025-08-19T16:05:09.3057373Z 
2025-08-19T16:05:09.3057431Z # etl
2025-08-19T16:05:09.3057522Z 
2025-08-19T16:05:09.3057599Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T16:05:09.3057774Z 
2025-08-19T16:05:09.3057852Z # etl.fba\_fee\_ingestor
2025-08-19T16:05:09.3057970Z 
2025-08-19T16:05:09.3058046Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T16:05:09.3058188Z 
2025-08-19T16:05:09.3058271Z # etl.sp\_fees\_ingestor
2025-08-19T16:05:09.3058388Z 
2025-08-19T16:05:09.3058463Z <a id="etl.keepa_ingestor"></a>
2025-08-19T16:05:09.3058605Z 
2025-08-19T16:05:09.3058674Z # etl.keepa\_ingestor
2025-08-19T16:05:09.3058783Z 
2025-08-19T16:05:09.3058855Z <a id="etl.db"></a>
2025-08-19T16:05:09.3058958Z 
2025-08-19T16:05:09.3059016Z # etl.db
2025-08-19T16:05:09.3059101Z 
2025-08-19T16:05:09.3059187Z <a id="etl.dialects.schemas"></a>
2025-08-19T16:05:09.3059328Z 
2025-08-19T16:05:09.3059406Z # etl.dialects.schemas
2025-08-19T16:05:09.3059535Z 
2025-08-19T16:05:09.3059640Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T16:05:09.3059831Z 
2025-08-19T16:05:09.3059920Z # etl.dialects.amazon\_reimbursements
2025-08-19T16:05:09.3060086Z 
2025-08-19T16:05:09.3060181Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T16:05:09.3060353Z 
2025-08-19T16:05:09.3060444Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T16:05:09.3060601Z 
2025-08-19T16:05:09.3060687Z <a id="etl.dialects.test_generic"></a>
2025-08-19T16:05:09.3060852Z 
2025-08-19T16:05:09.3060930Z # etl.dialects.test\_generic
2025-08-19T16:05:09.3061065Z 
2025-08-19T16:05:09.3061154Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T16:05:09.3061323Z 
2025-08-19T16:05:09.3061404Z # etl.dialects.amazon\_returns
2025-08-19T16:05:09.3061545Z 
2025-08-19T16:05:09.3061645Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T16:05:09.3061817Z 
2025-08-19T16:05:09.3061902Z # etl.dialects.amazon\_fee\_preview
2025-08-19T16:05:09.3062179Z 
2025-08-19T16:05:09.3062408Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T16:05:09.3062595Z 
2025-08-19T16:05:09.3062682Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T16:05:09.3062850Z 
2025-08-19T16:05:09.3062942Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T16:05:09.3063110Z 
2025-08-19T16:05:09.3063201Z # etl.dialects.amazon\_settlements
2025-08-19T16:05:09.3063351Z 
2025-08-19T16:05:09.3063425Z <a id="etl.dialects"></a>
2025-08-19T16:05:09.3063555Z 
2025-08-19T16:05:09.3063618Z # etl.dialects
2025-08-19T16:05:09.3063713Z 
2025-08-19T16:05:09.3063778Z <a id="ingest"></a>
2025-08-19T16:05:09.3063889Z 
2025-08-19T16:05:09.3063948Z # ingest
2025-08-19T16:05:09.3064033Z 
2025-08-19T16:05:09.3064116Z <a id="ingest.maintenance"></a>
2025-08-19T16:05:09.3064256Z 
2025-08-19T16:05:09.3064326Z # ingest.maintenance
2025-08-19T16:05:09.3064442Z 
2025-08-19T16:05:09.3064519Z <a id="ingest.copy_loader"></a>
2025-08-19T16:05:09.3064653Z 
2025-08-19T16:05:09.3064722Z # ingest.copy\_loader
2025-08-19T16:05:09.3064855Z 
2025-08-19T16:05:09.3064955Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T16:05:09.3065133Z 
2025-08-19T16:05:09.3065208Z #### copy\_df\_via\_temp
2025-08-19T16:05:09.3065327Z 
2025-08-19T16:05:09.3065388Z ```python
2025-08-19T16:05:09.3065560Z def copy_df_via_temp(engine: Engine,
2025-08-19T16:05:09.3065785Z                      df: pd.DataFrame,
2025-08-19T16:05:09.3066020Z                      target_table: str,
2025-08-19T16:05:09.3066235Z                      *,
2025-08-19T16:05:09.3066441Z                      target_schema: Optional[str] = None,
2025-08-19T16:05:09.3066700Z                      columns: Sequence[str],
2025-08-19T16:05:09.3066961Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T16:05:09.3067240Z                      analyze_after: bool = False,
2025-08-19T16:05:09.3067493Z                      connection: Any | None = None) -> int
2025-08-19T16:05:09.3067725Z ```
2025-08-19T16:05:09.3067805Z 
2025-08-19T16:05:09.3067961Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T16:05:09.3068325Z 
2025-08-19T16:05:09.3068410Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T16:05:09.3068565Z 
2025-08-19T16:05:09.3068648Z # ingest.tests.test\_smoke
2025-08-19T16:05:09.3068775Z 
2025-08-19T16:05:09.3068847Z <a id="ingest.tests"></a>
2025-08-19T16:05:09.3068967Z 
2025-08-19T16:05:09.3069036Z # ingest.tests
2025-08-19T16:05:09.3069132Z 
2025-08-19T16:05:09.3069213Z <a id="ingest.upload_router"></a>
2025-08-19T16:05:09.3069364Z 
2025-08-19T16:05:09.3069435Z # ingest.upload\_router
2025-08-19T16:05:09.3069551Z 
2025-08-19T16:05:09.3069633Z <a id="ingest.email_watcher"></a>
2025-08-19T16:05:09.3069774Z 
2025-08-19T16:05:09.3069842Z # ingest.email\_watcher
2025-08-19T16:05:09.3069955Z 
2025-08-19T16:05:09.3070045Z <a id="ingest.email_watcher.main"></a>
2025-08-19T16:05:09.3070202Z 
2025-08-19T16:05:09.3070261Z #### main
2025-08-19T16:05:09.3070351Z 
2025-08-19T16:05:09.3070416Z ```python
2025-08-19T16:05:09.3070580Z def main() -> dict[str, str]
2025-08-19T16:05:09.3070779Z ```
2025-08-19T16:05:09.3070859Z 
2025-08-19T16:05:09.3071002Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T16:05:09.3071225Z 
2025-08-19T16:05:09.3071351Z Returns {"status": "success"} when processing completes.
2025-08-19T16:05:09.3071557Z 
2025-08-19T16:05:09.3071637Z <a id="ingest.tasks"></a>
2025-08-19T16:05:09.3071758Z 
2025-08-19T16:05:09.3071821Z # ingest.tasks
2025-08-19T16:05:09.3071926Z 
2025-08-19T16:05:09.3072018Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T16:05:09.3072189Z 
2025-08-19T16:05:09.3072368Z #### task\_import\_file
2025-08-19T16:05:09.3072482Z 
2025-08-19T16:05:09.3072543Z ```python
2025-08-19T16:05:09.3072749Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T16:05:09.3073041Z def task_import_file(self: Any,
2025-08-19T16:05:09.3073247Z                      uri: str,
2025-08-19T16:05:09.3073467Z                      report_type: str | None = None,
2025-08-19T16:05:09.3073850Z                      force: bool = False) -> dict[str, Any]
2025-08-19T16:05:09.3074096Z ```
2025-08-19T16:05:09.3074175Z 
2025-08-19T16:05:09.3074308Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T16:05:09.3074514Z 
2025-08-19T16:05:09.3074593Z <a id="ingest.celery_app"></a>
2025-08-19T16:05:09.3074735Z 
2025-08-19T16:05:09.3074804Z # ingest.celery\_app
2025-08-19T16:05:09.3074913Z 
2025-08-19T16:05:09.3074990Z <a id="ingest.ingest_router"></a>
2025-08-19T16:05:09.3075138Z 
2025-08-19T16:05:09.3075211Z # ingest.ingest\_router
2025-08-19T16:05:09.3075326Z 
2025-08-19T16:05:09.3075403Z <a id="logistics_etl"></a>
2025-08-19T16:05:09.3075526Z 
2025-08-19T16:05:09.3075588Z # logistics\_etl
2025-08-19T16:05:09.3075691Z 
2025-08-19T16:05:09.3075768Z Daily logistics ETL job.
2025-08-19T16:05:09.3075889Z 
2025-08-19T16:05:09.3075966Z <a id="logistics_etl.__main__"></a>
2025-08-19T16:05:09.3076119Z 
2025-08-19T16:05:09.3076195Z # logistics\_etl.\_\_main\_\_
2025-08-19T16:05:09.3076333Z 
2025-08-19T16:05:09.3076420Z <a id="logistics_etl.dsn"></a>
2025-08-19T16:05:09.3076555Z 
2025-08-19T16:05:09.3076622Z # logistics\_etl.dsn
2025-08-19T16:05:09.3076727Z 
2025-08-19T16:05:09.3076843Z Local DSN builder to avoid cross-service dependency.
2025-08-19T16:05:09.3077037Z 
2025-08-19T16:05:09.3077125Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T16:05:09.3077292Z 
2025-08-19T16:05:09.3077354Z #### build\_dsn
2025-08-19T16:05:09.3077453Z 
2025-08-19T16:05:09.3077514Z ```python
2025-08-19T16:05:09.3077692Z def build_dsn(sync: bool = True) -> str
2025-08-19T16:05:09.3077911Z ```
2025-08-19T16:05:09.3077988Z 
2025-08-19T16:05:09.3078121Z Return a Postgres DSN assembled from environment variables.
2025-08-19T16:05:09.3078345Z 
2025-08-19T16:05:09.3078494Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T16:05:09.3078872Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T16:05:09.3079206Z error when any required variable is missing.
2025-08-19T16:05:09.3079381Z 
2025-08-19T16:05:09.3079601Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T16:05:09.3079771Z 
2025-08-19T16:05:09.3079851Z # logistics\_etl.tests.conftest
2025-08-19T16:05:09.3079990Z 
2025-08-19T16:05:09.3080094Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T16:05:09.3080275Z 
2025-08-19T16:05:09.3080362Z # logistics\_etl.tests.test\_repository
2025-08-19T16:05:09.3080527Z 
2025-08-19T16:05:09.3080616Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T16:05:09.3080779Z 
2025-08-19T16:05:09.3080864Z # logistics\_etl.tests.test\_cron
2025-08-19T16:05:09.3081011Z 
2025-08-19T16:05:09.3081103Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T16:05:09.3081273Z 
2025-08-19T16:05:09.3081360Z # logistics\_etl.tests.test\_imports
2025-08-19T16:05:09.3081514Z 
2025-08-19T16:05:09.3081602Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T16:05:09.3081773Z 
2025-08-19T16:05:09.3081854Z # logistics\_etl.tests.test\_smoke
2025-08-19T16:05:09.3082005Z 
2025-08-19T16:05:09.3082099Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T16:05:09.3082386Z 
2025-08-19T16:05:09.3082469Z # logistics\_etl.tests.test\_client
2025-08-19T16:05:09.3082618Z 
2025-08-19T16:05:09.3082702Z <a id="logistics_etl.tests"></a>
2025-08-19T16:05:09.3082843Z 
2025-08-19T16:05:09.3082911Z # logistics\_etl.tests
2025-08-19T16:05:09.3083031Z 
2025-08-19T16:05:09.3083106Z <a id="logistics_etl.flow"></a>
2025-08-19T16:05:09.3083240Z 
2025-08-19T16:05:09.3083314Z # logistics\_etl.flow
2025-08-19T16:05:09.3083425Z 
2025-08-19T16:05:09.3083503Z <a id="logistics_etl.client"></a>
2025-08-19T16:05:09.3083646Z 
2025-08-19T16:05:09.3083723Z # logistics\_etl.client
2025-08-19T16:05:09.3083840Z 
2025-08-19T16:05:09.3083913Z <a id="logistics_etl.cron"></a>
2025-08-19T16:05:09.3084054Z 
2025-08-19T16:05:09.3084121Z # logistics\_etl.cron
2025-08-19T16:05:09.3084231Z 
2025-08-19T16:05:09.3084306Z <a id="logistics_etl.db"></a>
2025-08-19T16:05:09.3084448Z 
2025-08-19T16:05:09.3084514Z # logistics\_etl.db
2025-08-19T16:05:09.3084763Z 
2025-08-19T16:05:09.3084875Z <a id="logistics_etl.repository"></a>
2025-08-19T16:05:09.3085032Z 
2025-08-19T16:05:09.3157691Z # logistics\_etl.repository
2025-08-19T16:05:09.3158009Z 
2025-08-19T16:05:09.3158155Z <a id="alert_bot"></a>
2025-08-19T16:05:09.3158399Z 
2025-08-19T16:05:09.3158536Z # alert\_bot
2025-08-19T16:05:09.3158735Z 
2025-08-19T16:05:09.3158919Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T16:05:09.3159134Z 
2025-08-19T16:05:09.3159241Z # alert\_bot.tests.test\_smoke
2025-08-19T16:05:09.3159417Z 
2025-08-19T16:05:09.3159512Z <a id="alert_bot.tests"></a>
2025-08-19T16:05:09.3159682Z 
2025-08-19T16:05:09.3159763Z # alert\_bot.tests
2025-08-19T16:05:09.3159894Z 
2025-08-19T16:05:09.3160008Z <a id="alert_bot.alert_bot"></a>
2025-08-19T16:05:09.3160191Z 
2025-08-19T16:05:09.3160279Z # alert\_bot.alert\_bot
2025-08-19T16:05:09.3160426Z 
2025-08-19T16:05:09.3160529Z <a id="alert_bot.rules"></a>
2025-08-19T16:05:09.3160690Z 
2025-08-19T16:05:09.3160782Z # alert\_bot.rules
2025-08-19T16:05:09.3160923Z 
2025-08-19T16:05:09.3161004Z <a id="common"></a>
2025-08-19T16:05:09.3161132Z 
2025-08-19T16:05:09.3161209Z # common
2025-08-19T16:05:09.3161325Z 
2025-08-19T16:05:09.3161414Z <a id="common.dsn"></a>
2025-08-19T16:05:09.3161557Z 
2025-08-19T16:05:09.3161708Z # common.dsn
2025-08-19T16:05:09.3161824Z 
2025-08-19T16:05:09.3161928Z <a id="common.dsn.build_dsn"></a>
2025-08-19T16:05:09.3162121Z 
2025-08-19T16:05:09.3162201Z #### build\_dsn
2025-08-19T16:05:09.3162495Z 
2025-08-19T16:05:09.3162577Z ```python
2025-08-19T16:05:09.3162802Z def build_dsn(sync: bool = True) -> str
2025-08-19T16:05:09.3163077Z ```
2025-08-19T16:05:09.3163178Z 
2025-08-19T16:05:09.3163330Z Return a Postgres DSN, validating required variables.
2025-08-19T16:05:09.3163583Z 
2025-08-19T16:05:09.3163826Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T16:05:09.3164378Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T16:05:09.3164894Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T16:05:09.3165457Z missing.
2025-08-19T16:05:09.3165571Z 
2025-08-19T16:05:09.3165671Z <a id="common.models_vendor"></a>
2025-08-19T16:05:09.3165855Z 
2025-08-19T16:05:09.3165948Z # common.models\_vendor
2025-08-19T16:05:09.3166092Z 
2025-08-19T16:05:09.3166201Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T16:05:09.3166411Z 
2025-08-19T16:05:09.3166487Z ## Vendor Objects
2025-08-19T16:05:09.3166614Z 
2025-08-19T16:05:09.3166690Z ```python
2025-08-19T16:05:09.3166880Z class Vendor(Base)
2025-08-19T16:05:09.3167076Z ```
2025-08-19T16:05:09.3167181Z 
2025-08-19T16:05:09.3167275Z Vendor of inventory items.
2025-08-19T16:05:09.3167434Z 
2025-08-19T16:05:09.3167562Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T16:05:09.3167780Z 
2025-08-19T16:05:09.3167869Z ## VendorPrice Objects
2025-08-19T16:05:09.3168017Z 
2025-08-19T16:05:09.3168090Z ```python
2025-08-19T16:05:09.3168278Z class VendorPrice(Base)
2025-08-19T16:05:09.3168511Z ```
2025-08-19T16:05:09.3168602Z 
2025-08-19T16:05:09.3168702Z Association table linking vendors to pricing.
2025-08-19T16:05:09.3168886Z 
2025-08-19T16:05:09.3168962Z <a id="common.db_url"></a>
2025-08-19T16:05:09.3169088Z 
2025-08-19T16:05:09.3169159Z # common.db\_url
2025-08-19T16:05:09.3169260Z 
2025-08-19T16:05:09.3169341Z <a id="common.db_url.build_url"></a>
2025-08-19T16:05:09.3169499Z 
2025-08-19T16:05:09.3169560Z #### build\_url
2025-08-19T16:05:09.3169657Z 
2025-08-19T16:05:09.3169718Z ```python
2025-08-19T16:05:09.3169888Z def build_url(async_: bool = True) -> str
2025-08-19T16:05:09.3170110Z ```
2025-08-19T16:05:09.3170190Z 
2025-08-19T16:05:09.3170286Z Return Postgres DSN from env or PG_* parts.
2025-08-19T16:05:09.3170457Z 
2025-08-19T16:05:09.3170538Z <a id="common.keepa"></a>
2025-08-19T16:05:09.3170663Z 
2025-08-19T16:05:09.3170729Z # common.keepa
2025-08-19T16:05:09.3170833Z 
2025-08-19T16:05:09.3170901Z <a id="common.llm"></a>
2025-08-19T16:05:09.3171146Z 
2025-08-19T16:05:09.3171208Z # common.llm
2025-08-19T16:05:09.3171312Z 
2025-08-19T16:05:09.3171392Z <a id="common.settings"></a>
2025-08-19T16:05:09.3171527Z 
2025-08-19T16:05:09.3171602Z # common.settings
2025-08-19T16:05:09.3171706Z 
2025-08-19T16:05:09.3171773Z <a id="common.db"></a>
2025-08-19T16:05:09.3171895Z 
2025-08-19T16:05:09.3171956Z # common.db
2025-08-19T16:05:09.3172043Z 
2025-08-19T16:05:09.3172135Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T16:05:09.3172414Z 
2025-08-19T16:05:09.3172488Z #### build\_sqlalchemy\_url
2025-08-19T16:05:09.3172621Z 
2025-08-19T16:05:09.3172698Z ```python
2025-08-19T16:05:09.3172863Z def build_sqlalchemy_url() -> str
2025-08-19T16:05:09.3173071Z ```
2025-08-19T16:05:09.3173151Z 
2025-08-19T16:05:09.3173243Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T16:05:09.3173416Z 
2025-08-19T16:05:09.3173505Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T16:05:09.3173668Z 
2025-08-19T16:05:09.3173740Z #### build\_asyncpg\_dsn
2025-08-19T16:05:09.3173875Z 
2025-08-19T16:05:09.3173941Z ```python
2025-08-19T16:05:09.3174118Z def build_asyncpg_dsn() -> str
2025-08-19T16:05:09.3174308Z ```
2025-08-19T16:05:09.3174388Z 
2025-08-19T16:05:09.3174521Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T16:05:09.3174730Z 
2025-08-19T16:05:09.3174812Z <a id="common.db.refresh_mvs"></a>
2025-08-19T16:05:09.3174967Z 
2025-08-19T16:05:09.3175030Z #### refresh\_mvs
2025-08-19T16:05:09.3175131Z 
2025-08-19T16:05:09.3175194Z ```python
2025-08-19T16:05:09.3175382Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T16:05:09.3175631Z ```
2025-08-19T16:05:09.3175709Z 
2025-08-19T16:05:09.3175843Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T16:05:09.3176062Z 
2025-08-19T16:05:09.3176137Z <a id="common.config"></a>
2025-08-19T16:05:09.3176264Z 
2025-08-19T16:05:09.3176327Z # common.config
2025-08-19T16:05:09.3176432Z 
2025-08-19T16:05:09.3176502Z <a id="common.base"></a>
2025-08-19T16:05:09.3176620Z 
2025-08-19T16:05:09.3176694Z # common.base
2025-08-19T16:05:09.3176915Z 
2025-08-19T16:05:09.3176992Z <a id="common.base.Base"></a>
2025-08-19T16:05:09.3177127Z 
2025-08-19T16:05:09.3177195Z ## Base Objects
2025-08-19T16:05:09.3177290Z 
2025-08-19T16:05:09.3177349Z ```python
2025-08-19T16:05:09.3177514Z class Base(DeclarativeBase)
2025-08-19T16:05:09.3177696Z ```
2025-08-19T16:05:09.3177778Z 
2025-08-19T16:05:09.3177857Z Base class for SQLAlchemy models.
2025-08-19T16:05:09.3177998Z 
2025-08-19T16:05:09.3178072Z <a id="repricer"></a>
2025-08-19T16:05:09.3178191Z 
2025-08-19T16:05:09.3178251Z # repricer
2025-08-19T16:05:09.3178337Z 
2025-08-19T16:05:09.3178425Z <a id="repricer.app.schemas"></a>
2025-08-19T16:05:09.3178570Z 
2025-08-19T16:05:09.3178644Z # repricer.app.schemas
2025-08-19T16:05:09.3178766Z 
2025-08-19T16:05:09.3178844Z <a id="repricer.app.deps"></a>
2025-08-19T16:05:09.3178981Z 
2025-08-19T16:05:09.3179057Z # repricer.app.deps
2025-08-19T16:05:09.3179165Z 
2025-08-19T16:05:09.3179269Z Placeholder module for Keepa / SP-API clients.
2025-08-19T16:05:09.3179462Z 
2025-08-19T16:05:09.3179548Z <a id="repricer.app.logic"></a>
2025-08-19T16:05:09.3179689Z 
2025-08-19T16:05:09.3179760Z # repricer.app.logic
2025-08-19T16:05:09.3179877Z 
2025-08-19T16:05:09.3179973Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T16:05:09.3180145Z 
2025-08-19T16:05:09.3180211Z #### MIN\_MARGIN
2025-08-19T16:05:09.3180310Z 
2025-08-19T16:05:09.3180368Z 15 % ROI
2025-08-19T16:05:09.3180452Z 
2025-08-19T16:05:09.3180557Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T16:05:09.3180733Z 
2025-08-19T16:05:09.3180802Z #### compute\_price
2025-08-19T16:05:09.3180912Z 
2025-08-19T16:05:09.3180971Z ```python
2025-08-19T16:05:09.3181209Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T16:05:09.3181509Z ```
2025-08-19T16:05:09.3181586Z 
2025-08-19T16:05:09.3181693Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T16:05:09.3181962Z Replace with real competitive logic later.
2025-08-19T16:05:09.3182350Z 
2025-08-19T16:05:09.3182436Z <a id="repricer.app.main"></a>
2025-08-19T16:05:09.3182578Z 
2025-08-19T16:05:09.3182647Z # repricer.app.main
2025-08-19T16:05:09.3182757Z 
2025-08-19T16:05:09.3182830Z <a id="repricer.app"></a>
2025-08-19T16:05:09.3182956Z 
2025-08-19T16:05:09.3183022Z # repricer.app
2025-08-19T16:05:09.3183123Z 
2025-08-19T16:05:09.3183212Z <a id="repricer.tests.test_imports"></a>
2025-08-19T16:05:09.3183377Z 
2025-08-19T16:05:09.3183461Z # repricer.tests.test\_imports
2025-08-19T16:05:09.3183598Z 
2025-08-19T16:05:09.3183684Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T16:05:09.3183848Z 
2025-08-19T16:05:09.3183927Z # repricer.tests.test\_smoke
2025-08-19T16:05:09.3184060Z 
2025-08-19T16:05:09.3184133Z <a id="repricer.tests"></a>
2025-08-19T16:05:09.3184268Z 
2025-08-19T16:05:09.3184334Z # repricer.tests
2025-08-19T16:05:09.3184436Z 
2025-08-19T16:05:09.3184504Z <a id="db"></a>
2025-08-19T16:05:09.3184601Z 
2025-08-19T16:05:09.3184660Z # db
2025-08-19T16:05:09.3184749Z 
2025-08-19T16:05:09.3184833Z <a id="db.utils.views"></a>
2025-08-19T16:05:09.3184962Z 
2025-08-19T16:05:09.3185026Z # db.utils.views
2025-08-19T16:05:09.3185131Z 
2025-08-19T16:05:09.3185221Z <a id="db.utils.views.replace_view"></a>
2025-08-19T16:05:09.3185384Z 
2025-08-19T16:05:09.3185455Z #### replace\_view
2025-08-19T16:05:09.3185557Z 
2025-08-19T16:05:09.3185620Z ```python
2025-08-19T16:05:09.3185809Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T16:05:09.3186047Z ```
2025-08-19T16:05:09.3186131Z 
2025-08-19T16:05:09.3186217Z Drop and recreate a SQL view atomically.
2025-08-19T16:05:09.3186378Z 
2025-08-19T16:05:09.3186444Z <a id="db.utils"></a>
2025-08-19T16:05:09.3186564Z 
2025-08-19T16:05:09.3186624Z # db.utils
2025-08-19T16:05:09.3186711Z 
2025-08-19T16:05:09.3186792Z <a id="price_importer"></a>
2025-08-19T16:05:09.3186916Z 
2025-08-19T16:05:09.3186984Z # price\_importer
2025-08-19T16:05:09.3187091Z 
2025-08-19T16:05:09.3187191Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T16:05:09.3187375Z 
2025-08-19T16:05:09.3187462Z # price\_importer.services\_common.dsn
2025-08-19T16:05:09.3187793Z 
2025-08-19T16:05:09.3187916Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T16:05:09.3188123Z 
2025-08-19T16:05:09.3188188Z #### build\_dsn
2025-08-19T16:05:09.3188284Z 
2025-08-19T16:05:09.3188344Z ```python
2025-08-19T16:05:09.3188516Z def build_dsn(sync: bool = True) -> str
2025-08-19T16:05:09.3188728Z ```
2025-08-19T16:05:09.3188812Z 
2025-08-19T16:05:09.3188877Z Return safe DSN.
2025-08-19T16:05:09.3188977Z 
2025-08-19T16:05:09.3189322Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T16:05:09.3189529Z 
2025-08-19T16:05:09.3189654Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T16:05:09.3189859Z 
2025-08-19T16:05:09.3189972Z # price\_importer.services\_common.models\_vendor
2025-08-19T16:05:09.3190163Z 
2025-08-19T16:05:09.3190267Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T16:05:09.3190457Z 
2025-08-19T16:05:09.3190557Z # price\_importer.services\_common.db\_url
2025-08-19T16:05:09.3190734Z 
2025-08-19T16:05:09.3190866Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T16:05:09.3191086Z 
2025-08-19T16:05:09.3191148Z #### build\_url
2025-08-19T16:05:09.3191246Z 
2025-08-19T16:05:09.3191312Z ```python
2025-08-19T16:05:09.3191479Z def build_url(async_: bool = True) -> str
2025-08-19T16:05:09.3191702Z ```
2025-08-19T16:05:09.3191782Z 
2025-08-19T16:05:09.3191875Z Return Postgres DSN from env or PG_* parts.
2025-08-19T16:05:09.3192053Z 
2025-08-19T16:05:09.3192156Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T16:05:09.3192438Z 
2025-08-19T16:05:09.3192535Z # price\_importer.services\_common.keepa
2025-08-19T16:05:09.3192700Z 
2025-08-19T16:05:09.3192798Z <a id="price_importer.services_common.llm"></a>
2025-08-19T16:05:09.3192975Z 
2025-08-19T16:05:09.3193069Z # price\_importer.services\_common.llm
2025-08-19T16:05:09.3193229Z 
2025-08-19T16:05:09.3193339Z <a id="price_importer.services_common.settings"></a>
2025-08-19T16:05:09.3193660Z 
2025-08-19T16:05:09.3193752Z # price\_importer.services\_common.settings
2025-08-19T16:05:09.3193921Z 
2025-08-19T16:05:09.3194024Z <a id="price_importer.services_common.db"></a>
2025-08-19T16:05:09.3194199Z 
2025-08-19T16:05:09.3194285Z # price\_importer.services\_common.db
2025-08-19T16:05:09.3194447Z 
2025-08-19T16:05:09.3194598Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T16:05:09.3194834Z 
2025-08-19T16:05:09.3194908Z #### build\_sqlalchemy\_url
2025-08-19T16:05:09.3195042Z 
2025-08-19T16:05:09.3195102Z ```python
2025-08-19T16:05:09.3195272Z def build_sqlalchemy_url() -> str
2025-08-19T16:05:09.3195473Z ```
2025-08-19T16:05:09.3195553Z 
2025-08-19T16:05:09.3195652Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T16:05:09.3195819Z 
2025-08-19T16:05:09.3195959Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T16:05:09.3196191Z 
2025-08-19T16:05:09.3196262Z #### build\_asyncpg\_dsn
2025-08-19T16:05:09.3196392Z 
2025-08-19T16:05:09.3196457Z ```python
2025-08-19T16:05:09.3196625Z def build_asyncpg_dsn() -> str
2025-08-19T16:05:09.3196823Z ```
2025-08-19T16:05:09.3196902Z 
2025-08-19T16:05:09.3197027Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T16:05:09.3197233Z 
2025-08-19T16:05:09.3197363Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T16:05:09.3197567Z 
2025-08-19T16:05:09.3197633Z #### refresh\_mvs
2025-08-19T16:05:09.3197743Z 
2025-08-19T16:05:09.3197804Z ```python
2025-08-19T16:05:09.3197993Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T16:05:09.3198238Z ```
2025-08-19T16:05:09.3198316Z 
2025-08-19T16:05:09.3198453Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T16:05:09.3198674Z 
2025-08-19T16:05:09.3198766Z <a id="price_importer.services_common"></a>
2025-08-19T16:05:09.3198941Z 
2025-08-19T16:05:09.3199025Z # price\_importer.services\_common
2025-08-19T16:05:09.3199177Z 
2025-08-19T16:05:09.3199278Z <a id="price_importer.services_common.base"></a>
2025-08-19T16:05:09.3199586Z 
2025-08-19T16:05:09.3199674Z # price\_importer.services\_common.base
2025-08-19T16:05:09.3199834Z 
2025-08-19T16:05:09.3199929Z <a id="price_importer.normaliser"></a>
2025-08-19T16:05:09.3200087Z 
2025-08-19T16:05:09.3200167Z # price\_importer.normaliser
2025-08-19T16:05:09.3200307Z 
2025-08-19T16:05:09.3200408Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T16:05:09.3200586Z 
2025-08-19T16:05:09.3200672Z # price\_importer.common.models\_vendor
2025-08-19T16:05:09.3200835Z 
2025-08-19T16:05:09.3200923Z <a id="price_importer.common.db_url"></a>
2025-08-19T16:05:09.3201089Z 
2025-08-19T16:05:09.3201179Z # price\_importer.common.db\_url
2025-08-19T16:05:09.3201323Z 
2025-08-19T16:05:09.3201424Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T16:05:09.3201612Z 
2025-08-19T16:05:09.3201673Z #### make\_dsn
2025-08-19T16:05:09.3201768Z 
2025-08-19T16:05:09.3201831Z ```python
2025-08-19T16:05:09.3202003Z def make_dsn(async_: bool = False) -> str
2025-08-19T16:05:09.3202356Z ```
2025-08-19T16:05:09.3202440Z 
2025-08-19T16:05:09.3202557Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T16:05:09.3202755Z 
2025-08-19T16:05:09.3202866Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T16:05:09.3203051Z 
2025-08-19T16:05:09.3203113Z #### build\_url
2025-08-19T16:05:09.3203233Z 
2025-08-19T16:05:09.3203296Z ```python
2025-08-19T16:05:09.3203462Z def build_url(async_: bool = False) -> str
2025-08-19T16:05:09.3203691Z ```
2025-08-19T16:05:09.3203770Z 
2025-08-19T16:05:09.3203892Z Return Postgres DSN built from environment variables.
2025-08-19T16:05:09.3204085Z 
2025-08-19T16:05:09.3204168Z <a id="price_importer.common"></a>
2025-08-19T16:05:09.3204323Z 
2025-08-19T16:05:09.3204400Z # price\_importer.common
2025-08-19T16:05:09.3204525Z 
2025-08-19T16:05:09.3204612Z <a id="price_importer.common.base"></a>
2025-08-19T16:05:09.3204778Z 
2025-08-19T16:05:09.3204859Z # price\_importer.common.base
2025-08-19T16:05:09.3205120Z 
2025-08-19T16:05:09.3205229Z <a id="price_importer.tests.conftest"></a>
2025-08-19T16:05:09.3205400Z 
2025-08-19T16:05:09.3205482Z # price\_importer.tests.conftest
2025-08-19T16:05:09.3205628Z 
2025-08-19T16:05:09.3205730Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T16:05:09.3205901Z 
2025-08-19T16:05:09.3205988Z # price\_importer.tests.test\_reader
2025-08-19T16:05:09.3206148Z 
2025-08-19T16:05:09.3206250Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T16:05:09.3206428Z 
2025-08-19T16:05:09.3206534Z # price\_importer.tests.test\_imports
2025-08-19T16:05:09.3206711Z 
2025-08-19T16:05:09.3206804Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T16:05:09.3206976Z 
2025-08-19T16:05:09.3207058Z # price\_importer.tests.test\_smoke
2025-08-19T16:05:09.3207212Z 
2025-08-19T16:05:09.3207313Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T16:05:09.3207532Z 
2025-08-19T16:05:09.3207622Z # price\_importer.tests.test\_normaliser
2025-08-19T16:05:09.3207788Z 
2025-08-19T16:05:09.3207883Z <a id="price_importer.tests"></a>
2025-08-19T16:05:09.3208037Z 
2025-08-19T16:05:09.3208111Z # price\_importer.tests
2025-08-19T16:05:09.3208241Z 
2025-08-19T16:05:09.3208323Z <a id="price_importer.reader"></a>
2025-08-19T16:05:09.3208469Z 
2025-08-19T16:05:09.3208543Z # price\_importer.reader
2025-08-19T16:05:09.3208671Z 
2025-08-19T16:05:09.3208758Z <a id="price_importer.repository"></a>
2025-08-19T16:05:09.3208917Z 
2025-08-19T16:05:09.3209006Z # price\_importer.repository
2025-08-19T16:05:09.3209143Z 
2025-08-19T16:05:09.3209226Z <a id="price_importer.import"></a>
2025-08-19T16:05:09.3209380Z 
2025-08-19T16:05:09.3209458Z # price\_importer.import
2025-08-19T16:05:09.3209591Z 
2025-08-19T16:05:09.3209661Z <a id="fees_h10"></a>
2025-08-19T16:05:09.3209783Z 
2025-08-19T16:05:09.3209846Z # fees\_h10
2025-08-19T16:05:09.3209939Z 
2025-08-19T16:05:09.3210017Z <a id="fees_h10.worker"></a>
2025-08-19T16:05:09.3210147Z 
2025-08-19T16:05:09.3210212Z # fees\_h10.worker
2025-08-19T16:05:09.3210319Z 
2025-08-19T16:05:09.3210545Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T16:05:09.3210727Z 
2025-08-19T16:05:09.3210798Z #### list\_active\_asins
2025-08-19T16:05:09.3210925Z 
2025-08-19T16:05:09.3210987Z ```python
2025-08-19T16:05:09.3211155Z def list_active_asins() -> list[str]
2025-08-19T16:05:09.3211366Z ```
2025-08-19T16:05:09.3211447Z 
2025-08-19T16:05:09.3211563Z Return known ASINs or an empty list if unavailable.
2025-08-19T16:05:09.3211758Z 
2025-08-19T16:05:09.3211841Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T16:05:09.3212000Z 
2025-08-19T16:05:09.3212077Z # fees\_h10.tests.test\_smoke
2025-08-19T16:05:09.3212214Z 
2025-08-19T16:05:09.3212386Z <a id="fees_h10.tests"></a>
2025-08-19T16:05:09.3212520Z 
2025-08-19T16:05:09.3212583Z # fees\_h10.tests
2025-08-19T16:05:09.3212683Z 
2025-08-19T16:05:09.3212762Z <a id="fees_h10.client"></a>
2025-08-19T16:05:09.3212893Z 
2025-08-19T16:05:09.3212955Z # fees\_h10.client
2025-08-19T16:05:09.3213057Z 
2025-08-19T16:05:09.3213145Z <a id="fees_h10.repository"></a>
2025-08-19T16:05:09.3213291Z 
2025-08-19T16:05:09.3213360Z # fees\_h10.repository
2025-08-19T16:05:09.3213480Z 
2025-08-19T16:05:09.3213580Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T16:05:09.3213764Z 
2025-08-19T16:05:09.3213838Z #### upsert\_fees\_raw
2025-08-19T16:05:09.3213949Z 
2025-08-19T16:05:09.3214010Z ```python
2025-08-19T16:05:09.3214182Z def upsert_fees_raw(engine: Engine,
2025-08-19T16:05:09.3214422Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T16:05:09.3214664Z                     *,
2025-08-19T16:05:09.3214886Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T16:05:09.3215156Z ```
2025-08-19T16:05:09.3215237Z 
2025-08-19T16:05:09.3215315Z Idempotent upsert for fees.
2025-08-19T16:05:09.3215455Z 
2025-08-19T16:05:09.3215606Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T16:05:09.3215957Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T16:05:09.3216382Z Only updates when one of the mutable fields changes.
2025-08-19T16:05:09.3216590Z 
2025-08-19T16:05:09.3216659Z <a id="emailer"></a>
2025-08-19T16:05:09.3216768Z 
2025-08-19T16:05:09.3216833Z # emailer
2025-08-19T16:05:09.3216927Z 
2025-08-19T16:05:09.3217025Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T16:05:09.3217203Z 
2025-08-19T16:05:09.3217300Z # emailer.tests.test\_import\_emailer
2025-08-19T16:05:09.3217459Z 
2025-08-19T16:05:09.3217543Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T16:05:09.3217703Z 
2025-08-19T16:05:09.3217779Z # emailer.tests.test\_smoke
2025-08-19T16:05:09.3217912Z 
2025-08-19T16:05:09.3217987Z <a id="emailer.tests"></a>
2025-08-19T16:05:09.3218124Z 
2025-08-19T16:05:09.3218188Z # emailer.tests
2025-08-19T16:05:09.3218289Z 
2025-08-19T16:05:09.3218378Z <a id="emailer.generate_body"></a>
2025-08-19T16:05:09.3236958Z 
2025-08-19T16:05:09.3237083Z # emailer.generate\_body
2025-08-19T16:05:09.3237254Z 
2025-08-19T16:05:09.3237345Z <a id="llm_server"></a>
2025-08-19T16:05:09.3237490Z 
2025-08-19T16:05:09.3237565Z # llm\_server
2025-08-19T16:05:09.3237676Z 
2025-08-19T16:05:09.3237762Z <a id="llm_server.app"></a>
2025-08-19T16:05:09.3237903Z 
2025-08-19T16:05:09.3237974Z # llm\_server.app
2025-08-19T16:05:09.3238089Z 
