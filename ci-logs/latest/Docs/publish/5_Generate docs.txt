2025-08-18T09:06:37.7525819Z ##[group]Run pydoc-markdown
2025-08-18T09:06:37.7526134Z [36;1mpydoc-markdown[0m
2025-08-18T09:06:37.7567368Z shell: /usr/bin/bash -e {0}
2025-08-18T09:06:37.7567600Z env:
2025-08-18T09:06:37.7567841Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T09:06:37.7568261Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T09:06:37.7568657Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T09:06:37.7568999Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T09:06:37.7569348Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T09:06:37.7569694Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T09:06:37.7569994Z ##[endgroup]
2025-08-18T09:06:38.1083125Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T09:06:38.1083627Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T09:06:38.1083950Z In "pydoc-markdown.yml"
2025-08-18T09:06:38.1084255Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T09:06:38.1084729Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T09:06:38.1085258Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T09:06:38.1085616Z 
2025-08-18T09:06:38.3948782Z <a id="__init__"></a>
2025-08-18T09:06:38.3949135Z 
2025-08-18T09:06:38.3949270Z # \_\_init\_\_
2025-08-18T09:06:38.3949494Z 
2025-08-18T09:06:38.3949642Z <a id="api"></a>
2025-08-18T09:06:38.3949875Z 
2025-08-18T09:06:38.3950007Z # api
2025-08-18T09:06:38.3950183Z 
2025-08-18T09:06:38.3950337Z <a id="api.errors"></a>
2025-08-18T09:06:38.3950583Z 
2025-08-18T09:06:38.3950725Z # api.errors
2025-08-18T09:06:38.3950923Z 
2025-08-18T09:06:38.3951117Z <a id="api.tests.test_errors_json"></a>
2025-08-18T09:06:38.3951482Z 
2025-08-18T09:06:38.3951649Z # api.tests.test\_errors\_json
2025-08-18T09:06:38.3951932Z 
2025-08-18T09:06:38.3952103Z <a id="api.tests.test_llm"></a>
2025-08-18T09:06:38.3952432Z 
2025-08-18T09:06:38.3953072Z # api.tests.test\_llm
2025-08-18T09:06:38.3953373Z 
2025-08-18T09:06:38.3953585Z <a id="api.tests.test_imports"></a>
2025-08-18T09:06:38.3953945Z 
2025-08-18T09:06:38.3954125Z # api.tests.test\_imports
2025-08-18T09:06:38.3954442Z 
2025-08-18T09:06:38.3954663Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T09:06:38.3955028Z 
2025-08-18T09:06:38.3955189Z # api.tests.test\_entrypoint
2025-08-18T09:06:38.3955473Z 
2025-08-18T09:06:38.3955736Z <a id="api.tests.test_health"></a>
2025-08-18T09:06:38.3956017Z 
2025-08-18T09:06:38.3956166Z # api.tests.test\_health
2025-08-18T09:06:38.3956636Z 
2025-08-18T09:06:38.3956784Z <a id="api.logging_config"></a>
2025-08-18T09:06:38.3957040Z 
2025-08-18T09:06:38.3957166Z # api.logging\_config
2025-08-18T09:06:38.3957372Z 
2025-08-18T09:06:38.3957478Z <a id="api.migrations.env"></a>
2025-08-18T09:06:38.3957647Z 
2025-08-18T09:06:38.3957732Z # api.migrations.env
2025-08-18T09:06:38.3957862Z 
2025-08-18T09:06:38.3958008Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T09:06:38.3958279Z 
2025-08-18T09:06:38.3958402Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T09:06:38.3958626Z 
2025-08-18T09:06:38.3958750Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T09:06:38.3958972Z 
2025-08-18T09:06:38.3959078Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T09:06:38.3959284Z 
2025-08-18T09:06:38.3959458Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T09:06:38.3959730Z 
2025-08-18T09:06:38.3959889Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T09:06:38.3960138Z 
2025-08-18T09:06:38.3960276Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T09:06:38.3960514Z 
2025-08-18T09:06:38.3960634Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T09:06:38.3960848Z 
2025-08-18T09:06:38.3960987Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T09:06:38.3961214Z 
2025-08-18T09:06:38.3961331Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T09:06:38.3961544Z 
2025-08-18T09:06:38.3961960Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T09:06:38.3962200Z 
2025-08-18T09:06:38.3962323Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T09:06:38.3962544Z 
2025-08-18T09:06:38.3962675Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T09:06:38.3962909Z 
2025-08-18T09:06:38.3963036Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T09:06:38.3963256Z 
2025-08-18T09:06:38.3963398Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T09:06:38.3963638Z 
2025-08-18T09:06:38.3963757Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T09:06:38.3963968Z 
2025-08-18T09:06:38.3964123Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T09:06:38.3964379Z 
2025-08-18T09:06:38.3964512Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T09:06:38.3964741Z 
2025-08-18T09:06:38.3964885Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T09:06:38.3965189Z 
2025-08-18T09:06:38.3965316Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T09:06:38.3965538Z 
2025-08-18T09:06:38.3965681Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T09:06:38.3965898Z 
2025-08-18T09:06:38.3966015Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T09:06:38.3966221Z 
2025-08-18T09:06:38.3966494Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T09:06:38.3966757Z 
2025-08-18T09:06:38.3966868Z # api.migrations.versions.0001\_baseline
2025-08-18T09:06:38.3967052Z 
2025-08-18T09:06:38.3967145Z <a id="api.migrations.versions"></a>
2025-08-18T09:06:38.3967316Z 
2025-08-18T09:06:38.3967400Z # api.migrations.versions
2025-08-18T09:06:38.3967534Z 
2025-08-18T09:06:38.3967615Z <a id="api.migrations"></a>
2025-08-18T09:06:38.3967758Z 
2025-08-18T09:06:38.3967830Z # api.migrations
2025-08-18T09:06:38.3967940Z 
2025-08-18T09:06:38.3968017Z <a id="api.db"></a>
2025-08-18T09:06:38.3968127Z 
2025-08-18T09:06:38.3968336Z # api.db
2025-08-18T09:06:38.3968438Z 
2025-08-18T09:06:38.3968521Z <a id="api.routes.stats"></a>
2025-08-18T09:06:38.3968663Z 
2025-08-18T09:06:38.3968736Z # api.routes.stats
2025-08-18T09:06:38.3968850Z 
2025-08-18T09:06:38.3968940Z <a id="api.routes.stats.kpi"></a>
2025-08-18T09:06:38.3969095Z 
2025-08-18T09:06:38.3969165Z #### kpi
2025-08-18T09:06:38.3969253Z 
2025-08-18T09:06:38.3969320Z ```python
2025-08-18T09:06:38.3969501Z @router.get("/stats/kpi")
2025-08-18T09:06:38.3969743Z def kpi() -> List[Dict[str, int]]
2025-08-18T09:06:38.3969960Z ```
2025-08-18T09:06:38.3970047Z 
2025-08-18T09:06:38.3970128Z Return KPI metrics (mock).
2025-08-18T09:06:38.3970267Z 
2025-08-18T09:06:38.3970372Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T09:06:38.3970558Z 
2025-08-18T09:06:38.3970635Z #### roi\_by\_vendor
2025-08-18T09:06:38.3970748Z 
2025-08-18T09:06:38.3970814Z ```python
2025-08-18T09:06:38.3970997Z @router.get("/stats/roi_by_vendor")
2025-08-18T09:06:38.3971254Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T09:06:38.3971506Z ```
2025-08-18T09:06:38.3971719Z 
2025-08-18T09:06:38.3971815Z Return ROI percent by vendor.
2025-08-18T09:06:38.3972002Z 
2025-08-18T09:06:38.3972098Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T09:06:38.3972278Z 
2025-08-18T09:06:38.3972346Z #### roi\_trend
2025-08-18T09:06:38.3972451Z 
2025-08-18T09:06:38.3972516Z ```python
2025-08-18T09:06:38.3972697Z @router.get("/stats/roi_trend")
2025-08-18T09:06:38.3972944Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T09:06:38.3973183Z ```
2025-08-18T09:06:38.3973266Z 
2025-08-18T09:06:38.3973349Z Return 30-day ROI trend.
2025-08-18T09:06:38.3973475Z 
2025-08-18T09:06:38.3973557Z <a id="api.routes.roi"></a>
2025-08-18T09:06:38.3973697Z 
2025-08-18T09:06:38.3973768Z # api.routes.roi
2025-08-18T09:06:38.3973874Z 
2025-08-18T09:06:38.3973957Z <a id="api.routes.health"></a>
2025-08-18T09:06:38.3974106Z 
2025-08-18T09:06:38.3974179Z # api.routes.health
2025-08-18T09:06:38.3974289Z 
2025-08-18T09:06:38.3974394Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T09:06:38.3974708Z 
2025-08-18T09:06:38.3974775Z #### MAX\_SKEW
2025-08-18T09:06:38.3974877Z 
2025-08-18T09:06:38.3974941Z seconds
2025-08-18T09:06:38.3975211Z 
2025-08-18T09:06:38.3975379Z <a id="api.routes.health.health"></a>
2025-08-18T09:06:38.3975687Z 
2025-08-18T09:06:38.3975809Z #### health
2025-08-18T09:06:38.3975983Z 
2025-08-18T09:06:38.3976112Z ```python
2025-08-18T09:06:38.3976663Z @router.get("/health", include_in_schema=False)
2025-08-18T09:06:38.3977391Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T09:06:38.3977797Z ```
2025-08-18T09:06:38.3977892Z 
2025-08-18T09:06:38.3978014Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T09:06:38.3978222Z 
2025-08-18T09:06:38.3978314Z <a id="api.routes.repository"></a>
2025-08-18T09:06:38.3978480Z 
2025-08-18T09:06:38.3978562Z # api.routes.repository
2025-08-18T09:06:38.3978691Z 
2025-08-18T09:06:38.3978774Z <a id="api.routes"></a>
2025-08-18T09:06:38.3978901Z 
2025-08-18T09:06:38.3978974Z # api.routes
2025-08-18T09:06:38.3979073Z 
2025-08-18T09:06:38.3979161Z <a id="api.models.fee"></a>
2025-08-18T09:06:38.3979296Z 
2025-08-18T09:06:38.3979365Z # api.models.fee
2025-08-18T09:06:38.3979478Z 
2025-08-18T09:06:38.3979551Z <a id="api.models"></a>
2025-08-18T09:06:38.3979666Z 
2025-08-18T09:06:38.3979790Z # api.models
2025-08-18T09:06:38.3979909Z 
2025-08-18T09:06:38.3979993Z <a id="api.roi_repository"></a>
2025-08-18T09:06:38.3980136Z 
2025-08-18T09:06:38.3980214Z # api.roi\_repository
2025-08-18T09:06:38.3980330Z 
2025-08-18T09:06:38.3980400Z <a id="api.main"></a>
2025-08-18T09:06:38.3980523Z 
2025-08-18T09:06:38.3980588Z # api.main
2025-08-18T09:06:38.3980681Z 
2025-08-18T09:06:38.3980760Z <a id="api.main.ready"></a>
2025-08-18T09:06:38.3980898Z 
2025-08-18T09:06:38.3980962Z #### ready
2025-08-18T09:06:38.3981052Z 
2025-08-18T09:06:38.3981123Z ```python
2025-08-18T09:06:38.3981489Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T09:06:38.3982114Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T09:06:38.3982472Z                                                                       str]
2025-08-18T09:06:38.3982714Z ```
2025-08-18T09:06:38.3982801Z 
2025-08-18T09:06:38.3982903Z Return 200 only when migrations are at head.
2025-08-18T09:06:38.3983084Z 
2025-08-18T09:06:38.3983160Z <a id="api.config"></a>
2025-08-18T09:06:38.3983281Z 
2025-08-18T09:06:38.3983370Z # api.config
2025-08-18T09:06:38.3983465Z 
2025-08-18T09:06:38.3983534Z <a id="etl"></a>
2025-08-18T09:06:38.3983643Z 
2025-08-18T09:06:38.3983706Z # etl
2025-08-18T09:06:38.3983795Z 
2025-08-18T09:06:38.3983879Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T09:06:38.3984035Z 
2025-08-18T09:06:38.3984111Z # etl.fba\_fee\_ingestor
2025-08-18T09:06:38.3984235Z 
2025-08-18T09:06:38.3984325Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T09:06:38.3984473Z 
2025-08-18T09:06:38.3984547Z # etl.sp\_fees\_ingestor
2025-08-18T09:06:38.3984683Z 
2025-08-18T09:06:38.3984767Z <a id="etl.keepa_ingestor"></a>
2025-08-18T09:06:38.3984922Z 
2025-08-18T09:06:38.3984995Z # etl.keepa\_ingestor
2025-08-18T09:06:38.3985117Z 
2025-08-18T09:06:38.3985187Z <a id="etl.db"></a>
2025-08-18T09:06:38.3985294Z 
2025-08-18T09:06:38.3985366Z # etl.db
2025-08-18T09:06:38.3985456Z 
2025-08-18T09:06:38.3985544Z <a id="etl.dialects.schemas"></a>
2025-08-18T09:06:38.3985691Z 
2025-08-18T09:06:38.3985772Z # etl.dialects.schemas
2025-08-18T09:06:38.3985891Z 
2025-08-18T09:06:38.3985999Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T09:06:38.3986191Z 
2025-08-18T09:06:38.3986283Z # etl.dialects.amazon\_reimbursements
2025-08-18T09:06:38.3986612Z 
2025-08-18T09:06:38.3986717Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T09:06:38.3986893Z 
2025-08-18T09:06:38.3986980Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T09:06:38.3987139Z 
2025-08-18T09:06:38.3987233Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T09:06:38.3987398Z 
2025-08-18T09:06:38.3987487Z # etl.dialects.amazon\_returns
2025-08-18T09:06:38.3987776Z 
2025-08-18T09:06:38.3987872Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T09:06:38.3988043Z 
2025-08-18T09:06:38.3988133Z # etl.dialects.amazon\_fee\_preview
2025-08-18T09:06:38.3988288Z 
2025-08-18T09:06:38.3988396Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T09:06:38.3988587Z 
2025-08-18T09:06:38.3988677Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T09:06:38.3988843Z 
2025-08-18T09:06:38.3988939Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T09:06:38.3989122Z 
2025-08-18T09:06:38.3989214Z # etl.dialects.amazon\_settlements
2025-08-18T09:06:38.3989366Z 
2025-08-18T09:06:38.3989449Z <a id="etl.dialects"></a>
2025-08-18T09:06:38.3989581Z 
2025-08-18T09:06:38.3989647Z # etl.dialects
2025-08-18T09:06:38.3989747Z 
2025-08-18T09:06:38.3989824Z <a id="ingest"></a>
2025-08-18T09:06:38.3989931Z 
2025-08-18T09:06:38.3989995Z # ingest
2025-08-18T09:06:38.3990090Z 
2025-08-18T09:06:38.3990176Z <a id="ingest.maintenance"></a>
2025-08-18T09:06:38.3990335Z 
2025-08-18T09:06:38.3990419Z # ingest.maintenance
2025-08-18T09:06:38.3990537Z 
2025-08-18T09:06:38.3990618Z <a id="ingest.copy_loader"></a>
2025-08-18T09:06:38.3990760Z 
2025-08-18T09:06:38.3990843Z # ingest.copy\_loader
2025-08-18T09:06:38.3990961Z 
2025-08-18T09:06:38.3991065Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T09:06:38.3991257Z 
2025-08-18T09:06:38.3991335Z #### copy\_df\_via\_temp
2025-08-18T09:06:38.3991469Z 
2025-08-18T09:06:38.3991536Z ```python
2025-08-18T09:06:38.3991721Z def copy_df_via_temp(engine: Engine,
2025-08-18T09:06:38.3991970Z                      df: pd.DataFrame,
2025-08-18T09:06:38.3992204Z                      target_table: str,
2025-08-18T09:06:38.3992430Z                      *,
2025-08-18T09:06:38.3992640Z                      target_schema: Optional[str] = None,
2025-08-18T09:06:38.3992910Z                      columns: Sequence[str],
2025-08-18T09:06:38.3993185Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T09:06:38.3993615Z                      analyze_after: bool = False,
2025-08-18T09:06:38.3993880Z                      connection: Any | None = None) -> int
2025-08-18T09:06:38.3994128Z ```
2025-08-18T09:06:38.3994214Z 
2025-08-18T09:06:38.3994379Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T09:06:38.3994615Z 
2025-08-18T09:06:38.3994703Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T09:06:38.3994870Z 
2025-08-18T09:06:38.3994951Z # ingest.tests.test\_smoke
2025-08-18T09:06:38.3995090Z 
2025-08-18T09:06:38.3995169Z <a id="ingest.tests"></a>
2025-08-18T09:06:38.3995304Z 
2025-08-18T09:06:38.3995373Z # ingest.tests
2025-08-18T09:06:38.3995478Z 
2025-08-18T09:06:38.3995570Z <a id="ingest.upload_router"></a>
2025-08-18T09:06:38.3995720Z 
2025-08-18T09:06:38.3995798Z # ingest.upload\_router
2025-08-18T09:06:38.3995927Z 
2025-08-18T09:06:38.3996011Z <a id="ingest.email_watcher"></a>
2025-08-18T09:06:38.3996159Z 
2025-08-18T09:06:38.3996234Z # ingest.email\_watcher
2025-08-18T09:06:38.3996497Z 
2025-08-18T09:06:38.3996591Z <a id="ingest.email_watcher.main"></a>
2025-08-18T09:06:38.3996758Z 
2025-08-18T09:06:38.3996827Z #### main
2025-08-18T09:06:38.3996917Z 
2025-08-18T09:06:38.3996980Z ```python
2025-08-18T09:06:38.3997160Z def main() -> dict[str, str]
2025-08-18T09:06:38.3997353Z ```
2025-08-18T09:06:38.3997445Z 
2025-08-18T09:06:38.3997585Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T09:06:38.3997813Z 
2025-08-18T09:06:38.3997943Z Returns {"status": "success"} when processing completes.
2025-08-18T09:06:38.3998160Z 
2025-08-18T09:06:38.3998238Z <a id="ingest.tasks"></a>
2025-08-18T09:06:38.3998368Z 
2025-08-18T09:06:38.3998442Z # ingest.tasks
2025-08-18T09:06:38.3998545Z 
2025-08-18T09:06:38.3998641Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T09:06:38.3998820Z 
2025-08-18T09:06:38.3998893Z #### task\_import\_file
2025-08-18T09:06:38.3999010Z 
2025-08-18T09:06:38.3999073Z ```python
2025-08-18T09:06:38.3999286Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T09:06:38.3999720Z def task_import_file(self,
2025-08-18T09:06:38.3999917Z                      uri: str,
2025-08-18T09:06:38.4000144Z                      report_type: Optional[str] = None,
2025-08-18T09:06:38.4000415Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T09:06:38.4000656Z ```
2025-08-18T09:06:38.4000739Z 
2025-08-18T09:06:38.4000869Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T09:06:38.4001087Z 
2025-08-18T09:06:38.4001171Z <a id="ingest.celery_app"></a>
2025-08-18T09:06:38.4001315Z 
2025-08-18T09:06:38.4001395Z # ingest.celery\_app
2025-08-18T09:06:38.4001514Z 
2025-08-18T09:06:38.4001598Z <a id="ingest.ingest_router"></a>
2025-08-18T09:06:38.4001747Z 
2025-08-18T09:06:38.4001830Z # ingest.ingest\_router
2025-08-18T09:06:38.4001950Z 
2025-08-18T09:06:38.4002027Z <a id="logistics_etl"></a>
2025-08-18T09:06:38.4002162Z 
2025-08-18T09:06:38.4002234Z # logistics\_etl
2025-08-18T09:06:38.4002347Z 
2025-08-18T09:06:38.4002425Z Daily logistics ETL job.
2025-08-18T09:06:38.4002559Z 
2025-08-18T09:06:38.4002643Z <a id="logistics_etl.__main__"></a>
2025-08-18T09:06:38.4002797Z 
2025-08-18T09:06:38.4002883Z # logistics\_etl.\_\_main\_\_
2025-08-18T09:06:38.4003024Z 
2025-08-18T09:06:38.4003109Z <a id="logistics_etl.dsn"></a>
2025-08-18T09:06:38.4003252Z 
2025-08-18T09:06:38.4003326Z # logistics\_etl.dsn
2025-08-18T09:06:38.4003464Z 
2025-08-18T09:06:38.4003580Z Local DSN builder to avoid cross-service dependency.
2025-08-18T09:06:38.4003784Z 
2025-08-18T09:06:38.4003883Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T09:06:38.4004058Z 
2025-08-18T09:06:38.4004123Z #### build\_dsn
2025-08-18T09:06:38.4004228Z 
2025-08-18T09:06:38.4004298Z ```python
2025-08-18T09:06:38.4004474Z def build_dsn(sync: bool = True) -> str
2025-08-18T09:06:38.4004706Z ```
2025-08-18T09:06:38.4004789Z 
2025-08-18T09:06:38.4004929Z Return a Postgres DSN assembled from environment variables.
2025-08-18T09:06:38.4005162Z 
2025-08-18T09:06:38.4005442Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T09:06:38.4005845Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T09:06:38.4006189Z error when any required variable is missing.
2025-08-18T09:06:38.4006513Z 
2025-08-18T09:06:38.4006611Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T09:06:38.4006787Z 
2025-08-18T09:06:38.4006873Z # logistics\_etl.tests.conftest
2025-08-18T09:06:38.4007025Z 
2025-08-18T09:06:38.4007133Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T09:06:38.4007330Z 
2025-08-18T09:06:38.4007445Z # logistics\_etl.tests.test\_repository
2025-08-18T09:06:38.4007614Z 
2025-08-18T09:06:38.4007709Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T09:06:38.4007887Z 
2025-08-18T09:06:38.4007975Z # logistics\_etl.tests.test\_cron
2025-08-18T09:06:38.4008129Z 
2025-08-18T09:06:38.4008227Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T09:06:38.4008415Z 
2025-08-18T09:06:38.4008502Z # logistics\_etl.tests.test\_imports
2025-08-18T09:06:38.4008673Z 
2025-08-18T09:06:38.4008773Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T09:06:38.4008949Z 
2025-08-18T09:06:38.4009035Z # logistics\_etl.tests.test\_smoke
2025-08-18T09:06:38.4009196Z 
2025-08-18T09:06:38.4009293Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T09:06:38.4009468Z 
2025-08-18T09:06:38.4009554Z # logistics\_etl.tests.test\_client
2025-08-18T09:06:38.4009714Z 
2025-08-18T09:06:38.4009798Z <a id="logistics_etl.tests"></a>
2025-08-18T09:06:38.4009944Z 
2025-08-18T09:06:38.4010022Z # logistics\_etl.tests
2025-08-18T09:06:38.4010143Z 
2025-08-18T09:06:38.4010224Z <a id="logistics_etl.flow"></a>
2025-08-18T09:06:38.4010370Z 
2025-08-18T09:06:38.4010442Z # logistics\_etl.flow
2025-08-18T09:06:38.4010558Z 
2025-08-18T09:06:38.4010642Z <a id="logistics_etl.client"></a>
2025-08-18T09:06:38.4010796Z 
2025-08-18T09:06:38.4010870Z # logistics\_etl.client
2025-08-18T09:06:38.4010991Z 
2025-08-18T09:06:38.4011076Z <a id="logistics_etl.cron"></a>
2025-08-18T09:06:38.4011607Z 
2025-08-18T09:06:38.4011740Z # logistics\_etl.cron
2025-08-18T09:06:38.4011960Z 
2025-08-18T09:06:38.4012117Z <a id="logistics_etl.db"></a>
2025-08-18T09:06:38.4012380Z 
2025-08-18T09:06:38.4012509Z # logistics\_etl.db
2025-08-18T09:06:38.4012719Z 
2025-08-18T09:06:38.4012887Z <a id="logistics_etl.repository"></a>
2025-08-18T09:06:38.4013125Z 
2025-08-18T09:06:38.4013222Z # logistics\_etl.repository
2025-08-18T09:06:38.4013362Z 
2025-08-18T09:06:38.4013438Z <a id="alert_bot"></a>
2025-08-18T09:06:38.4013566Z 
2025-08-18T09:06:38.4013640Z # alert\_bot
2025-08-18T09:06:38.4013741Z 
2025-08-18T09:06:38.4013836Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T09:06:38.4014011Z 
2025-08-18T09:06:38.4014093Z # alert\_bot.tests.test\_smoke
2025-08-18T09:06:38.4014235Z 
2025-08-18T09:06:38.4014314Z <a id="alert_bot.tests"></a>
2025-08-18T09:06:38.4014456Z 
2025-08-18T09:06:38.4014528Z # alert\_bot.tests
2025-08-18T09:06:38.4014634Z 
2025-08-18T09:06:38.4014724Z <a id="alert_bot.alert_bot"></a>
2025-08-18T09:06:38.4014886Z 
2025-08-18T09:06:38.4014959Z # alert\_bot.alert\_bot
2025-08-18T09:06:38.4015089Z 
2025-08-18T09:06:38.4015167Z <a id="alert_bot.rules"></a>
2025-08-18T09:06:38.4015299Z 
2025-08-18T09:06:38.4015366Z # alert\_bot.rules
2025-08-18T09:06:38.4015478Z 
2025-08-18T09:06:38.4015546Z <a id="common"></a>
2025-08-18T09:06:38.4015653Z 
2025-08-18T09:06:38.4015722Z # common
2025-08-18T09:06:38.4015811Z 
2025-08-18T09:06:38.4015885Z <a id="common.dsn"></a>
2025-08-18T09:06:38.4016008Z 
2025-08-18T09:06:38.4016072Z # common.dsn
2025-08-18T09:06:38.4016169Z 
2025-08-18T09:06:38.4016253Z <a id="common.dsn.build_dsn"></a>
2025-08-18T09:06:38.4016554Z 
2025-08-18T09:06:38.4016623Z #### build\_dsn
2025-08-18T09:06:38.4016728Z 
2025-08-18T09:06:38.4016800Z ```python
2025-08-18T09:06:38.4016976Z def build_dsn(sync: bool = True) -> str
2025-08-18T09:06:38.4017204Z ```
2025-08-18T09:06:38.4017290Z 
2025-08-18T09:06:38.4017416Z Return a Postgres DSN, validating required variables.
2025-08-18T09:06:38.4018110Z 
2025-08-18T09:06:38.4018323Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T09:06:38.4018782Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T09:06:38.4019221Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T09:06:38.4054439Z missing.
2025-08-18T09:06:38.4054689Z 
2025-08-18T09:06:38.4054877Z <a id="common.models_vendor"></a>
2025-08-18T09:06:38.4055240Z 
2025-08-18T09:06:38.4055401Z # common.models\_vendor
2025-08-18T09:06:38.4055671Z 
2025-08-18T09:06:38.4055871Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T09:06:38.4056244Z 
2025-08-18T09:06:38.4056628Z ## Vendor Objects
2025-08-18T09:06:38.4056806Z 
2025-08-18T09:06:38.4056894Z ```python
2025-08-18T09:06:38.4057099Z class Vendor(Base)
2025-08-18T09:06:38.4057323Z ```
2025-08-18T09:06:38.4057432Z 
2025-08-18T09:06:38.4057545Z Vendor of inventory items.
2025-08-18T09:06:38.4057718Z 
2025-08-18T09:06:38.4057870Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T09:06:38.4058118Z 
2025-08-18T09:06:38.4058222Z ## VendorPrice Objects
2025-08-18T09:06:38.4058373Z 
2025-08-18T09:06:38.4058454Z ```python
2025-08-18T09:06:38.4058666Z class VendorPrice(Base)
2025-08-18T09:06:38.4058895Z ```
2025-08-18T09:06:38.4059007Z 
2025-08-18T09:06:38.4059142Z Association table linking vendors to pricing.
2025-08-18T09:06:38.4059376Z 
2025-08-18T09:06:38.4059479Z <a id="common.db_url"></a>
2025-08-18T09:06:38.4059641Z 
2025-08-18T09:06:38.4059726Z # common.db\_url
2025-08-18T09:06:38.4059858Z 
2025-08-18T09:06:38.4059973Z <a id="common.db_url.build_url"></a>
2025-08-18T09:06:38.4060171Z 
2025-08-18T09:06:38.4060252Z #### build\_url
2025-08-18T09:06:38.4060385Z 
2025-08-18T09:06:38.4060465Z ```python
2025-08-18T09:06:38.4060683Z def build_url(async_: bool = True) -> str
2025-08-18T09:06:38.4060975Z ```
2025-08-18T09:06:38.4061075Z 
2025-08-18T09:06:38.4061203Z Return Postgres DSN from env or PG_* parts.
2025-08-18T09:06:38.4061429Z 
2025-08-18T09:06:38.4061712Z <a id="common.keepa"></a>
2025-08-18T09:06:38.4061881Z 
2025-08-18T09:06:38.4061965Z # common.keepa
2025-08-18T09:06:38.4062092Z 
2025-08-18T09:06:38.4062184Z <a id="common.llm"></a>
2025-08-18T09:06:38.4062339Z 
2025-08-18T09:06:38.4062420Z # common.llm
2025-08-18T09:06:38.4062543Z 
2025-08-18T09:06:38.4062650Z <a id="common.settings"></a>
2025-08-18T09:06:38.4062820Z 
2025-08-18T09:06:38.4062905Z # common.settings
2025-08-18T09:06:38.4063038Z 
2025-08-18T09:06:38.4063135Z <a id="common.db"></a>
2025-08-18T09:06:38.4063282Z 
2025-08-18T09:06:38.4063361Z # common.db
2025-08-18T09:06:38.4063484Z 
2025-08-18T09:06:38.4063601Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T09:06:38.4063814Z 
2025-08-18T09:06:38.4063910Z #### build\_sqlalchemy\_url
2025-08-18T09:06:38.4064080Z 
2025-08-18T09:06:38.4064159Z ```python
2025-08-18T09:06:38.4064383Z def build_sqlalchemy_url() -> str
2025-08-18T09:06:38.4064657Z ```
2025-08-18T09:06:38.4064761Z 
2025-08-18T09:06:38.4064871Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T09:06:38.4065051Z 
2025-08-18T09:06:38.4065144Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T09:06:38.4065320Z 
2025-08-18T09:06:38.4065396Z #### build\_asyncpg\_dsn
2025-08-18T09:06:38.4065524Z 
2025-08-18T09:06:38.4065593Z ```python
2025-08-18T09:06:38.4065768Z def build_asyncpg_dsn() -> str
2025-08-18T09:06:38.4065975Z ```
2025-08-18T09:06:38.4066056Z 
2025-08-18T09:06:38.4066184Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T09:06:38.4066516Z 
2025-08-18T09:06:38.4066606Z <a id="common.db.refresh_mvs"></a>
2025-08-18T09:06:38.4066763Z 
2025-08-18T09:06:38.4066831Z #### refresh\_mvs
2025-08-18T09:06:38.4066944Z 
2025-08-18T09:06:38.4067008Z ```python
2025-08-18T09:06:38.4067211Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T09:06:38.4067463Z ```
2025-08-18T09:06:38.4067545Z 
2025-08-18T09:06:38.4067688Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T09:06:38.4067907Z 
2025-08-18T09:06:38.4068110Z <a id="common.config"></a>
2025-08-18T09:06:38.4068254Z 
2025-08-18T09:06:38.4068323Z # common.config
2025-08-18T09:06:38.4068429Z 
2025-08-18T09:06:38.4068504Z <a id="common.base"></a>
2025-08-18T09:06:38.4068634Z 
2025-08-18T09:06:38.4068880Z # common.base
2025-08-18T09:06:38.4068982Z 
2025-08-18T09:06:38.4069072Z <a id="common.base.Base"></a>
2025-08-18T09:06:38.4069214Z 
2025-08-18T09:06:38.4069281Z ## Base Objects
2025-08-18T09:06:38.4069390Z 
2025-08-18T09:06:38.4069506Z ```python
2025-08-18T09:06:38.4069682Z class Base(DeclarativeBase)
2025-08-18T09:06:38.4069884Z ```
2025-08-18T09:06:38.4069966Z 
2025-08-18T09:06:38.4070051Z Base class for SQLAlchemy models.
2025-08-18T09:06:38.4070211Z 
2025-08-18T09:06:38.4070285Z <a id="repricer"></a>
2025-08-18T09:06:38.4070402Z 
2025-08-18T09:06:38.4070476Z # repricer
2025-08-18T09:06:38.4070568Z 
2025-08-18T09:06:38.4070658Z <a id="repricer.app.schemas"></a>
2025-08-18T09:06:38.4070816Z 
2025-08-18T09:06:38.4070894Z # repricer.app.schemas
2025-08-18T09:06:38.4071023Z 
2025-08-18T09:06:38.4071114Z <a id="repricer.app.deps"></a>
2025-08-18T09:06:38.4071263Z 
2025-08-18T09:06:38.4071337Z # repricer.app.deps
2025-08-18T09:06:38.4071447Z 
2025-08-18T09:06:38.4071571Z Placeholder module for Keepa / SP-API clients.
2025-08-18T09:06:38.4071758Z 
2025-08-18T09:06:38.4071843Z <a id="repricer.app.logic"></a>
2025-08-18T09:06:38.4071991Z 
2025-08-18T09:06:38.4072067Z # repricer.app.logic
2025-08-18T09:06:38.4072185Z 
2025-08-18T09:06:38.4072285Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T09:06:38.4072465Z 
2025-08-18T09:06:38.4072530Z #### MIN\_MARGIN
2025-08-18T09:06:38.4072634Z 
2025-08-18T09:06:38.4072702Z 15 % ROI
2025-08-18T09:06:38.4072791Z 
2025-08-18T09:06:38.4072896Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T09:06:38.4073085Z 
2025-08-18T09:06:38.4073158Z #### compute\_price
2025-08-18T09:06:38.4073270Z 
2025-08-18T09:06:38.4073336Z ```python
2025-08-18T09:06:38.4073591Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T09:06:38.4074075Z ```
2025-08-18T09:06:38.4074165Z 
2025-08-18T09:06:38.4074277Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T09:06:38.4074567Z Replace with real competitive logic later.
2025-08-18T09:06:38.4074741Z 
2025-08-18T09:06:38.4074834Z <a id="repricer.app.main"></a>
2025-08-18T09:06:38.4074985Z 
2025-08-18T09:06:38.4075059Z # repricer.app.main
2025-08-18T09:06:38.4075168Z 
2025-08-18T09:06:38.4075249Z <a id="repricer.app"></a>
2025-08-18T09:06:38.4075387Z 
2025-08-18T09:06:38.4075456Z # repricer.app
2025-08-18T09:06:38.4075559Z 
2025-08-18T09:06:38.4075664Z <a id="repricer.tests.test_imports"></a>
2025-08-18T09:06:38.4075835Z 
2025-08-18T09:06:38.4075919Z # repricer.tests.test\_imports
2025-08-18T09:06:38.4076065Z 
2025-08-18T09:06:38.4076155Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T09:06:38.4076318Z 
2025-08-18T09:06:38.4076557Z # repricer.tests.test\_smoke
2025-08-18T09:06:38.4076708Z 
2025-08-18T09:06:38.4076788Z <a id="repricer.tests"></a>
2025-08-18T09:06:38.4076926Z 
2025-08-18T09:06:38.4077010Z # repricer.tests
2025-08-18T09:06:38.4077118Z 
2025-08-18T09:06:38.4077183Z <a id="db"></a>
2025-08-18T09:06:38.4077285Z 
2025-08-18T09:06:38.4077352Z # db
2025-08-18T09:06:38.4077437Z 
2025-08-18T09:06:38.4077517Z <a id="db.utils.views"></a>
2025-08-18T09:06:38.4077654Z 
2025-08-18T09:06:38.4077722Z # db.utils.views
2025-08-18T09:06:38.4077826Z 
2025-08-18T09:06:38.4077920Z <a id="db.utils.views.replace_view"></a>
2025-08-18T09:06:38.4078101Z 
2025-08-18T09:06:38.4078172Z #### replace\_view
2025-08-18T09:06:38.4078281Z 
2025-08-18T09:06:38.4078353Z ```python
2025-08-18T09:06:38.4078548Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T09:06:38.4078801Z ```
2025-08-18T09:06:38.4078884Z 
2025-08-18T09:06:38.4078979Z Drop and recreate a SQL view atomically.
2025-08-18T09:06:38.4079153Z 
2025-08-18T09:06:38.4079224Z <a id="db.utils"></a>
2025-08-18T09:06:38.4079341Z 
2025-08-18T09:06:38.4079414Z # db.utils
2025-08-18T09:06:38.4079507Z 
2025-08-18T09:06:38.4079719Z <a id="price_importer"></a>
2025-08-18T09:06:38.4079866Z 
2025-08-18T09:06:38.4079950Z # price\_importer
2025-08-18T09:06:38.4080065Z 
2025-08-18T09:06:38.4080176Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T09:06:38.4080375Z 
2025-08-18T09:06:38.4080470Z # price\_importer.services\_common.dsn
2025-08-18T09:06:38.4080639Z 
2025-08-18T09:06:38.4080777Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T09:06:38.4080993Z 
2025-08-18T09:06:38.4081062Z #### build\_dsn
2025-08-18T09:06:38.4081168Z 
2025-08-18T09:06:38.4081241Z ```python
2025-08-18T09:06:38.4081423Z def build_dsn(sync: bool = True) -> str
2025-08-18T09:06:38.4081655Z ```
2025-08-18T09:06:38.4081742Z 
2025-08-18T09:06:38.4081813Z Return safe DSN.
2025-08-18T09:06:38.4081928Z 
2025-08-18T09:06:38.4082276Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T09:06:38.4082484Z 
2025-08-18T09:06:38.4082620Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T09:06:38.4082840Z 
2025-08-18T09:06:38.4082954Z # price\_importer.services\_common.models\_vendor
2025-08-18T09:06:38.4083163Z 
2025-08-18T09:06:38.4083275Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T09:06:38.4083466Z 
2025-08-18T09:06:38.4083562Z # price\_importer.services\_common.db\_url
2025-08-18T09:06:38.4083743Z 
2025-08-18T09:06:38.4083879Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T09:06:38.4084100Z 
2025-08-18T09:06:38.4084172Z #### build\_url
2025-08-18T09:06:38.4084274Z 
2025-08-18T09:06:38.4084339Z ```python
2025-08-18T09:06:38.4084522Z def build_url(async_: bool = True) -> str
2025-08-18T09:06:38.4084752Z ```
2025-08-18T09:06:38.4084841Z 
2025-08-18T09:06:38.4084939Z Return Postgres DSN from env or PG_* parts.
2025-08-18T09:06:38.4085115Z 
2025-08-18T09:06:38.4085225Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T09:06:38.4085423Z 
2025-08-18T09:06:38.4085518Z # price\_importer.services\_common.keepa
2025-08-18T09:06:38.4085690Z 
2025-08-18T09:06:38.4085804Z <a id="price_importer.services_common.llm"></a>
2025-08-18T09:06:38.4086113Z 
2025-08-18T09:06:38.4086207Z # price\_importer.services\_common.llm
2025-08-18T09:06:38.4086507Z 
2025-08-18T09:06:38.4086626Z <a id="price_importer.services_common.settings"></a>
2025-08-18T09:06:38.4086826Z 
2025-08-18T09:06:38.4086924Z # price\_importer.services\_common.settings
2025-08-18T09:06:38.4087108Z 
2025-08-18T09:06:38.4087212Z <a id="price_importer.services_common.db"></a>
2025-08-18T09:06:38.4087395Z 
2025-08-18T09:06:38.4087494Z # price\_importer.services\_common.db
2025-08-18T09:06:38.4087656Z 
2025-08-18T09:06:38.4087815Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T09:06:38.4088068Z 
2025-08-18T09:06:38.4088147Z #### build\_sqlalchemy\_url
2025-08-18T09:06:38.4088282Z 
2025-08-18T09:06:38.4088353Z ```python
2025-08-18T09:06:38.4088531Z def build_sqlalchemy_url() -> str
2025-08-18T09:06:38.4088750Z ```
2025-08-18T09:06:38.4088835Z 
2025-08-18T09:06:38.4088932Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T09:06:38.4089127Z 
2025-08-18T09:06:38.4089275Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T09:06:38.4089506Z 
2025-08-18T09:06:38.4089584Z #### build\_asyncpg\_dsn
2025-08-18T09:06:38.4089717Z 
2025-08-18T09:06:38.4089783Z ```python
2025-08-18T09:06:38.4089964Z def build_asyncpg_dsn() -> str
2025-08-18T09:06:38.4090167Z ```
2025-08-18T09:06:38.4090250Z 
2025-08-18T09:06:38.4090385Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T09:06:38.4090599Z 
2025-08-18T09:06:38.4090730Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T09:06:38.4090950Z 
2025-08-18T09:06:38.4091020Z #### refresh\_mvs
2025-08-18T09:06:38.4091129Z 
2025-08-18T09:06:38.4091194Z ```python
2025-08-18T09:06:38.4091397Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T09:06:38.4091656Z ```
2025-08-18T09:06:38.4091739Z 
2025-08-18T09:06:38.4091875Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T09:06:38.4092221Z 
2025-08-18T09:06:38.4092332Z <a id="price_importer.services_common"></a>
2025-08-18T09:06:38.4092508Z 
2025-08-18T09:06:38.4092598Z # price\_importer.services\_common
2025-08-18T09:06:38.4092761Z 
2025-08-18T09:06:38.4092870Z <a id="price_importer.services_common.base"></a>
2025-08-18T09:06:38.4093060Z 
2025-08-18T09:06:38.4093159Z # price\_importer.services\_common.base
2025-08-18T09:06:38.4093328Z 
2025-08-18T09:06:38.4093426Z <a id="price_importer.normaliser"></a>
2025-08-18T09:06:38.4093591Z 
2025-08-18T09:06:38.4093686Z # price\_importer.normaliser
2025-08-18T09:06:38.4093828Z 
2025-08-18T09:06:38.4093936Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T09:06:38.4094132Z 
2025-08-18T09:06:38.4094224Z # price\_importer.common.models\_vendor
2025-08-18T09:06:38.4094396Z 
2025-08-18T09:06:38.4094498Z <a id="price_importer.common.db_url"></a>
2025-08-18T09:06:38.4094672Z 
2025-08-18T09:06:38.4094767Z # price\_importer.common.db\_url
2025-08-18T09:06:38.4094919Z 
2025-08-18T09:06:38.4095041Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T09:06:38.4095236Z 
2025-08-18T09:06:38.4095307Z #### make\_dsn
2025-08-18T09:06:38.4095414Z 
2025-08-18T09:06:38.4095480Z ```python
2025-08-18T09:06:38.4095659Z def make_dsn(async_: bool = False) -> str
2025-08-18T09:06:38.4095900Z ```
2025-08-18T09:06:38.4095985Z 
2025-08-18T09:06:38.4096114Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T09:06:38.4096316Z 
2025-08-18T09:06:38.4096555Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T09:06:38.4096758Z 
2025-08-18T09:06:38.4096825Z #### build\_url
2025-08-18T09:06:38.4096927Z 
2025-08-18T09:06:38.4096990Z ```python
2025-08-18T09:06:38.4097173Z def build_url(async_: bool = False) -> str
2025-08-18T09:06:38.4097407Z ```
2025-08-18T09:06:38.4097493Z 
2025-08-18T09:06:38.4097615Z Return Postgres DSN built from environment variables.
2025-08-18T09:06:38.4097819Z 
2025-08-18T09:06:38.4097914Z <a id="price_importer.common"></a>
2025-08-18T09:06:38.4098071Z 
2025-08-18T09:06:38.4098157Z # price\_importer.common
2025-08-18T09:06:38.4098418Z 
2025-08-18T09:06:38.4098513Z <a id="price_importer.common.base"></a>
2025-08-18T09:06:38.4098685Z 
2025-08-18T09:06:38.4098805Z # price\_importer.common.base
2025-08-18T09:06:38.4098955Z 
2025-08-18T09:06:38.4099056Z <a id="price_importer.tests.conftest"></a>
2025-08-18T09:06:38.4099232Z 
2025-08-18T09:06:38.4099328Z # price\_importer.tests.conftest
2025-08-18T09:06:38.4099479Z 
2025-08-18T09:06:38.4099578Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T09:06:38.4099765Z 
2025-08-18T09:06:38.4099855Z # price\_importer.tests.test\_reader
2025-08-18T09:06:38.4100015Z 
2025-08-18T09:06:38.4100119Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T09:06:38.4100307Z 
2025-08-18T09:06:38.4100399Z # price\_importer.tests.test\_imports
2025-08-18T09:06:38.4100561Z 
2025-08-18T09:06:38.4100667Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T09:06:38.4100847Z 
2025-08-18T09:06:38.4100936Z # price\_importer.tests.test\_smoke
2025-08-18T09:06:38.4101110Z 
2025-08-18T09:06:38.4101218Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T09:06:38.4101405Z 
2025-08-18T09:06:38.4101500Z # price\_importer.tests.test\_normaliser
2025-08-18T09:06:38.4101676Z 
2025-08-18T09:06:38.4101762Z <a id="price_importer.tests"></a>
2025-08-18T09:06:38.4101912Z 
2025-08-18T09:06:38.4102000Z # price\_importer.tests
2025-08-18T09:06:38.4102125Z 
2025-08-18T09:06:38.4102211Z <a id="price_importer.reader"></a>
2025-08-18T09:06:38.4102372Z 
2025-08-18T09:06:38.4102451Z # price\_importer.reader
2025-08-18T09:06:38.4102577Z 
2025-08-18T09:06:38.4102671Z <a id="price_importer.repository"></a>
2025-08-18T09:06:38.4102842Z 
2025-08-18T09:06:38.4102927Z # price\_importer.repository
2025-08-18T09:06:38.4103071Z 
2025-08-18T09:06:38.4103165Z <a id="price_importer.import"></a>
2025-08-18T09:06:38.4103318Z 
2025-08-18T09:06:38.4103396Z # price\_importer.import
2025-08-18T09:06:38.4103529Z 
2025-08-18T09:06:38.4103602Z <a id="fees_h10"></a>
2025-08-18T09:06:38.4103840Z 
2025-08-18T09:06:38.4103913Z # fees\_h10
2025-08-18T09:06:38.4104013Z 
2025-08-18T09:06:38.4104092Z <a id="fees_h10.worker"></a>
2025-08-18T09:06:38.4104225Z 
2025-08-18T09:06:38.4104301Z # fees\_h10.worker
2025-08-18T09:06:38.4104411Z 
2025-08-18T09:06:38.4104509Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T09:06:38.4104694Z 
2025-08-18T09:06:38.4104769Z #### list\_active\_asins
2025-08-18T09:06:38.4104891Z 
2025-08-18T09:06:38.4104955Z ```python
2025-08-18T09:06:38.4105134Z def list_active_asins() -> list[str]
2025-08-18T09:06:38.4105394Z ```
2025-08-18T09:06:38.4105479Z 
2025-08-18T09:06:38.4105595Z Return known ASINs or an empty list if unavailable.
2025-08-18T09:06:38.4105792Z 
2025-08-18T09:06:38.4105885Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T09:06:38.4106044Z 
2025-08-18T09:06:38.4106126Z # fees\_h10.tests.test\_smoke
2025-08-18T09:06:38.4106272Z 
2025-08-18T09:06:38.4106450Z <a id="fees_h10.tests"></a>
2025-08-18T09:06:38.4106585Z 
2025-08-18T09:06:38.4106660Z # fees\_h10.tests
2025-08-18T09:06:38.4106778Z 
2025-08-18T09:06:38.4106860Z <a id="fees_h10.client"></a>
2025-08-18T09:06:38.4106991Z 
2025-08-18T09:06:38.4107069Z # fees\_h10.client
2025-08-18T09:06:38.4107174Z 
2025-08-18T09:06:38.4107259Z <a id="fees_h10.repository"></a>
2025-08-18T09:06:38.4107412Z 
2025-08-18T09:06:38.4107487Z # fees\_h10.repository
2025-08-18T09:06:38.4107609Z 
2025-08-18T09:06:38.4107683Z <a id="emailer"></a>
2025-08-18T09:06:38.4107810Z 
2025-08-18T09:06:38.4107876Z # emailer
2025-08-18T09:06:38.4107966Z 
2025-08-18T09:06:38.4108077Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T09:06:38.4108259Z 
2025-08-18T09:06:38.4108349Z # emailer.tests.test\_import\_emailer
2025-08-18T09:06:38.4108515Z 
2025-08-18T09:06:38.4108600Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T09:06:38.4108762Z 
2025-08-18T09:06:38.4108846Z # emailer.tests.test\_smoke
2025-08-18T09:06:38.4108988Z 
2025-08-18T09:06:38.4109067Z <a id="emailer.tests"></a>
2025-08-18T09:06:38.4109200Z 
2025-08-18T09:06:38.4109282Z # emailer.tests
2025-08-18T09:06:38.4109510Z 
2025-08-18T09:06:38.4109596Z <a id="emailer.generate_body"></a>
2025-08-18T09:06:38.4109751Z 
2025-08-18T09:06:38.4109836Z # emailer.generate\_body
2025-08-18T09:06:38.4109962Z 
2025-08-18T09:06:38.4110034Z <a id="llm_server"></a>
2025-08-18T09:06:38.4110159Z 
2025-08-18T09:06:38.4110225Z # llm\_server
2025-08-18T09:06:38.4110324Z 
2025-08-18T09:06:38.4110408Z <a id="llm_server.app"></a>
2025-08-18T09:06:38.4110540Z 
2025-08-18T09:06:38.4110611Z # llm\_server.app
2025-08-18T09:06:38.4110717Z 
