2025-08-19T21:59:09.4329741Z ##[group]Run pydoc-markdown
2025-08-19T21:59:09.4330178Z [36;1mpydoc-markdown[0m
2025-08-19T21:59:09.4370944Z shell: /usr/bin/bash -e {0}
2025-08-19T21:59:09.4371170Z env:
2025-08-19T21:59:09.4371415Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:59:09.4371822Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T21:59:09.4372208Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:59:09.4372552Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:59:09.4372891Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T21:59:09.4373228Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T21:59:09.4373506Z ##[endgroup]
2025-08-19T21:59:09.7573327Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T21:59:09.7573851Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T21:59:09.7574200Z In "pydoc-markdown.yml"
2025-08-19T21:59:09.7574598Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T21:59:09.7575464Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T21:59:09.7576496Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T21:59:09.7577129Z 
2025-08-19T21:59:10.1197237Z <a id="__init__"></a>
2025-08-19T21:59:10.1198920Z 
2025-08-19T21:59:10.1199059Z # \_\_init\_\_
2025-08-19T21:59:10.1199261Z 
2025-08-19T21:59:10.1199389Z <a id="api"></a>
2025-08-19T21:59:10.1199603Z 
2025-08-19T21:59:10.1199715Z # api
2025-08-19T21:59:10.1199876Z 
2025-08-19T21:59:10.1200028Z <a id="api.errors"></a>
2025-08-19T21:59:10.1200283Z 
2025-08-19T21:59:10.1200404Z # api.errors
2025-08-19T21:59:10.1200585Z 
2025-08-19T21:59:10.1200746Z <a id="api.sentry_config"></a>
2025-08-19T21:59:10.1201017Z 
2025-08-19T21:59:10.1201151Z # api.sentry\_config
2025-08-19T21:59:10.1201382Z 
2025-08-19T21:59:10.1201571Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T21:59:10.1201908Z 
2025-08-19T21:59:10.1202074Z # api.tests.test\_stats\_contracts
2025-08-19T21:59:10.1202413Z 
2025-08-19T21:59:10.1202583Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T21:59:10.1202901Z 
2025-08-19T21:59:10.1203064Z # api.tests.test\_sentry\_scrub
2025-08-19T21:59:10.1203333Z 
2025-08-19T21:59:10.1203510Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T21:59:10.1203840Z 
2025-08-19T21:59:10.1203999Z # api.tests.test\_roi\_basic\_auth
2025-08-19T21:59:10.1204282Z 
2025-08-19T21:59:10.1204480Z <a id="api.tests.test_errors_json"></a>
2025-08-19T21:59:10.1204815Z 
2025-08-19T21:59:10.1205005Z # api.tests.test\_errors\_json
2025-08-19T21:59:10.1205267Z 
2025-08-19T21:59:10.1205425Z <a id="api.tests.test_llm"></a>
2025-08-19T21:59:10.1205696Z 
2025-08-19T21:59:10.1205832Z # api.tests.test\_llm
2025-08-19T21:59:10.1206069Z 
2025-08-19T21:59:10.1206234Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T21:59:10.1206548Z 
2025-08-19T21:59:10.1206704Z # api.tests.test\_roi\_filters
2025-08-19T21:59:10.1206961Z 
2025-08-19T21:59:10.1207124Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T21:59:10.1208027Z 
2025-08-19T21:59:10.1208197Z # api.tests.test\_sentry\_event
2025-08-19T21:59:10.1208476Z 
2025-08-19T21:59:10.1208713Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T21:59:10.1209114Z 
2025-08-19T21:59:10.1209261Z ## DummyTransport Objects
2025-08-19T21:59:10.1209509Z 
2025-08-19T21:59:10.1209634Z ```python
2025-08-19T21:59:10.1209943Z class DummyTransport()
2025-08-19T21:59:10.1210285Z ```
2025-08-19T21:59:10.1210441Z 
2025-08-19T21:59:10.1210773Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T21:59:10.1211288Z 
2025-08-19T21:59:10.1211429Z #### capture\_envelope
2025-08-19T21:59:10.1211659Z 
2025-08-19T21:59:10.1211778Z ```python
2025-08-19T21:59:10.1212119Z def capture_envelope(envelope)
2025-08-19T21:59:10.1212493Z ```
2025-08-19T21:59:10.1212656Z 
2025-08-19T21:59:10.1212889Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T21:59:10.1213288Z 
2025-08-19T21:59:10.1213508Z <a id="api.tests.test_cors"></a>
2025-08-19T21:59:10.1214144Z 
2025-08-19T21:59:10.1214287Z # api.tests.test\_cors
2025-08-19T21:59:10.1214521Z 
2025-08-19T21:59:10.1214678Z <a id="api.tests.test_imports"></a>
2025-08-19T21:59:10.1214976Z 
2025-08-19T21:59:10.1215121Z # api.tests.test\_imports
2025-08-19T21:59:10.1215372Z 
2025-08-19T21:59:10.1215552Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T21:59:10.1215864Z 
2025-08-19T21:59:10.1216026Z # api.tests.test\_rate\_limit
2025-08-19T21:59:10.1216290Z 
2025-08-19T21:59:10.1216472Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T21:59:10.1216812Z 
2025-08-19T21:59:10.1216929Z #### app
2025-08-19T21:59:10.1217101Z 
2025-08-19T21:59:10.1217222Z noqa: E402
2025-08-19T21:59:10.1217586Z 
2025-08-19T21:59:10.1217755Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T21:59:10.1218069Z 
2025-08-19T21:59:10.1218236Z # api.tests.test\_stats\_sql
2025-08-19T21:59:10.1218494Z 
2025-08-19T21:59:10.1218657Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T21:59:10.1218979Z 
2025-08-19T21:59:10.1219146Z # api.tests.test\_entrypoint
2025-08-19T21:59:10.1219407Z 
2025-08-19T21:59:10.1219612Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T21:59:10.1219982Z 
2025-08-19T21:59:10.1220159Z # api.tests.test\_stats\_future\_contracts
2025-08-19T21:59:10.1220479Z 
2025-08-19T21:59:10.1220643Z <a id="api.tests.test_health"></a>
2025-08-19T21:59:10.1220931Z 
2025-08-19T21:59:10.1221074Z # api.tests.test\_health
2025-08-19T21:59:10.1221313Z 
2025-08-19T21:59:10.1221478Z <a id="api.tests.test_score"></a>
2025-08-19T21:59:10.1221756Z 
2025-08-19T21:59:10.1221894Z # api.tests.test\_score
2025-08-19T21:59:10.1222130Z 
2025-08-19T21:59:10.1222278Z <a id="api.logging_config"></a>
2025-08-19T21:59:10.1222547Z 
2025-08-19T21:59:10.1222686Z # api.logging\_config
2025-08-19T21:59:10.1222906Z 
2025-08-19T21:59:10.1223057Z <a id="api.migrations.env"></a>
2025-08-19T21:59:10.1223323Z 
2025-08-19T21:59:10.1223468Z # api.migrations.env
2025-08-19T21:59:10.1223686Z 
2025-08-19T21:59:10.1223933Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T21:59:10.1224327Z 
2025-08-19T21:59:10.1224523Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T21:59:10.1224874Z 
2025-08-19T21:59:10.1225088Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T21:59:10.1225455Z 
2025-08-19T21:59:10.1225633Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T21:59:10.1225957Z 
2025-08-19T21:59:10.1226268Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T21:59:10.1226724Z 
2025-08-19T21:59:10.1226997Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T21:59:10.1227613Z 
2025-08-19T21:59:10.1227853Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T21:59:10.1228241Z 
2025-08-19T21:59:10.1228454Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T21:59:10.1228806Z 
2025-08-19T21:59:10.1229038Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T21:59:10.1229514Z 
2025-08-19T21:59:10.1229717Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T21:59:10.1230357Z 
2025-08-19T21:59:10.1230609Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T21:59:10.1231007Z 
2025-08-19T21:59:10.1231216Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T21:59:10.1231586Z 
2025-08-19T21:59:10.1231816Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T21:59:10.1232200Z 
2025-08-19T21:59:10.1232423Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T21:59:10.1232786Z 
2025-08-19T21:59:10.1233034Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T21:59:10.1233432Z 
2025-08-19T21:59:10.1233647Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T21:59:10.1234004Z 
2025-08-19T21:59:10.1234269Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T21:59:10.1234691Z 
2025-08-19T21:59:10.1234924Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T21:59:10.1235303Z 
2025-08-19T21:59:10.1235547Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T21:59:10.1236186Z 
2025-08-19T21:59:10.1236458Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T21:59:10.1236840Z 
2025-08-19T21:59:10.1237095Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T21:59:10.1237730Z 
2025-08-19T21:59:10.1237959Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T21:59:10.1238413Z 
2025-08-19T21:59:10.1238627Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T21:59:10.1239002Z 
2025-08-19T21:59:10.1239198Z # api.migrations.versions.0001\_baseline
2025-08-19T21:59:10.1239650Z 
2025-08-19T21:59:10.1239822Z <a id="api.migrations.versions"></a>
2025-08-19T21:59:10.1240138Z 
2025-08-19T21:59:10.1240294Z # api.migrations.versions
2025-08-19T21:59:10.1240543Z 
2025-08-19T21:59:10.1240690Z <a id="api.migrations"></a>
2025-08-19T21:59:10.1240949Z 
2025-08-19T21:59:10.1241076Z # api.migrations
2025-08-19T21:59:10.1241276Z 
2025-08-19T21:59:10.1241411Z <a id="api.db"></a>
2025-08-19T21:59:10.1241633Z 
2025-08-19T21:59:10.1241773Z # api.db
2025-08-19T21:59:10.1241966Z 
2025-08-19T21:59:10.1242115Z <a id="api.routes.score"></a>
2025-08-19T21:59:10.1242388Z 
2025-08-19T21:59:10.1242517Z # api.routes.score
2025-08-19T21:59:10.1242732Z 
2025-08-19T21:59:10.1242877Z <a id="api.routes.stats"></a>
2025-08-19T21:59:10.1243148Z 
2025-08-19T21:59:10.1243286Z # api.routes.stats
2025-08-19T21:59:10.1243490Z 
2025-08-19T21:59:10.1243633Z <a id="api.routes.roi"></a>
2025-08-19T21:59:10.1243886Z 
2025-08-19T21:59:10.1244026Z # api.routes.roi
2025-08-19T21:59:10.1244223Z 
2025-08-19T21:59:10.1244375Z <a id="api.routes.health"></a>
2025-08-19T21:59:10.1244651Z 
2025-08-19T21:59:10.1244781Z # api.routes.health
2025-08-19T21:59:10.1244988Z 
2025-08-19T21:59:10.1245159Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T21:59:10.1245484Z 
2025-08-19T21:59:10.1245600Z #### MAX\_SKEW
2025-08-19T21:59:10.1245784Z 
2025-08-19T21:59:10.1245909Z seconds
2025-08-19T21:59:10.1246070Z 
2025-08-19T21:59:10.1246242Z <a id="api.routes.health.health"></a>
2025-08-19T21:59:10.1246585Z 
2025-08-19T21:59:10.1246699Z #### health
2025-08-19T21:59:10.1246870Z 
2025-08-19T21:59:10.1246991Z ```python
2025-08-19T21:59:10.1247535Z @router.get("/health", include_in_schema=False)
2025-08-19T21:59:10.1248305Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T21:59:10.1248993Z ```
2025-08-19T21:59:10.1249149Z 
2025-08-19T21:59:10.1249374Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T21:59:10.1249742Z 
2025-08-19T21:59:10.1249908Z <a id="api.routes.repository"></a>
2025-08-19T21:59:10.1250244Z 
2025-08-19T21:59:10.1250390Z # api.routes.repository
2025-08-19T21:59:10.1250623Z 
2025-08-19T21:59:10.1250757Z <a id="api.routes"></a>
2025-08-19T21:59:10.1250987Z 
2025-08-19T21:59:10.1251106Z # api.routes
2025-08-19T21:59:10.1251283Z 
2025-08-19T21:59:10.1251439Z <a id="api.models.fee"></a>
2025-08-19T21:59:10.1251712Z 
2025-08-19T21:59:10.1251834Z # api.models.fee
2025-08-19T21:59:10.1252046Z 
2025-08-19T21:59:10.1252404Z <a id="api.models"></a>
2025-08-19T21:59:10.1252637Z 
2025-08-19T21:59:10.1252758Z # api.models
2025-08-19T21:59:10.1252949Z 
2025-08-19T21:59:10.1253102Z <a id="api.roi_repository"></a>
2025-08-19T21:59:10.1253371Z 
2025-08-19T21:59:10.1253520Z # api.roi\_repository
2025-08-19T21:59:10.1253745Z 
2025-08-19T21:59:10.1253887Z <a id="api.main"></a>
2025-08-19T21:59:10.1254100Z 
2025-08-19T21:59:10.1254208Z # api.main
2025-08-19T21:59:10.1254365Z 
2025-08-19T21:59:10.1254499Z <a id="api.main.ready"></a>
2025-08-19T21:59:10.1254749Z 
2025-08-19T21:59:10.1254862Z #### ready
2025-08-19T21:59:10.1255015Z 
2025-08-19T21:59:10.1255138Z ```python
2025-08-19T21:59:10.1255621Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T21:59:10.1256459Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T21:59:10.1257126Z                                                                       str]
2025-08-19T21:59:10.1257786Z ```
2025-08-19T21:59:10.1258229Z 
2025-08-19T21:59:10.1258418Z Return 200 only when migrations are at head.
2025-08-19T21:59:10.1258763Z 
2025-08-19T21:59:10.1258899Z <a id="api.config"></a>
2025-08-19T21:59:10.1259125Z 
2025-08-19T21:59:10.1259253Z # api.config
2025-08-19T21:59:10.1259432Z 
2025-08-19T21:59:10.1259577Z <a id="api.security"></a>
2025-08-19T21:59:10.1259830Z 
2025-08-19T21:59:10.1259953Z # api.security
2025-08-19T21:59:10.1260147Z 
2025-08-19T21:59:10.1260269Z <a id="etl"></a>
2025-08-19T21:59:10.1260460Z 
2025-08-19T21:59:10.1260569Z # etl
2025-08-19T21:59:10.1260737Z 
2025-08-19T21:59:10.1260884Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T21:59:10.1261164Z 
2025-08-19T21:59:10.1261310Z # etl.fba\_fee\_ingestor
2025-08-19T21:59:10.1261544Z 
2025-08-19T21:59:10.1261694Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T21:59:10.1261968Z 
2025-08-19T21:59:10.1262111Z # etl.sp\_fees\_ingestor
2025-08-19T21:59:10.1262342Z 
2025-08-19T21:59:10.1262493Z <a id="etl.keepa_ingestor"></a>
2025-08-19T21:59:10.1262781Z 
2025-08-19T21:59:10.1262917Z # etl.keepa\_ingestor
2025-08-19T21:59:10.1263135Z 
2025-08-19T21:59:10.1263268Z <a id="etl.db"></a>
2025-08-19T21:59:10.1263467Z 
2025-08-19T21:59:10.1263581Z # etl.db
2025-08-19T21:59:10.1263742Z 
2025-08-19T21:59:10.1263902Z <a id="etl.dialects.schemas"></a>
2025-08-19T21:59:10.1264184Z 
2025-08-19T21:59:10.1264325Z # etl.dialects.schemas
2025-08-19T21:59:10.1264558Z 
2025-08-19T21:59:10.1264757Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T21:59:10.1265113Z 
2025-08-19T21:59:10.1265284Z # etl.dialects.amazon\_reimbursements
2025-08-19T21:59:10.1265606Z 
2025-08-19T21:59:10.1265788Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T21:59:10.1266110Z 
2025-08-19T21:59:10.1266279Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T21:59:10.1266591Z 
2025-08-19T21:59:10.1266764Z <a id="etl.dialects.test_generic"></a>
2025-08-19T21:59:10.1267086Z 
2025-08-19T21:59:10.1267594Z # etl.dialects.test\_generic
2025-08-19T21:59:10.1268091Z 
2025-08-19T21:59:10.1268466Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T21:59:10.1268873Z 
2025-08-19T21:59:10.1269029Z # etl.dialects.amazon\_returns
2025-08-19T21:59:10.1269303Z 
2025-08-19T21:59:10.1269501Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T21:59:10.1269842Z 
2025-08-19T21:59:10.1270006Z # etl.dialects.amazon\_fee\_preview
2025-08-19T21:59:10.1270322Z 
2025-08-19T21:59:10.1270525Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T21:59:10.1270889Z 
2025-08-19T21:59:10.1271060Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T21:59:10.1271388Z 
2025-08-19T21:59:10.1271575Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T21:59:10.1271902Z 
2025-08-19T21:59:10.1272076Z # etl.dialects.amazon\_settlements
2025-08-19T21:59:10.1272365Z 
2025-08-19T21:59:10.1272504Z <a id="etl.dialects"></a>
2025-08-19T21:59:10.1272757Z 
2025-08-19T21:59:10.1272880Z # etl.dialects
2025-08-19T21:59:10.1273069Z 
2025-08-19T21:59:10.1273194Z <a id="ingest"></a>
2025-08-19T21:59:10.1273405Z 
2025-08-19T21:59:10.1273743Z # ingest
2025-08-19T21:59:10.1273912Z 
2025-08-19T21:59:10.1274075Z <a id="ingest.maintenance"></a>
2025-08-19T21:59:10.1274348Z 
2025-08-19T21:59:10.1274483Z # ingest.maintenance
2025-08-19T21:59:10.1274715Z 
2025-08-19T21:59:10.1274865Z <a id="ingest.copy_loader"></a>
2025-08-19T21:59:10.1275130Z 
2025-08-19T21:59:10.1275262Z # ingest.copy\_loader
2025-08-19T21:59:10.1275486Z 
2025-08-19T21:59:10.1275681Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T21:59:10.1276031Z 
2025-08-19T21:59:10.1276180Z #### copy\_df\_via\_temp
2025-08-19T21:59:10.1276414Z 
2025-08-19T21:59:10.1276530Z ```python
2025-08-19T21:59:10.1276856Z def copy_df_via_temp(engine: Engine,
2025-08-19T21:59:10.1277508Z                      df: pd.DataFrame,
2025-08-19T21:59:10.1277974Z                      target_table: str,
2025-08-19T21:59:10.1278428Z                      *,
2025-08-19T21:59:10.1278830Z                      target_schema: Optional[str] = None,
2025-08-19T21:59:10.1279313Z                      columns: Sequence[str],
2025-08-19T21:59:10.1280203Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T21:59:10.1280752Z                      analyze_after: bool = False,
2025-08-19T21:59:10.1281284Z                      connection: Any | None = None) -> int
2025-08-19T21:59:10.1281739Z ```
2025-08-19T21:59:10.1281896Z 
2025-08-19T21:59:10.1282218Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T21:59:10.1282658Z 
2025-08-19T21:59:10.1282825Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T21:59:10.1283130Z 
2025-08-19T21:59:10.1283284Z # ingest.tests.test\_smoke
2025-08-19T21:59:10.1283533Z 
2025-08-19T21:59:10.1283673Z <a id="ingest.tests"></a>
2025-08-19T21:59:10.1283925Z 
2025-08-19T21:59:10.1284058Z # ingest.tests
2025-08-19T21:59:10.1284248Z 
2025-08-19T21:59:10.1284403Z <a id="ingest.upload_router"></a>
2025-08-19T21:59:10.1284694Z 
2025-08-19T21:59:10.1284835Z # ingest.upload\_router
2025-08-19T21:59:10.1285074Z 
2025-08-19T21:59:10.1285270Z <a id="ingest.email_watcher"></a>
2025-08-19T21:59:10.1285557Z 
2025-08-19T21:59:10.1285692Z # ingest.email\_watcher
2025-08-19T21:59:10.1285918Z 
2025-08-19T21:59:10.1286091Z <a id="ingest.email_watcher.main"></a>
2025-08-19T21:59:10.1286406Z 
2025-08-19T21:59:10.1286518Z #### main
2025-08-19T21:59:10.1286692Z 
2025-08-19T21:59:10.1286808Z ```python
2025-08-19T21:59:10.1287119Z def main() -> dict[str, str]
2025-08-19T21:59:10.1287685Z ```
2025-08-19T21:59:10.1287848Z 
2025-08-19T21:59:10.1288127Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T21:59:10.1288562Z 
2025-08-19T21:59:10.1288803Z Returns {"status": "success"} when processing completes.
2025-08-19T21:59:10.1289198Z 
2025-08-19T21:59:10.1289349Z <a id="ingest.tasks"></a>
2025-08-19T21:59:10.1289591Z 
2025-08-19T21:59:10.1289713Z # ingest.tasks
2025-08-19T21:59:10.1289940Z 
2025-08-19T21:59:10.1290117Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T21:59:10.1290458Z 
2025-08-19T21:59:10.1290593Z #### task\_import\_file
2025-08-19T21:59:10.1290834Z 
2025-08-19T21:59:10.1290960Z ```python
2025-08-19T21:59:10.1291354Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T21:59:10.1291893Z def task_import_file(self: Any,
2025-08-19T21:59:10.1292282Z                      uri: str,
2025-08-19T21:59:10.1292706Z                      report_type: str | None = None,
2025-08-19T21:59:10.1293207Z                      force: bool = False) -> dict[str, Any]
2025-08-19T21:59:10.1293656Z ```
2025-08-19T21:59:10.1293810Z 
2025-08-19T21:59:10.1294074Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T21:59:10.1294474Z 
2025-08-19T21:59:10.1294624Z <a id="ingest.celery_app"></a>
2025-08-19T21:59:10.1294891Z 
2025-08-19T21:59:10.1295037Z # ingest.celery\_app
2025-08-19T21:59:10.1295249Z 
2025-08-19T21:59:10.1295403Z <a id="ingest.ingest_router"></a>
2025-08-19T21:59:10.1295694Z 
2025-08-19T21:59:10.1295832Z # ingest.ingest\_router
2025-08-19T21:59:10.1296056Z 
2025-08-19T21:59:10.1296199Z <a id="logistics_etl"></a>
2025-08-19T21:59:10.1296915Z 
2025-08-19T21:59:10.1297048Z # logistics\_etl
2025-08-19T21:59:10.1297441Z 
2025-08-19T21:59:10.1297607Z Daily logistics ETL job.
2025-08-19T21:59:10.1297851Z 
2025-08-19T21:59:10.1298006Z <a id="logistics_etl.__main__"></a>
2025-08-19T21:59:10.1298310Z 
2025-08-19T21:59:10.1298452Z # logistics\_etl.\_\_main\_\_
2025-08-19T21:59:10.1298714Z 
2025-08-19T21:59:10.1298866Z <a id="logistics_etl.dsn"></a>
2025-08-19T21:59:10.1299127Z 
2025-08-19T21:59:10.1299259Z # logistics\_etl.dsn
2025-08-19T21:59:10.1299472Z 
2025-08-19T21:59:10.1299704Z Local DSN builder to avoid cross-service dependency.
2025-08-19T21:59:10.1300081Z 
2025-08-19T21:59:10.1300250Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T21:59:10.1300574Z 
2025-08-19T21:59:10.1300693Z #### build\_dsn
2025-08-19T21:59:10.1300884Z 
2025-08-19T21:59:10.1301003Z ```python
2025-08-19T21:59:10.1301333Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:59:10.1301764Z ```
2025-08-19T21:59:10.1301917Z 
2025-08-19T21:59:10.1302403Z Return a Postgres DSN assembled from environment variables.
2025-08-19T21:59:10.1302830Z 
2025-08-19T21:59:10.1303134Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T21:59:10.1303915Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T21:59:10.1304582Z error when any required variable is missing.
2025-08-19T21:59:10.1304923Z 
2025-08-19T21:59:10.1305104Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T21:59:10.1305435Z 
2025-08-19T21:59:10.1305592Z # logistics\_etl.tests.conftest
2025-08-19T21:59:10.1305863Z 
2025-08-19T21:59:10.1306065Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T21:59:10.1306420Z 
2025-08-19T21:59:10.1306589Z # logistics\_etl.tests.test\_repository
2025-08-19T21:59:10.1306911Z 
2025-08-19T21:59:10.1307085Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T21:59:10.1307595Z 
2025-08-19T21:59:10.1307758Z # logistics\_etl.tests.test\_cron
2025-08-19T21:59:10.1308048Z 
2025-08-19T21:59:10.1308237Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T21:59:10.1308594Z 
2025-08-19T21:59:10.1308762Z # logistics\_etl.tests.test\_imports
2025-08-19T21:59:10.1309071Z 
2025-08-19T21:59:10.1309252Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T21:59:10.1309597Z 
2025-08-19T21:59:10.1309756Z # logistics\_etl.tests.test\_smoke
2025-08-19T21:59:10.1310046Z 
2025-08-19T21:59:10.1310233Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T21:59:10.1310563Z 
2025-08-19T21:59:10.1310720Z # logistics\_etl.tests.test\_client
2025-08-19T21:59:10.1311012Z 
2025-08-19T21:59:10.1311168Z <a id="logistics_etl.tests"></a>
2025-08-19T21:59:10.1311445Z 
2025-08-19T21:59:10.1311579Z # logistics\_etl.tests
2025-08-19T21:59:10.1311815Z 
2025-08-19T21:59:10.1311964Z <a id="logistics_etl.flow"></a>
2025-08-19T21:59:10.1312230Z 
2025-08-19T21:59:10.1312366Z # logistics\_etl.flow
2025-08-19T21:59:10.1312589Z 
2025-08-19T21:59:10.1312744Z <a id="logistics_etl.client"></a>
2025-08-19T21:59:10.1313044Z 
2025-08-19T21:59:10.1372920Z # logistics\_etl.client
2025-08-19T21:59:10.1373253Z 
2025-08-19T21:59:10.1373399Z <a id="logistics_etl.cron"></a>
2025-08-19T21:59:10.1373641Z 
2025-08-19T21:59:10.1373771Z # logistics\_etl.cron
2025-08-19T21:59:10.1373962Z 
2025-08-19T21:59:10.1374088Z <a id="logistics_etl.db"></a>
2025-08-19T21:59:10.1374320Z 
2025-08-19T21:59:10.1374427Z # logistics\_etl.db
2025-08-19T21:59:10.1374624Z 
2025-08-19T21:59:10.1374770Z <a id="logistics_etl.repository"></a>
2025-08-19T21:59:10.1375037Z 
2025-08-19T21:59:10.1375167Z # logistics\_etl.repository
2025-08-19T21:59:10.1375387Z 
2025-08-19T21:59:10.1375501Z <a id="alert_bot"></a>
2025-08-19T21:59:10.1375684Z 
2025-08-19T21:59:10.1375784Z # alert\_bot
2025-08-19T21:59:10.1375938Z 
2025-08-19T21:59:10.1376079Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T21:59:10.1376354Z 
2025-08-19T21:59:10.1376480Z # alert\_bot.tests.test\_smoke
2025-08-19T21:59:10.1376706Z 
2025-08-19T21:59:10.1376833Z <a id="alert_bot.tests"></a>
2025-08-19T21:59:10.1377050Z 
2025-08-19T21:59:10.1377570Z # alert\_bot.tests
2025-08-19T21:59:10.1377757Z 
2025-08-19T21:59:10.1377887Z <a id="alert_bot.alert_bot"></a>
2025-08-19T21:59:10.1378107Z 
2025-08-19T21:59:10.1378218Z # alert\_bot.alert\_bot
2025-08-19T21:59:10.1378407Z 
2025-08-19T21:59:10.1378521Z <a id="alert_bot.rules"></a>
2025-08-19T21:59:10.1378726Z 
2025-08-19T21:59:10.1378834Z # alert\_bot.rules
2025-08-19T21:59:10.1378993Z 
2025-08-19T21:59:10.1379094Z <a id="common"></a>
2025-08-19T21:59:10.1379257Z 
2025-08-19T21:59:10.1379358Z # common
2025-08-19T21:59:10.1379499Z 
2025-08-19T21:59:10.1379617Z <a id="common.dsn"></a>
2025-08-19T21:59:10.1379820Z 
2025-08-19T21:59:10.1379919Z # common.dsn
2025-08-19T21:59:10.1380066Z 
2025-08-19T21:59:10.1380207Z <a id="common.dsn.build_dsn"></a>
2025-08-19T21:59:10.1380442Z 
2025-08-19T21:59:10.1380540Z #### build\_dsn
2025-08-19T21:59:10.1380694Z 
2025-08-19T21:59:10.1380801Z ```python
2025-08-19T21:59:10.1381077Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:59:10.1381432Z ```
2025-08-19T21:59:10.1381752Z 
2025-08-19T21:59:10.1381947Z Return a Postgres DSN, validating required variables.
2025-08-19T21:59:10.1382277Z 
2025-08-19T21:59:10.1382597Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T21:59:10.1383296Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T21:59:10.1383998Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T21:59:10.1384511Z missing.
2025-08-19T21:59:10.1384650Z 
2025-08-19T21:59:10.1384782Z <a id="common.models_vendor"></a>
2025-08-19T21:59:10.1385017Z 
2025-08-19T21:59:10.1385126Z # common.models\_vendor
2025-08-19T21:59:10.1385324Z 
2025-08-19T21:59:10.1385468Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T21:59:10.1385743Z 
2025-08-19T21:59:10.1385851Z ## Vendor Objects
2025-08-19T21:59:10.1386016Z 
2025-08-19T21:59:10.1386137Z ```python
2025-08-19T21:59:10.1386404Z class Vendor(Base)
2025-08-19T21:59:10.1386658Z ```
2025-08-19T21:59:10.1386796Z 
2025-08-19T21:59:10.1386923Z Vendor of inventory items.
2025-08-19T21:59:10.1387138Z 
2025-08-19T21:59:10.1387482Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T21:59:10.1387771Z 
2025-08-19T21:59:10.1387891Z ## VendorPrice Objects
2025-08-19T21:59:10.1388078Z 
2025-08-19T21:59:10.1388170Z ```python
2025-08-19T21:59:10.1388419Z class VendorPrice(Base)
2025-08-19T21:59:10.1388688Z ```
2025-08-19T21:59:10.1388820Z 
2025-08-19T21:59:10.1388983Z Association table linking vendors to pricing.
2025-08-19T21:59:10.1389281Z 
2025-08-19T21:59:10.1389392Z <a id="common.db_url"></a>
2025-08-19T21:59:10.1389600Z 
2025-08-19T21:59:10.1389702Z # common.db\_url
2025-08-19T21:59:10.1389862Z 
2025-08-19T21:59:10.1390003Z <a id="common.db_url.build_url"></a>
2025-08-19T21:59:10.1390265Z 
2025-08-19T21:59:10.1390368Z #### build\_url
2025-08-19T21:59:10.1390520Z 
2025-08-19T21:59:10.1390618Z ```python
2025-08-19T21:59:10.1390873Z def build_url(async_: bool = True) -> str
2025-08-19T21:59:10.1391210Z ```
2025-08-19T21:59:10.1391344Z 
2025-08-19T21:59:10.1391493Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:59:10.1391764Z 
2025-08-19T21:59:10.1391878Z <a id="common.keepa"></a>
2025-08-19T21:59:10.1392083Z 
2025-08-19T21:59:10.1392194Z # common.keepa
2025-08-19T21:59:10.1392346Z 
2025-08-19T21:59:10.1392459Z <a id="common.llm"></a>
2025-08-19T21:59:10.1392638Z 
2025-08-19T21:59:10.1392746Z # common.llm
2025-08-19T21:59:10.1392887Z 
2025-08-19T21:59:10.1393009Z <a id="common.settings"></a>
2025-08-19T21:59:10.1393227Z 
2025-08-19T21:59:10.1393326Z # common.settings
2025-08-19T21:59:10.1393485Z 
2025-08-19T21:59:10.1393593Z <a id="common.db"></a>
2025-08-19T21:59:10.1393765Z 
2025-08-19T21:59:10.1393860Z # common.db
2025-08-19T21:59:10.1393996Z 
2025-08-19T21:59:10.1394146Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T21:59:10.1394400Z 
2025-08-19T21:59:10.1394513Z #### build\_sqlalchemy\_url
2025-08-19T21:59:10.1394718Z 
2025-08-19T21:59:10.1394811Z ```python
2025-08-19T21:59:10.1395067Z def build_sqlalchemy_url() -> str
2025-08-19T21:59:10.1395582Z ```
2025-08-19T21:59:10.1395710Z 
2025-08-19T21:59:10.1395861Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:59:10.1396131Z 
2025-08-19T21:59:10.1396270Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T21:59:10.1396540Z 
2025-08-19T21:59:10.1396671Z #### build\_asyncpg\_dsn
2025-08-19T21:59:10.1396867Z 
2025-08-19T21:59:10.1396964Z ```python
2025-08-19T21:59:10.1397239Z def build_asyncpg_dsn() -> str
2025-08-19T21:59:10.1397734Z ```
2025-08-19T21:59:10.1397877Z 
2025-08-19T21:59:10.1398078Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:59:10.1398418Z 
2025-08-19T21:59:10.1398559Z <a id="common.db.refresh_mvs"></a>
2025-08-19T21:59:10.1398797Z 
2025-08-19T21:59:10.1398898Z #### refresh\_mvs
2025-08-19T21:59:10.1399062Z 
2025-08-19T21:59:10.1399159Z ```python
2025-08-19T21:59:10.1399463Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:59:10.1399854Z ```
2025-08-19T21:59:10.1399977Z 
2025-08-19T21:59:10.1400370Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:59:10.1400741Z 
2025-08-19T21:59:10.1400864Z <a id="common.config"></a>
2025-08-19T21:59:10.1401062Z 
2025-08-19T21:59:10.1401173Z # common.config
2025-08-19T21:59:10.1401333Z 
2025-08-19T21:59:10.1401450Z <a id="common.base"></a>
2025-08-19T21:59:10.1401652Z 
2025-08-19T21:59:10.1401829Z # common.base
2025-08-19T21:59:10.1401970Z 
2025-08-19T21:59:10.1402094Z <a id="common.base.Base"></a>
2025-08-19T21:59:10.1402312Z 
2025-08-19T21:59:10.1402410Z ## Base Objects
2025-08-19T21:59:10.1402562Z 
2025-08-19T21:59:10.1402664Z ```python
2025-08-19T21:59:10.1402916Z class Base(DeclarativeBase)
2025-08-19T21:59:10.1403219Z ```
2025-08-19T21:59:10.1403346Z 
2025-08-19T21:59:10.1403469Z Base class for SQLAlchemy models.
2025-08-19T21:59:10.1403710Z 
2025-08-19T21:59:10.1403819Z <a id="repricer"></a>
2025-08-19T21:59:10.1403995Z 
2025-08-19T21:59:10.1404091Z # repricer
2025-08-19T21:59:10.1404242Z 
2025-08-19T21:59:10.1404375Z <a id="repricer.app.schemas"></a>
2025-08-19T21:59:10.1404623Z 
2025-08-19T21:59:10.1404744Z # repricer.app.schemas
2025-08-19T21:59:10.1404932Z 
2025-08-19T21:59:10.1405055Z <a id="repricer.app.deps"></a>
2025-08-19T21:59:10.1405290Z 
2025-08-19T21:59:10.1405403Z # repricer.app.deps
2025-08-19T21:59:10.1405575Z 
2025-08-19T21:59:10.1405751Z Placeholder module for Keepa / SP-API clients.
2025-08-19T21:59:10.1406048Z 
2025-08-19T21:59:10.1406177Z <a id="repricer.app.logic"></a>
2025-08-19T21:59:10.1406403Z 
2025-08-19T21:59:10.1406521Z # repricer.app.logic
2025-08-19T21:59:10.1406700Z 
2025-08-19T21:59:10.1406854Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T21:59:10.1407131Z 
2025-08-19T21:59:10.1407231Z #### MIN\_MARGIN
2025-08-19T21:59:10.1407543Z 
2025-08-19T21:59:10.1407641Z 15 % ROI
2025-08-19T21:59:10.1407782Z 
2025-08-19T21:59:10.1407949Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T21:59:10.1408245Z 
2025-08-19T21:59:10.1408362Z #### compute\_price
2025-08-19T21:59:10.1408528Z 
2025-08-19T21:59:10.1408636Z ```python
2025-08-19T21:59:10.1409032Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T21:59:10.1409506Z ```
2025-08-19T21:59:10.1409649Z 
2025-08-19T21:59:10.1409824Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T21:59:10.1410268Z Replace with real competitive logic later.
2025-08-19T21:59:10.1410541Z 
2025-08-19T21:59:10.1410672Z <a id="repricer.app.main"></a>
2025-08-19T21:59:10.1410896Z 
2025-08-19T21:59:10.1411015Z # repricer.app.main
2025-08-19T21:59:10.1411188Z 
2025-08-19T21:59:10.1411311Z <a id="repricer.app"></a>
2025-08-19T21:59:10.1411518Z 
2025-08-19T21:59:10.1411627Z # repricer.app
2025-08-19T21:59:10.1411784Z 
2025-08-19T21:59:10.1411927Z <a id="repricer.tests.test_imports"></a>
2025-08-19T21:59:10.1412197Z 
2025-08-19T21:59:10.1412329Z # repricer.tests.test\_imports
2025-08-19T21:59:10.1412552Z 
2025-08-19T21:59:10.1412703Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T21:59:10.1412957Z 
2025-08-19T21:59:10.1413087Z # repricer.tests.test\_smoke
2025-08-19T21:59:10.1413499Z 
2025-08-19T21:59:10.1413628Z <a id="repricer.tests"></a>
2025-08-19T21:59:10.1413843Z 
2025-08-19T21:59:10.1413949Z # repricer.tests
2025-08-19T21:59:10.1414125Z 
2025-08-19T21:59:10.1414225Z <a id="db"></a>
2025-08-19T21:59:10.1414384Z 
2025-08-19T21:59:10.1414481Z # db
2025-08-19T21:59:10.1414612Z 
2025-08-19T21:59:10.1414727Z <a id="db.utils.views"></a>
2025-08-19T21:59:10.1414934Z 
2025-08-19T21:59:10.1415044Z # db.utils.views
2025-08-19T21:59:10.1415207Z 
2025-08-19T21:59:10.1415357Z <a id="db.utils.views.replace_view"></a>
2025-08-19T21:59:10.1415630Z 
2025-08-19T21:59:10.1415737Z #### replace\_view
2025-08-19T21:59:10.1415906Z 
2025-08-19T21:59:10.1416006Z ```python
2025-08-19T21:59:10.1416310Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T21:59:10.1416691Z ```
2025-08-19T21:59:10.1416819Z 
2025-08-19T21:59:10.1416956Z Drop and recreate a SQL view atomically.
2025-08-19T21:59:10.1417214Z 
2025-08-19T21:59:10.1417477Z <a id="db.utils"></a>
2025-08-19T21:59:10.1417835Z 
2025-08-19T21:59:10.1417932Z # db.utils
2025-08-19T21:59:10.1418077Z 
2025-08-19T21:59:10.1418198Z <a id="price_importer"></a>
2025-08-19T21:59:10.1418406Z 
2025-08-19T21:59:10.1418517Z # price\_importer
2025-08-19T21:59:10.1418683Z 
2025-08-19T21:59:10.1418842Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T21:59:10.1419143Z 
2025-08-19T21:59:10.1419299Z # price\_importer.services\_common.dsn
2025-08-19T21:59:10.1419568Z 
2025-08-19T21:59:10.1419774Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T21:59:10.1420106Z 
2025-08-19T21:59:10.1420205Z #### build\_dsn
2025-08-19T21:59:10.1420361Z 
2025-08-19T21:59:10.1420458Z ```python
2025-08-19T21:59:10.1420731Z def build_dsn(sync: bool = True) -> str
2025-08-19T21:59:10.1421081Z ```
2025-08-19T21:59:10.1421215Z 
2025-08-19T21:59:10.1421322Z Return safe DSN.
2025-08-19T21:59:10.1421489Z 
2025-08-19T21:59:10.1421967Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T21:59:10.1422290Z 
2025-08-19T21:59:10.1422511Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T21:59:10.1422843Z 
2025-08-19T21:59:10.1423020Z # price\_importer.services\_common.models\_vendor
2025-08-19T21:59:10.1423320Z 
2025-08-19T21:59:10.1423500Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T21:59:10.1423799Z 
2025-08-19T21:59:10.1423946Z # price\_importer.services\_common.db\_url
2025-08-19T21:59:10.1424221Z 
2025-08-19T21:59:10.1424427Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T21:59:10.1424766Z 
2025-08-19T21:59:10.1424870Z #### build\_url
2025-08-19T21:59:10.1425037Z 
2025-08-19T21:59:10.1425135Z ```python
2025-08-19T21:59:10.1425420Z def build_url(async_: bool = True) -> str
2025-08-19T21:59:10.1425773Z ```
2025-08-19T21:59:10.1425902Z 
2025-08-19T21:59:10.1426060Z Return Postgres DSN from env or PG_* parts.
2025-08-19T21:59:10.1426336Z 
2025-08-19T21:59:10.1426497Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T21:59:10.1426795Z 
2025-08-19T21:59:10.1426953Z # price\_importer.services\_common.keepa
2025-08-19T21:59:10.1427212Z 
2025-08-19T21:59:10.1427564Z <a id="price_importer.services_common.llm"></a>
2025-08-19T21:59:10.1427856Z 
2025-08-19T21:59:10.1427993Z # price\_importer.services\_common.llm
2025-08-19T21:59:10.1428278Z 
2025-08-19T21:59:10.1428467Z <a id="price_importer.services_common.settings"></a>
2025-08-19T21:59:10.1428775Z 
2025-08-19T21:59:10.1428929Z # price\_importer.services\_common.settings
2025-08-19T21:59:10.1429214Z 
2025-08-19T21:59:10.1429376Z <a id="price_importer.services_common.db"></a>
2025-08-19T21:59:10.1429671Z 
2025-08-19T21:59:10.1429818Z # price\_importer.services\_common.db
2025-08-19T21:59:10.1430081Z 
2025-08-19T21:59:10.1430330Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T21:59:10.1430728Z 
2025-08-19T21:59:10.1430856Z #### build\_sqlalchemy\_url
2025-08-19T21:59:10.1431060Z 
2025-08-19T21:59:10.1431154Z ```python
2025-08-19T21:59:10.1431424Z def build_sqlalchemy_url() -> str
2025-08-19T21:59:10.1431929Z ```
2025-08-19T21:59:10.1432065Z 
2025-08-19T21:59:10.1432213Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T21:59:10.1432483Z 
2025-08-19T21:59:10.1432714Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T21:59:10.1433071Z 
2025-08-19T21:59:10.1433189Z #### build\_asyncpg\_dsn
2025-08-19T21:59:10.1433395Z 
2025-08-19T21:59:10.1433496Z ```python
2025-08-19T21:59:10.1433755Z def build_asyncpg_dsn() -> str
2025-08-19T21:59:10.1434078Z ```
2025-08-19T21:59:10.1434210Z 
2025-08-19T21:59:10.1434421Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T21:59:10.1434788Z 
2025-08-19T21:59:10.1435008Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T21:59:10.1435372Z 
2025-08-19T21:59:10.1435492Z #### refresh\_mvs
2025-08-19T21:59:10.1435670Z 
2025-08-19T21:59:10.1435774Z ```python
2025-08-19T21:59:10.1436118Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T21:59:10.1436594Z ```
2025-08-19T21:59:10.1436908Z 
2025-08-19T21:59:10.1437139Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T21:59:10.1437667Z 
2025-08-19T21:59:10.1437840Z <a id="price_importer.services_common"></a>
2025-08-19T21:59:10.1438135Z 
2025-08-19T21:59:10.1438286Z # price\_importer.services\_common
2025-08-19T21:59:10.1438547Z 
2025-08-19T21:59:10.1438732Z <a id="price_importer.services_common.base"></a>
2025-08-19T21:59:10.1439051Z 
2025-08-19T21:59:10.1439210Z # price\_importer.services\_common.base
2025-08-19T21:59:10.1439503Z 
2025-08-19T21:59:10.1439661Z <a id="price_importer.normaliser"></a>
2025-08-19T21:59:10.1439933Z 
2025-08-19T21:59:10.1440078Z # price\_importer.normaliser
2025-08-19T21:59:10.1440313Z 
2025-08-19T21:59:10.1440487Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T21:59:10.1440799Z 
2025-08-19T21:59:10.1440954Z # price\_importer.common.models\_vendor
2025-08-19T21:59:10.1441232Z 
2025-08-19T21:59:10.1441391Z <a id="price_importer.common.db_url"></a>
2025-08-19T21:59:10.1441694Z 
2025-08-19T21:59:10.1441854Z # price\_importer.common.db\_url
2025-08-19T21:59:10.1442112Z 
2025-08-19T21:59:10.1442301Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T21:59:10.1442620Z 
2025-08-19T21:59:10.1442729Z #### make\_dsn
2025-08-19T21:59:10.1442896Z 
2025-08-19T21:59:10.1443009Z ```python
2025-08-19T21:59:10.1443297Z def make_dsn(async_: bool = False) -> str
2025-08-19T21:59:10.1443685Z ```
2025-08-19T21:59:10.1443828Z 
2025-08-19T21:59:10.1444035Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T21:59:10.1444392Z 
2025-08-19T21:59:10.1444582Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T21:59:10.1444923Z 
2025-08-19T21:59:10.1445043Z #### build\_url
2025-08-19T21:59:10.1445218Z 
2025-08-19T21:59:10.1445321Z ```python
2025-08-19T21:59:10.1445619Z def build_url(async_: bool = False) -> str
2025-08-19T21:59:10.1446000Z ```
2025-08-19T21:59:10.1446138Z 
2025-08-19T21:59:10.1446347Z Return Postgres DSN built from environment variables.
2025-08-19T21:59:10.1446699Z 
2025-08-19T21:59:10.1446854Z <a id="price_importer.common"></a>
2025-08-19T21:59:10.1447133Z 
2025-08-19T21:59:10.1447409Z # price\_importer.common
2025-08-19T21:59:10.1447640Z 
2025-08-19T21:59:10.1447804Z <a id="price_importer.common.base"></a>
2025-08-19T21:59:10.1448096Z 
2025-08-19T21:59:10.1448240Z # price\_importer.common.base
2025-08-19T21:59:10.1448502Z 
2025-08-19T21:59:10.1448672Z <a id="price_importer.tests.conftest"></a>
2025-08-19T21:59:10.1448990Z 
2025-08-19T21:59:10.1449144Z # price\_importer.tests.conftest
2025-08-19T21:59:10.1449410Z 
2025-08-19T21:59:10.1449584Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T21:59:10.1449899Z 
2025-08-19T21:59:10.1450059Z # price\_importer.tests.test\_reader
2025-08-19T21:59:10.1450338Z 
2025-08-19T21:59:10.1450521Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T21:59:10.1450896Z 
2025-08-19T21:59:10.1451060Z # price\_importer.tests.test\_imports
2025-08-19T21:59:10.1451346Z 
2025-08-19T21:59:10.1451522Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T21:59:10.1452019Z 
2025-08-19T21:59:10.1452177Z # price\_importer.tests.test\_smoke
2025-08-19T21:59:10.1452459Z 
2025-08-19T21:59:10.1452656Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T21:59:10.1452989Z 
2025-08-19T21:59:10.1453153Z # price\_importer.tests.test\_normaliser
2025-08-19T21:59:10.1453493Z 
2025-08-19T21:59:10.1453692Z <a id="price_importer.tests"></a>
2025-08-19T21:59:10.1453952Z 
2025-08-19T21:59:10.1454089Z # price\_importer.tests
2025-08-19T21:59:10.1454308Z 
2025-08-19T21:59:10.1454457Z <a id="price_importer.reader"></a>
2025-08-19T21:59:10.1454728Z 
2025-08-19T21:59:10.1454873Z # price\_importer.reader
2025-08-19T21:59:10.1455097Z 
2025-08-19T21:59:10.1455257Z <a id="price_importer.repository"></a>
2025-08-19T21:59:10.1455556Z 
2025-08-19T21:59:10.1455707Z # price\_importer.repository
2025-08-19T21:59:10.1455949Z 
2025-08-19T21:59:10.1456101Z <a id="price_importer.import"></a>
2025-08-19T21:59:10.1456381Z 
2025-08-19T21:59:10.1456518Z # price\_importer.import
2025-08-19T21:59:10.1456926Z 
2025-08-19T21:59:10.1457059Z <a id="fees_h10"></a>
2025-08-19T21:59:10.1457407Z 
2025-08-19T21:59:10.1457523Z # fees\_h10
2025-08-19T21:59:10.1457743Z 
2025-08-19T21:59:10.1457872Z <a id="fees_h10.worker"></a>
2025-08-19T21:59:10.1458081Z 
2025-08-19T21:59:10.1458180Z # fees\_h10.worker
2025-08-19T21:59:10.1458347Z 
2025-08-19T21:59:10.1458493Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T21:59:10.1458774Z 
2025-08-19T21:59:10.1458891Z #### list\_active\_asins
2025-08-19T21:59:10.1459080Z 
2025-08-19T21:59:10.1459174Z ```python
2025-08-19T21:59:10.1459449Z def list_active_asins() -> list[str]
2025-08-19T21:59:10.1459813Z ```
2025-08-19T21:59:10.1459966Z 
2025-08-19T21:59:10.1460163Z Return known ASINs or an empty list if unavailable.
2025-08-19T21:59:10.1460511Z 
2025-08-19T21:59:10.1460666Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T21:59:10.1460958Z 
2025-08-19T21:59:10.1461099Z # fees\_h10.tests.test\_smoke
2025-08-19T21:59:10.1461337Z 
2025-08-19T21:59:10.1461487Z <a id="fees_h10.tests"></a>
2025-08-19T21:59:10.1461706Z 
2025-08-19T21:59:10.1461819Z # fees\_h10.tests
2025-08-19T21:59:10.1461997Z 
2025-08-19T21:59:10.1462121Z <a id="fees_h10.client"></a>
2025-08-19T21:59:10.1462340Z 
2025-08-19T21:59:10.1462449Z # fees\_h10.client
2025-08-19T21:59:10.1462629Z 
2025-08-19T21:59:10.1462765Z <a id="fees_h10.repository"></a>
2025-08-19T21:59:10.1463006Z 
2025-08-19T21:59:10.1463132Z # fees\_h10.repository
2025-08-19T21:59:10.1463327Z 
2025-08-19T21:59:10.1463506Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T21:59:10.1463826Z 
2025-08-19T21:59:10.1463944Z #### upsert\_fees\_raw
2025-08-19T21:59:10.1464134Z 
2025-08-19T21:59:10.1464236Z ```python
2025-08-19T21:59:10.1464520Z def upsert_fees_raw(engine: Engine,
2025-08-19T21:59:10.1464930Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T21:59:10.1465323Z                     *,
2025-08-19T21:59:10.1465690Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T21:59:10.1466147Z ```
2025-08-19T21:59:10.1466303Z 
2025-08-19T21:59:10.1466441Z Idempotent upsert for fees.
2025-08-19T21:59:10.1466676Z 
2025-08-19T21:59:10.1466936Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T21:59:10.1467697Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T21:59:10.1468232Z Only updates when one of the mutable fields changes.
2025-08-19T21:59:10.1468574Z 
2025-08-19T21:59:10.1468696Z <a id="emailer"></a>
2025-08-19T21:59:10.1468891Z 
2025-08-19T21:59:10.1469000Z # emailer
2025-08-19T21:59:10.1469151Z 
2025-08-19T21:59:10.1469322Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T21:59:10.1469634Z 
2025-08-19T21:59:10.1469784Z # emailer.tests.test\_import\_emailer
2025-08-19T21:59:10.1470057Z 
2025-08-19T21:59:10.1470202Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T21:59:10.1470482Z 
2025-08-19T21:59:10.1470615Z # emailer.tests.test\_smoke
2025-08-19T21:59:10.1470838Z 
2025-08-19T21:59:10.1470971Z <a id="emailer.tests"></a>
2025-08-19T21:59:10.1471405Z 
2025-08-19T21:59:10.1471514Z # emailer.tests
2025-08-19T21:59:10.1471680Z 
2025-08-19T21:59:10.1471805Z <a id="emailer.generate_body"></a>
2025-08-19T21:59:10.1472033Z 
2025-08-19T21:59:10.1472148Z # emailer.generate\_body
2025-08-19T21:59:10.1472345Z 
2025-08-19T21:59:10.1472449Z <a id="llm_server"></a>
2025-08-19T21:59:10.1472618Z 
2025-08-19T21:59:10.1472720Z # llm\_server
2025-08-19T21:59:10.1472859Z 
2025-08-19T21:59:10.1472972Z <a id="llm_server.app"></a>
2025-08-19T21:59:10.1473169Z 
2025-08-19T21:59:10.1473266Z # llm\_server.app
2025-08-19T21:59:10.1473420Z 
