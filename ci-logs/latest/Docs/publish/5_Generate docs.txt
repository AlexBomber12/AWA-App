2025-08-16T22:34:10.9902104Z ##[group]Run pydoc-markdown
2025-08-16T22:34:10.9902426Z [36;1mpydoc-markdown[0m
2025-08-16T22:34:10.9943766Z shell: /usr/bin/bash -e {0}
2025-08-16T22:34:10.9943994Z env:
2025-08-16T22:34:10.9944235Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:34:10.9944648Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T22:34:10.9945047Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:34:10.9945392Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:34:10.9945735Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T22:34:10.9946078Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T22:34:10.9946367Z ##[endgroup]
2025-08-16T22:34:11.4327114Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T22:34:11.4327659Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T22:34:11.4328284Z In "pydoc-markdown.yml"
2025-08-16T22:34:11.4328581Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T22:34:11.4329084Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T22:34:11.4329620Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T22:34:11.4329980Z 
2025-08-16T22:34:11.6352918Z <a id="__init__"></a>
2025-08-16T22:34:11.6353355Z 
2025-08-16T22:34:11.6353488Z # \_\_init\_\_
2025-08-16T22:34:11.6353682Z 
2025-08-16T22:34:11.6353808Z <a id="api"></a>
2025-08-16T22:34:11.6354008Z 
2025-08-16T22:34:11.6354126Z # api
2025-08-16T22:34:11.6354292Z 
2025-08-16T22:34:11.6354445Z <a id="api.tests.test_llm"></a>
2025-08-16T22:34:11.6354733Z 
2025-08-16T22:34:11.6354868Z # api.tests.test\_llm
2025-08-16T22:34:11.6355093Z 
2025-08-16T22:34:11.6355253Z <a id="api.tests.test_imports"></a>
2025-08-16T22:34:11.6355570Z 
2025-08-16T22:34:11.6355709Z # api.tests.test\_imports
2025-08-16T22:34:11.6355955Z 
2025-08-16T22:34:11.6356127Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T22:34:11.6356438Z 
2025-08-16T22:34:11.6356585Z # api.tests.test\_entrypoint
2025-08-16T22:34:11.6356895Z 
2025-08-16T22:34:11.6357048Z <a id="api.tests.test_health"></a>
2025-08-16T22:34:11.6357333Z 
2025-08-16T22:34:11.6357467Z # api.tests.test\_health
2025-08-16T22:34:11.6357708Z 
2025-08-16T22:34:11.6358074Z <a id="api.migrations.env"></a>
2025-08-16T22:34:11.6358359Z 
2025-08-16T22:34:11.6358501Z # api.migrations.env
2025-08-16T22:34:11.6358718Z 
2025-08-16T22:34:11.6358935Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T22:34:11.6359317Z 
2025-08-16T22:34:11.6359513Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T22:34:11.6359866Z 
2025-08-16T22:34:11.6360070Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T22:34:11.6360439Z 
2025-08-16T22:34:11.6360613Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T22:34:11.6360939Z 
2025-08-16T22:34:11.6361237Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T22:34:11.6361692Z 
2025-08-16T22:34:11.6361942Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T22:34:11.6362789Z 
2025-08-16T22:34:11.6363039Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T22:34:11.6363433Z 
2025-08-16T22:34:11.6363643Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T22:34:11.6363996Z 
2025-08-16T22:34:11.6364228Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T22:34:11.6364619Z 
2025-08-16T22:34:11.6364829Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T22:34:11.6365197Z 
2025-08-16T22:34:11.6365434Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T22:34:11.6365842Z 
2025-08-16T22:34:11.6366051Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T22:34:11.6366410Z 
2025-08-16T22:34:11.6366640Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T22:34:11.6367017Z 
2025-08-16T22:34:11.6367216Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T22:34:11.6367572Z 
2025-08-16T22:34:11.6367803Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T22:34:11.6368764Z 
2025-08-16T22:34:11.6368968Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T22:34:11.6369331Z 
2025-08-16T22:34:11.6369568Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T22:34:11.6369959Z 
2025-08-16T22:34:11.6370168Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T22:34:11.6370522Z 
2025-08-16T22:34:11.6370758Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T22:34:11.6371146Z 
2025-08-16T22:34:11.6371318Z # api.migrations.versions.0001\_baseline
2025-08-16T22:34:11.6371634Z 
2025-08-16T22:34:11.6371784Z <a id="api.migrations.versions"></a>
2025-08-16T22:34:11.6372098Z 
2025-08-16T22:34:11.6372240Z # api.migrations.versions
2025-08-16T22:34:11.6372495Z 
2025-08-16T22:34:11.6372651Z <a id="api.migrations"></a>
2025-08-16T22:34:11.6372909Z 
2025-08-16T22:34:11.6373033Z # api.migrations
2025-08-16T22:34:11.6373241Z 
2025-08-16T22:34:11.6373362Z <a id="api.db"></a>
2025-08-16T22:34:11.6373563Z 
2025-08-16T22:34:11.6373693Z # api.db
2025-08-16T22:34:11.6373865Z 
2025-08-16T22:34:11.6374010Z <a id="api.routes.stats"></a>
2025-08-16T22:34:11.6374282Z 
2025-08-16T22:34:11.6374415Z # api.routes.stats
2025-08-16T22:34:11.6374615Z 
2025-08-16T22:34:11.6374772Z <a id="api.routes.stats.kpi"></a>
2025-08-16T22:34:11.6375057Z 
2025-08-16T22:34:11.6375177Z #### kpi
2025-08-16T22:34:11.6375336Z 
2025-08-16T22:34:11.6375451Z ```python
2025-08-16T22:34:11.6375753Z @router.get("/stats/kpi")
2025-08-16T22:34:11.6376166Z def kpi() -> List[Dict[str, int]]
2025-08-16T22:34:11.6376546Z ```
2025-08-16T22:34:11.6376697Z 
2025-08-16T22:34:11.6376846Z Return KPI metrics (mock).
2025-08-16T22:34:11.6377089Z 
2025-08-16T22:34:11.6377265Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T22:34:11.6377663Z 
2025-08-16T22:34:11.6377799Z #### roi\_by\_vendor
2025-08-16T22:34:11.6378189Z 
2025-08-16T22:34:11.6378306Z ```python
2025-08-16T22:34:11.6378623Z @router.get("/stats/roi_by_vendor")
2025-08-16T22:34:11.6379075Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T22:34:11.6379511Z ```
2025-08-16T22:34:11.6379656Z 
2025-08-16T22:34:11.6379810Z Return ROI percent by vendor.
2025-08-16T22:34:11.6380073Z 
2025-08-16T22:34:11.6380241Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T22:34:11.6380556Z 
2025-08-16T22:34:11.6380682Z #### roi\_trend
2025-08-16T22:34:11.6380867Z 
2025-08-16T22:34:11.6380978Z ```python
2025-08-16T22:34:11.6381285Z @router.get("/stats/roi_trend")
2025-08-16T22:34:11.6381721Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T22:34:11.6382164Z ```
2025-08-16T22:34:11.6382319Z 
2025-08-16T22:34:11.6382467Z Return 30-day ROI trend.
2025-08-16T22:34:11.6382703Z 
2025-08-16T22:34:11.6382845Z <a id="api.routes.roi"></a>
2025-08-16T22:34:11.6383101Z 
2025-08-16T22:34:11.6383227Z # api.routes.roi
2025-08-16T22:34:11.6383515Z 
2025-08-16T22:34:11.6383675Z <a id="api.routes.health"></a>
2025-08-16T22:34:11.6383985Z 
2025-08-16T22:34:11.6384113Z # api.routes.health
2025-08-16T22:34:11.6384317Z 
2025-08-16T22:34:11.6384501Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T22:34:11.6385052Z 
2025-08-16T22:34:11.6385174Z #### MAX\_SKEW
2025-08-16T22:34:11.6385371Z 
2025-08-16T22:34:11.6385482Z seconds
2025-08-16T22:34:11.6385641Z 
2025-08-16T22:34:11.6385814Z <a id="api.routes.health.health"></a>
2025-08-16T22:34:11.6386124Z 
2025-08-16T22:34:11.6386233Z #### health
2025-08-16T22:34:11.6386400Z 
2025-08-16T22:34:11.6386516Z ```python
2025-08-16T22:34:11.6386860Z @router.get("/health", include_in_schema=False)
2025-08-16T22:34:11.6387577Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T22:34:11.6388476Z ```
2025-08-16T22:34:11.6388650Z 
2025-08-16T22:34:11.6388871Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T22:34:11.6389248Z 
2025-08-16T22:34:11.6389416Z <a id="api.routes.repository"></a>
2025-08-16T22:34:11.6389715Z 
2025-08-16T22:34:11.6389863Z # api.routes.repository
2025-08-16T22:34:11.6390095Z 
2025-08-16T22:34:11.6390234Z <a id="api.routes"></a>
2025-08-16T22:34:11.6390849Z 
2025-08-16T22:34:11.6390971Z # api.routes
2025-08-16T22:34:11.6391159Z 
2025-08-16T22:34:11.6391300Z <a id="api.models.fee"></a>
2025-08-16T22:34:11.6391553Z 
2025-08-16T22:34:11.6391684Z # api.models.fee
2025-08-16T22:34:11.6391880Z 
2025-08-16T22:34:11.6392012Z <a id="api.models"></a>
2025-08-16T22:34:11.6392232Z 
2025-08-16T22:34:11.6392354Z # api.models
2025-08-16T22:34:11.6392531Z 
2025-08-16T22:34:11.6392677Z <a id="api.roi_repository"></a>
2025-08-16T22:34:11.6392949Z 
2025-08-16T22:34:11.6393080Z # api.roi\_repository
2025-08-16T22:34:11.6393298Z 
2025-08-16T22:34:11.6393425Z <a id="api.main"></a>
2025-08-16T22:34:11.6393649Z 
2025-08-16T22:34:11.6393758Z # api.main
2025-08-16T22:34:11.6393924Z 
2025-08-16T22:34:11.6394076Z <a id="api.main.ready"></a>
2025-08-16T22:34:11.6394330Z 
2025-08-16T22:34:11.6394444Z #### ready
2025-08-16T22:34:11.6394618Z 
2025-08-16T22:34:11.6394732Z ```python
2025-08-16T22:34:11.6395214Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T22:34:11.6396066Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T22:34:11.6396727Z                                                                       str]
2025-08-16T22:34:11.6397162Z ```
2025-08-16T22:34:11.6397312Z 
2025-08-16T22:34:11.6397496Z Return 200 only when migrations are at head.
2025-08-16T22:34:11.6397817Z 
2025-08-16T22:34:11.6398141Z <a id="api.config"></a>
2025-08-16T22:34:11.6398378Z 
2025-08-16T22:34:11.6398492Z # api.config
2025-08-16T22:34:11.6398666Z 
2025-08-16T22:34:11.6398779Z <a id="etl"></a>
2025-08-16T22:34:11.6398978Z 
2025-08-16T22:34:11.6399085Z # etl
2025-08-16T22:34:11.6399241Z 
2025-08-16T22:34:11.6399390Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T22:34:11.6399666Z 
2025-08-16T22:34:11.6399798Z # etl.fba\_fee\_ingestor
2025-08-16T22:34:11.6400017Z 
2025-08-16T22:34:11.6400149Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T22:34:11.6400405Z 
2025-08-16T22:34:11.6400525Z # etl.sp\_fees\_ingestor
2025-08-16T22:34:11.6400753Z 
2025-08-16T22:34:11.6400894Z <a id="etl.keepa_ingestor"></a>
2025-08-16T22:34:11.6401141Z 
2025-08-16T22:34:11.6401277Z # etl.keepa\_ingestor
2025-08-16T22:34:11.6401496Z 
2025-08-16T22:34:11.6401613Z <a id="etl.db"></a>
2025-08-16T22:34:11.6401811Z 
2025-08-16T22:34:11.6401928Z # etl.db
2025-08-16T22:34:11.6402088Z 
2025-08-16T22:34:11.6402281Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T22:34:11.6402641Z 
2025-08-16T22:34:11.6402806Z # etl.dialects.amazon\_reimbursements
2025-08-16T22:34:11.6403114Z 
2025-08-16T22:34:11.6403281Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T22:34:11.6403603Z 
2025-08-16T22:34:11.6403750Z # etl.dialects.amazon\_returns
2025-08-16T22:34:11.6404018Z 
2025-08-16T22:34:11.6404160Z <a id="etl.dialects"></a>
2025-08-16T22:34:11.6404398Z 
2025-08-16T22:34:11.6404516Z # etl.dialects
2025-08-16T22:34:11.6404712Z 
2025-08-16T22:34:11.6404835Z <a id="ingest"></a>
2025-08-16T22:34:11.6405042Z 
2025-08-16T22:34:11.6405155Z # ingest
2025-08-16T22:34:11.6405340Z 
2025-08-16T22:34:11.6405732Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T22:34:11.6406040Z 
2025-08-16T22:34:11.6406191Z # ingest.tests.test\_smoke
2025-08-16T22:34:11.6406437Z 
2025-08-16T22:34:11.6406572Z <a id="ingest.tests"></a>
2025-08-16T22:34:11.6406814Z 
2025-08-16T22:34:11.6406930Z # ingest.tests
2025-08-16T22:34:11.6407112Z 
2025-08-16T22:34:11.6407263Z <a id="ingest.upload_router"></a>
2025-08-16T22:34:11.6407556Z 
2025-08-16T22:34:11.6407690Z # ingest.upload\_router
2025-08-16T22:34:11.6408096Z 
2025-08-16T22:34:11.6408261Z <a id="ingest.email_watcher"></a>
2025-08-16T22:34:11.6408541Z 
2025-08-16T22:34:11.6408673Z # ingest.email\_watcher
2025-08-16T22:34:11.6408900Z 
2025-08-16T22:34:11.6409061Z <a id="ingest.email_watcher.main"></a>
2025-08-16T22:34:11.6409367Z 
2025-08-16T22:34:11.6409474Z #### main
2025-08-16T22:34:11.6409645Z 
2025-08-16T22:34:11.6409757Z ```python
2025-08-16T22:34:11.6410058Z def main() -> dict[str, str]
2025-08-16T22:34:11.6410416Z ```
2025-08-16T22:34:11.6410561Z 
2025-08-16T22:34:11.6411067Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T22:34:11.6411498Z 
2025-08-16T22:34:11.6411742Z Returns {"status": "success"} when processing completes.
2025-08-16T22:34:11.6412146Z 
2025-08-16T22:34:11.6412295Z <a id="ingest.ingest_router"></a>
2025-08-16T22:34:11.6412573Z 
2025-08-16T22:34:11.6412707Z # ingest.ingest\_router
2025-08-16T22:34:11.6412936Z 
2025-08-16T22:34:11.6413074Z <a id="logistics_etl"></a>
2025-08-16T22:34:11.6413316Z 
2025-08-16T22:34:11.6413445Z # logistics\_etl
2025-08-16T22:34:11.6413641Z 
2025-08-16T22:34:11.6413774Z Daily logistics ETL job.
2025-08-16T22:34:11.6414012Z 
2025-08-16T22:34:11.6414160Z <a id="logistics_etl.__main__"></a>
2025-08-16T22:34:11.6414453Z 
2025-08-16T22:34:11.6414595Z # logistics\_etl.\_\_main\_\_
2025-08-16T22:34:11.6414860Z 
2025-08-16T22:34:11.6415038Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T22:34:11.6415363Z 
2025-08-16T22:34:11.6415517Z # logistics\_etl.tests.conftest
2025-08-16T22:34:11.6415795Z 
2025-08-16T22:34:11.6415994Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T22:34:11.6416358Z 
2025-08-16T22:34:11.6416519Z # logistics\_etl.tests.test\_repository
2025-08-16T22:34:11.6416836Z 
2025-08-16T22:34:11.6417008Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T22:34:11.6417346Z 
2025-08-16T22:34:11.6417498Z # logistics\_etl.tests.test\_cron
2025-08-16T22:34:11.6417776Z 
2025-08-16T22:34:11.6418148Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T22:34:11.6418494Z 
2025-08-16T22:34:11.6418653Z # logistics\_etl.tests.test\_imports
2025-08-16T22:34:11.6418949Z 
2025-08-16T22:34:11.6419122Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T22:34:11.6419443Z 
2025-08-16T22:34:11.6419604Z # logistics\_etl.tests.test\_smoke
2025-08-16T22:34:11.6419889Z 
2025-08-16T22:34:11.6420066Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T22:34:11.6420400Z 
2025-08-16T22:34:11.6420549Z # logistics\_etl.tests.test\_client
2025-08-16T22:34:11.6420836Z 
2025-08-16T22:34:11.6421010Z <a id="logistics_etl.tests"></a>
2025-08-16T22:34:11.6421282Z 
2025-08-16T22:34:11.6421410Z # logistics\_etl.tests
2025-08-16T22:34:11.6421628Z 
2025-08-16T22:34:11.6421776Z <a id="logistics_etl.flow"></a>
2025-08-16T22:34:11.6422037Z 
2025-08-16T22:34:11.6422163Z # logistics\_etl.flow
2025-08-16T22:34:11.6422385Z 
2025-08-16T22:34:11.6422530Z <a id="logistics_etl.client"></a>
2025-08-16T22:34:11.6422809Z 
2025-08-16T22:34:11.6422946Z # logistics\_etl.client
2025-08-16T22:34:11.6423167Z 
2025-08-16T22:34:11.6423307Z <a id="logistics_etl.cron"></a>
2025-08-16T22:34:11.6423570Z 
2025-08-16T22:34:11.6423709Z # logistics\_etl.cron
2025-08-16T22:34:11.6423921Z 
2025-08-16T22:34:11.6424063Z <a id="logistics_etl.db"></a>
2025-08-16T22:34:11.6424327Z 
2025-08-16T22:34:11.6424455Z # logistics\_etl.db
2025-08-16T22:34:11.6424657Z 
2025-08-16T22:34:11.6424818Z <a id="logistics_etl.repository"></a>
2025-08-16T22:34:11.6425135Z 
2025-08-16T22:34:11.6425279Z # logistics\_etl.repository
2025-08-16T22:34:11.6425542Z 
2025-08-16T22:34:11.6425902Z <a id="alert_bot"></a>
2025-08-16T22:34:11.6426127Z 
2025-08-16T22:34:11.6426241Z # alert\_bot
2025-08-16T22:34:11.6426425Z 
2025-08-16T22:34:11.6426590Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T22:34:11.6426906Z 
2025-08-16T22:34:11.6427052Z # alert\_bot.tests.test\_smoke
2025-08-16T22:34:11.6427332Z 
2025-08-16T22:34:11.6427469Z <a id="alert_bot.tests"></a>
2025-08-16T22:34:11.6427721Z 
2025-08-16T22:34:11.6428087Z # alert\_bot.tests
2025-08-16T22:34:11.6428301Z 
2025-08-16T22:34:11.6428445Z <a id="alert_bot.alert_bot"></a>
2025-08-16T22:34:11.6428725Z 
2025-08-16T22:34:11.6428853Z # alert\_bot.alert\_bot
2025-08-16T22:34:11.6429071Z 
2025-08-16T22:34:11.6429207Z <a id="alert_bot.rules"></a>
2025-08-16T22:34:11.6429467Z 
2025-08-16T22:34:11.6429585Z # alert\_bot.rules
2025-08-16T22:34:11.6429777Z 
2025-08-16T22:34:11.6429905Z <a id="common"></a>
2025-08-16T22:34:11.6430105Z 
2025-08-16T22:34:11.6430214Z # common
2025-08-16T22:34:11.6430372Z 
2025-08-16T22:34:11.6430710Z <a id="common.dsn"></a>
2025-08-16T22:34:11.6430942Z 
2025-08-16T22:34:11.6431057Z # common.dsn
2025-08-16T22:34:11.6431241Z 
2025-08-16T22:34:11.6431395Z <a id="common.dsn.build_dsn"></a>
2025-08-16T22:34:11.6431678Z 
2025-08-16T22:34:11.6431791Z #### build\_dsn
2025-08-16T22:34:11.6431985Z 
2025-08-16T22:34:11.6432098Z ```python
2025-08-16T22:34:11.6432423Z def build_dsn(sync: bool = True) -> str
2025-08-16T22:34:11.6432830Z ```
2025-08-16T22:34:11.6432976Z 
2025-08-16T22:34:11.6433211Z Return a Postgres DSN, validating required variables.
2025-08-16T22:34:11.6433601Z 
2025-08-16T22:34:11.6433969Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T22:34:11.6434786Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T22:34:11.6435578Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T22:34:11.6436132Z missing.
2025-08-16T22:34:11.6436267Z 
2025-08-16T22:34:11.6436408Z <a id="common.models_vendor"></a>
2025-08-16T22:34:11.6436679Z 
2025-08-16T22:34:11.6436794Z # common.models\_vendor
2025-08-16T22:34:11.6437040Z 
2025-08-16T22:34:11.6437184Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T22:34:11.6437468Z 
2025-08-16T22:34:11.6437574Z ## Vendor Objects
2025-08-16T22:34:11.6437754Z 
2025-08-16T22:34:11.6438040Z ```python
2025-08-16T22:34:11.6438323Z class Vendor(Base)
2025-08-16T22:34:11.6438614Z ```
2025-08-16T22:34:11.6438755Z 
2025-08-16T22:34:11.6438884Z Vendor of inventory items.
2025-08-16T22:34:11.6439121Z 
2025-08-16T22:34:11.6439300Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T22:34:11.6439621Z 
2025-08-16T22:34:11.6439733Z ## VendorPrice Objects
2025-08-16T22:34:11.6439919Z 
2025-08-16T22:34:11.6440023Z ```python
2025-08-16T22:34:11.6440263Z class VendorPrice(Base)
2025-08-16T22:34:11.6440530Z ```
2025-08-16T22:34:11.6440654Z 
2025-08-16T22:34:11.6440817Z Association table linking vendors to pricing.
2025-08-16T22:34:11.6441123Z 
2025-08-16T22:34:11.6441241Z <a id="common.db_url"></a>
2025-08-16T22:34:11.6441452Z 
2025-08-16T22:34:11.6441553Z # common.db\_url
2025-08-16T22:34:11.6441716Z 
2025-08-16T22:34:11.6441845Z <a id="common.db_url.build_url"></a>
2025-08-16T22:34:11.6442090Z 
2025-08-16T22:34:11.6442192Z #### build\_url
2025-08-16T22:34:11.6442350Z 
2025-08-16T22:34:11.6442442Z ```python
2025-08-16T22:34:11.6442711Z def build_url(async_: bool = True) -> str
2025-08-16T22:34:11.6443064Z ```
2025-08-16T22:34:11.6443205Z 
2025-08-16T22:34:11.6443361Z Return Postgres DSN from env or PG_* parts.
2025-08-16T22:34:11.6443638Z 
2025-08-16T22:34:11.6443750Z <a id="common.keepa"></a>
2025-08-16T22:34:11.6443958Z 
2025-08-16T22:34:11.6444051Z # common.keepa
2025-08-16T22:34:11.6444200Z 
2025-08-16T22:34:11.6444314Z <a id="common.llm"></a>
2025-08-16T22:34:11.6444488Z 
2025-08-16T22:34:11.6444589Z # common.llm
2025-08-16T22:34:11.6444738Z 
2025-08-16T22:34:11.6444857Z <a id="common.settings"></a>
2025-08-16T22:34:11.6445062Z 
2025-08-16T22:34:11.6445156Z # common.settings
2025-08-16T22:34:11.6445661Z 
2025-08-16T22:34:11.6445766Z <a id="common.db"></a>
2025-08-16T22:34:11.6445942Z 
2025-08-16T22:34:11.6446044Z # common.db
2025-08-16T22:34:11.6446188Z 
2025-08-16T22:34:11.6446337Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T22:34:11.6446606Z 
2025-08-16T22:34:11.6446725Z #### build\_sqlalchemy\_url
2025-08-16T22:34:11.6446922Z 
2025-08-16T22:34:11.6447011Z ```python
2025-08-16T22:34:11.6447264Z def build_sqlalchemy_url() -> str
2025-08-16T22:34:11.6447580Z ```
2025-08-16T22:34:11.6447716Z 
2025-08-16T22:34:11.6448035Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T22:34:11.6448316Z 
2025-08-16T22:34:11.6448465Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T22:34:11.6448724Z 
2025-08-16T22:34:11.6448833Z #### build\_asyncpg\_dsn
2025-08-16T22:34:11.6449037Z 
2025-08-16T22:34:11.6449130Z ```python
2025-08-16T22:34:11.6449400Z def build_asyncpg_dsn() -> str
2025-08-16T22:34:11.6449716Z ```
2025-08-16T22:34:11.6449842Z 
2025-08-16T22:34:11.6450052Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T22:34:11.6450782Z 
2025-08-16T22:34:11.6450913Z <a id="common.db.refresh_mvs"></a>
2025-08-16T22:34:11.6451164Z 
2025-08-16T22:34:11.6451270Z #### refresh\_mvs
2025-08-16T22:34:11.6451424Z 
2025-08-16T22:34:11.6451514Z ```python
2025-08-16T22:34:11.6451810Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T22:34:11.6452185Z ```
2025-08-16T22:34:11.6452324Z 
2025-08-16T22:34:11.6452547Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T22:34:11.6452903Z 
2025-08-16T22:34:11.6453022Z <a id="common.config"></a>
2025-08-16T22:34:11.6453219Z 
2025-08-16T22:34:11.6453320Z # common.config
2025-08-16T22:34:11.6453471Z 
2025-08-16T22:34:11.6453584Z <a id="common.base"></a>
2025-08-16T22:34:11.6453774Z 
2025-08-16T22:34:11.6453868Z # common.base
2025-08-16T22:34:11.6454017Z 
2025-08-16T22:34:11.6454136Z <a id="common.base.Base"></a>
2025-08-16T22:34:11.6454349Z 
2025-08-16T22:34:11.6454446Z ## Base Objects
2025-08-16T22:34:11.6454599Z 
2025-08-16T22:34:11.6454704Z ```python
2025-08-16T22:34:11.6454953Z class Base(DeclarativeBase)
2025-08-16T22:34:11.6455237Z ```
2025-08-16T22:34:11.6455355Z 
2025-08-16T22:34:11.6455483Z Base class for SQLAlchemy models.
2025-08-16T22:34:11.6455710Z 
2025-08-16T22:34:11.6455814Z <a id="repricer"></a>
2025-08-16T22:34:11.6455996Z 
2025-08-16T22:34:11.6456091Z # repricer
2025-08-16T22:34:11.6456230Z 
2025-08-16T22:34:11.6456366Z <a id="repricer.app.schemas"></a>
2025-08-16T22:34:11.6456609Z 
2025-08-16T22:34:11.6456722Z # repricer.app.schemas
2025-08-16T22:34:11.6456900Z 
2025-08-16T22:34:11.6457032Z <a id="repricer.app.deps"></a>
2025-08-16T22:34:11.6457247Z 
2025-08-16T22:34:11.6457351Z # repricer.app.deps
2025-08-16T22:34:11.6457525Z 
2025-08-16T22:34:11.6457699Z Placeholder module for Keepa / SP-API clients.
2025-08-16T22:34:11.6458152Z 
2025-08-16T22:34:11.6458271Z <a id="repricer.app.logic"></a>
2025-08-16T22:34:11.6458487Z 
2025-08-16T22:34:11.6458593Z # repricer.app.logic
2025-08-16T22:34:11.6458765Z 
2025-08-16T22:34:11.6458914Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T22:34:11.6459182Z 
2025-08-16T22:34:11.6459282Z #### MIN\_MARGIN
2025-08-16T22:34:11.6459431Z 
2025-08-16T22:34:11.6459518Z 15 % ROI
2025-08-16T22:34:11.6459645Z 
2025-08-16T22:34:11.6459797Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T22:34:11.6460073Z 
2025-08-16T22:34:11.6460172Z #### compute\_price
2025-08-16T22:34:11.6460334Z 
2025-08-16T22:34:11.6460423Z ```python
2025-08-16T22:34:11.6460783Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T22:34:11.6461250Z ```
2025-08-16T22:34:11.6461365Z 
2025-08-16T22:34:11.6461532Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T22:34:11.6461947Z Replace with real competitive logic later.
2025-08-16T22:34:11.6462215Z 
2025-08-16T22:34:11.6462334Z <a id="repricer.app.main"></a>
2025-08-16T22:34:11.6462543Z 
2025-08-16T22:34:11.6462639Z # repricer.app.main
2025-08-16T22:34:11.6462809Z 
2025-08-16T22:34:11.6462921Z <a id="repricer.app"></a>
2025-08-16T22:34:11.6463290Z 
2025-08-16T22:34:11.6463393Z # repricer.app
2025-08-16T22:34:11.6463537Z 
2025-08-16T22:34:11.6463672Z <a id="repricer.tests.test_imports"></a>
2025-08-16T22:34:11.6463940Z 
2025-08-16T22:34:11.6464062Z # repricer.tests.test\_imports
2025-08-16T22:34:11.6464281Z 
2025-08-16T22:34:11.6464418Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T22:34:11.6464671Z 
2025-08-16T22:34:11.6464787Z # repricer.tests.test\_smoke
2025-08-16T22:34:11.6464995Z 
2025-08-16T22:34:11.6465112Z <a id="repricer.tests"></a>
2025-08-16T22:34:11.6465312Z 
2025-08-16T22:34:11.6465468Z # repricer.tests
2025-08-16T22:34:11.6465618Z 
2025-08-16T22:34:11.6465708Z <a id="db"></a>
2025-08-16T22:34:11.6465871Z 
2025-08-16T22:34:11.6465965Z # db
2025-08-16T22:34:11.6466093Z 
2025-08-16T22:34:11.6466204Z <a id="db.utils.views"></a>
2025-08-16T22:34:11.6466403Z 
2025-08-16T22:34:11.6466505Z # db.utils.views
2025-08-16T22:34:11.6466662Z 
2025-08-16T22:34:11.6466809Z <a id="db.utils.views.replace_view"></a>
2025-08-16T22:34:11.6467238Z 
2025-08-16T22:34:11.6467340Z #### replace\_view
2025-08-16T22:34:11.6467497Z 
2025-08-16T22:34:11.6467598Z ```python
2025-08-16T22:34:11.6468033Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T22:34:11.6468408Z ```
2025-08-16T22:34:11.6468531Z 
2025-08-16T22:34:11.6468665Z Drop and recreate a SQL view atomically.
2025-08-16T22:34:11.6468930Z 
2025-08-16T22:34:11.6469034Z <a id="db.utils"></a>
2025-08-16T22:34:11.6469206Z 
2025-08-16T22:34:11.6469304Z # db.utils
2025-08-16T22:34:11.6469437Z 
2025-08-16T22:34:11.6469547Z <a id="price_importer"></a>
2025-08-16T22:34:11.6469767Z 
2025-08-16T22:34:11.6469863Z # price\_importer
2025-08-16T22:34:11.6470015Z 
2025-08-16T22:34:11.6470173Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T22:34:11.6470466Z 
2025-08-16T22:34:11.6470598Z # price\_importer.services\_common.dsn
2025-08-16T22:34:11.6470842Z 
2025-08-16T22:34:11.6471043Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T22:34:11.6471375Z 
2025-08-16T22:34:11.6471476Z #### build\_dsn
2025-08-16T22:34:11.6471626Z 
2025-08-16T22:34:11.6471720Z ```python
2025-08-16T22:34:11.6471974Z def build_dsn(sync: bool = True) -> str
2025-08-16T22:34:11.6472304Z ```
2025-08-16T22:34:11.6472426Z 
2025-08-16T22:34:11.6472524Z Return safe DSN.
2025-08-16T22:34:11.6472687Z 
2025-08-16T22:34:11.6473145Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T22:34:11.6473456Z 
2025-08-16T22:34:11.6473647Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T22:34:11.6473967Z 
2025-08-16T22:34:11.6474130Z # price\_importer.services\_common.models\_vendor
2025-08-16T22:34:11.6474427Z 
2025-08-16T22:34:11.6474582Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T22:34:11.6474866Z 
2025-08-16T22:34:11.6475010Z # price\_importer.services\_common.db\_url
2025-08-16T22:34:11.6475281Z 
2025-08-16T22:34:11.6475476Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T22:34:11.6475802Z 
2025-08-16T22:34:11.6475922Z #### build\_url
2025-08-16T22:34:11.6476079Z 
2025-08-16T22:34:11.6476173Z ```python
2025-08-16T22:34:11.6476439Z def build_url(async_: bool = True) -> str
2025-08-16T22:34:11.6476775Z ```
2025-08-16T22:34:11.6476904Z 
2025-08-16T22:34:11.6477048Z Return Postgres DSN from env or PG_* parts.
2025-08-16T22:34:11.6477323Z 
2025-08-16T22:34:11.6477494Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T22:34:11.6477969Z 
2025-08-16T22:34:11.6478114Z # price\_importer.services\_common.keepa
2025-08-16T22:34:11.6478383Z 
2025-08-16T22:34:11.6478543Z <a id="price_importer.services_common.llm"></a>
2025-08-16T22:34:11.6478822Z 
2025-08-16T22:34:11.6478956Z # price\_importer.services\_common.llm
2025-08-16T22:34:11.6479213Z 
2025-08-16T22:34:11.6479392Z <a id="price_importer.services_common.settings"></a>
2025-08-16T22:34:11.6479697Z 
2025-08-16T22:34:11.6479849Z # price\_importer.services\_common.settings
2025-08-16T22:34:11.6480118Z 
2025-08-16T22:34:11.6480266Z <a id="price_importer.services_common.db"></a>
2025-08-16T22:34:11.6480724Z 
2025-08-16T22:34:11.6480856Z # price\_importer.services\_common.db
2025-08-16T22:34:11.6481098Z 
2025-08-16T22:34:11.6481325Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T22:34:11.6481711Z 
2025-08-16T22:34:11.6481823Z #### build\_sqlalchemy\_url
2025-08-16T22:34:11.6482013Z 
2025-08-16T22:34:11.6482110Z ```python
2025-08-16T22:34:11.6482357Z def build_sqlalchemy_url() -> str
2025-08-16T22:34:11.6482666Z ```
2025-08-16T22:34:11.6482786Z 
2025-08-16T22:34:11.6482930Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T22:34:11.6483201Z 
2025-08-16T22:34:11.6483419Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T22:34:11.6483770Z 
2025-08-16T22:34:11.6483883Z #### build\_asyncpg\_dsn
2025-08-16T22:34:11.6484082Z 
2025-08-16T22:34:11.6484176Z ```python
2025-08-16T22:34:11.6484429Z def build_asyncpg_dsn() -> str
2025-08-16T22:34:11.6484718Z ```
2025-08-16T22:34:11.6484838Z 
2025-08-16T22:34:11.6485037Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T22:34:11.6485545Z 
2025-08-16T22:34:11.6485741Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T22:34:11.6486066Z 
2025-08-16T22:34:11.6486167Z #### refresh\_mvs
2025-08-16T22:34:11.6486327Z 
2025-08-16T22:34:11.6486429Z ```python
2025-08-16T22:34:11.6486720Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T22:34:11.6487096Z ```
2025-08-16T22:34:11.6487216Z 
2025-08-16T22:34:11.6487410Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T22:34:11.6487748Z 
2025-08-16T22:34:11.6488081Z <a id="price_importer.services_common"></a>
2025-08-16T22:34:11.6488360Z 
2025-08-16T22:34:11.6488492Z # price\_importer.services\_common
2025-08-16T22:34:11.6488727Z 
2025-08-16T22:34:11.6488885Z <a id="price_importer.services_common.base"></a>
2025-08-16T22:34:11.6489165Z 
2025-08-16T22:34:11.6489304Z # price\_importer.services\_common.base
2025-08-16T22:34:11.6489552Z 
2025-08-16T22:34:11.6489682Z <a id="price_importer.normaliser"></a>
2025-08-16T22:34:11.6489965Z 
2025-08-16T22:34:11.6490093Z # price\_importer.normaliser
2025-08-16T22:34:11.6490302Z 
2025-08-16T22:34:11.6490466Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T22:34:11.6490770Z 
2025-08-16T22:34:11.6490902Z # price\_importer.common.models\_vendor
2025-08-16T22:34:11.6491152Z 
2025-08-16T22:34:11.6491297Z <a id="price_importer.common.db_url"></a>
2025-08-16T22:34:11.6491558Z 
2025-08-16T22:34:11.6491680Z # price\_importer.common.db\_url
2025-08-16T22:34:11.6491905Z 
2025-08-16T22:34:11.6492064Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T22:34:11.6492356Z 
2025-08-16T22:34:11.6492452Z #### make\_dsn
2025-08-16T22:34:11.6492608Z 
2025-08-16T22:34:11.6492706Z ```python
2025-08-16T22:34:11.6492982Z def make_dsn(async_: bool = False) -> str
2025-08-16T22:34:11.6493320Z ```
2025-08-16T22:34:11.6493443Z 
2025-08-16T22:34:11.6493627Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T22:34:11.6493947Z 
2025-08-16T22:34:11.6494131Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T22:34:11.6494440Z 
2025-08-16T22:34:11.6494536Z #### build\_url
2025-08-16T22:34:11.6494691Z 
2025-08-16T22:34:11.6494795Z ```python
2025-08-16T22:34:11.6495061Z def build_url(async_: bool = False) -> str
2025-08-16T22:34:11.6495432Z ```
2025-08-16T22:34:11.6495547Z 
2025-08-16T22:34:11.6495729Z Return Postgres DSN built from environment variables.
2025-08-16T22:34:11.6496042Z 
2025-08-16T22:34:11.6496170Z <a id="price_importer.common"></a>
2025-08-16T22:34:11.6496402Z 
2025-08-16T22:34:11.6496517Z # price\_importer.common
2025-08-16T22:34:11.6496724Z 
2025-08-16T22:34:11.6496861Z <a id="price_importer.common.base"></a>
2025-08-16T22:34:11.6497112Z 
2025-08-16T22:34:11.6497246Z # price\_importer.common.base
2025-08-16T22:34:11.6497457Z 
2025-08-16T22:34:11.6497601Z <a id="price_importer.tests.conftest"></a>
2025-08-16T22:34:11.6498006Z 
2025-08-16T22:34:11.6498148Z # price\_importer.tests.conftest
2025-08-16T22:34:11.6498378Z 
2025-08-16T22:34:11.6498710Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T22:34:11.6498996Z 
2025-08-16T22:34:11.6499125Z # price\_importer.tests.test\_reader
2025-08-16T22:34:11.6499364Z 
2025-08-16T22:34:11.6499523Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T22:34:11.6499798Z 
2025-08-16T22:34:11.6499926Z # price\_importer.tests.test\_imports
2025-08-16T22:34:11.6500179Z 
2025-08-16T22:34:11.6500329Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T22:34:11.6500603Z 
2025-08-16T22:34:11.6500734Z # price\_importer.tests.test\_smoke
2025-08-16T22:34:11.6500978Z 
2025-08-16T22:34:11.6501145Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T22:34:11.6501442Z 
2025-08-16T22:34:11.6501594Z # price\_importer.tests.test\_normaliser
2025-08-16T22:34:11.6501865Z 
2025-08-16T22:34:11.6501991Z <a id="price_importer.tests"></a>
2025-08-16T22:34:11.6502229Z 
2025-08-16T22:34:11.6502342Z # price\_importer.tests
2025-08-16T22:34:11.6502531Z 
2025-08-16T22:34:11.6502662Z <a id="price_importer.reader"></a>
2025-08-16T22:34:11.6503151Z 
2025-08-16T22:34:11.6503261Z # price\_importer.reader
2025-08-16T22:34:11.6503447Z 
2025-08-16T22:34:11.6503594Z <a id="price_importer.reader.load_file"></a>
2025-08-16T22:34:11.6503859Z 
2025-08-16T22:34:11.6503953Z #### load\_file
2025-08-16T22:34:11.6504102Z 
2025-08-16T22:34:11.6504207Z ```python
2025-08-16T22:34:11.6504462Z def load_file(path: str | Path) -> Any
2025-08-16T22:34:11.6504789Z ```
2025-08-16T22:34:11.6504910Z 
2025-08-16T22:34:11.6505044Z Return DataFrame from CSV or Excel file.
2025-08-16T22:34:11.6505305Z 
2025-08-16T22:34:11.6505462Z Raises RuntimeError if pandas is unavailable.
2025-08-16T22:34:11.6505734Z 
2025-08-16T22:34:11.6505871Z <a id="price_importer.repository"></a>
2025-08-16T22:34:11.6506118Z 
2025-08-16T22:34:11.6506239Z # price\_importer.repository
2025-08-16T22:34:11.6506456Z 
2025-08-16T22:34:11.6506586Z <a id="price_importer.import"></a>
2025-08-16T22:34:11.6506823Z 
2025-08-16T22:34:11.6506937Z # price\_importer.import
2025-08-16T22:34:11.6507146Z 
2025-08-16T22:34:11.6507248Z <a id="fees_h10"></a>
2025-08-16T22:34:11.6507420Z 
2025-08-16T22:34:11.6507517Z # fees\_h10
2025-08-16T22:34:11.6507656Z 
2025-08-16T22:34:11.6507764Z <a id="fees_h10.worker"></a>
2025-08-16T22:34:11.6508124Z 
2025-08-16T22:34:11.6508237Z # fees\_h10.worker
2025-08-16T22:34:11.6508399Z 
2025-08-16T22:34:11.6508524Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T22:34:11.6508782Z 
2025-08-16T22:34:11.6508901Z # fees\_h10.tests.test\_smoke
2025-08-16T22:34:11.6509111Z 
2025-08-16T22:34:11.6509227Z <a id="fees_h10.tests"></a>
2025-08-16T22:34:11.6509429Z 
2025-08-16T22:34:11.6509533Z # fees\_h10.tests
2025-08-16T22:34:11.6509704Z 
2025-08-16T22:34:11.6509826Z <a id="fees_h10.client"></a>
2025-08-16T22:34:11.6510036Z 
2025-08-16T22:34:11.6510139Z # fees\_h10.client
2025-08-16T22:34:11.6510318Z 
2025-08-16T22:34:11.6510452Z <a id="fees_h10.repository"></a>
2025-08-16T22:34:11.6510695Z 
2025-08-16T22:34:11.6510806Z # fees\_h10.repository
2025-08-16T22:34:11.6511019Z 
2025-08-16T22:34:11.6511133Z <a id="emailer"></a>
2025-08-16T22:34:11.6511311Z 
2025-08-16T22:34:11.6511411Z # emailer
2025-08-16T22:34:11.6511543Z 
2025-08-16T22:34:11.6511697Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T22:34:11.6512002Z 
2025-08-16T22:34:11.6512135Z # emailer.tests.test\_import\_emailer
2025-08-16T22:34:11.6512380Z 
2025-08-16T22:34:11.6512511Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T22:34:11.6512761Z 
2025-08-16T22:34:11.6512886Z # emailer.tests.test\_smoke
2025-08-16T22:34:11.6513099Z 
2025-08-16T22:34:11.6513220Z <a id="emailer.tests"></a>
2025-08-16T22:34:11.6513420Z 
2025-08-16T22:34:11.6513525Z # emailer.tests
2025-08-16T22:34:11.6513690Z 
2025-08-16T22:34:11.6513812Z <a id="emailer.generate_body"></a>
2025-08-16T22:34:11.6514058Z 
2025-08-16T22:34:11.6514171Z # emailer.generate\_body
2025-08-16T22:34:11.6514369Z 
2025-08-16T22:34:11.6514477Z <a id="llm_server"></a>
2025-08-16T22:34:11.6514664Z 
2025-08-16T22:34:11.6514770Z # llm\_server
2025-08-16T22:34:11.6515101Z 
2025-08-16T22:34:11.6515219Z <a id="llm_server.app"></a>
2025-08-16T22:34:11.6515431Z 
2025-08-16T22:34:11.6515529Z # llm\_server.app
2025-08-16T22:34:11.6515686Z 
