2025-08-19T22:19:55.2699623Z ##[group]Run pydoc-markdown
2025-08-19T22:19:55.2700376Z [36;1mpydoc-markdown[0m
2025-08-19T22:19:55.2745324Z shell: /usr/bin/bash -e {0}
2025-08-19T22:19:55.2745554Z env:
2025-08-19T22:19:55.2745789Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:19:55.2746306Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T22:19:55.2746842Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:19:55.2747177Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:19:55.2747514Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:19:55.2747918Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T22:19:55.2748205Z ##[endgroup]
2025-08-19T22:19:55.6084922Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T22:19:55.6085597Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T22:19:55.6086029Z In "pydoc-markdown.yml"
2025-08-19T22:19:55.6086434Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T22:19:55.6087036Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T22:19:55.6087739Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T22:19:55.6088083Z 
2025-08-19T22:19:55.9625937Z <a id="__init__"></a>
2025-08-19T22:19:55.9626349Z 
2025-08-19T22:19:55.9626477Z # \_\_init\_\_
2025-08-19T22:19:55.9626671Z 
2025-08-19T22:19:55.9626791Z <a id="api"></a>
2025-08-19T22:19:55.9626986Z 
2025-08-19T22:19:55.9627100Z # api
2025-08-19T22:19:55.9627255Z 
2025-08-19T22:19:55.9627390Z <a id="api.errors"></a>
2025-08-19T22:19:55.9627636Z 
2025-08-19T22:19:55.9627754Z # api.errors
2025-08-19T22:19:55.9627934Z 
2025-08-19T22:19:55.9628080Z <a id="api.sentry_config"></a>
2025-08-19T22:19:55.9628358Z 
2025-08-19T22:19:55.9628487Z # api.sentry\_config
2025-08-19T22:19:55.9628697Z 
2025-08-19T22:19:55.9628879Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T22:19:55.9629208Z 
2025-08-19T22:19:55.9629738Z # api.tests.test\_stats\_contracts
2025-08-19T22:19:55.9630308Z 
2025-08-19T22:19:55.9630491Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T22:19:55.9630810Z 
2025-08-19T22:19:55.9630955Z # api.tests.test\_sentry\_scrub
2025-08-19T22:19:55.9631227Z 
2025-08-19T22:19:55.9631398Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T22:19:55.9631719Z 
2025-08-19T22:19:55.9631881Z # api.tests.test\_roi\_basic\_auth
2025-08-19T22:19:55.9632163Z 
2025-08-19T22:19:55.9632319Z <a id="api.tests.test_errors_json"></a>
2025-08-19T22:19:55.9632635Z 
2025-08-19T22:19:55.9632775Z # api.tests.test\_errors\_json
2025-08-19T22:19:55.9633036Z 
2025-08-19T22:19:55.9633181Z <a id="api.tests.test_llm"></a>
2025-08-19T22:19:55.9633452Z 
2025-08-19T22:19:55.9633585Z # api.tests.test\_llm
2025-08-19T22:19:55.9633801Z 
2025-08-19T22:19:55.9633963Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T22:19:55.9634269Z 
2025-08-19T22:19:55.9634417Z # api.tests.test\_roi\_filters
2025-08-19T22:19:55.9634690Z 
2025-08-19T22:19:55.9634874Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T22:19:55.9635208Z 
2025-08-19T22:19:55.9635363Z # api.tests.test\_sentry\_event
2025-08-19T22:19:55.9635638Z 
2025-08-19T22:19:55.9635866Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T22:19:55.9636246Z 
2025-08-19T22:19:55.9636397Z ## DummyTransport Objects
2025-08-19T22:19:55.9636637Z 
2025-08-19T22:19:55.9636749Z ```python
2025-08-19T22:19:55.9637053Z class DummyTransport()
2025-08-19T22:19:55.9637375Z ```
2025-08-19T22:19:55.9637526Z 
2025-08-19T22:19:55.9637844Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T22:19:55.9638331Z 
2025-08-19T22:19:55.9638460Z #### capture\_envelope
2025-08-19T22:19:55.9638687Z 
2025-08-19T22:19:55.9638796Z ```python
2025-08-19T22:19:55.9639114Z def capture_envelope(envelope)
2025-08-19T22:19:55.9639469Z ```
2025-08-19T22:19:55.9639615Z 
2025-08-19T22:19:55.9639854Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T22:19:55.9640466Z 
2025-08-19T22:19:55.9640629Z <a id="api.tests.test_cors"></a>
2025-08-19T22:19:55.9641366Z 
2025-08-19T22:19:55.9641503Z # api.tests.test\_cors
2025-08-19T22:19:55.9641724Z 
2025-08-19T22:19:55.9641884Z <a id="api.tests.test_imports"></a>
2025-08-19T22:19:55.9642169Z 
2025-08-19T22:19:55.9642307Z # api.tests.test\_imports
2025-08-19T22:19:55.9642539Z 
2025-08-19T22:19:55.9642698Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T22:19:55.9642993Z 
2025-08-19T22:19:55.9643138Z # api.tests.test\_rate\_limit
2025-08-19T22:19:55.9643400Z 
2025-08-19T22:19:55.9643573Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T22:19:55.9643890Z 
2025-08-19T22:19:55.9643999Z #### app
2025-08-19T22:19:55.9644165Z 
2025-08-19T22:19:55.9644277Z noqa: E402
2025-08-19T22:19:55.9644437Z 
2025-08-19T22:19:55.9644599Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T22:19:55.9644901Z 
2025-08-19T22:19:55.9645040Z # api.tests.test\_stats\_sql
2025-08-19T22:19:55.9645304Z 
2025-08-19T22:19:55.9645464Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T22:19:55.9645782Z 
2025-08-19T22:19:55.9645931Z # api.tests.test\_entrypoint
2025-08-19T22:19:55.9646194Z 
2025-08-19T22:19:55.9646390Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T22:19:55.9646745Z 
2025-08-19T22:19:55.9646928Z # api.tests.test\_stats\_future\_contracts
2025-08-19T22:19:55.9647243Z 
2025-08-19T22:19:55.9647391Z <a id="api.tests.test_health"></a>
2025-08-19T22:19:55.9647677Z 
2025-08-19T22:19:55.9647812Z # api.tests.test\_health
2025-08-19T22:19:55.9648042Z 
2025-08-19T22:19:55.9648188Z <a id="api.tests.test_score"></a>
2025-08-19T22:19:55.9648470Z 
2025-08-19T22:19:55.9648602Z # api.tests.test\_score
2025-08-19T22:19:55.9648822Z 
2025-08-19T22:19:55.9648968Z <a id="api.logging_config"></a>
2025-08-19T22:19:55.9649227Z 
2025-08-19T22:19:55.9649355Z # api.logging\_config
2025-08-19T22:19:55.9649580Z 
2025-08-19T22:19:55.9649723Z <a id="api.migrations.env"></a>
2025-08-19T22:19:55.9650168Z 
2025-08-19T22:19:55.9650314Z # api.migrations.env
2025-08-19T22:19:55.9650780Z 
2025-08-19T22:19:55.9651000Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T22:19:55.9651388Z 
2025-08-19T22:19:55.9651599Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T22:19:55.9651943Z 
2025-08-19T22:19:55.9652143Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T22:19:55.9652507Z 
2025-08-19T22:19:55.9652676Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T22:19:55.9652996Z 
2025-08-19T22:19:55.9653275Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T22:19:55.9653724Z 
2025-08-19T22:19:55.9653973Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T22:19:55.9654381Z 
2025-08-19T22:19:55.9654619Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T22:19:55.9655012Z 
2025-08-19T22:19:55.9655215Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T22:19:55.9655575Z 
2025-08-19T22:19:55.9655804Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T22:19:55.9656287Z 
2025-08-19T22:19:55.9656488Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T22:19:55.9656877Z 
2025-08-19T22:19:55.9657105Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T22:19:55.9657498Z 
2025-08-19T22:19:55.9657693Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T22:19:55.9658043Z 
2025-08-19T22:19:55.9658265Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T22:19:55.9658630Z 
2025-08-19T22:19:55.9658826Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T22:19:55.9659180Z 
2025-08-19T22:19:55.9659405Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T22:19:55.9659782Z 
2025-08-19T22:19:55.9659976Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T22:19:55.9660525Z 
2025-08-19T22:19:55.9660784Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T22:19:55.9661210Z 
2025-08-19T22:19:55.9661479Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T22:19:55.9661861Z 
2025-08-19T22:19:55.9662101Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T22:19:55.9662737Z 
2025-08-19T22:19:55.9662938Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T22:19:55.9663292Z 
2025-08-19T22:19:55.9663544Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T22:19:55.9663955Z 
2025-08-19T22:19:55.9664165Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T22:19:55.9664530Z 
2025-08-19T22:19:55.9664736Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T22:19:55.9665092Z 
2025-08-19T22:19:55.9665259Z # api.migrations.versions.0001\_baseline
2025-08-19T22:19:55.9665714Z 
2025-08-19T22:19:55.9665875Z <a id="api.migrations.versions"></a>
2025-08-19T22:19:55.9666178Z 
2025-08-19T22:19:55.9666331Z # api.migrations.versions
2025-08-19T22:19:55.9666578Z 
2025-08-19T22:19:55.9666722Z <a id="api.migrations"></a>
2025-08-19T22:19:55.9666982Z 
2025-08-19T22:19:55.9667114Z # api.migrations
2025-08-19T22:19:55.9667312Z 
2025-08-19T22:19:55.9667447Z <a id="api.db"></a>
2025-08-19T22:19:55.9667663Z 
2025-08-19T22:19:55.9667772Z # api.db
2025-08-19T22:19:55.9667976Z 
2025-08-19T22:19:55.9668121Z <a id="api.routes.score"></a>
2025-08-19T22:19:55.9668392Z 
2025-08-19T22:19:55.9668515Z # api.routes.score
2025-08-19T22:19:55.9668714Z 
2025-08-19T22:19:55.9668869Z <a id="api.routes.stats"></a>
2025-08-19T22:19:55.9669121Z 
2025-08-19T22:19:55.9669243Z # api.routes.stats
2025-08-19T22:19:55.9669448Z 
2025-08-19T22:19:55.9669588Z <a id="api.routes.roi"></a>
2025-08-19T22:19:55.9669826Z 
2025-08-19T22:19:55.9669947Z # api.routes.roi
2025-08-19T22:19:55.9670320Z 
2025-08-19T22:19:55.9670467Z <a id="api.routes.health"></a>
2025-08-19T22:19:55.9670730Z 
2025-08-19T22:19:55.9670861Z # api.routes.health
2025-08-19T22:19:55.9671058Z 
2025-08-19T22:19:55.9671221Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T22:19:55.9671527Z 
2025-08-19T22:19:55.9671648Z #### MAX\_SKEW
2025-08-19T22:19:55.9671826Z 
2025-08-19T22:19:55.9671932Z seconds
2025-08-19T22:19:55.9672333Z 
2025-08-19T22:19:55.9672497Z <a id="api.routes.health.health"></a>
2025-08-19T22:19:55.9672807Z 
2025-08-19T22:19:55.9672926Z #### health
2025-08-19T22:19:55.9673154Z 
2025-08-19T22:19:55.9673274Z ```python
2025-08-19T22:19:55.9673622Z @router.get("/health", include_in_schema=False)
2025-08-19T22:19:55.9674352Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T22:19:55.9674982Z ```
2025-08-19T22:19:55.9675136Z 
2025-08-19T22:19:55.9675346Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T22:19:55.9675713Z 
2025-08-19T22:19:55.9675883Z <a id="api.routes.repository"></a>
2025-08-19T22:19:55.9676178Z 
2025-08-19T22:19:55.9676321Z # api.routes.repository
2025-08-19T22:19:55.9676556Z 
2025-08-19T22:19:55.9676692Z <a id="api.routes"></a>
2025-08-19T22:19:55.9676906Z 
2025-08-19T22:19:55.9677018Z # api.routes
2025-08-19T22:19:55.9677202Z 
2025-08-19T22:19:55.9677344Z <a id="api.models.fee"></a>
2025-08-19T22:19:55.9677594Z 
2025-08-19T22:19:55.9677721Z # api.models.fee
2025-08-19T22:19:55.9677928Z 
2025-08-19T22:19:55.9678055Z <a id="api.models"></a>
2025-08-19T22:19:55.9678273Z 
2025-08-19T22:19:55.9678395Z # api.models
2025-08-19T22:19:55.9678566Z 
2025-08-19T22:19:55.9678707Z <a id="api.roi_repository"></a>
2025-08-19T22:19:55.9678979Z 
2025-08-19T22:19:55.9679107Z # api.roi\_repository
2025-08-19T22:19:55.9679321Z 
2025-08-19T22:19:55.9679443Z <a id="api.main"></a>
2025-08-19T22:19:55.9679656Z 
2025-08-19T22:19:55.9679767Z # api.main
2025-08-19T22:19:55.9679931Z 
2025-08-19T22:19:55.9680242Z <a id="api.main.ready"></a>
2025-08-19T22:19:55.9680462Z 
2025-08-19T22:19:55.9680555Z #### ready
2025-08-19T22:19:55.9680690Z 
2025-08-19T22:19:55.9680822Z ```python
2025-08-19T22:19:55.9681214Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T22:19:55.9681971Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T22:19:55.9682576Z                                                                       str]
2025-08-19T22:19:55.9682979Z ```
2025-08-19T22:19:55.9683316Z 
2025-08-19T22:19:55.9683467Z Return 200 only when migrations are at head.
2025-08-19T22:19:55.9683738Z 
2025-08-19T22:19:55.9683845Z <a id="api.config"></a>
2025-08-19T22:19:55.9684044Z 
2025-08-19T22:19:55.9684142Z # api.config
2025-08-19T22:19:55.9684288Z 
2025-08-19T22:19:55.9684408Z <a id="api.security"></a>
2025-08-19T22:19:55.9684638Z 
2025-08-19T22:19:55.9684750Z # api.security
2025-08-19T22:19:55.9684922Z 
2025-08-19T22:19:55.9685037Z <a id="etl"></a>
2025-08-19T22:19:55.9685216Z 
2025-08-19T22:19:55.9685307Z # etl
2025-08-19T22:19:55.9685433Z 
2025-08-19T22:19:55.9685566Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T22:19:55.9685792Z 
2025-08-19T22:19:55.9685898Z # etl.fba\_fee\_ingestor
2025-08-19T22:19:55.9686089Z 
2025-08-19T22:19:55.9686207Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T22:19:55.9686439Z 
2025-08-19T22:19:55.9686555Z # etl.sp\_fees\_ingestor
2025-08-19T22:19:55.9686769Z 
2025-08-19T22:19:55.9686905Z <a id="etl.keepa_ingestor"></a>
2025-08-19T22:19:55.9687170Z 
2025-08-19T22:19:55.9687294Z # etl.keepa\_ingestor
2025-08-19T22:19:55.9687472Z 
2025-08-19T22:19:55.9687571Z <a id="etl.db"></a>
2025-08-19T22:19:55.9687732Z 
2025-08-19T22:19:55.9687818Z # etl.db
2025-08-19T22:19:55.9687945Z 
2025-08-19T22:19:55.9688069Z <a id="etl.dialects.schemas"></a>
2025-08-19T22:19:55.9688314Z 
2025-08-19T22:19:55.9688434Z # etl.dialects.schemas
2025-08-19T22:19:55.9688641Z 
2025-08-19T22:19:55.9688829Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T22:19:55.9689158Z 
2025-08-19T22:19:55.9689309Z # etl.dialects.amazon\_reimbursements
2025-08-19T22:19:55.9689597Z 
2025-08-19T22:19:55.9689744Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T22:19:55.9690354Z 
2025-08-19T22:19:55.9690490Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T22:19:55.9690720Z 
2025-08-19T22:19:55.9690841Z <a id="etl.dialects.test_generic"></a>
2025-08-19T22:19:55.9691068Z 
2025-08-19T22:19:55.9691183Z # etl.dialects.test\_generic
2025-08-19T22:19:55.9691535Z 
2025-08-19T22:19:55.9691664Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T22:19:55.9691941Z 
2025-08-19T22:19:55.9692075Z # etl.dialects.amazon\_returns
2025-08-19T22:19:55.9692315Z 
2025-08-19T22:19:55.9692474Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T22:19:55.9692780Z 
2025-08-19T22:19:55.9692917Z # etl.dialects.amazon\_fee\_preview
2025-08-19T22:19:55.9693183Z 
2025-08-19T22:19:55.9693369Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T22:19:55.9693693Z 
2025-08-19T22:19:55.9693842Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T22:19:55.9694134Z 
2025-08-19T22:19:55.9694297Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T22:19:55.9694622Z 
2025-08-19T22:19:55.9694775Z # etl.dialects.amazon\_settlements
2025-08-19T22:19:55.9695068Z 
2025-08-19T22:19:55.9695205Z <a id="etl.dialects"></a>
2025-08-19T22:19:55.9695445Z 
2025-08-19T22:19:55.9695574Z # etl.dialects
2025-08-19T22:19:55.9695759Z 
2025-08-19T22:19:55.9695880Z <a id="ingest"></a>
2025-08-19T22:19:55.9696088Z 
2025-08-19T22:19:55.9696215Z # ingest
2025-08-19T22:19:55.9696375Z 
2025-08-19T22:19:55.9696520Z <a id="ingest.maintenance"></a>
2025-08-19T22:19:55.9696791Z 
2025-08-19T22:19:55.9696921Z # ingest.maintenance
2025-08-19T22:19:55.9697133Z 
2025-08-19T22:19:55.9697279Z <a id="ingest.copy_loader"></a>
2025-08-19T22:19:55.9697537Z 
2025-08-19T22:19:55.9697666Z # ingest.copy\_loader
2025-08-19T22:19:55.9697880Z 
2025-08-19T22:19:55.9698069Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T22:19:55.9698410Z 
2025-08-19T22:19:55.9698540Z #### copy\_df\_via\_temp
2025-08-19T22:19:55.9698772Z 
2025-08-19T22:19:55.9698881Z ```python
2025-08-19T22:19:55.9699184Z def copy_df_via_temp(engine: Engine,
2025-08-19T22:19:55.9699613Z                      df: pd.DataFrame,
2025-08-19T22:19:55.9700219Z                      target_table: str,
2025-08-19T22:19:55.9700626Z                      *,
2025-08-19T22:19:55.9701003Z                      target_schema: Optional[str] = None,
2025-08-19T22:19:55.9701485Z                      columns: Sequence[str],
2025-08-19T22:19:55.9702203Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T22:19:55.9702712Z                      analyze_after: bool = False,
2025-08-19T22:19:55.9703191Z                      connection: Any | None = None) -> int
2025-08-19T22:19:55.9703617Z ```
2025-08-19T22:19:55.9703782Z 
2025-08-19T22:19:55.9704067Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T22:19:55.9704492Z 
2025-08-19T22:19:55.9704657Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T22:19:55.9704953Z 
2025-08-19T22:19:55.9705095Z # ingest.tests.test\_smoke
2025-08-19T22:19:55.9705342Z 
2025-08-19T22:19:55.9705476Z <a id="ingest.tests"></a>
2025-08-19T22:19:55.9705704Z 
2025-08-19T22:19:55.9705816Z # ingest.tests
2025-08-19T22:19:55.9706005Z 
2025-08-19T22:19:55.9706149Z <a id="ingest.upload_router"></a>
2025-08-19T22:19:55.9706423Z 
2025-08-19T22:19:55.9706561Z # ingest.upload\_router
2025-08-19T22:19:55.9706793Z 
2025-08-19T22:19:55.9706945Z <a id="ingest.email_watcher"></a>
2025-08-19T22:19:55.9707226Z 
2025-08-19T22:19:55.9707354Z # ingest.email\_watcher
2025-08-19T22:19:55.9707568Z 
2025-08-19T22:19:55.9707722Z <a id="ingest.email_watcher.main"></a>
2025-08-19T22:19:55.9708032Z 
2025-08-19T22:19:55.9708143Z #### main
2025-08-19T22:19:55.9708306Z 
2025-08-19T22:19:55.9708423Z ```python
2025-08-19T22:19:55.9708717Z def main() -> dict[str, str]
2025-08-19T22:19:55.9709074Z ```
2025-08-19T22:19:55.9709225Z 
2025-08-19T22:19:55.9709483Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T22:19:55.9709911Z 
2025-08-19T22:19:55.9710337Z Returns {"status": "success"} when processing completes.
2025-08-19T22:19:55.9710737Z 
2025-08-19T22:19:55.9710874Z <a id="ingest.tasks"></a>
2025-08-19T22:19:55.9711116Z 
2025-08-19T22:19:55.9711234Z # ingest.tasks
2025-08-19T22:19:55.9711452Z 
2025-08-19T22:19:55.9711624Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T22:19:55.9711953Z 
2025-08-19T22:19:55.9712436Z #### task\_import\_file
2025-08-19T22:19:55.9712670Z 
2025-08-19T22:19:55.9712780Z ```python
2025-08-19T22:19:55.9713163Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T22:19:55.9713671Z def task_import_file(self: Any,
2025-08-19T22:19:55.9714056Z                      uri: str,
2025-08-19T22:19:55.9714453Z                      report_type: str | None = None,
2025-08-19T22:19:55.9714935Z                      force: bool = False) -> dict[str, Any]
2025-08-19T22:19:55.9715371Z ```
2025-08-19T22:19:55.9715517Z 
2025-08-19T22:19:55.9715755Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T22:19:55.9716150Z 
2025-08-19T22:19:55.9716292Z <a id="ingest.celery_app"></a>
2025-08-19T22:19:55.9716550Z 
2025-08-19T22:19:55.9716673Z # ingest.celery\_app
2025-08-19T22:19:55.9716888Z 
2025-08-19T22:19:55.9717031Z <a id="ingest.ingest_router"></a>
2025-08-19T22:19:55.9717305Z 
2025-08-19T22:19:55.9717441Z # ingest.ingest\_router
2025-08-19T22:19:55.9717662Z 
2025-08-19T22:19:55.9717805Z <a id="logistics_etl"></a>
2025-08-19T22:19:55.9718049Z 
2025-08-19T22:19:55.9718164Z # logistics\_etl
2025-08-19T22:19:55.9718354Z 
2025-08-19T22:19:55.9718488Z Daily logistics ETL job.
2025-08-19T22:19:55.9718733Z 
2025-08-19T22:19:55.9718877Z <a id="logistics_etl.__main__"></a>
2025-08-19T22:19:55.9719160Z 
2025-08-19T22:19:55.9719310Z # logistics\_etl.\_\_main\_\_
2025-08-19T22:19:55.9719565Z 
2025-08-19T22:19:55.9719707Z <a id="logistics_etl.dsn"></a>
2025-08-19T22:19:55.9719969Z 
2025-08-19T22:19:55.9720286Z # logistics\_etl.dsn
2025-08-19T22:19:55.9720497Z 
2025-08-19T22:19:55.9720760Z Local DSN builder to avoid cross-service dependency.
2025-08-19T22:19:55.9721142Z 
2025-08-19T22:19:55.9721306Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T22:19:55.9721620Z 
2025-08-19T22:19:55.9721743Z #### build\_dsn
2025-08-19T22:19:55.9721928Z 
2025-08-19T22:19:55.9722036Z ```python
2025-08-19T22:19:55.9722356Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:19:55.9722749Z ```
2025-08-19T22:19:55.9722915Z 
2025-08-19T22:19:55.9723630Z Return a Postgres DSN assembled from environment variables.
2025-08-19T22:19:55.9724047Z 
2025-08-19T22:19:55.9724320Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T22:19:55.9725037Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T22:19:55.9725673Z error when any required variable is missing.
2025-08-19T22:19:55.9726004Z 
2025-08-19T22:19:55.9726171Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T22:19:55.9726494Z 
2025-08-19T22:19:55.9726640Z # logistics\_etl.tests.conftest
2025-08-19T22:19:55.9726907Z 
2025-08-19T22:19:55.9727093Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T22:19:55.9727443Z 
2025-08-19T22:19:55.9727598Z # logistics\_etl.tests.test\_repository
2025-08-19T22:19:55.9727902Z 
2025-08-19T22:19:55.9728075Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T22:19:55.9728400Z 
2025-08-19T22:19:55.9728547Z # logistics\_etl.tests.test\_cron
2025-08-19T22:19:55.9728845Z 
2025-08-19T22:19:55.9729031Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T22:19:55.9729376Z 
2025-08-19T22:19:55.9729529Z # logistics\_etl.tests.test\_imports
2025-08-19T22:19:55.9729826Z 
2025-08-19T22:19:55.9730203Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T22:19:55.9730548Z 
2025-08-19T22:19:55.9730707Z # logistics\_etl.tests.test\_smoke
2025-08-19T22:19:55.9730986Z 
2025-08-19T22:19:55.9731160Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T22:19:55.9731491Z 
2025-08-19T22:19:55.9731641Z # logistics\_etl.tests.test\_client
2025-08-19T22:19:55.9731926Z 
2025-08-19T22:19:55.9732071Z <a id="logistics_etl.tests"></a>
2025-08-19T22:19:55.9732346Z 
2025-08-19T22:19:55.9732474Z # logistics\_etl.tests
2025-08-19T22:19:55.9732691Z 
2025-08-19T22:19:55.9732839Z <a id="logistics_etl.flow"></a>
2025-08-19T22:19:55.9733095Z 
2025-08-19T22:19:55.9733224Z # logistics\_etl.flow
2025-08-19T22:19:55.9733443Z 
2025-08-19T22:19:55.9733591Z <a id="logistics_etl.client"></a>
2025-08-19T22:19:55.9734092Z 
2025-08-19T22:19:55.9797861Z # logistics\_etl.client
2025-08-19T22:19:55.9798128Z 
2025-08-19T22:19:55.9798393Z <a id="logistics_etl.cron"></a>
2025-08-19T22:19:55.9798633Z 
2025-08-19T22:19:55.9798775Z # logistics\_etl.cron
2025-08-19T22:19:55.9798962Z 
2025-08-19T22:19:55.9799084Z <a id="logistics_etl.db"></a>
2025-08-19T22:19:55.9799307Z 
2025-08-19T22:19:55.9799410Z # logistics\_etl.db
2025-08-19T22:19:55.9799575Z 
2025-08-19T22:19:55.9799716Z <a id="logistics_etl.repository"></a>
2025-08-19T22:19:55.9799975Z 
2025-08-19T22:19:55.9800280Z # logistics\_etl.repository
2025-08-19T22:19:55.9800497Z 
2025-08-19T22:19:55.9800601Z <a id="alert_bot"></a>
2025-08-19T22:19:55.9800774Z 
2025-08-19T22:19:55.9800870Z # alert\_bot
2025-08-19T22:19:55.9801015Z 
2025-08-19T22:19:55.9801139Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T22:19:55.9801400Z 
2025-08-19T22:19:55.9801531Z # alert\_bot.tests.test\_smoke
2025-08-19T22:19:55.9801748Z 
2025-08-19T22:19:55.9801857Z <a id="alert_bot.tests"></a>
2025-08-19T22:19:55.9802083Z 
2025-08-19T22:19:55.9802191Z # alert\_bot.tests
2025-08-19T22:19:55.9802357Z 
2025-08-19T22:19:55.9802481Z <a id="alert_bot.alert_bot"></a>
2025-08-19T22:19:55.9802711Z 
2025-08-19T22:19:55.9802820Z # alert\_bot.alert\_bot
2025-08-19T22:19:55.9802996Z 
2025-08-19T22:19:55.9803117Z <a id="alert_bot.rules"></a>
2025-08-19T22:19:55.9803318Z 
2025-08-19T22:19:55.9803417Z # alert\_bot.rules
2025-08-19T22:19:55.9803581Z 
2025-08-19T22:19:55.9803689Z <a id="common"></a>
2025-08-19T22:19:55.9803849Z 
2025-08-19T22:19:55.9803943Z # common
2025-08-19T22:19:55.9804086Z 
2025-08-19T22:19:55.9804205Z <a id="common.dsn"></a>
2025-08-19T22:19:55.9804394Z 
2025-08-19T22:19:55.9804490Z # common.dsn
2025-08-19T22:19:55.9804653Z 
2025-08-19T22:19:55.9804779Z <a id="common.dsn.build_dsn"></a>
2025-08-19T22:19:55.9805006Z 
2025-08-19T22:19:55.9805104Z #### build\_dsn
2025-08-19T22:19:55.9805266Z 
2025-08-19T22:19:55.9805362Z ```python
2025-08-19T22:19:55.9805634Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:19:55.9805971Z ```
2025-08-19T22:19:55.9806422Z 
2025-08-19T22:19:55.9806621Z Return a Postgres DSN, validating required variables.
2025-08-19T22:19:55.9806939Z 
2025-08-19T22:19:55.9807233Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T22:19:55.9807906Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T22:19:55.9808550Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T22:19:55.9809037Z missing.
2025-08-19T22:19:55.9809182Z 
2025-08-19T22:19:55.9809308Z <a id="common.models_vendor"></a>
2025-08-19T22:19:55.9809552Z 
2025-08-19T22:19:55.9809663Z # common.models\_vendor
2025-08-19T22:19:55.9809838Z 
2025-08-19T22:19:55.9809968Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T22:19:55.9810409Z 
2025-08-19T22:19:55.9810514Z ## Vendor Objects
2025-08-19T22:19:55.9810676Z 
2025-08-19T22:19:55.9810764Z ```python
2025-08-19T22:19:55.9810999Z class Vendor(Base)
2025-08-19T22:19:55.9811239Z ```
2025-08-19T22:19:55.9811368Z 
2025-08-19T22:19:55.9811480Z Vendor of inventory items.
2025-08-19T22:19:55.9811675Z 
2025-08-19T22:19:55.9811834Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T22:19:55.9812112Z 
2025-08-19T22:19:55.9812216Z ## VendorPrice Objects
2025-08-19T22:19:55.9812395Z 
2025-08-19T22:19:55.9812492Z ```python
2025-08-19T22:19:55.9812718Z class VendorPrice(Base)
2025-08-19T22:19:55.9812983Z ```
2025-08-19T22:19:55.9813104Z 
2025-08-19T22:19:55.9813259Z Association table linking vendors to pricing.
2025-08-19T22:19:55.9813538Z 
2025-08-19T22:19:55.9813645Z <a id="common.db_url"></a>
2025-08-19T22:19:55.9813834Z 
2025-08-19T22:19:55.9813936Z # common.db\_url
2025-08-19T22:19:55.9814091Z 
2025-08-19T22:19:55.9814210Z <a id="common.db_url.build_url"></a>
2025-08-19T22:19:55.9814458Z 
2025-08-19T22:19:55.9814570Z #### build\_url
2025-08-19T22:19:55.9814724Z 
2025-08-19T22:19:55.9814819Z ```python
2025-08-19T22:19:55.9815092Z def build_url(async_: bool = True) -> str
2025-08-19T22:19:55.9815627Z ```
2025-08-19T22:19:55.9815763Z 
2025-08-19T22:19:55.9815912Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:19:55.9816182Z 
2025-08-19T22:19:55.9816304Z <a id="common.keepa"></a>
2025-08-19T22:19:55.9816491Z 
2025-08-19T22:19:55.9816591Z # common.keepa
2025-08-19T22:19:55.9816744Z 
2025-08-19T22:19:55.9816856Z <a id="common.llm"></a>
2025-08-19T22:19:55.9817038Z 
2025-08-19T22:19:55.9817132Z # common.llm
2025-08-19T22:19:55.9817285Z 
2025-08-19T22:19:55.9817398Z <a id="common.settings"></a>
2025-08-19T22:19:55.9817609Z 
2025-08-19T22:19:55.9817719Z # common.settings
2025-08-19T22:19:55.9817871Z 
2025-08-19T22:19:55.9817974Z <a id="common.db"></a>
2025-08-19T22:19:55.9818158Z 
2025-08-19T22:19:55.9818258Z # common.db
2025-08-19T22:19:55.9818395Z 
2025-08-19T22:19:55.9818529Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T22:19:55.9818806Z 
2025-08-19T22:19:55.9818920Z #### build\_sqlalchemy\_url
2025-08-19T22:19:55.9819116Z 
2025-08-19T22:19:55.9819209Z ```python
2025-08-19T22:19:55.9819476Z def build_sqlalchemy_url() -> str
2025-08-19T22:19:55.9819793Z ```
2025-08-19T22:19:55.9819913Z 
2025-08-19T22:19:55.9820206Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:19:55.9820472Z 
2025-08-19T22:19:55.9820614Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T22:19:55.9820902Z 
2025-08-19T22:19:55.9821013Z #### build\_asyncpg\_dsn
2025-08-19T22:19:55.9821203Z 
2025-08-19T22:19:55.9821292Z ```python
2025-08-19T22:19:55.9821548Z def build_asyncpg_dsn() -> str
2025-08-19T22:19:55.9821849Z ```
2025-08-19T22:19:55.9821965Z 
2025-08-19T22:19:55.9822161Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:19:55.9822478Z 
2025-08-19T22:19:55.9822604Z <a id="common.db.refresh_mvs"></a>
2025-08-19T22:19:55.9822838Z 
2025-08-19T22:19:55.9822935Z #### refresh\_mvs
2025-08-19T22:19:55.9823089Z 
2025-08-19T22:19:55.9823182Z ```python
2025-08-19T22:19:55.9823474Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:19:55.9823848Z ```
2025-08-19T22:19:55.9823985Z 
2025-08-19T22:19:55.9824374Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:19:55.9824708Z 
2025-08-19T22:19:55.9824830Z <a id="common.config"></a>
2025-08-19T22:19:55.9825029Z 
2025-08-19T22:19:55.9825131Z # common.config
2025-08-19T22:19:55.9825296Z 
2025-08-19T22:19:55.9825407Z <a id="common.base"></a>
2025-08-19T22:19:55.9825597Z 
2025-08-19T22:19:55.9825691Z # common.base
2025-08-19T22:19:55.9825859Z 
2025-08-19T22:19:55.9825977Z <a id="common.base.Base"></a>
2025-08-19T22:19:55.9826187Z 
2025-08-19T22:19:55.9826294Z ## Base Objects
2025-08-19T22:19:55.9826446Z 
2025-08-19T22:19:55.9826543Z ```python
2025-08-19T22:19:55.9826798Z class Base(DeclarativeBase)
2025-08-19T22:19:55.9827087Z ```
2025-08-19T22:19:55.9827210Z 
2025-08-19T22:19:55.9827329Z Base class for SQLAlchemy models.
2025-08-19T22:19:55.9827555Z 
2025-08-19T22:19:55.9827663Z <a id="repricer"></a>
2025-08-19T22:19:55.9827842Z 
2025-08-19T22:19:55.9827935Z # repricer
2025-08-19T22:19:55.9828070Z 
2025-08-19T22:19:55.9828219Z <a id="repricer.app.schemas"></a>
2025-08-19T22:19:55.9828449Z 
2025-08-19T22:19:55.9828558Z # repricer.app.schemas
2025-08-19T22:19:55.9828748Z 
2025-08-19T22:19:55.9828872Z <a id="repricer.app.deps"></a>
2025-08-19T22:19:55.9829084Z 
2025-08-19T22:19:55.9829195Z # repricer.app.deps
2025-08-19T22:19:55.9829367Z 
2025-08-19T22:19:55.9829543Z Placeholder module for Keepa / SP-API clients.
2025-08-19T22:19:55.9829824Z 
2025-08-19T22:19:55.9829954Z <a id="repricer.app.logic"></a>
2025-08-19T22:19:55.9830323Z 
2025-08-19T22:19:55.9830438Z # repricer.app.logic
2025-08-19T22:19:55.9830627Z 
2025-08-19T22:19:55.9830776Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T22:19:55.9831031Z 
2025-08-19T22:19:55.9831125Z #### MIN\_MARGIN
2025-08-19T22:19:55.9831282Z 
2025-08-19T22:19:55.9831371Z 15 % ROI
2025-08-19T22:19:55.9831498Z 
2025-08-19T22:19:55.9831656Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T22:19:55.9831934Z 
2025-08-19T22:19:55.9832045Z #### compute\_price
2025-08-19T22:19:55.9832378Z 
2025-08-19T22:19:55.9832485Z ```python
2025-08-19T22:19:55.9832862Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T22:19:55.9833312Z ```
2025-08-19T22:19:55.9833435Z 
2025-08-19T22:19:55.9833589Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T22:19:55.9834011Z Replace with real competitive logic later.
2025-08-19T22:19:55.9834265Z 
2025-08-19T22:19:55.9834397Z <a id="repricer.app.main"></a>
2025-08-19T22:19:55.9834612Z 
2025-08-19T22:19:55.9834715Z # repricer.app.main
2025-08-19T22:19:55.9834886Z 
2025-08-19T22:19:55.9834997Z <a id="repricer.app"></a>
2025-08-19T22:19:55.9835188Z 
2025-08-19T22:19:55.9835293Z # repricer.app
2025-08-19T22:19:55.9835445Z 
2025-08-19T22:19:55.9835582Z <a id="repricer.tests.test_imports"></a>
2025-08-19T22:19:55.9835850Z 
2025-08-19T22:19:55.9835981Z # repricer.tests.test\_imports
2025-08-19T22:19:55.9836209Z 
2025-08-19T22:19:55.9836346Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T22:19:55.9836586Z 
2025-08-19T22:19:55.9836721Z # repricer.tests.test\_smoke
2025-08-19T22:19:55.9836943Z 
2025-08-19T22:19:55.9837062Z <a id="repricer.tests"></a>
2025-08-19T22:19:55.9837265Z 
2025-08-19T22:19:55.9837366Z # repricer.tests
2025-08-19T22:19:55.9837524Z 
2025-08-19T22:19:55.9837624Z <a id="db"></a>
2025-08-19T22:19:55.9837772Z 
2025-08-19T22:19:55.9837863Z # db
2025-08-19T22:19:55.9837989Z 
2025-08-19T22:19:55.9838109Z <a id="db.utils.views"></a>
2025-08-19T22:19:55.9838310Z 
2025-08-19T22:19:55.9838411Z # db.utils.views
2025-08-19T22:19:55.9838571Z 
2025-08-19T22:19:55.9838708Z <a id="db.utils.views.replace_view"></a>
2025-08-19T22:19:55.9838970Z 
2025-08-19T22:19:55.9839072Z #### replace\_view
2025-08-19T22:19:55.9839235Z 
2025-08-19T22:19:55.9839329Z ```python
2025-08-19T22:19:55.9839627Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T22:19:55.9840139Z ```
2025-08-19T22:19:55.9840269Z 
2025-08-19T22:19:55.9840407Z Drop and recreate a SQL view atomically.
2025-08-19T22:19:55.9840653Z 
2025-08-19T22:19:55.9840758Z <a id="db.utils"></a>
2025-08-19T22:19:55.9841170Z 
2025-08-19T22:19:55.9841261Z # db.utils
2025-08-19T22:19:55.9841393Z 
2025-08-19T22:19:55.9841509Z <a id="price_importer"></a>
2025-08-19T22:19:55.9841723Z 
2025-08-19T22:19:55.9841823Z # price\_importer
2025-08-19T22:19:55.9841982Z 
2025-08-19T22:19:55.9842155Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T22:19:55.9842443Z 
2025-08-19T22:19:55.9842581Z # price\_importer.services\_common.dsn
2025-08-19T22:19:55.9842835Z 
2025-08-19T22:19:55.9843027Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T22:19:55.9843327Z 
2025-08-19T22:19:55.9843424Z #### build\_dsn
2025-08-19T22:19:55.9843577Z 
2025-08-19T22:19:55.9843667Z ```python
2025-08-19T22:19:55.9843921Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:19:55.9844241Z ```
2025-08-19T22:19:55.9844360Z 
2025-08-19T22:19:55.9844459Z Return safe DSN.
2025-08-19T22:19:55.9844610Z 
2025-08-19T22:19:55.9845064Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T22:19:55.9845382Z 
2025-08-19T22:19:55.9845583Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T22:19:55.9845903Z 
2025-08-19T22:19:55.9846082Z # price\_importer.services\_common.models\_vendor
2025-08-19T22:19:55.9846381Z 
2025-08-19T22:19:55.9846546Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T22:19:55.9846843Z 
2025-08-19T22:19:55.9846991Z # price\_importer.services\_common.db\_url
2025-08-19T22:19:55.9847263Z 
2025-08-19T22:19:55.9847460Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T22:19:55.9847784Z 
2025-08-19T22:19:55.9847880Z #### build\_url
2025-08-19T22:19:55.9848026Z 
2025-08-19T22:19:55.9848122Z ```python
2025-08-19T22:19:55.9848373Z def build_url(async_: bool = True) -> str
2025-08-19T22:19:55.9848712Z ```
2025-08-19T22:19:55.9848830Z 
2025-08-19T22:19:55.9848969Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:19:55.9849231Z 
2025-08-19T22:19:55.9849387Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T22:19:55.9849858Z 
2025-08-19T22:19:55.9850162Z # price\_importer.services\_common.keepa
2025-08-19T22:19:55.9850433Z 
2025-08-19T22:19:55.9850584Z <a id="price_importer.services_common.llm"></a>
2025-08-19T22:19:55.9850865Z 
2025-08-19T22:19:55.9851007Z # price\_importer.services\_common.llm
2025-08-19T22:19:55.9851257Z 
2025-08-19T22:19:55.9851426Z <a id="price_importer.services_common.settings"></a>
2025-08-19T22:19:55.9851764Z 
2025-08-19T22:19:55.9851924Z # price\_importer.services\_common.settings
2025-08-19T22:19:55.9852219Z 
2025-08-19T22:19:55.9852386Z <a id="price_importer.services_common.db"></a>
2025-08-19T22:19:55.9852695Z 
2025-08-19T22:19:55.9852839Z # price\_importer.services\_common.db
2025-08-19T22:19:55.9853112Z 
2025-08-19T22:19:55.9853379Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T22:19:55.9853774Z 
2025-08-19T22:19:55.9853893Z #### build\_sqlalchemy\_url
2025-08-19T22:19:55.9854117Z 
2025-08-19T22:19:55.9854213Z ```python
2025-08-19T22:19:55.9854482Z def build_sqlalchemy_url() -> str
2025-08-19T22:19:55.9854807Z ```
2025-08-19T22:19:55.9854936Z 
2025-08-19T22:19:55.9855086Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:19:55.9855356Z 
2025-08-19T22:19:55.9855581Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T22:19:55.9855954Z 
2025-08-19T22:19:55.9856076Z #### build\_asyncpg\_dsn
2025-08-19T22:19:55.9856264Z 
2025-08-19T22:19:55.9856361Z ```python
2025-08-19T22:19:55.9856627Z def build_asyncpg_dsn() -> str
2025-08-19T22:19:55.9856945Z ```
2025-08-19T22:19:55.9857080Z 
2025-08-19T22:19:55.9857286Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:19:55.9857629Z 
2025-08-19T22:19:55.9857838Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T22:19:55.9858171Z 
2025-08-19T22:19:55.9858270Z #### refresh\_mvs
2025-08-19T22:19:55.9858443Z 
2025-08-19T22:19:55.9858540Z ```python
2025-08-19T22:19:55.9858838Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:19:55.9859237Z ```
2025-08-19T22:19:55.9859547Z 
2025-08-19T22:19:55.9859772Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:19:55.9860294Z 
2025-08-19T22:19:55.9860450Z <a id="price_importer.services_common"></a>
2025-08-19T22:19:55.9860728Z 
2025-08-19T22:19:55.9860869Z # price\_importer.services\_common
2025-08-19T22:19:55.9861121Z 
2025-08-19T22:19:55.9861290Z <a id="price_importer.services_common.base"></a>
2025-08-19T22:19:55.9861598Z 
2025-08-19T22:19:55.9861743Z # price\_importer.services\_common.base
2025-08-19T22:19:55.9862018Z 
2025-08-19T22:19:55.9862171Z <a id="price_importer.normaliser"></a>
2025-08-19T22:19:55.9862447Z 
2025-08-19T22:19:55.9862576Z # price\_importer.normaliser
2025-08-19T22:19:55.9862807Z 
2025-08-19T22:19:55.9862989Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T22:19:55.9863302Z 
2025-08-19T22:19:55.9863450Z # price\_importer.common.models\_vendor
2025-08-19T22:19:55.9863732Z 
2025-08-19T22:19:55.9863877Z <a id="price_importer.common.db_url"></a>
2025-08-19T22:19:55.9864159Z 
2025-08-19T22:19:55.9864307Z # price\_importer.common.db\_url
2025-08-19T22:19:55.9864547Z 
2025-08-19T22:19:55.9864710Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T22:19:55.9865019Z 
2025-08-19T22:19:55.9865126Z #### make\_dsn
2025-08-19T22:19:55.9865282Z 
2025-08-19T22:19:55.9865377Z ```python
2025-08-19T22:19:55.9865660Z def make_dsn(async_: bool = False) -> str
2025-08-19T22:19:55.9866026Z ```
2025-08-19T22:19:55.9866166Z 
2025-08-19T22:19:55.9866359Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T22:19:55.9866689Z 
2025-08-19T22:19:55.9866869Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T22:19:55.9867196Z 
2025-08-19T22:19:55.9867297Z #### build\_url
2025-08-19T22:19:55.9867470Z 
2025-08-19T22:19:55.9867572Z ```python
2025-08-19T22:19:55.9867853Z def build_url(async_: bool = False) -> str
2025-08-19T22:19:55.9868226Z ```
2025-08-19T22:19:55.9868358Z 
2025-08-19T22:19:55.9868550Z Return Postgres DSN built from environment variables.
2025-08-19T22:19:55.9869073Z 
2025-08-19T22:19:55.9869207Z <a id="price_importer.common"></a>
2025-08-19T22:19:55.9869456Z 
2025-08-19T22:19:55.9869586Z # price\_importer.common
2025-08-19T22:19:55.9869799Z 
2025-08-19T22:19:55.9869954Z <a id="price_importer.common.base"></a>
2025-08-19T22:19:55.9870386Z 
2025-08-19T22:19:55.9870521Z # price\_importer.common.base
2025-08-19T22:19:55.9870755Z 
2025-08-19T22:19:55.9870910Z <a id="price_importer.tests.conftest"></a>
2025-08-19T22:19:55.9871208Z 
2025-08-19T22:19:55.9871349Z # price\_importer.tests.conftest
2025-08-19T22:19:55.9871597Z 
2025-08-19T22:19:55.9871772Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T22:19:55.9872084Z 
2025-08-19T22:19:55.9872223Z # price\_importer.tests.test\_reader
2025-08-19T22:19:55.9872494Z 
2025-08-19T22:19:55.9872659Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T22:19:55.9873010Z 
2025-08-19T22:19:55.9873154Z # price\_importer.tests.test\_imports
2025-08-19T22:19:55.9873434Z 
2025-08-19T22:19:55.9873603Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T22:19:55.9873904Z 
2025-08-19T22:19:55.9874056Z # price\_importer.tests.test\_smoke
2025-08-19T22:19:55.9874319Z 
2025-08-19T22:19:55.9874492Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T22:19:55.9874804Z 
2025-08-19T22:19:55.9874952Z # price\_importer.tests.test\_normaliser
2025-08-19T22:19:55.9875236Z 
2025-08-19T22:19:55.9875373Z <a id="price_importer.tests"></a>
2025-08-19T22:19:55.9875635Z 
2025-08-19T22:19:55.9875760Z # price\_importer.tests
2025-08-19T22:19:55.9875965Z 
2025-08-19T22:19:55.9876117Z <a id="price_importer.reader"></a>
2025-08-19T22:19:55.9876382Z 
2025-08-19T22:19:55.9876512Z # price\_importer.reader
2025-08-19T22:19:55.9876737Z 
2025-08-19T22:19:55.9876889Z <a id="price_importer.repository"></a>
2025-08-19T22:19:55.9877172Z 
2025-08-19T22:19:55.9877307Z # price\_importer.repository
2025-08-19T22:19:55.9877524Z 
2025-08-19T22:19:55.9877645Z <a id="price_importer.import"></a>
2025-08-19T22:19:55.9877882Z 
2025-08-19T22:19:55.9877995Z # price\_importer.import
2025-08-19T22:19:55.9878358Z 
2025-08-19T22:19:55.9878455Z <a id="fees_h10"></a>
2025-08-19T22:19:55.9878630Z 
2025-08-19T22:19:55.9878719Z # fees\_h10
2025-08-19T22:19:55.9878849Z 
2025-08-19T22:19:55.9878953Z <a id="fees_h10.worker"></a>
2025-08-19T22:19:55.9879159Z 
2025-08-19T22:19:55.9879266Z # fees\_h10.worker
2025-08-19T22:19:55.9879442Z 
2025-08-19T22:19:55.9879610Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T22:19:55.9879916Z 
2025-08-19T22:19:55.9880171Z #### list\_active\_asins
2025-08-19T22:19:55.9880384Z 
2025-08-19T22:19:55.9880485Z ```python
2025-08-19T22:19:55.9880765Z def list_active_asins() -> list[str]
2025-08-19T22:19:55.9881135Z ```
2025-08-19T22:19:55.9881267Z 
2025-08-19T22:19:55.9881450Z Return known ASINs or an empty list if unavailable.
2025-08-19T22:19:55.9881771Z 
2025-08-19T22:19:55.9881906Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T22:19:55.9882171Z 
2025-08-19T22:19:55.9882305Z # fees\_h10.tests.test\_smoke
2025-08-19T22:19:55.9882533Z 
2025-08-19T22:19:55.9882657Z <a id="fees_h10.tests"></a>
2025-08-19T22:19:55.9882874Z 
2025-08-19T22:19:55.9882974Z # fees\_h10.tests
2025-08-19T22:19:55.9883144Z 
2025-08-19T22:19:55.9883262Z <a id="fees_h10.client"></a>
2025-08-19T22:19:55.9883486Z 
2025-08-19T22:19:55.9883591Z # fees\_h10.client
2025-08-19T22:19:55.9883759Z 
2025-08-19T22:19:55.9883891Z <a id="fees_h10.repository"></a>
2025-08-19T22:19:55.9884126Z 
2025-08-19T22:19:55.9884238Z # fees\_h10.repository
2025-08-19T22:19:55.9884431Z 
2025-08-19T22:19:55.9884590Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T22:19:55.9884883Z 
2025-08-19T22:19:55.9885000Z #### upsert\_fees\_raw
2025-08-19T22:19:55.9885193Z 
2025-08-19T22:19:55.9885293Z ```python
2025-08-19T22:19:55.9885560Z def upsert_fees_raw(engine: Engine,
2025-08-19T22:19:55.9885924Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T22:19:55.9886331Z                     *,
2025-08-19T22:19:55.9886699Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T22:19:55.9887317Z ```
2025-08-19T22:19:55.9887456Z 
2025-08-19T22:19:55.9887582Z Idempotent upsert for fees.
2025-08-19T22:19:55.9887815Z 
2025-08-19T22:19:55.9888068Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T22:19:55.9888649Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T22:19:55.9889157Z Only updates when one of the mutable fields changes.
2025-08-19T22:19:55.9889486Z 
2025-08-19T22:19:55.9889602Z <a id="emailer"></a>
2025-08-19T22:19:55.9889785Z 
2025-08-19T22:19:55.9889881Z # emailer
2025-08-19T22:19:55.9890185Z 
2025-08-19T22:19:55.9890350Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T22:19:55.9890644Z 
2025-08-19T22:19:55.9890783Z # emailer.tests.test\_import\_emailer
2025-08-19T22:19:55.9891046Z 
2025-08-19T22:19:55.9891172Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T22:19:55.9891406Z 
2025-08-19T22:19:55.9891536Z # emailer.tests.test\_smoke
2025-08-19T22:19:55.9891735Z 
2025-08-19T22:19:55.9891849Z <a id="emailer.tests"></a>
2025-08-19T22:19:55.9892047Z 
2025-08-19T22:19:55.9892140Z # emailer.tests
2025-08-19T22:19:55.9892286Z 
2025-08-19T22:19:55.9892403Z <a id="emailer.generate_body"></a>
2025-08-19T22:19:55.9892624Z 
2025-08-19T22:19:55.9892728Z # emailer.generate\_body
2025-08-19T22:19:55.9892906Z 
2025-08-19T22:19:55.9893010Z <a id="llm_server"></a>
2025-08-19T22:19:55.9893174Z 
2025-08-19T22:19:55.9893264Z # llm\_server
2025-08-19T22:19:55.9893407Z 
2025-08-19T22:19:55.9893514Z <a id="llm_server.app"></a>
2025-08-19T22:19:55.9893700Z 
2025-08-19T22:19:55.9893794Z # llm\_server.app
2025-08-19T22:19:55.9893951Z 
