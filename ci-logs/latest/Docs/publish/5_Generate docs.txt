2025-08-17T13:19:31.1675413Z ##[group]Run pydoc-markdown
2025-08-17T13:19:31.1675732Z [36;1mpydoc-markdown[0m
2025-08-17T13:19:31.1715690Z shell: /usr/bin/bash -e {0}
2025-08-17T13:19:31.1715912Z env:
2025-08-17T13:19:31.1716141Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:19:31.1716551Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T13:19:31.1716940Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:19:31.1717276Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:19:31.1717620Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T13:19:31.1717953Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T13:19:31.1718234Z ##[endgroup]
2025-08-17T13:19:31.5735622Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T13:19:31.5736084Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T13:19:31.5736366Z In "pydoc-markdown.yml"
2025-08-17T13:19:31.5736623Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T13:19:31.5737314Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T13:19:31.5738023Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T13:19:31.5738535Z 
2025-08-17T13:19:31.7851043Z <a id="__init__"></a>
2025-08-17T13:19:31.7851413Z 
2025-08-17T13:19:31.7851563Z # \_\_init\_\_
2025-08-17T13:19:31.7851779Z 
2025-08-17T13:19:31.7851918Z <a id="api"></a>
2025-08-17T13:19:31.7852141Z 
2025-08-17T13:19:31.7852266Z # api
2025-08-17T13:19:31.7852445Z 
2025-08-17T13:19:31.7852615Z <a id="api.tests.test_llm"></a>
2025-08-17T13:19:31.7852925Z 
2025-08-17T13:19:31.7853081Z # api.tests.test\_llm
2025-08-17T13:19:31.7853320Z 
2025-08-17T13:19:31.7853506Z <a id="api.tests.test_imports"></a>
2025-08-17T13:19:31.7853826Z 
2025-08-17T13:19:31.7853981Z # api.tests.test\_imports
2025-08-17T13:19:31.7854278Z 
2025-08-17T13:19:31.7854476Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T13:19:31.7854809Z 
2025-08-17T13:19:31.7854972Z # api.tests.test\_entrypoint
2025-08-17T13:19:31.7855561Z 
2025-08-17T13:19:31.7855742Z <a id="api.tests.test_health"></a>
2025-08-17T13:19:31.7856053Z 
2025-08-17T13:19:31.7856217Z # api.tests.test\_health
2025-08-17T13:19:31.7856470Z 
2025-08-17T13:19:31.7856633Z <a id="api.migrations.env"></a>
2025-08-17T13:19:31.7856926Z 
2025-08-17T13:19:31.7857074Z # api.migrations.env
2025-08-17T13:19:31.7857307Z 
2025-08-17T13:19:31.7857546Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T13:19:31.7857963Z 
2025-08-17T13:19:31.7858175Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T13:19:31.7858545Z 
2025-08-17T13:19:31.7858892Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T13:19:31.7859285Z 
2025-08-17T13:19:31.7859428Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T13:19:31.7859656Z 
2025-08-17T13:19:31.7859862Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T13:19:31.7860170Z 
2025-08-17T13:19:31.7860340Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T13:19:31.7860979Z 
2025-08-17T13:19:31.7861141Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T13:19:31.7861422Z 
2025-08-17T13:19:31.7861572Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T13:19:31.7861775Z 
2025-08-17T13:19:31.7861903Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T13:19:31.7862127Z 
2025-08-17T13:19:31.7862238Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T13:19:31.7862437Z 
2025-08-17T13:19:31.7862577Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T13:19:31.7862803Z 
2025-08-17T13:19:31.7862921Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T13:19:31.7863136Z 
2025-08-17T13:19:31.7863280Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T13:19:31.7863510Z 
2025-08-17T13:19:31.7863627Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T13:19:31.7863840Z 
2025-08-17T13:19:31.7863974Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T13:19:31.7864420Z 
2025-08-17T13:19:31.7864539Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T13:19:31.7864741Z 
2025-08-17T13:19:31.7864873Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T13:19:31.7865308Z 
2025-08-17T13:19:31.7865486Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T13:19:31.7865696Z 
2025-08-17T13:19:31.7865813Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T13:19:31.7866029Z 
2025-08-17T13:19:31.7866128Z # api.migrations.versions.0001\_baseline
2025-08-17T13:19:31.7866316Z 
2025-08-17T13:19:31.7866420Z <a id="api.migrations.versions"></a>
2025-08-17T13:19:31.7866596Z 
2025-08-17T13:19:31.7866687Z # api.migrations.versions
2025-08-17T13:19:31.7866840Z 
2025-08-17T13:19:31.7866927Z <a id="api.migrations"></a>
2025-08-17T13:19:31.7867078Z 
2025-08-17T13:19:31.7867152Z # api.migrations
2025-08-17T13:19:31.7867275Z 
2025-08-17T13:19:31.7867349Z <a id="api.db"></a>
2025-08-17T13:19:31.7867467Z 
2025-08-17T13:19:31.7867553Z # api.db
2025-08-17T13:19:31.7867650Z 
2025-08-17T13:19:31.7867738Z <a id="api.routes.stats"></a>
2025-08-17T13:19:31.7867892Z 
2025-08-17T13:19:31.7867978Z # api.routes.stats
2025-08-17T13:19:31.7868095Z 
2025-08-17T13:19:31.7868188Z <a id="api.routes.stats.kpi"></a>
2025-08-17T13:19:31.7868367Z 
2025-08-17T13:19:31.7868437Z #### kpi
2025-08-17T13:19:31.7868532Z 
2025-08-17T13:19:31.7868610Z ```python
2025-08-17T13:19:31.7868796Z @router.get("/stats/kpi")
2025-08-17T13:19:31.7869067Z def kpi() -> List[Dict[str, int]]
2025-08-17T13:19:31.7869296Z ```
2025-08-17T13:19:31.7869387Z 
2025-08-17T13:19:31.7869484Z Return KPI metrics (mock).
2025-08-17T13:19:31.7869635Z 
2025-08-17T13:19:31.7869746Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T13:19:31.7869952Z 
2025-08-17T13:19:31.7870027Z #### roi\_by\_vendor
2025-08-17T13:19:31.7870150Z 
2025-08-17T13:19:31.7870225Z ```python
2025-08-17T13:19:31.7870415Z @router.get("/stats/roi_by_vendor")
2025-08-17T13:19:31.7870693Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T13:19:31.7870950Z ```
2025-08-17T13:19:31.7871037Z 
2025-08-17T13:19:31.7871130Z Return ROI percent by vendor.
2025-08-17T13:19:31.7871282Z 
2025-08-17T13:19:31.7871381Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T13:19:31.7871572Z 
2025-08-17T13:19:31.7871642Z #### roi\_trend
2025-08-17T13:19:31.7871752Z 
2025-08-17T13:19:31.7871825Z ```python
2025-08-17T13:19:31.7872008Z @router.get("/stats/roi_trend")
2025-08-17T13:19:31.7872268Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T13:19:31.7872504Z ```
2025-08-17T13:19:31.7872581Z 
2025-08-17T13:19:31.7872661Z Return 30-day ROI trend.
2025-08-17T13:19:31.7872785Z 
2025-08-17T13:19:31.7872861Z <a id="api.routes.roi"></a>
2025-08-17T13:19:31.7872998Z 
2025-08-17T13:19:31.7873064Z # api.routes.roi
2025-08-17T13:19:31.7873186Z 
2025-08-17T13:19:31.7873274Z <a id="api.routes.health"></a>
2025-08-17T13:19:31.7873516Z 
2025-08-17T13:19:31.7873585Z # api.routes.health
2025-08-17T13:19:31.7873698Z 
2025-08-17T13:19:31.7873790Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T13:19:31.7874119Z 
2025-08-17T13:19:31.7874188Z #### MAX\_SKEW
2025-08-17T13:19:31.7874284Z 
2025-08-17T13:19:31.7874344Z seconds
2025-08-17T13:19:31.7874426Z 
2025-08-17T13:19:31.7874520Z <a id="api.routes.health.health"></a>
2025-08-17T13:19:31.7874679Z 
2025-08-17T13:19:31.7874740Z #### health
2025-08-17T13:19:31.7874831Z 
2025-08-17T13:19:31.7874892Z ```python
2025-08-17T13:19:31.7875078Z @router.get("/health", include_in_schema=False)
2025-08-17T13:19:31.7875611Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T13:19:31.7875963Z ```
2025-08-17T13:19:31.7876041Z 
2025-08-17T13:19:31.7876154Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T13:19:31.7876350Z 
2025-08-17T13:19:31.7876444Z <a id="api.routes.repository"></a>
2025-08-17T13:19:31.7876596Z 
2025-08-17T13:19:31.7876674Z # api.routes.repository
2025-08-17T13:19:31.7876801Z 
2025-08-17T13:19:31.7876871Z <a id="api.routes"></a>
2025-08-17T13:19:31.7877148Z 
2025-08-17T13:19:31.7877218Z # api.routes
2025-08-17T13:19:31.7877314Z 
2025-08-17T13:19:31.7877390Z <a id="api.models.fee"></a>
2025-08-17T13:19:31.7877519Z 
2025-08-17T13:19:31.7877592Z # api.models.fee
2025-08-17T13:19:31.7877704Z 
2025-08-17T13:19:31.7877775Z <a id="api.models"></a>
2025-08-17T13:19:31.7877899Z 
2025-08-17T13:19:31.7877963Z # api.models
2025-08-17T13:19:31.7878056Z 
2025-08-17T13:19:31.7878134Z <a id="api.roi_repository"></a>
2025-08-17T13:19:31.7878284Z 
2025-08-17T13:19:31.7878354Z # api.roi\_repository
2025-08-17T13:19:31.7878468Z 
2025-08-17T13:19:31.7878541Z <a id="api.main"></a>
2025-08-17T13:19:31.7878650Z 
2025-08-17T13:19:31.7878711Z # api.main
2025-08-17T13:19:31.7878808Z 
2025-08-17T13:19:31.7878883Z <a id="api.main.ready"></a>
2025-08-17T13:19:31.7879013Z 
2025-08-17T13:19:31.7879074Z #### ready
2025-08-17T13:19:31.7879173Z 
2025-08-17T13:19:31.7879234Z ```python
2025-08-17T13:19:31.7879497Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T13:19:31.7879931Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T13:19:31.7880282Z                                                                       str]
2025-08-17T13:19:31.7880504Z ```
2025-08-17T13:19:31.7880588Z 
2025-08-17T13:19:31.7880682Z Return 200 only when migrations are at head.
2025-08-17T13:19:31.7880857Z 
2025-08-17T13:19:31.7880928Z <a id="api.config"></a>
2025-08-17T13:19:31.7881054Z 
2025-08-17T13:19:31.7881119Z # api.config
2025-08-17T13:19:31.7881209Z 
2025-08-17T13:19:31.7881276Z <a id="etl"></a>
2025-08-17T13:19:31.7881374Z 
2025-08-17T13:19:31.7881433Z # etl
2025-08-17T13:19:31.7881518Z 
2025-08-17T13:19:31.7881604Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T13:19:31.7881751Z 
2025-08-17T13:19:31.7881822Z # etl.fba\_fee\_ingestor
2025-08-17T13:19:31.7881950Z 
2025-08-17T13:19:31.7882026Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T13:19:31.7882167Z 
2025-08-17T13:19:31.7882245Z # etl.sp\_fees\_ingestor
2025-08-17T13:19:31.7882372Z 
2025-08-17T13:19:31.7882451Z <a id="etl.keepa_ingestor"></a>
2025-08-17T13:19:31.7882586Z 
2025-08-17T13:19:31.7882659Z # etl.keepa\_ingestor
2025-08-17T13:19:31.7882769Z 
2025-08-17T13:19:31.7882832Z <a id="etl.db"></a>
2025-08-17T13:19:31.7882941Z 
2025-08-17T13:19:31.7883007Z # etl.db
2025-08-17T13:19:31.7883107Z 
2025-08-17T13:19:31.7883212Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T13:19:31.7883400Z 
2025-08-17T13:19:31.7883526Z # etl.dialects.amazon\_reimbursements
2025-08-17T13:19:31.7883689Z 
2025-08-17T13:19:31.7883783Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T13:19:31.7883949Z 
2025-08-17T13:19:31.7884028Z # etl.dialects.amazon\_returns
2025-08-17T13:19:31.7884172Z 
2025-08-17T13:19:31.7884244Z <a id="etl.dialects"></a>
2025-08-17T13:19:31.7884367Z 
2025-08-17T13:19:31.7884432Z # etl.dialects
2025-08-17T13:19:31.7884534Z 
2025-08-17T13:19:31.7884597Z <a id="ingest"></a>
2025-08-17T13:19:31.7884699Z 
2025-08-17T13:19:31.7884765Z # ingest
2025-08-17T13:19:31.7884855Z 
2025-08-17T13:19:31.7885064Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T13:19:31.7885343Z 
2025-08-17T13:19:31.7885420Z # ingest.tests.test\_smoke
2025-08-17T13:19:31.7885547Z 
2025-08-17T13:19:31.7885618Z <a id="ingest.tests"></a>
2025-08-17T13:19:31.7885746Z 
2025-08-17T13:19:31.7885807Z # ingest.tests
2025-08-17T13:19:31.7885903Z 
2025-08-17T13:19:31.7885990Z <a id="ingest.upload_router"></a>
2025-08-17T13:19:31.7886137Z 
2025-08-17T13:19:31.7886209Z # ingest.upload\_router
2025-08-17T13:19:31.7886331Z 
2025-08-17T13:19:31.7886410Z <a id="ingest.email_watcher"></a>
2025-08-17T13:19:31.7886552Z 
2025-08-17T13:19:31.7886622Z # ingest.email\_watcher
2025-08-17T13:19:31.7886740Z 
2025-08-17T13:19:31.7886824Z <a id="ingest.email_watcher.main"></a>
2025-08-17T13:19:31.7886983Z 
2025-08-17T13:19:31.7887048Z #### main
2025-08-17T13:19:31.7887133Z 
2025-08-17T13:19:31.7887193Z ```python
2025-08-17T13:19:31.7887360Z def main() -> dict[str, str]
2025-08-17T13:19:31.7887549Z ```
2025-08-17T13:19:31.7887634Z 
2025-08-17T13:19:31.7887902Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T13:19:31.7888126Z 
2025-08-17T13:19:31.7888252Z Returns {"status": "success"} when processing completes.
2025-08-17T13:19:31.7888470Z 
2025-08-17T13:19:31.7888549Z <a id="ingest.ingest_router"></a>
2025-08-17T13:19:31.7888695Z 
2025-08-17T13:19:31.7888773Z # ingest.ingest\_router
2025-08-17T13:19:31.7888890Z 
2025-08-17T13:19:31.7888962Z <a id="logistics_etl"></a>
2025-08-17T13:19:31.7889093Z 
2025-08-17T13:19:31.7889160Z # logistics\_etl
2025-08-17T13:19:31.7889262Z 
2025-08-17T13:19:31.7889335Z Daily logistics ETL job.
2025-08-17T13:19:31.7889461Z 
2025-08-17T13:19:31.7889538Z <a id="logistics_etl.__main__"></a>
2025-08-17T13:19:31.7889687Z 
2025-08-17T13:19:31.7889766Z # logistics\_etl.\_\_main\_\_
2025-08-17T13:19:31.7889900Z 
2025-08-17T13:19:31.7889976Z <a id="logistics_etl.dsn"></a>
2025-08-17T13:19:31.7890111Z 
2025-08-17T13:19:31.7890185Z # logistics\_etl.dsn
2025-08-17T13:19:31.7890294Z 
2025-08-17T13:19:31.7890416Z Local DSN builder to avoid cross-service dependency.
2025-08-17T13:19:31.7890621Z 
2025-08-17T13:19:31.7890708Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T13:19:31.7890871Z 
2025-08-17T13:19:31.7890939Z #### build\_dsn
2025-08-17T13:19:31.7891040Z 
2025-08-17T13:19:31.7891101Z ```python
2025-08-17T13:19:31.7891274Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:19:31.7891488Z ```
2025-08-17T13:19:31.7891574Z 
2025-08-17T13:19:31.7891727Z Return a Postgres DSN assembled from environment variables.
2025-08-17T13:19:31.7891959Z 
2025-08-17T13:19:31.7892123Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T13:19:31.7892521Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T13:19:31.7892871Z error when any required variable is missing.
2025-08-17T13:19:31.7893044Z 
2025-08-17T13:19:31.7893140Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T13:19:31.7893318Z 
2025-08-17T13:19:31.7893403Z # logistics\_etl.tests.conftest
2025-08-17T13:19:31.7893555Z 
2025-08-17T13:19:31.7893659Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T13:19:31.7893853Z 
2025-08-17T13:19:31.7893943Z # logistics\_etl.tests.test\_repository
2025-08-17T13:19:31.7894106Z 
2025-08-17T13:19:31.7894204Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T13:19:31.7894374Z 
2025-08-17T13:19:31.7894456Z # logistics\_etl.tests.test\_cron
2025-08-17T13:19:31.7894612Z 
2025-08-17T13:19:31.7894706Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T13:19:31.7894885Z 
2025-08-17T13:19:31.7894969Z # logistics\_etl.tests.test\_imports
2025-08-17T13:19:31.7895359Z 
2025-08-17T13:19:31.7895538Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T13:19:31.7895761Z 
2025-08-17T13:19:31.7895851Z # logistics\_etl.tests.test\_smoke
2025-08-17T13:19:31.7896001Z 
2025-08-17T13:19:31.7896096Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T13:19:31.7896271Z 
2025-08-17T13:19:31.7896354Z # logistics\_etl.tests.test\_client
2025-08-17T13:19:31.7896510Z 
2025-08-17T13:19:31.7896733Z <a id="logistics_etl.tests"></a>
2025-08-17T13:19:31.7896887Z 
2025-08-17T13:19:31.7896957Z # logistics\_etl.tests
2025-08-17T13:19:31.7897080Z 
2025-08-17T13:19:31.7897163Z <a id="logistics_etl.flow"></a>
2025-08-17T13:19:31.7897301Z 
2025-08-17T13:19:31.7897370Z # logistics\_etl.flow
2025-08-17T13:19:31.7897491Z 
2025-08-17T13:19:31.7897572Z <a id="logistics_etl.client"></a>
2025-08-17T13:19:31.7897721Z 
2025-08-17T13:19:31.7897799Z # logistics\_etl.client
2025-08-17T13:19:31.7897924Z 
2025-08-17T13:19:31.7898000Z <a id="logistics_etl.cron"></a>
2025-08-17T13:19:31.7898135Z 
2025-08-17T13:19:31.7898209Z # logistics\_etl.cron
2025-08-17T13:19:31.7898319Z 
2025-08-17T13:19:31.7898397Z <a id="logistics_etl.db"></a>
2025-08-17T13:19:31.7898539Z 
2025-08-17T13:19:31.7898605Z # logistics\_etl.db
2025-08-17T13:19:31.7898711Z 
2025-08-17T13:19:31.7898798Z <a id="logistics_etl.repository"></a>
2025-08-17T13:19:31.7898961Z 
2025-08-17T13:19:31.7899039Z # logistics\_etl.repository
2025-08-17T13:19:31.7899289Z 
2025-08-17T13:19:31.7899364Z <a id="alert_bot"></a>
2025-08-17T13:19:31.7899477Z 
2025-08-17T13:19:31.7899539Z # alert\_bot
2025-08-17T13:19:31.7899632Z 
2025-08-17T13:19:31.7899728Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T13:19:31.7899887Z 
2025-08-17T13:19:31.7899965Z # alert\_bot.tests.test\_smoke
2025-08-17T13:19:31.7900111Z 
2025-08-17T13:19:31.7900187Z <a id="alert_bot.tests"></a>
2025-08-17T13:19:31.7900319Z 
2025-08-17T13:19:31.7900391Z # alert\_bot.tests
2025-08-17T13:19:31.7900496Z 
2025-08-17T13:19:31.7900576Z <a id="alert_bot.alert_bot"></a>
2025-08-17T13:19:31.7900717Z 
2025-08-17T13:19:31.7900796Z # alert\_bot.alert\_bot
2025-08-17T13:19:31.7900916Z 
2025-08-17T13:19:31.7900989Z <a id="alert_bot.rules"></a>
2025-08-17T13:19:31.7901126Z 
2025-08-17T13:19:31.7901190Z # alert\_bot.rules
2025-08-17T13:19:31.7901293Z 
2025-08-17T13:19:31.7901357Z <a id="common"></a>
2025-08-17T13:19:31.7901463Z 
2025-08-17T13:19:31.7901523Z # common
2025-08-17T13:19:31.7901610Z 
2025-08-17T13:19:31.7901694Z <a id="common.dsn"></a>
2025-08-17T13:19:31.7901810Z 
2025-08-17T13:19:31.7901871Z # common.dsn
2025-08-17T13:19:31.7901968Z 
2025-08-17T13:19:31.7902050Z <a id="common.dsn.build_dsn"></a>
2025-08-17T13:19:31.7902193Z 
2025-08-17T13:19:31.7902255Z #### build\_dsn
2025-08-17T13:19:31.7902358Z 
2025-08-17T13:19:31.7902421Z ```python
2025-08-17T13:19:31.7902595Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:19:31.7902829Z ```
2025-08-17T13:19:31.7902910Z 
2025-08-17T13:19:31.7903029Z Return a Postgres DSN, validating required variables.
2025-08-17T13:19:31.7903253Z 
2025-08-17T13:19:31.7903440Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T13:19:31.7903881Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T13:19:31.7904296Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T13:19:31.7904611Z missing.
2025-08-17T13:19:31.7904698Z 
2025-08-17T13:19:31.7904778Z <a id="common.models_vendor"></a>
2025-08-17T13:19:31.7904934Z 
2025-08-17T13:19:31.7905009Z # common.models\_vendor
2025-08-17T13:19:31.7905251Z 
2025-08-17T13:19:31.7905342Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T13:19:31.7905516Z 
2025-08-17T13:19:31.7905578Z ## Vendor Objects
2025-08-17T13:19:31.7905680Z 
2025-08-17T13:19:31.7905746Z ```python
2025-08-17T13:19:31.7905894Z class Vendor(Base)
2025-08-17T13:19:31.7906056Z ```
2025-08-17T13:19:31.7906134Z 
2025-08-17T13:19:31.7906210Z Vendor of inventory items.
2025-08-17T13:19:31.7906342Z 
2025-08-17T13:19:31.7906450Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T13:19:31.7906628Z 
2025-08-17T13:19:31.7906702Z ## VendorPrice Objects
2025-08-17T13:19:31.7906824Z 
2025-08-17T13:19:31.7906884Z ```python
2025-08-17T13:19:31.7907035Z class VendorPrice(Base)
2025-08-17T13:19:31.7907214Z ```
2025-08-17T13:19:31.7907292Z 
2025-08-17T13:19:31.7907400Z Association table linking vendors to pricing.
2025-08-17T13:19:31.7907581Z 
2025-08-17T13:19:31.7907657Z <a id="common.db_url"></a>
2025-08-17T13:19:31.7907911Z 
2025-08-17T13:19:31.7907976Z # common.db\_url
2025-08-17T13:19:31.7908079Z 
2025-08-17T13:19:31.7908158Z <a id="common.db_url.build_url"></a>
2025-08-17T13:19:31.7908319Z 
2025-08-17T13:19:31.7908379Z #### build\_url
2025-08-17T13:19:31.7908480Z 
2025-08-17T13:19:31.7908549Z ```python
2025-08-17T13:19:31.7908717Z def build_url(async_: bool = True) -> str
2025-08-17T13:19:31.7908945Z ```
2025-08-17T13:19:31.7909023Z 
2025-08-17T13:19:31.7909120Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:19:31.7909301Z 
2025-08-17T13:19:31.7909376Z <a id="common.keepa"></a>
2025-08-17T13:19:31.7909502Z 
2025-08-17T13:19:31.7909568Z # common.keepa
2025-08-17T13:19:31.7909674Z 
2025-08-17T13:19:31.7909743Z <a id="common.llm"></a>
2025-08-17T13:19:31.7909859Z 
2025-08-17T13:19:31.7909926Z # common.llm
2025-08-17T13:19:31.7910017Z 
2025-08-17T13:19:31.7910093Z <a id="common.settings"></a>
2025-08-17T13:19:31.7910227Z 
2025-08-17T13:19:31.7910298Z # common.settings
2025-08-17T13:19:31.7910522Z 
2025-08-17T13:19:31.7910591Z <a id="common.db"></a>
2025-08-17T13:19:31.7910715Z 
2025-08-17T13:19:31.7910776Z # common.db
2025-08-17T13:19:31.7910865Z 
2025-08-17T13:19:31.7910960Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T13:19:31.7911131Z 
2025-08-17T13:19:31.7911209Z #### build\_sqlalchemy\_url
2025-08-17T13:19:31.7911339Z 
2025-08-17T13:19:31.7911407Z ```python
2025-08-17T13:19:31.7911580Z def build_sqlalchemy_url() -> str
2025-08-17T13:19:31.7911788Z ```
2025-08-17T13:19:31.7911868Z 
2025-08-17T13:19:31.7911958Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:19:31.7912136Z 
2025-08-17T13:19:31.7912223Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T13:19:31.7912387Z 
2025-08-17T13:19:31.7912463Z #### build\_asyncpg\_dsn
2025-08-17T13:19:31.7912585Z 
2025-08-17T13:19:31.7912645Z ```python
2025-08-17T13:19:31.7912817Z def build_asyncpg_dsn() -> str
2025-08-17T13:19:31.7913009Z ```
2025-08-17T13:19:31.7913093Z 
2025-08-17T13:19:31.7913224Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:19:31.7913441Z 
2025-08-17T13:19:31.7913524Z <a id="common.db.refresh_mvs"></a>
2025-08-17T13:19:31.7913682Z 
2025-08-17T13:19:31.7913743Z #### refresh\_mvs
2025-08-17T13:19:31.7913843Z 
2025-08-17T13:19:31.7913906Z ```python
2025-08-17T13:19:31.7914090Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:19:31.7914338Z ```
2025-08-17T13:19:31.7914415Z 
2025-08-17T13:19:31.7914548Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:19:31.7914775Z 
2025-08-17T13:19:31.7914848Z <a id="common.config"></a>
2025-08-17T13:19:31.7914977Z 
2025-08-17T13:19:31.7915048Z # common.config
2025-08-17T13:19:31.7915264Z 
2025-08-17T13:19:31.7915339Z <a id="common.base"></a>
2025-08-17T13:19:31.7915465Z 
2025-08-17T13:19:31.7915532Z # common.base
2025-08-17T13:19:31.7915626Z 
2025-08-17T13:19:31.7915702Z <a id="common.base.Base"></a>
2025-08-17T13:19:31.7915842Z 
2025-08-17T13:19:31.7915907Z ## Base Objects
2025-08-17T13:19:31.7916011Z 
2025-08-17T13:19:31.7916071Z ```python
2025-08-17T13:19:31.7916232Z class Base(DeclarativeBase)
2025-08-17T13:19:31.7916439Z ```
2025-08-17T13:19:31.7916521Z 
2025-08-17T13:19:31.7916602Z Base class for SQLAlchemy models.
2025-08-17T13:19:31.7916758Z 
2025-08-17T13:19:31.7916832Z <a id="repricer"></a>
2025-08-17T13:19:31.7916945Z 
2025-08-17T13:19:31.7917015Z # repricer
2025-08-17T13:19:31.7917106Z 
2025-08-17T13:19:31.7917189Z <a id="repricer.app.schemas"></a>
2025-08-17T13:19:31.7917337Z 
2025-08-17T13:19:31.7917416Z # repricer.app.schemas
2025-08-17T13:19:31.7917535Z 
2025-08-17T13:19:31.7917615Z <a id="repricer.app.deps"></a>
2025-08-17T13:19:31.7917762Z 
2025-08-17T13:19:31.7917831Z # repricer.app.deps
2025-08-17T13:19:31.7917941Z 
2025-08-17T13:19:31.7918057Z Placeholder module for Keepa / SP-API clients.
2025-08-17T13:19:31.7918243Z 
2025-08-17T13:19:31.7918324Z <a id="repricer.app.logic"></a>
2025-08-17T13:19:31.7918466Z 
2025-08-17T13:19:31.7918543Z # repricer.app.logic
2025-08-17T13:19:31.7918799Z 
2025-08-17T13:19:31.7918898Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T13:19:31.7919078Z 
2025-08-17T13:19:31.7919140Z #### MIN\_MARGIN
2025-08-17T13:19:31.7919239Z 
2025-08-17T13:19:31.7919304Z 15 % ROI
2025-08-17T13:19:31.7919387Z 
2025-08-17T13:19:31.7919487Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T13:19:31.7919670Z 
2025-08-17T13:19:31.7924558Z #### compute\_price
2025-08-17T13:19:31.7924775Z 
2025-08-17T13:19:31.7924884Z ```python
2025-08-17T13:19:31.7925464Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T13:19:31.7925985Z ```
2025-08-17T13:19:31.7926134Z 
2025-08-17T13:19:31.7926325Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T13:19:31.7926797Z Replace with real competitive logic later.
2025-08-17T13:19:31.7927086Z 
2025-08-17T13:19:31.7927222Z <a id="repricer.app.main"></a>
2025-08-17T13:19:31.7927465Z 
2025-08-17T13:19:31.7927581Z # repricer.app.main
2025-08-17T13:19:31.7927765Z 
2025-08-17T13:19:31.7928108Z <a id="repricer.app"></a>
2025-08-17T13:19:31.7928350Z 
2025-08-17T13:19:31.7928461Z # repricer.app
2025-08-17T13:19:31.7928626Z 
2025-08-17T13:19:31.7928783Z <a id="repricer.tests.test_imports"></a>
2025-08-17T13:19:31.7929065Z 
2025-08-17T13:19:31.7929199Z # repricer.tests.test\_imports
2025-08-17T13:19:31.7929436Z 
2025-08-17T13:19:31.7929579Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T13:19:31.7929846Z 
2025-08-17T13:19:31.7929977Z # repricer.tests.test\_smoke
2025-08-17T13:19:31.7930215Z 
2025-08-17T13:19:31.7930342Z <a id="repricer.tests"></a>
2025-08-17T13:19:31.7930560Z 
2025-08-17T13:19:31.7930682Z # repricer.tests
2025-08-17T13:19:31.7930852Z 
2025-08-17T13:19:31.7930957Z <a id="db"></a>
2025-08-17T13:19:31.7931118Z 
2025-08-17T13:19:31.7931277Z # db
2025-08-17T13:19:31.7931364Z 
2025-08-17T13:19:31.7931439Z <a id="db.utils.views"></a>
2025-08-17T13:19:31.7931577Z 
2025-08-17T13:19:31.7931648Z # db.utils.views
2025-08-17T13:19:31.7931747Z 
2025-08-17T13:19:31.7931844Z <a id="db.utils.views.replace_view"></a>
2025-08-17T13:19:31.7932027Z 
2025-08-17T13:19:31.7932093Z #### replace\_view
2025-08-17T13:19:31.7932200Z 
2025-08-17T13:19:31.7932270Z ```python
2025-08-17T13:19:31.7932461Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T13:19:31.7932712Z ```
2025-08-17T13:19:31.7932794Z 
2025-08-17T13:19:31.7932881Z Drop and recreate a SQL view atomically.
2025-08-17T13:19:31.7933072Z 
2025-08-17T13:19:31.7933140Z <a id="db.utils"></a>
2025-08-17T13:19:31.7933253Z 
2025-08-17T13:19:31.7933319Z # db.utils
2025-08-17T13:19:31.7933407Z 
2025-08-17T13:19:31.7933485Z <a id="price_importer"></a>
2025-08-17T13:19:31.7933619Z 
2025-08-17T13:19:31.7933685Z # price\_importer
2025-08-17T13:19:31.7933790Z 
2025-08-17T13:19:31.7933892Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T13:19:31.7934083Z 
2025-08-17T13:19:31.7934173Z # price\_importer.services\_common.dsn
2025-08-17T13:19:31.7934341Z 
2025-08-17T13:19:31.7934476Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T13:19:31.7934696Z 
2025-08-17T13:19:31.7934761Z #### build\_dsn
2025-08-17T13:19:31.7934858Z 
2025-08-17T13:19:31.7934925Z ```python
2025-08-17T13:19:31.7935092Z def build_dsn(sync: bool = True) -> str
2025-08-17T13:19:31.7935600Z ```
2025-08-17T13:19:31.7935686Z 
2025-08-17T13:19:31.7935751Z Return safe DSN.
2025-08-17T13:19:31.7935860Z 
2025-08-17T13:19:31.7936205Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T13:19:31.7936408Z 
2025-08-17T13:19:31.7936540Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T13:19:31.7936742Z 
2025-08-17T13:19:31.7936852Z # price\_importer.services\_common.models\_vendor
2025-08-17T13:19:31.7937046Z 
2025-08-17T13:19:31.7937150Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T13:19:31.7937336Z 
2025-08-17T13:19:31.7937430Z # price\_importer.services\_common.db\_url
2025-08-17T13:19:31.7937605Z 
2025-08-17T13:19:31.7937734Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T13:19:31.7937947Z 
2025-08-17T13:19:31.7938183Z #### build\_url
2025-08-17T13:19:31.7938281Z 
2025-08-17T13:19:31.7938343Z ```python
2025-08-17T13:19:31.7938515Z def build_url(async_: bool = True) -> str
2025-08-17T13:19:31.7938734Z ```
2025-08-17T13:19:31.7938817Z 
2025-08-17T13:19:31.7938915Z Return Postgres DSN from env or PG_* parts.
2025-08-17T13:19:31.7939087Z 
2025-08-17T13:19:31.7939195Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T13:19:31.7939379Z 
2025-08-17T13:19:31.7939469Z # price\_importer.services\_common.keepa
2025-08-17T13:19:31.7939633Z 
2025-08-17T13:19:31.7939736Z <a id="price_importer.services_common.llm"></a>
2025-08-17T13:19:31.7939914Z 
2025-08-17T13:19:31.7940000Z # price\_importer.services\_common.llm
2025-08-17T13:19:31.7940162Z 
2025-08-17T13:19:31.7940278Z <a id="price_importer.services_common.settings"></a>
2025-08-17T13:19:31.7940465Z 
2025-08-17T13:19:31.7940564Z # price\_importer.services\_common.settings
2025-08-17T13:19:31.7940733Z 
2025-08-17T13:19:31.7940833Z <a id="price_importer.services_common.db"></a>
2025-08-17T13:19:31.7941127Z 
2025-08-17T13:19:31.7941218Z # price\_importer.services\_common.db
2025-08-17T13:19:31.7941380Z 
2025-08-17T13:19:31.7941532Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T13:19:31.7941774Z 
2025-08-17T13:19:31.7941849Z #### build\_sqlalchemy\_url
2025-08-17T13:19:31.7941978Z 
2025-08-17T13:19:31.7942044Z ```python
2025-08-17T13:19:31.7942216Z def build_sqlalchemy_url() -> str
2025-08-17T13:19:31.7942425Z ```
2025-08-17T13:19:31.7942504Z 
2025-08-17T13:19:31.7942597Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T13:19:31.7942771Z 
2025-08-17T13:19:31.7942915Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T13:19:31.7943140Z 
2025-08-17T13:19:31.7943213Z #### build\_asyncpg\_dsn
2025-08-17T13:19:31.7943343Z 
2025-08-17T13:19:31.7943404Z ```python
2025-08-17T13:19:31.7943572Z def build_asyncpg_dsn() -> str
2025-08-17T13:19:31.7943767Z ```
2025-08-17T13:19:31.7943848Z 
2025-08-17T13:19:31.7943985Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T13:19:31.7944197Z 
2025-08-17T13:19:31.7944322Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T13:19:31.7944533Z 
2025-08-17T13:19:31.7944597Z #### refresh\_mvs
2025-08-17T13:19:31.7944698Z 
2025-08-17T13:19:31.7944763Z ```python
2025-08-17T13:19:31.7944951Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T13:19:31.7945407Z ```
2025-08-17T13:19:31.7945489Z 
2025-08-17T13:19:31.7945623Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T13:19:31.7945838Z 
2025-08-17T13:19:31.7945930Z <a id="price_importer.services_common"></a>
2025-08-17T13:19:31.7946098Z 
2025-08-17T13:19:31.7946181Z # price\_importer.services\_common
2025-08-17T13:19:31.7946336Z 
2025-08-17T13:19:31.7946437Z <a id="price_importer.services_common.base"></a>
2025-08-17T13:19:31.7946621Z 
2025-08-17T13:19:31.7946712Z # price\_importer.services\_common.base
2025-08-17T13:19:31.7946873Z 
2025-08-17T13:19:31.7946959Z <a id="price_importer.normaliser"></a>
2025-08-17T13:19:31.7947132Z 
2025-08-17T13:19:31.7947213Z # price\_importer.normaliser
2025-08-17T13:19:31.7947351Z 
2025-08-17T13:19:31.7947452Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T13:19:31.7947639Z 
2025-08-17T13:19:31.7947725Z # price\_importer.common.models\_vendor
2025-08-17T13:19:31.7947882Z 
2025-08-17T13:19:31.7947976Z <a id="price_importer.common.db_url"></a>
2025-08-17T13:19:31.7948145Z 
2025-08-17T13:19:31.7948228Z # price\_importer.common.db\_url
2025-08-17T13:19:31.7948383Z 
2025-08-17T13:19:31.7948485Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T13:19:31.7948668Z 
2025-08-17T13:19:31.7948733Z #### make\_dsn
2025-08-17T13:19:31.7948837Z 
2025-08-17T13:19:31.7948897Z ```python
2025-08-17T13:19:31.7949072Z def make_dsn(async_: bool = False) -> str
2025-08-17T13:19:31.7949290Z ```
2025-08-17T13:19:31.7949369Z 
2025-08-17T13:19:31.7949491Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T13:19:31.7949689Z 
2025-08-17T13:19:31.7949979Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T13:19:31.7950171Z 
2025-08-17T13:19:31.7950233Z #### build\_url
2025-08-17T13:19:31.7950331Z 
2025-08-17T13:19:31.7950390Z ```python
2025-08-17T13:19:31.7950562Z def build_url(async_: bool = False) -> str
2025-08-17T13:19:31.7950784Z ```
2025-08-17T13:19:31.7950862Z 
2025-08-17T13:19:31.7950979Z Return Postgres DSN built from environment variables.
2025-08-17T13:19:31.7951175Z 
2025-08-17T13:19:31.7951263Z <a id="price_importer.common"></a>
2025-08-17T13:19:31.7951413Z 
2025-08-17T13:19:31.7951489Z # price\_importer.common
2025-08-17T13:19:31.7951624Z 
2025-08-17T13:19:31.7951710Z <a id="price_importer.common.base"></a>
2025-08-17T13:19:31.7951871Z 
2025-08-17T13:19:31.7951956Z # price\_importer.common.base
2025-08-17T13:19:31.7952100Z 
2025-08-17T13:19:31.7952194Z <a id="price_importer.tests.conftest"></a>
2025-08-17T13:19:31.7952362Z 
2025-08-17T13:19:31.7952452Z # price\_importer.tests.conftest
2025-08-17T13:19:31.7952714Z 
2025-08-17T13:19:31.7952811Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T13:19:31.7952990Z 
2025-08-17T13:19:31.7953075Z # price\_importer.tests.test\_reader
2025-08-17T13:19:31.7953229Z 
2025-08-17T13:19:31.7953333Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T13:19:31.7953515Z 
2025-08-17T13:19:31.7953604Z # price\_importer.tests.test\_imports
2025-08-17T13:19:31.7953772Z 
2025-08-17T13:19:31.7953876Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T13:19:31.7954050Z 
2025-08-17T13:19:31.7954135Z # price\_importer.tests.test\_smoke
2025-08-17T13:19:31.7954296Z 
2025-08-17T13:19:31.7954400Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T13:19:31.7954586Z 
2025-08-17T13:19:31.7954681Z # price\_importer.tests.test\_normaliser
2025-08-17T13:19:31.7954847Z 
2025-08-17T13:19:31.7954930Z <a id="price_importer.tests"></a>
2025-08-17T13:19:31.7955081Z 
2025-08-17T13:19:31.7955363Z # price\_importer.tests
2025-08-17T13:19:31.7955534Z 
2025-08-17T13:19:31.7955629Z <a id="price_importer.reader"></a>
2025-08-17T13:19:31.7955790Z 
2025-08-17T13:19:31.7955869Z # price\_importer.reader
2025-08-17T13:19:31.7955994Z 
2025-08-17T13:19:31.7956099Z <a id="price_importer.reader.load_file"></a>
2025-08-17T13:19:31.7956274Z 
2025-08-17T13:19:31.7956336Z #### load\_file
2025-08-17T13:19:31.7956437Z 
2025-08-17T13:19:31.7956506Z ```python
2025-08-17T13:19:31.7956677Z def load_file(path: str | Path) -> Any
2025-08-17T13:19:31.7956895Z ```
2025-08-17T13:19:31.7956975Z 
2025-08-17T13:19:31.7957061Z Return DataFrame from CSV or Excel file.
2025-08-17T13:19:31.7957229Z 
2025-08-17T13:19:31.7957335Z Raises RuntimeError if pandas is unavailable.
2025-08-17T13:19:31.7957514Z 
2025-08-17T13:19:31.7957612Z <a id="price_importer.repository"></a>
2025-08-17T13:19:31.7957770Z 
2025-08-17T13:19:31.7957852Z # price\_importer.repository
2025-08-17T13:19:31.7957997Z 
2025-08-17T13:19:31.7958079Z <a id="price_importer.import"></a>
2025-08-17T13:19:31.7958231Z 
2025-08-17T13:19:31.7958307Z # price\_importer.import
2025-08-17T13:19:31.7958443Z 
2025-08-17T13:19:31.7958512Z <a id="fees_h10"></a>
2025-08-17T13:19:31.7958622Z 
2025-08-17T13:19:31.7958689Z # fees\_h10
2025-08-17T13:19:31.7958779Z 
2025-08-17T13:19:31.7958852Z <a id="fees_h10.worker"></a>
2025-08-17T13:19:31.7958984Z 
2025-08-17T13:19:31.7959055Z # fees\_h10.worker
2025-08-17T13:19:31.7959158Z 
2025-08-17T13:19:31.7959253Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T13:19:31.7959432Z 
2025-08-17T13:19:31.7959503Z #### list\_active\_asins
2025-08-17T13:19:31.7959622Z 
2025-08-17T13:19:31.7959692Z ```python
2025-08-17T13:19:31.7959857Z def list_active_asins() -> list[str]
2025-08-17T13:19:31.7960074Z ```
2025-08-17T13:19:31.7960157Z 
2025-08-17T13:19:31.7960267Z Return known ASINs or an empty list if unavailable.
2025-08-17T13:19:31.7960466Z 
2025-08-17T13:19:31.7960548Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T13:19:31.7960702Z 
2025-08-17T13:19:31.7960780Z # fees\_h10.tests.test\_smoke
2025-08-17T13:19:31.7960924Z 
2025-08-17T13:19:31.7961129Z <a id="fees_h10.tests"></a>
2025-08-17T13:19:31.7961259Z 
2025-08-17T13:19:31.7961328Z # fees\_h10.tests
2025-08-17T13:19:31.7961431Z 
2025-08-17T13:19:31.7961503Z <a id="fees_h10.client"></a>
2025-08-17T13:19:31.7961637Z 
2025-08-17T13:19:31.7961706Z # fees\_h10.client
2025-08-17T13:19:31.7961809Z 
2025-08-17T13:19:31.7961888Z <a id="fees_h10.repository"></a>
2025-08-17T13:19:31.7962036Z 
2025-08-17T13:19:31.7962104Z # fees\_h10.repository
2025-08-17T13:19:31.7962221Z 
2025-08-17T13:19:31.7962292Z <a id="emailer"></a>
2025-08-17T13:19:31.7962404Z 
2025-08-17T13:19:31.7962463Z # emailer
2025-08-17T13:19:31.7962548Z 
2025-08-17T13:19:31.7962650Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T13:19:31.7962827Z 
2025-08-17T13:19:31.7962912Z # emailer.tests.test\_import\_emailer
2025-08-17T13:19:31.7963076Z 
2025-08-17T13:19:31.7963159Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T13:19:31.7963312Z 
2025-08-17T13:19:31.7963394Z # emailer.tests.test\_smoke
2025-08-17T13:19:31.7963649Z 
2025-08-17T13:19:31.7963727Z <a id="emailer.tests"></a>
2025-08-17T13:19:31.7963855Z 
2025-08-17T13:19:31.7963925Z # emailer.tests
2025-08-17T13:19:31.7964029Z 
2025-08-17T13:19:31.7964112Z <a id="emailer.generate_body"></a>
2025-08-17T13:19:31.7964267Z 
2025-08-17T13:19:31.7964344Z # emailer.generate\_body
2025-08-17T13:19:31.7964473Z 
2025-08-17T13:19:31.7964546Z <a id="llm_server"></a>
2025-08-17T13:19:31.7964671Z 
2025-08-17T13:19:31.7964738Z # llm\_server
2025-08-17T13:19:31.7964835Z 
2025-08-17T13:19:31.7964918Z <a id="llm_server.app"></a>
2025-08-17T13:19:31.7965054Z 
2025-08-17T13:19:31.7965295Z # llm\_server.app
2025-08-17T13:19:31.7965444Z 
