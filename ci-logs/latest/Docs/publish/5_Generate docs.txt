2025-08-18T20:53:59.3519320Z ##[group]Run pydoc-markdown
2025-08-18T20:53:59.3519646Z [36;1mpydoc-markdown[0m
2025-08-18T20:53:59.3563346Z shell: /usr/bin/bash -e {0}
2025-08-18T20:53:59.3563618Z env:
2025-08-18T20:53:59.3563886Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:53:59.3564323Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T20:53:59.3564922Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:53:59.3565284Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:53:59.3565693Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T20:53:59.3566042Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T20:53:59.3566339Z ##[endgroup]
2025-08-18T20:53:59.7266852Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T20:53:59.7267915Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T20:53:59.7268419Z In "pydoc-markdown.yml"
2025-08-18T20:53:59.7268836Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T20:53:59.7269574Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T20:53:59.7270371Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T20:53:59.7270902Z 
2025-08-18T20:54:00.0430885Z <a id="__init__"></a>
2025-08-18T20:54:00.0431376Z 
2025-08-18T20:54:00.0431530Z # \_\_init\_\_
2025-08-18T20:54:00.0431739Z 
2025-08-18T20:54:00.0431885Z <a id="api"></a>
2025-08-18T20:54:00.0432104Z 
2025-08-18T20:54:00.0432240Z # api
2025-08-18T20:54:00.0432418Z 
2025-08-18T20:54:00.0432581Z <a id="api.errors"></a>
2025-08-18T20:54:00.0432859Z 
2025-08-18T20:54:00.0433011Z # api.errors
2025-08-18T20:54:00.0433209Z 
2025-08-18T20:54:00.0433326Z <a id="api.sentry_config"></a>
2025-08-18T20:54:00.0433533Z 
2025-08-18T20:54:00.0433694Z # api.sentry\_config
2025-08-18T20:54:00.0433961Z 
2025-08-18T20:54:00.0434168Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T20:54:00.0434525Z 
2025-08-18T20:54:00.0434725Z # api.tests.test\_sentry\_scrub
2025-08-18T20:54:00.0435127Z 
2025-08-18T20:54:00.0435347Z <a id="api.tests.test_errors_json"></a>
2025-08-18T20:54:00.0435705Z 
2025-08-18T20:54:00.0435880Z # api.tests.test\_errors\_json
2025-08-18T20:54:00.0436186Z 
2025-08-18T20:54:00.0436355Z <a id="api.tests.test_llm"></a>
2025-08-18T20:54:00.0436651Z 
2025-08-18T20:54:00.0436814Z # api.tests.test\_llm
2025-08-18T20:54:00.0437062Z 
2025-08-18T20:54:00.0437252Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T20:54:00.0437852Z 
2025-08-18T20:54:00.0438026Z # api.tests.test\_sentry\_event
2025-08-18T20:54:00.0438325Z 
2025-08-18T20:54:00.0438589Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T20:54:00.0439020Z 
2025-08-18T20:54:00.0439126Z ## DummyTransport Objects
2025-08-18T20:54:00.0439294Z 
2025-08-18T20:54:00.0439392Z ```python
2025-08-18T20:54:00.0439614Z class DummyTransport()
2025-08-18T20:54:00.0439864Z ```
2025-08-18T20:54:00.0439979Z 
2025-08-18T20:54:00.0440217Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T20:54:00.0441090Z 
2025-08-18T20:54:00.0441248Z #### capture\_envelope
2025-08-18T20:54:00.0441497Z 
2025-08-18T20:54:00.0441639Z ```python
2025-08-18T20:54:00.0441993Z def capture_envelope(envelope)
2025-08-18T20:54:00.0442266Z ```
2025-08-18T20:54:00.0442379Z 
2025-08-18T20:54:00.0442552Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T20:54:00.0442781Z 
2025-08-18T20:54:00.0442871Z <a id="api.tests.test_cors"></a>
2025-08-18T20:54:00.0443026Z 
2025-08-18T20:54:00.0443106Z # api.tests.test\_cors
2025-08-18T20:54:00.0443237Z 
2025-08-18T20:54:00.0443327Z <a id="api.tests.test_imports"></a>
2025-08-18T20:54:00.0443493Z 
2025-08-18T20:54:00.0443581Z # api.tests.test\_imports
2025-08-18T20:54:00.0443717Z 
2025-08-18T20:54:00.0443811Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T20:54:00.0443984Z 
2025-08-18T20:54:00.0444076Z # api.tests.test\_rate\_limit
2025-08-18T20:54:00.0444309Z 
2025-08-18T20:54:00.0444475Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T20:54:00.0445079Z 
2025-08-18T20:54:00.0445167Z #### app
2025-08-18T20:54:00.0445266Z 
2025-08-18T20:54:00.0445339Z noqa: E402
2025-08-18T20:54:00.0445438Z 
2025-08-18T20:54:00.0445531Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T20:54:00.0445704Z 
2025-08-18T20:54:00.0445795Z # api.tests.test\_entrypoint
2025-08-18T20:54:00.0445942Z 
2025-08-18T20:54:00.0446031Z <a id="api.tests.test_health"></a>
2025-08-18T20:54:00.0446198Z 
2025-08-18T20:54:00.0446279Z # api.tests.test\_health
2025-08-18T20:54:00.0446415Z 
2025-08-18T20:54:00.0446499Z <a id="api.logging_config"></a>
2025-08-18T20:54:00.0446654Z 
2025-08-18T20:54:00.0446731Z # api.logging\_config
2025-08-18T20:54:00.0446856Z 
2025-08-18T20:54:00.0446949Z <a id="api.migrations.env"></a>
2025-08-18T20:54:00.0447098Z 
2025-08-18T20:54:00.0447176Z # api.migrations.env
2025-08-18T20:54:00.0447305Z 
2025-08-18T20:54:00.0447427Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T20:54:00.0447837Z 
2025-08-18T20:54:00.0447953Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T20:54:00.0448165Z 
2025-08-18T20:54:00.0448280Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T20:54:00.0448483Z 
2025-08-18T20:54:00.0448588Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T20:54:00.0448772Z 
2025-08-18T20:54:00.0448933Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T20:54:00.0449192Z 
2025-08-18T20:54:00.0449335Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T20:54:00.0449569Z 
2025-08-18T20:54:00.0449706Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T20:54:00.0449919Z 
2025-08-18T20:54:00.0450033Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T20:54:00.0450228Z 
2025-08-18T20:54:00.0450359Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T20:54:00.0450570Z 
2025-08-18T20:54:00.0450678Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T20:54:00.0450879Z 
2025-08-18T20:54:00.0451010Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T20:54:00.0451238Z 
2025-08-18T20:54:00.0451357Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T20:54:00.0451558Z 
2025-08-18T20:54:00.0451683Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T20:54:00.0451898Z 
2025-08-18T20:54:00.0452007Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T20:54:00.0452202Z 
2025-08-18T20:54:00.0452329Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T20:54:00.0452556Z 
2025-08-18T20:54:00.0452665Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T20:54:00.0452861Z 
2025-08-18T20:54:00.0453009Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T20:54:00.0453242Z 
2025-08-18T20:54:00.0453367Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T20:54:00.0453567Z 
2025-08-18T20:54:00.0453688Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T20:54:00.0453887Z 
2025-08-18T20:54:00.0453994Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T20:54:00.0454330Z 
2025-08-18T20:54:00.0454465Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T20:54:00.0454697Z 
2025-08-18T20:54:00.0454815Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T20:54:00.0455105Z 
2025-08-18T20:54:00.0455225Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T20:54:00.0455424Z 
2025-08-18T20:54:00.0455520Z # api.migrations.versions.0001\_baseline
2025-08-18T20:54:00.0455705Z 
2025-08-18T20:54:00.0455801Z <a id="api.migrations.versions"></a>
2025-08-18T20:54:00.0455965Z 
2025-08-18T20:54:00.0456048Z # api.migrations.versions
2025-08-18T20:54:00.0456184Z 
2025-08-18T20:54:00.0456265Z <a id="api.migrations"></a>
2025-08-18T20:54:00.0456399Z 
2025-08-18T20:54:00.0456475Z # api.migrations
2025-08-18T20:54:00.0456582Z 
2025-08-18T20:54:00.0456652Z <a id="api.db"></a>
2025-08-18T20:54:00.0456759Z 
2025-08-18T20:54:00.0456830Z # api.db
2025-08-18T20:54:00.0456919Z 
2025-08-18T20:54:00.0457001Z <a id="api.routes.stats"></a>
2025-08-18T20:54:00.0457288Z 
2025-08-18T20:54:00.0457359Z # api.routes.stats
2025-08-18T20:54:00.0457468Z 
2025-08-18T20:54:00.0457750Z <a id="api.routes.stats.kpi"></a>
2025-08-18T20:54:00.0457922Z 
2025-08-18T20:54:00.0457986Z #### kpi
2025-08-18T20:54:00.0458074Z 
2025-08-18T20:54:00.0458145Z ```python
2025-08-18T20:54:00.0458314Z @router.get("/stats/kpi")
2025-08-18T20:54:00.0458564Z def kpi() -> List[Dict[str, int]]
2025-08-18T20:54:00.0458770Z ```
2025-08-18T20:54:00.0458860Z 
2025-08-18T20:54:00.0458940Z Return KPI metrics (mock).
2025-08-18T20:54:00.0459071Z 
2025-08-18T20:54:00.0459173Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T20:54:00.0459356Z 
2025-08-18T20:54:00.0459426Z #### roi\_by\_vendor
2025-08-18T20:54:00.0459538Z 
2025-08-18T20:54:00.0459610Z ```python
2025-08-18T20:54:00.0459783Z @router.get("/stats/roi_by_vendor")
2025-08-18T20:54:00.0460040Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T20:54:00.0460267Z ```
2025-08-18T20:54:00.0460355Z 
2025-08-18T20:54:00.0460451Z Return ROI percent by vendor.
2025-08-18T20:54:00.0460591Z 
2025-08-18T20:54:00.0460684Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T20:54:00.0460858Z 
2025-08-18T20:54:00.0460925Z #### roi\_trend
2025-08-18T20:54:00.0461030Z 
2025-08-18T20:54:00.0461104Z ```python
2025-08-18T20:54:00.0461272Z @router.get("/stats/roi_trend")
2025-08-18T20:54:00.0461515Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T20:54:00.0461745Z ```
2025-08-18T20:54:00.0461833Z 
2025-08-18T20:54:00.0461909Z Return 30-day ROI trend.
2025-08-18T20:54:00.0462040Z 
2025-08-18T20:54:00.0462124Z <a id="api.routes.roi"></a>
2025-08-18T20:54:00.0462264Z 
2025-08-18T20:54:00.0462343Z # api.routes.roi
2025-08-18T20:54:00.0462450Z 
2025-08-18T20:54:00.0462541Z <a id="api.routes.health"></a>
2025-08-18T20:54:00.0462679Z 
2025-08-18T20:54:00.0462751Z # api.routes.health
2025-08-18T20:54:00.0462869Z 
2025-08-18T20:54:00.0462961Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T20:54:00.0463127Z 
2025-08-18T20:54:00.0463204Z #### MAX\_SKEW
2025-08-18T20:54:00.0463310Z 
2025-08-18T20:54:00.0463375Z seconds
2025-08-18T20:54:00.0463461Z 
2025-08-18T20:54:00.0463557Z <a id="api.routes.health.health"></a>
2025-08-18T20:54:00.0463718Z 
2025-08-18T20:54:00.0463782Z #### health
2025-08-18T20:54:00.0463873Z 
2025-08-18T20:54:00.0463945Z ```python
2025-08-18T20:54:00.0464137Z @router.get("/health", include_in_schema=False)
2025-08-18T20:54:00.0464513Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T20:54:00.0464854Z ```
2025-08-18T20:54:00.0464943Z 
2025-08-18T20:54:00.0465058Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T20:54:00.0465255Z 
2025-08-18T20:54:00.0465350Z <a id="api.routes.repository"></a>
2025-08-18T20:54:00.0465504Z 
2025-08-18T20:54:00.0465583Z # api.routes.repository
2025-08-18T20:54:00.0465713Z 
2025-08-18T20:54:00.0465786Z <a id="api.routes"></a>
2025-08-18T20:54:00.0465900Z 
2025-08-18T20:54:00.0465967Z # api.routes
2025-08-18T20:54:00.0466068Z 
2025-08-18T20:54:00.0466286Z <a id="api.models.fee"></a>
2025-08-18T20:54:00.0466418Z 
2025-08-18T20:54:00.0466493Z # api.models.fee
2025-08-18T20:54:00.0466597Z 
2025-08-18T20:54:00.0466671Z <a id="api.models"></a>
2025-08-18T20:54:00.0466787Z 
2025-08-18T20:54:00.0466858Z # api.models
2025-08-18T20:54:00.0466956Z 
2025-08-18T20:54:00.0467038Z <a id="api.roi_repository"></a>
2025-08-18T20:54:00.0467184Z 
2025-08-18T20:54:00.0467257Z # api.roi\_repository
2025-08-18T20:54:00.0467373Z 
2025-08-18T20:54:00.0467452Z <a id="api.main"></a>
2025-08-18T20:54:00.0467735Z 
2025-08-18T20:54:00.0467846Z # api.main
2025-08-18T20:54:00.0467943Z 
2025-08-18T20:54:00.0468031Z <a id="api.main.ready"></a>
2025-08-18T20:54:00.0468163Z 
2025-08-18T20:54:00.0468226Z #### ready
2025-08-18T20:54:00.0468320Z 
2025-08-18T20:54:00.0468386Z ```python
2025-08-18T20:54:00.0468644Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T20:54:00.0469075Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T20:54:00.0469571Z                                                                       str]
2025-08-18T20:54:00.0469804Z ```
2025-08-18T20:54:00.0469889Z 
2025-08-18T20:54:00.0469994Z Return 200 only when migrations are at head.
2025-08-18T20:54:00.0470168Z 
2025-08-18T20:54:00.0470247Z <a id="api.config"></a>
2025-08-18T20:54:00.0470370Z 
2025-08-18T20:54:00.0470438Z # api.config
2025-08-18T20:54:00.0470534Z 
2025-08-18T20:54:00.0470601Z <a id="etl"></a>
2025-08-18T20:54:00.0470708Z 
2025-08-18T20:54:00.0470770Z # etl
2025-08-18T20:54:00.0470857Z 
2025-08-18T20:54:00.0470945Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T20:54:00.0471093Z 
2025-08-18T20:54:00.0471167Z # etl.fba\_fee\_ingestor
2025-08-18T20:54:00.0471297Z 
2025-08-18T20:54:00.0471379Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T20:54:00.0471523Z 
2025-08-18T20:54:00.0471598Z # etl.sp\_fees\_ingestor
2025-08-18T20:54:00.0471722Z 
2025-08-18T20:54:00.0471812Z <a id="etl.keepa_ingestor"></a>
2025-08-18T20:54:00.0471957Z 
2025-08-18T20:54:00.0472037Z # etl.keepa\_ingestor
2025-08-18T20:54:00.0472152Z 
2025-08-18T20:54:00.0472227Z <a id="etl.db"></a>
2025-08-18T20:54:00.0472335Z 
2025-08-18T20:54:00.0472398Z # etl.db
2025-08-18T20:54:00.0472494Z 
2025-08-18T20:54:00.0472581Z <a id="etl.dialects.schemas"></a>
2025-08-18T20:54:00.0472728Z 
2025-08-18T20:54:00.0472804Z # etl.dialects.schemas
2025-08-18T20:54:00.0472933Z 
2025-08-18T20:54:00.0473043Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T20:54:00.0473228Z 
2025-08-18T20:54:00.0473324Z # etl.dialects.amazon\_reimbursements
2025-08-18T20:54:00.0473486Z 
2025-08-18T20:54:00.0473583Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T20:54:00.0473759Z 
2025-08-18T20:54:00.0473849Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T20:54:00.0474009Z 
2025-08-18T20:54:00.0474101Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T20:54:00.0474272Z 
2025-08-18T20:54:00.0474356Z # etl.dialects.amazon\_returns
2025-08-18T20:54:00.0474496Z 
2025-08-18T20:54:00.0474613Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T20:54:00.0474784Z 
2025-08-18T20:54:00.0474871Z # etl.dialects.amazon\_fee\_preview
2025-08-18T20:54:00.0475039Z 
2025-08-18T20:54:00.0475149Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T20:54:00.0475337Z 
2025-08-18T20:54:00.0475429Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T20:54:00.0475599Z 
2025-08-18T20:54:00.0475695Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T20:54:00.0475867Z 
2025-08-18T20:54:00.0475961Z # etl.dialects.amazon\_settlements
2025-08-18T20:54:00.0476114Z 
2025-08-18T20:54:00.0476192Z <a id="etl.dialects"></a>
2025-08-18T20:54:00.0476326Z 
2025-08-18T20:54:00.0476395Z # etl.dialects
2025-08-18T20:54:00.0476497Z 
2025-08-18T20:54:00.0476566Z <a id="ingest"></a>
2025-08-18T20:54:00.0476681Z 
2025-08-18T20:54:00.0476745Z # ingest
2025-08-18T20:54:00.0476832Z 
2025-08-18T20:54:00.0476923Z <a id="ingest.maintenance"></a>
2025-08-18T20:54:00.0477067Z 
2025-08-18T20:54:00.0477144Z # ingest.maintenance
2025-08-18T20:54:00.0477424Z 
2025-08-18T20:54:00.0477506Z <a id="ingest.copy_loader"></a>
2025-08-18T20:54:00.0477906Z 
2025-08-18T20:54:00.0477987Z # ingest.copy\_loader
2025-08-18T20:54:00.0478114Z 
2025-08-18T20:54:00.0478219Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T20:54:00.0478402Z 
2025-08-18T20:54:00.0478484Z #### copy\_df\_via\_temp
2025-08-18T20:54:00.0478608Z 
2025-08-18T20:54:00.0478674Z ```python
2025-08-18T20:54:00.0478855Z def copy_df_via_temp(engine: Engine,
2025-08-18T20:54:00.0479093Z                      df: pd.DataFrame,
2025-08-18T20:54:00.0479331Z                      target_table: str,
2025-08-18T20:54:00.0479549Z                      *,
2025-08-18T20:54:00.0479763Z                      target_schema: Optional[str] = None,
2025-08-18T20:54:00.0480025Z                      columns: Sequence[str],
2025-08-18T20:54:00.0480306Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T20:54:00.0480597Z                      analyze_after: bool = False,
2025-08-18T20:54:00.0481024Z                      connection: Any | None = None) -> int
2025-08-18T20:54:00.0481264Z ```
2025-08-18T20:54:00.0481349Z 
2025-08-18T20:54:00.0481509Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T20:54:00.0481751Z 
2025-08-18T20:54:00.0481843Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T20:54:00.0482008Z 
2025-08-18T20:54:00.0482095Z # ingest.tests.test\_smoke
2025-08-18T20:54:00.0482230Z 
2025-08-18T20:54:00.0482309Z <a id="ingest.tests"></a>
2025-08-18T20:54:00.0482437Z 
2025-08-18T20:54:00.0482509Z # ingest.tests
2025-08-18T20:54:00.0482615Z 
2025-08-18T20:54:00.0482702Z <a id="ingest.upload_router"></a>
2025-08-18T20:54:00.0482860Z 
2025-08-18T20:54:00.0482935Z # ingest.upload\_router
2025-08-18T20:54:00.0483057Z 
2025-08-18T20:54:00.0483139Z <a id="ingest.email_watcher"></a>
2025-08-18T20:54:00.0483290Z 
2025-08-18T20:54:00.0483362Z # ingest.email\_watcher
2025-08-18T20:54:00.0483480Z 
2025-08-18T20:54:00.0483578Z <a id="ingest.email_watcher.main"></a>
2025-08-18T20:54:00.0483752Z 
2025-08-18T20:54:00.0483815Z #### main
2025-08-18T20:54:00.0483914Z 
2025-08-18T20:54:00.0483979Z ```python
2025-08-18T20:54:00.0484151Z def main() -> dict[str, str]
2025-08-18T20:54:00.0484355Z ```
2025-08-18T20:54:00.0484439Z 
2025-08-18T20:54:00.0484586Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T20:54:00.0484824Z 
2025-08-18T20:54:00.0484959Z Returns {"status": "success"} when processing completes.
2025-08-18T20:54:00.0485171Z 
2025-08-18T20:54:00.0485250Z <a id="ingest.tasks"></a>
2025-08-18T20:54:00.0485381Z 
2025-08-18T20:54:00.0485449Z # ingest.tasks
2025-08-18T20:54:00.0485552Z 
2025-08-18T20:54:00.0485684Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T20:54:00.0485863Z 
2025-08-18T20:54:00.0485937Z #### task\_import\_file
2025-08-18T20:54:00.0486061Z 
2025-08-18T20:54:00.0486124Z ```python
2025-08-18T20:54:00.0486332Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T20:54:00.0486631Z def task_import_file(self: Any,
2025-08-18T20:54:00.0486864Z                      uri: str,
2025-08-18T20:54:00.0487091Z                      report_type: Optional[str] = None,
2025-08-18T20:54:00.0487370Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T20:54:00.0487829Z ```
2025-08-18T20:54:00.0487929Z 
2025-08-18T20:54:00.0488064Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T20:54:00.0488274Z 
2025-08-18T20:54:00.0488357Z <a id="ingest.celery_app"></a>
2025-08-18T20:54:00.0488504Z 
2025-08-18T20:54:00.0488576Z # ingest.celery\_app
2025-08-18T20:54:00.0488692Z 
2025-08-18T20:54:00.0488781Z <a id="ingest.ingest_router"></a>
2025-08-18T20:54:00.0488929Z 
2025-08-18T20:54:00.0489005Z # ingest.ingest\_router
2025-08-18T20:54:00.0489128Z 
2025-08-18T20:54:00.0489208Z <a id="logistics_etl"></a>
2025-08-18T20:54:00.0489334Z 
2025-08-18T20:54:00.0489401Z # logistics\_etl
2025-08-18T20:54:00.0489512Z 
2025-08-18T20:54:00.0489590Z Daily logistics ETL job.
2025-08-18T20:54:00.0489722Z 
2025-08-18T20:54:00.0489946Z <a id="logistics_etl.__main__"></a>
2025-08-18T20:54:00.0490100Z 
2025-08-18T20:54:00.0490179Z # logistics\_etl.\_\_main\_\_
2025-08-18T20:54:00.0490314Z 
2025-08-18T20:54:00.0490401Z <a id="logistics_etl.dsn"></a>
2025-08-18T20:54:00.0490546Z 
2025-08-18T20:54:00.0490620Z # logistics\_etl.dsn
2025-08-18T20:54:00.0490742Z 
2025-08-18T20:54:00.0490862Z Local DSN builder to avoid cross-service dependency.
2025-08-18T20:54:00.0491064Z 
2025-08-18T20:54:00.0491160Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T20:54:00.0491328Z 
2025-08-18T20:54:00.0491395Z #### build\_dsn
2025-08-18T20:54:00.0491499Z 
2025-08-18T20:54:00.0491569Z ```python
2025-08-18T20:54:00.0491745Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:54:00.0491971Z ```
2025-08-18T20:54:00.0492055Z 
2025-08-18T20:54:00.0492195Z Return a Postgres DSN assembled from environment variables.
2025-08-18T20:54:00.0492425Z 
2025-08-18T20:54:00.0492581Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T20:54:00.0493109Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T20:54:00.0493450Z error when any required variable is missing.
2025-08-18T20:54:00.0493633Z 
2025-08-18T20:54:00.0493727Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T20:54:00.0493896Z 
2025-08-18T20:54:00.0493982Z # logistics\_etl.tests.conftest
2025-08-18T20:54:00.0494133Z 
2025-08-18T20:54:00.0494237Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T20:54:00.0494419Z 
2025-08-18T20:54:00.0494513Z # logistics\_etl.tests.test\_repository
2025-08-18T20:54:00.0494676Z 
2025-08-18T20:54:00.0494769Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T20:54:00.0494943Z 
2025-08-18T20:54:00.0495029Z # logistics\_etl.tests.test\_cron
2025-08-18T20:54:00.0495180Z 
2025-08-18T20:54:00.0495277Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T20:54:00.0495458Z 
2025-08-18T20:54:00.0495544Z # logistics\_etl.tests.test\_imports
2025-08-18T20:54:00.0495699Z 
2025-08-18T20:54:00.0495804Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T20:54:00.0495978Z 
2025-08-18T20:54:00.0496062Z # logistics\_etl.tests.test\_smoke
2025-08-18T20:54:00.0496219Z 
2025-08-18T20:54:00.0496313Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T20:54:00.0496482Z 
2025-08-18T20:54:00.0496568Z # logistics\_etl.tests.test\_client
2025-08-18T20:54:00.0496728Z 
2025-08-18T20:54:00.0496811Z <a id="logistics_etl.tests"></a>
2025-08-18T20:54:00.0496956Z 
2025-08-18T20:54:00.0497037Z # logistics\_etl.tests
2025-08-18T20:54:00.0497157Z 
2025-08-18T20:54:00.0497238Z <a id="logistics_etl.flow"></a>
2025-08-18T20:54:00.0497378Z 
2025-08-18T20:54:00.0497459Z # logistics\_etl.flow
2025-08-18T20:54:00.0497695Z 
2025-08-18T20:54:00.0497779Z <a id="logistics_etl.client"></a>
2025-08-18T20:54:00.0497933Z 
2025-08-18T20:54:00.0498009Z # logistics\_etl.client
2025-08-18T20:54:00.0498130Z 
2025-08-18T20:54:00.0498220Z <a id="logistics_etl.cron"></a>
2025-08-18T20:54:00.0498363Z 
2025-08-18T20:54:00.0498440Z # logistics\_etl.cron
2025-08-18T20:54:00.0498564Z 
2025-08-18T20:54:00.0498650Z <a id="logistics_etl.db"></a>
2025-08-18T20:54:00.0498799Z 
2025-08-18T20:54:00.0540397Z # logistics\_etl.db
2025-08-18T20:54:00.0540677Z 
2025-08-18T20:54:00.0540882Z <a id="logistics_etl.repository"></a>
2025-08-18T20:54:00.0541247Z 
2025-08-18T20:54:00.0541420Z # logistics\_etl.repository
2025-08-18T20:54:00.0541731Z 
2025-08-18T20:54:00.0541895Z <a id="alert_bot"></a>
2025-08-18T20:54:00.0542150Z 
2025-08-18T20:54:00.0542298Z # alert\_bot
2025-08-18T20:54:00.0542512Z 
2025-08-18T20:54:00.0542703Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T20:54:00.0543062Z 
2025-08-18T20:54:00.0543233Z # alert\_bot.tests.test\_smoke
2025-08-18T20:54:00.0543549Z 
2025-08-18T20:54:00.0543718Z <a id="alert_bot.tests"></a>
2025-08-18T20:54:00.0544012Z 
2025-08-18T20:54:00.0544163Z # alert\_bot.tests
2025-08-18T20:54:00.0544391Z 
2025-08-18T20:54:00.0544563Z <a id="alert_bot.alert_bot"></a>
2025-08-18T20:54:00.0544876Z 
2025-08-18T20:54:00.0545059Z # alert\_bot.alert\_bot
2025-08-18T20:54:00.0545573Z 
2025-08-18T20:54:00.0545740Z <a id="alert_bot.rules"></a>
2025-08-18T20:54:00.0546043Z 
2025-08-18T20:54:00.0546189Z # alert\_bot.rules
2025-08-18T20:54:00.0546422Z 
2025-08-18T20:54:00.0546573Z <a id="common"></a>
2025-08-18T20:54:00.0546805Z 
2025-08-18T20:54:00.0546939Z # common
2025-08-18T20:54:00.0547126Z 
2025-08-18T20:54:00.0547402Z <a id="common.dsn"></a>
2025-08-18T20:54:00.0547867Z 
2025-08-18T20:54:00.0548022Z # common.dsn
2025-08-18T20:54:00.0548186Z 
2025-08-18T20:54:00.0548293Z <a id="common.dsn.build_dsn"></a>
2025-08-18T20:54:00.0548480Z 
2025-08-18T20:54:00.0548566Z #### build\_dsn
2025-08-18T20:54:00.0548692Z 
2025-08-18T20:54:00.0548773Z ```python
2025-08-18T20:54:00.0549003Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:54:00.0549283Z ```
2025-08-18T20:54:00.0549388Z 
2025-08-18T20:54:00.0549553Z Return a Postgres DSN, validating required variables.
2025-08-18T20:54:00.0549811Z 
2025-08-18T20:54:00.0550046Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T20:54:00.0550766Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T20:54:00.0551282Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T20:54:00.0551660Z missing.
2025-08-18T20:54:00.0551770Z 
2025-08-18T20:54:00.0551883Z <a id="common.models_vendor"></a>
2025-08-18T20:54:00.0552072Z 
2025-08-18T20:54:00.0552167Z # common.models\_vendor
2025-08-18T20:54:00.0552325Z 
2025-08-18T20:54:00.0552437Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T20:54:00.0552645Z 
2025-08-18T20:54:00.0552714Z ## Vendor Objects
2025-08-18T20:54:00.0552828Z 
2025-08-18T20:54:00.0552891Z ```python
2025-08-18T20:54:00.0553056Z class Vendor(Base)
2025-08-18T20:54:00.0553224Z ```
2025-08-18T20:54:00.0553308Z 
2025-08-18T20:54:00.0553395Z Vendor of inventory items.
2025-08-18T20:54:00.0553528Z 
2025-08-18T20:54:00.0553634Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T20:54:00.0553823Z 
2025-08-18T20:54:00.0553903Z ## VendorPrice Objects
2025-08-18T20:54:00.0554023Z 
2025-08-18T20:54:00.0554087Z ```python
2025-08-18T20:54:00.0554259Z class VendorPrice(Base)
2025-08-18T20:54:00.0554443Z ```
2025-08-18T20:54:00.0554527Z 
2025-08-18T20:54:00.0554630Z Association table linking vendors to pricing.
2025-08-18T20:54:00.0554811Z 
2025-08-18T20:54:00.0554897Z <a id="common.db_url"></a>
2025-08-18T20:54:00.0555024Z 
2025-08-18T20:54:00.0555093Z # common.db\_url
2025-08-18T20:54:00.0555207Z 
2025-08-18T20:54:00.0555292Z <a id="common.db_url.build_url"></a>
2025-08-18T20:54:00.0555448Z 
2025-08-18T20:54:00.0555520Z #### build\_url
2025-08-18T20:54:00.0555624Z 
2025-08-18T20:54:00.0555687Z ```python
2025-08-18T20:54:00.0555866Z def build_url(async_: bool = True) -> str
2025-08-18T20:54:00.0556091Z ```
2025-08-18T20:54:00.0556182Z 
2025-08-18T20:54:00.0556280Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:54:00.0556454Z 
2025-08-18T20:54:00.0556538Z <a id="common.keepa"></a>
2025-08-18T20:54:00.0556684Z 
2025-08-18T20:54:00.0556753Z # common.keepa
2025-08-18T20:54:00.0556856Z 
2025-08-18T20:54:00.0556937Z <a id="common.llm"></a>
2025-08-18T20:54:00.0557056Z 
2025-08-18T20:54:00.0557122Z # common.llm
2025-08-18T20:54:00.0557218Z 
2025-08-18T20:54:00.0557307Z <a id="common.settings"></a>
2025-08-18T20:54:00.0557448Z 
2025-08-18T20:54:00.0557518Z # common.settings
2025-08-18T20:54:00.0557750Z 
2025-08-18T20:54:00.0557824Z <a id="common.db"></a>
2025-08-18T20:54:00.0557945Z 
2025-08-18T20:54:00.0558012Z # common.db
2025-08-18T20:54:00.0558110Z 
2025-08-18T20:54:00.0558201Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T20:54:00.0558372Z 
2025-08-18T20:54:00.0558456Z #### build\_sqlalchemy\_url
2025-08-18T20:54:00.0558589Z 
2025-08-18T20:54:00.0558653Z ```python
2025-08-18T20:54:00.0558834Z def build_sqlalchemy_url() -> str
2025-08-18T20:54:00.0559040Z ```
2025-08-18T20:54:00.0559129Z 
2025-08-18T20:54:00.0559225Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:54:00.0559397Z 
2025-08-18T20:54:00.0559635Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T20:54:00.0559806Z 
2025-08-18T20:54:00.0559881Z #### build\_asyncpg\_dsn
2025-08-18T20:54:00.0560004Z 
2025-08-18T20:54:00.0560073Z ```python
2025-08-18T20:54:00.0560244Z def build_asyncpg_dsn() -> str
2025-08-18T20:54:00.0560452Z ```
2025-08-18T20:54:00.0560533Z 
2025-08-18T20:54:00.0560661Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:54:00.0560876Z 
2025-08-18T20:54:00.0560963Z <a id="common.db.refresh_mvs"></a>
2025-08-18T20:54:00.0561116Z 
2025-08-18T20:54:00.0561189Z #### refresh\_mvs
2025-08-18T20:54:00.0561295Z 
2025-08-18T20:54:00.0561360Z ```python
2025-08-18T20:54:00.0561557Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:54:00.0561805Z ```
2025-08-18T20:54:00.0561892Z 
2025-08-18T20:54:00.0562026Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:54:00.0562240Z 
2025-08-18T20:54:00.0562320Z <a id="common.config"></a>
2025-08-18T20:54:00.0562458Z 
2025-08-18T20:54:00.0562647Z # common.config
2025-08-18T20:54:00.0562750Z 
2025-08-18T20:54:00.0562830Z <a id="common.base"></a>
2025-08-18T20:54:00.0562951Z 
2025-08-18T20:54:00.0563019Z # common.base
2025-08-18T20:54:00.0563123Z 
2025-08-18T20:54:00.0563205Z <a id="common.base.Base"></a>
2025-08-18T20:54:00.0563344Z 
2025-08-18T20:54:00.0563413Z ## Base Objects
2025-08-18T20:54:00.0563520Z 
2025-08-18T20:54:00.0563583Z ```python
2025-08-18T20:54:00.0563755Z class Base(DeclarativeBase)
2025-08-18T20:54:00.0563950Z ```
2025-08-18T20:54:00.0564032Z 
2025-08-18T20:54:00.0564123Z Base class for SQLAlchemy models.
2025-08-18T20:54:00.0564272Z 
2025-08-18T20:54:00.0564343Z <a id="repricer"></a>
2025-08-18T20:54:00.0564465Z 
2025-08-18T20:54:00.0564529Z # repricer
2025-08-18T20:54:00.0564623Z 
2025-08-18T20:54:00.0564712Z <a id="repricer.app.schemas"></a>
2025-08-18T20:54:00.0564866Z 
2025-08-18T20:54:00.0564945Z # repricer.app.schemas
2025-08-18T20:54:00.0565065Z 
2025-08-18T20:54:00.0565157Z <a id="repricer.app.deps"></a>
2025-08-18T20:54:00.0565312Z 
2025-08-18T20:54:00.0565387Z # repricer.app.deps
2025-08-18T20:54:00.0565507Z 
2025-08-18T20:54:00.0565622Z Placeholder module for Keepa / SP-API clients.
2025-08-18T20:54:00.0565805Z 
2025-08-18T20:54:00.0565890Z <a id="repricer.app.logic"></a>
2025-08-18T20:54:00.0566042Z 
2025-08-18T20:54:00.0566119Z # repricer.app.logic
2025-08-18T20:54:00.0566236Z 
2025-08-18T20:54:00.0566339Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T20:54:00.0566520Z 
2025-08-18T20:54:00.0566586Z #### MIN\_MARGIN
2025-08-18T20:54:00.0566689Z 
2025-08-18T20:54:00.0566759Z 15 % ROI
2025-08-18T20:54:00.0566847Z 
2025-08-18T20:54:00.0566951Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T20:54:00.0567137Z 
2025-08-18T20:54:00.0567210Z #### compute\_price
2025-08-18T20:54:00.0567317Z 
2025-08-18T20:54:00.0567389Z ```python
2025-08-18T20:54:00.0567740Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T20:54:00.0568051Z ```
2025-08-18T20:54:00.0568135Z 
2025-08-18T20:54:00.0568254Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T20:54:00.0568544Z Replace with real competitive logic later.
2025-08-18T20:54:00.0568719Z 
2025-08-18T20:54:00.0568810Z <a id="repricer.app.main"></a>
2025-08-18T20:54:00.0568990Z 
2025-08-18T20:54:00.0569064Z # repricer.app.main
2025-08-18T20:54:00.0569177Z 
2025-08-18T20:54:00.0569265Z <a id="repricer.app"></a>
2025-08-18T20:54:00.0569396Z 
2025-08-18T20:54:00.0569467Z # repricer.app
2025-08-18T20:54:00.0569571Z 
2025-08-18T20:54:00.0569670Z <a id="repricer.tests.test_imports"></a>
2025-08-18T20:54:00.0569843Z 
2025-08-18T20:54:00.0569926Z # repricer.tests.test\_imports
2025-08-18T20:54:00.0570071Z 
2025-08-18T20:54:00.0570162Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T20:54:00.0570326Z 
2025-08-18T20:54:00.0570416Z # repricer.tests.test\_smoke
2025-08-18T20:54:00.0570554Z 
2025-08-18T20:54:00.0570635Z <a id="repricer.tests"></a>
2025-08-18T20:54:00.0570768Z 
2025-08-18T20:54:00.0570843Z # repricer.tests
2025-08-18T20:54:00.0571124Z 
2025-08-18T20:54:00.0571191Z <a id="db"></a>
2025-08-18T20:54:00.0571301Z 
2025-08-18T20:54:00.0571362Z # db
2025-08-18T20:54:00.0571447Z 
2025-08-18T20:54:00.0571524Z <a id="db.utils.views"></a>
2025-08-18T20:54:00.0571663Z 
2025-08-18T20:54:00.0571729Z # db.utils.views
2025-08-18T20:54:00.0571832Z 
2025-08-18T20:54:00.0571931Z <a id="db.utils.views.replace_view"></a>
2025-08-18T20:54:00.0572103Z 
2025-08-18T20:54:00.0572173Z #### replace\_view
2025-08-18T20:54:00.0572286Z 
2025-08-18T20:54:00.0572350Z ```python
2025-08-18T20:54:00.0572545Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T20:54:00.0572806Z ```
2025-08-18T20:54:00.0572891Z 
2025-08-18T20:54:00.0572981Z Drop and recreate a SQL view atomically.
2025-08-18T20:54:00.0573151Z 
2025-08-18T20:54:00.0573224Z <a id="db.utils"></a>
2025-08-18T20:54:00.0573340Z 
2025-08-18T20:54:00.0573410Z # db.utils
2025-08-18T20:54:00.0573501Z 
2025-08-18T20:54:00.0573579Z <a id="price_importer"></a>
2025-08-18T20:54:00.0573717Z 
2025-08-18T20:54:00.0573906Z # price\_importer
2025-08-18T20:54:00.0574013Z 
2025-08-18T20:54:00.0574116Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T20:54:00.0574308Z 
2025-08-18T20:54:00.0574402Z # price\_importer.services\_common.dsn
2025-08-18T20:54:00.0574566Z 
2025-08-18T20:54:00.0574697Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T20:54:00.0574902Z 
2025-08-18T20:54:00.0574972Z #### build\_dsn
2025-08-18T20:54:00.0575079Z 
2025-08-18T20:54:00.0575144Z ```python
2025-08-18T20:54:00.0575319Z def build_dsn(sync: bool = True) -> str
2025-08-18T20:54:00.0575548Z ```
2025-08-18T20:54:00.0575633Z 
2025-08-18T20:54:00.0575708Z Return safe DSN.
2025-08-18T20:54:00.0575813Z 
2025-08-18T20:54:00.0576158Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T20:54:00.0576361Z 
2025-08-18T20:54:00.0576493Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T20:54:00.0576699Z 
2025-08-18T20:54:00.0576815Z # price\_importer.services\_common.models\_vendor
2025-08-18T20:54:00.0577031Z 
2025-08-18T20:54:00.0577139Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T20:54:00.0577327Z 
2025-08-18T20:54:00.0577429Z # price\_importer.services\_common.db\_url
2025-08-18T20:54:00.0577700Z 
2025-08-18T20:54:00.0577836Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T20:54:00.0578052Z 
2025-08-18T20:54:00.0578126Z #### build\_url
2025-08-18T20:54:00.0578226Z 
2025-08-18T20:54:00.0578291Z ```python
2025-08-18T20:54:00.0578473Z def build_url(async_: bool = True) -> str
2025-08-18T20:54:00.0578697Z ```
2025-08-18T20:54:00.0578787Z 
2025-08-18T20:54:00.0578886Z Return Postgres DSN from env or PG_* parts.
2025-08-18T20:54:00.0579062Z 
2025-08-18T20:54:00.0579173Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T20:54:00.0579360Z 
2025-08-18T20:54:00.0579455Z # price\_importer.services\_common.keepa
2025-08-18T20:54:00.0579631Z 
2025-08-18T20:54:00.0579731Z <a id="price_importer.services_common.llm"></a>
2025-08-18T20:54:00.0579919Z 
2025-08-18T20:54:00.0580014Z # price\_importer.services\_common.llm
2025-08-18T20:54:00.0580183Z 
2025-08-18T20:54:00.0580298Z <a id="price_importer.services_common.settings"></a>
2025-08-18T20:54:00.0580492Z 
2025-08-18T20:54:00.0580599Z # price\_importer.services\_common.settings
2025-08-18T20:54:00.0580774Z 
2025-08-18T20:54:00.0580874Z <a id="price_importer.services_common.db"></a>
2025-08-18T20:54:00.0581059Z 
2025-08-18T20:54:00.0581149Z # price\_importer.services\_common.db
2025-08-18T20:54:00.0581310Z 
2025-08-18T20:54:00.0581465Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T20:54:00.0581708Z 
2025-08-18T20:54:00.0581787Z #### build\_sqlalchemy\_url
2025-08-18T20:54:00.0581919Z 
2025-08-18T20:54:00.0581990Z ```python
2025-08-18T20:54:00.0582164Z def build_sqlalchemy_url() -> str
2025-08-18T20:54:00.0582379Z ```
2025-08-18T20:54:00.0582462Z 
2025-08-18T20:54:00.0582561Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T20:54:00.0582738Z 
2025-08-18T20:54:00.0582885Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T20:54:00.0583240Z 
2025-08-18T20:54:00.0583323Z #### build\_asyncpg\_dsn
2025-08-18T20:54:00.0583454Z 
2025-08-18T20:54:00.0583518Z ```python
2025-08-18T20:54:00.0583695Z def build_asyncpg_dsn() -> str
2025-08-18T20:54:00.0583895Z ```
2025-08-18T20:54:00.0583983Z 
2025-08-18T20:54:00.0584113Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T20:54:00.0584324Z 
2025-08-18T20:54:00.0584456Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T20:54:00.0584674Z 
2025-08-18T20:54:00.0584742Z #### refresh\_mvs
2025-08-18T20:54:00.0584848Z 
2025-08-18T20:54:00.0584917Z ```python
2025-08-18T20:54:00.0585112Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T20:54:00.0585364Z ```
2025-08-18T20:54:00.0585446Z 
2025-08-18T20:54:00.0585582Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T20:54:00.0585804Z 
2025-08-18T20:54:00.0585903Z <a id="price_importer.services_common"></a>
2025-08-18T20:54:00.0586190Z 
2025-08-18T20:54:00.0586279Z # price\_importer.services\_common
2025-08-18T20:54:00.0586440Z 
2025-08-18T20:54:00.0586544Z <a id="price_importer.services_common.base"></a>
2025-08-18T20:54:00.0586729Z 
2025-08-18T20:54:00.0586827Z # price\_importer.services\_common.base
2025-08-18T20:54:00.0586994Z 
2025-08-18T20:54:00.0587084Z <a id="price_importer.normaliser"></a>
2025-08-18T20:54:00.0587250Z 
2025-08-18T20:54:00.0587334Z # price\_importer.normaliser
2025-08-18T20:54:00.0587477Z 
2025-08-18T20:54:00.0587678Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T20:54:00.0587869Z 
2025-08-18T20:54:00.0587961Z # price\_importer.common.models\_vendor
2025-08-18T20:54:00.0588126Z 
2025-08-18T20:54:00.0588226Z <a id="price_importer.common.db_url"></a>
2025-08-18T20:54:00.0588396Z 
2025-08-18T20:54:00.0588483Z # price\_importer.common.db\_url
2025-08-18T20:54:00.0588641Z 
2025-08-18T20:54:00.0588746Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T20:54:00.0588944Z 
2025-08-18T20:54:00.0589016Z #### make\_dsn
2025-08-18T20:54:00.0589116Z 
2025-08-18T20:54:00.0589180Z ```python
2025-08-18T20:54:00.0589362Z def make_dsn(async_: bool = False) -> str
2025-08-18T20:54:00.0589588Z ```
2025-08-18T20:54:00.0589673Z 
2025-08-18T20:54:00.0589800Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T20:54:00.0589998Z 
2025-08-18T20:54:00.0590106Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T20:54:00.0590304Z 
2025-08-18T20:54:00.0590369Z #### build\_url
2025-08-18T20:54:00.0590472Z 
2025-08-18T20:54:00.0590542Z ```python
2025-08-18T20:54:00.0590719Z def build_url(async_: bool = False) -> str
2025-08-18T20:54:00.0590949Z ```
2025-08-18T20:54:00.0591031Z 
2025-08-18T20:54:00.0591151Z Return Postgres DSN built from environment variables.
2025-08-18T20:54:00.0591358Z 
2025-08-18T20:54:00.0591444Z <a id="price_importer.common"></a>
2025-08-18T20:54:00.0591599Z 
2025-08-18T20:54:00.0591679Z # price\_importer.common
2025-08-18T20:54:00.0591813Z 
2025-08-18T20:54:00.0591924Z <a id="price_importer.common.base"></a>
2025-08-18T20:54:00.0592090Z 
2025-08-18T20:54:00.0592182Z # price\_importer.common.base
2025-08-18T20:54:00.0592323Z 
2025-08-18T20:54:00.0592423Z <a id="price_importer.tests.conftest"></a>
2025-08-18T20:54:00.0592600Z 
2025-08-18T20:54:00.0592687Z # price\_importer.tests.conftest
2025-08-18T20:54:00.0592860Z 
2025-08-18T20:54:00.0592963Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T20:54:00.0593149Z 
2025-08-18T20:54:00.0593238Z # price\_importer.tests.test\_reader
2025-08-18T20:54:00.0593396Z 
2025-08-18T20:54:00.0593509Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T20:54:00.0593690Z 
2025-08-18T20:54:00.0593782Z # price\_importer.tests.test\_imports
2025-08-18T20:54:00.0593948Z 
2025-08-18T20:54:00.0594045Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T20:54:00.0594217Z 
2025-08-18T20:54:00.0594302Z # price\_importer.tests.test\_smoke
2025-08-18T20:54:00.0594462Z 
2025-08-18T20:54:00.0594567Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T20:54:00.0594880Z 
2025-08-18T20:54:00.0594981Z # price\_importer.tests.test\_normaliser
2025-08-18T20:54:00.0595149Z 
2025-08-18T20:54:00.0595234Z <a id="price_importer.tests"></a>
2025-08-18T20:54:00.0595390Z 
2025-08-18T20:54:00.0595468Z # price\_importer.tests
2025-08-18T20:54:00.0595591Z 
2025-08-18T20:54:00.0595677Z <a id="price_importer.reader"></a>
2025-08-18T20:54:00.0595840Z 
2025-08-18T20:54:00.0595917Z # price\_importer.reader
2025-08-18T20:54:00.0596045Z 
2025-08-18T20:54:00.0596140Z <a id="price_importer.repository"></a>
2025-08-18T20:54:00.0596301Z 
2025-08-18T20:54:00.0596384Z # price\_importer.repository
2025-08-18T20:54:00.0596530Z 
2025-08-18T20:54:00.0596615Z <a id="price_importer.import"></a>
2025-08-18T20:54:00.0596764Z 
2025-08-18T20:54:00.0596842Z # price\_importer.import
2025-08-18T20:54:00.0596974Z 
2025-08-18T20:54:00.0597045Z <a id="fees_h10"></a>
2025-08-18T20:54:00.0597160Z 
2025-08-18T20:54:00.0597231Z # fees\_h10
2025-08-18T20:54:00.0597440Z 
2025-08-18T20:54:00.0597519Z <a id="fees_h10.worker"></a>
2025-08-18T20:54:00.0597788Z 
2025-08-18T20:54:00.0597858Z # fees\_h10.worker
2025-08-18T20:54:00.0597967Z 
2025-08-18T20:54:00.0598066Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T20:54:00.0598245Z 
2025-08-18T20:54:00.0598318Z #### list\_active\_asins
2025-08-18T20:54:00.0598440Z 
2025-08-18T20:54:00.0598509Z ```python
2025-08-18T20:54:00.0598681Z def list_active_asins() -> list[str]
2025-08-18T20:54:00.0598900Z ```
2025-08-18T20:54:00.0598982Z 
2025-08-18T20:54:00.0599095Z Return known ASINs or an empty list if unavailable.
2025-08-18T20:54:00.0599294Z 
2025-08-18T20:54:00.0599378Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T20:54:00.0599534Z 
2025-08-18T20:54:00.0599615Z # fees\_h10.tests.test\_smoke
2025-08-18T20:54:00.0599761Z 
2025-08-18T20:54:00.0599838Z <a id="fees_h10.tests"></a>
2025-08-18T20:54:00.0599971Z 
2025-08-18T20:54:00.0600044Z # fees\_h10.tests
2025-08-18T20:54:00.0600149Z 
2025-08-18T20:54:00.0600231Z <a id="fees_h10.client"></a>
2025-08-18T20:54:00.0600379Z 
2025-08-18T20:54:00.0600447Z # fees\_h10.client
2025-08-18T20:54:00.0600551Z 
2025-08-18T20:54:00.0600634Z <a id="fees_h10.repository"></a>
2025-08-18T20:54:00.0600785Z 
2025-08-18T20:54:00.0600859Z # fees\_h10.repository
2025-08-18T20:54:00.0600974Z 
2025-08-18T20:54:00.0601051Z <a id="emailer"></a>
2025-08-18T20:54:00.0601164Z 
2025-08-18T20:54:00.0601227Z # emailer
2025-08-18T20:54:00.0601320Z 
2025-08-18T20:54:00.0601427Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T20:54:00.0601603Z 
2025-08-18T20:54:00.0601695Z # emailer.tests.test\_import\_emailer
2025-08-18T20:54:00.0601862Z 
2025-08-18T20:54:00.0601949Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T20:54:00.0602106Z 
2025-08-18T20:54:00.0602192Z # emailer.tests.test\_smoke
2025-08-18T20:54:00.0602328Z 
2025-08-18T20:54:00.0602406Z <a id="emailer.tests"></a>
2025-08-18T20:54:00.0602537Z 
2025-08-18T20:54:00.0602614Z # emailer.tests
2025-08-18T20:54:00.0602721Z 
2025-08-18T20:54:00.0602815Z <a id="emailer.generate_body"></a>
2025-08-18T20:54:00.0602972Z 
2025-08-18T20:54:00.0603052Z # emailer.generate\_body
2025-08-18T20:54:00.0603176Z 
2025-08-18T20:54:00.0603254Z <a id="llm_server"></a>
2025-08-18T20:54:00.0603374Z 
2025-08-18T20:54:00.0603441Z # llm\_server
2025-08-18T20:54:00.0603539Z 
2025-08-18T20:54:00.0603628Z <a id="llm_server.app"></a>
2025-08-18T20:54:00.0603759Z 
2025-08-18T20:54:00.0603827Z # llm\_server.app
2025-08-18T20:54:00.0603940Z 
