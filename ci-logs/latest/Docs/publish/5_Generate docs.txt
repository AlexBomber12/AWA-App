2025-08-17T12:49:56.3108683Z ##[group]Run pydoc-markdown
2025-08-17T12:49:56.3108973Z [36;1mpydoc-markdown[0m
2025-08-17T12:49:56.3151428Z shell: /usr/bin/bash -e {0}
2025-08-17T12:49:56.3151648Z env:
2025-08-17T12:49:56.3151883Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:49:56.3152277Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T12:49:56.3152657Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:49:56.3152994Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:49:56.3153326Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:49:56.3153659Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T12:49:56.3153942Z ##[endgroup]
2025-08-17T12:49:56.7208851Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T12:49:56.7209626Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T12:49:56.7209974Z In "pydoc-markdown.yml"
2025-08-17T12:49:56.7210260Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T12:49:56.7210761Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T12:49:56.7211272Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T12:49:56.7211632Z 
2025-08-17T12:49:56.9335421Z <a id="__init__"></a>
2025-08-17T12:49:56.9335935Z 
2025-08-17T12:49:56.9336109Z # \_\_init\_\_
2025-08-17T12:49:56.9336358Z 
2025-08-17T12:49:56.9336507Z <a id="api"></a>
2025-08-17T12:49:56.9336741Z 
2025-08-17T12:49:56.9336841Z # api
2025-08-17T12:49:56.9336967Z 
2025-08-17T12:49:56.9337085Z <a id="api.tests.test_llm"></a>
2025-08-17T12:49:56.9337303Z 
2025-08-17T12:49:56.9337415Z # api.tests.test\_llm
2025-08-17T12:49:56.9337862Z 
2025-08-17T12:49:56.9338016Z <a id="api.tests.test_imports"></a>
2025-08-17T12:49:56.9338245Z 
2025-08-17T12:49:56.9338354Z # api.tests.test\_imports
2025-08-17T12:49:56.9338535Z 
2025-08-17T12:49:56.9338664Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T12:49:56.9338890Z 
2025-08-17T12:49:56.9339003Z # api.tests.test\_entrypoint
2025-08-17T12:49:56.9339246Z 
2025-08-17T12:49:56.9339363Z <a id="api.tests.test_health"></a>
2025-08-17T12:49:56.9339571Z 
2025-08-17T12:49:56.9339676Z # api.tests.test\_health
2025-08-17T12:49:56.9339854Z 
2025-08-17T12:49:56.9339967Z <a id="api.migrations.env"></a>
2025-08-17T12:49:56.9340161Z 
2025-08-17T12:49:56.9340266Z # api.migrations.env
2025-08-17T12:49:56.9340419Z 
2025-08-17T12:49:56.9340585Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T12:49:56.9340863Z 
2025-08-17T12:49:56.9341007Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T12:49:56.9341273Z 
2025-08-17T12:49:56.9341426Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T12:49:56.9341696Z 
2025-08-17T12:49:56.9341825Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T12:49:56.9342059Z 
2025-08-17T12:49:56.9342274Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T12:49:56.9342597Z 
2025-08-17T12:49:56.9342782Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T12:49:56.9343431Z 
2025-08-17T12:49:56.9343596Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T12:49:56.9343875Z 
2025-08-17T12:49:56.9344023Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T12:49:56.9344274Z 
2025-08-17T12:49:56.9344433Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T12:49:56.9344703Z 
2025-08-17T12:49:56.9344847Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T12:49:56.9345094Z 
2025-08-17T12:49:56.9345261Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T12:49:56.9345546Z 
2025-08-17T12:49:56.9345693Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T12:49:56.9345954Z 
2025-08-17T12:49:56.9346122Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T12:49:56.9346341Z 
2025-08-17T12:49:56.9346456Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T12:49:56.9346665Z 
2025-08-17T12:49:56.9346798Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T12:49:56.9347213Z 
2025-08-17T12:49:56.9347318Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T12:49:56.9347507Z 
2025-08-17T12:49:56.9347754Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T12:49:56.9347956Z 
2025-08-17T12:49:56.9348069Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T12:49:56.9348257Z 
2025-08-17T12:49:56.9348368Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T12:49:56.9348562Z 
2025-08-17T12:49:56.9348658Z # api.migrations.versions.0001\_baseline
2025-08-17T12:49:56.9348825Z 
2025-08-17T12:49:56.9348914Z <a id="api.migrations.versions"></a>
2025-08-17T12:49:56.9349081Z 
2025-08-17T12:49:56.9349163Z # api.migrations.versions
2025-08-17T12:49:56.9349291Z 
2025-08-17T12:49:56.9349382Z <a id="api.migrations"></a>
2025-08-17T12:49:56.9349514Z 
2025-08-17T12:49:56.9349582Z # api.migrations
2025-08-17T12:49:56.9349693Z 
2025-08-17T12:49:56.9349761Z <a id="api.db"></a>
2025-08-17T12:49:56.9349869Z 
2025-08-17T12:49:56.9349945Z # api.db
2025-08-17T12:49:56.9350039Z 
2025-08-17T12:49:56.9350120Z <a id="api.routes.stats"></a>
2025-08-17T12:49:56.9350259Z 
2025-08-17T12:49:56.9350335Z # api.routes.stats
2025-08-17T12:49:56.9350442Z 
2025-08-17T12:49:56.9350530Z <a id="api.routes.stats.kpi"></a>
2025-08-17T12:49:56.9350681Z 
2025-08-17T12:49:56.9350752Z #### kpi
2025-08-17T12:49:56.9350837Z 
2025-08-17T12:49:56.9350902Z ```python
2025-08-17T12:49:56.9351084Z @router.get("/stats/kpi")
2025-08-17T12:49:56.9351330Z def kpi() -> List[Dict[str, int]]
2025-08-17T12:49:56.9351539Z ```
2025-08-17T12:49:56.9351623Z 
2025-08-17T12:49:56.9351708Z Return KPI metrics (mock).
2025-08-17T12:49:56.9351836Z 
2025-08-17T12:49:56.9351937Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T12:49:56.9352118Z 
2025-08-17T12:49:56.9352197Z #### roi\_by\_vendor
2025-08-17T12:49:56.9352309Z 
2025-08-17T12:49:56.9352373Z ```python
2025-08-17T12:49:56.9352553Z @router.get("/stats/roi_by_vendor")
2025-08-17T12:49:56.9352791Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T12:49:56.9353029Z ```
2025-08-17T12:49:56.9353110Z 
2025-08-17T12:49:56.9353195Z Return ROI percent by vendor.
2025-08-17T12:49:56.9353330Z 
2025-08-17T12:49:56.9353420Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T12:49:56.9353585Z 
2025-08-17T12:49:56.9353657Z #### roi\_trend
2025-08-17T12:49:56.9353757Z 
2025-08-17T12:49:56.9353819Z ```python
2025-08-17T12:49:56.9353987Z @router.get("/stats/roi_trend")
2025-08-17T12:49:56.9354218Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T12:49:56.9354450Z ```
2025-08-17T12:49:56.9354531Z 
2025-08-17T12:49:56.9354612Z Return 30-day ROI trend.
2025-08-17T12:49:56.9354735Z 
2025-08-17T12:49:56.9354814Z <a id="api.routes.roi"></a>
2025-08-17T12:49:56.9354943Z 
2025-08-17T12:49:56.9355017Z # api.routes.roi
2025-08-17T12:49:56.9355140Z 
2025-08-17T12:49:56.9355228Z <a id="api.routes.health"></a>
2025-08-17T12:49:56.9355474Z 
2025-08-17T12:49:56.9355545Z # api.routes.health
2025-08-17T12:49:56.9355653Z 
2025-08-17T12:49:56.9355753Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T12:49:56.9356046Z 
2025-08-17T12:49:56.9356112Z #### MAX\_SKEW
2025-08-17T12:49:56.9356214Z 
2025-08-17T12:49:56.9356276Z seconds
2025-08-17T12:49:56.9356358Z 
2025-08-17T12:49:56.9356454Z <a id="api.routes.health.health"></a>
2025-08-17T12:49:56.9356614Z 
2025-08-17T12:49:56.9356675Z #### health
2025-08-17T12:49:56.9356763Z 
2025-08-17T12:49:56.9356831Z ```python
2025-08-17T12:49:56.9357018Z @router.get("/health", include_in_schema=False)
2025-08-17T12:49:56.9357392Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T12:49:56.9357834Z ```
2025-08-17T12:49:56.9357922Z 
2025-08-17T12:49:56.9358036Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T12:49:56.9358228Z 
2025-08-17T12:49:56.9358322Z <a id="api.routes.repository"></a>
2025-08-17T12:49:56.9358477Z 
2025-08-17T12:49:56.9358554Z # api.routes.repository
2025-08-17T12:49:56.9358674Z 
2025-08-17T12:49:56.9358753Z <a id="api.routes"></a>
2025-08-17T12:49:56.9359019Z 
2025-08-17T12:49:56.9359083Z # api.routes
2025-08-17T12:49:56.9359181Z 
2025-08-17T12:49:56.9359258Z <a id="api.models.fee"></a>
2025-08-17T12:49:56.9359389Z 
2025-08-17T12:49:56.9359459Z # api.models.fee
2025-08-17T12:49:56.9359562Z 
2025-08-17T12:49:56.9359633Z <a id="api.models"></a>
2025-08-17T12:49:56.9359744Z 
2025-08-17T12:49:56.9359812Z # api.models
2025-08-17T12:49:56.9359903Z 
2025-08-17T12:49:56.9359982Z <a id="api.roi_repository"></a>
2025-08-17T12:49:56.9360123Z 
2025-08-17T12:49:56.9360194Z # api.roi\_repository
2025-08-17T12:49:56.9360322Z 
2025-08-17T12:49:56.9360394Z <a id="api.main"></a>
2025-08-17T12:49:56.9360512Z 
2025-08-17T12:49:56.9360574Z # api.main
2025-08-17T12:49:56.9360666Z 
2025-08-17T12:49:56.9360749Z <a id="api.main.ready"></a>
2025-08-17T12:49:56.9360880Z 
2025-08-17T12:49:56.9360944Z #### ready
2025-08-17T12:49:56.9361036Z 
2025-08-17T12:49:56.9361099Z ```python
2025-08-17T12:49:56.9361360Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T12:49:56.9361808Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T12:49:56.9362154Z                                                                       str]
2025-08-17T12:49:56.9362384Z ```
2025-08-17T12:49:56.9362466Z 
2025-08-17T12:49:56.9362569Z Return 200 only when migrations are at head.
2025-08-17T12:49:56.9362743Z 
2025-08-17T12:49:56.9362817Z <a id="api.config"></a>
2025-08-17T12:49:56.9362941Z 
2025-08-17T12:49:56.9363008Z # api.config
2025-08-17T12:49:56.9363101Z 
2025-08-17T12:49:56.9363167Z <a id="etl"></a>
2025-08-17T12:49:56.9363278Z 
2025-08-17T12:49:56.9363337Z # etl
2025-08-17T12:49:56.9363424Z 
2025-08-17T12:49:56.9363510Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T12:49:56.9363657Z 
2025-08-17T12:49:56.9363733Z # etl.fba\_fee\_ingestor
2025-08-17T12:49:56.9363859Z 
2025-08-17T12:49:56.9363944Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T12:49:56.9364084Z 
2025-08-17T12:49:56.9364158Z # etl.sp\_fees\_ingestor
2025-08-17T12:49:56.9364293Z 
2025-08-17T12:49:56.9364374Z <a id="etl.keepa_ingestor"></a>
2025-08-17T12:49:56.9364512Z 
2025-08-17T12:49:56.9364588Z # etl.keepa\_ingestor
2025-08-17T12:49:56.9364701Z 
2025-08-17T12:49:56.9364766Z <a id="etl.db"></a>
2025-08-17T12:49:56.9364871Z 
2025-08-17T12:49:56.9364939Z # etl.db
2025-08-17T12:49:56.9365026Z 
2025-08-17T12:49:56.9365132Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T12:49:56.9365320Z 
2025-08-17T12:49:56.9365408Z # etl.dialects.amazon\_reimbursements
2025-08-17T12:49:56.9365568Z 
2025-08-17T12:49:56.9365655Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T12:49:56.9365823Z 
2025-08-17T12:49:56.9365903Z # etl.dialects.amazon\_returns
2025-08-17T12:49:56.9366041Z 
2025-08-17T12:49:56.9366121Z <a id="etl.dialects"></a>
2025-08-17T12:49:56.9366243Z 
2025-08-17T12:49:56.9366307Z # etl.dialects
2025-08-17T12:49:56.9366411Z 
2025-08-17T12:49:56.9366477Z <a id="ingest"></a>
2025-08-17T12:49:56.9366579Z 
2025-08-17T12:49:56.9366642Z # ingest
2025-08-17T12:49:56.9366737Z 
2025-08-17T12:49:56.9366943Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T12:49:56.9367099Z 
2025-08-17T12:49:56.9367181Z # ingest.tests.test\_smoke
2025-08-17T12:49:56.9367307Z 
2025-08-17T12:49:56.9367382Z <a id="ingest.tests"></a>
2025-08-17T12:49:56.9367508Z 
2025-08-17T12:49:56.9367694Z # ingest.tests
2025-08-17T12:49:56.9367793Z 
2025-08-17T12:49:56.9367873Z <a id="ingest.upload_router"></a>
2025-08-17T12:49:56.9368023Z 
2025-08-17T12:49:56.9368096Z # ingest.upload\_router
2025-08-17T12:49:56.9368214Z 
2025-08-17T12:49:56.9368298Z <a id="ingest.email_watcher"></a>
2025-08-17T12:49:56.9368437Z 
2025-08-17T12:49:56.9368507Z # ingest.email\_watcher
2025-08-17T12:49:56.9368621Z 
2025-08-17T12:49:56.9368710Z <a id="ingest.email_watcher.main"></a>
2025-08-17T12:49:56.9368871Z 
2025-08-17T12:49:56.9368941Z #### main
2025-08-17T12:49:56.9369027Z 
2025-08-17T12:49:56.9369092Z ```python
2025-08-17T12:49:56.9369260Z def main() -> dict[str, str]
2025-08-17T12:49:56.9369447Z ```
2025-08-17T12:49:56.9369535Z 
2025-08-17T12:49:56.9369794Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T12:49:56.9370014Z 
2025-08-17T12:49:56.9370151Z Returns {"status": "success"} when processing completes.
2025-08-17T12:49:56.9370360Z 
2025-08-17T12:49:56.9370444Z <a id="ingest.ingest_router"></a>
2025-08-17T12:49:56.9370588Z 
2025-08-17T12:49:56.9370666Z # ingest.ingest\_router
2025-08-17T12:49:56.9370782Z 
2025-08-17T12:49:56.9370856Z <a id="logistics_etl"></a>
2025-08-17T12:49:56.9370989Z 
2025-08-17T12:49:56.9371055Z # logistics\_etl
2025-08-17T12:49:56.9371157Z 
2025-08-17T12:49:56.9371233Z Daily logistics ETL job.
2025-08-17T12:49:56.9371357Z 
2025-08-17T12:49:56.9371439Z <a id="logistics_etl.__main__"></a>
2025-08-17T12:49:56.9371590Z 
2025-08-17T12:49:56.9371672Z # logistics\_etl.\_\_main\_\_
2025-08-17T12:49:56.9371807Z 
2025-08-17T12:49:56.9371886Z <a id="logistics_etl.dsn"></a>
2025-08-17T12:49:56.9372025Z 
2025-08-17T12:49:56.9372093Z # logistics\_etl.dsn
2025-08-17T12:49:56.9372204Z 
2025-08-17T12:49:56.9372328Z Local DSN builder to avoid cross-service dependency.
2025-08-17T12:49:56.9372528Z 
2025-08-17T12:49:56.9372617Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T12:49:56.9372779Z 
2025-08-17T12:49:56.9372850Z #### build\_dsn
2025-08-17T12:49:56.9372949Z 
2025-08-17T12:49:56.9373013Z ```python
2025-08-17T12:49:56.9373192Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:49:56.9373411Z ```
2025-08-17T12:49:56.9373499Z 
2025-08-17T12:49:56.9373637Z Return a Postgres DSN assembled from environment variables.
2025-08-17T12:49:56.9373855Z 
2025-08-17T12:49:56.9374015Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T12:49:56.9374410Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T12:49:56.9374752Z error when any required variable is missing.
2025-08-17T12:49:56.9374924Z 
2025-08-17T12:49:56.9375017Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T12:49:56.9375193Z 
2025-08-17T12:49:56.9375276Z # logistics\_etl.tests.conftest
2025-08-17T12:49:56.9375430Z 
2025-08-17T12:49:56.9375534Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T12:49:56.9375725Z 
2025-08-17T12:49:56.9375814Z # logistics\_etl.tests.test\_repository
2025-08-17T12:49:56.9375976Z 
2025-08-17T12:49:56.9376074Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T12:49:56.9376248Z 
2025-08-17T12:49:56.9376331Z # logistics\_etl.tests.test\_cron
2025-08-17T12:49:56.9376484Z 
2025-08-17T12:49:56.9376581Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T12:49:56.9376752Z 
2025-08-17T12:49:56.9376835Z # logistics\_etl.tests.test\_imports
2025-08-17T12:49:56.9376995Z 
2025-08-17T12:49:56.9377088Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T12:49:56.9377254Z 
2025-08-17T12:49:56.9377343Z # logistics\_etl.tests.test\_smoke
2025-08-17T12:49:56.9377489Z 
2025-08-17T12:49:56.9377835Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T12:49:56.9378024Z 
2025-08-17T12:49:56.9378136Z # logistics\_etl.tests.test\_client
2025-08-17T12:49:56.9378295Z 
2025-08-17T12:49:56.9378504Z <a id="logistics_etl.tests"></a>
2025-08-17T12:49:56.9378651Z 
2025-08-17T12:49:56.9378722Z # logistics\_etl.tests
2025-08-17T12:49:56.9378837Z 
2025-08-17T12:49:56.9378919Z <a id="logistics_etl.flow"></a>
2025-08-17T12:49:56.9379055Z 
2025-08-17T12:49:56.9379124Z # logistics\_etl.flow
2025-08-17T12:49:56.9379241Z 
2025-08-17T12:49:56.9379321Z <a id="logistics_etl.client"></a>
2025-08-17T12:49:56.9379462Z 
2025-08-17T12:49:56.9379535Z # logistics\_etl.client
2025-08-17T12:49:56.9379656Z 
2025-08-17T12:49:56.9379734Z <a id="logistics_etl.cron"></a>
2025-08-17T12:49:56.9379871Z 
2025-08-17T12:49:56.9379946Z # logistics\_etl.cron
2025-08-17T12:49:56.9380057Z 
2025-08-17T12:49:56.9380132Z <a id="logistics_etl.db"></a>
2025-08-17T12:49:56.9380269Z 
2025-08-17T12:49:56.9380337Z # logistics\_etl.db
2025-08-17T12:49:56.9380443Z 
2025-08-17T12:49:56.9380529Z <a id="logistics_etl.repository"></a>
2025-08-17T12:49:56.9380692Z 
2025-08-17T12:49:56.9380769Z # logistics\_etl.repository
2025-08-17T12:49:56.9381013Z 
2025-08-17T12:49:56.9381089Z <a id="alert_bot"></a>
2025-08-17T12:49:56.9381198Z 
2025-08-17T12:49:56.9381260Z # alert\_bot
2025-08-17T12:49:56.9381353Z 
2025-08-17T12:49:56.9381443Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T12:49:56.9381637Z 
2025-08-17T12:49:56.9381717Z # alert\_bot.tests.test\_smoke
2025-08-17T12:49:56.9381852Z 
2025-08-17T12:49:56.9381932Z <a id="alert_bot.tests"></a>
2025-08-17T12:49:56.9382063Z 
2025-08-17T12:49:56.9382129Z # alert\_bot.tests
2025-08-17T12:49:56.9382232Z 
2025-08-17T12:49:56.9382315Z <a id="alert_bot.alert_bot"></a>
2025-08-17T12:49:56.9382456Z 
2025-08-17T12:49:56.9382527Z # alert\_bot.alert\_bot
2025-08-17T12:49:56.9382651Z 
2025-08-17T12:49:56.9382726Z <a id="alert_bot.rules"></a>
2025-08-17T12:49:56.9382853Z 
2025-08-17T12:49:56.9382919Z # alert\_bot.rules
2025-08-17T12:49:56.9383025Z 
2025-08-17T12:49:56.9383092Z <a id="common"></a>
2025-08-17T12:49:56.9383195Z 
2025-08-17T12:49:56.9383261Z # common
2025-08-17T12:49:56.9383346Z 
2025-08-17T12:49:56.9383429Z <a id="common.dsn"></a>
2025-08-17T12:49:56.9383549Z 
2025-08-17T12:49:56.9383611Z # common.dsn
2025-08-17T12:49:56.9383703Z 
2025-08-17T12:49:56.9383785Z <a id="common.dsn.build_dsn"></a>
2025-08-17T12:49:56.9383937Z 
2025-08-17T12:49:56.9384001Z #### build\_dsn
2025-08-17T12:49:56.9384099Z 
2025-08-17T12:49:56.9384167Z ```python
2025-08-17T12:49:56.9384336Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:49:56.9384561Z ```
2025-08-17T12:49:56.9384644Z 
2025-08-17T12:49:56.9384770Z Return a Postgres DSN, validating required variables.
2025-08-17T12:49:56.9384969Z 
2025-08-17T12:49:56.9385149Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T12:49:56.9385581Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T12:49:56.9385986Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T12:49:56.9386287Z missing.
2025-08-17T12:49:56.9386374Z 
2025-08-17T12:49:56.9386461Z <a id="common.models_vendor"></a>
2025-08-17T12:49:56.9386617Z 
2025-08-17T12:49:56.9386690Z # common.models\_vendor
2025-08-17T12:49:56.9386814Z 
2025-08-17T12:49:56.9386904Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T12:49:56.9387070Z 
2025-08-17T12:49:56.9387135Z ## Vendor Objects
2025-08-17T12:49:56.9387245Z 
2025-08-17T12:49:56.9387306Z ```python
2025-08-17T12:49:56.9387463Z class Vendor(Base)
2025-08-17T12:49:56.9387737Z ```
2025-08-17T12:49:56.9387818Z 
2025-08-17T12:49:56.9387902Z Vendor of inventory items.
2025-08-17T12:49:56.9388031Z 
2025-08-17T12:49:56.9388131Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T12:49:56.9388313Z 
2025-08-17T12:49:56.9388386Z ## VendorPrice Objects
2025-08-17T12:49:56.9388499Z 
2025-08-17T12:49:56.9388567Z ```python
2025-08-17T12:49:56.9388725Z class VendorPrice(Base)
2025-08-17T12:49:56.9388901Z ```
2025-08-17T12:49:56.9388980Z 
2025-08-17T12:49:56.9389078Z Association table linking vendors to pricing.
2025-08-17T12:49:56.9389257Z 
2025-08-17T12:49:56.9389344Z <a id="common.db_url"></a>
2025-08-17T12:49:56.9389596Z 
2025-08-17T12:49:56.9389663Z # common.db\_url
2025-08-17T12:49:56.9389772Z 
2025-08-17T12:49:56.9389854Z <a id="common.db_url.build_url"></a>
2025-08-17T12:49:56.9390005Z 
2025-08-17T12:49:56.9390072Z #### build\_url
2025-08-17T12:49:56.9390170Z 
2025-08-17T12:49:56.9390232Z ```python
2025-08-17T12:49:56.9390414Z def build_url(async_: bool = True) -> str
2025-08-17T12:49:56.9390638Z ```
2025-08-17T12:49:56.9390722Z 
2025-08-17T12:49:56.9390820Z Return Postgres DSN from env or PG_* parts.
2025-08-17T12:49:56.9390991Z 
2025-08-17T12:49:56.9391069Z <a id="common.keepa"></a>
2025-08-17T12:49:56.9391201Z 
2025-08-17T12:49:56.9391268Z # common.keepa
2025-08-17T12:49:56.9391368Z 
2025-08-17T12:49:56.9391444Z <a id="common.llm"></a>
2025-08-17T12:49:56.9391558Z 
2025-08-17T12:49:56.9391620Z # common.llm
2025-08-17T12:49:56.9391715Z 
2025-08-17T12:49:56.9391800Z <a id="common.settings"></a>
2025-08-17T12:49:56.9391934Z 
2025-08-17T12:49:56.9392001Z # common.settings
2025-08-17T12:49:56.9392228Z 
2025-08-17T12:49:56.9392298Z <a id="common.db"></a>
2025-08-17T12:49:56.9392411Z 
2025-08-17T12:49:56.9392472Z # common.db
2025-08-17T12:49:56.9392564Z 
2025-08-17T12:49:56.9392663Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T12:49:56.9392829Z 
2025-08-17T12:49:56.9392910Z #### build\_sqlalchemy\_url
2025-08-17T12:49:56.9393036Z 
2025-08-17T12:49:56.9393099Z ```python
2025-08-17T12:49:56.9393271Z def build_sqlalchemy_url() -> str
2025-08-17T12:49:56.9393469Z ```
2025-08-17T12:49:56.9393553Z 
2025-08-17T12:49:56.9393645Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T12:49:56.9393810Z 
2025-08-17T12:49:56.9393905Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T12:49:56.9394067Z 
2025-08-17T12:49:56.9394142Z #### build\_asyncpg\_dsn
2025-08-17T12:49:56.9394263Z 
2025-08-17T12:49:56.9394330Z ```python
2025-08-17T12:49:56.9394495Z def build_asyncpg_dsn() -> str
2025-08-17T12:49:56.9394695Z ```
2025-08-17T12:49:56.9394774Z 
2025-08-17T12:49:56.9394906Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T12:49:56.9395128Z 
2025-08-17T12:49:56.9395213Z <a id="common.db.refresh_mvs"></a>
2025-08-17T12:49:56.9395360Z 
2025-08-17T12:49:56.9395431Z #### refresh\_mvs
2025-08-17T12:49:56.9395532Z 
2025-08-17T12:49:56.9395592Z ```python
2025-08-17T12:49:56.9395787Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T12:49:56.9396051Z ```
2025-08-17T12:49:56.9396133Z 
2025-08-17T12:49:56.9396264Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T12:49:56.9396484Z 
2025-08-17T12:49:56.9396562Z <a id="common.config"></a>
2025-08-17T12:49:56.9396691Z 
2025-08-17T12:49:56.9396763Z # common.config
2025-08-17T12:49:56.9396862Z 
2025-08-17T12:49:56.9396935Z <a id="common.base"></a>
2025-08-17T12:49:56.9397053Z 
2025-08-17T12:49:56.9397123Z # common.base
2025-08-17T12:49:56.9397218Z 
2025-08-17T12:49:56.9397299Z <a id="common.base.Base"></a>
2025-08-17T12:49:56.9397443Z 
2025-08-17T12:49:56.9397506Z ## Base Objects
2025-08-17T12:49:56.9397721Z 
2025-08-17T12:49:56.9397782Z ```python
2025-08-17T12:49:56.9397950Z class Base(DeclarativeBase)
2025-08-17T12:49:56.9398143Z ```
2025-08-17T12:49:56.9398221Z 
2025-08-17T12:49:56.9398304Z Base class for SQLAlchemy models.
2025-08-17T12:49:56.9398450Z 
2025-08-17T12:49:56.9398526Z <a id="repricer"></a>
2025-08-17T12:49:56.9398637Z 
2025-08-17T12:49:56.9398700Z # repricer
2025-08-17T12:49:56.9398793Z 
2025-08-17T12:49:56.9398876Z <a id="repricer.app.schemas"></a>
2025-08-17T12:49:56.9399021Z 
2025-08-17T12:49:56.9399096Z # repricer.app.schemas
2025-08-17T12:49:56.9399217Z 
2025-08-17T12:49:56.9399298Z <a id="repricer.app.deps"></a>
2025-08-17T12:49:56.9399433Z 
2025-08-17T12:49:56.9399510Z # repricer.app.deps
2025-08-17T12:49:56.9399618Z 
2025-08-17T12:49:56.9399747Z Placeholder module for Keepa / SP-API clients.
2025-08-17T12:49:56.9399935Z 
2025-08-17T12:49:56.9400015Z <a id="repricer.app.logic"></a>
2025-08-17T12:49:56.9400152Z 
2025-08-17T12:49:56.9400226Z # repricer.app.logic
2025-08-17T12:49:56.9400467Z 
2025-08-17T12:49:56.9400567Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T12:49:56.9400747Z 
2025-08-17T12:49:56.9400816Z #### MIN\_MARGIN
2025-08-17T12:49:56.9400916Z 
2025-08-17T12:49:56.9400977Z 15 % ROI
2025-08-17T12:49:56.9401066Z 
2025-08-17T12:49:56.9401169Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T12:49:56.9401349Z 
2025-08-17T12:49:56.9406198Z #### compute\_price
2025-08-17T12:49:56.9406400Z 
2025-08-17T12:49:56.9406513Z ```python
2025-08-17T12:49:56.9406942Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T12:49:56.9407259Z ```
2025-08-17T12:49:56.9407350Z 
2025-08-17T12:49:56.9407457Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T12:49:56.9407952Z Replace with real competitive logic later.
2025-08-17T12:49:56.9408140Z 
2025-08-17T12:49:56.9408225Z <a id="repricer.app.main"></a>
2025-08-17T12:49:56.9408369Z 
2025-08-17T12:49:56.9408445Z # repricer.app.main
2025-08-17T12:49:56.9408555Z 
2025-08-17T12:49:56.9408804Z <a id="repricer.app"></a>
2025-08-17T12:49:56.9408949Z 
2025-08-17T12:49:56.9409016Z # repricer.app
2025-08-17T12:49:56.9409117Z 
2025-08-17T12:49:56.9409210Z <a id="repricer.tests.test_imports"></a>
2025-08-17T12:49:56.9409380Z 
2025-08-17T12:49:56.9409460Z # repricer.tests.test\_imports
2025-08-17T12:49:56.9409596Z 
2025-08-17T12:49:56.9409689Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T12:49:56.9409848Z 
2025-08-17T12:49:56.9409931Z # repricer.tests.test\_smoke
2025-08-17T12:49:56.9410067Z 
2025-08-17T12:49:56.9410150Z <a id="repricer.tests"></a>
2025-08-17T12:49:56.9410281Z 
2025-08-17T12:49:56.9410347Z # repricer.tests
2025-08-17T12:49:56.9410455Z 
2025-08-17T12:49:56.9410518Z <a id="db"></a>
2025-08-17T12:49:56.9410615Z 
2025-08-17T12:49:56.9410680Z # db
2025-08-17T12:49:56.9410762Z 
2025-08-17T12:49:56.9410838Z <a id="db.utils.views"></a>
2025-08-17T12:49:56.9410961Z 
2025-08-17T12:49:56.9411033Z # db.utils.views
2025-08-17T12:49:56.9411133Z 
2025-08-17T12:49:56.9411224Z <a id="db.utils.views.replace_view"></a>
2025-08-17T12:49:56.9411411Z 
2025-08-17T12:49:56.9411478Z #### replace\_view
2025-08-17T12:49:56.9411583Z 
2025-08-17T12:49:56.9411645Z ```python
2025-08-17T12:49:56.9411850Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T12:49:56.9412097Z ```
2025-08-17T12:49:56.9412179Z 
2025-08-17T12:49:56.9412264Z Drop and recreate a SQL view atomically.
2025-08-17T12:49:56.9412427Z 
2025-08-17T12:49:56.9412504Z <a id="db.utils"></a>
2025-08-17T12:49:56.9412615Z 
2025-08-17T12:49:56.9412719Z # db.utils
2025-08-17T12:49:56.9412805Z 
2025-08-17T12:49:56.9412882Z <a id="price_importer"></a>
2025-08-17T12:49:56.9413019Z 
2025-08-17T12:49:56.9413087Z # price\_importer
2025-08-17T12:49:56.9413188Z 
2025-08-17T12:49:56.9413298Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T12:49:56.9413483Z 
2025-08-17T12:49:56.9413570Z # price\_importer.services\_common.dsn
2025-08-17T12:49:56.9413738Z 
2025-08-17T12:49:56.9413866Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T12:49:56.9414082Z 
2025-08-17T12:49:56.9414147Z #### build\_dsn
2025-08-17T12:49:56.9414251Z 
2025-08-17T12:49:56.9414312Z ```python
2025-08-17T12:49:56.9414482Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:49:56.9414692Z ```
2025-08-17T12:49:56.9414771Z 
2025-08-17T12:49:56.9414844Z Return safe DSN.
2025-08-17T12:49:56.9414944Z 
2025-08-17T12:49:56.9415289Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T12:49:56.9415492Z 
2025-08-17T12:49:56.9415615Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T12:49:56.9415818Z 
2025-08-17T12:49:56.9415924Z # price\_importer.services\_common.models\_vendor
2025-08-17T12:49:56.9416113Z 
2025-08-17T12:49:56.9416219Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T12:49:56.9416399Z 
2025-08-17T12:49:56.9416497Z # price\_importer.services\_common.db\_url
2025-08-17T12:49:56.9416667Z 
2025-08-17T12:49:56.9416798Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T12:49:56.9417015Z 
2025-08-17T12:49:56.9417232Z #### build\_url
2025-08-17T12:49:56.9417330Z 
2025-08-17T12:49:56.9417398Z ```python
2025-08-17T12:49:56.9417794Z def build_url(async_: bool = True) -> str
2025-08-17T12:49:56.9418055Z ```
2025-08-17T12:49:56.9418134Z 
2025-08-17T12:49:56.9418231Z Return Postgres DSN from env or PG_* parts.
2025-08-17T12:49:56.9418406Z 
2025-08-17T12:49:56.9418509Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T12:49:56.9418693Z 
2025-08-17T12:49:56.9418786Z # price\_importer.services\_common.keepa
2025-08-17T12:49:56.9418955Z 
2025-08-17T12:49:56.9419053Z <a id="price_importer.services_common.llm"></a>
2025-08-17T12:49:56.9419231Z 
2025-08-17T12:49:56.9419326Z # price\_importer.services\_common.llm
2025-08-17T12:49:56.9419486Z 
2025-08-17T12:49:56.9419598Z <a id="price_importer.services_common.settings"></a>
2025-08-17T12:49:56.9419794Z 
2025-08-17T12:49:56.9419888Z # price\_importer.services\_common.settings
2025-08-17T12:49:56.9420053Z 
2025-08-17T12:49:56.9420150Z <a id="price_importer.services_common.db"></a>
2025-08-17T12:49:56.9420463Z 
2025-08-17T12:49:56.9420549Z # price\_importer.services\_common.db
2025-08-17T12:49:56.9420704Z 
2025-08-17T12:49:56.9420862Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T12:49:56.9421096Z 
2025-08-17T12:49:56.9421173Z #### build\_sqlalchemy\_url
2025-08-17T12:49:56.9421309Z 
2025-08-17T12:49:56.9421371Z ```python
2025-08-17T12:49:56.9421535Z def build_sqlalchemy_url() -> str
2025-08-17T12:49:56.9421743Z ```
2025-08-17T12:49:56.9421823Z 
2025-08-17T12:49:56.9421921Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T12:49:56.9422095Z 
2025-08-17T12:49:56.9422234Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T12:49:56.9422458Z 
2025-08-17T12:49:56.9422536Z #### build\_asyncpg\_dsn
2025-08-17T12:49:56.9422659Z 
2025-08-17T12:49:56.9422719Z ```python
2025-08-17T12:49:56.9422887Z def build_asyncpg_dsn() -> str
2025-08-17T12:49:56.9423076Z ```
2025-08-17T12:49:56.9423161Z 
2025-08-17T12:49:56.9423292Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T12:49:56.9423505Z 
2025-08-17T12:49:56.9423633Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T12:49:56.9423838Z 
2025-08-17T12:49:56.9423903Z #### refresh\_mvs
2025-08-17T12:49:56.9424012Z 
2025-08-17T12:49:56.9424073Z ```python
2025-08-17T12:49:56.9424259Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T12:49:56.9424504Z ```
2025-08-17T12:49:56.9424588Z 
2025-08-17T12:49:56.9424718Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T12:49:56.9424937Z 
2025-08-17T12:49:56.9425028Z <a id="price_importer.services_common"></a>
2025-08-17T12:49:56.9425194Z 
2025-08-17T12:49:56.9425285Z # price\_importer.services\_common
2025-08-17T12:49:56.9425434Z 
2025-08-17T12:49:56.9425536Z <a id="price_importer.services_common.base"></a>
2025-08-17T12:49:56.9425724Z 
2025-08-17T12:49:56.9425812Z # price\_importer.services\_common.base
2025-08-17T12:49:56.9425973Z 
2025-08-17T12:49:56.9426062Z <a id="price_importer.normaliser"></a>
2025-08-17T12:49:56.9426239Z 
2025-08-17T12:49:56.9426321Z # price\_importer.normaliser
2025-08-17T12:49:56.9426457Z 
2025-08-17T12:49:56.9426564Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T12:49:56.9426743Z 
2025-08-17T12:49:56.9426830Z # price\_importer.common.models\_vendor
2025-08-17T12:49:56.9426993Z 
2025-08-17T12:49:56.9427081Z <a id="price_importer.common.db_url"></a>
2025-08-17T12:49:56.9427249Z 
2025-08-17T12:49:56.9427332Z # price\_importer.common.db\_url
2025-08-17T12:49:56.9427480Z 
2025-08-17T12:49:56.9427709Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T12:49:56.9427891Z 
2025-08-17T12:49:56.9427958Z #### make\_dsn
2025-08-17T12:49:56.9428055Z 
2025-08-17T12:49:56.9428114Z ```python
2025-08-17T12:49:56.9428283Z def make_dsn(async_: bool = False) -> str
2025-08-17T12:49:56.9428494Z ```
2025-08-17T12:49:56.9428581Z 
2025-08-17T12:49:56.9428695Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T12:49:56.9428889Z 
2025-08-17T12:49:56.9429174Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T12:49:56.9429359Z 
2025-08-17T12:49:56.9429421Z #### build\_url
2025-08-17T12:49:56.9429518Z 
2025-08-17T12:49:56.9429582Z ```python
2025-08-17T12:49:56.9429747Z def build_url(async_: bool = False) -> str
2025-08-17T12:49:56.9429993Z ```
2025-08-17T12:49:56.9430072Z 
2025-08-17T12:49:56.9430189Z Return Postgres DSN built from environment variables.
2025-08-17T12:49:56.9430388Z 
2025-08-17T12:49:56.9430471Z <a id="price_importer.common"></a>
2025-08-17T12:49:56.9430621Z 
2025-08-17T12:49:56.9430703Z # price\_importer.common
2025-08-17T12:49:56.9430827Z 
2025-08-17T12:49:56.9430914Z <a id="price_importer.common.base"></a>
2025-08-17T12:49:56.9431079Z 
2025-08-17T12:49:56.9431161Z # price\_importer.common.base
2025-08-17T12:49:56.9431299Z 
2025-08-17T12:49:56.9431393Z <a id="price_importer.tests.conftest"></a>
2025-08-17T12:49:56.9431564Z 
2025-08-17T12:49:56.9431649Z # price\_importer.tests.conftest
2025-08-17T12:49:56.9431903Z 
2025-08-17T12:49:56.9432005Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T12:49:56.9432177Z 
2025-08-17T12:49:56.9432261Z # price\_importer.tests.test\_reader
2025-08-17T12:49:56.9432421Z 
2025-08-17T12:49:56.9432519Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T12:49:56.9432691Z 
2025-08-17T12:49:56.9432778Z # price\_importer.tests.test\_imports
2025-08-17T12:49:56.9432940Z 
2025-08-17T12:49:56.9433033Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T12:49:56.9433201Z 
2025-08-17T12:49:56.9433292Z # price\_importer.tests.test\_smoke
2025-08-17T12:49:56.9433443Z 
2025-08-17T12:49:56.9433545Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T12:49:56.9433731Z 
2025-08-17T12:49:56.9433818Z # price\_importer.tests.test\_normaliser
2025-08-17T12:49:56.9433978Z 
2025-08-17T12:49:56.9434059Z <a id="price_importer.tests"></a>
2025-08-17T12:49:56.9434211Z 
2025-08-17T12:49:56.9434285Z # price\_importer.tests
2025-08-17T12:49:56.9434403Z 
2025-08-17T12:49:56.9434496Z <a id="price_importer.reader"></a>
2025-08-17T12:49:56.9434647Z 
2025-08-17T12:49:56.9434724Z # price\_importer.reader
2025-08-17T12:49:56.9434851Z 
2025-08-17T12:49:56.9434944Z <a id="price_importer.reader.load_file"></a>
2025-08-17T12:49:56.9435111Z 
2025-08-17T12:49:56.9435175Z #### load\_file
2025-08-17T12:49:56.9435279Z 
2025-08-17T12:49:56.9435340Z ```python
2025-08-17T12:49:56.9435512Z def load_file(path: str | Path) -> Any
2025-08-17T12:49:56.9435728Z ```
2025-08-17T12:49:56.9435806Z 
2025-08-17T12:49:56.9435899Z Return DataFrame from CSV or Excel file.
2025-08-17T12:49:56.9436061Z 
2025-08-17T12:49:56.9436161Z Raises RuntimeError if pandas is unavailable.
2025-08-17T12:49:56.9436344Z 
2025-08-17T12:49:56.9436434Z <a id="price_importer.repository"></a>
2025-08-17T12:49:56.9436597Z 
2025-08-17T12:49:56.9436679Z # price\_importer.repository
2025-08-17T12:49:56.9436824Z 
2025-08-17T12:49:56.9436908Z <a id="price_importer.import"></a>
2025-08-17T12:49:56.9437057Z 
2025-08-17T12:49:56.9437143Z # price\_importer.import
2025-08-17T12:49:56.9437280Z 
2025-08-17T12:49:56.9437349Z <a id="fees_h10"></a>
2025-08-17T12:49:56.9437467Z 
2025-08-17T12:49:56.9437634Z # fees\_h10
2025-08-17T12:49:56.9437728Z 
2025-08-17T12:49:56.9437803Z <a id="fees_h10.worker"></a>
2025-08-17T12:49:56.9437938Z 
2025-08-17T12:49:56.9438004Z # fees\_h10.worker
2025-08-17T12:49:56.9438108Z 
2025-08-17T12:49:56.9438207Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T12:49:56.9438379Z 
2025-08-17T12:49:56.9438449Z #### list\_active\_asins
2025-08-17T12:49:56.9438569Z 
2025-08-17T12:49:56.9438635Z ```python
2025-08-17T12:49:56.9438805Z def list_active_asins() -> list[str]
2025-08-17T12:49:56.9439015Z ```
2025-08-17T12:49:56.9439095Z 
2025-08-17T12:49:56.9439203Z Return known ASINs or an empty list if unavailable.
2025-08-17T12:49:56.9439401Z 
2025-08-17T12:49:56.9439485Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T12:49:56.9439638Z 
2025-08-17T12:49:56.9439725Z # fees\_h10.tests.test\_smoke
2025-08-17T12:49:56.9439858Z 
2025-08-17T12:49:56.9440061Z <a id="fees_h10.tests"></a>
2025-08-17T12:49:56.9440194Z 
2025-08-17T12:49:56.9440259Z # fees\_h10.tests
2025-08-17T12:49:56.9440356Z 
2025-08-17T12:49:56.9440428Z <a id="fees_h10.client"></a>
2025-08-17T12:49:56.9440561Z 
2025-08-17T12:49:56.9440623Z # fees\_h10.client
2025-08-17T12:49:56.9440723Z 
2025-08-17T12:49:56.9440807Z <a id="fees_h10.repository"></a>
2025-08-17T12:49:56.9440948Z 
2025-08-17T12:49:56.9441017Z # fees\_h10.repository
2025-08-17T12:49:56.9441135Z 
2025-08-17T12:49:56.9441201Z <a id="emailer"></a>
2025-08-17T12:49:56.9441309Z 
2025-08-17T12:49:56.9441370Z # emailer
2025-08-17T12:49:56.9441462Z 
2025-08-17T12:49:56.9441559Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T12:49:56.9441733Z 
2025-08-17T12:49:56.9441826Z # emailer.tests.test\_import\_emailer
2025-08-17T12:49:56.9441984Z 
2025-08-17T12:49:56.9442064Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T12:49:56.9442214Z 
2025-08-17T12:49:56.9442301Z # emailer.tests.test\_smoke
2025-08-17T12:49:56.9442558Z 
2025-08-17T12:49:56.9442633Z <a id="emailer.tests"></a>
2025-08-17T12:49:56.9442766Z 
2025-08-17T12:49:56.9442840Z # emailer.tests
2025-08-17T12:49:56.9442955Z 
2025-08-17T12:49:56.9443054Z <a id="emailer.generate_body"></a>
2025-08-17T12:49:56.9443204Z 
2025-08-17T12:49:56.9443277Z # emailer.generate\_body
2025-08-17T12:49:56.9443397Z 
2025-08-17T12:49:56.9443471Z <a id="llm_server"></a>
2025-08-17T12:49:56.9443584Z 
2025-08-17T12:49:56.9443646Z # llm\_server
2025-08-17T12:49:56.9443746Z 
2025-08-17T12:49:56.9443820Z <a id="llm_server.app"></a>
2025-08-17T12:49:56.9443948Z 
2025-08-17T12:49:56.9444013Z # llm\_server.app
2025-08-17T12:49:56.9444121Z 
