2025-08-19T09:00:46.9760657Z ##[group]Run pydoc-markdown
2025-08-19T09:00:46.9760973Z [36;1mpydoc-markdown[0m
2025-08-19T09:00:46.9802007Z shell: /usr/bin/bash -e {0}
2025-08-19T09:00:46.9802238Z env:
2025-08-19T09:00:46.9802486Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:00:46.9802899Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T09:00:46.9803300Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:00:46.9803648Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:00:46.9803993Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:00:46.9804358Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T09:00:46.9804663Z ##[endgroup]
2025-08-19T09:00:47.3149732Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T09:00:47.3150448Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T09:00:47.3150921Z In "pydoc-markdown.yml"
2025-08-19T09:00:47.3151335Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T09:00:47.3152392Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T09:00:47.3153155Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T09:00:47.3153668Z 
2025-08-19T09:00:47.6302721Z <a id="__init__"></a>
2025-08-19T09:00:47.6303127Z 
2025-08-19T09:00:47.6303251Z # \_\_init\_\_
2025-08-19T09:00:47.6303442Z 
2025-08-19T09:00:47.6303572Z <a id="api"></a>
2025-08-19T09:00:47.6303768Z 
2025-08-19T09:00:47.6303880Z # api
2025-08-19T09:00:47.6304050Z 
2025-08-19T09:00:47.6304187Z <a id="api.errors"></a>
2025-08-19T09:00:47.6304414Z 
2025-08-19T09:00:47.6304532Z # api.errors
2025-08-19T09:00:47.6304729Z 
2025-08-19T09:00:47.6304874Z <a id="api.sentry_config"></a>
2025-08-19T09:00:47.6305142Z 
2025-08-19T09:00:47.6305279Z # api.sentry\_config
2025-08-19T09:00:47.6305490Z 
2025-08-19T09:00:47.6305656Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T09:00:47.6305964Z 
2025-08-19T09:00:47.6306115Z # api.tests.test\_sentry\_scrub
2025-08-19T09:00:47.6306431Z 
2025-08-19T09:00:47.6306591Z <a id="api.tests.test_errors_json"></a>
2025-08-19T09:00:47.6306909Z 
2025-08-19T09:00:47.6307052Z # api.tests.test\_errors\_json
2025-08-19T09:00:47.6307308Z 
2025-08-19T09:00:47.6307460Z <a id="api.tests.test_llm"></a>
2025-08-19T09:00:47.6307718Z 
2025-08-19T09:00:47.6307851Z # api.tests.test\_llm
2025-08-19T09:00:47.6308065Z 
2025-08-19T09:00:47.6308237Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T09:00:47.6308543Z 
2025-08-19T09:00:47.6308687Z # api.tests.test\_sentry\_event
2025-08-19T09:00:47.6308949Z 
2025-08-19T09:00:47.6309173Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T09:00:47.6309548Z 
2025-08-19T09:00:47.6309697Z ## DummyTransport Objects
2025-08-19T09:00:47.6309933Z 
2025-08-19T09:00:47.6310050Z ```python
2025-08-19T09:00:47.6310352Z class DummyTransport()
2025-08-19T09:00:47.6310679Z ```
2025-08-19T09:00:47.6310845Z 
2025-08-19T09:00:47.6311163Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T09:00:47.6312607Z 
2025-08-19T09:00:47.6312758Z #### capture\_envelope
2025-08-19T09:00:47.6313001Z 
2025-08-19T09:00:47.6313116Z ```python
2025-08-19T09:00:47.6313440Z def capture_envelope(envelope)
2025-08-19T09:00:47.6313804Z ```
2025-08-19T09:00:47.6313953Z 
2025-08-19T09:00:47.6314190Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T09:00:47.6314566Z 
2025-08-19T09:00:47.6314722Z <a id="api.tests.test_cors"></a>
2025-08-19T09:00:47.6315002Z 
2025-08-19T09:00:47.6315135Z # api.tests.test\_cors
2025-08-19T09:00:47.6315350Z 
2025-08-19T09:00:47.6315504Z <a id="api.tests.test_imports"></a>
2025-08-19T09:00:47.6315798Z 
2025-08-19T09:00:47.6315938Z # api.tests.test\_imports
2025-08-19T09:00:47.6316175Z 
2025-08-19T09:00:47.6316338Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T09:00:47.6316637Z 
2025-08-19T09:00:47.6316792Z # api.tests.test\_rate\_limit
2025-08-19T09:00:47.6317054Z 
2025-08-19T09:00:47.6317237Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T09:00:47.6317990Z 
2025-08-19T09:00:47.6318107Z #### app
2025-08-19T09:00:47.6318279Z 
2025-08-19T09:00:47.6318394Z noqa: E402
2025-08-19T09:00:47.6318560Z 
2025-08-19T09:00:47.6318729Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T09:00:47.6319025Z 
2025-08-19T09:00:47.6319171Z # api.tests.test\_entrypoint
2025-08-19T09:00:47.6319426Z 
2025-08-19T09:00:47.6319577Z <a id="api.tests.test_health"></a>
2025-08-19T09:00:47.6319854Z 
2025-08-19T09:00:47.6319989Z # api.tests.test\_health
2025-08-19T09:00:47.6320224Z 
2025-08-19T09:00:47.6320369Z <a id="api.logging_config"></a>
2025-08-19T09:00:47.6320623Z 
2025-08-19T09:00:47.6320763Z # api.logging\_config
2025-08-19T09:00:47.6320975Z 
2025-08-19T09:00:47.6321121Z <a id="api.migrations.env"></a>
2025-08-19T09:00:47.6321379Z 
2025-08-19T09:00:47.6321722Z # api.migrations.env
2025-08-19T09:00:47.6321944Z 
2025-08-19T09:00:47.6322165Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T09:00:47.6322540Z 
2025-08-19T09:00:47.6322740Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T09:00:47.6323103Z 
2025-08-19T09:00:47.6323311Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T09:00:47.6323660Z 
2025-08-19T09:00:47.6323833Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T09:00:47.6324146Z 
2025-08-19T09:00:47.6324433Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T09:00:47.6324867Z 
2025-08-19T09:00:47.6325115Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T09:00:47.6325520Z 
2025-08-19T09:00:47.6325740Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T09:00:47.6326106Z 
2025-08-19T09:00:47.6326308Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T09:00:47.6326643Z 
2025-08-19T09:00:47.6326858Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T09:00:47.6327222Z 
2025-08-19T09:00:47.6327412Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T09:00:47.6327737Z 
2025-08-19T09:00:47.6327963Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T09:00:47.6328360Z 
2025-08-19T09:00:47.6328568Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T09:00:47.6328910Z 
2025-08-19T09:00:47.6329130Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T09:00:47.6329486Z 
2025-08-19T09:00:47.6329678Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T09:00:47.6330018Z 
2025-08-19T09:00:47.6330246Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T09:00:47.6330612Z 
2025-08-19T09:00:47.6330803Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T09:00:47.6331148Z 
2025-08-19T09:00:47.6331401Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T09:00:47.6331998Z 
2025-08-19T09:00:47.6332241Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T09:00:47.6332612Z 
2025-08-19T09:00:47.6332842Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T09:00:47.6333267Z 
2025-08-19T09:00:47.6333467Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T09:00:47.6334083Z 
2025-08-19T09:00:47.6334345Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T09:00:47.6334764Z 
2025-08-19T09:00:47.6334973Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T09:00:47.6335416Z 
2025-08-19T09:00:47.6335618Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T09:00:47.6335963Z 
2025-08-19T09:00:47.6336140Z # api.migrations.versions.0001\_baseline
2025-08-19T09:00:47.6336450Z 
2025-08-19T09:00:47.6336614Z <a id="api.migrations.versions"></a>
2025-08-19T09:00:47.6336915Z 
2025-08-19T09:00:47.6337058Z # api.migrations.versions
2025-08-19T09:00:47.6337299Z 
2025-08-19T09:00:47.6337442Z <a id="api.migrations"></a>
2025-08-19T09:00:47.6337699Z 
2025-08-19T09:00:47.6337826Z # api.migrations
2025-08-19T09:00:47.6338022Z 
2025-08-19T09:00:47.6338156Z <a id="api.db"></a>
2025-08-19T09:00:47.6338354Z 
2025-08-19T09:00:47.6338468Z # api.db
2025-08-19T09:00:47.6338634Z 
2025-08-19T09:00:47.6338780Z <a id="api.routes.stats"></a>
2025-08-19T09:00:47.6339304Z 
2025-08-19T09:00:47.6339433Z # api.routes.stats
2025-08-19T09:00:47.6339632Z 
2025-08-19T09:00:47.6339790Z <a id="api.routes.stats.kpi"></a>
2025-08-19T09:00:47.6340066Z 
2025-08-19T09:00:47.6340185Z #### kpi
2025-08-19T09:00:47.6340345Z 
2025-08-19T09:00:47.6340456Z ```python
2025-08-19T09:00:47.6340760Z @router.get("/stats/kpi")
2025-08-19T09:00:47.6341202Z def kpi() -> List[Dict[str, int]]
2025-08-19T09:00:47.6341768Z ```
2025-08-19T09:00:47.6341924Z 
2025-08-19T09:00:47.6342064Z Return KPI metrics (mock).
2025-08-19T09:00:47.6342309Z 
2025-08-19T09:00:47.6342485Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T09:00:47.6342807Z 
2025-08-19T09:00:47.6342936Z #### roi\_by\_vendor
2025-08-19T09:00:47.6343135Z 
2025-08-19T09:00:47.6343246Z ```python
2025-08-19T09:00:47.6343557Z @router.get("/stats/roi_by_vendor")
2025-08-19T09:00:47.6344002Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T09:00:47.6344419Z ```
2025-08-19T09:00:47.6344571Z 
2025-08-19T09:00:47.6344734Z Return ROI percent by vendor.
2025-08-19T09:00:47.6345034Z 
2025-08-19T09:00:47.6345202Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T09:00:47.6345505Z 
2025-08-19T09:00:47.6345630Z #### roi\_trend
2025-08-19T09:00:47.6345812Z 
2025-08-19T09:00:47.6345923Z ```python
2025-08-19T09:00:47.6346219Z @router.get("/stats/roi_trend")
2025-08-19T09:00:47.6346638Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T09:00:47.6347059Z ```
2025-08-19T09:00:47.6347202Z 
2025-08-19T09:00:47.6347337Z Return 30-day ROI trend.
2025-08-19T09:00:47.6347570Z 
2025-08-19T09:00:47.6347709Z <a id="api.routes.roi"></a>
2025-08-19T09:00:47.6347949Z 
2025-08-19T09:00:47.6348080Z # api.routes.roi
2025-08-19T09:00:47.6348272Z 
2025-08-19T09:00:47.6348419Z <a id="api.routes.health"></a>
2025-08-19T09:00:47.6348676Z 
2025-08-19T09:00:47.6348811Z # api.routes.health
2025-08-19T09:00:47.6349010Z 
2025-08-19T09:00:47.6349173Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T09:00:47.6349481Z 
2025-08-19T09:00:47.6349609Z #### MAX\_SKEW
2025-08-19T09:00:47.6349789Z 
2025-08-19T09:00:47.6349898Z seconds
2025-08-19T09:00:47.6350057Z 
2025-08-19T09:00:47.6350222Z <a id="api.routes.health.health"></a>
2025-08-19T09:00:47.6350516Z 
2025-08-19T09:00:47.6350633Z #### health
2025-08-19T09:00:47.6350792Z 
2025-08-19T09:00:47.6350905Z ```python
2025-08-19T09:00:47.6351250Z @router.get("/health", include_in_schema=False)
2025-08-19T09:00:47.6352108Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T09:00:47.6352724Z ```
2025-08-19T09:00:47.6352879Z 
2025-08-19T09:00:47.6353101Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T09:00:47.6353465Z 
2025-08-19T09:00:47.6353626Z <a id="api.routes.repository"></a>
2025-08-19T09:00:47.6353908Z 
2025-08-19T09:00:47.6354058Z # api.routes.repository
2025-08-19T09:00:47.6354281Z 
2025-08-19T09:00:47.6354411Z <a id="api.routes"></a>
2025-08-19T09:00:47.6354635Z 
2025-08-19T09:00:47.6354748Z # api.routes
2025-08-19T09:00:47.6354921Z 
2025-08-19T09:00:47.6355299Z <a id="api.models.fee"></a>
2025-08-19T09:00:47.6355552Z 
2025-08-19T09:00:47.6355674Z # api.models.fee
2025-08-19T09:00:47.6355865Z 
2025-08-19T09:00:47.6356005Z <a id="api.models"></a>
2025-08-19T09:00:47.6356220Z 
2025-08-19T09:00:47.6356332Z # api.models
2025-08-19T09:00:47.6356512Z 
2025-08-19T09:00:47.6356656Z <a id="api.roi_repository"></a>
2025-08-19T09:00:47.6356912Z 
2025-08-19T09:00:47.6357039Z # api.roi\_repository
2025-08-19T09:00:47.6357253Z 
2025-08-19T09:00:47.6357360Z <a id="api.main"></a>
2025-08-19T09:00:47.6357632Z 
2025-08-19T09:00:47.6357739Z # api.main
2025-08-19T09:00:47.6357894Z 
2025-08-19T09:00:47.6358029Z <a id="api.main.ready"></a>
2025-08-19T09:00:47.6358254Z 
2025-08-19T09:00:47.6358364Z #### ready
2025-08-19T09:00:47.6358541Z 
2025-08-19T09:00:47.6358651Z ```python
2025-08-19T09:00:47.6359246Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T09:00:47.6360298Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T09:00:47.6361224Z                                                                       str]
2025-08-19T09:00:47.6361822Z ```
2025-08-19T09:00:47.6361975Z 
2025-08-19T09:00:47.6362163Z Return 200 only when migrations are at head.
2025-08-19T09:00:47.6362478Z 
2025-08-19T09:00:47.6362611Z <a id="api.config"></a>
2025-08-19T09:00:47.6362838Z 
2025-08-19T09:00:47.6362953Z # api.config
2025-08-19T09:00:47.6363126Z 
2025-08-19T09:00:47.6363249Z <a id="etl"></a>
2025-08-19T09:00:47.6363435Z 
2025-08-19T09:00:47.6363566Z # etl
2025-08-19T09:00:47.6363719Z 
2025-08-19T09:00:47.6363877Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T09:00:47.6364148Z 
2025-08-19T09:00:47.6364279Z # etl.fba\_fee\_ingestor
2025-08-19T09:00:47.6364512Z 
2025-08-19T09:00:47.6364655Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T09:00:47.6364924Z 
2025-08-19T09:00:47.6365053Z # etl.sp\_fees\_ingestor
2025-08-19T09:00:47.6365269Z 
2025-08-19T09:00:47.6365415Z <a id="etl.keepa_ingestor"></a>
2025-08-19T09:00:47.6365682Z 
2025-08-19T09:00:47.6365813Z # etl.keepa\_ingestor
2025-08-19T09:00:47.6366017Z 
2025-08-19T09:00:47.6366141Z <a id="etl.db"></a>
2025-08-19T09:00:47.6366331Z 
2025-08-19T09:00:47.6366440Z # etl.db
2025-08-19T09:00:47.6366613Z 
2025-08-19T09:00:47.6366760Z <a id="etl.dialects.schemas"></a>
2025-08-19T09:00:47.6367030Z 
2025-08-19T09:00:47.6367172Z # etl.dialects.schemas
2025-08-19T09:00:47.6367388Z 
2025-08-19T09:00:47.6367574Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T09:00:47.6367911Z 
2025-08-19T09:00:47.6368077Z # etl.dialects.amazon\_reimbursements
2025-08-19T09:00:47.6368367Z 
2025-08-19T09:00:47.6368537Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T09:00:47.6369016Z 
2025-08-19T09:00:47.6369315Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T09:00:47.6369732Z 
2025-08-19T09:00:47.6369972Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T09:00:47.6370278Z 
2025-08-19T09:00:47.6370427Z # etl.dialects.amazon\_returns
2025-08-19T09:00:47.6370683Z 
2025-08-19T09:00:47.6370883Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T09:00:47.6371199Z 
2025-08-19T09:00:47.6371352Z # etl.dialects.amazon\_fee\_preview
2025-08-19T09:00:47.6371815Z 
2025-08-19T09:00:47.6372010Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T09:00:47.6372356Z 
2025-08-19T09:00:47.6372538Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T09:00:47.6372844Z 
2025-08-19T09:00:47.6373024Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T09:00:47.6373339Z 
2025-08-19T09:00:47.6373506Z # etl.dialects.amazon\_settlements
2025-08-19T09:00:47.6373786Z 
2025-08-19T09:00:47.6373922Z <a id="etl.dialects"></a>
2025-08-19T09:00:47.6374158Z 
2025-08-19T09:00:47.6374275Z # etl.dialects
2025-08-19T09:00:47.6374454Z 
2025-08-19T09:00:47.6374578Z <a id="ingest"></a>
2025-08-19T09:00:47.6374779Z 
2025-08-19T09:00:47.6374888Z # ingest
2025-08-19T09:00:47.6375042Z 
2025-08-19T09:00:47.6375197Z <a id="ingest.maintenance"></a>
2025-08-19T09:00:47.6375454Z 
2025-08-19T09:00:47.6375585Z # ingest.maintenance
2025-08-19T09:00:47.6376101Z 
2025-08-19T09:00:47.6376249Z <a id="ingest.copy_loader"></a>
2025-08-19T09:00:47.6376504Z 
2025-08-19T09:00:47.6376637Z # ingest.copy\_loader
2025-08-19T09:00:47.6376854Z 
2025-08-19T09:00:47.6377040Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T09:00:47.6377374Z 
2025-08-19T09:00:47.6377514Z #### copy\_df\_via\_temp
2025-08-19T09:00:47.6377734Z 
2025-08-19T09:00:47.6377843Z ```python
2025-08-19T09:00:47.6378153Z def copy_df_via_temp(engine: Engine,
2025-08-19T09:00:47.6378572Z                      df: pd.DataFrame,
2025-08-19T09:00:47.6378996Z                      target_table: str,
2025-08-19T09:00:47.6379383Z                      *,
2025-08-19T09:00:47.6379799Z                      target_schema: Optional[str] = None,
2025-08-19T09:00:47.6380275Z                      columns: Sequence[str],
2025-08-19T09:00:47.6380760Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T09:00:47.6381264Z                      analyze_after: bool = False,
2025-08-19T09:00:47.6382168Z                      connection: Any | None = None) -> int
2025-08-19T09:00:47.6382601Z ```
2025-08-19T09:00:47.6382751Z 
2025-08-19T09:00:47.6383039Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T09:00:47.6383468Z 
2025-08-19T09:00:47.6383631Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T09:00:47.6383930Z 
2025-08-19T09:00:47.6384083Z # ingest.tests.test\_smoke
2025-08-19T09:00:47.6384328Z 
2025-08-19T09:00:47.6384468Z <a id="ingest.tests"></a>
2025-08-19T09:00:47.6384699Z 
2025-08-19T09:00:47.6384829Z # ingest.tests
2025-08-19T09:00:47.6385012Z 
2025-08-19T09:00:47.6385161Z <a id="ingest.upload_router"></a>
2025-08-19T09:00:47.6385441Z 
2025-08-19T09:00:47.6385573Z # ingest.upload\_router
2025-08-19T09:00:47.6385793Z 
2025-08-19T09:00:47.6385945Z <a id="ingest.email_watcher"></a>
2025-08-19T09:00:47.6386215Z 
2025-08-19T09:00:47.6386346Z # ingest.email\_watcher
2025-08-19T09:00:47.6386562Z 
2025-08-19T09:00:47.6386726Z <a id="ingest.email_watcher.main"></a>
2025-08-19T09:00:47.6387042Z 
2025-08-19T09:00:47.6387150Z #### main
2025-08-19T09:00:47.6387323Z 
2025-08-19T09:00:47.6387436Z ```python
2025-08-19T09:00:47.6387732Z def main() -> dict[str, str]
2025-08-19T09:00:47.6388083Z ```
2025-08-19T09:00:47.6388229Z 
2025-08-19T09:00:47.6388486Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T09:00:47.6388911Z 
2025-08-19T09:00:47.6389156Z Returns {"status": "success"} when processing completes.
2025-08-19T09:00:47.6389539Z 
2025-08-19T09:00:47.6389680Z <a id="ingest.tasks"></a>
2025-08-19T09:00:47.6389921Z 
2025-08-19T09:00:47.6390038Z # ingest.tasks
2025-08-19T09:00:47.6390221Z 
2025-08-19T09:00:47.6390392Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T09:00:47.6390712Z 
2025-08-19T09:00:47.6390837Z #### task\_import\_file
2025-08-19T09:00:47.6391051Z 
2025-08-19T09:00:47.6391169Z ```python
2025-08-19T09:00:47.6391722Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T09:00:47.6392256Z def task_import_file(self: Any,
2025-08-19T09:00:47.6392647Z                      uri: str,
2025-08-19T09:00:47.6393054Z                      report_type: Optional[str] = None,
2025-08-19T09:00:47.6393552Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T09:00:47.6393991Z ```
2025-08-19T09:00:47.6394145Z 
2025-08-19T09:00:47.6394392Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T09:00:47.6394782Z 
2025-08-19T09:00:47.6394938Z <a id="ingest.celery_app"></a>
2025-08-19T09:00:47.6395210Z 
2025-08-19T09:00:47.6395340Z # ingest.celery\_app
2025-08-19T09:00:47.6395551Z 
2025-08-19T09:00:47.6395698Z <a id="ingest.ingest_router"></a>
2025-08-19T09:00:47.6395978Z 
2025-08-19T09:00:47.6396115Z # ingest.ingest\_router
2025-08-19T09:00:47.6396331Z 
2025-08-19T09:00:47.6396471Z <a id="logistics_etl"></a>
2025-08-19T09:00:47.6396704Z 
2025-08-19T09:00:47.6396822Z # logistics\_etl
2025-08-19T09:00:47.6397013Z 
2025-08-19T09:00:47.6397161Z Daily logistics ETL job.
2025-08-19T09:00:47.6397398Z 
2025-08-19T09:00:47.6397785Z <a id="logistics_etl.__main__"></a>
2025-08-19T09:00:47.6398079Z 
2025-08-19T09:00:47.6398217Z # logistics\_etl.\_\_main\_\_
2025-08-19T09:00:47.6398461Z 
2025-08-19T09:00:47.6398607Z <a id="logistics_etl.dsn"></a>
2025-08-19T09:00:47.6398862Z 
2025-08-19T09:00:47.6398987Z # logistics\_etl.dsn
2025-08-19T09:00:47.6399193Z 
2025-08-19T09:00:47.6399413Z Local DSN builder to avoid cross-service dependency.
2025-08-19T09:00:47.6399773Z 
2025-08-19T09:00:47.6399934Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T09:00:47.6400243Z 
2025-08-19T09:00:47.6400356Z #### build\_dsn
2025-08-19T09:00:47.6400540Z 
2025-08-19T09:00:47.6400661Z ```python
2025-08-19T09:00:47.6400972Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:00:47.6401373Z ```
2025-08-19T09:00:47.6401707Z 
2025-08-19T09:00:47.6401961Z Return a Postgres DSN assembled from environment variables.
2025-08-19T09:00:47.6402373Z 
2025-08-19T09:00:47.6402647Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T09:00:47.6403601Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T09:00:47.6404246Z error when any required variable is missing.
2025-08-19T09:00:47.6404573Z 
2025-08-19T09:00:47.6404751Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T09:00:47.6405066Z 
2025-08-19T09:00:47.6405217Z # logistics\_etl.tests.conftest
2025-08-19T09:00:47.6405477Z 
2025-08-19T09:00:47.6405672Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T09:00:47.6406013Z 
2025-08-19T09:00:47.6406174Z # logistics\_etl.tests.test\_repository
2025-08-19T09:00:47.6406488Z 
2025-08-19T09:00:47.6406657Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T09:00:47.6406966Z 
2025-08-19T09:00:47.6407124Z # logistics\_etl.tests.test\_cron
2025-08-19T09:00:47.6407397Z 
2025-08-19T09:00:47.6407575Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T09:00:47.6407900Z 
2025-08-19T09:00:47.6408060Z # logistics\_etl.tests.test\_imports
2025-08-19T09:00:47.6408359Z 
2025-08-19T09:00:47.6408555Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T09:00:47.6408895Z 
2025-08-19T09:00:47.6409058Z # logistics\_etl.tests.test\_smoke
2025-08-19T09:00:47.6409350Z 
2025-08-19T09:00:47.6409538Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T09:00:47.6409866Z 
2025-08-19T09:00:47.6410016Z # logistics\_etl.tests.test\_client
2025-08-19T09:00:47.6410309Z 
2025-08-19T09:00:47.6410466Z <a id="logistics_etl.tests"></a>
2025-08-19T09:00:47.6410739Z 
2025-08-19T09:00:47.6410873Z # logistics\_etl.tests
2025-08-19T09:00:47.6411096Z 
2025-08-19T09:00:47.6411239Z <a id="logistics_etl.flow"></a>
2025-08-19T09:00:47.6411696Z 
2025-08-19T09:00:47.6411841Z # logistics\_etl.flow
2025-08-19T09:00:47.6412052Z 
2025-08-19T09:00:47.6412228Z <a id="logistics_etl.client"></a>
2025-08-19T09:00:47.6412498Z 
2025-08-19T09:00:47.6412633Z # logistics\_etl.client
2025-08-19T09:00:47.6412852Z 
2025-08-19T09:00:47.6413002Z <a id="logistics_etl.cron"></a>
2025-08-19T09:00:47.6413291Z 
2025-08-19T09:00:47.6413419Z # logistics\_etl.cron
2025-08-19T09:00:47.6413651Z 
2025-08-19T09:00:47.6413790Z <a id="logistics_etl.db"></a>
2025-08-19T09:00:47.6414039Z 
2025-08-19T09:00:47.6446412Z # logistics\_etl.db
2025-08-19T09:00:47.6446862Z 
2025-08-19T09:00:47.6447022Z <a id="logistics_etl.repository"></a>
2025-08-19T09:00:47.6447319Z 
2025-08-19T09:00:47.6447444Z # logistics\_etl.repository
2025-08-19T09:00:47.6447664Z 
2025-08-19T09:00:47.6447776Z <a id="alert_bot"></a>
2025-08-19T09:00:47.6447975Z 
2025-08-19T09:00:47.6448087Z # alert\_bot
2025-08-19T09:00:47.6448241Z 
2025-08-19T09:00:47.6448392Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T09:00:47.6448665Z 
2025-08-19T09:00:47.6448785Z # alert\_bot.tests.test\_smoke
2025-08-19T09:00:47.6449018Z 
2025-08-19T09:00:47.6449132Z <a id="alert_bot.tests"></a>
2025-08-19T09:00:47.6449346Z 
2025-08-19T09:00:47.6449456Z # alert\_bot.tests
2025-08-19T09:00:47.6449631Z 
2025-08-19T09:00:47.6449750Z <a id="alert_bot.alert_bot"></a>
2025-08-19T09:00:47.6449985Z 
2025-08-19T09:00:47.6450132Z # alert\_bot.alert\_bot
2025-08-19T09:00:47.6450638Z 
2025-08-19T09:00:47.6450756Z <a id="alert_bot.rules"></a>
2025-08-19T09:00:47.6450965Z 
2025-08-19T09:00:47.6451063Z # alert\_bot.rules
2025-08-19T09:00:47.6451225Z 
2025-08-19T09:00:47.6451321Z <a id="common"></a>
2025-08-19T09:00:47.6451667Z 
2025-08-19T09:00:47.6451761Z # common
2025-08-19T09:00:47.6451892Z 
2025-08-19T09:00:47.6452007Z <a id="common.dsn"></a>
2025-08-19T09:00:47.6452185Z 
2025-08-19T09:00:47.6452282Z # common.dsn
2025-08-19T09:00:47.6452431Z 
2025-08-19T09:00:47.6452559Z <a id="common.dsn.build_dsn"></a>
2025-08-19T09:00:47.6452785Z 
2025-08-19T09:00:47.6452882Z #### build\_dsn
2025-08-19T09:00:47.6453047Z 
2025-08-19T09:00:47.6453146Z ```python
2025-08-19T09:00:47.6453414Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:00:47.6453771Z ```
2025-08-19T09:00:47.6453900Z 
2025-08-19T09:00:47.6454094Z Return a Postgres DSN, validating required variables.
2025-08-19T09:00:47.6454421Z 
2025-08-19T09:00:47.6454710Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T09:00:47.6455610Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T09:00:47.6456244Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T09:00:47.6456762Z missing.
2025-08-19T09:00:47.6456899Z 
2025-08-19T09:00:47.6457033Z <a id="common.models_vendor"></a>
2025-08-19T09:00:47.6457271Z 
2025-08-19T09:00:47.6457386Z # common.models\_vendor
2025-08-19T09:00:47.6457572Z 
2025-08-19T09:00:47.6457718Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T09:00:47.6457977Z 
2025-08-19T09:00:47.6458082Z ## Vendor Objects
2025-08-19T09:00:47.6458259Z 
2025-08-19T09:00:47.6458356Z ```python
2025-08-19T09:00:47.6458604Z class Vendor(Base)
2025-08-19T09:00:47.6458858Z ```
2025-08-19T09:00:47.6458976Z 
2025-08-19T09:00:47.6459096Z Vendor of inventory items.
2025-08-19T09:00:47.6459301Z 
2025-08-19T09:00:47.6459453Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T09:00:47.6459743Z 
2025-08-19T09:00:47.6459874Z ## VendorPrice Objects
2025-08-19T09:00:47.6460066Z 
2025-08-19T09:00:47.6460157Z ```python
2025-08-19T09:00:47.6460482Z class VendorPrice(Base)
2025-08-19T09:00:47.6460748Z ```
2025-08-19T09:00:47.6460873Z 
2025-08-19T09:00:47.6461028Z Association table linking vendors to pricing.
2025-08-19T09:00:47.6461307Z 
2025-08-19T09:00:47.6461642Z <a id="common.db_url"></a>
2025-08-19T09:00:47.6461846Z 
2025-08-19T09:00:47.6461947Z # common.db\_url
2025-08-19T09:00:47.6462108Z 
2025-08-19T09:00:47.6462240Z <a id="common.db_url.build_url"></a>
2025-08-19T09:00:47.6462478Z 
2025-08-19T09:00:47.6462573Z #### build\_url
2025-08-19T09:00:47.6462730Z 
2025-08-19T09:00:47.6462825Z ```python
2025-08-19T09:00:47.6463085Z def build_url(async_: bool = True) -> str
2025-08-19T09:00:47.6463439Z ```
2025-08-19T09:00:47.6463564Z 
2025-08-19T09:00:47.6463716Z Return Postgres DSN from env or PG_* parts.
2025-08-19T09:00:47.6463986Z 
2025-08-19T09:00:47.6464107Z <a id="common.keepa"></a>
2025-08-19T09:00:47.6464328Z 
2025-08-19T09:00:47.6464433Z # common.keepa
2025-08-19T09:00:47.6464596Z 
2025-08-19T09:00:47.6464706Z <a id="common.llm"></a>
2025-08-19T09:00:47.6464901Z 
2025-08-19T09:00:47.6464998Z # common.llm
2025-08-19T09:00:47.6465143Z 
2025-08-19T09:00:47.6465267Z <a id="common.settings"></a>
2025-08-19T09:00:47.6465474Z 
2025-08-19T09:00:47.6465575Z # common.settings
2025-08-19T09:00:47.6465737Z 
2025-08-19T09:00:47.6465848Z <a id="common.db"></a>
2025-08-19T09:00:47.6466035Z 
2025-08-19T09:00:47.6466129Z # common.db
2025-08-19T09:00:47.6466275Z 
2025-08-19T09:00:47.6466408Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T09:00:47.6466671Z 
2025-08-19T09:00:47.6466779Z #### build\_sqlalchemy\_url
2025-08-19T09:00:47.6466981Z 
2025-08-19T09:00:47.6467076Z ```python
2025-08-19T09:00:47.6467329Z def build_sqlalchemy_url() -> str
2025-08-19T09:00:47.6467636Z ```
2025-08-19T09:00:47.6467760Z 
2025-08-19T09:00:47.6467909Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T09:00:47.6468164Z 
2025-08-19T09:00:47.6468490Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T09:00:47.6468747Z 
2025-08-19T09:00:47.6468856Z #### build\_asyncpg\_dsn
2025-08-19T09:00:47.6469044Z 
2025-08-19T09:00:47.6469141Z ```python
2025-08-19T09:00:47.6469393Z def build_asyncpg_dsn() -> str
2025-08-19T09:00:47.6469704Z ```
2025-08-19T09:00:47.6469824Z 
2025-08-19T09:00:47.6470011Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T09:00:47.6470340Z 
2025-08-19T09:00:47.6470475Z <a id="common.db.refresh_mvs"></a>
2025-08-19T09:00:47.6470706Z 
2025-08-19T09:00:47.6470804Z #### refresh\_mvs
2025-08-19T09:00:47.6470977Z 
2025-08-19T09:00:47.6471072Z ```python
2025-08-19T09:00:47.6471380Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T09:00:47.6471932Z ```
2025-08-19T09:00:47.6472059Z 
2025-08-19T09:00:47.6472273Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T09:00:47.6472636Z 
2025-08-19T09:00:47.6472752Z <a id="common.config"></a>
2025-08-19T09:00:47.6472948Z 
2025-08-19T09:00:47.6473281Z # common.config
2025-08-19T09:00:47.6473442Z 
2025-08-19T09:00:47.6473553Z <a id="common.base"></a>
2025-08-19T09:00:47.6473749Z 
2025-08-19T09:00:47.6473849Z # common.base
2025-08-19T09:00:47.6473992Z 
2025-08-19T09:00:47.6474116Z <a id="common.base.Base"></a>
2025-08-19T09:00:47.6474330Z 
2025-08-19T09:00:47.6474427Z ## Base Objects
2025-08-19T09:00:47.6474578Z 
2025-08-19T09:00:47.6474670Z ```python
2025-08-19T09:00:47.6474919Z class Base(DeclarativeBase)
2025-08-19T09:00:47.6475215Z ```
2025-08-19T09:00:47.6475335Z 
2025-08-19T09:00:47.6475458Z Base class for SQLAlchemy models.
2025-08-19T09:00:47.6475700Z 
2025-08-19T09:00:47.6475812Z <a id="repricer"></a>
2025-08-19T09:00:47.6475990Z 
2025-08-19T09:00:47.6476091Z # repricer
2025-08-19T09:00:47.6476224Z 
2025-08-19T09:00:47.6476349Z <a id="repricer.app.schemas"></a>
2025-08-19T09:00:47.6476580Z 
2025-08-19T09:00:47.6476694Z # repricer.app.schemas
2025-08-19T09:00:47.6476876Z 
2025-08-19T09:00:47.6476997Z <a id="repricer.app.deps"></a>
2025-08-19T09:00:47.6477231Z 
2025-08-19T09:00:47.6477339Z # repricer.app.deps
2025-08-19T09:00:47.6477505Z 
2025-08-19T09:00:47.6477700Z Placeholder module for Keepa / SP-API clients.
2025-08-19T09:00:47.6477971Z 
2025-08-19T09:00:47.6478095Z <a id="repricer.app.logic"></a>
2025-08-19T09:00:47.6478313Z 
2025-08-19T09:00:47.6478420Z # repricer.app.logic
2025-08-19T09:00:47.6478591Z 
2025-08-19T09:00:47.6478736Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T09:00:47.6479004Z 
2025-08-19T09:00:47.6479103Z #### MIN\_MARGIN
2025-08-19T09:00:47.6479253Z 
2025-08-19T09:00:47.6479349Z 15 % ROI
2025-08-19T09:00:47.6479481Z 
2025-08-19T09:00:47.6479633Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T09:00:47.6479912Z 
2025-08-19T09:00:47.6480028Z #### compute\_price
2025-08-19T09:00:47.6480189Z 
2025-08-19T09:00:47.6480284Z ```python
2025-08-19T09:00:47.6480659Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T09:00:47.6481102Z ```
2025-08-19T09:00:47.6481243Z 
2025-08-19T09:00:47.6481414Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T09:00:47.6481994Z Replace with real competitive logic later.
2025-08-19T09:00:47.6482255Z 
2025-08-19T09:00:47.6482389Z <a id="repricer.app.main"></a>
2025-08-19T09:00:47.6482614Z 
2025-08-19T09:00:47.6482722Z # repricer.app.main
2025-08-19T09:00:47.6482890Z 
2025-08-19T09:00:47.6483005Z <a id="repricer.app"></a>
2025-08-19T09:00:47.6483211Z 
2025-08-19T09:00:47.6483314Z # repricer.app
2025-08-19T09:00:47.6483470Z 
2025-08-19T09:00:47.6483619Z <a id="repricer.tests.test_imports"></a>
2025-08-19T09:00:47.6483875Z 
2025-08-19T09:00:47.6483996Z # repricer.tests.test\_imports
2025-08-19T09:00:47.6484211Z 
2025-08-19T09:00:47.6484354Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T09:00:47.6484601Z 
2025-08-19T09:00:47.6484726Z # repricer.tests.test\_smoke
2025-08-19T09:00:47.6484941Z 
2025-08-19T09:00:47.6485056Z <a id="repricer.tests"></a>
2025-08-19T09:00:47.6485255Z 
2025-08-19T09:00:47.6485364Z # repricer.tests
2025-08-19T09:00:47.6485698Z 
2025-08-19T09:00:47.6485795Z <a id="db"></a>
2025-08-19T09:00:47.6485947Z 
2025-08-19T09:00:47.6486041Z # db
2025-08-19T09:00:47.6486162Z 
2025-08-19T09:00:47.6486271Z <a id="db.utils.views"></a>
2025-08-19T09:00:47.6486474Z 
2025-08-19T09:00:47.6486574Z # db.utils.views
2025-08-19T09:00:47.6486736Z 
2025-08-19T09:00:47.6486871Z <a id="db.utils.views.replace_view"></a>
2025-08-19T09:00:47.6487125Z 
2025-08-19T09:00:47.6487231Z #### replace\_view
2025-08-19T09:00:47.6487390Z 
2025-08-19T09:00:47.6487488Z ```python
2025-08-19T09:00:47.6487782Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T09:00:47.6488153Z ```
2025-08-19T09:00:47.6488277Z 
2025-08-19T09:00:47.6488414Z Drop and recreate a SQL view atomically.
2025-08-19T09:00:47.6488679Z 
2025-08-19T09:00:47.6488784Z <a id="db.utils"></a>
2025-08-19T09:00:47.6488958Z 
2025-08-19T09:00:47.6489068Z # db.utils
2025-08-19T09:00:47.6489204Z 
2025-08-19T09:00:47.6489326Z <a id="price_importer"></a>
2025-08-19T09:00:47.6489526Z 
2025-08-19T09:00:47.6489814Z # price\_importer
2025-08-19T09:00:47.6489975Z 
2025-08-19T09:00:47.6490135Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T09:00:47.6490427Z 
2025-08-19T09:00:47.6490569Z # price\_importer.services\_common.dsn
2025-08-19T09:00:47.6490819Z 
2025-08-19T09:00:47.6491008Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T09:00:47.6491349Z 
2025-08-19T09:00:47.6491603Z #### build\_dsn
2025-08-19T09:00:47.6491778Z 
2025-08-19T09:00:47.6491883Z ```python
2025-08-19T09:00:47.6492143Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:00:47.6492481Z ```
2025-08-19T09:00:47.6492603Z 
2025-08-19T09:00:47.6492700Z Return safe DSN.
2025-08-19T09:00:47.6492866Z 
2025-08-19T09:00:47.6493326Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T09:00:47.6493630Z 
2025-08-19T09:00:47.6493826Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T09:00:47.6494134Z 
2025-08-19T09:00:47.6494295Z # price\_importer.services\_common.models\_vendor
2025-08-19T09:00:47.6494596Z 
2025-08-19T09:00:47.6494768Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T09:00:47.6495060Z 
2025-08-19T09:00:47.6495197Z # price\_importer.services\_common.db\_url
2025-08-19T09:00:47.6495473Z 
2025-08-19T09:00:47.6495677Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T09:00:47.6495998Z 
2025-08-19T09:00:47.6496102Z #### build\_url
2025-08-19T09:00:47.6496253Z 
2025-08-19T09:00:47.6496348Z ```python
2025-08-19T09:00:47.6496617Z def build_url(async_: bool = True) -> str
2025-08-19T09:00:47.6496950Z ```
2025-08-19T09:00:47.6497086Z 
2025-08-19T09:00:47.6497293Z Return Postgres DSN from env or PG_* parts.
2025-08-19T09:00:47.6497565Z 
2025-08-19T09:00:47.6497730Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T09:00:47.6498025Z 
2025-08-19T09:00:47.6498170Z # price\_importer.services\_common.keepa
2025-08-19T09:00:47.6498432Z 
2025-08-19T09:00:47.6498589Z <a id="price_importer.services_common.llm"></a>
2025-08-19T09:00:47.6498883Z 
2025-08-19T09:00:47.6499026Z # price\_importer.services\_common.llm
2025-08-19T09:00:47.6499278Z 
2025-08-19T09:00:47.6499447Z <a id="price_importer.services_common.settings"></a>
2025-08-19T09:00:47.6499752Z 
2025-08-19T09:00:47.6499904Z # price\_importer.services\_common.settings
2025-08-19T09:00:47.6500164Z 
2025-08-19T09:00:47.6500316Z <a id="price_importer.services_common.db"></a>
2025-08-19T09:00:47.6500579Z 
2025-08-19T09:00:47.6500709Z # price\_importer.services\_common.db
2025-08-19T09:00:47.6500957Z 
2025-08-19T09:00:47.6501183Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T09:00:47.6501715Z 
2025-08-19T09:00:47.6501835Z #### build\_sqlalchemy\_url
2025-08-19T09:00:47.6502035Z 
2025-08-19T09:00:47.6502128Z ```python
2025-08-19T09:00:47.6502388Z def build_sqlalchemy_url() -> str
2025-08-19T09:00:47.6502685Z ```
2025-08-19T09:00:47.6502808Z 
2025-08-19T09:00:47.6502957Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T09:00:47.6503214Z 
2025-08-19T09:00:47.6503612Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T09:00:47.6503965Z 
2025-08-19T09:00:47.6504075Z #### build\_asyncpg\_dsn
2025-08-19T09:00:47.6504262Z 
2025-08-19T09:00:47.6504356Z ```python
2025-08-19T09:00:47.6504614Z def build_asyncpg_dsn() -> str
2025-08-19T09:00:47.6504910Z ```
2025-08-19T09:00:47.6505036Z 
2025-08-19T09:00:47.6505232Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T09:00:47.6505549Z 
2025-08-19T09:00:47.6505742Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T09:00:47.6506065Z 
2025-08-19T09:00:47.6506166Z #### refresh\_mvs
2025-08-19T09:00:47.6506333Z 
2025-08-19T09:00:47.6506432Z ```python
2025-08-19T09:00:47.6506740Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T09:00:47.6507113Z ```
2025-08-19T09:00:47.6507238Z 
2025-08-19T09:00:47.6507451Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T09:00:47.6507787Z 
2025-08-19T09:00:47.6507940Z <a id="price_importer.services_common"></a>
2025-08-19T09:00:47.6508372Z 
2025-08-19T09:00:47.6508503Z # price\_importer.services\_common
2025-08-19T09:00:47.6508727Z 
2025-08-19T09:00:47.6508880Z <a id="price_importer.services_common.base"></a>
2025-08-19T09:00:47.6509165Z 
2025-08-19T09:00:47.6509303Z # price\_importer.services\_common.base
2025-08-19T09:00:47.6509550Z 
2025-08-19T09:00:47.6509690Z <a id="price_importer.normaliser"></a>
2025-08-19T09:00:47.6509943Z 
2025-08-19T09:00:47.6510070Z # price\_importer.normaliser
2025-08-19T09:00:47.6510296Z 
2025-08-19T09:00:47.6510452Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T09:00:47.6510732Z 
2025-08-19T09:00:47.6510865Z # price\_importer.common.models\_vendor
2025-08-19T09:00:47.6511132Z 
2025-08-19T09:00:47.6511270Z <a id="price_importer.common.db_url"></a>
2025-08-19T09:00:47.6511681Z 
2025-08-19T09:00:47.6511822Z # price\_importer.common.db\_url
2025-08-19T09:00:47.6512050Z 
2025-08-19T09:00:47.6512209Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T09:00:47.6512535Z 
2025-08-19T09:00:47.6512642Z #### make\_dsn
2025-08-19T09:00:47.6512805Z 
2025-08-19T09:00:47.6512902Z ```python
2025-08-19T09:00:47.6513192Z def make_dsn(async_: bool = False) -> str
2025-08-19T09:00:47.6513557Z ```
2025-08-19T09:00:47.6513686Z 
2025-08-19T09:00:47.6513871Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T09:00:47.6514205Z 
2025-08-19T09:00:47.6514384Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T09:00:47.6514677Z 
2025-08-19T09:00:47.6514778Z #### build\_url
2025-08-19T09:00:47.6514942Z 
2025-08-19T09:00:47.6515040Z ```python
2025-08-19T09:00:47.6515316Z def build_url(async_: bool = False) -> str
2025-08-19T09:00:47.6515680Z ```
2025-08-19T09:00:47.6515809Z 
2025-08-19T09:00:47.6516010Z Return Postgres DSN built from environment variables.
2025-08-19T09:00:47.6516330Z 
2025-08-19T09:00:47.6516470Z <a id="price_importer.common"></a>
2025-08-19T09:00:47.6516727Z 
2025-08-19T09:00:47.6516851Z # price\_importer.common
2025-08-19T09:00:47.6517050Z 
2025-08-19T09:00:47.6517208Z <a id="price_importer.common.base"></a>
2025-08-19T09:00:47.6517475Z 
2025-08-19T09:00:47.6517603Z # price\_importer.common.base
2025-08-19T09:00:47.6517821Z 
2025-08-19T09:00:47.6517984Z <a id="price_importer.tests.conftest"></a>
2025-08-19T09:00:47.6518248Z 
2025-08-19T09:00:47.6518382Z # price\_importer.tests.conftest
2025-08-19T09:00:47.6518659Z 
2025-08-19T09:00:47.6518818Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T09:00:47.6519111Z 
2025-08-19T09:00:47.6519251Z # price\_importer.tests.test\_reader
2025-08-19T09:00:47.6519520Z 
2025-08-19T09:00:47.6519681Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T09:00:47.6519954Z 
2025-08-19T09:00:47.6520102Z # price\_importer.tests.test\_imports
2025-08-19T09:00:47.6520358Z 
2025-08-19T09:00:47.6520509Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T09:00:47.6520789Z 
2025-08-19T09:00:47.6520930Z # price\_importer.tests.test\_smoke
2025-08-19T09:00:47.6521190Z 
2025-08-19T09:00:47.6521362Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T09:00:47.6522012Z 
2025-08-19T09:00:47.6522162Z # price\_importer.tests.test\_normaliser
2025-08-19T09:00:47.6522429Z 
2025-08-19T09:00:47.6522573Z <a id="price_importer.tests"></a>
2025-08-19T09:00:47.6522818Z 
2025-08-19T09:00:47.6522939Z # price\_importer.tests
2025-08-19T09:00:47.6523141Z 
2025-08-19T09:00:47.6523277Z <a id="price_importer.reader"></a>
2025-08-19T09:00:47.6523518Z 
2025-08-19T09:00:47.6523636Z # price\_importer.reader
2025-08-19T09:00:47.6523838Z 
2025-08-19T09:00:47.6523979Z <a id="price_importer.repository"></a>
2025-08-19T09:00:47.6524244Z 
2025-08-19T09:00:47.6524375Z # price\_importer.repository
2025-08-19T09:00:47.6524597Z 
2025-08-19T09:00:47.6524728Z <a id="price_importer.import"></a>
2025-08-19T09:00:47.6524975Z 
2025-08-19T09:00:47.6525099Z # price\_importer.import
2025-08-19T09:00:47.6525300Z 
2025-08-19T09:00:47.6525414Z <a id="fees_h10"></a>
2025-08-19T09:00:47.6525600Z 
2025-08-19T09:00:47.6525704Z # fees\_h10
2025-08-19T09:00:47.6526030Z 
2025-08-19T09:00:47.6526154Z <a id="fees_h10.worker"></a>
2025-08-19T09:00:47.6526370Z 
2025-08-19T09:00:47.6526477Z # fees\_h10.worker
2025-08-19T09:00:47.6526646Z 
2025-08-19T09:00:47.6526811Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T09:00:47.6527092Z 
2025-08-19T09:00:47.6527208Z #### list\_active\_asins
2025-08-19T09:00:47.6527421Z 
2025-08-19T09:00:47.6527524Z ```python
2025-08-19T09:00:47.6527788Z def list_active_asins() -> list[str]
2025-08-19T09:00:47.6528124Z ```
2025-08-19T09:00:47.6528259Z 
2025-08-19T09:00:47.6528438Z Return known ASINs or an empty list if unavailable.
2025-08-19T09:00:47.6528753Z 
2025-08-19T09:00:47.6528891Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T09:00:47.6529148Z 
2025-08-19T09:00:47.6529273Z # fees\_h10.tests.test\_smoke
2025-08-19T09:00:47.6529494Z 
2025-08-19T09:00:47.6529612Z <a id="fees_h10.tests"></a>
2025-08-19T09:00:47.6529826Z 
2025-08-19T09:00:47.6529931Z # fees\_h10.tests
2025-08-19T09:00:47.6530108Z 
2025-08-19T09:00:47.6530249Z <a id="fees_h10.client"></a>
2025-08-19T09:00:47.6530458Z 
2025-08-19T09:00:47.6530560Z # fees\_h10.client
2025-08-19T09:00:47.6530721Z 
2025-08-19T09:00:47.6530856Z <a id="fees_h10.repository"></a>
2025-08-19T09:00:47.6531083Z 
2025-08-19T09:00:47.6531197Z # fees\_h10.repository
2025-08-19T09:00:47.6531394Z 
2025-08-19T09:00:47.6531662Z <a id="emailer"></a>
2025-08-19T09:00:47.6531847Z 
2025-08-19T09:00:47.6531958Z # emailer
2025-08-19T09:00:47.6532102Z 
2025-08-19T09:00:47.6532261Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T09:00:47.6532548Z 
2025-08-19T09:00:47.6532694Z # emailer.tests.test\_import\_emailer
2025-08-19T09:00:47.6532948Z 
2025-08-19T09:00:47.6533083Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T09:00:47.6533339Z 
2025-08-19T09:00:47.6533466Z # emailer.tests.test\_smoke
2025-08-19T09:00:47.6533682Z 
2025-08-19T09:00:47.6533806Z <a id="emailer.tests"></a>
2025-08-19T09:00:47.6534008Z 
2025-08-19T09:00:47.6534111Z # emailer.tests
2025-08-19T09:00:47.6534272Z 
2025-08-19T09:00:47.6534429Z <a id="emailer.generate_body"></a>
2025-08-19T09:00:47.6534671Z 
2025-08-19T09:00:47.6534788Z # emailer.generate\_body
2025-08-19T09:00:47.6534992Z 
2025-08-19T09:00:47.6535102Z <a id="llm_server"></a>
2025-08-19T09:00:47.6535281Z 
2025-08-19T09:00:47.6535382Z # llm\_server
2025-08-19T09:00:47.6535542Z 
2025-08-19T09:00:47.6535662Z <a id="llm_server.app"></a>
2025-08-19T09:00:47.6535861Z 
2025-08-19T09:00:47.6535973Z # llm\_server.app
2025-08-19T09:00:47.6536136Z 
