2025-08-19T15:52:39.1434075Z ##[group]Run pydoc-markdown
2025-08-19T15:52:39.1434368Z [36;1mpydoc-markdown[0m
2025-08-19T15:52:39.1474795Z shell: /usr/bin/bash -e {0}
2025-08-19T15:52:39.1475024Z env:
2025-08-19T15:52:39.1475261Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:52:39.1475695Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T15:52:39.1476253Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:52:39.1476610Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:52:39.1476969Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:52:39.1477328Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T15:52:39.1477628Z ##[endgroup]
2025-08-19T15:52:39.4672508Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T15:52:39.4673376Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T15:52:39.4673848Z In "pydoc-markdown.yml"
2025-08-19T15:52:39.4674285Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T15:52:39.4674957Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T15:52:39.4675809Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T15:52:39.4677408Z 
2025-08-19T15:52:39.8123018Z <a id="__init__"></a>
2025-08-19T15:52:39.8123386Z 
2025-08-19T15:52:39.8123555Z # \_\_init\_\_
2025-08-19T15:52:39.8123782Z 
2025-08-19T15:52:39.8123941Z <a id="api"></a>
2025-08-19T15:52:39.8124193Z 
2025-08-19T15:52:39.8124333Z # api
2025-08-19T15:52:39.8124532Z 
2025-08-19T15:52:39.8124695Z <a id="api.errors"></a>
2025-08-19T15:52:39.8124967Z 
2025-08-19T15:52:39.8125119Z # api.errors
2025-08-19T15:52:39.8125339Z 
2025-08-19T15:52:39.8125547Z <a id="api.sentry_config"></a>
2025-08-19T15:52:39.8125914Z 
2025-08-19T15:52:39.8126318Z # api.sentry\_config
2025-08-19T15:52:39.8126619Z 
2025-08-19T15:52:39.8126868Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T15:52:39.8127344Z 
2025-08-19T15:52:39.8128007Z # api.tests.test\_stats\_contracts
2025-08-19T15:52:39.8128434Z 
2025-08-19T15:52:39.8128656Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T15:52:39.8129110Z 
2025-08-19T15:52:39.8129330Z # api.tests.test\_sentry\_scrub
2025-08-19T15:52:39.8129712Z 
2025-08-19T15:52:39.8129931Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T15:52:39.8130331Z 
2025-08-19T15:52:39.8130523Z # api.tests.test\_roi\_basic\_auth
2025-08-19T15:52:39.8130874Z 
2025-08-19T15:52:39.8131066Z <a id="api.tests.test_errors_json"></a>
2025-08-19T15:52:39.8131325Z 
2025-08-19T15:52:39.8131439Z # api.tests.test\_errors\_json
2025-08-19T15:52:39.8131643Z 
2025-08-19T15:52:39.8131852Z <a id="api.tests.test_llm"></a>
2025-08-19T15:52:39.8132061Z 
2025-08-19T15:52:39.8132166Z # api.tests.test\_llm
2025-08-19T15:52:39.8132335Z 
2025-08-19T15:52:39.8132466Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T15:52:39.8132701Z 
2025-08-19T15:52:39.8132810Z # api.tests.test\_roi\_filters
2025-08-19T15:52:39.8133010Z 
2025-08-19T15:52:39.8133146Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T15:52:39.8133392Z 
2025-08-19T15:52:39.8133508Z # api.tests.test\_sentry\_event
2025-08-19T15:52:39.8133705Z 
2025-08-19T15:52:39.8133881Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T15:52:39.8134180Z 
2025-08-19T15:52:39.8134293Z ## DummyTransport Objects
2025-08-19T15:52:39.8134481Z 
2025-08-19T15:52:39.8134572Z ```python
2025-08-19T15:52:39.8134814Z class DummyTransport()
2025-08-19T15:52:39.8135070Z ```
2025-08-19T15:52:39.8135194Z 
2025-08-19T15:52:39.8135448Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T15:52:39.8135828Z 
2025-08-19T15:52:39.8136149Z #### capture\_envelope
2025-08-19T15:52:39.8136374Z 
2025-08-19T15:52:39.8136467Z ```python
2025-08-19T15:52:39.8136719Z def capture_envelope(envelope)
2025-08-19T15:52:39.8136988Z ```
2025-08-19T15:52:39.8137076Z 
2025-08-19T15:52:39.8137202Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T15:52:39.8137403Z 
2025-08-19T15:52:39.8137495Z <a id="api.tests.test_cors"></a>
2025-08-19T15:52:39.8137940Z 
2025-08-19T15:52:39.8138019Z # api.tests.test\_cors
2025-08-19T15:52:39.8138147Z 
2025-08-19T15:52:39.8138242Z <a id="api.tests.test_imports"></a>
2025-08-19T15:52:39.8138409Z 
2025-08-19T15:52:39.8138486Z # api.tests.test\_imports
2025-08-19T15:52:39.8138820Z 
2025-08-19T15:52:39.8138979Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T15:52:39.8139214Z 
2025-08-19T15:52:39.8139295Z # api.tests.test\_rate\_limit
2025-08-19T15:52:39.8139436Z 
2025-08-19T15:52:39.8139532Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T15:52:39.8139702Z 
2025-08-19T15:52:39.8139772Z #### app
2025-08-19T15:52:39.8139859Z 
2025-08-19T15:52:39.8139920Z noqa: E402
2025-08-19T15:52:39.8140012Z 
2025-08-19T15:52:39.8140095Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T15:52:39.8140250Z 
2025-08-19T15:52:39.8140329Z # api.tests.test\_entrypoint
2025-08-19T15:52:39.8140484Z 
2025-08-19T15:52:39.8140570Z <a id="api.tests.test_health"></a>
2025-08-19T15:52:39.8140738Z 
2025-08-19T15:52:39.8140818Z # api.tests.test\_health
2025-08-19T15:52:39.8140943Z 
2025-08-19T15:52:39.8141023Z <a id="api.tests.test_score"></a>
2025-08-19T15:52:39.8141177Z 
2025-08-19T15:52:39.8141249Z # api.tests.test\_score
2025-08-19T15:52:39.8141369Z 
2025-08-19T15:52:39.8141447Z <a id="api.logging_config"></a>
2025-08-19T15:52:39.8141592Z 
2025-08-19T15:52:39.8141663Z # api.logging\_config
2025-08-19T15:52:39.8141780Z 
2025-08-19T15:52:39.8141865Z <a id="api.migrations.env"></a>
2025-08-19T15:52:39.8142002Z 
2025-08-19T15:52:39.8142076Z # api.migrations.env
2025-08-19T15:52:39.8142197Z 
2025-08-19T15:52:39.8142330Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T15:52:39.8142536Z 
2025-08-19T15:52:39.8142641Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T15:52:39.8142840Z 
2025-08-19T15:52:39.8142951Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T15:52:39.8143141Z 
2025-08-19T15:52:39.8143241Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T15:52:39.8143557Z 
2025-08-19T15:52:39.8143710Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T15:52:39.8143951Z 
2025-08-19T15:52:39.8144087Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T15:52:39.8144302Z 
2025-08-19T15:52:39.8144422Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T15:52:39.8144624Z 
2025-08-19T15:52:39.8144729Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T15:52:39.8144918Z 
2025-08-19T15:52:39.8145041Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T15:52:39.8145241Z 
2025-08-19T15:52:39.8145346Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T15:52:39.8145529Z 
2025-08-19T15:52:39.8145651Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T15:52:39.8145853Z 
2025-08-19T15:52:39.8146182Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T15:52:39.8146400Z 
2025-08-19T15:52:39.8146529Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T15:52:39.8146816Z 
2025-08-19T15:52:39.8146925Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T15:52:39.8147137Z 
2025-08-19T15:52:39.8147268Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T15:52:39.8147471Z 
2025-08-19T15:52:39.8147575Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T15:52:39.8147759Z 
2025-08-19T15:52:39.8147893Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T15:52:39.8148109Z 
2025-08-19T15:52:39.8148227Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T15:52:39.8148429Z 
2025-08-19T15:52:39.8148550Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T15:52:39.8148750Z 
2025-08-19T15:52:39.8148862Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T15:52:39.8149046Z 
2025-08-19T15:52:39.8149178Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T15:52:39.8149396Z 
2025-08-19T15:52:39.8149512Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T15:52:39.8149869Z 
2025-08-19T15:52:39.8149977Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T15:52:39.8150168Z 
2025-08-19T15:52:39.8150261Z # api.migrations.versions.0001\_baseline
2025-08-19T15:52:39.8150430Z 
2025-08-19T15:52:39.8150524Z <a id="api.migrations.versions"></a>
2025-08-19T15:52:39.8150683Z 
2025-08-19T15:52:39.8150762Z # api.migrations.versions
2025-08-19T15:52:39.8150896Z 
2025-08-19T15:52:39.8150973Z <a id="api.migrations"></a>
2025-08-19T15:52:39.8151105Z 
2025-08-19T15:52:39.8151173Z # api.migrations
2025-08-19T15:52:39.8151462Z 
2025-08-19T15:52:39.8151583Z <a id="api.db"></a>
2025-08-19T15:52:39.8151776Z 
2025-08-19T15:52:39.8151897Z # api.db
2025-08-19T15:52:39.8152060Z 
2025-08-19T15:52:39.8152204Z <a id="api.routes.score"></a>
2025-08-19T15:52:39.8152477Z 
2025-08-19T15:52:39.8152600Z # api.routes.score
2025-08-19T15:52:39.8152799Z 
2025-08-19T15:52:39.8152940Z <a id="api.routes.stats"></a>
2025-08-19T15:52:39.8153201Z 
2025-08-19T15:52:39.8153343Z # api.routes.stats
2025-08-19T15:52:39.8153522Z 
2025-08-19T15:52:39.8153610Z <a id="api.routes.roi"></a>
2025-08-19T15:52:39.8153743Z 
2025-08-19T15:52:39.8153810Z # api.routes.roi
2025-08-19T15:52:39.8153913Z 
2025-08-19T15:52:39.8154001Z <a id="api.routes.health"></a>
2025-08-19T15:52:39.8154140Z 
2025-08-19T15:52:39.8154211Z # api.routes.health
2025-08-19T15:52:39.8154323Z 
2025-08-19T15:52:39.8154416Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T15:52:39.8154588Z 
2025-08-19T15:52:39.8154658Z #### MAX\_SKEW
2025-08-19T15:52:39.8154756Z 
2025-08-19T15:52:39.8154818Z seconds
2025-08-19T15:52:39.8154903Z 
2025-08-19T15:52:39.8155000Z <a id="api.routes.health.health"></a>
2025-08-19T15:52:39.8155163Z 
2025-08-19T15:52:39.8155225Z #### health
2025-08-19T15:52:39.8155319Z 
2025-08-19T15:52:39.8155381Z ```python
2025-08-19T15:52:39.8155579Z @router.get("/health", include_in_schema=False)
2025-08-19T15:52:39.8156414Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T15:52:39.8157307Z ```
2025-08-19T15:52:39.8157489Z 
2025-08-19T15:52:39.8157715Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T15:52:39.8158079Z 
2025-08-19T15:52:39.8158633Z <a id="api.routes.repository"></a>
2025-08-19T15:52:39.8159051Z 
2025-08-19T15:52:39.8159207Z # api.routes.repository
2025-08-19T15:52:39.8159400Z 
2025-08-19T15:52:39.8159476Z <a id="api.routes"></a>
2025-08-19T15:52:39.8159601Z 
2025-08-19T15:52:39.8159674Z # api.routes
2025-08-19T15:52:39.8159775Z 
2025-08-19T15:52:39.8159855Z <a id="api.models.fee"></a>
2025-08-19T15:52:39.8159993Z 
2025-08-19T15:52:39.8160066Z # api.models.fee
2025-08-19T15:52:39.8160170Z 
2025-08-19T15:52:39.8160242Z <a id="api.models"></a>
2025-08-19T15:52:39.8160362Z 
2025-08-19T15:52:39.8160424Z # api.models
2025-08-19T15:52:39.8160518Z 
2025-08-19T15:52:39.8160595Z <a id="api.roi_repository"></a>
2025-08-19T15:52:39.8160742Z 
2025-08-19T15:52:39.8160811Z # api.roi\_repository
2025-08-19T15:52:39.8160931Z 
2025-08-19T15:52:39.8161011Z <a id="api.main"></a>
2025-08-19T15:52:39.8161139Z 
2025-08-19T15:52:39.8161202Z # api.main
2025-08-19T15:52:39.8161297Z 
2025-08-19T15:52:39.8161377Z <a id="api.main.ready"></a>
2025-08-19T15:52:39.8161508Z 
2025-08-19T15:52:39.8161568Z #### ready
2025-08-19T15:52:39.8161659Z 
2025-08-19T15:52:39.8161722Z ```python
2025-08-19T15:52:39.8161983Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T15:52:39.8162422Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T15:52:39.8162798Z                                                                       str]
2025-08-19T15:52:39.8163026Z ```
2025-08-19T15:52:39.8163116Z 
2025-08-19T15:52:39.8163212Z Return 200 only when migrations are at head.
2025-08-19T15:52:39.8163396Z 
2025-08-19T15:52:39.8163482Z <a id="api.config"></a>
2025-08-19T15:52:39.8163601Z 
2025-08-19T15:52:39.8163667Z # api.config
2025-08-19T15:52:39.8163767Z 
2025-08-19T15:52:39.8163842Z <a id="api.security"></a>
2025-08-19T15:52:39.8163976Z 
2025-08-19T15:52:39.8164214Z # api.security
2025-08-19T15:52:39.8164324Z 
2025-08-19T15:52:39.8164388Z <a id="etl"></a>
2025-08-19T15:52:39.8164491Z 
2025-08-19T15:52:39.8164555Z # etl
2025-08-19T15:52:39.8164640Z 
2025-08-19T15:52:39.8164721Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T15:52:39.8164870Z 
2025-08-19T15:52:39.8164953Z # etl.fba\_fee\_ingestor
2025-08-19T15:52:39.8165075Z 
2025-08-19T15:52:39.8165155Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T15:52:39.8165305Z 
2025-08-19T15:52:39.8165377Z # etl.sp\_fees\_ingestor
2025-08-19T15:52:39.8165498Z 
2025-08-19T15:52:39.8165583Z <a id="etl.keepa_ingestor"></a>
2025-08-19T15:52:39.8165723Z 
2025-08-19T15:52:39.8165792Z # etl.keepa\_ingestor
2025-08-19T15:52:39.8165907Z 
2025-08-19T15:52:39.8166123Z <a id="etl.db"></a>
2025-08-19T15:52:39.8166231Z 
2025-08-19T15:52:39.8166292Z # etl.db
2025-08-19T15:52:39.8166384Z 
2025-08-19T15:52:39.8166464Z <a id="etl.dialects.schemas"></a>
2025-08-19T15:52:39.8166609Z 
2025-08-19T15:52:39.8166680Z # etl.dialects.schemas
2025-08-19T15:52:39.8166813Z 
2025-08-19T15:52:39.8166921Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T15:52:39.8167110Z 
2025-08-19T15:52:39.8167203Z # etl.dialects.amazon\_reimbursements
2025-08-19T15:52:39.8167360Z 
2025-08-19T15:52:39.8167456Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T15:52:39.8167632Z 
2025-08-19T15:52:39.8167717Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T15:52:39.8167870Z 
2025-08-19T15:52:39.8167955Z <a id="etl.dialects.test_generic"></a>
2025-08-19T15:52:39.8168119Z 
2025-08-19T15:52:39.8168197Z # etl.dialects.test\_generic
2025-08-19T15:52:39.8168332Z 
2025-08-19T15:52:39.8168425Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T15:52:39.8168590Z 
2025-08-19T15:52:39.8168670Z # etl.dialects.amazon\_returns
2025-08-19T15:52:39.8168812Z 
2025-08-19T15:52:39.8168905Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T15:52:39.8169074Z 
2025-08-19T15:52:39.8169158Z # etl.dialects.amazon\_fee\_preview
2025-08-19T15:52:39.8169437Z 
2025-08-19T15:52:39.8169549Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T15:52:39.8169733Z 
2025-08-19T15:52:39.8169826Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T15:52:39.8169987Z 
2025-08-19T15:52:39.8170080Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T15:52:39.8170255Z 
2025-08-19T15:52:39.8170338Z # etl.dialects.amazon\_settlements
2025-08-19T15:52:39.8170487Z 
2025-08-19T15:52:39.8170559Z <a id="etl.dialects"></a>
2025-08-19T15:52:39.8170690Z 
2025-08-19T15:52:39.8170754Z # etl.dialects
2025-08-19T15:52:39.8170853Z 
2025-08-19T15:52:39.8170923Z <a id="ingest"></a>
2025-08-19T15:52:39.8171029Z 
2025-08-19T15:52:39.8171088Z # ingest
2025-08-19T15:52:39.8171178Z 
2025-08-19T15:52:39.8171257Z <a id="ingest.maintenance"></a>
2025-08-19T15:52:39.8171399Z 
2025-08-19T15:52:39.8171470Z # ingest.maintenance
2025-08-19T15:52:39.8171588Z 
2025-08-19T15:52:39.8171665Z <a id="ingest.copy_loader"></a>
2025-08-19T15:52:39.8171803Z 
2025-08-19T15:52:39.8171883Z # ingest.copy\_loader
2025-08-19T15:52:39.8172010Z 
2025-08-19T15:52:39.8172111Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T15:52:39.8172290Z 
2025-08-19T15:52:39.8172367Z #### copy\_df\_via\_temp
2025-08-19T15:52:39.8172488Z 
2025-08-19T15:52:39.8172552Z ```python
2025-08-19T15:52:39.8172726Z def copy_df_via_temp(engine: Engine,
2025-08-19T15:52:39.8173123Z                      df: pd.DataFrame,
2025-08-19T15:52:39.8173539Z                      target_table: str,
2025-08-19T15:52:39.8173928Z                      *,
2025-08-19T15:52:39.8174306Z                      target_schema: Optional[str] = None,
2025-08-19T15:52:39.8174784Z                      columns: Sequence[str],
2025-08-19T15:52:39.8175274Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T15:52:39.8175795Z                      analyze_after: bool = False,
2025-08-19T15:52:39.8176473Z                      connection: Any | None = None) -> int
2025-08-19T15:52:39.8176899Z ```
2025-08-19T15:52:39.8177049Z 
2025-08-19T15:52:39.8177353Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T15:52:39.8178003Z 
2025-08-19T15:52:39.8178162Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T15:52:39.8178464Z 
2025-08-19T15:52:39.8178600Z # ingest.tests.test\_smoke
2025-08-19T15:52:39.8178742Z 
2025-08-19T15:52:39.8178820Z <a id="ingest.tests"></a>
2025-08-19T15:52:39.8178952Z 
2025-08-19T15:52:39.8179019Z # ingest.tests
2025-08-19T15:52:39.8179121Z 
2025-08-19T15:52:39.8179204Z <a id="ingest.upload_router"></a>
2025-08-19T15:52:39.8179358Z 
2025-08-19T15:52:39.8179431Z # ingest.upload\_router
2025-08-19T15:52:39.8179556Z 
2025-08-19T15:52:39.8179648Z <a id="ingest.email_watcher"></a>
2025-08-19T15:52:39.8179797Z 
2025-08-19T15:52:39.8179869Z # ingest.email\_watcher
2025-08-19T15:52:39.8179991Z 
2025-08-19T15:52:39.8180077Z <a id="ingest.email_watcher.main"></a>
2025-08-19T15:52:39.8180237Z 
2025-08-19T15:52:39.8180298Z #### main
2025-08-19T15:52:39.8180391Z 
2025-08-19T15:52:39.8180451Z ```python
2025-08-19T15:52:39.8180626Z def main() -> dict[str, str]
2025-08-19T15:52:39.8180822Z ```
2025-08-19T15:52:39.8180904Z 
2025-08-19T15:52:39.8181054Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T15:52:39.8181276Z 
2025-08-19T15:52:39.8181406Z Returns {"status": "success"} when processing completes.
2025-08-19T15:52:39.8181619Z 
2025-08-19T15:52:39.8181696Z <a id="ingest.tasks"></a>
2025-08-19T15:52:39.8181822Z 
2025-08-19T15:52:39.8181895Z # ingest.tasks
2025-08-19T15:52:39.8181997Z 
2025-08-19T15:52:39.8182092Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T15:52:39.8182265Z 
2025-08-19T15:52:39.8182342Z #### task\_import\_file
2025-08-19T15:52:39.8182457Z 
2025-08-19T15:52:39.8182520Z ```python
2025-08-19T15:52:39.8182731Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T15:52:39.8183029Z def task_import_file(self: Any,
2025-08-19T15:52:39.8183236Z                      uri: str,
2025-08-19T15:52:39.8183457Z                      report_type: str | None = None,
2025-08-19T15:52:39.8184354Z                      force: bool = False) -> dict[str, Any]
2025-08-19T15:52:39.8184804Z ```
2025-08-19T15:52:39.8184959Z 
2025-08-19T15:52:39.8185212Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T15:52:39.8185505Z 
2025-08-19T15:52:39.8185591Z <a id="ingest.celery_app"></a>
2025-08-19T15:52:39.8185737Z 
2025-08-19T15:52:39.8185808Z # ingest.celery\_app
2025-08-19T15:52:39.8186110Z 
2025-08-19T15:52:39.8186240Z <a id="ingest.ingest_router"></a>
2025-08-19T15:52:39.8186408Z 
2025-08-19T15:52:39.8186482Z # ingest.ingest\_router
2025-08-19T15:52:39.8186602Z 
2025-08-19T15:52:39.8186684Z <a id="logistics_etl"></a>
2025-08-19T15:52:39.8186811Z 
2025-08-19T15:52:39.8186877Z # logistics\_etl
2025-08-19T15:52:39.8186987Z 
2025-08-19T15:52:39.8187065Z Daily logistics ETL job.
2025-08-19T15:52:39.8187186Z 
2025-08-19T15:52:39.8187265Z <a id="logistics_etl.__main__"></a>
2025-08-19T15:52:39.8187423Z 
2025-08-19T15:52:39.8187499Z # logistics\_etl.\_\_main\_\_
2025-08-19T15:52:39.8187644Z 
2025-08-19T15:52:39.8187732Z <a id="logistics_etl.dsn"></a>
2025-08-19T15:52:39.8187863Z 
2025-08-19T15:52:39.8187932Z # logistics\_etl.dsn
2025-08-19T15:52:39.8188047Z 
2025-08-19T15:52:39.8188164Z Local DSN builder to avoid cross-service dependency.
2025-08-19T15:52:39.8188362Z 
2025-08-19T15:52:39.8188451Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T15:52:39.8188621Z 
2025-08-19T15:52:39.8188683Z #### build\_dsn
2025-08-19T15:52:39.8188781Z 
2025-08-19T15:52:39.8188849Z ```python
2025-08-19T15:52:39.8189016Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:52:39.8189236Z ```
2025-08-19T15:52:39.8189317Z 
2025-08-19T15:52:39.8189454Z Return a Postgres DSN assembled from environment variables.
2025-08-19T15:52:39.8189684Z 
2025-08-19T15:52:39.8189831Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T15:52:39.8190223Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T15:52:39.8190564Z error when any required variable is missing.
2025-08-19T15:52:39.8190745Z 
2025-08-19T15:52:39.8191283Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T15:52:39.8191465Z 
2025-08-19T15:52:39.8191548Z # logistics\_etl.tests.conftest
2025-08-19T15:52:39.8191699Z 
2025-08-19T15:52:39.8191801Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T15:52:39.8191988Z 
2025-08-19T15:52:39.8192075Z # logistics\_etl.tests.test\_repository
2025-08-19T15:52:39.8192246Z 
2025-08-19T15:52:39.8192335Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T15:52:39.8192502Z 
2025-08-19T15:52:39.8192590Z # logistics\_etl.tests.test\_cron
2025-08-19T15:52:39.8192737Z 
2025-08-19T15:52:39.8192832Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T15:52:39.8193010Z 
2025-08-19T15:52:39.8193094Z # logistics\_etl.tests.test\_imports
2025-08-19T15:52:39.8193249Z 
2025-08-19T15:52:39.8193337Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T15:52:39.8193516Z 
2025-08-19T15:52:39.8193597Z # logistics\_etl.tests.test\_smoke
2025-08-19T15:52:39.8193744Z 
2025-08-19T15:52:39.8193848Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T15:52:39.8194025Z 
2025-08-19T15:52:39.8194106Z # logistics\_etl.tests.test\_client
2025-08-19T15:52:39.8194261Z 
2025-08-19T15:52:39.8194341Z <a id="logistics_etl.tests"></a>
2025-08-19T15:52:39.8194482Z 
2025-08-19T15:52:39.8194550Z # logistics\_etl.tests
2025-08-19T15:52:39.8194674Z 
2025-08-19T15:52:39.8194750Z <a id="logistics_etl.flow"></a>
2025-08-19T15:52:39.8194889Z 
2025-08-19T15:52:39.8194968Z # logistics\_etl.flow
2025-08-19T15:52:39.8195089Z 
2025-08-19T15:52:39.8195171Z <a id="logistics_etl.client"></a>
2025-08-19T15:52:39.8195327Z 
2025-08-19T15:52:39.8195399Z # logistics\_etl.client
2025-08-19T15:52:39.8195521Z 
2025-08-19T15:52:39.8195600Z <a id="logistics_etl.cron"></a>
2025-08-19T15:52:39.8195746Z 
2025-08-19T15:52:39.8195815Z # logistics\_etl.cron
2025-08-19T15:52:39.8196106Z 
2025-08-19T15:52:39.8196244Z <a id="logistics_etl.db"></a>
2025-08-19T15:52:39.8196386Z 
2025-08-19T15:52:39.8196455Z # logistics\_etl.db
2025-08-19T15:52:39.8196711Z 
2025-08-19T15:52:39.8196801Z <a id="logistics_etl.repository"></a>
2025-08-19T15:52:39.8196963Z 
2025-08-19T15:52:39.8226645Z # logistics\_etl.repository
2025-08-19T15:52:39.8226994Z 
2025-08-19T15:52:39.8227145Z <a id="alert_bot"></a>
2025-08-19T15:52:39.8227401Z 
2025-08-19T15:52:39.8227528Z # alert\_bot
2025-08-19T15:52:39.8227721Z 
2025-08-19T15:52:39.8227900Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T15:52:39.8228255Z 
2025-08-19T15:52:39.8228416Z # alert\_bot.tests.test\_smoke
2025-08-19T15:52:39.8228706Z 
2025-08-19T15:52:39.8228870Z <a id="alert_bot.tests"></a>
2025-08-19T15:52:39.8229102Z 
2025-08-19T15:52:39.8229187Z # alert\_bot.tests
2025-08-19T15:52:39.8229322Z 
2025-08-19T15:52:39.8229426Z <a id="alert_bot.alert_bot"></a>
2025-08-19T15:52:39.8229601Z 
2025-08-19T15:52:39.8229687Z # alert\_bot.alert\_bot
2025-08-19T15:52:39.8229837Z 
2025-08-19T15:52:39.8229927Z <a id="alert_bot.rules"></a>
2025-08-19T15:52:39.8230086Z 
2025-08-19T15:52:39.8230172Z # alert\_bot.rules
2025-08-19T15:52:39.8230320Z 
2025-08-19T15:52:39.8230401Z <a id="common"></a>
2025-08-19T15:52:39.8230534Z 
2025-08-19T15:52:39.8230618Z # common
2025-08-19T15:52:39.8230727Z 
2025-08-19T15:52:39.8230816Z <a id="common.dsn"></a>
2025-08-19T15:52:39.8230964Z 
2025-08-19T15:52:39.8231043Z # common.dsn
2025-08-19T15:52:39.8231156Z 
2025-08-19T15:52:39.8231257Z <a id="common.dsn.build_dsn"></a>
2025-08-19T15:52:39.8231446Z 
2025-08-19T15:52:39.8231524Z #### build\_dsn
2025-08-19T15:52:39.8231646Z 
2025-08-19T15:52:39.8231730Z ```python
2025-08-19T15:52:39.8231943Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:52:39.8232223Z ```
2025-08-19T15:52:39.8232323Z 
2025-08-19T15:52:39.8232477Z Return a Postgres DSN, validating required variables.
2025-08-19T15:52:39.8232745Z 
2025-08-19T15:52:39.8232976Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T15:52:39.8233521Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T15:52:39.8234062Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T15:52:39.8234644Z missing.
2025-08-19T15:52:39.8234822Z 
2025-08-19T15:52:39.8234928Z <a id="common.models_vendor"></a>
2025-08-19T15:52:39.8235121Z 
2025-08-19T15:52:39.8235211Z # common.models\_vendor
2025-08-19T15:52:39.8235359Z 
2025-08-19T15:52:39.8235470Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T15:52:39.8235699Z 
2025-08-19T15:52:39.8235779Z ## Vendor Objects
2025-08-19T15:52:39.8235911Z 
2025-08-19T15:52:39.8236258Z ```python
2025-08-19T15:52:39.8236468Z class Vendor(Base)
2025-08-19T15:52:39.8236676Z ```
2025-08-19T15:52:39.8236755Z 
2025-08-19T15:52:39.8236834Z Vendor of inventory items.
2025-08-19T15:52:39.8236971Z 
2025-08-19T15:52:39.8237072Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T15:52:39.8237252Z 
2025-08-19T15:52:39.8237327Z ## VendorPrice Objects
2025-08-19T15:52:39.8237444Z 
2025-08-19T15:52:39.8237504Z ```python
2025-08-19T15:52:39.8237668Z class VendorPrice(Base)
2025-08-19T15:52:39.8237851Z ```
2025-08-19T15:52:39.8237936Z 
2025-08-19T15:52:39.8238041Z Association table linking vendors to pricing.
2025-08-19T15:52:39.8238223Z 
2025-08-19T15:52:39.8238297Z <a id="common.db_url"></a>
2025-08-19T15:52:39.8238430Z 
2025-08-19T15:52:39.8238495Z # common.db\_url
2025-08-19T15:52:39.8238596Z 
2025-08-19T15:52:39.8238682Z <a id="common.db_url.build_url"></a>
2025-08-19T15:52:39.8238837Z 
2025-08-19T15:52:39.8238902Z #### build\_url
2025-08-19T15:52:39.8239001Z 
2025-08-19T15:52:39.8239067Z ```python
2025-08-19T15:52:39.8239235Z def build_url(async_: bool = True) -> str
2025-08-19T15:52:39.8239460Z ```
2025-08-19T15:52:39.8239541Z 
2025-08-19T15:52:39.8239636Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:52:39.8239816Z 
2025-08-19T15:52:39.8239892Z <a id="common.keepa"></a>
2025-08-19T15:52:39.8240021Z 
2025-08-19T15:52:39.8240092Z # common.keepa
2025-08-19T15:52:39.8240192Z 
2025-08-19T15:52:39.8240262Z <a id="common.llm"></a>
2025-08-19T15:52:39.8240379Z 
2025-08-19T15:52:39.8240580Z # common.llm
2025-08-19T15:52:39.8240679Z 
2025-08-19T15:52:39.8240757Z <a id="common.settings"></a>
2025-08-19T15:52:39.8240899Z 
2025-08-19T15:52:39.8240964Z # common.settings
2025-08-19T15:52:39.8241068Z 
2025-08-19T15:52:39.8241141Z <a id="common.db"></a>
2025-08-19T15:52:39.8241256Z 
2025-08-19T15:52:39.8241317Z # common.db
2025-08-19T15:52:39.8241407Z 
2025-08-19T15:52:39.8241502Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T15:52:39.8241670Z 
2025-08-19T15:52:39.8241744Z #### build\_sqlalchemy\_url
2025-08-19T15:52:39.8241878Z 
2025-08-19T15:52:39.8241940Z ```python
2025-08-19T15:52:39.8242105Z def build_sqlalchemy_url() -> str
2025-08-19T15:52:39.8242315Z ```
2025-08-19T15:52:39.8242396Z 
2025-08-19T15:52:39.8242494Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:52:39.8242664Z 
2025-08-19T15:52:39.8242752Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T15:52:39.8242918Z 
2025-08-19T15:52:39.8242999Z #### build\_asyncpg\_dsn
2025-08-19T15:52:39.8243128Z 
2025-08-19T15:52:39.8243193Z ```python
2025-08-19T15:52:39.8243365Z def build_asyncpg_dsn() -> str
2025-08-19T15:52:39.8243557Z ```
2025-08-19T15:52:39.8243641Z 
2025-08-19T15:52:39.8243768Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:52:39.8243982Z 
2025-08-19T15:52:39.8244073Z <a id="common.db.refresh_mvs"></a>
2025-08-19T15:52:39.8244239Z 
2025-08-19T15:52:39.8244305Z #### refresh\_mvs
2025-08-19T15:52:39.8244415Z 
2025-08-19T15:52:39.8244478Z ```python
2025-08-19T15:52:39.8244709Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:52:39.8244962Z ```
2025-08-19T15:52:39.8245040Z 
2025-08-19T15:52:39.8245174Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:52:39.8245398Z 
2025-08-19T15:52:39.8245477Z <a id="common.config"></a>
2025-08-19T15:52:39.8245602Z 
2025-08-19T15:52:39.8245674Z # common.config
2025-08-19T15:52:39.8245776Z 
2025-08-19T15:52:39.8245847Z <a id="common.base"></a>
2025-08-19T15:52:39.8246086Z 
2025-08-19T15:52:39.8246156Z # common.base
2025-08-19T15:52:39.8246384Z 
2025-08-19T15:52:39.8246461Z <a id="common.base.Base"></a>
2025-08-19T15:52:39.8246606Z 
2025-08-19T15:52:39.8246668Z ## Base Objects
2025-08-19T15:52:39.8246767Z 
2025-08-19T15:52:39.8246835Z ```python
2025-08-19T15:52:39.8246995Z class Base(DeclarativeBase)
2025-08-19T15:52:39.8247184Z ```
2025-08-19T15:52:39.8247261Z 
2025-08-19T15:52:39.8247340Z Base class for SQLAlchemy models.
2025-08-19T15:52:39.8247493Z 
2025-08-19T15:52:39.8247562Z <a id="repricer"></a>
2025-08-19T15:52:39.8247676Z 
2025-08-19T15:52:39.8247737Z # repricer
2025-08-19T15:52:39.8247833Z 
2025-08-19T15:52:39.8247918Z <a id="repricer.app.schemas"></a>
2025-08-19T15:52:39.8248064Z 
2025-08-19T15:52:39.8248144Z # repricer.app.schemas
2025-08-19T15:52:39.8248262Z 
2025-08-19T15:52:39.8248343Z <a id="repricer.app.deps"></a>
2025-08-19T15:52:39.8248489Z 
2025-08-19T15:52:39.8248558Z # repricer.app.deps
2025-08-19T15:52:39.8248667Z 
2025-08-19T15:52:39.8248782Z Placeholder module for Keepa / SP-API clients.
2025-08-19T15:52:39.8248988Z 
2025-08-19T15:52:39.8249068Z <a id="repricer.app.logic"></a>
2025-08-19T15:52:39.8249210Z 
2025-08-19T15:52:39.8249286Z # repricer.app.logic
2025-08-19T15:52:39.8249402Z 
2025-08-19T15:52:39.8249500Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T15:52:39.8249680Z 
2025-08-19T15:52:39.8249742Z #### MIN\_MARGIN
2025-08-19T15:52:39.8249841Z 
2025-08-19T15:52:39.8249899Z 15 % ROI
2025-08-19T15:52:39.8249991Z 
2025-08-19T15:52:39.8250093Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T15:52:39.8250275Z 
2025-08-19T15:52:39.8250349Z #### compute\_price
2025-08-19T15:52:39.8250455Z 
2025-08-19T15:52:39.8250513Z ```python
2025-08-19T15:52:39.8250758Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T15:52:39.8251056Z ```
2025-08-19T15:52:39.8251141Z 
2025-08-19T15:52:39.8251245Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T15:52:39.8251519Z Replace with real competitive logic later.
2025-08-19T15:52:39.8251698Z 
2025-08-19T15:52:39.8251903Z <a id="repricer.app.main"></a>
2025-08-19T15:52:39.8252050Z 
2025-08-19T15:52:39.8252125Z # repricer.app.main
2025-08-19T15:52:39.8252232Z 
2025-08-19T15:52:39.8252308Z <a id="repricer.app"></a>
2025-08-19T15:52:39.8252435Z 
2025-08-19T15:52:39.8252506Z # repricer.app
2025-08-19T15:52:39.8252605Z 
2025-08-19T15:52:39.8252696Z <a id="repricer.tests.test_imports"></a>
2025-08-19T15:52:39.8252870Z 
2025-08-19T15:52:39.8252952Z # repricer.tests.test\_imports
2025-08-19T15:52:39.8253091Z 
2025-08-19T15:52:39.8253183Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T15:52:39.8253345Z 
2025-08-19T15:52:39.8253429Z # repricer.tests.test\_smoke
2025-08-19T15:52:39.8253566Z 
2025-08-19T15:52:39.8253649Z <a id="repricer.tests"></a>
2025-08-19T15:52:39.8253781Z 
2025-08-19T15:52:39.8253848Z # repricer.tests
2025-08-19T15:52:39.8253957Z 
2025-08-19T15:52:39.8254021Z <a id="db"></a>
2025-08-19T15:52:39.8254117Z 
2025-08-19T15:52:39.8254175Z # db
2025-08-19T15:52:39.8254265Z 
2025-08-19T15:52:39.8254343Z <a id="db.utils.views"></a>
2025-08-19T15:52:39.8254473Z 
2025-08-19T15:52:39.8254547Z # db.utils.views
2025-08-19T15:52:39.8254647Z 
2025-08-19T15:52:39.8254735Z <a id="db.utils.views.replace_view"></a>
2025-08-19T15:52:39.8254908Z 
2025-08-19T15:52:39.8254974Z #### replace\_view
2025-08-19T15:52:39.8255078Z 
2025-08-19T15:52:39.8255138Z ```python
2025-08-19T15:52:39.8255335Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T15:52:39.8255582Z ```
2025-08-19T15:52:39.8255663Z 
2025-08-19T15:52:39.8255751Z Drop and recreate a SQL view atomically.
2025-08-19T15:52:39.8255916Z 
2025-08-19T15:52:39.8256101Z <a id="db.utils"></a>
2025-08-19T15:52:39.8256216Z 
2025-08-19T15:52:39.8256279Z # db.utils
2025-08-19T15:52:39.8256376Z 
2025-08-19T15:52:39.8256452Z <a id="price_importer"></a>
2025-08-19T15:52:39.8256582Z 
2025-08-19T15:52:39.8256651Z # price\_importer
2025-08-19T15:52:39.8256760Z 
2025-08-19T15:52:39.8256864Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T15:52:39.8257050Z 
2025-08-19T15:52:39.8257154Z # price\_importer.services\_common.dsn
2025-08-19T15:52:39.8257444Z 
2025-08-19T15:52:39.8257570Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T15:52:39.8257784Z 
2025-08-19T15:52:39.8257848Z #### build\_dsn
2025-08-19T15:52:39.8257946Z 
2025-08-19T15:52:39.8258004Z ```python
2025-08-19T15:52:39.8258178Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:52:39.8258397Z ```
2025-08-19T15:52:39.8258476Z 
2025-08-19T15:52:39.8258540Z Return safe DSN.
2025-08-19T15:52:39.8258643Z 
2025-08-19T15:52:39.8258996Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T15:52:39.8259203Z 
2025-08-19T15:52:39.8259330Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T15:52:39.8259545Z 
2025-08-19T15:52:39.8259655Z # price\_importer.services\_common.models\_vendor
2025-08-19T15:52:39.8259844Z 
2025-08-19T15:52:39.8259953Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T15:52:39.8260137Z 
2025-08-19T15:52:39.8260229Z # price\_importer.services\_common.db\_url
2025-08-19T15:52:39.8260416Z 
2025-08-19T15:52:39.8260553Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T15:52:39.8260769Z 
2025-08-19T15:52:39.8260834Z #### build\_url
2025-08-19T15:52:39.8260939Z 
2025-08-19T15:52:39.8260999Z ```python
2025-08-19T15:52:39.8261167Z def build_url(async_: bool = True) -> str
2025-08-19T15:52:39.8261390Z ```
2025-08-19T15:52:39.8261469Z 
2025-08-19T15:52:39.8261568Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:52:39.8261741Z 
2025-08-19T15:52:39.8261844Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T15:52:39.8262034Z 
2025-08-19T15:52:39.8262124Z # price\_importer.services\_common.keepa
2025-08-19T15:52:39.8262288Z 
2025-08-19T15:52:39.8262388Z <a id="price_importer.services_common.llm"></a>
2025-08-19T15:52:39.8262576Z 
2025-08-19T15:52:39.8262665Z # price\_importer.services\_common.llm
2025-08-19T15:52:39.8262825Z 
2025-08-19T15:52:39.8262942Z <a id="price_importer.services_common.settings"></a>
2025-08-19T15:52:39.8263266Z 
2025-08-19T15:52:39.8263364Z # price\_importer.services\_common.settings
2025-08-19T15:52:39.8263542Z 
2025-08-19T15:52:39.8263642Z <a id="price_importer.services_common.db"></a>
2025-08-19T15:52:39.8263820Z 
2025-08-19T15:52:39.8263906Z # price\_importer.services\_common.db
2025-08-19T15:52:39.8264073Z 
2025-08-19T15:52:39.8264227Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T15:52:39.8264467Z 
2025-08-19T15:52:39.8264547Z #### build\_sqlalchemy\_url
2025-08-19T15:52:39.8264676Z 
2025-08-19T15:52:39.8264737Z ```python
2025-08-19T15:52:39.8264908Z def build_sqlalchemy_url() -> str
2025-08-19T15:52:39.8265108Z ```
2025-08-19T15:52:39.8265195Z 
2025-08-19T15:52:39.8265286Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:52:39.8265454Z 
2025-08-19T15:52:39.8265602Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T15:52:39.8265829Z 
2025-08-19T15:52:39.8265902Z #### build\_asyncpg\_dsn
2025-08-19T15:52:39.8266156Z 
2025-08-19T15:52:39.8266230Z ```python
2025-08-19T15:52:39.8266396Z def build_asyncpg_dsn() -> str
2025-08-19T15:52:39.8266593Z ```
2025-08-19T15:52:39.8266674Z 
2025-08-19T15:52:39.8266799Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:52:39.8267016Z 
2025-08-19T15:52:39.8267142Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T15:52:39.8267349Z 
2025-08-19T15:52:39.8267423Z #### refresh\_mvs
2025-08-19T15:52:39.8267531Z 
2025-08-19T15:52:39.8267591Z ```python
2025-08-19T15:52:39.8267788Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:52:39.8268032Z ```
2025-08-19T15:52:39.8268120Z 
2025-08-19T15:52:39.8268254Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:52:39.8268472Z 
2025-08-19T15:52:39.8268567Z <a id="price_importer.services_common"></a>
2025-08-19T15:52:39.8268748Z 
2025-08-19T15:52:39.8268835Z # price\_importer.services\_common
2025-08-19T15:52:39.8268988Z 
2025-08-19T15:52:39.8269097Z <a id="price_importer.services_common.base"></a>
2025-08-19T15:52:39.8269414Z 
2025-08-19T15:52:39.8269503Z # price\_importer.services\_common.base
2025-08-19T15:52:39.8269673Z 
2025-08-19T15:52:39.8269762Z <a id="price_importer.normaliser"></a>
2025-08-19T15:52:39.8269925Z 
2025-08-19T15:52:39.8270013Z # price\_importer.normaliser
2025-08-19T15:52:39.8270152Z 
2025-08-19T15:52:39.8270256Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T15:52:39.8270437Z 
2025-08-19T15:52:39.8270532Z # price\_importer.common.models\_vendor
2025-08-19T15:52:39.8270690Z 
2025-08-19T15:52:39.8270779Z <a id="price_importer.common.db_url"></a>
2025-08-19T15:52:39.8270953Z 
2025-08-19T15:52:39.8271035Z # price\_importer.common.db\_url
2025-08-19T15:52:39.8271181Z 
2025-08-19T15:52:39.8271292Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T15:52:39.8271477Z 
2025-08-19T15:52:39.8271538Z #### make\_dsn
2025-08-19T15:52:39.8271636Z 
2025-08-19T15:52:39.8271701Z ```python
2025-08-19T15:52:39.8271870Z def make_dsn(async_: bool = False) -> str
2025-08-19T15:52:39.8272103Z ```
2025-08-19T15:52:39.8272184Z 
2025-08-19T15:52:39.8272300Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T15:52:39.8272504Z 
2025-08-19T15:52:39.8272614Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T15:52:39.8272803Z 
2025-08-19T15:52:39.8272871Z #### build\_url
2025-08-19T15:52:39.8272970Z 
2025-08-19T15:52:39.8273030Z ```python
2025-08-19T15:52:39.8273204Z def build_url(async_: bool = False) -> str
2025-08-19T15:52:39.8273424Z ```
2025-08-19T15:52:39.8273507Z 
2025-08-19T15:52:39.8273626Z Return Postgres DSN built from environment variables.
2025-08-19T15:52:39.8273825Z 
2025-08-19T15:52:39.8273908Z <a id="price_importer.common"></a>
2025-08-19T15:52:39.8274065Z 
2025-08-19T15:52:39.8274142Z # price\_importer.common
2025-08-19T15:52:39.8274273Z 
2025-08-19T15:52:39.8274370Z <a id="price_importer.common.base"></a>
2025-08-19T15:52:39.8274534Z 
2025-08-19T15:52:39.8274615Z # price\_importer.common.base
2025-08-19T15:52:39.8274884Z 
2025-08-19T15:52:39.8274984Z <a id="price_importer.tests.conftest"></a>
2025-08-19T15:52:39.8275153Z 
2025-08-19T15:52:39.8275235Z # price\_importer.tests.conftest
2025-08-19T15:52:39.8275385Z 
2025-08-19T15:52:39.8275487Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T15:52:39.8275661Z 
2025-08-19T15:52:39.8275754Z # price\_importer.tests.test\_reader
2025-08-19T15:52:39.8275912Z 
2025-08-19T15:52:39.8276223Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T15:52:39.8276418Z 
2025-08-19T15:52:39.8276516Z # price\_importer.tests.test\_imports
2025-08-19T15:52:39.8276672Z 
2025-08-19T15:52:39.8276767Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T15:52:39.8276943Z 
2025-08-19T15:52:39.8277026Z # price\_importer.tests.test\_smoke
2025-08-19T15:52:39.8277183Z 
2025-08-19T15:52:39.8277289Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T15:52:39.8277505Z 
2025-08-19T15:52:39.8277596Z # price\_importer.tests.test\_normaliser
2025-08-19T15:52:39.8277767Z 
2025-08-19T15:52:39.8277856Z <a id="price_importer.tests"></a>
2025-08-19T15:52:39.8278014Z 
2025-08-19T15:52:39.8278091Z # price\_importer.tests
2025-08-19T15:52:39.8278223Z 
2025-08-19T15:52:39.8278308Z <a id="price_importer.reader"></a>
2025-08-19T15:52:39.8278462Z 
2025-08-19T15:52:39.8278545Z # price\_importer.reader
2025-08-19T15:52:39.8278673Z 
2025-08-19T15:52:39.8278766Z <a id="price_importer.repository"></a>
2025-08-19T15:52:39.8278939Z 
2025-08-19T15:52:39.8279022Z # price\_importer.repository
2025-08-19T15:52:39.8279161Z 
2025-08-19T15:52:39.8279245Z <a id="price_importer.import"></a>
2025-08-19T15:52:39.8279401Z 
2025-08-19T15:52:39.8279476Z # price\_importer.import
2025-08-19T15:52:39.8279599Z 
2025-08-19T15:52:39.8279676Z <a id="fees_h10"></a>
2025-08-19T15:52:39.8279792Z 
2025-08-19T15:52:39.8279853Z # fees\_h10
2025-08-19T15:52:39.8279954Z 
2025-08-19T15:52:39.8280030Z <a id="fees_h10.worker"></a>
2025-08-19T15:52:39.8280160Z 
2025-08-19T15:52:39.8280224Z # fees\_h10.worker
2025-08-19T15:52:39.8280342Z 
2025-08-19T15:52:39.8280574Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T15:52:39.8280759Z 
2025-08-19T15:52:39.8280837Z #### list\_active\_asins
2025-08-19T15:52:39.8280959Z 
2025-08-19T15:52:39.8281021Z ```python
2025-08-19T15:52:39.8281193Z def list_active_asins() -> list[str]
2025-08-19T15:52:39.8281406Z ```
2025-08-19T15:52:39.8281493Z 
2025-08-19T15:52:39.8281604Z Return known ASINs or an empty list if unavailable.
2025-08-19T15:52:39.8281802Z 
2025-08-19T15:52:39.8281885Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T15:52:39.8282054Z 
2025-08-19T15:52:39.8282132Z # fees\_h10.tests.test\_smoke
2025-08-19T15:52:39.8282266Z 
2025-08-19T15:52:39.8282347Z <a id="fees_h10.tests"></a>
2025-08-19T15:52:39.8282474Z 
2025-08-19T15:52:39.8282536Z # fees\_h10.tests
2025-08-19T15:52:39.8282643Z 
2025-08-19T15:52:39.8282715Z <a id="fees_h10.client"></a>
2025-08-19T15:52:39.8282843Z 
2025-08-19T15:52:39.8282905Z # fees\_h10.client
2025-08-19T15:52:39.8283012Z 
2025-08-19T15:52:39.8283091Z <a id="fees_h10.repository"></a>
2025-08-19T15:52:39.8283245Z 
2025-08-19T15:52:39.8283324Z # fees\_h10.repository
2025-08-19T15:52:39.8283438Z 
2025-08-19T15:52:39.8283504Z <a id="emailer"></a>
2025-08-19T15:52:39.8283615Z 
2025-08-19T15:52:39.8283681Z # emailer
2025-08-19T15:52:39.8283768Z 
2025-08-19T15:52:39.8283867Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T15:52:39.8284049Z 
2025-08-19T15:52:39.8284134Z # emailer.tests.test\_import\_emailer
2025-08-19T15:52:39.8284293Z 
2025-08-19T15:52:39.8284382Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T15:52:39.8284534Z 
2025-08-19T15:52:39.8284611Z # emailer.tests.test\_smoke
2025-08-19T15:52:39.8284743Z 
2025-08-19T15:52:39.8284823Z <a id="emailer.tests"></a>
2025-08-19T15:52:39.8284952Z 
2025-08-19T15:52:39.8285016Z # emailer.tests
2025-08-19T15:52:39.8285124Z 
2025-08-19T15:52:39.8285205Z <a id="emailer.generate_body"></a>
2025-08-19T15:52:39.8285354Z 
2025-08-19T15:52:39.8285434Z # emailer.generate\_body
2025-08-19T15:52:39.8285557Z 
2025-08-19T15:52:39.8285747Z <a id="llm_server"></a>
2025-08-19T15:52:39.8285869Z 
2025-08-19T15:52:39.8286048Z # llm\_server
2025-08-19T15:52:39.8286145Z 
2025-08-19T15:52:39.8286220Z <a id="llm_server.app"></a>
2025-08-19T15:52:39.8286355Z 
2025-08-19T15:52:39.8286419Z # llm\_server.app
2025-08-19T15:52:39.8286523Z 
