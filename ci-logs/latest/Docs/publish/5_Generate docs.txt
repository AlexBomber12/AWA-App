2025-08-19T12:34:26.4275151Z ##[group]Run pydoc-markdown
2025-08-19T12:34:26.4275475Z [36;1mpydoc-markdown[0m
2025-08-19T12:34:26.4319707Z shell: /usr/bin/bash -e {0}
2025-08-19T12:34:26.4320186Z env:
2025-08-19T12:34:26.4320501Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:34:26.4321047Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T12:34:26.4321560Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:34:26.4322014Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:34:26.4322468Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:34:26.4322919Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T12:34:26.4323301Z ##[endgroup]
2025-08-19T12:34:26.7778019Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T12:34:26.7779423Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T12:34:26.7780272Z In "pydoc-markdown.yml"
2025-08-19T12:34:26.7780846Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T12:34:26.7781640Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T12:34:26.7782616Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T12:34:26.7783264Z 
2025-08-19T12:34:27.1209449Z <a id="__init__"></a>
2025-08-19T12:34:27.1209894Z 
2025-08-19T12:34:27.1210236Z # \_\_init\_\_
2025-08-19T12:34:27.1210445Z 
2025-08-19T12:34:27.1210585Z <a id="api"></a>
2025-08-19T12:34:27.1210786Z 
2025-08-19T12:34:27.1210897Z # api
2025-08-19T12:34:27.1211067Z 
2025-08-19T12:34:27.1211205Z <a id="api.errors"></a>
2025-08-19T12:34:27.1211437Z 
2025-08-19T12:34:27.1211570Z # api.errors
2025-08-19T12:34:27.1211755Z 
2025-08-19T12:34:27.1211903Z <a id="api.sentry_config"></a>
2025-08-19T12:34:27.1212178Z 
2025-08-19T12:34:27.1212326Z # api.sentry\_config
2025-08-19T12:34:27.1212539Z 
2025-08-19T12:34:27.1212718Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T12:34:27.1213059Z 
2025-08-19T12:34:27.1213709Z # api.tests.test\_stats\_contracts
2025-08-19T12:34:27.1214030Z 
2025-08-19T12:34:27.1214207Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T12:34:27.1214537Z 
2025-08-19T12:34:27.1214690Z # api.tests.test\_sentry\_scrub
2025-08-19T12:34:27.1214965Z 
2025-08-19T12:34:27.1215151Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T12:34:27.1215472Z 
2025-08-19T12:34:27.1215634Z # api.tests.test\_roi\_basic\_auth
2025-08-19T12:34:27.1215925Z 
2025-08-19T12:34:27.1216086Z <a id="api.tests.test_errors_json"></a>
2025-08-19T12:34:27.1216399Z 
2025-08-19T12:34:27.1216545Z # api.tests.test\_errors\_json
2025-08-19T12:34:27.1216813Z 
2025-08-19T12:34:27.1216960Z <a id="api.tests.test_llm"></a>
2025-08-19T12:34:27.1217224Z 
2025-08-19T12:34:27.1217370Z # api.tests.test\_llm
2025-08-19T12:34:27.1217594Z 
2025-08-19T12:34:27.1217761Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T12:34:27.1218082Z 
2025-08-19T12:34:27.1218229Z # api.tests.test\_roi\_filters
2025-08-19T12:34:27.1218486Z 
2025-08-19T12:34:27.1218662Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T12:34:27.1218990Z 
2025-08-19T12:34:27.1219159Z # api.tests.test\_sentry\_event
2025-08-19T12:34:27.1219427Z 
2025-08-19T12:34:27.1219665Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T12:34:27.1220229Z 
2025-08-19T12:34:27.1220383Z ## DummyTransport Objects
2025-08-19T12:34:27.1220639Z 
2025-08-19T12:34:27.1220755Z ```python
2025-08-19T12:34:27.1221061Z class DummyTransport()
2025-08-19T12:34:27.1221394Z ```
2025-08-19T12:34:27.1221544Z 
2025-08-19T12:34:27.1221871Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T12:34:27.1222357Z 
2025-08-19T12:34:27.1222493Z #### capture\_envelope
2025-08-19T12:34:27.1222713Z 
2025-08-19T12:34:27.1222836Z ```python
2025-08-19T12:34:27.1223155Z def capture_envelope(envelope)
2025-08-19T12:34:27.1223534Z ```
2025-08-19T12:34:27.1223686Z 
2025-08-19T12:34:27.1223920Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T12:34:27.1224325Z 
2025-08-19T12:34:27.1224484Z <a id="api.tests.test_cors"></a>
2025-08-19T12:34:27.1225153Z 
2025-08-19T12:34:27.1225305Z # api.tests.test\_cors
2025-08-19T12:34:27.1225532Z 
2025-08-19T12:34:27.1225694Z <a id="api.tests.test_imports"></a>
2025-08-19T12:34:27.1225994Z 
2025-08-19T12:34:27.1226135Z # api.tests.test\_imports
2025-08-19T12:34:27.1226375Z 
2025-08-19T12:34:27.1226534Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T12:34:27.1226848Z 
2025-08-19T12:34:27.1226991Z # api.tests.test\_rate\_limit
2025-08-19T12:34:27.1227246Z 
2025-08-19T12:34:27.1227428Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T12:34:27.1227762Z 
2025-08-19T12:34:27.1227876Z #### app
2025-08-19T12:34:27.1228044Z 
2025-08-19T12:34:27.1228170Z noqa: E402
2025-08-19T12:34:27.1228336Z 
2025-08-19T12:34:27.1228497Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T12:34:27.1228815Z 
2025-08-19T12:34:27.1228963Z # api.tests.test\_entrypoint
2025-08-19T12:34:27.1229220Z 
2025-08-19T12:34:27.1229384Z <a id="api.tests.test_health"></a>
2025-08-19T12:34:27.1229687Z 
2025-08-19T12:34:27.1229834Z # api.tests.test\_health
2025-08-19T12:34:27.1230264Z 
2025-08-19T12:34:27.1230442Z <a id="api.tests.test_score"></a>
2025-08-19T12:34:27.1230736Z 
2025-08-19T12:34:27.1230875Z # api.tests.test\_score
2025-08-19T12:34:27.1231114Z 
2025-08-19T12:34:27.1231258Z <a id="api.logging_config"></a>
2025-08-19T12:34:27.1231518Z 
2025-08-19T12:34:27.1231647Z # api.logging\_config
2025-08-19T12:34:27.1231879Z 
2025-08-19T12:34:27.1232028Z <a id="api.migrations.env"></a>
2025-08-19T12:34:27.1232303Z 
2025-08-19T12:34:27.1232444Z # api.migrations.env
2025-08-19T12:34:27.1232653Z 
2025-08-19T12:34:27.1232873Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T12:34:27.1233252Z 
2025-08-19T12:34:27.1233442Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T12:34:27.1233787Z 
2025-08-19T12:34:27.1233985Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T12:34:27.1234356Z 
2025-08-19T12:34:27.1234528Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T12:34:27.1235091Z 
2025-08-19T12:34:27.1235383Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T12:34:27.1235834Z 
2025-08-19T12:34:27.1236087Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T12:34:27.1236508Z 
2025-08-19T12:34:27.1236737Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T12:34:27.1237116Z 
2025-08-19T12:34:27.1237317Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T12:34:27.1237668Z 
2025-08-19T12:34:27.1237892Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T12:34:27.1238275Z 
2025-08-19T12:34:27.1238476Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T12:34:27.1238822Z 
2025-08-19T12:34:27.1239058Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T12:34:27.1239460Z 
2025-08-19T12:34:27.1239667Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T12:34:27.1240212Z 
2025-08-19T12:34:27.1240451Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T12:34:27.1240947Z 
2025-08-19T12:34:27.1241146Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T12:34:27.1241546Z 
2025-08-19T12:34:27.1241777Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T12:34:27.1242157Z 
2025-08-19T12:34:27.1242362Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T12:34:27.1242710Z 
2025-08-19T12:34:27.1242962Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T12:34:27.1243386Z 
2025-08-19T12:34:27.1243607Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T12:34:27.1243987Z 
2025-08-19T12:34:27.1244227Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T12:34:27.1244621Z 
2025-08-19T12:34:27.1244822Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T12:34:27.1245180Z 
2025-08-19T12:34:27.1245439Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T12:34:27.1245853Z 
2025-08-19T12:34:27.1246075Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T12:34:27.1246726Z 
2025-08-19T12:34:27.1246933Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T12:34:27.1247296Z 
2025-08-19T12:34:27.1247477Z # api.migrations.versions.0001\_baseline
2025-08-19T12:34:27.1247798Z 
2025-08-19T12:34:27.1247958Z <a id="api.migrations.versions"></a>
2025-08-19T12:34:27.1248268Z 
2025-08-19T12:34:27.1248411Z # api.migrations.versions
2025-08-19T12:34:27.1248657Z 
2025-08-19T12:34:27.1248799Z <a id="api.migrations"></a>
2025-08-19T12:34:27.1249056Z 
2025-08-19T12:34:27.1249180Z # api.migrations
2025-08-19T12:34:27.1249519Z 
2025-08-19T12:34:27.1249658Z <a id="api.db"></a>
2025-08-19T12:34:27.1249861Z 
2025-08-19T12:34:27.1249975Z # api.db
2025-08-19T12:34:27.1250324Z 
2025-08-19T12:34:27.1250486Z <a id="api.routes.score"></a>
2025-08-19T12:34:27.1250752Z 
2025-08-19T12:34:27.1250878Z # api.routes.score
2025-08-19T12:34:27.1251090Z 
2025-08-19T12:34:27.1251235Z <a id="api.routes.stats"></a>
2025-08-19T12:34:27.1251505Z 
2025-08-19T12:34:27.1251659Z # api.routes.stats
2025-08-19T12:34:27.1251875Z 
2025-08-19T12:34:27.1252018Z <a id="api.routes.roi"></a>
2025-08-19T12:34:27.1252267Z 
2025-08-19T12:34:27.1252400Z # api.routes.roi
2025-08-19T12:34:27.1252595Z 
2025-08-19T12:34:27.1252742Z <a id="api.routes.health"></a>
2025-08-19T12:34:27.1253015Z 
2025-08-19T12:34:27.1253141Z # api.routes.health
2025-08-19T12:34:27.1253341Z 
2025-08-19T12:34:27.1253506Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T12:34:27.1253827Z 
2025-08-19T12:34:27.1253945Z #### MAX\_SKEW
2025-08-19T12:34:27.1254125Z 
2025-08-19T12:34:27.1254249Z seconds
2025-08-19T12:34:27.1254404Z 
2025-08-19T12:34:27.1254567Z <a id="api.routes.health.health"></a>
2025-08-19T12:34:27.1254882Z 
2025-08-19T12:34:27.1254998Z #### health
2025-08-19T12:34:27.1255164Z 
2025-08-19T12:34:27.1255278Z ```python
2025-08-19T12:34:27.1255652Z @router.get("/health", include_in_schema=False)
2025-08-19T12:34:27.1256377Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T12:34:27.1257249Z ```
2025-08-19T12:34:27.1257413Z 
2025-08-19T12:34:27.1257638Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T12:34:27.1258010Z 
2025-08-19T12:34:27.1258167Z <a id="api.routes.repository"></a>
2025-08-19T12:34:27.1258467Z 
2025-08-19T12:34:27.1258610Z # api.routes.repository
2025-08-19T12:34:27.1258843Z 
2025-08-19T12:34:27.1258974Z <a id="api.routes"></a>
2025-08-19T12:34:27.1259207Z 
2025-08-19T12:34:27.1259325Z # api.routes
2025-08-19T12:34:27.1259503Z 
2025-08-19T12:34:27.1259659Z <a id="api.models.fee"></a>
2025-08-19T12:34:27.1259909Z 
2025-08-19T12:34:27.1260216Z # api.models.fee
2025-08-19T12:34:27.1260442Z 
2025-08-19T12:34:27.1260583Z <a id="api.models"></a>
2025-08-19T12:34:27.1260811Z 
2025-08-19T12:34:27.1260935Z # api.models
2025-08-19T12:34:27.1261128Z 
2025-08-19T12:34:27.1261277Z <a id="api.roi_repository"></a>
2025-08-19T12:34:27.1261548Z 
2025-08-19T12:34:27.1261694Z # api.roi\_repository
2025-08-19T12:34:27.1261909Z 
2025-08-19T12:34:27.1262046Z <a id="api.main"></a>
2025-08-19T12:34:27.1262259Z 
2025-08-19T12:34:27.1262387Z # api.main
2025-08-19T12:34:27.1262556Z 
2025-08-19T12:34:27.1262695Z <a id="api.main.ready"></a>
2025-08-19T12:34:27.1262948Z 
2025-08-19T12:34:27.1263058Z #### ready
2025-08-19T12:34:27.1263222Z 
2025-08-19T12:34:27.1263337Z ```python
2025-08-19T12:34:27.1263827Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T12:34:27.1264645Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T12:34:27.1265269Z                                                                       str]
2025-08-19T12:34:27.1265689Z ```
2025-08-19T12:34:27.1265828Z 
2025-08-19T12:34:27.1266072Z Return 200 only when migrations are at head.
2025-08-19T12:34:27.1266399Z 
2025-08-19T12:34:27.1266533Z <a id="api.config"></a>
2025-08-19T12:34:27.1266767Z 
2025-08-19T12:34:27.1266910Z # api.config
2025-08-19T12:34:27.1267104Z 
2025-08-19T12:34:27.1267243Z <a id="api.security"></a>
2025-08-19T12:34:27.1267495Z 
2025-08-19T12:34:27.1267846Z # api.security
2025-08-19T12:34:27.1268062Z 
2025-08-19T12:34:27.1268185Z <a id="etl"></a>
2025-08-19T12:34:27.1268382Z 
2025-08-19T12:34:27.1268501Z # etl
2025-08-19T12:34:27.1268657Z 
2025-08-19T12:34:27.1268804Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T12:34:27.1269095Z 
2025-08-19T12:34:27.1269229Z # etl.fba\_fee\_ingestor
2025-08-19T12:34:27.1269459Z 
2025-08-19T12:34:27.1269605Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T12:34:27.1269883Z 
2025-08-19T12:34:27.1270232Z # etl.sp\_fees\_ingestor
2025-08-19T12:34:27.1270476Z 
2025-08-19T12:34:27.1270637Z <a id="etl.keepa_ingestor"></a>
2025-08-19T12:34:27.1270902Z 
2025-08-19T12:34:27.1271031Z # etl.keepa\_ingestor
2025-08-19T12:34:27.1271251Z 
2025-08-19T12:34:27.1271376Z <a id="etl.db"></a>
2025-08-19T12:34:27.1271572Z 
2025-08-19T12:34:27.1271681Z # etl.db
2025-08-19T12:34:27.1271853Z 
2025-08-19T12:34:27.1272004Z <a id="etl.dialects.schemas"></a>
2025-08-19T12:34:27.1272287Z 
2025-08-19T12:34:27.1272439Z # etl.dialects.schemas
2025-08-19T12:34:27.1272664Z 
2025-08-19T12:34:27.1272856Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T12:34:27.1273203Z 
2025-08-19T12:34:27.1273373Z # etl.dialects.amazon\_reimbursements
2025-08-19T12:34:27.1273673Z 
2025-08-19T12:34:27.1273851Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T12:34:27.1274186Z 
2025-08-19T12:34:27.1274342Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T12:34:27.1274631Z 
2025-08-19T12:34:27.1274803Z <a id="etl.dialects.test_generic"></a>
2025-08-19T12:34:27.1275105Z 
2025-08-19T12:34:27.1275248Z # etl.dialects.test\_generic
2025-08-19T12:34:27.1275555Z 
2025-08-19T12:34:27.1275740Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T12:34:27.1276050Z 
2025-08-19T12:34:27.1276196Z # etl.dialects.amazon\_returns
2025-08-19T12:34:27.1276467Z 
2025-08-19T12:34:27.1276645Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T12:34:27.1276972Z 
2025-08-19T12:34:27.1277138Z # etl.dialects.amazon\_fee\_preview
2025-08-19T12:34:27.1277637Z 
2025-08-19T12:34:27.1277845Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T12:34:27.1278205Z 
2025-08-19T12:34:27.1278383Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T12:34:27.1278695Z 
2025-08-19T12:34:27.1278871Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T12:34:27.1279204Z 
2025-08-19T12:34:27.1279362Z # etl.dialects.amazon\_settlements
2025-08-19T12:34:27.1279652Z 
2025-08-19T12:34:27.1279802Z <a id="etl.dialects"></a>
2025-08-19T12:34:27.1280261Z 
2025-08-19T12:34:27.1280395Z # etl.dialects
2025-08-19T12:34:27.1280592Z 
2025-08-19T12:34:27.1280732Z <a id="ingest"></a>
2025-08-19T12:34:27.1280941Z 
2025-08-19T12:34:27.1281055Z # ingest
2025-08-19T12:34:27.1281228Z 
2025-08-19T12:34:27.1281378Z <a id="ingest.maintenance"></a>
2025-08-19T12:34:27.1281645Z 
2025-08-19T12:34:27.1281778Z # ingest.maintenance
2025-08-19T12:34:27.1282000Z 
2025-08-19T12:34:27.1282141Z <a id="ingest.copy_loader"></a>
2025-08-19T12:34:27.1282402Z 
2025-08-19T12:34:27.1282541Z # ingest.copy\_loader
2025-08-19T12:34:27.1282776Z 
2025-08-19T12:34:27.1282962Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T12:34:27.1283319Z 
2025-08-19T12:34:27.1283453Z #### copy\_df\_via\_temp
2025-08-19T12:34:27.1283682Z 
2025-08-19T12:34:27.1283800Z ```python
2025-08-19T12:34:27.1284116Z def copy_df_via_temp(engine: Engine,
2025-08-19T12:34:27.1284555Z                      df: pd.DataFrame,
2025-08-19T12:34:27.1284980Z                      target_table: str,
2025-08-19T12:34:27.1285388Z                      *,
2025-08-19T12:34:27.1285762Z                      target_schema: Optional[str] = None,
2025-08-19T12:34:27.1286255Z                      columns: Sequence[str],
2025-08-19T12:34:27.1286756Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T12:34:27.1287290Z                      analyze_after: bool = False,
2025-08-19T12:34:27.1287778Z                      connection: Any | None = None) -> int
2025-08-19T12:34:27.1288223Z ```
2025-08-19T12:34:27.1288373Z 
2025-08-19T12:34:27.1288671Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T12:34:27.1289316Z 
2025-08-19T12:34:27.1289479Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T12:34:27.1289786Z 
2025-08-19T12:34:27.1289931Z # ingest.tests.test\_smoke
2025-08-19T12:34:27.1290362Z 
2025-08-19T12:34:27.1290508Z <a id="ingest.tests"></a>
2025-08-19T12:34:27.1290771Z 
2025-08-19T12:34:27.1290893Z # ingest.tests
2025-08-19T12:34:27.1291086Z 
2025-08-19T12:34:27.1291257Z <a id="ingest.upload_router"></a>
2025-08-19T12:34:27.1291547Z 
2025-08-19T12:34:27.1291688Z # ingest.upload\_router
2025-08-19T12:34:27.1291914Z 
2025-08-19T12:34:27.1292073Z <a id="ingest.email_watcher"></a>
2025-08-19T12:34:27.1292346Z 
2025-08-19T12:34:27.1292478Z # ingest.email\_watcher
2025-08-19T12:34:27.1292705Z 
2025-08-19T12:34:27.1292865Z <a id="ingest.email_watcher.main"></a>
2025-08-19T12:34:27.1293170Z 
2025-08-19T12:34:27.1293292Z #### main
2025-08-19T12:34:27.1293454Z 
2025-08-19T12:34:27.1293568Z ```python
2025-08-19T12:34:27.1293884Z def main() -> dict[str, str]
2025-08-19T12:34:27.1294248Z ```
2025-08-19T12:34:27.1294405Z 
2025-08-19T12:34:27.1294668Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T12:34:27.1295091Z 
2025-08-19T12:34:27.1295326Z Returns {"status": "success"} when processing completes.
2025-08-19T12:34:27.1295724Z 
2025-08-19T12:34:27.1295859Z <a id="ingest.tasks"></a>
2025-08-19T12:34:27.1296093Z 
2025-08-19T12:34:27.1296217Z # ingest.tasks
2025-08-19T12:34:27.1296402Z 
2025-08-19T12:34:27.1296575Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T12:34:27.1296910Z 
2025-08-19T12:34:27.1297040Z #### task\_import\_file
2025-08-19T12:34:27.1297261Z 
2025-08-19T12:34:27.1297373Z ```python
2025-08-19T12:34:27.1297761Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T12:34:27.1298311Z def task_import_file(self: Any,
2025-08-19T12:34:27.1298701Z                      uri: str,
2025-08-19T12:34:27.1299101Z                      report_type: str | None = None,
2025-08-19T12:34:27.1299829Z                      force: bool = False) -> dict[str, Any]
2025-08-19T12:34:27.1300508Z ```
2025-08-19T12:34:27.1300680Z 
2025-08-19T12:34:27.1300934Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T12:34:27.1301345Z 
2025-08-19T12:34:27.1301502Z <a id="ingest.celery_app"></a>
2025-08-19T12:34:27.1301773Z 
2025-08-19T12:34:27.1301907Z # ingest.celery\_app
2025-08-19T12:34:27.1302124Z 
2025-08-19T12:34:27.1302280Z <a id="ingest.ingest_router"></a>
2025-08-19T12:34:27.1302558Z 
2025-08-19T12:34:27.1302693Z # ingest.ingest\_router
2025-08-19T12:34:27.1302924Z 
2025-08-19T12:34:27.1303062Z <a id="logistics_etl"></a>
2025-08-19T12:34:27.1303301Z 
2025-08-19T12:34:27.1303423Z # logistics\_etl
2025-08-19T12:34:27.1303629Z 
2025-08-19T12:34:27.1303771Z Daily logistics ETL job.
2025-08-19T12:34:27.1304002Z 
2025-08-19T12:34:27.1304153Z <a id="logistics_etl.__main__"></a>
2025-08-19T12:34:27.1304438Z 
2025-08-19T12:34:27.1304578Z # logistics\_etl.\_\_main\_\_
2025-08-19T12:34:27.1304837Z 
2025-08-19T12:34:27.1304996Z <a id="logistics_etl.dsn"></a>
2025-08-19T12:34:27.1305255Z 
2025-08-19T12:34:27.1305382Z # logistics\_etl.dsn
2025-08-19T12:34:27.1305598Z 
2025-08-19T12:34:27.1305818Z Local DSN builder to avoid cross-service dependency.
2025-08-19T12:34:27.1306193Z 
2025-08-19T12:34:27.1306365Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T12:34:27.1306678Z 
2025-08-19T12:34:27.1306796Z #### build\_dsn
2025-08-19T12:34:27.1306985Z 
2025-08-19T12:34:27.1307108Z ```python
2025-08-19T12:34:27.1307431Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:34:27.1307848Z ```
2025-08-19T12:34:27.1307998Z 
2025-08-19T12:34:27.1308254Z Return a Postgres DSN assembled from environment variables.
2025-08-19T12:34:27.1308684Z 
2025-08-19T12:34:27.1308959Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T12:34:27.1309700Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T12:34:27.1310555Z error when any required variable is missing.
2025-08-19T12:34:27.1310922Z 
2025-08-19T12:34:27.1311329Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T12:34:27.1311662Z 
2025-08-19T12:34:27.1311813Z # logistics\_etl.tests.conftest
2025-08-19T12:34:27.1312096Z 
2025-08-19T12:34:27.1312290Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T12:34:27.1312638Z 
2025-08-19T12:34:27.1312807Z # logistics\_etl.tests.test\_repository
2025-08-19T12:34:27.1313116Z 
2025-08-19T12:34:27.1313289Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T12:34:27.1313620Z 
2025-08-19T12:34:27.1313771Z # logistics\_etl.tests.test\_cron
2025-08-19T12:34:27.1314050Z 
2025-08-19T12:34:27.1314230Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T12:34:27.1314575Z 
2025-08-19T12:34:27.1314728Z # logistics\_etl.tests.test\_imports
2025-08-19T12:34:27.1315024Z 
2025-08-19T12:34:27.1315201Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T12:34:27.1315530Z 
2025-08-19T12:34:27.1315682Z # logistics\_etl.tests.test\_smoke
2025-08-19T12:34:27.1315991Z 
2025-08-19T12:34:27.1316170Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T12:34:27.1316507Z 
2025-08-19T12:34:27.1316662Z # logistics\_etl.tests.test\_client
2025-08-19T12:34:27.1316954Z 
2025-08-19T12:34:27.1317101Z <a id="logistics_etl.tests"></a>
2025-08-19T12:34:27.1317372Z 
2025-08-19T12:34:27.1317514Z # logistics\_etl.tests
2025-08-19T12:34:27.1317735Z 
2025-08-19T12:34:27.1317877Z <a id="logistics_etl.flow"></a>
2025-08-19T12:34:27.1318139Z 
2025-08-19T12:34:27.1318279Z # logistics\_etl.flow
2025-08-19T12:34:27.1318493Z 
2025-08-19T12:34:27.1318643Z <a id="logistics_etl.client"></a>
2025-08-19T12:34:27.1318933Z 
2025-08-19T12:34:27.1319064Z # logistics\_etl.client
2025-08-19T12:34:27.1319285Z 
2025-08-19T12:34:27.1319435Z <a id="logistics_etl.cron"></a>
2025-08-19T12:34:27.1319697Z 
2025-08-19T12:34:27.1319823Z # logistics\_etl.cron
2025-08-19T12:34:27.1320215Z 
2025-08-19T12:34:27.1320372Z <a id="logistics_etl.db"></a>
2025-08-19T12:34:27.1320629Z 
2025-08-19T12:34:27.1320753Z # logistics\_etl.db
2025-08-19T12:34:27.1321189Z 
2025-08-19T12:34:27.1321355Z <a id="logistics_etl.repository"></a>
2025-08-19T12:34:27.1321662Z 
2025-08-19T12:34:27.1352650Z # logistics\_etl.repository
2025-08-19T12:34:27.1352998Z 
2025-08-19T12:34:27.1353137Z <a id="alert_bot"></a>
2025-08-19T12:34:27.1353342Z 
2025-08-19T12:34:27.1353451Z # alert\_bot
2025-08-19T12:34:27.1353614Z 
2025-08-19T12:34:27.1353758Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T12:34:27.1354042Z 
2025-08-19T12:34:27.1354163Z # alert\_bot.tests.test\_smoke
2025-08-19T12:34:27.1354390Z 
2025-08-19T12:34:27.1354511Z <a id="alert_bot.tests"></a>
2025-08-19T12:34:27.1354726Z 
2025-08-19T12:34:27.1354843Z # alert\_bot.tests
2025-08-19T12:34:27.1355019Z 
2025-08-19T12:34:27.1355141Z <a id="alert_bot.alert_bot"></a>
2025-08-19T12:34:27.1355374Z 
2025-08-19T12:34:27.1355488Z # alert\_bot.alert\_bot
2025-08-19T12:34:27.1355683Z 
2025-08-19T12:34:27.1355805Z <a id="alert_bot.rules"></a>
2025-08-19T12:34:27.1356024Z 
2025-08-19T12:34:27.1356142Z # alert\_bot.rules
2025-08-19T12:34:27.1356316Z 
2025-08-19T12:34:27.1356436Z <a id="common"></a>
2025-08-19T12:34:27.1356598Z 
2025-08-19T12:34:27.1356695Z # common
2025-08-19T12:34:27.1356832Z 
2025-08-19T12:34:27.1356951Z <a id="common.dsn"></a>
2025-08-19T12:34:27.1357141Z 
2025-08-19T12:34:27.1357238Z # common.dsn
2025-08-19T12:34:27.1357395Z 
2025-08-19T12:34:27.1357518Z <a id="common.dsn.build_dsn"></a>
2025-08-19T12:34:27.1357761Z 
2025-08-19T12:34:27.1357864Z #### build\_dsn
2025-08-19T12:34:27.1358019Z 
2025-08-19T12:34:27.1358118Z ```python
2025-08-19T12:34:27.1358400Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:34:27.1358748Z ```
2025-08-19T12:34:27.1358874Z 
2025-08-19T12:34:27.1359065Z Return a Postgres DSN, validating required variables.
2025-08-19T12:34:27.1359378Z 
2025-08-19T12:34:27.1359673Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T12:34:27.1360997Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T12:34:27.1361856Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T12:34:27.1362675Z missing.
2025-08-19T12:34:27.1362847Z 
2025-08-19T12:34:27.1363012Z <a id="common.models_vendor"></a>
2025-08-19T12:34:27.1363297Z 
2025-08-19T12:34:27.1363434Z # common.models\_vendor
2025-08-19T12:34:27.1363664Z 
2025-08-19T12:34:27.1363829Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T12:34:27.1364141Z 
2025-08-19T12:34:27.1364262Z ## Vendor Objects
2025-08-19T12:34:27.1364463Z 
2025-08-19T12:34:27.1364580Z ```python
2025-08-19T12:34:27.1364866Z class Vendor(Base)
2025-08-19T12:34:27.1365166Z ```
2025-08-19T12:34:27.1365314Z 
2025-08-19T12:34:27.1365465Z Vendor of inventory items.
2025-08-19T12:34:27.1365706Z 
2025-08-19T12:34:27.1365888Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T12:34:27.1366234Z 
2025-08-19T12:34:27.1366364Z ## VendorPrice Objects
2025-08-19T12:34:27.1366577Z 
2025-08-19T12:34:27.1366700Z ```python
2025-08-19T12:34:27.1366985Z class VendorPrice(Base)
2025-08-19T12:34:27.1367318Z ```
2025-08-19T12:34:27.1367474Z 
2025-08-19T12:34:27.1367660Z Association table linking vendors to pricing.
2025-08-19T12:34:27.1368015Z 
2025-08-19T12:34:27.1368161Z <a id="common.db_url"></a>
2025-08-19T12:34:27.1368397Z 
2025-08-19T12:34:27.1368516Z # common.db\_url
2025-08-19T12:34:27.1368714Z 
2025-08-19T12:34:27.1368864Z <a id="common.db_url.build_url"></a>
2025-08-19T12:34:27.1369151Z 
2025-08-19T12:34:27.1369270Z #### build\_url
2025-08-19T12:34:27.1369452Z 
2025-08-19T12:34:27.1369564Z ```python
2025-08-19T12:34:27.1369890Z def build_url(async_: bool = True) -> str
2025-08-19T12:34:27.1370435Z ```
2025-08-19T12:34:27.1370587Z 
2025-08-19T12:34:27.1370762Z Return Postgres DSN from env or PG_* parts.
2025-08-19T12:34:27.1371086Z 
2025-08-19T12:34:27.1371225Z <a id="common.keepa"></a>
2025-08-19T12:34:27.1371466Z 
2025-08-19T12:34:27.1371587Z # common.keepa
2025-08-19T12:34:27.1371768Z 
2025-08-19T12:34:27.1371903Z <a id="common.llm"></a>
2025-08-19T12:34:27.1372255Z 
2025-08-19T12:34:27.1372369Z # common.llm
2025-08-19T12:34:27.1372546Z 
2025-08-19T12:34:27.1372695Z <a id="common.settings"></a>
2025-08-19T12:34:27.1372945Z 
2025-08-19T12:34:27.1373066Z # common.settings
2025-08-19T12:34:27.1373263Z 
2025-08-19T12:34:27.1373390Z <a id="common.db"></a>
2025-08-19T12:34:27.1373600Z 
2025-08-19T12:34:27.1373720Z # common.db
2025-08-19T12:34:27.1373880Z 
2025-08-19T12:34:27.1374043Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T12:34:27.1374358Z 
2025-08-19T12:34:27.1374499Z #### build\_sqlalchemy\_url
2025-08-19T12:34:27.1374736Z 
2025-08-19T12:34:27.1374848Z ```python
2025-08-19T12:34:27.1375155Z def build_sqlalchemy_url() -> str
2025-08-19T12:34:27.1375528Z ```
2025-08-19T12:34:27.1375682Z 
2025-08-19T12:34:27.1375860Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T12:34:27.1376178Z 
2025-08-19T12:34:27.1376321Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T12:34:27.1376562Z 
2025-08-19T12:34:27.1376666Z #### build\_asyncpg\_dsn
2025-08-19T12:34:27.1376852Z 
2025-08-19T12:34:27.1376956Z ```python
2025-08-19T12:34:27.1377194Z def build_asyncpg_dsn() -> str
2025-08-19T12:34:27.1377494Z ```
2025-08-19T12:34:27.1377614Z 
2025-08-19T12:34:27.1377802Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T12:34:27.1378139Z 
2025-08-19T12:34:27.1378262Z <a id="common.db.refresh_mvs"></a>
2025-08-19T12:34:27.1378486Z 
2025-08-19T12:34:27.1378585Z #### refresh\_mvs
2025-08-19T12:34:27.1378739Z 
2025-08-19T12:34:27.1378828Z ```python
2025-08-19T12:34:27.1379118Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T12:34:27.1379485Z ```
2025-08-19T12:34:27.1379609Z 
2025-08-19T12:34:27.1379818Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T12:34:27.1380377Z 
2025-08-19T12:34:27.1380489Z <a id="common.config"></a>
2025-08-19T12:34:27.1380692Z 
2025-08-19T12:34:27.1380792Z # common.config
2025-08-19T12:34:27.1380939Z 
2025-08-19T12:34:27.1381049Z <a id="common.base"></a>
2025-08-19T12:34:27.1381228Z 
2025-08-19T12:34:27.1381327Z # common.base
2025-08-19T12:34:27.1381603Z 
2025-08-19T12:34:27.1381717Z <a id="common.base.Base"></a>
2025-08-19T12:34:27.1381919Z 
2025-08-19T12:34:27.1382010Z ## Base Objects
2025-08-19T12:34:27.1382159Z 
2025-08-19T12:34:27.1382250Z ```python
2025-08-19T12:34:27.1382494Z class Base(DeclarativeBase)
2025-08-19T12:34:27.1382769Z ```
2025-08-19T12:34:27.1382883Z 
2025-08-19T12:34:27.1383007Z Base class for SQLAlchemy models.
2025-08-19T12:34:27.1383227Z 
2025-08-19T12:34:27.1383329Z <a id="repricer"></a>
2025-08-19T12:34:27.1383499Z 
2025-08-19T12:34:27.1383593Z # repricer
2025-08-19T12:34:27.1383721Z 
2025-08-19T12:34:27.1383843Z <a id="repricer.app.schemas"></a>
2025-08-19T12:34:27.1384068Z 
2025-08-19T12:34:27.1384175Z # repricer.app.schemas
2025-08-19T12:34:27.1384349Z 
2025-08-19T12:34:27.1384473Z <a id="repricer.app.deps"></a>
2025-08-19T12:34:27.1384679Z 
2025-08-19T12:34:27.1384781Z # repricer.app.deps
2025-08-19T12:34:27.1384947Z 
2025-08-19T12:34:27.1385114Z Placeholder module for Keepa / SP-API clients.
2025-08-19T12:34:27.1385399Z 
2025-08-19T12:34:27.1385514Z <a id="repricer.app.logic"></a>
2025-08-19T12:34:27.1385729Z 
2025-08-19T12:34:27.1385835Z # repricer.app.logic
2025-08-19T12:34:27.1386000Z 
2025-08-19T12:34:27.1386143Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T12:34:27.1386386Z 
2025-08-19T12:34:27.1386537Z #### MIN\_MARGIN
2025-08-19T12:34:27.1386675Z 
2025-08-19T12:34:27.1386753Z 15 % ROI
2025-08-19T12:34:27.1386864Z 
2025-08-19T12:34:27.1386994Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T12:34:27.1387240Z 
2025-08-19T12:34:27.1387328Z #### compute\_price
2025-08-19T12:34:27.1387468Z 
2025-08-19T12:34:27.1387552Z ```python
2025-08-19T12:34:27.1387871Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T12:34:27.1388279Z ```
2025-08-19T12:34:27.1388384Z 
2025-08-19T12:34:27.1388521Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T12:34:27.1388900Z Replace with real competitive logic later.
2025-08-19T12:34:27.1389244Z 
2025-08-19T12:34:27.1389349Z <a id="repricer.app.main"></a>
2025-08-19T12:34:27.1389548Z 
2025-08-19T12:34:27.1389641Z # repricer.app.main
2025-08-19T12:34:27.1389784Z 
2025-08-19T12:34:27.1389888Z <a id="repricer.app"></a>
2025-08-19T12:34:27.1390452Z 
2025-08-19T12:34:27.1390590Z # repricer.app
2025-08-19T12:34:27.1390741Z 
2025-08-19T12:34:27.1390865Z <a id="repricer.tests.test_imports"></a>
2025-08-19T12:34:27.1391096Z 
2025-08-19T12:34:27.1391198Z # repricer.tests.test\_imports
2025-08-19T12:34:27.1391393Z 
2025-08-19T12:34:27.1391510Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T12:34:27.1391731Z 
2025-08-19T12:34:27.1391841Z # repricer.tests.test\_smoke
2025-08-19T12:34:27.1392028Z 
2025-08-19T12:34:27.1392126Z <a id="repricer.tests"></a>
2025-08-19T12:34:27.1392308Z 
2025-08-19T12:34:27.1392395Z # repricer.tests
2025-08-19T12:34:27.1392532Z 
2025-08-19T12:34:27.1392615Z <a id="db"></a>
2025-08-19T12:34:27.1392751Z 
2025-08-19T12:34:27.1392828Z # db
2025-08-19T12:34:27.1392935Z 
2025-08-19T12:34:27.1393045Z <a id="db.utils.views"></a>
2025-08-19T12:34:27.1393221Z 
2025-08-19T12:34:27.1393308Z # db.utils.views
2025-08-19T12:34:27.1393442Z 
2025-08-19T12:34:27.1393574Z <a id="db.utils.views.replace_view"></a>
2025-08-19T12:34:27.1393806Z 
2025-08-19T12:34:27.1393892Z #### replace\_view
2025-08-19T12:34:27.1394042Z 
2025-08-19T12:34:27.1394125Z ```python
2025-08-19T12:34:27.1394381Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T12:34:27.1394714Z ```
2025-08-19T12:34:27.1394820Z 
2025-08-19T12:34:27.1394945Z Drop and recreate a SQL view atomically.
2025-08-19T12:34:27.1395164Z 
2025-08-19T12:34:27.1395255Z <a id="db.utils"></a>
2025-08-19T12:34:27.1395407Z 
2025-08-19T12:34:27.1395496Z # db.utils
2025-08-19T12:34:27.1395612Z 
2025-08-19T12:34:27.1395715Z <a id="price_importer"></a>
2025-08-19T12:34:27.1395892Z 
2025-08-19T12:34:27.1395981Z # price\_importer
2025-08-19T12:34:27.1396119Z 
2025-08-19T12:34:27.1396260Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T12:34:27.1396476Z 
2025-08-19T12:34:27.1396575Z # price\_importer.services\_common.dsn
2025-08-19T12:34:27.1396903Z 
2025-08-19T12:34:27.1397052Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T12:34:27.1397289Z 
2025-08-19T12:34:27.1397360Z #### build\_dsn
2025-08-19T12:34:27.1397477Z 
2025-08-19T12:34:27.1397547Z ```python
2025-08-19T12:34:27.1397739Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:34:27.1397998Z ```
2025-08-19T12:34:27.1398087Z 
2025-08-19T12:34:27.1398169Z Return safe DSN.
2025-08-19T12:34:27.1398285Z 
2025-08-19T12:34:27.1398675Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T12:34:27.1398909Z 
2025-08-19T12:34:27.1399063Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T12:34:27.1399301Z 
2025-08-19T12:34:27.1399424Z # price\_importer.services\_common.models\_vendor
2025-08-19T12:34:27.1399647Z 
2025-08-19T12:34:27.1399766Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T12:34:27.1399980Z 
2025-08-19T12:34:27.1400290Z # price\_importer.services\_common.db\_url
2025-08-19T12:34:27.1400508Z 
2025-08-19T12:34:27.1400658Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T12:34:27.1400909Z 
2025-08-19T12:34:27.1400983Z #### build\_url
2025-08-19T12:34:27.1401093Z 
2025-08-19T12:34:27.1401164Z ```python
2025-08-19T12:34:27.1401364Z def build_url(async_: bool = True) -> str
2025-08-19T12:34:27.1401616Z ```
2025-08-19T12:34:27.1401713Z 
2025-08-19T12:34:27.1401821Z Return Postgres DSN from env or PG_* parts.
2025-08-19T12:34:27.1402017Z 
2025-08-19T12:34:27.1402141Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T12:34:27.1402353Z 
2025-08-19T12:34:27.1402455Z # price\_importer.services\_common.keepa
2025-08-19T12:34:27.1402650Z 
2025-08-19T12:34:27.1402761Z <a id="price_importer.services_common.llm"></a>
2025-08-19T12:34:27.1402966Z 
2025-08-19T12:34:27.1403064Z # price\_importer.services\_common.llm
2025-08-19T12:34:27.1403253Z 
2025-08-19T12:34:27.1403378Z <a id="price_importer.services_common.settings"></a>
2025-08-19T12:34:27.1403735Z 
2025-08-19T12:34:27.1403848Z # price\_importer.services\_common.settings
2025-08-19T12:34:27.1404043Z 
2025-08-19T12:34:27.1404152Z <a id="price_importer.services_common.db"></a>
2025-08-19T12:34:27.1404361Z 
2025-08-19T12:34:27.1404459Z # price\_importer.services\_common.db
2025-08-19T12:34:27.1404637Z 
2025-08-19T12:34:27.1404815Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T12:34:27.1405089Z 
2025-08-19T12:34:27.1405175Z #### build\_sqlalchemy\_url
2025-08-19T12:34:27.1405323Z 
2025-08-19T12:34:27.1405399Z ```python
2025-08-19T12:34:27.1405587Z def build_sqlalchemy_url() -> str
2025-08-19T12:34:27.1405838Z ```
2025-08-19T12:34:27.1405926Z 
2025-08-19T12:34:27.1406032Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T12:34:27.1406233Z 
2025-08-19T12:34:27.1406385Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T12:34:27.1406630Z 
2025-08-19T12:34:27.1406714Z #### build\_asyncpg\_dsn
2025-08-19T12:34:27.1406852Z 
2025-08-19T12:34:27.1406923Z ```python
2025-08-19T12:34:27.1407101Z def build_asyncpg_dsn() -> str
2025-08-19T12:34:27.1407305Z ```
2025-08-19T12:34:27.1407396Z 
2025-08-19T12:34:27.1407530Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T12:34:27.1407754Z 
2025-08-19T12:34:27.1407885Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T12:34:27.1408115Z 
2025-08-19T12:34:27.1408182Z #### refresh\_mvs
2025-08-19T12:34:27.1408292Z 
2025-08-19T12:34:27.1408363Z ```python
2025-08-19T12:34:27.1408563Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T12:34:27.1408830Z ```
2025-08-19T12:34:27.1408913Z 
2025-08-19T12:34:27.1409052Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T12:34:27.1409293Z 
2025-08-19T12:34:27.1409389Z <a id="price_importer.services_common"></a>
2025-08-19T12:34:27.1409573Z 
2025-08-19T12:34:27.1409668Z # price\_importer.services\_common
2025-08-19T12:34:27.1409831Z 
2025-08-19T12:34:27.1409938Z <a id="price_importer.services_common.base"></a>
2025-08-19T12:34:27.1410483Z 
2025-08-19T12:34:27.1410592Z # price\_importer.services\_common.base
2025-08-19T12:34:27.1410768Z 
2025-08-19T12:34:27.1410862Z <a id="price_importer.normaliser"></a>
2025-08-19T12:34:27.1411040Z 
2025-08-19T12:34:27.1411128Z # price\_importer.normaliser
2025-08-19T12:34:27.1411275Z 
2025-08-19T12:34:27.1411390Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T12:34:27.1411590Z 
2025-08-19T12:34:27.1411685Z # price\_importer.common.models\_vendor
2025-08-19T12:34:27.1411858Z 
2025-08-19T12:34:27.1411960Z <a id="price_importer.common.db_url"></a>
2025-08-19T12:34:27.1412140Z 
2025-08-19T12:34:27.1412228Z # price\_importer.common.db\_url
2025-08-19T12:34:27.1412391Z 
2025-08-19T12:34:27.1412498Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T12:34:27.1412696Z 
2025-08-19T12:34:27.1412770Z #### make\_dsn
2025-08-19T12:34:27.1412872Z 
2025-08-19T12:34:27.1412938Z ```python
2025-08-19T12:34:27.1413121Z def make_dsn(async_: bool = False) -> str
2025-08-19T12:34:27.1413366Z ```
2025-08-19T12:34:27.1413455Z 
2025-08-19T12:34:27.1413580Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T12:34:27.1413793Z 
2025-08-19T12:34:27.1413903Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T12:34:27.1414112Z 
2025-08-19T12:34:27.1414178Z #### build\_url
2025-08-19T12:34:27.1414286Z 
2025-08-19T12:34:27.1414357Z ```python
2025-08-19T12:34:27.1414533Z def build_url(async_: bool = False) -> str
2025-08-19T12:34:27.1414774Z ```
2025-08-19T12:34:27.1414857Z 
2025-08-19T12:34:27.1414982Z Return Postgres DSN built from environment variables.
2025-08-19T12:34:27.1415199Z 
2025-08-19T12:34:27.1415286Z <a id="price_importer.common"></a>
2025-08-19T12:34:27.1415447Z 
2025-08-19T12:34:27.1415531Z # price\_importer.common
2025-08-19T12:34:27.1415665Z 
2025-08-19T12:34:27.1415757Z <a id="price_importer.common.base"></a>
2025-08-19T12:34:27.1415932Z 
2025-08-19T12:34:27.1416025Z # price\_importer.common.base
2025-08-19T12:34:27.1416291Z 
2025-08-19T12:34:27.1416395Z <a id="price_importer.tests.conftest"></a>
2025-08-19T12:34:27.1416580Z 
2025-08-19T12:34:27.1416666Z # price\_importer.tests.conftest
2025-08-19T12:34:27.1416825Z 
2025-08-19T12:34:27.1416937Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T12:34:27.1417132Z 
2025-08-19T12:34:27.1417222Z # price\_importer.tests.test\_reader
2025-08-19T12:34:27.1417385Z 
2025-08-19T12:34:27.1417498Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T12:34:27.1417680Z 
2025-08-19T12:34:27.1417770Z # price\_importer.tests.test\_imports
2025-08-19T12:34:27.1417946Z 
2025-08-19T12:34:27.1418046Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T12:34:27.1418223Z 
2025-08-19T12:34:27.1418320Z # price\_importer.tests.test\_smoke
2025-08-19T12:34:27.1418481Z 
2025-08-19T12:34:27.1418589Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T12:34:27.1418817Z 
2025-08-19T12:34:27.1418917Z # price\_importer.tests.test\_normaliser
2025-08-19T12:34:27.1419089Z 
2025-08-19T12:34:27.1419182Z <a id="price_importer.tests"></a>
2025-08-19T12:34:27.1419344Z 
2025-08-19T12:34:27.1419424Z # price\_importer.tests
2025-08-19T12:34:27.1419549Z 
2025-08-19T12:34:27.1419641Z <a id="price_importer.reader"></a>
2025-08-19T12:34:27.1419804Z 
2025-08-19T12:34:27.1419888Z # price\_importer.reader
2025-08-19T12:34:27.1420144Z 
2025-08-19T12:34:27.1420249Z <a id="price_importer.repository"></a>
2025-08-19T12:34:27.1420425Z 
2025-08-19T12:34:27.1420512Z # price\_importer.repository
2025-08-19T12:34:27.1420664Z 
2025-08-19T12:34:27.1420752Z <a id="price_importer.import"></a>
2025-08-19T12:34:27.1420903Z 
2025-08-19T12:34:27.1420989Z # price\_importer.import
2025-08-19T12:34:27.1421120Z 
2025-08-19T12:34:27.1421192Z <a id="fees_h10"></a>
2025-08-19T12:34:27.1421310Z 
2025-08-19T12:34:27.1421382Z # fees\_h10
2025-08-19T12:34:27.1421474Z 
2025-08-19T12:34:27.1421552Z <a id="fees_h10.worker"></a>
2025-08-19T12:34:27.1421697Z 
2025-08-19T12:34:27.1421766Z # fees\_h10.worker
2025-08-19T12:34:27.1421879Z 
2025-08-19T12:34:27.1422108Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T12:34:27.1422299Z 
2025-08-19T12:34:27.1422373Z #### list\_active\_asins
2025-08-19T12:34:27.1422500Z 
2025-08-19T12:34:27.1422572Z ```python
2025-08-19T12:34:27.1422748Z def list_active_asins() -> list[str]
2025-08-19T12:34:27.1422974Z ```
2025-08-19T12:34:27.1423059Z 
2025-08-19T12:34:27.1423173Z Return known ASINs or an empty list if unavailable.
2025-08-19T12:34:27.1423384Z 
2025-08-19T12:34:27.1423470Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T12:34:27.1423633Z 
2025-08-19T12:34:27.1423721Z # fees\_h10.tests.test\_smoke
2025-08-19T12:34:27.1423860Z 
2025-08-19T12:34:27.1423936Z <a id="fees_h10.tests"></a>
2025-08-19T12:34:27.1424067Z 
2025-08-19T12:34:27.1424141Z # fees\_h10.tests
2025-08-19T12:34:27.1424248Z 
2025-08-19T12:34:27.1424325Z <a id="fees_h10.client"></a>
2025-08-19T12:34:27.1424463Z 
2025-08-19T12:34:27.1424528Z # fees\_h10.client
2025-08-19T12:34:27.1424633Z 
2025-08-19T12:34:27.1424718Z <a id="fees_h10.repository"></a>
2025-08-19T12:34:27.1424877Z 
2025-08-19T12:34:27.1424952Z # fees\_h10.repository
2025-08-19T12:34:27.1425070Z 
2025-08-19T12:34:27.1425147Z <a id="emailer"></a>
2025-08-19T12:34:27.1425259Z 
2025-08-19T12:34:27.1425322Z # emailer
2025-08-19T12:34:27.1425416Z 
2025-08-19T12:34:27.1425518Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T12:34:27.1425700Z 
2025-08-19T12:34:27.1425789Z # emailer.tests.test\_import\_emailer
2025-08-19T12:34:27.1425958Z 
2025-08-19T12:34:27.1426044Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T12:34:27.1426202Z 
2025-08-19T12:34:27.1426292Z # emailer.tests.test\_smoke
2025-08-19T12:34:27.1426427Z 
2025-08-19T12:34:27.1426504Z <a id="emailer.tests"></a>
2025-08-19T12:34:27.1426640Z 
2025-08-19T12:34:27.1426707Z # emailer.tests
2025-08-19T12:34:27.1426811Z 
2025-08-19T12:34:27.1426898Z <a id="emailer.generate_body"></a>
2025-08-19T12:34:27.1427064Z 
2025-08-19T12:34:27.1427145Z # emailer.generate\_body
2025-08-19T12:34:27.1427272Z 
2025-08-19T12:34:27.1427476Z <a id="llm_server"></a>
2025-08-19T12:34:27.1427604Z 
2025-08-19T12:34:27.1427672Z # llm\_server
2025-08-19T12:34:27.1427772Z 
2025-08-19T12:34:27.1427858Z <a id="llm_server.app"></a>
2025-08-19T12:34:27.1427991Z 
2025-08-19T12:34:27.1428062Z # llm\_server.app
2025-08-19T12:34:27.1428174Z 
