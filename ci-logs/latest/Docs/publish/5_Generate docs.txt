2025-08-17T01:48:09.8537830Z ##[group]Run pydoc-markdown
2025-08-17T01:48:09.8538149Z [36;1mpydoc-markdown[0m
2025-08-17T01:48:09.8577878Z shell: /usr/bin/bash -e {0}
2025-08-17T01:48:09.8578107Z env:
2025-08-17T01:48:09.8578344Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:48:09.8578767Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T01:48:09.8579165Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:48:09.8579508Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:48:09.8579855Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:48:09.8580196Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T01:48:09.8580490Z ##[endgroup]
2025-08-17T01:48:10.1415309Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T01:48:10.1416043Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T01:48:10.1416535Z In "pydoc-markdown.yml"
2025-08-17T01:48:10.1416959Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T01:48:10.1417675Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T01:48:10.1418450Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T01:48:10.1418998Z 
2025-08-17T01:48:10.3584678Z <a id="__init__"></a>
2025-08-17T01:48:10.3585418Z 
2025-08-17T01:48:10.3585579Z # \_\_init\_\_
2025-08-17T01:48:10.3585860Z 
2025-08-17T01:48:10.3586016Z <a id="api"></a>
2025-08-17T01:48:10.3586251Z 
2025-08-17T01:48:10.3586387Z # api
2025-08-17T01:48:10.3586578Z 
2025-08-17T01:48:10.3586764Z <a id="api.tests.test_llm"></a>
2025-08-17T01:48:10.3587099Z 
2025-08-17T01:48:10.3587275Z # api.tests.test\_llm
2025-08-17T01:48:10.3587562Z 
2025-08-17T01:48:10.3587766Z <a id="api.tests.test_imports"></a>
2025-08-17T01:48:10.3588082Z 
2025-08-17T01:48:10.3588219Z # api.tests.test\_imports
2025-08-17T01:48:10.3588478Z 
2025-08-17T01:48:10.3588661Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T01:48:10.3588966Z 
2025-08-17T01:48:10.3589124Z # api.tests.test\_entrypoint
2025-08-17T01:48:10.3589405Z 
2025-08-17T01:48:10.3589572Z <a id="api.tests.test_health"></a>
2025-08-17T01:48:10.3589885Z 
2025-08-17T01:48:10.3590026Z # api.tests.test\_health
2025-08-17T01:48:10.3590289Z 
2025-08-17T01:48:10.3590446Z <a id="api.migrations.env"></a>
2025-08-17T01:48:10.3590729Z 
2025-08-17T01:48:10.3590854Z # api.migrations.env
2025-08-17T01:48:10.3591048Z 
2025-08-17T01:48:10.3591279Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T01:48:10.3591698Z 
2025-08-17T01:48:10.3591917Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T01:48:10.3592279Z 
2025-08-17T01:48:10.3592498Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T01:48:10.3592895Z 
2025-08-17T01:48:10.3593075Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T01:48:10.3593418Z 
2025-08-17T01:48:10.3593733Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T01:48:10.3594253Z 
2025-08-17T01:48:10.3594551Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T01:48:10.3595750Z 
2025-08-17T01:48:10.3596012Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T01:48:10.3596391Z 
2025-08-17T01:48:10.3596584Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T01:48:10.3596898Z 
2025-08-17T01:48:10.3597106Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T01:48:10.3597470Z 
2025-08-17T01:48:10.3597675Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T01:48:10.3598053Z 
2025-08-17T01:48:10.3598293Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T01:48:10.3598705Z 
2025-08-17T01:48:10.3598906Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T01:48:10.3599255Z 
2025-08-17T01:48:10.3599478Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T01:48:10.3599868Z 
2025-08-17T01:48:10.3600061Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T01:48:10.3600409Z 
2025-08-17T01:48:10.3600637Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T01:48:10.3601524Z 
2025-08-17T01:48:10.3601746Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T01:48:10.3602125Z 
2025-08-17T01:48:10.3602364Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T01:48:10.3602760Z 
2025-08-17T01:48:10.3602943Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T01:48:10.3603156Z 
2025-08-17T01:48:10.3603275Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T01:48:10.3603466Z 
2025-08-17T01:48:10.3603570Z # api.migrations.versions.0001\_baseline
2025-08-17T01:48:10.3603753Z 
2025-08-17T01:48:10.3603846Z <a id="api.migrations.versions"></a>
2025-08-17T01:48:10.3604015Z 
2025-08-17T01:48:10.3604103Z # api.migrations.versions
2025-08-17T01:48:10.3604238Z 
2025-08-17T01:48:10.3604317Z <a id="api.migrations"></a>
2025-08-17T01:48:10.3604457Z 
2025-08-17T01:48:10.3604526Z # api.migrations
2025-08-17T01:48:10.3604634Z 
2025-08-17T01:48:10.3604707Z <a id="api.db"></a>
2025-08-17T01:48:10.3604815Z 
2025-08-17T01:48:10.3604896Z # api.db
2025-08-17T01:48:10.3604992Z 
2025-08-17T01:48:10.3605349Z <a id="api.routes.stats"></a>
2025-08-17T01:48:10.3605541Z 
2025-08-17T01:48:10.3605617Z # api.routes.stats
2025-08-17T01:48:10.3605733Z 
2025-08-17T01:48:10.3605822Z <a id="api.routes.stats.kpi"></a>
2025-08-17T01:48:10.3605975Z 
2025-08-17T01:48:10.3606043Z #### kpi
2025-08-17T01:48:10.3606133Z 
2025-08-17T01:48:10.3606200Z ```python
2025-08-17T01:48:10.3606383Z @router.get("/stats/kpi")
2025-08-17T01:48:10.3606631Z def kpi() -> List[Dict[str, int]]
2025-08-17T01:48:10.3606849Z ```
2025-08-17T01:48:10.3606937Z 
2025-08-17T01:48:10.3607017Z Return KPI metrics (mock).
2025-08-17T01:48:10.3607163Z 
2025-08-17T01:48:10.3607266Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T01:48:10.3607450Z 
2025-08-17T01:48:10.3607529Z #### roi\_by\_vendor
2025-08-17T01:48:10.3607651Z 
2025-08-17T01:48:10.3607719Z ```python
2025-08-17T01:48:10.3607902Z @router.get("/stats/roi_by_vendor")
2025-08-17T01:48:10.3608155Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T01:48:10.3608399Z ```
2025-08-17T01:48:10.3608481Z 
2025-08-17T01:48:10.3608563Z Return ROI percent by vendor.
2025-08-17T01:48:10.3608711Z 
2025-08-17T01:48:10.3608807Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T01:48:10.3608984Z 
2025-08-17T01:48:10.3609057Z #### roi\_trend
2025-08-17T01:48:10.3609164Z 
2025-08-17T01:48:10.3609228Z ```python
2025-08-17T01:48:10.3609406Z @router.get("/stats/roi_trend")
2025-08-17T01:48:10.3609651Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T01:48:10.3609891Z ```
2025-08-17T01:48:10.3609971Z 
2025-08-17T01:48:10.3610048Z Return 30-day ROI trend.
2025-08-17T01:48:10.3610181Z 
2025-08-17T01:48:10.3610261Z <a id="api.routes.roi"></a>
2025-08-17T01:48:10.3610396Z 
2025-08-17T01:48:10.3610473Z # api.routes.roi
2025-08-17T01:48:10.3610666Z 
2025-08-17T01:48:10.3610823Z <a id="api.routes.health"></a>
2025-08-17T01:48:10.3611009Z 
2025-08-17T01:48:10.3611082Z # api.routes.health
2025-08-17T01:48:10.3611196Z 
2025-08-17T01:48:10.3611305Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T01:48:10.3611670Z 
2025-08-17T01:48:10.3611738Z #### MAX\_SKEW
2025-08-17T01:48:10.3611850Z 
2025-08-17T01:48:10.3611911Z seconds
2025-08-17T01:48:10.3611996Z 
2025-08-17T01:48:10.3612084Z <a id="api.routes.health.health"></a>
2025-08-17T01:48:10.3612257Z 
2025-08-17T01:48:10.3612320Z #### health
2025-08-17T01:48:10.3612412Z 
2025-08-17T01:48:10.3612482Z ```python
2025-08-17T01:48:10.3612677Z @router.get("/health", include_in_schema=False)
2025-08-17T01:48:10.3613066Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T01:48:10.3613408Z ```
2025-08-17T01:48:10.3613498Z 
2025-08-17T01:48:10.3613614Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T01:48:10.3613813Z 
2025-08-17T01:48:10.3613901Z <a id="api.routes.repository"></a>
2025-08-17T01:48:10.3614067Z 
2025-08-17T01:48:10.3614145Z # api.routes.repository
2025-08-17T01:48:10.3614273Z 
2025-08-17T01:48:10.3614357Z <a id="api.routes"></a>
2025-08-17T01:48:10.3614859Z 
2025-08-17T01:48:10.3614986Z # api.routes
2025-08-17T01:48:10.3615371Z 
2025-08-17T01:48:10.3615524Z <a id="api.models.fee"></a>
2025-08-17T01:48:10.3615782Z 
2025-08-17T01:48:10.3615915Z # api.models.fee
2025-08-17T01:48:10.3616127Z 
2025-08-17T01:48:10.3616264Z <a id="api.models"></a>
2025-08-17T01:48:10.3616487Z 
2025-08-17T01:48:10.3616617Z # api.models
2025-08-17T01:48:10.3616798Z 
2025-08-17T01:48:10.3616960Z <a id="api.roi_repository"></a>
2025-08-17T01:48:10.3617170Z 
2025-08-17T01:48:10.3617259Z # api.roi\_repository
2025-08-17T01:48:10.3617382Z 
2025-08-17T01:48:10.3617453Z <a id="api.main"></a>
2025-08-17T01:48:10.3617581Z 
2025-08-17T01:48:10.3617644Z # api.main
2025-08-17T01:48:10.3617739Z 
2025-08-17T01:48:10.3617819Z <a id="api.main.ready"></a>
2025-08-17T01:48:10.3617962Z 
2025-08-17T01:48:10.3618023Z #### ready
2025-08-17T01:48:10.3618113Z 
2025-08-17T01:48:10.3618186Z ```python
2025-08-17T01:48:10.3618453Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T01:48:10.3618926Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T01:48:10.3619283Z                                                                       str]
2025-08-17T01:48:10.3619522Z ```
2025-08-17T01:48:10.3619607Z 
2025-08-17T01:48:10.3619710Z Return 200 only when migrations are at head.
2025-08-17T01:48:10.3619886Z 
2025-08-17T01:48:10.3619961Z <a id="api.config"></a>
2025-08-17T01:48:10.3620088Z 
2025-08-17T01:48:10.3620161Z # api.config
2025-08-17T01:48:10.3620257Z 
2025-08-17T01:48:10.3620324Z <a id="etl"></a>
2025-08-17T01:48:10.3620432Z 
2025-08-17T01:48:10.3620492Z # etl
2025-08-17T01:48:10.3620581Z 
2025-08-17T01:48:10.3620666Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T01:48:10.3620825Z 
2025-08-17T01:48:10.3620902Z # etl.fba\_fee\_ingestor
2025-08-17T01:48:10.3621026Z 
2025-08-17T01:48:10.3621115Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T01:48:10.3621263Z 
2025-08-17T01:48:10.3621337Z # etl.sp\_fees\_ingestor
2025-08-17T01:48:10.3621475Z 
2025-08-17T01:48:10.3621557Z <a id="etl.keepa_ingestor"></a>
2025-08-17T01:48:10.3621700Z 
2025-08-17T01:48:10.3621771Z # etl.keepa\_ingestor
2025-08-17T01:48:10.3621896Z 
2025-08-17T01:48:10.3621963Z <a id="etl.db"></a>
2025-08-17T01:48:10.3622069Z 
2025-08-17T01:48:10.3622135Z # etl.db
2025-08-17T01:48:10.3622225Z 
2025-08-17T01:48:10.3622336Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T01:48:10.3622525Z 
2025-08-17T01:48:10.3622619Z # etl.dialects.amazon\_reimbursements
2025-08-17T01:48:10.3622783Z 
2025-08-17T01:48:10.3622873Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T01:48:10.3623049Z 
2025-08-17T01:48:10.3623129Z # etl.dialects.amazon\_returns
2025-08-17T01:48:10.3623271Z 
2025-08-17T01:48:10.3623352Z <a id="etl.dialects"></a>
2025-08-17T01:48:10.3623482Z 
2025-08-17T01:48:10.3623546Z # etl.dialects
2025-08-17T01:48:10.3623647Z 
2025-08-17T01:48:10.3623724Z <a id="ingest"></a>
2025-08-17T01:48:10.3623832Z 
2025-08-17T01:48:10.3623897Z # ingest
2025-08-17T01:48:10.3623997Z 
2025-08-17T01:48:10.3624284Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T01:48:10.3624450Z 
2025-08-17T01:48:10.3624535Z # ingest.tests.test\_smoke
2025-08-17T01:48:10.3624669Z 
2025-08-17T01:48:10.3624743Z <a id="ingest.tests"></a>
2025-08-17T01:48:10.3624869Z 
2025-08-17T01:48:10.3624941Z # ingest.tests
2025-08-17T01:48:10.3625268Z 
2025-08-17T01:48:10.3625359Z <a id="ingest.upload_router"></a>
2025-08-17T01:48:10.3625522Z 
2025-08-17T01:48:10.3625603Z # ingest.upload\_router
2025-08-17T01:48:10.3625727Z 
2025-08-17T01:48:10.3625810Z <a id="ingest.email_watcher"></a>
2025-08-17T01:48:10.3625964Z 
2025-08-17T01:48:10.3626037Z # ingest.email\_watcher
2025-08-17T01:48:10.3626156Z 
2025-08-17T01:48:10.3626253Z <a id="ingest.email_watcher.main"></a>
2025-08-17T01:48:10.3626419Z 
2025-08-17T01:48:10.3626481Z #### main
2025-08-17T01:48:10.3626577Z 
2025-08-17T01:48:10.3626640Z ```python
2025-08-17T01:48:10.3626807Z def main() -> dict[str, str]
2025-08-17T01:48:10.3627012Z ```
2025-08-17T01:48:10.3627098Z 
2025-08-17T01:48:10.3627383Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T01:48:10.3627620Z 
2025-08-17T01:48:10.3627763Z Returns {"status": "success"} when processing completes.
2025-08-17T01:48:10.3627977Z 
2025-08-17T01:48:10.3628067Z <a id="ingest.ingest_router"></a>
2025-08-17T01:48:10.3628217Z 
2025-08-17T01:48:10.3628292Z # ingest.ingest\_router
2025-08-17T01:48:10.3628420Z 
2025-08-17T01:48:10.3628495Z <a id="logistics_etl"></a>
2025-08-17T01:48:10.3628624Z 
2025-08-17T01:48:10.3628692Z # logistics\_etl
2025-08-17T01:48:10.3628808Z 
2025-08-17T01:48:10.3628883Z Daily logistics ETL job.
2025-08-17T01:48:10.3629009Z 
2025-08-17T01:48:10.3629098Z <a id="logistics_etl.__main__"></a>
2025-08-17T01:48:10.3629253Z 
2025-08-17T01:48:10.3629331Z # logistics\_etl.\_\_main\_\_
2025-08-17T01:48:10.3629476Z 
2025-08-17T01:48:10.3629572Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T01:48:10.3629745Z 
2025-08-17T01:48:10.3629827Z # logistics\_etl.tests.conftest
2025-08-17T01:48:10.3629988Z 
2025-08-17T01:48:10.3630094Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T01:48:10.3630280Z 
2025-08-17T01:48:10.3630375Z # logistics\_etl.tests.test\_repository
2025-08-17T01:48:10.3630543Z 
2025-08-17T01:48:10.3630637Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T01:48:10.3630815Z 
2025-08-17T01:48:10.3630896Z # logistics\_etl.tests.test\_cron
2025-08-17T01:48:10.3631047Z 
2025-08-17T01:48:10.3631144Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T01:48:10.3631330Z 
2025-08-17T01:48:10.3631416Z # logistics\_etl.tests.test\_imports
2025-08-17T01:48:10.3631575Z 
2025-08-17T01:48:10.3631676Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T01:48:10.3631848Z 
2025-08-17T01:48:10.3631934Z # logistics\_etl.tests.test\_smoke
2025-08-17T01:48:10.3632094Z 
2025-08-17T01:48:10.3632188Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T01:48:10.3632361Z 
2025-08-17T01:48:10.3632443Z # logistics\_etl.tests.test\_client
2025-08-17T01:48:10.3632606Z 
2025-08-17T01:48:10.3632701Z <a id="logistics_etl.tests"></a>
2025-08-17T01:48:10.3632846Z 
2025-08-17T01:48:10.3632928Z # logistics\_etl.tests
2025-08-17T01:48:10.3633046Z 
2025-08-17T01:48:10.3633127Z <a id="logistics_etl.flow"></a>
2025-08-17T01:48:10.3633274Z 
2025-08-17T01:48:10.3633344Z # logistics\_etl.flow
2025-08-17T01:48:10.3633460Z 
2025-08-17T01:48:10.3633548Z <a id="logistics_etl.client"></a>
2025-08-17T01:48:10.3633696Z 
2025-08-17T01:48:10.3633770Z # logistics\_etl.client
2025-08-17T01:48:10.3633890Z 
2025-08-17T01:48:10.3633978Z <a id="logistics_etl.cron"></a>
2025-08-17T01:48:10.3634118Z 
2025-08-17T01:48:10.3634190Z # logistics\_etl.cron
2025-08-17T01:48:10.3634310Z 
2025-08-17T01:48:10.3634392Z <a id="logistics_etl.db"></a>
2025-08-17T01:48:10.3634530Z 
2025-08-17T01:48:10.3634599Z # logistics\_etl.db
2025-08-17T01:48:10.3634719Z 
2025-08-17T01:48:10.3634808Z <a id="logistics_etl.repository"></a>
2025-08-17T01:48:10.3634972Z 
2025-08-17T01:48:10.3635303Z # logistics\_etl.repository
2025-08-17T01:48:10.3635462Z 
2025-08-17T01:48:10.3635678Z <a id="alert_bot"></a>
2025-08-17T01:48:10.3635804Z 
2025-08-17T01:48:10.3635874Z # alert\_bot
2025-08-17T01:48:10.3635971Z 
2025-08-17T01:48:10.3636064Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T01:48:10.3636236Z 
2025-08-17T01:48:10.3636319Z # alert\_bot.tests.test\_smoke
2025-08-17T01:48:10.3636458Z 
2025-08-17T01:48:10.3636544Z <a id="alert_bot.tests"></a>
2025-08-17T01:48:10.3636677Z 
2025-08-17T01:48:10.3636746Z # alert\_bot.tests
2025-08-17T01:48:10.3636861Z 
2025-08-17T01:48:10.3636940Z <a id="alert_bot.alert_bot"></a>
2025-08-17T01:48:10.3637081Z 
2025-08-17T01:48:10.3637153Z # alert\_bot.alert\_bot
2025-08-17T01:48:10.3637277Z 
2025-08-17T01:48:10.3637351Z <a id="alert_bot.rules"></a>
2025-08-17T01:48:10.3637482Z 
2025-08-17T01:48:10.3637553Z # alert\_bot.rules
2025-08-17T01:48:10.3637656Z 
2025-08-17T01:48:10.3637724Z <a id="common"></a>
2025-08-17T01:48:10.3637829Z 
2025-08-17T01:48:10.3637894Z # common
2025-08-17T01:48:10.3637991Z 
2025-08-17T01:48:10.3638393Z <a id="common.dsn"></a>
2025-08-17T01:48:10.3638627Z 
2025-08-17T01:48:10.3638736Z # common.dsn
2025-08-17T01:48:10.3638904Z 
2025-08-17T01:48:10.3639064Z <a id="common.dsn.build_dsn"></a>
2025-08-17T01:48:10.3639348Z 
2025-08-17T01:48:10.3639467Z #### build\_dsn
2025-08-17T01:48:10.3639658Z 
2025-08-17T01:48:10.3639788Z ```python
2025-08-17T01:48:10.3640114Z def build_dsn(sync: bool = True) -> str
2025-08-17T01:48:10.3640350Z ```
2025-08-17T01:48:10.3640436Z 
2025-08-17T01:48:10.3640565Z Return a Postgres DSN, validating required variables.
2025-08-17T01:48:10.3640787Z 
2025-08-17T01:48:10.3640998Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T01:48:10.3641459Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T01:48:10.3641887Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T01:48:10.3642209Z missing.
2025-08-17T01:48:10.3642297Z 
2025-08-17T01:48:10.3642380Z <a id="common.models_vendor"></a>
2025-08-17T01:48:10.3642564Z 
2025-08-17T01:48:10.3642637Z # common.models\_vendor
2025-08-17T01:48:10.3642760Z 
2025-08-17T01:48:10.3642852Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T01:48:10.3643035Z 
2025-08-17T01:48:10.3643101Z ## Vendor Objects
2025-08-17T01:48:10.3643208Z 
2025-08-17T01:48:10.3643276Z ```python
2025-08-17T01:48:10.3643432Z class Vendor(Base)
2025-08-17T01:48:10.3643629Z ```
2025-08-17T01:48:10.3643719Z 
2025-08-17T01:48:10.3643797Z Vendor of inventory items.
2025-08-17T01:48:10.3643932Z 
2025-08-17T01:48:10.3644038Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T01:48:10.3644229Z 
2025-08-17T01:48:10.3644302Z ## VendorPrice Objects
2025-08-17T01:48:10.3644423Z 
2025-08-17T01:48:10.3644491Z ```python
2025-08-17T01:48:10.3644653Z class VendorPrice(Base)
2025-08-17T01:48:10.3644836Z ```
2025-08-17T01:48:10.3644919Z 
2025-08-17T01:48:10.3645244Z Association table linking vendors to pricing.
2025-08-17T01:48:10.3645532Z 
2025-08-17T01:48:10.3645613Z <a id="common.db_url"></a>
2025-08-17T01:48:10.3645761Z 
2025-08-17T01:48:10.3645828Z # common.db\_url
2025-08-17T01:48:10.3645939Z 
2025-08-17T01:48:10.3646024Z <a id="common.db_url.build_url"></a>
2025-08-17T01:48:10.3646184Z 
2025-08-17T01:48:10.3646254Z #### build\_url
2025-08-17T01:48:10.3646356Z 
2025-08-17T01:48:10.3646417Z ```python
2025-08-17T01:48:10.3646599Z def build_url(async_: bool = True) -> str
2025-08-17T01:48:10.3646827Z ```
2025-08-17T01:48:10.3646915Z 
2025-08-17T01:48:10.3647017Z Return Postgres DSN from env or PG_* parts.
2025-08-17T01:48:10.3647198Z 
2025-08-17T01:48:10.3647282Z <a id="common.keepa"></a>
2025-08-17T01:48:10.3647411Z 
2025-08-17T01:48:10.3647479Z # common.keepa
2025-08-17T01:48:10.3647584Z 
2025-08-17T01:48:10.3647664Z <a id="common.llm"></a>
2025-08-17T01:48:10.3647784Z 
2025-08-17T01:48:10.3647847Z # common.llm
2025-08-17T01:48:10.3647951Z 
2025-08-17T01:48:10.3648033Z <a id="common.settings"></a>
2025-08-17T01:48:10.3648175Z 
2025-08-17T01:48:10.3648243Z # common.settings
2025-08-17T01:48:10.3648804Z 
2025-08-17T01:48:10.3648887Z <a id="common.db"></a>
2025-08-17T01:48:10.3649024Z 
2025-08-17T01:48:10.3649097Z # common.db
2025-08-17T01:48:10.3649198Z 
2025-08-17T01:48:10.3649296Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T01:48:10.3649490Z 
2025-08-17T01:48:10.3649570Z #### build\_sqlalchemy\_url
2025-08-17T01:48:10.3649702Z 
2025-08-17T01:48:10.3649764Z ```python
2025-08-17T01:48:10.3649946Z def build_sqlalchemy_url() -> str
2025-08-17T01:48:10.3650156Z ```
2025-08-17T01:48:10.3650244Z 
2025-08-17T01:48:10.3650343Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T01:48:10.3650520Z 
2025-08-17T01:48:10.3650616Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T01:48:10.3650785Z 
2025-08-17T01:48:10.3650858Z #### build\_asyncpg\_dsn
2025-08-17T01:48:10.3650988Z 
2025-08-17T01:48:10.3651050Z ```python
2025-08-17T01:48:10.3651222Z def build_asyncpg_dsn() -> str
2025-08-17T01:48:10.3651427Z ```
2025-08-17T01:48:10.3651508Z 
2025-08-17T01:48:10.3651643Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T01:48:10.3651995Z 
2025-08-17T01:48:10.3652083Z <a id="common.db.refresh_mvs"></a>
2025-08-17T01:48:10.3652240Z 
2025-08-17T01:48:10.3652309Z #### refresh\_mvs
2025-08-17T01:48:10.3652416Z 
2025-08-17T01:48:10.3652478Z ```python
2025-08-17T01:48:10.3652679Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T01:48:10.3652928Z ```
2025-08-17T01:48:10.3653020Z 
2025-08-17T01:48:10.3653162Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T01:48:10.3653529Z 
2025-08-17T01:48:10.3653674Z <a id="common.config"></a>
2025-08-17T01:48:10.3653915Z 
2025-08-17T01:48:10.3654035Z # common.config
2025-08-17T01:48:10.3654227Z 
2025-08-17T01:48:10.3654362Z <a id="common.base"></a>
2025-08-17T01:48:10.3654574Z 
2025-08-17T01:48:10.3654680Z # common.base
2025-08-17T01:48:10.3654852Z 
2025-08-17T01:48:10.3654986Z <a id="common.base.Base"></a>
2025-08-17T01:48:10.3655411Z 
2025-08-17T01:48:10.3655540Z ## Base Objects
2025-08-17T01:48:10.3655653Z 
2025-08-17T01:48:10.3655737Z ```python
2025-08-17T01:48:10.3655914Z class Base(DeclarativeBase)
2025-08-17T01:48:10.3656105Z ```
2025-08-17T01:48:10.3656187Z 
2025-08-17T01:48:10.3656281Z Base class for SQLAlchemy models.
2025-08-17T01:48:10.3656527Z 
2025-08-17T01:48:10.3656645Z <a id="repricer"></a>
2025-08-17T01:48:10.3656860Z 
2025-08-17T01:48:10.3656972Z # repricer
2025-08-17T01:48:10.3657130Z 
2025-08-17T01:48:10.3657281Z <a id="repricer.app.schemas"></a>
2025-08-17T01:48:10.3657518Z 
2025-08-17T01:48:10.3657659Z # repricer.app.schemas
2025-08-17T01:48:10.3657878Z 
2025-08-17T01:48:10.3658032Z <a id="repricer.app.deps"></a>
2025-08-17T01:48:10.3658274Z 
2025-08-17T01:48:10.3658401Z # repricer.app.deps
2025-08-17T01:48:10.3658599Z 
2025-08-17T01:48:10.3658796Z Placeholder module for Keepa / SP-API clients.
2025-08-17T01:48:10.3659148Z 
2025-08-17T01:48:10.3659328Z <a id="repricer.app.logic"></a>
2025-08-17T01:48:10.3659575Z 
2025-08-17T01:48:10.3659704Z # repricer.app.logic
2025-08-17T01:48:10.3659853Z 
2025-08-17T01:48:10.3659986Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T01:48:10.3660169Z 
2025-08-17T01:48:10.3660237Z #### MIN\_MARGIN
2025-08-17T01:48:10.3660348Z 
2025-08-17T01:48:10.3660413Z 15 % ROI
2025-08-17T01:48:10.3660506Z 
2025-08-17T01:48:10.3660616Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T01:48:10.3660808Z 
2025-08-17T01:48:10.3660878Z #### compute\_price
2025-08-17T01:48:10.3660988Z 
2025-08-17T01:48:10.3661061Z ```python
2025-08-17T01:48:10.3661317Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T01:48:10.3661631Z ```
2025-08-17T01:48:10.3661717Z 
2025-08-17T01:48:10.3661827Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T01:48:10.3662119Z Replace with real competitive logic later.
2025-08-17T01:48:10.3662292Z 
2025-08-17T01:48:10.3662375Z <a id="repricer.app.main"></a>
2025-08-17T01:48:10.3662524Z 
2025-08-17T01:48:10.3662597Z # repricer.app.main
2025-08-17T01:48:10.3662707Z 
2025-08-17T01:48:10.3662791Z <a id="repricer.app"></a>
2025-08-17T01:48:10.3663106Z 
2025-08-17T01:48:10.3663177Z # repricer.app
2025-08-17T01:48:10.3663284Z 
2025-08-17T01:48:10.3663383Z <a id="repricer.tests.test_imports"></a>
2025-08-17T01:48:10.3663557Z 
2025-08-17T01:48:10.3663638Z # repricer.tests.test\_imports
2025-08-17T01:48:10.3663786Z 
2025-08-17T01:48:10.3663879Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T01:48:10.3664047Z 
2025-08-17T01:48:10.3664137Z # repricer.tests.test\_smoke
2025-08-17T01:48:10.3664276Z 
2025-08-17T01:48:10.3664354Z <a id="repricer.tests"></a>
2025-08-17T01:48:10.3664492Z 
2025-08-17T01:48:10.3664620Z # repricer.tests
2025-08-17T01:48:10.3664726Z 
2025-08-17T01:48:10.3664790Z <a id="db"></a>
2025-08-17T01:48:10.3664896Z 
2025-08-17T01:48:10.3664956Z # db
2025-08-17T01:48:10.3665283Z 
2025-08-17T01:48:10.3665398Z <a id="db.utils.views"></a>
2025-08-17T01:48:10.3665546Z 
2025-08-17T01:48:10.3665620Z # db.utils.views
2025-08-17T01:48:10.3665734Z 
2025-08-17T01:48:10.3665831Z <a id="db.utils.views.replace_view"></a>
2025-08-17T01:48:10.3666175Z 
2025-08-17T01:48:10.3666246Z #### replace\_view
2025-08-17T01:48:10.3666364Z 
2025-08-17T01:48:10.3666431Z ```python
2025-08-17T01:48:10.3666638Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T01:48:10.3666898Z ```
2025-08-17T01:48:10.3666985Z 
2025-08-17T01:48:10.3667085Z Drop and recreate a SQL view atomically.
2025-08-17T01:48:10.3667260Z 
2025-08-17T01:48:10.3667332Z <a id="db.utils"></a>
2025-08-17T01:48:10.3667458Z 
2025-08-17T01:48:10.3667521Z # db.utils
2025-08-17T01:48:10.3667612Z 
2025-08-17T01:48:10.3667692Z <a id="price_importer"></a>
2025-08-17T01:48:10.3667836Z 
2025-08-17T01:48:10.3667905Z # price\_importer
2025-08-17T01:48:10.3668021Z 
2025-08-17T01:48:10.3668137Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T01:48:10.3668334Z 
2025-08-17T01:48:10.3668426Z # price\_importer.services\_common.dsn
2025-08-17T01:48:10.3668600Z 
2025-08-17T01:48:10.3668728Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T01:48:10.3668960Z 
2025-08-17T01:48:10.3669065Z #### build\_dsn
2025-08-17T01:48:10.3669176Z 
2025-08-17T01:48:10.3669238Z ```python
2025-08-17T01:48:10.3669422Z def build_dsn(sync: bool = True) -> str
2025-08-17T01:48:10.3669645Z ```
2025-08-17T01:48:10.3669733Z 
2025-08-17T01:48:10.3669807Z Return safe DSN.
2025-08-17T01:48:10.3669914Z 
2025-08-17T01:48:10.3670281Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T01:48:10.3670496Z 
2025-08-17T01:48:10.3670626Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T01:48:10.3670832Z 
2025-08-17T01:48:10.3670942Z # price\_importer.services\_common.models\_vendor
2025-08-17T01:48:10.3671138Z 
2025-08-17T01:48:10.3671244Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T01:48:10.3671433Z 
2025-08-17T01:48:10.3671539Z # price\_importer.services\_common.db\_url
2025-08-17T01:48:10.3671711Z 
2025-08-17T01:48:10.3671845Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T01:48:10.3672066Z 
2025-08-17T01:48:10.3672141Z #### build\_url
2025-08-17T01:48:10.3672256Z 
2025-08-17T01:48:10.3672326Z ```python
2025-08-17T01:48:10.3672501Z def build_url(async_: bool = True) -> str
2025-08-17T01:48:10.3672737Z ```
2025-08-17T01:48:10.3672821Z 
2025-08-17T01:48:10.3672919Z Return Postgres DSN from env or PG_* parts.
2025-08-17T01:48:10.3673102Z 
2025-08-17T01:48:10.3673211Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T01:48:10.3673397Z 
2025-08-17T01:48:10.3673491Z # price\_importer.services\_common.keepa
2025-08-17T01:48:10.3673670Z 
2025-08-17T01:48:10.3673772Z <a id="price_importer.services_common.llm"></a>
2025-08-17T01:48:10.3673957Z 
2025-08-17T01:48:10.3674053Z # price\_importer.services\_common.llm
2025-08-17T01:48:10.3674220Z 
2025-08-17T01:48:10.3674338Z <a id="price_importer.services_common.settings"></a>
2025-08-17T01:48:10.3674541Z 
2025-08-17T01:48:10.3674638Z # price\_importer.services\_common.settings
2025-08-17T01:48:10.3674816Z 
2025-08-17T01:48:10.3674917Z <a id="price_importer.services_common.db"></a>
2025-08-17T01:48:10.3675537Z 
2025-08-17T01:48:10.3675639Z # price\_importer.services\_common.db
2025-08-17T01:48:10.3675807Z 
2025-08-17T01:48:10.3675976Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T01:48:10.3676222Z 
2025-08-17T01:48:10.3676302Z #### build\_sqlalchemy\_url
2025-08-17T01:48:10.3676442Z 
2025-08-17T01:48:10.3676507Z ```python
2025-08-17T01:48:10.3676684Z def build_sqlalchemy_url() -> str
2025-08-17T01:48:10.3676899Z ```
2025-08-17T01:48:10.3676982Z 
2025-08-17T01:48:10.3677079Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T01:48:10.3677263Z 
2025-08-17T01:48:10.3677414Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T01:48:10.3677645Z 
2025-08-17T01:48:10.3677727Z #### build\_asyncpg\_dsn
2025-08-17T01:48:10.3677860Z 
2025-08-17T01:48:10.3677924Z ```python
2025-08-17T01:48:10.3678107Z def build_asyncpg_dsn() -> str
2025-08-17T01:48:10.3678305Z ```
2025-08-17T01:48:10.3678394Z 
2025-08-17T01:48:10.3678522Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T01:48:10.3678865Z 
2025-08-17T01:48:10.3679000Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T01:48:10.3679212Z 
2025-08-17T01:48:10.3679277Z #### refresh\_mvs
2025-08-17T01:48:10.3679384Z 
2025-08-17T01:48:10.3679453Z ```python
2025-08-17T01:48:10.3679653Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T01:48:10.3679911Z ```
2025-08-17T01:48:10.3679995Z 
2025-08-17T01:48:10.3680171Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T01:48:10.3680394Z 
2025-08-17T01:48:10.3680491Z <a id="price_importer.services_common"></a>
2025-08-17T01:48:10.3680663Z 
2025-08-17T01:48:10.3680768Z # price\_importer.services\_common
2025-08-17T01:48:10.3680923Z 
2025-08-17T01:48:10.3681025Z <a id="price_importer.services_common.base"></a>
2025-08-17T01:48:10.3681217Z 
2025-08-17T01:48:10.3681313Z # price\_importer.services\_common.base
2025-08-17T01:48:10.3681479Z 
2025-08-17T01:48:10.3681570Z <a id="price_importer.normaliser"></a>
2025-08-17T01:48:10.3681752Z 
2025-08-17T01:48:10.3681837Z # price\_importer.normaliser
2025-08-17T01:48:10.3681980Z 
2025-08-17T01:48:10.3682091Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T01:48:10.3682277Z 
2025-08-17T01:48:10.3682366Z # price\_importer.common.models\_vendor
2025-08-17T01:48:10.3682538Z 
2025-08-17T01:48:10.3682630Z <a id="price_importer.common.db_url"></a>
2025-08-17T01:48:10.3682802Z 
2025-08-17T01:48:10.3682887Z # price\_importer.common.db\_url
2025-08-17T01:48:10.3683041Z 
2025-08-17T01:48:10.3683148Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T01:48:10.3683339Z 
2025-08-17T01:48:10.3683410Z #### make\_dsn
2025-08-17T01:48:10.3683512Z 
2025-08-17T01:48:10.3683576Z ```python
2025-08-17T01:48:10.3683757Z def make_dsn(async_: bool = False) -> str
2025-08-17T01:48:10.3683986Z ```
2025-08-17T01:48:10.3684075Z 
2025-08-17T01:48:10.3684195Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T01:48:10.3684399Z 
2025-08-17T01:48:10.3684526Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T01:48:10.3684719Z 
2025-08-17T01:48:10.3684785Z #### build\_url
2025-08-17T01:48:10.3684886Z 
2025-08-17T01:48:10.3684958Z ```python
2025-08-17T01:48:10.3685440Z def build_url(async_: bool = False) -> str
2025-08-17T01:48:10.3685690Z ```
2025-08-17T01:48:10.3685778Z 
2025-08-17T01:48:10.3685906Z Return Postgres DSN built from environment variables.
2025-08-17T01:48:10.3686117Z 
2025-08-17T01:48:10.3686205Z <a id="price_importer.common"></a>
2025-08-17T01:48:10.3686365Z 
2025-08-17T01:48:10.3686453Z # price\_importer.common
2025-08-17T01:48:10.3686583Z 
2025-08-17T01:48:10.3686681Z <a id="price_importer.common.base"></a>
2025-08-17T01:48:10.3686860Z 
2025-08-17T01:48:10.3686944Z # price\_importer.common.base
2025-08-17T01:48:10.3687089Z 
2025-08-17T01:48:10.3687190Z <a id="price_importer.tests.conftest"></a>
2025-08-17T01:48:10.3687376Z 
2025-08-17T01:48:10.3687463Z # price\_importer.tests.conftest
2025-08-17T01:48:10.3687614Z 
2025-08-17T01:48:10.3687889Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T01:48:10.3688079Z 
2025-08-17T01:48:10.3688168Z # price\_importer.tests.test\_reader
2025-08-17T01:48:10.3688336Z 
2025-08-17T01:48:10.3688438Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T01:48:10.3688620Z 
2025-08-17T01:48:10.3688709Z # price\_importer.tests.test\_imports
2025-08-17T01:48:10.3688876Z 
2025-08-17T01:48:10.3688975Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T01:48:10.3689150Z 
2025-08-17T01:48:10.3689241Z # price\_importer.tests.test\_smoke
2025-08-17T01:48:10.3689399Z 
2025-08-17T01:48:10.3689504Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T01:48:10.3689699Z 
2025-08-17T01:48:10.3689791Z # price\_importer.tests.test\_normaliser
2025-08-17T01:48:10.3689958Z 
2025-08-17T01:48:10.3690043Z <a id="price_importer.tests"></a>
2025-08-17T01:48:10.3690202Z 
2025-08-17T01:48:10.3690278Z # price\_importer.tests
2025-08-17T01:48:10.3690400Z 
2025-08-17T01:48:10.3690491Z <a id="price_importer.reader"></a>
2025-08-17T01:48:10.3690761Z 
2025-08-17T01:48:10.3690839Z # price\_importer.reader
2025-08-17T01:48:10.3690973Z 
2025-08-17T01:48:10.3691070Z <a id="price_importer.reader.load_file"></a>
2025-08-17T01:48:10.3691250Z 
2025-08-17T01:48:10.3691316Z #### load\_file
2025-08-17T01:48:10.3691422Z 
2025-08-17T01:48:10.3691484Z ```python
2025-08-17T01:48:10.3691667Z def load_file(path: str | Path) -> Any
2025-08-17T01:48:10.3691886Z ```
2025-08-17T01:48:10.3691967Z 
2025-08-17T01:48:10.3692073Z Return DataFrame from CSV or Excel file.
2025-08-17T01:48:10.3692241Z 
2025-08-17T01:48:10.3692350Z Raises RuntimeError if pandas is unavailable.
2025-08-17T01:48:10.3692540Z 
2025-08-17T01:48:10.3692631Z <a id="price_importer.repository"></a>
2025-08-17T01:48:10.3692797Z 
2025-08-17T01:48:10.3692881Z # price\_importer.repository
2025-08-17T01:48:10.3693032Z 
2025-08-17T01:48:10.3693118Z <a id="price_importer.import"></a>
2025-08-17T01:48:10.3693272Z 
2025-08-17T01:48:10.3693356Z # price\_importer.import
2025-08-17T01:48:10.3693495Z 
2025-08-17T01:48:10.3693568Z <a id="fees_h10"></a>
2025-08-17T01:48:10.3693688Z 
2025-08-17T01:48:10.3693750Z # fees\_h10
2025-08-17T01:48:10.3693844Z 
2025-08-17T01:48:10.3693920Z <a id="fees_h10.worker"></a>
2025-08-17T01:48:10.3694059Z 
2025-08-17T01:48:10.3694126Z # fees\_h10.worker
2025-08-17T01:48:10.3694241Z 
2025-08-17T01:48:10.3694344Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T01:48:10.3694523Z 
2025-08-17T01:48:10.3694596Z #### list\_active\_asins
2025-08-17T01:48:10.3694716Z 
2025-08-17T01:48:10.3694788Z ```python
2025-08-17T01:48:10.3694959Z def list_active_asins() -> list[str]
2025-08-17T01:48:10.3695381Z ```
2025-08-17T01:48:10.3695467Z 
2025-08-17T01:48:10.3695581Z Return known ASINs or an empty list if unavailable.
2025-08-17T01:48:10.3695791Z 
2025-08-17T01:48:10.3695878Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T01:48:10.3696037Z 
2025-08-17T01:48:10.3696121Z # fees\_h10.tests.test\_smoke
2025-08-17T01:48:10.3696261Z 
2025-08-17T01:48:10.3696343Z <a id="fees_h10.tests"></a>
2025-08-17T01:48:10.3696485Z 
2025-08-17T01:48:10.3696551Z # fees\_h10.tests
2025-08-17T01:48:10.3696656Z 
2025-08-17T01:48:10.3696731Z <a id="fees_h10.client"></a>
2025-08-17T01:48:10.3696870Z 
2025-08-17T01:48:10.3696935Z # fees\_h10.client
2025-08-17T01:48:10.3697041Z 
2025-08-17T01:48:10.3697134Z <a id="fees_h10.repository"></a>
2025-08-17T01:48:10.3697280Z 
2025-08-17T01:48:10.3697351Z # fees\_h10.repository
2025-08-17T01:48:10.3697471Z 
2025-08-17T01:48:10.3697548Z <a id="emailer"></a>
2025-08-17T01:48:10.3697661Z 
2025-08-17T01:48:10.3697724Z # emailer
2025-08-17T01:48:10.3697818Z 
2025-08-17T01:48:10.3697918Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T01:48:10.3698097Z 
2025-08-17T01:48:10.3698194Z # emailer.tests.test\_import\_emailer
2025-08-17T01:48:10.3698357Z 
2025-08-17T01:48:10.3698447Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T01:48:10.3698608Z 
2025-08-17T01:48:10.3698698Z # emailer.tests.test\_smoke
2025-08-17T01:48:10.3698837Z 
2025-08-17T01:48:10.3699055Z <a id="emailer.tests"></a>
2025-08-17T01:48:10.3699199Z 
2025-08-17T01:48:10.3699267Z # emailer.tests
2025-08-17T01:48:10.3699377Z 
2025-08-17T01:48:10.3699470Z <a id="emailer.generate_body"></a>
2025-08-17T01:48:10.3699624Z 
2025-08-17T01:48:10.3699702Z # emailer.generate\_body
2025-08-17T01:48:10.3699831Z 
2025-08-17T01:48:10.3699910Z <a id="llm_server"></a>
2025-08-17T01:48:10.3700027Z 
2025-08-17T01:48:10.3700090Z # llm\_server
2025-08-17T01:48:10.3700193Z 
2025-08-17T01:48:10.3700270Z <a id="llm_server.app"></a>
2025-08-17T01:48:10.3700403Z 
2025-08-17T01:48:10.3700469Z # llm\_server.app
2025-08-17T01:48:10.3700582Z 
