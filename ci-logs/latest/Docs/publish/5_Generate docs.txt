2025-08-17T15:04:05.2204045Z ##[group]Run pydoc-markdown
2025-08-17T15:04:05.2204360Z [36;1mpydoc-markdown[0m
2025-08-17T15:04:05.2244573Z shell: /usr/bin/bash -e {0}
2025-08-17T15:04:05.2244797Z env:
2025-08-17T15:04:05.2245032Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:04:05.2245436Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T15:04:05.2245813Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:04:05.2246157Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:04:05.2246487Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:04:05.2246829Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T15:04:05.2247113Z ##[endgroup]
2025-08-17T15:04:05.5694022Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T15:04:05.5694720Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T15:04:05.5695085Z In "pydoc-markdown.yml"
2025-08-17T15:04:05.5695404Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T15:04:05.5695957Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T15:04:05.5696532Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T15:04:05.5696934Z 
2025-08-17T15:04:05.7806849Z <a id="__init__"></a>
2025-08-17T15:04:05.7807305Z 
2025-08-17T15:04:05.7807452Z # \_\_init\_\_
2025-08-17T15:04:05.7807690Z 
2025-08-17T15:04:05.7807845Z <a id="api"></a>
2025-08-17T15:04:05.7808088Z 
2025-08-17T15:04:05.7808241Z # api
2025-08-17T15:04:05.7808683Z 
2025-08-17T15:04:05.7808887Z <a id="api.tests.test_llm"></a>
2025-08-17T15:04:05.7809243Z 
2025-08-17T15:04:05.7809427Z # api.tests.test\_llm
2025-08-17T15:04:05.7809701Z 
2025-08-17T15:04:05.7809898Z <a id="api.tests.test_imports"></a>
2025-08-17T15:04:05.7810271Z 
2025-08-17T15:04:05.7810459Z # api.tests.test\_imports
2025-08-17T15:04:05.7810753Z 
2025-08-17T15:04:05.7811039Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T15:04:05.7811421Z 
2025-08-17T15:04:05.7811605Z # api.tests.test\_entrypoint
2025-08-17T15:04:05.7811977Z 
2025-08-17T15:04:05.7812168Z <a id="api.tests.test_health"></a>
2025-08-17T15:04:05.7812511Z 
2025-08-17T15:04:05.7812683Z # api.tests.test\_health
2025-08-17T15:04:05.7812982Z 
2025-08-17T15:04:05.7813173Z <a id="api.migrations.env"></a>
2025-08-17T15:04:05.7813503Z 
2025-08-17T15:04:05.7813665Z # api.migrations.env
2025-08-17T15:04:05.7813902Z 
2025-08-17T15:04:05.7814166Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T15:04:05.7814660Z 
2025-08-17T15:04:05.7814890Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T15:04:05.7815249Z 
2025-08-17T15:04:05.7815465Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T15:04:05.7815761Z 
2025-08-17T15:04:05.7815870Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T15:04:05.7816072Z 
2025-08-17T15:04:05.7816257Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T15:04:05.7816527Z 
2025-08-17T15:04:05.7816677Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T15:04:05.7817203Z 
2025-08-17T15:04:05.7817341Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T15:04:05.7817570Z 
2025-08-17T15:04:05.7817687Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T15:04:05.7817901Z 
2025-08-17T15:04:05.7818031Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T15:04:05.7818249Z 
2025-08-17T15:04:05.7818368Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T15:04:05.7818767Z 
2025-08-17T15:04:05.7818904Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T15:04:05.7819141Z 
2025-08-17T15:04:05.7819259Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T15:04:05.7819468Z 
2025-08-17T15:04:05.7819598Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T15:04:05.7819817Z 
2025-08-17T15:04:05.7819930Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T15:04:05.7820134Z 
2025-08-17T15:04:05.7820272Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T15:04:05.7820696Z 
2025-08-17T15:04:05.7820811Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T15:04:05.7821019Z 
2025-08-17T15:04:05.7821151Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T15:04:05.7821377Z 
2025-08-17T15:04:05.7821498Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T15:04:05.7821705Z 
2025-08-17T15:04:05.7821823Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T15:04:05.7822036Z 
2025-08-17T15:04:05.7822139Z # api.migrations.versions.0001\_baseline
2025-08-17T15:04:05.7822332Z 
2025-08-17T15:04:05.7822428Z <a id="api.migrations.versions"></a>
2025-08-17T15:04:05.7822612Z 
2025-08-17T15:04:05.7822701Z # api.migrations.versions
2025-08-17T15:04:05.7822843Z 
2025-08-17T15:04:05.7822933Z <a id="api.migrations"></a>
2025-08-17T15:04:05.7823079Z 
2025-08-17T15:04:05.7823154Z # api.migrations
2025-08-17T15:04:05.7823270Z 
2025-08-17T15:04:05.7823350Z <a id="api.db"></a>
2025-08-17T15:04:05.7823467Z 
2025-08-17T15:04:05.7823544Z # api.db
2025-08-17T15:04:05.7823646Z 
2025-08-17T15:04:05.7823733Z <a id="api.routes.stats"></a>
2025-08-17T15:04:05.7823886Z 
2025-08-17T15:04:05.7823966Z # api.routes.stats
2025-08-17T15:04:05.7824085Z 
2025-08-17T15:04:05.7824181Z <a id="api.routes.stats.kpi"></a>
2025-08-17T15:04:05.7824348Z 
2025-08-17T15:04:05.7824422Z #### kpi
2025-08-17T15:04:05.7824515Z 
2025-08-17T15:04:05.7824587Z ```python
2025-08-17T15:04:05.7824775Z @router.get("/stats/kpi")
2025-08-17T15:04:05.7825037Z def kpi() -> List[Dict[str, int]]
2025-08-17T15:04:05.7825284Z ```
2025-08-17T15:04:05.7825376Z 
2025-08-17T15:04:05.7825462Z Return KPI metrics (mock).
2025-08-17T15:04:05.7825612Z 
2025-08-17T15:04:05.7825720Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T15:04:05.7825915Z 
2025-08-17T15:04:05.7825996Z #### roi\_by\_vendor
2025-08-17T15:04:05.7826113Z 
2025-08-17T15:04:05.7826177Z ```python
2025-08-17T15:04:05.7826356Z @router.get("/stats/roi_by_vendor")
2025-08-17T15:04:05.7826603Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T15:04:05.7826848Z ```
2025-08-17T15:04:05.7826930Z 
2025-08-17T15:04:05.7827013Z Return ROI percent by vendor.
2025-08-17T15:04:05.7827157Z 
2025-08-17T15:04:05.7827251Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T15:04:05.7827428Z 
2025-08-17T15:04:05.7827498Z #### roi\_trend
2025-08-17T15:04:05.7827600Z 
2025-08-17T15:04:05.7827663Z ```python
2025-08-17T15:04:05.7827833Z @router.get("/stats/roi_trend")
2025-08-17T15:04:05.7828066Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T15:04:05.7828303Z ```
2025-08-17T15:04:05.7828384Z 
2025-08-17T15:04:05.7828574Z Return 30-day ROI trend.
2025-08-17T15:04:05.7828710Z 
2025-08-17T15:04:05.7828791Z <a id="api.routes.roi"></a>
2025-08-17T15:04:05.7828926Z 
2025-08-17T15:04:05.7829002Z # api.routes.roi
2025-08-17T15:04:05.7829173Z 
2025-08-17T15:04:05.7829266Z <a id="api.routes.health"></a>
2025-08-17T15:04:05.7829438Z 
2025-08-17T15:04:05.7829513Z # api.routes.health
2025-08-17T15:04:05.7829625Z 
2025-08-17T15:04:05.7829732Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T15:04:05.7830021Z 
2025-08-17T15:04:05.7830087Z #### MAX\_SKEW
2025-08-17T15:04:05.7830192Z 
2025-08-17T15:04:05.7830255Z seconds
2025-08-17T15:04:05.7830339Z 
2025-08-17T15:04:05.7830430Z <a id="api.routes.health.health"></a>
2025-08-17T15:04:05.7830597Z 
2025-08-17T15:04:05.7830663Z #### health
2025-08-17T15:04:05.7830756Z 
2025-08-17T15:04:05.7830826Z ```python
2025-08-17T15:04:05.7831019Z @router.get("/health", include_in_schema=False)
2025-08-17T15:04:05.7831397Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T15:04:05.7831734Z ```
2025-08-17T15:04:05.7831825Z 
2025-08-17T15:04:05.7831941Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T15:04:05.7832138Z 
2025-08-17T15:04:05.7832231Z <a id="api.routes.repository"></a>
2025-08-17T15:04:05.7832402Z 
2025-08-17T15:04:05.7832481Z # api.routes.repository
2025-08-17T15:04:05.7832604Z 
2025-08-17T15:04:05.7832682Z <a id="api.routes"></a>
2025-08-17T15:04:05.7833179Z 
2025-08-17T15:04:05.7833392Z # api.routes
2025-08-17T15:04:05.7833579Z 
2025-08-17T15:04:05.7833728Z <a id="api.models.fee"></a>
2025-08-17T15:04:05.7833976Z 
2025-08-17T15:04:05.7834102Z # api.models.fee
2025-08-17T15:04:05.7834300Z 
2025-08-17T15:04:05.7834429Z <a id="api.models"></a>
2025-08-17T15:04:05.7834644Z 
2025-08-17T15:04:05.7834767Z # api.models
2025-08-17T15:04:05.7834942Z 
2025-08-17T15:04:05.7835091Z <a id="api.roi_repository"></a>
2025-08-17T15:04:05.7835302Z 
2025-08-17T15:04:05.7835379Z # api.roi\_repository
2025-08-17T15:04:05.7835500Z 
2025-08-17T15:04:05.7835571Z <a id="api.main"></a>
2025-08-17T15:04:05.7835696Z 
2025-08-17T15:04:05.7835759Z # api.main
2025-08-17T15:04:05.7835853Z 
2025-08-17T15:04:05.7835937Z <a id="api.main.ready"></a>
2025-08-17T15:04:05.7836072Z 
2025-08-17T15:04:05.7836135Z #### ready
2025-08-17T15:04:05.7836224Z 
2025-08-17T15:04:05.7836295Z ```python
2025-08-17T15:04:05.7836563Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T15:04:05.7837022Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T15:04:05.7837375Z                                                                       str]
2025-08-17T15:04:05.7837609Z ```
2025-08-17T15:04:05.7837693Z 
2025-08-17T15:04:05.7837796Z Return 200 only when migrations are at head.
2025-08-17T15:04:05.7837970Z 
2025-08-17T15:04:05.7838045Z <a id="api.config"></a>
2025-08-17T15:04:05.7838172Z 
2025-08-17T15:04:05.7838240Z # api.config
2025-08-17T15:04:05.7838334Z 
2025-08-17T15:04:05.7838538Z <a id="etl"></a>
2025-08-17T15:04:05.7838652Z 
2025-08-17T15:04:05.7838714Z # etl
2025-08-17T15:04:05.7838801Z 
2025-08-17T15:04:05.7838887Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T15:04:05.7839042Z 
2025-08-17T15:04:05.7839117Z # etl.fba\_fee\_ingestor
2025-08-17T15:04:05.7839240Z 
2025-08-17T15:04:05.7839328Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T15:04:05.7839471Z 
2025-08-17T15:04:05.7839543Z # etl.sp\_fees\_ingestor
2025-08-17T15:04:05.7839682Z 
2025-08-17T15:04:05.7839762Z <a id="etl.keepa_ingestor"></a>
2025-08-17T15:04:05.7839904Z 
2025-08-17T15:04:05.7839978Z # etl.keepa\_ingestor
2025-08-17T15:04:05.7840100Z 
2025-08-17T15:04:05.7840166Z <a id="etl.db"></a>
2025-08-17T15:04:05.7840272Z 
2025-08-17T15:04:05.7840339Z # etl.db
2025-08-17T15:04:05.7840429Z 
2025-08-17T15:04:05.7840518Z <a id="etl.dialects.schemas"></a>
2025-08-17T15:04:05.7840677Z 
2025-08-17T15:04:05.7840753Z # etl.dialects.schemas
2025-08-17T15:04:05.7840872Z 
2025-08-17T15:04:05.7840978Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T15:04:05.7841175Z 
2025-08-17T15:04:05.7841266Z # etl.dialects.amazon\_reimbursements
2025-08-17T15:04:05.7841432Z 
2025-08-17T15:04:05.7841533Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T15:04:05.7841704Z 
2025-08-17T15:04:05.7841789Z # etl.dialects.amazon\_returns
2025-08-17T15:04:05.7841938Z 
2025-08-17T15:04:05.7842014Z <a id="etl.dialects"></a>
2025-08-17T15:04:05.7842140Z 
2025-08-17T15:04:05.7842206Z # etl.dialects
2025-08-17T15:04:05.7842490Z 
2025-08-17T15:04:05.7842559Z <a id="ingest"></a>
2025-08-17T15:04:05.7842664Z 
2025-08-17T15:04:05.7842734Z # ingest
2025-08-17T15:04:05.7842820Z 
2025-08-17T15:04:05.7842905Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T15:04:05.7843063Z 
2025-08-17T15:04:05.7843150Z # ingest.tests.test\_smoke
2025-08-17T15:04:05.7843279Z 
2025-08-17T15:04:05.7843352Z <a id="ingest.tests"></a>
2025-08-17T15:04:05.7843478Z 
2025-08-17T15:04:05.7843545Z # ingest.tests
2025-08-17T15:04:05.7843646Z 
2025-08-17T15:04:05.7843738Z <a id="ingest.upload_router"></a>
2025-08-17T15:04:05.7843884Z 
2025-08-17T15:04:05.7843958Z # ingest.upload\_router
2025-08-17T15:04:05.7844077Z 
2025-08-17T15:04:05.7844163Z <a id="ingest.email_watcher"></a>
2025-08-17T15:04:05.7844306Z 
2025-08-17T15:04:05.7844378Z # ingest.email\_watcher
2025-08-17T15:04:05.7844499Z 
2025-08-17T15:04:05.7844587Z <a id="ingest.email_watcher.main"></a>
2025-08-17T15:04:05.7844749Z 
2025-08-17T15:04:05.7844817Z #### main
2025-08-17T15:04:05.7845079Z 
2025-08-17T15:04:05.7845143Z ```python
2025-08-17T15:04:05.7845320Z def main() -> dict[str, str]
2025-08-17T15:04:05.7845513Z ```
2025-08-17T15:04:05.7845603Z 
2025-08-17T15:04:05.7845744Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T15:04:05.7845968Z 
2025-08-17T15:04:05.7846097Z Returns {"status": "success"} when processing completes.
2025-08-17T15:04:05.7846308Z 
2025-08-17T15:04:05.7846390Z <a id="ingest.ingest_router"></a>
2025-08-17T15:04:05.7846537Z 
2025-08-17T15:04:05.7846615Z # ingest.ingest\_router
2025-08-17T15:04:05.7846734Z 
2025-08-17T15:04:05.7846809Z <a id="logistics_etl"></a>
2025-08-17T15:04:05.7846942Z 
2025-08-17T15:04:05.7847009Z # logistics\_etl
2025-08-17T15:04:05.7847116Z 
2025-08-17T15:04:05.7847190Z Daily logistics ETL job.
2025-08-17T15:04:05.7847318Z 
2025-08-17T15:04:05.7847402Z <a id="logistics_etl.__main__"></a>
2025-08-17T15:04:05.7847553Z 
2025-08-17T15:04:05.7847634Z # logistics\_etl.\_\_main\_\_
2025-08-17T15:04:05.7847770Z 
2025-08-17T15:04:05.7847858Z <a id="logistics_etl.dsn"></a>
2025-08-17T15:04:05.7847996Z 
2025-08-17T15:04:05.7848072Z # logistics\_etl.dsn
2025-08-17T15:04:05.7848185Z 
2025-08-17T15:04:05.7848302Z Local DSN builder to avoid cross-service dependency.
2025-08-17T15:04:05.7848616Z 
2025-08-17T15:04:05.7848711Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T15:04:05.7848882Z 
2025-08-17T15:04:05.7848946Z #### build\_dsn
2025-08-17T15:04:05.7849048Z 
2025-08-17T15:04:05.7849115Z ```python
2025-08-17T15:04:05.7849287Z def build_dsn(sync: bool = True) -> str
2025-08-17T15:04:05.7849510Z ```
2025-08-17T15:04:05.7849591Z 
2025-08-17T15:04:05.7849729Z Return a Postgres DSN assembled from environment variables.
2025-08-17T15:04:05.7849950Z 
2025-08-17T15:04:05.7850105Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T15:04:05.7850496Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T15:04:05.7851013Z error when any required variable is missing.
2025-08-17T15:04:05.7851275Z 
2025-08-17T15:04:05.7851447Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T15:04:05.7851658Z 
2025-08-17T15:04:05.7851811Z # logistics\_etl.tests.conftest
2025-08-17T15:04:05.7852073Z 
2025-08-17T15:04:05.7852180Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T15:04:05.7852363Z 
2025-08-17T15:04:05.7852452Z # logistics\_etl.tests.test\_repository
2025-08-17T15:04:05.7852621Z 
2025-08-17T15:04:05.7852713Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T15:04:05.7852880Z 
2025-08-17T15:04:05.7852966Z # logistics\_etl.tests.test\_cron
2025-08-17T15:04:05.7853115Z 
2025-08-17T15:04:05.7853212Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T15:04:05.7853385Z 
2025-08-17T15:04:05.7853476Z # logistics\_etl.tests.test\_imports
2025-08-17T15:04:05.7853631Z 
2025-08-17T15:04:05.7853724Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T15:04:05.7853907Z 
2025-08-17T15:04:05.7853990Z # logistics\_etl.tests.test\_smoke
2025-08-17T15:04:05.7854142Z 
2025-08-17T15:04:05.7854370Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T15:04:05.7854543Z 
2025-08-17T15:04:05.7854624Z # logistics\_etl.tests.test\_client
2025-08-17T15:04:05.7854774Z 
2025-08-17T15:04:05.7854861Z <a id="logistics_etl.tests"></a>
2025-08-17T15:04:05.7855005Z 
2025-08-17T15:04:05.7855085Z # logistics\_etl.tests
2025-08-17T15:04:05.7855215Z 
2025-08-17T15:04:05.7855294Z <a id="logistics_etl.flow"></a>
2025-08-17T15:04:05.7855431Z 
2025-08-17T15:04:05.7855507Z # logistics\_etl.flow
2025-08-17T15:04:05.7855620Z 
2025-08-17T15:04:05.7855701Z <a id="logistics_etl.client"></a>
2025-08-17T15:04:05.7855861Z 
2025-08-17T15:04:05.7855942Z # logistics\_etl.client
2025-08-17T15:04:05.7856065Z 
2025-08-17T15:04:05.7856144Z <a id="logistics_etl.cron"></a>
2025-08-17T15:04:05.7856286Z 
2025-08-17T15:04:05.7856358Z # logistics\_etl.cron
2025-08-17T15:04:05.7856472Z 
2025-08-17T15:04:05.7856550Z <a id="logistics_etl.db"></a>
2025-08-17T15:04:05.7856691Z 
2025-08-17T15:04:05.7856758Z # logistics\_etl.db
2025-08-17T15:04:05.7856980Z 
2025-08-17T15:04:05.7857076Z <a id="logistics_etl.repository"></a>
2025-08-17T15:04:05.7857234Z 
2025-08-17T15:04:05.7857313Z # logistics\_etl.repository
2025-08-17T15:04:05.7857451Z 
2025-08-17T15:04:05.7857521Z <a id="alert_bot"></a>
2025-08-17T15:04:05.7857637Z 
2025-08-17T15:04:05.7857701Z # alert\_bot
2025-08-17T15:04:05.7857804Z 
2025-08-17T15:04:05.7857890Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T15:04:05.7858052Z 
2025-08-17T15:04:05.7858138Z # alert\_bot.tests.test\_smoke
2025-08-17T15:04:05.7858275Z 
2025-08-17T15:04:05.7858355Z <a id="alert_bot.tests"></a>
2025-08-17T15:04:05.7858638Z 
2025-08-17T15:04:05.7858707Z # alert\_bot.tests
2025-08-17T15:04:05.7858814Z 
2025-08-17T15:04:05.7858894Z <a id="alert_bot.alert_bot"></a>
2025-08-17T15:04:05.7859043Z 
2025-08-17T15:04:05.7859117Z # alert\_bot.alert\_bot
2025-08-17T15:04:05.7859237Z 
2025-08-17T15:04:05.7859319Z <a id="alert_bot.rules"></a>
2025-08-17T15:04:05.7859449Z 
2025-08-17T15:04:05.7859515Z # alert\_bot.rules
2025-08-17T15:04:05.7859639Z 
2025-08-17T15:04:05.7859707Z <a id="common"></a>
2025-08-17T15:04:05.7859811Z 
2025-08-17T15:04:05.7859874Z # common
2025-08-17T15:04:05.7859971Z 
2025-08-17T15:04:05.7860044Z <a id="common.dsn"></a>
2025-08-17T15:04:05.7860163Z 
2025-08-17T15:04:05.7860232Z # common.dsn
2025-08-17T15:04:05.7860326Z 
2025-08-17T15:04:05.7860409Z <a id="common.dsn.build_dsn"></a>
2025-08-17T15:04:05.7860558Z 
2025-08-17T15:04:05.7860634Z #### build\_dsn
2025-08-17T15:04:05.7860757Z 
2025-08-17T15:04:05.7860822Z ```python
2025-08-17T15:04:05.7860997Z def build_dsn(sync: bool = True) -> str
2025-08-17T15:04:05.7861221Z ```
2025-08-17T15:04:05.7861304Z 
2025-08-17T15:04:05.7861423Z Return a Postgres DSN, validating required variables.
2025-08-17T15:04:05.7861635Z 
2025-08-17T15:04:05.7861820Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T15:04:05.7862259Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T15:04:05.7862666Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T15:04:05.7862990Z missing.
2025-08-17T15:04:05.7863078Z 
2025-08-17T15:04:05.7863160Z <a id="common.models_vendor"></a>
2025-08-17T15:04:05.7863312Z 
2025-08-17T15:04:05.7863385Z # common.models\_vendor
2025-08-17T15:04:05.7863502Z 
2025-08-17T15:04:05.7863595Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T15:04:05.7863764Z 
2025-08-17T15:04:05.7863829Z ## Vendor Objects
2025-08-17T15:04:05.7863942Z 
2025-08-17T15:04:05.7864003Z ```python
2025-08-17T15:04:05.7864154Z class Vendor(Base)
2025-08-17T15:04:05.7864319Z ```
2025-08-17T15:04:05.7864401Z 
2025-08-17T15:04:05.7864478Z Vendor of inventory items.
2025-08-17T15:04:05.7864614Z 
2025-08-17T15:04:05.7864716Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T15:04:05.7864896Z 
2025-08-17T15:04:05.7864974Z ## VendorPrice Objects
2025-08-17T15:04:05.7865089Z 
2025-08-17T15:04:05.7865150Z ```python
2025-08-17T15:04:05.7865311Z class VendorPrice(Base)
2025-08-17T15:04:05.7865891Z ```
2025-08-17T15:04:05.7866057Z 
2025-08-17T15:04:05.7866260Z Association table linking vendors to pricing.
2025-08-17T15:04:05.7866610Z 
2025-08-17T15:04:05.7866750Z <a id="common.db_url"></a>
2025-08-17T15:04:05.7867001Z 
2025-08-17T15:04:05.7867134Z # common.db\_url
2025-08-17T15:04:05.7867265Z 
2025-08-17T15:04:05.7867357Z <a id="common.db_url.build_url"></a>
2025-08-17T15:04:05.7867517Z 
2025-08-17T15:04:05.7867584Z #### build\_url
2025-08-17T15:04:05.7867690Z 
2025-08-17T15:04:05.7867755Z ```python
2025-08-17T15:04:05.7867934Z def build_url(async_: bool = True) -> str
2025-08-17T15:04:05.7868170Z ```
2025-08-17T15:04:05.7868254Z 
2025-08-17T15:04:05.7868358Z Return Postgres DSN from env or PG_* parts.
2025-08-17T15:04:05.7868674Z 
2025-08-17T15:04:05.7868753Z <a id="common.keepa"></a>
2025-08-17T15:04:05.7868884Z 
2025-08-17T15:04:05.7868957Z # common.keepa
2025-08-17T15:04:05.7869057Z 
2025-08-17T15:04:05.7869131Z <a id="common.llm"></a>
2025-08-17T15:04:05.7869256Z 
2025-08-17T15:04:05.7869770Z # common.llm
2025-08-17T15:04:05.7869894Z 
2025-08-17T15:04:05.7869980Z <a id="common.settings"></a>
2025-08-17T15:04:05.7870134Z 
2025-08-17T15:04:05.7870206Z # common.settings
2025-08-17T15:04:05.7870315Z 
2025-08-17T15:04:05.7870394Z <a id="common.db"></a>
2025-08-17T15:04:05.7870511Z 
2025-08-17T15:04:05.7870575Z # common.db
2025-08-17T15:04:05.7870672Z 
2025-08-17T15:04:05.7870766Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T15:04:05.7870941Z 
2025-08-17T15:04:05.7871017Z #### build\_sqlalchemy\_url
2025-08-17T15:04:05.7871154Z 
2025-08-17T15:04:05.7871221Z ```python
2025-08-17T15:04:05.7871407Z def build_sqlalchemy_url() -> str
2025-08-17T15:04:05.7871616Z ```
2025-08-17T15:04:05.7871698Z 
2025-08-17T15:04:05.7871802Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T15:04:05.7871974Z 
2025-08-17T15:04:05.7872067Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T15:04:05.7872242Z 
2025-08-17T15:04:05.7872318Z #### build\_asyncpg\_dsn
2025-08-17T15:04:05.7872465Z 
2025-08-17T15:04:05.7872596Z ```python
2025-08-17T15:04:05.7872893Z def build_asyncpg_dsn() -> str
2025-08-17T15:04:05.7873252Z ```
2025-08-17T15:04:05.7873398Z 
2025-08-17T15:04:05.7873622Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T15:04:05.7873962Z 
2025-08-17T15:04:05.7874062Z <a id="common.db.refresh_mvs"></a>
2025-08-17T15:04:05.7874218Z 
2025-08-17T15:04:05.7874286Z #### refresh\_mvs
2025-08-17T15:04:05.7874399Z 
2025-08-17T15:04:05.7874464Z ```python
2025-08-17T15:04:05.7874657Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T15:04:05.7874908Z ```
2025-08-17T15:04:05.7874988Z 
2025-08-17T15:04:05.7875136Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T15:04:05.7875355Z 
2025-08-17T15:04:05.7875434Z <a id="common.config"></a>
2025-08-17T15:04:05.7875571Z 
2025-08-17T15:04:05.7875639Z # common.config
2025-08-17T15:04:05.7875742Z 
2025-08-17T15:04:05.7875816Z <a id="common.base"></a>
2025-08-17T15:04:05.7875948Z 
2025-08-17T15:04:05.7876012Z # common.base
2025-08-17T15:04:05.7876119Z 
2025-08-17T15:04:05.7876205Z <a id="common.base.Base"></a>
2025-08-17T15:04:05.7876343Z 
2025-08-17T15:04:05.7876407Z ## Base Objects
2025-08-17T15:04:05.7876507Z 
2025-08-17T15:04:05.7876574Z ```python
2025-08-17T15:04:05.7876740Z class Base(DeclarativeBase)
2025-08-17T15:04:05.7876948Z ```
2025-08-17T15:04:05.7877031Z 
2025-08-17T15:04:05.7877118Z Base class for SQLAlchemy models.
2025-08-17T15:04:05.7877269Z 
2025-08-17T15:04:05.7877348Z <a id="repricer"></a>
2025-08-17T15:04:05.7877465Z 
2025-08-17T15:04:05.7877530Z # repricer
2025-08-17T15:04:05.7877627Z 
2025-08-17T15:04:05.7877715Z <a id="repricer.app.schemas"></a>
2025-08-17T15:04:05.7877865Z 
2025-08-17T15:04:05.7877942Z # repricer.app.schemas
2025-08-17T15:04:05.7878070Z 
2025-08-17T15:04:05.7878154Z <a id="repricer.app.deps"></a>
2025-08-17T15:04:05.7878295Z 
2025-08-17T15:04:05.7878375Z # repricer.app.deps
2025-08-17T15:04:05.7878615Z 
2025-08-17T15:04:05.7878734Z Placeholder module for Keepa / SP-API clients.
2025-08-17T15:04:05.7879087Z 
2025-08-17T15:04:05.7879170Z <a id="repricer.app.logic"></a>
2025-08-17T15:04:05.7879315Z 
2025-08-17T15:04:05.7879388Z # repricer.app.logic
2025-08-17T15:04:05.7879509Z 
2025-08-17T15:04:05.7879609Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T15:04:05.7879785Z 
2025-08-17T15:04:05.7879856Z #### MIN\_MARGIN
2025-08-17T15:04:05.7879956Z 
2025-08-17T15:04:05.7880017Z 15 % ROI
2025-08-17T15:04:05.7880108Z 
2025-08-17T15:04:05.7880209Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T15:04:05.7880388Z 
2025-08-17T15:04:05.7880509Z #### compute\_price
2025-08-17T15:04:05.7880623Z 
2025-08-17T15:04:05.7880686Z ```python
2025-08-17T15:04:05.7880937Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T15:04:05.7881236Z ```
2025-08-17T15:04:05.7881319Z 
2025-08-17T15:04:05.7881435Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T15:04:05.7881715Z Replace with real competitive logic later.
2025-08-17T15:04:05.7881891Z 
2025-08-17T15:04:05.7882096Z <a id="repricer.app.main"></a>
2025-08-17T15:04:05.7882239Z 
2025-08-17T15:04:05.7882310Z # repricer.app.main
2025-08-17T15:04:05.7882427Z 
2025-08-17T15:04:05.7882503Z <a id="repricer.app"></a>
2025-08-17T15:04:05.7882631Z 
2025-08-17T15:04:05.7882704Z # repricer.app
2025-08-17T15:04:05.7882807Z 
2025-08-17T15:04:05.7882897Z <a id="repricer.tests.test_imports"></a>
2025-08-17T15:04:05.7883067Z 
2025-08-17T15:04:05.7883148Z # repricer.tests.test\_imports
2025-08-17T15:04:05.7883287Z 
2025-08-17T15:04:05.7883377Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T15:04:05.7883543Z 
2025-08-17T15:04:05.7883625Z # repricer.tests.test\_smoke
2025-08-17T15:04:05.7883763Z 
2025-08-17T15:04:05.7883846Z <a id="repricer.tests"></a>
2025-08-17T15:04:05.7883975Z 
2025-08-17T15:04:05.7884046Z # repricer.tests
2025-08-17T15:04:05.7884157Z 
2025-08-17T15:04:05.7884221Z <a id="db"></a>
2025-08-17T15:04:05.7884321Z 
2025-08-17T15:04:05.7884380Z # db
2025-08-17T15:04:05.7884469Z 
2025-08-17T15:04:05.7884545Z <a id="db.utils.views"></a>
2025-08-17T15:04:05.7884681Z 
2025-08-17T15:04:05.7884752Z # db.utils.views
2025-08-17T15:04:05.7884854Z 
2025-08-17T15:04:05.7884945Z <a id="db.utils.views.replace_view"></a>
2025-08-17T15:04:05.7885113Z 
2025-08-17T15:04:05.7885194Z #### replace\_view
2025-08-17T15:04:05.7885299Z 
2025-08-17T15:04:05.7885362Z ```python
2025-08-17T15:04:05.7885559Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T15:04:05.7885800Z ```
2025-08-17T15:04:05.7885890Z 
2025-08-17T15:04:05.7885981Z Drop and recreate a SQL view atomically.
2025-08-17T15:04:05.7886145Z 
2025-08-17T15:04:05.7886221Z <a id="db.utils"></a>
2025-08-17T15:04:05.7886335Z 
2025-08-17T15:04:05.7886397Z # db.utils
2025-08-17T15:04:05.7886492Z 
2025-08-17T15:04:05.7886570Z <a id="price_importer"></a>
2025-08-17T15:04:05.7886701Z 
2025-08-17T15:04:05.7886771Z # price\_importer
2025-08-17T15:04:05.7886881Z 
2025-08-17T15:04:05.7886982Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T15:04:05.7887165Z 
2025-08-17T15:04:05.7887265Z # price\_importer.services\_common.dsn
2025-08-17T15:04:05.7887425Z 
2025-08-17T15:04:05.7887552Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T15:04:05.7887764Z 
2025-08-17T15:04:05.7887828Z #### build\_dsn
2025-08-17T15:04:05.7887930Z 
2025-08-17T15:04:05.7887993Z ```python
2025-08-17T15:04:05.7888175Z def build_dsn(sync: bool = True) -> str
2025-08-17T15:04:05.7888494Z ```
2025-08-17T15:04:05.7888588Z 
2025-08-17T15:04:05.7888656Z Return safe DSN.
2025-08-17T15:04:05.7888762Z 
2025-08-17T15:04:05.7889106Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T15:04:05.7889310Z 
2025-08-17T15:04:05.7889435Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T15:04:05.7889645Z 
2025-08-17T15:04:05.7889757Z # price\_importer.services\_common.models\_vendor
2025-08-17T15:04:05.7889944Z 
2025-08-17T15:04:05.7890049Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T15:04:05.7890239Z 
2025-08-17T15:04:05.7890335Z # price\_importer.services\_common.db\_url
2025-08-17T15:04:05.7890653Z 
2025-08-17T15:04:05.7890792Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T15:04:05.7891008Z 
2025-08-17T15:04:05.7891073Z #### build\_url
2025-08-17T15:04:05.7891184Z 
2025-08-17T15:04:05.7891248Z ```python
2025-08-17T15:04:05.7891420Z def build_url(async_: bool = True) -> str
2025-08-17T15:04:05.7891644Z ```
2025-08-17T15:04:05.7891726Z 
2025-08-17T15:04:05.7891829Z Return Postgres DSN from env or PG_* parts.
2025-08-17T15:04:05.7892007Z 
2025-08-17T15:04:05.7892114Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T15:04:05.7892298Z 
2025-08-17T15:04:05.7892394Z # price\_importer.services\_common.keepa
2025-08-17T15:04:05.7892565Z 
2025-08-17T15:04:05.7892666Z <a id="price_importer.services_common.llm"></a>
2025-08-17T15:04:05.7892854Z 
2025-08-17T15:04:05.7892948Z # price\_importer.services\_common.llm
2025-08-17T15:04:05.7893109Z 
2025-08-17T15:04:05.7893227Z <a id="price_importer.services_common.settings"></a>
2025-08-17T15:04:05.7893538Z 
2025-08-17T15:04:05.7893635Z # price\_importer.services\_common.settings
2025-08-17T15:04:05.7893809Z 
2025-08-17T15:04:05.7893916Z <a id="price_importer.services_common.db"></a>
2025-08-17T15:04:05.7894090Z 
2025-08-17T15:04:05.7894179Z # price\_importer.services\_common.db
2025-08-17T15:04:05.7894342Z 
2025-08-17T15:04:05.7894497Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T15:04:05.7894734Z 
2025-08-17T15:04:05.7894815Z #### build\_sqlalchemy\_url
2025-08-17T15:04:05.7894945Z 
2025-08-17T15:04:05.7895008Z ```python
2025-08-17T15:04:05.7895191Z def build_sqlalchemy_url() -> str
2025-08-17T15:04:05.7895397Z ```
2025-08-17T15:04:05.7895485Z 
2025-08-17T15:04:05.7895579Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T15:04:05.7895749Z 
2025-08-17T15:04:05.7895890Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T15:04:05.7896122Z 
2025-08-17T15:04:05.7896197Z #### build\_asyncpg\_dsn
2025-08-17T15:04:05.7896322Z 
2025-08-17T15:04:05.7896401Z ```python
2025-08-17T15:04:05.7896572Z def build_asyncpg_dsn() -> str
2025-08-17T15:04:05.7896772Z ```
2025-08-17T15:04:05.7896854Z 
2025-08-17T15:04:05.7896981Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T15:04:05.7897197Z 
2025-08-17T15:04:05.7897325Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T15:04:05.7897531Z 
2025-08-17T15:04:05.7897605Z #### refresh\_mvs
2025-08-17T15:04:05.7897713Z 
2025-08-17T15:04:05.7897775Z ```python
2025-08-17T15:04:05.7897971Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T15:04:05.7898221Z ```
2025-08-17T15:04:05.7898326Z 
2025-08-17T15:04:05.7898643Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T15:04:05.7898860Z 
2025-08-17T15:04:05.7898955Z <a id="price_importer.services_common"></a>
2025-08-17T15:04:05.7899135Z 
2025-08-17T15:04:05.7899222Z # price\_importer.services\_common
2025-08-17T15:04:05.7899378Z 
2025-08-17T15:04:05.7899492Z <a id="price_importer.services_common.base"></a>
2025-08-17T15:04:05.7899685Z 
2025-08-17T15:04:05.7899777Z # price\_importer.services\_common.base
2025-08-17T15:04:05.7899946Z 
2025-08-17T15:04:05.7900038Z <a id="price_importer.normaliser"></a>
2025-08-17T15:04:05.7900200Z 
2025-08-17T15:04:05.7900283Z # price\_importer.normaliser
2025-08-17T15:04:05.7900428Z 
2025-08-17T15:04:05.7900532Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T15:04:05.7900715Z 
2025-08-17T15:04:05.7900812Z # price\_importer.common.models\_vendor
2025-08-17T15:04:05.7900973Z 
2025-08-17T15:04:05.7901065Z <a id="price_importer.common.db_url"></a>
2025-08-17T15:04:05.7901241Z 
2025-08-17T15:04:05.7901327Z # price\_importer.common.db\_url
2025-08-17T15:04:05.7901473Z 
2025-08-17T15:04:05.7901581Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T15:04:05.7901775Z 
2025-08-17T15:04:05.7901841Z #### make\_dsn
2025-08-17T15:04:05.7901941Z 
2025-08-17T15:04:05.7902010Z ```python
2025-08-17T15:04:05.7902181Z def make_dsn(async_: bool = False) -> str
2025-08-17T15:04:05.7902547Z ```
2025-08-17T15:04:05.7902630Z 
2025-08-17T15:04:05.7902748Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T15:04:05.7902952Z 
2025-08-17T15:04:05.7903063Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T15:04:05.7903253Z 
2025-08-17T15:04:05.7903317Z #### build\_url
2025-08-17T15:04:05.7903425Z 
2025-08-17T15:04:05.7903488Z ```python
2025-08-17T15:04:05.7903668Z def build_url(async_: bool = False) -> str
2025-08-17T15:04:05.7903893Z ```
2025-08-17T15:04:05.7903973Z 
2025-08-17T15:04:05.7904100Z Return Postgres DSN built from environment variables.
2025-08-17T15:04:05.7904300Z 
2025-08-17T15:04:05.7904387Z <a id="price_importer.common"></a>
2025-08-17T15:04:05.7904547Z 
2025-08-17T15:04:05.7904625Z # price\_importer.common
2025-08-17T15:04:05.7904750Z 
2025-08-17T15:04:05.7904846Z <a id="price_importer.common.base"></a>
2025-08-17T15:04:05.7905009Z 
2025-08-17T15:04:05.7905092Z # price\_importer.common.base
2025-08-17T15:04:05.7905233Z 
2025-08-17T15:04:05.7905458Z <a id="price_importer.tests.conftest"></a>
2025-08-17T15:04:05.7905632Z 
2025-08-17T15:04:05.7905718Z # price\_importer.tests.conftest
2025-08-17T15:04:05.7905869Z 
2025-08-17T15:04:05.7905968Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T15:04:05.7906145Z 
2025-08-17T15:04:05.7906237Z # price\_importer.tests.test\_reader
2025-08-17T15:04:05.7906394Z 
2025-08-17T15:04:05.7906499Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T15:04:05.7906683Z 
2025-08-17T15:04:05.7906781Z # price\_importer.tests.test\_imports
2025-08-17T15:04:05.7906941Z 
2025-08-17T15:04:05.7907039Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T15:04:05.7907217Z 
2025-08-17T15:04:05.7907304Z # price\_importer.tests.test\_smoke
2025-08-17T15:04:05.7907458Z 
2025-08-17T15:04:05.7907568Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T15:04:05.7907754Z 
2025-08-17T15:04:05.7907845Z # price\_importer.tests.test\_normaliser
2025-08-17T15:04:05.7908013Z 
2025-08-17T15:04:05.7908109Z <a id="price_importer.tests"></a>
2025-08-17T15:04:05.7908263Z 
2025-08-17T15:04:05.7908341Z # price\_importer.tests
2025-08-17T15:04:05.7908575Z 
2025-08-17T15:04:05.7908662Z <a id="price_importer.reader"></a>
2025-08-17T15:04:05.7908816Z 
2025-08-17T15:04:05.7908898Z # price\_importer.reader
2025-08-17T15:04:05.7909023Z 
2025-08-17T15:04:05.7909115Z <a id="price_importer.repository"></a>
2025-08-17T15:04:05.7909281Z 
2025-08-17T15:04:05.7909369Z # price\_importer.repository
2025-08-17T15:04:05.7909509Z 
2025-08-17T15:04:05.7909592Z <a id="price_importer.import"></a>
2025-08-17T15:04:05.7909745Z 
2025-08-17T15:04:05.7909825Z # price\_importer.import
2025-08-17T15:04:05.7909948Z 
2025-08-17T15:04:05.7910026Z <a id="fees_h10"></a>
2025-08-17T15:04:05.7910142Z 
2025-08-17T15:04:05.7910206Z # fees\_h10
2025-08-17T15:04:05.7910300Z 
2025-08-17T15:04:05.7910383Z <a id="fees_h10.worker"></a>
2025-08-17T15:04:05.7910515Z 
2025-08-17T15:04:05.7910581Z # fees\_h10.worker
2025-08-17T15:04:05.7910694Z 
2025-08-17T15:04:05.7910799Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T15:04:05.7911008Z 
2025-08-17T15:04:05.7911083Z #### list\_active\_asins
2025-08-17T15:04:05.7911211Z 
2025-08-17T15:04:05.7911275Z ```python
2025-08-17T15:04:05.7911451Z def list_active_asins() -> list[str]
2025-08-17T15:04:05.7911659Z ```
2025-08-17T15:04:05.7911742Z 
2025-08-17T15:04:05.7911860Z Return known ASINs or an empty list if unavailable.
2025-08-17T15:04:05.7912053Z 
2025-08-17T15:04:05.7912137Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T15:04:05.7912299Z 
2025-08-17T15:04:05.7912378Z # fees\_h10.tests.test\_smoke
2025-08-17T15:04:05.7912513Z 
2025-08-17T15:04:05.7912592Z <a id="fees_h10.tests"></a>
2025-08-17T15:04:05.7912722Z 
2025-08-17T15:04:05.7912789Z # fees\_h10.tests
2025-08-17T15:04:05.7912895Z 
2025-08-17T15:04:05.7912977Z <a id="fees_h10.client"></a>
2025-08-17T15:04:05.7913108Z 
2025-08-17T15:04:05.7913174Z # fees\_h10.client
2025-08-17T15:04:05.7913285Z 
2025-08-17T15:04:05.7913367Z <a id="fees_h10.repository"></a>
2025-08-17T15:04:05.7913642Z 
2025-08-17T15:04:05.7913716Z # fees\_h10.repository
2025-08-17T15:04:05.7913839Z 
2025-08-17T15:04:05.7913908Z <a id="emailer"></a>
2025-08-17T15:04:05.7914020Z 
2025-08-17T15:04:05.7914090Z # emailer
2025-08-17T15:04:05.7914178Z 
2025-08-17T15:04:05.7914280Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T15:04:05.7914464Z 
2025-08-17T15:04:05.7914552Z # emailer.tests.test\_import\_emailer
2025-08-17T15:04:05.7914712Z 
2025-08-17T15:04:05.7914798Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T15:04:05.7914962Z 
2025-08-17T15:04:05.7915042Z # emailer.tests.test\_smoke
2025-08-17T15:04:05.7915176Z 
2025-08-17T15:04:05.7915260Z <a id="emailer.tests"></a>
2025-08-17T15:04:05.7915388Z 
2025-08-17T15:04:05.7915455Z # emailer.tests
2025-08-17T15:04:05.7915564Z 
2025-08-17T15:04:05.7915647Z <a id="emailer.generate_body"></a>
2025-08-17T15:04:05.7915794Z 
2025-08-17T15:04:05.7915870Z # emailer.generate\_body
2025-08-17T15:04:05.7915999Z 
2025-08-17T15:04:05.7916069Z <a id="llm_server"></a>
2025-08-17T15:04:05.7916308Z 
2025-08-17T15:04:05.7916379Z # llm\_server
2025-08-17T15:04:05.7916475Z 
2025-08-17T15:04:05.7916554Z <a id="llm_server.app"></a>
2025-08-17T15:04:05.7916683Z 
2025-08-17T15:04:05.7916755Z # llm\_server.app
2025-08-17T15:04:05.7916860Z 
