2025-08-18T12:07:50.5076530Z ##[group]Run pydoc-markdown
2025-08-18T12:07:50.5076844Z [36;1mpydoc-markdown[0m
2025-08-18T12:07:50.5117199Z shell: /usr/bin/bash -e {0}
2025-08-18T12:07:50.5117435Z env:
2025-08-18T12:07:50.5117675Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T12:07:50.5118089Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T12:07:50.5118473Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T12:07:50.5118811Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T12:07:50.5119160Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T12:07:50.5119506Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T12:07:50.5119791Z ##[endgroup]
2025-08-18T12:07:50.8502231Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T12:07:50.8502976Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T12:07:50.8503450Z In "pydoc-markdown.yml"
2025-08-18T12:07:50.8503881Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T12:07:50.8504629Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T12:07:50.8505415Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T12:07:50.8505949Z 
2025-08-18T12:07:51.1394181Z <a id="__init__"></a>
2025-08-18T12:07:51.1394708Z 
2025-08-18T12:07:51.1394858Z # \_\_init\_\_
2025-08-18T12:07:51.1395073Z 
2025-08-18T12:07:51.1395206Z <a id="api"></a>
2025-08-18T12:07:51.1395416Z 
2025-08-18T12:07:51.1395726Z # api
2025-08-18T12:07:51.1395913Z 
2025-08-18T12:07:51.1396068Z <a id="api.errors"></a>
2025-08-18T12:07:51.1396350Z 
2025-08-18T12:07:51.1396501Z # api.errors
2025-08-18T12:07:51.1396707Z 
2025-08-18T12:07:51.1396898Z <a id="api.tests.test_errors_json"></a>
2025-08-18T12:07:51.1397272Z 
2025-08-18T12:07:51.1397462Z # api.tests.test\_errors\_json
2025-08-18T12:07:51.1397754Z 
2025-08-18T12:07:51.1397954Z <a id="api.tests.test_llm"></a>
2025-08-18T12:07:51.1398304Z 
2025-08-18T12:07:51.1398473Z # api.tests.test\_llm
2025-08-18T12:07:51.1398801Z 
2025-08-18T12:07:51.1399000Z <a id="api.tests.test_imports"></a>
2025-08-18T12:07:51.1399389Z 
2025-08-18T12:07:51.1399551Z # api.tests.test\_imports
2025-08-18T12:07:51.1399866Z 
2025-08-18T12:07:51.1400090Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T12:07:51.1400437Z 
2025-08-18T12:07:51.1400603Z # api.tests.test\_entrypoint
2025-08-18T12:07:51.1400903Z 
2025-08-18T12:07:51.1401042Z <a id="api.tests.test_health"></a>
2025-08-18T12:07:51.1401355Z 
2025-08-18T12:07:51.1401502Z # api.tests.test\_health
2025-08-18T12:07:51.1401722Z 
2025-08-18T12:07:51.1401869Z <a id="api.logging_config"></a>
2025-08-18T12:07:51.1402372Z 
2025-08-18T12:07:51.1402527Z # api.logging\_config
2025-08-18T12:07:51.1402758Z 
2025-08-18T12:07:51.1402919Z <a id="api.migrations.env"></a>
2025-08-18T12:07:51.1403209Z 
2025-08-18T12:07:51.1403355Z # api.migrations.env
2025-08-18T12:07:51.1403574Z 
2025-08-18T12:07:51.1403805Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T12:07:51.1404563Z 
2025-08-18T12:07:51.1404763Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T12:07:51.1405113Z 
2025-08-18T12:07:51.1405315Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T12:07:51.1405674Z 
2025-08-18T12:07:51.1405849Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T12:07:51.1406216Z 
2025-08-18T12:07:51.1406524Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T12:07:51.1407020Z 
2025-08-18T12:07:51.1407276Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T12:07:51.1407662Z 
2025-08-18T12:07:51.1407879Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T12:07:51.1408194Z 
2025-08-18T12:07:51.1408323Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T12:07:51.1408549Z 
2025-08-18T12:07:51.1408689Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T12:07:51.1408938Z 
2025-08-18T12:07:51.1409060Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T12:07:51.1409284Z 
2025-08-18T12:07:51.1409740Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T12:07:51.1409997Z 
2025-08-18T12:07:51.1410127Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T12:07:51.1410365Z 
2025-08-18T12:07:51.1410505Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T12:07:51.1410745Z 
2025-08-18T12:07:51.1410870Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T12:07:51.1411110Z 
2025-08-18T12:07:51.1411258Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T12:07:51.1411504Z 
2025-08-18T12:07:51.1411635Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T12:07:51.1411844Z 
2025-08-18T12:07:51.1412213Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T12:07:51.1412464Z 
2025-08-18T12:07:51.1412594Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T12:07:51.1412806Z 
2025-08-18T12:07:51.1412943Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T12:07:51.1413152Z 
2025-08-18T12:07:51.1413272Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T12:07:51.1413463Z 
2025-08-18T12:07:51.1413606Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T12:07:51.1413826Z 
2025-08-18T12:07:51.1413945Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T12:07:51.1414150Z 
2025-08-18T12:07:51.1414262Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T12:07:51.1414457Z 
2025-08-18T12:07:51.1414558Z # api.migrations.versions.0001\_baseline
2025-08-18T12:07:51.1414732Z 
2025-08-18T12:07:51.1414822Z <a id="api.migrations.versions"></a>
2025-08-18T12:07:51.1414990Z 
2025-08-18T12:07:51.1415076Z # api.migrations.versions
2025-08-18T12:07:51.1415212Z 
2025-08-18T12:07:51.1415293Z <a id="api.migrations"></a>
2025-08-18T12:07:51.1415438Z 
2025-08-18T12:07:51.1415509Z # api.migrations
2025-08-18T12:07:51.1415623Z 
2025-08-18T12:07:51.1415699Z <a id="api.db"></a>
2025-08-18T12:07:51.1415810Z 
2025-08-18T12:07:51.1415875Z # api.db
2025-08-18T12:07:51.1415970Z 
2025-08-18T12:07:51.1416065Z <a id="api.routes.stats"></a>
2025-08-18T12:07:51.1416210Z 
2025-08-18T12:07:51.1416282Z # api.routes.stats
2025-08-18T12:07:51.1416398Z 
2025-08-18T12:07:51.1416487Z <a id="api.routes.stats.kpi"></a>
2025-08-18T12:07:51.1416642Z 
2025-08-18T12:07:51.1416708Z #### kpi
2025-08-18T12:07:51.1416806Z 
2025-08-18T12:07:51.1416877Z ```python
2025-08-18T12:07:51.1417060Z @router.get("/stats/kpi")
2025-08-18T12:07:51.1417301Z def kpi() -> List[Dict[str, int]]
2025-08-18T12:07:51.1417515Z ```
2025-08-18T12:07:51.1417601Z 
2025-08-18T12:07:51.1417682Z Return KPI metrics (mock).
2025-08-18T12:07:51.1417821Z 
2025-08-18T12:07:51.1417926Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T12:07:51.1418110Z 
2025-08-18T12:07:51.1418184Z #### roi\_by\_vendor
2025-08-18T12:07:51.1418305Z 
2025-08-18T12:07:51.1418373Z ```python
2025-08-18T12:07:51.1418551Z @router.get("/stats/roi_by_vendor")
2025-08-18T12:07:51.1418803Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T12:07:51.1419047Z ```
2025-08-18T12:07:51.1419333Z 
2025-08-18T12:07:51.1419426Z Return ROI percent by vendor.
2025-08-18T12:07:51.1419609Z 
2025-08-18T12:07:51.1419704Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T12:07:51.1419878Z 
2025-08-18T12:07:51.1419954Z #### roi\_trend
2025-08-18T12:07:51.1420058Z 
2025-08-18T12:07:51.1420122Z ```python
2025-08-18T12:07:51.1420295Z @router.get("/stats/roi_trend")
2025-08-18T12:07:51.1420532Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T12:07:51.1420782Z ```
2025-08-18T12:07:51.1420872Z 
2025-08-18T12:07:51.1420954Z Return 30-day ROI trend.
2025-08-18T12:07:51.1421083Z 
2025-08-18T12:07:51.1421162Z <a id="api.routes.roi"></a>
2025-08-18T12:07:51.1421296Z 
2025-08-18T12:07:51.1421377Z # api.routes.roi
2025-08-18T12:07:51.1421481Z 
2025-08-18T12:07:51.1421566Z <a id="api.routes.health"></a>
2025-08-18T12:07:51.1421713Z 
2025-08-18T12:07:51.1421785Z # api.routes.health
2025-08-18T12:07:51.1421895Z 
2025-08-18T12:07:51.1422182Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T12:07:51.1422524Z 
2025-08-18T12:07:51.1422595Z #### MAX\_SKEW
2025-08-18T12:07:51.1422699Z 
2025-08-18T12:07:51.1422773Z seconds
2025-08-18T12:07:51.1423027Z 
2025-08-18T12:07:51.1423193Z <a id="api.routes.health.health"></a>
2025-08-18T12:07:51.1423497Z 
2025-08-18T12:07:51.1423623Z #### health
2025-08-18T12:07:51.1423795Z 
2025-08-18T12:07:51.1423916Z ```python
2025-08-18T12:07:51.1424281Z @router.get("/health", include_in_schema=False)
2025-08-18T12:07:51.1424991Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T12:07:51.1425363Z ```
2025-08-18T12:07:51.1425451Z 
2025-08-18T12:07:51.1425577Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T12:07:51.1425780Z 
2025-08-18T12:07:51.1425872Z <a id="api.routes.repository"></a>
2025-08-18T12:07:51.1426042Z 
2025-08-18T12:07:51.1426121Z # api.routes.repository
2025-08-18T12:07:51.1426251Z 
2025-08-18T12:07:51.1426324Z <a id="api.routes"></a>
2025-08-18T12:07:51.1426447Z 
2025-08-18T12:07:51.1426527Z # api.routes
2025-08-18T12:07:51.1426628Z 
2025-08-18T12:07:51.1426717Z <a id="api.models.fee"></a>
2025-08-18T12:07:51.1426851Z 
2025-08-18T12:07:51.1426921Z # api.models.fee
2025-08-18T12:07:51.1427059Z 
2025-08-18T12:07:51.1427133Z <a id="api.models"></a>
2025-08-18T12:07:51.1427248Z 
2025-08-18T12:07:51.1427312Z # api.models
2025-08-18T12:07:51.1427412Z 
2025-08-18T12:07:51.1427493Z <a id="api.roi_repository"></a>
2025-08-18T12:07:51.1427638Z 
2025-08-18T12:07:51.1427715Z # api.roi\_repository
2025-08-18T12:07:51.1427831Z 
2025-08-18T12:07:51.1427900Z <a id="api.main"></a>
2025-08-18T12:07:51.1428017Z 
2025-08-18T12:07:51.1428083Z # api.main
2025-08-18T12:07:51.1428175Z 
2025-08-18T12:07:51.1428254Z <a id="api.main.ready"></a>
2025-08-18T12:07:51.1428394Z 
2025-08-18T12:07:51.1428459Z #### ready
2025-08-18T12:07:51.1428548Z 
2025-08-18T12:07:51.1428619Z ```python
2025-08-18T12:07:51.1428880Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T12:07:51.1429342Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T12:07:51.1429710Z                                                                       str]
2025-08-18T12:07:51.1429951Z ```
2025-08-18T12:07:51.1430035Z 
2025-08-18T12:07:51.1430138Z Return 200 only when migrations are at head.
2025-08-18T12:07:51.1430319Z 
2025-08-18T12:07:51.1430394Z <a id="api.config"></a>
2025-08-18T12:07:51.1430515Z 
2025-08-18T12:07:51.1430587Z # api.config
2025-08-18T12:07:51.1430685Z 
2025-08-18T12:07:51.1430754Z <a id="etl"></a>
2025-08-18T12:07:51.1430859Z 
2025-08-18T12:07:51.1430929Z # etl
2025-08-18T12:07:51.1431016Z 
2025-08-18T12:07:51.1431108Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T12:07:51.1431266Z 
2025-08-18T12:07:51.1431346Z # etl.fba\_fee\_ingestor
2025-08-18T12:07:51.1431470Z 
2025-08-18T12:07:51.1431558Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T12:07:51.1431705Z 
2025-08-18T12:07:51.1431781Z # etl.sp\_fees\_ingestor
2025-08-18T12:07:51.1431902Z 
2025-08-18T12:07:51.1432259Z <a id="etl.keepa_ingestor"></a>
2025-08-18T12:07:51.1432611Z 
2025-08-18T12:07:51.1432690Z # etl.keepa\_ingestor
2025-08-18T12:07:51.1432814Z 
2025-08-18T12:07:51.1432884Z <a id="etl.db"></a>
2025-08-18T12:07:51.1432995Z 
2025-08-18T12:07:51.1433062Z # etl.db
2025-08-18T12:07:51.1433163Z 
2025-08-18T12:07:51.1433249Z <a id="etl.dialects.schemas"></a>
2025-08-18T12:07:51.1433400Z 
2025-08-18T12:07:51.1433484Z # etl.dialects.schemas
2025-08-18T12:07:51.1433605Z 
2025-08-18T12:07:51.1433716Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T12:07:51.1433912Z 
2025-08-18T12:07:51.1434007Z # etl.dialects.amazon\_reimbursements
2025-08-18T12:07:51.1434174Z 
2025-08-18T12:07:51.1434272Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T12:07:51.1434455Z 
2025-08-18T12:07:51.1434543Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T12:07:51.1434704Z 
2025-08-18T12:07:51.1434835Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T12:07:51.1435012Z 
2025-08-18T12:07:51.1435096Z # etl.dialects.amazon\_returns
2025-08-18T12:07:51.1435362Z 
2025-08-18T12:07:51.1435463Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T12:07:51.1435646Z 
2025-08-18T12:07:51.1435733Z # etl.dialects.amazon\_fee\_preview
2025-08-18T12:07:51.1435890Z 
2025-08-18T12:07:51.1436006Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T12:07:51.1436196Z 
2025-08-18T12:07:51.1436287Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T12:07:51.1436456Z 
2025-08-18T12:07:51.1436552Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T12:07:51.1436743Z 
2025-08-18T12:07:51.1436831Z # etl.dialects.amazon\_settlements
2025-08-18T12:07:51.1436990Z 
2025-08-18T12:07:51.1437068Z <a id="etl.dialects"></a>
2025-08-18T12:07:51.1437196Z 
2025-08-18T12:07:51.1437269Z # etl.dialects
2025-08-18T12:07:51.1437370Z 
2025-08-18T12:07:51.1437438Z <a id="ingest"></a>
2025-08-18T12:07:51.1437551Z 
2025-08-18T12:07:51.1437615Z # ingest
2025-08-18T12:07:51.1437704Z 
2025-08-18T12:07:51.1437787Z <a id="ingest.maintenance"></a>
2025-08-18T12:07:51.1437948Z 
2025-08-18T12:07:51.1438024Z # ingest.maintenance
2025-08-18T12:07:51.1438142Z 
2025-08-18T12:07:51.1438228Z <a id="ingest.copy_loader"></a>
2025-08-18T12:07:51.1438368Z 
2025-08-18T12:07:51.1438444Z # ingest.copy\_loader
2025-08-18T12:07:51.1438562Z 
2025-08-18T12:07:51.1438671Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T12:07:51.1438857Z 
2025-08-18T12:07:51.1438933Z #### copy\_df\_via\_temp
2025-08-18T12:07:51.1439061Z 
2025-08-18T12:07:51.1439127Z ```python
2025-08-18T12:07:51.1439300Z def copy_df_via_temp(engine: Engine,
2025-08-18T12:07:51.1439545Z                      df: pd.DataFrame,
2025-08-18T12:07:51.1439789Z                      target_table: str,
2025-08-18T12:07:51.1440045Z                      *,
2025-08-18T12:07:51.1440261Z                      target_schema: Optional[str] = None,
2025-08-18T12:07:51.1440547Z                      columns: Sequence[str],
2025-08-18T12:07:51.1440831Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T12:07:51.1441136Z                      analyze_after: bool = False,
2025-08-18T12:07:51.1441413Z                      connection: Any | None = None) -> int
2025-08-18T12:07:51.1441657Z ```
2025-08-18T12:07:51.1441743Z 
2025-08-18T12:07:51.1441901Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T12:07:51.1442396Z 
2025-08-18T12:07:51.1442496Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T12:07:51.1442688Z 
2025-08-18T12:07:51.1442771Z # ingest.tests.test\_smoke
2025-08-18T12:07:51.1442907Z 
2025-08-18T12:07:51.1442986Z <a id="ingest.tests"></a>
2025-08-18T12:07:51.1443115Z 
2025-08-18T12:07:51.1443189Z # ingest.tests
2025-08-18T12:07:51.1443291Z 
2025-08-18T12:07:51.1443377Z <a id="ingest.upload_router"></a>
2025-08-18T12:07:51.1443527Z 
2025-08-18T12:07:51.1443610Z # ingest.upload\_router
2025-08-18T12:07:51.1443732Z 
2025-08-18T12:07:51.1443817Z <a id="ingest.email_watcher"></a>
2025-08-18T12:07:51.1443969Z 
2025-08-18T12:07:51.1444043Z # ingest.email\_watcher
2025-08-18T12:07:51.1444165Z 
2025-08-18T12:07:51.1444390Z <a id="ingest.email_watcher.main"></a>
2025-08-18T12:07:51.1444567Z 
2025-08-18T12:07:51.1444634Z #### main
2025-08-18T12:07:51.1444724Z 
2025-08-18T12:07:51.1444796Z ```python
2025-08-18T12:07:51.1444971Z def main() -> dict[str, str]
2025-08-18T12:07:51.1445174Z ```
2025-08-18T12:07:51.1445257Z 
2025-08-18T12:07:51.1445398Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T12:07:51.1445631Z 
2025-08-18T12:07:51.1445763Z Returns {"status": "success"} when processing completes.
2025-08-18T12:07:51.1445974Z 
2025-08-18T12:07:51.1446056Z <a id="ingest.tasks"></a>
2025-08-18T12:07:51.1446184Z 
2025-08-18T12:07:51.1446252Z # ingest.tasks
2025-08-18T12:07:51.1446353Z 
2025-08-18T12:07:51.1446456Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T12:07:51.1446634Z 
2025-08-18T12:07:51.1446708Z #### task\_import\_file
2025-08-18T12:07:51.1446834Z 
2025-08-18T12:07:51.1446900Z ```python
2025-08-18T12:07:51.1447109Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T12:07:51.1447901Z def task_import_file(self,
2025-08-18T12:07:51.1448291Z                      uri: str,
2025-08-18T12:07:51.1448711Z                      report_type: Optional[str] = None,
2025-08-18T12:07:51.1449146Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T12:07:51.1449401Z ```
2025-08-18T12:07:51.1449495Z 
2025-08-18T12:07:51.1449635Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T12:07:51.1449851Z 
2025-08-18T12:07:51.1449936Z <a id="ingest.celery_app"></a>
2025-08-18T12:07:51.1450087Z 
2025-08-18T12:07:51.1450160Z # ingest.celery\_app
2025-08-18T12:07:51.1450275Z 
2025-08-18T12:07:51.1450365Z <a id="ingest.ingest_router"></a>
2025-08-18T12:07:51.1450517Z 
2025-08-18T12:07:51.1450598Z # ingest.ingest\_router
2025-08-18T12:07:51.1450727Z 
2025-08-18T12:07:51.1450806Z <a id="logistics_etl"></a>
2025-08-18T12:07:51.1450938Z 
2025-08-18T12:07:51.1451008Z # logistics\_etl
2025-08-18T12:07:51.1451124Z 
2025-08-18T12:07:51.1451202Z Daily logistics ETL job.
2025-08-18T12:07:51.1451341Z 
2025-08-18T12:07:51.1451432Z <a id="logistics_etl.__main__"></a>
2025-08-18T12:07:51.1451588Z 
2025-08-18T12:07:51.1451669Z # logistics\_etl.\_\_main\_\_
2025-08-18T12:07:51.1451807Z 
2025-08-18T12:07:51.1451893Z <a id="logistics_etl.dsn"></a>
2025-08-18T12:07:51.1452323Z 
2025-08-18T12:07:51.1452403Z # logistics\_etl.dsn
2025-08-18T12:07:51.1452548Z 
2025-08-18T12:07:51.1452667Z Local DSN builder to avoid cross-service dependency.
2025-08-18T12:07:51.1452883Z 
2025-08-18T12:07:51.1452978Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T12:07:51.1453149Z 
2025-08-18T12:07:51.1453222Z #### build\_dsn
2025-08-18T12:07:51.1453327Z 
2025-08-18T12:07:51.1453393Z ```python
2025-08-18T12:07:51.1453572Z def build_dsn(sync: bool = True) -> str
2025-08-18T12:07:51.1453792Z ```
2025-08-18T12:07:51.1453880Z 
2025-08-18T12:07:51.1454019Z Return a Postgres DSN assembled from environment variables.
2025-08-18T12:07:51.1454247Z 
2025-08-18T12:07:51.1454404Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T12:07:51.1454816Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T12:07:51.1455171Z error when any required variable is missing.
2025-08-18T12:07:51.1455350Z 
2025-08-18T12:07:51.1455445Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T12:07:51.1455628Z 
2025-08-18T12:07:51.1455713Z # logistics\_etl.tests.conftest
2025-08-18T12:07:51.1455859Z 
2025-08-18T12:07:51.1455965Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T12:07:51.1456159Z 
2025-08-18T12:07:51.1456248Z # logistics\_etl.tests.test\_repository
2025-08-18T12:07:51.1456413Z 
2025-08-18T12:07:51.1456510Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T12:07:51.1456681Z 
2025-08-18T12:07:51.1456765Z # logistics\_etl.tests.test\_cron
2025-08-18T12:07:51.1456920Z 
2025-08-18T12:07:51.1457017Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T12:07:51.1457194Z 
2025-08-18T12:07:51.1457279Z # logistics\_etl.tests.test\_imports
2025-08-18T12:07:51.1457949Z 
2025-08-18T12:07:51.1458061Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T12:07:51.1458249Z 
2025-08-18T12:07:51.1458343Z # logistics\_etl.tests.test\_smoke
2025-08-18T12:07:51.1458501Z 
2025-08-18T12:07:51.1458598Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T12:07:51.1458781Z 
2025-08-18T12:07:51.1458867Z # logistics\_etl.tests.test\_client
2025-08-18T12:07:51.1459021Z 
2025-08-18T12:07:51.1459106Z <a id="logistics_etl.tests"></a>
2025-08-18T12:07:51.1459258Z 
2025-08-18T12:07:51.1459331Z # logistics\_etl.tests
2025-08-18T12:07:51.1459452Z 
2025-08-18T12:07:51.1459538Z <a id="logistics_etl.flow"></a>
2025-08-18T12:07:51.1459678Z 
2025-08-18T12:07:51.1459750Z # logistics\_etl.flow
2025-08-18T12:07:51.1459872Z 
2025-08-18T12:07:51.1459957Z <a id="logistics_etl.client"></a>
2025-08-18T12:07:51.1460109Z 
2025-08-18T12:07:51.1460182Z # logistics\_etl.client
2025-08-18T12:07:51.1460307Z 
2025-08-18T12:07:51.1460386Z <a id="logistics_etl.cron"></a>
2025-08-18T12:07:51.1460645Z 
2025-08-18T12:07:51.1460730Z # logistics\_etl.cron
2025-08-18T12:07:51.1460844Z 
2025-08-18T12:07:51.1460931Z <a id="logistics_etl.db"></a>
2025-08-18T12:07:51.1461073Z 
2025-08-18T12:07:51.1461142Z # logistics\_etl.db
2025-08-18T12:07:51.1461247Z 
2025-08-18T12:07:51.1461337Z <a id="logistics_etl.repository"></a>
2025-08-18T12:07:51.1461507Z 
2025-08-18T12:07:51.1461587Z # logistics\_etl.repository
2025-08-18T12:07:51.1461720Z 
2025-08-18T12:07:51.1461799Z <a id="alert_bot"></a>
2025-08-18T12:07:51.1462084Z 
2025-08-18T12:07:51.1462200Z # alert\_bot
2025-08-18T12:07:51.1462304Z 
2025-08-18T12:07:51.1462397Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T12:07:51.1462562Z 
2025-08-18T12:07:51.1462646Z # alert\_bot.tests.test\_smoke
2025-08-18T12:07:51.1462792Z 
2025-08-18T12:07:51.1462870Z <a id="alert_bot.tests"></a>
2025-08-18T12:07:51.1463005Z 
2025-08-18T12:07:51.1463079Z # alert\_bot.tests
2025-08-18T12:07:51.1463185Z 
2025-08-18T12:07:51.1463264Z <a id="alert_bot.alert_bot"></a>
2025-08-18T12:07:51.1463417Z 
2025-08-18T12:07:51.1463497Z # alert\_bot.alert\_bot
2025-08-18T12:07:51.1463615Z 
2025-08-18T12:07:51.1463691Z <a id="alert_bot.rules"></a>
2025-08-18T12:07:51.1463829Z 
2025-08-18T12:07:51.1463897Z # alert\_bot.rules
2025-08-18T12:07:51.1464001Z 
2025-08-18T12:07:51.1464075Z <a id="common"></a>
2025-08-18T12:07:51.1464183Z 
2025-08-18T12:07:51.1464246Z # common
2025-08-18T12:07:51.1464336Z 
2025-08-18T12:07:51.1464417Z <a id="common.dsn"></a>
2025-08-18T12:07:51.1464537Z 
2025-08-18T12:07:51.1464601Z # common.dsn
2025-08-18T12:07:51.1464703Z 
2025-08-18T12:07:51.1464786Z <a id="common.dsn.build_dsn"></a>
2025-08-18T12:07:51.1464938Z 
2025-08-18T12:07:51.1465004Z #### build\_dsn
2025-08-18T12:07:51.1465113Z 
2025-08-18T12:07:51.1465179Z ```python
2025-08-18T12:07:51.1465363Z def build_dsn(sync: bool = True) -> str
2025-08-18T12:07:51.1465590Z ```
2025-08-18T12:07:51.1465674Z 
2025-08-18T12:07:51.1465804Z Return a Postgres DSN, validating required variables.
2025-08-18T12:07:51.1466014Z 
2025-08-18T12:07:51.1466215Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T12:07:51.1466668Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T12:07:51.1467083Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T12:07:51.1502718Z missing.
2025-08-18T12:07:51.1502952Z 
2025-08-18T12:07:51.1503139Z <a id="common.models_vendor"></a>
2025-08-18T12:07:51.1503471Z 
2025-08-18T12:07:51.1503634Z # common.models\_vendor
2025-08-18T12:07:51.1503909Z 
2025-08-18T12:07:51.1504105Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T12:07:51.1504466Z 
2025-08-18T12:07:51.1504614Z ## Vendor Objects
2025-08-18T12:07:51.1504834Z 
2025-08-18T12:07:51.1504969Z ```python
2025-08-18T12:07:51.1505258Z class Vendor(Base)
2025-08-18T12:07:51.1505465Z ```
2025-08-18T12:07:51.1505574Z 
2025-08-18T12:07:51.1505678Z Vendor of inventory items.
2025-08-18T12:07:51.1505845Z 
2025-08-18T12:07:51.1505981Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T12:07:51.1506469Z 
2025-08-18T12:07:51.1506564Z ## VendorPrice Objects
2025-08-18T12:07:51.1506711Z 
2025-08-18T12:07:51.1506796Z ```python
2025-08-18T12:07:51.1506996Z class VendorPrice(Base)
2025-08-18T12:07:51.1507287Z ```
2025-08-18T12:07:51.1507388Z 
2025-08-18T12:07:51.1507515Z Association table linking vendors to pricing.
2025-08-18T12:07:51.1507750Z 
2025-08-18T12:07:51.1507845Z <a id="common.db_url"></a>
2025-08-18T12:07:51.1508011Z 
2025-08-18T12:07:51.1508107Z # common.db\_url
2025-08-18T12:07:51.1508243Z 
2025-08-18T12:07:51.1508350Z <a id="common.db_url.build_url"></a>
2025-08-18T12:07:51.1508554Z 
2025-08-18T12:07:51.1508638Z #### build\_url
2025-08-18T12:07:51.1508767Z 
2025-08-18T12:07:51.1508847Z ```python
2025-08-18T12:07:51.1509074Z def build_url(async_: bool = True) -> str
2025-08-18T12:07:51.1509357Z ```
2025-08-18T12:07:51.1509468Z 
2025-08-18T12:07:51.1509591Z Return Postgres DSN from env or PG_* parts.
2025-08-18T12:07:51.1509812Z 
2025-08-18T12:07:51.1510064Z <a id="common.keepa"></a>
2025-08-18T12:07:51.1510237Z 
2025-08-18T12:07:51.1510325Z # common.keepa
2025-08-18T12:07:51.1510460Z 
2025-08-18T12:07:51.1510555Z <a id="common.llm"></a>
2025-08-18T12:07:51.1510706Z 
2025-08-18T12:07:51.1510788Z # common.llm
2025-08-18T12:07:51.1510916Z 
2025-08-18T12:07:51.1511017Z <a id="common.settings"></a>
2025-08-18T12:07:51.1511266Z 
2025-08-18T12:07:51.1511399Z # common.settings
2025-08-18T12:07:51.1511575Z 
2025-08-18T12:07:51.1511690Z <a id="common.db"></a>
2025-08-18T12:07:51.1511891Z 
2025-08-18T12:07:51.1512158Z # common.db
2025-08-18T12:07:51.1512260Z 
2025-08-18T12:07:51.1512353Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T12:07:51.1512537Z 
2025-08-18T12:07:51.1512616Z #### build\_sqlalchemy\_url
2025-08-18T12:07:51.1512749Z 
2025-08-18T12:07:51.1512820Z ```python
2025-08-18T12:07:51.1512994Z def build_sqlalchemy_url() -> str
2025-08-18T12:07:51.1513211Z ```
2025-08-18T12:07:51.1513297Z 
2025-08-18T12:07:51.1513392Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T12:07:51.1513584Z 
2025-08-18T12:07:51.1513675Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T12:07:51.1513844Z 
2025-08-18T12:07:51.1513922Z #### build\_asyncpg\_dsn
2025-08-18T12:07:51.1514055Z 
2025-08-18T12:07:51.1514121Z ```python
2025-08-18T12:07:51.1514299Z def build_asyncpg_dsn() -> str
2025-08-18T12:07:51.1514503Z ```
2025-08-18T12:07:51.1514588Z 
2025-08-18T12:07:51.1514725Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T12:07:51.1514944Z 
2025-08-18T12:07:51.1515030Z <a id="common.db.refresh_mvs"></a>
2025-08-18T12:07:51.1515190Z 
2025-08-18T12:07:51.1515258Z #### refresh\_mvs
2025-08-18T12:07:51.1515363Z 
2025-08-18T12:07:51.1515427Z ```python
2025-08-18T12:07:51.1515630Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T12:07:51.1515893Z ```
2025-08-18T12:07:51.1515976Z 
2025-08-18T12:07:51.1516114Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T12:07:51.1516335Z 
2025-08-18T12:07:51.1516423Z <a id="common.config"></a>
2025-08-18T12:07:51.1516562Z 
2025-08-18T12:07:51.1516630Z # common.config
2025-08-18T12:07:51.1516742Z 
2025-08-18T12:07:51.1516818Z <a id="common.base"></a>
2025-08-18T12:07:51.1516944Z 
2025-08-18T12:07:51.1517011Z # common.base
2025-08-18T12:07:51.1517117Z 
2025-08-18T12:07:51.1517200Z <a id="common.base.Base"></a>
2025-08-18T12:07:51.1517342Z 
2025-08-18T12:07:51.1517416Z ## Base Objects
2025-08-18T12:07:51.1517518Z 
2025-08-18T12:07:51.1517583Z ```python
2025-08-18T12:07:51.1517755Z class Base(DeclarativeBase)
2025-08-18T12:07:51.1517950Z ```
2025-08-18T12:07:51.1518036Z 
2025-08-18T12:07:51.1518121Z Base class for SQLAlchemy models.
2025-08-18T12:07:51.1518272Z 
2025-08-18T12:07:51.1518348Z <a id="repricer"></a>
2025-08-18T12:07:51.1518471Z 
2025-08-18T12:07:51.1518539Z # repricer
2025-08-18T12:07:51.1518630Z 
2025-08-18T12:07:51.1518722Z <a id="repricer.app.schemas"></a>
2025-08-18T12:07:51.1518875Z 
2025-08-18T12:07:51.1518953Z # repricer.app.schemas
2025-08-18T12:07:51.1519079Z 
2025-08-18T12:07:51.1519310Z <a id="repricer.app.deps"></a>
2025-08-18T12:07:51.1519459Z 
2025-08-18T12:07:51.1519534Z # repricer.app.deps
2025-08-18T12:07:51.1519652Z 
2025-08-18T12:07:51.1519769Z Placeholder module for Keepa / SP-API clients.
2025-08-18T12:07:51.1519959Z 
2025-08-18T12:07:51.1520050Z <a id="repricer.app.logic"></a>
2025-08-18T12:07:51.1520200Z 
2025-08-18T12:07:51.1520276Z # repricer.app.logic
2025-08-18T12:07:51.1520399Z 
2025-08-18T12:07:51.1520498Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T12:07:51.1520675Z 
2025-08-18T12:07:51.1520744Z #### MIN\_MARGIN
2025-08-18T12:07:51.1520850Z 
2025-08-18T12:07:51.1520913Z 15 % ROI
2025-08-18T12:07:51.1521001Z 
2025-08-18T12:07:51.1521111Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T12:07:51.1521301Z 
2025-08-18T12:07:51.1521371Z #### compute\_price
2025-08-18T12:07:51.1521481Z 
2025-08-18T12:07:51.1521551Z ```python
2025-08-18T12:07:51.1521797Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T12:07:51.1522439Z ```
2025-08-18T12:07:51.1522532Z 
2025-08-18T12:07:51.1522640Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T12:07:51.1522933Z Replace with real competitive logic later.
2025-08-18T12:07:51.1523107Z 
2025-08-18T12:07:51.1523196Z <a id="repricer.app.main"></a>
2025-08-18T12:07:51.1523338Z 
2025-08-18T12:07:51.1523412Z # repricer.app.main
2025-08-18T12:07:51.1523528Z 
2025-08-18T12:07:51.1523606Z <a id="repricer.app"></a>
2025-08-18T12:07:51.1523736Z 
2025-08-18T12:07:51.1523804Z # repricer.app
2025-08-18T12:07:51.1523913Z 
2025-08-18T12:07:51.1524007Z <a id="repricer.tests.test_imports"></a>
2025-08-18T12:07:51.1524179Z 
2025-08-18T12:07:51.1524269Z # repricer.tests.test\_imports
2025-08-18T12:07:51.1524414Z 
2025-08-18T12:07:51.1524504Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T12:07:51.1524676Z 
2025-08-18T12:07:51.1524760Z # repricer.tests.test\_smoke
2025-08-18T12:07:51.1524903Z 
2025-08-18T12:07:51.1524986Z <a id="repricer.tests"></a>
2025-08-18T12:07:51.1525125Z 
2025-08-18T12:07:51.1525205Z # repricer.tests
2025-08-18T12:07:51.1525313Z 
2025-08-18T12:07:51.1525385Z <a id="db"></a>
2025-08-18T12:07:51.1525485Z 
2025-08-18T12:07:51.1525547Z # db
2025-08-18T12:07:51.1525632Z 
2025-08-18T12:07:51.1525714Z <a id="db.utils.views"></a>
2025-08-18T12:07:51.1525846Z 
2025-08-18T12:07:51.1525917Z # db.utils.views
2025-08-18T12:07:51.1526026Z 
2025-08-18T12:07:51.1526121Z <a id="db.utils.views.replace_view"></a>
2025-08-18T12:07:51.1526294Z 
2025-08-18T12:07:51.1526363Z #### replace\_view
2025-08-18T12:07:51.1526476Z 
2025-08-18T12:07:51.1526541Z ```python
2025-08-18T12:07:51.1526741Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T12:07:51.1526992Z ```
2025-08-18T12:07:51.1527087Z 
2025-08-18T12:07:51.1527184Z Drop and recreate a SQL view atomically.
2025-08-18T12:07:51.1527355Z 
2025-08-18T12:07:51.1527429Z <a id="db.utils"></a>
2025-08-18T12:07:51.1527552Z 
2025-08-18T12:07:51.1527616Z # db.utils
2025-08-18T12:07:51.1527708Z 
2025-08-18T12:07:51.1527794Z <a id="price_importer"></a>
2025-08-18T12:07:51.1527938Z 
2025-08-18T12:07:51.1528011Z # price\_importer
2025-08-18T12:07:51.1528118Z 
2025-08-18T12:07:51.1528230Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T12:07:51.1528420Z 
2025-08-18T12:07:51.1528513Z # price\_importer.services\_common.dsn
2025-08-18T12:07:51.1528689Z 
2025-08-18T12:07:51.1528816Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T12:07:51.1529028Z 
2025-08-18T12:07:51.1529099Z #### build\_dsn
2025-08-18T12:07:51.1529200Z 
2025-08-18T12:07:51.1529263Z ```python
2025-08-18T12:07:51.1529444Z def build_dsn(sync: bool = True) -> str
2025-08-18T12:07:51.1529668Z ```
2025-08-18T12:07:51.1529753Z 
2025-08-18T12:07:51.1529827Z Return safe DSN.
2025-08-18T12:07:51.1529929Z 
2025-08-18T12:07:51.1530279Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T12:07:51.1530501Z 
2025-08-18T12:07:51.1530639Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T12:07:51.1530853Z 
2025-08-18T12:07:51.1530969Z # price\_importer.services\_common.models\_vendor
2025-08-18T12:07:51.1531310Z 
2025-08-18T12:07:51.1531420Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T12:07:51.1531615Z 
2025-08-18T12:07:51.1531713Z # price\_importer.services\_common.db\_url
2025-08-18T12:07:51.1531889Z 
2025-08-18T12:07:51.1532136Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T12:07:51.1532364Z 
2025-08-18T12:07:51.1532432Z #### build\_url
2025-08-18T12:07:51.1532534Z 
2025-08-18T12:07:51.1532607Z ```python
2025-08-18T12:07:51.1532790Z def build_url(async_: bool = True) -> str
2025-08-18T12:07:51.1533031Z ```
2025-08-18T12:07:51.1533115Z 
2025-08-18T12:07:51.1533211Z Return Postgres DSN from env or PG_* parts.
2025-08-18T12:07:51.1533395Z 
2025-08-18T12:07:51.1533503Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T12:07:51.1533694Z 
2025-08-18T12:07:51.1533789Z # price\_importer.services\_common.keepa
2025-08-18T12:07:51.1533967Z 
2025-08-18T12:07:51.1534069Z <a id="price_importer.services_common.llm"></a>
2025-08-18T12:07:51.1534380Z 
2025-08-18T12:07:51.1534478Z # price\_importer.services\_common.llm
2025-08-18T12:07:51.1534644Z 
2025-08-18T12:07:51.1534757Z <a id="price_importer.services_common.settings"></a>
2025-08-18T12:07:51.1534962Z 
2025-08-18T12:07:51.1535059Z # price\_importer.services\_common.settings
2025-08-18T12:07:51.1535234Z 
2025-08-18T12:07:51.1535332Z <a id="price_importer.services_common.db"></a>
2025-08-18T12:07:51.1535523Z 
2025-08-18T12:07:51.1535613Z # price\_importer.services\_common.db
2025-08-18T12:07:51.1535778Z 
2025-08-18T12:07:51.1535940Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T12:07:51.1536183Z 
2025-08-18T12:07:51.1536263Z #### build\_sqlalchemy\_url
2025-08-18T12:07:51.1536403Z 
2025-08-18T12:07:51.1536468Z ```python
2025-08-18T12:07:51.1536641Z def build_sqlalchemy_url() -> str
2025-08-18T12:07:51.1536860Z ```
2025-08-18T12:07:51.1536944Z 
2025-08-18T12:07:51.1537046Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T12:07:51.1537231Z 
2025-08-18T12:07:51.1537376Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T12:07:51.1537614Z 
2025-08-18T12:07:51.1537692Z #### build\_asyncpg\_dsn
2025-08-18T12:07:51.1537818Z 
2025-08-18T12:07:51.1537882Z ```python
2025-08-18T12:07:51.1538060Z def build_asyncpg_dsn() -> str
2025-08-18T12:07:51.1538259Z ```
2025-08-18T12:07:51.1538348Z 
2025-08-18T12:07:51.1538477Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T12:07:51.1538690Z 
2025-08-18T12:07:51.1538825Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T12:07:51.1539038Z 
2025-08-18T12:07:51.1539108Z #### refresh\_mvs
2025-08-18T12:07:51.1539220Z 
2025-08-18T12:07:51.1539285Z ```python
2025-08-18T12:07:51.1539478Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T12:07:51.1539739Z ```
2025-08-18T12:07:51.1539822Z 
2025-08-18T12:07:51.1539969Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T12:07:51.1540189Z 
2025-08-18T12:07:51.1540295Z <a id="price_importer.services_common"></a>
2025-08-18T12:07:51.1540469Z 
2025-08-18T12:07:51.1540567Z # price\_importer.services\_common
2025-08-18T12:07:51.1540726Z 
2025-08-18T12:07:51.1540832Z <a id="price_importer.services_common.base"></a>
2025-08-18T12:07:51.1541030Z 
2025-08-18T12:07:51.1541122Z # price\_importer.services\_common.base
2025-08-18T12:07:51.1541290Z 
2025-08-18T12:07:51.1541387Z <a id="price_importer.normaliser"></a>
2025-08-18T12:07:51.1541552Z 
2025-08-18T12:07:51.1541638Z # price\_importer.normaliser
2025-08-18T12:07:51.1541777Z 
2025-08-18T12:07:51.1541891Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T12:07:51.1542287Z 
2025-08-18T12:07:51.1542382Z # price\_importer.common.models\_vendor
2025-08-18T12:07:51.1542557Z 
2025-08-18T12:07:51.1542652Z <a id="price_importer.common.db_url"></a>
2025-08-18T12:07:51.1542825Z 
2025-08-18T12:07:51.1542919Z # price\_importer.common.db\_url
2025-08-18T12:07:51.1543070Z 
2025-08-18T12:07:51.1543175Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T12:07:51.1543512Z 
2025-08-18T12:07:51.1543584Z #### make\_dsn
2025-08-18T12:07:51.1543683Z 
2025-08-18T12:07:51.1543746Z ```python
2025-08-18T12:07:51.1543924Z def make_dsn(async_: bool = False) -> str
2025-08-18T12:07:51.1544149Z ```
2025-08-18T12:07:51.1544238Z 
2025-08-18T12:07:51.1544356Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T12:07:51.1544559Z 
2025-08-18T12:07:51.1544672Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T12:07:51.1544866Z 
2025-08-18T12:07:51.1544931Z #### build\_url
2025-08-18T12:07:51.1545036Z 
2025-08-18T12:07:51.1545098Z ```python
2025-08-18T12:07:51.1545269Z def build_url(async_: bool = False) -> str
2025-08-18T12:07:51.1545499Z ```
2025-08-18T12:07:51.1545580Z 
2025-08-18T12:07:51.1545703Z Return Postgres DSN built from environment variables.
2025-08-18T12:07:51.1545911Z 
2025-08-18T12:07:51.1545998Z <a id="price_importer.common"></a>
2025-08-18T12:07:51.1546155Z 
2025-08-18T12:07:51.1546239Z # price\_importer.common
2025-08-18T12:07:51.1546483Z 
2025-08-18T12:07:51.1546577Z <a id="price_importer.common.base"></a>
2025-08-18T12:07:51.1546750Z 
2025-08-18T12:07:51.1546835Z # price\_importer.common.base
2025-08-18T12:07:51.1546977Z 
2025-08-18T12:07:51.1547074Z <a id="price_importer.tests.conftest"></a>
2025-08-18T12:07:51.1547257Z 
2025-08-18T12:07:51.1547348Z # price\_importer.tests.conftest
2025-08-18T12:07:51.1547496Z 
2025-08-18T12:07:51.1547609Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T12:07:51.1547788Z 
2025-08-18T12:07:51.1547875Z # price\_importer.tests.test\_reader
2025-08-18T12:07:51.1548043Z 
2025-08-18T12:07:51.1548145Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T12:07:51.1548330Z 
2025-08-18T12:07:51.1548422Z # price\_importer.tests.test\_imports
2025-08-18T12:07:51.1548589Z 
2025-08-18T12:07:51.1548686Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T12:07:51.1548868Z 
2025-08-18T12:07:51.1548978Z # price\_importer.tests.test\_smoke
2025-08-18T12:07:51.1549158Z 
2025-08-18T12:07:51.1549268Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T12:07:51.1549460Z 
2025-08-18T12:07:51.1549551Z # price\_importer.tests.test\_normaliser
2025-08-18T12:07:51.1549720Z 
2025-08-18T12:07:51.1549804Z <a id="price_importer.tests"></a>
2025-08-18T12:07:51.1549964Z 
2025-08-18T12:07:51.1550041Z # price\_importer.tests
2025-08-18T12:07:51.1550163Z 
2025-08-18T12:07:51.1550257Z <a id="price_importer.reader"></a>
2025-08-18T12:07:51.1550408Z 
2025-08-18T12:07:51.1550487Z # price\_importer.reader
2025-08-18T12:07:51.1550617Z 
2025-08-18T12:07:51.1550708Z <a id="price_importer.repository"></a>
2025-08-18T12:07:51.1550876Z 
2025-08-18T12:07:51.1550960Z # price\_importer.repository
2025-08-18T12:07:51.1551108Z 
2025-08-18T12:07:51.1551194Z <a id="price_importer.import"></a>
2025-08-18T12:07:51.1551347Z 
2025-08-18T12:07:51.1551440Z # price\_importer.import
2025-08-18T12:07:51.1551565Z 
2025-08-18T12:07:51.1551636Z <a id="fees_h10"></a>
2025-08-18T12:07:51.1551755Z 
2025-08-18T12:07:51.1551829Z # fees\_h10
2025-08-18T12:07:51.1552025Z 
2025-08-18T12:07:51.1552105Z <a id="fees_h10.worker"></a>
2025-08-18T12:07:51.1552255Z 
2025-08-18T12:07:51.1552324Z # fees\_h10.worker
2025-08-18T12:07:51.1552430Z 
2025-08-18T12:07:51.1552535Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T12:07:51.1552715Z 
2025-08-18T12:07:51.1552790Z #### list\_active\_asins
2025-08-18T12:07:51.1552920Z 
2025-08-18T12:07:51.1552986Z ```python
2025-08-18T12:07:51.1553157Z def list_active_asins() -> list[str]
2025-08-18T12:07:51.1553409Z ```
2025-08-18T12:07:51.1553493Z 
2025-08-18T12:07:51.1553607Z Return known ASINs or an empty list if unavailable.
2025-08-18T12:07:51.1553811Z 
2025-08-18T12:07:51.1553897Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T12:07:51.1554057Z 
2025-08-18T12:07:51.1554146Z # fees\_h10.tests.test\_smoke
2025-08-18T12:07:51.1554283Z 
2025-08-18T12:07:51.1554360Z <a id="fees_h10.tests"></a>
2025-08-18T12:07:51.1554498Z 
2025-08-18T12:07:51.1554566Z # fees\_h10.tests
2025-08-18T12:07:51.1554795Z 
2025-08-18T12:07:51.1554873Z <a id="fees_h10.client"></a>
2025-08-18T12:07:51.1555015Z 
2025-08-18T12:07:51.1555082Z # fees\_h10.client
2025-08-18T12:07:51.1555186Z 
2025-08-18T12:07:51.1555272Z <a id="fees_h10.repository"></a>
2025-08-18T12:07:51.1555418Z 
2025-08-18T12:07:51.1555493Z # fees\_h10.repository
2025-08-18T12:07:51.1555618Z 
2025-08-18T12:07:51.1555687Z <a id="emailer"></a>
2025-08-18T12:07:51.1555800Z 
2025-08-18T12:07:51.1555863Z # emailer
2025-08-18T12:07:51.1555959Z 
2025-08-18T12:07:51.1556060Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T12:07:51.1556240Z 
2025-08-18T12:07:51.1556335Z # emailer.tests.test\_import\_emailer
2025-08-18T12:07:51.1556496Z 
2025-08-18T12:07:51.1556582Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T12:07:51.1556743Z 
2025-08-18T12:07:51.1556824Z # emailer.tests.test\_smoke
2025-08-18T12:07:51.1556962Z 
2025-08-18T12:07:51.1557040Z <a id="emailer.tests"></a>
2025-08-18T12:07:51.1557178Z 
2025-08-18T12:07:51.1557248Z # emailer.tests
2025-08-18T12:07:51.1557475Z 
2025-08-18T12:07:51.1557569Z <a id="emailer.generate_body"></a>
2025-08-18T12:07:51.1557727Z 
2025-08-18T12:07:51.1557806Z # emailer.generate\_body
2025-08-18T12:07:51.1557938Z 
2025-08-18T12:07:51.1558018Z <a id="llm_server"></a>
2025-08-18T12:07:51.1558137Z 
2025-08-18T12:07:51.1558201Z # llm\_server
2025-08-18T12:07:51.1558305Z 
2025-08-18T12:07:51.1558383Z <a id="llm_server.app"></a>
2025-08-18T12:07:51.1558518Z 
2025-08-18T12:07:51.1558593Z # llm\_server.app
2025-08-18T12:07:51.1558699Z 
