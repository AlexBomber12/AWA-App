2025-08-19T22:24:12.7091615Z ##[group]Run pydoc-markdown
2025-08-19T22:24:12.7091982Z [36;1mpydoc-markdown[0m
2025-08-19T22:24:12.7132164Z shell: /usr/bin/bash -e {0}
2025-08-19T22:24:12.7132460Z env:
2025-08-19T22:24:12.7132792Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:24:12.7133369Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T22:24:12.7134108Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:24:12.7134592Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:24:12.7135074Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T22:24:12.7135566Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T22:24:12.7135968Z ##[endgroup]
2025-08-19T22:24:13.0577870Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T22:24:13.0578971Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T22:24:13.0579575Z In "pydoc-markdown.yml"
2025-08-19T22:24:13.0580096Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T22:24:13.0581407Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T22:24:13.0583156Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T22:24:13.0584649Z 
2025-08-19T22:24:13.4166192Z <a id="__init__"></a>
2025-08-19T22:24:13.4166575Z 
2025-08-19T22:24:13.4166717Z # \_\_init\_\_
2025-08-19T22:24:13.4166945Z 
2025-08-19T22:24:13.4167106Z <a id="api"></a>
2025-08-19T22:24:13.4167342Z 
2025-08-19T22:24:13.4167480Z # api
2025-08-19T22:24:13.4167685Z 
2025-08-19T22:24:13.4167858Z <a id="api.errors"></a>
2025-08-19T22:24:13.4168133Z 
2025-08-19T22:24:13.4168363Z # api.errors
2025-08-19T22:24:13.4168581Z 
2025-08-19T22:24:13.4168758Z <a id="api.sentry_config"></a>
2025-08-19T22:24:13.4169062Z 
2025-08-19T22:24:13.4169225Z # api.sentry\_config
2025-08-19T22:24:13.4169477Z 
2025-08-19T22:24:13.4169685Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T22:24:13.4170080Z 
2025-08-19T22:24:13.4170266Z # api.tests.test\_stats\_contracts
2025-08-19T22:24:13.4170653Z 
2025-08-19T22:24:13.4170845Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T22:24:13.4171219Z 
2025-08-19T22:24:13.4171397Z # api.tests.test\_sentry\_scrub
2025-08-19T22:24:13.4171708Z 
2025-08-19T22:24:13.4171913Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T22:24:13.4172297Z 
2025-08-19T22:24:13.4172478Z # api.tests.test\_roi\_basic\_auth
2025-08-19T22:24:13.4172826Z 
2025-08-19T22:24:13.4173012Z <a id="api.tests.test_errors_json"></a>
2025-08-19T22:24:13.4173372Z 
2025-08-19T22:24:13.4173835Z # api.tests.test\_errors\_json
2025-08-19T22:24:13.4174187Z 
2025-08-19T22:24:13.4174363Z <a id="api.tests.test_llm"></a>
2025-08-19T22:24:13.4174651Z 
2025-08-19T22:24:13.4174798Z # api.tests.test\_llm
2025-08-19T22:24:13.4175025Z 
2025-08-19T22:24:13.4175193Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T22:24:13.4175507Z 
2025-08-19T22:24:13.4175675Z # api.tests.test\_roi\_filters
2025-08-19T22:24:13.4175938Z 
2025-08-19T22:24:13.4176107Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T22:24:13.4176798Z 
2025-08-19T22:24:13.4176953Z # api.tests.test\_sentry\_event
2025-08-19T22:24:13.4177215Z 
2025-08-19T22:24:13.4177458Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T22:24:13.4177842Z 
2025-08-19T22:24:13.4177989Z ## DummyTransport Objects
2025-08-19T22:24:13.4178227Z 
2025-08-19T22:24:13.4178376Z ```python
2025-08-19T22:24:13.4178695Z class DummyTransport()
2025-08-19T22:24:13.4179029Z ```
2025-08-19T22:24:13.4179183Z 
2025-08-19T22:24:13.4179513Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T22:24:13.4180023Z 
2025-08-19T22:24:13.4180159Z #### capture\_envelope
2025-08-19T22:24:13.4180375Z 
2025-08-19T22:24:13.4180508Z ```python
2025-08-19T22:24:13.4180827Z def capture_envelope(envelope)
2025-08-19T22:24:13.4181219Z ```
2025-08-19T22:24:13.4181376Z 
2025-08-19T22:24:13.4181614Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T22:24:13.4182025Z 
2025-08-19T22:24:13.4182180Z <a id="api.tests.test_cors"></a>
2025-08-19T22:24:13.4182823Z 
2025-08-19T22:24:13.4182968Z # api.tests.test\_cors
2025-08-19T22:24:13.4183198Z 
2025-08-19T22:24:13.4183352Z <a id="api.tests.test_imports"></a>
2025-08-19T22:24:13.4183834Z 
2025-08-19T22:24:13.4183995Z # api.tests.test\_imports
2025-08-19T22:24:13.4184253Z 
2025-08-19T22:24:13.4184446Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T22:24:13.4184764Z 
2025-08-19T22:24:13.4184910Z # api.tests.test\_rate\_limit
2025-08-19T22:24:13.4185170Z 
2025-08-19T22:24:13.4185348Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T22:24:13.4185676Z 
2025-08-19T22:24:13.4185793Z #### app
2025-08-19T22:24:13.4185960Z 
2025-08-19T22:24:13.4186085Z noqa: E402
2025-08-19T22:24:13.4186254Z 
2025-08-19T22:24:13.4186415Z <a id="api.tests.test_stats_sql"></a>
2025-08-19T22:24:13.4186729Z 
2025-08-19T22:24:13.4186881Z # api.tests.test\_stats\_sql
2025-08-19T22:24:13.4187139Z 
2025-08-19T22:24:13.4187302Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T22:24:13.4187628Z 
2025-08-19T22:24:13.4187783Z # api.tests.test\_entrypoint
2025-08-19T22:24:13.4188041Z 
2025-08-19T22:24:13.4188247Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-19T22:24:13.4188602Z 
2025-08-19T22:24:13.4188770Z # api.tests.test\_stats\_future\_contracts
2025-08-19T22:24:13.4189093Z 
2025-08-19T22:24:13.4189248Z <a id="api.tests.test_health"></a>
2025-08-19T22:24:13.4189526Z 
2025-08-19T22:24:13.4189665Z # api.tests.test\_health
2025-08-19T22:24:13.4189907Z 
2025-08-19T22:24:13.4190056Z <a id="api.tests.test_score"></a>
2025-08-19T22:24:13.4190335Z 
2025-08-19T22:24:13.4190478Z # api.tests.test\_score
2025-08-19T22:24:13.4190701Z 
2025-08-19T22:24:13.4190845Z <a id="api.logging_config"></a>
2025-08-19T22:24:13.4191111Z 
2025-08-19T22:24:13.4191240Z # api.logging\_config
2025-08-19T22:24:13.4191451Z 
2025-08-19T22:24:13.4191598Z <a id="api.migrations.env"></a>
2025-08-19T22:24:13.4191869Z 
2025-08-19T22:24:13.4192003Z # api.migrations.env
2025-08-19T22:24:13.4192210Z 
2025-08-19T22:24:13.4192452Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T22:24:13.4192832Z 
2025-08-19T22:24:13.4193028Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T22:24:13.4193373Z 
2025-08-19T22:24:13.4193742Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T22:24:13.4194119Z 
2025-08-19T22:24:13.4194298Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T22:24:13.4194633Z 
2025-08-19T22:24:13.4194921Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T22:24:13.4195373Z 
2025-08-19T22:24:13.4195640Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T22:24:13.4196052Z 
2025-08-19T22:24:13.4196284Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T22:24:13.4196670Z 
2025-08-19T22:24:13.4196872Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T22:24:13.4197221Z 
2025-08-19T22:24:13.4197449Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T22:24:13.4197903Z 
2025-08-19T22:24:13.4198108Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T22:24:13.4198744Z 
2025-08-19T22:24:13.4198985Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T22:24:13.4199373Z 
2025-08-19T22:24:13.4199582Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T22:24:13.4199933Z 
2025-08-19T22:24:13.4200152Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T22:24:13.4200531Z 
2025-08-19T22:24:13.4200730Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T22:24:13.4201075Z 
2025-08-19T22:24:13.4201306Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T22:24:13.4201710Z 
2025-08-19T22:24:13.4201915Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T22:24:13.4202269Z 
2025-08-19T22:24:13.4202536Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T22:24:13.4202953Z 
2025-08-19T22:24:13.4203176Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T22:24:13.4203743Z 
2025-08-19T22:24:13.4203994Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T22:24:13.4204682Z 
2025-08-19T22:24:13.4204891Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T22:24:13.4205252Z 
2025-08-19T22:24:13.4205504Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T22:24:13.4205917Z 
2025-08-19T22:24:13.4206138Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T22:24:13.4206504Z 
2025-08-19T22:24:13.4206710Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T22:24:13.4207074Z 
2025-08-19T22:24:13.4207257Z # api.migrations.versions.0001\_baseline
2025-08-19T22:24:13.4207713Z 
2025-08-19T22:24:13.4207895Z <a id="api.migrations.versions"></a>
2025-08-19T22:24:13.4208201Z 
2025-08-19T22:24:13.4208351Z # api.migrations.versions
2025-08-19T22:24:13.4208595Z 
2025-08-19T22:24:13.4208743Z <a id="api.migrations"></a>
2025-08-19T22:24:13.4208990Z 
2025-08-19T22:24:13.4209113Z # api.migrations
2025-08-19T22:24:13.4209315Z 
2025-08-19T22:24:13.4209438Z <a id="api.db"></a>
2025-08-19T22:24:13.4209660Z 
2025-08-19T22:24:13.4209774Z # api.db
2025-08-19T22:24:13.4209941Z 
2025-08-19T22:24:13.4210086Z <a id="api.routes.score"></a>
2025-08-19T22:24:13.4210393Z 
2025-08-19T22:24:13.4210530Z # api.routes.score
2025-08-19T22:24:13.4210729Z 
2025-08-19T22:24:13.4210872Z <a id="api.routes.stats"></a>
2025-08-19T22:24:13.4211134Z 
2025-08-19T22:24:13.4211258Z # api.routes.stats
2025-08-19T22:24:13.4211453Z 
2025-08-19T22:24:13.4211590Z <a id="api.routes.roi"></a>
2025-08-19T22:24:13.4211840Z 
2025-08-19T22:24:13.4211965Z # api.routes.roi
2025-08-19T22:24:13.4212156Z 
2025-08-19T22:24:13.4212311Z <a id="api.routes.health"></a>
2025-08-19T22:24:13.4212568Z 
2025-08-19T22:24:13.4212694Z # api.routes.health
2025-08-19T22:24:13.4212898Z 
2025-08-19T22:24:13.4213073Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T22:24:13.4213380Z 
2025-08-19T22:24:13.4213497Z #### MAX\_SKEW
2025-08-19T22:24:13.4213903Z 
2025-08-19T22:24:13.4214018Z seconds
2025-08-19T22:24:13.4214173Z 
2025-08-19T22:24:13.4214350Z <a id="api.routes.health.health"></a>
2025-08-19T22:24:13.4214664Z 
2025-08-19T22:24:13.4214775Z #### health
2025-08-19T22:24:13.4214939Z 
2025-08-19T22:24:13.4215061Z ```python
2025-08-19T22:24:13.4215420Z @router.get("/health", include_in_schema=False)
2025-08-19T22:24:13.4216162Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T22:24:13.4216796Z ```
2025-08-19T22:24:13.4216969Z 
2025-08-19T22:24:13.4217197Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T22:24:13.4217570Z 
2025-08-19T22:24:13.4217739Z <a id="api.routes.repository"></a>
2025-08-19T22:24:13.4218034Z 
2025-08-19T22:24:13.4218177Z # api.routes.repository
2025-08-19T22:24:13.4218408Z 
2025-08-19T22:24:13.4218553Z <a id="api.routes"></a>
2025-08-19T22:24:13.4218769Z 
2025-08-19T22:24:13.4218886Z # api.routes
2025-08-19T22:24:13.4219068Z 
2025-08-19T22:24:13.4219214Z <a id="api.models.fee"></a>
2025-08-19T22:24:13.4219457Z 
2025-08-19T22:24:13.4219583Z # api.models.fee
2025-08-19T22:24:13.4219787Z 
2025-08-19T22:24:13.4220144Z <a id="api.models"></a>
2025-08-19T22:24:13.4220371Z 
2025-08-19T22:24:13.4220493Z # api.models
2025-08-19T22:24:13.4220669Z 
2025-08-19T22:24:13.4220815Z <a id="api.roi_repository"></a>
2025-08-19T22:24:13.4221045Z 
2025-08-19T22:24:13.4221157Z # api.roi\_repository
2025-08-19T22:24:13.4221338Z 
2025-08-19T22:24:13.4221441Z <a id="api.main"></a>
2025-08-19T22:24:13.4221625Z 
2025-08-19T22:24:13.4221724Z # api.main
2025-08-19T22:24:13.4221874Z 
2025-08-19T22:24:13.4222014Z <a id="api.main.ready"></a>
2025-08-19T22:24:13.4222241Z 
2025-08-19T22:24:13.4222348Z #### ready
2025-08-19T22:24:13.4222513Z 
2025-08-19T22:24:13.4222621Z ```python
2025-08-19T22:24:13.4223072Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T22:24:13.4224040Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T22:24:13.4224591Z                                                                       str]
2025-08-19T22:24:13.4224956Z ```
2025-08-19T22:24:13.4225292Z 
2025-08-19T22:24:13.4225477Z Return 200 only when migrations are at head.
2025-08-19T22:24:13.4225798Z 
2025-08-19T22:24:13.4225930Z <a id="api.config"></a>
2025-08-19T22:24:13.4226143Z 
2025-08-19T22:24:13.4226244Z # api.config
2025-08-19T22:24:13.4226383Z 
2025-08-19T22:24:13.4226498Z <a id="api.security"></a>
2025-08-19T22:24:13.4226699Z 
2025-08-19T22:24:13.4226800Z # api.security
2025-08-19T22:24:13.4226949Z 
2025-08-19T22:24:13.4227055Z <a id="etl"></a>
2025-08-19T22:24:13.4227219Z 
2025-08-19T22:24:13.4227314Z # etl
2025-08-19T22:24:13.4227449Z 
2025-08-19T22:24:13.4227585Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T22:24:13.4227849Z 
2025-08-19T22:24:13.4227971Z # etl.fba\_fee\_ingestor
2025-08-19T22:24:13.4228184Z 
2025-08-19T22:24:13.4228304Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T22:24:13.4228522Z 
2025-08-19T22:24:13.4228638Z # etl.sp\_fees\_ingestor
2025-08-19T22:24:13.4228822Z 
2025-08-19T22:24:13.4228941Z <a id="etl.keepa_ingestor"></a>
2025-08-19T22:24:13.4229173Z 
2025-08-19T22:24:13.4229303Z # etl.keepa\_ingestor
2025-08-19T22:24:13.4229501Z 
2025-08-19T22:24:13.4229621Z <a id="etl.db"></a>
2025-08-19T22:24:13.4229811Z 
2025-08-19T22:24:13.4229918Z # etl.db
2025-08-19T22:24:13.4230068Z 
2025-08-19T22:24:13.4230210Z <a id="etl.dialects.schemas"></a>
2025-08-19T22:24:13.4230466Z 
2025-08-19T22:24:13.4230577Z # etl.dialects.schemas
2025-08-19T22:24:13.4230757Z 
2025-08-19T22:24:13.4230923Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T22:24:13.4231203Z 
2025-08-19T22:24:13.4231331Z # etl.dialects.amazon\_reimbursements
2025-08-19T22:24:13.4231619Z 
2025-08-19T22:24:13.4231754Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T22:24:13.4232049Z 
2025-08-19T22:24:13.4232184Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T22:24:13.4232462Z 
2025-08-19T22:24:13.4232622Z <a id="etl.dialects.test_generic"></a>
2025-08-19T22:24:13.4232907Z 
2025-08-19T22:24:13.4233044Z # etl.dialects.test\_generic
2025-08-19T22:24:13.4233291Z 
2025-08-19T22:24:13.4233459Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T22:24:13.4233941Z 
2025-08-19T22:24:13.4234091Z # etl.dialects.amazon\_returns
2025-08-19T22:24:13.4234345Z 
2025-08-19T22:24:13.4234518Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T22:24:13.4234833Z 
2025-08-19T22:24:13.4234984Z # etl.dialects.amazon\_fee\_preview
2025-08-19T22:24:13.4235276Z 
2025-08-19T22:24:13.4235478Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T22:24:13.4235828Z 
2025-08-19T22:24:13.4235999Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T22:24:13.4236314Z 
2025-08-19T22:24:13.4236511Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T22:24:13.4236849Z 
2025-08-19T22:24:13.4237012Z # etl.dialects.amazon\_settlements
2025-08-19T22:24:13.4237311Z 
2025-08-19T22:24:13.4237451Z <a id="etl.dialects"></a>
2025-08-19T22:24:13.4237688Z 
2025-08-19T22:24:13.4237815Z # etl.dialects
2025-08-19T22:24:13.4237997Z 
2025-08-19T22:24:13.4238120Z <a id="ingest"></a>
2025-08-19T22:24:13.4238327Z 
2025-08-19T22:24:13.4238674Z # ingest
2025-08-19T22:24:13.4238845Z 
2025-08-19T22:24:13.4238997Z <a id="ingest.maintenance"></a>
2025-08-19T22:24:13.4239278Z 
2025-08-19T22:24:13.4239413Z # ingest.maintenance
2025-08-19T22:24:13.4239627Z 
2025-08-19T22:24:13.4239776Z <a id="ingest.copy_loader"></a>
2025-08-19T22:24:13.4240048Z 
2025-08-19T22:24:13.4240177Z # ingest.copy\_loader
2025-08-19T22:24:13.4240394Z 
2025-08-19T22:24:13.4240592Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T22:24:13.4240937Z 
2025-08-19T22:24:13.4241071Z #### copy\_df\_via\_temp
2025-08-19T22:24:13.4241306Z 
2025-08-19T22:24:13.4241422Z ```python
2025-08-19T22:24:13.4241733Z def copy_df_via_temp(engine: Engine,
2025-08-19T22:24:13.4242172Z                      df: pd.DataFrame,
2025-08-19T22:24:13.4242742Z                      target_table: str,
2025-08-19T22:24:13.4243510Z                      *,
2025-08-19T22:24:13.4244079Z                      target_schema: Optional[str] = None,
2025-08-19T22:24:13.4244572Z                      columns: Sequence[str],
2025-08-19T22:24:13.4245521Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T22:24:13.4246045Z                      analyze_after: bool = False,
2025-08-19T22:24:13.4246535Z                      connection: Any | None = None) -> int
2025-08-19T22:24:13.4246968Z ```
2025-08-19T22:24:13.4247164Z 
2025-08-19T22:24:13.4247457Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T22:24:13.4247893Z 
2025-08-19T22:24:13.4248062Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T22:24:13.4248356Z 
2025-08-19T22:24:13.4248501Z # ingest.tests.test\_smoke
2025-08-19T22:24:13.4248752Z 
2025-08-19T22:24:13.4248898Z <a id="ingest.tests"></a>
2025-08-19T22:24:13.4249135Z 
2025-08-19T22:24:13.4249256Z # ingest.tests
2025-08-19T22:24:13.4249452Z 
2025-08-19T22:24:13.4249609Z <a id="ingest.upload_router"></a>
2025-08-19T22:24:13.4249895Z 
2025-08-19T22:24:13.4250046Z # ingest.upload\_router
2025-08-19T22:24:13.4250274Z 
2025-08-19T22:24:13.4250437Z <a id="ingest.email_watcher"></a>
2025-08-19T22:24:13.4250723Z 
2025-08-19T22:24:13.4250867Z # ingest.email\_watcher
2025-08-19T22:24:13.4251088Z 
2025-08-19T22:24:13.4251250Z <a id="ingest.email_watcher.main"></a>
2025-08-19T22:24:13.4251570Z 
2025-08-19T22:24:13.4251686Z #### main
2025-08-19T22:24:13.4251849Z 
2025-08-19T22:24:13.4251972Z ```python
2025-08-19T22:24:13.4252275Z def main() -> dict[str, str]
2025-08-19T22:24:13.4252639Z ```
2025-08-19T22:24:13.4252791Z 
2025-08-19T22:24:13.4253052Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T22:24:13.4253481Z 
2025-08-19T22:24:13.4253942Z Returns {"status": "success"} when processing completes.
2025-08-19T22:24:13.4254339Z 
2025-08-19T22:24:13.4254479Z <a id="ingest.tasks"></a>
2025-08-19T22:24:13.4254721Z 
2025-08-19T22:24:13.4254840Z # ingest.tasks
2025-08-19T22:24:13.4255059Z 
2025-08-19T22:24:13.4255235Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T22:24:13.4255572Z 
2025-08-19T22:24:13.4255712Z #### task\_import\_file
2025-08-19T22:24:13.4255944Z 
2025-08-19T22:24:13.4256057Z ```python
2025-08-19T22:24:13.4256445Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T22:24:13.4256959Z def task_import_file(self: Any,
2025-08-19T22:24:13.4257352Z                      uri: str,
2025-08-19T22:24:13.4257757Z                      report_type: str | None = None,
2025-08-19T22:24:13.4258246Z                      force: bool = False) -> dict[str, Any]
2025-08-19T22:24:13.4258686Z ```
2025-08-19T22:24:13.4258847Z 
2025-08-19T22:24:13.4259094Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T22:24:13.4259497Z 
2025-08-19T22:24:13.4259653Z <a id="ingest.celery_app"></a>
2025-08-19T22:24:13.4259919Z 
2025-08-19T22:24:13.4260052Z # ingest.celery\_app
2025-08-19T22:24:13.4260280Z 
2025-08-19T22:24:13.4260439Z <a id="ingest.ingest_router"></a>
2025-08-19T22:24:13.4260729Z 
2025-08-19T22:24:13.4260879Z # ingest.ingest\_router
2025-08-19T22:24:13.4261104Z 
2025-08-19T22:24:13.4261241Z <a id="logistics_etl"></a>
2025-08-19T22:24:13.4261954Z 
2025-08-19T22:24:13.4262079Z # logistics\_etl
2025-08-19T22:24:13.4262275Z 
2025-08-19T22:24:13.4262417Z Daily logistics ETL job.
2025-08-19T22:24:13.4262657Z 
2025-08-19T22:24:13.4262803Z <a id="logistics_etl.__main__"></a>
2025-08-19T22:24:13.4263089Z 
2025-08-19T22:24:13.4263239Z # logistics\_etl.\_\_main\_\_
2025-08-19T22:24:13.4263492Z 
2025-08-19T22:24:13.4263841Z <a id="logistics_etl.dsn"></a>
2025-08-19T22:24:13.4264104Z 
2025-08-19T22:24:13.4264244Z # logistics\_etl.dsn
2025-08-19T22:24:13.4264449Z 
2025-08-19T22:24:13.4264661Z Local DSN builder to avoid cross-service dependency.
2025-08-19T22:24:13.4265039Z 
2025-08-19T22:24:13.4265203Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T22:24:13.4265515Z 
2025-08-19T22:24:13.4265640Z #### build\_dsn
2025-08-19T22:24:13.4265826Z 
2025-08-19T22:24:13.4265939Z ```python
2025-08-19T22:24:13.4266266Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:24:13.4266671Z ```
2025-08-19T22:24:13.4266827Z 
2025-08-19T22:24:13.4267294Z Return a Postgres DSN assembled from environment variables.
2025-08-19T22:24:13.4267707Z 
2025-08-19T22:24:13.4267990Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T22:24:13.4268728Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T22:24:13.4269375Z error when any required variable is missing.
2025-08-19T22:24:13.4269718Z 
2025-08-19T22:24:13.4269900Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T22:24:13.4270240Z 
2025-08-19T22:24:13.4270396Z # logistics\_etl.tests.conftest
2025-08-19T22:24:13.4270668Z 
2025-08-19T22:24:13.4270864Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T22:24:13.4271218Z 
2025-08-19T22:24:13.4271384Z # logistics\_etl.tests.test\_repository
2025-08-19T22:24:13.4271691Z 
2025-08-19T22:24:13.4271870Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T22:24:13.4272191Z 
2025-08-19T22:24:13.4272345Z # logistics\_etl.tests.test\_cron
2025-08-19T22:24:13.4272638Z 
2025-08-19T22:24:13.4272816Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T22:24:13.4273173Z 
2025-08-19T22:24:13.4273329Z # logistics\_etl.tests.test\_imports
2025-08-19T22:24:13.4273840Z 
2025-08-19T22:24:13.4274019Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T22:24:13.4274347Z 
2025-08-19T22:24:13.4274508Z # logistics\_etl.tests.test\_smoke
2025-08-19T22:24:13.4274792Z 
2025-08-19T22:24:13.4274964Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T22:24:13.4275300Z 
2025-08-19T22:24:13.4275456Z # logistics\_etl.tests.test\_client
2025-08-19T22:24:13.4275748Z 
2025-08-19T22:24:13.4275894Z <a id="logistics_etl.tests"></a>
2025-08-19T22:24:13.4276174Z 
2025-08-19T22:24:13.4276308Z # logistics\_etl.tests
2025-08-19T22:24:13.4276526Z 
2025-08-19T22:24:13.4276676Z <a id="logistics_etl.flow"></a>
2025-08-19T22:24:13.4276933Z 
2025-08-19T22:24:13.4277063Z # logistics\_etl.flow
2025-08-19T22:24:13.4277272Z 
2025-08-19T22:24:13.4277430Z <a id="logistics_etl.client"></a>
2025-08-19T22:24:13.4277704Z 
2025-08-19T22:24:13.4340445Z # logistics\_etl.client
2025-08-19T22:24:13.4340865Z 
2025-08-19T22:24:13.4341018Z <a id="logistics_etl.cron"></a>
2025-08-19T22:24:13.4341254Z 
2025-08-19T22:24:13.4341372Z # logistics\_etl.cron
2025-08-19T22:24:13.4341572Z 
2025-08-19T22:24:13.4341704Z <a id="logistics_etl.db"></a>
2025-08-19T22:24:13.4341923Z 
2025-08-19T22:24:13.4342029Z # logistics\_etl.db
2025-08-19T22:24:13.4342204Z 
2025-08-19T22:24:13.4342343Z <a id="logistics_etl.repository"></a>
2025-08-19T22:24:13.4342602Z 
2025-08-19T22:24:13.4342733Z # logistics\_etl.repository
2025-08-19T22:24:13.4342943Z 
2025-08-19T22:24:13.4343055Z <a id="alert_bot"></a>
2025-08-19T22:24:13.4343239Z 
2025-08-19T22:24:13.4343346Z # alert\_bot
2025-08-19T22:24:13.4343502Z 
2025-08-19T22:24:13.4343850Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T22:24:13.4344123Z 
2025-08-19T22:24:13.4344250Z # alert\_bot.tests.test\_smoke
2025-08-19T22:24:13.4344458Z 
2025-08-19T22:24:13.4344572Z <a id="alert_bot.tests"></a>
2025-08-19T22:24:13.4344785Z 
2025-08-19T22:24:13.4345110Z # alert\_bot.tests
2025-08-19T22:24:13.4345270Z 
2025-08-19T22:24:13.4345401Z <a id="alert_bot.alert_bot"></a>
2025-08-19T22:24:13.4345620Z 
2025-08-19T22:24:13.4345730Z # alert\_bot.alert\_bot
2025-08-19T22:24:13.4345919Z 
2025-08-19T22:24:13.4346043Z <a id="alert_bot.rules"></a>
2025-08-19T22:24:13.4346250Z 
2025-08-19T22:24:13.4346353Z # alert\_bot.rules
2025-08-19T22:24:13.4346542Z 
2025-08-19T22:24:13.4346643Z <a id="common"></a>
2025-08-19T22:24:13.4346808Z 
2025-08-19T22:24:13.4346907Z # common
2025-08-19T22:24:13.4347039Z 
2025-08-19T22:24:13.4347154Z <a id="common.dsn"></a>
2025-08-19T22:24:13.4347330Z 
2025-08-19T22:24:13.4347425Z # common.dsn
2025-08-19T22:24:13.4347569Z 
2025-08-19T22:24:13.4347702Z <a id="common.dsn.build_dsn"></a>
2025-08-19T22:24:13.4347938Z 
2025-08-19T22:24:13.4348038Z #### build\_dsn
2025-08-19T22:24:13.4348203Z 
2025-08-19T22:24:13.4348302Z ```python
2025-08-19T22:24:13.4348576Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:24:13.4348930Z ```
2025-08-19T22:24:13.4349271Z 
2025-08-19T22:24:13.4349476Z Return a Postgres DSN, validating required variables.
2025-08-19T22:24:13.4349822Z 
2025-08-19T22:24:13.4350115Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T22:24:13.4350798Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T22:24:13.4351459Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T22:24:13.4351939Z missing.
2025-08-19T22:24:13.4352076Z 
2025-08-19T22:24:13.4352207Z <a id="common.models_vendor"></a>
2025-08-19T22:24:13.4352446Z 
2025-08-19T22:24:13.4352555Z # common.models\_vendor
2025-08-19T22:24:13.4352744Z 
2025-08-19T22:24:13.4352892Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T22:24:13.4353155Z 
2025-08-19T22:24:13.4353259Z ## Vendor Objects
2025-08-19T22:24:13.4353422Z 
2025-08-19T22:24:13.4353516Z ```python
2025-08-19T22:24:13.4353902Z class Vendor(Base)
2025-08-19T22:24:13.4354154Z ```
2025-08-19T22:24:13.4354290Z 
2025-08-19T22:24:13.4354414Z Vendor of inventory items.
2025-08-19T22:24:13.4354626Z 
2025-08-19T22:24:13.4354774Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T22:24:13.4355057Z 
2025-08-19T22:24:13.4355176Z ## VendorPrice Objects
2025-08-19T22:24:13.4355361Z 
2025-08-19T22:24:13.4355459Z ```python
2025-08-19T22:24:13.4355700Z class VendorPrice(Base)
2025-08-19T22:24:13.4355956Z ```
2025-08-19T22:24:13.4356088Z 
2025-08-19T22:24:13.4356246Z Association table linking vendors to pricing.
2025-08-19T22:24:13.4356535Z 
2025-08-19T22:24:13.4356655Z <a id="common.db_url"></a>
2025-08-19T22:24:13.4356850Z 
2025-08-19T22:24:13.4356951Z # common.db\_url
2025-08-19T22:24:13.4357112Z 
2025-08-19T22:24:13.4357243Z <a id="common.db_url.build_url"></a>
2025-08-19T22:24:13.4357473Z 
2025-08-19T22:24:13.4357564Z #### build\_url
2025-08-19T22:24:13.4357714Z 
2025-08-19T22:24:13.4357804Z ```python
2025-08-19T22:24:13.4358059Z def build_url(async_: bool = True) -> str
2025-08-19T22:24:13.4358396Z ```
2025-08-19T22:24:13.4358528Z 
2025-08-19T22:24:13.4358686Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:24:13.4358967Z 
2025-08-19T22:24:13.4359081Z <a id="common.keepa"></a>
2025-08-19T22:24:13.4359276Z 
2025-08-19T22:24:13.4359390Z # common.keepa
2025-08-19T22:24:13.4359538Z 
2025-08-19T22:24:13.4359646Z <a id="common.llm"></a>
2025-08-19T22:24:13.4359829Z 
2025-08-19T22:24:13.4359926Z # common.llm
2025-08-19T22:24:13.4360068Z 
2025-08-19T22:24:13.4360188Z <a id="common.settings"></a>
2025-08-19T22:24:13.4360405Z 
2025-08-19T22:24:13.4360505Z # common.settings
2025-08-19T22:24:13.4360663Z 
2025-08-19T22:24:13.4360774Z <a id="common.db"></a>
2025-08-19T22:24:13.4360954Z 
2025-08-19T22:24:13.4361048Z # common.db
2025-08-19T22:24:13.4361193Z 
2025-08-19T22:24:13.4361356Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T22:24:13.4361640Z 
2025-08-19T22:24:13.4361756Z #### build\_sqlalchemy\_url
2025-08-19T22:24:13.4361974Z 
2025-08-19T22:24:13.4362074Z ```python
2025-08-19T22:24:13.4362352Z def build_sqlalchemy_url() -> str
2025-08-19T22:24:13.4362840Z ```
2025-08-19T22:24:13.4362967Z 
2025-08-19T22:24:13.4363121Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:24:13.4363397Z 
2025-08-19T22:24:13.4363681Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T22:24:13.4363952Z 
2025-08-19T22:24:13.4364065Z #### build\_asyncpg\_dsn
2025-08-19T22:24:13.4364260Z 
2025-08-19T22:24:13.4364356Z ```python
2025-08-19T22:24:13.4364624Z def build_asyncpg_dsn() -> str
2025-08-19T22:24:13.4364933Z ```
2025-08-19T22:24:13.4365054Z 
2025-08-19T22:24:13.4365253Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:24:13.4365571Z 
2025-08-19T22:24:13.4365719Z <a id="common.db.refresh_mvs"></a>
2025-08-19T22:24:13.4365957Z 
2025-08-19T22:24:13.4366063Z #### refresh\_mvs
2025-08-19T22:24:13.4366221Z 
2025-08-19T22:24:13.4366323Z ```python
2025-08-19T22:24:13.4366647Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:24:13.4367033Z ```
2025-08-19T22:24:13.4367157Z 
2025-08-19T22:24:13.4367537Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:24:13.4367873Z 
2025-08-19T22:24:13.4367988Z <a id="common.config"></a>
2025-08-19T22:24:13.4368193Z 
2025-08-19T22:24:13.4368297Z # common.config
2025-08-19T22:24:13.4368452Z 
2025-08-19T22:24:13.4368565Z <a id="common.base"></a>
2025-08-19T22:24:13.4368753Z 
2025-08-19T22:24:13.4368851Z # common.base
2025-08-19T22:24:13.4368997Z 
2025-08-19T22:24:13.4369121Z <a id="common.base.Base"></a>
2025-08-19T22:24:13.4369333Z 
2025-08-19T22:24:13.4369433Z ## Base Objects
2025-08-19T22:24:13.4369590Z 
2025-08-19T22:24:13.4369692Z ```python
2025-08-19T22:24:13.4369934Z class Base(DeclarativeBase)
2025-08-19T22:24:13.4370220Z ```
2025-08-19T22:24:13.4370346Z 
2025-08-19T22:24:13.4370473Z Base class for SQLAlchemy models.
2025-08-19T22:24:13.4370715Z 
2025-08-19T22:24:13.4370826Z <a id="repricer"></a>
2025-08-19T22:24:13.4371005Z 
2025-08-19T22:24:13.4371106Z # repricer
2025-08-19T22:24:13.4371242Z 
2025-08-19T22:24:13.4371369Z <a id="repricer.app.schemas"></a>
2025-08-19T22:24:13.4371612Z 
2025-08-19T22:24:13.4371733Z # repricer.app.schemas
2025-08-19T22:24:13.4371914Z 
2025-08-19T22:24:13.4372042Z <a id="repricer.app.deps"></a>
2025-08-19T22:24:13.4372266Z 
2025-08-19T22:24:13.4372379Z # repricer.app.deps
2025-08-19T22:24:13.4372546Z 
2025-08-19T22:24:13.4372723Z Placeholder module for Keepa / SP-API clients.
2025-08-19T22:24:13.4373015Z 
2025-08-19T22:24:13.4373142Z <a id="repricer.app.logic"></a>
2025-08-19T22:24:13.4373365Z 
2025-08-19T22:24:13.4373490Z # repricer.app.logic
2025-08-19T22:24:13.4373809Z 
2025-08-19T22:24:13.4373968Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T22:24:13.4374255Z 
2025-08-19T22:24:13.4374356Z #### MIN\_MARGIN
2025-08-19T22:24:13.4374508Z 
2025-08-19T22:24:13.4374606Z 15 % ROI
2025-08-19T22:24:13.4374737Z 
2025-08-19T22:24:13.4374897Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T22:24:13.4375183Z 
2025-08-19T22:24:13.4375292Z #### compute\_price
2025-08-19T22:24:13.4375462Z 
2025-08-19T22:24:13.4375567Z ```python
2025-08-19T22:24:13.4375957Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T22:24:13.4376478Z ```
2025-08-19T22:24:13.4376609Z 
2025-08-19T22:24:13.4376771Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T22:24:13.4377202Z Replace with real competitive logic later.
2025-08-19T22:24:13.4377477Z 
2025-08-19T22:24:13.4377602Z <a id="repricer.app.main"></a>
2025-08-19T22:24:13.4377835Z 
2025-08-19T22:24:13.4377944Z # repricer.app.main
2025-08-19T22:24:13.4378114Z 
2025-08-19T22:24:13.4378232Z <a id="repricer.app"></a>
2025-08-19T22:24:13.4378431Z 
2025-08-19T22:24:13.4378533Z # repricer.app
2025-08-19T22:24:13.4378685Z 
2025-08-19T22:24:13.4378835Z <a id="repricer.tests.test_imports"></a>
2025-08-19T22:24:13.4379094Z 
2025-08-19T22:24:13.4379217Z # repricer.tests.test\_imports
2025-08-19T22:24:13.4379434Z 
2025-08-19T22:24:13.4379573Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T22:24:13.4379831Z 
2025-08-19T22:24:13.4379956Z # repricer.tests.test\_smoke
2025-08-19T22:24:13.4380353Z 
2025-08-19T22:24:13.4380474Z <a id="repricer.tests"></a>
2025-08-19T22:24:13.4380678Z 
2025-08-19T22:24:13.4380787Z # repricer.tests
2025-08-19T22:24:13.4380945Z 
2025-08-19T22:24:13.4381041Z <a id="db"></a>
2025-08-19T22:24:13.4381193Z 
2025-08-19T22:24:13.4381293Z # db
2025-08-19T22:24:13.4381420Z 
2025-08-19T22:24:13.4381536Z <a id="db.utils.views"></a>
2025-08-19T22:24:13.4381747Z 
2025-08-19T22:24:13.4381847Z # db.utils.views
2025-08-19T22:24:13.4382015Z 
2025-08-19T22:24:13.4382165Z <a id="db.utils.views.replace_view"></a>
2025-08-19T22:24:13.4382437Z 
2025-08-19T22:24:13.4382538Z #### replace\_view
2025-08-19T22:24:13.4382697Z 
2025-08-19T22:24:13.4382797Z ```python
2025-08-19T22:24:13.4383086Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T22:24:13.4383463Z ```
2025-08-19T22:24:13.4383768Z 
2025-08-19T22:24:13.4383906Z Drop and recreate a SQL view atomically.
2025-08-19T22:24:13.4384173Z 
2025-08-19T22:24:13.4384284Z <a id="db.utils"></a>
2025-08-19T22:24:13.4384633Z 
2025-08-19T22:24:13.4384732Z # db.utils
2025-08-19T22:24:13.4384872Z 
2025-08-19T22:24:13.4384990Z <a id="price_importer"></a>
2025-08-19T22:24:13.4385190Z 
2025-08-19T22:24:13.4385305Z # price\_importer
2025-08-19T22:24:13.4385461Z 
2025-08-19T22:24:13.4385621Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T22:24:13.4385932Z 
2025-08-19T22:24:13.4386094Z # price\_importer.services\_common.dsn
2025-08-19T22:24:13.4386380Z 
2025-08-19T22:24:13.4386569Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T22:24:13.4386889Z 
2025-08-19T22:24:13.4386988Z #### build\_dsn
2025-08-19T22:24:13.4387137Z 
2025-08-19T22:24:13.4387238Z ```python
2025-08-19T22:24:13.4387505Z def build_dsn(sync: bool = True) -> str
2025-08-19T22:24:13.4387847Z ```
2025-08-19T22:24:13.4387973Z 
2025-08-19T22:24:13.4388079Z Return safe DSN.
2025-08-19T22:24:13.4388259Z 
2025-08-19T22:24:13.4388726Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T22:24:13.4389043Z 
2025-08-19T22:24:13.4389266Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T22:24:13.4389583Z 
2025-08-19T22:24:13.4389752Z # price\_importer.services\_common.models\_vendor
2025-08-19T22:24:13.4390051Z 
2025-08-19T22:24:13.4390229Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T22:24:13.4390518Z 
2025-08-19T22:24:13.4390665Z # price\_importer.services\_common.db\_url
2025-08-19T22:24:13.4390938Z 
2025-08-19T22:24:13.4391140Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T22:24:13.4391472Z 
2025-08-19T22:24:13.4391577Z #### build\_url
2025-08-19T22:24:13.4391732Z 
2025-08-19T22:24:13.4391833Z ```python
2025-08-19T22:24:13.4392114Z def build_url(async_: bool = True) -> str
2025-08-19T22:24:13.4392461Z ```
2025-08-19T22:24:13.4392598Z 
2025-08-19T22:24:13.4392752Z Return Postgres DSN from env or PG_* parts.
2025-08-19T22:24:13.4393024Z 
2025-08-19T22:24:13.4393189Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T22:24:13.4393495Z 
2025-08-19T22:24:13.4393804Z # price\_importer.services\_common.keepa
2025-08-19T22:24:13.4394062Z 
2025-08-19T22:24:13.4394224Z <a id="price_importer.services_common.llm"></a>
2025-08-19T22:24:13.4394500Z 
2025-08-19T22:24:13.4394638Z # price\_importer.services\_common.llm
2025-08-19T22:24:13.4394896Z 
2025-08-19T22:24:13.4395071Z <a id="price_importer.services_common.settings"></a>
2025-08-19T22:24:13.4395366Z 
2025-08-19T22:24:13.4395515Z # price\_importer.services\_common.settings
2025-08-19T22:24:13.4395790Z 
2025-08-19T22:24:13.4395948Z <a id="price_importer.services_common.db"></a>
2025-08-19T22:24:13.4396222Z 
2025-08-19T22:24:13.4396368Z # price\_importer.services\_common.db
2025-08-19T22:24:13.4396617Z 
2025-08-19T22:24:13.4396877Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T22:24:13.4397268Z 
2025-08-19T22:24:13.4397387Z #### build\_sqlalchemy\_url
2025-08-19T22:24:13.4397598Z 
2025-08-19T22:24:13.4397701Z ```python
2025-08-19T22:24:13.4397963Z def build_sqlalchemy_url() -> str
2025-08-19T22:24:13.4398466Z ```
2025-08-19T22:24:13.4398593Z 
2025-08-19T22:24:13.4398734Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T22:24:13.4398989Z 
2025-08-19T22:24:13.4399215Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T22:24:13.4399562Z 
2025-08-19T22:24:13.4399678Z #### build\_asyncpg\_dsn
2025-08-19T22:24:13.4399876Z 
2025-08-19T22:24:13.4399972Z ```python
2025-08-19T22:24:13.4400221Z def build_asyncpg_dsn() -> str
2025-08-19T22:24:13.4400517Z ```
2025-08-19T22:24:13.4400639Z 
2025-08-19T22:24:13.4400834Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T22:24:13.4401151Z 
2025-08-19T22:24:13.4401340Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T22:24:13.4401666Z 
2025-08-19T22:24:13.4401770Z #### refresh\_mvs
2025-08-19T22:24:13.4401933Z 
2025-08-19T22:24:13.4402028Z ```python
2025-08-19T22:24:13.4402334Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T22:24:13.4402742Z ```
2025-08-19T22:24:13.4403029Z 
2025-08-19T22:24:13.4403298Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T22:24:13.4403880Z 
2025-08-19T22:24:13.4404080Z <a id="price_importer.services_common"></a>
2025-08-19T22:24:13.4404429Z 
2025-08-19T22:24:13.4404602Z # price\_importer.services\_common
2025-08-19T22:24:13.4404858Z 
2025-08-19T22:24:13.4405035Z <a id="price_importer.services_common.base"></a>
2025-08-19T22:24:13.4405380Z 
2025-08-19T22:24:13.4405527Z # price\_importer.services\_common.base
2025-08-19T22:24:13.4405807Z 
2025-08-19T22:24:13.4405955Z <a id="price_importer.normaliser"></a>
2025-08-19T22:24:13.4406233Z 
2025-08-19T22:24:13.4406375Z # price\_importer.normaliser
2025-08-19T22:24:13.4406587Z 
2025-08-19T22:24:13.4406753Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T22:24:13.4407066Z 
2025-08-19T22:24:13.4407217Z # price\_importer.common.models\_vendor
2025-08-19T22:24:13.4407471Z 
2025-08-19T22:24:13.4407623Z <a id="price_importer.common.db_url"></a>
2025-08-19T22:24:13.4407894Z 
2025-08-19T22:24:13.4408042Z # price\_importer.common.db\_url
2025-08-19T22:24:13.4408280Z 
2025-08-19T22:24:13.4408450Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T22:24:13.4408748Z 
2025-08-19T22:24:13.4408847Z #### make\_dsn
2025-08-19T22:24:13.4409011Z 
2025-08-19T22:24:13.4409116Z ```python
2025-08-19T22:24:13.4409398Z def make_dsn(async_: bool = False) -> str
2025-08-19T22:24:13.4409763Z ```
2025-08-19T22:24:13.4409902Z 
2025-08-19T22:24:13.4410099Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T22:24:13.4410402Z 
2025-08-19T22:24:13.4410596Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T22:24:13.4410919Z 
2025-08-19T22:24:13.4411018Z #### build\_url
2025-08-19T22:24:13.4411167Z 
2025-08-19T22:24:13.4411261Z ```python
2025-08-19T22:24:13.4411537Z def build_url(async_: bool = False) -> str
2025-08-19T22:24:13.4411883Z ```
2025-08-19T22:24:13.4412013Z 
2025-08-19T22:24:13.4412199Z Return Postgres DSN built from environment variables.
2025-08-19T22:24:13.4412515Z 
2025-08-19T22:24:13.4412655Z <a id="price_importer.common"></a>
2025-08-19T22:24:13.4412905Z 
2025-08-19T22:24:13.4413026Z # price\_importer.common
2025-08-19T22:24:13.4413232Z 
2025-08-19T22:24:13.4413373Z <a id="price_importer.common.base"></a>
2025-08-19T22:24:13.4413769Z 
2025-08-19T22:24:13.4413908Z # price\_importer.common.base
2025-08-19T22:24:13.4414141Z 
2025-08-19T22:24:13.4414295Z <a id="price_importer.tests.conftest"></a>
2025-08-19T22:24:13.4414562Z 
2025-08-19T22:24:13.4414699Z # price\_importer.tests.conftest
2025-08-19T22:24:13.4414928Z 
2025-08-19T22:24:13.4415080Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T22:24:13.4415361Z 
2025-08-19T22:24:13.4415500Z # price\_importer.tests.test\_reader
2025-08-19T22:24:13.4415750Z 
2025-08-19T22:24:13.4415905Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T22:24:13.4416241Z 
2025-08-19T22:24:13.4416384Z # price\_importer.tests.test\_imports
2025-08-19T22:24:13.4416640Z 
2025-08-19T22:24:13.4416806Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T22:24:13.4417266Z 
2025-08-19T22:24:13.4417403Z # price\_importer.tests.test\_smoke
2025-08-19T22:24:13.4417654Z 
2025-08-19T22:24:13.4417819Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T22:24:13.4418111Z 
2025-08-19T22:24:13.4418255Z # price\_importer.tests.test\_normaliser
2025-08-19T22:24:13.4418530Z 
2025-08-19T22:24:13.4418668Z <a id="price_importer.tests"></a>
2025-08-19T22:24:13.4418909Z 
2025-08-19T22:24:13.4419039Z # price\_importer.tests
2025-08-19T22:24:13.4419227Z 
2025-08-19T22:24:13.4419357Z <a id="price_importer.reader"></a>
2025-08-19T22:24:13.4419599Z 
2025-08-19T22:24:13.4419715Z # price\_importer.reader
2025-08-19T22:24:13.4419907Z 
2025-08-19T22:24:13.4420047Z <a id="price_importer.repository"></a>
2025-08-19T22:24:13.4420315Z 
2025-08-19T22:24:13.4420438Z # price\_importer.repository
2025-08-19T22:24:13.4420652Z 
2025-08-19T22:24:13.4420790Z <a id="price_importer.import"></a>
2025-08-19T22:24:13.4421018Z 
2025-08-19T22:24:13.4421135Z # price\_importer.import
2025-08-19T22:24:13.4421505Z 
2025-08-19T22:24:13.4421614Z <a id="fees_h10"></a>
2025-08-19T22:24:13.4421793Z 
2025-08-19T22:24:13.4421890Z # fees\_h10
2025-08-19T22:24:13.4422044Z 
2025-08-19T22:24:13.4422159Z <a id="fees_h10.worker"></a>
2025-08-19T22:24:13.4422363Z 
2025-08-19T22:24:13.4422480Z # fees\_h10.worker
2025-08-19T22:24:13.4422643Z 
2025-08-19T22:24:13.4422797Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T22:24:13.4423066Z 
2025-08-19T22:24:13.4423178Z #### list\_active\_asins
2025-08-19T22:24:13.4423367Z 
2025-08-19T22:24:13.4423465Z ```python
2025-08-19T22:24:13.4423923Z def list_active_asins() -> list[str]
2025-08-19T22:24:13.4424262Z ```
2025-08-19T22:24:13.4424399Z 
2025-08-19T22:24:13.4424576Z Return known ASINs or an empty list if unavailable.
2025-08-19T22:24:13.4424896Z 
2025-08-19T22:24:13.4425048Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T22:24:13.4425297Z 
2025-08-19T22:24:13.4425419Z # fees\_h10.tests.test\_smoke
2025-08-19T22:24:13.4425637Z 
2025-08-19T22:24:13.4425766Z <a id="fees_h10.tests"></a>
2025-08-19T22:24:13.4425957Z 
2025-08-19T22:24:13.4426056Z # fees\_h10.tests
2025-08-19T22:24:13.4426226Z 
2025-08-19T22:24:13.4426341Z <a id="fees_h10.client"></a>
2025-08-19T22:24:13.4426538Z 
2025-08-19T22:24:13.4426656Z # fees\_h10.client
2025-08-19T22:24:13.4426820Z 
2025-08-19T22:24:13.4426946Z <a id="fees_h10.repository"></a>
2025-08-19T22:24:13.4427175Z 
2025-08-19T22:24:13.4427284Z # fees\_h10.repository
2025-08-19T22:24:13.4427462Z 
2025-08-19T22:24:13.4427619Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-19T22:24:13.4427912Z 
2025-08-19T22:24:13.4428025Z #### upsert\_fees\_raw
2025-08-19T22:24:13.4428209Z 
2025-08-19T22:24:13.4428325Z ```python
2025-08-19T22:24:13.4428624Z def upsert_fees_raw(engine: Engine,
2025-08-19T22:24:13.4429029Z                     rows: Iterable[Mapping[str, Any]],
2025-08-19T22:24:13.4429397Z                     *,
2025-08-19T22:24:13.4429753Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-19T22:24:13.4430186Z ```
2025-08-19T22:24:13.4430327Z 
2025-08-19T22:24:13.4430455Z Idempotent upsert for fees.
2025-08-19T22:24:13.4430680Z 
2025-08-19T22:24:13.4430932Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-19T22:24:13.4431492Z Assumes logical key (asin, marketplace, fee_type).
2025-08-19T22:24:13.4432036Z Only updates when one of the mutable fields changes.
2025-08-19T22:24:13.4432345Z 
2025-08-19T22:24:13.4432453Z <a id="emailer"></a>
2025-08-19T22:24:13.4432631Z 
2025-08-19T22:24:13.4432729Z # emailer
2025-08-19T22:24:13.4432864Z 
2025-08-19T22:24:13.4433021Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T22:24:13.4433308Z 
2025-08-19T22:24:13.4433445Z # emailer.tests.test\_import\_emailer
2025-08-19T22:24:13.4433840Z 
2025-08-19T22:24:13.4433988Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T22:24:13.4434228Z 
2025-08-19T22:24:13.4434356Z # emailer.tests.test\_smoke
2025-08-19T22:24:13.4434583Z 
2025-08-19T22:24:13.4434706Z <a id="emailer.tests"></a>
2025-08-19T22:24:13.4435098Z 
2025-08-19T22:24:13.4435204Z # emailer.tests
2025-08-19T22:24:13.4435372Z 
2025-08-19T22:24:13.4435505Z <a id="emailer.generate_body"></a>
2025-08-19T22:24:13.4435744Z 
2025-08-19T22:24:13.4435884Z # emailer.generate\_body
2025-08-19T22:24:13.4436082Z 
2025-08-19T22:24:13.4436186Z <a id="llm_server"></a>
2025-08-19T22:24:13.4436369Z 
2025-08-19T22:24:13.4436473Z # llm\_server
2025-08-19T22:24:13.4436626Z 
2025-08-19T22:24:13.4436740Z <a id="llm_server.app"></a>
2025-08-19T22:24:13.4436953Z 
2025-08-19T22:24:13.4437057Z # llm\_server.app
2025-08-19T22:24:13.4437218Z 
