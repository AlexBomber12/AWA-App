2025-08-18T22:05:44.8169907Z ##[group]Run pydoc-markdown
2025-08-18T22:05:44.8170191Z [36;1mpydoc-markdown[0m
2025-08-18T22:05:44.8209847Z shell: /usr/bin/bash -e {0}
2025-08-18T22:05:44.8210068Z env:
2025-08-18T22:05:44.8210296Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:05:44.8210699Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T22:05:44.8211093Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:05:44.8211425Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:05:44.8211769Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:05:44.8212101Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T22:05:44.8212381Z ##[endgroup]
2025-08-18T22:05:45.1864571Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T22:05:45.1865297Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T22:05:45.1865857Z In "pydoc-markdown.yml"
2025-08-18T22:05:45.1866410Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T22:05:45.1867125Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T22:05:45.1867919Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T22:05:45.1868448Z 
2025-08-18T22:05:45.5124977Z <a id="__init__"></a>
2025-08-18T22:05:45.5125230Z 
2025-08-18T22:05:45.5125351Z # \_\_init\_\_
2025-08-18T22:05:45.5125555Z 
2025-08-18T22:05:45.5125680Z <a id="api"></a>
2025-08-18T22:05:45.5125884Z 
2025-08-18T22:05:45.5126014Z # api
2025-08-18T22:05:45.5126186Z 
2025-08-18T22:05:45.5126322Z <a id="api.errors"></a>
2025-08-18T22:05:45.5126537Z 
2025-08-18T22:05:45.5126641Z # api.errors
2025-08-18T22:05:45.5126806Z 
2025-08-18T22:05:45.5126952Z <a id="api.sentry_config"></a>
2025-08-18T22:05:45.5127197Z 
2025-08-18T22:05:45.5127312Z # api.sentry\_config
2025-08-18T22:05:45.5127446Z 
2025-08-18T22:05:45.5127548Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T22:05:45.5127743Z 
2025-08-18T22:05:45.5128060Z # api.tests.test\_sentry\_scrub
2025-08-18T22:05:45.5128231Z 
2025-08-18T22:05:45.5128328Z <a id="api.tests.test_errors_json"></a>
2025-08-18T22:05:45.5128509Z 
2025-08-18T22:05:45.5128605Z # api.tests.test\_errors\_json
2025-08-18T22:05:45.5128760Z 
2025-08-18T22:05:45.5128859Z <a id="api.tests.test_llm"></a>
2025-08-18T22:05:45.5129031Z 
2025-08-18T22:05:45.5129109Z # api.tests.test\_llm
2025-08-18T22:05:45.5129242Z 
2025-08-18T22:05:45.5129348Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T22:05:45.5129535Z 
2025-08-18T22:05:45.5129620Z # api.tests.test\_sentry\_event
2025-08-18T22:05:45.5129773Z 
2025-08-18T22:05:45.5129915Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T22:05:45.5130156Z 
2025-08-18T22:05:45.5130316Z ## DummyTransport Objects
2025-08-18T22:05:45.5130464Z 
2025-08-18T22:05:45.5130535Z ```python
2025-08-18T22:05:45.5130713Z class DummyTransport()
2025-08-18T22:05:45.5130914Z ```
2025-08-18T22:05:45.5131004Z 
2025-08-18T22:05:45.5131200Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T22:05:45.5131510Z 
2025-08-18T22:05:45.5131589Z #### capture\_envelope
2025-08-18T22:05:45.5131723Z 
2025-08-18T22:05:45.5131792Z ```python
2025-08-18T22:05:45.5131977Z def capture_envelope(envelope)
2025-08-18T22:05:45.5132199Z ```
2025-08-18T22:05:45.5132286Z 
2025-08-18T22:05:45.5132420Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T22:05:45.5132657Z 
2025-08-18T22:05:45.5132745Z <a id="api.tests.test_cors"></a>
2025-08-18T22:05:45.5132907Z 
2025-08-18T22:05:45.5132990Z # api.tests.test\_cors
2025-08-18T22:05:45.5133117Z 
2025-08-18T22:05:45.5133205Z <a id="api.tests.test_imports"></a>
2025-08-18T22:05:45.5133389Z 
2025-08-18T22:05:45.5133471Z # api.tests.test\_imports
2025-08-18T22:05:45.5133610Z 
2025-08-18T22:05:45.5133703Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T22:05:45.5133887Z 
2025-08-18T22:05:45.5133972Z # api.tests.test\_rate\_limit
2025-08-18T22:05:45.5134126Z 
2025-08-18T22:05:45.5134443Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T22:05:45.5134927Z 
2025-08-18T22:05:45.5135000Z #### app
2025-08-18T22:05:45.5135102Z 
2025-08-18T22:05:45.5135172Z noqa: E402
2025-08-18T22:05:45.5135269Z 
2025-08-18T22:05:45.5135367Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T22:05:45.5135557Z 
2025-08-18T22:05:45.5135645Z # api.tests.test\_entrypoint
2025-08-18T22:05:45.5135799Z 
2025-08-18T22:05:45.5135894Z <a id="api.tests.test_health"></a>
2025-08-18T22:05:45.5136062Z 
2025-08-18T22:05:45.5136144Z # api.tests.test\_health
2025-08-18T22:05:45.5136286Z 
2025-08-18T22:05:45.5136373Z <a id="api.logging_config"></a>
2025-08-18T22:05:45.5136528Z 
2025-08-18T22:05:45.5136605Z # api.logging\_config
2025-08-18T22:05:45.5136737Z 
2025-08-18T22:05:45.5136824Z <a id="api.migrations.env"></a>
2025-08-18T22:05:45.5136978Z 
2025-08-18T22:05:45.5137062Z # api.migrations.env
2025-08-18T22:05:45.5137186Z 
2025-08-18T22:05:45.5137311Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T22:05:45.5137544Z 
2025-08-18T22:05:45.5137657Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T22:05:45.5137867Z 
2025-08-18T22:05:45.5137984Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T22:05:45.5138201Z 
2025-08-18T22:05:45.5138302Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T22:05:45.5138494Z 
2025-08-18T22:05:45.5138665Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T22:05:45.5138929Z 
2025-08-18T22:05:45.5139077Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T22:05:45.5139325Z 
2025-08-18T22:05:45.5139456Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T22:05:45.5139679Z 
2025-08-18T22:05:45.5139793Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T22:05:45.5140005Z 
2025-08-18T22:05:45.5140131Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T22:05:45.5140350Z 
2025-08-18T22:05:45.5140468Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T22:05:45.5140670Z 
2025-08-18T22:05:45.5140922Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T22:05:45.5141163Z 
2025-08-18T22:05:45.5141281Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T22:05:45.5141492Z 
2025-08-18T22:05:45.5141617Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T22:05:45.5141841Z 
2025-08-18T22:05:45.5141956Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T22:05:45.5142162Z 
2025-08-18T22:05:45.5142301Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T22:05:45.5142529Z 
2025-08-18T22:05:45.5142642Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T22:05:45.5142852Z 
2025-08-18T22:05:45.5143000Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T22:05:45.5143254Z 
2025-08-18T22:05:45.5143389Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T22:05:45.5143611Z 
2025-08-18T22:05:45.5143743Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T22:05:45.5143944Z 
2025-08-18T22:05:45.5144055Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T22:05:45.5144416Z 
2025-08-18T22:05:45.5144617Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T22:05:45.5144858Z 
2025-08-18T22:05:45.5144975Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T22:05:45.5145243Z 
2025-08-18T22:05:45.5145348Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T22:05:45.5145534Z 
2025-08-18T22:05:45.5145634Z # api.migrations.versions.0001\_baseline
2025-08-18T22:05:45.5145800Z 
2025-08-18T22:05:45.5145886Z <a id="api.migrations.versions"></a>
2025-08-18T22:05:45.5146041Z 
2025-08-18T22:05:45.5146128Z # api.migrations.versions
2025-08-18T22:05:45.5146252Z 
2025-08-18T22:05:45.5146327Z <a id="api.migrations"></a>
2025-08-18T22:05:45.5146460Z 
2025-08-18T22:05:45.5146526Z # api.migrations
2025-08-18T22:05:45.5146627Z 
2025-08-18T22:05:45.5146692Z <a id="api.db"></a>
2025-08-18T22:05:45.5146801Z 
2025-08-18T22:05:45.5146862Z # api.db
2025-08-18T22:05:45.5146952Z 
2025-08-18T22:05:45.5147049Z <a id="api.routes.stats"></a>
2025-08-18T22:05:45.5147336Z 
2025-08-18T22:05:45.5147405Z # api.routes.stats
2025-08-18T22:05:45.5147515Z 
2025-08-18T22:05:45.5147599Z <a id="api.routes.stats.kpi"></a>
2025-08-18T22:05:45.5147746Z 
2025-08-18T22:05:45.5147810Z #### kpi
2025-08-18T22:05:45.5147898Z 
2025-08-18T22:05:45.5147959Z ```python
2025-08-18T22:05:45.5148129Z @router.get("/stats/kpi")
2025-08-18T22:05:45.5148368Z def kpi() -> List[Dict[str, int]]
2025-08-18T22:05:45.5148574Z ```
2025-08-18T22:05:45.5148657Z 
2025-08-18T22:05:45.5148744Z Return KPI metrics (mock).
2025-08-18T22:05:45.5148879Z 
2025-08-18T22:05:45.5148974Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T22:05:45.5149147Z 
2025-08-18T22:05:45.5149213Z #### roi\_by\_vendor
2025-08-18T22:05:45.5149327Z 
2025-08-18T22:05:45.5149386Z ```python
2025-08-18T22:05:45.5149553Z @router.get("/stats/roi_by_vendor")
2025-08-18T22:05:45.5149788Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T22:05:45.5150016Z ```
2025-08-18T22:05:45.5150100Z 
2025-08-18T22:05:45.5150182Z Return ROI percent by vendor.
2025-08-18T22:05:45.5150325Z 
2025-08-18T22:05:45.5150413Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T22:05:45.5150575Z 
2025-08-18T22:05:45.5150638Z #### roi\_trend
2025-08-18T22:05:45.5150742Z 
2025-08-18T22:05:45.5150801Z ```python
2025-08-18T22:05:45.5150965Z @router.get("/stats/roi_trend")
2025-08-18T22:05:45.5151192Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T22:05:45.5151422Z ```
2025-08-18T22:05:45.5151499Z 
2025-08-18T22:05:45.5151570Z Return 30-day ROI trend.
2025-08-18T22:05:45.5151697Z 
2025-08-18T22:05:45.5151778Z <a id="api.routes.roi"></a>
2025-08-18T22:05:45.5151908Z 
2025-08-18T22:05:45.5151975Z # api.routes.roi
2025-08-18T22:05:45.5152086Z 
2025-08-18T22:05:45.5152166Z <a id="api.routes.health"></a>
2025-08-18T22:05:45.5152304Z 
2025-08-18T22:05:45.5152380Z # api.routes.health
2025-08-18T22:05:45.5152487Z 
2025-08-18T22:05:45.5152573Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T22:05:45.5152852Z 
2025-08-18T22:05:45.5152926Z #### MAX\_SKEW
2025-08-18T22:05:45.5153028Z 
2025-08-18T22:05:45.5153087Z seconds
2025-08-18T22:05:45.5153172Z 
2025-08-18T22:05:45.5153257Z <a id="api.routes.health.health"></a>
2025-08-18T22:05:45.5153434Z 
2025-08-18T22:05:45.5153494Z #### health
2025-08-18T22:05:45.5153579Z 
2025-08-18T22:05:45.5153643Z ```python
2025-08-18T22:05:45.5153824Z @router.get("/health", include_in_schema=False)
2025-08-18T22:05:45.5154192Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T22:05:45.5154754Z ```
2025-08-18T22:05:45.5154840Z 
2025-08-18T22:05:45.5154960Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T22:05:45.5155157Z 
2025-08-18T22:05:45.5155244Z <a id="api.routes.repository"></a>
2025-08-18T22:05:45.5155401Z 
2025-08-18T22:05:45.5155478Z # api.routes.repository
2025-08-18T22:05:45.5155599Z 
2025-08-18T22:05:45.5155677Z <a id="api.routes"></a>
2025-08-18T22:05:45.5155790Z 
2025-08-18T22:05:45.5155853Z # api.routes
2025-08-18T22:05:45.5155961Z 
2025-08-18T22:05:45.5156040Z <a id="api.models.fee"></a>
2025-08-18T22:05:45.5156167Z 
2025-08-18T22:05:45.5156233Z # api.models.fee
2025-08-18T22:05:45.5156342Z 
2025-08-18T22:05:45.5156413Z <a id="api.models"></a>
2025-08-18T22:05:45.5156523Z 
2025-08-18T22:05:45.5156592Z # api.models
2025-08-18T22:05:45.5156682Z 
2025-08-18T22:05:45.5156757Z <a id="api.roi_repository"></a>
2025-08-18T22:05:45.5156894Z 
2025-08-18T22:05:45.5156968Z # api.roi\_repository
2025-08-18T22:05:45.5157077Z 
2025-08-18T22:05:45.5157142Z <a id="api.main"></a>
2025-08-18T22:05:45.5157253Z 
2025-08-18T22:05:45.5157314Z # api.main
2025-08-18T22:05:45.5157402Z 
2025-08-18T22:05:45.5157475Z <a id="api.main.ready"></a>
2025-08-18T22:05:45.5157606Z 
2025-08-18T22:05:45.5157667Z #### ready
2025-08-18T22:05:45.5157752Z 
2025-08-18T22:05:45.5157815Z ```python
2025-08-18T22:05:45.5158068Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T22:05:45.5158493Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T22:05:45.5158973Z                                                                       str]
2025-08-18T22:05:45.5159197Z ```
2025-08-18T22:05:45.5159275Z 
2025-08-18T22:05:45.5159376Z Return 200 only when migrations are at head.
2025-08-18T22:05:45.5159542Z 
2025-08-18T22:05:45.5159611Z <a id="api.config"></a>
2025-08-18T22:05:45.5159723Z 
2025-08-18T22:05:45.5159792Z # api.config
2025-08-18T22:05:45.5159881Z 
2025-08-18T22:05:45.5159943Z <a id="etl"></a>
2025-08-18T22:05:45.5160045Z 
2025-08-18T22:05:45.5160102Z # etl
2025-08-18T22:05:45.5160183Z 
2025-08-18T22:05:45.5160261Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T22:05:45.5160408Z 
2025-08-18T22:05:45.5160478Z # etl.fba\_fee\_ingestor
2025-08-18T22:05:45.5160597Z 
2025-08-18T22:05:45.5160679Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T22:05:45.5160819Z 
2025-08-18T22:05:45.5160888Z # etl.sp\_fees\_ingestor
2025-08-18T22:05:45.5161022Z 
2025-08-18T22:05:45.5161104Z <a id="etl.keepa_ingestor"></a>
2025-08-18T22:05:45.5161292Z 
2025-08-18T22:05:45.5161360Z # etl.keepa\_ingestor
2025-08-18T22:05:45.5161474Z 
2025-08-18T22:05:45.5161539Z <a id="etl.db"></a>
2025-08-18T22:05:45.5161646Z 
2025-08-18T22:05:45.5161711Z # etl.db
2025-08-18T22:05:45.5161795Z 
2025-08-18T22:05:45.5161876Z <a id="etl.dialects.schemas"></a>
2025-08-18T22:05:45.5162016Z 
2025-08-18T22:05:45.5162095Z # etl.dialects.schemas
2025-08-18T22:05:45.5162209Z 
2025-08-18T22:05:45.5162309Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T22:05:45.5162497Z 
2025-08-18T22:05:45.5162583Z # etl.dialects.amazon\_reimbursements
2025-08-18T22:05:45.5162742Z 
2025-08-18T22:05:45.5162840Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T22:05:45.5163008Z 
2025-08-18T22:05:45.5163092Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T22:05:45.5163243Z 
2025-08-18T22:05:45.5163338Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T22:05:45.5163500Z 
2025-08-18T22:05:45.5163578Z # etl.dialects.amazon\_returns
2025-08-18T22:05:45.5163838Z 
2025-08-18T22:05:45.5163937Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T22:05:45.5164107Z 
2025-08-18T22:05:45.5164196Z # etl.dialects.amazon\_fee\_preview
2025-08-18T22:05:45.5164454Z 
2025-08-18T22:05:45.5164557Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T22:05:45.5164740Z 
2025-08-18T22:05:45.5164834Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T22:05:45.5165002Z 
2025-08-18T22:05:45.5165095Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T22:05:45.5165270Z 
2025-08-18T22:05:45.5165354Z # etl.dialects.amazon\_settlements
2025-08-18T22:05:45.5165501Z 
2025-08-18T22:05:45.5165578Z <a id="etl.dialects"></a>
2025-08-18T22:05:45.5165702Z 
2025-08-18T22:05:45.5165766Z # etl.dialects
2025-08-18T22:05:45.5165862Z 
2025-08-18T22:05:45.5165934Z <a id="ingest"></a>
2025-08-18T22:05:45.5166038Z 
2025-08-18T22:05:45.5166096Z # ingest
2025-08-18T22:05:45.5166185Z 
2025-08-18T22:05:45.5166265Z <a id="ingest.maintenance"></a>
2025-08-18T22:05:45.5166405Z 
2025-08-18T22:05:45.5166488Z # ingest.maintenance
2025-08-18T22:05:45.5166604Z 
2025-08-18T22:05:45.5166682Z <a id="ingest.copy_loader"></a>
2025-08-18T22:05:45.5166814Z 
2025-08-18T22:05:45.5166890Z # ingest.copy\_loader
2025-08-18T22:05:45.5167001Z 
2025-08-18T22:05:45.5167099Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T22:05:45.5167283Z 
2025-08-18T22:05:45.5167354Z #### copy\_df\_via\_temp
2025-08-18T22:05:45.5167473Z 
2025-08-18T22:05:45.5167534Z ```python
2025-08-18T22:05:45.5167703Z def copy_df_via_temp(engine: Engine,
2025-08-18T22:05:45.5167931Z                      df: pd.DataFrame,
2025-08-18T22:05:45.5168153Z                      target_table: str,
2025-08-18T22:05:45.5168368Z                      *,
2025-08-18T22:05:45.5168566Z                      target_schema: Optional[str] = None,
2025-08-18T22:05:45.5168822Z                      columns: Sequence[str],
2025-08-18T22:05:45.5169081Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T22:05:45.5169361Z                      analyze_after: bool = False,
2025-08-18T22:05:45.5169745Z                      connection: Any | None = None) -> int
2025-08-18T22:05:45.5169975Z ```
2025-08-18T22:05:45.5170057Z 
2025-08-18T22:05:45.5170212Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T22:05:45.5170440Z 
2025-08-18T22:05:45.5170523Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T22:05:45.5170681Z 
2025-08-18T22:05:45.5170757Z # ingest.tests.test\_smoke
2025-08-18T22:05:45.5170882Z 
2025-08-18T22:05:45.5170956Z <a id="ingest.tests"></a>
2025-08-18T22:05:45.5171083Z 
2025-08-18T22:05:45.5171146Z # ingest.tests
2025-08-18T22:05:45.5171242Z 
2025-08-18T22:05:45.5171329Z <a id="ingest.upload_router"></a>
2025-08-18T22:05:45.5171473Z 
2025-08-18T22:05:45.5171543Z # ingest.upload\_router
2025-08-18T22:05:45.5171665Z 
2025-08-18T22:05:45.5171741Z <a id="ingest.email_watcher"></a>
2025-08-18T22:05:45.5171879Z 
2025-08-18T22:05:45.5171950Z # ingest.email\_watcher
2025-08-18T22:05:45.5172068Z 
2025-08-18T22:05:45.5172158Z <a id="ingest.email_watcher.main"></a>
2025-08-18T22:05:45.5172320Z 
2025-08-18T22:05:45.5172384Z #### main
2025-08-18T22:05:45.5172470Z 
2025-08-18T22:05:45.5172530Z ```python
2025-08-18T22:05:45.5172693Z def main() -> dict[str, str]
2025-08-18T22:05:45.5172876Z ```
2025-08-18T22:05:45.5172960Z 
2025-08-18T22:05:45.5173094Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T22:05:45.5173321Z 
2025-08-18T22:05:45.5173444Z Returns {"status": "success"} when processing completes.
2025-08-18T22:05:45.5173649Z 
2025-08-18T22:05:45.5173729Z <a id="ingest.tasks"></a>
2025-08-18T22:05:45.5173851Z 
2025-08-18T22:05:45.5173914Z # ingest.tasks
2025-08-18T22:05:45.5174012Z 
2025-08-18T22:05:45.5174111Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T22:05:45.5174382Z 
2025-08-18T22:05:45.5174454Z #### task\_import\_file
2025-08-18T22:05:45.5174570Z 
2025-08-18T22:05:45.5174630Z ```python
2025-08-18T22:05:45.5174829Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T22:05:45.5175228Z def task_import_file(self: Any,
2025-08-18T22:05:45.5175435Z                      uri: str,
2025-08-18T22:05:45.5175648Z                      report_type: Optional[str] = None,
2025-08-18T22:05:45.5175922Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T22:05:45.5176150Z ```
2025-08-18T22:05:45.5176235Z 
2025-08-18T22:05:45.5176360Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T22:05:45.5176560Z 
2025-08-18T22:05:45.5176637Z <a id="ingest.celery_app"></a>
2025-08-18T22:05:45.5176777Z 
2025-08-18T22:05:45.5176846Z # ingest.celery\_app
2025-08-18T22:05:45.5176957Z 
2025-08-18T22:05:45.5177042Z <a id="ingest.ingest_router"></a>
2025-08-18T22:05:45.5177185Z 
2025-08-18T22:05:45.5177255Z # ingest.ingest\_router
2025-08-18T22:05:45.5177374Z 
2025-08-18T22:05:45.5177448Z <a id="logistics_etl"></a>
2025-08-18T22:05:45.5177571Z 
2025-08-18T22:05:45.5177635Z # logistics\_etl
2025-08-18T22:05:45.5177743Z 
2025-08-18T22:05:45.5177816Z Daily logistics ETL job.
2025-08-18T22:05:45.5177945Z 
2025-08-18T22:05:45.5178029Z <a id="logistics_etl.__main__"></a>
2025-08-18T22:05:45.5178176Z 
2025-08-18T22:05:45.5178250Z # logistics\_etl.\_\_main\_\_
2025-08-18T22:05:45.5178388Z 
2025-08-18T22:05:45.5178462Z <a id="logistics_etl.dsn"></a>
2025-08-18T22:05:45.5178593Z 
2025-08-18T22:05:45.5178659Z # logistics\_etl.dsn
2025-08-18T22:05:45.5178774Z 
2025-08-18T22:05:45.5178884Z Local DSN builder to avoid cross-service dependency.
2025-08-18T22:05:45.5179081Z 
2025-08-18T22:05:45.5179173Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T22:05:45.5179334Z 
2025-08-18T22:05:45.5179397Z #### build\_dsn
2025-08-18T22:05:45.5179493Z 
2025-08-18T22:05:45.5179557Z ```python
2025-08-18T22:05:45.5179724Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:05:45.5179941Z ```
2025-08-18T22:05:45.5180022Z 
2025-08-18T22:05:45.5180154Z Return a Postgres DSN assembled from environment variables.
2025-08-18T22:05:45.5180375Z 
2025-08-18T22:05:45.5180518Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T22:05:45.5181020Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T22:05:45.5181352Z error when any required variable is missing.
2025-08-18T22:05:45.5181527Z 
2025-08-18T22:05:45.5181618Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T22:05:45.5181782Z 
2025-08-18T22:05:45.5181862Z # logistics\_etl.tests.conftest
2025-08-18T22:05:45.5182005Z 
2025-08-18T22:05:45.5182104Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T22:05:45.5182285Z 
2025-08-18T22:05:45.5182374Z # logistics\_etl.tests.test\_repository
2025-08-18T22:05:45.5182531Z 
2025-08-18T22:05:45.5182620Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T22:05:45.5182792Z 
2025-08-18T22:05:45.5182872Z # logistics\_etl.tests.test\_cron
2025-08-18T22:05:45.5183016Z 
2025-08-18T22:05:45.5183108Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T22:05:45.5183286Z 
2025-08-18T22:05:45.5183366Z # logistics\_etl.tests.test\_imports
2025-08-18T22:05:45.5183524Z 
2025-08-18T22:05:45.5183623Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T22:05:45.5183791Z 
2025-08-18T22:05:45.5183871Z # logistics\_etl.tests.test\_smoke
2025-08-18T22:05:45.5184024Z 
2025-08-18T22:05:45.5184112Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T22:05:45.5184447Z 
2025-08-18T22:05:45.5184551Z # logistics\_etl.tests.test\_client
2025-08-18T22:05:45.5184712Z 
2025-08-18T22:05:45.5184793Z <a id="logistics_etl.tests"></a>
2025-08-18T22:05:45.5184934Z 
2025-08-18T22:05:45.5185009Z # logistics\_etl.tests
2025-08-18T22:05:45.5185122Z 
2025-08-18T22:05:45.5185197Z <a id="logistics_etl.flow"></a>
2025-08-18T22:05:45.5185335Z 
2025-08-18T22:05:45.5185404Z # logistics\_etl.flow
2025-08-18T22:05:45.5185515Z 
2025-08-18T22:05:45.5185593Z <a id="logistics_etl.client"></a>
2025-08-18T22:05:45.5185739Z 
2025-08-18T22:05:45.5185810Z # logistics\_etl.client
2025-08-18T22:05:45.5185924Z 
2025-08-18T22:05:45.5186004Z <a id="logistics_etl.cron"></a>
2025-08-18T22:05:45.5186137Z 
2025-08-18T22:05:45.5186422Z # logistics\_etl.cron
2025-08-18T22:05:45.5186538Z 
2025-08-18T22:05:45.5186619Z <a id="logistics_etl.db"></a>
2025-08-18T22:05:45.5186750Z 
2025-08-18T22:05:45.5225627Z # logistics\_etl.db
2025-08-18T22:05:45.5225894Z 
2025-08-18T22:05:45.5226089Z <a id="logistics_etl.repository"></a>
2025-08-18T22:05:45.5226443Z 
2025-08-18T22:05:45.5226608Z # logistics\_etl.repository
2025-08-18T22:05:45.5226887Z 
2025-08-18T22:05:45.5227027Z <a id="alert_bot"></a>
2025-08-18T22:05:45.5227281Z 
2025-08-18T22:05:45.5227415Z # alert\_bot
2025-08-18T22:05:45.5227624Z 
2025-08-18T22:05:45.5227817Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T22:05:45.5228197Z 
2025-08-18T22:05:45.5228362Z # alert\_bot.tests.test\_smoke
2025-08-18T22:05:45.5228673Z 
2025-08-18T22:05:45.5228846Z <a id="alert_bot.tests"></a>
2025-08-18T22:05:45.5229160Z 
2025-08-18T22:05:45.5229320Z # alert\_bot.tests
2025-08-18T22:05:45.5229565Z 
2025-08-18T22:05:45.5229745Z <a id="alert_bot.alert_bot"></a>
2025-08-18T22:05:45.5230085Z 
2025-08-18T22:05:45.5230239Z # alert\_bot.alert\_bot
2025-08-18T22:05:45.5230531Z 
2025-08-18T22:05:45.5230751Z <a id="alert_bot.rules"></a>
2025-08-18T22:05:45.5231172Z 
2025-08-18T22:05:45.5231319Z # alert\_bot.rules
2025-08-18T22:05:45.5231564Z 
2025-08-18T22:05:45.5231712Z <a id="common"></a>
2025-08-18T22:05:45.5231952Z 
2025-08-18T22:05:45.5232086Z # common
2025-08-18T22:05:45.5232271Z 
2025-08-18T22:05:45.5232418Z <a id="common.dsn"></a>
2025-08-18T22:05:45.5232673Z 
2025-08-18T22:05:45.5232803Z # common.dsn
2025-08-18T22:05:45.5233001Z 
2025-08-18T22:05:45.5233180Z <a id="common.dsn.build_dsn"></a>
2025-08-18T22:05:45.5233472Z 
2025-08-18T22:05:45.5233577Z #### build\_dsn
2025-08-18T22:05:45.5233745Z 
2025-08-18T22:05:45.5233872Z ```python
2025-08-18T22:05:45.5234164Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:05:45.5234714Z ```
2025-08-18T22:05:45.5234859Z 
2025-08-18T22:05:45.5235063Z Return a Postgres DSN, validating required variables.
2025-08-18T22:05:45.5235419Z 
2025-08-18T22:05:45.5235741Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T22:05:45.5236707Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T22:05:45.5237418Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T22:05:45.5237835Z missing.
2025-08-18T22:05:45.5237930Z 
2025-08-18T22:05:45.5238016Z <a id="common.models_vendor"></a>
2025-08-18T22:05:45.5238170Z 
2025-08-18T22:05:45.5238243Z # common.models\_vendor
2025-08-18T22:05:45.5238361Z 
2025-08-18T22:05:45.5238488Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T22:05:45.5238659Z 
2025-08-18T22:05:45.5238724Z ## Vendor Objects
2025-08-18T22:05:45.5238826Z 
2025-08-18T22:05:45.5238895Z ```python
2025-08-18T22:05:45.5239048Z class Vendor(Base)
2025-08-18T22:05:45.5239214Z ```
2025-08-18T22:05:45.5239294Z 
2025-08-18T22:05:45.5239372Z Vendor of inventory items.
2025-08-18T22:05:45.5239507Z 
2025-08-18T22:05:45.5239610Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T22:05:45.5239805Z 
2025-08-18T22:05:45.5239882Z ## VendorPrice Objects
2025-08-18T22:05:45.5239996Z 
2025-08-18T22:05:45.5240057Z ```python
2025-08-18T22:05:45.5240218Z class VendorPrice(Base)
2025-08-18T22:05:45.5240386Z ```
2025-08-18T22:05:45.5240465Z 
2025-08-18T22:05:45.5240570Z Association table linking vendors to pricing.
2025-08-18T22:05:45.5240748Z 
2025-08-18T22:05:45.5240820Z <a id="common.db_url"></a>
2025-08-18T22:05:45.5240950Z 
2025-08-18T22:05:45.5241015Z # common.db\_url
2025-08-18T22:05:45.5241115Z 
2025-08-18T22:05:45.5241200Z <a id="common.db_url.build_url"></a>
2025-08-18T22:05:45.5241352Z 
2025-08-18T22:05:45.5241413Z #### build\_url
2025-08-18T22:05:45.5241510Z 
2025-08-18T22:05:45.5241576Z ```python
2025-08-18T22:05:45.5241744Z def build_url(async_: bool = True) -> str
2025-08-18T22:05:45.5241966Z ```
2025-08-18T22:05:45.5242043Z 
2025-08-18T22:05:45.5242145Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:05:45.5242320Z 
2025-08-18T22:05:45.5242396Z <a id="common.keepa"></a>
2025-08-18T22:05:45.5242674Z 
2025-08-18T22:05:45.5242746Z # common.keepa
2025-08-18T22:05:45.5242848Z 
2025-08-18T22:05:45.5242918Z <a id="common.llm"></a>
2025-08-18T22:05:45.5243031Z 
2025-08-18T22:05:45.5243099Z # common.llm
2025-08-18T22:05:45.5243190Z 
2025-08-18T22:05:45.5243266Z <a id="common.settings"></a>
2025-08-18T22:05:45.5243405Z 
2025-08-18T22:05:45.5243470Z # common.settings
2025-08-18T22:05:45.5243574Z 
2025-08-18T22:05:45.5243647Z <a id="common.db"></a>
2025-08-18T22:05:45.5243762Z 
2025-08-18T22:05:45.5243821Z # common.db
2025-08-18T22:05:45.5243908Z 
2025-08-18T22:05:45.5244003Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T22:05:45.5244168Z 
2025-08-18T22:05:45.5244411Z #### build\_sqlalchemy\_url
2025-08-18T22:05:45.5244586Z 
2025-08-18T22:05:45.5244647Z ```python
2025-08-18T22:05:45.5244814Z def build_sqlalchemy_url() -> str
2025-08-18T22:05:45.5245018Z ```
2025-08-18T22:05:45.5245098Z 
2025-08-18T22:05:45.5245192Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:05:45.5245364Z 
2025-08-18T22:05:45.5245454Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T22:05:45.5245615Z 
2025-08-18T22:05:45.5245691Z #### build\_asyncpg\_dsn
2025-08-18T22:05:45.5245810Z 
2025-08-18T22:05:45.5245868Z ```python
2025-08-18T22:05:45.5246034Z def build_asyncpg_dsn() -> str
2025-08-18T22:05:45.5246221Z ```
2025-08-18T22:05:45.5246303Z 
2025-08-18T22:05:45.5246426Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:05:45.5246632Z 
2025-08-18T22:05:45.5246719Z <a id="common.db.refresh_mvs"></a>
2025-08-18T22:05:45.5246867Z 
2025-08-18T22:05:45.5246930Z #### refresh\_mvs
2025-08-18T22:05:45.5247036Z 
2025-08-18T22:05:45.5247095Z ```python
2025-08-18T22:05:45.5247278Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:05:45.5247528Z ```
2025-08-18T22:05:45.5247604Z 
2025-08-18T22:05:45.5247736Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:05:45.5247950Z 
2025-08-18T22:05:45.5248023Z <a id="common.config"></a>
2025-08-18T22:05:45.5248155Z 
2025-08-18T22:05:45.5248401Z # common.config
2025-08-18T22:05:45.5248500Z 
2025-08-18T22:05:45.5248570Z <a id="common.base"></a>
2025-08-18T22:05:45.5248694Z 
2025-08-18T22:05:45.5248756Z # common.base
2025-08-18T22:05:45.5248852Z 
2025-08-18T22:05:45.5248930Z <a id="common.base.Base"></a>
2025-08-18T22:05:45.5249073Z 
2025-08-18T22:05:45.5249135Z ## Base Objects
2025-08-18T22:05:45.5249230Z 
2025-08-18T22:05:45.5249295Z ```python
2025-08-18T22:05:45.5249453Z class Base(DeclarativeBase)
2025-08-18T22:05:45.5249641Z ```
2025-08-18T22:05:45.5249718Z 
2025-08-18T22:05:45.5249800Z Base class for SQLAlchemy models.
2025-08-18T22:05:45.5249950Z 
2025-08-18T22:05:45.5250022Z <a id="repricer"></a>
2025-08-18T22:05:45.5250134Z 
2025-08-18T22:05:45.5250196Z # repricer
2025-08-18T22:05:45.5250290Z 
2025-08-18T22:05:45.5250375Z <a id="repricer.app.schemas"></a>
2025-08-18T22:05:45.5250523Z 
2025-08-18T22:05:45.5250602Z # repricer.app.schemas
2025-08-18T22:05:45.5250720Z 
2025-08-18T22:05:45.5250806Z <a id="repricer.app.deps"></a>
2025-08-18T22:05:45.5250960Z 
2025-08-18T22:05:45.5251031Z # repricer.app.deps
2025-08-18T22:05:45.5251139Z 
2025-08-18T22:05:45.5251250Z Placeholder module for Keepa / SP-API clients.
2025-08-18T22:05:45.5251436Z 
2025-08-18T22:05:45.5251517Z <a id="repricer.app.logic"></a>
2025-08-18T22:05:45.5251655Z 
2025-08-18T22:05:45.5251732Z # repricer.app.logic
2025-08-18T22:05:45.5251846Z 
2025-08-18T22:05:45.5251939Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T22:05:45.5252116Z 
2025-08-18T22:05:45.5252177Z #### MIN\_MARGIN
2025-08-18T22:05:45.5252275Z 
2025-08-18T22:05:45.5252334Z 15 % ROI
2025-08-18T22:05:45.5252425Z 
2025-08-18T22:05:45.5252524Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T22:05:45.5252700Z 
2025-08-18T22:05:45.5252775Z #### compute\_price
2025-08-18T22:05:45.5252879Z 
2025-08-18T22:05:45.5252940Z ```python
2025-08-18T22:05:45.5253187Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T22:05:45.5253482Z ```
2025-08-18T22:05:45.5253689Z 
2025-08-18T22:05:45.5253798Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T22:05:45.5254070Z Replace with real competitive logic later.
2025-08-18T22:05:45.5254403Z 
2025-08-18T22:05:45.5254548Z <a id="repricer.app.main"></a>
2025-08-18T22:05:45.5254718Z 
2025-08-18T22:05:45.5254794Z # repricer.app.main
2025-08-18T22:05:45.5254900Z 
2025-08-18T22:05:45.5254973Z <a id="repricer.app"></a>
2025-08-18T22:05:45.5255098Z 
2025-08-18T22:05:45.5255168Z # repricer.app
2025-08-18T22:05:45.5255263Z 
2025-08-18T22:05:45.5255350Z <a id="repricer.tests.test_imports"></a>
2025-08-18T22:05:45.5255519Z 
2025-08-18T22:05:45.5255597Z # repricer.tests.test\_imports
2025-08-18T22:05:45.5255732Z 
2025-08-18T22:05:45.5255821Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T22:05:45.5255978Z 
2025-08-18T22:05:45.5256061Z # repricer.tests.test\_smoke
2025-08-18T22:05:45.5256191Z 
2025-08-18T22:05:45.5256270Z <a id="repricer.tests"></a>
2025-08-18T22:05:45.5256395Z 
2025-08-18T22:05:45.5256467Z # repricer.tests
2025-08-18T22:05:45.5256577Z 
2025-08-18T22:05:45.5256640Z <a id="db"></a>
2025-08-18T22:05:45.5256734Z 
2025-08-18T22:05:45.5256792Z # db
2025-08-18T22:05:45.5256877Z 
2025-08-18T22:05:45.5256948Z <a id="db.utils.views"></a>
2025-08-18T22:05:45.5257071Z 
2025-08-18T22:05:45.5257140Z # db.utils.views
2025-08-18T22:05:45.5257237Z 
2025-08-18T22:05:45.5257324Z <a id="db.utils.views.replace_view"></a>
2025-08-18T22:05:45.5257490Z 
2025-08-18T22:05:45.5257555Z #### replace\_view
2025-08-18T22:05:45.5257656Z 
2025-08-18T22:05:45.5257714Z ```python
2025-08-18T22:05:45.5257905Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T22:05:45.5258148Z ```
2025-08-18T22:05:45.5258230Z 
2025-08-18T22:05:45.5258314Z Drop and recreate a SQL view atomically.
2025-08-18T22:05:45.5258474Z 
2025-08-18T22:05:45.5258546Z <a id="db.utils"></a>
2025-08-18T22:05:45.5258659Z 
2025-08-18T22:05:45.5258721Z # db.utils
2025-08-18T22:05:45.5258813Z 
2025-08-18T22:05:45.5258889Z <a id="price_importer"></a>
2025-08-18T22:05:45.5259023Z 
2025-08-18T22:05:45.5259220Z # price\_importer
2025-08-18T22:05:45.5259334Z 
2025-08-18T22:05:45.5259436Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T22:05:45.5259617Z 
2025-08-18T22:05:45.5259712Z # price\_importer.services\_common.dsn
2025-08-18T22:05:45.5259878Z 
2025-08-18T22:05:45.5260009Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T22:05:45.5260231Z 
2025-08-18T22:05:45.5260295Z #### build\_dsn
2025-08-18T22:05:45.5260394Z 
2025-08-18T22:05:45.5260457Z ```python
2025-08-18T22:05:45.5260631Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:05:45.5260850Z ```
2025-08-18T22:05:45.5260934Z 
2025-08-18T22:05:45.5260999Z Return safe DSN.
2025-08-18T22:05:45.5261100Z 
2025-08-18T22:05:45.5261440Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T22:05:45.5261641Z 
2025-08-18T22:05:45.5261764Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T22:05:45.5261970Z 
2025-08-18T22:05:45.5262077Z # price\_importer.services\_common.models\_vendor
2025-08-18T22:05:45.5262279Z 
2025-08-18T22:05:45.5262389Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T22:05:45.5262570Z 
2025-08-18T22:05:45.5262663Z # price\_importer.services\_common.db\_url
2025-08-18T22:05:45.5262830Z 
2025-08-18T22:05:45.5262967Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T22:05:45.5263176Z 
2025-08-18T22:05:45.5263239Z #### build\_url
2025-08-18T22:05:45.5263342Z 
2025-08-18T22:05:45.5263404Z ```python
2025-08-18T22:05:45.5263571Z def build_url(async_: bool = True) -> str
2025-08-18T22:05:45.5263792Z ```
2025-08-18T22:05:45.5263872Z 
2025-08-18T22:05:45.5263969Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:05:45.5264136Z 
2025-08-18T22:05:45.5264393Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T22:05:45.5264637Z 
2025-08-18T22:05:45.5264731Z # price\_importer.services\_common.keepa
2025-08-18T22:05:45.5264897Z 
2025-08-18T22:05:45.5264995Z <a id="price_importer.services_common.llm"></a>
2025-08-18T22:05:45.5265311Z 
2025-08-18T22:05:45.5265400Z # price\_importer.services\_common.llm
2025-08-18T22:05:45.5265557Z 
2025-08-18T22:05:45.5265675Z <a id="price_importer.services_common.settings"></a>
2025-08-18T22:05:45.5265864Z 
2025-08-18T22:05:45.5265957Z # price\_importer.services\_common.settings
2025-08-18T22:05:45.5266130Z 
2025-08-18T22:05:45.5266226Z <a id="price_importer.services_common.db"></a>
2025-08-18T22:05:45.5266398Z 
2025-08-18T22:05:45.5266483Z # price\_importer.services\_common.db
2025-08-18T22:05:45.5266644Z 
2025-08-18T22:05:45.5266794Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T22:05:45.5267026Z 
2025-08-18T22:05:45.5267106Z #### build\_sqlalchemy\_url
2025-08-18T22:05:45.5267233Z 
2025-08-18T22:05:45.5267297Z ```python
2025-08-18T22:05:45.5267468Z def build_sqlalchemy_url() -> str
2025-08-18T22:05:45.5267666Z ```
2025-08-18T22:05:45.5267752Z 
2025-08-18T22:05:45.5267842Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:05:45.5268014Z 
2025-08-18T22:05:45.5268161Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T22:05:45.5268382Z 
2025-08-18T22:05:45.5268455Z #### build\_asyncpg\_dsn
2025-08-18T22:05:45.5268577Z 
2025-08-18T22:05:45.5268643Z ```python
2025-08-18T22:05:45.5268806Z def build_asyncpg_dsn() -> str
2025-08-18T22:05:45.5269000Z ```
2025-08-18T22:05:45.5269078Z 
2025-08-18T22:05:45.5269204Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:05:45.5269414Z 
2025-08-18T22:05:45.5269535Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T22:05:45.5269735Z 
2025-08-18T22:05:45.5269803Z #### refresh\_mvs
2025-08-18T22:05:45.5269905Z 
2025-08-18T22:05:45.5269963Z ```python
2025-08-18T22:05:45.5270156Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:05:45.5270395Z ```
2025-08-18T22:05:45.5270478Z 
2025-08-18T22:05:45.5270609Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:05:45.5270815Z 
2025-08-18T22:05:45.5270917Z <a id="price_importer.services_common"></a>
2025-08-18T22:05:45.5271198Z 
2025-08-18T22:05:45.5271284Z # price\_importer.services\_common
2025-08-18T22:05:45.5271432Z 
2025-08-18T22:05:45.5271536Z <a id="price_importer.services_common.base"></a>
2025-08-18T22:05:45.5271714Z 
2025-08-18T22:05:45.5271801Z # price\_importer.services\_common.base
2025-08-18T22:05:45.5271968Z 
2025-08-18T22:05:45.5272056Z <a id="price_importer.normaliser"></a>
2025-08-18T22:05:45.5272214Z 
2025-08-18T22:05:45.5272298Z # price\_importer.normaliser
2025-08-18T22:05:45.5272432Z 
2025-08-18T22:05:45.5272531Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T22:05:45.5272710Z 
2025-08-18T22:05:45.5272802Z # price\_importer.common.models\_vendor
2025-08-18T22:05:45.5272960Z 
2025-08-18T22:05:45.5273047Z <a id="price_importer.common.db_url"></a>
2025-08-18T22:05:45.5273221Z 
2025-08-18T22:05:45.5273302Z # price\_importer.common.db\_url
2025-08-18T22:05:45.5273447Z 
2025-08-18T22:05:45.5273554Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T22:05:45.5273745Z 
2025-08-18T22:05:45.5273806Z #### make\_dsn
2025-08-18T22:05:45.5273901Z 
2025-08-18T22:05:45.5273967Z ```python
2025-08-18T22:05:45.5274131Z def make_dsn(async_: bool = False) -> str
2025-08-18T22:05:45.5274577Z ```
2025-08-18T22:05:45.5274666Z 
2025-08-18T22:05:45.5274783Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T22:05:45.5274983Z 
2025-08-18T22:05:45.5275088Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T22:05:45.5275273Z 
2025-08-18T22:05:45.5275342Z #### build\_url
2025-08-18T22:05:45.5275438Z 
2025-08-18T22:05:45.5275498Z ```python
2025-08-18T22:05:45.5275671Z def build_url(async_: bool = False) -> str
2025-08-18T22:05:45.5275887Z ```
2025-08-18T22:05:45.5275970Z 
2025-08-18T22:05:45.5276087Z Return Postgres DSN built from environment variables.
2025-08-18T22:05:45.5276281Z 
2025-08-18T22:05:45.5276362Z <a id="price_importer.common"></a>
2025-08-18T22:05:45.5276515Z 
2025-08-18T22:05:45.5276590Z # price\_importer.common
2025-08-18T22:05:45.5276840Z 
2025-08-18T22:05:45.5276942Z <a id="price_importer.common.base"></a>
2025-08-18T22:05:45.5277103Z 
2025-08-18T22:05:45.5277184Z # price\_importer.common.base
2025-08-18T22:05:45.5277329Z 
2025-08-18T22:05:45.5277423Z <a id="price_importer.tests.conftest"></a>
2025-08-18T22:05:45.5277590Z 
2025-08-18T22:05:45.5277671Z # price\_importer.tests.conftest
2025-08-18T22:05:45.5277845Z 
2025-08-18T22:05:45.5277944Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T22:05:45.5278117Z 
2025-08-18T22:05:45.5278208Z # price\_importer.tests.test\_reader
2025-08-18T22:05:45.5278361Z 
2025-08-18T22:05:45.5278458Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T22:05:45.5278650Z 
2025-08-18T22:05:45.5278736Z # price\_importer.tests.test\_imports
2025-08-18T22:05:45.5278891Z 
2025-08-18T22:05:45.5278985Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T22:05:45.5279157Z 
2025-08-18T22:05:45.5279238Z # price\_importer.tests.test\_smoke
2025-08-18T22:05:45.5279387Z 
2025-08-18T22:05:45.5279500Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T22:05:45.5279685Z 
2025-08-18T22:05:45.5279772Z # price\_importer.tests.test\_normaliser
2025-08-18T22:05:45.5279939Z 
2025-08-18T22:05:45.5280022Z <a id="price_importer.tests"></a>
2025-08-18T22:05:45.5280167Z 
2025-08-18T22:05:45.5280241Z # price\_importer.tests
2025-08-18T22:05:45.5280364Z 
2025-08-18T22:05:45.5280444Z <a id="price_importer.reader"></a>
2025-08-18T22:05:45.5280589Z 
2025-08-18T22:05:45.5280668Z # price\_importer.reader
2025-08-18T22:05:45.5280789Z 
2025-08-18T22:05:45.5280876Z <a id="price_importer.repository"></a>
2025-08-18T22:05:45.5281037Z 
2025-08-18T22:05:45.5281121Z # price\_importer.repository
2025-08-18T22:05:45.5281255Z 
2025-08-18T22:05:45.5281335Z <a id="price_importer.import"></a>
2025-08-18T22:05:45.5281486Z 
2025-08-18T22:05:45.5281559Z # price\_importer.import
2025-08-18T22:05:45.5281678Z 
2025-08-18T22:05:45.5281751Z <a id="fees_h10"></a>
2025-08-18T22:05:45.5281860Z 
2025-08-18T22:05:45.5281926Z # fees\_h10
2025-08-18T22:05:45.5282135Z 
2025-08-18T22:05:45.5282211Z <a id="fees_h10.worker"></a>
2025-08-18T22:05:45.5282337Z 
2025-08-18T22:05:45.5282402Z # fees\_h10.worker
2025-08-18T22:05:45.5282508Z 
2025-08-18T22:05:45.5282600Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T22:05:45.5282771Z 
2025-08-18T22:05:45.5282847Z #### list\_active\_asins
2025-08-18T22:05:45.5282963Z 
2025-08-18T22:05:45.5283022Z ```python
2025-08-18T22:05:45.5283192Z def list_active_asins() -> list[str]
2025-08-18T22:05:45.5283393Z ```
2025-08-18T22:05:45.5283476Z 
2025-08-18T22:05:45.5283584Z Return known ASINs or an empty list if unavailable.
2025-08-18T22:05:45.5283772Z 
2025-08-18T22:05:45.5283854Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T22:05:45.5284013Z 
2025-08-18T22:05:45.5284088Z # fees\_h10.tests.test\_smoke
2025-08-18T22:05:45.5284221Z 
2025-08-18T22:05:45.5284497Z <a id="fees_h10.tests"></a>
2025-08-18T22:05:45.5284643Z 
2025-08-18T22:05:45.5284706Z # fees\_h10.tests
2025-08-18T22:05:45.5284817Z 
2025-08-18T22:05:45.5284895Z <a id="fees_h10.client"></a>
2025-08-18T22:05:45.5285023Z 
2025-08-18T22:05:45.5285094Z # fees\_h10.client
2025-08-18T22:05:45.5285199Z 
2025-08-18T22:05:45.5285277Z <a id="fees_h10.repository"></a>
2025-08-18T22:05:45.5285416Z 
2025-08-18T22:05:45.5285490Z # fees\_h10.repository
2025-08-18T22:05:45.5285603Z 
2025-08-18T22:05:45.5285671Z <a id="emailer"></a>
2025-08-18T22:05:45.5285786Z 
2025-08-18T22:05:45.5285845Z # emailer
2025-08-18T22:05:45.5285931Z 
2025-08-18T22:05:45.5286028Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T22:05:45.5286212Z 
2025-08-18T22:05:45.5286299Z # emailer.tests.test\_import\_emailer
2025-08-18T22:05:45.5286453Z 
2025-08-18T22:05:45.5286540Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T22:05:45.5286691Z 
2025-08-18T22:05:45.5286767Z # emailer.tests.test\_smoke
2025-08-18T22:05:45.5286899Z 
2025-08-18T22:05:45.5286979Z <a id="emailer.tests"></a>
2025-08-18T22:05:45.5287102Z 
2025-08-18T22:05:45.5287168Z # emailer.tests
2025-08-18T22:05:45.5287403Z 
2025-08-18T22:05:45.5287490Z <a id="emailer.generate_body"></a>
2025-08-18T22:05:45.5306854Z 
2025-08-18T22:05:45.5307008Z # emailer.generate\_body
2025-08-18T22:05:45.5307242Z 
2025-08-18T22:05:45.5307363Z <a id="llm_server"></a>
2025-08-18T22:05:45.5307551Z 
2025-08-18T22:05:45.5307658Z # llm\_server
2025-08-18T22:05:45.5307805Z 
2025-08-18T22:05:45.5307918Z <a id="llm_server.app"></a>
2025-08-18T22:05:45.5308117Z 
2025-08-18T22:05:45.5308238Z # llm\_server.app
2025-08-18T22:05:45.5308403Z 
