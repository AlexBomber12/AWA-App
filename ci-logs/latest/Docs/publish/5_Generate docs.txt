2025-08-17T16:07:07.2050026Z ##[group]Run pydoc-markdown
2025-08-17T16:07:07.2050305Z [36;1mpydoc-markdown[0m
2025-08-17T16:07:07.2091424Z shell: /usr/bin/bash -e {0}
2025-08-17T16:07:07.2091670Z env:
2025-08-17T16:07:07.2091898Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:07:07.2092289Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T16:07:07.2092668Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:07:07.2093000Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:07:07.2093330Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T16:07:07.2093654Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T16:07:07.2094146Z ##[endgroup]
2025-08-17T16:07:07.8494335Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T16:07:07.8495233Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T16:07:07.8495879Z In "pydoc-markdown.yml"
2025-08-17T16:07:07.8496444Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T16:07:07.8497239Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T16:07:07.8498204Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T16:07:07.8498869Z 
2025-08-17T16:07:08.0740276Z <a id="__init__"></a>
2025-08-17T16:07:08.0740801Z 
2025-08-17T16:07:08.0740955Z # \_\_init\_\_
2025-08-17T16:07:08.0741201Z 
2025-08-17T16:07:08.0741359Z <a id="api"></a>
2025-08-17T16:07:08.0741602Z 
2025-08-17T16:07:08.0741741Z # api
2025-08-17T16:07:08.0741962Z 
2025-08-17T16:07:08.0742150Z <a id="api.tests.test_llm"></a>
2025-08-17T16:07:08.0742473Z 
2025-08-17T16:07:08.0742667Z # api.tests.test\_llm
2025-08-17T16:07:08.0742950Z 
2025-08-17T16:07:08.0743145Z <a id="api.tests.test_imports"></a>
2025-08-17T16:07:08.0743531Z 
2025-08-17T16:07:08.0743707Z # api.tests.test\_imports
2025-08-17T16:07:08.0744346Z 
2025-08-17T16:07:08.0744558Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T16:07:08.0745337Z 
2025-08-17T16:07:08.0745520Z # api.tests.test\_entrypoint
2025-08-17T16:07:08.0745877Z 
2025-08-17T16:07:08.0746090Z <a id="api.tests.test_health"></a>
2025-08-17T16:07:08.0746449Z 
2025-08-17T16:07:08.0746617Z # api.tests.test\_health
2025-08-17T16:07:08.0746913Z 
2025-08-17T16:07:08.0747101Z <a id="api.migrations.env"></a>
2025-08-17T16:07:08.0747427Z 
2025-08-17T16:07:08.0747599Z # api.migrations.env
2025-08-17T16:07:08.0747878Z 
2025-08-17T16:07:08.0748195Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T16:07:08.0748707Z 
2025-08-17T16:07:08.0748961Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T16:07:08.0749401Z 
2025-08-17T16:07:08.0749659Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T16:07:08.0750086Z 
2025-08-17T16:07:08.0750296Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T16:07:08.0750640Z 
2025-08-17T16:07:08.0750958Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T16:07:08.0751440Z 
2025-08-17T16:07:08.0751706Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T16:07:08.0752153Z 
2025-08-17T16:07:08.0752417Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T16:07:08.0752847Z 
2025-08-17T16:07:08.0753071Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T16:07:08.0753477Z 
2025-08-17T16:07:08.0753737Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T16:07:08.0754399Z 
2025-08-17T16:07:08.0754616Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T16:07:08.0754985Z 
2025-08-17T16:07:08.0755232Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T16:07:08.0755650Z 
2025-08-17T16:07:08.0755877Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T16:07:08.0756238Z 
2025-08-17T16:07:08.0756414Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T16:07:08.0756658Z 
2025-08-17T16:07:08.0756782Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T16:07:08.0756998Z 
2025-08-17T16:07:08.0757143Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T16:07:08.0757658Z 
2025-08-17T16:07:08.0757782Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T16:07:08.0757997Z 
2025-08-17T16:07:08.0758144Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T16:07:08.0758380Z 
2025-08-17T16:07:08.0758505Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T16:07:08.0758729Z 
2025-08-17T16:07:08.0758854Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T16:07:08.0759063Z 
2025-08-17T16:07:08.0759160Z # api.migrations.versions.0001\_baseline
2025-08-17T16:07:08.0759337Z 
2025-08-17T16:07:08.0759429Z <a id="api.migrations.versions"></a>
2025-08-17T16:07:08.0759594Z 
2025-08-17T16:07:08.0759676Z # api.migrations.versions
2025-08-17T16:07:08.0759809Z 
2025-08-17T16:07:08.0759887Z <a id="api.migrations"></a>
2025-08-17T16:07:08.0760030Z 
2025-08-17T16:07:08.0760100Z # api.migrations
2025-08-17T16:07:08.0760208Z 
2025-08-17T16:07:08.0760281Z <a id="api.db"></a>
2025-08-17T16:07:08.0760389Z 
2025-08-17T16:07:08.0760455Z # api.db
2025-08-17T16:07:08.0760541Z 
2025-08-17T16:07:08.0760627Z <a id="api.routes.stats"></a>
2025-08-17T16:07:08.0760769Z 
2025-08-17T16:07:08.0760836Z # api.routes.stats
2025-08-17T16:07:08.0760946Z 
2025-08-17T16:07:08.0761032Z <a id="api.routes.stats.kpi"></a>
2025-08-17T16:07:08.0761180Z 
2025-08-17T16:07:08.0761242Z #### kpi
2025-08-17T16:07:08.0761335Z 
2025-08-17T16:07:08.0761399Z ```python
2025-08-17T16:07:08.0761569Z @router.get("/stats/kpi")
2025-08-17T16:07:08.0761795Z def kpi() -> List[Dict[str, int]]
2025-08-17T16:07:08.0761999Z ```
2025-08-17T16:07:08.0762085Z 
2025-08-17T16:07:08.0762164Z Return KPI metrics (mock).
2025-08-17T16:07:08.0762297Z 
2025-08-17T16:07:08.0762396Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T16:07:08.0762571Z 
2025-08-17T16:07:08.0762641Z #### roi\_by\_vendor
2025-08-17T16:07:08.0762756Z 
2025-08-17T16:07:08.0762817Z ```python
2025-08-17T16:07:08.0762986Z @router.get("/stats/roi_by_vendor")
2025-08-17T16:07:08.0763344Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T16:07:08.0763574Z ```
2025-08-17T16:07:08.0763654Z 
2025-08-17T16:07:08.0763736Z Return ROI percent by vendor.
2025-08-17T16:07:08.0763878Z 
2025-08-17T16:07:08.0764196Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T16:07:08.0764369Z 
2025-08-17T16:07:08.0764438Z #### roi\_trend
2025-08-17T16:07:08.0764545Z 
2025-08-17T16:07:08.0764605Z ```python
2025-08-17T16:07:08.0764773Z @router.get("/stats/roi_trend")
2025-08-17T16:07:08.0765004Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T16:07:08.0765236Z ```
2025-08-17T16:07:08.0765315Z 
2025-08-17T16:07:08.0765392Z Return 30-day ROI trend.
2025-08-17T16:07:08.0765520Z 
2025-08-17T16:07:08.0765599Z <a id="api.routes.roi"></a>
2025-08-17T16:07:08.0765730Z 
2025-08-17T16:07:08.0765798Z # api.routes.roi
2025-08-17T16:07:08.0765984Z 
2025-08-17T16:07:08.0766067Z <a id="api.routes.health"></a>
2025-08-17T16:07:08.0766238Z 
2025-08-17T16:07:08.0766308Z # api.routes.health
2025-08-17T16:07:08.0766422Z 
2025-08-17T16:07:08.0766516Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T16:07:08.0766682Z 
2025-08-17T16:07:08.0766744Z #### MAX\_SKEW
2025-08-17T16:07:08.0766838Z 
2025-08-17T16:07:08.0766905Z seconds
2025-08-17T16:07:08.0766988Z 
2025-08-17T16:07:08.0767077Z <a id="api.routes.health.health"></a>
2025-08-17T16:07:08.0767236Z 
2025-08-17T16:07:08.0767296Z #### health
2025-08-17T16:07:08.0767382Z 
2025-08-17T16:07:08.0767444Z ```python
2025-08-17T16:07:08.0767633Z @router.get("/health", include_in_schema=False)
2025-08-17T16:07:08.0768004Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T16:07:08.0768331Z ```
2025-08-17T16:07:08.0768408Z 
2025-08-17T16:07:08.0768529Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T16:07:08.0768719Z 
2025-08-17T16:07:08.0768806Z <a id="api.routes.repository"></a>
2025-08-17T16:07:08.0768965Z 
2025-08-17T16:07:08.0769039Z # api.routes.repository
2025-08-17T16:07:08.0769157Z 
2025-08-17T16:07:08.0769231Z <a id="api.routes"></a>
2025-08-17T16:07:08.0769700Z 
2025-08-17T16:07:08.0769821Z # api.routes
2025-08-17T16:07:08.0769997Z 
2025-08-17T16:07:08.0770146Z <a id="api.models.fee"></a>
2025-08-17T16:07:08.0770386Z 
2025-08-17T16:07:08.0770511Z # api.models.fee
2025-08-17T16:07:08.0770708Z 
2025-08-17T16:07:08.0770839Z <a id="api.models"></a>
2025-08-17T16:07:08.0771052Z 
2025-08-17T16:07:08.0771170Z # api.models
2025-08-17T16:07:08.0771351Z 
2025-08-17T16:07:08.0771496Z <a id="api.roi_repository"></a>
2025-08-17T16:07:08.0771704Z 
2025-08-17T16:07:08.0771784Z # api.roi\_repository
2025-08-17T16:07:08.0771900Z 
2025-08-17T16:07:08.0771967Z <a id="api.main"></a>
2025-08-17T16:07:08.0772078Z 
2025-08-17T16:07:08.0772142Z # api.main
2025-08-17T16:07:08.0772231Z 
2025-08-17T16:07:08.0772308Z <a id="api.main.ready"></a>
2025-08-17T16:07:08.0772441Z 
2025-08-17T16:07:08.0772502Z #### ready
2025-08-17T16:07:08.0772587Z 
2025-08-17T16:07:08.0772655Z ```python
2025-08-17T16:07:08.0772908Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T16:07:08.0773345Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T16:07:08.0773737Z                                                                       str]
2025-08-17T16:07:08.0774179Z ```
2025-08-17T16:07:08.0774271Z 
2025-08-17T16:07:08.0774371Z Return 200 only when migrations are at head.
2025-08-17T16:07:08.0774555Z 
2025-08-17T16:07:08.0774627Z <a id="api.config"></a>
2025-08-17T16:07:08.0774745Z 
2025-08-17T16:07:08.0774815Z # api.config
2025-08-17T16:07:08.0774908Z 
2025-08-17T16:07:08.0774972Z <a id="etl"></a>
2025-08-17T16:07:08.0775073Z 
2025-08-17T16:07:08.0775140Z # etl
2025-08-17T16:07:08.0775225Z 
2025-08-17T16:07:08.0775305Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T16:07:08.0775461Z 
2025-08-17T16:07:08.0775537Z # etl.fba\_fee\_ingestor
2025-08-17T16:07:08.0775659Z 
2025-08-17T16:07:08.0775745Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T16:07:08.0775887Z 
2025-08-17T16:07:08.0775959Z # etl.sp\_fees\_ingestor
2025-08-17T16:07:08.0776251Z 
2025-08-17T16:07:08.0776336Z <a id="etl.keepa_ingestor"></a>
2025-08-17T16:07:08.0776472Z 
2025-08-17T16:07:08.0776545Z # etl.keepa\_ingestor
2025-08-17T16:07:08.0776664Z 
2025-08-17T16:07:08.0776731Z <a id="etl.db"></a>
2025-08-17T16:07:08.0776835Z 
2025-08-17T16:07:08.0776898Z # etl.db
2025-08-17T16:07:08.0776996Z 
2025-08-17T16:07:08.0777082Z <a id="etl.dialects.schemas"></a>
2025-08-17T16:07:08.0777222Z 
2025-08-17T16:07:08.0777306Z # etl.dialects.schemas
2025-08-17T16:07:08.0777421Z 
2025-08-17T16:07:08.0777528Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T16:07:08.0777721Z 
2025-08-17T16:07:08.0777810Z # etl.dialects.amazon\_reimbursements
2025-08-17T16:07:08.0777965Z 
2025-08-17T16:07:08.0778073Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T16:07:08.0778235Z 
2025-08-17T16:07:08.0778323Z # etl.dialects.amazon\_returns
2025-08-17T16:07:08.0778458Z 
2025-08-17T16:07:08.0778532Z <a id="etl.dialects"></a>
2025-08-17T16:07:08.0778662Z 
2025-08-17T16:07:08.0778730Z # etl.dialects
2025-08-17T16:07:08.0778830Z 
2025-08-17T16:07:08.0778898Z <a id="ingest"></a>
2025-08-17T16:07:08.0779009Z 
2025-08-17T16:07:08.0779073Z # ingest
2025-08-17T16:07:08.0779158Z 
2025-08-17T16:07:08.0779242Z <a id="ingest.copy_loader"></a>
2025-08-17T16:07:08.0779379Z 
2025-08-17T16:07:08.0779450Z # ingest.copy\_loader
2025-08-17T16:07:08.0779565Z 
2025-08-17T16:07:08.0779671Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T16:07:08.0779850Z 
2025-08-17T16:07:08.0779925Z #### copy\_df\_via\_temp
2025-08-17T16:07:08.0780050Z 
2025-08-17T16:07:08.0780114Z ```python
2025-08-17T16:07:08.0780282Z def copy_df_via_temp(engine: Engine,
2025-08-17T16:07:08.0780520Z                      df: pd.DataFrame,
2025-08-17T16:07:08.0780749Z                      target_table: str,
2025-08-17T16:07:08.0780956Z                      *,
2025-08-17T16:07:08.0781159Z                      target_schema: Optional[str] = None,
2025-08-17T16:07:08.0781409Z                      columns: Sequence[str],
2025-08-17T16:07:08.0781802Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T16:07:08.0782081Z                      analyze_after: bool = False) -> int
2025-08-17T16:07:08.0782312Z ```
2025-08-17T16:07:08.0782391Z 
2025-08-17T16:07:08.0782541Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T16:07:08.0782764Z 
2025-08-17T16:07:08.0782931Z The dataframe is first written to a TEMP table created ``LIKE`` the target
2025-08-17T16:07:08.0783358Z including defaults and generated columns.  Data is streamed via ``COPY`` and
2025-08-17T16:07:08.0783781Z then inserted into the final table.  If ``conflict_cols`` is provided an
2025-08-17T16:07:08.0784386Z ``INSERT ... ON CONFLICT DO UPDATE`` is issued for the non-conflicting
2025-08-17T16:07:08.0784713Z columns, otherwise rows are simply appended.
2025-08-17T16:07:08.0784895Z 
2025-08-17T16:07:08.0784997Z Returns the number of rows provided in ``df``.
2025-08-17T16:07:08.0785172Z 
2025-08-17T16:07:08.0785265Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T16:07:08.0785424Z 
2025-08-17T16:07:08.0785503Z # ingest.tests.test\_smoke
2025-08-17T16:07:08.0785635Z 
2025-08-17T16:07:08.0785710Z <a id="ingest.tests"></a>
2025-08-17T16:07:08.0785831Z 
2025-08-17T16:07:08.0785895Z # ingest.tests
2025-08-17T16:07:08.0785998Z 
2025-08-17T16:07:08.0786079Z <a id="ingest.upload_router"></a>
2025-08-17T16:07:08.0786221Z 
2025-08-17T16:07:08.0786300Z # ingest.upload\_router
2025-08-17T16:07:08.0786415Z 
2025-08-17T16:07:08.0786495Z <a id="ingest.email_watcher"></a>
2025-08-17T16:07:08.0786642Z 
2025-08-17T16:07:08.0786712Z # ingest.email\_watcher
2025-08-17T16:07:08.0786823Z 
2025-08-17T16:07:08.0786910Z <a id="ingest.email_watcher.main"></a>
2025-08-17T16:07:08.0787070Z 
2025-08-17T16:07:08.0787131Z #### main
2025-08-17T16:07:08.0787217Z 
2025-08-17T16:07:08.0787285Z ```python
2025-08-17T16:07:08.0787448Z def main() -> dict[str, str]
2025-08-17T16:07:08.0787640Z ```
2025-08-17T16:07:08.0787718Z 
2025-08-17T16:07:08.0788019Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T16:07:08.0788245Z 
2025-08-17T16:07:08.0788369Z Returns {"status": "success"} when processing completes.
2025-08-17T16:07:08.0788570Z 
2025-08-17T16:07:08.0788650Z <a id="ingest.ingest_router"></a>
2025-08-17T16:07:08.0788804Z 
2025-08-17T16:07:08.0788880Z # ingest.ingest\_router
2025-08-17T16:07:08.0788993Z 
2025-08-17T16:07:08.0789071Z <a id="logistics_etl"></a>
2025-08-17T16:07:08.0789195Z 
2025-08-17T16:07:08.0789261Z # logistics\_etl
2025-08-17T16:07:08.0789366Z 
2025-08-17T16:07:08.0789439Z Daily logistics ETL job.
2025-08-17T16:07:08.0789556Z 
2025-08-17T16:07:08.0789634Z <a id="logistics_etl.__main__"></a>
2025-08-17T16:07:08.0789786Z 
2025-08-17T16:07:08.0789861Z # logistics\_etl.\_\_main\_\_
2025-08-17T16:07:08.0789992Z 
2025-08-17T16:07:08.0790075Z <a id="logistics_etl.dsn"></a>
2025-08-17T16:07:08.0790209Z 
2025-08-17T16:07:08.0790277Z # logistics\_etl.dsn
2025-08-17T16:07:08.0790394Z 
2025-08-17T16:07:08.0790507Z Local DSN builder to avoid cross-service dependency.
2025-08-17T16:07:08.0790710Z 
2025-08-17T16:07:08.0790800Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T16:07:08.0790967Z 
2025-08-17T16:07:08.0791030Z #### build\_dsn
2025-08-17T16:07:08.0791128Z 
2025-08-17T16:07:08.0791198Z ```python
2025-08-17T16:07:08.0791365Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:07:08.0791588Z ```
2025-08-17T16:07:08.0791666Z 
2025-08-17T16:07:08.0791800Z Return a Postgres DSN assembled from environment variables.
2025-08-17T16:07:08.0792018Z 
2025-08-17T16:07:08.0792162Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T16:07:08.0792530Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T16:07:08.0792865Z error when any required variable is missing.
2025-08-17T16:07:08.0793032Z 
2025-08-17T16:07:08.0793130Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T16:07:08.0793297Z 
2025-08-17T16:07:08.0793381Z # logistics\_etl.tests.conftest
2025-08-17T16:07:08.0793532Z 
2025-08-17T16:07:08.0793630Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T16:07:08.0794111Z 
2025-08-17T16:07:08.0794205Z # logistics\_etl.tests.test\_repository
2025-08-17T16:07:08.0794374Z 
2025-08-17T16:07:08.0794463Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T16:07:08.0794626Z 
2025-08-17T16:07:08.0794711Z # logistics\_etl.tests.test\_cron
2025-08-17T16:07:08.0794853Z 
2025-08-17T16:07:08.0794947Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T16:07:08.0795120Z 
2025-08-17T16:07:08.0795200Z # logistics\_etl.tests.test\_imports
2025-08-17T16:07:08.0795348Z 
2025-08-17T16:07:08.0795436Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T16:07:08.0795606Z 
2025-08-17T16:07:08.0795687Z # logistics\_etl.tests.test\_smoke
2025-08-17T16:07:08.0795832Z 
2025-08-17T16:07:08.0795926Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T16:07:08.0796086Z 
2025-08-17T16:07:08.0796166Z # logistics\_etl.tests.test\_client
2025-08-17T16:07:08.0796317Z 
2025-08-17T16:07:08.0796400Z <a id="logistics_etl.tests"></a>
2025-08-17T16:07:08.0796541Z 
2025-08-17T16:07:08.0796610Z # logistics\_etl.tests
2025-08-17T16:07:08.0796728Z 
2025-08-17T16:07:08.0796804Z <a id="logistics_etl.flow"></a>
2025-08-17T16:07:08.0796939Z 
2025-08-17T16:07:08.0797012Z # logistics\_etl.flow
2025-08-17T16:07:08.0797124Z 
2025-08-17T16:07:08.0797204Z <a id="logistics_etl.client"></a>
2025-08-17T16:07:08.0797351Z 
2025-08-17T16:07:08.0797423Z # logistics\_etl.client
2025-08-17T16:07:08.0797537Z 
2025-08-17T16:07:08.0797612Z <a id="logistics_etl.cron"></a>
2025-08-17T16:07:08.0797769Z 
2025-08-17T16:07:08.0797841Z # logistics\_etl.cron
2025-08-17T16:07:08.0797950Z 
2025-08-17T16:07:08.0798028Z <a id="logistics_etl.db"></a>
2025-08-17T16:07:08.0798161Z 
2025-08-17T16:07:08.0798233Z # logistics\_etl.db
2025-08-17T16:07:08.0798338Z 
2025-08-17T16:07:08.0798427Z <a id="logistics_etl.repository"></a>
2025-08-17T16:07:08.0798594Z 
2025-08-17T16:07:08.0798670Z # logistics\_etl.repository
2025-08-17T16:07:08.0799172Z 
2025-08-17T16:07:08.0799308Z <a id="alert_bot"></a>
2025-08-17T16:07:08.0799536Z 
2025-08-17T16:07:08.0799658Z # alert\_bot
2025-08-17T16:07:08.0799829Z 
2025-08-17T16:07:08.0799996Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T16:07:08.0800291Z 
2025-08-17T16:07:08.0800443Z # alert\_bot.tests.test\_smoke
2025-08-17T16:07:08.0800599Z 
2025-08-17T16:07:08.0800677Z <a id="alert_bot.tests"></a>
2025-08-17T16:07:08.0800809Z 
2025-08-17T16:07:08.0800874Z # alert\_bot.tests
2025-08-17T16:07:08.0800986Z 
2025-08-17T16:07:08.0801070Z <a id="alert_bot.alert_bot"></a>
2025-08-17T16:07:08.0801208Z 
2025-08-17T16:07:08.0801290Z # alert\_bot.alert\_bot
2025-08-17T16:07:08.0801405Z 
2025-08-17T16:07:08.0801479Z <a id="alert_bot.rules"></a>
2025-08-17T16:07:08.0801612Z 
2025-08-17T16:07:08.0801677Z # alert\_bot.rules
2025-08-17T16:07:08.0801779Z 
2025-08-17T16:07:08.0801844Z <a id="common"></a>
2025-08-17T16:07:08.0801949Z 
2025-08-17T16:07:08.0802011Z # common
2025-08-17T16:07:08.0802098Z 
2025-08-17T16:07:08.0802181Z <a id="common.dsn"></a>
2025-08-17T16:07:08.0802300Z 
2025-08-17T16:07:08.0802364Z # common.dsn
2025-08-17T16:07:08.0802459Z 
2025-08-17T16:07:08.0802548Z <a id="common.dsn.build_dsn"></a>
2025-08-17T16:07:08.0802690Z 
2025-08-17T16:07:08.0802755Z #### build\_dsn
2025-08-17T16:07:08.0802860Z 
2025-08-17T16:07:08.0802924Z ```python
2025-08-17T16:07:08.0803102Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:07:08.0803334Z ```
2025-08-17T16:07:08.0803418Z 
2025-08-17T16:07:08.0803554Z Return a Postgres DSN, validating required variables.
2025-08-17T16:07:08.0803756Z 
2025-08-17T16:07:08.0804161Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T16:07:08.0804623Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T16:07:08.0805023Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T16:07:08.0805325Z missing.
2025-08-17T16:07:08.0805415Z 
2025-08-17T16:07:08.0805501Z <a id="common.models_vendor"></a>
2025-08-17T16:07:08.0805661Z 
2025-08-17T16:07:08.0806185Z # common.models\_vendor
2025-08-17T16:07:08.0806330Z 
2025-08-17T16:07:08.0806433Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T16:07:08.0806603Z 
2025-08-17T16:07:08.0806671Z ## Vendor Objects
2025-08-17T16:07:08.0806786Z 
2025-08-17T16:07:08.0806852Z ```python
2025-08-17T16:07:08.0807005Z class Vendor(Base)
2025-08-17T16:07:08.0807170Z ```
2025-08-17T16:07:08.0807253Z 
2025-08-17T16:07:08.0807337Z Vendor of inventory items.
2025-08-17T16:07:08.0807466Z 
2025-08-17T16:07:08.0807569Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T16:07:08.0807744Z 
2025-08-17T16:07:08.0807821Z ## VendorPrice Objects
2025-08-17T16:07:08.0807933Z 
2025-08-17T16:07:08.0807994Z ```python
2025-08-17T16:07:08.0808154Z class VendorPrice(Base)
2025-08-17T16:07:08.0808322Z ```
2025-08-17T16:07:08.0808407Z 
2025-08-17T16:07:08.0808508Z Association table linking vendors to pricing.
2025-08-17T16:07:08.0808691Z 
2025-08-17T16:07:08.0808772Z <a id="common.db_url"></a>
2025-08-17T16:07:08.0808904Z 
2025-08-17T16:07:08.0808969Z # common.db\_url
2025-08-17T16:07:08.0809071Z 
2025-08-17T16:07:08.0809159Z <a id="common.db_url.build_url"></a>
2025-08-17T16:07:08.0809310Z 
2025-08-17T16:07:08.0809373Z #### build\_url
2025-08-17T16:07:08.0809476Z 
2025-08-17T16:07:08.0809538Z ```python
2025-08-17T16:07:08.0809707Z def build_url(async_: bool = True) -> str
2025-08-17T16:07:08.0809934Z ```
2025-08-17T16:07:08.0810013Z 
2025-08-17T16:07:08.0810114Z Return Postgres DSN from env or PG_* parts.
2025-08-17T16:07:08.0810282Z 
2025-08-17T16:07:08.0810361Z <a id="common.keepa"></a>
2025-08-17T16:07:08.0810493Z 
2025-08-17T16:07:08.0810582Z # common.keepa
2025-08-17T16:07:08.0810685Z 
2025-08-17T16:07:08.0810758Z <a id="common.llm"></a>
2025-08-17T16:07:08.0810878Z 
2025-08-17T16:07:08.0810939Z # common.llm
2025-08-17T16:07:08.0811032Z 
2025-08-17T16:07:08.0811118Z <a id="common.settings"></a>
2025-08-17T16:07:08.0811250Z 
2025-08-17T16:07:08.0811316Z # common.settings
2025-08-17T16:07:08.0811547Z 
2025-08-17T16:07:08.0811619Z <a id="common.db"></a>
2025-08-17T16:07:08.0811729Z 
2025-08-17T16:07:08.0811791Z # common.db
2025-08-17T16:07:08.0811886Z 
2025-08-17T16:07:08.0811975Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T16:07:08.0812137Z 
2025-08-17T16:07:08.0812217Z #### build\_sqlalchemy\_url
2025-08-17T16:07:08.0812344Z 
2025-08-17T16:07:08.0812406Z ```python
2025-08-17T16:07:08.0821804Z def build_sqlalchemy_url() -> str
2025-08-17T16:07:08.0822162Z ```
2025-08-17T16:07:08.0822304Z 
2025-08-17T16:07:08.0822461Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T16:07:08.0822741Z 
2025-08-17T16:07:08.0822898Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T16:07:08.0823122Z 
2025-08-17T16:07:08.0823201Z #### build\_asyncpg\_dsn
2025-08-17T16:07:08.0823335Z 
2025-08-17T16:07:08.0823398Z ```python
2025-08-17T16:07:08.0823567Z def build_asyncpg_dsn() -> str
2025-08-17T16:07:08.0823764Z ```
2025-08-17T16:07:08.0823843Z 
2025-08-17T16:07:08.0824222Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T16:07:08.0824583Z 
2025-08-17T16:07:08.0824726Z <a id="common.db.refresh_mvs"></a>
2025-08-17T16:07:08.0824968Z 
2025-08-17T16:07:08.0825089Z #### refresh\_mvs
2025-08-17T16:07:08.0825262Z 
2025-08-17T16:07:08.0825369Z ```python
2025-08-17T16:07:08.0825699Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T16:07:08.0826094Z ```
2025-08-17T16:07:08.0826231Z 
2025-08-17T16:07:08.0826430Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T16:07:08.0826647Z 
2025-08-17T16:07:08.0826731Z <a id="common.config"></a>
2025-08-17T16:07:08.0826857Z 
2025-08-17T16:07:08.0826923Z # common.config
2025-08-17T16:07:08.0827020Z 
2025-08-17T16:07:08.0827101Z <a id="common.base"></a>
2025-08-17T16:07:08.0827221Z 
2025-08-17T16:07:08.0827283Z # common.base
2025-08-17T16:07:08.0827383Z 
2025-08-17T16:07:08.0827461Z <a id="common.base.Base"></a>
2025-08-17T16:07:08.0827597Z 
2025-08-17T16:07:08.0827659Z ## Base Objects
2025-08-17T16:07:08.0827759Z 
2025-08-17T16:07:08.0827825Z ```python
2025-08-17T16:07:08.0828145Z class Base(DeclarativeBase)
2025-08-17T16:07:08.0828342Z ```
2025-08-17T16:07:08.0828423Z 
2025-08-17T16:07:08.0828510Z Base class for SQLAlchemy models.
2025-08-17T16:07:08.0828657Z 
2025-08-17T16:07:08.0828725Z <a id="repricer"></a>
2025-08-17T16:07:08.0828842Z 
2025-08-17T16:07:08.0828903Z # repricer
2025-08-17T16:07:08.0828990Z 
2025-08-17T16:07:08.0829072Z <a id="repricer.app.schemas"></a>
2025-08-17T16:07:08.0829224Z 
2025-08-17T16:07:08.0829297Z # repricer.app.schemas
2025-08-17T16:07:08.0829414Z 
2025-08-17T16:07:08.0829500Z <a id="repricer.app.deps"></a>
2025-08-17T16:07:08.0829637Z 
2025-08-17T16:07:08.0829710Z # repricer.app.deps
2025-08-17T16:07:08.0829823Z 
2025-08-17T16:07:08.0829938Z Placeholder module for Keepa / SP-API clients.
2025-08-17T16:07:08.0830118Z 
2025-08-17T16:07:08.0830254Z <a id="repricer.app.logic"></a>
2025-08-17T16:07:08.0830391Z 
2025-08-17T16:07:08.0830463Z # repricer.app.logic
2025-08-17T16:07:08.0830577Z 
2025-08-17T16:07:08.0830684Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T16:07:08.0830855Z 
2025-08-17T16:07:08.0830917Z #### MIN\_MARGIN
2025-08-17T16:07:08.0831023Z 
2025-08-17T16:07:08.0831082Z 15 % ROI
2025-08-17T16:07:08.0831167Z 
2025-08-17T16:07:08.0831267Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T16:07:08.0831449Z 
2025-08-17T16:07:08.0831515Z #### compute\_price
2025-08-17T16:07:08.0831615Z 
2025-08-17T16:07:08.0831684Z ```python
2025-08-17T16:07:08.0831922Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T16:07:08.0832220Z ```
2025-08-17T16:07:08.0832300Z 
2025-08-17T16:07:08.0832407Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T16:07:08.0832686Z Replace with real competitive logic later.
2025-08-17T16:07:08.0832852Z 
2025-08-17T16:07:08.0832938Z <a id="repricer.app.main"></a>
2025-08-17T16:07:08.0833074Z 
2025-08-17T16:07:08.0833145Z # repricer.app.main
2025-08-17T16:07:08.0833249Z 
2025-08-17T16:07:08.0833332Z <a id="repricer.app"></a>
2025-08-17T16:07:08.0833573Z 
2025-08-17T16:07:08.0833642Z # repricer.app
2025-08-17T16:07:08.0833745Z 
2025-08-17T16:07:08.0833835Z <a id="repricer.tests.test_imports"></a>
2025-08-17T16:07:08.0834216Z 
2025-08-17T16:07:08.0834301Z # repricer.tests.test\_imports
2025-08-17T16:07:08.0834444Z 
2025-08-17T16:07:08.0834530Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T16:07:08.0834683Z 
2025-08-17T16:07:08.0834768Z # repricer.tests.test\_smoke
2025-08-17T16:07:08.0834900Z 
2025-08-17T16:07:08.0834983Z <a id="repricer.tests"></a>
2025-08-17T16:07:08.0835121Z 
2025-08-17T16:07:08.0835187Z # repricer.tests
2025-08-17T16:07:08.0835289Z 
2025-08-17T16:07:08.0835352Z <a id="db"></a>
2025-08-17T16:07:08.0835458Z 
2025-08-17T16:07:08.0835516Z # db
2025-08-17T16:07:08.0835597Z 
2025-08-17T16:07:08.0835678Z <a id="db.utils.views"></a>
2025-08-17T16:07:08.0835805Z 
2025-08-17T16:07:08.0835870Z # db.utils.views
2025-08-17T16:07:08.0835968Z 
2025-08-17T16:07:08.0836066Z <a id="db.utils.views.replace_view"></a>
2025-08-17T16:07:08.0836236Z 
2025-08-17T16:07:08.0836307Z #### replace\_view
2025-08-17T16:07:08.0836417Z 
2025-08-17T16:07:08.0836481Z ```python
2025-08-17T16:07:08.0836670Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T16:07:08.0836914Z ```
2025-08-17T16:07:08.0836996Z 
2025-08-17T16:07:08.0837090Z Drop and recreate a SQL view atomically.
2025-08-17T16:07:08.0837248Z 
2025-08-17T16:07:08.0837318Z <a id="db.utils"></a>
2025-08-17T16:07:08.0837434Z 
2025-08-17T16:07:08.0837495Z # db.utils
2025-08-17T16:07:08.0837582Z 
2025-08-17T16:07:08.0837658Z <a id="price_importer"></a>
2025-08-17T16:07:08.0837789Z 
2025-08-17T16:07:08.0837856Z # price\_importer
2025-08-17T16:07:08.0837964Z 
2025-08-17T16:07:08.0838075Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T16:07:08.0838258Z 
2025-08-17T16:07:08.0838349Z # price\_importer.services\_common.dsn
2025-08-17T16:07:08.0838518Z 
2025-08-17T16:07:08.0838650Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T16:07:08.0838855Z 
2025-08-17T16:07:08.0838919Z #### build\_dsn
2025-08-17T16:07:08.0839152Z 
2025-08-17T16:07:08.0839216Z ```python
2025-08-17T16:07:08.0839393Z def build_dsn(sync: bool = True) -> str
2025-08-17T16:07:08.0839605Z ```
2025-08-17T16:07:08.0839687Z 
2025-08-17T16:07:08.0839758Z Return safe DSN.
2025-08-17T16:07:08.0839864Z 
2025-08-17T16:07:08.0840197Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T16:07:08.0840398Z 
2025-08-17T16:07:08.0840525Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T16:07:08.0840719Z 
2025-08-17T16:07:08.0840827Z # price\_importer.services\_common.models\_vendor
2025-08-17T16:07:08.0841027Z 
2025-08-17T16:07:08.0841136Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T16:07:08.0841322Z 
2025-08-17T16:07:08.0841445Z # price\_importer.services\_common.db\_url
2025-08-17T16:07:08.0841614Z 
2025-08-17T16:07:08.0841744Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T16:07:08.0841960Z 
2025-08-17T16:07:08.0842032Z #### build\_url
2025-08-17T16:07:08.0842139Z 
2025-08-17T16:07:08.0842203Z ```python
2025-08-17T16:07:08.0842383Z def build_url(async_: bool = True) -> str
2025-08-17T16:07:08.0842604Z ```
2025-08-17T16:07:08.0842685Z 
2025-08-17T16:07:08.0842780Z Return Postgres DSN from env or PG_* parts.
2025-08-17T16:07:08.0842946Z 
2025-08-17T16:07:08.0843057Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T16:07:08.0843237Z 
2025-08-17T16:07:08.0843331Z # price\_importer.services\_common.keepa
2025-08-17T16:07:08.0843498Z 
2025-08-17T16:07:08.0843596Z <a id="price_importer.services_common.llm"></a>
2025-08-17T16:07:08.0843769Z 
2025-08-17T16:07:08.0843863Z # price\_importer.services\_common.llm
2025-08-17T16:07:08.0844308Z 
2025-08-17T16:07:08.0844428Z <a id="price_importer.services_common.settings"></a>
2025-08-17T16:07:08.0844633Z 
2025-08-17T16:07:08.0844730Z # price\_importer.services\_common.settings
2025-08-17T16:07:08.0844901Z 
2025-08-17T16:07:08.0845003Z <a id="price_importer.services_common.db"></a>
2025-08-17T16:07:08.0845329Z 
2025-08-17T16:07:08.0845422Z # price\_importer.services\_common.db
2025-08-17T16:07:08.0845580Z 
2025-08-17T16:07:08.0845743Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T16:07:08.0845976Z 
2025-08-17T16:07:08.0846053Z #### build\_sqlalchemy\_url
2025-08-17T16:07:08.0846230Z 
2025-08-17T16:07:08.0846294Z ```python
2025-08-17T16:07:08.0846464Z def build_sqlalchemy_url() -> str
2025-08-17T16:07:08.0846672Z ```
2025-08-17T16:07:08.0846752Z 
2025-08-17T16:07:08.0846846Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T16:07:08.0847020Z 
2025-08-17T16:07:08.0847159Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T16:07:08.0847377Z 
2025-08-17T16:07:08.0847457Z #### build\_asyncpg\_dsn
2025-08-17T16:07:08.0847581Z 
2025-08-17T16:07:08.0847643Z ```python
2025-08-17T16:07:08.0847815Z def build_asyncpg_dsn() -> str
2025-08-17T16:07:08.0848004Z ```
2025-08-17T16:07:08.0848089Z 
2025-08-17T16:07:08.0848212Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T16:07:08.0848423Z 
2025-08-17T16:07:08.0848556Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T16:07:08.0848758Z 
2025-08-17T16:07:08.0848824Z #### refresh\_mvs
2025-08-17T16:07:08.0848926Z 
2025-08-17T16:07:08.0848998Z ```python
2025-08-17T16:07:08.0849191Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T16:07:08.0849440Z ```
2025-08-17T16:07:08.0849519Z 
2025-08-17T16:07:08.0849654Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T16:07:08.0849870Z 
2025-08-17T16:07:08.0849964Z <a id="price_importer.services_common"></a>
2025-08-17T16:07:08.0850129Z 
2025-08-17T16:07:08.0850219Z # price\_importer.services\_common
2025-08-17T16:07:08.0850373Z 
2025-08-17T16:07:08.0850477Z <a id="price_importer.services_common.base"></a>
2025-08-17T16:07:08.0850661Z 
2025-08-17T16:07:08.0850749Z # price\_importer.services\_common.base
2025-08-17T16:07:08.0850912Z 
2025-08-17T16:07:08.0851002Z <a id="price_importer.normaliser"></a>
2025-08-17T16:07:08.0851287Z 
2025-08-17T16:07:08.0851372Z # price\_importer.normaliser
2025-08-17T16:07:08.0851512Z 
2025-08-17T16:07:08.0851622Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T16:07:08.0851798Z 
2025-08-17T16:07:08.0851887Z # price\_importer.common.models\_vendor
2025-08-17T16:07:08.0852048Z 
2025-08-17T16:07:08.0852136Z <a id="price_importer.common.db_url"></a>
2025-08-17T16:07:08.0852299Z 
2025-08-17T16:07:08.0852380Z # price\_importer.common.db\_url
2025-08-17T16:07:08.0852527Z 
2025-08-17T16:07:08.0852627Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T16:07:08.0852805Z 
2025-08-17T16:07:08.0852873Z #### make\_dsn
2025-08-17T16:07:08.0852968Z 
2025-08-17T16:07:08.0853029Z ```python
2025-08-17T16:07:08.0853199Z def make_dsn(async_: bool = False) -> str
2025-08-17T16:07:08.0853412Z ```
2025-08-17T16:07:08.0853499Z 
2025-08-17T16:07:08.0853614Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T16:07:08.0853804Z 
2025-08-17T16:07:08.0854090Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T16:07:08.0854302Z 
2025-08-17T16:07:08.0854368Z #### build\_url
2025-08-17T16:07:08.0854467Z 
2025-08-17T16:07:08.0854535Z ```python
2025-08-17T16:07:08.0854707Z def build_url(async_: bool = False) -> str
2025-08-17T16:07:08.0854933Z ```
2025-08-17T16:07:08.0855013Z 
2025-08-17T16:07:08.0855133Z Return Postgres DSN built from environment variables.
2025-08-17T16:07:08.0855332Z 
2025-08-17T16:07:08.0855418Z <a id="price_importer.common"></a>
2025-08-17T16:07:08.0855569Z 
2025-08-17T16:07:08.0855652Z # price\_importer.common
2025-08-17T16:07:08.0855775Z 
2025-08-17T16:07:08.0855863Z <a id="price_importer.common.base"></a>
2025-08-17T16:07:08.0856022Z 
2025-08-17T16:07:08.0856113Z # price\_importer.common.base
2025-08-17T16:07:08.0856250Z 
2025-08-17T16:07:08.0856345Z <a id="price_importer.tests.conftest"></a>
2025-08-17T16:07:08.0856519Z 
2025-08-17T16:07:08.0856603Z # price\_importer.tests.conftest
2025-08-17T16:07:08.0856746Z 
2025-08-17T16:07:08.0856971Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T16:07:08.0857148Z 
2025-08-17T16:07:08.0857234Z # price\_importer.tests.test\_reader
2025-08-17T16:07:08.0857386Z 
2025-08-17T16:07:08.0857490Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T16:07:08.0857662Z 
2025-08-17T16:07:08.0857751Z # price\_importer.tests.test\_imports
2025-08-17T16:07:08.0857910Z 
2025-08-17T16:07:08.0858003Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T16:07:08.0858167Z 
2025-08-17T16:07:08.0858258Z # price\_importer.tests.test\_smoke
2025-08-17T16:07:08.0858409Z 
2025-08-17T16:07:08.0858511Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T16:07:08.0858698Z 
2025-08-17T16:07:08.0858787Z # price\_importer.tests.test\_normaliser
2025-08-17T16:07:08.0858946Z 
2025-08-17T16:07:08.0859028Z <a id="price_importer.tests"></a>
2025-08-17T16:07:08.0859177Z 
2025-08-17T16:07:08.0859251Z # price\_importer.tests
2025-08-17T16:07:08.0859371Z 
2025-08-17T16:07:08.0859464Z <a id="price_importer.reader"></a>
2025-08-17T16:07:08.0859618Z 
2025-08-17T16:07:08.0859694Z # price\_importer.reader
2025-08-17T16:07:08.0859814Z 
2025-08-17T16:07:08.0859910Z <a id="price_importer.repository"></a>
2025-08-17T16:07:08.0860066Z 
2025-08-17T16:07:08.0860148Z # price\_importer.repository
2025-08-17T16:07:08.0860294Z 
2025-08-17T16:07:08.0860376Z <a id="price_importer.import"></a>
2025-08-17T16:07:08.0860521Z 
2025-08-17T16:07:08.0860603Z # price\_importer.import
2025-08-17T16:07:08.0860726Z 
2025-08-17T16:07:08.0860796Z <a id="fees_h10"></a>
2025-08-17T16:07:08.0860907Z 
2025-08-17T16:07:08.0860978Z # fees\_h10
2025-08-17T16:07:08.0861066Z 
2025-08-17T16:07:08.0861140Z <a id="fees_h10.worker"></a>
2025-08-17T16:07:08.0861277Z 
2025-08-17T16:07:08.0861346Z # fees\_h10.worker
2025-08-17T16:07:08.0861449Z 
2025-08-17T16:07:08.0861545Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T16:07:08.0861722Z 
2025-08-17T16:07:08.0861792Z #### list\_active\_asins
2025-08-17T16:07:08.0861908Z 
2025-08-17T16:07:08.0861978Z ```python
2025-08-17T16:07:08.0862254Z def list_active_asins() -> list[str]
2025-08-17T16:07:08.0862461Z ```
2025-08-17T16:07:08.0862542Z 
2025-08-17T16:07:08.0862649Z Return known ASINs or an empty list if unavailable.
2025-08-17T16:07:08.0862843Z 
2025-08-17T16:07:08.0862924Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T16:07:08.0863075Z 
2025-08-17T16:07:08.0863158Z # fees\_h10.tests.test\_smoke
2025-08-17T16:07:08.0863289Z 
2025-08-17T16:07:08.0863364Z <a id="fees_h10.tests"></a>
2025-08-17T16:07:08.0863489Z 
2025-08-17T16:07:08.0863558Z # fees\_h10.tests
2025-08-17T16:07:08.0863656Z 
2025-08-17T16:07:08.0863730Z <a id="fees_h10.client"></a>
2025-08-17T16:07:08.0863862Z 
2025-08-17T16:07:08.0864110Z # fees\_h10.client
2025-08-17T16:07:08.0864227Z 
2025-08-17T16:07:08.0864319Z <a id="fees_h10.repository"></a>
2025-08-17T16:07:08.0864458Z 
2025-08-17T16:07:08.0864529Z # fees\_h10.repository
2025-08-17T16:07:08.0864643Z 
2025-08-17T16:07:08.0864717Z <a id="emailer"></a>
2025-08-17T16:07:08.0864831Z 
2025-08-17T16:07:08.0864892Z # emailer
2025-08-17T16:07:08.0864985Z 
2025-08-17T16:07:08.0865084Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T16:07:08.0865256Z 
2025-08-17T16:07:08.0865342Z # emailer.tests.test\_import\_emailer
2025-08-17T16:07:08.0865503Z 
2025-08-17T16:07:08.0865588Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T16:07:08.0865738Z 
2025-08-17T16:07:08.0865822Z # emailer.tests.test\_smoke
2025-08-17T16:07:08.0865952Z 
2025-08-17T16:07:08.0866028Z <a id="emailer.tests"></a>
2025-08-17T16:07:08.0866159Z 
2025-08-17T16:07:08.0866225Z # emailer.tests
2025-08-17T16:07:08.0866326Z 
2025-08-17T16:07:08.0866407Z <a id="emailer.generate_body"></a>
2025-08-17T16:07:08.0866558Z 
2025-08-17T16:07:08.0866633Z # emailer.generate\_body
2025-08-17T16:07:08.0866754Z 
2025-08-17T16:07:08.0866830Z <a id="llm_server"></a>
2025-08-17T16:07:08.0866944Z 
2025-08-17T16:07:08.0867008Z # llm\_server
2025-08-17T16:07:08.0867109Z 
2025-08-17T16:07:08.0867184Z <a id="llm_server.app"></a>
2025-08-17T16:07:08.0867438Z 
2025-08-17T16:07:08.0867508Z # llm\_server.app
2025-08-17T16:07:08.0867617Z 
