2025-08-20T16:15:46.6139165Z ##[group]Run pydoc-markdown
2025-08-20T16:15:46.6139457Z [36;1mpydoc-markdown[0m
2025-08-20T16:15:46.6180240Z shell: /usr/bin/bash -e {0}
2025-08-20T16:15:46.6180618Z env:
2025-08-20T16:15:46.6180978Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:15:46.6181451Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T16:15:46.6181851Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:15:46.6182190Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:15:46.6182576Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T16:15:46.6182920Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T16:15:46.6183201Z ##[endgroup]
2025-08-20T16:15:46.9503353Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T16:15:46.9503892Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T16:15:46.9504244Z In "pydoc-markdown.yml"
2025-08-20T16:15:46.9504581Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T16:15:46.9505074Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T16:15:46.9505644Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T16:15:46.9506034Z 
2025-08-20T16:15:47.3146189Z <a id="__init__"></a>
2025-08-20T16:15:47.3149296Z 
2025-08-20T16:15:47.3149480Z # \_\_init\_\_
2025-08-20T16:15:47.3149705Z 
2025-08-20T16:15:47.3149851Z <a id="api"></a>
2025-08-20T16:15:47.3150057Z 
2025-08-20T16:15:47.3150178Z # api
2025-08-20T16:15:47.3150354Z 
2025-08-20T16:15:47.3150517Z <a id="api.errors"></a>
2025-08-20T16:15:47.3150795Z 
2025-08-20T16:15:47.3150928Z # api.errors
2025-08-20T16:15:47.3151138Z 
2025-08-20T16:15:47.3151315Z <a id="api.sentry_config"></a>
2025-08-20T16:15:47.3151628Z 
2025-08-20T16:15:47.3151801Z # api.sentry\_config
2025-08-20T16:15:47.3152061Z 
2025-08-20T16:15:47.3152269Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T16:15:47.3152666Z 
2025-08-20T16:15:47.3153290Z # api.tests.test\_stats\_contracts
2025-08-20T16:15:47.3153660Z 
2025-08-20T16:15:47.3153864Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T16:15:47.3154257Z 
2025-08-20T16:15:47.3154430Z # api.tests.test\_sentry\_scrub
2025-08-20T16:15:47.3154744Z 
2025-08-20T16:15:47.3154965Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T16:15:47.3155302Z 
2025-08-20T16:15:47.3155446Z # api.tests.test\_roi\_basic\_auth
2025-08-20T16:15:47.3155720Z 
2025-08-20T16:15:47.3155875Z <a id="api.tests.test_errors_json"></a>
2025-08-20T16:15:47.3156170Z 
2025-08-20T16:15:47.3156322Z # api.tests.test\_errors\_json
2025-08-20T16:15:47.3156905Z 
2025-08-20T16:15:47.3157055Z <a id="api.tests.test_llm"></a>
2025-08-20T16:15:47.3157566Z 
2025-08-20T16:15:47.3157710Z # api.tests.test\_llm
2025-08-20T16:15:47.3157917Z 
2025-08-20T16:15:47.3158071Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T16:15:47.3158364Z 
2025-08-20T16:15:47.3158499Z # api.tests.test\_roi\_filters
2025-08-20T16:15:47.3158736Z 
2025-08-20T16:15:47.3158901Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T16:15:47.3159205Z 
2025-08-20T16:15:47.3159341Z # api.tests.test\_sentry\_event
2025-08-20T16:15:47.3159578Z 
2025-08-20T16:15:47.3159802Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T16:15:47.3160041Z 
2025-08-20T16:15:47.3160132Z ## DummyTransport Objects
2025-08-20T16:15:47.3160284Z 
2025-08-20T16:15:47.3160359Z ```python
2025-08-20T16:15:47.3160548Z class DummyTransport()
2025-08-20T16:15:47.3160751Z ```
2025-08-20T16:15:47.3160843Z 
2025-08-20T16:15:47.3161036Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T16:15:47.3161334Z 
2025-08-20T16:15:47.3161414Z #### capture\_envelope
2025-08-20T16:15:47.3161540Z 
2025-08-20T16:15:47.3161620Z ```python
2025-08-20T16:15:47.3161819Z def capture_envelope(envelope)
2025-08-20T16:15:47.3162051Z ```
2025-08-20T16:15:47.3162142Z 
2025-08-20T16:15:47.3162280Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T16:15:47.3162528Z 
2025-08-20T16:15:47.3162621Z <a id="api.tests.test_cors"></a>
2025-08-20T16:15:47.3163046Z 
2025-08-20T16:15:47.3163138Z # api.tests.test\_cors
2025-08-20T16:15:47.3163279Z 
2025-08-20T16:15:47.3163375Z <a id="api.tests.test_imports"></a>
2025-08-20T16:15:47.3163556Z 
2025-08-20T16:15:47.3163646Z # api.tests.test\_imports
2025-08-20T16:15:47.3163787Z 
2025-08-20T16:15:47.3163881Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T16:15:47.3164067Z 
2025-08-20T16:15:47.3164154Z # api.tests.test\_rate\_limit
2025-08-20T16:15:47.3164319Z 
2025-08-20T16:15:47.3164434Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T16:15:47.3164630Z 
2025-08-20T16:15:47.3164700Z #### app
2025-08-20T16:15:47.3164798Z 
2025-08-20T16:15:47.3164874Z noqa: E402
2025-08-20T16:15:47.3164972Z 
2025-08-20T16:15:47.3165073Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T16:15:47.3165255Z 
2025-08-20T16:15:47.3165342Z # api.tests.test\_stats\_sql
2025-08-20T16:15:47.3165492Z 
2025-08-20T16:15:47.3165586Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T16:15:47.3165788Z 
2025-08-20T16:15:47.3165869Z # api.tests.test\_entrypoint
2025-08-20T16:15:47.3166006Z 
2025-08-20T16:15:47.3166124Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T16:15:47.3166319Z 
2025-08-20T16:15:47.3166648Z # api.tests.test\_stats\_future\_contracts
2025-08-20T16:15:47.3166837Z 
2025-08-20T16:15:47.3166924Z <a id="api.tests.test_health"></a>
2025-08-20T16:15:47.3167078Z 
2025-08-20T16:15:47.3167156Z # api.tests.test\_health
2025-08-20T16:15:47.3167292Z 
2025-08-20T16:15:47.3167374Z <a id="api.tests.test_score"></a>
2025-08-20T16:15:47.3167520Z 
2025-08-20T16:15:47.3167602Z # api.tests.test\_score
2025-08-20T16:15:47.3167723Z 
2025-08-20T16:15:47.3167802Z <a id="api.logging_config"></a>
2025-08-20T16:15:47.3167948Z 
2025-08-20T16:15:47.3168020Z # api.logging\_config
2025-08-20T16:15:47.3168137Z 
2025-08-20T16:15:47.3168220Z <a id="api.migrations.env"></a>
2025-08-20T16:15:47.3168367Z 
2025-08-20T16:15:47.3168443Z # api.migrations.env
2025-08-20T16:15:47.3168700Z 
2025-08-20T16:15:47.3168835Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T16:15:47.3169037Z 
2025-08-20T16:15:47.3169146Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T16:15:47.3169338Z 
2025-08-20T16:15:47.3169448Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T16:15:47.3169639Z 
2025-08-20T16:15:47.3169735Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T16:15:47.3169916Z 
2025-08-20T16:15:47.3170073Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T16:15:47.3170311Z 
2025-08-20T16:15:47.3170458Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T16:15:47.3170677Z 
2025-08-20T16:15:47.3170803Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T16:15:47.3171014Z 
2025-08-20T16:15:47.3171125Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T16:15:47.3171308Z 
2025-08-20T16:15:47.3171431Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T16:15:47.3171728Z 
2025-08-20T16:15:47.3171836Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T16:15:47.3172078Z 
2025-08-20T16:15:47.3172205Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T16:15:47.3172412Z 
2025-08-20T16:15:47.3172528Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T16:15:47.3172719Z 
2025-08-20T16:15:47.3172836Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T16:15:47.3173038Z 
2025-08-20T16:15:47.3173147Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T16:15:47.3173331Z 
2025-08-20T16:15:47.3173456Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T16:15:47.3173668Z 
2025-08-20T16:15:47.3173772Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T16:15:47.3173957Z 
2025-08-20T16:15:47.3174101Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T16:15:47.3174319Z 
2025-08-20T16:15:47.3174440Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T16:15:47.3174653Z 
2025-08-20T16:15:47.3174781Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T16:15:47.3175126Z 
2025-08-20T16:15:47.3175242Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T16:15:47.3175430Z 
2025-08-20T16:15:47.3175568Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T16:15:47.3175787Z 
2025-08-20T16:15:47.3175912Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T16:15:47.3176115Z 
2025-08-20T16:15:47.3176225Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T16:15:47.3176620Z 
2025-08-20T16:15:47.3176725Z # api.migrations.versions.0001\_baseline
2025-08-20T16:15:47.3176918Z 
2025-08-20T16:15:47.3177016Z <a id="api.migrations.versions"></a>
2025-08-20T16:15:47.3177181Z 
2025-08-20T16:15:47.3177264Z # api.migrations.versions
2025-08-20T16:15:47.3177399Z 
2025-08-20T16:15:47.3177523Z <a id="api.migrations"></a>
2025-08-20T16:15:47.3177658Z 
2025-08-20T16:15:47.3177727Z # api.migrations
2025-08-20T16:15:47.3177840Z 
2025-08-20T16:15:47.3177917Z <a id="api.db"></a>
2025-08-20T16:15:47.3178030Z 
2025-08-20T16:15:47.3178100Z # api.db
2025-08-20T16:15:47.3178187Z 
2025-08-20T16:15:47.3178268Z <a id="api.routes.score"></a>
2025-08-20T16:15:47.3178410Z 
2025-08-20T16:15:47.3178488Z # api.routes.score
2025-08-20T16:15:47.3178598Z 
2025-08-20T16:15:47.3178674Z <a id="api.routes.stats"></a>
2025-08-20T16:15:47.3178814Z 
2025-08-20T16:15:47.3178883Z # api.routes.stats
2025-08-20T16:15:47.3178987Z 
2025-08-20T16:15:47.3179063Z <a id="api.routes.roi"></a>
2025-08-20T16:15:47.3179198Z 
2025-08-20T16:15:47.3179265Z # api.routes.roi
2025-08-20T16:15:47.3179368Z 
2025-08-20T16:15:47.3179454Z <a id="api.routes.health"></a>
2025-08-20T16:15:47.3179595Z 
2025-08-20T16:15:47.3179665Z # api.routes.health
2025-08-20T16:15:47.3179779Z 
2025-08-20T16:15:47.3179871Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T16:15:47.3180038Z 
2025-08-20T16:15:47.3180102Z #### MAX\_SKEW
2025-08-20T16:15:47.3180206Z 
2025-08-20T16:15:47.3180268Z seconds
2025-08-20T16:15:47.3180486Z 
2025-08-20T16:15:47.3180583Z <a id="api.routes.health.health"></a>
2025-08-20T16:15:47.3180751Z 
2025-08-20T16:15:47.3180814Z #### health
2025-08-20T16:15:47.3180908Z 
2025-08-20T16:15:47.3180979Z ```python
2025-08-20T16:15:47.3181179Z @router.get("/health", include_in_schema=False)
2025-08-20T16:15:47.3181594Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T16:15:47.3181939Z ```
2025-08-20T16:15:47.3182031Z 
2025-08-20T16:15:47.3182148Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T16:15:47.3182347Z 
2025-08-20T16:15:47.3182444Z <a id="api.routes.repository"></a>
2025-08-20T16:15:47.3182604Z 
2025-08-20T16:15:47.3182682Z # api.routes.repository
2025-08-20T16:15:47.3182813Z 
2025-08-20T16:15:47.3182901Z <a id="api.routes"></a>
2025-08-20T16:15:47.3183022Z 
2025-08-20T16:15:47.3183089Z # api.routes
2025-08-20T16:15:47.3183193Z 
2025-08-20T16:15:47.3183270Z <a id="api.models.fee"></a>
2025-08-20T16:15:47.3183399Z 
2025-08-20T16:15:47.3183469Z # api.models.fee
2025-08-20T16:15:47.3183592Z 
2025-08-20T16:15:47.3183664Z <a id="api.models"></a>
2025-08-20T16:15:47.3183782Z 
2025-08-20T16:15:47.3183852Z # api.models
2025-08-20T16:15:47.3183947Z 
2025-08-20T16:15:47.3184030Z <a id="api.roi_repository"></a>
2025-08-20T16:15:47.3184184Z 
2025-08-20T16:15:47.3184259Z # api.roi\_repository
2025-08-20T16:15:47.3184375Z 
2025-08-20T16:15:47.3184448Z <a id="api.main"></a>
2025-08-20T16:15:47.3184570Z 
2025-08-20T16:15:47.3184637Z # api.main
2025-08-20T16:15:47.3184728Z 
2025-08-20T16:15:47.3184810Z <a id="api.main.ready"></a>
2025-08-20T16:15:47.3184948Z 
2025-08-20T16:15:47.3185012Z #### ready
2025-08-20T16:15:47.3185101Z 
2025-08-20T16:15:47.3185170Z ```python
2025-08-20T16:15:47.3185432Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T16:15:47.3185877Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T16:15:47.3186228Z                                                                       str]
2025-08-20T16:15:47.3186714Z ```
2025-08-20T16:15:47.3186980Z 
2025-08-20T16:15:47.3187089Z Return 200 only when migrations are at head.
2025-08-20T16:15:47.3187268Z 
2025-08-20T16:15:47.3187341Z <a id="api.config"></a>
2025-08-20T16:15:47.3187468Z 
2025-08-20T16:15:47.3187533Z # api.config
2025-08-20T16:15:47.3187629Z 
2025-08-20T16:15:47.3187707Z <a id="api.security"></a>
2025-08-20T16:15:47.3187841Z 
2025-08-20T16:15:47.3187906Z # api.security
2025-08-20T16:15:47.3188009Z 
2025-08-20T16:15:47.3188078Z <a id="etl"></a>
2025-08-20T16:15:47.3188180Z 
2025-08-20T16:15:47.3188243Z # etl
2025-08-20T16:15:47.3188332Z 
2025-08-20T16:15:47.3188420Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T16:15:47.3188570Z 
2025-08-20T16:15:47.3188643Z # etl.fba\_fee\_ingestor
2025-08-20T16:15:47.3188773Z 
2025-08-20T16:15:47.3188858Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T16:15:47.3189005Z 
2025-08-20T16:15:47.3189078Z # etl.sp\_fees\_ingestor
2025-08-20T16:15:47.3189204Z 
2025-08-20T16:15:47.3189283Z <a id="etl.keepa_ingestor"></a>
2025-08-20T16:15:47.3189436Z 
2025-08-20T16:15:47.3189516Z # etl.keepa\_ingestor
2025-08-20T16:15:47.3189630Z 
2025-08-20T16:15:47.3189696Z <a id="etl.db"></a>
2025-08-20T16:15:47.3189807Z 
2025-08-20T16:15:47.3189868Z # etl.db
2025-08-20T16:15:47.3189955Z 
2025-08-20T16:15:47.3190037Z <a id="etl.dialects.schemas"></a>
2025-08-20T16:15:47.3190191Z 
2025-08-20T16:15:47.3190267Z # etl.dialects.schemas
2025-08-20T16:15:47.3190386Z 
2025-08-20T16:15:47.3190499Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T16:15:47.3190684Z 
2025-08-20T16:15:47.3190772Z # etl.dialects.amazon\_reimbursements
2025-08-20T16:15:47.3190941Z 
2025-08-20T16:15:47.3191043Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T16:15:47.3191219Z 
2025-08-20T16:15:47.3191305Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T16:15:47.3191466Z 
2025-08-20T16:15:47.3191554Z <a id="etl.dialects.test_generic"></a>
2025-08-20T16:15:47.3191714Z 
2025-08-20T16:15:47.3191801Z # etl.dialects.test\_generic
2025-08-20T16:15:47.3192059Z 
2025-08-20T16:15:47.3192155Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T16:15:47.3192326Z 
2025-08-20T16:15:47.3192407Z # etl.dialects.amazon\_returns
2025-08-20T16:15:47.3192548Z 
2025-08-20T16:15:47.3192646Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T16:15:47.3192822Z 
2025-08-20T16:15:47.3192907Z # etl.dialects.amazon\_fee\_preview
2025-08-20T16:15:47.3193061Z 
2025-08-20T16:15:47.3193173Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T16:15:47.3193361Z 
2025-08-20T16:15:47.3193448Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T16:15:47.3193619Z 
2025-08-20T16:15:47.3193715Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T16:15:47.3193884Z 
2025-08-20T16:15:47.3193971Z # etl.dialects.amazon\_settlements
2025-08-20T16:15:47.3194131Z 
2025-08-20T16:15:47.3194209Z <a id="etl.dialects"></a>
2025-08-20T16:15:47.3194334Z 
2025-08-20T16:15:47.3194409Z # etl.dialects
2025-08-20T16:15:47.3194512Z 
2025-08-20T16:15:47.3194581Z <a id="ingest"></a>
2025-08-20T16:15:47.3194694Z 
2025-08-20T16:15:47.3194768Z # ingest
2025-08-20T16:15:47.3194855Z 
2025-08-20T16:15:47.3194937Z <a id="ingest.maintenance"></a>
2025-08-20T16:15:47.3195087Z 
2025-08-20T16:15:47.3195159Z # ingest.maintenance
2025-08-20T16:15:47.3195276Z 
2025-08-20T16:15:47.3195362Z <a id="ingest.copy_loader"></a>
2025-08-20T16:15:47.3195497Z 
2025-08-20T16:15:47.3195570Z # ingest.copy\_loader
2025-08-20T16:15:47.3195685Z 
2025-08-20T16:15:47.3195797Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T16:15:47.3195981Z 
2025-08-20T16:15:47.3196057Z #### copy\_df\_via\_temp
2025-08-20T16:15:47.3196185Z 
2025-08-20T16:15:47.3196251Z ```python
2025-08-20T16:15:47.3196614Z def copy_df_via_temp(engine: Engine,
2025-08-20T16:15:47.3196867Z                      df: pd.DataFrame,
2025-08-20T16:15:47.3197103Z                      target_table: str,
2025-08-20T16:15:47.3197320Z                      *,
2025-08-20T16:15:47.3197531Z                      target_schema: Optional[str] = None,
2025-08-20T16:15:47.3197798Z                      columns: Sequence[str],
2025-08-20T16:15:47.3198198Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T16:15:47.3198482Z                      analyze_after: bool = False,
2025-08-20T16:15:47.3198751Z                      connection: Any | None = None) -> int
2025-08-20T16:15:47.3198985Z ```
2025-08-20T16:15:47.3199075Z 
2025-08-20T16:15:47.3199233Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T16:15:47.3199463Z 
2025-08-20T16:15:47.3199554Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T16:15:47.3199713Z 
2025-08-20T16:15:47.3199792Z # ingest.tests.test\_smoke
2025-08-20T16:15:47.3199927Z 
2025-08-20T16:15:47.3200003Z <a id="ingest.tests"></a>
2025-08-20T16:15:47.3200127Z 
2025-08-20T16:15:47.3200194Z # ingest.tests
2025-08-20T16:15:47.3200303Z 
2025-08-20T16:15:47.3200387Z <a id="ingest.upload_router"></a>
2025-08-20T16:15:47.3200533Z 
2025-08-20T16:15:47.3200616Z # ingest.upload\_router
2025-08-20T16:15:47.3200742Z 
2025-08-20T16:15:47.3200828Z <a id="ingest.email_watcher"></a>
2025-08-20T16:15:47.3200980Z 
2025-08-20T16:15:47.3201053Z # ingest.email\_watcher
2025-08-20T16:15:47.3201168Z 
2025-08-20T16:15:47.3201255Z <a id="ingest.email_watcher.main"></a>
2025-08-20T16:15:47.3201423Z 
2025-08-20T16:15:47.3201485Z #### main
2025-08-20T16:15:47.3201572Z 
2025-08-20T16:15:47.3201642Z ```python
2025-08-20T16:15:47.3201805Z def main() -> dict[str, str]
2025-08-20T16:15:47.3202001Z ```
2025-08-20T16:15:47.3202083Z 
2025-08-20T16:15:47.3202223Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T16:15:47.3202453Z 
2025-08-20T16:15:47.3202583Z Returns {"status": "success"} when processing completes.
2025-08-20T16:15:47.3202791Z 
2025-08-20T16:15:47.3202868Z <a id="ingest.tasks"></a>
2025-08-20T16:15:47.3202998Z 
2025-08-20T16:15:47.3203063Z # ingest.tasks
2025-08-20T16:15:47.3203185Z 
2025-08-20T16:15:47.3203284Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T16:15:47.3203466Z 
2025-08-20T16:15:47.3203672Z #### task\_import\_file
2025-08-20T16:15:47.3203793Z 
2025-08-20T16:15:47.3203857Z ```python
2025-08-20T16:15:47.3204073Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T16:15:47.3204358Z def task_import_file(self: Any,
2025-08-20T16:15:47.3204578Z                      uri: str,
2025-08-20T16:15:47.3204804Z                      report_type: str | None = None,
2025-08-20T16:15:47.3205072Z                      force: bool = False) -> dict[str, Any]
2025-08-20T16:15:47.3205313Z ```
2025-08-20T16:15:47.3205394Z 
2025-08-20T16:15:47.3205525Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T16:15:47.3205741Z 
2025-08-20T16:15:47.3205822Z <a id="ingest.celery_app"></a>
2025-08-20T16:15:47.3205961Z 
2025-08-20T16:15:47.3206032Z # ingest.celery\_app
2025-08-20T16:15:47.3206153Z 
2025-08-20T16:15:47.3206234Z <a id="ingest.ingest_router"></a>
2025-08-20T16:15:47.3206565Z 
2025-08-20T16:15:47.3206668Z # ingest.ingest\_router
2025-08-20T16:15:47.3206791Z 
2025-08-20T16:15:47.3206874Z <a id="logistics_etl"></a>
2025-08-20T16:15:47.3207015Z 
2025-08-20T16:15:47.3207082Z # logistics\_etl
2025-08-20T16:15:47.3207185Z 
2025-08-20T16:15:47.3207261Z Daily logistics ETL job.
2025-08-20T16:15:47.3207392Z 
2025-08-20T16:15:47.3207476Z <a id="logistics_etl.__main__"></a>
2025-08-20T16:15:47.3207628Z 
2025-08-20T16:15:47.3207711Z # logistics\_etl.\_\_main\_\_
2025-08-20T16:15:47.3207846Z 
2025-08-20T16:15:47.3207921Z <a id="logistics_etl.dsn"></a>
2025-08-20T16:15:47.3208064Z 
2025-08-20T16:15:47.3208135Z # logistics\_etl.dsn
2025-08-20T16:15:47.3208246Z 
2025-08-20T16:15:47.3208362Z Local DSN builder to avoid cross-service dependency.
2025-08-20T16:15:47.3208567Z 
2025-08-20T16:15:47.3208656Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T16:15:47.3208824Z 
2025-08-20T16:15:47.3208894Z #### build\_dsn
2025-08-20T16:15:47.3208997Z 
2025-08-20T16:15:47.3209061Z ```python
2025-08-20T16:15:47.3209241Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:15:47.3209461Z ```
2025-08-20T16:15:47.3209553Z 
2025-08-20T16:15:47.3209817Z Return a Postgres DSN assembled from environment variables.
2025-08-20T16:15:47.3210037Z 
2025-08-20T16:15:47.3210182Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T16:15:47.3210577Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T16:15:47.3210924Z error when any required variable is missing.
2025-08-20T16:15:47.3211099Z 
2025-08-20T16:15:47.3211194Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T16:15:47.3211372Z 
2025-08-20T16:15:47.3211453Z # logistics\_etl.tests.conftest
2025-08-20T16:15:47.3211598Z 
2025-08-20T16:15:47.3211700Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T16:15:47.3211892Z 
2025-08-20T16:15:47.3211979Z # logistics\_etl.tests.test\_repository
2025-08-20T16:15:47.3212143Z 
2025-08-20T16:15:47.3212242Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T16:15:47.3212408Z 
2025-08-20T16:15:47.3212491Z # logistics\_etl.tests.test\_cron
2025-08-20T16:15:47.3212647Z 
2025-08-20T16:15:47.3212744Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T16:15:47.3212927Z 
2025-08-20T16:15:47.3213012Z # logistics\_etl.tests.test\_imports
2025-08-20T16:15:47.3213176Z 
2025-08-20T16:15:47.3213267Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T16:15:47.3213437Z 
2025-08-20T16:15:47.3213527Z # logistics\_etl.tests.test\_smoke
2025-08-20T16:15:47.3213687Z 
2025-08-20T16:15:47.3213782Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T16:15:47.3213957Z 
2025-08-20T16:15:47.3214041Z # logistics\_etl.tests.test\_client
2025-08-20T16:15:47.3214195Z 
2025-08-20T16:15:47.3214276Z <a id="logistics_etl.tests"></a>
2025-08-20T16:15:47.3214425Z 
2025-08-20T16:15:47.3214497Z # logistics\_etl.tests
2025-08-20T16:15:47.3214613Z 
2025-08-20T16:15:47.3214696Z <a id="logistics_etl.flow"></a>
2025-08-20T16:15:47.3214835Z 
2025-08-20T16:15:47.3214905Z # logistics\_etl.flow
2025-08-20T16:15:47.3215027Z 
2025-08-20T16:15:47.3215110Z <a id="logistics_etl.client"></a>
2025-08-20T16:15:47.3215375Z 
2025-08-20T16:15:47.3286669Z # logistics\_etl.client
2025-08-20T16:15:47.3286990Z 
2025-08-20T16:15:47.3287165Z <a id="logistics_etl.cron"></a>
2025-08-20T16:15:47.3287470Z 
2025-08-20T16:15:47.3287631Z # logistics\_etl.cron
2025-08-20T16:15:47.3287868Z 
2025-08-20T16:15:47.3288030Z <a id="logistics_etl.db"></a>
2025-08-20T16:15:47.3288326Z 
2025-08-20T16:15:47.3288468Z # logistics\_etl.db
2025-08-20T16:15:47.3288691Z 
2025-08-20T16:15:47.3288872Z <a id="logistics_etl.repository"></a>
2025-08-20T16:15:47.3289223Z 
2025-08-20T16:15:47.3289403Z # logistics\_etl.repository
2025-08-20T16:15:47.3289615Z 
2025-08-20T16:15:47.3289724Z <a id="alert_bot"></a>
2025-08-20T16:15:47.3289949Z 
2025-08-20T16:15:47.3290206Z # alert\_bot
2025-08-20T16:15:47.3290346Z 
2025-08-20T16:15:47.3290466Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T16:15:47.3290683Z 
2025-08-20T16:15:47.3290787Z # alert\_bot.tests.test\_smoke
2025-08-20T16:15:47.3290983Z 
2025-08-20T16:15:47.3291085Z <a id="alert_bot.tests"></a>
2025-08-20T16:15:47.3291269Z 
2025-08-20T16:15:47.3291370Z # alert\_bot.tests
2025-08-20T16:15:47.3291501Z 
2025-08-20T16:15:47.3291601Z <a id="alert_bot.alert_bot"></a>
2025-08-20T16:15:47.3291787Z 
2025-08-20T16:15:47.3291876Z # alert\_bot.alert\_bot
2025-08-20T16:15:47.3292028Z 
2025-08-20T16:15:47.3292120Z <a id="alert_bot.rules"></a>
2025-08-20T16:15:47.3292297Z 
2025-08-20T16:15:47.3292380Z # alert\_bot.rules
2025-08-20T16:15:47.3292514Z 
2025-08-20T16:15:47.3292606Z <a id="common"></a>
2025-08-20T16:15:47.3292738Z 
2025-08-20T16:15:47.3292817Z # common
2025-08-20T16:15:47.3292928Z 
2025-08-20T16:15:47.3293029Z <a id="common.dsn"></a>
2025-08-20T16:15:47.3293178Z 
2025-08-20T16:15:47.3293256Z # common.dsn
2025-08-20T16:15:47.3293386Z 
2025-08-20T16:15:47.3293491Z <a id="common.dsn.build_dsn"></a>
2025-08-20T16:15:47.3293677Z 
2025-08-20T16:15:47.3293763Z #### build\_dsn
2025-08-20T16:15:47.3293889Z 
2025-08-20T16:15:47.3293968Z ```python
2025-08-20T16:15:47.3294197Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:15:47.3294481Z ```
2025-08-20T16:15:47.3294806Z 
2025-08-20T16:15:47.3294966Z Return a Postgres DSN, validating required variables.
2025-08-20T16:15:47.3295232Z 
2025-08-20T16:15:47.3295436Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T16:15:47.3295875Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T16:15:47.3296287Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T16:15:47.3296849Z missing.
2025-08-20T16:15:47.3296941Z 
2025-08-20T16:15:47.3297032Z <a id="common.models_vendor"></a>
2025-08-20T16:15:47.3297180Z 
2025-08-20T16:15:47.3297254Z # common.models\_vendor
2025-08-20T16:15:47.3297379Z 
2025-08-20T16:15:47.3297467Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T16:15:47.3297638Z 
2025-08-20T16:15:47.3297704Z ## Vendor Objects
2025-08-20T16:15:47.3297815Z 
2025-08-20T16:15:47.3297879Z ```python
2025-08-20T16:15:47.3298037Z class Vendor(Base)
2025-08-20T16:15:47.3298207Z ```
2025-08-20T16:15:47.3298300Z 
2025-08-20T16:15:47.3298385Z Vendor of inventory items.
2025-08-20T16:15:47.3298519Z 
2025-08-20T16:15:47.3298623Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T16:15:47.3298815Z 
2025-08-20T16:15:47.3298889Z ## VendorPrice Objects
2025-08-20T16:15:47.3299010Z 
2025-08-20T16:15:47.3299080Z ```python
2025-08-20T16:15:47.3299241Z class VendorPrice(Base)
2025-08-20T16:15:47.3299425Z ```
2025-08-20T16:15:47.3299507Z 
2025-08-20T16:15:47.3299611Z Association table linking vendors to pricing.
2025-08-20T16:15:47.3299794Z 
2025-08-20T16:15:47.3299877Z <a id="common.db_url"></a>
2025-08-20T16:15:47.3300004Z 
2025-08-20T16:15:47.3300105Z # common.db\_url
2025-08-20T16:15:47.3300220Z 
2025-08-20T16:15:47.3300304Z <a id="common.db_url.build_url"></a>
2025-08-20T16:15:47.3300462Z 
2025-08-20T16:15:47.3300533Z #### build\_url
2025-08-20T16:15:47.3300636Z 
2025-08-20T16:15:47.3300698Z ```python
2025-08-20T16:15:47.3300878Z def build_url(async_: bool = True) -> str
2025-08-20T16:15:47.3301235Z ```
2025-08-20T16:15:47.3301329Z 
2025-08-20T16:15:47.3301436Z Return Postgres DSN from environment variables.
2025-08-20T16:15:47.3301624Z 
2025-08-20T16:15:47.3301701Z <a id="common.keepa"></a>
2025-08-20T16:15:47.3301836Z 
2025-08-20T16:15:47.3301905Z # common.keepa
2025-08-20T16:15:47.3302008Z 
2025-08-20T16:15:47.3302086Z <a id="common.llm"></a>
2025-08-20T16:15:47.3302203Z 
2025-08-20T16:15:47.3302267Z # common.llm
2025-08-20T16:15:47.3302362Z 
2025-08-20T16:15:47.3302449Z <a id="common.settings"></a>
2025-08-20T16:15:47.3302587Z 
2025-08-20T16:15:47.3302654Z # common.settings
2025-08-20T16:15:47.3302783Z 
2025-08-20T16:15:47.3302855Z <a id="common.db"></a>
2025-08-20T16:15:47.3302976Z 
2025-08-20T16:15:47.3303045Z # common.db
2025-08-20T16:15:47.3303138Z 
2025-08-20T16:15:47.3303231Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T16:15:47.3303404Z 
2025-08-20T16:15:47.3303490Z #### build\_sqlalchemy\_url
2025-08-20T16:15:47.3303623Z 
2025-08-20T16:15:47.3303687Z ```python
2025-08-20T16:15:47.3303879Z def build_sqlalchemy_url() -> str
2025-08-20T16:15:47.3304098Z ```
2025-08-20T16:15:47.3304189Z 
2025-08-20T16:15:47.3304289Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T16:15:47.3304465Z 
2025-08-20T16:15:47.3304563Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T16:15:47.3304734Z 
2025-08-20T16:15:47.3304811Z #### build\_asyncpg\_dsn
2025-08-20T16:15:47.3304939Z 
2025-08-20T16:15:47.3305013Z ```python
2025-08-20T16:15:47.3305185Z def build_asyncpg_dsn() -> str
2025-08-20T16:15:47.3305388Z ```
2025-08-20T16:15:47.3305471Z 
2025-08-20T16:15:47.3305609Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T16:15:47.3305827Z 
2025-08-20T16:15:47.3305915Z <a id="common.db.refresh_mvs"></a>
2025-08-20T16:15:47.3306070Z 
2025-08-20T16:15:47.3306142Z #### refresh\_mvs
2025-08-20T16:15:47.3306250Z 
2025-08-20T16:15:47.3306313Z ```python
2025-08-20T16:15:47.3306698Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T16:15:47.3306951Z ```
2025-08-20T16:15:47.3307045Z 
2025-08-20T16:15:47.3307310Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T16:15:47.3307526Z 
2025-08-20T16:15:47.3307604Z <a id="common.config"></a>
2025-08-20T16:15:47.3307740Z 
2025-08-20T16:15:47.3307808Z # common.config
2025-08-20T16:15:47.3307912Z 
2025-08-20T16:15:47.3307992Z <a id="common.base"></a>
2025-08-20T16:15:47.3308113Z 
2025-08-20T16:15:47.3308178Z # common.base
2025-08-20T16:15:47.3308281Z 
2025-08-20T16:15:47.3308362Z <a id="common.base.Base"></a>
2025-08-20T16:15:47.3308505Z 
2025-08-20T16:15:47.3308570Z ## Base Objects
2025-08-20T16:15:47.3308676Z 
2025-08-20T16:15:47.3308738Z ```python
2025-08-20T16:15:47.3308911Z class Base(DeclarativeBase)
2025-08-20T16:15:47.3309099Z ```
2025-08-20T16:15:47.3309179Z 
2025-08-20T16:15:47.3309269Z Base class for SQLAlchemy models.
2025-08-20T16:15:47.3309418Z 
2025-08-20T16:15:47.3309490Z <a id="repricer"></a>
2025-08-20T16:15:47.3309612Z 
2025-08-20T16:15:47.3309677Z # repricer
2025-08-20T16:15:47.3309769Z 
2025-08-20T16:15:47.3309862Z <a id="repricer.app.schemas"></a>
2025-08-20T16:15:47.3310025Z 
2025-08-20T16:15:47.3310103Z # repricer.app.schemas
2025-08-20T16:15:47.3310222Z 
2025-08-20T16:15:47.3310311Z <a id="repricer.app.deps"></a>
2025-08-20T16:15:47.3310451Z 
2025-08-20T16:15:47.3310525Z # repricer.app.deps
2025-08-20T16:15:47.3310643Z 
2025-08-20T16:15:47.3310763Z Placeholder module for Keepa / SP-API clients.
2025-08-20T16:15:47.3310948Z 
2025-08-20T16:15:47.3311032Z <a id="repricer.app.logic"></a>
2025-08-20T16:15:47.3311195Z 
2025-08-20T16:15:47.3311270Z # repricer.app.logic
2025-08-20T16:15:47.3311390Z 
2025-08-20T16:15:47.3311497Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T16:15:47.3311676Z 
2025-08-20T16:15:47.3311742Z #### MIN\_MARGIN
2025-08-20T16:15:47.3311850Z 
2025-08-20T16:15:47.3311912Z 15 % ROI
2025-08-20T16:15:47.3312002Z 
2025-08-20T16:15:47.3312107Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T16:15:47.3312300Z 
2025-08-20T16:15:47.3312369Z #### compute\_price
2025-08-20T16:15:47.3312646Z 
2025-08-20T16:15:47.3312725Z ```python
2025-08-20T16:15:47.3312972Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T16:15:47.3313278Z ```
2025-08-20T16:15:47.3313359Z 
2025-08-20T16:15:47.3313470Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T16:15:47.3313754Z Replace with real competitive logic later.
2025-08-20T16:15:47.3313927Z 
2025-08-20T16:15:47.3314009Z <a id="repricer.app.main"></a>
2025-08-20T16:15:47.3314161Z 
2025-08-20T16:15:47.3314235Z # repricer.app.main
2025-08-20T16:15:47.3314345Z 
2025-08-20T16:15:47.3314429Z <a id="repricer.app"></a>
2025-08-20T16:15:47.3314558Z 
2025-08-20T16:15:47.3314624Z # repricer.app
2025-08-20T16:15:47.3314726Z 
2025-08-20T16:15:47.3314826Z <a id="repricer.tests.test_imports"></a>
2025-08-20T16:15:47.3314996Z 
2025-08-20T16:15:47.3315079Z # repricer.tests.test\_imports
2025-08-20T16:15:47.3315231Z 
2025-08-20T16:15:47.3315317Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T16:15:47.3315481Z 
2025-08-20T16:15:47.3315573Z # repricer.tests.test\_smoke
2025-08-20T16:15:47.3315716Z 
2025-08-20T16:15:47.3315795Z <a id="repricer.tests"></a>
2025-08-20T16:15:47.3315926Z 
2025-08-20T16:15:47.3316001Z # repricer.tests
2025-08-20T16:15:47.3316106Z 
2025-08-20T16:15:47.3316171Z <a id="db"></a>
2025-08-20T16:15:47.3316278Z 
2025-08-20T16:15:47.3316337Z # db
2025-08-20T16:15:47.3316531Z 
2025-08-20T16:15:47.3316607Z <a id="db.utils.views"></a>
2025-08-20T16:15:47.3316745Z 
2025-08-20T16:15:47.3316810Z # db.utils.views
2025-08-20T16:15:47.3316913Z 
2025-08-20T16:15:47.3317013Z <a id="db.utils.views.replace_view"></a>
2025-08-20T16:15:47.3317185Z 
2025-08-20T16:15:47.3317252Z #### replace\_view
2025-08-20T16:15:47.3317366Z 
2025-08-20T16:15:47.3317429Z ```python
2025-08-20T16:15:47.3317623Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T16:15:47.3317873Z ```
2025-08-20T16:15:47.3317954Z 
2025-08-20T16:15:47.3318049Z Drop and recreate a SQL view atomically.
2025-08-20T16:15:47.3318213Z 
2025-08-20T16:15:47.3318289Z <a id="db.utils"></a>
2025-08-20T16:15:47.3318530Z 
2025-08-20T16:15:47.3318600Z # db.utils
2025-08-20T16:15:47.3318690Z 
2025-08-20T16:15:47.3318767Z <a id="price_importer"></a>
2025-08-20T16:15:47.3318907Z 
2025-08-20T16:15:47.3318977Z # price\_importer
2025-08-20T16:15:47.3319084Z 
2025-08-20T16:15:47.3319190Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T16:15:47.3319380Z 
2025-08-20T16:15:47.3319470Z # price\_importer.services\_common.dsn
2025-08-20T16:15:47.3319636Z 
2025-08-20T16:15:47.3319770Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T16:15:47.3319983Z 
2025-08-20T16:15:47.3320048Z #### build\_dsn
2025-08-20T16:15:47.3320154Z 
2025-08-20T16:15:47.3320217Z ```python
2025-08-20T16:15:47.3320394Z def build_dsn(sync: bool = True) -> str
2025-08-20T16:15:47.3320621Z ```
2025-08-20T16:15:47.3320704Z 
2025-08-20T16:15:47.3320777Z Return safe DSN.
2025-08-20T16:15:47.3320883Z 
2025-08-20T16:15:47.3321067Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T16:15:47.3321451Z Falls back to individual PG_* variables.
2025-08-20T16:15:47.3321981Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T16:15:47.3322192Z 
2025-08-20T16:15:47.3322324Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T16:15:47.3322536Z 
2025-08-20T16:15:47.3322648Z # price\_importer.services\_common.models\_vendor
2025-08-20T16:15:47.3322846Z 
2025-08-20T16:15:47.3322953Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T16:15:47.3323141Z 
2025-08-20T16:15:47.3323249Z # price\_importer.services\_common.db\_url
2025-08-20T16:15:47.3323422Z 
2025-08-20T16:15:47.3323555Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T16:15:47.3323781Z 
2025-08-20T16:15:47.3323848Z #### build\_url
2025-08-20T16:15:47.3323952Z 
2025-08-20T16:15:47.3324023Z ```python
2025-08-20T16:15:47.3324200Z def build_url(async_: bool = True) -> str
2025-08-20T16:15:47.3324435Z ```
2025-08-20T16:15:47.3324518Z 
2025-08-20T16:15:47.3324751Z Return Postgres DSN from environment variables.
2025-08-20T16:15:47.3324947Z 
2025-08-20T16:15:47.3325061Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T16:15:47.3325246Z 
2025-08-20T16:15:47.3325338Z # price\_importer.services\_common.keepa
2025-08-20T16:15:47.3325512Z 
2025-08-20T16:15:47.3325613Z <a id="price_importer.services_common.llm"></a>
2025-08-20T16:15:47.3325792Z 
2025-08-20T16:15:47.3325893Z # price\_importer.services\_common.llm
2025-08-20T16:15:47.3326055Z 
2025-08-20T16:15:47.3326171Z <a id="price_importer.services_common.settings"></a>
2025-08-20T16:15:47.3326487Z 
2025-08-20T16:15:47.3326587Z # price\_importer.services\_common.settings
2025-08-20T16:15:47.3326759Z 
2025-08-20T16:15:47.3326865Z <a id="price_importer.services_common.db"></a>
2025-08-20T16:15:47.3327058Z 
2025-08-20T16:15:47.3327147Z # price\_importer.services\_common.db
2025-08-20T16:15:47.3327312Z 
2025-08-20T16:15:47.3327478Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T16:15:47.3327727Z 
2025-08-20T16:15:47.3327813Z #### build\_sqlalchemy\_url
2025-08-20T16:15:47.3327953Z 
2025-08-20T16:15:47.3328018Z ```python
2025-08-20T16:15:47.3328191Z def build_sqlalchemy_url() -> str
2025-08-20T16:15:47.3328406Z ```
2025-08-20T16:15:47.3328489Z 
2025-08-20T16:15:47.3328586Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T16:15:47.3328768Z 
2025-08-20T16:15:47.3328913Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T16:15:47.3329145Z 
2025-08-20T16:15:47.3329225Z #### build\_asyncpg\_dsn
2025-08-20T16:15:47.3329352Z 
2025-08-20T16:15:47.3329415Z ```python
2025-08-20T16:15:47.3329590Z def build_asyncpg_dsn() -> str
2025-08-20T16:15:47.3329787Z ```
2025-08-20T16:15:47.3329874Z 
2025-08-20T16:15:47.3330001Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T16:15:47.3330214Z 
2025-08-20T16:15:47.3330346Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T16:15:47.3330554Z 
2025-08-20T16:15:47.3330626Z #### refresh\_mvs
2025-08-20T16:15:47.3330850Z 
2025-08-20T16:15:47.3330920Z ```python
2025-08-20T16:15:47.3331113Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T16:15:47.3331363Z ```
2025-08-20T16:15:47.3331445Z 
2025-08-20T16:15:47.3331579Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T16:15:47.3331802Z 
2025-08-20T16:15:47.3331898Z <a id="price_importer.services_common"></a>
2025-08-20T16:15:47.3332070Z 
2025-08-20T16:15:47.3332165Z # price\_importer.services\_common
2025-08-20T16:15:47.3332320Z 
2025-08-20T16:15:47.3332423Z <a id="price_importer.services_common.base"></a>
2025-08-20T16:15:47.3332616Z 
2025-08-20T16:15:47.3332707Z # price\_importer.services\_common.base
2025-08-20T16:15:47.3332872Z 
2025-08-20T16:15:47.3332963Z <a id="price_importer.normaliser"></a>
2025-08-20T16:15:47.3333134Z 
2025-08-20T16:15:47.3333216Z # price\_importer.normaliser
2025-08-20T16:15:47.3333355Z 
2025-08-20T16:15:47.3333467Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T16:15:47.3333658Z 
2025-08-20T16:15:47.3333753Z # price\_importer.common.models\_vendor
2025-08-20T16:15:47.3333922Z 
2025-08-20T16:15:47.3334014Z <a id="price_importer.common.db_url"></a>
2025-08-20T16:15:47.3334187Z 
2025-08-20T16:15:47.3334275Z # price\_importer.common.db\_url
2025-08-20T16:15:47.3334428Z 
2025-08-20T16:15:47.3334532Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T16:15:47.3334718Z 
2025-08-20T16:15:47.3334791Z #### make\_dsn
2025-08-20T16:15:47.3334893Z 
2025-08-20T16:15:47.3334956Z ```python
2025-08-20T16:15:47.3335145Z def make_dsn(async_: bool = False) -> str
2025-08-20T16:15:47.3335374Z ```
2025-08-20T16:15:47.3335463Z 
2025-08-20T16:15:47.3335546Z Return DSN using shared builder.
2025-08-20T16:15:47.3335692Z 
2025-08-20T16:15:47.3335811Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T16:15:47.3336003Z 
2025-08-20T16:15:47.3336068Z #### build\_url
2025-08-20T16:15:47.3336169Z 
2025-08-20T16:15:47.3336241Z ```python
2025-08-20T16:15:47.3336597Z def build_url(async_: bool = False) -> str
2025-08-20T16:15:47.3337005Z ```
2025-08-20T16:15:47.3337088Z 
2025-08-20T16:15:47.3337213Z Return Postgres DSN built from environment variables.
2025-08-20T16:15:47.3337424Z 
2025-08-20T16:15:47.3337514Z <a id="price_importer.common"></a>
2025-08-20T16:15:47.3337672Z 
2025-08-20T16:15:47.3337758Z # price\_importer.common
2025-08-20T16:15:47.3337887Z 
2025-08-20T16:15:47.3337981Z <a id="price_importer.common.base"></a>
2025-08-20T16:15:47.3338157Z 
2025-08-20T16:15:47.3338240Z # price\_importer.common.base
2025-08-20T16:15:47.3338384Z 
2025-08-20T16:15:47.3338482Z <a id="price_importer.tests.conftest"></a>
2025-08-20T16:15:47.3338662Z 
2025-08-20T16:15:47.3338749Z # price\_importer.tests.conftest
2025-08-20T16:15:47.3338897Z 
2025-08-20T16:15:47.3339004Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T16:15:47.3339223Z 
2025-08-20T16:15:47.3339312Z # price\_importer.tests.test\_reader
2025-08-20T16:15:47.3339484Z 
2025-08-20T16:15:47.3339588Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T16:15:47.3339779Z 
2025-08-20T16:15:47.3339872Z # price\_importer.tests.test\_imports
2025-08-20T16:15:47.3340043Z 
2025-08-20T16:15:47.3340144Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T16:15:47.3340317Z 
2025-08-20T16:15:47.3340412Z # price\_importer.tests.test\_smoke
2025-08-20T16:15:47.3340570Z 
2025-08-20T16:15:47.3340678Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T16:15:47.3340871Z 
2025-08-20T16:15:47.3340964Z # price\_importer.tests.test\_normaliser
2025-08-20T16:15:47.3341132Z 
2025-08-20T16:15:47.3341220Z <a id="price_importer.tests"></a>
2025-08-20T16:15:47.3341380Z 
2025-08-20T16:15:47.3341456Z # price\_importer.tests
2025-08-20T16:15:47.3341580Z 
2025-08-20T16:15:47.3341673Z <a id="price_importer.reader"></a>
2025-08-20T16:15:47.3341830Z 
2025-08-20T16:15:47.3341909Z # price\_importer.reader
2025-08-20T16:15:47.3342044Z 
2025-08-20T16:15:47.3342137Z <a id="price_importer.repository"></a>
2025-08-20T16:15:47.3342303Z 
2025-08-20T16:15:47.3342393Z # price\_importer.repository
2025-08-20T16:15:47.3342659Z 
2025-08-20T16:15:47.3342746Z <a id="price_importer.import"></a>
2025-08-20T16:15:47.3342906Z 
2025-08-20T16:15:47.3342993Z # price\_importer.import
2025-08-20T16:15:47.3343119Z 
2025-08-20T16:15:47.3343190Z <a id="fees_h10"></a>
2025-08-20T16:15:47.3343307Z 
2025-08-20T16:15:47.3343378Z # fees\_h10
2025-08-20T16:15:47.3343472Z 
2025-08-20T16:15:47.3343549Z <a id="fees_h10.worker"></a>
2025-08-20T16:15:47.3343691Z 
2025-08-20T16:15:47.3343758Z # fees\_h10.worker
2025-08-20T16:15:47.3343865Z 
2025-08-20T16:15:47.3343969Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T16:15:47.3344149Z 
2025-08-20T16:15:47.3344222Z #### list\_active\_asins
2025-08-20T16:15:47.3344342Z 
2025-08-20T16:15:47.3344412Z ```python
2025-08-20T16:15:47.3344585Z def list_active_asins() -> list[str]
2025-08-20T16:15:47.3344805Z ```
2025-08-20T16:15:47.3344890Z 
2025-08-20T16:15:47.3345002Z Return known ASINs or an empty list if unavailable.
2025-08-20T16:15:47.3345214Z 
2025-08-20T16:15:47.3345303Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T16:15:47.3345463Z 
2025-08-20T16:15:47.3345549Z # fees\_h10.tests.test\_smoke
2025-08-20T16:15:47.3345687Z 
2025-08-20T16:15:47.3345766Z <a id="fees_h10.tests"></a>
2025-08-20T16:15:47.3345896Z 
2025-08-20T16:15:47.3345968Z # fees\_h10.tests
2025-08-20T16:15:47.3346074Z 
2025-08-20T16:15:47.3346152Z <a id="fees_h10.client"></a>
2025-08-20T16:15:47.3346289Z 
2025-08-20T16:15:47.3346354Z # fees\_h10.client
2025-08-20T16:15:47.3346572Z 
2025-08-20T16:15:47.3346662Z <a id="fees_h10.repository"></a>
2025-08-20T16:15:47.3346806Z 
2025-08-20T16:15:47.3346878Z # fees\_h10.repository
2025-08-20T16:15:47.3346997Z 
2025-08-20T16:15:47.3347108Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T16:15:47.3347290Z 
2025-08-20T16:15:47.3347363Z #### upsert\_fees\_raw
2025-08-20T16:15:47.3347485Z 
2025-08-20T16:15:47.3347548Z ```python
2025-08-20T16:15:47.3347721Z def upsert_fees_raw(engine: Engine,
2025-08-20T16:15:47.3348098Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T16:15:47.3348350Z                     *,
2025-08-20T16:15:47.3348577Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T16:15:47.3348852Z ```
2025-08-20T16:15:47.3348935Z 
2025-08-20T16:15:47.3349016Z Idempotent upsert for fees.
2025-08-20T16:15:47.3349158Z 
2025-08-20T16:15:47.3349310Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T16:15:47.3349655Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T16:15:47.3349969Z Only updates when one of the mutable fields changes.
2025-08-20T16:15:47.3350165Z 
2025-08-20T16:15:47.3350241Z <a id="emailer"></a>
2025-08-20T16:15:47.3350355Z 
2025-08-20T16:15:47.3350418Z # emailer
2025-08-20T16:15:47.3350511Z 
2025-08-20T16:15:47.3370657Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T16:15:47.3370948Z 
2025-08-20T16:15:47.3371059Z # emailer.tests.test\_import\_emailer
2025-08-20T16:15:47.3371255Z 
2025-08-20T16:15:47.3371367Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T16:15:47.3371549Z 
2025-08-20T16:15:47.3371641Z # emailer.tests.test\_smoke
2025-08-20T16:15:47.3371786Z 
2025-08-20T16:15:47.3371871Z <a id="emailer.tests"></a>
2025-08-20T16:15:47.3372009Z 
2025-08-20T16:15:47.3372093Z # emailer.tests
2025-08-20T16:15:47.3372204Z 
2025-08-20T16:15:47.3372291Z <a id="emailer.generate_body"></a>
2025-08-20T16:15:47.3372460Z 
2025-08-20T16:15:47.3372537Z # emailer.generate\_body
2025-08-20T16:15:47.3372667Z 
2025-08-20T16:15:47.3372742Z <a id="llm_server"></a>
2025-08-20T16:15:47.3372872Z 
2025-08-20T16:15:47.3372940Z # llm\_server
2025-08-20T16:15:47.3373041Z 
2025-08-20T16:15:47.3373129Z <a id="llm_server.app"></a>
2025-08-20T16:15:47.3373266Z 
2025-08-20T16:15:47.3373336Z # llm\_server.app
2025-08-20T16:15:47.3373456Z 
