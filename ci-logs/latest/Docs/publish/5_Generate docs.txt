2025-08-18T21:33:30.2080703Z ##[group]Run pydoc-markdown
2025-08-18T21:33:30.2081011Z [36;1mpydoc-markdown[0m
2025-08-18T21:33:30.2120304Z shell: /usr/bin/bash -e {0}
2025-08-18T21:33:30.2120536Z env:
2025-08-18T21:33:30.2120768Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:33:30.2121161Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T21:33:30.2121673Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:33:30.2122010Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:33:30.2122351Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:33:30.2122688Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T21:33:30.2122973Z ##[endgroup]
2025-08-18T21:33:30.5683445Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T21:33:30.5684324Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T21:33:30.5684897Z In "pydoc-markdown.yml"
2025-08-18T21:33:30.5685413Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T21:33:30.5686349Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T21:33:30.5687211Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T21:33:30.5687644Z 
2025-08-18T21:33:30.8952049Z <a id="__init__"></a>
2025-08-18T21:33:30.8952474Z 
2025-08-18T21:33:30.8952596Z # \_\_init\_\_
2025-08-18T21:33:30.8952784Z 
2025-08-18T21:33:30.8952920Z <a id="api"></a>
2025-08-18T21:33:30.8953119Z 
2025-08-18T21:33:30.8953230Z # api
2025-08-18T21:33:30.8953408Z 
2025-08-18T21:33:30.8953549Z <a id="api.errors"></a>
2025-08-18T21:33:30.8953775Z 
2025-08-18T21:33:30.8953901Z # api.errors
2025-08-18T21:33:30.8954077Z 
2025-08-18T21:33:30.8954225Z <a id="api.sentry_config"></a>
2025-08-18T21:33:30.8954486Z 
2025-08-18T21:33:30.8954625Z # api.sentry\_config
2025-08-18T21:33:30.8954833Z 
2025-08-18T21:33:30.8955000Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T21:33:30.8955318Z 
2025-08-18T21:33:30.8955463Z # api.tests.test\_sentry\_scrub
2025-08-18T21:33:30.8955770Z 
2025-08-18T21:33:30.8955933Z <a id="api.tests.test_errors_json"></a>
2025-08-18T21:33:30.8956252Z 
2025-08-18T21:33:30.8956400Z # api.tests.test\_errors\_json
2025-08-18T21:33:30.8956672Z 
2025-08-18T21:33:30.8956829Z <a id="api.tests.test_llm"></a>
2025-08-18T21:33:30.8957088Z 
2025-08-18T21:33:30.8957215Z # api.tests.test\_llm
2025-08-18T21:33:30.8957439Z 
2025-08-18T21:33:30.8957602Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T21:33:30.8957911Z 
2025-08-18T21:33:30.8958057Z # api.tests.test\_sentry\_event
2025-08-18T21:33:30.8958320Z 
2025-08-18T21:33:30.8958543Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T21:33:30.8958914Z 
2025-08-18T21:33:30.8959067Z ## DummyTransport Objects
2025-08-18T21:33:30.8959303Z 
2025-08-18T21:33:30.8959421Z ```python
2025-08-18T21:33:30.8959733Z class DummyTransport()
2025-08-18T21:33:30.8960064Z ```
2025-08-18T21:33:30.8960222Z 
2025-08-18T21:33:30.8960541Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T21:33:30.8961670Z 
2025-08-18T21:33:30.8961829Z #### capture\_envelope
2025-08-18T21:33:30.8962049Z 
2025-08-18T21:33:30.8962165Z ```python
2025-08-18T21:33:30.8962542Z def capture_envelope(envelope)
2025-08-18T21:33:30.8962900Z ```
2025-08-18T21:33:30.8963056Z 
2025-08-18T21:33:30.8963283Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T21:33:30.8963654Z 
2025-08-18T21:33:30.8963810Z <a id="api.tests.test_cors"></a>
2025-08-18T21:33:30.8964090Z 
2025-08-18T21:33:30.8964227Z # api.tests.test\_cors
2025-08-18T21:33:30.8964441Z 
2025-08-18T21:33:30.8964599Z <a id="api.tests.test_imports"></a>
2025-08-18T21:33:30.8964884Z 
2025-08-18T21:33:30.8965024Z # api.tests.test\_imports
2025-08-18T21:33:30.8965258Z 
2025-08-18T21:33:30.8965423Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T21:33:30.8965721Z 
2025-08-18T21:33:30.8965869Z # api.tests.test\_rate\_limit
2025-08-18T21:33:30.8966140Z 
2025-08-18T21:33:30.8966318Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T21:33:30.8967063Z 
2025-08-18T21:33:30.8967196Z #### app
2025-08-18T21:33:30.8967358Z 
2025-08-18T21:33:30.8967476Z noqa: E402
2025-08-18T21:33:30.8967644Z 
2025-08-18T21:33:30.8967813Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T21:33:30.8968115Z 
2025-08-18T21:33:30.8968263Z # api.tests.test\_entrypoint
2025-08-18T21:33:30.8968523Z 
2025-08-18T21:33:30.8968677Z <a id="api.tests.test_health"></a>
2025-08-18T21:33:30.8968951Z 
2025-08-18T21:33:30.8969101Z # api.tests.test\_health
2025-08-18T21:33:30.8969331Z 
2025-08-18T21:33:30.8969478Z <a id="api.logging_config"></a>
2025-08-18T21:33:30.8969740Z 
2025-08-18T21:33:30.8969879Z # api.logging\_config
2025-08-18T21:33:30.8970093Z 
2025-08-18T21:33:30.8970242Z <a id="api.migrations.env"></a>
2025-08-18T21:33:30.8970509Z 
2025-08-18T21:33:30.8970642Z # api.migrations.env
2025-08-18T21:33:30.8970857Z 
2025-08-18T21:33:30.8971075Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T21:33:30.8971686Z 
2025-08-18T21:33:30.8971909Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T21:33:30.8972280Z 
2025-08-18T21:33:30.8972500Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T21:33:30.8972853Z 
2025-08-18T21:33:30.8973030Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T21:33:30.8973357Z 
2025-08-18T21:33:30.8973637Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T21:33:30.8974082Z 
2025-08-18T21:33:30.8974344Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T21:33:30.8974740Z 
2025-08-18T21:33:30.8974967Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T21:33:30.8975335Z 
2025-08-18T21:33:30.8975541Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T21:33:30.8975869Z 
2025-08-18T21:33:30.8976085Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T21:33:30.8976451Z 
2025-08-18T21:33:30.8976642Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T21:33:30.8976971Z 
2025-08-18T21:33:30.8977214Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T21:33:30.8977623Z 
2025-08-18T21:33:30.8977821Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T21:33:30.8978172Z 
2025-08-18T21:33:30.8978391Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T21:33:30.8978749Z 
2025-08-18T21:33:30.8978941Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T21:33:30.8979286Z 
2025-08-18T21:33:30.8979516Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T21:33:30.8979885Z 
2025-08-18T21:33:30.8980092Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T21:33:30.8980438Z 
2025-08-18T21:33:30.8980692Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T21:33:30.8981103Z 
2025-08-18T21:33:30.8981336Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T21:33:30.8981889Z 
2025-08-18T21:33:30.8982125Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T21:33:30.8982506Z 
2025-08-18T21:33:30.8982706Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T21:33:30.8983285Z 
2025-08-18T21:33:30.8983543Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T21:33:30.8983953Z 
2025-08-18T21:33:30.8984182Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T21:33:30.8984612Z 
2025-08-18T21:33:30.8984814Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T21:33:30.8985170Z 
2025-08-18T21:33:30.8985342Z # api.migrations.versions.0001\_baseline
2025-08-18T21:33:30.8985652Z 
2025-08-18T21:33:30.8985811Z <a id="api.migrations.versions"></a>
2025-08-18T21:33:30.8986110Z 
2025-08-18T21:33:30.8986260Z # api.migrations.versions
2025-08-18T21:33:30.8986502Z 
2025-08-18T21:33:30.8986654Z <a id="api.migrations"></a>
2025-08-18T21:33:30.8986898Z 
2025-08-18T21:33:30.8987024Z # api.migrations
2025-08-18T21:33:30.8987226Z 
2025-08-18T21:33:30.8987362Z <a id="api.db"></a>
2025-08-18T21:33:30.8987559Z 
2025-08-18T21:33:30.8987670Z # api.db
2025-08-18T21:33:30.8987842Z 
2025-08-18T21:33:30.8987985Z <a id="api.routes.stats"></a>
2025-08-18T21:33:30.8988489Z 
2025-08-18T21:33:30.8988627Z # api.routes.stats
2025-08-18T21:33:30.8988823Z 
2025-08-18T21:33:30.8988978Z <a id="api.routes.stats.kpi"></a>
2025-08-18T21:33:30.8989252Z 
2025-08-18T21:33:30.8989372Z #### kpi
2025-08-18T21:33:30.8989528Z 
2025-08-18T21:33:30.8989641Z ```python
2025-08-18T21:33:30.8989943Z @router.get("/stats/kpi")
2025-08-18T21:33:30.8990366Z def kpi() -> List[Dict[str, int]]
2025-08-18T21:33:30.8990749Z ```
2025-08-18T21:33:30.8990899Z 
2025-08-18T21:33:30.8991040Z Return KPI metrics (mock).
2025-08-18T21:33:30.8991288Z 
2025-08-18T21:33:30.8991638Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T21:33:30.8991969Z 
2025-08-18T21:33:30.8992107Z #### roi\_by\_vendor
2025-08-18T21:33:30.8992308Z 
2025-08-18T21:33:30.8992422Z ```python
2025-08-18T21:33:30.8992739Z @router.get("/stats/roi_by_vendor")
2025-08-18T21:33:30.8993197Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T21:33:30.8993617Z ```
2025-08-18T21:33:30.8993768Z 
2025-08-18T21:33:30.8993932Z Return ROI percent by vendor.
2025-08-18T21:33:30.8994195Z 
2025-08-18T21:33:30.8994357Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T21:33:30.8994662Z 
2025-08-18T21:33:30.8994785Z #### roi\_trend
2025-08-18T21:33:30.8994969Z 
2025-08-18T21:33:30.8995080Z ```python
2025-08-18T21:33:30.8995382Z @router.get("/stats/roi_trend")
2025-08-18T21:33:30.8995802Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T21:33:30.8996219Z ```
2025-08-18T21:33:30.8996365Z 
2025-08-18T21:33:30.8996503Z Return 30-day ROI trend.
2025-08-18T21:33:30.8996736Z 
2025-08-18T21:33:30.8996875Z <a id="api.routes.roi"></a>
2025-08-18T21:33:30.8997113Z 
2025-08-18T21:33:30.8997247Z # api.routes.roi
2025-08-18T21:33:30.8997439Z 
2025-08-18T21:33:30.8997587Z <a id="api.routes.health"></a>
2025-08-18T21:33:30.8997851Z 
2025-08-18T21:33:30.8997977Z # api.routes.health
2025-08-18T21:33:30.8998183Z 
2025-08-18T21:33:30.8998347Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T21:33:30.8998661Z 
2025-08-18T21:33:30.8998789Z #### MAX\_SKEW
2025-08-18T21:33:30.8998969Z 
2025-08-18T21:33:30.8999087Z seconds
2025-08-18T21:33:30.8999240Z 
2025-08-18T21:33:30.8999403Z <a id="api.routes.health.health"></a>
2025-08-18T21:33:30.8999706Z 
2025-08-18T21:33:30.8999815Z #### health
2025-08-18T21:33:30.8999975Z 
2025-08-18T21:33:30.9000090Z ```python
2025-08-18T21:33:30.9000443Z @router.get("/health", include_in_schema=False)
2025-08-18T21:33:30.9001108Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T21:33:30.9001929Z ```
2025-08-18T21:33:30.9002092Z 
2025-08-18T21:33:30.9002316Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T21:33:30.9002677Z 
2025-08-18T21:33:30.9002834Z <a id="api.routes.repository"></a>
2025-08-18T21:33:30.9003120Z 
2025-08-18T21:33:30.9003258Z # api.routes.repository
2025-08-18T21:33:30.9003483Z 
2025-08-18T21:33:30.9003619Z <a id="api.routes"></a>
2025-08-18T21:33:30.9003840Z 
2025-08-18T21:33:30.9003956Z # api.routes
2025-08-18T21:33:30.9004133Z 
2025-08-18T21:33:30.9004515Z <a id="api.models.fee"></a>
2025-08-18T21:33:30.9004759Z 
2025-08-18T21:33:30.9004879Z # api.models.fee
2025-08-18T21:33:30.9005080Z 
2025-08-18T21:33:30.9005213Z <a id="api.models"></a>
2025-08-18T21:33:30.9005429Z 
2025-08-18T21:33:30.9005544Z # api.models
2025-08-18T21:33:30.9005727Z 
2025-08-18T21:33:30.9005871Z <a id="api.roi_repository"></a>
2025-08-18T21:33:30.9006127Z 
2025-08-18T21:33:30.9006266Z # api.roi\_repository
2025-08-18T21:33:30.9006454Z 
2025-08-18T21:33:30.9006573Z <a id="api.main"></a>
2025-08-18T21:33:30.9006764Z 
2025-08-18T21:33:30.9006876Z # api.main
2025-08-18T21:33:30.9007028Z 
2025-08-18T21:33:30.9007159Z <a id="api.main.ready"></a>
2025-08-18T21:33:30.9007399Z 
2025-08-18T21:33:30.9007511Z #### ready
2025-08-18T21:33:30.9007669Z 
2025-08-18T21:33:30.9007781Z ```python
2025-08-18T21:33:30.9008313Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T21:33:30.9009091Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T21:33:30.9009984Z                                                                       str]
2025-08-18T21:33:30.9010405Z ```
2025-08-18T21:33:30.9010566Z 
2025-08-18T21:33:30.9010741Z Return 200 only when migrations are at head.
2025-08-18T21:33:30.9011055Z 
2025-08-18T21:33:30.9011190Z <a id="api.config"></a>
2025-08-18T21:33:30.9011624Z 
2025-08-18T21:33:30.9011749Z # api.config
2025-08-18T21:33:30.9011927Z 
2025-08-18T21:33:30.9012053Z <a id="etl"></a>
2025-08-18T21:33:30.9012240Z 
2025-08-18T21:33:30.9012348Z # etl
2025-08-18T21:33:30.9012512Z 
2025-08-18T21:33:30.9012656Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T21:33:30.9012929Z 
2025-08-18T21:33:30.9013059Z # etl.fba\_fee\_ingestor
2025-08-18T21:33:30.9013288Z 
2025-08-18T21:33:30.9013432Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T21:33:30.9013693Z 
2025-08-18T21:33:30.9013832Z # etl.sp\_fees\_ingestor
2025-08-18T21:33:30.9014053Z 
2025-08-18T21:33:30.9014195Z <a id="etl.keepa_ingestor"></a>
2025-08-18T21:33:30.9014473Z 
2025-08-18T21:33:30.9014607Z # etl.keepa\_ingestor
2025-08-18T21:33:30.9014813Z 
2025-08-18T21:33:30.9014931Z <a id="etl.db"></a>
2025-08-18T21:33:30.9015133Z 
2025-08-18T21:33:30.9015244Z # etl.db
2025-08-18T21:33:30.9015401Z 
2025-08-18T21:33:30.9015602Z <a id="etl.dialects.schemas"></a>
2025-08-18T21:33:30.9015872Z 
2025-08-18T21:33:30.9016005Z # etl.dialects.schemas
2025-08-18T21:33:30.9016230Z 
2025-08-18T21:33:30.9016419Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T21:33:30.9016756Z 
2025-08-18T21:33:30.9016918Z # etl.dialects.amazon\_reimbursements
2025-08-18T21:33:30.9017215Z 
2025-08-18T21:33:30.9017391Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T21:33:30.9017708Z 
2025-08-18T21:33:30.9017871Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T21:33:30.9018154Z 
2025-08-18T21:33:30.9018317Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T21:33:30.9018625Z 
2025-08-18T21:33:30.9018772Z # etl.dialects.amazon\_returns
2025-08-18T21:33:30.9019027Z 
2025-08-18T21:33:30.9019218Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T21:33:30.9019538Z 
2025-08-18T21:33:30.9019693Z # etl.dialects.amazon\_fee\_preview
2025-08-18T21:33:30.9019976Z 
2025-08-18T21:33:30.9020179Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T21:33:30.9020519Z 
2025-08-18T21:33:30.9020685Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T21:33:30.9021000Z 
2025-08-18T21:33:30.9021177Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T21:33:30.9021667Z 
2025-08-18T21:33:30.9021839Z # etl.dialects.amazon\_settlements
2025-08-18T21:33:30.9022134Z 
2025-08-18T21:33:30.9022277Z <a id="etl.dialects"></a>
2025-08-18T21:33:30.9022511Z 
2025-08-18T21:33:30.9022641Z # etl.dialects
2025-08-18T21:33:30.9022825Z 
2025-08-18T21:33:30.9022947Z <a id="ingest"></a>
2025-08-18T21:33:30.9023140Z 
2025-08-18T21:33:30.9023262Z # ingest
2025-08-18T21:33:30.9023426Z 
2025-08-18T21:33:30.9023573Z <a id="ingest.maintenance"></a>
2025-08-18T21:33:30.9023843Z 
2025-08-18T21:33:30.9023974Z # ingest.maintenance
2025-08-18T21:33:30.9024431Z 
2025-08-18T21:33:30.9024586Z <a id="ingest.copy_loader"></a>
2025-08-18T21:33:30.9024843Z 
2025-08-18T21:33:30.9024973Z # ingest.copy\_loader
2025-08-18T21:33:30.9025183Z 
2025-08-18T21:33:30.9025375Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T21:33:30.9025706Z 
2025-08-18T21:33:30.9025842Z #### copy\_df\_via\_temp
2025-08-18T21:33:30.9026070Z 
2025-08-18T21:33:30.9026184Z ```python
2025-08-18T21:33:30.9026487Z def copy_df_via_temp(engine: Engine,
2025-08-18T21:33:30.9026915Z                      df: pd.DataFrame,
2025-08-18T21:33:30.9027333Z                      target_table: str,
2025-08-18T21:33:30.9027724Z                      *,
2025-08-18T21:33:30.9028107Z                      target_schema: Optional[str] = None,
2025-08-18T21:33:30.9028567Z                      columns: Sequence[str],
2025-08-18T21:33:30.9029059Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T21:33:30.9029564Z                      analyze_after: bool = False,
2025-08-18T21:33:30.9030252Z                      connection: Any | None = None) -> int
2025-08-18T21:33:30.9030675Z ```
2025-08-18T21:33:30.9030837Z 
2025-08-18T21:33:30.9031114Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T21:33:30.9031710Z 
2025-08-18T21:33:30.9031889Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T21:33:30.9032183Z 
2025-08-18T21:33:30.9032331Z # ingest.tests.test\_smoke
2025-08-18T21:33:30.9032588Z 
2025-08-18T21:33:30.9032727Z <a id="ingest.tests"></a>
2025-08-18T21:33:30.9032959Z 
2025-08-18T21:33:30.9033077Z # ingest.tests
2025-08-18T21:33:30.9033270Z 
2025-08-18T21:33:30.9033419Z <a id="ingest.upload_router"></a>
2025-08-18T21:33:30.9033692Z 
2025-08-18T21:33:30.9033836Z # ingest.upload\_router
2025-08-18T21:33:30.9034051Z 
2025-08-18T21:33:30.9034201Z <a id="ingest.email_watcher"></a>
2025-08-18T21:33:30.9034479Z 
2025-08-18T21:33:30.9034611Z # ingest.email\_watcher
2025-08-18T21:33:30.9034826Z 
2025-08-18T21:33:30.9034984Z <a id="ingest.email_watcher.main"></a>
2025-08-18T21:33:30.9035304Z 
2025-08-18T21:33:30.9035414Z #### main
2025-08-18T21:33:30.9035572Z 
2025-08-18T21:33:30.9035691Z ```python
2025-08-18T21:33:30.9035985Z def main() -> dict[str, str]
2025-08-18T21:33:30.9036341Z ```
2025-08-18T21:33:30.9036491Z 
2025-08-18T21:33:30.9036750Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T21:33:30.9037194Z 
2025-08-18T21:33:30.9037426Z Returns {"status": "success"} when processing completes.
2025-08-18T21:33:30.9037810Z 
2025-08-18T21:33:30.9037951Z <a id="ingest.tasks"></a>
2025-08-18T21:33:30.9038181Z 
2025-08-18T21:33:30.9038306Z # ingest.tasks
2025-08-18T21:33:30.9038489Z 
2025-08-18T21:33:30.9038664Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T21:33:30.9038990Z 
2025-08-18T21:33:30.9039121Z #### task\_import\_file
2025-08-18T21:33:30.9039332Z 
2025-08-18T21:33:30.9039444Z ```python
2025-08-18T21:33:30.9039826Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T21:33:30.9040328Z def task_import_file(self: Any,
2025-08-18T21:33:30.9040729Z                      uri: str,
2025-08-18T21:33:30.9041129Z                      report_type: Optional[str] = None,
2025-08-18T21:33:30.9041822Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T21:33:30.9042272Z ```
2025-08-18T21:33:30.9042430Z 
2025-08-18T21:33:30.9042672Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T21:33:30.9043052Z 
2025-08-18T21:33:30.9043204Z <a id="ingest.celery_app"></a>
2025-08-18T21:33:30.9043462Z 
2025-08-18T21:33:30.9043590Z # ingest.celery\_app
2025-08-18T21:33:30.9043808Z 
2025-08-18T21:33:30.9043955Z <a id="ingest.ingest_router"></a>
2025-08-18T21:33:30.9044227Z 
2025-08-18T21:33:30.9044368Z # ingest.ingest\_router
2025-08-18T21:33:30.9044585Z 
2025-08-18T21:33:30.9044723Z <a id="logistics_etl"></a>
2025-08-18T21:33:30.9044961Z 
2025-08-18T21:33:30.9045081Z # logistics\_etl
2025-08-18T21:33:30.9045267Z 
2025-08-18T21:33:30.9045408Z Daily logistics ETL job.
2025-08-18T21:33:30.9045659Z 
2025-08-18T21:33:30.9046046Z <a id="logistics_etl.__main__"></a>
2025-08-18T21:33:30.9046326Z 
2025-08-18T21:33:30.9046479Z # logistics\_etl.\_\_main\_\_
2025-08-18T21:33:30.9046732Z 
2025-08-18T21:33:30.9046872Z <a id="logistics_etl.dsn"></a>
2025-08-18T21:33:30.9047129Z 
2025-08-18T21:33:30.9047259Z # logistics\_etl.dsn
2025-08-18T21:33:30.9047467Z 
2025-08-18T21:33:30.9047681Z Local DSN builder to avoid cross-service dependency.
2025-08-18T21:33:30.9048047Z 
2025-08-18T21:33:30.9048208Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T21:33:30.9048510Z 
2025-08-18T21:33:30.9048635Z #### build\_dsn
2025-08-18T21:33:30.9048815Z 
2025-08-18T21:33:30.9048927Z ```python
2025-08-18T21:33:30.9049250Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:33:30.9049642Z ```
2025-08-18T21:33:30.9049799Z 
2025-08-18T21:33:30.9050048Z Return a Postgres DSN assembled from environment variables.
2025-08-18T21:33:30.9050445Z 
2025-08-18T21:33:30.9050721Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T21:33:30.9051861Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T21:33:30.9052510Z error when any required variable is missing.
2025-08-18T21:33:30.9052833Z 
2025-08-18T21:33:30.9053005Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T21:33:30.9053324Z 
2025-08-18T21:33:30.9053473Z # logistics\_etl.tests.conftest
2025-08-18T21:33:30.9053737Z 
2025-08-18T21:33:30.9053926Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T21:33:30.9054276Z 
2025-08-18T21:33:30.9054437Z # logistics\_etl.tests.test\_repository
2025-08-18T21:33:30.9054775Z 
2025-08-18T21:33:30.9054954Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T21:33:30.9055265Z 
2025-08-18T21:33:30.9055415Z # logistics\_etl.tests.test\_cron
2025-08-18T21:33:30.9055697Z 
2025-08-18T21:33:30.9055874Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T21:33:30.9056194Z 
2025-08-18T21:33:30.9056346Z # logistics\_etl.tests.test\_imports
2025-08-18T21:33:30.9056644Z 
2025-08-18T21:33:30.9056829Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T21:33:30.9057154Z 
2025-08-18T21:33:30.9057325Z # logistics\_etl.tests.test\_smoke
2025-08-18T21:33:30.9057610Z 
2025-08-18T21:33:30.9057786Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T21:33:30.9058109Z 
2025-08-18T21:33:30.9058259Z # logistics\_etl.tests.test\_client
2025-08-18T21:33:30.9058542Z 
2025-08-18T21:33:30.9058689Z <a id="logistics_etl.tests"></a>
2025-08-18T21:33:30.9058965Z 
2025-08-18T21:33:30.9059095Z # logistics\_etl.tests
2025-08-18T21:33:30.9059310Z 
2025-08-18T21:33:30.9059462Z <a id="logistics_etl.flow"></a>
2025-08-18T21:33:30.9059720Z 
2025-08-18T21:33:30.9059848Z # logistics\_etl.flow
2025-08-18T21:33:30.9060065Z 
2025-08-18T21:33:30.9060213Z <a id="logistics_etl.client"></a>
2025-08-18T21:33:30.9060488Z 
2025-08-18T21:33:30.9060623Z # logistics\_etl.client
2025-08-18T21:33:30.9060855Z 
2025-08-18T21:33:30.9060999Z <a id="logistics_etl.cron"></a>
2025-08-18T21:33:30.9061251Z 
2025-08-18T21:33:30.9061389Z # logistics\_etl.cron
2025-08-18T21:33:30.9061813Z 
2025-08-18T21:33:30.9061961Z <a id="logistics_etl.db"></a>
2025-08-18T21:33:30.9062223Z 
2025-08-18T21:33:30.9092749Z # logistics\_etl.db
2025-08-18T21:33:30.9092985Z 
2025-08-18T21:33:30.9093141Z <a id="logistics_etl.repository"></a>
2025-08-18T21:33:30.9093427Z 
2025-08-18T21:33:30.9093557Z # logistics\_etl.repository
2025-08-18T21:33:30.9093777Z 
2025-08-18T21:33:30.9093893Z <a id="alert_bot"></a>
2025-08-18T21:33:30.9094074Z 
2025-08-18T21:33:30.9094173Z # alert\_bot
2025-08-18T21:33:30.9094327Z 
2025-08-18T21:33:30.9094465Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T21:33:30.9094736Z 
2025-08-18T21:33:30.9094865Z # alert\_bot.tests.test\_smoke
2025-08-18T21:33:30.9095093Z 
2025-08-18T21:33:30.9095209Z <a id="alert_bot.tests"></a>
2025-08-18T21:33:30.9095419Z 
2025-08-18T21:33:30.9095569Z # alert\_bot.tests
2025-08-18T21:33:30.9095733Z 
2025-08-18T21:33:30.9095855Z <a id="alert_bot.alert_bot"></a>
2025-08-18T21:33:30.9096083Z 
2025-08-18T21:33:30.9096207Z # alert\_bot.alert\_bot
2025-08-18T21:33:30.9096605Z 
2025-08-18T21:33:30.9096726Z <a id="alert_bot.rules"></a>
2025-08-18T21:33:30.9096935Z 
2025-08-18T21:33:30.9097036Z # alert\_bot.rules
2025-08-18T21:33:30.9097201Z 
2025-08-18T21:33:30.9097316Z <a id="common"></a>
2025-08-18T21:33:30.9097472Z 
2025-08-18T21:33:30.9097563Z # common
2025-08-18T21:33:30.9097697Z 
2025-08-18T21:33:30.9097810Z <a id="common.dsn"></a>
2025-08-18T21:33:30.9097986Z 
2025-08-18T21:33:30.9098169Z # common.dsn
2025-08-18T21:33:30.9098319Z 
2025-08-18T21:33:30.9098444Z <a id="common.dsn.build_dsn"></a>
2025-08-18T21:33:30.9098665Z 
2025-08-18T21:33:30.9098767Z #### build\_dsn
2025-08-18T21:33:30.9098921Z 
2025-08-18T21:33:30.9099018Z ```python
2025-08-18T21:33:30.9099289Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:33:30.9099634Z ```
2025-08-18T21:33:30.9099771Z 
2025-08-18T21:33:30.9099963Z Return a Postgres DSN, validating required variables.
2025-08-18T21:33:30.9100278Z 
2025-08-18T21:33:30.9100571Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T21:33:30.9101433Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T21:33:30.9102248Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T21:33:30.9102754Z missing.
2025-08-18T21:33:30.9102892Z 
2025-08-18T21:33:30.9103030Z <a id="common.models_vendor"></a>
2025-08-18T21:33:30.9103267Z 
2025-08-18T21:33:30.9103379Z # common.models\_vendor
2025-08-18T21:33:30.9103567Z 
2025-08-18T21:33:30.9103701Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T21:33:30.9103971Z 
2025-08-18T21:33:30.9104082Z ## Vendor Objects
2025-08-18T21:33:30.9104256Z 
2025-08-18T21:33:30.9104357Z ```python
2025-08-18T21:33:30.9104616Z class Vendor(Base)
2025-08-18T21:33:30.9104862Z ```
2025-08-18T21:33:30.9104988Z 
2025-08-18T21:33:30.9105112Z Vendor of inventory items.
2025-08-18T21:33:30.9105317Z 
2025-08-18T21:33:30.9105471Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T21:33:30.9105786Z 
2025-08-18T21:33:30.9105915Z ## VendorPrice Objects
2025-08-18T21:33:30.9106099Z 
2025-08-18T21:33:30.9106209Z ```python
2025-08-18T21:33:30.9106447Z class VendorPrice(Base)
2025-08-18T21:33:30.9106727Z ```
2025-08-18T21:33:30.9106851Z 
2025-08-18T21:33:30.9107004Z Association table linking vendors to pricing.
2025-08-18T21:33:30.9107291Z 
2025-08-18T21:33:30.9107402Z <a id="common.db_url"></a>
2025-08-18T21:33:30.9107588Z 
2025-08-18T21:33:30.9107691Z # common.db\_url
2025-08-18T21:33:30.9107861Z 
2025-08-18T21:33:30.9107988Z <a id="common.db_url.build_url"></a>
2025-08-18T21:33:30.9108228Z 
2025-08-18T21:33:30.9108333Z #### build\_url
2025-08-18T21:33:30.9108485Z 
2025-08-18T21:33:30.9108580Z ```python
2025-08-18T21:33:30.9108849Z def build_url(async_: bool = True) -> str
2025-08-18T21:33:30.9109187Z ```
2025-08-18T21:33:30.9109318Z 
2025-08-18T21:33:30.9109466Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:33:30.9109741Z 
2025-08-18T21:33:30.9109855Z <a id="common.keepa"></a>
2025-08-18T21:33:30.9110076Z 
2025-08-18T21:33:30.9110177Z # common.keepa
2025-08-18T21:33:30.9110326Z 
2025-08-18T21:33:30.9110443Z <a id="common.llm"></a>
2025-08-18T21:33:30.9110617Z 
2025-08-18T21:33:30.9110712Z # common.llm
2025-08-18T21:33:30.9110861Z 
2025-08-18T21:33:30.9110992Z <a id="common.settings"></a>
2025-08-18T21:33:30.9111199Z 
2025-08-18T21:33:30.9111300Z # common.settings
2025-08-18T21:33:30.9111615Z 
2025-08-18T21:33:30.9111723Z <a id="common.db"></a>
2025-08-18T21:33:30.9111893Z 
2025-08-18T21:33:30.9111990Z # common.db
2025-08-18T21:33:30.9112120Z 
2025-08-18T21:33:30.9112260Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T21:33:30.9112514Z 
2025-08-18T21:33:30.9112629Z #### build\_sqlalchemy\_url
2025-08-18T21:33:30.9112828Z 
2025-08-18T21:33:30.9112918Z ```python
2025-08-18T21:33:30.9113174Z def build_sqlalchemy_url() -> str
2025-08-18T21:33:30.9113480Z ```
2025-08-18T21:33:30.9113608Z 
2025-08-18T21:33:30.9113755Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:33:30.9114020Z 
2025-08-18T21:33:30.9114341Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T21:33:30.9114600Z 
2025-08-18T21:33:30.9114722Z #### build\_asyncpg\_dsn
2025-08-18T21:33:30.9114919Z 
2025-08-18T21:33:30.9115022Z ```python
2025-08-18T21:33:30.9115290Z def build_asyncpg_dsn() -> str
2025-08-18T21:33:30.9115601Z ```
2025-08-18T21:33:30.9115725Z 
2025-08-18T21:33:30.9115919Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:33:30.9116245Z 
2025-08-18T21:33:30.9116378Z <a id="common.db.refresh_mvs"></a>
2025-08-18T21:33:30.9116609Z 
2025-08-18T21:33:30.9116719Z #### refresh\_mvs
2025-08-18T21:33:30.9116872Z 
2025-08-18T21:33:30.9116968Z ```python
2025-08-18T21:33:30.9117272Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:33:30.9117647Z ```
2025-08-18T21:33:30.9117784Z 
2025-08-18T21:33:30.9117990Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:33:30.9118320Z 
2025-08-18T21:33:30.9118443Z <a id="common.config"></a>
2025-08-18T21:33:30.9118644Z 
2025-08-18T21:33:30.9118924Z # common.config
2025-08-18T21:33:30.9119082Z 
2025-08-18T21:33:30.9119197Z <a id="common.base"></a>
2025-08-18T21:33:30.9119387Z 
2025-08-18T21:33:30.9119487Z # common.base
2025-08-18T21:33:30.9119644Z 
2025-08-18T21:33:30.9119765Z <a id="common.base.Base"></a>
2025-08-18T21:33:30.9119973Z 
2025-08-18T21:33:30.9120069Z ## Base Objects
2025-08-18T21:33:30.9120234Z 
2025-08-18T21:33:30.9120328Z ```python
2025-08-18T21:33:30.9120587Z class Base(DeclarativeBase)
2025-08-18T21:33:30.9120869Z ```
2025-08-18T21:33:30.9120995Z 
2025-08-18T21:33:30.9121125Z Base class for SQLAlchemy models.
2025-08-18T21:33:30.9121349Z 
2025-08-18T21:33:30.9121622Z <a id="repricer"></a>
2025-08-18T21:33:30.9121807Z 
2025-08-18T21:33:30.9121905Z # repricer
2025-08-18T21:33:30.9122042Z 
2025-08-18T21:33:30.9122168Z <a id="repricer.app.schemas"></a>
2025-08-18T21:33:30.9122402Z 
2025-08-18T21:33:30.9122518Z # repricer.app.schemas
2025-08-18T21:33:30.9122701Z 
2025-08-18T21:33:30.9122831Z <a id="repricer.app.deps"></a>
2025-08-18T21:33:30.9123059Z 
2025-08-18T21:33:30.9123166Z # repricer.app.deps
2025-08-18T21:33:30.9123337Z 
2025-08-18T21:33:30.9123509Z Placeholder module for Keepa / SP-API clients.
2025-08-18T21:33:30.9123791Z 
2025-08-18T21:33:30.9123916Z <a id="repricer.app.logic"></a>
2025-08-18T21:33:30.9124139Z 
2025-08-18T21:33:30.9124247Z # repricer.app.logic
2025-08-18T21:33:30.9124419Z 
2025-08-18T21:33:30.9124573Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T21:33:30.9124844Z 
2025-08-18T21:33:30.9124941Z #### MIN\_MARGIN
2025-08-18T21:33:30.9125097Z 
2025-08-18T21:33:30.9125190Z 15 % ROI
2025-08-18T21:33:30.9125324Z 
2025-08-18T21:33:30.9125478Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T21:33:30.9125766Z 
2025-08-18T21:33:30.9125873Z #### compute\_price
2025-08-18T21:33:30.9126045Z 
2025-08-18T21:33:30.9126150Z ```python
2025-08-18T21:33:30.9126524Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T21:33:30.9126990Z ```
2025-08-18T21:33:30.9127117Z 
2025-08-18T21:33:30.9127297Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T21:33:30.9127736Z Replace with real competitive logic later.
2025-08-18T21:33:30.9128002Z 
2025-08-18T21:33:30.9128128Z <a id="repricer.app.main"></a>
2025-08-18T21:33:30.9128353Z 
2025-08-18T21:33:30.9128462Z # repricer.app.main
2025-08-18T21:33:30.9128627Z 
2025-08-18T21:33:30.9128748Z <a id="repricer.app"></a>
2025-08-18T21:33:30.9128942Z 
2025-08-18T21:33:30.9129042Z # repricer.app
2025-08-18T21:33:30.9129200Z 
2025-08-18T21:33:30.9129336Z <a id="repricer.tests.test_imports"></a>
2025-08-18T21:33:30.9129589Z 
2025-08-18T21:33:30.9129713Z # repricer.tests.test\_imports
2025-08-18T21:33:30.9129935Z 
2025-08-18T21:33:30.9130067Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T21:33:30.9130310Z 
2025-08-18T21:33:30.9130442Z # repricer.tests.test\_smoke
2025-08-18T21:33:30.9130648Z 
2025-08-18T21:33:30.9130764Z <a id="repricer.tests"></a>
2025-08-18T21:33:30.9130962Z 
2025-08-18T21:33:30.9131072Z # repricer.tests
2025-08-18T21:33:30.9131417Z 
2025-08-18T21:33:30.9131675Z <a id="db"></a>
2025-08-18T21:33:30.9131834Z 
2025-08-18T21:33:30.9131925Z # db
2025-08-18T21:33:30.9132051Z 
2025-08-18T21:33:30.9132171Z <a id="db.utils.views"></a>
2025-08-18T21:33:30.9132372Z 
2025-08-18T21:33:30.9132473Z # db.utils.views
2025-08-18T21:33:30.9132631Z 
2025-08-18T21:33:30.9132777Z <a id="db.utils.views.replace_view"></a>
2025-08-18T21:33:30.9133028Z 
2025-08-18T21:33:30.9133131Z #### replace\_view
2025-08-18T21:33:30.9133299Z 
2025-08-18T21:33:30.9133398Z ```python
2025-08-18T21:33:30.9133685Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T21:33:30.9134097Z ```
2025-08-18T21:33:30.9134247Z 
2025-08-18T21:33:30.9134388Z Drop and recreate a SQL view atomically.
2025-08-18T21:33:30.9134640Z 
2025-08-18T21:33:30.9134748Z <a id="db.utils"></a>
2025-08-18T21:33:30.9134925Z 
2025-08-18T21:33:30.9135032Z # db.utils
2025-08-18T21:33:30.9135163Z 
2025-08-18T21:33:30.9135279Z <a id="price_importer"></a>
2025-08-18T21:33:30.9135486Z 
2025-08-18T21:33:30.9135823Z # price\_importer
2025-08-18T21:33:30.9135982Z 
2025-08-18T21:33:30.9136143Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T21:33:30.9136423Z 
2025-08-18T21:33:30.9136560Z # price\_importer.services\_common.dsn
2025-08-18T21:33:30.9136809Z 
2025-08-18T21:33:30.9137008Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T21:33:30.9137315Z 
2025-08-18T21:33:30.9137412Z #### build\_dsn
2025-08-18T21:33:30.9137576Z 
2025-08-18T21:33:30.9137668Z ```python
2025-08-18T21:33:30.9137956Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:33:30.9138304Z ```
2025-08-18T21:33:30.9138434Z 
2025-08-18T21:33:30.9138541Z Return safe DSN.
2025-08-18T21:33:30.9138705Z 
2025-08-18T21:33:30.9139162Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T21:33:30.9139471Z 
2025-08-18T21:33:30.9139671Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T21:33:30.9139980Z 
2025-08-18T21:33:30.9140144Z # price\_importer.services\_common.models\_vendor
2025-08-18T21:33:30.9140461Z 
2025-08-18T21:33:30.9140628Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T21:33:30.9140920Z 
2025-08-18T21:33:30.9141075Z # price\_importer.services\_common.db\_url
2025-08-18T21:33:30.9141334Z 
2025-08-18T21:33:30.9141708Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T21:33:30.9142049Z 
2025-08-18T21:33:30.9142148Z #### build\_url
2025-08-18T21:33:30.9142299Z 
2025-08-18T21:33:30.9142399Z ```python
2025-08-18T21:33:30.9142672Z def build_url(async_: bool = True) -> str
2025-08-18T21:33:30.9143006Z ```
2025-08-18T21:33:30.9143140Z 
2025-08-18T21:33:30.9143288Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:33:30.9143546Z 
2025-08-18T21:33:30.9143709Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T21:33:30.9143989Z 
2025-08-18T21:33:30.9144128Z # price\_importer.services\_common.keepa
2025-08-18T21:33:30.9144388Z 
2025-08-18T21:33:30.9144543Z <a id="price_importer.services_common.llm"></a>
2025-08-18T21:33:30.9144833Z 
2025-08-18T21:33:30.9144975Z # price\_importer.services\_common.llm
2025-08-18T21:33:30.9145228Z 
2025-08-18T21:33:30.9145395Z <a id="price_importer.services_common.settings"></a>
2025-08-18T21:33:30.9145685Z 
2025-08-18T21:33:30.9145838Z # price\_importer.services\_common.settings
2025-08-18T21:33:30.9146094Z 
2025-08-18T21:33:30.9146244Z <a id="price_importer.services_common.db"></a>
2025-08-18T21:33:30.9146504Z 
2025-08-18T21:33:30.9146639Z # price\_importer.services\_common.db
2025-08-18T21:33:30.9146879Z 
2025-08-18T21:33:30.9147105Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T21:33:30.9147473Z 
2025-08-18T21:33:30.9147588Z #### build\_sqlalchemy\_url
2025-08-18T21:33:30.9147780Z 
2025-08-18T21:33:30.9147883Z ```python
2025-08-18T21:33:30.9148137Z def build_sqlalchemy_url() -> str
2025-08-18T21:33:30.9148455Z ```
2025-08-18T21:33:30.9148582Z 
2025-08-18T21:33:30.9148723Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:33:30.9148994Z 
2025-08-18T21:33:30.9149420Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T21:33:30.9149780Z 
2025-08-18T21:33:30.9149901Z #### build\_asyncpg\_dsn
2025-08-18T21:33:30.9150096Z 
2025-08-18T21:33:30.9150190Z ```python
2025-08-18T21:33:30.9150452Z def build_asyncpg_dsn() -> str
2025-08-18T21:33:30.9150757Z ```
2025-08-18T21:33:30.9150893Z 
2025-08-18T21:33:30.9151078Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:33:30.9151391Z 
2025-08-18T21:33:30.9151733Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T21:33:30.9152056Z 
2025-08-18T21:33:30.9152154Z #### refresh\_mvs
2025-08-18T21:33:30.9152312Z 
2025-08-18T21:33:30.9152412Z ```python
2025-08-18T21:33:30.9152701Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:33:30.9153072Z ```
2025-08-18T21:33:30.9153193Z 
2025-08-18T21:33:30.9153397Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:33:30.9153733Z 
2025-08-18T21:33:30.9153881Z <a id="price_importer.services_common"></a>
2025-08-18T21:33:30.9154325Z 
2025-08-18T21:33:30.9154472Z # price\_importer.services\_common
2025-08-18T21:33:30.9154721Z 
2025-08-18T21:33:30.9154895Z <a id="price_importer.services_common.base"></a>
2025-08-18T21:33:30.9155197Z 
2025-08-18T21:33:30.9155357Z # price\_importer.services\_common.base
2025-08-18T21:33:30.9155628Z 
2025-08-18T21:33:30.9155775Z <a id="price_importer.normaliser"></a>
2025-08-18T21:33:30.9156047Z 
2025-08-18T21:33:30.9156179Z # price\_importer.normaliser
2025-08-18T21:33:30.9156399Z 
2025-08-18T21:33:30.9156565Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T21:33:30.9156865Z 
2025-08-18T21:33:30.9157014Z # price\_importer.common.models\_vendor
2025-08-18T21:33:30.9157266Z 
2025-08-18T21:33:30.9157416Z <a id="price_importer.common.db_url"></a>
2025-08-18T21:33:30.9157684Z 
2025-08-18T21:33:30.9157820Z # price\_importer.common.db\_url
2025-08-18T21:33:30.9158061Z 
2025-08-18T21:33:30.9158227Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T21:33:30.9158533Z 
2025-08-18T21:33:30.9158637Z #### make\_dsn
2025-08-18T21:33:30.9158794Z 
2025-08-18T21:33:30.9158892Z ```python
2025-08-18T21:33:30.9159167Z def make_dsn(async_: bool = False) -> str
2025-08-18T21:33:30.9159520Z ```
2025-08-18T21:33:30.9159658Z 
2025-08-18T21:33:30.9159841Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T21:33:30.9160154Z 
2025-08-18T21:33:30.9160326Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T21:33:30.9160623Z 
2025-08-18T21:33:30.9160723Z #### build\_url
2025-08-18T21:33:30.9160874Z 
2025-08-18T21:33:30.9160977Z ```python
2025-08-18T21:33:30.9161241Z def build_url(async_: bool = False) -> str
2025-08-18T21:33:30.9161771Z ```
2025-08-18T21:33:30.9161903Z 
2025-08-18T21:33:30.9162096Z Return Postgres DSN built from environment variables.
2025-08-18T21:33:30.9162486Z 
2025-08-18T21:33:30.9162624Z <a id="price_importer.common"></a>
2025-08-18T21:33:30.9162877Z 
2025-08-18T21:33:30.9162999Z # price\_importer.common
2025-08-18T21:33:30.9163204Z 
2025-08-18T21:33:30.9163359Z <a id="price_importer.common.base"></a>
2025-08-18T21:33:30.9163622Z 
2025-08-18T21:33:30.9163764Z # price\_importer.common.base
2025-08-18T21:33:30.9163987Z 
2025-08-18T21:33:30.9164142Z <a id="price_importer.tests.conftest"></a>
2025-08-18T21:33:30.9164422Z 
2025-08-18T21:33:30.9164560Z # price\_importer.tests.conftest
2025-08-18T21:33:30.9164832Z 
2025-08-18T21:33:30.9164996Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T21:33:30.9165296Z 
2025-08-18T21:33:30.9165434Z # price\_importer.tests.test\_reader
2025-08-18T21:33:30.9165687Z 
2025-08-18T21:33:30.9165857Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T21:33:30.9166146Z 
2025-08-18T21:33:30.9166292Z # price\_importer.tests.test\_imports
2025-08-18T21:33:30.9166558Z 
2025-08-18T21:33:30.9166712Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T21:33:30.9166981Z 
2025-08-18T21:33:30.9167119Z # price\_importer.tests.test\_smoke
2025-08-18T21:33:30.9167363Z 
2025-08-18T21:33:30.9167528Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T21:33:30.9168016Z 
2025-08-18T21:33:30.9168167Z # price\_importer.tests.test\_normaliser
2025-08-18T21:33:30.9168423Z 
2025-08-18T21:33:30.9168552Z <a id="price_importer.tests"></a>
2025-08-18T21:33:30.9168792Z 
2025-08-18T21:33:30.9168909Z # price\_importer.tests
2025-08-18T21:33:30.9169100Z 
2025-08-18T21:33:30.9169238Z <a id="price_importer.reader"></a>
2025-08-18T21:33:30.9169485Z 
2025-08-18T21:33:30.9169601Z # price\_importer.reader
2025-08-18T21:33:30.9169802Z 
2025-08-18T21:33:30.9169954Z <a id="price_importer.repository"></a>
2025-08-18T21:33:30.9170211Z 
2025-08-18T21:33:30.9170336Z # price\_importer.repository
2025-08-18T21:33:30.9170572Z 
2025-08-18T21:33:30.9170707Z <a id="price_importer.import"></a>
2025-08-18T21:33:30.9170948Z 
2025-08-18T21:33:30.9171068Z # price\_importer.import
2025-08-18T21:33:30.9171276Z 
2025-08-18T21:33:30.9171383Z <a id="fees_h10"></a>
2025-08-18T21:33:30.9171747Z 
2025-08-18T21:33:30.9171858Z # fees\_h10
2025-08-18T21:33:30.9172192Z 
2025-08-18T21:33:30.9172307Z <a id="fees_h10.worker"></a>
2025-08-18T21:33:30.9172522Z 
2025-08-18T21:33:30.9172622Z # fees\_h10.worker
2025-08-18T21:33:30.9172782Z 
2025-08-18T21:33:30.9172928Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T21:33:30.9173238Z 
2025-08-18T21:33:30.9173354Z #### list\_active\_asins
2025-08-18T21:33:30.9173546Z 
2025-08-18T21:33:30.9173654Z ```python
2025-08-18T21:33:30.9173913Z def list_active_asins() -> list[str]
2025-08-18T21:33:30.9174246Z ```
2025-08-18T21:33:30.9174373Z 
2025-08-18T21:33:30.9174553Z Return known ASINs or an empty list if unavailable.
2025-08-18T21:33:30.9174864Z 
2025-08-18T21:33:30.9174998Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T21:33:30.9175252Z 
2025-08-18T21:33:30.9175382Z # fees\_h10.tests.test\_smoke
2025-08-18T21:33:30.9175606Z 
2025-08-18T21:33:30.9175722Z <a id="fees_h10.tests"></a>
2025-08-18T21:33:30.9175924Z 
2025-08-18T21:33:30.9176031Z # fees\_h10.tests
2025-08-18T21:33:30.9176192Z 
2025-08-18T21:33:30.9176321Z <a id="fees_h10.client"></a>
2025-08-18T21:33:30.9176544Z 
2025-08-18T21:33:30.9176651Z # fees\_h10.client
2025-08-18T21:33:30.9176815Z 
2025-08-18T21:33:30.9176942Z <a id="fees_h10.repository"></a>
2025-08-18T21:33:30.9177183Z 
2025-08-18T21:33:30.9177295Z # fees\_h10.repository
2025-08-18T21:33:30.9177473Z 
2025-08-18T21:33:30.9177593Z <a id="emailer"></a>
2025-08-18T21:33:30.9177770Z 
2025-08-18T21:33:30.9177862Z # emailer
2025-08-18T21:33:30.9178009Z 
2025-08-18T21:33:30.9178170Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T21:33:30.9178447Z 
2025-08-18T21:33:30.9178585Z # emailer.tests.test\_import\_emailer
2025-08-18T21:33:30.9178840Z 
2025-08-18T21:33:30.9178969Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T21:33:30.9179207Z 
2025-08-18T21:33:30.9179339Z # emailer.tests.test\_smoke
2025-08-18T21:33:30.9179543Z 
2025-08-18T21:33:30.9179661Z <a id="emailer.tests"></a>
2025-08-18T21:33:30.9179873Z 
2025-08-18T21:33:30.9179979Z # emailer.tests
2025-08-18T21:33:30.9180137Z 
2025-08-18T21:33:30.9180277Z <a id="emailer.generate_body"></a>
2025-08-18T21:33:30.9180519Z 
2025-08-18T21:33:30.9180637Z # emailer.generate\_body
2025-08-18T21:33:30.9180828Z 
2025-08-18T21:33:30.9180942Z <a id="llm_server"></a>
2025-08-18T21:33:30.9181120Z 
2025-08-18T21:33:30.9181217Z # llm\_server
2025-08-18T21:33:30.9181363Z 
2025-08-18T21:33:30.9181662Z <a id="llm_server.app"></a>
2025-08-18T21:33:30.9181875Z 
2025-08-18T21:33:30.9181979Z # llm\_server.app
2025-08-18T21:33:30.9182147Z 
