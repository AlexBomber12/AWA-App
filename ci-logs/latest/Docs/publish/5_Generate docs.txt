2025-08-19T13:56:23.8512979Z ##[group]Run pydoc-markdown
2025-08-19T13:56:23.8513288Z [36;1mpydoc-markdown[0m
2025-08-19T13:56:23.8554336Z shell: /usr/bin/bash -e {0}
2025-08-19T13:56:23.8554587Z env:
2025-08-19T13:56:23.8554833Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:56:23.8555264Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T13:56:23.8555679Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:56:23.8556053Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:56:23.8556423Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T13:56:23.8556781Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T13:56:23.8557083Z ##[endgroup]
2025-08-19T13:56:24.4559722Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T13:56:24.4560652Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T13:56:24.4561081Z In "pydoc-markdown.yml"
2025-08-19T13:56:24.4561460Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T13:56:24.4562094Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T13:56:24.4562789Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T13:56:24.4563272Z 
2025-08-19T13:56:24.8030805Z <a id="__init__"></a>
2025-08-19T13:56:24.8031108Z 
2025-08-19T13:56:24.8031223Z # \_\_init\_\_
2025-08-19T13:56:24.8031404Z 
2025-08-19T13:56:24.8031517Z <a id="api"></a>
2025-08-19T13:56:24.8031710Z 
2025-08-19T13:56:24.8031856Z # api
2025-08-19T13:56:24.8032021Z 
2025-08-19T13:56:24.8032165Z <a id="api.errors"></a>
2025-08-19T13:56:24.8032384Z 
2025-08-19T13:56:24.8032539Z # api.errors
2025-08-19T13:56:24.8032717Z 
2025-08-19T13:56:24.8032883Z <a id="api.sentry_config"></a>
2025-08-19T13:56:24.8033163Z 
2025-08-19T13:56:24.8033308Z # api.sentry\_config
2025-08-19T13:56:24.8033571Z 
2025-08-19T13:56:24.8033782Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T13:56:24.8034207Z 
2025-08-19T13:56:24.8034387Z # api.tests.test\_stats\_contracts
2025-08-19T13:56:24.8034772Z 
2025-08-19T13:56:24.8034951Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T13:56:24.8035356Z 
2025-08-19T13:56:24.8036080Z # api.tests.test\_sentry\_scrub
2025-08-19T13:56:24.8036396Z 
2025-08-19T13:56:24.8036602Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T13:56:24.8037018Z 
2025-08-19T13:56:24.8037482Z # api.tests.test\_roi\_basic\_auth
2025-08-19T13:56:24.8037896Z 
2025-08-19T13:56:24.8038098Z <a id="api.tests.test_errors_json"></a>
2025-08-19T13:56:24.8038484Z 
2025-08-19T13:56:24.8038610Z # api.tests.test\_errors\_json
2025-08-19T13:56:24.8038898Z 
2025-08-19T13:56:24.8039216Z <a id="api.tests.test_llm"></a>
2025-08-19T13:56:24.8039556Z 
2025-08-19T13:56:24.8039720Z # api.tests.test\_llm
2025-08-19T13:56:24.8039991Z 
2025-08-19T13:56:24.8040188Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T13:56:24.8040545Z 
2025-08-19T13:56:24.8040659Z # api.tests.test\_roi\_filters
2025-08-19T13:56:24.8040862Z 
2025-08-19T13:56:24.8040994Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T13:56:24.8041246Z 
2025-08-19T13:56:24.8041356Z # api.tests.test\_sentry\_event
2025-08-19T13:56:24.8041566Z 
2025-08-19T13:56:24.8041749Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T13:56:24.8042049Z 
2025-08-19T13:56:24.8042158Z ## DummyTransport Objects
2025-08-19T13:56:24.8042348Z 
2025-08-19T13:56:24.8042438Z ```python
2025-08-19T13:56:24.8042676Z class DummyTransport()
2025-08-19T13:56:24.8042930Z ```
2025-08-19T13:56:24.8043047Z 
2025-08-19T13:56:24.8043303Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T13:56:24.8043683Z 
2025-08-19T13:56:24.8043784Z #### capture\_envelope
2025-08-19T13:56:24.8043953Z 
2025-08-19T13:56:24.8044040Z ```python
2025-08-19T13:56:24.8044278Z def capture_envelope(envelope)
2025-08-19T13:56:24.8044567Z ```
2025-08-19T13:56:24.8044683Z 
2025-08-19T13:56:24.8044863Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T13:56:24.8045163Z 
2025-08-19T13:56:24.8045278Z <a id="api.tests.test_cors"></a>
2025-08-19T13:56:24.8045769Z 
2025-08-19T13:56:24.8045873Z # api.tests.test\_cors
2025-08-19T13:56:24.8046040Z 
2025-08-19T13:56:24.8046161Z <a id="api.tests.test_imports"></a>
2025-08-19T13:56:24.8046391Z 
2025-08-19T13:56:24.8046498Z # api.tests.test\_imports
2025-08-19T13:56:24.8046679Z 
2025-08-19T13:56:24.8046804Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T13:56:24.8047037Z 
2025-08-19T13:56:24.8047334Z # api.tests.test\_rate\_limit
2025-08-19T13:56:24.8047518Z 
2025-08-19T13:56:24.8047621Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T13:56:24.8047791Z 
2025-08-19T13:56:24.8047854Z #### app
2025-08-19T13:56:24.8047952Z 
2025-08-19T13:56:24.8048014Z noqa: E402
2025-08-19T13:56:24.8048103Z 
2025-08-19T13:56:24.8048193Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T13:56:24.8048366Z 
2025-08-19T13:56:24.8048450Z # api.tests.test\_entrypoint
2025-08-19T13:56:24.8048592Z 
2025-08-19T13:56:24.8048683Z <a id="api.tests.test_health"></a>
2025-08-19T13:56:24.8048844Z 
2025-08-19T13:56:24.8048921Z # api.tests.test\_health
2025-08-19T13:56:24.8049054Z 
2025-08-19T13:56:24.8049139Z <a id="api.tests.test_score"></a>
2025-08-19T13:56:24.8049290Z 
2025-08-19T13:56:24.8049370Z # api.tests.test\_score
2025-08-19T13:56:24.8049490Z 
2025-08-19T13:56:24.8049568Z <a id="api.logging_config"></a>
2025-08-19T13:56:24.8049711Z 
2025-08-19T13:56:24.8049788Z # api.logging\_config
2025-08-19T13:56:24.8049905Z 
2025-08-19T13:56:24.8049986Z <a id="api.migrations.env"></a>
2025-08-19T13:56:24.8050129Z 
2025-08-19T13:56:24.8050202Z # api.migrations.env
2025-08-19T13:56:24.8050322Z 
2025-08-19T13:56:24.8050441Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T13:56:24.8050652Z 
2025-08-19T13:56:24.8050758Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T13:56:24.8050941Z 
2025-08-19T13:56:24.8051057Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T13:56:24.8051249Z 
2025-08-19T13:56:24.8051342Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T13:56:24.8051527Z 
2025-08-19T13:56:24.8051680Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T13:56:24.8051919Z 
2025-08-19T13:56:24.8052198Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T13:56:24.8052416Z 
2025-08-19T13:56:24.8052571Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T13:56:24.8052774Z 
2025-08-19T13:56:24.8052889Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T13:56:24.8053075Z 
2025-08-19T13:56:24.8053191Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T13:56:24.8053396Z 
2025-08-19T13:56:24.8053501Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T13:56:24.8053682Z 
2025-08-19T13:56:24.8053815Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T13:56:24.8054015Z 
2025-08-19T13:56:24.8054124Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T13:56:24.8054318Z 
2025-08-19T13:56:24.8054434Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T13:56:24.8054699Z 
2025-08-19T13:56:24.8054818Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T13:56:24.8055039Z 
2025-08-19T13:56:24.8055164Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T13:56:24.8055381Z 
2025-08-19T13:56:24.8055491Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T13:56:24.8055675Z 
2025-08-19T13:56:24.8055821Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T13:56:24.8056040Z 
2025-08-19T13:56:24.8056159Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T13:56:24.8056360Z 
2025-08-19T13:56:24.8056488Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T13:56:24.8056690Z 
2025-08-19T13:56:24.8056800Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T13:56:24.8056994Z 
2025-08-19T13:56:24.8057330Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T13:56:24.8057613Z 
2025-08-19T13:56:24.8057741Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T13:56:24.8058113Z 
2025-08-19T13:56:24.8058223Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T13:56:24.8058424Z 
2025-08-19T13:56:24.8058520Z # api.migrations.versions.0001\_baseline
2025-08-19T13:56:24.8058697Z 
2025-08-19T13:56:24.8058785Z <a id="api.migrations.versions"></a>
2025-08-19T13:56:24.8058952Z 
2025-08-19T13:56:24.8059032Z # api.migrations.versions
2025-08-19T13:56:24.8059163Z 
2025-08-19T13:56:24.8059244Z <a id="api.migrations"></a>
2025-08-19T13:56:24.8059376Z 
2025-08-19T13:56:24.8059443Z # api.migrations
2025-08-19T13:56:24.8059740Z 
2025-08-19T13:56:24.8059875Z <a id="api.db"></a>
2025-08-19T13:56:24.8060064Z 
2025-08-19T13:56:24.8060180Z # api.db
2025-08-19T13:56:24.8060350Z 
2025-08-19T13:56:24.8060496Z <a id="api.routes.score"></a>
2025-08-19T13:56:24.8060755Z 
2025-08-19T13:56:24.8060886Z # api.routes.score
2025-08-19T13:56:24.8061083Z 
2025-08-19T13:56:24.8061221Z <a id="api.routes.stats"></a>
2025-08-19T13:56:24.8061471Z 
2025-08-19T13:56:24.8061608Z # api.routes.stats
2025-08-19T13:56:24.8061824Z 
2025-08-19T13:56:24.8061908Z <a id="api.routes.roi"></a>
2025-08-19T13:56:24.8062047Z 
2025-08-19T13:56:24.8062116Z # api.routes.roi
2025-08-19T13:56:24.8062224Z 
2025-08-19T13:56:24.8062306Z <a id="api.routes.health"></a>
2025-08-19T13:56:24.8062452Z 
2025-08-19T13:56:24.8062523Z # api.routes.health
2025-08-19T13:56:24.8062630Z 
2025-08-19T13:56:24.8062728Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T13:56:24.8062894Z 
2025-08-19T13:56:24.8062958Z #### MAX\_SKEW
2025-08-19T13:56:24.8063060Z 
2025-08-19T13:56:24.8063121Z seconds
2025-08-19T13:56:24.8063206Z 
2025-08-19T13:56:24.8063297Z <a id="api.routes.health.health"></a>
2025-08-19T13:56:24.8063465Z 
2025-08-19T13:56:24.8063541Z #### health
2025-08-19T13:56:24.8063634Z 
2025-08-19T13:56:24.8063697Z ```python
2025-08-19T13:56:24.8063898Z @router.get("/health", include_in_schema=False)
2025-08-19T13:56:24.8064307Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T13:56:24.8064646Z ```
2025-08-19T13:56:24.8064733Z 
2025-08-19T13:56:24.8064854Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T13:56:24.8065049Z 
2025-08-19T13:56:24.8065323Z <a id="api.routes.repository"></a>
2025-08-19T13:56:24.8065490Z 
2025-08-19T13:56:24.8065573Z # api.routes.repository
2025-08-19T13:56:24.8065698Z 
2025-08-19T13:56:24.8065777Z <a id="api.routes"></a>
2025-08-19T13:56:24.8065894Z 
2025-08-19T13:56:24.8065960Z # api.routes
2025-08-19T13:56:24.8066057Z 
2025-08-19T13:56:24.8066139Z <a id="api.models.fee"></a>
2025-08-19T13:56:24.8066272Z 
2025-08-19T13:56:24.8066339Z # api.models.fee
2025-08-19T13:56:24.8066450Z 
2025-08-19T13:56:24.8066521Z <a id="api.models"></a>
2025-08-19T13:56:24.8066635Z 
2025-08-19T13:56:24.8066697Z # api.models
2025-08-19T13:56:24.8066798Z 
2025-08-19T13:56:24.8066876Z <a id="api.roi_repository"></a>
2025-08-19T13:56:24.8067017Z 
2025-08-19T13:56:24.8067092Z # api.roi\_repository
2025-08-19T13:56:24.8067371Z 
2025-08-19T13:56:24.8067440Z <a id="api.main"></a>
2025-08-19T13:56:24.8067562Z 
2025-08-19T13:56:24.8067624Z # api.main
2025-08-19T13:56:24.8067714Z 
2025-08-19T13:56:24.8067789Z <a id="api.main.ready"></a>
2025-08-19T13:56:24.8067930Z 
2025-08-19T13:56:24.8067991Z #### ready
2025-08-19T13:56:24.8068076Z 
2025-08-19T13:56:24.8068142Z ```python
2025-08-19T13:56:24.8068397Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T13:56:24.8068830Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T13:56:24.8069174Z                                                                       str]
2025-08-19T13:56:24.8069406Z ```
2025-08-19T13:56:24.8069490Z 
2025-08-19T13:56:24.8069592Z Return 200 only when migrations are at head.
2025-08-19T13:56:24.8069775Z 
2025-08-19T13:56:24.8069849Z <a id="api.config"></a>
2025-08-19T13:56:24.8069968Z 
2025-08-19T13:56:24.8070038Z # api.config
2025-08-19T13:56:24.8070131Z 
2025-08-19T13:56:24.8070205Z <a id="api.security"></a>
2025-08-19T13:56:24.8070336Z 
2025-08-19T13:56:24.8070741Z # api.security
2025-08-19T13:56:24.8070930Z 
2025-08-19T13:56:24.8071048Z <a id="etl"></a>
2025-08-19T13:56:24.8071246Z 
2025-08-19T13:56:24.8071357Z # etl
2025-08-19T13:56:24.8071525Z 
2025-08-19T13:56:24.8071681Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T13:56:24.8071962Z 
2025-08-19T13:56:24.8072098Z # etl.fba\_fee\_ingestor
2025-08-19T13:56:24.8072300Z 
2025-08-19T13:56:24.8072391Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T13:56:24.8072540Z 
2025-08-19T13:56:24.8072613Z # etl.sp\_fees\_ingestor
2025-08-19T13:56:24.8072739Z 
2025-08-19T13:56:24.8072819Z <a id="etl.keepa_ingestor"></a>
2025-08-19T13:56:24.8072960Z 
2025-08-19T13:56:24.8073034Z # etl.keepa\_ingestor
2025-08-19T13:56:24.8073149Z 
2025-08-19T13:56:24.8073215Z <a id="etl.db"></a>
2025-08-19T13:56:24.8073323Z 
2025-08-19T13:56:24.8073390Z # etl.db
2025-08-19T13:56:24.8073477Z 
2025-08-19T13:56:24.8073561Z <a id="etl.dialects.schemas"></a>
2025-08-19T13:56:24.8073716Z 
2025-08-19T13:56:24.8073788Z # etl.dialects.schemas
2025-08-19T13:56:24.8073913Z 
2025-08-19T13:56:24.8074020Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T13:56:24.8074216Z 
2025-08-19T13:56:24.8074310Z # etl.dialects.amazon\_reimbursements
2025-08-19T13:56:24.8074474Z 
2025-08-19T13:56:24.8074578Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T13:56:24.8074752Z 
2025-08-19T13:56:24.8074836Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T13:56:24.8074996Z 
2025-08-19T13:56:24.8075085Z <a id="etl.dialects.test_generic"></a>
2025-08-19T13:56:24.8075245Z 
2025-08-19T13:56:24.8075323Z # etl.dialects.test\_generic
2025-08-19T13:56:24.8075465Z 
2025-08-19T13:56:24.8075553Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T13:56:24.8075717Z 
2025-08-19T13:56:24.8075803Z # etl.dialects.amazon\_returns
2025-08-19T13:56:24.8075941Z 
2025-08-19T13:56:24.8076036Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T13:56:24.8076212Z 
2025-08-19T13:56:24.8076296Z # etl.dialects.amazon\_fee\_preview
2025-08-19T13:56:24.8076449Z 
2025-08-19T13:56:24.8076559Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T13:56:24.8076754Z 
2025-08-19T13:56:24.8076842Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T13:56:24.8077678Z 
2025-08-19T13:56:24.8077791Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T13:56:24.8077971Z 
2025-08-19T13:56:24.8078058Z # etl.dialects.amazon\_settlements
2025-08-19T13:56:24.8078219Z 
2025-08-19T13:56:24.8078294Z <a id="etl.dialects"></a>
2025-08-19T13:56:24.8078429Z 
2025-08-19T13:56:24.8078493Z # etl.dialects
2025-08-19T13:56:24.8078599Z 
2025-08-19T13:56:24.8078665Z <a id="ingest"></a>
2025-08-19T13:56:24.8078775Z 
2025-08-19T13:56:24.8078841Z # ingest
2025-08-19T13:56:24.8078927Z 
2025-08-19T13:56:24.8079008Z <a id="ingest.maintenance"></a>
2025-08-19T13:56:24.8079156Z 
2025-08-19T13:56:24.8079226Z # ingest.maintenance
2025-08-19T13:56:24.8079340Z 
2025-08-19T13:56:24.8079418Z <a id="ingest.copy_loader"></a>
2025-08-19T13:56:24.8079562Z 
2025-08-19T13:56:24.8079633Z # ingest.copy\_loader
2025-08-19T13:56:24.8079753Z 
2025-08-19T13:56:24.8079860Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T13:56:24.8080051Z 
2025-08-19T13:56:24.8080123Z #### copy\_df\_via\_temp
2025-08-19T13:56:24.8080251Z 
2025-08-19T13:56:24.8080319Z ```python
2025-08-19T13:56:24.8080493Z def copy_df_via_temp(engine: Engine,
2025-08-19T13:56:24.8080733Z                      df: pd.DataFrame,
2025-08-19T13:56:24.8080963Z                      target_table: str,
2025-08-19T13:56:24.8081181Z                      *,
2025-08-19T13:56:24.8081383Z                      target_schema: Optional[str] = None,
2025-08-19T13:56:24.8081644Z                      columns: Sequence[str],
2025-08-19T13:56:24.8081917Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T13:56:24.8082196Z                      analyze_after: bool = False,
2025-08-19T13:56:24.8082464Z                      connection: Any | None = None) -> int
2025-08-19T13:56:24.8082698Z ```
2025-08-19T13:56:24.8082787Z 
2025-08-19T13:56:24.8082942Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T13:56:24.8083307Z 
2025-08-19T13:56:24.8083398Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T13:56:24.8083559Z 
2025-08-19T13:56:24.8083637Z # ingest.tests.test\_smoke
2025-08-19T13:56:24.8083767Z 
2025-08-19T13:56:24.8083847Z <a id="ingest.tests"></a>
2025-08-19T13:56:24.8083972Z 
2025-08-19T13:56:24.8084038Z # ingest.tests
2025-08-19T13:56:24.8084144Z 
2025-08-19T13:56:24.8084227Z <a id="ingest.upload_router"></a>
2025-08-19T13:56:24.8084375Z 
2025-08-19T13:56:24.8084451Z # ingest.upload\_router
2025-08-19T13:56:24.8084577Z 
2025-08-19T13:56:24.8084658Z <a id="ingest.email_watcher"></a>
2025-08-19T13:56:24.8084800Z 
2025-08-19T13:56:24.8084878Z # ingest.email\_watcher
2025-08-19T13:56:24.8084992Z 
2025-08-19T13:56:24.8085080Z <a id="ingest.email_watcher.main"></a>
2025-08-19T13:56:24.8085245Z 
2025-08-19T13:56:24.8085305Z #### main
2025-08-19T13:56:24.8085391Z 
2025-08-19T13:56:24.8085451Z ```python
2025-08-19T13:56:24.8085621Z def main() -> dict[str, str]
2025-08-19T13:56:24.8085827Z ```
2025-08-19T13:56:24.8085911Z 
2025-08-19T13:56:24.8086052Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T13:56:24.8086280Z 
2025-08-19T13:56:24.8086416Z Returns {"status": "success"} when processing completes.
2025-08-19T13:56:24.8086626Z 
2025-08-19T13:56:24.8086702Z <a id="ingest.tasks"></a>
2025-08-19T13:56:24.8086835Z 
2025-08-19T13:56:24.8086901Z # ingest.tasks
2025-08-19T13:56:24.8087002Z 
2025-08-19T13:56:24.8087104Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T13:56:24.8087523Z 
2025-08-19T13:56:24.8087599Z #### task\_import\_file
2025-08-19T13:56:24.8087716Z 
2025-08-19T13:56:24.8087783Z ```python
2025-08-19T13:56:24.8087987Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T13:56:24.8088305Z def task_import_file(self: Any,
2025-08-19T13:56:24.8088522Z                      uri: str,
2025-08-19T13:56:24.8088737Z                      report_type: str | None = None,
2025-08-19T13:56:24.8089011Z                      force: bool = False) -> dict[str, Any]
2025-08-19T13:56:24.8089260Z ```
2025-08-19T13:56:24.8089342Z 
2025-08-19T13:56:24.8089477Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T13:56:24.8089825Z 
2025-08-19T13:56:24.8089912Z <a id="ingest.celery_app"></a>
2025-08-19T13:56:24.8090068Z 
2025-08-19T13:56:24.8090146Z # ingest.celery\_app
2025-08-19T13:56:24.8090265Z 
2025-08-19T13:56:24.8090346Z <a id="ingest.ingest_router"></a>
2025-08-19T13:56:24.8090492Z 
2025-08-19T13:56:24.8090570Z # ingest.ingest\_router
2025-08-19T13:56:24.8090687Z 
2025-08-19T13:56:24.8090764Z <a id="logistics_etl"></a>
2025-08-19T13:56:24.8090888Z 
2025-08-19T13:56:24.8090959Z # logistics\_etl
2025-08-19T13:56:24.8091064Z 
2025-08-19T13:56:24.8091140Z Daily logistics ETL job.
2025-08-19T13:56:24.8091266Z 
2025-08-19T13:56:24.8091346Z <a id="logistics_etl.__main__"></a>
2025-08-19T13:56:24.8091497Z 
2025-08-19T13:56:24.8091572Z # logistics\_etl.\_\_main\_\_
2025-08-19T13:56:24.8091717Z 
2025-08-19T13:56:24.8091796Z <a id="logistics_etl.dsn"></a>
2025-08-19T13:56:24.8091930Z 
2025-08-19T13:56:24.8092005Z # logistics\_etl.dsn
2025-08-19T13:56:24.8092113Z 
2025-08-19T13:56:24.8092235Z Local DSN builder to avoid cross-service dependency.
2025-08-19T13:56:24.8092442Z 
2025-08-19T13:56:24.8092566Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T13:56:24.8092731Z 
2025-08-19T13:56:24.8092793Z #### build\_dsn
2025-08-19T13:56:24.8092900Z 
2025-08-19T13:56:24.8092961Z ```python
2025-08-19T13:56:24.8093132Z def build_dsn(sync: bool = True) -> str
2025-08-19T13:56:24.8093348Z ```
2025-08-19T13:56:24.8093428Z 
2025-08-19T13:56:24.8093567Z Return a Postgres DSN assembled from environment variables.
2025-08-19T13:56:24.8093789Z 
2025-08-19T13:56:24.8093938Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T13:56:24.8094360Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T13:56:24.8094700Z error when any required variable is missing.
2025-08-19T13:56:24.8094885Z 
2025-08-19T13:56:24.8095104Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T13:56:24.8095275Z 
2025-08-19T13:56:24.8095363Z # logistics\_etl.tests.conftest
2025-08-19T13:56:24.8095514Z 
2025-08-19T13:56:24.8095618Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T13:56:24.8095809Z 
2025-08-19T13:56:24.8095896Z # logistics\_etl.tests.test\_repository
2025-08-19T13:56:24.8096059Z 
2025-08-19T13:56:24.8096150Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T13:56:24.8096323Z 
2025-08-19T13:56:24.8096412Z # logistics\_etl.tests.test\_cron
2025-08-19T13:56:24.8096559Z 
2025-08-19T13:56:24.8096665Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T13:56:24.8096844Z 
2025-08-19T13:56:24.8096928Z # logistics\_etl.tests.test\_imports
2025-08-19T13:56:24.8097089Z 
2025-08-19T13:56:24.8097376Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T13:56:24.8097566Z 
2025-08-19T13:56:24.8097650Z # logistics\_etl.tests.test\_smoke
2025-08-19T13:56:24.8097808Z 
2025-08-19T13:56:24.8097899Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T13:56:24.8098074Z 
2025-08-19T13:56:24.8098163Z # logistics\_etl.tests.test\_client
2025-08-19T13:56:24.8098319Z 
2025-08-19T13:56:24.8098401Z <a id="logistics_etl.tests"></a>
2025-08-19T13:56:24.8098551Z 
2025-08-19T13:56:24.8098621Z # logistics\_etl.tests
2025-08-19T13:56:24.8098736Z 
2025-08-19T13:56:24.8098815Z <a id="logistics_etl.flow"></a>
2025-08-19T13:56:24.8098958Z 
2025-08-19T13:56:24.8099027Z # logistics\_etl.flow
2025-08-19T13:56:24.8099143Z 
2025-08-19T13:56:24.8099231Z <a id="logistics_etl.client"></a>
2025-08-19T13:56:24.8099376Z 
2025-08-19T13:56:24.8099449Z # logistics\_etl.client
2025-08-19T13:56:24.8099573Z 
2025-08-19T13:56:24.8099649Z <a id="logistics_etl.cron"></a>
2025-08-19T13:56:24.8099795Z 
2025-08-19T13:56:24.8099864Z # logistics\_etl.cron
2025-08-19T13:56:24.8099983Z 
2025-08-19T13:56:24.8100061Z <a id="logistics_etl.db"></a>
2025-08-19T13:56:24.8100198Z 
2025-08-19T13:56:24.8100271Z # logistics\_etl.db
2025-08-19T13:56:24.8100384Z 
2025-08-19T13:56:24.8100474Z <a id="logistics_etl.repository"></a>
2025-08-19T13:56:24.8100646Z 
2025-08-19T13:56:24.8136883Z # logistics\_etl.repository
2025-08-19T13:56:24.8137894Z 
2025-08-19T13:56:24.8138066Z <a id="alert_bot"></a>
2025-08-19T13:56:24.8138329Z 
2025-08-19T13:56:24.8138461Z # alert\_bot
2025-08-19T13:56:24.8138663Z 
2025-08-19T13:56:24.8138851Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T13:56:24.8139208Z 
2025-08-19T13:56:24.8139384Z # alert\_bot.tests.test\_smoke
2025-08-19T13:56:24.8139696Z 
2025-08-19T13:56:24.8139854Z <a id="alert_bot.tests"></a>
2025-08-19T13:56:24.8140139Z 
2025-08-19T13:56:24.8140289Z # alert\_bot.tests
2025-08-19T13:56:24.8140503Z 
2025-08-19T13:56:24.8140612Z <a id="alert_bot.alert_bot"></a>
2025-08-19T13:56:24.8140794Z 
2025-08-19T13:56:24.8140894Z # alert\_bot.alert\_bot
2025-08-19T13:56:24.8141048Z 
2025-08-19T13:56:24.8141145Z <a id="alert_bot.rules"></a>
2025-08-19T13:56:24.8141322Z 
2025-08-19T13:56:24.8141406Z # alert\_bot.rules
2025-08-19T13:56:24.8141551Z 
2025-08-19T13:56:24.8141635Z <a id="common"></a>
2025-08-19T13:56:24.8141775Z 
2025-08-19T13:56:24.8141854Z # common
2025-08-19T13:56:24.8141962Z 
2025-08-19T13:56:24.8142062Z <a id="common.dsn"></a>
2025-08-19T13:56:24.8142209Z 
2025-08-19T13:56:24.8142287Z # common.dsn
2025-08-19T13:56:24.8142411Z 
2025-08-19T13:56:24.8142514Z <a id="common.dsn.build_dsn"></a>
2025-08-19T13:56:24.8142705Z 
2025-08-19T13:56:24.8142787Z #### build\_dsn
2025-08-19T13:56:24.8142920Z 
2025-08-19T13:56:24.8142999Z ```python
2025-08-19T13:56:24.8143219Z def build_dsn(sync: bool = True) -> str
2025-08-19T13:56:24.8143492Z ```
2025-08-19T13:56:24.8143596Z 
2025-08-19T13:56:24.8143754Z Return a Postgres DSN, validating required variables.
2025-08-19T13:56:24.8144022Z 
2025-08-19T13:56:24.8144256Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T13:56:24.8144814Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T13:56:24.8145338Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T13:56:24.8145908Z missing.
2025-08-19T13:56:24.8146016Z 
2025-08-19T13:56:24.8146124Z <a id="common.models_vendor"></a>
2025-08-19T13:56:24.8146341Z 
2025-08-19T13:56:24.8146437Z # common.models\_vendor
2025-08-19T13:56:24.8146592Z 
2025-08-19T13:56:24.8146694Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T13:56:24.8146860Z 
2025-08-19T13:56:24.8146924Z ## Vendor Objects
2025-08-19T13:56:24.8147035Z 
2025-08-19T13:56:24.8147096Z ```python
2025-08-19T13:56:24.8147513Z class Vendor(Base)
2025-08-19T13:56:24.8147690Z ```
2025-08-19T13:56:24.8147773Z 
2025-08-19T13:56:24.8147857Z Vendor of inventory items.
2025-08-19T13:56:24.8147989Z 
2025-08-19T13:56:24.8148090Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T13:56:24.8148276Z 
2025-08-19T13:56:24.8148348Z ## VendorPrice Objects
2025-08-19T13:56:24.8148464Z 
2025-08-19T13:56:24.8148524Z ```python
2025-08-19T13:56:24.8148689Z class VendorPrice(Base)
2025-08-19T13:56:24.8148862Z ```
2025-08-19T13:56:24.8148955Z 
2025-08-19T13:56:24.8149057Z Association table linking vendors to pricing.
2025-08-19T13:56:24.8149252Z 
2025-08-19T13:56:24.8149345Z <a id="common.db_url"></a>
2025-08-19T13:56:24.8149477Z 
2025-08-19T13:56:24.8149544Z # common.db\_url
2025-08-19T13:56:24.8149656Z 
2025-08-19T13:56:24.8149736Z <a id="common.db_url.build_url"></a>
2025-08-19T13:56:24.8149893Z 
2025-08-19T13:56:24.8149956Z #### build\_url
2025-08-19T13:56:24.8150063Z 
2025-08-19T13:56:24.8150124Z ```python
2025-08-19T13:56:24.8150299Z def build_url(async_: bool = True) -> str
2025-08-19T13:56:24.8150699Z ```
2025-08-19T13:56:24.8150779Z 
2025-08-19T13:56:24.8150883Z Return Postgres DSN from env or PG_* parts.
2025-08-19T13:56:24.8151061Z 
2025-08-19T13:56:24.8151138Z <a id="common.keepa"></a>
2025-08-19T13:56:24.8151273Z 
2025-08-19T13:56:24.8151339Z # common.keepa
2025-08-19T13:56:24.8151438Z 
2025-08-19T13:56:24.8151508Z <a id="common.llm"></a>
2025-08-19T13:56:24.8151632Z 
2025-08-19T13:56:24.8151698Z # common.llm
2025-08-19T13:56:24.8151799Z 
2025-08-19T13:56:24.8151885Z <a id="common.settings"></a>
2025-08-19T13:56:24.8152020Z 
2025-08-19T13:56:24.8152094Z # common.settings
2025-08-19T13:56:24.8152342Z 
2025-08-19T13:56:24.8152412Z <a id="common.db"></a>
2025-08-19T13:56:24.8152527Z 
2025-08-19T13:56:24.8152590Z # common.db
2025-08-19T13:56:24.8152687Z 
2025-08-19T13:56:24.8152780Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T13:56:24.8152951Z 
2025-08-19T13:56:24.8153032Z #### build\_sqlalchemy\_url
2025-08-19T13:56:24.8153165Z 
2025-08-19T13:56:24.8153227Z ```python
2025-08-19T13:56:24.8153398Z def build_sqlalchemy_url() -> str
2025-08-19T13:56:24.8153601Z ```
2025-08-19T13:56:24.8153686Z 
2025-08-19T13:56:24.8153782Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T13:56:24.8153954Z 
2025-08-19T13:56:24.8154042Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T13:56:24.8154215Z 
2025-08-19T13:56:24.8154286Z #### build\_asyncpg\_dsn
2025-08-19T13:56:24.8154408Z 
2025-08-19T13:56:24.8154479Z ```python
2025-08-19T13:56:24.8154645Z def build_asyncpg_dsn() -> str
2025-08-19T13:56:24.8154844Z ```
2025-08-19T13:56:24.8154924Z 
2025-08-19T13:56:24.8155058Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T13:56:24.8155277Z 
2025-08-19T13:56:24.8155361Z <a id="common.db.refresh_mvs"></a>
2025-08-19T13:56:24.8155515Z 
2025-08-19T13:56:24.8155585Z #### refresh\_mvs
2025-08-19T13:56:24.8155704Z 
2025-08-19T13:56:24.8155773Z ```python
2025-08-19T13:56:24.8155968Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T13:56:24.8156215Z ```
2025-08-19T13:56:24.8156294Z 
2025-08-19T13:56:24.8156437Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T13:56:24.8156654Z 
2025-08-19T13:56:24.8156729Z <a id="common.config"></a>
2025-08-19T13:56:24.8156861Z 
2025-08-19T13:56:24.8156926Z # common.config
2025-08-19T13:56:24.8157028Z 
2025-08-19T13:56:24.8157106Z <a id="common.base"></a>
2025-08-19T13:56:24.8157497Z 
2025-08-19T13:56:24.8157590Z # common.base
2025-08-19T13:56:24.8157877Z 
2025-08-19T13:56:24.8157963Z <a id="common.base.Base"></a>
2025-08-19T13:56:24.8158102Z 
2025-08-19T13:56:24.8158164Z ## Base Objects
2025-08-19T13:56:24.8158276Z 
2025-08-19T13:56:24.8158335Z ```python
2025-08-19T13:56:24.8158496Z class Base(DeclarativeBase)
2025-08-19T13:56:24.8158688Z ```
2025-08-19T13:56:24.8158768Z 
2025-08-19T13:56:24.8158855Z Base class for SQLAlchemy models.
2025-08-19T13:56:24.8159004Z 
2025-08-19T13:56:24.8159075Z <a id="repricer"></a>
2025-08-19T13:56:24.8159190Z 
2025-08-19T13:56:24.8159257Z # repricer
2025-08-19T13:56:24.8159345Z 
2025-08-19T13:56:24.8159431Z <a id="repricer.app.schemas"></a>
2025-08-19T13:56:24.8159583Z 
2025-08-19T13:56:24.8159661Z # repricer.app.schemas
2025-08-19T13:56:24.8159779Z 
2025-08-19T13:56:24.8159860Z <a id="repricer.app.deps"></a>
2025-08-19T13:56:24.8160006Z 
2025-08-19T13:56:24.8160077Z # repricer.app.deps
2025-08-19T13:56:24.8160188Z 
2025-08-19T13:56:24.8160309Z Placeholder module for Keepa / SP-API clients.
2025-08-19T13:56:24.8160502Z 
2025-08-19T13:56:24.8160585Z <a id="repricer.app.logic"></a>
2025-08-19T13:56:24.8160733Z 
2025-08-19T13:56:24.8160806Z # repricer.app.logic
2025-08-19T13:56:24.8160928Z 
2025-08-19T13:56:24.8161025Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T13:56:24.8161210Z 
2025-08-19T13:56:24.8161272Z #### MIN\_MARGIN
2025-08-19T13:56:24.8161372Z 
2025-08-19T13:56:24.8161438Z 15 % ROI
2025-08-19T13:56:24.8161526Z 
2025-08-19T13:56:24.8161627Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T13:56:24.8161813Z 
2025-08-19T13:56:24.8161879Z #### compute\_price
2025-08-19T13:56:24.8161983Z 
2025-08-19T13:56:24.8162045Z ```python
2025-08-19T13:56:24.8162293Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T13:56:24.8162601Z ```
2025-08-19T13:56:24.8162681Z 
2025-08-19T13:56:24.8162786Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T13:56:24.8163072Z Replace with real competitive logic later.
2025-08-19T13:56:24.8163246Z 
2025-08-19T13:56:24.8163328Z <a id="repricer.app.main"></a>
2025-08-19T13:56:24.8163482Z 
2025-08-19T13:56:24.8163554Z # repricer.app.main
2025-08-19T13:56:24.8163663Z 
2025-08-19T13:56:24.8163855Z <a id="repricer.app"></a>
2025-08-19T13:56:24.8163994Z 
2025-08-19T13:56:24.8164059Z # repricer.app
2025-08-19T13:56:24.8164158Z 
2025-08-19T13:56:24.8164253Z <a id="repricer.tests.test_imports"></a>
2025-08-19T13:56:24.8164423Z 
2025-08-19T13:56:24.8164504Z # repricer.tests.test\_imports
2025-08-19T13:56:24.8164646Z 
2025-08-19T13:56:24.8164733Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T13:56:24.8164897Z 
2025-08-19T13:56:24.8164980Z # repricer.tests.test\_smoke
2025-08-19T13:56:24.8165124Z 
2025-08-19T13:56:24.8165199Z <a id="repricer.tests"></a>
2025-08-19T13:56:24.8165329Z 
2025-08-19T13:56:24.8165401Z # repricer.tests
2025-08-19T13:56:24.8165506Z 
2025-08-19T13:56:24.8165568Z <a id="db"></a>
2025-08-19T13:56:24.8165666Z 
2025-08-19T13:56:24.8165729Z # db
2025-08-19T13:56:24.8165811Z 
2025-08-19T13:56:24.8165885Z <a id="db.utils.views"></a>
2025-08-19T13:56:24.8166023Z 
2025-08-19T13:56:24.8166089Z # db.utils.views
2025-08-19T13:56:24.8166191Z 
2025-08-19T13:56:24.8166285Z <a id="db.utils.views.replace_view"></a>
2025-08-19T13:56:24.8166460Z 
2025-08-19T13:56:24.8166530Z #### replace\_view
2025-08-19T13:56:24.8166632Z 
2025-08-19T13:56:24.8166698Z ```python
2025-08-19T13:56:24.8166886Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T13:56:24.8167252Z ```
2025-08-19T13:56:24.8167336Z 
2025-08-19T13:56:24.8167424Z Drop and recreate a SQL view atomically.
2025-08-19T13:56:24.8167592Z 
2025-08-19T13:56:24.8167660Z <a id="db.utils"></a>
2025-08-19T13:56:24.8167772Z 
2025-08-19T13:56:24.8167839Z # db.utils
2025-08-19T13:56:24.8167925Z 
2025-08-19T13:56:24.8168000Z <a id="price_importer"></a>
2025-08-19T13:56:24.8168130Z 
2025-08-19T13:56:24.8168201Z # price\_importer
2025-08-19T13:56:24.8168306Z 
2025-08-19T13:56:24.8168408Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T13:56:24.8168596Z 
2025-08-19T13:56:24.8168685Z # price\_importer.services\_common.dsn
2025-08-19T13:56:24.8168970Z 
2025-08-19T13:56:24.8169100Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T13:56:24.8169314Z 
2025-08-19T13:56:24.8169377Z #### build\_dsn
2025-08-19T13:56:24.8169478Z 
2025-08-19T13:56:24.8169546Z ```python
2025-08-19T13:56:24.8169713Z def build_dsn(sync: bool = True) -> str
2025-08-19T13:56:24.8169932Z ```
2025-08-19T13:56:24.8170014Z 
2025-08-19T13:56:24.8170079Z Return safe DSN.
2025-08-19T13:56:24.8170187Z 
2025-08-19T13:56:24.8170537Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T13:56:24.8170741Z 
2025-08-19T13:56:24.8170873Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T13:56:24.8171083Z 
2025-08-19T13:56:24.8171192Z # price\_importer.services\_common.models\_vendor
2025-08-19T13:56:24.8171387Z 
2025-08-19T13:56:24.8171493Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T13:56:24.8171680Z 
2025-08-19T13:56:24.8171774Z # price\_importer.services\_common.db\_url
2025-08-19T13:56:24.8171961Z 
2025-08-19T13:56:24.8172097Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T13:56:24.8172312Z 
2025-08-19T13:56:24.8172388Z #### build\_url
2025-08-19T13:56:24.8172488Z 
2025-08-19T13:56:24.8172552Z ```python
2025-08-19T13:56:24.8172727Z def build_url(async_: bool = True) -> str
2025-08-19T13:56:24.8172948Z ```
2025-08-19T13:56:24.8173039Z 
2025-08-19T13:56:24.8173134Z Return Postgres DSN from env or PG_* parts.
2025-08-19T13:56:24.8173311Z 
2025-08-19T13:56:24.8173418Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T13:56:24.8173613Z 
2025-08-19T13:56:24.8173704Z # price\_importer.services\_common.keepa
2025-08-19T13:56:24.8173873Z 
2025-08-19T13:56:24.8173980Z <a id="price_importer.services_common.llm"></a>
2025-08-19T13:56:24.8174162Z 
2025-08-19T13:56:24.8174250Z # price\_importer.services\_common.llm
2025-08-19T13:56:24.8174417Z 
2025-08-19T13:56:24.8174529Z <a id="price_importer.services_common.settings"></a>
2025-08-19T13:56:24.8174729Z 
2025-08-19T13:56:24.8174829Z # price\_importer.services\_common.settings
2025-08-19T13:56:24.8175002Z 
2025-08-19T13:56:24.8175103Z <a id="price_importer.services_common.db"></a>
2025-08-19T13:56:24.8175404Z 
2025-08-19T13:56:24.8175498Z # price\_importer.services\_common.db
2025-08-19T13:56:24.8175657Z 
2025-08-19T13:56:24.8175820Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T13:56:24.8176075Z 
2025-08-19T13:56:24.8176151Z #### build\_sqlalchemy\_url
2025-08-19T13:56:24.8176282Z 
2025-08-19T13:56:24.8176348Z ```python
2025-08-19T13:56:24.8176516Z def build_sqlalchemy_url() -> str
2025-08-19T13:56:24.8176727Z ```
2025-08-19T13:56:24.8176808Z 
2025-08-19T13:56:24.8176901Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T13:56:24.8177078Z 
2025-08-19T13:56:24.8177333Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T13:56:24.8177563Z 
2025-08-19T13:56:24.8177640Z #### build\_asyncpg\_dsn
2025-08-19T13:56:24.8177771Z 
2025-08-19T13:56:24.8177837Z ```python
2025-08-19T13:56:24.8178005Z def build_asyncpg_dsn() -> str
2025-08-19T13:56:24.8178200Z ```
2025-08-19T13:56:24.8178279Z 
2025-08-19T13:56:24.8178416Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T13:56:24.8178628Z 
2025-08-19T13:56:24.8178755Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T13:56:24.8178967Z 
2025-08-19T13:56:24.8179035Z #### refresh\_mvs
2025-08-19T13:56:24.8179144Z 
2025-08-19T13:56:24.8179204Z ```python
2025-08-19T13:56:24.8179401Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T13:56:24.8179651Z ```
2025-08-19T13:56:24.8179730Z 
2025-08-19T13:56:24.8179865Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T13:56:24.8180087Z 
2025-08-19T13:56:24.8180182Z <a id="price_importer.services_common"></a>
2025-08-19T13:56:24.8180353Z 
2025-08-19T13:56:24.8180439Z # price\_importer.services\_common
2025-08-19T13:56:24.8180602Z 
2025-08-19T13:56:24.8180705Z <a id="price_importer.services_common.base"></a>
2025-08-19T13:56:24.8181063Z 
2025-08-19T13:56:24.8181158Z # price\_importer.services\_common.base
2025-08-19T13:56:24.8181323Z 
2025-08-19T13:56:24.8181411Z <a id="price_importer.normaliser"></a>
2025-08-19T13:56:24.8181584Z 
2025-08-19T13:56:24.8181665Z # price\_importer.normaliser
2025-08-19T13:56:24.8181804Z 
2025-08-19T13:56:24.8181908Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T13:56:24.8182097Z 
2025-08-19T13:56:24.8182188Z # price\_importer.common.models\_vendor
2025-08-19T13:56:24.8182351Z 
2025-08-19T13:56:24.8182448Z <a id="price_importer.common.db_url"></a>
2025-08-19T13:56:24.8182618Z 
2025-08-19T13:56:24.8182702Z # price\_importer.common.db\_url
2025-08-19T13:56:24.8182853Z 
2025-08-19T13:56:24.8182957Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T13:56:24.8183142Z 
2025-08-19T13:56:24.8183205Z #### make\_dsn
2025-08-19T13:56:24.8183308Z 
2025-08-19T13:56:24.8183368Z ```python
2025-08-19T13:56:24.8183545Z def make_dsn(async_: bool = False) -> str
2025-08-19T13:56:24.8183774Z ```
2025-08-19T13:56:24.8183856Z 
2025-08-19T13:56:24.8183983Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T13:56:24.8184185Z 
2025-08-19T13:56:24.8184299Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T13:56:24.8184495Z 
2025-08-19T13:56:24.8184558Z #### build\_url
2025-08-19T13:56:24.8184657Z 
2025-08-19T13:56:24.8184717Z ```python
2025-08-19T13:56:24.8184895Z def build_url(async_: bool = False) -> str
2025-08-19T13:56:24.8185123Z ```
2025-08-19T13:56:24.8185202Z 
2025-08-19T13:56:24.8185322Z Return Postgres DSN built from environment variables.
2025-08-19T13:56:24.8185525Z 
2025-08-19T13:56:24.8185618Z <a id="price_importer.common"></a>
2025-08-19T13:56:24.8185771Z 
2025-08-19T13:56:24.8185847Z # price\_importer.common
2025-08-19T13:56:24.8185979Z 
2025-08-19T13:56:24.8186067Z <a id="price_importer.common.base"></a>
2025-08-19T13:56:24.8186236Z 
2025-08-19T13:56:24.8186326Z # price\_importer.common.base
2025-08-19T13:56:24.8186469Z 
2025-08-19T13:56:24.8186571Z <a id="price_importer.tests.conftest"></a>
2025-08-19T13:56:24.8186744Z 
2025-08-19T13:56:24.8186836Z # price\_importer.tests.conftest
2025-08-19T13:56:24.8187109Z 
2025-08-19T13:56:24.8187416Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T13:56:24.8187624Z 
2025-08-19T13:56:24.8187712Z # price\_importer.tests.test\_reader
2025-08-19T13:56:24.8187870Z 
2025-08-19T13:56:24.8187975Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T13:56:24.8188154Z 
2025-08-19T13:56:24.8188242Z # price\_importer.tests.test\_imports
2025-08-19T13:56:24.8188399Z 
2025-08-19T13:56:24.8188501Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T13:56:24.8188671Z 
2025-08-19T13:56:24.8188753Z # price\_importer.tests.test\_smoke
2025-08-19T13:56:24.8188914Z 
2025-08-19T13:56:24.8189019Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T13:56:24.8189236Z 
2025-08-19T13:56:24.8189332Z # price\_importer.tests.test\_normaliser
2025-08-19T13:56:24.8189503Z 
2025-08-19T13:56:24.8189587Z <a id="price_importer.tests"></a>
2025-08-19T13:56:24.8189744Z 
2025-08-19T13:56:24.8189822Z # price\_importer.tests
2025-08-19T13:56:24.8189943Z 
2025-08-19T13:56:24.8190033Z <a id="price_importer.reader"></a>
2025-08-19T13:56:24.8190187Z 
2025-08-19T13:56:24.8190262Z # price\_importer.reader
2025-08-19T13:56:24.8190386Z 
2025-08-19T13:56:24.8190480Z <a id="price_importer.repository"></a>
2025-08-19T13:56:24.8190643Z 
2025-08-19T13:56:24.8190723Z # price\_importer.repository
2025-08-19T13:56:24.8190861Z 
2025-08-19T13:56:24.8190948Z <a id="price_importer.import"></a>
2025-08-19T13:56:24.8191097Z 
2025-08-19T13:56:24.8191175Z # price\_importer.import
2025-08-19T13:56:24.8191302Z 
2025-08-19T13:56:24.8191372Z <a id="fees_h10"></a>
2025-08-19T13:56:24.8191487Z 
2025-08-19T13:56:24.8191559Z # fees\_h10
2025-08-19T13:56:24.8191649Z 
2025-08-19T13:56:24.8191724Z <a id="fees_h10.worker"></a>
2025-08-19T13:56:24.8191855Z 
2025-08-19T13:56:24.8191927Z # fees\_h10.worker
2025-08-19T13:56:24.8192032Z 
2025-08-19T13:56:24.8192270Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T13:56:24.8192453Z 
2025-08-19T13:56:24.8192524Z #### list\_active\_asins
2025-08-19T13:56:24.8192644Z 
2025-08-19T13:56:24.8192709Z ```python
2025-08-19T13:56:24.8192880Z def list_active_asins() -> list[str]
2025-08-19T13:56:24.8193096Z ```
2025-08-19T13:56:24.8193176Z 
2025-08-19T13:56:24.8193288Z Return known ASINs or an empty list if unavailable.
2025-08-19T13:56:24.8193483Z 
2025-08-19T13:56:24.8193573Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T13:56:24.8193730Z 
2025-08-19T13:56:24.8193807Z # fees\_h10.tests.test\_smoke
2025-08-19T13:56:24.8193949Z 
2025-08-19T13:56:24.8194022Z <a id="fees_h10.tests"></a>
2025-08-19T13:56:24.8194150Z 
2025-08-19T13:56:24.8194219Z # fees\_h10.tests
2025-08-19T13:56:24.8194322Z 
2025-08-19T13:56:24.8194395Z <a id="fees_h10.client"></a>
2025-08-19T13:56:24.8194525Z 
2025-08-19T13:56:24.8194596Z # fees\_h10.client
2025-08-19T13:56:24.8194698Z 
2025-08-19T13:56:24.8194778Z <a id="fees_h10.repository"></a>
2025-08-19T13:56:24.8194930Z 
2025-08-19T13:56:24.8195001Z # fees\_h10.repository
2025-08-19T13:56:24.8195117Z 
2025-08-19T13:56:24.8195185Z <a id="emailer"></a>
2025-08-19T13:56:24.8195307Z 
2025-08-19T13:56:24.8195367Z # emailer
2025-08-19T13:56:24.8195454Z 
2025-08-19T13:56:24.8195558Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T13:56:24.8195734Z 
2025-08-19T13:56:24.8195821Z # emailer.tests.test\_import\_emailer
2025-08-19T13:56:24.8195986Z 
2025-08-19T13:56:24.8196071Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T13:56:24.8196225Z 
2025-08-19T13:56:24.8196303Z # emailer.tests.test\_smoke
2025-08-19T13:56:24.8196444Z 
2025-08-19T13:56:24.8196519Z <a id="emailer.tests"></a>
2025-08-19T13:56:24.8196649Z 
2025-08-19T13:56:24.8196723Z # emailer.tests
2025-08-19T13:56:24.8196825Z 
2025-08-19T13:56:24.8196906Z <a id="emailer.generate_body"></a>
2025-08-19T13:56:24.8217067Z 
2025-08-19T13:56:24.8217420Z # emailer.generate\_body
2025-08-19T13:56:24.8217668Z 
2025-08-19T13:56:24.8217813Z <a id="llm_server"></a>
2025-08-19T13:56:24.8218036Z 
2025-08-19T13:56:24.8218140Z # llm\_server
2025-08-19T13:56:24.8218251Z 
2025-08-19T13:56:24.8218346Z <a id="llm_server.app"></a>
2025-08-19T13:56:24.8218720Z 
2025-08-19T13:56:24.8218791Z # llm\_server.app
2025-08-19T13:56:24.8218905Z 
