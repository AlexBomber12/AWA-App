2025-08-17T03:01:07.1336535Z ##[group]Run pydoc-markdown
2025-08-17T03:01:07.1336851Z [36;1mpydoc-markdown[0m
2025-08-17T03:01:07.1380407Z shell: /usr/bin/bash -e {0}
2025-08-17T03:01:07.1380624Z env:
2025-08-17T03:01:07.1380859Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T03:01:07.1381256Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T03:01:07.1381627Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T03:01:07.1381962Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T03:01:07.1382290Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T03:01:07.1382621Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T03:01:07.1382890Z ##[endgroup]
2025-08-17T03:01:07.4762477Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T03:01:07.4763253Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T03:01:07.4763540Z In "pydoc-markdown.yml"
2025-08-17T03:01:07.4763810Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T03:01:07.4764263Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T03:01:07.4764723Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T03:01:07.4765034Z 
2025-08-17T03:01:07.6859795Z <a id="__init__"></a>
2025-08-17T03:01:07.6860225Z 
2025-08-17T03:01:07.6860356Z # \_\_init\_\_
2025-08-17T03:01:07.6860565Z 
2025-08-17T03:01:07.6860693Z <a id="api"></a>
2025-08-17T03:01:07.6860891Z 
2025-08-17T03:01:07.6861006Z # api
2025-08-17T03:01:07.6861174Z 
2025-08-17T03:01:07.6861324Z <a id="api.tests.test_llm"></a>
2025-08-17T03:01:07.6861591Z 
2025-08-17T03:01:07.6861730Z # api.tests.test\_llm
2025-08-17T03:01:07.6861943Z 
2025-08-17T03:01:07.6862097Z <a id="api.tests.test_imports"></a>
2025-08-17T03:01:07.6862389Z 
2025-08-17T03:01:07.6862547Z # api.tests.test\_imports
2025-08-17T03:01:07.6862789Z 
2025-08-17T03:01:07.6862953Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T03:01:07.6863254Z 
2025-08-17T03:01:07.6863401Z # api.tests.test\_entrypoint
2025-08-17T03:01:07.6863702Z 
2025-08-17T03:01:07.6863863Z <a id="api.tests.test_health"></a>
2025-08-17T03:01:07.6864145Z 
2025-08-17T03:01:07.6864282Z # api.tests.test\_health
2025-08-17T03:01:07.6864515Z 
2025-08-17T03:01:07.6864673Z <a id="api.migrations.env"></a>
2025-08-17T03:01:07.6864932Z 
2025-08-17T03:01:07.6865068Z # api.migrations.env
2025-08-17T03:01:07.6865285Z 
2025-08-17T03:01:07.6865509Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T03:01:07.6865876Z 
2025-08-17T03:01:07.6866077Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T03:01:07.6866424Z 
2025-08-17T03:01:07.6866624Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T03:01:07.6867394Z 
2025-08-17T03:01:07.6867669Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T03:01:07.6867993Z 
2025-08-17T03:01:07.6868272Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T03:01:07.6868715Z 
2025-08-17T03:01:07.6868959Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T03:01:07.6869747Z 
2025-08-17T03:01:07.6869996Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T03:01:07.6870376Z 
2025-08-17T03:01:07.6870570Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T03:01:07.6870906Z 
2025-08-17T03:01:07.6871122Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T03:01:07.6871498Z 
2025-08-17T03:01:07.6871693Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T03:01:07.6872033Z 
2025-08-17T03:01:07.6872269Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T03:01:07.6872649Z 
2025-08-17T03:01:07.6872860Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T03:01:07.6873206Z 
2025-08-17T03:01:07.6873421Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T03:01:07.6873779Z 
2025-08-17T03:01:07.6873972Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T03:01:07.6874297Z 
2025-08-17T03:01:07.6874515Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T03:01:07.6875270Z 
2025-08-17T03:01:07.6875473Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T03:01:07.6875818Z 
2025-08-17T03:01:07.6876056Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T03:01:07.6876434Z 
2025-08-17T03:01:07.6876636Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T03:01:07.6877226Z 
2025-08-17T03:01:07.6877438Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T03:01:07.6877787Z 
2025-08-17T03:01:07.6877967Z # api.migrations.versions.0001\_baseline
2025-08-17T03:01:07.6878270Z 
2025-08-17T03:01:07.6878427Z <a id="api.migrations.versions"></a>
2025-08-17T03:01:07.6878714Z 
2025-08-17T03:01:07.6878868Z # api.migrations.versions
2025-08-17T03:01:07.6879101Z 
2025-08-17T03:01:07.6879241Z <a id="api.migrations"></a>
2025-08-17T03:01:07.6879489Z 
2025-08-17T03:01:07.6879611Z # api.migrations
2025-08-17T03:01:07.6879804Z 
2025-08-17T03:01:07.6879923Z <a id="api.db"></a>
2025-08-17T03:01:07.6880121Z 
2025-08-17T03:01:07.6880253Z # api.db
2025-08-17T03:01:07.6880409Z 
2025-08-17T03:01:07.6880556Z <a id="api.routes.stats"></a>
2025-08-17T03:01:07.6880806Z 
2025-08-17T03:01:07.6880930Z # api.routes.stats
2025-08-17T03:01:07.6881135Z 
2025-08-17T03:01:07.6881292Z <a id="api.routes.stats.kpi"></a>
2025-08-17T03:01:07.6881565Z 
2025-08-17T03:01:07.6881676Z #### kpi
2025-08-17T03:01:07.6881838Z 
2025-08-17T03:01:07.6881952Z ```python
2025-08-17T03:01:07.6882259Z @router.get("/stats/kpi")
2025-08-17T03:01:07.6882667Z def kpi() -> List[Dict[str, int]]
2025-08-17T03:01:07.6883048Z ```
2025-08-17T03:01:07.6883205Z 
2025-08-17T03:01:07.6883354Z Return KPI metrics (mock).
2025-08-17T03:01:07.6883614Z 
2025-08-17T03:01:07.6883791Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T03:01:07.6884112Z 
2025-08-17T03:01:07.6884233Z #### roi\_by\_vendor
2025-08-17T03:01:07.6884438Z 
2025-08-17T03:01:07.6884549Z ```python
2025-08-17T03:01:07.6884857Z @router.get("/stats/roi_by_vendor")
2025-08-17T03:01:07.6885293Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T03:01:07.6885916Z ```
2025-08-17T03:01:07.6886068Z 
2025-08-17T03:01:07.6886213Z Return ROI percent by vendor.
2025-08-17T03:01:07.6886478Z 
2025-08-17T03:01:07.6886644Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T03:01:07.6887116Z 
2025-08-17T03:01:07.6887238Z #### roi\_trend
2025-08-17T03:01:07.6887426Z 
2025-08-17T03:01:07.6887538Z ```python
2025-08-17T03:01:07.6887838Z @router.get("/stats/roi_trend")
2025-08-17T03:01:07.6888256Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T03:01:07.6888679Z ```
2025-08-17T03:01:07.6888828Z 
2025-08-17T03:01:07.6888958Z Return 30-day ROI trend.
2025-08-17T03:01:07.6889191Z 
2025-08-17T03:01:07.6889332Z <a id="api.routes.roi"></a>
2025-08-17T03:01:07.6889571Z 
2025-08-17T03:01:07.6889690Z # api.routes.roi
2025-08-17T03:01:07.6889884Z 
2025-08-17T03:01:07.6890027Z <a id="api.routes.health"></a>
2025-08-17T03:01:07.6890281Z 
2025-08-17T03:01:07.6890411Z # api.routes.health
2025-08-17T03:01:07.6890608Z 
2025-08-17T03:01:07.6890787Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T03:01:07.6891406Z 
2025-08-17T03:01:07.6891531Z #### MAX\_SKEW
2025-08-17T03:01:07.6891711Z 
2025-08-17T03:01:07.6891967Z seconds
2025-08-17T03:01:07.6892134Z 
2025-08-17T03:01:07.6892303Z <a id="api.routes.health.health"></a>
2025-08-17T03:01:07.6892606Z 
2025-08-17T03:01:07.6892732Z #### health
2025-08-17T03:01:07.6892893Z 
2025-08-17T03:01:07.6893010Z ```python
2025-08-17T03:01:07.6893370Z @router.get("/health", include_in_schema=False)
2025-08-17T03:01:07.6894045Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T03:01:07.6894651Z ```
2025-08-17T03:01:07.6894804Z 
2025-08-17T03:01:07.6895022Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T03:01:07.6895374Z 
2025-08-17T03:01:07.6895535Z <a id="api.routes.repository"></a>
2025-08-17T03:01:07.6895817Z 
2025-08-17T03:01:07.6895966Z # api.routes.repository
2025-08-17T03:01:07.6896189Z 
2025-08-17T03:01:07.6896318Z <a id="api.routes"></a>
2025-08-17T03:01:07.6896813Z 
2025-08-17T03:01:07.6897121Z # api.routes
2025-08-17T03:01:07.6897310Z 
2025-08-17T03:01:07.6897462Z <a id="api.models.fee"></a>
2025-08-17T03:01:07.6897708Z 
2025-08-17T03:01:07.6897828Z # api.models.fee
2025-08-17T03:01:07.6898014Z 
2025-08-17T03:01:07.6898154Z <a id="api.models"></a>
2025-08-17T03:01:07.6898363Z 
2025-08-17T03:01:07.6898477Z # api.models
2025-08-17T03:01:07.6898656Z 
2025-08-17T03:01:07.6898795Z <a id="api.roi_repository"></a>
2025-08-17T03:01:07.6899025Z 
2025-08-17T03:01:07.6899145Z # api.roi\_repository
2025-08-17T03:01:07.6899343Z 
2025-08-17T03:01:07.6899457Z <a id="api.main"></a>
2025-08-17T03:01:07.6899644Z 
2025-08-17T03:01:07.6899750Z # api.main
2025-08-17T03:01:07.6899914Z 
2025-08-17T03:01:07.6900048Z <a id="api.main.ready"></a>
2025-08-17T03:01:07.6900287Z 
2025-08-17T03:01:07.6900395Z #### ready
2025-08-17T03:01:07.6900549Z 
2025-08-17T03:01:07.6900663Z ```python
2025-08-17T03:01:07.6901129Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T03:01:07.6901914Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T03:01:07.6902541Z                                                                       str]
2025-08-17T03:01:07.6902964Z ```
2025-08-17T03:01:07.6903112Z 
2025-08-17T03:01:07.6903288Z Return 200 only when migrations are at head.
2025-08-17T03:01:07.6903614Z 
2025-08-17T03:01:07.6903754Z <a id="api.config"></a>
2025-08-17T03:01:07.6903973Z 
2025-08-17T03:01:07.6904089Z # api.config
2025-08-17T03:01:07.6904265Z 
2025-08-17T03:01:07.6904379Z <a id="etl"></a>
2025-08-17T03:01:07.6904562Z 
2025-08-17T03:01:07.6904676Z # etl
2025-08-17T03:01:07.6904827Z 
2025-08-17T03:01:07.6904970Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T03:01:07.6905232Z 
2025-08-17T03:01:07.6905373Z # etl.fba\_fee\_ingestor
2025-08-17T03:01:07.6905592Z 
2025-08-17T03:01:07.6905737Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T03:01:07.6906007Z 
2025-08-17T03:01:07.6906137Z # etl.sp\_fees\_ingestor
2025-08-17T03:01:07.6906373Z 
2025-08-17T03:01:07.6906521Z <a id="etl.keepa_ingestor"></a>
2025-08-17T03:01:07.6906771Z 
2025-08-17T03:01:07.6907107Z # etl.keepa\_ingestor
2025-08-17T03:01:07.6907329Z 
2025-08-17T03:01:07.6907460Z <a id="etl.db"></a>
2025-08-17T03:01:07.6907652Z 
2025-08-17T03:01:07.6907760Z # etl.db
2025-08-17T03:01:07.6907924Z 
2025-08-17T03:01:07.6908111Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T03:01:07.6908445Z 
2025-08-17T03:01:07.6908606Z # etl.dialects.amazon\_reimbursements
2025-08-17T03:01:07.6908907Z 
2025-08-17T03:01:07.6909069Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T03:01:07.6909377Z 
2025-08-17T03:01:07.6909537Z # etl.dialects.amazon\_returns
2025-08-17T03:01:07.6909795Z 
2025-08-17T03:01:07.6909940Z <a id="etl.dialects"></a>
2025-08-17T03:01:07.6910179Z 
2025-08-17T03:01:07.6910296Z # etl.dialects
2025-08-17T03:01:07.6910479Z 
2025-08-17T03:01:07.6910597Z <a id="ingest"></a>
2025-08-17T03:01:07.6910797Z 
2025-08-17T03:01:07.6910907Z # ingest
2025-08-17T03:01:07.6911074Z 
2025-08-17T03:01:07.6911482Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T03:01:07.6911780Z 
2025-08-17T03:01:07.6911923Z # ingest.tests.test\_smoke
2025-08-17T03:01:07.6912174Z 
2025-08-17T03:01:07.6912308Z <a id="ingest.tests"></a>
2025-08-17T03:01:07.6912557Z 
2025-08-17T03:01:07.6912684Z # ingest.tests
2025-08-17T03:01:07.6912931Z 
2025-08-17T03:01:07.6913083Z <a id="ingest.upload_router"></a>
2025-08-17T03:01:07.6913360Z 
2025-08-17T03:01:07.6913494Z # ingest.upload\_router
2025-08-17T03:01:07.6913714Z 
2025-08-17T03:01:07.6913862Z <a id="ingest.email_watcher"></a>
2025-08-17T03:01:07.6914132Z 
2025-08-17T03:01:07.6914260Z # ingest.email\_watcher
2025-08-17T03:01:07.6914472Z 
2025-08-17T03:01:07.6914633Z <a id="ingest.email_watcher.main"></a>
2025-08-17T03:01:07.6914932Z 
2025-08-17T03:01:07.6915057Z #### main
2025-08-17T03:01:07.6915220Z 
2025-08-17T03:01:07.6915336Z ```python
2025-08-17T03:01:07.6915657Z def main() -> dict[str, str]
2025-08-17T03:01:07.6916009Z ```
2025-08-17T03:01:07.6916170Z 
2025-08-17T03:01:07.6916679Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T03:01:07.6917358Z 
2025-08-17T03:01:07.6917671Z Returns {"status": "success"} when processing completes.
2025-08-17T03:01:07.6918049Z 
2025-08-17T03:01:07.6918206Z <a id="ingest.ingest_router"></a>
2025-08-17T03:01:07.6918473Z 
2025-08-17T03:01:07.6918606Z # ingest.ingest\_router
2025-08-17T03:01:07.6918827Z 
2025-08-17T03:01:07.6918962Z <a id="logistics_etl"></a>
2025-08-17T03:01:07.6919209Z 
2025-08-17T03:01:07.6919334Z # logistics\_etl
2025-08-17T03:01:07.6919537Z 
2025-08-17T03:01:07.6919672Z Daily logistics ETL job.
2025-08-17T03:01:07.6919878Z 
2025-08-17T03:01:07.6920018Z <a id="logistics_etl.__main__"></a>
2025-08-17T03:01:07.6920277Z 
2025-08-17T03:01:07.6920414Z # logistics\_etl.\_\_main\_\_
2025-08-17T03:01:07.6920660Z 
2025-08-17T03:01:07.6920810Z <a id="logistics_etl.dsn"></a>
2025-08-17T03:01:07.6921064Z 
2025-08-17T03:01:07.6921191Z # logistics\_etl.dsn
2025-08-17T03:01:07.6921399Z 
2025-08-17T03:01:07.6921628Z Local DSN builder to avoid cross-service dependency.
2025-08-17T03:01:07.6921983Z 
2025-08-17T03:01:07.6922150Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T03:01:07.6922445Z 
2025-08-17T03:01:07.6922559Z #### build\_dsn
2025-08-17T03:01:07.6922735Z 
2025-08-17T03:01:07.6922853Z ```python
2025-08-17T03:01:07.6923159Z def build_dsn(sync: bool = True) -> str
2025-08-17T03:01:07.6923551Z ```
2025-08-17T03:01:07.6923696Z 
2025-08-17T03:01:07.6923944Z Return a Postgres DSN assembled from environment variables.
2025-08-17T03:01:07.6924353Z 
2025-08-17T03:01:07.6924628Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T03:01:07.6925337Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T03:01:07.6925960Z error when any required variable is missing.
2025-08-17T03:01:07.6926287Z 
2025-08-17T03:01:07.6926467Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T03:01:07.6926776Z 
2025-08-17T03:01:07.6927143Z # logistics\_etl.tests.conftest
2025-08-17T03:01:07.6927439Z 
2025-08-17T03:01:07.6927622Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T03:01:07.6927955Z 
2025-08-17T03:01:07.6928121Z # logistics\_etl.tests.test\_repository
2025-08-17T03:01:07.6928416Z 
2025-08-17T03:01:07.6928584Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T03:01:07.6928888Z 
2025-08-17T03:01:07.6929047Z # logistics\_etl.tests.test\_cron
2025-08-17T03:01:07.6929324Z 
2025-08-17T03:01:07.6929499Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T03:01:07.6929868Z 
2025-08-17T03:01:07.6930025Z # logistics\_etl.tests.test\_imports
2025-08-17T03:01:07.6930309Z 
2025-08-17T03:01:07.6930481Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T03:01:07.6930791Z 
2025-08-17T03:01:07.6930940Z # logistics\_etl.tests.test\_smoke
2025-08-17T03:01:07.6931214Z 
2025-08-17T03:01:07.6931394Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T03:01:07.6931702Z 
2025-08-17T03:01:07.6931853Z # logistics\_etl.tests.test\_client
2025-08-17T03:01:07.6932148Z 
2025-08-17T03:01:07.6932531Z <a id="logistics_etl.tests"></a>
2025-08-17T03:01:07.6932812Z 
2025-08-17T03:01:07.6932946Z # logistics\_etl.tests
2025-08-17T03:01:07.6933162Z 
2025-08-17T03:01:07.6933302Z <a id="logistics_etl.flow"></a>
2025-08-17T03:01:07.6933553Z 
2025-08-17T03:01:07.6933691Z # logistics\_etl.flow
2025-08-17T03:01:07.6933896Z 
2025-08-17T03:01:07.6934039Z <a id="logistics_etl.client"></a>
2025-08-17T03:01:07.6934313Z 
2025-08-17T03:01:07.6934447Z # logistics\_etl.client
2025-08-17T03:01:07.6934666Z 
2025-08-17T03:01:07.6934808Z <a id="logistics_etl.cron"></a>
2025-08-17T03:01:07.6935057Z 
2025-08-17T03:01:07.6935196Z # logistics\_etl.cron
2025-08-17T03:01:07.6935406Z 
2025-08-17T03:01:07.6935560Z <a id="logistics_etl.db"></a>
2025-08-17T03:01:07.6935821Z 
2025-08-17T03:01:07.6935948Z # logistics\_etl.db
2025-08-17T03:01:07.6936160Z 
2025-08-17T03:01:07.6936315Z <a id="logistics_etl.repository"></a>
2025-08-17T03:01:07.6936601Z 
2025-08-17T03:01:07.6936740Z # logistics\_etl.repository
2025-08-17T03:01:07.6937430Z 
2025-08-17T03:01:07.6937565Z <a id="alert_bot"></a>
2025-08-17T03:01:07.6937783Z 
2025-08-17T03:01:07.6937905Z # alert\_bot
2025-08-17T03:01:07.6938078Z 
2025-08-17T03:01:07.6938231Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T03:01:07.6938536Z 
2025-08-17T03:01:07.6938681Z # alert\_bot.tests.test\_smoke
2025-08-17T03:01:07.6938934Z 
2025-08-17T03:01:07.6939073Z <a id="alert_bot.tests"></a>
2025-08-17T03:01:07.6939326Z 
2025-08-17T03:01:07.6939447Z # alert\_bot.tests
2025-08-17T03:01:07.6939635Z 
2025-08-17T03:01:07.6939786Z <a id="alert_bot.alert_bot"></a>
2025-08-17T03:01:07.6940036Z 
2025-08-17T03:01:07.6940160Z # alert\_bot.alert\_bot
2025-08-17T03:01:07.6940378Z 
2025-08-17T03:01:07.6940511Z <a id="alert_bot.rules"></a>
2025-08-17T03:01:07.6940744Z 
2025-08-17T03:01:07.6940858Z # alert\_bot.rules
2025-08-17T03:01:07.6941049Z 
2025-08-17T03:01:07.6941165Z <a id="common"></a>
2025-08-17T03:01:07.6941351Z 
2025-08-17T03:01:07.6941469Z # common
2025-08-17T03:01:07.6941686Z 
2025-08-17T03:01:07.6941831Z <a id="common.dsn"></a>
2025-08-17T03:01:07.6942040Z 
2025-08-17T03:01:07.6942165Z # common.dsn
2025-08-17T03:01:07.6942337Z 
2025-08-17T03:01:07.6942487Z <a id="common.dsn.build_dsn"></a>
2025-08-17T03:01:07.6942763Z 
2025-08-17T03:01:07.6942876Z #### build\_dsn
2025-08-17T03:01:07.6943053Z 
2025-08-17T03:01:07.6943161Z ```python
2025-08-17T03:01:07.6943476Z def build_dsn(sync: bool = True) -> str
2025-08-17T03:01:07.6943871Z ```
2025-08-17T03:01:07.6944020Z 
2025-08-17T03:01:07.6944237Z Return a Postgres DSN, validating required variables.
2025-08-17T03:01:07.6944603Z 
2025-08-17T03:01:07.6944956Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T03:01:07.6945732Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T03:01:07.6946488Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T03:01:07.6947265Z missing.
2025-08-17T03:01:07.6947426Z 
2025-08-17T03:01:07.6947571Z <a id="common.models_vendor"></a>
2025-08-17T03:01:07.6947855Z 
2025-08-17T03:01:07.6947995Z # common.models\_vendor
2025-08-17T03:01:07.6948209Z 
2025-08-17T03:01:07.6948368Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T03:01:07.6948679Z 
2025-08-17T03:01:07.6948798Z ## Vendor Objects
2025-08-17T03:01:07.6948987Z 
2025-08-17T03:01:07.6949098Z ```python
2025-08-17T03:01:07.6949374Z class Vendor(Base)
2025-08-17T03:01:07.6949664Z ```
2025-08-17T03:01:07.6949806Z 
2025-08-17T03:01:07.6949945Z Vendor of inventory items.
2025-08-17T03:01:07.6950181Z 
2025-08-17T03:01:07.6950367Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T03:01:07.6950696Z 
2025-08-17T03:01:07.6950826Z ## VendorPrice Objects
2025-08-17T03:01:07.6951042Z 
2025-08-17T03:01:07.6951153Z ```python
2025-08-17T03:01:07.6951434Z class VendorPrice(Base)
2025-08-17T03:01:07.6951750Z ```
2025-08-17T03:01:07.6951892Z 
2025-08-17T03:01:07.6952085Z Association table linking vendors to pricing.
2025-08-17T03:01:07.6952418Z 
2025-08-17T03:01:07.6952558Z <a id="common.db_url"></a>
2025-08-17T03:01:07.6953029Z 
2025-08-17T03:01:07.6953160Z # common.db\_url
2025-08-17T03:01:07.6953347Z 
2025-08-17T03:01:07.6953496Z <a id="common.db_url.build_url"></a>
2025-08-17T03:01:07.6953791Z 
2025-08-17T03:01:07.6953905Z #### build\_url
2025-08-17T03:01:07.6954081Z 
2025-08-17T03:01:07.6954202Z ```python
2025-08-17T03:01:07.6954507Z def build_url(async_: bool = True) -> str
2025-08-17T03:01:07.6954921Z ```
2025-08-17T03:01:07.6955121Z 
2025-08-17T03:01:07.6955302Z Return Postgres DSN from env or PG_* parts.
2025-08-17T03:01:07.6955631Z 
2025-08-17T03:01:07.6955785Z <a id="common.keepa"></a>
2025-08-17T03:01:07.6956029Z 
2025-08-17T03:01:07.6956149Z # common.keepa
2025-08-17T03:01:07.6956333Z 
2025-08-17T03:01:07.6956465Z <a id="common.llm"></a>
2025-08-17T03:01:07.6956703Z 
2025-08-17T03:01:07.6956822Z # common.llm
2025-08-17T03:01:07.6957201Z 
2025-08-17T03:01:07.6957346Z <a id="common.settings"></a>
2025-08-17T03:01:07.6957600Z 
2025-08-17T03:01:07.6957734Z # common.settings
2025-08-17T03:01:07.6958153Z 
2025-08-17T03:01:07.6958284Z <a id="common.db"></a>
2025-08-17T03:01:07.6958505Z 
2025-08-17T03:01:07.6958619Z # common.db
2025-08-17T03:01:07.6958782Z 
2025-08-17T03:01:07.6958947Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T03:01:07.6959263Z 
2025-08-17T03:01:07.6959396Z #### build\_sqlalchemy\_url
2025-08-17T03:01:07.6959624Z 
2025-08-17T03:01:07.6959745Z ```python
2025-08-17T03:01:07.6960045Z def build_sqlalchemy_url() -> str
2025-08-17T03:01:07.6960419Z ```
2025-08-17T03:01:07.6960552Z 
2025-08-17T03:01:07.6960711Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T03:01:07.6961018Z 
2025-08-17T03:01:07.6961170Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T03:01:07.6961458Z 
2025-08-17T03:01:07.6961598Z #### build\_asyncpg\_dsn
2025-08-17T03:01:07.6961819Z 
2025-08-17T03:01:07.6961929Z ```python
2025-08-17T03:01:07.6962235Z def build_asyncpg_dsn() -> str
2025-08-17T03:01:07.6962593Z ```
2025-08-17T03:01:07.6962744Z 
2025-08-17T03:01:07.6962982Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T03:01:07.6963364Z 
2025-08-17T03:01:07.6963515Z <a id="common.db.refresh_mvs"></a>
2025-08-17T03:01:07.6963798Z 
2025-08-17T03:01:07.6963912Z #### refresh\_mvs
2025-08-17T03:01:07.6964098Z 
2025-08-17T03:01:07.6964218Z ```python
2025-08-17T03:01:07.6964569Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T03:01:07.6965020Z ```
2025-08-17T03:01:07.6965151Z 
2025-08-17T03:01:07.6965390Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T03:01:07.6965777Z 
2025-08-17T03:01:07.6965913Z <a id="common.config"></a>
2025-08-17T03:01:07.6966182Z 
2025-08-17T03:01:07.6966297Z # common.config
2025-08-17T03:01:07.6966485Z 
2025-08-17T03:01:07.6966607Z <a id="common.base"></a>
2025-08-17T03:01:07.6966805Z 
2025-08-17T03:01:07.6967098Z # common.base
2025-08-17T03:01:07.6967274Z 
2025-08-17T03:01:07.6967402Z <a id="common.base.Base"></a>
2025-08-17T03:01:07.6967626Z 
2025-08-17T03:01:07.6967734Z ## Base Objects
2025-08-17T03:01:07.6967905Z 
2025-08-17T03:01:07.6967999Z ```python
2025-08-17T03:01:07.6968247Z class Base(DeclarativeBase)
2025-08-17T03:01:07.6968541Z ```
2025-08-17T03:01:07.6968675Z 
2025-08-17T03:01:07.6968814Z Base class for SQLAlchemy models.
2025-08-17T03:01:07.6969052Z 
2025-08-17T03:01:07.6969180Z <a id="repricer"></a>
2025-08-17T03:01:07.6969379Z 
2025-08-17T03:01:07.6969484Z # repricer
2025-08-17T03:01:07.6969632Z 
2025-08-17T03:01:07.6969775Z <a id="repricer.app.schemas"></a>
2025-08-17T03:01:07.6970036Z 
2025-08-17T03:01:07.6970169Z # repricer.app.schemas
2025-08-17T03:01:07.6970378Z 
2025-08-17T03:01:07.6970510Z <a id="repricer.app.deps"></a>
2025-08-17T03:01:07.6970736Z 
2025-08-17T03:01:07.6970847Z # repricer.app.deps
2025-08-17T03:01:07.6971023Z 
2025-08-17T03:01:07.6971205Z Placeholder module for Keepa / SP-API clients.
2025-08-17T03:01:07.6971484Z 
2025-08-17T03:01:07.6971614Z <a id="repricer.app.logic"></a>
2025-08-17T03:01:07.6971833Z 
2025-08-17T03:01:07.6971954Z # repricer.app.logic
2025-08-17T03:01:07.6972364Z 
2025-08-17T03:01:07.6972518Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T03:01:07.6972787Z 
2025-08-17T03:01:07.6972884Z #### MIN\_MARGIN
2025-08-17T03:01:07.6973042Z 
2025-08-17T03:01:07.6973141Z 15 % ROI
2025-08-17T03:01:07.6973276Z 
2025-08-17T03:01:07.6973433Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T03:01:07.6973714Z 
2025-08-17T03:01:07.6973884Z #### compute\_price
2025-08-17T03:01:07.6974053Z 
2025-08-17T03:01:07.6974149Z ```python
2025-08-17T03:01:07.6974510Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T03:01:07.6974960Z ```
2025-08-17T03:01:07.6975078Z 
2025-08-17T03:01:07.6975245Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T03:01:07.6975668Z Replace with real competitive logic later.
2025-08-17T03:01:07.6975919Z 
2025-08-17T03:01:07.6976043Z <a id="repricer.app.main"></a>
2025-08-17T03:01:07.6976251Z 
2025-08-17T03:01:07.6976350Z # repricer.app.main
2025-08-17T03:01:07.6976518Z 
2025-08-17T03:01:07.6976809Z <a id="repricer.app"></a>
2025-08-17T03:01:07.6977215Z 
2025-08-17T03:01:07.6977322Z # repricer.app
2025-08-17T03:01:07.6977480Z 
2025-08-17T03:01:07.6977617Z <a id="repricer.tests.test_imports"></a>
2025-08-17T03:01:07.6977872Z 
2025-08-17T03:01:07.6977998Z # repricer.tests.test\_imports
2025-08-17T03:01:07.6978207Z 
2025-08-17T03:01:07.6978339Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T03:01:07.6978590Z 
2025-08-17T03:01:07.6978709Z # repricer.tests.test\_smoke
2025-08-17T03:01:07.6978913Z 
2025-08-17T03:01:07.6979025Z <a id="repricer.tests"></a>
2025-08-17T03:01:07.6979226Z 
2025-08-17T03:01:07.6979329Z # repricer.tests
2025-08-17T03:01:07.6979486Z 
2025-08-17T03:01:07.6979589Z <a id="db"></a>
2025-08-17T03:01:07.6979751Z 
2025-08-17T03:01:07.6979843Z # db
2025-08-17T03:01:07.6979973Z 
2025-08-17T03:01:07.6980091Z <a id="db.utils.views"></a>
2025-08-17T03:01:07.6980288Z 
2025-08-17T03:01:07.6980387Z # db.utils.views
2025-08-17T03:01:07.6980549Z 
2025-08-17T03:01:07.6980679Z <a id="db.utils.views.replace_view"></a>
2025-08-17T03:01:07.6980944Z 
2025-08-17T03:01:07.6981053Z #### replace\_view
2025-08-17T03:01:07.6981215Z 
2025-08-17T03:01:07.6981303Z ```python
2025-08-17T03:01:07.6981610Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T03:01:07.6981973Z ```
2025-08-17T03:01:07.6982099Z 
2025-08-17T03:01:07.6982229Z Drop and recreate a SQL view atomically.
2025-08-17T03:01:07.6982473Z 
2025-08-17T03:01:07.6982577Z <a id="db.utils"></a>
2025-08-17T03:01:07.6982765Z 
2025-08-17T03:01:07.6982867Z # db.utils
2025-08-17T03:01:07.6983008Z 
2025-08-17T03:01:07.6983127Z <a id="price_importer"></a>
2025-08-17T03:01:07.6983336Z 
2025-08-17T03:01:07.6983440Z # price\_importer
2025-08-17T03:01:07.6983593Z 
2025-08-17T03:01:07.6983761Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T03:01:07.6984040Z 
2025-08-17T03:01:07.6984171Z # price\_importer.services\_common.dsn
2025-08-17T03:01:07.6984421Z 
2025-08-17T03:01:07.6984611Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T03:01:07.6984944Z 
2025-08-17T03:01:07.6985048Z #### build\_dsn
2025-08-17T03:01:07.6985194Z 
2025-08-17T03:01:07.6985286Z ```python
2025-08-17T03:01:07.6985545Z def build_dsn(sync: bool = True) -> str
2025-08-17T03:01:07.6985867Z ```
2025-08-17T03:01:07.6985988Z 
2025-08-17T03:01:07.6986091Z Return safe DSN.
2025-08-17T03:01:07.6986247Z 
2025-08-17T03:01:07.6986704Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T03:01:07.6987203Z 
2025-08-17T03:01:07.6987396Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T03:01:07.6987704Z 
2025-08-17T03:01:07.6987865Z # price\_importer.services\_common.models\_vendor
2025-08-17T03:01:07.6988153Z 
2025-08-17T03:01:07.6988319Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T03:01:07.6988601Z 
2025-08-17T03:01:07.6988733Z # price\_importer.services\_common.db\_url
2025-08-17T03:01:07.6988977Z 
2025-08-17T03:01:07.6989164Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T03:01:07.6989481Z 
2025-08-17T03:01:07.6989774Z #### build\_url
2025-08-17T03:01:07.6989917Z 
2025-08-17T03:01:07.6990014Z ```python
2025-08-17T03:01:07.6990262Z def build_url(async_: bool = True) -> str
2025-08-17T03:01:07.6990582Z ```
2025-08-17T03:01:07.6990697Z 
2025-08-17T03:01:07.6990835Z Return Postgres DSN from env or PG_* parts.
2025-08-17T03:01:07.6991092Z 
2025-08-17T03:01:07.6991242Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T03:01:07.6991511Z 
2025-08-17T03:01:07.6991646Z # price\_importer.services\_common.keepa
2025-08-17T03:01:07.6991893Z 
2025-08-17T03:01:07.6992034Z <a id="price_importer.services_common.llm"></a>
2025-08-17T03:01:07.6992298Z 
2025-08-17T03:01:07.6992431Z # price\_importer.services\_common.llm
2025-08-17T03:01:07.6992668Z 
2025-08-17T03:01:07.6992826Z <a id="price_importer.services_common.settings"></a>
2025-08-17T03:01:07.6993111Z 
2025-08-17T03:01:07.6993245Z # price\_importer.services\_common.settings
2025-08-17T03:01:07.6993497Z 
2025-08-17T03:01:07.6993647Z <a id="price_importer.services_common.db"></a>
2025-08-17T03:01:07.6994117Z 
2025-08-17T03:01:07.6994250Z # price\_importer.services\_common.db
2025-08-17T03:01:07.6994481Z 
2025-08-17T03:01:07.6994712Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T03:01:07.6995066Z 
2025-08-17T03:01:07.6995169Z #### build\_sqlalchemy\_url
2025-08-17T03:01:07.6995367Z 
2025-08-17T03:01:07.6995460Z ```python
2025-08-17T03:01:07.6995700Z def build_sqlalchemy_url() -> str
2025-08-17T03:01:07.6996008Z ```
2025-08-17T03:01:07.6996123Z 
2025-08-17T03:01:07.6996266Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T03:01:07.6996519Z 
2025-08-17T03:01:07.6996729Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T03:01:07.6997240Z 
2025-08-17T03:01:07.6997349Z #### build\_asyncpg\_dsn
2025-08-17T03:01:07.6997534Z 
2025-08-17T03:01:07.6997624Z ```python
2025-08-17T03:01:07.6997866Z def build_asyncpg_dsn() -> str
2025-08-17T03:01:07.6998154Z ```
2025-08-17T03:01:07.6998277Z 
2025-08-17T03:01:07.6998473Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T03:01:07.6998782Z 
2025-08-17T03:01:07.6998973Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T03:01:07.6999329Z 
2025-08-17T03:01:07.6999431Z #### refresh\_mvs
2025-08-17T03:01:07.6999626Z 
2025-08-17T03:01:07.6999742Z ```python
2025-08-17T03:01:07.7000103Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T03:01:07.7000475Z ```
2025-08-17T03:01:07.7000592Z 
2025-08-17T03:01:07.7000821Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T03:01:07.7001142Z 
2025-08-17T03:01:07.7001281Z <a id="price_importer.services_common"></a>
2025-08-17T03:01:07.7001534Z 
2025-08-17T03:01:07.7001658Z # price\_importer.services\_common
2025-08-17T03:01:07.7001881Z 
2025-08-17T03:01:07.7002028Z <a id="price_importer.services_common.base"></a>
2025-08-17T03:01:07.7002301Z 
2025-08-17T03:01:07.7002430Z # price\_importer.services\_common.base
2025-08-17T03:01:07.7002670Z 
2025-08-17T03:01:07.7002806Z <a id="price_importer.normaliser"></a>
2025-08-17T03:01:07.7003066Z 
2025-08-17T03:01:07.7003182Z # price\_importer.normaliser
2025-08-17T03:01:07.7003389Z 
2025-08-17T03:01:07.7003550Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T03:01:07.7003820Z 
2025-08-17T03:01:07.7003949Z # price\_importer.common.models\_vendor
2025-08-17T03:01:07.7004196Z 
2025-08-17T03:01:07.7004333Z <a id="price_importer.common.db_url"></a>
2025-08-17T03:01:07.7004587Z 
2025-08-17T03:01:07.7004720Z # price\_importer.common.db\_url
2025-08-17T03:01:07.7004928Z 
2025-08-17T03:01:07.7005080Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T03:01:07.7005354Z 
2025-08-17T03:01:07.7005445Z #### make\_dsn
2025-08-17T03:01:07.7005586Z 
2025-08-17T03:01:07.7005681Z ```python
2025-08-17T03:01:07.7005935Z def make_dsn(async_: bool = False) -> str
2025-08-17T03:01:07.7006254Z ```
2025-08-17T03:01:07.7006376Z 
2025-08-17T03:01:07.7006546Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T03:01:07.7006826Z 
2025-08-17T03:01:07.7007449Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T03:01:07.7007768Z 
2025-08-17T03:01:07.7007867Z #### build\_url
2025-08-17T03:01:07.7008019Z 
2025-08-17T03:01:07.7008106Z ```python
2025-08-17T03:01:07.7008348Z def build_url(async_: bool = False) -> str
2025-08-17T03:01:07.7008669Z ```
2025-08-17T03:01:07.7008783Z 
2025-08-17T03:01:07.7008968Z Return Postgres DSN built from environment variables.
2025-08-17T03:01:07.7009268Z 
2025-08-17T03:01:07.7009393Z <a id="price_importer.common"></a>
2025-08-17T03:01:07.7009612Z 
2025-08-17T03:01:07.7009731Z # price\_importer.common
2025-08-17T03:01:07.7009916Z 
2025-08-17T03:01:07.7010051Z <a id="price_importer.common.base"></a>
2025-08-17T03:01:07.7010299Z 
2025-08-17T03:01:07.7010421Z # price\_importer.common.base
2025-08-17T03:01:07.7010625Z 
2025-08-17T03:01:07.7010778Z <a id="price_importer.tests.conftest"></a>
2025-08-17T03:01:07.7011027Z 
2025-08-17T03:01:07.7011152Z # price\_importer.tests.conftest
2025-08-17T03:01:07.7011582Z 
2025-08-17T03:01:07.7011742Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T03:01:07.7012005Z 
2025-08-17T03:01:07.7012132Z # price\_importer.tests.test\_reader
2025-08-17T03:01:07.7012377Z 
2025-08-17T03:01:07.7012529Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T03:01:07.7012791Z 
2025-08-17T03:01:07.7012926Z # price\_importer.tests.test\_imports
2025-08-17T03:01:07.7013159Z 
2025-08-17T03:01:07.7013305Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T03:01:07.7013552Z 
2025-08-17T03:01:07.7013690Z # price\_importer.tests.test\_smoke
2025-08-17T03:01:07.7013920Z 
2025-08-17T03:01:07.7014074Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T03:01:07.7014350Z 
2025-08-17T03:01:07.7014487Z # price\_importer.tests.test\_normaliser
2025-08-17T03:01:07.7014727Z 
2025-08-17T03:01:07.7014856Z <a id="price_importer.tests"></a>
2025-08-17T03:01:07.7015066Z 
2025-08-17T03:01:07.7015175Z # price\_importer.tests
2025-08-17T03:01:07.7015358Z 
2025-08-17T03:01:07.7015493Z <a id="price_importer.reader"></a>
2025-08-17T03:01:07.7015718Z 
2025-08-17T03:01:07.7015831Z # price\_importer.reader
2025-08-17T03:01:07.7016025Z 
2025-08-17T03:01:07.7016164Z <a id="price_importer.reader.load_file"></a>
2025-08-17T03:01:07.7016410Z 
2025-08-17T03:01:07.7016512Z #### load\_file
2025-08-17T03:01:07.7016658Z 
2025-08-17T03:01:07.7016749Z ```python
2025-08-17T03:01:07.7017205Z def load_file(path: str | Path) -> Any
2025-08-17T03:01:07.7017525Z ```
2025-08-17T03:01:07.7017644Z 
2025-08-17T03:01:07.7017780Z Return DataFrame from CSV or Excel file.
2025-08-17T03:01:07.7018045Z 
2025-08-17T03:01:07.7018195Z Raises RuntimeError if pandas is unavailable.
2025-08-17T03:01:07.7018459Z 
2025-08-17T03:01:07.7018594Z <a id="price_importer.repository"></a>
2025-08-17T03:01:07.7018833Z 
2025-08-17T03:01:07.7018963Z # price\_importer.repository
2025-08-17T03:01:07.7019165Z 
2025-08-17T03:01:07.7019288Z <a id="price_importer.import"></a>
2025-08-17T03:01:07.7019505Z 
2025-08-17T03:01:07.7019633Z # price\_importer.import
2025-08-17T03:01:07.7019873Z 
2025-08-17T03:01:07.7019974Z <a id="fees_h10"></a>
2025-08-17T03:01:07.7020142Z 
2025-08-17T03:01:07.7020235Z # fees\_h10
2025-08-17T03:01:07.7020363Z 
2025-08-17T03:01:07.7020481Z <a id="fees_h10.worker"></a>
2025-08-17T03:01:07.7020677Z 
2025-08-17T03:01:07.7020774Z # fees\_h10.worker
2025-08-17T03:01:07.7020926Z 
2025-08-17T03:01:07.7021071Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T03:01:07.7021323Z 
2025-08-17T03:01:07.7021428Z #### list\_active\_asins
2025-08-17T03:01:07.7021614Z 
2025-08-17T03:01:07.7021710Z ```python
2025-08-17T03:01:07.7021955Z def list_active_asins() -> list[str]
2025-08-17T03:01:07.7022257Z ```
2025-08-17T03:01:07.7022373Z 
2025-08-17T03:01:07.7022539Z Return known ASINs or an empty list if unavailable.
2025-08-17T03:01:07.7022809Z 
2025-08-17T03:01:07.7022928Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T03:01:07.7023151Z 
2025-08-17T03:01:07.7023274Z # fees\_h10.tests.test\_smoke
2025-08-17T03:01:07.7023464Z 
2025-08-17T03:01:07.7023762Z <a id="fees_h10.tests"></a>
2025-08-17T03:01:07.7023961Z 
2025-08-17T03:01:07.7024055Z # fees\_h10.tests
2025-08-17T03:01:07.7024206Z 
2025-08-17T03:01:07.7024320Z <a id="fees_h10.client"></a>
2025-08-17T03:01:07.7024513Z 
2025-08-17T03:01:07.7024607Z # fees\_h10.client
2025-08-17T03:01:07.7024754Z 
2025-08-17T03:01:07.7024880Z <a id="fees_h10.repository"></a>
2025-08-17T03:01:07.7025083Z 
2025-08-17T03:01:07.7025190Z # fees\_h10.repository
2025-08-17T03:01:07.7025367Z 
2025-08-17T03:01:07.7025467Z <a id="emailer"></a>
2025-08-17T03:01:07.7025628Z 
2025-08-17T03:01:07.7025718Z # emailer
2025-08-17T03:01:07.7025858Z 
2025-08-17T03:01:07.7026008Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T03:01:07.7026273Z 
2025-08-17T03:01:07.7026406Z # emailer.tests.test\_import\_emailer
2025-08-17T03:01:07.7026635Z 
2025-08-17T03:01:07.7026759Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T03:01:07.7027161Z 
2025-08-17T03:01:07.7027283Z # emailer.tests.test\_smoke
2025-08-17T03:01:07.7027659Z 
2025-08-17T03:01:07.7027773Z <a id="emailer.tests"></a>
2025-08-17T03:01:07.7027969Z 
2025-08-17T03:01:07.7028065Z # emailer.tests
2025-08-17T03:01:07.7028220Z 
2025-08-17T03:01:07.7028346Z <a id="emailer.generate_body"></a>
2025-08-17T03:01:07.7028570Z 
2025-08-17T03:01:07.7028682Z # emailer.generate\_body
2025-08-17T03:01:07.7028875Z 
2025-08-17T03:01:07.7028980Z <a id="llm_server"></a>
2025-08-17T03:01:07.7029147Z 
2025-08-17T03:01:07.7029240Z # llm\_server
2025-08-17T03:01:07.7029386Z 
2025-08-17T03:01:07.7029496Z <a id="llm_server.app"></a>
2025-08-17T03:01:07.7029687Z 
2025-08-17T03:01:07.7029788Z # llm\_server.app
2025-08-17T03:01:07.7029938Z 
