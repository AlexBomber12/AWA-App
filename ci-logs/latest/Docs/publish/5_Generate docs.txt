2025-08-19T03:33:54.1529422Z ##[group]Run pydoc-markdown
2025-08-19T03:33:54.1529712Z [36;1mpydoc-markdown[0m
2025-08-19T03:33:54.1570263Z shell: /usr/bin/bash -e {0}
2025-08-19T03:33:54.1570490Z env:
2025-08-19T03:33:54.1570724Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:54.1571153Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T03:33:54.1571541Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:54.1571877Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:54.1572217Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T03:33:54.1572560Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T03:33:54.1572848Z ##[endgroup]
2025-08-19T03:33:54.5167180Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T03:33:54.5167859Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T03:33:54.5168317Z In "pydoc-markdown.yml"
2025-08-19T03:33:54.5168754Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T03:33:54.5169417Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T03:33:54.5170190Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T03:33:54.5170724Z 
2025-08-19T03:33:54.8280037Z <a id="__init__"></a>
2025-08-19T03:33:54.8280377Z 
2025-08-19T03:33:54.8280536Z # \_\_init\_\_
2025-08-19T03:33:54.8280731Z 
2025-08-19T03:33:54.8280863Z <a id="api"></a>
2025-08-19T03:33:54.8281059Z 
2025-08-19T03:33:54.8281169Z # api
2025-08-19T03:33:54.8281334Z 
2025-08-19T03:33:54.8281478Z <a id="api.errors"></a>
2025-08-19T03:33:54.8281712Z 
2025-08-19T03:33:54.8281829Z # api.errors
2025-08-19T03:33:54.8282017Z 
2025-08-19T03:33:54.8282165Z <a id="api.sentry_config"></a>
2025-08-19T03:33:54.8282429Z 
2025-08-19T03:33:54.8282576Z # api.sentry\_config
2025-08-19T03:33:54.8282790Z 
2025-08-19T03:33:54.8282956Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T03:33:54.8283284Z 
2025-08-19T03:33:54.8283792Z # api.tests.test\_sentry\_scrub
2025-08-19T03:33:54.8284476Z 
2025-08-19T03:33:54.8284653Z <a id="api.tests.test_errors_json"></a>
2025-08-19T03:33:54.8285036Z 
2025-08-19T03:33:54.8285189Z # api.tests.test\_errors\_json
2025-08-19T03:33:54.8285456Z 
2025-08-19T03:33:54.8285607Z <a id="api.tests.test_llm"></a>
2025-08-19T03:33:54.8285867Z 
2025-08-19T03:33:54.8285998Z # api.tests.test\_llm
2025-08-19T03:33:54.8286224Z 
2025-08-19T03:33:54.8286388Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T03:33:54.8286701Z 
2025-08-19T03:33:54.8286849Z # api.tests.test\_sentry\_event
2025-08-19T03:33:54.8287120Z 
2025-08-19T03:33:54.8287349Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T03:33:54.8287738Z 
2025-08-19T03:33:54.8288004Z ## DummyTransport Objects
2025-08-19T03:33:54.8288249Z 
2025-08-19T03:33:54.8288368Z ```python
2025-08-19T03:33:54.8288678Z class DummyTransport()
2025-08-19T03:33:54.8289005Z ```
2025-08-19T03:33:54.8289166Z 
2025-08-19T03:33:54.8289489Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T03:33:54.8290001Z 
2025-08-19T03:33:54.8290142Z #### capture\_envelope
2025-08-19T03:33:54.8290362Z 
2025-08-19T03:33:54.8290478Z ```python
2025-08-19T03:33:54.8290805Z def capture_envelope(envelope)
2025-08-19T03:33:54.8291172Z ```
2025-08-19T03:33:54.8291330Z 
2025-08-19T03:33:54.8291563Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T03:33:54.8291946Z 
2025-08-19T03:33:54.8292097Z <a id="api.tests.test_cors"></a>
2025-08-19T03:33:54.8292383Z 
2025-08-19T03:33:54.8292521Z # api.tests.test\_cors
2025-08-19T03:33:54.8292740Z 
2025-08-19T03:33:54.8292898Z <a id="api.tests.test_imports"></a>
2025-08-19T03:33:54.8293188Z 
2025-08-19T03:33:54.8293325Z # api.tests.test\_imports
2025-08-19T03:33:54.8293571Z 
2025-08-19T03:33:54.8293731Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T03:33:54.8294237Z 
2025-08-19T03:33:54.8294396Z # api.tests.test\_rate\_limit
2025-08-19T03:33:54.8294673Z 
2025-08-19T03:33:54.8294847Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T03:33:54.8295530Z 
2025-08-19T03:33:54.8295654Z #### app
2025-08-19T03:33:54.8295818Z 
2025-08-19T03:33:54.8295932Z noqa: E402
2025-08-19T03:33:54.8296093Z 
2025-08-19T03:33:54.8296261Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T03:33:54.8296567Z 
2025-08-19T03:33:54.8296712Z # api.tests.test\_entrypoint
2025-08-19T03:33:54.8296975Z 
2025-08-19T03:33:54.8297125Z <a id="api.tests.test_health"></a>
2025-08-19T03:33:54.8297412Z 
2025-08-19T03:33:54.8297557Z # api.tests.test\_health
2025-08-19T03:33:54.8297790Z 
2025-08-19T03:33:54.8297929Z <a id="api.logging_config"></a>
2025-08-19T03:33:54.8298188Z 
2025-08-19T03:33:54.8298326Z # api.logging\_config
2025-08-19T03:33:54.8298539Z 
2025-08-19T03:33:54.8298682Z <a id="api.migrations.env"></a>
2025-08-19T03:33:54.8298954Z 
2025-08-19T03:33:54.8299086Z # api.migrations.env
2025-08-19T03:33:54.8299303Z 
2025-08-19T03:33:54.8299526Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T03:33:54.8299911Z 
2025-08-19T03:33:54.8300121Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T03:33:54.8300470Z 
2025-08-19T03:33:54.8300676Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T03:33:54.8301024Z 
2025-08-19T03:33:54.8301196Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T03:33:54.8301526Z 
2025-08-19T03:33:54.8301808Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T03:33:54.8302256Z 
2025-08-19T03:33:54.8302515Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T03:33:54.8302925Z 
2025-08-19T03:33:54.8303149Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T03:33:54.8303525Z 
2025-08-19T03:33:54.8303725Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T03:33:54.8304244Z 
2025-08-19T03:33:54.8304490Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T03:33:54.8304897Z 
2025-08-19T03:33:54.8305087Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T03:33:54.8305431Z 
2025-08-19T03:33:54.8305662Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T03:33:54.8306286Z 
2025-08-19T03:33:54.8306487Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T03:33:54.8306854Z 
2025-08-19T03:33:54.8307069Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T03:33:54.8307440Z 
2025-08-19T03:33:54.8307636Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T03:33:54.8307991Z 
2025-08-19T03:33:54.8308220Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T03:33:54.8308606Z 
2025-08-19T03:33:54.8308810Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T03:33:54.8309159Z 
2025-08-19T03:33:54.8309415Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T03:33:54.8309834Z 
2025-08-19T03:33:54.8310054Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T03:33:54.8310426Z 
2025-08-19T03:33:54.8310654Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T03:33:54.8311042Z 
2025-08-19T03:33:54.8311245Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T03:33:54.8311610Z 
2025-08-19T03:33:54.8311869Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T03:33:54.8312306Z 
2025-08-19T03:33:54.8312559Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T03:33:54.8313074Z 
2025-08-19T03:33:54.8313275Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T03:33:54.8313648Z 
2025-08-19T03:33:54.8313873Z # api.migrations.versions.0001\_baseline
2025-08-19T03:33:54.8314373Z 
2025-08-19T03:33:54.8314544Z <a id="api.migrations.versions"></a>
2025-08-19T03:33:54.8314862Z 
2025-08-19T03:33:54.8315015Z # api.migrations.versions
2025-08-19T03:33:54.8315265Z 
2025-08-19T03:33:54.8315418Z <a id="api.migrations"></a>
2025-08-19T03:33:54.8315665Z 
2025-08-19T03:33:54.8315786Z # api.migrations
2025-08-19T03:33:54.8315986Z 
2025-08-19T03:33:54.8316105Z <a id="api.db"></a>
2025-08-19T03:33:54.8316367Z 
2025-08-19T03:33:54.8316483Z # api.db
2025-08-19T03:33:54.8316649Z 
2025-08-19T03:33:54.8316802Z <a id="api.routes.stats"></a>
2025-08-19T03:33:54.8317302Z 
2025-08-19T03:33:54.8317435Z # api.routes.stats
2025-08-19T03:33:54.8317638Z 
2025-08-19T03:33:54.8317793Z <a id="api.routes.stats.kpi"></a>
2025-08-19T03:33:54.8318078Z 
2025-08-19T03:33:54.8318195Z #### kpi
2025-08-19T03:33:54.8318352Z 
2025-08-19T03:33:54.8318464Z ```python
2025-08-19T03:33:54.8318772Z @router.get("/stats/kpi")
2025-08-19T03:33:54.8319200Z def kpi() -> List[Dict[str, int]]
2025-08-19T03:33:54.8319581Z ```
2025-08-19T03:33:54.8319732Z 
2025-08-19T03:33:54.8319879Z Return KPI metrics (mock).
2025-08-19T03:33:54.8320126Z 
2025-08-19T03:33:54.8320310Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T03:33:54.8320646Z 
2025-08-19T03:33:54.8320785Z #### roi\_by\_vendor
2025-08-19T03:33:54.8320998Z 
2025-08-19T03:33:54.8321112Z ```python
2025-08-19T03:33:54.8321426Z @router.get("/stats/roi_by_vendor")
2025-08-19T03:33:54.8321870Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T03:33:54.8322290Z ```
2025-08-19T03:33:54.8322447Z 
2025-08-19T03:33:54.8322606Z Return ROI percent by vendor.
2025-08-19T03:33:54.8322863Z 
2025-08-19T03:33:54.8323024Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T03:33:54.8323337Z 
2025-08-19T03:33:54.8323461Z #### roi\_trend
2025-08-19T03:33:54.8323658Z 
2025-08-19T03:33:54.8323814Z ```python
2025-08-19T03:33:54.8324304Z @router.get("/stats/roi_trend")
2025-08-19T03:33:54.8324733Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T03:33:54.8325163Z ```
2025-08-19T03:33:54.8325310Z 
2025-08-19T03:33:54.8325454Z Return 30-day ROI trend.
2025-08-19T03:33:54.8325681Z 
2025-08-19T03:33:54.8325821Z <a id="api.routes.roi"></a>
2025-08-19T03:33:54.8326071Z 
2025-08-19T03:33:54.8326200Z # api.routes.roi
2025-08-19T03:33:54.8326393Z 
2025-08-19T03:33:54.8326538Z <a id="api.routes.health"></a>
2025-08-19T03:33:54.8326819Z 
2025-08-19T03:33:54.8326944Z # api.routes.health
2025-08-19T03:33:54.8327144Z 
2025-08-19T03:33:54.8327327Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T03:33:54.8327851Z 
2025-08-19T03:33:54.8327977Z #### MAX\_SKEW
2025-08-19T03:33:54.8328173Z 
2025-08-19T03:33:54.8328284Z seconds
2025-08-19T03:33:54.8328441Z 
2025-08-19T03:33:54.8328612Z <a id="api.routes.health.health"></a>
2025-08-19T03:33:54.8328915Z 
2025-08-19T03:33:54.8329025Z #### health
2025-08-19T03:33:54.8329192Z 
2025-08-19T03:33:54.8329359Z ```python
2025-08-19T03:33:54.8329718Z @router.get("/health", include_in_schema=False)
2025-08-19T03:33:54.8330422Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T03:33:54.8331040Z ```
2025-08-19T03:33:54.8331198Z 
2025-08-19T03:33:54.8331407Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T03:33:54.8331774Z 
2025-08-19T03:33:54.8331936Z <a id="api.routes.repository"></a>
2025-08-19T03:33:54.8332258Z 
2025-08-19T03:33:54.8332398Z # api.routes.repository
2025-08-19T03:33:54.8332630Z 
2025-08-19T03:33:54.8332770Z <a id="api.routes"></a>
2025-08-19T03:33:54.8332984Z 
2025-08-19T03:33:54.8333099Z # api.routes
2025-08-19T03:33:54.8333292Z 
2025-08-19T03:33:54.8333439Z <a id="api.models.fee"></a>
2025-08-19T03:33:54.8333684Z 
2025-08-19T03:33:54.8333812Z # api.models.fee
2025-08-19T03:33:54.8334166Z 
2025-08-19T03:33:54.8334294Z <a id="api.models"></a>
2025-08-19T03:33:54.8334499Z 
2025-08-19T03:33:54.8334607Z # api.models
2025-08-19T03:33:54.8334768Z 
2025-08-19T03:33:54.8334903Z <a id="api.roi_repository"></a>
2025-08-19T03:33:54.8335154Z 
2025-08-19T03:33:54.8335281Z # api.roi\_repository
2025-08-19T03:33:54.8335494Z 
2025-08-19T03:33:54.8335619Z <a id="api.main"></a>
2025-08-19T03:33:54.8335837Z 
2025-08-19T03:33:54.8335950Z # api.main
2025-08-19T03:33:54.8336117Z 
2025-08-19T03:33:54.8336263Z <a id="api.main.ready"></a>
2025-08-19T03:33:54.8336511Z 
2025-08-19T03:33:54.8336624Z #### ready
2025-08-19T03:33:54.8336797Z 
2025-08-19T03:33:54.8336911Z ```python
2025-08-19T03:33:54.8337383Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T03:33:54.8338192Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T03:33:54.8339069Z                                                                       str]
2025-08-19T03:33:54.8339495Z ```
2025-08-19T03:33:54.8339645Z 
2025-08-19T03:33:54.8339825Z Return 200 only when migrations are at head.
2025-08-19T03:33:54.8340143Z 
2025-08-19T03:33:54.8340277Z <a id="api.config"></a>
2025-08-19T03:33:54.8340511Z 
2025-08-19T03:33:54.8340626Z # api.config
2025-08-19T03:33:54.8340799Z 
2025-08-19T03:33:54.8340912Z <a id="etl"></a>
2025-08-19T03:33:54.8341105Z 
2025-08-19T03:33:54.8341211Z # etl
2025-08-19T03:33:54.8341364Z 
2025-08-19T03:33:54.8341515Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T03:33:54.8341792Z 
2025-08-19T03:33:54.8341922Z # etl.fba\_fee\_ingestor
2025-08-19T03:33:54.8342181Z 
2025-08-19T03:33:54.8342334Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T03:33:54.8342601Z 
2025-08-19T03:33:54.8342735Z # etl.sp\_fees\_ingestor
2025-08-19T03:33:54.8342973Z 
2025-08-19T03:33:54.8343114Z <a id="etl.keepa_ingestor"></a>
2025-08-19T03:33:54.8343386Z 
2025-08-19T03:33:54.8343519Z # etl.keepa\_ingestor
2025-08-19T03:33:54.8343727Z 
2025-08-19T03:33:54.8343848Z <a id="etl.db"></a>
2025-08-19T03:33:54.8344221Z 
2025-08-19T03:33:54.8344345Z # etl.db
2025-08-19T03:33:54.8344507Z 
2025-08-19T03:33:54.8344656Z <a id="etl.dialects.schemas"></a>
2025-08-19T03:33:54.8344940Z 
2025-08-19T03:33:54.8345074Z # etl.dialects.schemas
2025-08-19T03:33:54.8345292Z 
2025-08-19T03:33:54.8345485Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T03:33:54.8345847Z 
2025-08-19T03:33:54.8346008Z # etl.dialects.amazon\_reimbursements
2025-08-19T03:33:54.8346313Z 
2025-08-19T03:33:54.8346499Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T03:33:54.8346823Z 
2025-08-19T03:33:54.8346979Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T03:33:54.8347285Z 
2025-08-19T03:33:54.8347451Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T03:33:54.8347767Z 
2025-08-19T03:33:54.8347910Z # etl.dialects.amazon\_returns
2025-08-19T03:33:54.8348389Z 
2025-08-19T03:33:54.8348580Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T03:33:54.8348911Z 
2025-08-19T03:33:54.8349075Z # etl.dialects.amazon\_fee\_preview
2025-08-19T03:33:54.8349370Z 
2025-08-19T03:33:54.8349571Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T03:33:54.8349941Z 
2025-08-19T03:33:54.8350109Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T03:33:54.8350419Z 
2025-08-19T03:33:54.8350594Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T03:33:54.8350926Z 
2025-08-19T03:33:54.8351081Z # etl.dialects.amazon\_settlements
2025-08-19T03:33:54.8351371Z 
2025-08-19T03:33:54.8351519Z <a id="etl.dialects"></a>
2025-08-19T03:33:54.8351757Z 
2025-08-19T03:33:54.8351872Z # etl.dialects
2025-08-19T03:33:54.8352061Z 
2025-08-19T03:33:54.8352181Z <a id="ingest"></a>
2025-08-19T03:33:54.8352381Z 
2025-08-19T03:33:54.8352487Z # ingest
2025-08-19T03:33:54.8352653Z 
2025-08-19T03:33:54.8352799Z <a id="ingest.maintenance"></a>
2025-08-19T03:33:54.8353062Z 
2025-08-19T03:33:54.8353207Z # ingest.maintenance
2025-08-19T03:33:54.8353428Z 
2025-08-19T03:33:54.8353568Z <a id="ingest.copy_loader"></a>
2025-08-19T03:33:54.8353827Z 
2025-08-19T03:33:54.8354133Z # ingest.copy\_loader
2025-08-19T03:33:54.8354353Z 
2025-08-19T03:33:54.8354542Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T03:33:54.8354896Z 
2025-08-19T03:33:54.8355025Z #### copy\_df\_via\_temp
2025-08-19T03:33:54.8355249Z 
2025-08-19T03:33:54.8355370Z ```python
2025-08-19T03:33:54.8355678Z def copy_df_via_temp(engine: Engine,
2025-08-19T03:33:54.8356118Z                      df: pd.DataFrame,
2025-08-19T03:33:54.8356534Z                      target_table: str,
2025-08-19T03:33:54.8356944Z                      *,
2025-08-19T03:33:54.8357315Z                      target_schema: Optional[str] = None,
2025-08-19T03:33:54.8357804Z                      columns: Sequence[str],
2025-08-19T03:33:54.8358314Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T03:33:54.8358839Z                      analyze_after: bool = False,
2025-08-19T03:33:54.8359592Z                      connection: Any | None = None) -> int
2025-08-19T03:33:54.8360040Z ```
2025-08-19T03:33:54.8360198Z 
2025-08-19T03:33:54.8360526Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T03:33:54.8360952Z 
2025-08-19T03:33:54.8361111Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T03:33:54.8361417Z 
2025-08-19T03:33:54.8361559Z # ingest.tests.test\_smoke
2025-08-19T03:33:54.8361801Z 
2025-08-19T03:33:54.8361943Z <a id="ingest.tests"></a>
2025-08-19T03:33:54.8362172Z 
2025-08-19T03:33:54.8362293Z # ingest.tests
2025-08-19T03:33:54.8362477Z 
2025-08-19T03:33:54.8362637Z <a id="ingest.upload_router"></a>
2025-08-19T03:33:54.8362919Z 
2025-08-19T03:33:54.8363052Z # ingest.upload\_router
2025-08-19T03:33:54.8363286Z 
2025-08-19T03:33:54.8363432Z <a id="ingest.email_watcher"></a>
2025-08-19T03:33:54.8363703Z 
2025-08-19T03:33:54.8363837Z # ingest.email\_watcher
2025-08-19T03:33:54.8364246Z 
2025-08-19T03:33:54.8364418Z <a id="ingest.email_watcher.main"></a>
2025-08-19T03:33:54.8364730Z 
2025-08-19T03:33:54.8364848Z #### main
2025-08-19T03:33:54.8365010Z 
2025-08-19T03:33:54.8365122Z ```python
2025-08-19T03:33:54.8365427Z def main() -> dict[str, str]
2025-08-19T03:33:54.8365775Z ```
2025-08-19T03:33:54.8365935Z 
2025-08-19T03:33:54.8366195Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T03:33:54.8366639Z 
2025-08-19T03:33:54.8366875Z Returns {"status": "success"} when processing completes.
2025-08-19T03:33:54.8367267Z 
2025-08-19T03:33:54.8367413Z <a id="ingest.tasks"></a>
2025-08-19T03:33:54.8367651Z 
2025-08-19T03:33:54.8367768Z # ingest.tasks
2025-08-19T03:33:54.8367961Z 
2025-08-19T03:33:54.8368133Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T03:33:54.8368456Z 
2025-08-19T03:33:54.8368588Z #### task\_import\_file
2025-08-19T03:33:54.8368819Z 
2025-08-19T03:33:54.8368936Z ```python
2025-08-19T03:33:54.8369330Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T03:33:54.8370083Z def task_import_file(self: Any,
2025-08-19T03:33:54.8370482Z                      uri: str,
2025-08-19T03:33:54.8370885Z                      report_type: Optional[str] = None,
2025-08-19T03:33:54.8371381Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T03:33:54.8371822Z ```
2025-08-19T03:33:54.8371984Z 
2025-08-19T03:33:54.8372224Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T03:33:54.8372611Z 
2025-08-19T03:33:54.8372767Z <a id="ingest.celery_app"></a>
2025-08-19T03:33:54.8373030Z 
2025-08-19T03:33:54.8373156Z # ingest.celery\_app
2025-08-19T03:33:54.8373364Z 
2025-08-19T03:33:54.8373522Z <a id="ingest.ingest_router"></a>
2025-08-19T03:33:54.8373795Z 
2025-08-19T03:33:54.8374099Z # ingest.ingest\_router
2025-08-19T03:33:54.8374339Z 
2025-08-19T03:33:54.8374479Z <a id="logistics_etl"></a>
2025-08-19T03:33:54.8374718Z 
2025-08-19T03:33:54.8374847Z # logistics\_etl
2025-08-19T03:33:54.8375041Z 
2025-08-19T03:33:54.8375182Z Daily logistics ETL job.
2025-08-19T03:33:54.8375424Z 
2025-08-19T03:33:54.8375581Z <a id="logistics_etl.__main__"></a>
2025-08-19T03:33:54.8375866Z 
2025-08-19T03:33:54.8376000Z # logistics\_etl.\_\_main\_\_
2025-08-19T03:33:54.8376261Z 
2025-08-19T03:33:54.8376400Z <a id="logistics_etl.dsn"></a>
2025-08-19T03:33:54.8376656Z 
2025-08-19T03:33:54.8376790Z # logistics\_etl.dsn
2025-08-19T03:33:54.8376999Z 
2025-08-19T03:33:54.8377210Z Local DSN builder to avoid cross-service dependency.
2025-08-19T03:33:54.8377585Z 
2025-08-19T03:33:54.8377767Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T03:33:54.8378078Z 
2025-08-19T03:33:54.8378196Z #### build\_dsn
2025-08-19T03:33:54.8378395Z 
2025-08-19T03:33:54.8378511Z ```python
2025-08-19T03:33:54.8378831Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:33:54.8379242Z ```
2025-08-19T03:33:54.8379391Z 
2025-08-19T03:33:54.8379655Z Return a Postgres DSN assembled from environment variables.
2025-08-19T03:33:54.8380076Z 
2025-08-19T03:33:54.8380352Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T03:33:54.8381299Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T03:33:54.8381941Z error when any required variable is missing.
2025-08-19T03:33:54.8382282Z 
2025-08-19T03:33:54.8382455Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T03:33:54.8382775Z 
2025-08-19T03:33:54.8382931Z # logistics\_etl.tests.conftest
2025-08-19T03:33:54.8383197Z 
2025-08-19T03:33:54.8383387Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T03:33:54.8383737Z 
2025-08-19T03:33:54.8383911Z # logistics\_etl.tests.test\_repository
2025-08-19T03:33:54.8384443Z 
2025-08-19T03:33:54.8384630Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T03:33:54.8385017Z 
2025-08-19T03:33:54.8385170Z # logistics\_etl.tests.test\_cron
2025-08-19T03:33:54.8385449Z 
2025-08-19T03:33:54.8385638Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T03:33:54.8385975Z 
2025-08-19T03:33:54.8386126Z # logistics\_etl.tests.test\_imports
2025-08-19T03:33:54.8386430Z 
2025-08-19T03:33:54.8386619Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T03:33:54.8386936Z 
2025-08-19T03:33:54.8387084Z # logistics\_etl.tests.test\_smoke
2025-08-19T03:33:54.8387375Z 
2025-08-19T03:33:54.8387547Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T03:33:54.8387868Z 
2025-08-19T03:33:54.8388027Z # logistics\_etl.tests.test\_client
2025-08-19T03:33:54.8388315Z 
2025-08-19T03:33:54.8388463Z <a id="logistics_etl.tests"></a>
2025-08-19T03:33:54.8388736Z 
2025-08-19T03:33:54.8388879Z # logistics\_etl.tests
2025-08-19T03:33:54.8389100Z 
2025-08-19T03:33:54.8389243Z <a id="logistics_etl.flow"></a>
2025-08-19T03:33:54.8389513Z 
2025-08-19T03:33:54.8389644Z # logistics\_etl.flow
2025-08-19T03:33:54.8389863Z 
2025-08-19T03:33:54.8390022Z <a id="logistics_etl.client"></a>
2025-08-19T03:33:54.8390304Z 
2025-08-19T03:33:54.8390443Z # logistics\_etl.client
2025-08-19T03:33:54.8390668Z 
2025-08-19T03:33:54.8390819Z <a id="logistics_etl.cron"></a>
2025-08-19T03:33:54.8391074Z 
2025-08-19T03:33:54.8391421Z # logistics\_etl.cron
2025-08-19T03:33:54.8391659Z 
2025-08-19T03:33:54.8391804Z <a id="logistics_etl.db"></a>
2025-08-19T03:33:54.8392066Z 
2025-08-19T03:33:54.8419188Z # logistics\_etl.db
2025-08-19T03:33:54.8419436Z 
2025-08-19T03:33:54.8419587Z <a id="logistics_etl.repository"></a>
2025-08-19T03:33:54.8419864Z 
2025-08-19T03:33:54.8419990Z # logistics\_etl.repository
2025-08-19T03:33:54.8420207Z 
2025-08-19T03:33:54.8420338Z <a id="alert_bot"></a>
2025-08-19T03:33:54.8420538Z 
2025-08-19T03:33:54.8420639Z # alert\_bot
2025-08-19T03:33:54.8420784Z 
2025-08-19T03:33:54.8420920Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T03:33:54.8421189Z 
2025-08-19T03:33:54.8421315Z # alert\_bot.tests.test\_smoke
2025-08-19T03:33:54.8421543Z 
2025-08-19T03:33:54.8421660Z <a id="alert_bot.tests"></a>
2025-08-19T03:33:54.8421868Z 
2025-08-19T03:33:54.8421967Z # alert\_bot.tests
2025-08-19T03:33:54.8422136Z 
2025-08-19T03:33:54.8422257Z <a id="alert_bot.alert_bot"></a>
2025-08-19T03:33:54.8422491Z 
2025-08-19T03:33:54.8422612Z # alert\_bot.alert\_bot
2025-08-19T03:33:54.8422789Z 
2025-08-19T03:33:54.8422902Z <a id="alert_bot.rules"></a>
2025-08-19T03:33:54.8423111Z 
2025-08-19T03:33:54.8423210Z # alert\_bot.rules
2025-08-19T03:33:54.8423367Z 
2025-08-19T03:33:54.8423471Z <a id="common"></a>
2025-08-19T03:33:54.8423643Z 
2025-08-19T03:33:54.8423736Z # common
2025-08-19T03:33:54.8423870Z 
2025-08-19T03:33:54.8424168Z <a id="common.dsn"></a>
2025-08-19T03:33:54.8424362Z 
2025-08-19T03:33:54.8424458Z # common.dsn
2025-08-19T03:33:54.8424602Z 
2025-08-19T03:33:54.8424736Z <a id="common.dsn.build_dsn"></a>
2025-08-19T03:33:54.8424956Z 
2025-08-19T03:33:54.8425049Z #### build\_dsn
2025-08-19T03:33:54.8425204Z 
2025-08-19T03:33:54.8425300Z ```python
2025-08-19T03:33:54.8425565Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:33:54.8425927Z ```
2025-08-19T03:33:54.8426061Z 
2025-08-19T03:33:54.8426258Z Return a Postgres DSN, validating required variables.
2025-08-19T03:33:54.8426583Z 
2025-08-19T03:33:54.8426896Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T03:33:54.8427819Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T03:33:54.8428471Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T03:33:54.8428955Z missing.
2025-08-19T03:33:54.8429092Z 
2025-08-19T03:33:54.8429217Z <a id="common.models_vendor"></a>
2025-08-19T03:33:54.8429461Z 
2025-08-19T03:33:54.8429568Z # common.models\_vendor
2025-08-19T03:33:54.8429748Z 
2025-08-19T03:33:54.8429888Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T03:33:54.8430144Z 
2025-08-19T03:33:54.8430239Z ## Vendor Objects
2025-08-19T03:33:54.8430405Z 
2025-08-19T03:33:54.8430499Z ```python
2025-08-19T03:33:54.8430724Z class Vendor(Base)
2025-08-19T03:33:54.8430977Z ```
2025-08-19T03:33:54.8431182Z 
2025-08-19T03:33:54.8431305Z Vendor of inventory items.
2025-08-19T03:33:54.8431509Z 
2025-08-19T03:33:54.8431661Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T03:33:54.8431945Z 
2025-08-19T03:33:54.8432059Z ## VendorPrice Objects
2025-08-19T03:33:54.8432235Z 
2025-08-19T03:33:54.8432326Z ```python
2025-08-19T03:33:54.8432577Z class VendorPrice(Base)
2025-08-19T03:33:54.8432855Z ```
2025-08-19T03:33:54.8432985Z 
2025-08-19T03:33:54.8433148Z Association table linking vendors to pricing.
2025-08-19T03:33:54.8433433Z 
2025-08-19T03:33:54.8433558Z <a id="common.db_url"></a>
2025-08-19T03:33:54.8433754Z 
2025-08-19T03:33:54.8433850Z # common.db\_url
2025-08-19T03:33:54.8434163Z 
2025-08-19T03:33:54.8434301Z <a id="common.db_url.build_url"></a>
2025-08-19T03:33:54.8434545Z 
2025-08-19T03:33:54.8434644Z #### build\_url
2025-08-19T03:33:54.8434796Z 
2025-08-19T03:33:54.8434898Z ```python
2025-08-19T03:33:54.8435163Z def build_url(async_: bool = True) -> str
2025-08-19T03:33:54.8435521Z ```
2025-08-19T03:33:54.8435640Z 
2025-08-19T03:33:54.8435792Z Return Postgres DSN from env or PG_* parts.
2025-08-19T03:33:54.8436059Z 
2025-08-19T03:33:54.8436172Z <a id="common.keepa"></a>
2025-08-19T03:33:54.8436608Z 
2025-08-19T03:33:54.8436712Z # common.keepa
2025-08-19T03:33:54.8436869Z 
2025-08-19T03:33:54.8436982Z <a id="common.llm"></a>
2025-08-19T03:33:54.8437173Z 
2025-08-19T03:33:54.8437268Z # common.llm
2025-08-19T03:33:54.8437413Z 
2025-08-19T03:33:54.8437533Z <a id="common.settings"></a>
2025-08-19T03:33:54.8437744Z 
2025-08-19T03:33:54.8437845Z # common.settings
2025-08-19T03:33:54.8438017Z 
2025-08-19T03:33:54.8438149Z <a id="common.db"></a>
2025-08-19T03:33:54.8438343Z 
2025-08-19T03:33:54.8438436Z # common.db
2025-08-19T03:33:54.8438578Z 
2025-08-19T03:33:54.8438719Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T03:33:54.8438980Z 
2025-08-19T03:33:54.8439118Z #### build\_sqlalchemy\_url
2025-08-19T03:33:54.8439325Z 
2025-08-19T03:33:54.8439419Z ```python
2025-08-19T03:33:54.8439687Z def build_sqlalchemy_url() -> str
2025-08-19T03:33:54.8440066Z ```
2025-08-19T03:33:54.8440194Z 
2025-08-19T03:33:54.8440345Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T03:33:54.8440634Z 
2025-08-19T03:33:54.8440785Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T03:33:54.8441048Z 
2025-08-19T03:33:54.8441161Z #### build\_asyncpg\_dsn
2025-08-19T03:33:54.8441357Z 
2025-08-19T03:33:54.8441452Z ```python
2025-08-19T03:33:54.8441724Z def build_asyncpg_dsn() -> str
2025-08-19T03:33:54.8442019Z ```
2025-08-19T03:33:54.8442144Z 
2025-08-19T03:33:54.8442340Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T03:33:54.8442665Z 
2025-08-19T03:33:54.8442792Z <a id="common.db.refresh_mvs"></a>
2025-08-19T03:33:54.8443033Z 
2025-08-19T03:33:54.8443131Z #### refresh\_mvs
2025-08-19T03:33:54.8443293Z 
2025-08-19T03:33:54.8443384Z ```python
2025-08-19T03:33:54.8443687Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T03:33:54.8444246Z ```
2025-08-19T03:33:54.8444375Z 
2025-08-19T03:33:54.8444585Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T03:33:54.8444924Z 
2025-08-19T03:33:54.8445049Z <a id="common.config"></a>
2025-08-19T03:33:54.8445265Z 
2025-08-19T03:33:54.8445544Z # common.config
2025-08-19T03:33:54.8445714Z 
2025-08-19T03:33:54.8445827Z <a id="common.base"></a>
2025-08-19T03:33:54.8446011Z 
2025-08-19T03:33:54.8446114Z # common.base
2025-08-19T03:33:54.8446263Z 
2025-08-19T03:33:54.8446379Z <a id="common.base.Base"></a>
2025-08-19T03:33:54.8446586Z 
2025-08-19T03:33:54.8446689Z ## Base Objects
2025-08-19T03:33:54.8446840Z 
2025-08-19T03:33:54.8446938Z ```python
2025-08-19T03:33:54.8447189Z class Base(DeclarativeBase)
2025-08-19T03:33:54.8447472Z ```
2025-08-19T03:33:54.8447599Z 
2025-08-19T03:33:54.8447722Z Base class for SQLAlchemy models.
2025-08-19T03:33:54.8447949Z 
2025-08-19T03:33:54.8448064Z <a id="repricer"></a>
2025-08-19T03:33:54.8448239Z 
2025-08-19T03:33:54.8448334Z # repricer
2025-08-19T03:33:54.8448476Z 
2025-08-19T03:33:54.8448614Z <a id="repricer.app.schemas"></a>
2025-08-19T03:33:54.8448847Z 
2025-08-19T03:33:54.8448964Z # repricer.app.schemas
2025-08-19T03:33:54.8449160Z 
2025-08-19T03:33:54.8449287Z <a id="repricer.app.deps"></a>
2025-08-19T03:33:54.8449512Z 
2025-08-19T03:33:54.8449618Z # repricer.app.deps
2025-08-19T03:33:54.8449793Z 
2025-08-19T03:33:54.8449967Z Placeholder module for Keepa / SP-API clients.
2025-08-19T03:33:54.8450257Z 
2025-08-19T03:33:54.8450389Z <a id="repricer.app.logic"></a>
2025-08-19T03:33:54.8450616Z 
2025-08-19T03:33:54.8450728Z # repricer.app.logic
2025-08-19T03:33:54.8450912Z 
2025-08-19T03:33:54.8451065Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T03:33:54.8451343Z 
2025-08-19T03:33:54.8451442Z #### MIN\_MARGIN
2025-08-19T03:33:54.8451599Z 
2025-08-19T03:33:54.8451690Z 15 % ROI
2025-08-19T03:33:54.8451820Z 
2025-08-19T03:33:54.8451976Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T03:33:54.8452253Z 
2025-08-19T03:33:54.8452356Z #### compute\_price
2025-08-19T03:33:54.8452517Z 
2025-08-19T03:33:54.8452612Z ```python
2025-08-19T03:33:54.8452986Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T03:33:54.8453453Z ```
2025-08-19T03:33:54.8453735Z 
2025-08-19T03:33:54.8453906Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T03:33:54.8454516Z Replace with real competitive logic later.
2025-08-19T03:33:54.8454806Z 
2025-08-19T03:33:54.8454940Z <a id="repricer.app.main"></a>
2025-08-19T03:33:54.8455157Z 
2025-08-19T03:33:54.8455264Z # repricer.app.main
2025-08-19T03:33:54.8455433Z 
2025-08-19T03:33:54.8455555Z <a id="repricer.app"></a>
2025-08-19T03:33:54.8455744Z 
2025-08-19T03:33:54.8455844Z # repricer.app
2025-08-19T03:33:54.8456000Z 
2025-08-19T03:33:54.8456139Z <a id="repricer.tests.test_imports"></a>
2025-08-19T03:33:54.8456407Z 
2025-08-19T03:33:54.8456539Z # repricer.tests.test\_imports
2025-08-19T03:33:54.8456760Z 
2025-08-19T03:33:54.8456900Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T03:33:54.8457160Z 
2025-08-19T03:33:54.8457286Z # repricer.tests.test\_smoke
2025-08-19T03:33:54.8457502Z 
2025-08-19T03:33:54.8457620Z <a id="repricer.tests"></a>
2025-08-19T03:33:54.8457830Z 
2025-08-19T03:33:54.8457939Z # repricer.tests
2025-08-19T03:33:54.8458102Z 
2025-08-19T03:33:54.8458205Z <a id="db"></a>
2025-08-19T03:33:54.8458357Z 
2025-08-19T03:33:54.8458448Z # db
2025-08-19T03:33:54.8458574Z 
2025-08-19T03:33:54.8458690Z <a id="db.utils.views"></a>
2025-08-19T03:33:54.8458882Z 
2025-08-19T03:33:54.8458978Z # db.utils.views
2025-08-19T03:33:54.8459138Z 
2025-08-19T03:33:54.8459279Z <a id="db.utils.views.replace_view"></a>
2025-08-19T03:33:54.8459538Z 
2025-08-19T03:33:54.8459645Z #### replace\_view
2025-08-19T03:33:54.8459804Z 
2025-08-19T03:33:54.8459895Z ```python
2025-08-19T03:33:54.8460193Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T03:33:54.8460563Z ```
2025-08-19T03:33:54.8460691Z 
2025-08-19T03:33:54.8460832Z Drop and recreate a SQL view atomically.
2025-08-19T03:33:54.8461091Z 
2025-08-19T03:33:54.8461192Z <a id="db.utils"></a>
2025-08-19T03:33:54.8461362Z 
2025-08-19T03:33:54.8461454Z # db.utils
2025-08-19T03:33:54.8461597Z 
2025-08-19T03:33:54.8461720Z <a id="price_importer"></a>
2025-08-19T03:33:54.8461922Z 
2025-08-19T03:33:54.8462190Z # price\_importer
2025-08-19T03:33:54.8462345Z 
2025-08-19T03:33:54.8462505Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T03:33:54.8462786Z 
2025-08-19T03:33:54.8462926Z # price\_importer.services\_common.dsn
2025-08-19T03:33:54.8463182Z 
2025-08-19T03:33:54.8463367Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T03:33:54.8463697Z 
2025-08-19T03:33:54.8463800Z #### build\_dsn
2025-08-19T03:33:54.8464104Z 
2025-08-19T03:33:54.8464206Z ```python
2025-08-19T03:33:54.8464474Z def build_dsn(sync: bool = True) -> str
2025-08-19T03:33:54.8464818Z ```
2025-08-19T03:33:54.8464951Z 
2025-08-19T03:33:54.8465052Z Return safe DSN.
2025-08-19T03:33:54.8465216Z 
2025-08-19T03:33:54.8465679Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T03:33:54.8466021Z 
2025-08-19T03:33:54.8466228Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T03:33:54.8466584Z 
2025-08-19T03:33:54.8466770Z # price\_importer.services\_common.models\_vendor
2025-08-19T03:33:54.8467109Z 
2025-08-19T03:33:54.8467287Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T03:33:54.8467622Z 
2025-08-19T03:33:54.8467777Z # price\_importer.services\_common.db\_url
2025-08-19T03:33:54.8468070Z 
2025-08-19T03:33:54.8468294Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T03:33:54.8468666Z 
2025-08-19T03:33:54.8468771Z #### build\_url
2025-08-19T03:33:54.8468928Z 
2025-08-19T03:33:54.8469035Z ```python
2025-08-19T03:33:54.8469313Z def build_url(async_: bool = True) -> str
2025-08-19T03:33:54.8469674Z ```
2025-08-19T03:33:54.8469804Z 
2025-08-19T03:33:54.8469960Z Return Postgres DSN from env or PG_* parts.
2025-08-19T03:33:54.8470280Z 
2025-08-19T03:33:54.8470448Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T03:33:54.8470746Z 
2025-08-19T03:33:54.8470898Z # price\_importer.services\_common.keepa
2025-08-19T03:33:54.8471179Z 
2025-08-19T03:33:54.8471341Z <a id="price_importer.services_common.llm"></a>
2025-08-19T03:33:54.8471818Z 
2025-08-19T03:33:54.8471969Z # price\_importer.services\_common.llm
2025-08-19T03:33:54.8472229Z 
2025-08-19T03:33:54.8472413Z <a id="price_importer.services_common.settings"></a>
2025-08-19T03:33:54.8472735Z 
2025-08-19T03:33:54.8472893Z # price\_importer.services\_common.settings
2025-08-19T03:33:54.8473173Z 
2025-08-19T03:33:54.8473336Z <a id="price_importer.services_common.db"></a>
2025-08-19T03:33:54.8473627Z 
2025-08-19T03:33:54.8473775Z # price\_importer.services\_common.db
2025-08-19T03:33:54.8474190Z 
2025-08-19T03:33:54.8474442Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T03:33:54.8474830Z 
2025-08-19T03:33:54.8474955Z #### build\_sqlalchemy\_url
2025-08-19T03:33:54.8475175Z 
2025-08-19T03:33:54.8475275Z ```python
2025-08-19T03:33:54.8475547Z def build_sqlalchemy_url() -> str
2025-08-19T03:33:54.8475892Z ```
2025-08-19T03:33:54.8476024Z 
2025-08-19T03:33:54.8476186Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T03:33:54.8476474Z 
2025-08-19T03:33:54.8476719Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T03:33:54.8477105Z 
2025-08-19T03:33:54.8477225Z #### build\_asyncpg\_dsn
2025-08-19T03:33:54.8477420Z 
2025-08-19T03:33:54.8477517Z ```python
2025-08-19T03:33:54.8477780Z def build_asyncpg_dsn() -> str
2025-08-19T03:33:54.8478089Z ```
2025-08-19T03:33:54.8478224Z 
2025-08-19T03:33:54.8478421Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T03:33:54.8478759Z 
2025-08-19T03:33:54.8478970Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T03:33:54.8479308Z 
2025-08-19T03:33:54.8479416Z #### refresh\_mvs
2025-08-19T03:33:54.8479589Z 
2025-08-19T03:33:54.8479689Z ```python
2025-08-19T03:33:54.8479997Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T03:33:54.8480403Z ```
2025-08-19T03:33:54.8480539Z 
2025-08-19T03:33:54.8480769Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T03:33:54.8481136Z 
2025-08-19T03:33:54.8481297Z <a id="price_importer.services_common"></a>
2025-08-19T03:33:54.8481762Z 
2025-08-19T03:33:54.8481911Z # price\_importer.services\_common
2025-08-19T03:33:54.8482157Z 
2025-08-19T03:33:54.8482330Z <a id="price_importer.services_common.base"></a>
2025-08-19T03:33:54.8482638Z 
2025-08-19T03:33:54.8482782Z # price\_importer.services\_common.base
2025-08-19T03:33:54.8483053Z 
2025-08-19T03:33:54.8483212Z <a id="price_importer.normaliser"></a>
2025-08-19T03:33:54.8483491Z 
2025-08-19T03:33:54.8483629Z # price\_importer.normaliser
2025-08-19T03:33:54.8483856Z 
2025-08-19T03:33:54.8484213Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T03:33:54.8484525Z 
2025-08-19T03:33:54.8484673Z # price\_importer.common.models\_vendor
2025-08-19T03:33:54.8485002Z 
2025-08-19T03:33:54.8485155Z <a id="price_importer.common.db_url"></a>
2025-08-19T03:33:54.8485439Z 
2025-08-19T03:33:54.8485580Z # price\_importer.common.db\_url
2025-08-19T03:33:54.8485826Z 
2025-08-19T03:33:54.8485999Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T03:33:54.8486329Z 
2025-08-19T03:33:54.8486431Z #### make\_dsn
2025-08-19T03:33:54.8486586Z 
2025-08-19T03:33:54.8486682Z ```python
2025-08-19T03:33:54.8486971Z def make_dsn(async_: bool = False) -> str
2025-08-19T03:33:54.8487338Z ```
2025-08-19T03:33:54.8487478Z 
2025-08-19T03:33:54.8487671Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T03:33:54.8488006Z 
2025-08-19T03:33:54.8488187Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T03:33:54.8488502Z 
2025-08-19T03:33:54.8488604Z #### build\_url
2025-08-19T03:33:54.8488771Z 
2025-08-19T03:33:54.8488871Z ```python
2025-08-19T03:33:54.8489156Z def build_url(async_: bool = False) -> str
2025-08-19T03:33:54.8489534Z ```
2025-08-19T03:33:54.8489667Z 
2025-08-19T03:33:54.8489877Z Return Postgres DSN built from environment variables.
2025-08-19T03:33:54.8490231Z 
2025-08-19T03:33:54.8490373Z <a id="price_importer.common"></a>
2025-08-19T03:33:54.8490636Z 
2025-08-19T03:33:54.8490773Z # price\_importer.common
2025-08-19T03:33:54.8491140Z 
2025-08-19T03:33:54.8491287Z <a id="price_importer.common.base"></a>
2025-08-19T03:33:54.8491561Z 
2025-08-19T03:33:54.8491693Z # price\_importer.common.base
2025-08-19T03:33:54.8491937Z 
2025-08-19T03:33:54.8492099Z <a id="price_importer.tests.conftest"></a>
2025-08-19T03:33:54.8492409Z 
2025-08-19T03:33:54.8492551Z # price\_importer.tests.conftest
2025-08-19T03:33:54.8492812Z 
2025-08-19T03:33:54.8492979Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T03:33:54.8493266Z 
2025-08-19T03:33:54.8493405Z # price\_importer.tests.test\_reader
2025-08-19T03:33:54.8493669Z 
2025-08-19T03:33:54.8493829Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T03:33:54.8494268Z 
2025-08-19T03:33:54.8494421Z # price\_importer.tests.test\_imports
2025-08-19T03:33:54.8494674Z 
2025-08-19T03:33:54.8494829Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T03:33:54.8495107Z 
2025-08-19T03:33:54.8495251Z # price\_importer.tests.test\_smoke
2025-08-19T03:33:54.8495503Z 
2025-08-19T03:33:54.8495681Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T03:33:54.8495991Z 
2025-08-19T03:33:54.8496136Z # price\_importer.tests.test\_normaliser
2025-08-19T03:33:54.8496404Z 
2025-08-19T03:33:54.8496542Z <a id="price_importer.tests"></a>
2025-08-19T03:33:54.8496775Z 
2025-08-19T03:33:54.8496895Z # price\_importer.tests
2025-08-19T03:33:54.8497085Z 
2025-08-19T03:33:54.8497222Z <a id="price_importer.reader"></a>
2025-08-19T03:33:54.8497465Z 
2025-08-19T03:33:54.8497576Z # price\_importer.reader
2025-08-19T03:33:54.8497766Z 
2025-08-19T03:33:54.8497916Z <a id="price_importer.repository"></a>
2025-08-19T03:33:54.8498189Z 
2025-08-19T03:33:54.8498322Z # price\_importer.repository
2025-08-19T03:33:54.8498560Z 
2025-08-19T03:33:54.8498697Z <a id="price_importer.import"></a>
2025-08-19T03:33:54.8498948Z 
2025-08-19T03:33:54.8499082Z # price\_importer.import
2025-08-19T03:33:54.8499287Z 
2025-08-19T03:33:54.8499400Z <a id="fees_h10"></a>
2025-08-19T03:33:54.8499587Z 
2025-08-19T03:33:54.8499694Z # fees\_h10
2025-08-19T03:33:54.8500017Z 
2025-08-19T03:33:54.8500136Z <a id="fees_h10.worker"></a>
2025-08-19T03:33:54.8500362Z 
2025-08-19T03:33:54.8500470Z # fees\_h10.worker
2025-08-19T03:33:54.8500639Z 
2025-08-19T03:33:54.8500803Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T03:33:54.8501090Z 
2025-08-19T03:33:54.8501205Z #### list\_active\_asins
2025-08-19T03:33:54.8501410Z 
2025-08-19T03:33:54.8501512Z ```python
2025-08-19T03:33:54.8501776Z def list_active_asins() -> list[str]
2025-08-19T03:33:54.8502124Z ```
2025-08-19T03:33:54.8502253Z 
2025-08-19T03:33:54.8502427Z Return known ASINs or an empty list if unavailable.
2025-08-19T03:33:54.8502739Z 
2025-08-19T03:33:54.8502861Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T03:33:54.8503094Z 
2025-08-19T03:33:54.8503215Z # fees\_h10.tests.test\_smoke
2025-08-19T03:33:54.8503407Z 
2025-08-19T03:33:54.8503511Z <a id="fees_h10.tests"></a>
2025-08-19T03:33:54.8503696Z 
2025-08-19T03:33:54.8503789Z # fees\_h10.tests
2025-08-19T03:33:54.8504082Z 
2025-08-19T03:33:54.8504197Z <a id="fees_h10.client"></a>
2025-08-19T03:33:54.8504389Z 
2025-08-19T03:33:54.8504479Z # fees\_h10.client
2025-08-19T03:33:54.8504621Z 
2025-08-19T03:33:54.8504742Z <a id="fees_h10.repository"></a>
2025-08-19T03:33:54.8504943Z 
2025-08-19T03:33:54.8505041Z # fees\_h10.repository
2025-08-19T03:33:54.8505209Z 
2025-08-19T03:33:54.8505305Z <a id="emailer"></a>
2025-08-19T03:33:54.8505460Z 
2025-08-19T03:33:54.8505547Z # emailer
2025-08-19T03:33:54.8533506Z 
2025-08-19T03:33:54.8533737Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T03:33:54.8534280Z 
2025-08-19T03:33:54.8534447Z # emailer.tests.test\_import\_emailer
2025-08-19T03:33:54.8534748Z 
2025-08-19T03:33:54.8534913Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T03:33:54.8535196Z 
2025-08-19T03:33:54.8535336Z # emailer.tests.test\_smoke
2025-08-19T03:33:54.8535593Z 
2025-08-19T03:33:54.8535725Z <a id="emailer.tests"></a>
2025-08-19T03:33:54.8535951Z 
2025-08-19T03:33:54.8536065Z # emailer.tests
2025-08-19T03:33:54.8536472Z 
2025-08-19T03:33:54.8536619Z <a id="emailer.generate_body"></a>
2025-08-19T03:33:54.8536884Z 
2025-08-19T03:33:54.8537022Z # emailer.generate\_body
2025-08-19T03:33:54.8537244Z 
2025-08-19T03:33:54.8537367Z <a id="llm_server"></a>
2025-08-19T03:33:54.8537573Z 
2025-08-19T03:33:54.8537692Z # llm\_server
2025-08-19T03:33:54.8537858Z 
2025-08-19T03:33:54.8537986Z <a id="llm_server.app"></a>
2025-08-19T03:33:54.8538221Z 
2025-08-19T03:33:54.8538335Z # llm\_server.app
2025-08-19T03:33:54.8538514Z 
