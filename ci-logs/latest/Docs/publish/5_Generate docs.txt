2025-08-20T00:57:33.4648884Z ##[group]Run pydoc-markdown
2025-08-20T00:57:33.4649189Z [36;1mpydoc-markdown[0m
2025-08-20T00:57:33.4689695Z shell: /usr/bin/bash -e {0}
2025-08-20T00:57:33.4689916Z env:
2025-08-20T00:57:33.4690149Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:57:33.4690564Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T00:57:33.4690965Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:57:33.4691299Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:57:33.4691637Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T00:57:33.4691973Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T00:57:33.4692261Z ##[endgroup]
2025-08-20T00:57:33.7888683Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T00:57:33.7889357Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T00:57:33.7889664Z In "pydoc-markdown.yml"
2025-08-20T00:57:33.7889930Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T00:57:33.7890309Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T00:57:33.7890727Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T00:57:33.7891008Z 
2025-08-20T00:57:34.1398693Z <a id="__init__"></a>
2025-08-20T00:57:34.1399078Z 
2025-08-20T00:57:34.1399254Z # \_\_init\_\_
2025-08-20T00:57:34.1399500Z 
2025-08-20T00:57:34.1399660Z <a id="api"></a>
2025-08-20T00:57:34.1399918Z 
2025-08-20T00:57:34.1400055Z # api
2025-08-20T00:57:34.1400267Z 
2025-08-20T00:57:34.1400450Z <a id="api.errors"></a>
2025-08-20T00:57:34.1400727Z 
2025-08-20T00:57:34.1400878Z # api.errors
2025-08-20T00:57:34.1401097Z 
2025-08-20T00:57:34.1401305Z <a id="api.sentry_config"></a>
2025-08-20T00:57:34.1401647Z 
2025-08-20T00:57:34.1401833Z # api.sentry\_config
2025-08-20T00:57:34.1402117Z 
2025-08-20T00:57:34.1402356Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T00:57:34.1402799Z 
2025-08-20T00:57:34.1403449Z # api.tests.test\_stats\_contracts
2025-08-20T00:57:34.1403905Z 
2025-08-20T00:57:34.1404085Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T00:57:34.1404416Z 
2025-08-20T00:57:34.1404548Z # api.tests.test\_sentry\_scrub
2025-08-20T00:57:34.1404731Z 
2025-08-20T00:57:34.1404846Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T00:57:34.1405062Z 
2025-08-20T00:57:34.1405162Z # api.tests.test\_roi\_basic\_auth
2025-08-20T00:57:34.1405344Z 
2025-08-20T00:57:34.1405447Z <a id="api.tests.test_errors_json"></a>
2025-08-20T00:57:34.1405649Z 
2025-08-20T00:57:34.1405742Z # api.tests.test\_errors\_json
2025-08-20T00:57:34.1405907Z 
2025-08-20T00:57:34.1406004Z <a id="api.tests.test_llm"></a>
2025-08-20T00:57:34.1406167Z 
2025-08-20T00:57:34.1406328Z # api.tests.test\_llm
2025-08-20T00:57:34.1406472Z 
2025-08-20T00:57:34.1406573Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T00:57:34.1406763Z 
2025-08-20T00:57:34.1406854Z # api.tests.test\_roi\_filters
2025-08-20T00:57:34.1407022Z 
2025-08-20T00:57:34.1407133Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T00:57:34.1407336Z 
2025-08-20T00:57:34.1407435Z # api.tests.test\_sentry\_event
2025-08-20T00:57:34.1407599Z 
2025-08-20T00:57:34.1407748Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T00:57:34.1408002Z 
2025-08-20T00:57:34.1408096Z ## DummyTransport Objects
2025-08-20T00:57:34.1408501Z 
2025-08-20T00:57:34.1408582Z ```python
2025-08-20T00:57:34.1408787Z class DummyTransport()
2025-08-20T00:57:34.1409005Z ```
2025-08-20T00:57:34.1409101Z 
2025-08-20T00:57:34.1409306Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T00:57:34.1409619Z 
2025-08-20T00:57:34.1409709Z #### capture\_envelope
2025-08-20T00:57:34.1409846Z 
2025-08-20T00:57:34.1409918Z ```python
2025-08-20T00:57:34.1410125Z def capture_envelope(envelope)
2025-08-20T00:57:34.1410358Z ```
2025-08-20T00:57:34.1410459Z 
2025-08-20T00:57:34.1410604Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T00:57:34.1410857Z 
2025-08-20T00:57:34.1410959Z <a id="api.tests.test_cors"></a>
2025-08-20T00:57:34.1411373Z 
2025-08-20T00:57:34.1411460Z # api.tests.test\_cors
2025-08-20T00:57:34.1411602Z 
2025-08-20T00:57:34.1411697Z <a id="api.tests.test_imports"></a>
2025-08-20T00:57:34.1411881Z 
2025-08-20T00:57:34.1411970Z # api.tests.test\_imports
2025-08-20T00:57:34.1412125Z 
2025-08-20T00:57:34.1412225Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T00:57:34.1412417Z 
2025-08-20T00:57:34.1412514Z # api.tests.test\_rate\_limit
2025-08-20T00:57:34.1412680Z 
2025-08-20T00:57:34.1412794Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T00:57:34.1413005Z 
2025-08-20T00:57:34.1413080Z #### app
2025-08-20T00:57:34.1413184Z 
2025-08-20T00:57:34.1413259Z noqa: E402
2025-08-20T00:57:34.1413373Z 
2025-08-20T00:57:34.1413474Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T00:57:34.1413664Z 
2025-08-20T00:57:34.1413763Z # api.tests.test\_stats\_sql
2025-08-20T00:57:34.1413933Z 
2025-08-20T00:57:34.1414034Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T00:57:34.1414232Z 
2025-08-20T00:57:34.1414335Z # api.tests.test\_entrypoint
2025-08-20T00:57:34.1414495Z 
2025-08-20T00:57:34.1414619Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T00:57:34.1414852Z 
2025-08-20T00:57:34.1414958Z # api.tests.test\_stats\_future\_contracts
2025-08-20T00:57:34.1415161Z 
2025-08-20T00:57:34.1415266Z <a id="api.tests.test_health"></a>
2025-08-20T00:57:34.1415413Z 
2025-08-20T00:57:34.1415487Z # api.tests.test\_health
2025-08-20T00:57:34.1415608Z 
2025-08-20T00:57:34.1415695Z <a id="api.tests.test_score"></a>
2025-08-20T00:57:34.1415840Z 
2025-08-20T00:57:34.1415911Z # api.tests.test\_score
2025-08-20T00:57:34.1416037Z 
2025-08-20T00:57:34.1416114Z <a id="api.logging_config"></a>
2025-08-20T00:57:34.1416253Z 
2025-08-20T00:57:34.1416325Z # api.logging\_config
2025-08-20T00:57:34.1416437Z 
2025-08-20T00:57:34.1416515Z <a id="api.migrations.env"></a>
2025-08-20T00:57:34.1416650Z 
2025-08-20T00:57:34.1416726Z # api.migrations.env
2025-08-20T00:57:34.1416970Z 
2025-08-20T00:57:34.1417088Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T00:57:34.1417283Z 
2025-08-20T00:57:34.1417386Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T00:57:34.1417564Z 
2025-08-20T00:57:34.1417672Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T00:57:34.1417853Z 
2025-08-20T00:57:34.1417946Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T00:57:34.1418110Z 
2025-08-20T00:57:34.1418388Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T00:57:34.1418622Z 
2025-08-20T00:57:34.1418757Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T00:57:34.1418973Z 
2025-08-20T00:57:34.1419089Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T00:57:34.1419281Z 
2025-08-20T00:57:34.1419389Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T00:57:34.1419568Z 
2025-08-20T00:57:34.1419679Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T00:57:34.1419946Z 
2025-08-20T00:57:34.1420046Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T00:57:34.1420255Z 
2025-08-20T00:57:34.1420381Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T00:57:34.1420580Z 
2025-08-20T00:57:34.1420690Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T00:57:34.1420880Z 
2025-08-20T00:57:34.1420991Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T00:57:34.1421176Z 
2025-08-20T00:57:34.1421285Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T00:57:34.1421464Z 
2025-08-20T00:57:34.1421581Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T00:57:34.1421774Z 
2025-08-20T00:57:34.1421880Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T00:57:34.1422057Z 
2025-08-20T00:57:34.1422187Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T00:57:34.1422405Z 
2025-08-20T00:57:34.1422520Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T00:57:34.1422718Z 
2025-08-20T00:57:34.1422849Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T00:57:34.1423181Z 
2025-08-20T00:57:34.1423285Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T00:57:34.1423474Z 
2025-08-20T00:57:34.1423604Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T00:57:34.1423815Z 
2025-08-20T00:57:34.1423926Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T00:57:34.1424124Z 
2025-08-20T00:57:34.1424227Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T00:57:34.1424415Z 
2025-08-20T00:57:34.1424511Z # api.migrations.versions.0001\_baseline
2025-08-20T00:57:34.1424915Z 
2025-08-20T00:57:34.1425079Z <a id="api.migrations.versions"></a>
2025-08-20T00:57:34.1425389Z 
2025-08-20T00:57:34.1425534Z # api.migrations.versions
2025-08-20T00:57:34.1425778Z 
2025-08-20T00:57:34.1425916Z <a id="api.migrations"></a>
2025-08-20T00:57:34.1426172Z 
2025-08-20T00:57:34.1426295Z # api.migrations
2025-08-20T00:57:34.1426489Z 
2025-08-20T00:57:34.1426633Z <a id="api.db"></a>
2025-08-20T00:57:34.1426803Z 
2025-08-20T00:57:34.1426866Z # api.db
2025-08-20T00:57:34.1426958Z 
2025-08-20T00:57:34.1427045Z <a id="api.routes.score"></a>
2025-08-20T00:57:34.1427188Z 
2025-08-20T00:57:34.1427256Z # api.routes.score
2025-08-20T00:57:34.1427367Z 
2025-08-20T00:57:34.1427443Z <a id="api.routes.stats"></a>
2025-08-20T00:57:34.1427576Z 
2025-08-20T00:57:34.1427647Z # api.routes.stats
2025-08-20T00:57:34.1427750Z 
2025-08-20T00:57:34.1427824Z <a id="api.routes.roi"></a>
2025-08-20T00:57:34.1427952Z 
2025-08-20T00:57:34.1428027Z # api.routes.roi
2025-08-20T00:57:34.1428253Z 
2025-08-20T00:57:34.1428336Z <a id="api.routes.health"></a>
2025-08-20T00:57:34.1428480Z 
2025-08-20T00:57:34.1428548Z # api.routes.health
2025-08-20T00:57:34.1428658Z 
2025-08-20T00:57:34.1428750Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T00:57:34.1428928Z 
2025-08-20T00:57:34.1428991Z #### MAX\_SKEW
2025-08-20T00:57:34.1429093Z 
2025-08-20T00:57:34.1429159Z seconds
2025-08-20T00:57:34.1429466Z 
2025-08-20T00:57:34.1429561Z <a id="api.routes.health.health"></a>
2025-08-20T00:57:34.1429738Z 
2025-08-20T00:57:34.1429798Z #### health
2025-08-20T00:57:34.1429887Z 
2025-08-20T00:57:34.1429950Z ```python
2025-08-20T00:57:34.1430156Z @router.get("/health", include_in_schema=False)
2025-08-20T00:57:34.1430574Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T00:57:34.1430914Z ```
2025-08-20T00:57:34.1430995Z 
2025-08-20T00:57:34.1431118Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T00:57:34.1431310Z 
2025-08-20T00:57:34.1431398Z <a id="api.routes.repository"></a>
2025-08-20T00:57:34.1431558Z 
2025-08-20T00:57:34.1431631Z # api.routes.repository
2025-08-20T00:57:34.1431752Z 
2025-08-20T00:57:34.1431822Z <a id="api.routes"></a>
2025-08-20T00:57:34.1431944Z 
2025-08-20T00:57:34.1432009Z # api.routes
2025-08-20T00:57:34.1432103Z 
2025-08-20T00:57:34.1432184Z <a id="api.models.fee"></a>
2025-08-20T00:57:34.1432311Z 
2025-08-20T00:57:34.1432377Z # api.models.fee
2025-08-20T00:57:34.1432492Z 
2025-08-20T00:57:34.1432561Z <a id="api.models"></a>
2025-08-20T00:57:34.1432673Z 
2025-08-20T00:57:34.1432733Z # api.models
2025-08-20T00:57:34.1432831Z 
2025-08-20T00:57:34.1432908Z <a id="api.roi_repository"></a>
2025-08-20T00:57:34.1433047Z 
2025-08-20T00:57:34.1433121Z # api.roi\_repository
2025-08-20T00:57:34.1433233Z 
2025-08-20T00:57:34.1433300Z <a id="api.main"></a>
2025-08-20T00:57:34.1433409Z 
2025-08-20T00:57:34.1433476Z # api.main
2025-08-20T00:57:34.1433578Z 
2025-08-20T00:57:34.1433659Z <a id="api.main.ready"></a>
2025-08-20T00:57:34.1433786Z 
2025-08-20T00:57:34.1433845Z #### ready
2025-08-20T00:57:34.1433938Z 
2025-08-20T00:57:34.1434003Z ```python
2025-08-20T00:57:34.1434261Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T00:57:34.1434694Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T00:57:34.1435037Z                                                                       str]
2025-08-20T00:57:34.1435271Z ```
2025-08-20T00:57:34.1435477Z 
2025-08-20T00:57:34.1435582Z Return 200 only when migrations are at head.
2025-08-20T00:57:34.1435755Z 
2025-08-20T00:57:34.1435826Z <a id="api.config"></a>
2025-08-20T00:57:34.1435948Z 
2025-08-20T00:57:34.1436011Z # api.config
2025-08-20T00:57:34.1436102Z 
2025-08-20T00:57:34.1436176Z <a id="api.security"></a>
2025-08-20T00:57:34.1436307Z 
2025-08-20T00:57:34.1436371Z # api.security
2025-08-20T00:57:34.1436468Z 
2025-08-20T00:57:34.1436534Z <a id="etl"></a>
2025-08-20T00:57:34.1436632Z 
2025-08-20T00:57:34.1436689Z # etl
2025-08-20T00:57:34.1436772Z 
2025-08-20T00:57:34.1436856Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T00:57:34.1437001Z 
2025-08-20T00:57:34.1437072Z # etl.fba\_fee\_ingestor
2025-08-20T00:57:34.1437196Z 
2025-08-20T00:57:34.1437272Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T00:57:34.1437413Z 
2025-08-20T00:57:34.1437486Z # etl.sp\_fees\_ingestor
2025-08-20T00:57:34.1437603Z 
2025-08-20T00:57:34.1437679Z <a id="etl.keepa_ingestor"></a>
2025-08-20T00:57:34.1437823Z 
2025-08-20T00:57:34.1437897Z # etl.keepa\_ingestor
2025-08-20T00:57:34.1438007Z 
2025-08-20T00:57:34.1438071Z <a id="etl.db"></a>
2025-08-20T00:57:34.1438284Z 
2025-08-20T00:57:34.1438345Z # etl.db
2025-08-20T00:57:34.1438430Z 
2025-08-20T00:57:34.1438514Z <a id="etl.dialects.schemas"></a>
2025-08-20T00:57:34.1438661Z 
2025-08-20T00:57:34.1438733Z # etl.dialects.schemas
2025-08-20T00:57:34.1438849Z 
2025-08-20T00:57:34.1438962Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T00:57:34.1439148Z 
2025-08-20T00:57:34.1439235Z # etl.dialects.amazon\_reimbursements
2025-08-20T00:57:34.1439403Z 
2025-08-20T00:57:34.1439496Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T00:57:34.1439664Z 
2025-08-20T00:57:34.1439748Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T00:57:34.1439907Z 
2025-08-20T00:57:34.1439992Z <a id="etl.dialects.test_generic"></a>
2025-08-20T00:57:34.1440148Z 
2025-08-20T00:57:34.1440230Z # etl.dialects.test\_generic
2025-08-20T00:57:34.1440482Z 
2025-08-20T00:57:34.1440574Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T00:57:34.1440741Z 
2025-08-20T00:57:34.1440820Z # etl.dialects.amazon\_returns
2025-08-20T00:57:34.1440960Z 
2025-08-20T00:57:34.1441052Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T00:57:34.1441229Z 
2025-08-20T00:57:34.1441312Z # etl.dialects.amazon\_fee\_preview
2025-08-20T00:57:34.1441464Z 
2025-08-20T00:57:34.1441573Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T00:57:34.1441757Z 
2025-08-20T00:57:34.1441846Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T00:57:34.1442013Z 
2025-08-20T00:57:34.1442107Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T00:57:34.1442279Z 
2025-08-20T00:57:34.1442366Z # etl.dialects.amazon\_settlements
2025-08-20T00:57:34.1442520Z 
2025-08-20T00:57:34.1442593Z <a id="etl.dialects"></a>
2025-08-20T00:57:34.1442717Z 
2025-08-20T00:57:34.1442787Z # etl.dialects
2025-08-20T00:57:34.1442883Z 
2025-08-20T00:57:34.1442949Z <a id="ingest"></a>
2025-08-20T00:57:34.1443064Z 
2025-08-20T00:57:34.1443126Z # ingest
2025-08-20T00:57:34.1443212Z 
2025-08-20T00:57:34.1443293Z <a id="ingest.maintenance"></a>
2025-08-20T00:57:34.1443442Z 
2025-08-20T00:57:34.1443514Z # ingest.maintenance
2025-08-20T00:57:34.1443630Z 
2025-08-20T00:57:34.1443713Z <a id="ingest.copy_loader"></a>
2025-08-20T00:57:34.1443848Z 
2025-08-20T00:57:34.1443917Z # ingest.copy\_loader
2025-08-20T00:57:34.1444033Z 
2025-08-20T00:57:34.1444145Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T00:57:34.1444327Z 
2025-08-20T00:57:34.1444400Z #### copy\_df\_via\_temp
2025-08-20T00:57:34.1444526Z 
2025-08-20T00:57:34.1444589Z ```python
2025-08-20T00:57:34.1444767Z def copy_df_via_temp(engine: Engine,
2025-08-20T00:57:34.1444998Z                      df: pd.DataFrame,
2025-08-20T00:57:34.1445235Z                      target_table: str,
2025-08-20T00:57:34.1445452Z                      *,
2025-08-20T00:57:34.1445663Z                      target_schema: Optional[str] = None,
2025-08-20T00:57:34.1445922Z                      columns: Sequence[str],
2025-08-20T00:57:34.1446332Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T00:57:34.1446607Z                      analyze_after: bool = False,
2025-08-20T00:57:34.1446871Z                      connection: Any | None = None) -> int
2025-08-20T00:57:34.1447109Z ```
2025-08-20T00:57:34.1447190Z 
2025-08-20T00:57:34.1447338Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T00:57:34.1447566Z 
2025-08-20T00:57:34.1447656Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T00:57:34.1447812Z 
2025-08-20T00:57:34.1447889Z # ingest.tests.test\_smoke
2025-08-20T00:57:34.1448023Z 
2025-08-20T00:57:34.1448096Z <a id="ingest.tests"></a>
2025-08-20T00:57:34.1448445Z 
2025-08-20T00:57:34.1448529Z # ingest.tests
2025-08-20T00:57:34.1448632Z 
2025-08-20T00:57:34.1448714Z <a id="ingest.upload_router"></a>
2025-08-20T00:57:34.1448861Z 
2025-08-20T00:57:34.1448938Z # ingest.upload\_router
2025-08-20T00:57:34.1449067Z 
2025-08-20T00:57:34.1449152Z <a id="ingest.email_watcher"></a>
2025-08-20T00:57:34.1449299Z 
2025-08-20T00:57:34.1449373Z # ingest.email\_watcher
2025-08-20T00:57:34.1449486Z 
2025-08-20T00:57:34.1449570Z <a id="ingest.email_watcher.main"></a>
2025-08-20T00:57:34.1449735Z 
2025-08-20T00:57:34.1449795Z #### main
2025-08-20T00:57:34.1449880Z 
2025-08-20T00:57:34.1449946Z ```python
2025-08-20T00:57:34.1450104Z def main() -> dict[str, str]
2025-08-20T00:57:34.1450295Z ```
2025-08-20T00:57:34.1450375Z 
2025-08-20T00:57:34.1450511Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T00:57:34.1450737Z 
2025-08-20T00:57:34.1450863Z Returns {"status": "success"} when processing completes.
2025-08-20T00:57:34.1451068Z 
2025-08-20T00:57:34.1451146Z <a id="ingest.tasks"></a>
2025-08-20T00:57:34.1451270Z 
2025-08-20T00:57:34.1451335Z # ingest.tasks
2025-08-20T00:57:34.1451460Z 
2025-08-20T00:57:34.1451553Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T00:57:34.1451730Z 
2025-08-20T00:57:34.1452115Z #### task\_import\_file
2025-08-20T00:57:34.1452341Z 
2025-08-20T00:57:34.1452456Z ```python
2025-08-20T00:57:34.1452842Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T00:57:34.1453373Z def task_import_file(self: Any,
2025-08-20T00:57:34.1453677Z                      uri: str,
2025-08-20T00:57:34.1453902Z                      report_type: str | None = None,
2025-08-20T00:57:34.1454162Z                      force: bool = False) -> dict[str, Any]
2025-08-20T00:57:34.1454398Z ```
2025-08-20T00:57:34.1454480Z 
2025-08-20T00:57:34.1454611Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T00:57:34.1454822Z 
2025-08-20T00:57:34.1454906Z <a id="ingest.celery_app"></a>
2025-08-20T00:57:34.1455042Z 
2025-08-20T00:57:34.1455118Z # ingest.celery\_app
2025-08-20T00:57:34.1455230Z 
2025-08-20T00:57:34.1455309Z <a id="ingest.ingest_router"></a>
2025-08-20T00:57:34.1455454Z 
2025-08-20T00:57:34.1455532Z # ingest.ingest\_router
2025-08-20T00:57:34.1455648Z 
2025-08-20T00:57:34.1455731Z <a id="logistics_etl"></a>
2025-08-20T00:57:34.1455867Z 
2025-08-20T00:57:34.1455932Z # logistics\_etl
2025-08-20T00:57:34.1456036Z 
2025-08-20T00:57:34.1456114Z Daily logistics ETL job.
2025-08-20T00:57:34.1456234Z 
2025-08-20T00:57:34.1456311Z <a id="logistics_etl.__main__"></a>
2025-08-20T00:57:34.1456459Z 
2025-08-20T00:57:34.1456541Z # logistics\_etl.\_\_main\_\_
2025-08-20T00:57:34.1456673Z 
2025-08-20T00:57:34.1456747Z <a id="logistics_etl.dsn"></a>
2025-08-20T00:57:34.1456885Z 
2025-08-20T00:57:34.1456952Z # logistics\_etl.dsn
2025-08-20T00:57:34.1457058Z 
2025-08-20T00:57:34.1457169Z Local DSN builder to avoid cross-service dependency.
2025-08-20T00:57:34.1457370Z 
2025-08-20T00:57:34.1457458Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T00:57:34.1457621Z 
2025-08-20T00:57:34.1457688Z #### build\_dsn
2025-08-20T00:57:34.1457789Z 
2025-08-20T00:57:34.1457850Z ```python
2025-08-20T00:57:34.1458027Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:57:34.1458382Z ```
2025-08-20T00:57:34.1458472Z 
2025-08-20T00:57:34.1459053Z Return a Postgres DSN assembled from environment variables.
2025-08-20T00:57:34.1459286Z 
2025-08-20T00:57:34.1459446Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T00:57:34.1459832Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T00:57:34.1460172Z error when any required variable is missing.
2025-08-20T00:57:34.1460344Z 
2025-08-20T00:57:34.1460436Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T00:57:34.1460610Z 
2025-08-20T00:57:34.1460690Z # logistics\_etl.tests.conftest
2025-08-20T00:57:34.1460832Z 
2025-08-20T00:57:34.1460934Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T00:57:34.1461120Z 
2025-08-20T00:57:34.1461204Z # logistics\_etl.tests.test\_repository
2025-08-20T00:57:34.1461365Z 
2025-08-20T00:57:34.1461462Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T00:57:34.1461630Z 
2025-08-20T00:57:34.1461711Z # logistics\_etl.tests.test\_cron
2025-08-20T00:57:34.1461867Z 
2025-08-20T00:57:34.1461960Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T00:57:34.1462135Z 
2025-08-20T00:57:34.1462222Z # logistics\_etl.tests.test\_imports
2025-08-20T00:57:34.1462375Z 
2025-08-20T00:57:34.1462466Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T00:57:34.1462631Z 
2025-08-20T00:57:34.1462718Z # logistics\_etl.tests.test\_smoke
2025-08-20T00:57:34.1462864Z 
2025-08-20T00:57:34.1462953Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T00:57:34.1463123Z 
2025-08-20T00:57:34.1463208Z # logistics\_etl.tests.test\_client
2025-08-20T00:57:34.1463358Z 
2025-08-20T00:57:34.1463441Z <a id="logistics_etl.tests"></a>
2025-08-20T00:57:34.1463582Z 
2025-08-20T00:57:34.1463651Z # logistics\_etl.tests
2025-08-20T00:57:34.1463765Z 
2025-08-20T00:57:34.1463849Z <a id="logistics_etl.flow"></a>
2025-08-20T00:57:34.1463988Z 
2025-08-20T00:57:34.1464058Z # logistics\_etl.flow
2025-08-20T00:57:34.1464176Z 
2025-08-20T00:57:34.1464254Z <a id="logistics_etl.client"></a>
2025-08-20T00:57:34.1464519Z 
2025-08-20T00:57:34.1535113Z # logistics\_etl.client
2025-08-20T00:57:34.1535386Z 
2025-08-20T00:57:34.1535554Z <a id="logistics_etl.cron"></a>
2025-08-20T00:57:34.1535742Z 
2025-08-20T00:57:34.1535838Z # logistics\_etl.cron
2025-08-20T00:57:34.1535984Z 
2025-08-20T00:57:34.1536081Z <a id="logistics_etl.db"></a>
2025-08-20T00:57:34.1536257Z 
2025-08-20T00:57:34.1536339Z # logistics\_etl.db
2025-08-20T00:57:34.1536470Z 
2025-08-20T00:57:34.1536585Z <a id="logistics_etl.repository"></a>
2025-08-20T00:57:34.1536787Z 
2025-08-20T00:57:34.1536883Z # logistics\_etl.repository
2025-08-20T00:57:34.1537046Z 
2025-08-20T00:57:34.1537138Z <a id="alert_bot"></a>
2025-08-20T00:57:34.1537280Z 
2025-08-20T00:57:34.1537434Z # alert\_bot
2025-08-20T00:57:34.1537560Z 
2025-08-20T00:57:34.1537667Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T00:57:34.1537868Z 
2025-08-20T00:57:34.1537973Z # alert\_bot.tests.test\_smoke
2025-08-20T00:57:34.1538372Z 
2025-08-20T00:57:34.1538514Z <a id="alert_bot.tests"></a>
2025-08-20T00:57:34.1538693Z 
2025-08-20T00:57:34.1538787Z # alert\_bot.tests
2025-08-20T00:57:34.1538917Z 
2025-08-20T00:57:34.1539017Z <a id="alert_bot.alert_bot"></a>
2025-08-20T00:57:34.1539196Z 
2025-08-20T00:57:34.1539282Z # alert\_bot.alert\_bot
2025-08-20T00:57:34.1539429Z 
2025-08-20T00:57:34.1539520Z <a id="alert_bot.rules"></a>
2025-08-20T00:57:34.1539687Z 
2025-08-20T00:57:34.1539767Z # alert\_bot.rules
2025-08-20T00:57:34.1539893Z 
2025-08-20T00:57:34.1539979Z <a id="common"></a>
2025-08-20T00:57:34.1540107Z 
2025-08-20T00:57:34.1540185Z # common
2025-08-20T00:57:34.1540298Z 
2025-08-20T00:57:34.1540385Z <a id="common.dsn"></a>
2025-08-20T00:57:34.1540526Z 
2025-08-20T00:57:34.1540602Z # common.dsn
2025-08-20T00:57:34.1540726Z 
2025-08-20T00:57:34.1540827Z <a id="common.dsn.build_dsn"></a>
2025-08-20T00:57:34.1541009Z 
2025-08-20T00:57:34.1541097Z #### build\_dsn
2025-08-20T00:57:34.1541222Z 
2025-08-20T00:57:34.1541299Z ```python
2025-08-20T00:57:34.1541520Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:57:34.1541791Z ```
2025-08-20T00:57:34.1542084Z 
2025-08-20T00:57:34.1542237Z Return a Postgres DSN, validating required variables.
2025-08-20T00:57:34.1542493Z 
2025-08-20T00:57:34.1542723Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T00:57:34.1543269Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T00:57:34.1543776Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T00:57:34.1544132Z missing.
2025-08-20T00:57:34.1544220Z 
2025-08-20T00:57:34.1544308Z <a id="common.models_vendor"></a>
2025-08-20T00:57:34.1544459Z 
2025-08-20T00:57:34.1544531Z # common.models\_vendor
2025-08-20T00:57:34.1544657Z 
2025-08-20T00:57:34.1544743Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T00:57:34.1544912Z 
2025-08-20T00:57:34.1544981Z ## Vendor Objects
2025-08-20T00:57:34.1545083Z 
2025-08-20T00:57:34.1545143Z ```python
2025-08-20T00:57:34.1545298Z class Vendor(Base)
2025-08-20T00:57:34.1545463Z ```
2025-08-20T00:57:34.1545551Z 
2025-08-20T00:57:34.1545626Z Vendor of inventory items.
2025-08-20T00:57:34.1545755Z 
2025-08-20T00:57:34.1545856Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T00:57:34.1546043Z 
2025-08-20T00:57:34.1546114Z ## VendorPrice Objects
2025-08-20T00:57:34.1546229Z 
2025-08-20T00:57:34.1546292Z ```python
2025-08-20T00:57:34.1546446Z class VendorPrice(Base)
2025-08-20T00:57:34.1546621Z ```
2025-08-20T00:57:34.1546699Z 
2025-08-20T00:57:34.1546799Z Association table linking vendors to pricing.
2025-08-20T00:57:34.1546983Z 
2025-08-20T00:57:34.1547056Z <a id="common.db_url"></a>
2025-08-20T00:57:34.1547179Z 
2025-08-20T00:57:34.1547243Z # common.db\_url
2025-08-20T00:57:34.1547351Z 
2025-08-20T00:57:34.1547432Z <a id="common.db_url.build_url"></a>
2025-08-20T00:57:34.1547587Z 
2025-08-20T00:57:34.1547655Z #### build\_url
2025-08-20T00:57:34.1547752Z 
2025-08-20T00:57:34.1547812Z ```python
2025-08-20T00:57:34.1547988Z def build_url(async_: bool = True) -> str
2025-08-20T00:57:34.1548440Z ```
2025-08-20T00:57:34.1548529Z 
2025-08-20T00:57:34.1548625Z Return Postgres DSN from env or PG_* parts.
2025-08-20T00:57:34.1548800Z 
2025-08-20T00:57:34.1548876Z <a id="common.keepa"></a>
2025-08-20T00:57:34.1549008Z 
2025-08-20T00:57:34.1549074Z # common.keepa
2025-08-20T00:57:34.1549173Z 
2025-08-20T00:57:34.1549251Z <a id="common.llm"></a>
2025-08-20T00:57:34.1549364Z 
2025-08-20T00:57:34.1549426Z # common.llm
2025-08-20T00:57:34.1549524Z 
2025-08-20T00:57:34.1549600Z <a id="common.settings"></a>
2025-08-20T00:57:34.1549735Z 
2025-08-20T00:57:34.1549800Z # common.settings
2025-08-20T00:57:34.1549910Z 
2025-08-20T00:57:34.1549978Z <a id="common.db"></a>
2025-08-20T00:57:34.1550091Z 
2025-08-20T00:57:34.1550158Z # common.db
2025-08-20T00:57:34.1550247Z 
2025-08-20T00:57:34.1550337Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T00:57:34.1550505Z 
2025-08-20T00:57:34.1550615Z #### build\_sqlalchemy\_url
2025-08-20T00:57:34.1550743Z 
2025-08-20T00:57:34.1550804Z ```python
2025-08-20T00:57:34.1550978Z def build_sqlalchemy_url() -> str
2025-08-20T00:57:34.1551182Z ```
2025-08-20T00:57:34.1551267Z 
2025-08-20T00:57:34.1551357Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T00:57:34.1551525Z 
2025-08-20T00:57:34.1551626Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T00:57:34.1551793Z 
2025-08-20T00:57:34.1551865Z #### build\_asyncpg\_dsn
2025-08-20T00:57:34.1551994Z 
2025-08-20T00:57:34.1552054Z ```python
2025-08-20T00:57:34.1552222Z def build_asyncpg_dsn() -> str
2025-08-20T00:57:34.1552420Z ```
2025-08-20T00:57:34.1552499Z 
2025-08-20T00:57:34.1552625Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T00:57:34.1552839Z 
2025-08-20T00:57:34.1552925Z <a id="common.db.refresh_mvs"></a>
2025-08-20T00:57:34.1553077Z 
2025-08-20T00:57:34.1553150Z #### refresh\_mvs
2025-08-20T00:57:34.1553253Z 
2025-08-20T00:57:34.1553312Z ```python
2025-08-20T00:57:34.1553511Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T00:57:34.1553757Z ```
2025-08-20T00:57:34.1553844Z 
2025-08-20T00:57:34.1554111Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T00:57:34.1554324Z 
2025-08-20T00:57:34.1554405Z <a id="common.config"></a>
2025-08-20T00:57:34.1554532Z 
2025-08-20T00:57:34.1554596Z # common.config
2025-08-20T00:57:34.1554696Z 
2025-08-20T00:57:34.1554774Z <a id="common.base"></a>
2025-08-20T00:57:34.1554894Z 
2025-08-20T00:57:34.1554957Z # common.base
2025-08-20T00:57:34.1555055Z 
2025-08-20T00:57:34.1555132Z <a id="common.base.Base"></a>
2025-08-20T00:57:34.1555266Z 
2025-08-20T00:57:34.1555329Z ## Base Objects
2025-08-20T00:57:34.1555430Z 
2025-08-20T00:57:34.1555489Z ```python
2025-08-20T00:57:34.1555652Z class Base(DeclarativeBase)
2025-08-20T00:57:34.1555838Z ```
2025-08-20T00:57:34.1555918Z 
2025-08-20T00:57:34.1556004Z Base class for SQLAlchemy models.
2025-08-20T00:57:34.1556148Z 
2025-08-20T00:57:34.1556216Z <a id="repricer"></a>
2025-08-20T00:57:34.1556338Z 
2025-08-20T00:57:34.1556401Z # repricer
2025-08-20T00:57:34.1556488Z 
2025-08-20T00:57:34.1556584Z <a id="repricer.app.schemas"></a>
2025-08-20T00:57:34.1556736Z 
2025-08-20T00:57:34.1556809Z # repricer.app.schemas
2025-08-20T00:57:34.1556925Z 
2025-08-20T00:57:34.1557011Z <a id="repricer.app.deps"></a>
2025-08-20T00:57:34.1557147Z 
2025-08-20T00:57:34.1557219Z # repricer.app.deps
2025-08-20T00:57:34.1557333Z 
2025-08-20T00:57:34.1557445Z Placeholder module for Keepa / SP-API clients.
2025-08-20T00:57:34.1557627Z 
2025-08-20T00:57:34.1557707Z <a id="repricer.app.logic"></a>
2025-08-20T00:57:34.1557853Z 
2025-08-20T00:57:34.1557925Z # repricer.app.logic
2025-08-20T00:57:34.1558038Z 
2025-08-20T00:57:34.1558243Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T00:57:34.1558419Z 
2025-08-20T00:57:34.1558486Z #### MIN\_MARGIN
2025-08-20T00:57:34.1558593Z 
2025-08-20T00:57:34.1558652Z 15 % ROI
2025-08-20T00:57:34.1558738Z 
2025-08-20T00:57:34.1558838Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T00:57:34.1559023Z 
2025-08-20T00:57:34.1559089Z #### compute\_price
2025-08-20T00:57:34.1559312Z 
2025-08-20T00:57:34.1559383Z ```python
2025-08-20T00:57:34.1559629Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T00:57:34.1559935Z ```
2025-08-20T00:57:34.1560016Z 
2025-08-20T00:57:34.1560121Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T00:57:34.1560398Z Replace with real competitive logic later.
2025-08-20T00:57:34.1560566Z 
2025-08-20T00:57:34.1560646Z <a id="repricer.app.main"></a>
2025-08-20T00:57:34.1560800Z 
2025-08-20T00:57:34.1560872Z # repricer.app.main
2025-08-20T00:57:34.1560984Z 
2025-08-20T00:57:34.1561072Z <a id="repricer.app"></a>
2025-08-20T00:57:34.1561202Z 
2025-08-20T00:57:34.1561268Z # repricer.app
2025-08-20T00:57:34.1561374Z 
2025-08-20T00:57:34.1561464Z <a id="repricer.tests.test_imports"></a>
2025-08-20T00:57:34.1561633Z 
2025-08-20T00:57:34.1561713Z # repricer.tests.test\_imports
2025-08-20T00:57:34.1561862Z 
2025-08-20T00:57:34.1561948Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T00:57:34.1562112Z 
2025-08-20T00:57:34.1562204Z # repricer.tests.test\_smoke
2025-08-20T00:57:34.1562344Z 
2025-08-20T00:57:34.1562419Z <a id="repricer.tests"></a>
2025-08-20T00:57:34.1562559Z 
2025-08-20T00:57:34.1562625Z # repricer.tests
2025-08-20T00:57:34.1562729Z 
2025-08-20T00:57:34.1562794Z <a id="db"></a>
2025-08-20T00:57:34.1562898Z 
2025-08-20T00:57:34.1562957Z # db
2025-08-20T00:57:34.1563042Z 
2025-08-20T00:57:34.1563123Z <a id="db.utils.views"></a>
2025-08-20T00:57:34.1563251Z 
2025-08-20T00:57:34.1563317Z # db.utils.views
2025-08-20T00:57:34.1563416Z 
2025-08-20T00:57:34.1563513Z <a id="db.utils.views.replace_view"></a>
2025-08-20T00:57:34.1563680Z 
2025-08-20T00:57:34.1563745Z #### replace\_view
2025-08-20T00:57:34.1563855Z 
2025-08-20T00:57:34.1563918Z ```python
2025-08-20T00:57:34.1564113Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T00:57:34.1564359Z ```
2025-08-20T00:57:34.1564441Z 
2025-08-20T00:57:34.1564534Z Drop and recreate a SQL view atomically.
2025-08-20T00:57:34.1564695Z 
2025-08-20T00:57:34.1564768Z <a id="db.utils"></a>
2025-08-20T00:57:34.1565043Z 
2025-08-20T00:57:34.1565108Z # db.utils
2025-08-20T00:57:34.1565197Z 
2025-08-20T00:57:34.1565272Z <a id="price_importer"></a>
2025-08-20T00:57:34.1565404Z 
2025-08-20T00:57:34.1565470Z # price\_importer
2025-08-20T00:57:34.1565574Z 
2025-08-20T00:57:34.1565679Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T00:57:34.1565861Z 
2025-08-20T00:57:34.1565950Z # price\_importer.services\_common.dsn
2025-08-20T00:57:34.1566110Z 
2025-08-20T00:57:34.1566239Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T00:57:34.1566455Z 
2025-08-20T00:57:34.1566520Z #### build\_dsn
2025-08-20T00:57:34.1566626Z 
2025-08-20T00:57:34.1566687Z ```python
2025-08-20T00:57:34.1566856Z def build_dsn(sync: bool = True) -> str
2025-08-20T00:57:34.1567072Z ```
2025-08-20T00:57:34.1567151Z 
2025-08-20T00:57:34.1567219Z Return safe DSN.
2025-08-20T00:57:34.1567318Z 
2025-08-20T00:57:34.1567656Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T00:57:34.1567865Z 
2025-08-20T00:57:34.1567996Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T00:57:34.1568305Z 
2025-08-20T00:57:34.1568413Z # price\_importer.services\_common.models\_vendor
2025-08-20T00:57:34.1568605Z 
2025-08-20T00:57:34.1568709Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T00:57:34.1568894Z 
2025-08-20T00:57:34.1568995Z # price\_importer.services\_common.db\_url
2025-08-20T00:57:34.1569162Z 
2025-08-20T00:57:34.1569291Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T00:57:34.1569505Z 
2025-08-20T00:57:34.1569570Z #### build\_url
2025-08-20T00:57:34.1569665Z 
2025-08-20T00:57:34.1569727Z ```python
2025-08-20T00:57:34.1569900Z def build_url(async_: bool = True) -> str
2025-08-20T00:57:34.1570124Z ```
2025-08-20T00:57:34.1570203Z 
2025-08-20T00:57:34.1570297Z Return Postgres DSN from env or PG_* parts.
2025-08-20T00:57:34.1570468Z 
2025-08-20T00:57:34.1570583Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T00:57:34.1570888Z 
2025-08-20T00:57:34.1570981Z # price\_importer.services\_common.keepa
2025-08-20T00:57:34.1571150Z 
2025-08-20T00:57:34.1571246Z <a id="price_importer.services_common.llm"></a>
2025-08-20T00:57:34.1571424Z 
2025-08-20T00:57:34.1571517Z # price\_importer.services\_common.llm
2025-08-20T00:57:34.1571673Z 
2025-08-20T00:57:34.1571785Z <a id="price_importer.services_common.settings"></a>
2025-08-20T00:57:34.1571979Z 
2025-08-20T00:57:34.1572079Z # price\_importer.services\_common.settings
2025-08-20T00:57:34.1572248Z 
2025-08-20T00:57:34.1572359Z <a id="price_importer.services_common.db"></a>
2025-08-20T00:57:34.1572539Z 
2025-08-20T00:57:34.1572625Z # price\_importer.services\_common.db
2025-08-20T00:57:34.1572797Z 
2025-08-20T00:57:34.1572955Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T00:57:34.1573196Z 
2025-08-20T00:57:34.1573273Z #### build\_sqlalchemy\_url
2025-08-20T00:57:34.1573401Z 
2025-08-20T00:57:34.1573469Z ```python
2025-08-20T00:57:34.1573638Z def build_sqlalchemy_url() -> str
2025-08-20T00:57:34.1573846Z ```
2025-08-20T00:57:34.1573925Z 
2025-08-20T00:57:34.1574015Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T00:57:34.1574187Z 
2025-08-20T00:57:34.1574330Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T00:57:34.1574551Z 
2025-08-20T00:57:34.1574629Z #### build\_asyncpg\_dsn
2025-08-20T00:57:34.1574750Z 
2025-08-20T00:57:34.1574810Z ```python
2025-08-20T00:57:34.1574978Z def build_asyncpg_dsn() -> str
2025-08-20T00:57:34.1575169Z ```
2025-08-20T00:57:34.1575254Z 
2025-08-20T00:57:34.1575377Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T00:57:34.1575582Z 
2025-08-20T00:57:34.1575705Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T00:57:34.1575917Z 
2025-08-20T00:57:34.1575979Z #### refresh\_mvs
2025-08-20T00:57:34.1576085Z 
2025-08-20T00:57:34.1576152Z ```python
2025-08-20T00:57:34.1576340Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T00:57:34.1576593Z ```
2025-08-20T00:57:34.1576788Z 
2025-08-20T00:57:34.1576953Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T00:57:34.1577172Z 
2025-08-20T00:57:34.1577266Z <a id="price_importer.services_common"></a>
2025-08-20T00:57:34.1577433Z 
2025-08-20T00:57:34.1577525Z # price\_importer.services\_common
2025-08-20T00:57:34.1577672Z 
2025-08-20T00:57:34.1577770Z <a id="price_importer.services_common.base"></a>
2025-08-20T00:57:34.1577956Z 
2025-08-20T00:57:34.1578041Z # price\_importer.services\_common.base
2025-08-20T00:57:34.1578405Z 
2025-08-20T00:57:34.1578513Z <a id="price_importer.normaliser"></a>
2025-08-20T00:57:34.1578684Z 
2025-08-20T00:57:34.1578766Z # price\_importer.normaliser
2025-08-20T00:57:34.1578901Z 
2025-08-20T00:57:34.1579005Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T00:57:34.1579184Z 
2025-08-20T00:57:34.1579275Z # price\_importer.common.models\_vendor
2025-08-20T00:57:34.1579442Z 
2025-08-20T00:57:34.1579529Z <a id="price_importer.common.db_url"></a>
2025-08-20T00:57:34.1579701Z 
2025-08-20T00:57:34.1579785Z # price\_importer.common.db\_url
2025-08-20T00:57:34.1579934Z 
2025-08-20T00:57:34.1580035Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T00:57:34.1580216Z 
2025-08-20T00:57:34.1580282Z #### make\_dsn
2025-08-20T00:57:34.1580379Z 
2025-08-20T00:57:34.1580437Z ```python
2025-08-20T00:57:34.1580609Z def make_dsn(async_: bool = False) -> str
2025-08-20T00:57:34.1580824Z ```
2025-08-20T00:57:34.1580908Z 
2025-08-20T00:57:34.1581024Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T00:57:34.1581218Z 
2025-08-20T00:57:34.1581323Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T00:57:34.1581516Z 
2025-08-20T00:57:34.1581577Z #### build\_url
2025-08-20T00:57:34.1581674Z 
2025-08-20T00:57:34.1581738Z ```python
2025-08-20T00:57:34.1581906Z def build_url(async_: bool = False) -> str
2025-08-20T00:57:34.1582128Z ```
2025-08-20T00:57:34.1582206Z 
2025-08-20T00:57:34.1582326Z Return Postgres DSN built from environment variables.
2025-08-20T00:57:34.1582658Z 
2025-08-20T00:57:34.1582742Z <a id="price_importer.common"></a>
2025-08-20T00:57:34.1582892Z 
2025-08-20T00:57:34.1582975Z # price\_importer.common
2025-08-20T00:57:34.1583100Z 
2025-08-20T00:57:34.1583186Z <a id="price_importer.common.base"></a>
2025-08-20T00:57:34.1583345Z 
2025-08-20T00:57:34.1583432Z # price\_importer.common.base
2025-08-20T00:57:34.1583573Z 
2025-08-20T00:57:34.1583668Z <a id="price_importer.tests.conftest"></a>
2025-08-20T00:57:34.1583847Z 
2025-08-20T00:57:34.1583935Z # price\_importer.tests.conftest
2025-08-20T00:57:34.1584079Z 
2025-08-20T00:57:34.1584189Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T00:57:34.1584362Z 
2025-08-20T00:57:34.1584447Z # price\_importer.tests.test\_reader
2025-08-20T00:57:34.1584601Z 
2025-08-20T00:57:34.1584709Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T00:57:34.1584916Z 
2025-08-20T00:57:34.1585005Z # price\_importer.tests.test\_imports
2025-08-20T00:57:34.1585170Z 
2025-08-20T00:57:34.1585267Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T00:57:34.1585440Z 
2025-08-20T00:57:34.1585529Z # price\_importer.tests.test\_smoke
2025-08-20T00:57:34.1585682Z 
2025-08-20T00:57:34.1585784Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T00:57:34.1585965Z 
2025-08-20T00:57:34.1586059Z # price\_importer.tests.test\_normaliser
2025-08-20T00:57:34.1586221Z 
2025-08-20T00:57:34.1586304Z <a id="price_importer.tests"></a>
2025-08-20T00:57:34.1586456Z 
2025-08-20T00:57:34.1586530Z # price\_importer.tests
2025-08-20T00:57:34.1586648Z 
2025-08-20T00:57:34.1586738Z <a id="price_importer.reader"></a>
2025-08-20T00:57:34.1586885Z 
2025-08-20T00:57:34.1586961Z # price\_importer.reader
2025-08-20T00:57:34.1587083Z 
2025-08-20T00:57:34.1587177Z <a id="price_importer.repository"></a>
2025-08-20T00:57:34.1587338Z 
2025-08-20T00:57:34.1587418Z # price\_importer.repository
2025-08-20T00:57:34.1587559Z 
2025-08-20T00:57:34.1587641Z <a id="price_importer.import"></a>
2025-08-20T00:57:34.1587791Z 
2025-08-20T00:57:34.1587871Z # price\_importer.import
2025-08-20T00:57:34.1588107Z 
2025-08-20T00:57:34.1588287Z <a id="fees_h10"></a>
2025-08-20T00:57:34.1588401Z 
2025-08-20T00:57:34.1588474Z # fees\_h10
2025-08-20T00:57:34.1588567Z 
2025-08-20T00:57:34.1588643Z <a id="fees_h10.worker"></a>
2025-08-20T00:57:34.1588781Z 
2025-08-20T00:57:34.1588845Z # fees\_h10.worker
2025-08-20T00:57:34.1588949Z 
2025-08-20T00:57:34.1589047Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T00:57:34.1589234Z 
2025-08-20T00:57:34.1589305Z #### list\_active\_asins
2025-08-20T00:57:34.1589425Z 
2025-08-20T00:57:34.1589492Z ```python
2025-08-20T00:57:34.1589654Z def list_active_asins() -> list[str]
2025-08-20T00:57:34.1589864Z ```
2025-08-20T00:57:34.1589943Z 
2025-08-20T00:57:34.1590051Z Return known ASINs or an empty list if unavailable.
2025-08-20T00:57:34.1590249Z 
2025-08-20T00:57:34.1590330Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T00:57:34.1590484Z 
2025-08-20T00:57:34.1590567Z # fees\_h10.tests.test\_smoke
2025-08-20T00:57:34.1590707Z 
2025-08-20T00:57:34.1590783Z <a id="fees_h10.tests"></a>
2025-08-20T00:57:34.1590908Z 
2025-08-20T00:57:34.1590980Z # fees\_h10.tests
2025-08-20T00:57:34.1591080Z 
2025-08-20T00:57:34.1591155Z <a id="fees_h10.client"></a>
2025-08-20T00:57:34.1591291Z 
2025-08-20T00:57:34.1591354Z # fees\_h10.client
2025-08-20T00:57:34.1591453Z 
2025-08-20T00:57:34.1591531Z <a id="fees_h10.repository"></a>
2025-08-20T00:57:34.1591677Z 
2025-08-20T00:57:34.1591745Z # fees\_h10.repository
2025-08-20T00:57:34.1591858Z 
2025-08-20T00:57:34.1591963Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T00:57:34.1592141Z 
2025-08-20T00:57:34.1592207Z #### upsert\_fees\_raw
2025-08-20T00:57:34.1592324Z 
2025-08-20T00:57:34.1592385Z ```python
2025-08-20T00:57:34.1592549Z def upsert_fees_raw(engine: Engine,
2025-08-20T00:57:34.1592787Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T00:57:34.1593023Z                     *,
2025-08-20T00:57:34.1593242Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T00:57:34.1593624Z ```
2025-08-20T00:57:34.1593703Z 
2025-08-20T00:57:34.1593782Z Idempotent upsert for fees.
2025-08-20T00:57:34.1593917Z 
2025-08-20T00:57:34.1594067Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T00:57:34.1594403Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T00:57:34.1594706Z Only updates when one of the mutable fields changes.
2025-08-20T00:57:34.1594899Z 
2025-08-20T00:57:34.1594972Z <a id="emailer"></a>
2025-08-20T00:57:34.1595081Z 
2025-08-20T00:57:34.1595141Z # emailer
2025-08-20T00:57:34.1595226Z 
2025-08-20T00:57:34.1595333Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T00:57:34.1595511Z 
2025-08-20T00:57:34.1595598Z # emailer.tests.test\_import\_emailer
2025-08-20T00:57:34.1595762Z 
2025-08-20T00:57:34.1595845Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T00:57:34.1595998Z 
2025-08-20T00:57:34.1596080Z # emailer.tests.test\_smoke
2025-08-20T00:57:34.1596213Z 
2025-08-20T00:57:34.1596293Z <a id="emailer.tests"></a>
2025-08-20T00:57:34.1596425Z 
2025-08-20T00:57:34.1596502Z # emailer.tests
2025-08-20T00:57:34.1596603Z 
2025-08-20T00:57:34.1596688Z <a id="emailer.generate_body"></a>
2025-08-20T00:57:34.1596842Z 
2025-08-20T00:57:34.1596916Z # emailer.generate\_body
2025-08-20T00:57:34.1597038Z 
2025-08-20T00:57:34.1597106Z <a id="llm_server"></a>
2025-08-20T00:57:34.1597225Z 
2025-08-20T00:57:34.1616566Z # llm\_server
2025-08-20T00:57:34.1616726Z 
2025-08-20T00:57:34.1616823Z <a id="llm_server.app"></a>
2025-08-20T00:57:34.1616981Z 
2025-08-20T00:57:34.1617052Z # llm\_server.app
2025-08-20T00:57:34.1617167Z 
