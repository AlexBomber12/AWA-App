2025-08-16T23:09:02.2628314Z ##[group]Run pydoc-markdown
2025-08-16T23:09:02.2628623Z [36;1mpydoc-markdown[0m
2025-08-16T23:09:02.2669674Z shell: /usr/bin/bash -e {0}
2025-08-16T23:09:02.2669912Z env:
2025-08-16T23:09:02.2670147Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:09:02.2670560Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T23:09:02.2670950Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:09:02.2671424Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:09:02.2671774Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:09:02.2672124Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T23:09:02.2672414Z ##[endgroup]
2025-08-16T23:09:02.5905598Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T23:09:02.5906365Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T23:09:02.5906706Z In "pydoc-markdown.yml"
2025-08-16T23:09:02.5907002Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T23:09:02.5907503Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T23:09:02.5908019Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T23:09:02.5908365Z 
2025-08-16T23:09:02.7994844Z <a id="__init__"></a>
2025-08-16T23:09:02.7995366Z 
2025-08-16T23:09:02.7995512Z # \_\_init\_\_
2025-08-16T23:09:02.7995699Z 
2025-08-16T23:09:02.7995826Z <a id="api"></a>
2025-08-16T23:09:02.7996023Z 
2025-08-16T23:09:02.7996148Z # api
2025-08-16T23:09:02.7996312Z 
2025-08-16T23:09:02.7996464Z <a id="api.tests.test_llm"></a>
2025-08-16T23:09:02.7996751Z 
2025-08-16T23:09:02.7996890Z # api.tests.test\_llm
2025-08-16T23:09:02.7997115Z 
2025-08-16T23:09:02.7997281Z <a id="api.tests.test_imports"></a>
2025-08-16T23:09:02.7997575Z 
2025-08-16T23:09:02.7997715Z # api.tests.test\_imports
2025-08-16T23:09:02.7997954Z 
2025-08-16T23:09:02.7998122Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T23:09:02.7998380Z 
2025-08-16T23:09:02.7998469Z # api.tests.test\_entrypoint
2025-08-16T23:09:02.7998649Z 
2025-08-16T23:09:02.7998736Z <a id="api.tests.test_health"></a>
2025-08-16T23:09:02.7998888Z 
2025-08-16T23:09:02.7998970Z # api.tests.test\_health
2025-08-16T23:09:02.7999093Z 
2025-08-16T23:09:02.7999175Z <a id="api.migrations.env"></a>
2025-08-16T23:09:02.7999318Z 
2025-08-16T23:09:02.7999400Z # api.migrations.env
2025-08-16T23:09:02.7999524Z 
2025-08-16T23:09:02.7999654Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T23:09:02.7999875Z 
2025-08-16T23:09:02.7999988Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T23:09:02.8000183Z 
2025-08-16T23:09:02.8000303Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T23:09:02.8000499Z 
2025-08-16T23:09:02.8000594Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T23:09:02.8000783Z 
2025-08-16T23:09:02.8000950Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T23:09:02.8001194Z 
2025-08-16T23:09:02.8001580Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T23:09:02.8002119Z 
2025-08-16T23:09:02.8002249Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T23:09:02.8002457Z 
2025-08-16T23:09:02.8002570Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T23:09:02.8002754Z 
2025-08-16T23:09:02.8002870Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T23:09:02.8003069Z 
2025-08-16T23:09:02.8003171Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T23:09:02.8003348Z 
2025-08-16T23:09:02.8003470Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T23:09:02.8003678Z 
2025-08-16T23:09:02.8003787Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T23:09:02.8003973Z 
2025-08-16T23:09:02.8004092Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T23:09:02.8004292Z 
2025-08-16T23:09:02.8004401Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T23:09:02.8004591Z 
2025-08-16T23:09:02.8004713Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T23:09:02.8005123Z 
2025-08-16T23:09:02.8005226Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T23:09:02.8005415Z 
2025-08-16T23:09:02.8005534Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T23:09:02.8005734Z 
2025-08-16T23:09:02.8005844Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T23:09:02.8006025Z 
2025-08-16T23:09:02.8006133Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T23:09:02.8006333Z 
2025-08-16T23:09:02.8006428Z # api.migrations.versions.0001\_baseline
2025-08-16T23:09:02.8006597Z 
2025-08-16T23:09:02.8006686Z <a id="api.migrations.versions"></a>
2025-08-16T23:09:02.8006850Z 
2025-08-16T23:09:02.8006934Z # api.migrations.versions
2025-08-16T23:09:02.8007070Z 
2025-08-16T23:09:02.8007155Z <a id="api.migrations"></a>
2025-08-16T23:09:02.8007295Z 
2025-08-16T23:09:02.8007364Z # api.migrations
2025-08-16T23:09:02.8007478Z 
2025-08-16T23:09:02.8007546Z <a id="api.db"></a>
2025-08-16T23:09:02.8007655Z 
2025-08-16T23:09:02.8007726Z # api.db
2025-08-16T23:09:02.8007820Z 
2025-08-16T23:09:02.8007901Z <a id="api.routes.stats"></a>
2025-08-16T23:09:02.8008043Z 
2025-08-16T23:09:02.8008119Z # api.routes.stats
2025-08-16T23:09:02.8008224Z 
2025-08-16T23:09:02.8008313Z <a id="api.routes.stats.kpi"></a>
2025-08-16T23:09:02.8008469Z 
2025-08-16T23:09:02.8008531Z #### kpi
2025-08-16T23:09:02.8008615Z 
2025-08-16T23:09:02.8008680Z ```python
2025-08-16T23:09:02.8008855Z @router.get("/stats/kpi")
2025-08-16T23:09:02.8009103Z def kpi() -> List[Dict[str, int]]
2025-08-16T23:09:02.8009319Z ```
2025-08-16T23:09:02.8009405Z 
2025-08-16T23:09:02.8009490Z Return KPI metrics (mock).
2025-08-16T23:09:02.8009621Z 
2025-08-16T23:09:02.8009722Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T23:09:02.8009902Z 
2025-08-16T23:09:02.8009980Z #### roi\_by\_vendor
2025-08-16T23:09:02.8010091Z 
2025-08-16T23:09:02.8010156Z ```python
2025-08-16T23:09:02.8010338Z @router.get("/stats/roi_by_vendor")
2025-08-16T23:09:02.8010588Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T23:09:02.8010827Z ```
2025-08-16T23:09:02.8010911Z 
2025-08-16T23:09:02.8010999Z Return ROI percent by vendor.
2025-08-16T23:09:02.8011138Z 
2025-08-16T23:09:02.8011229Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T23:09:02.8011581Z 
2025-08-16T23:09:02.8011657Z #### roi\_trend
2025-08-16T23:09:02.8011758Z 
2025-08-16T23:09:02.8011822Z ```python
2025-08-16T23:09:02.8011998Z @router.get("/stats/roi_trend")
2025-08-16T23:09:02.8012234Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T23:09:02.8012472Z ```
2025-08-16T23:09:02.8012551Z 
2025-08-16T23:09:02.8012631Z Return 30-day ROI trend.
2025-08-16T23:09:02.8012760Z 
2025-08-16T23:09:02.8012842Z <a id="api.routes.roi"></a>
2025-08-16T23:09:02.8012976Z 
2025-08-16T23:09:02.8013049Z # api.routes.roi
2025-08-16T23:09:02.8013171Z 
2025-08-16T23:09:02.8013260Z <a id="api.routes.health"></a>
2025-08-16T23:09:02.8013464Z 
2025-08-16T23:09:02.8013537Z # api.routes.health
2025-08-16T23:09:02.8013652Z 
2025-08-16T23:09:02.8013749Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T23:09:02.8014054Z 
2025-08-16T23:09:02.8014118Z #### MAX\_SKEW
2025-08-16T23:09:02.8014222Z 
2025-08-16T23:09:02.8014282Z seconds
2025-08-16T23:09:02.8014365Z 
2025-08-16T23:09:02.8014461Z <a id="api.routes.health.health"></a>
2025-08-16T23:09:02.8014619Z 
2025-08-16T23:09:02.8014681Z #### health
2025-08-16T23:09:02.8014770Z 
2025-08-16T23:09:02.8014841Z ```python
2025-08-16T23:09:02.8015037Z @router.get("/health", include_in_schema=False)
2025-08-16T23:09:02.8015418Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T23:09:02.8015760Z ```
2025-08-16T23:09:02.8015848Z 
2025-08-16T23:09:02.8015965Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T23:09:02.8016162Z 
2025-08-16T23:09:02.8016259Z <a id="api.routes.repository"></a>
2025-08-16T23:09:02.8016413Z 
2025-08-16T23:09:02.8016492Z # api.routes.repository
2025-08-16T23:09:02.8016620Z 
2025-08-16T23:09:02.8016694Z <a id="api.routes"></a>
2025-08-16T23:09:02.8016966Z 
2025-08-16T23:09:02.8017031Z # api.routes
2025-08-16T23:09:02.8017132Z 
2025-08-16T23:09:02.8017212Z <a id="api.models.fee"></a>
2025-08-16T23:09:02.8017343Z 
2025-08-16T23:09:02.8017413Z # api.models.fee
2025-08-16T23:09:02.8017517Z 
2025-08-16T23:09:02.8017589Z <a id="api.models"></a>
2025-08-16T23:09:02.8017712Z 
2025-08-16T23:09:02.8017782Z # api.models
2025-08-16T23:09:02.8017875Z 
2025-08-16T23:09:02.8017955Z <a id="api.roi_repository"></a>
2025-08-16T23:09:02.8018159Z 
2025-08-16T23:09:02.8018231Z # api.roi\_repository
2025-08-16T23:09:02.8018347Z 
2025-08-16T23:09:02.8018423Z <a id="api.main"></a>
2025-08-16T23:09:02.8018533Z 
2025-08-16T23:09:02.8018596Z # api.main
2025-08-16T23:09:02.8018689Z 
2025-08-16T23:09:02.8018773Z <a id="api.main.ready"></a>
2025-08-16T23:09:02.8018901Z 
2025-08-16T23:09:02.8018967Z #### ready
2025-08-16T23:09:02.8019063Z 
2025-08-16T23:09:02.8019126Z ```python
2025-08-16T23:09:02.8019384Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T23:09:02.8019827Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T23:09:02.8020181Z                                                                       str]
2025-08-16T23:09:02.8020409Z ```
2025-08-16T23:09:02.8020490Z 
2025-08-16T23:09:02.8020591Z Return 200 only when migrations are at head.
2025-08-16T23:09:02.8020763Z 
2025-08-16T23:09:02.8020836Z <a id="api.config"></a>
2025-08-16T23:09:02.8020958Z 
2025-08-16T23:09:02.8021022Z # api.config
2025-08-16T23:09:02.8021116Z 
2025-08-16T23:09:02.8021187Z <a id="etl"></a>
2025-08-16T23:09:02.8021467Z 
2025-08-16T23:09:02.8021536Z # etl
2025-08-16T23:09:02.8021630Z 
2025-08-16T23:09:02.8021720Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T23:09:02.8021874Z 
2025-08-16T23:09:02.8021951Z # etl.fba\_fee\_ingestor
2025-08-16T23:09:02.8022079Z 
2025-08-16T23:09:02.8022159Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T23:09:02.8022303Z 
2025-08-16T23:09:02.8022377Z # etl.sp\_fees\_ingestor
2025-08-16T23:09:02.8022512Z 
2025-08-16T23:09:02.8022594Z <a id="etl.keepa_ingestor"></a>
2025-08-16T23:09:02.8022739Z 
2025-08-16T23:09:02.8022818Z # etl.keepa\_ingestor
2025-08-16T23:09:02.8022931Z 
2025-08-16T23:09:02.8022999Z <a id="etl.db"></a>
2025-08-16T23:09:02.8023109Z 
2025-08-16T23:09:02.8023172Z # etl.db
2025-08-16T23:09:02.8023262Z 
2025-08-16T23:09:02.8023372Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T23:09:02.8023571Z 
2025-08-16T23:09:02.8023662Z # etl.dialects.amazon\_reimbursements
2025-08-16T23:09:02.8023822Z 
2025-08-16T23:09:02.8023918Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T23:09:02.8024085Z 
2025-08-16T23:09:02.8024167Z # etl.dialects.amazon\_returns
2025-08-16T23:09:02.8024312Z 
2025-08-16T23:09:02.8024387Z <a id="etl.dialects"></a>
2025-08-16T23:09:02.8024512Z 
2025-08-16T23:09:02.8024575Z # etl.dialects
2025-08-16T23:09:02.8024677Z 
2025-08-16T23:09:02.8024755Z <a id="ingest"></a>
2025-08-16T23:09:02.8024862Z 
2025-08-16T23:09:02.8024924Z # ingest
2025-08-16T23:09:02.8025020Z 
2025-08-16T23:09:02.8025250Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T23:09:02.8025412Z 
2025-08-16T23:09:02.8025492Z # ingest.tests.test\_smoke
2025-08-16T23:09:02.8025627Z 
2025-08-16T23:09:02.8025703Z <a id="ingest.tests"></a>
2025-08-16T23:09:02.8025827Z 
2025-08-16T23:09:02.8025898Z # ingest.tests
2025-08-16T23:09:02.8025996Z 
2025-08-16T23:09:02.8026080Z <a id="ingest.upload_router"></a>
2025-08-16T23:09:02.8026229Z 
2025-08-16T23:09:02.8026311Z # ingest.upload\_router
2025-08-16T23:09:02.8026430Z 
2025-08-16T23:09:02.8026512Z <a id="ingest.email_watcher"></a>
2025-08-16T23:09:02.8026661Z 
2025-08-16T23:09:02.8026733Z # ingest.email\_watcher
2025-08-16T23:09:02.8026848Z 
2025-08-16T23:09:02.8026940Z <a id="ingest.email_watcher.main"></a>
2025-08-16T23:09:02.8027099Z 
2025-08-16T23:09:02.8027165Z #### main
2025-08-16T23:09:02.8027255Z 
2025-08-16T23:09:02.8027325Z ```python
2025-08-16T23:09:02.8027495Z def main() -> dict[str, str]
2025-08-16T23:09:02.8027695Z ```
2025-08-16T23:09:02.8027780Z 
2025-08-16T23:09:02.8028042Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T23:09:02.8028275Z 
2025-08-16T23:09:02.8028403Z Returns {"status": "success"} when processing completes.
2025-08-16T23:09:02.8028610Z 
2025-08-16T23:09:02.8028701Z <a id="ingest.ingest_router"></a>
2025-08-16T23:09:02.8028847Z 
2025-08-16T23:09:02.8028921Z # ingest.ingest\_router
2025-08-16T23:09:02.8029044Z 
2025-08-16T23:09:02.8029121Z <a id="logistics_etl"></a>
2025-08-16T23:09:02.8029248Z 
2025-08-16T23:09:02.8029315Z # logistics\_etl
2025-08-16T23:09:02.8029427Z 
2025-08-16T23:09:02.8029504Z Daily logistics ETL job.
2025-08-16T23:09:02.8029627Z 
2025-08-16T23:09:02.8029713Z <a id="logistics_etl.__main__"></a>
2025-08-16T23:09:02.8029865Z 
2025-08-16T23:09:02.8029943Z # logistics\_etl.\_\_main\_\_
2025-08-16T23:09:02.8030078Z 
2025-08-16T23:09:02.8030326Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T23:09:02.8030570Z 
2025-08-16T23:09:02.8030723Z # logistics\_etl.tests.conftest
2025-08-16T23:09:02.8030880Z 
2025-08-16T23:09:02.8030982Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T23:09:02.8031164Z 
2025-08-16T23:09:02.8031254Z # logistics\_etl.tests.test\_repository
2025-08-16T23:09:02.8031580Z 
2025-08-16T23:09:02.8031675Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T23:09:02.8031843Z 
2025-08-16T23:09:02.8031928Z # logistics\_etl.tests.test\_cron
2025-08-16T23:09:02.8032074Z 
2025-08-16T23:09:02.8032172Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T23:09:02.8032349Z 
2025-08-16T23:09:02.8032433Z # logistics\_etl.tests.test\_imports
2025-08-16T23:09:02.8032586Z 
2025-08-16T23:09:02.8032682Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T23:09:02.8032850Z 
2025-08-16T23:09:02.8032932Z # logistics\_etl.tests.test\_smoke
2025-08-16T23:09:02.8033083Z 
2025-08-16T23:09:02.8033183Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T23:09:02.8033349Z 
2025-08-16T23:09:02.8033431Z # logistics\_etl.tests.test\_client
2025-08-16T23:09:02.8033585Z 
2025-08-16T23:09:02.8033672Z <a id="logistics_etl.tests"></a>
2025-08-16T23:09:02.8033818Z 
2025-08-16T23:09:02.8033893Z # logistics\_etl.tests
2025-08-16T23:09:02.8034009Z 
2025-08-16T23:09:02.8034094Z <a id="logistics_etl.flow"></a>
2025-08-16T23:09:02.8034230Z 
2025-08-16T23:09:02.8034306Z # logistics\_etl.flow
2025-08-16T23:09:02.8034419Z 
2025-08-16T23:09:02.8034500Z <a id="logistics_etl.client"></a>
2025-08-16T23:09:02.8034650Z 
2025-08-16T23:09:02.8034725Z # logistics\_etl.client
2025-08-16T23:09:02.8034843Z 
2025-08-16T23:09:02.8034925Z <a id="logistics_etl.cron"></a>
2025-08-16T23:09:02.8035058Z 
2025-08-16T23:09:02.8035130Z # logistics\_etl.cron
2025-08-16T23:09:02.8035240Z 
2025-08-16T23:09:02.8035324Z <a id="logistics_etl.db"></a>
2025-08-16T23:09:02.8035458Z 
2025-08-16T23:09:02.8035527Z # logistics\_etl.db
2025-08-16T23:09:02.8035641Z 
2025-08-16T23:09:02.8035729Z <a id="logistics_etl.repository"></a>
2025-08-16T23:09:02.8035883Z 
2025-08-16T23:09:02.8035961Z # logistics\_etl.repository
2025-08-16T23:09:02.8036102Z 
2025-08-16T23:09:02.8036298Z <a id="alert_bot"></a>
2025-08-16T23:09:02.8036413Z 
2025-08-16T23:09:02.8036482Z # alert\_bot
2025-08-16T23:09:02.8036578Z 
2025-08-16T23:09:02.8036664Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T23:09:02.8036828Z 
2025-08-16T23:09:02.8036909Z # alert\_bot.tests.test\_smoke
2025-08-16T23:09:02.8037044Z 
2025-08-16T23:09:02.8037121Z <a id="alert_bot.tests"></a>
2025-08-16T23:09:02.8037259Z 
2025-08-16T23:09:02.8037326Z # alert\_bot.tests
2025-08-16T23:09:02.8037431Z 
2025-08-16T23:09:02.8037517Z <a id="alert_bot.alert_bot"></a>
2025-08-16T23:09:02.8037657Z 
2025-08-16T23:09:02.8037730Z # alert\_bot.alert\_bot
2025-08-16T23:09:02.8037851Z 
2025-08-16T23:09:02.8037928Z <a id="alert_bot.rules"></a>
2025-08-16T23:09:02.8038055Z 
2025-08-16T23:09:02.8038122Z # alert\_bot.rules
2025-08-16T23:09:02.8038239Z 
2025-08-16T23:09:02.8038305Z <a id="common"></a>
2025-08-16T23:09:02.8038412Z 
2025-08-16T23:09:02.8038478Z # common
2025-08-16T23:09:02.8038567Z 
2025-08-16T23:09:02.8038749Z <a id="common.dsn"></a>
2025-08-16T23:09:02.8038866Z 
2025-08-16T23:09:02.8038939Z # common.dsn
2025-08-16T23:09:02.8039034Z 
2025-08-16T23:09:02.8039115Z <a id="common.dsn.build_dsn"></a>
2025-08-16T23:09:02.8039265Z 
2025-08-16T23:09:02.8039331Z #### build\_dsn
2025-08-16T23:09:02.8039430Z 
2025-08-16T23:09:02.8039499Z ```python
2025-08-16T23:09:02.8039667Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:09:02.8039889Z ```
2025-08-16T23:09:02.8039974Z 
2025-08-16T23:09:02.8040094Z Return a Postgres DSN, validating required variables.
2025-08-16T23:09:02.8040302Z 
2025-08-16T23:09:02.8040497Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T23:09:02.8040946Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T23:09:02.8041567Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T23:09:02.8041887Z missing.
2025-08-16T23:09:02.8041976Z 
2025-08-16T23:09:02.8042058Z <a id="common.models_vendor"></a>
2025-08-16T23:09:02.8042215Z 
2025-08-16T23:09:02.8042296Z # common.models\_vendor
2025-08-16T23:09:02.8042415Z 
2025-08-16T23:09:02.8042505Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T23:09:02.8042679Z 
2025-08-16T23:09:02.8042744Z ## Vendor Objects
2025-08-16T23:09:02.8042848Z 
2025-08-16T23:09:02.8042911Z ```python
2025-08-16T23:09:02.8043069Z class Vendor(Base)
2025-08-16T23:09:02.8043244Z ```
2025-08-16T23:09:02.8043326Z 
2025-08-16T23:09:02.8043410Z Vendor of inventory items.
2025-08-16T23:09:02.8043539Z 
2025-08-16T23:09:02.8043641Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T23:09:02.8043825Z 
2025-08-16T23:09:02.8043897Z ## VendorPrice Objects
2025-08-16T23:09:02.8044018Z 
2025-08-16T23:09:02.8044078Z ```python
2025-08-16T23:09:02.8044243Z class VendorPrice(Base)
2025-08-16T23:09:02.8044420Z ```
2025-08-16T23:09:02.8044500Z 
2025-08-16T23:09:02.8044600Z Association table linking vendors to pricing.
2025-08-16T23:09:02.8044777Z 
2025-08-16T23:09:02.8044857Z <a id="common.db_url"></a>
2025-08-16T23:09:02.8044989Z 
2025-08-16T23:09:02.8045055Z # common.db\_url
2025-08-16T23:09:02.8045164Z 
2025-08-16T23:09:02.8045247Z <a id="common.db_url.build_url"></a>
2025-08-16T23:09:02.8045402Z 
2025-08-16T23:09:02.8045465Z #### build\_url
2025-08-16T23:09:02.8045570Z 
2025-08-16T23:09:02.8045632Z ```python
2025-08-16T23:09:02.8045808Z def build_url(async_: bool = True) -> str
2025-08-16T23:09:02.8046037Z ```
2025-08-16T23:09:02.8046118Z 
2025-08-16T23:09:02.8046222Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:09:02.8046395Z 
2025-08-16T23:09:02.8046473Z <a id="common.keepa"></a>
2025-08-16T23:09:02.8046607Z 
2025-08-16T23:09:02.8046674Z # common.keepa
2025-08-16T23:09:02.8046775Z 
2025-08-16T23:09:02.8046848Z <a id="common.llm"></a>
2025-08-16T23:09:02.8046970Z 
2025-08-16T23:09:02.8047033Z # common.llm
2025-08-16T23:09:02.8047126Z 
2025-08-16T23:09:02.8047213Z <a id="common.settings"></a>
2025-08-16T23:09:02.8047349Z 
2025-08-16T23:09:02.8047416Z # common.settings
2025-08-16T23:09:02.8047656Z 
2025-08-16T23:09:02.8047727Z <a id="common.db"></a>
2025-08-16T23:09:02.8047842Z 
2025-08-16T23:09:02.8047906Z # common.db
2025-08-16T23:09:02.8048002Z 
2025-08-16T23:09:02.8048094Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T23:09:02.8048268Z 
2025-08-16T23:09:02.8048351Z #### build\_sqlalchemy\_url
2025-08-16T23:09:02.8048479Z 
2025-08-16T23:09:02.8048543Z ```python
2025-08-16T23:09:02.8048718Z def build_sqlalchemy_url() -> str
2025-08-16T23:09:02.8048921Z ```
2025-08-16T23:09:02.8049010Z 
2025-08-16T23:09:02.8049106Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:09:02.8049273Z 
2025-08-16T23:09:02.8049363Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T23:09:02.8049536Z 
2025-08-16T23:09:02.8049608Z #### build\_asyncpg\_dsn
2025-08-16T23:09:02.8049730Z 
2025-08-16T23:09:02.8049799Z ```python
2025-08-16T23:09:02.8049964Z def build_asyncpg_dsn() -> str
2025-08-16T23:09:02.8050162Z ```
2025-08-16T23:09:02.8050242Z 
2025-08-16T23:09:02.8050370Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:09:02.8050717Z 
2025-08-16T23:09:02.8050803Z <a id="common.db.refresh_mvs"></a>
2025-08-16T23:09:02.8050957Z 
2025-08-16T23:09:02.8051028Z #### refresh\_mvs
2025-08-16T23:09:02.8051131Z 
2025-08-16T23:09:02.8051192Z ```python
2025-08-16T23:09:02.8051562Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:09:02.8051818Z ```
2025-08-16T23:09:02.8051902Z 
2025-08-16T23:09:02.8052037Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:09:02.8052254Z 
2025-08-16T23:09:02.8052331Z <a id="common.config"></a>
2025-08-16T23:09:02.8052463Z 
2025-08-16T23:09:02.8052534Z # common.config
2025-08-16T23:09:02.8052636Z 
2025-08-16T23:09:02.8052713Z <a id="common.base"></a>
2025-08-16T23:09:02.8052832Z 
2025-08-16T23:09:02.8052896Z # common.base
2025-08-16T23:09:02.8052991Z 
2025-08-16T23:09:02.8053079Z <a id="common.base.Base"></a>
2025-08-16T23:09:02.8053216Z 
2025-08-16T23:09:02.8053281Z ## Base Objects
2025-08-16T23:09:02.8053387Z 
2025-08-16T23:09:02.8053455Z ```python
2025-08-16T23:09:02.8053616Z class Base(DeclarativeBase)
2025-08-16T23:09:02.8053810Z ```
2025-08-16T23:09:02.8053890Z 
2025-08-16T23:09:02.8054030Z Base class for SQLAlchemy models.
2025-08-16T23:09:02.8054303Z 
2025-08-16T23:09:02.8054427Z <a id="repricer"></a>
2025-08-16T23:09:02.8054627Z 
2025-08-16T23:09:02.8054741Z # repricer
2025-08-16T23:09:02.8054894Z 
2025-08-16T23:09:02.8055044Z <a id="repricer.app.schemas"></a>
2025-08-16T23:09:02.8055314Z 
2025-08-16T23:09:02.8055440Z # repricer.app.schemas
2025-08-16T23:09:02.8055648Z 
2025-08-16T23:09:02.8055794Z <a id="repricer.app.deps"></a>
2025-08-16T23:09:02.8056037Z 
2025-08-16T23:09:02.8056161Z # repricer.app.deps
2025-08-16T23:09:02.8056349Z 
2025-08-16T23:09:02.8056546Z Placeholder module for Keepa / SP-API clients.
2025-08-16T23:09:02.8056868Z 
2025-08-16T23:09:02.8057007Z <a id="repricer.app.logic"></a>
2025-08-16T23:09:02.8057261Z 
2025-08-16T23:09:02.8057384Z # repricer.app.logic
2025-08-16T23:09:02.8057579Z 
2025-08-16T23:09:02.8057761Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T23:09:02.8058068Z 
2025-08-16T23:09:02.8058177Z #### MIN\_MARGIN
2025-08-16T23:09:02.8058330Z 
2025-08-16T23:09:02.8058400Z 15 % ROI
2025-08-16T23:09:02.8058487Z 
2025-08-16T23:09:02.8058592Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T23:09:02.8058779Z 
2025-08-16T23:09:02.8058847Z #### compute\_price
2025-08-16T23:09:02.8058953Z 
2025-08-16T23:09:02.8059016Z ```python
2025-08-16T23:09:02.8059347Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T23:09:02.8059866Z ```
2025-08-16T23:09:02.8060009Z 
2025-08-16T23:09:02.8060189Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T23:09:02.8060603Z Replace with real competitive logic later.
2025-08-16T23:09:02.8060774Z 
2025-08-16T23:09:02.8060857Z <a id="repricer.app.main"></a>
2025-08-16T23:09:02.8061007Z 
2025-08-16T23:09:02.8061079Z # repricer.app.main
2025-08-16T23:09:02.8061187Z 
2025-08-16T23:09:02.8061273Z <a id="repricer.app"></a>
2025-08-16T23:09:02.8061743Z 
2025-08-16T23:09:02.8061814Z # repricer.app
2025-08-16T23:09:02.8061918Z 
2025-08-16T23:09:02.8062021Z <a id="repricer.tests.test_imports"></a>
2025-08-16T23:09:02.8062196Z 
2025-08-16T23:09:02.8062280Z # repricer.tests.test\_imports
2025-08-16T23:09:02.8062427Z 
2025-08-16T23:09:02.8062516Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T23:09:02.8062677Z 
2025-08-16T23:09:02.8062761Z # repricer.tests.test\_smoke
2025-08-16T23:09:02.8062908Z 
2025-08-16T23:09:02.8062987Z <a id="repricer.tests"></a>
2025-08-16T23:09:02.8063126Z 
2025-08-16T23:09:02.8063237Z # repricer.tests
2025-08-16T23:09:02.8063352Z 
2025-08-16T23:09:02.8063416Z <a id="db"></a>
2025-08-16T23:09:02.8063516Z 
2025-08-16T23:09:02.8063577Z # db
2025-08-16T23:09:02.8063669Z 
2025-08-16T23:09:02.8063745Z <a id="db.utils.views"></a>
2025-08-16T23:09:02.8063873Z 
2025-08-16T23:09:02.8063947Z # db.utils.views
2025-08-16T23:09:02.8064049Z 
2025-08-16T23:09:02.8064144Z <a id="db.utils.views.replace_view"></a>
2025-08-16T23:09:02.8064474Z 
2025-08-16T23:09:02.8064547Z #### replace\_view
2025-08-16T23:09:02.8064654Z 
2025-08-16T23:09:02.8064718Z ```python
2025-08-16T23:09:02.8064924Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T23:09:02.8065172Z ```
2025-08-16T23:09:02.8065263Z 
2025-08-16T23:09:02.8065355Z Drop and recreate a SQL view atomically.
2025-08-16T23:09:02.8065520Z 
2025-08-16T23:09:02.8065597Z <a id="db.utils"></a>
2025-08-16T23:09:02.8065710Z 
2025-08-16T23:09:02.8065773Z # db.utils
2025-08-16T23:09:02.8065867Z 
2025-08-16T23:09:02.8065954Z <a id="price_importer"></a>
2025-08-16T23:09:02.8066090Z 
2025-08-16T23:09:02.8066159Z # price\_importer
2025-08-16T23:09:02.8066275Z 
2025-08-16T23:09:02.8066382Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T23:09:02.8066570Z 
2025-08-16T23:09:02.8066667Z # price\_importer.services\_common.dsn
2025-08-16T23:09:02.8066831Z 
2025-08-16T23:09:02.8066957Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T23:09:02.8067170Z 
2025-08-16T23:09:02.8067243Z #### build\_dsn
2025-08-16T23:09:02.8067343Z 
2025-08-16T23:09:02.8067406Z ```python
2025-08-16T23:09:02.8067588Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:09:02.8067812Z ```
2025-08-16T23:09:02.8067904Z 
2025-08-16T23:09:02.8067970Z Return safe DSN.
2025-08-16T23:09:02.8068075Z 
2025-08-16T23:09:02.8068423Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T23:09:02.8068629Z 
2025-08-16T23:09:02.8068756Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T23:09:02.8068967Z 
2025-08-16T23:09:02.8069076Z # price\_importer.services\_common.models\_vendor
2025-08-16T23:09:02.8069265Z 
2025-08-16T23:09:02.8069372Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T23:09:02.8069563Z 
2025-08-16T23:09:02.8069659Z # price\_importer.services\_common.db\_url
2025-08-16T23:09:02.8069830Z 
2025-08-16T23:09:02.8069968Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T23:09:02.8070180Z 
2025-08-16T23:09:02.8070254Z #### build\_url
2025-08-16T23:09:02.8070365Z 
2025-08-16T23:09:02.8070430Z ```python
2025-08-16T23:09:02.8070604Z def build_url(async_: bool = True) -> str
2025-08-16T23:09:02.8070833Z ```
2025-08-16T23:09:02.8070918Z 
2025-08-16T23:09:02.8071021Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:09:02.8071194Z 
2025-08-16T23:09:02.8071479Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T23:09:02.8071713Z 
2025-08-16T23:09:02.8071813Z # price\_importer.services\_common.keepa
2025-08-16T23:09:02.8071980Z 
2025-08-16T23:09:02.8072080Z <a id="price_importer.services_common.llm"></a>
2025-08-16T23:09:02.8072264Z 
2025-08-16T23:09:02.8072353Z # price\_importer.services\_common.llm
2025-08-16T23:09:02.8072514Z 
2025-08-16T23:09:02.8072631Z <a id="price_importer.services_common.settings"></a>
2025-08-16T23:09:02.8072823Z 
2025-08-16T23:09:02.8072918Z # price\_importer.services\_common.settings
2025-08-16T23:09:02.8073087Z 
2025-08-16T23:09:02.8073194Z <a id="price_importer.services_common.db"></a>
2025-08-16T23:09:02.8073508Z 
2025-08-16T23:09:02.8073596Z # price\_importer.services\_common.db
2025-08-16T23:09:02.8073763Z 
2025-08-16T23:09:02.8073925Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T23:09:02.8074169Z 
2025-08-16T23:09:02.8074251Z #### build\_sqlalchemy\_url
2025-08-16T23:09:02.8074383Z 
2025-08-16T23:09:02.8074449Z ```python
2025-08-16T23:09:02.8074625Z def build_sqlalchemy_url() -> str
2025-08-16T23:09:02.8074830Z ```
2025-08-16T23:09:02.8074917Z 
2025-08-16T23:09:02.8075014Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:09:02.8075183Z 
2025-08-16T23:09:02.8075328Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T23:09:02.8075570Z 
2025-08-16T23:09:02.8075647Z #### build\_asyncpg\_dsn
2025-08-16T23:09:02.8075772Z 
2025-08-16T23:09:02.8075841Z ```python
2025-08-16T23:09:02.8076014Z def build_asyncpg_dsn() -> str
2025-08-16T23:09:02.8076218Z ```
2025-08-16T23:09:02.8076300Z 
2025-08-16T23:09:02.8076426Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:09:02.8076757Z 
2025-08-16T23:09:02.8076889Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T23:09:02.8077097Z 
2025-08-16T23:09:02.8077170Z #### refresh\_mvs
2025-08-16T23:09:02.8077273Z 
2025-08-16T23:09:02.8077336Z ```python
2025-08-16T23:09:02.8077535Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:09:02.8077779Z ```
2025-08-16T23:09:02.8077865Z 
2025-08-16T23:09:02.8078000Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:09:02.8078213Z 
2025-08-16T23:09:02.8078310Z <a id="price_importer.services_common"></a>
2025-08-16T23:09:02.8078487Z 
2025-08-16T23:09:02.8078578Z # price\_importer.services\_common
2025-08-16T23:09:02.8078732Z 
2025-08-16T23:09:02.8078843Z <a id="price_importer.services_common.base"></a>
2025-08-16T23:09:02.8079026Z 
2025-08-16T23:09:02.8079118Z # price\_importer.services\_common.base
2025-08-16T23:09:02.8079288Z 
2025-08-16T23:09:02.8079381Z <a id="price_importer.normaliser"></a>
2025-08-16T23:09:02.8079552Z 
2025-08-16T23:09:02.8079673Z # price\_importer.normaliser
2025-08-16T23:09:02.8079818Z 
2025-08-16T23:09:02.8079924Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T23:09:02.8080107Z 
2025-08-16T23:09:02.8080202Z # price\_importer.common.models\_vendor
2025-08-16T23:09:02.8080364Z 
2025-08-16T23:09:02.8080456Z <a id="price_importer.common.db_url"></a>
2025-08-16T23:09:02.8080630Z 
2025-08-16T23:09:02.8080716Z # price\_importer.common.db\_url
2025-08-16T23:09:02.8080863Z 
2025-08-16T23:09:02.8080969Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T23:09:02.8081159Z 
2025-08-16T23:09:02.8081222Z #### make\_dsn
2025-08-16T23:09:02.8081523Z 
2025-08-16T23:09:02.8081602Z ```python
2025-08-16T23:09:02.8081779Z def make_dsn(async_: bool = False) -> str
2025-08-16T23:09:02.8082010Z ```
2025-08-16T23:09:02.8082093Z 
2025-08-16T23:09:02.8082211Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T23:09:02.8082414Z 
2025-08-16T23:09:02.8082532Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T23:09:02.8082723Z 
2025-08-16T23:09:02.8082789Z #### build\_url
2025-08-16T23:09:02.8082896Z 
2025-08-16T23:09:02.8082960Z ```python
2025-08-16T23:09:02.8083142Z def build_url(async_: bool = False) -> str
2025-08-16T23:09:02.8083366Z ```
2025-08-16T23:09:02.8083446Z 
2025-08-16T23:09:02.8083573Z Return Postgres DSN built from environment variables.
2025-08-16T23:09:02.8083771Z 
2025-08-16T23:09:02.8083858Z <a id="price_importer.common"></a>
2025-08-16T23:09:02.8084017Z 
2025-08-16T23:09:02.8084096Z # price\_importer.common
2025-08-16T23:09:02.8084224Z 
2025-08-16T23:09:02.8084318Z <a id="price_importer.common.base"></a>
2025-08-16T23:09:02.8084482Z 
2025-08-16T23:09:02.8084566Z # price\_importer.common.base
2025-08-16T23:09:02.8084707Z 
2025-08-16T23:09:02.8084808Z <a id="price_importer.tests.conftest"></a>
2025-08-16T23:09:02.8084978Z 
2025-08-16T23:09:02.8085065Z # price\_importer.tests.conftest
2025-08-16T23:09:02.8085216Z 
2025-08-16T23:09:02.8085458Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T23:09:02.8085636Z 
2025-08-16T23:09:02.8085728Z # price\_importer.tests.test\_reader
2025-08-16T23:09:02.8085886Z 
2025-08-16T23:09:02.8085987Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T23:09:02.8086161Z 
2025-08-16T23:09:02.8086256Z # price\_importer.tests.test\_imports
2025-08-16T23:09:02.8086414Z 
2025-08-16T23:09:02.8086510Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T23:09:02.8086693Z 
2025-08-16T23:09:02.8086783Z # price\_importer.tests.test\_smoke
2025-08-16T23:09:02.8086939Z 
2025-08-16T23:09:02.8087052Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T23:09:02.8087237Z 
2025-08-16T23:09:02.8087329Z # price\_importer.tests.test\_normaliser
2025-08-16T23:09:02.8087493Z 
2025-08-16T23:09:02.8087584Z <a id="price_importer.tests"></a>
2025-08-16T23:09:02.8087735Z 
2025-08-16T23:09:02.8087817Z # price\_importer.tests
2025-08-16T23:09:02.8087945Z 
2025-08-16T23:09:02.8088030Z <a id="price_importer.reader"></a>
2025-08-16T23:09:02.8088294Z 
2025-08-16T23:09:02.8088378Z # price\_importer.reader
2025-08-16T23:09:02.8088503Z 
2025-08-16T23:09:02.8088601Z <a id="price_importer.reader.load_file"></a>
2025-08-16T23:09:02.8088772Z 
2025-08-16T23:09:02.8088846Z #### load\_file
2025-08-16T23:09:02.8088946Z 
2025-08-16T23:09:02.8089010Z ```python
2025-08-16T23:09:02.8089189Z def load_file(path: str | Path) -> Any
2025-08-16T23:09:02.8089406Z ```
2025-08-16T23:09:02.8089494Z 
2025-08-16T23:09:02.8089581Z Return DataFrame from CSV or Excel file.
2025-08-16T23:09:02.8089746Z 
2025-08-16T23:09:02.8089856Z Raises RuntimeError if pandas is unavailable.
2025-08-16T23:09:02.8090034Z 
2025-08-16T23:09:02.8090125Z <a id="price_importer.repository"></a>
2025-08-16T23:09:02.8090293Z 
2025-08-16T23:09:02.8090378Z # price\_importer.repository
2025-08-16T23:09:02.8090518Z 
2025-08-16T23:09:02.8090603Z <a id="price_importer.import"></a>
2025-08-16T23:09:02.8090758Z 
2025-08-16T23:09:02.8090836Z # price\_importer.import
2025-08-16T23:09:02.8090967Z 
2025-08-16T23:09:02.8091045Z <a id="fees_h10"></a>
2025-08-16T23:09:02.8091166Z 
2025-08-16T23:09:02.8091229Z # fees\_h10
2025-08-16T23:09:02.8091538Z 
2025-08-16T23:09:02.8091656Z <a id="fees_h10.worker"></a>
2025-08-16T23:09:02.8091796Z 
2025-08-16T23:09:02.8091864Z # fees\_h10.worker
2025-08-16T23:09:02.8091976Z 
2025-08-16T23:09:02.8092057Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T23:09:02.8092214Z 
2025-08-16T23:09:02.8092302Z # fees\_h10.tests.test\_smoke
2025-08-16T23:09:02.8092437Z 
2025-08-16T23:09:02.8092512Z <a id="fees_h10.tests"></a>
2025-08-16T23:09:02.8092640Z 
2025-08-16T23:09:02.8092714Z # fees\_h10.tests
2025-08-16T23:09:02.8092818Z 
2025-08-16T23:09:02.8092892Z <a id="fees_h10.client"></a>
2025-08-16T23:09:02.8093029Z 
2025-08-16T23:09:02.8093096Z # fees\_h10.client
2025-08-16T23:09:02.8093198Z 
2025-08-16T23:09:02.8093279Z <a id="fees_h10.repository"></a>
2025-08-16T23:09:02.8093430Z 
2025-08-16T23:09:02.8093503Z # fees\_h10.repository
2025-08-16T23:09:02.8093627Z 
2025-08-16T23:09:02.8093704Z <a id="emailer"></a>
2025-08-16T23:09:02.8093816Z 
2025-08-16T23:09:02.8093879Z # emailer
2025-08-16T23:09:02.8093975Z 
2025-08-16T23:09:02.8094075Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T23:09:02.8094254Z 
2025-08-16T23:09:02.8094342Z # emailer.tests.test\_import\_emailer
2025-08-16T23:09:02.8094508Z 
2025-08-16T23:09:02.8094592Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T23:09:02.8094747Z 
2025-08-16T23:09:02.8094834Z # emailer.tests.test\_smoke
2025-08-16T23:09:02.8094967Z 
2025-08-16T23:09:02.8095046Z <a id="emailer.tests"></a>
2025-08-16T23:09:02.8095182Z 
2025-08-16T23:09:02.8095250Z # emailer.tests
2025-08-16T23:09:02.8095351Z 
2025-08-16T23:09:02.8095435Z <a id="emailer.generate_body"></a>
2025-08-16T23:09:02.8095593Z 
2025-08-16T23:09:02.8095670Z # emailer.generate\_body
2025-08-16T23:09:02.8095793Z 
2025-08-16T23:09:02.8095869Z <a id="llm_server"></a>
2025-08-16T23:09:02.8095988Z 
2025-08-16T23:09:02.8096053Z # llm\_server
2025-08-16T23:09:02.8096294Z 
2025-08-16T23:09:02.8096378Z <a id="llm_server.app"></a>
2025-08-16T23:09:02.8096507Z 
2025-08-16T23:09:02.8096574Z # llm\_server.app
2025-08-16T23:09:02.8096685Z 
