2025-08-18T22:27:44.3000229Z ##[group]Run pydoc-markdown
2025-08-18T22:27:44.3000520Z [36;1mpydoc-markdown[0m
2025-08-18T22:27:44.3040562Z shell: /usr/bin/bash -e {0}
2025-08-18T22:27:44.3040790Z env:
2025-08-18T22:27:44.3041017Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:27:44.3041430Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T22:27:44.3041837Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:27:44.3042179Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:27:44.3042533Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:27:44.3042891Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T22:27:44.3043177Z ##[endgroup]
2025-08-18T22:27:44.7084666Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T22:27:44.7085479Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T22:27:44.7085955Z In "pydoc-markdown.yml"
2025-08-18T22:27:44.7086383Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T22:27:44.7087011Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T22:27:44.7087741Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T22:27:44.7088262Z 
2025-08-18T22:27:45.0282942Z <a id="__init__"></a>
2025-08-18T22:27:45.0283356Z 
2025-08-18T22:27:45.0283480Z # \_\_init\_\_
2025-08-18T22:27:45.0283666Z 
2025-08-18T22:27:45.0283789Z <a id="api"></a>
2025-08-18T22:27:45.0283992Z 
2025-08-18T22:27:45.0284102Z # api
2025-08-18T22:27:45.0284518Z 
2025-08-18T22:27:45.0284669Z <a id="api.errors"></a>
2025-08-18T22:27:45.0284899Z 
2025-08-18T22:27:45.0285015Z # api.errors
2025-08-18T22:27:45.0285204Z 
2025-08-18T22:27:45.0285359Z <a id="api.sentry_config"></a>
2025-08-18T22:27:45.0285612Z 
2025-08-18T22:27:45.0285743Z # api.sentry\_config
2025-08-18T22:27:45.0285955Z 
2025-08-18T22:27:45.0286114Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T22:27:45.0286423Z 
2025-08-18T22:27:45.0287022Z # api.tests.test\_sentry\_scrub
2025-08-18T22:27:45.0287314Z 
2025-08-18T22:27:45.0287471Z <a id="api.tests.test_errors_json"></a>
2025-08-18T22:27:45.0287765Z 
2025-08-18T22:27:45.0287921Z # api.tests.test\_errors\_json
2025-08-18T22:27:45.0288183Z 
2025-08-18T22:27:45.0288325Z <a id="api.tests.test_llm"></a>
2025-08-18T22:27:45.0288583Z 
2025-08-18T22:27:45.0288715Z # api.tests.test\_llm
2025-08-18T22:27:45.0288930Z 
2025-08-18T22:27:45.0289089Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T22:27:45.0289398Z 
2025-08-18T22:27:45.0289541Z # api.tests.test\_sentry\_event
2025-08-18T22:27:45.0289785Z 
2025-08-18T22:27:45.0290010Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T22:27:45.0290380Z 
2025-08-18T22:27:45.0290516Z ## DummyTransport Objects
2025-08-18T22:27:45.0290751Z 
2025-08-18T22:27:45.0290862Z ```python
2025-08-18T22:27:45.0291153Z class DummyTransport()
2025-08-18T22:27:45.0291470Z ```
2025-08-18T22:27:45.0291620Z 
2025-08-18T22:27:45.0291939Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T22:27:45.0292436Z 
2025-08-18T22:27:45.0292568Z #### capture\_envelope
2025-08-18T22:27:45.0292780Z 
2025-08-18T22:27:45.0292905Z ```python
2025-08-18T22:27:45.0293213Z def capture_envelope(envelope)
2025-08-18T22:27:45.0293626Z ```
2025-08-18T22:27:45.0293772Z 
2025-08-18T22:27:45.0293991Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T22:27:45.0294594Z 
2025-08-18T22:27:45.0294744Z <a id="api.tests.test_cors"></a>
2025-08-18T22:27:45.0295008Z 
2025-08-18T22:27:45.0295153Z # api.tests.test\_cors
2025-08-18T22:27:45.0295365Z 
2025-08-18T22:27:45.0295513Z <a id="api.tests.test_imports"></a>
2025-08-18T22:27:45.0295800Z 
2025-08-18T22:27:45.0295934Z # api.tests.test\_imports
2025-08-18T22:27:45.0296159Z 
2025-08-18T22:27:45.0296311Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T22:27:45.0296608Z 
2025-08-18T22:27:45.0296753Z # api.tests.test\_rate\_limit
2025-08-18T22:27:45.0297012Z 
2025-08-18T22:27:45.0297194Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T22:27:45.0297945Z 
2025-08-18T22:27:45.0298062Z #### app
2025-08-18T22:27:45.0298221Z 
2025-08-18T22:27:45.0298340Z noqa: E402
2025-08-18T22:27:45.0298503Z 
2025-08-18T22:27:45.0298658Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T22:27:45.0298964Z 
2025-08-18T22:27:45.0299108Z # api.tests.test\_entrypoint
2025-08-18T22:27:45.0299355Z 
2025-08-18T22:27:45.0299507Z <a id="api.tests.test_health"></a>
2025-08-18T22:27:45.0299771Z 
2025-08-18T22:27:45.0299902Z # api.tests.test\_health
2025-08-18T22:27:45.0300120Z 
2025-08-18T22:27:45.0300266Z <a id="api.logging_config"></a>
2025-08-18T22:27:45.0300517Z 
2025-08-18T22:27:45.0300642Z # api.logging\_config
2025-08-18T22:27:45.0300856Z 
2025-08-18T22:27:45.0300996Z <a id="api.migrations.env"></a>
2025-08-18T22:27:45.0301249Z 
2025-08-18T22:27:45.0301381Z # api.migrations.env
2025-08-18T22:27:45.0301597Z 
2025-08-18T22:27:45.0301802Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T22:27:45.0302175Z 
2025-08-18T22:27:45.0302373Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T22:27:45.0302781Z 
2025-08-18T22:27:45.0302999Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T22:27:45.0303351Z 
2025-08-18T22:27:45.0303519Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T22:27:45.0303825Z 
2025-08-18T22:27:45.0304103Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T22:27:45.0304734Z 
2025-08-18T22:27:45.0304984Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T22:27:45.0305375Z 
2025-08-18T22:27:45.0305602Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T22:27:45.0305959Z 
2025-08-18T22:27:45.0306147Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T22:27:45.0306481Z 
2025-08-18T22:27:45.0306694Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T22:27:45.0307047Z 
2025-08-18T22:27:45.0307234Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T22:27:45.0307551Z 
2025-08-18T22:27:45.0307987Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T22:27:45.0308367Z 
2025-08-18T22:27:45.0308558Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T22:27:45.0308893Z 
2025-08-18T22:27:45.0309097Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T22:27:45.0309457Z 
2025-08-18T22:27:45.0309642Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T22:27:45.0309971Z 
2025-08-18T22:27:45.0310194Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T22:27:45.0310550Z 
2025-08-18T22:27:45.0310734Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T22:27:45.0311067Z 
2025-08-18T22:27:45.0311309Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T22:27:45.0311704Z 
2025-08-18T22:27:45.0311926Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T22:27:45.0312295Z 
2025-08-18T22:27:45.0312517Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T22:27:45.0312889Z 
2025-08-18T22:27:45.0313107Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T22:27:45.0313461Z 
2025-08-18T22:27:45.0313712Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T22:27:45.0314222Z 
2025-08-18T22:27:45.0314628Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T22:27:45.0315038Z 
2025-08-18T22:27:45.0315236Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T22:27:45.0315574Z 
2025-08-18T22:27:45.0315738Z # api.migrations.versions.0001\_baseline
2025-08-18T22:27:45.0316051Z 
2025-08-18T22:27:45.0316218Z <a id="api.migrations.versions"></a>
2025-08-18T22:27:45.0316510Z 
2025-08-18T22:27:45.0316662Z # api.migrations.versions
2025-08-18T22:27:45.0316895Z 
2025-08-18T22:27:45.0317029Z <a id="api.migrations"></a>
2025-08-18T22:27:45.0317277Z 
2025-08-18T22:27:45.0317396Z # api.migrations
2025-08-18T22:27:45.0317585Z 
2025-08-18T22:27:45.0317702Z <a id="api.db"></a>
2025-08-18T22:27:45.0317899Z 
2025-08-18T22:27:45.0318006Z # api.db
2025-08-18T22:27:45.0318164Z 
2025-08-18T22:27:45.0318323Z <a id="api.routes.stats"></a>
2025-08-18T22:27:45.0318868Z 
2025-08-18T22:27:45.0318999Z # api.routes.stats
2025-08-18T22:27:45.0319203Z 
2025-08-18T22:27:45.0319368Z <a id="api.routes.stats.kpi"></a>
2025-08-18T22:27:45.0319643Z 
2025-08-18T22:27:45.0319753Z #### kpi
2025-08-18T22:27:45.0319919Z 
2025-08-18T22:27:45.0320032Z ```python
2025-08-18T22:27:45.0320327Z @router.get("/stats/kpi")
2025-08-18T22:27:45.0320876Z def kpi() -> List[Dict[str, int]]
2025-08-18T22:27:45.0321242Z ```
2025-08-18T22:27:45.0321387Z 
2025-08-18T22:27:45.0321524Z Return KPI metrics (mock).
2025-08-18T22:27:45.0321760Z 
2025-08-18T22:27:45.0322009Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T22:27:45.0322325Z 
2025-08-18T22:27:45.0322447Z #### roi\_by\_vendor
2025-08-18T22:27:45.0322656Z 
2025-08-18T22:27:45.0322767Z ```python
2025-08-18T22:27:45.0323058Z @router.get("/stats/roi_by_vendor")
2025-08-18T22:27:45.0323499Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T22:27:45.0323904Z ```
2025-08-18T22:27:45.0324060Z 
2025-08-18T22:27:45.0324214Z Return ROI percent by vendor.
2025-08-18T22:27:45.0324641Z 
2025-08-18T22:27:45.0324819Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T22:27:45.0325126Z 
2025-08-18T22:27:45.0325244Z #### roi\_trend
2025-08-18T22:27:45.0325434Z 
2025-08-18T22:27:45.0325541Z ```python
2025-08-18T22:27:45.0325828Z @router.get("/stats/roi_trend")
2025-08-18T22:27:45.0326256Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T22:27:45.0326668Z ```
2025-08-18T22:27:45.0326812Z 
2025-08-18T22:27:45.0326942Z Return 30-day ROI trend.
2025-08-18T22:27:45.0327168Z 
2025-08-18T22:27:45.0327316Z <a id="api.routes.roi"></a>
2025-08-18T22:27:45.0327548Z 
2025-08-18T22:27:45.0327670Z # api.routes.roi
2025-08-18T22:27:45.0327864Z 
2025-08-18T22:27:45.0328009Z <a id="api.routes.health"></a>
2025-08-18T22:27:45.0328259Z 
2025-08-18T22:27:45.0328383Z # api.routes.health
2025-08-18T22:27:45.0328583Z 
2025-08-18T22:27:45.0328739Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T22:27:45.0329265Z 
2025-08-18T22:27:45.0329394Z #### MAX\_SKEW
2025-08-18T22:27:45.0329568Z 
2025-08-18T22:27:45.0329676Z seconds
2025-08-18T22:27:45.0329833Z 
2025-08-18T22:27:45.0329991Z <a id="api.routes.health.health"></a>
2025-08-18T22:27:45.0330282Z 
2025-08-18T22:27:45.0330390Z #### health
2025-08-18T22:27:45.0330560Z 
2025-08-18T22:27:45.0330669Z ```python
2025-08-18T22:27:45.0331014Z @router.get("/health", include_in_schema=False)
2025-08-18T22:27:45.0331697Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T22:27:45.0332305Z ```
2025-08-18T22:27:45.0332449Z 
2025-08-18T22:27:45.0332653Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T22:27:45.0333006Z 
2025-08-18T22:27:45.0333172Z <a id="api.routes.repository"></a>
2025-08-18T22:27:45.0333447Z 
2025-08-18T22:27:45.0333585Z # api.routes.repository
2025-08-18T22:27:45.0333824Z 
2025-08-18T22:27:45.0333955Z <a id="api.routes"></a>
2025-08-18T22:27:45.0334169Z 
2025-08-18T22:27:45.0334485Z # api.routes
2025-08-18T22:27:45.0334679Z 
2025-08-18T22:27:45.0334820Z <a id="api.models.fee"></a>
2025-08-18T22:27:45.0335057Z 
2025-08-18T22:27:45.0335182Z # api.models.fee
2025-08-18T22:27:45.0335369Z 
2025-08-18T22:27:45.0335498Z <a id="api.models"></a>
2025-08-18T22:27:45.0335722Z 
2025-08-18T22:27:45.0335837Z # api.models
2025-08-18T22:27:45.0336007Z 
2025-08-18T22:27:45.0336153Z <a id="api.roi_repository"></a>
2025-08-18T22:27:45.0336422Z 
2025-08-18T22:27:45.0336550Z # api.roi\_repository
2025-08-18T22:27:45.0336755Z 
2025-08-18T22:27:45.0336893Z <a id="api.main"></a>
2025-08-18T22:27:45.0337095Z 
2025-08-18T22:27:45.0337208Z # api.main
2025-08-18T22:27:45.0337381Z 
2025-08-18T22:27:45.0337515Z <a id="api.main.ready"></a>
2025-08-18T22:27:45.0337750Z 
2025-08-18T22:27:45.0337858Z #### ready
2025-08-18T22:27:45.0338010Z 
2025-08-18T22:27:45.0338106Z ```python
2025-08-18T22:27:45.0338535Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T22:27:45.0339280Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T22:27:45.0340153Z                                                                       str]
2025-08-18T22:27:45.0340566Z ```
2025-08-18T22:27:45.0340730Z 
2025-08-18T22:27:45.0340970Z Return 200 only when migrations are at head.
2025-08-18T22:27:45.0341297Z 
2025-08-18T22:27:45.0341430Z <a id="api.config"></a>
2025-08-18T22:27:45.0341645Z 
2025-08-18T22:27:45.0341767Z # api.config
2025-08-18T22:27:45.0341941Z 
2025-08-18T22:27:45.0342064Z <a id="etl"></a>
2025-08-18T22:27:45.0342252Z 
2025-08-18T22:27:45.0342366Z # etl
2025-08-18T22:27:45.0342514Z 
2025-08-18T22:27:45.0342658Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T22:27:45.0342933Z 
2025-08-18T22:27:45.0343062Z # etl.fba\_fee\_ingestor
2025-08-18T22:27:45.0343284Z 
2025-08-18T22:27:45.0343432Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T22:27:45.0343696Z 
2025-08-18T22:27:45.0343825Z # etl.sp\_fees\_ingestor
2025-08-18T22:27:45.0344038Z 
2025-08-18T22:27:45.0344186Z <a id="etl.keepa_ingestor"></a>
2025-08-18T22:27:45.0344679Z 
2025-08-18T22:27:45.0344810Z # etl.keepa\_ingestor
2025-08-18T22:27:45.0345025Z 
2025-08-18T22:27:45.0345142Z <a id="etl.db"></a>
2025-08-18T22:27:45.0345326Z 
2025-08-18T22:27:45.0345440Z # etl.db
2025-08-18T22:27:45.0345603Z 
2025-08-18T22:27:45.0345750Z <a id="etl.dialects.schemas"></a>
2025-08-18T22:27:45.0346015Z 
2025-08-18T22:27:45.0346151Z # etl.dialects.schemas
2025-08-18T22:27:45.0346360Z 
2025-08-18T22:27:45.0346543Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T22:27:45.0346875Z 
2025-08-18T22:27:45.0347027Z # etl.dialects.amazon\_reimbursements
2025-08-18T22:27:45.0347316Z 
2025-08-18T22:27:45.0347482Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T22:27:45.0347793Z 
2025-08-18T22:27:45.0347943Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T22:27:45.0348224Z 
2025-08-18T22:27:45.0348389Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T22:27:45.0348683Z 
2025-08-18T22:27:45.0348825Z # etl.dialects.amazon\_returns
2025-08-18T22:27:45.0349329Z 
2025-08-18T22:27:45.0349516Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T22:27:45.0349831Z 
2025-08-18T22:27:45.0349994Z # etl.dialects.amazon\_fee\_preview
2025-08-18T22:27:45.0350323Z 
2025-08-18T22:27:45.0350508Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T22:27:45.0350842Z 
2025-08-18T22:27:45.0351010Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T22:27:45.0351304Z 
2025-08-18T22:27:45.0351475Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T22:27:45.0351790Z 
2025-08-18T22:27:45.0351939Z # etl.dialects.amazon\_settlements
2025-08-18T22:27:45.0352206Z 
2025-08-18T22:27:45.0352339Z <a id="etl.dialects"></a>
2025-08-18T22:27:45.0352584Z 
2025-08-18T22:27:45.0352702Z # etl.dialects
2025-08-18T22:27:45.0352885Z 
2025-08-18T22:27:45.0353012Z <a id="ingest"></a>
2025-08-18T22:27:45.0353202Z 
2025-08-18T22:27:45.0353313Z # ingest
2025-08-18T22:27:45.0353476Z 
2025-08-18T22:27:45.0353619Z <a id="ingest.maintenance"></a>
2025-08-18T22:27:45.0353881Z 
2025-08-18T22:27:45.0354018Z # ingest.maintenance
2025-08-18T22:27:45.0354418Z 
2025-08-18T22:27:45.0354565Z <a id="ingest.copy_loader"></a>
2025-08-18T22:27:45.0354821Z 
2025-08-18T22:27:45.0354955Z # ingest.copy\_loader
2025-08-18T22:27:45.0355162Z 
2025-08-18T22:27:45.0355348Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T22:27:45.0355679Z 
2025-08-18T22:27:45.0355820Z #### copy\_df\_via\_temp
2025-08-18T22:27:45.0356041Z 
2025-08-18T22:27:45.0356163Z ```python
2025-08-18T22:27:45.0356472Z def copy_df_via_temp(engine: Engine,
2025-08-18T22:27:45.0356887Z                      df: pd.DataFrame,
2025-08-18T22:27:45.0357311Z                      target_table: str,
2025-08-18T22:27:45.0357703Z                      *,
2025-08-18T22:27:45.0358066Z                      target_schema: Optional[str] = None,
2025-08-18T22:27:45.0358532Z                      columns: Sequence[str],
2025-08-18T22:27:45.0359006Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T22:27:45.0359517Z                      analyze_after: bool = False,
2025-08-18T22:27:45.0360214Z                      connection: Any | None = None) -> int
2025-08-18T22:27:45.0360637Z ```
2025-08-18T22:27:45.0360783Z 
2025-08-18T22:27:45.0361053Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T22:27:45.0361466Z 
2025-08-18T22:27:45.0361614Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T22:27:45.0361894Z 
2025-08-18T22:27:45.0362044Z # ingest.tests.test\_smoke
2025-08-18T22:27:45.0362280Z 
2025-08-18T22:27:45.0362413Z <a id="ingest.tests"></a>
2025-08-18T22:27:45.0362645Z 
2025-08-18T22:27:45.0362759Z # ingest.tests
2025-08-18T22:27:45.0362941Z 
2025-08-18T22:27:45.0363084Z <a id="ingest.upload_router"></a>
2025-08-18T22:27:45.0363413Z 
2025-08-18T22:27:45.0363553Z # ingest.upload\_router
2025-08-18T22:27:45.0363770Z 
2025-08-18T22:27:45.0363926Z <a id="ingest.email_watcher"></a>
2025-08-18T22:27:45.0364191Z 
2025-08-18T22:27:45.0364487Z # ingest.email\_watcher
2025-08-18T22:27:45.0364716Z 
2025-08-18T22:27:45.0364888Z <a id="ingest.email_watcher.main"></a>
2025-08-18T22:27:45.0365185Z 
2025-08-18T22:27:45.0365295Z #### main
2025-08-18T22:27:45.0365459Z 
2025-08-18T22:27:45.0365570Z ```python
2025-08-18T22:27:45.0365867Z def main() -> dict[str, str]
2025-08-18T22:27:45.0366208Z ```
2025-08-18T22:27:45.0366355Z 
2025-08-18T22:27:45.0366611Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T22:27:45.0367048Z 
2025-08-18T22:27:45.0367275Z Returns {"status": "success"} when processing completes.
2025-08-18T22:27:45.0367652Z 
2025-08-18T22:27:45.0367789Z <a id="ingest.tasks"></a>
2025-08-18T22:27:45.0368024Z 
2025-08-18T22:27:45.0368139Z # ingest.tasks
2025-08-18T22:27:45.0368317Z 
2025-08-18T22:27:45.0368489Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T22:27:45.0368796Z 
2025-08-18T22:27:45.0368923Z #### task\_import\_file
2025-08-18T22:27:45.0369138Z 
2025-08-18T22:27:45.0369249Z ```python
2025-08-18T22:27:45.0369614Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T22:27:45.0370506Z def task_import_file(self: Any,
2025-08-18T22:27:45.0370895Z                      uri: str,
2025-08-18T22:27:45.0371288Z                      report_type: Optional[str] = None,
2025-08-18T22:27:45.0371774Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T22:27:45.0372192Z ```
2025-08-18T22:27:45.0372336Z 
2025-08-18T22:27:45.0372575Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T22:27:45.0372942Z 
2025-08-18T22:27:45.0373092Z <a id="ingest.celery_app"></a>
2025-08-18T22:27:45.0373359Z 
2025-08-18T22:27:45.0373491Z # ingest.celery\_app
2025-08-18T22:27:45.0373705Z 
2025-08-18T22:27:45.0373862Z <a id="ingest.ingest_router"></a>
2025-08-18T22:27:45.0374136Z 
2025-08-18T22:27:45.0374469Z # ingest.ingest\_router
2025-08-18T22:27:45.0374706Z 
2025-08-18T22:27:45.0374850Z <a id="logistics_etl"></a>
2025-08-18T22:27:45.0375077Z 
2025-08-18T22:27:45.0375197Z # logistics\_etl
2025-08-18T22:27:45.0375391Z 
2025-08-18T22:27:45.0375526Z Daily logistics ETL job.
2025-08-18T22:27:45.0375766Z 
2025-08-18T22:27:45.0375910Z <a id="logistics_etl.__main__"></a>
2025-08-18T22:27:45.0376192Z 
2025-08-18T22:27:45.0376328Z # logistics\_etl.\_\_main\_\_
2025-08-18T22:27:45.0376579Z 
2025-08-18T22:27:45.0376724Z <a id="logistics_etl.dsn"></a>
2025-08-18T22:27:45.0376971Z 
2025-08-18T22:27:45.0377095Z # logistics\_etl.dsn
2025-08-18T22:27:45.0377300Z 
2025-08-18T22:27:45.0377509Z Local DSN builder to avoid cross-service dependency.
2025-08-18T22:27:45.0377862Z 
2025-08-18T22:27:45.0378019Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T22:27:45.0378326Z 
2025-08-18T22:27:45.0378438Z #### build\_dsn
2025-08-18T22:27:45.0378615Z 
2025-08-18T22:27:45.0378734Z ```python
2025-08-18T22:27:45.0379036Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:27:45.0379441Z ```
2025-08-18T22:27:45.0379588Z 
2025-08-18T22:27:45.0379836Z Return a Postgres DSN assembled from environment variables.
2025-08-18T22:27:45.0380246Z 
2025-08-18T22:27:45.0380507Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T22:27:45.0381670Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T22:27:45.0382287Z error when any required variable is missing.
2025-08-18T22:27:45.0382609Z 
2025-08-18T22:27:45.0382787Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T22:27:45.0383097Z 
2025-08-18T22:27:45.0383244Z # logistics\_etl.tests.conftest
2025-08-18T22:27:45.0383509Z 
2025-08-18T22:27:45.0383703Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T22:27:45.0384028Z 
2025-08-18T22:27:45.0384183Z # logistics\_etl.tests.test\_repository
2025-08-18T22:27:45.0384682Z 
2025-08-18T22:27:45.0384855Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T22:27:45.0385158Z 
2025-08-18T22:27:45.0385314Z # logistics\_etl.tests.test\_cron
2025-08-18T22:27:45.0385582Z 
2025-08-18T22:27:45.0385752Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T22:27:45.0386067Z 
2025-08-18T22:27:45.0386212Z # logistics\_etl.tests.test\_imports
2025-08-18T22:27:45.0386506Z 
2025-08-18T22:27:45.0386681Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T22:27:45.0386994Z 
2025-08-18T22:27:45.0387147Z # logistics\_etl.tests.test\_smoke
2025-08-18T22:27:45.0387432Z 
2025-08-18T22:27:45.0387609Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T22:27:45.0387912Z 
2025-08-18T22:27:45.0388058Z # logistics\_etl.tests.test\_client
2025-08-18T22:27:45.0388338Z 
2025-08-18T22:27:45.0388478Z <a id="logistics_etl.tests"></a>
2025-08-18T22:27:45.0388736Z 
2025-08-18T22:27:45.0388866Z # logistics\_etl.tests
2025-08-18T22:27:45.0389088Z 
2025-08-18T22:27:45.0389230Z <a id="logistics_etl.flow"></a>
2025-08-18T22:27:45.0389484Z 
2025-08-18T22:27:45.0389620Z # logistics\_etl.flow
2025-08-18T22:27:45.0389829Z 
2025-08-18T22:27:45.0389980Z <a id="logistics_etl.client"></a>
2025-08-18T22:27:45.0390251Z 
2025-08-18T22:27:45.0390381Z # logistics\_etl.client
2025-08-18T22:27:45.0390595Z 
2025-08-18T22:27:45.0390733Z <a id="logistics_etl.cron"></a>
2025-08-18T22:27:45.0391218Z 
2025-08-18T22:27:45.0391347Z # logistics\_etl.cron
2025-08-18T22:27:45.0391561Z 
2025-08-18T22:27:45.0391707Z <a id="logistics_etl.db"></a>
2025-08-18T22:27:45.0391950Z 
2025-08-18T22:27:45.0425430Z # logistics\_etl.db
2025-08-18T22:27:45.0425675Z 
2025-08-18T22:27:45.0425832Z <a id="logistics_etl.repository"></a>
2025-08-18T22:27:45.0426112Z 
2025-08-18T22:27:45.0426238Z # logistics\_etl.repository
2025-08-18T22:27:45.0426449Z 
2025-08-18T22:27:45.0426562Z <a id="alert_bot"></a>
2025-08-18T22:27:45.0426749Z 
2025-08-18T22:27:45.0426845Z # alert\_bot
2025-08-18T22:27:45.0426989Z 
2025-08-18T22:27:45.0427131Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T22:27:45.0427394Z 
2025-08-18T22:27:45.0427524Z # alert\_bot.tests.test\_smoke
2025-08-18T22:27:45.0427747Z 
2025-08-18T22:27:45.0427858Z <a id="alert_bot.tests"></a>
2025-08-18T22:27:45.0428058Z 
2025-08-18T22:27:45.0428159Z # alert\_bot.tests
2025-08-18T22:27:45.0428334Z 
2025-08-18T22:27:45.0428451Z <a id="alert_bot.alert_bot"></a>
2025-08-18T22:27:45.0428693Z 
2025-08-18T22:27:45.0428903Z # alert\_bot.alert\_bot
2025-08-18T22:27:45.0429091Z 
2025-08-18T22:27:45.0429213Z <a id="alert_bot.rules"></a>
2025-08-18T22:27:45.0429417Z 
2025-08-18T22:27:45.0429513Z # alert\_bot.rules
2025-08-18T22:27:45.0429678Z 
2025-08-18T22:27:45.0429778Z <a id="common"></a>
2025-08-18T22:27:45.0429941Z 
2025-08-18T22:27:45.0430032Z # common
2025-08-18T22:27:45.0430166Z 
2025-08-18T22:27:45.0430282Z <a id="common.dsn"></a>
2025-08-18T22:27:45.0430463Z 
2025-08-18T22:27:45.0430558Z # common.dsn
2025-08-18T22:27:45.0430695Z 
2025-08-18T22:27:45.0430820Z <a id="common.dsn.build_dsn"></a>
2025-08-18T22:27:45.0431052Z 
2025-08-18T22:27:45.0431144Z #### build\_dsn
2025-08-18T22:27:45.0431298Z 
2025-08-18T22:27:45.0431392Z ```python
2025-08-18T22:27:45.0431644Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:27:45.0431985Z ```
2025-08-18T22:27:45.0432102Z 
2025-08-18T22:27:45.0432290Z Return a Postgres DSN, validating required variables.
2025-08-18T22:27:45.0432610Z 
2025-08-18T22:27:45.0432902Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T22:27:45.0433816Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T22:27:45.0434665Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T22:27:45.0435077Z missing.
2025-08-18T22:27:45.0435169Z 
2025-08-18T22:27:45.0435251Z <a id="common.models_vendor"></a>
2025-08-18T22:27:45.0435412Z 
2025-08-18T22:27:45.0435496Z # common.models\_vendor
2025-08-18T22:27:45.0435619Z 
2025-08-18T22:27:45.0435715Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T22:27:45.0435881Z 
2025-08-18T22:27:45.0435947Z ## Vendor Objects
2025-08-18T22:27:45.0436054Z 
2025-08-18T22:27:45.0436116Z ```python
2025-08-18T22:27:45.0436263Z class Vendor(Base)
2025-08-18T22:27:45.0436427Z ```
2025-08-18T22:27:45.0436508Z 
2025-08-18T22:27:45.0436589Z Vendor of inventory items.
2025-08-18T22:27:45.0436717Z 
2025-08-18T22:27:45.0436818Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T22:27:45.0437008Z 
2025-08-18T22:27:45.0437085Z ## VendorPrice Objects
2025-08-18T22:27:45.0437199Z 
2025-08-18T22:27:45.0437260Z ```python
2025-08-18T22:27:45.0437421Z class VendorPrice(Base)
2025-08-18T22:27:45.0437592Z ```
2025-08-18T22:27:45.0437679Z 
2025-08-18T22:27:45.0437778Z Association table linking vendors to pricing.
2025-08-18T22:27:45.0437953Z 
2025-08-18T22:27:45.0438033Z <a id="common.db_url"></a>
2025-08-18T22:27:45.0438157Z 
2025-08-18T22:27:45.0438223Z # common.db\_url
2025-08-18T22:27:45.0438323Z 
2025-08-18T22:27:45.0438411Z <a id="common.db_url.build_url"></a>
2025-08-18T22:27:45.0438566Z 
2025-08-18T22:27:45.0438629Z #### build\_url
2025-08-18T22:27:45.0438741Z 
2025-08-18T22:27:45.0438803Z ```python
2025-08-18T22:27:45.0438976Z def build_url(async_: bool = True) -> str
2025-08-18T22:27:45.0439209Z ```
2025-08-18T22:27:45.0439288Z 
2025-08-18T22:27:45.0439389Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:27:45.0439561Z 
2025-08-18T22:27:45.0439637Z <a id="common.keepa"></a>
2025-08-18T22:27:45.0439916Z 
2025-08-18T22:27:45.0439982Z # common.keepa
2025-08-18T22:27:45.0440082Z 
2025-08-18T22:27:45.0440156Z <a id="common.llm"></a>
2025-08-18T22:27:45.0440288Z 
2025-08-18T22:27:45.0440350Z # common.llm
2025-08-18T22:27:45.0440444Z 
2025-08-18T22:27:45.0440540Z <a id="common.settings"></a>
2025-08-18T22:27:45.0440676Z 
2025-08-18T22:27:45.0440743Z # common.settings
2025-08-18T22:27:45.0440851Z 
2025-08-18T22:27:45.0440926Z <a id="common.db"></a>
2025-08-18T22:27:45.0441041Z 
2025-08-18T22:27:45.0441103Z # common.db
2025-08-18T22:27:45.0441201Z 
2025-08-18T22:27:45.0441293Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T22:27:45.0441470Z 
2025-08-18T22:27:45.0441545Z #### build\_sqlalchemy\_url
2025-08-18T22:27:45.0441684Z 
2025-08-18T22:27:45.0441746Z ```python
2025-08-18T22:27:45.0441920Z def build_sqlalchemy_url() -> str
2025-08-18T22:27:45.0442128Z ```
2025-08-18T22:27:45.0442209Z 
2025-08-18T22:27:45.0442313Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:27:45.0442494Z 
2025-08-18T22:27:45.0442589Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T22:27:45.0442760Z 
2025-08-18T22:27:45.0442832Z #### build\_asyncpg\_dsn
2025-08-18T22:27:45.0442955Z 
2025-08-18T22:27:45.0443021Z ```python
2025-08-18T22:27:45.0443185Z def build_asyncpg_dsn() -> str
2025-08-18T22:27:45.0443379Z ```
2025-08-18T22:27:45.0443459Z 
2025-08-18T22:27:45.0443581Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:27:45.0443794Z 
2025-08-18T22:27:45.0443876Z <a id="common.db.refresh_mvs"></a>
2025-08-18T22:27:45.0444027Z 
2025-08-18T22:27:45.0444091Z #### refresh\_mvs
2025-08-18T22:27:45.0444198Z 
2025-08-18T22:27:45.0444441Z ```python
2025-08-18T22:27:45.0444678Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:27:45.0444917Z ```
2025-08-18T22:27:45.0444994Z 
2025-08-18T22:27:45.0445130Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:27:45.0445342Z 
2025-08-18T22:27:45.0445417Z <a id="common.config"></a>
2025-08-18T22:27:45.0445552Z 
2025-08-18T22:27:45.0445764Z # common.config
2025-08-18T22:27:45.0445864Z 
2025-08-18T22:27:45.0445936Z <a id="common.base"></a>
2025-08-18T22:27:45.0446071Z 
2025-08-18T22:27:45.0446135Z # common.base
2025-08-18T22:27:45.0446233Z 
2025-08-18T22:27:45.0446316Z <a id="common.base.Base"></a>
2025-08-18T22:27:45.0446452Z 
2025-08-18T22:27:45.0446514Z ## Base Objects
2025-08-18T22:27:45.0446614Z 
2025-08-18T22:27:45.0446673Z ```python
2025-08-18T22:27:45.0446833Z class Base(DeclarativeBase)
2025-08-18T22:27:45.0447022Z ```
2025-08-18T22:27:45.0447101Z 
2025-08-18T22:27:45.0447182Z Base class for SQLAlchemy models.
2025-08-18T22:27:45.0447332Z 
2025-08-18T22:27:45.0447405Z <a id="repricer"></a>
2025-08-18T22:27:45.0447517Z 
2025-08-18T22:27:45.0447589Z # repricer
2025-08-18T22:27:45.0447677Z 
2025-08-18T22:27:45.0447761Z <a id="repricer.app.schemas"></a>
2025-08-18T22:27:45.0447910Z 
2025-08-18T22:27:45.0447984Z # repricer.app.schemas
2025-08-18T22:27:45.0448100Z 
2025-08-18T22:27:45.0448188Z <a id="repricer.app.deps"></a>
2025-08-18T22:27:45.0448340Z 
2025-08-18T22:27:45.0448411Z # repricer.app.deps
2025-08-18T22:27:45.0448518Z 
2025-08-18T22:27:45.0448643Z Placeholder module for Keepa / SP-API clients.
2025-08-18T22:27:45.0448824Z 
2025-08-18T22:27:45.0448905Z <a id="repricer.app.logic"></a>
2025-08-18T22:27:45.0449050Z 
2025-08-18T22:27:45.0449122Z # repricer.app.logic
2025-08-18T22:27:45.0449235Z 
2025-08-18T22:27:45.0449329Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T22:27:45.0449510Z 
2025-08-18T22:27:45.0449572Z #### MIN\_MARGIN
2025-08-18T22:27:45.0449671Z 
2025-08-18T22:27:45.0449738Z 15 % ROI
2025-08-18T22:27:45.0449826Z 
2025-08-18T22:27:45.0449925Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T22:27:45.0450105Z 
2025-08-18T22:27:45.0450178Z #### compute\_price
2025-08-18T22:27:45.0450281Z 
2025-08-18T22:27:45.0450343Z ```python
2025-08-18T22:27:45.0450597Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T22:27:45.0450895Z ```
2025-08-18T22:27:45.0451129Z 
2025-08-18T22:27:45.0451245Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T22:27:45.0451531Z Replace with real competitive logic later.
2025-08-18T22:27:45.0451700Z 
2025-08-18T22:27:45.0451787Z <a id="repricer.app.main"></a>
2025-08-18T22:27:45.0451934Z 
2025-08-18T22:27:45.0452009Z # repricer.app.main
2025-08-18T22:27:45.0452119Z 
2025-08-18T22:27:45.0452193Z <a id="repricer.app"></a>
2025-08-18T22:27:45.0452326Z 
2025-08-18T22:27:45.0452393Z # repricer.app
2025-08-18T22:27:45.0452491Z 
2025-08-18T22:27:45.0452588Z <a id="repricer.tests.test_imports"></a>
2025-08-18T22:27:45.0452758Z 
2025-08-18T22:27:45.0452838Z # repricer.tests.test\_imports
2025-08-18T22:27:45.0452972Z 
2025-08-18T22:27:45.0453062Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T22:27:45.0453220Z 
2025-08-18T22:27:45.0453300Z # repricer.tests.test\_smoke
2025-08-18T22:27:45.0453440Z 
2025-08-18T22:27:45.0453515Z <a id="repricer.tests"></a>
2025-08-18T22:27:45.0453645Z 
2025-08-18T22:27:45.0453720Z # repricer.tests
2025-08-18T22:27:45.0453825Z 
2025-08-18T22:27:45.0453887Z <a id="db"></a>
2025-08-18T22:27:45.0453983Z 
2025-08-18T22:27:45.0454046Z # db
2025-08-18T22:27:45.0454125Z 
2025-08-18T22:27:45.0454197Z <a id="db.utils.views"></a>
2025-08-18T22:27:45.0454597Z 
2025-08-18T22:27:45.0454667Z # db.utils.views
2025-08-18T22:27:45.0454777Z 
2025-08-18T22:27:45.0454869Z <a id="db.utils.views.replace_view"></a>
2025-08-18T22:27:45.0455040Z 
2025-08-18T22:27:45.0455107Z #### replace\_view
2025-08-18T22:27:45.0455209Z 
2025-08-18T22:27:45.0455279Z ```python
2025-08-18T22:27:45.0455468Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T22:27:45.0455829Z ```
2025-08-18T22:27:45.0455993Z 
2025-08-18T22:27:45.0456149Z Drop and recreate a SQL view atomically.
2025-08-18T22:27:45.0456326Z 
2025-08-18T22:27:45.0456401Z <a id="db.utils"></a>
2025-08-18T22:27:45.0456518Z 
2025-08-18T22:27:45.0456579Z # db.utils
2025-08-18T22:27:45.0456672Z 
2025-08-18T22:27:45.0456748Z <a id="price_importer"></a>
2025-08-18T22:27:45.0456882Z 
2025-08-18T22:27:45.0457109Z # price\_importer
2025-08-18T22:27:45.0457217Z 
2025-08-18T22:27:45.0457322Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T22:27:45.0457510Z 
2025-08-18T22:27:45.0457597Z # price\_importer.services\_common.dsn
2025-08-18T22:27:45.0457757Z 
2025-08-18T22:27:45.0457880Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T22:27:45.0458085Z 
2025-08-18T22:27:45.0458148Z #### build\_dsn
2025-08-18T22:27:45.0458245Z 
2025-08-18T22:27:45.0458313Z ```python
2025-08-18T22:27:45.0458480Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:27:45.0458703Z ```
2025-08-18T22:27:45.0458785Z 
2025-08-18T22:27:45.0458851Z Return safe DSN.
2025-08-18T22:27:45.0458960Z 
2025-08-18T22:27:45.0459320Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T22:27:45.0459521Z 
2025-08-18T22:27:45.0459652Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T22:27:45.0459854Z 
2025-08-18T22:27:45.0459960Z # price\_importer.services\_common.models\_vendor
2025-08-18T22:27:45.0460157Z 
2025-08-18T22:27:45.0460268Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T22:27:45.0460453Z 
2025-08-18T22:27:45.0460549Z # price\_importer.services\_common.db\_url
2025-08-18T22:27:45.0460725Z 
2025-08-18T22:27:45.0460852Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T22:27:45.0461061Z 
2025-08-18T22:27:45.0461130Z #### build\_url
2025-08-18T22:27:45.0461225Z 
2025-08-18T22:27:45.0461286Z ```python
2025-08-18T22:27:45.0461464Z def build_url(async_: bool = True) -> str
2025-08-18T22:27:45.0461680Z ```
2025-08-18T22:27:45.0461770Z 
2025-08-18T22:27:45.0461864Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:27:45.0462037Z 
2025-08-18T22:27:45.0462143Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T22:27:45.0462329Z 
2025-08-18T22:27:45.0462423Z # price\_importer.services\_common.keepa
2025-08-18T22:27:45.0462590Z 
2025-08-18T22:27:45.0462692Z <a id="price_importer.services_common.llm"></a>
2025-08-18T22:27:45.0463002Z 
2025-08-18T22:27:45.0463091Z # price\_importer.services\_common.llm
2025-08-18T22:27:45.0463256Z 
2025-08-18T22:27:45.0463370Z <a id="price_importer.services_common.settings"></a>
2025-08-18T22:27:45.0463604Z 
2025-08-18T22:27:45.0463696Z # price\_importer.services\_common.settings
2025-08-18T22:27:45.0463872Z 
2025-08-18T22:27:45.0463971Z <a id="price_importer.services_common.db"></a>
2025-08-18T22:27:45.0464145Z 
2025-08-18T22:27:45.0464364Z # price\_importer.services\_common.db
2025-08-18T22:27:45.0464526Z 
2025-08-18T22:27:45.0464677Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T22:27:45.0464920Z 
2025-08-18T22:27:45.0464994Z #### build\_sqlalchemy\_url
2025-08-18T22:27:45.0465123Z 
2025-08-18T22:27:45.0465183Z ```python
2025-08-18T22:27:45.0465354Z def build_sqlalchemy_url() -> str
2025-08-18T22:27:45.0465555Z ```
2025-08-18T22:27:45.0465636Z 
2025-08-18T22:27:45.0465726Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:27:45.0465897Z 
2025-08-18T22:27:45.0466047Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T22:27:45.0466268Z 
2025-08-18T22:27:45.0466341Z #### build\_asyncpg\_dsn
2025-08-18T22:27:45.0466466Z 
2025-08-18T22:27:45.0466529Z ```python
2025-08-18T22:27:45.0466689Z def build_asyncpg_dsn() -> str
2025-08-18T22:27:45.0466882Z ```
2025-08-18T22:27:45.0466960Z 
2025-08-18T22:27:45.0467089Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:27:45.0467295Z 
2025-08-18T22:27:45.0467418Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T22:27:45.0467624Z 
2025-08-18T22:27:45.0467688Z #### refresh\_mvs
2025-08-18T22:27:45.0467791Z 
2025-08-18T22:27:45.0467851Z ```python
2025-08-18T22:27:45.0468039Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:27:45.0468282Z ```
2025-08-18T22:27:45.0468358Z 
2025-08-18T22:27:45.0468492Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:27:45.0468702Z 
2025-08-18T22:27:45.0468805Z <a id="price_importer.services_common"></a>
2025-08-18T22:27:45.0469118Z 
2025-08-18T22:27:45.0469204Z # price\_importer.services\_common
2025-08-18T22:27:45.0469361Z 
2025-08-18T22:27:45.0469460Z <a id="price_importer.services_common.base"></a>
2025-08-18T22:27:45.0469640Z 
2025-08-18T22:27:45.0469731Z # price\_importer.services\_common.base
2025-08-18T22:27:45.0469893Z 
2025-08-18T22:27:45.0469980Z <a id="price_importer.normaliser"></a>
2025-08-18T22:27:45.0470137Z 
2025-08-18T22:27:45.0470223Z # price\_importer.normaliser
2025-08-18T22:27:45.0470358Z 
2025-08-18T22:27:45.0470457Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T22:27:45.0470639Z 
2025-08-18T22:27:45.0470725Z # price\_importer.common.models\_vendor
2025-08-18T22:27:45.0470885Z 
2025-08-18T22:27:45.0470978Z <a id="price_importer.common.db_url"></a>
2025-08-18T22:27:45.0471144Z 
2025-08-18T22:27:45.0471230Z # price\_importer.common.db\_url
2025-08-18T22:27:45.0471372Z 
2025-08-18T22:27:45.0471479Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T22:27:45.0471671Z 
2025-08-18T22:27:45.0471734Z #### make\_dsn
2025-08-18T22:27:45.0471835Z 
2025-08-18T22:27:45.0471897Z ```python
2025-08-18T22:27:45.0472065Z def make_dsn(async_: bool = False) -> str
2025-08-18T22:27:45.0472288Z ```
2025-08-18T22:27:45.0472367Z 
2025-08-18T22:27:45.0472488Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T22:27:45.0472686Z 
2025-08-18T22:27:45.0472789Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T22:27:45.0472976Z 
2025-08-18T22:27:45.0473039Z #### build\_url
2025-08-18T22:27:45.0473137Z 
2025-08-18T22:27:45.0473197Z ```python
2025-08-18T22:27:45.0473371Z def build_url(async_: bool = False) -> str
2025-08-18T22:27:45.0473588Z ```
2025-08-18T22:27:45.0473672Z 
2025-08-18T22:27:45.0473792Z Return Postgres DSN built from environment variables.
2025-08-18T22:27:45.0473988Z 
2025-08-18T22:27:45.0474078Z <a id="price_importer.common"></a>
2025-08-18T22:27:45.0474227Z 
2025-08-18T22:27:45.0474418Z # price\_importer.common
2025-08-18T22:27:45.0474688Z 
2025-08-18T22:27:45.0474783Z <a id="price_importer.common.base"></a>
2025-08-18T22:27:45.0474948Z 
2025-08-18T22:27:45.0475029Z # price\_importer.common.base
2025-08-18T22:27:45.0475172Z 
2025-08-18T22:27:45.0475266Z <a id="price_importer.tests.conftest"></a>
2025-08-18T22:27:45.0475435Z 
2025-08-18T22:27:45.0475527Z # price\_importer.tests.conftest
2025-08-18T22:27:45.0475708Z 
2025-08-18T22:27:45.0475807Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T22:27:45.0475988Z 
2025-08-18T22:27:45.0476074Z # price\_importer.tests.test\_reader
2025-08-18T22:27:45.0476229Z 
2025-08-18T22:27:45.0476329Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T22:27:45.0476513Z 
2025-08-18T22:27:45.0476599Z # price\_importer.tests.test\_imports
2025-08-18T22:27:45.0476754Z 
2025-08-18T22:27:45.0476860Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T22:27:45.0477029Z 
2025-08-18T22:27:45.0477114Z # price\_importer.tests.test\_smoke
2025-08-18T22:27:45.0477275Z 
2025-08-18T22:27:45.0477383Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T22:27:45.0477566Z 
2025-08-18T22:27:45.0477657Z # price\_importer.tests.test\_normaliser
2025-08-18T22:27:45.0477827Z 
2025-08-18T22:27:45.0477908Z <a id="price_importer.tests"></a>
2025-08-18T22:27:45.0478053Z 
2025-08-18T22:27:45.0478132Z # price\_importer.tests
2025-08-18T22:27:45.0478251Z 
2025-08-18T22:27:45.0478334Z <a id="price_importer.reader"></a>
2025-08-18T22:27:45.0478485Z 
2025-08-18T22:27:45.0478560Z # price\_importer.reader
2025-08-18T22:27:45.0478681Z 
2025-08-18T22:27:45.0478768Z <a id="price_importer.repository"></a>
2025-08-18T22:27:45.0478931Z 
2025-08-18T22:27:45.0479011Z # price\_importer.repository
2025-08-18T22:27:45.0479144Z 
2025-08-18T22:27:45.0479228Z <a id="price_importer.import"></a>
2025-08-18T22:27:45.0479373Z 
2025-08-18T22:27:45.0479446Z # price\_importer.import
2025-08-18T22:27:45.0479571Z 
2025-08-18T22:27:45.0479639Z <a id="fees_h10"></a>
2025-08-18T22:27:45.0479747Z 
2025-08-18T22:27:45.0479811Z # fees\_h10
2025-08-18T22:27:45.0480030Z 
2025-08-18T22:27:45.0480103Z <a id="fees_h10.worker"></a>
2025-08-18T22:27:45.0480231Z 
2025-08-18T22:27:45.0480299Z # fees\_h10.worker
2025-08-18T22:27:45.0480400Z 
2025-08-18T22:27:45.0480492Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T22:27:45.0480668Z 
2025-08-18T22:27:45.0480740Z #### list\_active\_asins
2025-08-18T22:27:45.0480860Z 
2025-08-18T22:27:45.0480922Z ```python
2025-08-18T22:27:45.0481094Z def list_active_asins() -> list[str]
2025-08-18T22:27:45.0481300Z ```
2025-08-18T22:27:45.0481386Z 
2025-08-18T22:27:45.0481497Z Return known ASINs or an empty list if unavailable.
2025-08-18T22:27:45.0481689Z 
2025-08-18T22:27:45.0481776Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T22:27:45.0481934Z 
2025-08-18T22:27:45.0482011Z # fees\_h10.tests.test\_smoke
2025-08-18T22:27:45.0482154Z 
2025-08-18T22:27:45.0482226Z <a id="fees_h10.tests"></a>
2025-08-18T22:27:45.0482354Z 
2025-08-18T22:27:45.0482418Z # fees\_h10.tests
2025-08-18T22:27:45.0482531Z 
2025-08-18T22:27:45.0482608Z <a id="fees_h10.client"></a>
2025-08-18T22:27:45.0482740Z 
2025-08-18T22:27:45.0482809Z # fees\_h10.client
2025-08-18T22:27:45.0482910Z 
2025-08-18T22:27:45.0482989Z <a id="fees_h10.repository"></a>
2025-08-18T22:27:45.0483136Z 
2025-08-18T22:27:45.0483207Z # fees\_h10.repository
2025-08-18T22:27:45.0483324Z 
2025-08-18T22:27:45.0483393Z <a id="emailer"></a>
2025-08-18T22:27:45.0483513Z 
2025-08-18T22:27:45.0483578Z # emailer
2025-08-18T22:27:45.0483666Z 
2025-08-18T22:27:45.0483770Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T22:27:45.0483948Z 
2025-08-18T22:27:45.0484035Z # emailer.tests.test\_import\_emailer
2025-08-18T22:27:45.0484196Z 
2025-08-18T22:27:45.0484403Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T22:27:45.0484558Z 
2025-08-18T22:27:45.0484636Z # emailer.tests.test\_smoke
2025-08-18T22:27:45.0484775Z 
2025-08-18T22:27:45.0484851Z <a id="emailer.tests"></a>
2025-08-18T22:27:45.0484980Z 
2025-08-18T22:27:45.0485053Z # emailer.tests
2025-08-18T22:27:45.0485282Z 
2025-08-18T22:27:45.0485370Z <a id="emailer.generate_body"></a>
2025-08-18T22:27:45.0485521Z 
2025-08-18T22:27:45.0485602Z # emailer.generate\_body
2025-08-18T22:27:45.0485727Z 
2025-08-18T22:27:45.0485799Z <a id="llm_server"></a>
2025-08-18T22:27:45.0485924Z 
2025-08-18T22:27:45.0485986Z # llm\_server
2025-08-18T22:27:45.0486081Z 
2025-08-18T22:27:45.0486155Z <a id="llm_server.app"></a>
2025-08-18T22:27:45.0486290Z 
2025-08-18T22:27:45.0486357Z # llm\_server.app
2025-08-18T22:27:45.0486459Z 
