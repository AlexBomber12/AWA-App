2025-08-16T23:44:51.3685493Z ##[group]Run pydoc-markdown
2025-08-16T23:44:51.3685791Z [36;1mpydoc-markdown[0m
2025-08-16T23:44:51.3726141Z shell: /usr/bin/bash -e {0}
2025-08-16T23:44:51.3726356Z env:
2025-08-16T23:44:51.3726597Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:44:51.3727005Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T23:44:51.3727401Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:44:51.3727756Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:44:51.3728096Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T23:44:51.3728443Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T23:44:51.3728724Z ##[endgroup]
2025-08-16T23:44:51.7602082Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T23:44:51.7602738Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T23:44:51.7603059Z In "pydoc-markdown.yml"
2025-08-16T23:44:51.7603366Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T23:44:51.7603794Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T23:44:51.7604288Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T23:44:51.7604627Z 
2025-08-16T23:44:51.9710756Z <a id="__init__"></a>
2025-08-16T23:44:51.9711043Z 
2025-08-16T23:44:51.9711175Z # \_\_init\_\_
2025-08-16T23:44:51.9711365Z 
2025-08-16T23:44:51.9711487Z <a id="api"></a>
2025-08-16T23:44:51.9711695Z 
2025-08-16T23:44:51.9711805Z # api
2025-08-16T23:44:51.9711967Z 
2025-08-16T23:44:51.9712115Z <a id="api.tests.test_llm"></a>
2025-08-16T23:44:51.9712394Z 
2025-08-16T23:44:51.9712534Z # api.tests.test\_llm
2025-08-16T23:44:51.9712755Z 
2025-08-16T23:44:51.9712921Z <a id="api.tests.test_imports"></a>
2025-08-16T23:44:51.9713208Z 
2025-08-16T23:44:51.9713351Z # api.tests.test\_imports
2025-08-16T23:44:51.9713597Z 
2025-08-16T23:44:51.9713760Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T23:44:51.9714387Z 
2025-08-16T23:44:51.9714540Z # api.tests.test\_entrypoint
2025-08-16T23:44:51.9714821Z 
2025-08-16T23:44:51.9714973Z <a id="api.tests.test_health"></a>
2025-08-16T23:44:51.9715252Z 
2025-08-16T23:44:51.9715400Z # api.tests.test\_health
2025-08-16T23:44:51.9715628Z 
2025-08-16T23:44:51.9715886Z <a id="api.migrations.env"></a>
2025-08-16T23:44:51.9716153Z 
2025-08-16T23:44:51.9716290Z # api.migrations.env
2025-08-16T23:44:51.9716503Z 
2025-08-16T23:44:51.9716724Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T23:44:51.9717107Z 
2025-08-16T23:44:51.9717297Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T23:44:51.9717637Z 
2025-08-16T23:44:51.9717844Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T23:44:51.9718190Z 
2025-08-16T23:44:51.9718359Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T23:44:51.9718680Z 
2025-08-16T23:44:51.9718957Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T23:44:51.9719582Z 
2025-08-16T23:44:51.9719856Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T23:44:51.9720257Z 
2025-08-16T23:44:51.9720483Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T23:44:51.9720870Z 
2025-08-16T23:44:51.9721079Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T23:44:51.9721417Z 
2025-08-16T23:44:51.9721642Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T23:44:51.9722015Z 
2025-08-16T23:44:51.9722204Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T23:44:51.9722538Z 
2025-08-16T23:44:51.9722770Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T23:44:51.9723147Z 
2025-08-16T23:44:51.9723343Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T23:44:51.9723697Z 
2025-08-16T23:44:51.9723913Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T23:44:51.9724275Z 
2025-08-16T23:44:51.9724467Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T23:44:51.9724814Z 
2025-08-16T23:44:51.9725127Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T23:44:51.9726018Z 
2025-08-16T23:44:51.9726232Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T23:44:51.9726576Z 
2025-08-16T23:44:51.9726808Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T23:44:51.9727189Z 
2025-08-16T23:44:51.9727383Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T23:44:51.9727729Z 
2025-08-16T23:44:51.9727971Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T23:44:51.9728327Z 
2025-08-16T23:44:51.9728493Z # api.migrations.versions.0001\_baseline
2025-08-16T23:44:51.9728802Z 
2025-08-16T23:44:51.9728971Z <a id="api.migrations.versions"></a>
2025-08-16T23:44:51.9729526Z 
2025-08-16T23:44:51.9729685Z # api.migrations.versions
2025-08-16T23:44:51.9729939Z 
2025-08-16T23:44:51.9730081Z <a id="api.migrations"></a>
2025-08-16T23:44:51.9730319Z 
2025-08-16T23:44:51.9730449Z # api.migrations
2025-08-16T23:44:51.9730656Z 
2025-08-16T23:44:51.9730782Z <a id="api.db"></a>
2025-08-16T23:44:51.9730994Z 
2025-08-16T23:44:51.9731126Z # api.db
2025-08-16T23:44:51.9731285Z 
2025-08-16T23:44:51.9731433Z <a id="api.routes.stats"></a>
2025-08-16T23:44:51.9731690Z 
2025-08-16T23:44:51.9731822Z # api.routes.stats
2025-08-16T23:44:51.9732014Z 
2025-08-16T23:44:51.9732172Z <a id="api.routes.stats.kpi"></a>
2025-08-16T23:44:51.9732457Z 
2025-08-16T23:44:51.9732570Z #### kpi
2025-08-16T23:44:51.9732727Z 
2025-08-16T23:44:51.9732849Z ```python
2025-08-16T23:44:51.9733145Z @router.get("/stats/kpi")
2025-08-16T23:44:51.9733557Z def kpi() -> List[Dict[str, int]]
2025-08-16T23:44:51.9733930Z ```
2025-08-16T23:44:51.9734080Z 
2025-08-16T23:44:51.9734229Z Return KPI metrics (mock).
2025-08-16T23:44:51.9734462Z 
2025-08-16T23:44:51.9734644Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T23:44:51.9734973Z 
2025-08-16T23:44:51.9735093Z #### roi\_by\_vendor
2025-08-16T23:44:51.9735290Z 
2025-08-16T23:44:51.9735409Z ```python
2025-08-16T23:44:51.9735710Z @router.get("/stats/roi_by_vendor")
2025-08-16T23:44:51.9736396Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T23:44:51.9736823Z ```
2025-08-16T23:44:51.9736972Z 
2025-08-16T23:44:51.9737127Z Return ROI percent by vendor.
2025-08-16T23:44:51.9737381Z 
2025-08-16T23:44:51.9737541Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T23:44:51.9737852Z 
2025-08-16T23:44:51.9737969Z #### roi\_trend
2025-08-16T23:44:51.9738149Z 
2025-08-16T23:44:51.9738266Z ```python
2025-08-16T23:44:51.9738558Z @router.get("/stats/roi_trend")
2025-08-16T23:44:51.9738992Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T23:44:51.9739621Z ```
2025-08-16T23:44:51.9739775Z 
2025-08-16T23:44:51.9739924Z Return 30-day ROI trend.
2025-08-16T23:44:51.9740157Z 
2025-08-16T23:44:51.9740303Z <a id="api.routes.roi"></a>
2025-08-16T23:44:51.9740557Z 
2025-08-16T23:44:51.9740685Z # api.routes.roi
2025-08-16T23:44:51.9740919Z 
2025-08-16T23:44:51.9741073Z <a id="api.routes.health"></a>
2025-08-16T23:44:51.9741395Z 
2025-08-16T23:44:51.9741527Z # api.routes.health
2025-08-16T23:44:51.9741753Z 
2025-08-16T23:44:51.9741923Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T23:44:51.9742231Z 
2025-08-16T23:44:51.9742356Z #### MAX\_SKEW
2025-08-16T23:44:51.9742539Z 
2025-08-16T23:44:51.9742649Z seconds
2025-08-16T23:44:51.9742804Z 
2025-08-16T23:44:51.9742970Z <a id="api.routes.health.health"></a>
2025-08-16T23:44:51.9743265Z 
2025-08-16T23:44:51.9743377Z #### health
2025-08-16T23:44:51.9743550Z 
2025-08-16T23:44:51.9743662Z ```python
2025-08-16T23:44:51.9744008Z @router.get("/health", include_in_schema=False)
2025-08-16T23:44:51.9744699Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T23:44:51.9745322Z ```
2025-08-16T23:44:51.9745470Z 
2025-08-16T23:44:51.9745688Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T23:44:51.9746051Z 
2025-08-16T23:44:51.9746220Z <a id="api.routes.repository"></a>
2025-08-16T23:44:51.9746509Z 
2025-08-16T23:44:51.9746653Z # api.routes.repository
2025-08-16T23:44:51.9746896Z 
2025-08-16T23:44:51.9747042Z <a id="api.routes"></a>
2025-08-16T23:44:51.9747540Z 
2025-08-16T23:44:51.9747669Z # api.routes
2025-08-16T23:44:51.9747852Z 
2025-08-16T23:44:51.9747996Z <a id="api.models.fee"></a>
2025-08-16T23:44:51.9748245Z 
2025-08-16T23:44:51.9748375Z # api.models.fee
2025-08-16T23:44:51.9748569Z 
2025-08-16T23:44:51.9748701Z <a id="api.models"></a>
2025-08-16T23:44:51.9748927Z 
2025-08-16T23:44:51.9749042Z # api.models
2025-08-16T23:44:51.9749409Z 
2025-08-16T23:44:51.9749562Z <a id="api.roi_repository"></a>
2025-08-16T23:44:51.9749838Z 
2025-08-16T23:44:51.9749970Z # api.roi\_repository
2025-08-16T23:44:51.9750181Z 
2025-08-16T23:44:51.9750318Z <a id="api.main"></a>
2025-08-16T23:44:51.9750525Z 
2025-08-16T23:44:51.9750639Z # api.main
2025-08-16T23:44:51.9750809Z 
2025-08-16T23:44:51.9750951Z <a id="api.main.ready"></a>
2025-08-16T23:44:51.9751194Z 
2025-08-16T23:44:51.9751306Z #### ready
2025-08-16T23:44:51.9751473Z 
2025-08-16T23:44:51.9751584Z ```python
2025-08-16T23:44:51.9752066Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T23:44:51.9752881Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T23:44:51.9753549Z                                                                       str]
2025-08-16T23:44:51.9753972Z ```
2025-08-16T23:44:51.9754129Z 
2025-08-16T23:44:51.9754309Z Return 200 only when migrations are at head.
2025-08-16T23:44:51.9754631Z 
2025-08-16T23:44:51.9754769Z <a id="api.config"></a>
2025-08-16T23:44:51.9754993Z 
2025-08-16T23:44:51.9755112Z # api.config
2025-08-16T23:44:51.9755282Z 
2025-08-16T23:44:51.9755412Z <a id="etl"></a>
2025-08-16T23:44:51.9755602Z 
2025-08-16T23:44:51.9755711Z # etl
2025-08-16T23:44:51.9755878Z 
2025-08-16T23:44:51.9756025Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T23:44:51.9756295Z 
2025-08-16T23:44:51.9756428Z # etl.fba\_fee\_ingestor
2025-08-16T23:44:51.9756665Z 
2025-08-16T23:44:51.9756813Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T23:44:51.9757079Z 
2025-08-16T23:44:51.9757217Z # etl.sp\_fees\_ingestor
2025-08-16T23:44:51.9757688Z 
2025-08-16T23:44:51.9757838Z <a id="etl.keepa_ingestor"></a>
2025-08-16T23:44:51.9758103Z 
2025-08-16T23:44:51.9758245Z # etl.keepa\_ingestor
2025-08-16T23:44:51.9758442Z 
2025-08-16T23:44:51.9758548Z <a id="etl.db"></a>
2025-08-16T23:44:51.9758741Z 
2025-08-16T23:44:51.9758845Z # etl.db
2025-08-16T23:44:51.9758987Z 
2025-08-16T23:44:51.9759359Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T23:44:51.9759679Z 
2025-08-16T23:44:51.9759838Z # etl.dialects.amazon\_reimbursements
2025-08-16T23:44:51.9760139Z 
2025-08-16T23:44:51.9760312Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T23:44:51.9760620Z 
2025-08-16T23:44:51.9760766Z # etl.dialects.amazon\_returns
2025-08-16T23:44:51.9761032Z 
2025-08-16T23:44:51.9761166Z <a id="etl.dialects"></a>
2025-08-16T23:44:51.9761397Z 
2025-08-16T23:44:51.9761523Z # etl.dialects
2025-08-16T23:44:51.9761723Z 
2025-08-16T23:44:51.9761854Z <a id="ingest"></a>
2025-08-16T23:44:51.9762049Z 
2025-08-16T23:44:51.9762221Z # ingest
2025-08-16T23:44:51.9762397Z 
2025-08-16T23:44:51.9762552Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T23:44:51.9762843Z 
2025-08-16T23:44:51.9762982Z # ingest.tests.test\_smoke
2025-08-16T23:44:51.9763231Z 
2025-08-16T23:44:51.9763369Z <a id="ingest.tests"></a>
2025-08-16T23:44:51.9763603Z 
2025-08-16T23:44:51.9763733Z # ingest.tests
2025-08-16T23:44:51.9763920Z 
2025-08-16T23:44:51.9764075Z <a id="ingest.upload_router"></a>
2025-08-16T23:44:51.9764358Z 
2025-08-16T23:44:51.9764493Z # ingest.upload\_router
2025-08-16T23:44:51.9764713Z 
2025-08-16T23:44:51.9764889Z <a id="ingest.email_watcher"></a>
2025-08-16T23:44:51.9765211Z 
2025-08-16T23:44:51.9765342Z # ingest.email\_watcher
2025-08-16T23:44:51.9765558Z 
2025-08-16T23:44:51.9765719Z <a id="ingest.email_watcher.main"></a>
2025-08-16T23:44:51.9766010Z 
2025-08-16T23:44:51.9766121Z #### main
2025-08-16T23:44:51.9766289Z 
2025-08-16T23:44:51.9766400Z ```python
2025-08-16T23:44:51.9766696Z def main() -> dict[str, str]
2025-08-16T23:44:51.9767062Z ```
2025-08-16T23:44:51.9767210Z 
2025-08-16T23:44:51.9767692Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T23:44:51.9768113Z 
2025-08-16T23:44:51.9768345Z Returns {"status": "success"} when processing completes.
2025-08-16T23:44:51.9768726Z 
2025-08-16T23:44:51.9768883Z <a id="ingest.ingest_router"></a>
2025-08-16T23:44:51.9769342Z 
2025-08-16T23:44:51.9769483Z # ingest.ingest\_router
2025-08-16T23:44:51.9769710Z 
2025-08-16T23:44:51.9769850Z <a id="logistics_etl"></a>
2025-08-16T23:44:51.9770089Z 
2025-08-16T23:44:51.9770212Z # logistics\_etl
2025-08-16T23:44:51.9770416Z 
2025-08-16T23:44:51.9770552Z Daily logistics ETL job.
2025-08-16T23:44:51.9770776Z 
2025-08-16T23:44:51.9770929Z <a id="logistics_etl.__main__"></a>
2025-08-16T23:44:51.9771209Z 
2025-08-16T23:44:51.9771345Z # logistics\_etl.\_\_main\_\_
2025-08-16T23:44:51.9771599Z 
2025-08-16T23:44:51.9771769Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T23:44:51.9772084Z 
2025-08-16T23:44:51.9772234Z # logistics\_etl.tests.conftest
2025-08-16T23:44:51.9772520Z 
2025-08-16T23:44:51.9772712Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T23:44:51.9773052Z 
2025-08-16T23:44:51.9773222Z # logistics\_etl.tests.test\_repository
2025-08-16T23:44:51.9773528Z 
2025-08-16T23:44:51.9773701Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T23:44:51.9774030Z 
2025-08-16T23:44:51.9774183Z # logistics\_etl.tests.test\_cron
2025-08-16T23:44:51.9774457Z 
2025-08-16T23:44:51.9774634Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T23:44:51.9774962Z 
2025-08-16T23:44:51.9775114Z # logistics\_etl.tests.test\_imports
2025-08-16T23:44:51.9775404Z 
2025-08-16T23:44:51.9775581Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T23:44:51.9775896Z 
2025-08-16T23:44:51.9776046Z # logistics\_etl.tests.test\_smoke
2025-08-16T23:44:51.9776331Z 
2025-08-16T23:44:51.9776500Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T23:44:51.9776814Z 
2025-08-16T23:44:51.9776966Z # logistics\_etl.tests.test\_client
2025-08-16T23:44:51.9777488Z 
2025-08-16T23:44:51.9777653Z <a id="logistics_etl.tests"></a>
2025-08-16T23:44:51.9777918Z 
2025-08-16T23:44:51.9778062Z # logistics\_etl.tests
2025-08-16T23:44:51.9778280Z 
2025-08-16T23:44:51.9778419Z <a id="logistics_etl.flow"></a>
2025-08-16T23:44:51.9778679Z 
2025-08-16T23:44:51.9778809Z # logistics\_etl.flow
2025-08-16T23:44:51.9779018Z 
2025-08-16T23:44:51.9779337Z <a id="logistics_etl.client"></a>
2025-08-16T23:44:51.9779627Z 
2025-08-16T23:44:51.9779760Z # logistics\_etl.client
2025-08-16T23:44:51.9779978Z 
2025-08-16T23:44:51.9780125Z <a id="logistics_etl.cron"></a>
2025-08-16T23:44:51.9780386Z 
2025-08-16T23:44:51.9780512Z # logistics\_etl.cron
2025-08-16T23:44:51.9780724Z 
2025-08-16T23:44:51.9780869Z <a id="logistics_etl.db"></a>
2025-08-16T23:44:51.9781118Z 
2025-08-16T23:44:51.9781239Z # logistics\_etl.db
2025-08-16T23:44:51.9781443Z 
2025-08-16T23:44:51.9781599Z <a id="logistics_etl.repository"></a>
2025-08-16T23:44:51.9781893Z 
2025-08-16T23:44:51.9782041Z # logistics\_etl.repository
2025-08-16T23:44:51.9782306Z 
2025-08-16T23:44:51.9782435Z <a id="alert_bot"></a>
2025-08-16T23:44:51.9782647Z 
2025-08-16T23:44:51.9782772Z # alert\_bot
2025-08-16T23:44:51.9782944Z 
2025-08-16T23:44:51.9783103Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T23:44:51.9783416Z 
2025-08-16T23:44:51.9783566Z # alert\_bot.tests.test\_smoke
2025-08-16T23:44:51.9783826Z 
2025-08-16T23:44:51.9783978Z <a id="alert_bot.tests"></a>
2025-08-16T23:44:51.9784226Z 
2025-08-16T23:44:51.9784349Z # alert\_bot.tests
2025-08-16T23:44:51.9784540Z 
2025-08-16T23:44:51.9784687Z <a id="alert_bot.alert_bot"></a>
2025-08-16T23:44:51.9784952Z 
2025-08-16T23:44:51.9785082Z # alert\_bot.alert\_bot
2025-08-16T23:44:51.9785303Z 
2025-08-16T23:44:51.9785441Z <a id="alert_bot.rules"></a>
2025-08-16T23:44:51.9785683Z 
2025-08-16T23:44:51.9785800Z # alert\_bot.rules
2025-08-16T23:44:51.9786003Z 
2025-08-16T23:44:51.9786127Z <a id="common"></a>
2025-08-16T23:44:51.9786319Z 
2025-08-16T23:44:51.9786435Z # common
2025-08-16T23:44:51.9786605Z 
2025-08-16T23:44:51.9787013Z <a id="common.dsn"></a>
2025-08-16T23:44:51.9787249Z 
2025-08-16T23:44:51.9787366Z # common.dsn
2025-08-16T23:44:51.9787541Z 
2025-08-16T23:44:51.9787690Z <a id="common.dsn.build_dsn"></a>
2025-08-16T23:44:51.9787974Z 
2025-08-16T23:44:51.9788090Z #### build\_dsn
2025-08-16T23:44:51.9788274Z 
2025-08-16T23:44:51.9788398Z ```python
2025-08-16T23:44:51.9788715Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:44:51.9789329Z ```
2025-08-16T23:44:51.9789510Z 
2025-08-16T23:44:51.9789801Z Return a Postgres DSN, validating required variables.
2025-08-16T23:44:51.9790182Z 
2025-08-16T23:44:51.9790535Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T23:44:51.9791333Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T23:44:51.9792106Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T23:44:51.9792679Z missing.
2025-08-16T23:44:51.9792842Z 
2025-08-16T23:44:51.9793007Z <a id="common.models_vendor"></a>
2025-08-16T23:44:51.9793294Z 
2025-08-16T23:44:51.9793445Z # common.models\_vendor
2025-08-16T23:44:51.9793715Z 
2025-08-16T23:44:51.9793878Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T23:44:51.9794189Z 
2025-08-16T23:44:51.9794310Z ## Vendor Objects
2025-08-16T23:44:51.9794498Z 
2025-08-16T23:44:51.9794614Z ```python
2025-08-16T23:44:51.9794883Z class Vendor(Base)
2025-08-16T23:44:51.9795200Z ```
2025-08-16T23:44:51.9795352Z 
2025-08-16T23:44:51.9795504Z Vendor of inventory items.
2025-08-16T23:44:51.9795746Z 
2025-08-16T23:44:51.9795926Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T23:44:51.9796259Z 
2025-08-16T23:44:51.9796392Z ## VendorPrice Objects
2025-08-16T23:44:51.9796604Z 
2025-08-16T23:44:51.9796717Z ```python
2025-08-16T23:44:51.9797005Z class VendorPrice(Base)
2025-08-16T23:44:51.9797333Z ```
2025-08-16T23:44:51.9797481Z 
2025-08-16T23:44:51.9797671Z Association table linking vendors to pricing.
2025-08-16T23:44:51.9798006Z 
2025-08-16T23:44:51.9798400Z <a id="common.db_url"></a>
2025-08-16T23:44:51.9798655Z 
2025-08-16T23:44:51.9798778Z # common.db\_url
2025-08-16T23:44:51.9798979Z 
2025-08-16T23:44:51.9799295Z <a id="common.db_url.build_url"></a>
2025-08-16T23:44:51.9799593Z 
2025-08-16T23:44:51.9799713Z #### build\_url
2025-08-16T23:44:51.9799902Z 
2025-08-16T23:44:51.9800016Z ```python
2025-08-16T23:44:51.9800340Z def build_url(async_: bool = True) -> str
2025-08-16T23:44:51.9800749Z ```
2025-08-16T23:44:51.9800897Z 
2025-08-16T23:44:51.9801085Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:44:51.9801405Z 
2025-08-16T23:44:51.9801547Z <a id="common.keepa"></a>
2025-08-16T23:44:51.9801783Z 
2025-08-16T23:44:51.9801894Z # common.keepa
2025-08-16T23:44:51.9802076Z 
2025-08-16T23:44:51.9802209Z <a id="common.llm"></a>
2025-08-16T23:44:51.9802419Z 
2025-08-16T23:44:51.9802529Z # common.llm
2025-08-16T23:44:51.9802695Z 
2025-08-16T23:44:51.9802837Z <a id="common.settings"></a>
2025-08-16T23:44:51.9803081Z 
2025-08-16T23:44:51.9803209Z # common.settings
2025-08-16T23:44:51.9803396Z 
2025-08-16T23:44:51.9803507Z <a id="common.db"></a>
2025-08-16T23:44:51.9803693Z 
2025-08-16T23:44:51.9803800Z # common.db
2025-08-16T23:44:51.9803958Z 
2025-08-16T23:44:51.9804105Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T23:44:51.9804379Z 
2025-08-16T23:44:51.9804502Z #### build\_sqlalchemy\_url
2025-08-16T23:44:51.9804712Z 
2025-08-16T23:44:51.9804815Z ```python
2025-08-16T23:44:51.9805107Z def build_sqlalchemy_url() -> str
2025-08-16T23:44:51.9805460Z ```
2025-08-16T23:44:51.9805604Z 
2025-08-16T23:44:51.9805762Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:44:51.9806048Z 
2025-08-16T23:44:51.9806206Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T23:44:51.9806496Z 
2025-08-16T23:44:51.9806619Z #### build\_asyncpg\_dsn
2025-08-16T23:44:51.9806815Z 
2025-08-16T23:44:51.9806922Z ```python
2025-08-16T23:44:51.9807176Z def build_asyncpg_dsn() -> str
2025-08-16T23:44:51.9807485Z ```
2025-08-16T23:44:51.9807612Z 
2025-08-16T23:44:51.9807824Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:44:51.9808389Z 
2025-08-16T23:44:51.9808521Z <a id="common.db.refresh_mvs"></a>
2025-08-16T23:44:51.9808747Z 
2025-08-16T23:44:51.9808857Z #### refresh\_mvs
2025-08-16T23:44:51.9809014Z 
2025-08-16T23:44:51.9809291Z ```python
2025-08-16T23:44:51.9809631Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:44:51.9810011Z ```
2025-08-16T23:44:51.9810140Z 
2025-08-16T23:44:51.9810341Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:44:51.9810672Z 
2025-08-16T23:44:51.9810789Z <a id="common.config"></a>
2025-08-16T23:44:51.9810990Z 
2025-08-16T23:44:51.9811095Z # common.config
2025-08-16T23:44:51.9811245Z 
2025-08-16T23:44:51.9811363Z <a id="common.base"></a>
2025-08-16T23:44:51.9811546Z 
2025-08-16T23:44:51.9811641Z # common.base
2025-08-16T23:44:51.9811795Z 
2025-08-16T23:44:51.9811914Z <a id="common.base.Base"></a>
2025-08-16T23:44:51.9812121Z 
2025-08-16T23:44:51.9812220Z ## Base Objects
2025-08-16T23:44:51.9812380Z 
2025-08-16T23:44:51.9812487Z ```python
2025-08-16T23:44:51.9812733Z class Base(DeclarativeBase)
2025-08-16T23:44:51.9813011Z ```
2025-08-16T23:44:51.9813139Z 
2025-08-16T23:44:51.9813275Z Base class for SQLAlchemy models.
2025-08-16T23:44:51.9813503Z 
2025-08-16T23:44:51.9813614Z <a id="repricer"></a>
2025-08-16T23:44:51.9813797Z 
2025-08-16T23:44:51.9813897Z # repricer
2025-08-16T23:44:51.9814034Z 
2025-08-16T23:44:51.9814162Z <a id="repricer.app.schemas"></a>
2025-08-16T23:44:51.9814390Z 
2025-08-16T23:44:51.9814502Z # repricer.app.schemas
2025-08-16T23:44:51.9814683Z 
2025-08-16T23:44:51.9814815Z <a id="repricer.app.deps"></a>
2025-08-16T23:44:51.9815025Z 
2025-08-16T23:44:51.9815189Z # repricer.app.deps
2025-08-16T23:44:51.9815356Z 
2025-08-16T23:44:51.9815547Z Placeholder module for Keepa / SP-API clients.
2025-08-16T23:44:51.9815834Z 
2025-08-16T23:44:51.9815973Z <a id="repricer.app.logic"></a>
2025-08-16T23:44:51.9816200Z 
2025-08-16T23:44:51.9816313Z # repricer.app.logic
2025-08-16T23:44:51.9816678Z 
2025-08-16T23:44:51.9816834Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T23:44:51.9817097Z 
2025-08-16T23:44:51.9817197Z #### MIN\_MARGIN
2025-08-16T23:44:51.9817347Z 
2025-08-16T23:44:51.9817447Z 15 % ROI
2025-08-16T23:44:51.9817582Z 
2025-08-16T23:44:51.9817749Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T23:44:51.9818035Z 
2025-08-16T23:44:51.9818137Z #### compute\_price
2025-08-16T23:44:51.9818292Z 
2025-08-16T23:44:51.9818395Z ```python
2025-08-16T23:44:51.9818756Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T23:44:51.9819418Z ```
2025-08-16T23:44:51.9819550Z 
2025-08-16T23:44:51.9819731Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T23:44:51.9820153Z Replace with real competitive logic later.
2025-08-16T23:44:51.9820415Z 
2025-08-16T23:44:51.9820530Z <a id="repricer.app.main"></a>
2025-08-16T23:44:51.9820751Z 
2025-08-16T23:44:51.9820858Z # repricer.app.main
2025-08-16T23:44:51.9821023Z 
2025-08-16T23:44:51.9821152Z <a id="repricer.app"></a>
2025-08-16T23:44:51.9821348Z 
2025-08-16T23:44:51.9821449Z # repricer.app
2025-08-16T23:44:51.9821597Z 
2025-08-16T23:44:51.9821741Z <a id="repricer.tests.test_imports"></a>
2025-08-16T23:44:51.9822007Z 
2025-08-16T23:44:51.9822128Z # repricer.tests.test\_imports
2025-08-16T23:44:51.9822346Z 
2025-08-16T23:44:51.9822481Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T23:44:51.9822715Z 
2025-08-16T23:44:51.9822849Z # repricer.tests.test\_smoke
2025-08-16T23:44:51.9823065Z 
2025-08-16T23:44:51.9823181Z <a id="repricer.tests"></a>
2025-08-16T23:44:51.9823380Z 
2025-08-16T23:44:51.9823559Z # repricer.tests
2025-08-16T23:44:51.9823713Z 
2025-08-16T23:44:51.9823811Z <a id="db"></a>
2025-08-16T23:44:51.9823968Z 
2025-08-16T23:44:51.9824061Z # db
2025-08-16T23:44:51.9824189Z 
2025-08-16T23:44:51.9824298Z <a id="db.utils.views"></a>
2025-08-16T23:44:51.9824492Z 
2025-08-16T23:44:51.9824591Z # db.utils.views
2025-08-16T23:44:51.9824738Z 
2025-08-16T23:44:51.9824884Z <a id="db.utils.views.replace_view"></a>
2025-08-16T23:44:51.9825306Z 
2025-08-16T23:44:51.9825404Z #### replace\_view
2025-08-16T23:44:51.9825568Z 
2025-08-16T23:44:51.9825661Z ```python
2025-08-16T23:44:51.9825935Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T23:44:51.9826288Z ```
2025-08-16T23:44:51.9826409Z 
2025-08-16T23:44:51.9826544Z Drop and recreate a SQL view atomically.
2025-08-16T23:44:51.9826785Z 
2025-08-16T23:44:51.9826884Z <a id="db.utils"></a>
2025-08-16T23:44:51.9827052Z 
2025-08-16T23:44:51.9827153Z # db.utils
2025-08-16T23:44:51.9827281Z 
2025-08-16T23:44:51.9827391Z <a id="price_importer"></a>
2025-08-16T23:44:51.9827594Z 
2025-08-16T23:44:51.9827695Z # price\_importer
2025-08-16T23:44:51.9827849Z 
2025-08-16T23:44:51.9827994Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T23:44:51.9828274Z 
2025-08-16T23:44:51.9828410Z # price\_importer.services\_common.dsn
2025-08-16T23:44:51.9828662Z 
2025-08-16T23:44:51.9828845Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T23:44:51.9829343Z 
2025-08-16T23:44:51.9829441Z #### build\_dsn
2025-08-16T23:44:51.9829597Z 
2025-08-16T23:44:51.9829692Z ```python
2025-08-16T23:44:51.9829941Z def build_dsn(sync: bool = True) -> str
2025-08-16T23:44:51.9830270Z ```
2025-08-16T23:44:51.9830393Z 
2025-08-16T23:44:51.9830498Z Return safe DSN.
2025-08-16T23:44:51.9830659Z 
2025-08-16T23:44:51.9831091Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T23:44:51.9831390Z 
2025-08-16T23:44:51.9831573Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T23:44:51.9831877Z 
2025-08-16T23:44:51.9832035Z # price\_importer.services\_common.models\_vendor
2025-08-16T23:44:51.9832312Z 
2025-08-16T23:44:51.9832473Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T23:44:51.9832764Z 
2025-08-16T23:44:51.9832913Z # price\_importer.services\_common.db\_url
2025-08-16T23:44:51.9833175Z 
2025-08-16T23:44:51.9833377Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T23:44:51.9833872Z 
2025-08-16T23:44:51.9833980Z #### build\_url
2025-08-16T23:44:51.9834129Z 
2025-08-16T23:44:51.9834228Z ```python
2025-08-16T23:44:51.9834491Z def build_url(async_: bool = True) -> str
2025-08-16T23:44:51.9834822Z ```
2025-08-16T23:44:51.9834987Z 
2025-08-16T23:44:51.9835133Z Return Postgres DSN from env or PG_* parts.
2025-08-16T23:44:51.9835396Z 
2025-08-16T23:44:51.9835564Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T23:44:51.9835843Z 
2025-08-16T23:44:51.9835979Z # price\_importer.services\_common.keepa
2025-08-16T23:44:51.9836236Z 
2025-08-16T23:44:51.9836382Z <a id="price_importer.services_common.llm"></a>
2025-08-16T23:44:51.9836662Z 
2025-08-16T23:44:51.9836808Z # price\_importer.services\_common.llm
2025-08-16T23:44:51.9837054Z 
2025-08-16T23:44:51.9837221Z <a id="price_importer.services_common.settings"></a>
2025-08-16T23:44:51.9837519Z 
2025-08-16T23:44:51.9837666Z # price\_importer.services\_common.settings
2025-08-16T23:44:51.9837919Z 
2025-08-16T23:44:51.9838066Z <a id="price_importer.services_common.db"></a>
2025-08-16T23:44:51.9838352Z 
2025-08-16T23:44:51.9838482Z # price\_importer.services\_common.db
2025-08-16T23:44:51.9838712Z 
2025-08-16T23:44:51.9838940Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T23:44:51.9839493Z 
2025-08-16T23:44:51.9839612Z #### build\_sqlalchemy\_url
2025-08-16T23:44:51.9839804Z 
2025-08-16T23:44:51.9839902Z ```python
2025-08-16T23:44:51.9840149Z def build_sqlalchemy_url() -> str
2025-08-16T23:44:51.9840466Z ```
2025-08-16T23:44:51.9840585Z 
2025-08-16T23:44:51.9840737Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T23:44:51.9840997Z 
2025-08-16T23:44:51.9841206Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T23:44:51.9841546Z 
2025-08-16T23:44:51.9841662Z #### build\_asyncpg\_dsn
2025-08-16T23:44:51.9841848Z 
2025-08-16T23:44:51.9841943Z ```python
2025-08-16T23:44:51.9842195Z def build_asyncpg_dsn() -> str
2025-08-16T23:44:51.9842488Z ```
2025-08-16T23:44:51.9842614Z 
2025-08-16T23:44:51.9842819Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T23:44:51.9843311Z 
2025-08-16T23:44:51.9843503Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T23:44:51.9843834Z 
2025-08-16T23:44:51.9843934Z #### refresh\_mvs
2025-08-16T23:44:51.9844090Z 
2025-08-16T23:44:51.9844196Z ```python
2025-08-16T23:44:51.9844493Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T23:44:51.9844874Z ```
2025-08-16T23:44:51.9844996Z 
2025-08-16T23:44:51.9845198Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T23:44:51.9845536Z 
2025-08-16T23:44:51.9845685Z <a id="price_importer.services_common"></a>
2025-08-16T23:44:51.9845955Z 
2025-08-16T23:44:51.9846091Z # price\_importer.services\_common
2025-08-16T23:44:51.9846321Z 
2025-08-16T23:44:51.9846475Z <a id="price_importer.services_common.base"></a>
2025-08-16T23:44:51.9846745Z 
2025-08-16T23:44:51.9846882Z # price\_importer.services\_common.base
2025-08-16T23:44:51.9847125Z 
2025-08-16T23:44:51.9847265Z <a id="price_importer.normaliser"></a>
2025-08-16T23:44:51.9847520Z 
2025-08-16T23:44:51.9847641Z # price\_importer.normaliser
2025-08-16T23:44:51.9847851Z 
2025-08-16T23:44:51.9848009Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T23:44:51.9848280Z 
2025-08-16T23:44:51.9848414Z # price\_importer.common.models\_vendor
2025-08-16T23:44:51.9848657Z 
2025-08-16T23:44:51.9848801Z <a id="price_importer.common.db_url"></a>
2025-08-16T23:44:51.9849053Z 
2025-08-16T23:44:51.9849348Z # price\_importer.common.db\_url
2025-08-16T23:44:51.9849583Z 
2025-08-16T23:44:51.9849744Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T23:44:51.9850027Z 
2025-08-16T23:44:51.9850129Z #### make\_dsn
2025-08-16T23:44:51.9850283Z 
2025-08-16T23:44:51.9850379Z ```python
2025-08-16T23:44:51.9850650Z def make_dsn(async_: bool = False) -> str
2025-08-16T23:44:51.9850985Z ```
2025-08-16T23:44:51.9851118Z 
2025-08-16T23:44:51.9851297Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T23:44:51.9851815Z 
2025-08-16T23:44:51.9851987Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T23:44:51.9852274Z 
2025-08-16T23:44:51.9852372Z #### build\_url
2025-08-16T23:44:51.9852526Z 
2025-08-16T23:44:51.9852632Z ```python
2025-08-16T23:44:51.9852896Z def build_url(async_: bool = False) -> str
2025-08-16T23:44:51.9853239Z ```
2025-08-16T23:44:51.9853362Z 
2025-08-16T23:44:51.9853537Z Return Postgres DSN built from environment variables.
2025-08-16T23:44:51.9854342Z 
2025-08-16T23:44:51.9854489Z <a id="price_importer.common"></a>
2025-08-16T23:44:51.9854732Z 
2025-08-16T23:44:51.9854854Z # price\_importer.common
2025-08-16T23:44:51.9855053Z 
2025-08-16T23:44:51.9855188Z <a id="price_importer.common.base"></a>
2025-08-16T23:44:51.9855439Z 
2025-08-16T23:44:51.9855571Z # price\_importer.common.base
2025-08-16T23:44:51.9855779Z 
2025-08-16T23:44:51.9855949Z <a id="price_importer.tests.conftest"></a>
2025-08-16T23:44:51.9856258Z 
2025-08-16T23:44:51.9856390Z # price\_importer.tests.conftest
2025-08-16T23:44:51.9856625Z 
2025-08-16T23:44:51.9856781Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T23:44:51.9857062Z 
2025-08-16T23:44:51.9857191Z # price\_importer.tests.test\_reader
2025-08-16T23:44:51.9857422Z 
2025-08-16T23:44:51.9857581Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T23:44:51.9857852Z 
2025-08-16T23:44:51.9857982Z # price\_importer.tests.test\_imports
2025-08-16T23:44:51.9858226Z 
2025-08-16T23:44:51.9858376Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T23:44:51.9858640Z 
2025-08-16T23:44:51.9858769Z # price\_importer.tests.test\_smoke
2025-08-16T23:44:51.9859014Z 
2025-08-16T23:44:51.9859351Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T23:44:51.9859676Z 
2025-08-16T23:44:51.9859828Z # price\_importer.tests.test\_normaliser
2025-08-16T23:44:51.9860117Z 
2025-08-16T23:44:51.9860246Z <a id="price_importer.tests"></a>
2025-08-16T23:44:51.9860488Z 
2025-08-16T23:44:51.9860601Z # price\_importer.tests
2025-08-16T23:44:51.9860789Z 
2025-08-16T23:44:51.9860925Z <a id="price_importer.reader"></a>
2025-08-16T23:44:51.9861352Z 
2025-08-16T23:44:51.9861472Z # price\_importer.reader
2025-08-16T23:44:51.9861665Z 
2025-08-16T23:44:51.9861823Z <a id="price_importer.reader.load_file"></a>
2025-08-16T23:44:51.9862077Z 
2025-08-16T23:44:51.9862222Z #### load\_file
2025-08-16T23:44:51.9862380Z 
2025-08-16T23:44:51.9862473Z ```python
2025-08-16T23:44:51.9862729Z def load_file(path: str | Path) -> Any
2025-08-16T23:44:51.9863063Z ```
2025-08-16T23:44:51.9863185Z 
2025-08-16T23:44:51.9863323Z Return DataFrame from CSV or Excel file.
2025-08-16T23:44:51.9863567Z 
2025-08-16T23:44:51.9863725Z Raises RuntimeError if pandas is unavailable.
2025-08-16T23:44:51.9863992Z 
2025-08-16T23:44:51.9864129Z <a id="price_importer.repository"></a>
2025-08-16T23:44:51.9864370Z 
2025-08-16T23:44:51.9864492Z # price\_importer.repository
2025-08-16T23:44:51.9864706Z 
2025-08-16T23:44:51.9864831Z <a id="price_importer.import"></a>
2025-08-16T23:44:51.9865047Z 
2025-08-16T23:44:51.9865172Z # price\_importer.import
2025-08-16T23:44:51.9865369Z 
2025-08-16T23:44:51.9865470Z <a id="fees_h10"></a>
2025-08-16T23:44:51.9865637Z 
2025-08-16T23:44:51.9865734Z # fees\_h10
2025-08-16T23:44:51.9865868Z 
2025-08-16T23:44:51.9865979Z <a id="fees_h10.worker"></a>
2025-08-16T23:44:51.9866180Z 
2025-08-16T23:44:51.9866275Z # fees\_h10.worker
2025-08-16T23:44:51.9866452Z 
2025-08-16T23:44:51.9866618Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-16T23:44:51.9866891Z 
2025-08-16T23:44:51.9867033Z #### list\_active\_asins
2025-08-16T23:44:51.9867235Z 
2025-08-16T23:44:51.9867339Z ```python
2025-08-16T23:44:51.9867594Z def list_active_asins() -> list[str]
2025-08-16T23:44:51.9867925Z ```
2025-08-16T23:44:51.9868057Z 
2025-08-16T23:44:51.9868230Z Return known ASINs or an empty list if unavailable.
2025-08-16T23:44:51.9868541Z 
2025-08-16T23:44:51.9868670Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T23:44:51.9868914Z 
2025-08-16T23:44:51.9869039Z # fees\_h10.tests.test\_smoke
2025-08-16T23:44:51.9869596Z 
2025-08-16T23:44:51.9869724Z <a id="fees_h10.tests"></a>
2025-08-16T23:44:51.9869914Z 
2025-08-16T23:44:51.9870018Z # fees\_h10.tests
2025-08-16T23:44:51.9870166Z 
2025-08-16T23:44:51.9870274Z <a id="fees_h10.client"></a>
2025-08-16T23:44:51.9870475Z 
2025-08-16T23:44:51.9870571Z # fees\_h10.client
2025-08-16T23:44:51.9870719Z 
2025-08-16T23:44:51.9870843Z <a id="fees_h10.repository"></a>
2025-08-16T23:44:51.9871058Z 
2025-08-16T23:44:51.9871160Z # fees\_h10.repository
2025-08-16T23:44:51.9871326Z 
2025-08-16T23:44:51.9871432Z <a id="emailer"></a>
2025-08-16T23:44:51.9871594Z 
2025-08-16T23:44:51.9871684Z # emailer
2025-08-16T23:44:51.9871818Z 
2025-08-16T23:44:51.9871963Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T23:44:51.9872220Z 
2025-08-16T23:44:51.9872349Z # emailer.tests.test\_import\_emailer
2025-08-16T23:44:51.9872586Z 
2025-08-16T23:44:51.9872707Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T23:44:51.9872933Z 
2025-08-16T23:44:51.9873053Z # emailer.tests.test\_smoke
2025-08-16T23:44:51.9873259Z 
2025-08-16T23:44:51.9873375Z <a id="emailer.tests"></a>
2025-08-16T23:44:51.9873568Z 
2025-08-16T23:44:51.9873662Z # emailer.tests
2025-08-16T23:44:51.9873808Z 
2025-08-16T23:44:51.9873931Z <a id="emailer.generate_body"></a>
2025-08-16T23:44:51.9874194Z 
2025-08-16T23:44:51.9874306Z # emailer.generate\_body
2025-08-16T23:44:51.9874494Z 
2025-08-16T23:44:51.9874603Z <a id="llm_server"></a>
2025-08-16T23:44:51.9874775Z 
2025-08-16T23:44:51.9874869Z # llm\_server
2025-08-16T23:44:51.9875015Z 
2025-08-16T23:44:51.9875137Z <a id="llm_server.app"></a>
2025-08-16T23:44:51.9875330Z 
2025-08-16T23:44:51.9875434Z # llm\_server.app
2025-08-16T23:44:51.9875600Z 
