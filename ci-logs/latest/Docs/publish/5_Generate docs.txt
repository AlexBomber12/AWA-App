2025-08-18T22:40:21.0457478Z ##[group]Run pydoc-markdown
2025-08-18T22:40:21.0457785Z [36;1mpydoc-markdown[0m
2025-08-18T22:40:21.0501042Z shell: /usr/bin/bash -e {0}
2025-08-18T22:40:21.0501293Z env:
2025-08-18T22:40:21.0501533Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:40:21.0501945Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T22:40:21.0502336Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:40:21.0502680Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:40:21.0503052Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:40:21.0503418Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T22:40:21.0503719Z ##[endgroup]
2025-08-18T22:40:21.3831365Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T22:40:21.3832294Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T22:40:21.3832746Z In "pydoc-markdown.yml"
2025-08-18T22:40:21.3833153Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T22:40:21.3833798Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T22:40:21.3834532Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T22:40:21.3835038Z 
2025-08-18T22:40:21.7029488Z <a id="__init__"></a>
2025-08-18T22:40:21.7030041Z 
2025-08-18T22:40:21.7030177Z # \_\_init\_\_
2025-08-18T22:40:21.7030619Z 
2025-08-18T22:40:21.7030825Z <a id="api"></a>
2025-08-18T22:40:21.7031041Z 
2025-08-18T22:40:21.7031295Z # api
2025-08-18T22:40:21.7031707Z 
2025-08-18T22:40:21.7031865Z <a id="api.errors"></a>
2025-08-18T22:40:21.7032099Z 
2025-08-18T22:40:21.7032227Z # api.errors
2025-08-18T22:40:21.7032408Z 
2025-08-18T22:40:21.7032558Z <a id="api.sentry_config"></a>
2025-08-18T22:40:21.7032818Z 
2025-08-18T22:40:21.7032963Z # api.sentry\_config
2025-08-18T22:40:21.7033176Z 
2025-08-18T22:40:21.7033342Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T22:40:21.7033667Z 
2025-08-18T22:40:21.7035309Z # api.tests.test\_sentry\_scrub
2025-08-18T22:40:21.7035647Z 
2025-08-18T22:40:21.7035814Z <a id="api.tests.test_errors_json"></a>
2025-08-18T22:40:21.7036133Z 
2025-08-18T22:40:21.7036281Z # api.tests.test\_errors\_json
2025-08-18T22:40:21.7036552Z 
2025-08-18T22:40:21.7036698Z <a id="api.tests.test_llm"></a>
2025-08-18T22:40:21.7036962Z 
2025-08-18T22:40:21.7037099Z # api.tests.test\_llm
2025-08-18T22:40:21.7037316Z 
2025-08-18T22:40:21.7037479Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T22:40:21.7037798Z 
2025-08-18T22:40:21.7037944Z # api.tests.test\_sentry\_event
2025-08-18T22:40:21.7038212Z 
2025-08-18T22:40:21.7038447Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T22:40:21.7038839Z 
2025-08-18T22:40:21.7038986Z ## DummyTransport Objects
2025-08-18T22:40:21.7039225Z 
2025-08-18T22:40:21.7039348Z ```python
2025-08-18T22:40:21.7039643Z class DummyTransport()
2025-08-18T22:40:21.7039974Z ```
2025-08-18T22:40:21.7040126Z 
2025-08-18T22:40:21.7040643Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T22:40:21.7041546Z 
2025-08-18T22:40:21.7041682Z #### capture\_envelope
2025-08-18T22:40:21.7041899Z 
2025-08-18T22:40:21.7042011Z ```python
2025-08-18T22:40:21.7042335Z def capture_envelope(envelope)
2025-08-18T22:40:21.7042704Z ```
2025-08-18T22:40:21.7042854Z 
2025-08-18T22:40:21.7043085Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T22:40:21.7043472Z 
2025-08-18T22:40:21.7043637Z <a id="api.tests.test_cors"></a>
2025-08-18T22:40:21.7043914Z 
2025-08-18T22:40:21.7044051Z # api.tests.test\_cors
2025-08-18T22:40:21.7044278Z 
2025-08-18T22:40:21.7044429Z <a id="api.tests.test_imports"></a>
2025-08-18T22:40:21.7044715Z 
2025-08-18T22:40:21.7044860Z # api.tests.test\_imports
2025-08-18T22:40:21.7045097Z 
2025-08-18T22:40:21.7045253Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T22:40:21.7045552Z 
2025-08-18T22:40:21.7045706Z # api.tests.test\_rate\_limit
2025-08-18T22:40:21.7045964Z 
2025-08-18T22:40:21.7046139Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T22:40:21.7046819Z 
2025-08-18T22:40:21.7046933Z #### app
2025-08-18T22:40:21.7047096Z 
2025-08-18T22:40:21.7047218Z noqa: E402
2025-08-18T22:40:21.7047384Z 
2025-08-18T22:40:21.7047592Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T22:40:21.7047900Z 
2025-08-18T22:40:21.7048054Z # api.tests.test\_entrypoint
2025-08-18T22:40:21.7048315Z 
2025-08-18T22:40:21.7048467Z <a id="api.tests.test_health"></a>
2025-08-18T22:40:21.7048760Z 
2025-08-18T22:40:21.7048899Z # api.tests.test\_health
2025-08-18T22:40:21.7049134Z 
2025-08-18T22:40:21.7049281Z <a id="api.logging_config"></a>
2025-08-18T22:40:21.7049558Z 
2025-08-18T22:40:21.7049692Z # api.logging\_config
2025-08-18T22:40:21.7049909Z 
2025-08-18T22:40:21.7050065Z <a id="api.migrations.env"></a>
2025-08-18T22:40:21.7050327Z 
2025-08-18T22:40:21.7050639Z # api.migrations.env
2025-08-18T22:40:21.7050873Z 
2025-08-18T22:40:21.7051090Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T22:40:21.7051462Z 
2025-08-18T22:40:21.7051653Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T22:40:21.7052018Z 
2025-08-18T22:40:21.7052214Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T22:40:21.7052564Z 
2025-08-18T22:40:21.7052742Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T22:40:21.7053063Z 
2025-08-18T22:40:21.7053344Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T22:40:21.7053792Z 
2025-08-18T22:40:21.7054038Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T22:40:21.7054440Z 
2025-08-18T22:40:21.7054671Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T22:40:21.7055039Z 
2025-08-18T22:40:21.7055236Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T22:40:21.7055581Z 
2025-08-18T22:40:21.7055802Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T22:40:21.7056169Z 
2025-08-18T22:40:21.7056353Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T22:40:21.7056693Z 
2025-08-18T22:40:21.7056911Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T22:40:21.7057309Z 
2025-08-18T22:40:21.7057517Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T22:40:21.7057868Z 
2025-08-18T22:40:21.7058083Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T22:40:21.7058458Z 
2025-08-18T22:40:21.7058654Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T22:40:21.7059000Z 
2025-08-18T22:40:21.7059234Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T22:40:21.7059684Z 
2025-08-18T22:40:21.7059879Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T22:40:21.7060221Z 
2025-08-18T22:40:21.7060642Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T22:40:21.7061068Z 
2025-08-18T22:40:21.7061288Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T22:40:21.7061665Z 
2025-08-18T22:40:21.7061888Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T22:40:21.7062267Z 
2025-08-18T22:40:21.7062462Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T22:40:21.7063072Z 
2025-08-18T22:40:21.7063321Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T22:40:21.7063749Z 
2025-08-18T22:40:21.7063962Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T22:40:21.7064392Z 
2025-08-18T22:40:21.7064598Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T22:40:21.7064961Z 
2025-08-18T22:40:21.7065136Z # api.migrations.versions.0001\_baseline
2025-08-18T22:40:21.7065462Z 
2025-08-18T22:40:21.7065622Z <a id="api.migrations.versions"></a>
2025-08-18T22:40:21.7065918Z 
2025-08-18T22:40:21.7066062Z # api.migrations.versions
2025-08-18T22:40:21.7066310Z 
2025-08-18T22:40:21.7066449Z <a id="api.migrations"></a>
2025-08-18T22:40:21.7066696Z 
2025-08-18T22:40:21.7066825Z # api.migrations
2025-08-18T22:40:21.7067012Z 
2025-08-18T22:40:21.7067131Z <a id="api.db"></a>
2025-08-18T22:40:21.7067329Z 
2025-08-18T22:40:21.7067446Z # api.db
2025-08-18T22:40:21.7067601Z 
2025-08-18T22:40:21.7067742Z <a id="api.routes.stats"></a>
2025-08-18T22:40:21.7068283Z 
2025-08-18T22:40:21.7068407Z # api.routes.stats
2025-08-18T22:40:21.7068601Z 
2025-08-18T22:40:21.7068754Z <a id="api.routes.stats.kpi"></a>
2025-08-18T22:40:21.7069047Z 
2025-08-18T22:40:21.7069159Z #### kpi
2025-08-18T22:40:21.7069314Z 
2025-08-18T22:40:21.7069433Z ```python
2025-08-18T22:40:21.7069726Z @router.get("/stats/kpi")
2025-08-18T22:40:21.7070157Z def kpi() -> List[Dict[str, int]]
2025-08-18T22:40:21.7070724Z ```
2025-08-18T22:40:21.7070889Z 
2025-08-18T22:40:21.7071032Z Return KPI metrics (mock).
2025-08-18T22:40:21.7071279Z 
2025-08-18T22:40:21.7071459Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T22:40:21.7071794Z 
2025-08-18T22:40:21.7071917Z #### roi\_by\_vendor
2025-08-18T22:40:21.7072120Z 
2025-08-18T22:40:21.7072241Z ```python
2025-08-18T22:40:21.7072546Z @router.get("/stats/roi_by_vendor")
2025-08-18T22:40:21.7073001Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T22:40:21.7073413Z ```
2025-08-18T22:40:21.7073570Z 
2025-08-18T22:40:21.7073732Z Return ROI percent by vendor.
2025-08-18T22:40:21.7073991Z 
2025-08-18T22:40:21.7074154Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T22:40:21.7074464Z 
2025-08-18T22:40:21.7074578Z #### roi\_trend
2025-08-18T22:40:21.7074760Z 
2025-08-18T22:40:21.7074876Z ```python
2025-08-18T22:40:21.7075163Z @router.get("/stats/roi_trend")
2025-08-18T22:40:21.7075600Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T22:40:21.7076018Z ```
2025-08-18T22:40:21.7076171Z 
2025-08-18T22:40:21.7076300Z Return 30-day ROI trend.
2025-08-18T22:40:21.7076528Z 
2025-08-18T22:40:21.7076669Z <a id="api.routes.roi"></a>
2025-08-18T22:40:21.7076922Z 
2025-08-18T22:40:21.7077042Z # api.routes.roi
2025-08-18T22:40:21.7077231Z 
2025-08-18T22:40:21.7077381Z <a id="api.routes.health"></a>
2025-08-18T22:40:21.7077634Z 
2025-08-18T22:40:21.7077755Z # api.routes.health
2025-08-18T22:40:21.7077958Z 
2025-08-18T22:40:21.7078121Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T22:40:21.7078423Z 
2025-08-18T22:40:21.7078551Z #### MAX\_SKEW
2025-08-18T22:40:21.7078741Z 
2025-08-18T22:40:21.7078852Z seconds
2025-08-18T22:40:21.7079004Z 
2025-08-18T22:40:21.7079172Z <a id="api.routes.health.health"></a>
2025-08-18T22:40:21.7079474Z 
2025-08-18T22:40:21.7079587Z #### health
2025-08-18T22:40:21.7079754Z 
2025-08-18T22:40:21.7079879Z ```python
2025-08-18T22:40:21.7080224Z @router.get("/health", include_in_schema=False)
2025-08-18T22:40:21.7081112Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T22:40:21.7081744Z ```
2025-08-18T22:40:21.7081901Z 
2025-08-18T22:40:21.7082114Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T22:40:21.7082474Z 
2025-08-18T22:40:21.7082640Z <a id="api.routes.repository"></a>
2025-08-18T22:40:21.7082927Z 
2025-08-18T22:40:21.7083064Z # api.routes.repository
2025-08-18T22:40:21.7083298Z 
2025-08-18T22:40:21.7083426Z <a id="api.routes"></a>
2025-08-18T22:40:21.7083639Z 
2025-08-18T22:40:21.7083756Z # api.routes
2025-08-18T22:40:21.7083943Z 
2025-08-18T22:40:21.7084329Z <a id="api.models.fee"></a>
2025-08-18T22:40:21.7084560Z 
2025-08-18T22:40:21.7084681Z # api.models.fee
2025-08-18T22:40:21.7084860Z 
2025-08-18T22:40:21.7084988Z <a id="api.models"></a>
2025-08-18T22:40:21.7085194Z 
2025-08-18T22:40:21.7085318Z # api.models
2025-08-18T22:40:21.7085489Z 
2025-08-18T22:40:21.7085631Z <a id="api.roi_repository"></a>
2025-08-18T22:40:21.7085897Z 
2025-08-18T22:40:21.7086023Z # api.roi\_repository
2025-08-18T22:40:21.7086238Z 
2025-08-18T22:40:21.7086376Z <a id="api.main"></a>
2025-08-18T22:40:21.7086587Z 
2025-08-18T22:40:21.7086699Z # api.main
2025-08-18T22:40:21.7086864Z 
2025-08-18T22:40:21.7087015Z <a id="api.main.ready"></a>
2025-08-18T22:40:21.7087262Z 
2025-08-18T22:40:21.7087373Z #### ready
2025-08-18T22:40:21.7087542Z 
2025-08-18T22:40:21.7087652Z ```python
2025-08-18T22:40:21.7088114Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T22:40:21.7088919Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T22:40:21.7089821Z                                                                       str]
2025-08-18T22:40:21.7090247Z ```
2025-08-18T22:40:21.7090398Z 
2025-08-18T22:40:21.7090775Z Return 200 only when migrations are at head.
2025-08-18T22:40:21.7091132Z 
2025-08-18T22:40:21.7091266Z <a id="api.config"></a>
2025-08-18T22:40:21.7091493Z 
2025-08-18T22:40:21.7091608Z # api.config
2025-08-18T22:40:21.7091781Z 
2025-08-18T22:40:21.7091903Z <a id="etl"></a>
2025-08-18T22:40:21.7092125Z 
2025-08-18T22:40:21.7092233Z # etl
2025-08-18T22:40:21.7092385Z 
2025-08-18T22:40:21.7092539Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T22:40:21.7092810Z 
2025-08-18T22:40:21.7092938Z # etl.fba\_fee\_ingestor
2025-08-18T22:40:21.7093176Z 
2025-08-18T22:40:21.7093317Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T22:40:21.7093581Z 
2025-08-18T22:40:21.7093720Z # etl.sp\_fees\_ingestor
2025-08-18T22:40:21.7093943Z 
2025-08-18T22:40:21.7094085Z <a id="etl.keepa_ingestor"></a>
2025-08-18T22:40:21.7094356Z 
2025-08-18T22:40:21.7094505Z # etl.keepa\_ingestor
2025-08-18T22:40:21.7094715Z 
2025-08-18T22:40:21.7094835Z <a id="etl.db"></a>
2025-08-18T22:40:21.7095042Z 
2025-08-18T22:40:21.7095150Z # etl.db
2025-08-18T22:40:21.7095311Z 
2025-08-18T22:40:21.7095459Z <a id="etl.dialects.schemas"></a>
2025-08-18T22:40:21.7095737Z 
2025-08-18T22:40:21.7095871Z # etl.dialects.schemas
2025-08-18T22:40:21.7096089Z 
2025-08-18T22:40:21.7096288Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T22:40:21.7096629Z 
2025-08-18T22:40:21.7096787Z # etl.dialects.amazon\_reimbursements
2025-08-18T22:40:21.7097090Z 
2025-08-18T22:40:21.7097262Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T22:40:21.7097578Z 
2025-08-18T22:40:21.7097729Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T22:40:21.7098027Z 
2025-08-18T22:40:21.7098187Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T22:40:21.7098490Z 
2025-08-18T22:40:21.7098645Z # etl.dialects.amazon\_returns
2025-08-18T22:40:21.7098900Z 
2025-08-18T22:40:21.7099093Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T22:40:21.7099426Z 
2025-08-18T22:40:21.7099576Z # etl.dialects.amazon\_fee\_preview
2025-08-18T22:40:21.7099870Z 
2025-08-18T22:40:21.7100067Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T22:40:21.7100595Z 
2025-08-18T22:40:21.7100774Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T22:40:21.7101083Z 
2025-08-18T22:40:21.7101266Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T22:40:21.7101587Z 
2025-08-18T22:40:21.7101743Z # etl.dialects.amazon\_settlements
2025-08-18T22:40:21.7102033Z 
2025-08-18T22:40:21.7102168Z <a id="etl.dialects"></a>
2025-08-18T22:40:21.7102401Z 
2025-08-18T22:40:21.7102518Z # etl.dialects
2025-08-18T22:40:21.7102709Z 
2025-08-18T22:40:21.7102828Z <a id="ingest"></a>
2025-08-18T22:40:21.7103021Z 
2025-08-18T22:40:21.7103139Z # ingest
2025-08-18T22:40:21.7103296Z 
2025-08-18T22:40:21.7103440Z <a id="ingest.maintenance"></a>
2025-08-18T22:40:21.7103710Z 
2025-08-18T22:40:21.7103839Z # ingest.maintenance
2025-08-18T22:40:21.7104304Z 
2025-08-18T22:40:21.7104452Z <a id="ingest.copy_loader"></a>
2025-08-18T22:40:21.7104716Z 
2025-08-18T22:40:21.7104846Z # ingest.copy\_loader
2025-08-18T22:40:21.7105055Z 
2025-08-18T22:40:21.7105246Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T22:40:21.7105582Z 
2025-08-18T22:40:21.7105714Z #### copy\_df\_via\_temp
2025-08-18T22:40:21.7105935Z 
2025-08-18T22:40:21.7106056Z ```python
2025-08-18T22:40:21.7106361Z def copy_df_via_temp(engine: Engine,
2025-08-18T22:40:21.7106789Z                      df: pd.DataFrame,
2025-08-18T22:40:21.7107202Z                      target_table: str,
2025-08-18T22:40:21.7107602Z                      *,
2025-08-18T22:40:21.7107965Z                      target_schema: Optional[str] = None,
2025-08-18T22:40:21.7108444Z                      columns: Sequence[str],
2025-08-18T22:40:21.7108945Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T22:40:21.7109456Z                      analyze_after: bool = False,
2025-08-18T22:40:21.7110171Z                      connection: Any | None = None) -> int
2025-08-18T22:40:21.7110788Z ```
2025-08-18T22:40:21.7110956Z 
2025-08-18T22:40:21.7111244Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T22:40:21.7111667Z 
2025-08-18T22:40:21.7111829Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T22:40:21.7112120Z 
2025-08-18T22:40:21.7112262Z # ingest.tests.test\_smoke
2025-08-18T22:40:21.7112502Z 
2025-08-18T22:40:21.7112650Z <a id="ingest.tests"></a>
2025-08-18T22:40:21.7112886Z 
2025-08-18T22:40:21.7113006Z # ingest.tests
2025-08-18T22:40:21.7113200Z 
2025-08-18T22:40:21.7113348Z <a id="ingest.upload_router"></a>
2025-08-18T22:40:21.7113654Z 
2025-08-18T22:40:21.7113791Z # ingest.upload\_router
2025-08-18T22:40:21.7114024Z 
2025-08-18T22:40:21.7114170Z <a id="ingest.email_watcher"></a>
2025-08-18T22:40:21.7114438Z 
2025-08-18T22:40:21.7114577Z # ingest.email\_watcher
2025-08-18T22:40:21.7114788Z 
2025-08-18T22:40:21.7114946Z <a id="ingest.email_watcher.main"></a>
2025-08-18T22:40:21.7115271Z 
2025-08-18T22:40:21.7115383Z #### main
2025-08-18T22:40:21.7115544Z 
2025-08-18T22:40:21.7115656Z ```python
2025-08-18T22:40:21.7115955Z def main() -> dict[str, str]
2025-08-18T22:40:21.7116315Z ```
2025-08-18T22:40:21.7116463Z 
2025-08-18T22:40:21.7116715Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T22:40:21.7117154Z 
2025-08-18T22:40:21.7117389Z Returns {"status": "success"} when processing completes.
2025-08-18T22:40:21.7117783Z 
2025-08-18T22:40:21.7117920Z <a id="ingest.tasks"></a>
2025-08-18T22:40:21.7118153Z 
2025-08-18T22:40:21.7118272Z # ingest.tasks
2025-08-18T22:40:21.7118460Z 
2025-08-18T22:40:21.7118632Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T22:40:21.7118947Z 
2025-08-18T22:40:21.7119082Z #### task\_import\_file
2025-08-18T22:40:21.7119294Z 
2025-08-18T22:40:21.7119410Z ```python
2025-08-18T22:40:21.7119792Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T22:40:21.7120315Z def task_import_file(self: Any,
2025-08-18T22:40:21.7120917Z                      uri: str,
2025-08-18T22:40:21.7121319Z                      report_type: Optional[str] = None,
2025-08-18T22:40:21.7121818Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T22:40:21.7122250Z ```
2025-08-18T22:40:21.7122399Z 
2025-08-18T22:40:21.7122638Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T22:40:21.7123027Z 
2025-08-18T22:40:21.7123181Z <a id="ingest.celery_app"></a>
2025-08-18T22:40:21.7123442Z 
2025-08-18T22:40:21.7123571Z # ingest.celery\_app
2025-08-18T22:40:21.7123788Z 
2025-08-18T22:40:21.7123934Z <a id="ingest.ingest_router"></a>
2025-08-18T22:40:21.7124209Z 
2025-08-18T22:40:21.7124348Z # ingest.ingest\_router
2025-08-18T22:40:21.7124570Z 
2025-08-18T22:40:21.7124711Z <a id="logistics_etl"></a>
2025-08-18T22:40:21.7124949Z 
2025-08-18T22:40:21.7125079Z # logistics\_etl
2025-08-18T22:40:21.7125270Z 
2025-08-18T22:40:21.7125407Z Daily logistics ETL job.
2025-08-18T22:40:21.7125656Z 
2025-08-18T22:40:21.7126026Z <a id="logistics_etl.__main__"></a>
2025-08-18T22:40:21.7126322Z 
2025-08-18T22:40:21.7126457Z # logistics\_etl.\_\_main\_\_
2025-08-18T22:40:21.7126713Z 
2025-08-18T22:40:21.7126853Z <a id="logistics_etl.dsn"></a>
2025-08-18T22:40:21.7127104Z 
2025-08-18T22:40:21.7127233Z # logistics\_etl.dsn
2025-08-18T22:40:21.7127445Z 
2025-08-18T22:40:21.7127656Z Local DSN builder to avoid cross-service dependency.
2025-08-18T22:40:21.7128042Z 
2025-08-18T22:40:21.7128206Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T22:40:21.7128512Z 
2025-08-18T22:40:21.7128629Z #### build\_dsn
2025-08-18T22:40:21.7128832Z 
2025-08-18T22:40:21.7128947Z ```python
2025-08-18T22:40:21.7129276Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:40:21.7129683Z ```
2025-08-18T22:40:21.7129840Z 
2025-08-18T22:40:21.7130108Z Return a Postgres DSN assembled from environment variables.
2025-08-18T22:40:21.7130692Z 
2025-08-18T22:40:21.7130985Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T22:40:21.7131969Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T22:40:21.7132613Z error when any required variable is missing.
2025-08-18T22:40:21.7132948Z 
2025-08-18T22:40:21.7133120Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T22:40:21.7133438Z 
2025-08-18T22:40:21.7133596Z # logistics\_etl.tests.conftest
2025-08-18T22:40:21.7133859Z 
2025-08-18T22:40:21.7134043Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T22:40:21.7134398Z 
2025-08-18T22:40:21.7134558Z # logistics\_etl.tests.test\_repository
2025-08-18T22:40:21.7134859Z 
2025-08-18T22:40:21.7135027Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T22:40:21.7135360Z 
2025-08-18T22:40:21.7135513Z # logistics\_etl.tests.test\_cron
2025-08-18T22:40:21.7135794Z 
2025-08-18T22:40:21.7135979Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T22:40:21.7136319Z 
2025-08-18T22:40:21.7136467Z # logistics\_etl.tests.test\_imports
2025-08-18T22:40:21.7136766Z 
2025-08-18T22:40:21.7136950Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T22:40:21.7137280Z 
2025-08-18T22:40:21.7137432Z # logistics\_etl.tests.test\_smoke
2025-08-18T22:40:21.7137724Z 
2025-08-18T22:40:21.7137897Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T22:40:21.7138216Z 
2025-08-18T22:40:21.7138372Z # logistics\_etl.tests.test\_client
2025-08-18T22:40:21.7138658Z 
2025-08-18T22:40:21.7138803Z <a id="logistics_etl.tests"></a>
2025-08-18T22:40:21.7139076Z 
2025-08-18T22:40:21.7139202Z # logistics\_etl.tests
2025-08-18T22:40:21.7139416Z 
2025-08-18T22:40:21.7139557Z <a id="logistics_etl.flow"></a>
2025-08-18T22:40:21.7139821Z 
2025-08-18T22:40:21.7139948Z # logistics\_etl.flow
2025-08-18T22:40:21.7140159Z 
2025-08-18T22:40:21.7140310Z <a id="logistics_etl.client"></a>
2025-08-18T22:40:21.7140764Z 
2025-08-18T22:40:21.7140899Z # logistics\_etl.client
2025-08-18T22:40:21.7141127Z 
2025-08-18T22:40:21.7141272Z <a id="logistics_etl.cron"></a>
2025-08-18T22:40:21.7141534Z 
2025-08-18T22:40:21.7141666Z # logistics\_etl.cron
2025-08-18T22:40:21.7141905Z 
2025-08-18T22:40:21.7142048Z <a id="logistics_etl.db"></a>
2025-08-18T22:40:21.7142306Z 
2025-08-18T22:40:21.7171116Z # logistics\_etl.db
2025-08-18T22:40:21.7171627Z 
2025-08-18T22:40:21.7171878Z <a id="logistics_etl.repository"></a>
2025-08-18T22:40:21.7172223Z 
2025-08-18T22:40:21.7172386Z # logistics\_etl.repository
2025-08-18T22:40:21.7172651Z 
2025-08-18T22:40:21.7172793Z <a id="alert_bot"></a>
2025-08-18T22:40:21.7173023Z 
2025-08-18T22:40:21.7173159Z # alert\_bot
2025-08-18T22:40:21.7173339Z 
2025-08-18T22:40:21.7173506Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T22:40:21.7173831Z 
2025-08-18T22:40:21.7173982Z # alert\_bot.tests.test\_smoke
2025-08-18T22:40:21.7174243Z 
2025-08-18T22:40:21.7174401Z <a id="alert_bot.tests"></a>
2025-08-18T22:40:21.7174660Z 
2025-08-18T22:40:21.7174790Z # alert\_bot.tests
2025-08-18T22:40:21.7174982Z 
2025-08-18T22:40:21.7175131Z <a id="alert_bot.alert_bot"></a>
2025-08-18T22:40:21.7175405Z 
2025-08-18T22:40:21.7175554Z # alert\_bot.alert\_bot
2025-08-18T22:40:21.7176100Z 
2025-08-18T22:40:21.7176250Z <a id="alert_bot.rules"></a>
2025-08-18T22:40:21.7176514Z 
2025-08-18T22:40:21.7176650Z # alert\_bot.rules
2025-08-18T22:40:21.7176856Z 
2025-08-18T22:40:21.7176981Z <a id="common"></a>
2025-08-18T22:40:21.7177186Z 
2025-08-18T22:40:21.7177309Z # common
2025-08-18T22:40:21.7177571Z 
2025-08-18T22:40:21.7177716Z <a id="common.dsn"></a>
2025-08-18T22:40:21.7177956Z 
2025-08-18T22:40:21.7178077Z # common.dsn
2025-08-18T22:40:21.7178249Z 
2025-08-18T22:40:21.7178402Z <a id="common.dsn.build_dsn"></a>
2025-08-18T22:40:21.7178693Z 
2025-08-18T22:40:21.7178812Z #### build\_dsn
2025-08-18T22:40:21.7178999Z 
2025-08-18T22:40:21.7179122Z ```python
2025-08-18T22:40:21.7179439Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:40:21.7179851Z ```
2025-08-18T22:40:21.7180008Z 
2025-08-18T22:40:21.7180237Z Return a Postgres DSN, validating required variables.
2025-08-18T22:40:21.7180897Z 
2025-08-18T22:40:21.7181255Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T22:40:21.7182380Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T22:40:21.7183144Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T22:40:21.7183715Z missing.
2025-08-18T22:40:21.7183872Z 
2025-08-18T22:40:21.7184021Z <a id="common.models_vendor"></a>
2025-08-18T22:40:21.7184303Z 
2025-08-18T22:40:21.7184440Z # common.models\_vendor
2025-08-18T22:40:21.7184662Z 
2025-08-18T22:40:21.7184826Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T22:40:21.7185146Z 
2025-08-18T22:40:21.7185264Z ## Vendor Objects
2025-08-18T22:40:21.7185453Z 
2025-08-18T22:40:21.7185576Z ```python
2025-08-18T22:40:21.7185851Z class Vendor(Base)
2025-08-18T22:40:21.7186145Z ```
2025-08-18T22:40:21.7186293Z 
2025-08-18T22:40:21.7186430Z Vendor of inventory items.
2025-08-18T22:40:21.7186672Z 
2025-08-18T22:40:21.7186848Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T22:40:21.7187181Z 
2025-08-18T22:40:21.7187311Z ## VendorPrice Objects
2025-08-18T22:40:21.7187521Z 
2025-08-18T22:40:21.7187630Z ```python
2025-08-18T22:40:21.7187920Z class VendorPrice(Base)
2025-08-18T22:40:21.7188234Z ```
2025-08-18T22:40:21.7188378Z 
2025-08-18T22:40:21.7188564Z Association table linking vendors to pricing.
2025-08-18T22:40:21.7188889Z 
2025-08-18T22:40:21.7189018Z <a id="common.db_url"></a>
2025-08-18T22:40:21.7189260Z 
2025-08-18T22:40:21.7189373Z # common.db\_url
2025-08-18T22:40:21.7189550Z 
2025-08-18T22:40:21.7189691Z <a id="common.db_url.build_url"></a>
2025-08-18T22:40:21.7189974Z 
2025-08-18T22:40:21.7190087Z #### build\_url
2025-08-18T22:40:21.7190266Z 
2025-08-18T22:40:21.7190384Z ```python
2025-08-18T22:40:21.7190868Z def build_url(async_: bool = True) -> str
2025-08-18T22:40:21.7191281Z ```
2025-08-18T22:40:21.7191430Z 
2025-08-18T22:40:21.7191598Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:40:21.7191920Z 
2025-08-18T22:40:21.7192056Z <a id="common.keepa"></a>
2025-08-18T22:40:21.7192297Z 
2025-08-18T22:40:21.7192420Z # common.keepa
2025-08-18T22:40:21.7192600Z 
2025-08-18T22:40:21.7192721Z <a id="common.llm"></a>
2025-08-18T22:40:21.7192924Z 
2025-08-18T22:40:21.7193038Z # common.llm
2025-08-18T22:40:21.7193203Z 
2025-08-18T22:40:21.7193338Z <a id="common.settings"></a>
2025-08-18T22:40:21.7193580Z 
2025-08-18T22:40:21.7193686Z # common.settings
2025-08-18T22:40:21.7193852Z 
2025-08-18T22:40:21.7193962Z <a id="common.db"></a>
2025-08-18T22:40:21.7194156Z 
2025-08-18T22:40:21.7194253Z # common.db
2025-08-18T22:40:21.7194394Z 
2025-08-18T22:40:21.7194546Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T22:40:21.7194830Z 
2025-08-18T22:40:21.7194946Z #### build\_sqlalchemy\_url
2025-08-18T22:40:21.7195179Z 
2025-08-18T22:40:21.7195293Z ```python
2025-08-18T22:40:21.7195597Z def build_sqlalchemy_url() -> str
2025-08-18T22:40:21.7195985Z ```
2025-08-18T22:40:21.7196134Z 
2025-08-18T22:40:21.7196303Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:40:21.7196624Z 
2025-08-18T22:40:21.7197031Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T22:40:21.7197351Z 
2025-08-18T22:40:21.7197493Z #### build\_asyncpg\_dsn
2025-08-18T22:40:21.7197715Z 
2025-08-18T22:40:21.7197826Z ```python
2025-08-18T22:40:21.7198133Z def build_asyncpg_dsn() -> str
2025-08-18T22:40:21.7198472Z ```
2025-08-18T22:40:21.7198623Z 
2025-08-18T22:40:21.7198848Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:40:21.7199225Z 
2025-08-18T22:40:21.7199374Z <a id="common.db.refresh_mvs"></a>
2025-08-18T22:40:21.7199642Z 
2025-08-18T22:40:21.7199755Z #### refresh\_mvs
2025-08-18T22:40:21.7199936Z 
2025-08-18T22:40:21.7200051Z ```python
2025-08-18T22:40:21.7200377Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:40:21.7200993Z ```
2025-08-18T22:40:21.7201137Z 
2025-08-18T22:40:21.7201388Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:40:21.7201804Z 
2025-08-18T22:40:21.7201946Z <a id="common.config"></a>
2025-08-18T22:40:21.7202190Z 
2025-08-18T22:40:21.7202525Z # common.config
2025-08-18T22:40:21.7202709Z 
2025-08-18T22:40:21.7202834Z <a id="common.base"></a>
2025-08-18T22:40:21.7203064Z 
2025-08-18T22:40:21.7203171Z # common.base
2025-08-18T22:40:21.7203343Z 
2025-08-18T22:40:21.7203482Z <a id="common.base.Base"></a>
2025-08-18T22:40:21.7203730Z 
2025-08-18T22:40:21.7203845Z ## Base Objects
2025-08-18T22:40:21.7204019Z 
2025-08-18T22:40:21.7204134Z ```python
2025-08-18T22:40:21.7204418Z class Base(DeclarativeBase)
2025-08-18T22:40:21.7204765Z ```
2025-08-18T22:40:21.7204912Z 
2025-08-18T22:40:21.7205060Z Base class for SQLAlchemy models.
2025-08-18T22:40:21.7205338Z 
2025-08-18T22:40:21.7205466Z <a id="repricer"></a>
2025-08-18T22:40:21.7205673Z 
2025-08-18T22:40:21.7205779Z # repricer
2025-08-18T22:40:21.7205939Z 
2025-08-18T22:40:21.7206089Z <a id="repricer.app.schemas"></a>
2025-08-18T22:40:21.7206357Z 
2025-08-18T22:40:21.7206487Z # repricer.app.schemas
2025-08-18T22:40:21.7206689Z 
2025-08-18T22:40:21.7206822Z <a id="repricer.app.deps"></a>
2025-08-18T22:40:21.7207081Z 
2025-08-18T22:40:21.7207216Z # repricer.app.deps
2025-08-18T22:40:21.7207415Z 
2025-08-18T22:40:21.7207617Z Placeholder module for Keepa / SP-API clients.
2025-08-18T22:40:21.7207961Z 
2025-08-18T22:40:21.7208108Z <a id="repricer.app.logic"></a>
2025-08-18T22:40:21.7208369Z 
2025-08-18T22:40:21.7208506Z # repricer.app.logic
2025-08-18T22:40:21.7208707Z 
2025-08-18T22:40:21.7208876Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T22:40:21.7209188Z 
2025-08-18T22:40:21.7209308Z #### MIN\_MARGIN
2025-08-18T22:40:21.7209493Z 
2025-08-18T22:40:21.7209600Z 15 % ROI
2025-08-18T22:40:21.7209758Z 
2025-08-18T22:40:21.7209935Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T22:40:21.7210276Z 
2025-08-18T22:40:21.7210402Z #### compute\_price
2025-08-18T22:40:21.7210817Z 
2025-08-18T22:40:21.7210924Z ```python
2025-08-18T22:40:21.7211377Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T22:40:21.7211922Z ```
2025-08-18T22:40:21.7212069Z 
2025-08-18T22:40:21.7212283Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T22:40:21.7212783Z Replace with real competitive logic later.
2025-08-18T22:40:21.7213115Z 
2025-08-18T22:40:21.7213263Z <a id="repricer.app.main"></a>
2025-08-18T22:40:21.7213528Z 
2025-08-18T22:40:21.7213663Z # repricer.app.main
2025-08-18T22:40:21.7213862Z 
2025-08-18T22:40:21.7214013Z <a id="repricer.app"></a>
2025-08-18T22:40:21.7214349Z 
2025-08-18T22:40:21.7214467Z # repricer.app
2025-08-18T22:40:21.7214647Z 
2025-08-18T22:40:21.7214808Z <a id="repricer.tests.test_imports"></a>
2025-08-18T22:40:21.7215126Z 
2025-08-18T22:40:21.7215268Z # repricer.tests.test\_imports
2025-08-18T22:40:21.7215518Z 
2025-08-18T22:40:21.7215668Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T22:40:21.7215962Z 
2025-08-18T22:40:21.7216101Z # repricer.tests.test\_smoke
2025-08-18T22:40:21.7216351Z 
2025-08-18T22:40:21.7216488Z <a id="repricer.tests"></a>
2025-08-18T22:40:21.7216725Z 
2025-08-18T22:40:21.7216842Z # repricer.tests
2025-08-18T22:40:21.7217266Z 
2025-08-18T22:40:21.7217385Z <a id="db"></a>
2025-08-18T22:40:21.7217566Z 
2025-08-18T22:40:21.7217669Z # db
2025-08-18T22:40:21.7217825Z 
2025-08-18T22:40:21.7217960Z <a id="db.utils.views"></a>
2025-08-18T22:40:21.7218202Z 
2025-08-18T22:40:21.7218329Z # db.utils.views
2025-08-18T22:40:21.7218514Z 
2025-08-18T22:40:21.7218678Z <a id="db.utils.views.replace_view"></a>
2025-08-18T22:40:21.7219008Z 
2025-08-18T22:40:21.7219133Z #### replace\_view
2025-08-18T22:40:21.7219326Z 
2025-08-18T22:40:21.7219444Z ```python
2025-08-18T22:40:21.7219784Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T22:40:21.7220229Z ```
2025-08-18T22:40:21.7220381Z 
2025-08-18T22:40:21.7220733Z Drop and recreate a SQL view atomically.
2025-08-18T22:40:21.7221030Z 
2025-08-18T22:40:21.7221156Z <a id="db.utils"></a>
2025-08-18T22:40:21.7221357Z 
2025-08-18T22:40:21.7221460Z # db.utils
2025-08-18T22:40:21.7221618Z 
2025-08-18T22:40:21.7221747Z <a id="price_importer"></a>
2025-08-18T22:40:21.7221973Z 
2025-08-18T22:40:21.7222320Z # price\_importer
2025-08-18T22:40:21.7222440Z 
2025-08-18T22:40:21.7222552Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T22:40:21.7222763Z 
2025-08-18T22:40:21.7222859Z # price\_importer.services\_common.dsn
2025-08-18T22:40:21.7223034Z 
2025-08-18T22:40:21.7223162Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T22:40:21.7223393Z 
2025-08-18T22:40:21.7223457Z #### build\_dsn
2025-08-18T22:40:21.7223561Z 
2025-08-18T22:40:21.7223623Z ```python
2025-08-18T22:40:21.7223803Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:40:21.7224035Z ```
2025-08-18T22:40:21.7224124Z 
2025-08-18T22:40:21.7224189Z Return safe DSN.
2025-08-18T22:40:21.7224292Z 
2025-08-18T22:40:21.7224707Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T22:40:21.7224933Z 
2025-08-18T22:40:21.7225061Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T22:40:21.7225295Z 
2025-08-18T22:40:21.7225407Z # price\_importer.services\_common.models\_vendor
2025-08-18T22:40:21.7225630Z 
2025-08-18T22:40:21.7225734Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T22:40:21.7225943Z 
2025-08-18T22:40:21.7226036Z # price\_importer.services\_common.db\_url
2025-08-18T22:40:21.7226220Z 
2025-08-18T22:40:21.7226361Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T22:40:21.7226594Z 
2025-08-18T22:40:21.7226659Z #### build\_url
2025-08-18T22:40:21.7226763Z 
2025-08-18T22:40:21.7226825Z ```python
2025-08-18T22:40:21.7226995Z def build_url(async_: bool = True) -> str
2025-08-18T22:40:21.7227236Z ```
2025-08-18T22:40:21.7227316Z 
2025-08-18T22:40:21.7227420Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:40:21.7227607Z 
2025-08-18T22:40:21.7227711Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T22:40:21.7227913Z 
2025-08-18T22:40:21.7228013Z # price\_importer.services\_common.keepa
2025-08-18T22:40:21.7228198Z 
2025-08-18T22:40:21.7228305Z <a id="price_importer.services_common.llm"></a>
2025-08-18T22:40:21.7228518Z 
2025-08-18T22:40:21.7228615Z # price\_importer.services\_common.llm
2025-08-18T22:40:21.7228793Z 
2025-08-18T22:40:21.7228915Z <a id="price_importer.services_common.settings"></a>
2025-08-18T22:40:21.7229125Z 
2025-08-18T22:40:21.7229219Z # price\_importer.services\_common.settings
2025-08-18T22:40:21.7229412Z 
2025-08-18T22:40:21.7229529Z <a id="price_importer.services_common.db"></a>
2025-08-18T22:40:21.7229726Z 
2025-08-18T22:40:21.7229816Z # price\_importer.services\_common.db
2025-08-18T22:40:21.7229996Z 
2025-08-18T22:40:21.7230160Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T22:40:21.7230620Z 
2025-08-18T22:40:21.7230774Z #### build\_sqlalchemy\_url
2025-08-18T22:40:21.7230922Z 
2025-08-18T22:40:21.7230987Z ```python
2025-08-18T22:40:21.7231164Z def build_sqlalchemy_url() -> str
2025-08-18T22:40:21.7231378Z ```
2025-08-18T22:40:21.7231462Z 
2025-08-18T22:40:21.7231555Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:40:21.7231741Z 
2025-08-18T22:40:21.7232054Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T22:40:21.7232308Z 
2025-08-18T22:40:21.7232384Z #### build\_asyncpg\_dsn
2025-08-18T22:40:21.7232514Z 
2025-08-18T22:40:21.7232581Z ```python
2025-08-18T22:40:21.7232748Z def build_asyncpg_dsn() -> str
2025-08-18T22:40:21.7232955Z ```
2025-08-18T22:40:21.7233035Z 
2025-08-18T22:40:21.7233165Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:40:21.7233399Z 
2025-08-18T22:40:21.7233525Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T22:40:21.7233753Z 
2025-08-18T22:40:21.7233826Z #### refresh\_mvs
2025-08-18T22:40:21.7233932Z 
2025-08-18T22:40:21.7233994Z ```python
2025-08-18T22:40:21.7234192Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:40:21.7234455Z ```
2025-08-18T22:40:21.7234538Z 
2025-08-18T22:40:21.7234676Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:40:21.7234909Z 
2025-08-18T22:40:21.7235004Z <a id="price_importer.services_common"></a>
2025-08-18T22:40:21.7235314Z 
2025-08-18T22:40:21.7235401Z # price\_importer.services\_common
2025-08-18T22:40:21.7235564Z 
2025-08-18T22:40:21.7235672Z <a id="price_importer.services_common.base"></a>
2025-08-18T22:40:21.7235874Z 
2025-08-18T22:40:21.7235964Z # price\_importer.services\_common.base
2025-08-18T22:40:21.7236147Z 
2025-08-18T22:40:21.7236236Z <a id="price_importer.normaliser"></a>
2025-08-18T22:40:21.7236420Z 
2025-08-18T22:40:21.7236504Z # price\_importer.normaliser
2025-08-18T22:40:21.7236660Z 
2025-08-18T22:40:21.7236765Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T22:40:21.7236969Z 
2025-08-18T22:40:21.7237065Z # price\_importer.common.models\_vendor
2025-08-18T22:40:21.7237242Z 
2025-08-18T22:40:21.7237332Z <a id="price_importer.common.db_url"></a>
2025-08-18T22:40:21.7237522Z 
2025-08-18T22:40:21.7237605Z # price\_importer.common.db\_url
2025-08-18T22:40:21.7237757Z 
2025-08-18T22:40:21.7237861Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T22:40:21.7238078Z 
2025-08-18T22:40:21.7238140Z #### make\_dsn
2025-08-18T22:40:21.7238238Z 
2025-08-18T22:40:21.7238304Z ```python
2025-08-18T22:40:21.7238475Z def make_dsn(async_: bool = False) -> str
2025-08-18T22:40:21.7238712Z ```
2025-08-18T22:40:21.7238794Z 
2025-08-18T22:40:21.7238914Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T22:40:21.7239140Z 
2025-08-18T22:40:21.7239246Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T22:40:21.7239452Z 
2025-08-18T22:40:21.7239520Z #### build\_url
2025-08-18T22:40:21.7239619Z 
2025-08-18T22:40:21.7239680Z ```python
2025-08-18T22:40:21.7239856Z def build_url(async_: bool = False) -> str
2025-08-18T22:40:21.7240086Z ```
2025-08-18T22:40:21.7240173Z 
2025-08-18T22:40:21.7240312Z Return Postgres DSN built from environment variables.
2025-08-18T22:40:21.7240705Z 
2025-08-18T22:40:21.7240798Z <a id="price_importer.common"></a>
2025-08-18T22:40:21.7240975Z 
2025-08-18T22:40:21.7241051Z # price\_importer.common
2025-08-18T22:40:21.7241185Z 
2025-08-18T22:40:21.7241292Z <a id="price_importer.common.base"></a>
2025-08-18T22:40:21.7241472Z 
2025-08-18T22:40:21.7241555Z # price\_importer.common.base
2025-08-18T22:40:21.7241709Z 
2025-08-18T22:40:21.7241805Z <a id="price_importer.tests.conftest"></a>
2025-08-18T22:40:21.7241991Z 
2025-08-18T22:40:21.7242074Z # price\_importer.tests.conftest
2025-08-18T22:40:21.7242265Z 
2025-08-18T22:40:21.7242364Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T22:40:21.7242555Z 
2025-08-18T22:40:21.7242647Z # price\_importer.tests.test\_reader
2025-08-18T22:40:21.7242818Z 
2025-08-18T22:40:21.7242916Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T22:40:21.7243115Z 
2025-08-18T22:40:21.7243204Z # price\_importer.tests.test\_imports
2025-08-18T22:40:21.7243374Z 
2025-08-18T22:40:21.7243469Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T22:40:21.7243662Z 
2025-08-18T22:40:21.7243746Z # price\_importer.tests.test\_smoke
2025-08-18T22:40:21.7243908Z 
2025-08-18T22:40:21.7244021Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T22:40:21.7244356Z 
2025-08-18T22:40:21.7244447Z # price\_importer.tests.test\_normaliser
2025-08-18T22:40:21.7244630Z 
2025-08-18T22:40:21.7244713Z <a id="price_importer.tests"></a>
2025-08-18T22:40:21.7244869Z 
2025-08-18T22:40:21.7244942Z # price\_importer.tests
2025-08-18T22:40:21.7245074Z 
2025-08-18T22:40:21.7245156Z <a id="price_importer.reader"></a>
2025-08-18T22:40:21.7245314Z 
2025-08-18T22:40:21.7245395Z # price\_importer.reader
2025-08-18T22:40:21.7245526Z 
2025-08-18T22:40:21.7245614Z <a id="price_importer.repository"></a>
2025-08-18T22:40:21.7245793Z 
2025-08-18T22:40:21.7245873Z # price\_importer.repository
2025-08-18T22:40:21.7246016Z 
2025-08-18T22:40:21.7246104Z <a id="price_importer.import"></a>
2025-08-18T22:40:21.7246270Z 
2025-08-18T22:40:21.7246344Z # price\_importer.import
2025-08-18T22:40:21.7246472Z 
2025-08-18T22:40:21.7246546Z <a id="fees_h10"></a>
2025-08-18T22:40:21.7246662Z 
2025-08-18T22:40:21.7246725Z # fees\_h10
2025-08-18T22:40:21.7246935Z 
2025-08-18T22:40:21.7247015Z <a id="fees_h10.worker"></a>
2025-08-18T22:40:21.7247153Z 
2025-08-18T22:40:21.7247218Z # fees\_h10.worker
2025-08-18T22:40:21.7247328Z 
2025-08-18T22:40:21.7247426Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T22:40:21.7247615Z 
2025-08-18T22:40:21.7247693Z #### list\_active\_asins
2025-08-18T22:40:21.7247818Z 
2025-08-18T22:40:21.7247878Z ```python
2025-08-18T22:40:21.7248051Z def list_active_asins() -> list[str]
2025-08-18T22:40:21.7248271Z ```
2025-08-18T22:40:21.7248358Z 
2025-08-18T22:40:21.7248469Z Return known ASINs or an empty list if unavailable.
2025-08-18T22:40:21.7248678Z 
2025-08-18T22:40:21.7248761Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T22:40:21.7248936Z 
2025-08-18T22:40:21.7249014Z # fees\_h10.tests.test\_smoke
2025-08-18T22:40:21.7249156Z 
2025-08-18T22:40:21.7249236Z <a id="fees_h10.tests"></a>
2025-08-18T22:40:21.7249371Z 
2025-08-18T22:40:21.7249437Z # fees\_h10.tests
2025-08-18T22:40:21.7249538Z 
2025-08-18T22:40:21.7249623Z <a id="fees_h10.client"></a>
2025-08-18T22:40:21.7249763Z 
2025-08-18T22:40:21.7249828Z # fees\_h10.client
2025-08-18T22:40:21.7249937Z 
2025-08-18T22:40:21.7250017Z <a id="fees_h10.repository"></a>
2025-08-18T22:40:21.7250166Z 
2025-08-18T22:40:21.7250241Z # fees\_h10.repository
2025-08-18T22:40:21.7250362Z 
2025-08-18T22:40:21.7250608Z <a id="emailer"></a>
2025-08-18T22:40:21.7250734Z 
2025-08-18T22:40:21.7250802Z # emailer
2025-08-18T22:40:21.7250893Z 
2025-08-18T22:40:21.7250993Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T22:40:21.7251191Z 
2025-08-18T22:40:21.7251278Z # emailer.tests.test\_import\_emailer
2025-08-18T22:40:21.7251452Z 
2025-08-18T22:40:21.7251541Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T22:40:21.7251711Z 
2025-08-18T22:40:21.7251788Z # emailer.tests.test\_smoke
2025-08-18T22:40:21.7251927Z 
2025-08-18T22:40:21.7252008Z <a id="emailer.tests"></a>
2025-08-18T22:40:21.7252143Z 
2025-08-18T22:40:21.7252209Z # emailer.tests
2025-08-18T22:40:21.7252318Z 
2025-08-18T22:40:21.7252409Z <a id="emailer.generate_body"></a>
2025-08-18T22:40:21.7252570Z 
2025-08-18T22:40:21.7252646Z # emailer.generate\_body
2025-08-18T22:40:21.7252783Z 
2025-08-18T22:40:21.7252854Z <a id="llm_server"></a>
2025-08-18T22:40:21.7252974Z 
2025-08-18T22:40:21.7253047Z # llm\_server
2025-08-18T22:40:21.7253142Z 
2025-08-18T22:40:21.7253221Z <a id="llm_server.app"></a>
2025-08-18T22:40:21.7253366Z 
2025-08-18T22:40:21.7253432Z # llm\_server.app
2025-08-18T22:40:21.7253535Z 
