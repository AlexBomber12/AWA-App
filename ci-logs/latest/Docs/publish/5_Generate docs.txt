2025-08-18T11:54:48.2311655Z ##[group]Run pydoc-markdown
2025-08-18T11:54:48.2312047Z [36;1mpydoc-markdown[0m
2025-08-18T11:54:48.2353996Z shell: /usr/bin/bash -e {0}
2025-08-18T11:54:48.2354341Z env:
2025-08-18T11:54:48.2354703Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T11:54:48.2355340Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T11:54:48.2355983Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T11:54:48.2356539Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T11:54:48.2357101Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T11:54:48.2357657Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T11:54:48.2358121Z ##[endgroup]
2025-08-18T11:54:48.7563909Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T11:54:48.7565246Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T11:54:48.7565926Z In "pydoc-markdown.yml"
2025-08-18T11:54:48.7566559Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T11:54:48.7567486Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T11:54:48.7568604Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T11:54:48.7569375Z 
2025-08-18T11:54:49.0550081Z <a id="__init__"></a>
2025-08-18T11:54:49.0550786Z 
2025-08-18T11:54:49.0550933Z # \_\_init\_\_
2025-08-18T11:54:49.0551163Z 
2025-08-18T11:54:49.0551318Z <a id="api"></a>
2025-08-18T11:54:49.0551758Z 
2025-08-18T11:54:49.0551898Z # api
2025-08-18T11:54:49.0552096Z 
2025-08-18T11:54:49.0552262Z <a id="api.errors"></a>
2025-08-18T11:54:49.0552533Z 
2025-08-18T11:54:49.0552677Z # api.errors
2025-08-18T11:54:49.0552893Z 
2025-08-18T11:54:49.0553083Z <a id="api.tests.test_errors_json"></a>
2025-08-18T11:54:49.0553469Z 
2025-08-18T11:54:49.0553656Z # api.tests.test\_errors\_json
2025-08-18T11:54:49.0553953Z 
2025-08-18T11:54:49.0554114Z <a id="api.tests.test_llm"></a>
2025-08-18T11:54:49.0554396Z 
2025-08-18T11:54:49.0555002Z # api.tests.test\_llm
2025-08-18T11:54:49.0555294Z 
2025-08-18T11:54:49.0555487Z <a id="api.tests.test_imports"></a>
2025-08-18T11:54:49.0555898Z 
2025-08-18T11:54:49.0556066Z # api.tests.test\_imports
2025-08-18T11:54:49.0556337Z 
2025-08-18T11:54:49.0556535Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T11:54:49.0556902Z 
2025-08-18T11:54:49.0557078Z # api.tests.test\_entrypoint
2025-08-18T11:54:49.0557376Z 
2025-08-18T11:54:49.0557565Z <a id="api.tests.test_health"></a>
2025-08-18T11:54:49.0557907Z 
2025-08-18T11:54:49.0558066Z # api.tests.test\_health
2025-08-18T11:54:49.0558360Z 
2025-08-18T11:54:49.0558541Z <a id="api.logging_config"></a>
2025-08-18T11:54:49.0558842Z 
2025-08-18T11:54:49.0559006Z # api.logging\_config
2025-08-18T11:54:49.0559264Z 
2025-08-18T11:54:49.0559440Z <a id="api.migrations.env"></a>
2025-08-18T11:54:49.0559729Z 
2025-08-18T11:54:49.0559884Z # api.migrations.env
2025-08-18T11:54:49.0560118Z 
2025-08-18T11:54:49.0560363Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T11:54:49.0560838Z 
2025-08-18T11:54:49.0561075Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T11:54:49.0561715Z 
2025-08-18T11:54:49.0561965Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T11:54:49.0562398Z 
2025-08-18T11:54:49.0562601Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T11:54:49.0562960Z 
2025-08-18T11:54:49.0563280Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T11:54:49.0563763Z 
2025-08-18T11:54:49.0564031Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T11:54:49.0564497Z 
2025-08-18T11:54:49.0564746Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T11:54:49.0565155Z 
2025-08-18T11:54:49.0565375Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T11:54:49.0565753Z 
2025-08-18T11:54:49.0565989Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T11:54:49.0566430Z 
2025-08-18T11:54:49.0566638Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T11:54:49.0567017Z 
2025-08-18T11:54:49.0567632Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T11:54:49.0568060Z 
2025-08-18T11:54:49.0568284Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T11:54:49.0568679Z 
2025-08-18T11:54:49.0568930Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T11:54:49.0569326Z 
2025-08-18T11:54:49.0569537Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T11:54:49.0569912Z 
2025-08-18T11:54:49.0570159Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T11:54:49.0570573Z 
2025-08-18T11:54:49.0570790Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T11:54:49.0571192Z 
2025-08-18T11:54:49.0571639Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T11:54:49.0572091Z 
2025-08-18T11:54:49.0572340Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T11:54:49.0572721Z 
2025-08-18T11:54:49.0572955Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T11:54:49.0573367Z 
2025-08-18T11:54:49.0573576Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T11:54:49.0573945Z 
2025-08-18T11:54:49.0574216Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T11:54:49.0574642Z 
2025-08-18T11:54:49.0574860Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T11:54:49.0575242Z 
2025-08-18T11:54:49.0575456Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T11:54:49.0575816Z 
2025-08-18T11:54:49.0575996Z # api.migrations.versions.0001\_baseline
2025-08-18T11:54:49.0576338Z 
2025-08-18T11:54:49.0576506Z <a id="api.migrations.versions"></a>
2025-08-18T11:54:49.0576817Z 
2025-08-18T11:54:49.0576981Z # api.migrations.versions
2025-08-18T11:54:49.0577234Z 
2025-08-18T11:54:49.0577383Z <a id="api.migrations"></a>
2025-08-18T11:54:49.0577640Z 
2025-08-18T11:54:49.0577776Z # api.migrations
2025-08-18T11:54:49.0577971Z 
2025-08-18T11:54:49.0578107Z <a id="api.db"></a>
2025-08-18T11:54:49.0578318Z 
2025-08-18T11:54:49.0578665Z # api.db
2025-08-18T11:54:49.0578845Z 
2025-08-18T11:54:49.0579003Z <a id="api.routes.stats"></a>
2025-08-18T11:54:49.0579286Z 
2025-08-18T11:54:49.0579417Z # api.routes.stats
2025-08-18T11:54:49.0579628Z 
2025-08-18T11:54:49.0579795Z <a id="api.routes.stats.kpi"></a>
2025-08-18T11:54:49.0580081Z 
2025-08-18T11:54:49.0580203Z #### kpi
2025-08-18T11:54:49.0580381Z 
2025-08-18T11:54:49.0580503Z ```python
2025-08-18T11:54:49.0580805Z @router.get("/stats/kpi")
2025-08-18T11:54:49.0581270Z def kpi() -> List[Dict[str, int]]
2025-08-18T11:54:49.0581835Z ```
2025-08-18T11:54:49.0582009Z 
2025-08-18T11:54:49.0582159Z Return KPI metrics (mock).
2025-08-18T11:54:49.0582411Z 
2025-08-18T11:54:49.0582606Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T11:54:49.0582944Z 
2025-08-18T11:54:49.0583071Z #### roi\_by\_vendor
2025-08-18T11:54:49.0583283Z 
2025-08-18T11:54:49.0583400Z ```python
2025-08-18T11:54:49.0583722Z @router.get("/stats/roi_by_vendor")
2025-08-18T11:54:49.0584195Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T11:54:49.0584645Z ```
2025-08-18T11:54:49.0584831Z 
2025-08-18T11:54:49.0584981Z Return ROI percent by vendor.
2025-08-18T11:54:49.0585381Z 
2025-08-18T11:54:49.0585554Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T11:54:49.0585876Z 
2025-08-18T11:54:49.0586000Z #### roi\_trend
2025-08-18T11:54:49.0586188Z 
2025-08-18T11:54:49.0586305Z ```python
2025-08-18T11:54:49.0586624Z @router.get("/stats/roi_trend")
2025-08-18T11:54:49.0587067Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T11:54:49.0587517Z ```
2025-08-18T11:54:49.0587671Z 
2025-08-18T11:54:49.0587808Z Return 30-day ROI trend.
2025-08-18T11:54:49.0588053Z 
2025-08-18T11:54:49.0588199Z <a id="api.routes.roi"></a>
2025-08-18T11:54:49.0588452Z 
2025-08-18T11:54:49.0588577Z # api.routes.roi
2025-08-18T11:54:49.0588789Z 
2025-08-18T11:54:49.0588937Z <a id="api.routes.health"></a>
2025-08-18T11:54:49.0589201Z 
2025-08-18T11:54:49.0589338Z # api.routes.health
2025-08-18T11:54:49.0589543Z 
2025-08-18T11:54:49.0589720Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T11:54:49.0590314Z 
2025-08-18T11:54:49.0590436Z #### MAX\_SKEW
2025-08-18T11:54:49.0590623Z 
2025-08-18T11:54:49.0590734Z seconds
2025-08-18T11:54:49.0590930Z 
2025-08-18T11:54:49.0591099Z <a id="api.routes.health.health"></a>
2025-08-18T11:54:49.0591581Z 
2025-08-18T11:54:49.0591705Z #### health
2025-08-18T11:54:49.0591882Z 
2025-08-18T11:54:49.0591998Z ```python
2025-08-18T11:54:49.0592368Z @router.get("/health", include_in_schema=False)
2025-08-18T11:54:49.0593069Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T11:54:49.0593719Z ```
2025-08-18T11:54:49.0593878Z 
2025-08-18T11:54:49.0594094Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T11:54:49.0594480Z 
2025-08-18T11:54:49.0594644Z <a id="api.routes.repository"></a>
2025-08-18T11:54:49.0594938Z 
2025-08-18T11:54:49.0595090Z # api.routes.repository
2025-08-18T11:54:49.0595322Z 
2025-08-18T11:54:49.0595462Z <a id="api.routes"></a>
2025-08-18T11:54:49.0595703Z 
2025-08-18T11:54:49.0595834Z # api.routes
2025-08-18T11:54:49.0596020Z 
2025-08-18T11:54:49.0596167Z <a id="api.models.fee"></a>
2025-08-18T11:54:49.0596423Z 
2025-08-18T11:54:49.0596551Z # api.models.fee
2025-08-18T11:54:49.0596752Z 
2025-08-18T11:54:49.0596898Z <a id="api.models"></a>
2025-08-18T11:54:49.0597123Z 
2025-08-18T11:54:49.0597239Z # api.models
2025-08-18T11:54:49.0597423Z 
2025-08-18T11:54:49.0597585Z <a id="api.roi_repository"></a>
2025-08-18T11:54:49.0597860Z 
2025-08-18T11:54:49.0597993Z # api.roi\_repository
2025-08-18T11:54:49.0598225Z 
2025-08-18T11:54:49.0598359Z <a id="api.main"></a>
2025-08-18T11:54:49.0598575Z 
2025-08-18T11:54:49.0598699Z # api.main
2025-08-18T11:54:49.0598932Z 
2025-08-18T11:54:49.0599078Z <a id="api.main.ready"></a>
2025-08-18T11:54:49.0599334Z 
2025-08-18T11:54:49.0599461Z #### ready
2025-08-18T11:54:49.0599629Z 
2025-08-18T11:54:49.0599749Z ```python
2025-08-18T11:54:49.0600253Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T11:54:49.0601322Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T11:54:49.0602188Z                                                                       str]
2025-08-18T11:54:49.0602648Z ```
2025-08-18T11:54:49.0602844Z 
2025-08-18T11:54:49.0603029Z Return 200 only when migrations are at head.
2025-08-18T11:54:49.0603365Z 
2025-08-18T11:54:49.0603514Z <a id="api.config"></a>
2025-08-18T11:54:49.0603742Z 
2025-08-18T11:54:49.0603861Z # api.config
2025-08-18T11:54:49.0604049Z 
2025-08-18T11:54:49.0604171Z <a id="etl"></a>
2025-08-18T11:54:49.0604363Z 
2025-08-18T11:54:49.0604472Z # etl
2025-08-18T11:54:49.0604643Z 
2025-08-18T11:54:49.0604794Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T11:54:49.0605076Z 
2025-08-18T11:54:49.0605225Z # etl.fba\_fee\_ingestor
2025-08-18T11:54:49.0605456Z 
2025-08-18T11:54:49.0605606Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T11:54:49.0605911Z 
2025-08-18T11:54:49.0606068Z # etl.sp\_fees\_ingestor
2025-08-18T11:54:49.0606318Z 
2025-08-18T11:54:49.0606471Z <a id="etl.keepa_ingestor"></a>
2025-08-18T11:54:49.0606753Z 
2025-08-18T11:54:49.0606884Z # etl.keepa\_ingestor
2025-08-18T11:54:49.0607105Z 
2025-08-18T11:54:49.0607242Z <a id="etl.db"></a>
2025-08-18T11:54:49.0607450Z 
2025-08-18T11:54:49.0607568Z # etl.db
2025-08-18T11:54:49.0607745Z 
2025-08-18T11:54:49.0607905Z <a id="etl.dialects.schemas"></a>
2025-08-18T11:54:49.0608193Z 
2025-08-18T11:54:49.0608334Z # etl.dialects.schemas
2025-08-18T11:54:49.0608574Z 
2025-08-18T11:54:49.0608772Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T11:54:49.0609143Z 
2025-08-18T11:54:49.0609325Z # etl.dialects.amazon\_reimbursements
2025-08-18T11:54:49.0609644Z 
2025-08-18T11:54:49.0609829Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T11:54:49.0610169Z 
2025-08-18T11:54:49.0610336Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T11:54:49.0610643Z 
2025-08-18T11:54:49.0610875Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T11:54:49.0611199Z 
2025-08-18T11:54:49.0611380Z # etl.dialects.amazon\_returns
2025-08-18T11:54:49.0612087Z 
2025-08-18T11:54:49.0612278Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T11:54:49.0612626Z 
2025-08-18T11:54:49.0612799Z # etl.dialects.amazon\_fee\_preview
2025-08-18T11:54:49.0613107Z 
2025-08-18T11:54:49.0613313Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T11:54:49.0613695Z 
2025-08-18T11:54:49.0613872Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T11:54:49.0614197Z 
2025-08-18T11:54:49.0614392Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T11:54:49.0614736Z 
2025-08-18T11:54:49.0614892Z # etl.dialects.amazon\_settlements
2025-08-18T11:54:49.0615194Z 
2025-08-18T11:54:49.0615338Z <a id="etl.dialects"></a>
2025-08-18T11:54:49.0615580Z 
2025-08-18T11:54:49.0615700Z # etl.dialects
2025-08-18T11:54:49.0615897Z 
2025-08-18T11:54:49.0616023Z <a id="ingest"></a>
2025-08-18T11:54:49.0616226Z 
2025-08-18T11:54:49.0616352Z # ingest
2025-08-18T11:54:49.0616516Z 
2025-08-18T11:54:49.0616668Z <a id="ingest.maintenance"></a>
2025-08-18T11:54:49.0616958Z 
2025-08-18T11:54:49.0617099Z # ingest.maintenance
2025-08-18T11:54:49.0617318Z 
2025-08-18T11:54:49.0617465Z <a id="ingest.copy_loader"></a>
2025-08-18T11:54:49.0617745Z 
2025-08-18T11:54:49.0617878Z # ingest.copy\_loader
2025-08-18T11:54:49.0618095Z 
2025-08-18T11:54:49.0618281Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T11:54:49.0618639Z 
2025-08-18T11:54:49.0618778Z #### copy\_df\_via\_temp
2025-08-18T11:54:49.0619015Z 
2025-08-18T11:54:49.0619140Z ```python
2025-08-18T11:54:49.0619456Z def copy_df_via_temp(engine: Engine,
2025-08-18T11:54:49.0619913Z                      df: pd.DataFrame,
2025-08-18T11:54:49.0620368Z                      target_table: str,
2025-08-18T11:54:49.0620794Z                      *,
2025-08-18T11:54:49.0621181Z                      target_schema: Optional[str] = None,
2025-08-18T11:54:49.0621856Z                      columns: Sequence[str],
2025-08-18T11:54:49.0622391Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T11:54:49.0623158Z                      analyze_after: bool = False,
2025-08-18T11:54:49.0623675Z                      connection: Any | None = None) -> int
2025-08-18T11:54:49.0624133Z ```
2025-08-18T11:54:49.0624296Z 
2025-08-18T11:54:49.0624586Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T11:54:49.0625077Z 
2025-08-18T11:54:49.0625234Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T11:54:49.0625550Z 
2025-08-18T11:54:49.0625697Z # ingest.tests.test\_smoke
2025-08-18T11:54:49.0625942Z 
2025-08-18T11:54:49.0626093Z <a id="ingest.tests"></a>
2025-08-18T11:54:49.0626333Z 
2025-08-18T11:54:49.0626460Z # ingest.tests
2025-08-18T11:54:49.0626659Z 
2025-08-18T11:54:49.0626815Z <a id="ingest.upload_router"></a>
2025-08-18T11:54:49.0627097Z 
2025-08-18T11:54:49.0627236Z # ingest.upload\_router
2025-08-18T11:54:49.0627475Z 
2025-08-18T11:54:49.0627631Z <a id="ingest.email_watcher"></a>
2025-08-18T11:54:49.0627911Z 
2025-08-18T11:54:49.0628062Z # ingest.email\_watcher
2025-08-18T11:54:49.0628305Z 
2025-08-18T11:54:49.0628471Z <a id="ingest.email_watcher.main"></a>
2025-08-18T11:54:49.0628787Z 
2025-08-18T11:54:49.0628904Z #### main
2025-08-18T11:54:49.0629068Z 
2025-08-18T11:54:49.0629183Z ```python
2025-08-18T11:54:49.0629505Z def main() -> dict[str, str]
2025-08-18T11:54:49.0629874Z ```
2025-08-18T11:54:49.0630045Z 
2025-08-18T11:54:49.0630309Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T11:54:49.0630730Z 
2025-08-18T11:54:49.0630987Z Returns {"status": "success"} when processing completes.
2025-08-18T11:54:49.0631385Z 
2025-08-18T11:54:49.0631711Z <a id="ingest.tasks"></a>
2025-08-18T11:54:49.0631977Z 
2025-08-18T11:54:49.0632103Z # ingest.tasks
2025-08-18T11:54:49.0632294Z 
2025-08-18T11:54:49.0632478Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T11:54:49.0632826Z 
2025-08-18T11:54:49.0632961Z #### task\_import\_file
2025-08-18T11:54:49.0633192Z 
2025-08-18T11:54:49.0633318Z ```python
2025-08-18T11:54:49.0633722Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T11:54:49.0634494Z def task_import_file(self,
2025-08-18T11:54:49.0634874Z                      uri: str,
2025-08-18T11:54:49.0635297Z                      report_type: Optional[str] = None,
2025-08-18T11:54:49.0635808Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T11:54:49.0636269Z ```
2025-08-18T11:54:49.0636425Z 
2025-08-18T11:54:49.0636683Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T11:54:49.0637095Z 
2025-08-18T11:54:49.0637254Z <a id="ingest.celery_app"></a>
2025-08-18T11:54:49.0637523Z 
2025-08-18T11:54:49.0637662Z # ingest.celery\_app
2025-08-18T11:54:49.0637886Z 
2025-08-18T11:54:49.0638039Z <a id="ingest.ingest_router"></a>
2025-08-18T11:54:49.0638335Z 
2025-08-18T11:54:49.0638473Z # ingest.ingest\_router
2025-08-18T11:54:49.0638694Z 
2025-08-18T11:54:49.0638842Z <a id="logistics_etl"></a>
2025-08-18T11:54:49.0639088Z 
2025-08-18T11:54:49.0639214Z # logistics\_etl
2025-08-18T11:54:49.0639423Z 
2025-08-18T11:54:49.0639575Z Daily logistics ETL job.
2025-08-18T11:54:49.0639823Z 
2025-08-18T11:54:49.0639968Z <a id="logistics_etl.__main__"></a>
2025-08-18T11:54:49.0640276Z 
2025-08-18T11:54:49.0640420Z # logistics\_etl.\_\_main\_\_
2025-08-18T11:54:49.0640682Z 
2025-08-18T11:54:49.0640835Z <a id="logistics_etl.dsn"></a>
2025-08-18T11:54:49.0641117Z 
2025-08-18T11:54:49.0641248Z # logistics\_etl.dsn
2025-08-18T11:54:49.0641693Z 
2025-08-18T11:54:49.0641928Z Local DSN builder to avoid cross-service dependency.
2025-08-18T11:54:49.0642329Z 
2025-08-18T11:54:49.0642539Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T11:54:49.0642858Z 
2025-08-18T11:54:49.0642981Z #### build\_dsn
2025-08-18T11:54:49.0643185Z 
2025-08-18T11:54:49.0643304Z ```python
2025-08-18T11:54:49.0643629Z def build_dsn(sync: bool = True) -> str
2025-08-18T11:54:49.0644054Z ```
2025-08-18T11:54:49.0644206Z 
2025-08-18T11:54:49.0644482Z Return a Postgres DSN assembled from environment variables.
2025-08-18T11:54:49.0644906Z 
2025-08-18T11:54:49.0645428Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T11:54:49.0646181Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T11:54:49.0646829Z error when any required variable is missing.
2025-08-18T11:54:49.0647182Z 
2025-08-18T11:54:49.0647360Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T11:54:49.0647687Z 
2025-08-18T11:54:49.0647836Z # logistics\_etl.tests.conftest
2025-08-18T11:54:49.0648062Z 
2025-08-18T11:54:49.0648224Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T11:54:49.0648515Z 
2025-08-18T11:54:49.0648649Z # logistics\_etl.tests.test\_repository
2025-08-18T11:54:49.0648910Z 
2025-08-18T11:54:49.0649057Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T11:54:49.0649357Z 
2025-08-18T11:54:49.0649502Z # logistics\_etl.tests.test\_cron
2025-08-18T11:54:49.0649783Z 
2025-08-18T11:54:49.0649957Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T11:54:49.0650276Z 
2025-08-18T11:54:49.0650430Z # logistics\_etl.tests.test\_imports
2025-08-18T11:54:49.0650748Z 
2025-08-18T11:54:49.0650922Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T11:54:49.0651247Z 
2025-08-18T11:54:49.0651384Z # logistics\_etl.tests.test\_smoke
2025-08-18T11:54:49.0651809Z 
2025-08-18T11:54:49.0651960Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T11:54:49.0652236Z 
2025-08-18T11:54:49.0652389Z # logistics\_etl.tests.test\_client
2025-08-18T11:54:49.0652657Z 
2025-08-18T11:54:49.0652808Z <a id="logistics_etl.tests"></a>
2025-08-18T11:54:49.0653093Z 
2025-08-18T11:54:49.0653229Z # logistics\_etl.tests
2025-08-18T11:54:49.0653458Z 
2025-08-18T11:54:49.0653602Z <a id="logistics_etl.flow"></a>
2025-08-18T11:54:49.0653831Z 
2025-08-18T11:54:49.0653939Z # logistics\_etl.flow
2025-08-18T11:54:49.0654110Z 
2025-08-18T11:54:49.0654238Z <a id="logistics_etl.client"></a>
2025-08-18T11:54:49.0654466Z 
2025-08-18T11:54:49.0654581Z # logistics\_etl.client
2025-08-18T11:54:49.0654783Z 
2025-08-18T11:54:49.0654925Z <a id="logistics_etl.cron"></a>
2025-08-18T11:54:49.0655383Z 
2025-08-18T11:54:49.0655493Z # logistics\_etl.cron
2025-08-18T11:54:49.0655678Z 
2025-08-18T11:54:49.0655795Z <a id="logistics_etl.db"></a>
2025-08-18T11:54:49.0656020Z 
2025-08-18T11:54:49.0656154Z # logistics\_etl.db
2025-08-18T11:54:49.0656357Z 
2025-08-18T11:54:49.0656520Z <a id="logistics_etl.repository"></a>
2025-08-18T11:54:49.0656821Z 
2025-08-18T11:54:49.0656976Z # logistics\_etl.repository
2025-08-18T11:54:49.0657189Z 
2025-08-18T11:54:49.0657294Z <a id="alert_bot"></a>
2025-08-18T11:54:49.0657480Z 
2025-08-18T11:54:49.0657571Z # alert\_bot
2025-08-18T11:54:49.0657710Z 
2025-08-18T11:54:49.0657835Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T11:54:49.0658108Z 
2025-08-18T11:54:49.0658252Z # alert\_bot.tests.test\_smoke
2025-08-18T11:54:49.0658514Z 
2025-08-18T11:54:49.0658662Z <a id="alert_bot.tests"></a>
2025-08-18T11:54:49.0658913Z 
2025-08-18T11:54:49.0659037Z # alert\_bot.tests
2025-08-18T11:54:49.0659239Z 
2025-08-18T11:54:49.0659377Z <a id="alert_bot.alert_bot"></a>
2025-08-18T11:54:49.0659658Z 
2025-08-18T11:54:49.0659791Z # alert\_bot.alert\_bot
2025-08-18T11:54:49.0660017Z 
2025-08-18T11:54:49.0660152Z <a id="alert_bot.rules"></a>
2025-08-18T11:54:49.0660404Z 
2025-08-18T11:54:49.0660538Z # alert\_bot.rules
2025-08-18T11:54:49.0660737Z 
2025-08-18T11:54:49.0660859Z <a id="common"></a>
2025-08-18T11:54:49.0661072Z 
2025-08-18T11:54:49.0661189Z # common
2025-08-18T11:54:49.0661350Z 
2025-08-18T11:54:49.0661642Z <a id="common.dsn"></a>
2025-08-18T11:54:49.0661887Z 
2025-08-18T11:54:49.0662007Z # common.dsn
2025-08-18T11:54:49.0662185Z 
2025-08-18T11:54:49.0662349Z <a id="common.dsn.build_dsn"></a>
2025-08-18T11:54:49.0662632Z 
2025-08-18T11:54:49.0662752Z #### build\_dsn
2025-08-18T11:54:49.0662939Z 
2025-08-18T11:54:49.0663068Z ```python
2025-08-18T11:54:49.0663393Z def build_dsn(sync: bool = True) -> str
2025-08-18T11:54:49.0663821Z ```
2025-08-18T11:54:49.0663978Z 
2025-08-18T11:54:49.0664209Z Return a Postgres DSN, validating required variables.
2025-08-18T11:54:49.0664839Z 
2025-08-18T11:54:49.0665206Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T11:54:49.0666060Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T11:54:49.0666861Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T11:54:49.0694918Z missing.
2025-08-18T11:54:49.0695123Z 
2025-08-18T11:54:49.0695267Z <a id="common.models_vendor"></a>
2025-08-18T11:54:49.0695537Z 
2025-08-18T11:54:49.0695661Z # common.models\_vendor
2025-08-18T11:54:49.0695864Z 
2025-08-18T11:54:49.0696017Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T11:54:49.0696296Z 
2025-08-18T11:54:49.0696404Z ## Vendor Objects
2025-08-18T11:54:49.0696583Z 
2025-08-18T11:54:49.0696689Z ```python
2025-08-18T11:54:49.0696939Z class Vendor(Base)
2025-08-18T11:54:49.0697207Z ```
2025-08-18T11:54:49.0697344Z 
2025-08-18T11:54:49.0697481Z Vendor of inventory items.
2025-08-18T11:54:49.0697692Z 
2025-08-18T11:54:49.0697863Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T11:54:49.0698158Z 
2025-08-18T11:54:49.0698277Z ## VendorPrice Objects
2025-08-18T11:54:49.0698466Z 
2025-08-18T11:54:49.0698559Z ```python
2025-08-18T11:54:49.0698872Z class VendorPrice(Base)
2025-08-18T11:54:49.0699143Z ```
2025-08-18T11:54:49.0699273Z 
2025-08-18T11:54:49.0699427Z Association table linking vendors to pricing.
2025-08-18T11:54:49.0699715Z 
2025-08-18T11:54:49.0699846Z <a id="common.db_url"></a>
2025-08-18T11:54:49.0700056Z 
2025-08-18T11:54:49.0700159Z # common.db\_url
2025-08-18T11:54:49.0700329Z 
2025-08-18T11:54:49.0700539Z <a id="common.db_url.build_url"></a>
2025-08-18T11:54:49.0700792Z 
2025-08-18T11:54:49.0700893Z #### build\_url
2025-08-18T11:54:49.0701055Z 
2025-08-18T11:54:49.0701151Z ```python
2025-08-18T11:54:49.0701612Z def build_url(async_: bool = True) -> str
2025-08-18T11:54:49.0702134Z ```
2025-08-18T11:54:49.0702273Z 
2025-08-18T11:54:49.0702430Z Return Postgres DSN from env or PG_* parts.
2025-08-18T11:54:49.0702761Z 
2025-08-18T11:54:49.0703127Z <a id="common.keepa"></a>
2025-08-18T11:54:49.0703341Z 
2025-08-18T11:54:49.0703444Z # common.keepa
2025-08-18T11:54:49.0703605Z 
2025-08-18T11:54:49.0703718Z <a id="common.llm"></a>
2025-08-18T11:54:49.0703920Z 
2025-08-18T11:54:49.0704019Z # common.llm
2025-08-18T11:54:49.0704162Z 
2025-08-18T11:54:49.0704288Z <a id="common.settings"></a>
2025-08-18T11:54:49.0704495Z 
2025-08-18T11:54:49.0704596Z # common.settings
2025-08-18T11:54:49.0704757Z 
2025-08-18T11:54:49.0704884Z <a id="common.db"></a>
2025-08-18T11:54:49.0705085Z 
2025-08-18T11:54:49.0705187Z # common.db
2025-08-18T11:54:49.0705342Z 
2025-08-18T11:54:49.0705492Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T11:54:49.0705753Z 
2025-08-18T11:54:49.0705872Z #### build\_sqlalchemy\_url
2025-08-18T11:54:49.0706078Z 
2025-08-18T11:54:49.0706171Z ```python
2025-08-18T11:54:49.0706436Z def build_sqlalchemy_url() -> str
2025-08-18T11:54:49.0706754Z ```
2025-08-18T11:54:49.0706889Z 
2025-08-18T11:54:49.0707040Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T11:54:49.0707332Z 
2025-08-18T11:54:49.0707466Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T11:54:49.0707748Z 
2025-08-18T11:54:49.0707870Z #### build\_asyncpg\_dsn
2025-08-18T11:54:49.0708063Z 
2025-08-18T11:54:49.0708167Z ```python
2025-08-18T11:54:49.0708430Z def build_asyncpg_dsn() -> str
2025-08-18T11:54:49.0708743Z ```
2025-08-18T11:54:49.0708868Z 
2025-08-18T11:54:49.0709070Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T11:54:49.0709437Z 
2025-08-18T11:54:49.0709565Z <a id="common.db.refresh_mvs"></a>
2025-08-18T11:54:49.0709799Z 
2025-08-18T11:54:49.0709895Z #### refresh\_mvs
2025-08-18T11:54:49.0710066Z 
2025-08-18T11:54:49.0710157Z ```python
2025-08-18T11:54:49.0710482Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T11:54:49.0710882Z ```
2025-08-18T11:54:49.0711029Z 
2025-08-18T11:54:49.0711251Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T11:54:49.0711773Z 
2025-08-18T11:54:49.0712111Z <a id="common.config"></a>
2025-08-18T11:54:49.0712317Z 
2025-08-18T11:54:49.0712391Z # common.config
2025-08-18T11:54:49.0712504Z 
2025-08-18T11:54:49.0712590Z <a id="common.base"></a>
2025-08-18T11:54:49.0712723Z 
2025-08-18T11:54:49.0712794Z # common.base
2025-08-18T11:54:49.0712900Z 
2025-08-18T11:54:49.0712989Z <a id="common.base.Base"></a>
2025-08-18T11:54:49.0713138Z 
2025-08-18T11:54:49.0713206Z ## Base Objects
2025-08-18T11:54:49.0713317Z 
2025-08-18T11:54:49.0713394Z ```python
2025-08-18T11:54:49.0713576Z class Base(DeclarativeBase)
2025-08-18T11:54:49.0713791Z ```
2025-08-18T11:54:49.0713877Z 
2025-08-18T11:54:49.0713973Z Base class for SQLAlchemy models.
2025-08-18T11:54:49.0714141Z 
2025-08-18T11:54:49.0714220Z <a id="repricer"></a>
2025-08-18T11:54:49.0714345Z 
2025-08-18T11:54:49.0714421Z # repricer
2025-08-18T11:54:49.0714518Z 
2025-08-18T11:54:49.0714612Z <a id="repricer.app.schemas"></a>
2025-08-18T11:54:49.0714784Z 
2025-08-18T11:54:49.0714868Z # repricer.app.schemas
2025-08-18T11:54:49.0715008Z 
2025-08-18T11:54:49.0715103Z <a id="repricer.app.deps"></a>
2025-08-18T11:54:49.0715269Z 
2025-08-18T11:54:49.0715346Z # repricer.app.deps
2025-08-18T11:54:49.0715466Z 
2025-08-18T11:54:49.0715606Z Placeholder module for Keepa / SP-API clients.
2025-08-18T11:54:49.0715814Z 
2025-08-18T11:54:49.0715900Z <a id="repricer.app.logic"></a>
2025-08-18T11:54:49.0716062Z 
2025-08-18T11:54:49.0716143Z # repricer.app.logic
2025-08-18T11:54:49.0716267Z 
2025-08-18T11:54:49.0716370Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T11:54:49.0716573Z 
2025-08-18T11:54:49.0716640Z #### MIN\_MARGIN
2025-08-18T11:54:49.0716749Z 
2025-08-18T11:54:49.0716819Z 15 % ROI
2025-08-18T11:54:49.0716910Z 
2025-08-18T11:54:49.0717020Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T11:54:49.0717220Z 
2025-08-18T11:54:49.0717292Z #### compute\_price
2025-08-18T11:54:49.0717406Z 
2025-08-18T11:54:49.0717473Z ```python
2025-08-18T11:54:49.0717741Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T11:54:49.0718219Z ```
2025-08-18T11:54:49.0718306Z 
2025-08-18T11:54:49.0718420Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T11:54:49.0718729Z Replace with real competitive logic later.
2025-08-18T11:54:49.0718921Z 
2025-08-18T11:54:49.0719009Z <a id="repricer.app.main"></a>
2025-08-18T11:54:49.0719168Z 
2025-08-18T11:54:49.0719244Z # repricer.app.main
2025-08-18T11:54:49.0719360Z 
2025-08-18T11:54:49.0719440Z <a id="repricer.app"></a>
2025-08-18T11:54:49.0719583Z 
2025-08-18T11:54:49.0719656Z # repricer.app
2025-08-18T11:54:49.0719761Z 
2025-08-18T11:54:49.0719865Z <a id="repricer.tests.test_imports"></a>
2025-08-18T11:54:49.0720047Z 
2025-08-18T11:54:49.0720132Z # repricer.tests.test\_imports
2025-08-18T11:54:49.0720286Z 
2025-08-18T11:54:49.0720378Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T11:54:49.0720551Z 
2025-08-18T11:54:49.0720635Z # repricer.tests.test\_smoke
2025-08-18T11:54:49.0720788Z 
2025-08-18T11:54:49.0720870Z <a id="repricer.tests"></a>
2025-08-18T11:54:49.0721016Z 
2025-08-18T11:54:49.0721103Z # repricer.tests
2025-08-18T11:54:49.0721215Z 
2025-08-18T11:54:49.0721282Z <a id="db"></a>
2025-08-18T11:54:49.0721388Z 
2025-08-18T11:54:49.0721696Z # db
2025-08-18T11:54:49.0721797Z 
2025-08-18T11:54:49.0721881Z <a id="db.utils.views"></a>
2025-08-18T11:54:49.0722032Z 
2025-08-18T11:54:49.0722104Z # db.utils.views
2025-08-18T11:54:49.0722218Z 
2025-08-18T11:54:49.0722324Z <a id="db.utils.views.replace_view"></a>
2025-08-18T11:54:49.0722514Z 
2025-08-18T11:54:49.0722585Z #### replace\_view
2025-08-18T11:54:49.0722701Z 
2025-08-18T11:54:49.0722774Z ```python
2025-08-18T11:54:49.0722979Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T11:54:49.0723248Z ```
2025-08-18T11:54:49.0723339Z 
2025-08-18T11:54:49.0723438Z Drop and recreate a SQL view atomically.
2025-08-18T11:54:49.0723621Z 
2025-08-18T11:54:49.0723697Z <a id="db.utils"></a>
2025-08-18T11:54:49.0723822Z 
2025-08-18T11:54:49.0723899Z # db.utils
2025-08-18T11:54:49.0723995Z 
2025-08-18T11:54:49.0724212Z <a id="price_importer"></a>
2025-08-18T11:54:49.0724363Z 
2025-08-18T11:54:49.0724443Z # price\_importer
2025-08-18T11:54:49.0724555Z 
2025-08-18T11:54:49.0724667Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T11:54:49.0724875Z 
2025-08-18T11:54:49.0724970Z # price\_importer.services\_common.dsn
2025-08-18T11:54:49.0725143Z 
2025-08-18T11:54:49.0725281Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T11:54:49.0725503Z 
2025-08-18T11:54:49.0725572Z #### build\_dsn
2025-08-18T11:54:49.0725677Z 
2025-08-18T11:54:49.0725753Z ```python
2025-08-18T11:54:49.0725934Z def build_dsn(sync: bool = True) -> str
2025-08-18T11:54:49.0726177Z ```
2025-08-18T11:54:49.0726264Z 
2025-08-18T11:54:49.0726333Z Return safe DSN.
2025-08-18T11:54:49.0726451Z 
2025-08-18T11:54:49.0726846Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T11:54:49.0727065Z 
2025-08-18T11:54:49.0727215Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T11:54:49.0727446Z 
2025-08-18T11:54:49.0727562Z # price\_importer.services\_common.models\_vendor
2025-08-18T11:54:49.0727780Z 
2025-08-18T11:54:49.0727892Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T11:54:49.0728094Z 
2025-08-18T11:54:49.0728194Z # price\_importer.services\_common.db\_url
2025-08-18T11:54:49.0728386Z 
2025-08-18T11:54:49.0728527Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T11:54:49.0728757Z 
2025-08-18T11:54:49.0728833Z #### build\_url
2025-08-18T11:54:49.0728938Z 
2025-08-18T11:54:49.0729002Z ```python
2025-08-18T11:54:49.0729188Z def build_url(async_: bool = True) -> str
2025-08-18T11:54:49.0729425Z ```
2025-08-18T11:54:49.0729516Z 
2025-08-18T11:54:49.0729619Z Return Postgres DSN from env or PG_* parts.
2025-08-18T11:54:49.0729803Z 
2025-08-18T11:54:49.0729913Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T11:54:49.0730122Z 
2025-08-18T11:54:49.0730218Z # price\_importer.services\_common.keepa
2025-08-18T11:54:49.0730396Z 
2025-08-18T11:54:49.0730518Z <a id="price_importer.services_common.llm"></a>
2025-08-18T11:54:49.0730876Z 
2025-08-18T11:54:49.0730968Z # price\_importer.services\_common.llm
2025-08-18T11:54:49.0731144Z 
2025-08-18T11:54:49.0731261Z <a id="price_importer.services_common.settings"></a>
2025-08-18T11:54:49.0731600Z 
2025-08-18T11:54:49.0731706Z # price\_importer.services\_common.settings
2025-08-18T11:54:49.0731890Z 
2025-08-18T11:54:49.0731992Z <a id="price_importer.services_common.db"></a>
2025-08-18T11:54:49.0732187Z 
2025-08-18T11:54:49.0732284Z # price\_importer.services\_common.db
2025-08-18T11:54:49.0732457Z 
2025-08-18T11:54:49.0732620Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T11:54:49.0732881Z 
2025-08-18T11:54:49.0732960Z #### build\_sqlalchemy\_url
2025-08-18T11:54:49.0733097Z 
2025-08-18T11:54:49.0733169Z ```python
2025-08-18T11:54:49.0733346Z def build_sqlalchemy_url() -> str
2025-08-18T11:54:49.0733569Z ```
2025-08-18T11:54:49.0733655Z 
2025-08-18T11:54:49.0733754Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T11:54:49.0733953Z 
2025-08-18T11:54:49.0734106Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T11:54:49.0734346Z 
2025-08-18T11:54:49.0734423Z #### build\_asyncpg\_dsn
2025-08-18T11:54:49.0734560Z 
2025-08-18T11:54:49.0734625Z ```python
2025-08-18T11:54:49.0734807Z def build_asyncpg_dsn() -> str
2025-08-18T11:54:49.0735015Z ```
2025-08-18T11:54:49.0735100Z 
2025-08-18T11:54:49.0735242Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T11:54:49.0735465Z 
2025-08-18T11:54:49.0735594Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T11:54:49.0735822Z 
2025-08-18T11:54:49.0735892Z #### refresh\_mvs
2025-08-18T11:54:49.0736001Z 
2025-08-18T11:54:49.0736067Z ```python
2025-08-18T11:54:49.0736278Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T11:54:49.0736548Z ```
2025-08-18T11:54:49.0736634Z 
2025-08-18T11:54:49.0736777Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T11:54:49.0737127Z 
2025-08-18T11:54:49.0737239Z <a id="price_importer.services_common"></a>
2025-08-18T11:54:49.0737422Z 
2025-08-18T11:54:49.0737511Z # price\_importer.services\_common
2025-08-18T11:54:49.0737681Z 
2025-08-18T11:54:49.0737788Z <a id="price_importer.services_common.base"></a>
2025-08-18T11:54:49.0737985Z 
2025-08-18T11:54:49.0738082Z # price\_importer.services\_common.base
2025-08-18T11:54:49.0738255Z 
2025-08-18T11:54:49.0738350Z <a id="price_importer.normaliser"></a>
2025-08-18T11:54:49.0738521Z 
2025-08-18T11:54:49.0738612Z # price\_importer.normaliser
2025-08-18T11:54:49.0738764Z 
2025-08-18T11:54:49.0738878Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T11:54:49.0739086Z 
2025-08-18T11:54:49.0739180Z # price\_importer.common.models\_vendor
2025-08-18T11:54:49.0739357Z 
2025-08-18T11:54:49.0739459Z <a id="price_importer.common.db_url"></a>
2025-08-18T11:54:49.0739641Z 
2025-08-18T11:54:49.0739730Z # price\_importer.common.db\_url
2025-08-18T11:54:49.0739889Z 
2025-08-18T11:54:49.0740010Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T11:54:49.0740215Z 
2025-08-18T11:54:49.0740285Z #### make\_dsn
2025-08-18T11:54:49.0740397Z 
2025-08-18T11:54:49.0740462Z ```python
2025-08-18T11:54:49.0740648Z def make_dsn(async_: bool = False) -> str
2025-08-18T11:54:49.0740896Z ```
2025-08-18T11:54:49.0740984Z 
2025-08-18T11:54:49.0741114Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T11:54:49.0741327Z 
2025-08-18T11:54:49.0741601Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T11:54:49.0741837Z 
2025-08-18T11:54:49.0741914Z #### build\_url
2025-08-18T11:54:49.0742027Z 
2025-08-18T11:54:49.0742105Z ```python
2025-08-18T11:54:49.0742308Z def build_url(async_: bool = False) -> str
2025-08-18T11:54:49.0742566Z ```
2025-08-18T11:54:49.0742656Z 
2025-08-18T11:54:49.0742792Z Return Postgres DSN built from environment variables.
2025-08-18T11:54:49.0743021Z 
2025-08-18T11:54:49.0743122Z <a id="price_importer.common"></a>
2025-08-18T11:54:49.0743296Z 
2025-08-18T11:54:49.0743389Z # price\_importer.common
2025-08-18T11:54:49.0743670Z 
2025-08-18T11:54:49.0743773Z <a id="price_importer.common.base"></a>
2025-08-18T11:54:49.0743961Z 
2025-08-18T11:54:49.0744052Z # price\_importer.common.base
2025-08-18T11:54:49.0744218Z 
2025-08-18T11:54:49.0744325Z <a id="price_importer.tests.conftest"></a>
2025-08-18T11:54:49.0744522Z 
2025-08-18T11:54:49.0744622Z # price\_importer.tests.conftest
2025-08-18T11:54:49.0744790Z 
2025-08-18T11:54:49.0744900Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T11:54:49.0745107Z 
2025-08-18T11:54:49.0745203Z # price\_importer.tests.test\_reader
2025-08-18T11:54:49.0745383Z 
2025-08-18T11:54:49.0745494Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T11:54:49.0745704Z 
2025-08-18T11:54:49.0745803Z # price\_importer.tests.test\_imports
2025-08-18T11:54:49.0745981Z 
2025-08-18T11:54:49.0746094Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T11:54:49.0746291Z 
2025-08-18T11:54:49.0746387Z # price\_importer.tests.test\_smoke
2025-08-18T11:54:49.0746580Z 
2025-08-18T11:54:49.0746697Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T11:54:49.0746909Z 
2025-08-18T11:54:49.0747014Z # price\_importer.tests.test\_normaliser
2025-08-18T11:54:49.0747205Z 
2025-08-18T11:54:49.0747297Z <a id="price_importer.tests"></a>
2025-08-18T11:54:49.0747467Z 
2025-08-18T11:54:49.0747558Z # price\_importer.tests
2025-08-18T11:54:49.0747700Z 
2025-08-18T11:54:49.0747794Z <a id="price_importer.reader"></a>
2025-08-18T11:54:49.0747974Z 
2025-08-18T11:54:49.0748057Z # price\_importer.reader
2025-08-18T11:54:49.0748197Z 
2025-08-18T11:54:49.0748296Z <a id="price_importer.repository"></a>
2025-08-18T11:54:49.0748488Z 
2025-08-18T11:54:49.0748578Z # price\_importer.repository
2025-08-18T11:54:49.0748736Z 
2025-08-18T11:54:49.0748834Z <a id="price_importer.import"></a>
2025-08-18T11:54:49.0749003Z 
2025-08-18T11:54:49.0749086Z # price\_importer.import
2025-08-18T11:54:49.0749237Z 
2025-08-18T11:54:49.0749314Z <a id="fees_h10"></a>
2025-08-18T11:54:49.0749559Z 
2025-08-18T11:54:49.0749635Z # fees\_h10
2025-08-18T11:54:49.0749744Z 
2025-08-18T11:54:49.0749827Z <a id="fees_h10.worker"></a>
2025-08-18T11:54:49.0749979Z 
2025-08-18T11:54:49.0750059Z # fees\_h10.worker
2025-08-18T11:54:49.0750176Z 
2025-08-18T11:54:49.0750282Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T11:54:49.0750490Z 
2025-08-18T11:54:49.0750571Z #### list\_active\_asins
2025-08-18T11:54:49.0750709Z 
2025-08-18T11:54:49.0750779Z ```python
2025-08-18T11:54:49.0750974Z def list_active_asins() -> list[str]
2025-08-18T11:54:49.0751241Z ```
2025-08-18T11:54:49.0751331Z 
2025-08-18T11:54:49.0751575Z Return known ASINs or an empty list if unavailable.
2025-08-18T11:54:49.0751799Z 
2025-08-18T11:54:49.0751900Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T11:54:49.0752079Z 
2025-08-18T11:54:49.0752164Z # fees\_h10.tests.test\_smoke
2025-08-18T11:54:49.0752330Z 
2025-08-18T11:54:49.0752413Z <a id="fees_h10.tests"></a>
2025-08-18T11:54:49.0752561Z 
2025-08-18T11:54:49.0752639Z # fees\_h10.tests
2025-08-18T11:54:49.0752766Z 
2025-08-18T11:54:49.0752848Z <a id="fees_h10.client"></a>
2025-08-18T11:54:49.0752996Z 
2025-08-18T11:54:49.0753074Z # fees\_h10.client
2025-08-18T11:54:49.0753191Z 
2025-08-18T11:54:49.0753281Z <a id="fees_h10.repository"></a>
2025-08-18T11:54:49.0753450Z 
2025-08-18T11:54:49.0753529Z # fees\_h10.repository
2025-08-18T11:54:49.0753660Z 
2025-08-18T11:54:49.0753738Z <a id="emailer"></a>
2025-08-18T11:54:49.0753870Z 
2025-08-18T11:54:49.0753939Z # emailer
2025-08-18T11:54:49.0754037Z 
2025-08-18T11:54:49.0754155Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T11:54:49.0754358Z 
2025-08-18T11:54:49.0754456Z # emailer.tests.test\_import\_emailer
2025-08-18T11:54:49.0754645Z 
2025-08-18T11:54:49.0754745Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T11:54:49.0754923Z 
2025-08-18T11:54:49.0755010Z # emailer.tests.test\_smoke
2025-08-18T11:54:49.0755168Z 
2025-08-18T11:54:49.0755253Z <a id="emailer.tests"></a>
2025-08-18T11:54:49.0755399Z 
2025-08-18T11:54:49.0755482Z # emailer.tests
2025-08-18T11:54:49.0755733Z 
2025-08-18T11:54:49.0755826Z <a id="emailer.generate_body"></a>
2025-08-18T11:54:49.0756002Z 
2025-08-18T11:54:49.0756085Z # emailer.generate\_body
2025-08-18T11:54:49.0756228Z 
2025-08-18T11:54:49.0756305Z <a id="llm_server"></a>
2025-08-18T11:54:49.0756442Z 
2025-08-18T11:54:49.0756513Z # llm\_server
2025-08-18T11:54:49.0756620Z 
2025-08-18T11:54:49.0756709Z <a id="llm_server.app"></a>
2025-08-18T11:54:49.0756856Z 
2025-08-18T11:54:49.0756930Z # llm\_server.app
2025-08-18T11:54:49.0757049Z 
