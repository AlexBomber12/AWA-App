2025-08-17T20:01:33.1825527Z ##[group]Run pydoc-markdown
2025-08-17T20:01:33.1825854Z [36;1mpydoc-markdown[0m
2025-08-17T20:01:33.1867146Z shell: /usr/bin/bash -e {0}
2025-08-17T20:01:33.1867380Z env:
2025-08-17T20:01:33.1867617Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:01:33.1868028Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T20:01:33.1868417Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:01:33.1868766Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:01:33.1869111Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T20:01:33.1869444Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T20:01:33.1869733Z ##[endgroup]
2025-08-17T20:01:33.6240071Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T20:01:33.6240784Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T20:01:33.6241258Z In "pydoc-markdown.yml"
2025-08-17T20:01:33.6241685Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T20:01:33.6242865Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T20:01:33.6243709Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T20:01:33.6244252Z 
2025-08-17T20:01:33.8721357Z <a id="__init__"></a>
2025-08-17T20:01:33.8721756Z 
2025-08-17T20:01:33.8721901Z # \_\_init\_\_
2025-08-17T20:01:33.8722126Z 
2025-08-17T20:01:33.8722273Z <a id="api"></a>
2025-08-17T20:01:33.8722748Z 
2025-08-17T20:01:33.8722891Z # api
2025-08-17T20:01:33.8723095Z 
2025-08-17T20:01:33.8723277Z <a id="api.tests.test_llm"></a>
2025-08-17T20:01:33.8723599Z 
2025-08-17T20:01:33.8723773Z # api.tests.test\_llm
2025-08-17T20:01:33.8724031Z 
2025-08-17T20:01:33.8724213Z <a id="api.tests.test_imports"></a>
2025-08-17T20:01:33.8724560Z 
2025-08-17T20:01:33.8724734Z # api.tests.test\_imports
2025-08-17T20:01:33.8725014Z 
2025-08-17T20:01:33.8725205Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T20:01:33.8725567Z 
2025-08-17T20:01:33.8725724Z # api.tests.test\_entrypoint
2025-08-17T20:01:33.8726038Z 
2025-08-17T20:01:33.8726210Z <a id="api.tests.test_health"></a>
2025-08-17T20:01:33.8726511Z 
2025-08-17T20:01:33.8726674Z # api.tests.test\_health
2025-08-17T20:01:33.8726947Z 
2025-08-17T20:01:33.8727118Z <a id="api.migrations.env"></a>
2025-08-17T20:01:33.8727410Z 
2025-08-17T20:01:33.8727561Z # api.migrations.env
2025-08-17T20:01:33.8727804Z 
2025-08-17T20:01:33.8728051Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T20:01:33.8728479Z 
2025-08-17T20:01:33.8728701Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T20:01:33.8729092Z 
2025-08-17T20:01:33.8729333Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T20:01:33.8729752Z 
2025-08-17T20:01:33.8729981Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T20:01:33.8730383Z 
2025-08-17T20:01:33.8730743Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T20:01:33.8731329Z 
2025-08-17T20:01:33.8731667Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T20:01:33.8732999Z 
2025-08-17T20:01:33.8733297Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T20:01:33.8733772Z 
2025-08-17T20:01:33.8734004Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T20:01:33.8734267Z 
2025-08-17T20:01:33.8734545Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T20:01:33.8734822Z 
2025-08-17T20:01:33.8734976Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T20:01:33.8735195Z 
2025-08-17T20:01:33.8735334Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T20:01:33.8735568Z 
2025-08-17T20:01:33.8735694Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T20:01:33.8735909Z 
2025-08-17T20:01:33.8736040Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T20:01:33.8736269Z 
2025-08-17T20:01:33.8736385Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T20:01:33.8736593Z 
2025-08-17T20:01:33.8736728Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T20:01:33.8737271Z 
2025-08-17T20:01:33.8737392Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T20:01:33.8737601Z 
2025-08-17T20:01:33.8737763Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-17T20:01:33.8738021Z 
2025-08-17T20:01:33.8738161Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-17T20:01:33.8738401Z 
2025-08-17T20:01:33.8738548Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T20:01:33.8738788Z 
2025-08-17T20:01:33.8738919Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T20:01:33.8739136Z 
2025-08-17T20:01:33.8739259Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T20:01:33.8739475Z 
2025-08-17T20:01:33.8739587Z # api.migrations.versions.0001\_baseline
2025-08-17T20:01:33.8739780Z 
2025-08-17T20:01:33.8739880Z <a id="api.migrations.versions"></a>
2025-08-17T20:01:33.8740067Z 
2025-08-17T20:01:33.8740158Z # api.migrations.versions
2025-08-17T20:01:33.8740304Z 
2025-08-17T20:01:33.8740402Z <a id="api.migrations"></a>
2025-08-17T20:01:33.8740555Z 
2025-08-17T20:01:33.8740632Z # api.migrations
2025-08-17T20:01:33.8740759Z 
2025-08-17T20:01:33.8740841Z <a id="api.db"></a>
2025-08-17T20:01:33.8740961Z 
2025-08-17T20:01:33.8741030Z # api.db
2025-08-17T20:01:33.8741133Z 
2025-08-17T20:01:33.8741223Z <a id="api.routes.stats"></a>
2025-08-17T20:01:33.8741380Z 
2025-08-17T20:01:33.8741457Z # api.routes.stats
2025-08-17T20:01:33.8741576Z 
2025-08-17T20:01:33.8741663Z <a id="api.routes.stats.kpi"></a>
2025-08-17T20:01:33.8741814Z 
2025-08-17T20:01:33.8741884Z #### kpi
2025-08-17T20:01:33.8741970Z 
2025-08-17T20:01:33.8742038Z ```python
2025-08-17T20:01:33.8742218Z @router.get("/stats/kpi")
2025-08-17T20:01:33.8742791Z def kpi() -> List[Dict[str, int]]
2025-08-17T20:01:33.8743051Z ```
2025-08-17T20:01:33.8743140Z 
2025-08-17T20:01:33.8743223Z Return KPI metrics (mock).
2025-08-17T20:01:33.8743360Z 
2025-08-17T20:01:33.8743463Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T20:01:33.8743654Z 
2025-08-17T20:01:33.8743745Z #### roi\_by\_vendor
2025-08-17T20:01:33.8743859Z 
2025-08-17T20:01:33.8743925Z ```python
2025-08-17T20:01:33.8744106Z @router.get("/stats/roi_by_vendor")
2025-08-17T20:01:33.8744351Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T20:01:33.8744581Z ```
2025-08-17T20:01:33.8744659Z 
2025-08-17T20:01:33.8744739Z Return ROI percent by vendor.
2025-08-17T20:01:33.8744882Z 
2025-08-17T20:01:33.8744975Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T20:01:33.8745141Z 
2025-08-17T20:01:33.8745212Z #### roi\_trend
2025-08-17T20:01:33.8745311Z 
2025-08-17T20:01:33.8745373Z ```python
2025-08-17T20:01:33.8745542Z @router.get("/stats/roi_trend")
2025-08-17T20:01:33.8745775Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T20:01:33.8746012Z ```
2025-08-17T20:01:33.8746091Z 
2025-08-17T20:01:33.8746165Z Return 30-day ROI trend.
2025-08-17T20:01:33.8746374Z 
2025-08-17T20:01:33.8746455Z <a id="api.routes.roi"></a>
2025-08-17T20:01:33.8746623Z 
2025-08-17T20:01:33.8746690Z # api.routes.roi
2025-08-17T20:01:33.8746977Z 
2025-08-17T20:01:33.8747059Z <a id="api.routes.health"></a>
2025-08-17T20:01:33.8747208Z 
2025-08-17T20:01:33.8747279Z # api.routes.health
2025-08-17T20:01:33.8747386Z 
2025-08-17T20:01:33.8747481Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T20:01:33.8747644Z 
2025-08-17T20:01:33.8747707Z #### MAX\_SKEW
2025-08-17T20:01:33.8747811Z 
2025-08-17T20:01:33.8747873Z seconds
2025-08-17T20:01:33.8747955Z 
2025-08-17T20:01:33.8748044Z <a id="api.routes.health.health"></a>
2025-08-17T20:01:33.8748212Z 
2025-08-17T20:01:33.8748273Z #### health
2025-08-17T20:01:33.8748362Z 
2025-08-17T20:01:33.8748430Z ```python
2025-08-17T20:01:33.8748616Z @router.get("/health", include_in_schema=False)
2025-08-17T20:01:33.8748994Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T20:01:33.8749330Z ```
2025-08-17T20:01:33.8749417Z 
2025-08-17T20:01:33.8749531Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T20:01:33.8749727Z 
2025-08-17T20:01:33.8749956Z <a id="api.routes.repository"></a>
2025-08-17T20:01:33.8750666Z 
2025-08-17T20:01:33.8750849Z # api.routes.repository
2025-08-17T20:01:33.8751108Z 
2025-08-17T20:01:33.8751255Z <a id="api.routes"></a>
2025-08-17T20:01:33.8751482Z 
2025-08-17T20:01:33.8751599Z # api.routes
2025-08-17T20:01:33.8751781Z 
2025-08-17T20:01:33.8751923Z <a id="api.models.fee"></a>
2025-08-17T20:01:33.8752165Z 
2025-08-17T20:01:33.8752288Z # api.models.fee
2025-08-17T20:01:33.8752730Z 
2025-08-17T20:01:33.8752818Z <a id="api.models"></a>
2025-08-17T20:01:33.8752950Z 
2025-08-17T20:01:33.8753021Z # api.models
2025-08-17T20:01:33.8753120Z 
2025-08-17T20:01:33.8753203Z <a id="api.roi_repository"></a>
2025-08-17T20:01:33.8753357Z 
2025-08-17T20:01:33.8753429Z # api.roi\_repository
2025-08-17T20:01:33.8753544Z 
2025-08-17T20:01:33.8753612Z <a id="api.main"></a>
2025-08-17T20:01:33.8753730Z 
2025-08-17T20:01:33.8753793Z # api.main
2025-08-17T20:01:33.8753883Z 
2025-08-17T20:01:33.8753968Z <a id="api.main.ready"></a>
2025-08-17T20:01:33.8754120Z 
2025-08-17T20:01:33.8754182Z #### ready
2025-08-17T20:01:33.8754271Z 
2025-08-17T20:01:33.8754342Z ```python
2025-08-17T20:01:33.8754609Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T20:01:33.8755066Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T20:01:33.8755423Z                                                                       str]
2025-08-17T20:01:33.8755664Z ```
2025-08-17T20:01:33.8755751Z 
2025-08-17T20:01:33.8755857Z Return 200 only when migrations are at head.
2025-08-17T20:01:33.8756031Z 
2025-08-17T20:01:33.8756105Z <a id="api.config"></a>
2025-08-17T20:01:33.8756226Z 
2025-08-17T20:01:33.8756301Z # api.config
2025-08-17T20:01:33.8756396Z 
2025-08-17T20:01:33.8756461Z <a id="etl"></a>
2025-08-17T20:01:33.8756569Z 
2025-08-17T20:01:33.8756629Z # etl
2025-08-17T20:01:33.8756717Z 
2025-08-17T20:01:33.8756800Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T20:01:33.8756960Z 
2025-08-17T20:01:33.8757044Z # etl.fba\_fee\_ingestor
2025-08-17T20:01:33.8757167Z 
2025-08-17T20:01:33.8757252Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T20:01:33.8757396Z 
2025-08-17T20:01:33.8757468Z # etl.sp\_fees\_ingestor
2025-08-17T20:01:33.8757593Z 
2025-08-17T20:01:33.8757672Z <a id="etl.keepa_ingestor"></a>
2025-08-17T20:01:33.8757810Z 
2025-08-17T20:01:33.8757880Z # etl.keepa\_ingestor
2025-08-17T20:01:33.8757998Z 
2025-08-17T20:01:33.8758065Z <a id="etl.db"></a>
2025-08-17T20:01:33.8758170Z 
2025-08-17T20:01:33.8758237Z # etl.db
2025-08-17T20:01:33.8758325Z 
2025-08-17T20:01:33.8758407Z <a id="etl.dialects.schemas"></a>
2025-08-17T20:01:33.8758556Z 
2025-08-17T20:01:33.8758629Z # etl.dialects.schemas
2025-08-17T20:01:33.8758750Z 
2025-08-17T20:01:33.8758860Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T20:01:33.8759053Z 
2025-08-17T20:01:33.8759142Z # etl.dialects.amazon\_reimbursements
2025-08-17T20:01:33.8759308Z 
2025-08-17T20:01:33.8759403Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T20:01:33.8759772Z 
2025-08-17T20:01:33.8759854Z # etl.dialects.amazon\_returns
2025-08-17T20:01:33.8759999Z 
2025-08-17T20:01:33.8760074Z <a id="etl.dialects"></a>
2025-08-17T20:01:33.8760200Z 
2025-08-17T20:01:33.8760265Z # etl.dialects
2025-08-17T20:01:33.8760368Z 
2025-08-17T20:01:33.8760433Z <a id="ingest"></a>
2025-08-17T20:01:33.8760538Z 
2025-08-17T20:01:33.8760604Z # ingest
2025-08-17T20:01:33.8760688Z 
2025-08-17T20:01:33.8760770Z <a id="ingest.maintenance"></a>
2025-08-17T20:01:33.8760911Z 
2025-08-17T20:01:33.8760987Z # ingest.maintenance
2025-08-17T20:01:33.8761100Z 
2025-08-17T20:01:33.8761181Z <a id="ingest.copy_loader"></a>
2025-08-17T20:01:33.8761321Z 
2025-08-17T20:01:33.8761392Z # ingest.copy\_loader
2025-08-17T20:01:33.8761506Z 
2025-08-17T20:01:33.8761613Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-17T20:01:33.8761797Z 
2025-08-17T20:01:33.8761870Z #### copy\_df\_via\_temp
2025-08-17T20:01:33.8761990Z 
2025-08-17T20:01:33.8762061Z ```python
2025-08-17T20:01:33.8762226Z def copy_df_via_temp(engine: Engine,
2025-08-17T20:01:33.8762764Z                      df: pd.DataFrame,
2025-08-17T20:01:33.8762997Z                      target_table: str,
2025-08-17T20:01:33.8763218Z                      *,
2025-08-17T20:01:33.8763423Z                      target_schema: Optional[str] = None,
2025-08-17T20:01:33.8763690Z                      columns: Sequence[str],
2025-08-17T20:01:33.8763966Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-17T20:01:33.8764248Z                      analyze_after: bool = False,
2025-08-17T20:01:33.8764516Z                      connection: Any | None = None) -> int
2025-08-17T20:01:33.8764750Z ```
2025-08-17T20:01:33.8764839Z 
2025-08-17T20:01:33.8765003Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-17T20:01:33.8765237Z 
2025-08-17T20:01:33.8765324Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T20:01:33.8765495Z 
2025-08-17T20:01:33.8765575Z # ingest.tests.test\_smoke
2025-08-17T20:01:33.8765705Z 
2025-08-17T20:01:33.8765801Z <a id="ingest.tests"></a>
2025-08-17T20:01:33.8765926Z 
2025-08-17T20:01:33.8765995Z # ingest.tests
2025-08-17T20:01:33.8766103Z 
2025-08-17T20:01:33.8766187Z <a id="ingest.upload_router"></a>
2025-08-17T20:01:33.8766334Z 
2025-08-17T20:01:33.8766409Z # ingest.upload\_router
2025-08-17T20:01:33.8766537Z 
2025-08-17T20:01:33.8766622Z <a id="ingest.email_watcher"></a>
2025-08-17T20:01:33.8766766Z 
2025-08-17T20:01:33.8766846Z # ingest.email\_watcher
2025-08-17T20:01:33.8766962Z 
2025-08-17T20:01:33.8767049Z <a id="ingest.email_watcher.main"></a>
2025-08-17T20:01:33.8767218Z 
2025-08-17T20:01:33.8767281Z #### main
2025-08-17T20:01:33.8767372Z 
2025-08-17T20:01:33.8767435Z ```python
2025-08-17T20:01:33.8767610Z def main() -> dict[str, str]
2025-08-17T20:01:33.8767804Z ```
2025-08-17T20:01:33.8767886Z 
2025-08-17T20:01:33.8768026Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T20:01:33.8768250Z 
2025-08-17T20:01:33.8768387Z Returns {"status": "success"} when processing completes.
2025-08-17T20:01:33.8768611Z 
2025-08-17T20:01:33.8768689Z <a id="ingest.tasks"></a>
2025-08-17T20:01:33.8768821Z 
2025-08-17T20:01:33.8768886Z # ingest.tasks
2025-08-17T20:01:33.8768989Z 
2025-08-17T20:01:33.8769095Z <a id="ingest.tasks.task_import_file"></a>
2025-08-17T20:01:33.8769271Z 
2025-08-17T20:01:33.8769344Z #### task\_import\_file
2025-08-17T20:01:33.8769464Z 
2025-08-17T20:01:33.8769535Z ```python
2025-08-17T20:01:33.8769746Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-17T20:01:33.8770033Z def task_import_file(self,
2025-08-17T20:01:33.8770229Z                      uri: str,
2025-08-17T20:01:33.8770454Z                      report_type: Optional[str] = None,
2025-08-17T20:01:33.8770721Z                      force: bool = False) -> Dict[str, Any]
2025-08-17T20:01:33.8770963Z ```
2025-08-17T20:01:33.8771044Z 
2025-08-17T20:01:33.8771182Z Import a file into Postgres using existing ETL pipeline.
2025-08-17T20:01:33.8771392Z 
2025-08-17T20:01:33.8771474Z <a id="ingest.celery_app"></a>
2025-08-17T20:01:33.8771757Z 
2025-08-17T20:01:33.8771831Z # ingest.celery\_app
2025-08-17T20:01:33.8771946Z 
2025-08-17T20:01:33.8772032Z <a id="ingest.ingest_router"></a>
2025-08-17T20:01:33.8772186Z 
2025-08-17T20:01:33.8772259Z # ingest.ingest\_router
2025-08-17T20:01:33.8772377Z 
2025-08-17T20:01:33.8772596Z <a id="logistics_etl"></a>
2025-08-17T20:01:33.8772722Z 
2025-08-17T20:01:33.8772789Z # logistics\_etl
2025-08-17T20:01:33.8772899Z 
2025-08-17T20:01:33.8772973Z Daily logistics ETL job.
2025-08-17T20:01:33.8773095Z 
2025-08-17T20:01:33.8773176Z <a id="logistics_etl.__main__"></a>
2025-08-17T20:01:33.8773336Z 
2025-08-17T20:01:33.8773412Z # logistics\_etl.\_\_main\_\_
2025-08-17T20:01:33.8773545Z 
2025-08-17T20:01:33.8773629Z <a id="logistics_etl.dsn"></a>
2025-08-17T20:01:33.8773762Z 
2025-08-17T20:01:33.8773832Z # logistics\_etl.dsn
2025-08-17T20:01:33.8773944Z 
2025-08-17T20:01:33.8774065Z Local DSN builder to avoid cross-service dependency.
2025-08-17T20:01:33.8774267Z 
2025-08-17T20:01:33.8774490Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T20:01:33.8774661Z 
2025-08-17T20:01:33.8774727Z #### build\_dsn
2025-08-17T20:01:33.8774827Z 
2025-08-17T20:01:33.8774897Z ```python
2025-08-17T20:01:33.8775067Z def build_dsn(sync: bool = True) -> str
2025-08-17T20:01:33.8775294Z ```
2025-08-17T20:01:33.8775375Z 
2025-08-17T20:01:33.8775514Z Return a Postgres DSN assembled from environment variables.
2025-08-17T20:01:33.8775741Z 
2025-08-17T20:01:33.8775889Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T20:01:33.8776286Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T20:01:33.8776641Z error when any required variable is missing.
2025-08-17T20:01:33.8776819Z 
2025-08-17T20:01:33.8776918Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T20:01:33.8777088Z 
2025-08-17T20:01:33.8777171Z # logistics\_etl.tests.conftest
2025-08-17T20:01:33.8777322Z 
2025-08-17T20:01:33.8777425Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T20:01:33.8777622Z 
2025-08-17T20:01:33.8777712Z # logistics\_etl.tests.test\_repository
2025-08-17T20:01:33.8777883Z 
2025-08-17T20:01:33.8777973Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T20:01:33.8778142Z 
2025-08-17T20:01:33.8778234Z # logistics\_etl.tests.test\_cron
2025-08-17T20:01:33.8778406Z 
2025-08-17T20:01:33.8778511Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T20:01:33.8778686Z 
2025-08-17T20:01:33.8778770Z # logistics\_etl.tests.test\_imports
2025-08-17T20:01:33.8778937Z 
2025-08-17T20:01:33.8779031Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T20:01:33.8779210Z 
2025-08-17T20:01:33.8779299Z # logistics\_etl.tests.test\_smoke
2025-08-17T20:01:33.8779449Z 
2025-08-17T20:01:33.8779542Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T20:01:33.8779712Z 
2025-08-17T20:01:33.8779805Z # logistics\_etl.tests.test\_client
2025-08-17T20:01:33.8779958Z 
2025-08-17T20:01:33.8780041Z <a id="logistics_etl.tests"></a>
2025-08-17T20:01:33.8780195Z 
2025-08-17T20:01:33.8780279Z # logistics\_etl.tests
2025-08-17T20:01:33.8780398Z 
2025-08-17T20:01:33.8780483Z <a id="logistics_etl.flow"></a>
2025-08-17T20:01:33.8780621Z 
2025-08-17T20:01:33.8780695Z # logistics\_etl.flow
2025-08-17T20:01:33.8780809Z 
2025-08-17T20:01:33.8780897Z <a id="logistics_etl.client"></a>
2025-08-17T20:01:33.8781042Z 
2025-08-17T20:01:33.8781116Z # logistics\_etl.client
2025-08-17T20:01:33.8781241Z 
2025-08-17T20:01:33.8781316Z <a id="logistics_etl.cron"></a>
2025-08-17T20:01:33.8781450Z 
2025-08-17T20:01:33.8781520Z # logistics\_etl.cron
2025-08-17T20:01:33.8781638Z 
2025-08-17T20:01:33.8781715Z <a id="logistics_etl.db"></a>
2025-08-17T20:01:33.8781850Z 
2025-08-17T20:01:33.8781924Z # logistics\_etl.db
2025-08-17T20:01:33.8782032Z 
2025-08-17T20:01:33.8782119Z <a id="logistics_etl.repository"></a>
2025-08-17T20:01:33.8782281Z 
2025-08-17T20:01:33.8782358Z # logistics\_etl.repository
2025-08-17T20:01:33.8782622Z 
2025-08-17T20:01:33.8782752Z <a id="alert_bot"></a>
2025-08-17T20:01:33.8782955Z 
2025-08-17T20:01:33.8783168Z # alert\_bot
2025-08-17T20:01:33.8783266Z 
2025-08-17T20:01:33.8783357Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T20:01:33.8783519Z 
2025-08-17T20:01:33.8783598Z # alert\_bot.tests.test\_smoke
2025-08-17T20:01:33.8783737Z 
2025-08-17T20:01:33.8783815Z <a id="alert_bot.tests"></a>
2025-08-17T20:01:33.8783947Z 
2025-08-17T20:01:33.8784013Z # alert\_bot.tests
2025-08-17T20:01:33.8784127Z 
2025-08-17T20:01:33.8784209Z <a id="alert_bot.alert_bot"></a>
2025-08-17T20:01:33.8784350Z 
2025-08-17T20:01:33.8784427Z # alert\_bot.alert\_bot
2025-08-17T20:01:33.8784544Z 
2025-08-17T20:01:33.8784619Z <a id="alert_bot.rules"></a>
2025-08-17T20:01:33.8784747Z 
2025-08-17T20:01:33.8784821Z # alert\_bot.rules
2025-08-17T20:01:33.8784923Z 
2025-08-17T20:01:33.8784991Z <a id="common"></a>
2025-08-17T20:01:33.8785100Z 
2025-08-17T20:01:33.8785162Z # common
2025-08-17T20:01:33.8785250Z 
2025-08-17T20:01:33.8785327Z <a id="common.dsn"></a>
2025-08-17T20:01:33.8785443Z 
2025-08-17T20:01:33.8785507Z # common.dsn
2025-08-17T20:01:33.8785731Z 
2025-08-17T20:01:33.8785820Z <a id="common.dsn.build_dsn"></a>
2025-08-17T20:01:33.8785968Z 
2025-08-17T20:01:33.8786033Z #### build\_dsn
2025-08-17T20:01:33.8786139Z 
2025-08-17T20:01:33.8786203Z ```python
2025-08-17T20:01:33.8786373Z def build_dsn(sync: bool = True) -> str
2025-08-17T20:01:33.8786593Z ```
2025-08-17T20:01:33.8786675Z 
2025-08-17T20:01:33.8786800Z Return a Postgres DSN, validating required variables.
2025-08-17T20:01:33.8787004Z 
2025-08-17T20:01:33.8787189Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T20:01:33.8787625Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T20:01:33.8788032Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T20:01:33.8788343Z missing.
2025-08-17T20:01:33.8788431Z 
2025-08-17T20:01:33.8788513Z <a id="common.models_vendor"></a>
2025-08-17T20:01:33.8788667Z 
2025-08-17T20:01:33.8788741Z # common.models\_vendor
2025-08-17T20:01:33.8788870Z 
2025-08-17T20:01:33.8788965Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T20:01:33.8789132Z 
2025-08-17T20:01:33.8789206Z ## Vendor Objects
2025-08-17T20:01:33.8789316Z 
2025-08-17T20:01:33.8789379Z ```python
2025-08-17T20:01:33.8789529Z class Vendor(Base)
2025-08-17T20:01:33.8789695Z ```
2025-08-17T20:01:33.8789776Z 
2025-08-17T20:01:33.8789855Z Vendor of inventory items.
2025-08-17T20:01:33.8789993Z 
2025-08-17T20:01:33.8790094Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T20:01:33.8790272Z 
2025-08-17T20:01:33.8790353Z ## VendorPrice Objects
2025-08-17T20:01:33.8790470Z 
2025-08-17T20:01:33.8790532Z ```python
2025-08-17T20:01:33.8790701Z class VendorPrice(Base)
2025-08-17T20:01:33.8790875Z ```
2025-08-17T20:01:33.8790961Z 
2025-08-17T20:01:33.8791063Z Association table linking vendors to pricing.
2025-08-17T20:01:33.8791241Z 
2025-08-17T20:01:33.8791322Z <a id="common.db_url"></a>
2025-08-17T20:01:33.8791448Z 
2025-08-17T20:01:33.8791516Z # common.db\_url
2025-08-17T20:01:33.8791630Z 
2025-08-17T20:01:33.8791719Z <a id="common.db_url.build_url"></a>
2025-08-17T20:01:33.8791871Z 
2025-08-17T20:01:33.8791937Z #### build\_url
2025-08-17T20:01:33.8792046Z 
2025-08-17T20:01:33.8792109Z ```python
2025-08-17T20:01:33.8792281Z def build_url(async_: bool = True) -> str
2025-08-17T20:01:33.8792755Z ```
2025-08-17T20:01:33.8792843Z 
2025-08-17T20:01:33.8813053Z Return Postgres DSN from env or PG_* parts.
2025-08-17T20:01:33.8813375Z 
2025-08-17T20:01:33.8813531Z <a id="common.keepa"></a>
2025-08-17T20:01:33.8813761Z 
2025-08-17T20:01:33.8813883Z # common.keepa
2025-08-17T20:01:33.8814054Z 
2025-08-17T20:01:33.8814177Z <a id="common.llm"></a>
2025-08-17T20:01:33.8814396Z 
2025-08-17T20:01:33.8814512Z # common.llm
2025-08-17T20:01:33.8814680Z 
2025-08-17T20:01:33.8814821Z <a id="common.settings"></a>
2025-08-17T20:01:33.8815058Z 
2025-08-17T20:01:33.8815166Z # common.settings
2025-08-17T20:01:33.8815342Z 
2025-08-17T20:01:33.8815461Z <a id="common.db"></a>
2025-08-17T20:01:33.8815675Z 
2025-08-17T20:01:33.8816085Z # common.db
2025-08-17T20:01:33.8816263Z 
2025-08-17T20:01:33.8816424Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T20:01:33.8816718Z 
2025-08-17T20:01:33.8816855Z #### build\_sqlalchemy\_url
2025-08-17T20:01:33.8817065Z 
2025-08-17T20:01:33.8817171Z ```python
2025-08-17T20:01:33.8817481Z def build_sqlalchemy_url() -> str
2025-08-17T20:01:33.8817843Z ```
2025-08-17T20:01:33.8818002Z 
2025-08-17T20:01:33.8818178Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T20:01:33.8818493Z 
2025-08-17T20:01:33.8818659Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T20:01:33.8818971Z 
2025-08-17T20:01:33.8819107Z #### build\_asyncpg\_dsn
2025-08-17T20:01:33.8819318Z 
2025-08-17T20:01:33.8819430Z ```python
2025-08-17T20:01:33.8819725Z def build_asyncpg_dsn() -> str
2025-08-17T20:01:33.8820090Z ```
2025-08-17T20:01:33.8820231Z 
2025-08-17T20:01:33.8820449Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T20:01:33.8820828Z 
2025-08-17T20:01:33.8821410Z <a id="common.db.refresh_mvs"></a>
2025-08-17T20:01:33.8821694Z 
2025-08-17T20:01:33.8821813Z #### refresh\_mvs
2025-08-17T20:01:33.8821996Z 
2025-08-17T20:01:33.8822107Z ```python
2025-08-17T20:01:33.8822650Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T20:01:33.8823092Z ```
2025-08-17T20:01:33.8823245Z 
2025-08-17T20:01:33.8823482Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T20:01:33.8823975Z 
2025-08-17T20:01:33.8824121Z <a id="common.config"></a>
2025-08-17T20:01:33.8824378Z 
2025-08-17T20:01:33.8824503Z # common.config
2025-08-17T20:01:33.8824691Z 
2025-08-17T20:01:33.8824825Z <a id="common.base"></a>
2025-08-17T20:01:33.8825058Z 
2025-08-17T20:01:33.8825171Z # common.base
2025-08-17T20:01:33.8825341Z 
2025-08-17T20:01:33.8825476Z <a id="common.base.Base"></a>
2025-08-17T20:01:33.8825713Z 
2025-08-17T20:01:33.8825832Z ## Base Objects
2025-08-17T20:01:33.8825972Z 
2025-08-17T20:01:33.8826037Z ```python
2025-08-17T20:01:33.8826214Z class Base(DeclarativeBase)
2025-08-17T20:01:33.8826425Z ```
2025-08-17T20:01:33.8826512Z 
2025-08-17T20:01:33.8826602Z Base class for SQLAlchemy models.
2025-08-17T20:01:33.8826752Z 
2025-08-17T20:01:33.8826824Z <a id="repricer"></a>
2025-08-17T20:01:33.8826946Z 
2025-08-17T20:01:33.8827011Z # repricer
2025-08-17T20:01:33.8827101Z 
2025-08-17T20:01:33.8827188Z <a id="repricer.app.schemas"></a>
2025-08-17T20:01:33.8827345Z 
2025-08-17T20:01:33.8827423Z # repricer.app.schemas
2025-08-17T20:01:33.8827544Z 
2025-08-17T20:01:33.8827634Z <a id="repricer.app.deps"></a>
2025-08-17T20:01:33.8827774Z 
2025-08-17T20:01:33.8827848Z # repricer.app.deps
2025-08-17T20:01:33.8827965Z 
2025-08-17T20:01:33.8828104Z Placeholder module for Keepa / SP-API clients.
2025-08-17T20:01:33.8828293Z 
2025-08-17T20:01:33.8828376Z <a id="repricer.app.logic"></a>
2025-08-17T20:01:33.8828525Z 
2025-08-17T20:01:33.8828599Z # repricer.app.logic
2025-08-17T20:01:33.8828713Z 
2025-08-17T20:01:33.8828818Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T20:01:33.8829001Z 
2025-08-17T20:01:33.8829072Z #### MIN\_MARGIN
2025-08-17T20:01:33.8829176Z 
2025-08-17T20:01:33.8829244Z 15 % ROI
2025-08-17T20:01:33.8829333Z 
2025-08-17T20:01:33.8829439Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T20:01:33.8829626Z 
2025-08-17T20:01:33.8829696Z #### compute\_price
2025-08-17T20:01:33.8829803Z 
2025-08-17T20:01:33.8829871Z ```python
2025-08-17T20:01:33.8830118Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T20:01:33.8830425Z ```
2025-08-17T20:01:33.8830510Z 
2025-08-17T20:01:33.8830617Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T20:01:33.8830901Z Replace with real competitive logic later.
2025-08-17T20:01:33.8831070Z 
2025-08-17T20:01:33.8831152Z <a id="repricer.app.main"></a>
2025-08-17T20:01:33.8831304Z 
2025-08-17T20:01:33.8831375Z # repricer.app.main
2025-08-17T20:01:33.8831486Z 
2025-08-17T20:01:33.8831571Z <a id="repricer.app"></a>
2025-08-17T20:01:33.8831700Z 
2025-08-17T20:01:33.8831766Z # repricer.app
2025-08-17T20:01:33.8832046Z 
2025-08-17T20:01:33.8832144Z <a id="repricer.tests.test_imports"></a>
2025-08-17T20:01:33.8832311Z 
2025-08-17T20:01:33.8832606Z # repricer.tests.test\_imports
2025-08-17T20:01:33.8832799Z 
2025-08-17T20:01:33.8832891Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T20:01:33.8833053Z 
2025-08-17T20:01:33.8833139Z # repricer.tests.test\_smoke
2025-08-17T20:01:33.8833274Z 
2025-08-17T20:01:33.8833352Z <a id="repricer.tests"></a>
2025-08-17T20:01:33.8833483Z 
2025-08-17T20:01:33.8833556Z # repricer.tests
2025-08-17T20:01:33.8833662Z 
2025-08-17T20:01:33.8833725Z <a id="db"></a>
2025-08-17T20:01:33.8833828Z 
2025-08-17T20:01:33.8833887Z # db
2025-08-17T20:01:33.8833970Z 
2025-08-17T20:01:33.8834043Z <a id="db.utils.views"></a>
2025-08-17T20:01:33.8834177Z 
2025-08-17T20:01:33.8834242Z # db.utils.views
2025-08-17T20:01:33.8834342Z 
2025-08-17T20:01:33.8834438Z <a id="db.utils.views.replace_view"></a>
2025-08-17T20:01:33.8834637Z 
2025-08-17T20:01:33.8834703Z #### replace\_view
2025-08-17T20:01:33.8835006Z 
2025-08-17T20:01:33.8835073Z ```python
2025-08-17T20:01:33.8835267Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T20:01:33.8835516Z ```
2025-08-17T20:01:33.8835598Z 
2025-08-17T20:01:33.8835686Z Drop and recreate a SQL view atomically.
2025-08-17T20:01:33.8835855Z 
2025-08-17T20:01:33.8835925Z <a id="db.utils"></a>
2025-08-17T20:01:33.8836041Z 
2025-08-17T20:01:33.8836109Z # db.utils
2025-08-17T20:01:33.8836197Z 
2025-08-17T20:01:33.8836275Z <a id="price_importer"></a>
2025-08-17T20:01:33.8836411Z 
2025-08-17T20:01:33.8836480Z # price\_importer
2025-08-17T20:01:33.8836585Z 
2025-08-17T20:01:33.8836688Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T20:01:33.8836882Z 
2025-08-17T20:01:33.8836974Z # price\_importer.services\_common.dsn
2025-08-17T20:01:33.8837138Z 
2025-08-17T20:01:33.8837269Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T20:01:33.8837475Z 
2025-08-17T20:01:33.8837539Z #### build\_dsn
2025-08-17T20:01:33.8837647Z 
2025-08-17T20:01:33.8837719Z ```python
2025-08-17T20:01:33.8837889Z def build_dsn(sync: bool = True) -> str
2025-08-17T20:01:33.8838110Z ```
2025-08-17T20:01:33.8838193Z 
2025-08-17T20:01:33.8838267Z Return safe DSN.
2025-08-17T20:01:33.8838373Z 
2025-08-17T20:01:33.8838735Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T20:01:33.8838941Z 
2025-08-17T20:01:33.8839085Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T20:01:33.8839297Z 
2025-08-17T20:01:33.8839409Z # price\_importer.services\_common.models\_vendor
2025-08-17T20:01:33.8839610Z 
2025-08-17T20:01:33.8839717Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T20:01:33.8839909Z 
2025-08-17T20:01:33.8840011Z # price\_importer.services\_common.db\_url
2025-08-17T20:01:33.8840185Z 
2025-08-17T20:01:33.8840317Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T20:01:33.8840531Z 
2025-08-17T20:01:33.8840602Z #### build\_url
2025-08-17T20:01:33.8840703Z 
2025-08-17T20:01:33.8840768Z ```python
2025-08-17T20:01:33.8840963Z def build_url(async_: bool = True) -> str
2025-08-17T20:01:33.8841185Z ```
2025-08-17T20:01:33.8841274Z 
2025-08-17T20:01:33.8841372Z Return Postgres DSN from env or PG_* parts.
2025-08-17T20:01:33.8841545Z 
2025-08-17T20:01:33.8841659Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T20:01:33.8841847Z 
2025-08-17T20:01:33.8841943Z # price\_importer.services\_common.keepa
2025-08-17T20:01:33.8842118Z 
2025-08-17T20:01:33.8842220Z <a id="price_importer.services_common.llm"></a>
2025-08-17T20:01:33.8842621Z 
2025-08-17T20:01:33.8842724Z # price\_importer.services\_common.llm
2025-08-17T20:01:33.8842902Z 
2025-08-17T20:01:33.8843020Z <a id="price_importer.services_common.settings"></a>
2025-08-17T20:01:33.8843219Z 
2025-08-17T20:01:33.8843326Z # price\_importer.services\_common.settings
2025-08-17T20:01:33.8843501Z 
2025-08-17T20:01:33.8843604Z <a id="price_importer.services_common.db"></a>
2025-08-17T20:01:33.8843794Z 
2025-08-17T20:01:33.8843883Z # price\_importer.services\_common.db
2025-08-17T20:01:33.8844186Z 
2025-08-17T20:01:33.8844342Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T20:01:33.8844588Z 
2025-08-17T20:01:33.8844665Z #### build\_sqlalchemy\_url
2025-08-17T20:01:33.8844796Z 
2025-08-17T20:01:33.8844864Z ```python
2025-08-17T20:01:33.8845034Z def build_sqlalchemy_url() -> str
2025-08-17T20:01:33.8845243Z ```
2025-08-17T20:01:33.8845324Z 
2025-08-17T20:01:33.8845419Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T20:01:33.8845594Z 
2025-08-17T20:01:33.8845739Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T20:01:33.8845966Z 
2025-08-17T20:01:33.8846047Z #### build\_asyncpg\_dsn
2025-08-17T20:01:33.8846172Z 
2025-08-17T20:01:33.8846234Z ```python
2025-08-17T20:01:33.8846405Z def build_asyncpg_dsn() -> str
2025-08-17T20:01:33.8846601Z ```
2025-08-17T20:01:33.8846689Z 
2025-08-17T20:01:33.8846817Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T20:01:33.8847030Z 
2025-08-17T20:01:33.8847286Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T20:01:33.8847504Z 
2025-08-17T20:01:33.8847569Z #### refresh\_mvs
2025-08-17T20:01:33.8847673Z 
2025-08-17T20:01:33.8847741Z ```python
2025-08-17T20:01:33.8847934Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T20:01:33.8848182Z ```
2025-08-17T20:01:33.8848264Z 
2025-08-17T20:01:33.8848396Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T20:01:33.8848616Z 
2025-08-17T20:01:33.8848711Z <a id="price_importer.services_common"></a>
2025-08-17T20:01:33.8848884Z 
2025-08-17T20:01:33.8848971Z # price\_importer.services\_common
2025-08-17T20:01:33.8849131Z 
2025-08-17T20:01:33.8849235Z <a id="price_importer.services_common.base"></a>
2025-08-17T20:01:33.8849430Z 
2025-08-17T20:01:33.8849528Z # price\_importer.services\_common.base
2025-08-17T20:01:33.8849694Z 
2025-08-17T20:01:33.8849786Z <a id="price_importer.normaliser"></a>
2025-08-17T20:01:33.8849955Z 
2025-08-17T20:01:33.8850037Z # price\_importer.normaliser
2025-08-17T20:01:33.8850186Z 
2025-08-17T20:01:33.8850293Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T20:01:33.8850486Z 
2025-08-17T20:01:33.8850574Z # price\_importer.common.models\_vendor
2025-08-17T20:01:33.8850739Z 
2025-08-17T20:01:33.8850841Z <a id="price_importer.common.db_url"></a>
2025-08-17T20:01:33.8851014Z 
2025-08-17T20:01:33.8851101Z # price\_importer.common.db\_url
2025-08-17T20:01:33.8851257Z 
2025-08-17T20:01:33.8851363Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T20:01:33.8851552Z 
2025-08-17T20:01:33.8851623Z #### make\_dsn
2025-08-17T20:01:33.8851722Z 
2025-08-17T20:01:33.8851784Z ```python
2025-08-17T20:01:33.8851960Z def make_dsn(async_: bool = False) -> str
2025-08-17T20:01:33.8852181Z ```
2025-08-17T20:01:33.8852264Z 
2025-08-17T20:01:33.8852554Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T20:01:33.8852866Z 
2025-08-17T20:01:33.8852981Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T20:01:33.8853181Z 
2025-08-17T20:01:33.8853256Z #### build\_url
2025-08-17T20:01:33.8853357Z 
2025-08-17T20:01:33.8853424Z ```python
2025-08-17T20:01:33.8853597Z def build_url(async_: bool = False) -> str
2025-08-17T20:01:33.8853830Z ```
2025-08-17T20:01:33.8853911Z 
2025-08-17T20:01:33.8854034Z Return Postgres DSN built from environment variables.
2025-08-17T20:01:33.8854239Z 
2025-08-17T20:01:33.8854327Z <a id="price_importer.common"></a>
2025-08-17T20:01:33.8854481Z 
2025-08-17T20:01:33.8854561Z # price\_importer.common
2025-08-17T20:01:33.8854699Z 
2025-08-17T20:01:33.8854791Z <a id="price_importer.common.base"></a>
2025-08-17T20:01:33.8854955Z 
2025-08-17T20:01:33.8855044Z # price\_importer.common.base
2025-08-17T20:01:33.8855187Z 
2025-08-17T20:01:33.8855286Z <a id="price_importer.tests.conftest"></a>
2025-08-17T20:01:33.8855466Z 
2025-08-17T20:01:33.8855554Z # price\_importer.tests.conftest
2025-08-17T20:01:33.8855703Z 
2025-08-17T20:01:33.8855803Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T20:01:33.8855986Z 
2025-08-17T20:01:33.8856224Z # price\_importer.tests.test\_reader
2025-08-17T20:01:33.8856386Z 
2025-08-17T20:01:33.8856497Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T20:01:33.8856681Z 
2025-08-17T20:01:33.8856770Z # price\_importer.tests.test\_imports
2025-08-17T20:01:33.8856937Z 
2025-08-17T20:01:33.8857052Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T20:01:33.8857228Z 
2025-08-17T20:01:33.8857315Z # price\_importer.tests.test\_smoke
2025-08-17T20:01:33.8857476Z 
2025-08-17T20:01:33.8857582Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T20:01:33.8857770Z 
2025-08-17T20:01:33.8857866Z # price\_importer.tests.test\_normaliser
2025-08-17T20:01:33.8858033Z 
2025-08-17T20:01:33.8858117Z <a id="price_importer.tests"></a>
2025-08-17T20:01:33.8858274Z 
2025-08-17T20:01:33.8858350Z # price\_importer.tests
2025-08-17T20:01:33.8858473Z 
2025-08-17T20:01:33.8858558Z <a id="price_importer.reader"></a>
2025-08-17T20:01:33.8858716Z 
2025-08-17T20:01:33.8858794Z # price\_importer.reader
2025-08-17T20:01:33.8859055Z 
2025-08-17T20:01:33.8859149Z <a id="price_importer.repository"></a>
2025-08-17T20:01:33.8859317Z 
2025-08-17T20:01:33.8859400Z # price\_importer.repository
2025-08-17T20:01:33.8859542Z 
2025-08-17T20:01:33.8859626Z <a id="price_importer.import"></a>
2025-08-17T20:01:33.8859776Z 
2025-08-17T20:01:33.8859855Z # price\_importer.import
2025-08-17T20:01:33.8859986Z 
2025-08-17T20:01:33.8860056Z <a id="fees_h10"></a>
2025-08-17T20:01:33.8860171Z 
2025-08-17T20:01:33.8860239Z # fees\_h10
2025-08-17T20:01:33.8860331Z 
2025-08-17T20:01:33.8860404Z <a id="fees_h10.worker"></a>
2025-08-17T20:01:33.8860534Z 
2025-08-17T20:01:33.8860605Z # fees\_h10.worker
2025-08-17T20:01:33.8860712Z 
2025-08-17T20:01:33.8860810Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T20:01:33.8860992Z 
2025-08-17T20:01:33.8861065Z #### list\_active\_asins
2025-08-17T20:01:33.8861185Z 
2025-08-17T20:01:33.8861253Z ```python
2025-08-17T20:01:33.8861424Z def list_active_asins() -> list[str]
2025-08-17T20:01:33.8861651Z ```
2025-08-17T20:01:33.8861734Z 
2025-08-17T20:01:33.8861846Z Return known ASINs or an empty list if unavailable.
2025-08-17T20:01:33.8862049Z 
2025-08-17T20:01:33.8862133Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T20:01:33.8862293Z 
2025-08-17T20:01:33.8862374Z # fees\_h10.tests.test\_smoke
2025-08-17T20:01:33.8862750Z 
2025-08-17T20:01:33.8862829Z <a id="fees_h10.tests"></a>
2025-08-17T20:01:33.8862959Z 
2025-08-17T20:01:33.8863029Z # fees\_h10.tests
2025-08-17T20:01:33.8863132Z 
2025-08-17T20:01:33.8863207Z <a id="fees_h10.client"></a>
2025-08-17T20:01:33.8863336Z 
2025-08-17T20:01:33.8863407Z # fees\_h10.client
2025-08-17T20:01:33.8863510Z 
2025-08-17T20:01:33.8863590Z <a id="fees_h10.repository"></a>
2025-08-17T20:01:33.8863739Z 
2025-08-17T20:01:33.8863810Z # fees\_h10.repository
2025-08-17T20:01:33.8863925Z 
2025-08-17T20:01:33.8864000Z <a id="emailer"></a>
2025-08-17T20:01:33.8864115Z 
2025-08-17T20:01:33.8864177Z # emailer
2025-08-17T20:01:33.8864266Z 
2025-08-17T20:01:33.8864387Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T20:01:33.8864570Z 
2025-08-17T20:01:33.8864659Z # emailer.tests.test\_import\_emailer
2025-08-17T20:01:33.8864826Z 
2025-08-17T20:01:33.8864910Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T20:01:33.8865065Z 
2025-08-17T20:01:33.8865155Z # emailer.tests.test\_smoke
2025-08-17T20:01:33.8865343Z 
2025-08-17T20:01:33.8865421Z <a id="emailer.tests"></a>
2025-08-17T20:01:33.8865568Z 
2025-08-17T20:01:33.8865644Z # emailer.tests
2025-08-17T20:01:33.8865750Z 
2025-08-17T20:01:33.8865834Z <a id="emailer.generate_body"></a>
2025-08-17T20:01:33.8865993Z 
2025-08-17T20:01:33.8866070Z # emailer.generate\_body
2025-08-17T20:01:33.8866200Z 
2025-08-17T20:01:33.8866277Z <a id="llm_server"></a>
2025-08-17T20:01:33.8866394Z 
2025-08-17T20:01:33.8866457Z # llm\_server
2025-08-17T20:01:33.8866552Z 
2025-08-17T20:01:33.8866635Z <a id="llm_server.app"></a>
2025-08-17T20:01:33.8866765Z 
2025-08-17T20:01:33.8866833Z # llm\_server.app
2025-08-17T20:01:33.8866954Z 
