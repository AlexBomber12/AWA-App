2025-08-17T15:17:56.6904806Z ##[group]Run pydoc-markdown
2025-08-17T15:17:56.6905102Z [36;1mpydoc-markdown[0m
2025-08-17T15:17:56.6949220Z shell: /usr/bin/bash -e {0}
2025-08-17T15:17:56.6949473Z env:
2025-08-17T15:17:56.6949712Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:17:56.6950318Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T15:17:56.6950734Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:17:56.6951074Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:17:56.6951439Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T15:17:56.6951780Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T15:17:56.6952065Z ##[endgroup]
2025-08-17T15:17:57.0510907Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T15:17:57.0511685Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T15:17:57.0512066Z In "pydoc-markdown.yml"
2025-08-17T15:17:57.0512406Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T15:17:57.0512891Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T15:17:57.0513424Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T15:17:57.0513785Z 
2025-08-17T15:17:57.2592715Z <a id="__init__"></a>
2025-08-17T15:17:57.2593238Z 
2025-08-17T15:17:57.2593366Z # \_\_init\_\_
2025-08-17T15:17:57.2593669Z 
2025-08-17T15:17:57.2594167Z <a id="api"></a>
2025-08-17T15:17:57.2594589Z 
2025-08-17T15:17:57.2594707Z # api
2025-08-17T15:17:57.2594885Z 
2025-08-17T15:17:57.2595043Z <a id="api.tests.test_llm"></a>
2025-08-17T15:17:57.2595324Z 
2025-08-17T15:17:57.2595464Z # api.tests.test\_llm
2025-08-17T15:17:57.2595688Z 
2025-08-17T15:17:57.2595830Z <a id="api.tests.test_imports"></a>
2025-08-17T15:17:57.2596113Z 
2025-08-17T15:17:57.2596260Z # api.tests.test\_imports
2025-08-17T15:17:57.2596495Z 
2025-08-17T15:17:57.2596652Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T15:17:57.2597296Z 
2025-08-17T15:17:57.2597446Z # api.tests.test\_entrypoint
2025-08-17T15:17:57.2597716Z 
2025-08-17T15:17:57.2597864Z <a id="api.tests.test_health"></a>
2025-08-17T15:17:57.2598151Z 
2025-08-17T15:17:57.2598283Z # api.tests.test\_health
2025-08-17T15:17:57.2598508Z 
2025-08-17T15:17:57.2598658Z <a id="api.migrations.env"></a>
2025-08-17T15:17:57.2598915Z 
2025-08-17T15:17:57.2599039Z # api.migrations.env
2025-08-17T15:17:57.2599248Z 
2025-08-17T15:17:57.2599459Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T15:17:57.2599813Z 
2025-08-17T15:17:57.2599990Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T15:17:57.2600536Z 
2025-08-17T15:17:57.2600724Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T15:17:57.2601071Z 
2025-08-17T15:17:57.2601236Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T15:17:57.2601539Z 
2025-08-17T15:17:57.2601802Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T15:17:57.2602230Z 
2025-08-17T15:17:57.2602483Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T15:17:57.2602907Z 
2025-08-17T15:17:57.2603094Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T15:17:57.2603322Z 
2025-08-17T15:17:57.2603441Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T15:17:57.2603641Z 
2025-08-17T15:17:57.2603770Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T15:17:57.2603972Z 
2025-08-17T15:17:57.2604070Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T15:17:57.2604260Z 
2025-08-17T15:17:57.2604385Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T15:17:57.2604595Z 
2025-08-17T15:17:57.2604708Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T15:17:57.2604907Z 
2025-08-17T15:17:57.2605025Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T15:17:57.2605221Z 
2025-08-17T15:17:57.2605331Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T15:17:57.2605513Z 
2025-08-17T15:17:57.2605636Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T15:17:57.2606092Z 
2025-08-17T15:17:57.2606195Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T15:17:57.2606375Z 
2025-08-17T15:17:57.2606500Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T15:17:57.2606698Z 
2025-08-17T15:17:57.2606803Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T15:17:57.2606986Z 
2025-08-17T15:17:57.2607102Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T15:17:57.2607288Z 
2025-08-17T15:17:57.2607383Z # api.migrations.versions.0001\_baseline
2025-08-17T15:17:57.2607559Z 
2025-08-17T15:17:57.2607648Z <a id="api.migrations.versions"></a>
2025-08-17T15:17:57.2607803Z 
2025-08-17T15:17:57.2607889Z # api.migrations.versions
2025-08-17T15:17:57.2608017Z 
2025-08-17T15:17:57.2608095Z <a id="api.migrations"></a>
2025-08-17T15:17:57.2608231Z 
2025-08-17T15:17:57.2608306Z # api.migrations
2025-08-17T15:17:57.2608410Z 
2025-08-17T15:17:57.2608478Z <a id="api.db"></a>
2025-08-17T15:17:57.2608591Z 
2025-08-17T15:17:57.2608662Z # api.db
2025-08-17T15:17:57.2608749Z 
2025-08-17T15:17:57.2608827Z <a id="api.routes.stats"></a>
2025-08-17T15:17:57.2608972Z 
2025-08-17T15:17:57.2609043Z # api.routes.stats
2025-08-17T15:17:57.2609150Z 
2025-08-17T15:17:57.2609241Z <a id="api.routes.stats.kpi"></a>
2025-08-17T15:17:57.2609391Z 
2025-08-17T15:17:57.2609454Z #### kpi
2025-08-17T15:17:57.2609546Z 
2025-08-17T15:17:57.2609611Z ```python
2025-08-17T15:17:57.2609776Z @router.get("/stats/kpi")
2025-08-17T15:17:57.2610023Z def kpi() -> List[Dict[str, int]]
2025-08-17T15:17:57.2610457Z ```
2025-08-17T15:17:57.2610555Z 
2025-08-17T15:17:57.2610634Z Return KPI metrics (mock).
2025-08-17T15:17:57.2610768Z 
2025-08-17T15:17:57.2610873Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T15:17:57.2611051Z 
2025-08-17T15:17:57.2611119Z #### roi\_by\_vendor
2025-08-17T15:17:57.2611236Z 
2025-08-17T15:17:57.2611302Z ```python
2025-08-17T15:17:57.2611471Z @router.get("/stats/roi_by_vendor")
2025-08-17T15:17:57.2611866Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T15:17:57.2612095Z ```
2025-08-17T15:17:57.2612179Z 
2025-08-17T15:17:57.2612260Z Return ROI percent by vendor.
2025-08-17T15:17:57.2612397Z 
2025-08-17T15:17:57.2612492Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T15:17:57.2612656Z 
2025-08-17T15:17:57.2612718Z #### roi\_trend
2025-08-17T15:17:57.2612819Z 
2025-08-17T15:17:57.2612878Z ```python
2025-08-17T15:17:57.2613037Z @router.get("/stats/roi_trend")
2025-08-17T15:17:57.2613270Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T15:17:57.2613494Z ```
2025-08-17T15:17:57.2613576Z 
2025-08-17T15:17:57.2613649Z Return 30-day ROI trend.
2025-08-17T15:17:57.2613769Z 
2025-08-17T15:17:57.2613852Z <a id="api.routes.roi"></a>
2025-08-17T15:17:57.2613981Z 
2025-08-17T15:17:57.2614048Z # api.routes.roi
2025-08-17T15:17:57.2614176Z 
2025-08-17T15:17:57.2614256Z <a id="api.routes.health"></a>
2025-08-17T15:17:57.2614447Z 
2025-08-17T15:17:57.2614522Z # api.routes.health
2025-08-17T15:17:57.2614635Z 
2025-08-17T15:17:57.2614725Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T15:17:57.2614894Z 
2025-08-17T15:17:57.2614956Z #### MAX\_SKEW
2025-08-17T15:17:57.2615050Z 
2025-08-17T15:17:57.2615111Z seconds
2025-08-17T15:17:57.2615199Z 
2025-08-17T15:17:57.2615287Z <a id="api.routes.health.health"></a>
2025-08-17T15:17:57.2615446Z 
2025-08-17T15:17:57.2615512Z #### health
2025-08-17T15:17:57.2615598Z 
2025-08-17T15:17:57.2615658Z ```python
2025-08-17T15:17:57.2615854Z @router.get("/health", include_in_schema=False)
2025-08-17T15:17:57.2616224Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T15:17:57.2616566Z ```
2025-08-17T15:17:57.2616645Z 
2025-08-17T15:17:57.2616758Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T15:17:57.2616960Z 
2025-08-17T15:17:57.2617045Z <a id="api.routes.repository"></a>
2025-08-17T15:17:57.2617201Z 
2025-08-17T15:17:57.2617283Z # api.routes.repository
2025-08-17T15:17:57.2617404Z 
2025-08-17T15:17:57.2617478Z <a id="api.routes"></a>
2025-08-17T15:17:57.2617745Z 
2025-08-17T15:17:57.2617809Z # api.routes
2025-08-17T15:17:57.2617903Z 
2025-08-17T15:17:57.2617978Z <a id="api.models.fee"></a>
2025-08-17T15:17:57.2618114Z 
2025-08-17T15:17:57.2618180Z # api.models.fee
2025-08-17T15:17:57.2618282Z 
2025-08-17T15:17:57.2618357Z <a id="api.models"></a>
2025-08-17T15:17:57.2618470Z 
2025-08-17T15:17:57.2618532Z # api.models
2025-08-17T15:17:57.2618630Z 
2025-08-17T15:17:57.2618708Z <a id="api.roi_repository"></a>
2025-08-17T15:17:57.2618846Z 
2025-08-17T15:17:57.2618915Z # api.roi\_repository
2025-08-17T15:17:57.2619034Z 
2025-08-17T15:17:57.2619102Z <a id="api.main"></a>
2025-08-17T15:17:57.2619208Z 
2025-08-17T15:17:57.2619277Z # api.main
2025-08-17T15:17:57.2619365Z 
2025-08-17T15:17:57.2619440Z <a id="api.main.ready"></a>
2025-08-17T15:17:57.2619565Z 
2025-08-17T15:17:57.2619634Z #### ready
2025-08-17T15:17:57.2619719Z 
2025-08-17T15:17:57.2619780Z ```python
2025-08-17T15:17:57.2620041Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T15:17:57.2620708Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T15:17:57.2621067Z                                                                       str]
2025-08-17T15:17:57.2621301Z ```
2025-08-17T15:17:57.2621381Z 
2025-08-17T15:17:57.2621474Z Return 200 only when migrations are at head.
2025-08-17T15:17:57.2621645Z 
2025-08-17T15:17:57.2621722Z <a id="api.config"></a>
2025-08-17T15:17:57.2621835Z 
2025-08-17T15:17:57.2621898Z # api.config
2025-08-17T15:17:57.2621996Z 
2025-08-17T15:17:57.2622060Z <a id="etl"></a>
2025-08-17T15:17:57.2622160Z 
2025-08-17T15:17:57.2622226Z # etl
2025-08-17T15:17:57.2622310Z 
2025-08-17T15:17:57.2622390Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T15:17:57.2622537Z 
2025-08-17T15:17:57.2622616Z # etl.fba\_fee\_ingestor
2025-08-17T15:17:57.2622738Z 
2025-08-17T15:17:57.2622817Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T15:17:57.2622963Z 
2025-08-17T15:17:57.2623033Z # etl.sp\_fees\_ingestor
2025-08-17T15:17:57.2623282Z 
2025-08-17T15:17:57.2623362Z <a id="etl.keepa_ingestor"></a>
2025-08-17T15:17:57.2623503Z 
2025-08-17T15:17:57.2623572Z # etl.keepa\_ingestor
2025-08-17T15:17:57.2623682Z 
2025-08-17T15:17:57.2623755Z <a id="etl.db"></a>
2025-08-17T15:17:57.2623858Z 
2025-08-17T15:17:57.2623918Z # etl.db
2025-08-17T15:17:57.2624009Z 
2025-08-17T15:17:57.2624088Z <a id="etl.dialects.schemas"></a>
2025-08-17T15:17:57.2624230Z 
2025-08-17T15:17:57.2624301Z # etl.dialects.schemas
2025-08-17T15:17:57.2624420Z 
2025-08-17T15:17:57.2624523Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T15:17:57.2624705Z 
2025-08-17T15:17:57.2624798Z # etl.dialects.amazon\_reimbursements
2025-08-17T15:17:57.2624957Z 
2025-08-17T15:17:57.2625042Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T15:17:57.2625211Z 
2025-08-17T15:17:57.2625289Z # etl.dialects.amazon\_returns
2025-08-17T15:17:57.2625428Z 
2025-08-17T15:17:57.2625501Z <a id="etl.dialects"></a>
2025-08-17T15:17:57.2625632Z 
2025-08-17T15:17:57.2625701Z # etl.dialects
2025-08-17T15:17:57.2625804Z 
2025-08-17T15:17:57.2625873Z <a id="ingest"></a>
2025-08-17T15:17:57.2625975Z 
2025-08-17T15:17:57.2626035Z # ingest
2025-08-17T15:17:57.2626119Z 
2025-08-17T15:17:57.2626207Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T15:17:57.2626361Z 
2025-08-17T15:17:57.2626435Z # ingest.tests.test\_smoke
2025-08-17T15:17:57.2626571Z 
2025-08-17T15:17:57.2626643Z <a id="ingest.tests"></a>
2025-08-17T15:17:57.2626763Z 
2025-08-17T15:17:57.2626833Z # ingest.tests
2025-08-17T15:17:57.2626930Z 
2025-08-17T15:17:57.2627011Z <a id="ingest.upload_router"></a>
2025-08-17T15:17:57.2627157Z 
2025-08-17T15:17:57.2627234Z # ingest.upload\_router
2025-08-17T15:17:57.2627349Z 
2025-08-17T15:17:57.2627427Z <a id="ingest.email_watcher"></a>
2025-08-17T15:17:57.2627572Z 
2025-08-17T15:17:57.2627695Z # ingest.email\_watcher
2025-08-17T15:17:57.2627806Z 
2025-08-17T15:17:57.2627908Z <a id="ingest.email_watcher.main"></a>
2025-08-17T15:17:57.2628067Z 
2025-08-17T15:17:57.2628133Z #### main
2025-08-17T15:17:57.2628343Z 
2025-08-17T15:17:57.2628405Z ```python
2025-08-17T15:17:57.2628577Z def main() -> dict[str, str]
2025-08-17T15:17:57.2628764Z ```
2025-08-17T15:17:57.2628845Z 
2025-08-17T15:17:57.2628989Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T15:17:57.2629211Z 
2025-08-17T15:17:57.2629339Z Returns {"status": "success"} when processing completes.
2025-08-17T15:17:57.2629552Z 
2025-08-17T15:17:57.2629631Z <a id="ingest.ingest_router"></a>
2025-08-17T15:17:57.2629774Z 
2025-08-17T15:17:57.2629853Z # ingest.ingest\_router
2025-08-17T15:17:57.2629970Z 
2025-08-17T15:17:57.2630044Z <a id="logistics_etl"></a>
2025-08-17T15:17:57.2630374Z 
2025-08-17T15:17:57.2630451Z # logistics\_etl
2025-08-17T15:17:57.2630559Z 
2025-08-17T15:17:57.2630632Z Daily logistics ETL job.
2025-08-17T15:17:57.2630759Z 
2025-08-17T15:17:57.2630843Z <a id="logistics_etl.__main__"></a>
2025-08-17T15:17:57.2630991Z 
2025-08-17T15:17:57.2631068Z # logistics\_etl.\_\_main\_\_
2025-08-17T15:17:57.2631204Z 
2025-08-17T15:17:57.2631283Z <a id="logistics_etl.dsn"></a>
2025-08-17T15:17:57.2631415Z 
2025-08-17T15:17:57.2631488Z # logistics\_etl.dsn
2025-08-17T15:17:57.2631598Z 
2025-08-17T15:17:57.2631709Z Local DSN builder to avoid cross-service dependency.
2025-08-17T15:17:57.2631914Z 
2025-08-17T15:17:57.2631999Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T15:17:57.2632161Z 
2025-08-17T15:17:57.2632223Z #### build\_dsn
2025-08-17T15:17:57.2632328Z 
2025-08-17T15:17:57.2632388Z ```python
2025-08-17T15:17:57.2632559Z def build_dsn(sync: bool = True) -> str
2025-08-17T15:17:57.2632769Z ```
2025-08-17T15:17:57.2632848Z 
2025-08-17T15:17:57.2632987Z Return a Postgres DSN assembled from environment variables.
2025-08-17T15:17:57.2633206Z 
2025-08-17T15:17:57.2633355Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T15:17:57.2633739Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T15:17:57.2634080Z error when any required variable is missing.
2025-08-17T15:17:57.2634379Z 
2025-08-17T15:17:57.2634471Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T15:17:57.2634637Z 
2025-08-17T15:17:57.2634723Z # logistics\_etl.tests.conftest
2025-08-17T15:17:57.2634864Z 
2025-08-17T15:17:57.2634964Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T15:17:57.2635149Z 
2025-08-17T15:17:57.2635235Z # logistics\_etl.tests.test\_repository
2025-08-17T15:17:57.2635394Z 
2025-08-17T15:17:57.2635487Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T15:17:57.2635650Z 
2025-08-17T15:17:57.2635730Z # logistics\_etl.tests.test\_cron
2025-08-17T15:17:57.2635873Z 
2025-08-17T15:17:57.2635974Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T15:17:57.2636143Z 
2025-08-17T15:17:57.2636224Z # logistics\_etl.tests.test\_imports
2025-08-17T15:17:57.2636385Z 
2025-08-17T15:17:57.2636472Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T15:17:57.2636638Z 
2025-08-17T15:17:57.2636724Z # logistics\_etl.tests.test\_smoke
2025-08-17T15:17:57.2636877Z 
2025-08-17T15:17:57.2636973Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T15:17:57.2637140Z 
2025-08-17T15:17:57.2637229Z # logistics\_etl.tests.test\_client
2025-08-17T15:17:57.2637379Z 
2025-08-17T15:17:57.2637457Z <a id="logistics_etl.tests"></a>
2025-08-17T15:17:57.2637604Z 
2025-08-17T15:17:57.2637673Z # logistics\_etl.tests
2025-08-17T15:17:57.2637788Z 
2025-08-17T15:17:57.2637869Z <a id="logistics_etl.flow"></a>
2025-08-17T15:17:57.2638004Z 
2025-08-17T15:17:57.2638071Z # logistics\_etl.flow
2025-08-17T15:17:57.2638183Z 
2025-08-17T15:17:57.2638270Z <a id="logistics_etl.client"></a>
2025-08-17T15:17:57.2638409Z 
2025-08-17T15:17:57.2638480Z # logistics\_etl.client
2025-08-17T15:17:57.2638601Z 
2025-08-17T15:17:57.2638675Z <a id="logistics_etl.cron"></a>
2025-08-17T15:17:57.2638808Z 
2025-08-17T15:17:57.2638877Z # logistics\_etl.cron
2025-08-17T15:17:57.2638992Z 
2025-08-17T15:17:57.2639069Z <a id="logistics_etl.db"></a>
2025-08-17T15:17:57.2639202Z 
2025-08-17T15:17:57.2639280Z # logistics\_etl.db
2025-08-17T15:17:57.2639499Z 
2025-08-17T15:17:57.2639585Z <a id="logistics_etl.repository"></a>
2025-08-17T15:17:57.2639743Z 
2025-08-17T15:17:57.2639820Z # logistics\_etl.repository
2025-08-17T15:17:57.2639949Z 
2025-08-17T15:17:57.2640018Z <a id="alert_bot"></a>
2025-08-17T15:17:57.2640304Z 
2025-08-17T15:17:57.2640372Z # alert\_bot
2025-08-17T15:17:57.2640474Z 
2025-08-17T15:17:57.2640569Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T15:17:57.2640732Z 
2025-08-17T15:17:57.2640809Z # alert\_bot.tests.test\_smoke
2025-08-17T15:17:57.2640948Z 
2025-08-17T15:17:57.2641023Z <a id="alert_bot.tests"></a>
2025-08-17T15:17:57.2641152Z 
2025-08-17T15:17:57.2641215Z # alert\_bot.tests
2025-08-17T15:17:57.2641324Z 
2025-08-17T15:17:57.2641400Z <a id="alert_bot.alert_bot"></a>
2025-08-17T15:17:57.2641537Z 
2025-08-17T15:17:57.2641613Z # alert\_bot.alert\_bot
2025-08-17T15:17:57.2641725Z 
2025-08-17T15:17:57.2641798Z <a id="alert_bot.rules"></a>
2025-08-17T15:17:57.2641929Z 
2025-08-17T15:17:57.2642005Z # alert\_bot.rules
2025-08-17T15:17:57.2642111Z 
2025-08-17T15:17:57.2642177Z <a id="common"></a>
2025-08-17T15:17:57.2642284Z 
2025-08-17T15:17:57.2642342Z # common
2025-08-17T15:17:57.2642427Z 
2025-08-17T15:17:57.2642503Z <a id="common.dsn"></a>
2025-08-17T15:17:57.2642617Z 
2025-08-17T15:17:57.2642679Z # common.dsn
2025-08-17T15:17:57.2642769Z 
2025-08-17T15:17:57.2642856Z <a id="common.dsn.build_dsn"></a>
2025-08-17T15:17:57.2642995Z 
2025-08-17T15:17:57.2643057Z #### build\_dsn
2025-08-17T15:17:57.2643166Z 
2025-08-17T15:17:57.2643228Z ```python
2025-08-17T15:17:57.2643399Z def build_dsn(sync: bool = True) -> str
2025-08-17T15:17:57.2643606Z ```
2025-08-17T15:17:57.2643694Z 
2025-08-17T15:17:57.2643812Z Return a Postgres DSN, validating required variables.
2025-08-17T15:17:57.2644009Z 
2025-08-17T15:17:57.2644193Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T15:17:57.2644624Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T15:17:57.2645196Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T15:17:57.2645502Z missing.
2025-08-17T15:17:57.2645595Z 
2025-08-17T15:17:57.2645672Z <a id="common.models_vendor"></a>
2025-08-17T15:17:57.2645814Z 
2025-08-17T15:17:57.2645891Z # common.models\_vendor
2025-08-17T15:17:57.2646007Z 
2025-08-17T15:17:57.2646091Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T15:17:57.2646253Z 
2025-08-17T15:17:57.2646323Z ## Vendor Objects
2025-08-17T15:17:57.2646426Z 
2025-08-17T15:17:57.2646486Z ```python
2025-08-17T15:17:57.2646641Z class Vendor(Base)
2025-08-17T15:17:57.2646798Z ```
2025-08-17T15:17:57.2646883Z 
2025-08-17T15:17:57.2646960Z Vendor of inventory items.
2025-08-17T15:17:57.2647087Z 
2025-08-17T15:17:57.2647192Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T15:17:57.2647368Z 
2025-08-17T15:17:57.2647437Z ## VendorPrice Objects
2025-08-17T15:17:57.2647556Z 
2025-08-17T15:17:57.2647616Z ```python
2025-08-17T15:17:57.2647772Z class VendorPrice(Base)
2025-08-17T15:17:57.2647962Z ```
2025-08-17T15:17:57.2648043Z 
2025-08-17T15:17:57.2648142Z Association table linking vendors to pricing.
2025-08-17T15:17:57.2648324Z 
2025-08-17T15:17:57.2648396Z <a id="common.db_url"></a>
2025-08-17T15:17:57.2648519Z 
2025-08-17T15:17:57.2648590Z # common.db\_url
2025-08-17T15:17:57.2648688Z 
2025-08-17T15:17:57.2648769Z <a id="common.db_url.build_url"></a>
2025-08-17T15:17:57.2648925Z 
2025-08-17T15:17:57.2648987Z #### build\_url
2025-08-17T15:17:57.2649084Z 
2025-08-17T15:17:57.2649144Z ```python
2025-08-17T15:17:57.2649320Z def build_url(async_: bool = True) -> str
2025-08-17T15:17:57.2649542Z ```
2025-08-17T15:17:57.2649628Z 
2025-08-17T15:17:57.2649722Z Return Postgres DSN from env or PG_* parts.
2025-08-17T15:17:57.2649895Z 
2025-08-17T15:17:57.2649977Z <a id="common.keepa"></a>
2025-08-17T15:17:57.2650253Z 
2025-08-17T15:17:57.2650349Z # common.keepa
2025-08-17T15:17:57.2650460Z 
2025-08-17T15:17:57.2650532Z <a id="common.llm"></a>
2025-08-17T15:17:57.2650656Z 
2025-08-17T15:17:57.2650840Z # common.llm
2025-08-17T15:17:57.2650949Z 
2025-08-17T15:17:57.2651028Z <a id="common.settings"></a>
2025-08-17T15:17:57.2651194Z 
2025-08-17T15:17:57.2651269Z # common.settings
2025-08-17T15:17:57.2651372Z 
2025-08-17T15:17:57.2651441Z <a id="common.db"></a>
2025-08-17T15:17:57.2651560Z 
2025-08-17T15:17:57.2651623Z # common.db
2025-08-17T15:17:57.2651715Z 
2025-08-17T15:17:57.2651804Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T15:17:57.2651982Z 
2025-08-17T15:17:57.2652057Z #### build\_sqlalchemy\_url
2025-08-17T15:17:57.2652184Z 
2025-08-17T15:17:57.2652251Z ```python
2025-08-17T15:17:57.2652418Z def build_sqlalchemy_url() -> str
2025-08-17T15:17:57.2652621Z ```
2025-08-17T15:17:57.2652701Z 
2025-08-17T15:17:57.2652792Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T15:17:57.2652966Z 
2025-08-17T15:17:57.2653051Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T15:17:57.2653214Z 
2025-08-17T15:17:57.2653285Z #### build\_asyncpg\_dsn
2025-08-17T15:17:57.2653415Z 
2025-08-17T15:17:57.2653479Z ```python
2025-08-17T15:17:57.2653649Z def build_asyncpg_dsn() -> str
2025-08-17T15:17:57.2653841Z ```
2025-08-17T15:17:57.2653919Z 
2025-08-17T15:17:57.2654049Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T15:17:57.2654259Z 
2025-08-17T15:17:57.2654342Z <a id="common.db.refresh_mvs"></a>
2025-08-17T15:17:57.2654496Z 
2025-08-17T15:17:57.2654559Z #### refresh\_mvs
2025-08-17T15:17:57.2654659Z 
2025-08-17T15:17:57.2654718Z ```python
2025-08-17T15:17:57.2654911Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T15:17:57.2655159Z ```
2025-08-17T15:17:57.2655236Z 
2025-08-17T15:17:57.2655368Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T15:17:57.2655583Z 
2025-08-17T15:17:57.2655663Z <a id="common.config"></a>
2025-08-17T15:17:57.2655788Z 
2025-08-17T15:17:57.2655854Z # common.config
2025-08-17T15:17:57.2655958Z 
2025-08-17T15:17:57.2656028Z <a id="common.base"></a>
2025-08-17T15:17:57.2656146Z 
2025-08-17T15:17:57.2656333Z # common.base
2025-08-17T15:17:57.2656434Z 
2025-08-17T15:17:57.2656511Z <a id="common.base.Base"></a>
2025-08-17T15:17:57.2656648Z 
2025-08-17T15:17:57.2656718Z ## Base Objects
2025-08-17T15:17:57.2656814Z 
2025-08-17T15:17:57.2656873Z ```python
2025-08-17T15:17:57.2657036Z class Base(DeclarativeBase)
2025-08-17T15:17:57.2657220Z ```
2025-08-17T15:17:57.2657305Z 
2025-08-17T15:17:57.2657386Z Base class for SQLAlchemy models.
2025-08-17T15:17:57.2657532Z 
2025-08-17T15:17:57.2657608Z <a id="repricer"></a>
2025-08-17T15:17:57.2657723Z 
2025-08-17T15:17:57.2657784Z # repricer
2025-08-17T15:17:57.2657871Z 
2025-08-17T15:17:57.2657962Z <a id="repricer.app.schemas"></a>
2025-08-17T15:17:57.2658107Z 
2025-08-17T15:17:57.2658181Z # repricer.app.schemas
2025-08-17T15:17:57.2658305Z 
2025-08-17T15:17:57.2658386Z <a id="repricer.app.deps"></a>
2025-08-17T15:17:57.2658524Z 
2025-08-17T15:17:57.2658599Z # repricer.app.deps
2025-08-17T15:17:57.2658713Z 
2025-08-17T15:17:57.2658823Z Placeholder module for Keepa / SP-API clients.
2025-08-17T15:17:57.2659015Z 
2025-08-17T15:17:57.2659104Z <a id="repricer.app.logic"></a>
2025-08-17T15:17:57.2659243Z 
2025-08-17T15:17:57.2659316Z # repricer.app.logic
2025-08-17T15:17:57.2659433Z 
2025-08-17T15:17:57.2659527Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T15:17:57.2659699Z 
2025-08-17T15:17:57.2659761Z #### MIN\_MARGIN
2025-08-17T15:17:57.2659866Z 
2025-08-17T15:17:57.2659926Z 15 % ROI
2025-08-17T15:17:57.2660009Z 
2025-08-17T15:17:57.2660264Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T15:17:57.2660544Z 
2025-08-17T15:17:57.2660725Z #### compute\_price
2025-08-17T15:17:57.2660947Z 
2025-08-17T15:17:57.2661057Z ```python
2025-08-17T15:17:57.2661469Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T15:17:57.2661971Z ```
2025-08-17T15:17:57.2662133Z 
2025-08-17T15:17:57.2662324Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T15:17:57.2662626Z Replace with real competitive logic later.
2025-08-17T15:17:57.2662814Z 
2025-08-17T15:17:57.2663086Z <a id="repricer.app.main"></a>
2025-08-17T15:17:57.2663346Z 
2025-08-17T15:17:57.2663474Z # repricer.app.main
2025-08-17T15:17:57.2663659Z 
2025-08-17T15:17:57.2663785Z <a id="repricer.app"></a>
2025-08-17T15:17:57.2664019Z 
2025-08-17T15:17:57.2664132Z # repricer.app
2025-08-17T15:17:57.2664300Z 
2025-08-17T15:17:57.2664452Z <a id="repricer.tests.test_imports"></a>
2025-08-17T15:17:57.2664756Z 
2025-08-17T15:17:57.2664894Z # repricer.tests.test\_imports
2025-08-17T15:17:57.2665135Z 
2025-08-17T15:17:57.2665290Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T15:17:57.2665569Z 
2025-08-17T15:17:57.2665703Z # repricer.tests.test\_smoke
2025-08-17T15:17:57.2665942Z 
2025-08-17T15:17:57.2666077Z <a id="repricer.tests"></a>
2025-08-17T15:17:57.2666299Z 
2025-08-17T15:17:57.2666414Z # repricer.tests
2025-08-17T15:17:57.2666602Z 
2025-08-17T15:17:57.2666718Z <a id="db"></a>
2025-08-17T15:17:57.2666890Z 
2025-08-17T15:17:57.2666990Z # db
2025-08-17T15:17:57.2667135Z 
2025-08-17T15:17:57.2667279Z <a id="db.utils.views"></a>
2025-08-17T15:17:57.2667518Z 
2025-08-17T15:17:57.2667651Z # db.utils.views
2025-08-17T15:17:57.2667845Z 
2025-08-17T15:17:57.2668003Z <a id="db.utils.views.replace_view"></a>
2025-08-17T15:17:57.2668330Z 
2025-08-17T15:17:57.2668445Z #### replace\_view
2025-08-17T15:17:57.2668633Z 
2025-08-17T15:17:57.2668738Z ```python
2025-08-17T15:17:57.2669070Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T15:17:57.2669501Z ```
2025-08-17T15:17:57.2669640Z 
2025-08-17T15:17:57.2669793Z Drop and recreate a SQL view atomically.
2025-08-17T15:17:57.2670080Z 
2025-08-17T15:17:57.2670388Z <a id="db.utils"></a>
2025-08-17T15:17:57.2670585Z 
2025-08-17T15:17:57.2670688Z # db.utils
2025-08-17T15:17:57.2670845Z 
2025-08-17T15:17:57.2670977Z <a id="price_importer"></a>
2025-08-17T15:17:57.2671203Z 
2025-08-17T15:17:57.2671333Z # price\_importer
2025-08-17T15:17:57.2671446Z 
2025-08-17T15:17:57.2671558Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T15:17:57.2671919Z 
2025-08-17T15:17:57.2672021Z # price\_importer.services\_common.dsn
2025-08-17T15:17:57.2672185Z 
2025-08-17T15:17:57.2672311Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T15:17:57.2672525Z 
2025-08-17T15:17:57.2672588Z #### build\_dsn
2025-08-17T15:17:57.2672686Z 
2025-08-17T15:17:57.2672748Z ```python
2025-08-17T15:17:57.2672922Z def build_dsn(sync: bool = True) -> str
2025-08-17T15:17:57.2673146Z ```
2025-08-17T15:17:57.2673226Z 
2025-08-17T15:17:57.2673291Z Return safe DSN.
2025-08-17T15:17:57.2673394Z 
2025-08-17T15:17:57.2673740Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T15:17:57.2673941Z 
2025-08-17T15:17:57.2674067Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T15:17:57.2674279Z 
2025-08-17T15:17:57.2674388Z # price\_importer.services\_common.models\_vendor
2025-08-17T15:17:57.2674576Z 
2025-08-17T15:17:57.2674683Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T15:17:57.2674867Z 
2025-08-17T15:17:57.2674969Z # price\_importer.services\_common.db\_url
2025-08-17T15:17:57.2675154Z 
2025-08-17T15:17:57.2675284Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T15:17:57.2675498Z 
2025-08-17T15:17:57.2675560Z #### build\_url
2025-08-17T15:17:57.2675661Z 
2025-08-17T15:17:57.2675759Z ```python
2025-08-17T15:17:57.2675927Z def build_url(async_: bool = True) -> str
2025-08-17T15:17:57.2676150Z ```
2025-08-17T15:17:57.2676230Z 
2025-08-17T15:17:57.2676324Z Return Postgres DSN from env or PG_* parts.
2025-08-17T15:17:57.2676511Z 
2025-08-17T15:17:57.2676613Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T15:17:57.2676798Z 
2025-08-17T15:17:57.2676888Z # price\_importer.services\_common.keepa
2025-08-17T15:17:57.2677060Z 
2025-08-17T15:17:57.2677159Z <a id="price_importer.services_common.llm"></a>
2025-08-17T15:17:57.2677337Z 
2025-08-17T15:17:57.2677431Z # price\_importer.services\_common.llm
2025-08-17T15:17:57.2677592Z 
2025-08-17T15:17:57.2677702Z <a id="price_importer.services_common.settings"></a>
2025-08-17T15:17:57.2678028Z 
2025-08-17T15:17:57.2678123Z # price\_importer.services\_common.settings
2025-08-17T15:17:57.2678294Z 
2025-08-17T15:17:57.2678391Z <a id="price_importer.services_common.db"></a>
2025-08-17T15:17:57.2678574Z 
2025-08-17T15:17:57.2678661Z # price\_importer.services\_common.db
2025-08-17T15:17:57.2678819Z 
2025-08-17T15:17:57.2678975Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T15:17:57.2679213Z 
2025-08-17T15:17:57.2679289Z #### build\_sqlalchemy\_url
2025-08-17T15:17:57.2679422Z 
2025-08-17T15:17:57.2679482Z ```python
2025-08-17T15:17:57.2679647Z def build_sqlalchemy_url() -> str
2025-08-17T15:17:57.2679852Z ```
2025-08-17T15:17:57.2679931Z 
2025-08-17T15:17:57.2680027Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T15:17:57.2680416Z 
2025-08-17T15:17:57.2680566Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T15:17:57.2680796Z 
2025-08-17T15:17:57.2680874Z #### build\_asyncpg\_dsn
2025-08-17T15:17:57.2681001Z 
2025-08-17T15:17:57.2681070Z ```python
2025-08-17T15:17:57.2681238Z def build_asyncpg_dsn() -> str
2025-08-17T15:17:57.2681429Z ```
2025-08-17T15:17:57.2681512Z 
2025-08-17T15:17:57.2681637Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T15:17:57.2681843Z 
2025-08-17T15:17:57.2681972Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T15:17:57.2682178Z 
2025-08-17T15:17:57.2682242Z #### refresh\_mvs
2025-08-17T15:17:57.2682351Z 
2025-08-17T15:17:57.2682411Z ```python
2025-08-17T15:17:57.2682598Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T15:17:57.2682845Z ```
2025-08-17T15:17:57.2682924Z 
2025-08-17T15:17:57.2683055Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T15:17:57.2683272Z 
2025-08-17T15:17:57.2683364Z <a id="price_importer.services_common"></a>
2025-08-17T15:17:57.2683531Z 
2025-08-17T15:17:57.2683622Z # price\_importer.services\_common
2025-08-17T15:17:57.2683782Z 
2025-08-17T15:17:57.2684014Z <a id="price_importer.services_common.base"></a>
2025-08-17T15:17:57.2684215Z 
2025-08-17T15:17:57.2684302Z # price\_importer.services\_common.base
2025-08-17T15:17:57.2684463Z 
2025-08-17T15:17:57.2684553Z <a id="price_importer.normaliser"></a>
2025-08-17T15:17:57.2684724Z 
2025-08-17T15:17:57.2684818Z # price\_importer.normaliser
2025-08-17T15:17:57.2684957Z 
2025-08-17T15:17:57.2685064Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T15:17:57.2685244Z 
2025-08-17T15:17:57.2685332Z # price\_importer.common.models\_vendor
2025-08-17T15:17:57.2685499Z 
2025-08-17T15:17:57.2685587Z <a id="price_importer.common.db_url"></a>
2025-08-17T15:17:57.2685754Z 
2025-08-17T15:17:57.2685835Z # price\_importer.common.db\_url
2025-08-17T15:17:57.2685986Z 
2025-08-17T15:17:57.2686090Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T15:17:57.2686276Z 
2025-08-17T15:17:57.2686344Z #### make\_dsn
2025-08-17T15:17:57.2686441Z 
2025-08-17T15:17:57.2686502Z ```python
2025-08-17T15:17:57.2686678Z def make_dsn(async_: bool = False) -> str
2025-08-17T15:17:57.2686907Z ```
2025-08-17T15:17:57.2686993Z 
2025-08-17T15:17:57.2687109Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T15:17:57.2687306Z 
2025-08-17T15:17:57.2687420Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T15:17:57.2687606Z 
2025-08-17T15:17:57.2687670Z #### build\_url
2025-08-17T15:17:57.2687766Z 
2025-08-17T15:17:57.2687836Z ```python
2025-08-17T15:17:57.2688006Z def build_url(async_: bool = False) -> str
2025-08-17T15:17:57.2688232Z ```
2025-08-17T15:17:57.2688309Z 
2025-08-17T15:17:57.2688428Z Return Postgres DSN built from environment variables.
2025-08-17T15:17:57.2688630Z 
2025-08-17T15:17:57.2688714Z <a id="price_importer.common"></a>
2025-08-17T15:17:57.2688866Z 
2025-08-17T15:17:57.2688947Z # price\_importer.common
2025-08-17T15:17:57.2689073Z 
2025-08-17T15:17:57.2689164Z <a id="price_importer.common.base"></a>
2025-08-17T15:17:57.2689330Z 
2025-08-17T15:17:57.2689411Z # price\_importer.common.base
2025-08-17T15:17:57.2689557Z 
2025-08-17T15:17:57.2689822Z <a id="price_importer.tests.conftest"></a>
2025-08-17T15:17:57.2690000Z 
2025-08-17T15:17:57.2690084Z # price\_importer.tests.conftest
2025-08-17T15:17:57.2690471Z 
2025-08-17T15:17:57.2690584Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T15:17:57.2690763Z 
2025-08-17T15:17:57.2690849Z # price\_importer.tests.test\_reader
2025-08-17T15:17:57.2691011Z 
2025-08-17T15:17:57.2691110Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T15:17:57.2691298Z 
2025-08-17T15:17:57.2691384Z # price\_importer.tests.test\_imports
2025-08-17T15:17:57.2691546Z 
2025-08-17T15:17:57.2691640Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T15:17:57.2691809Z 
2025-08-17T15:17:57.2691899Z # price\_importer.tests.test\_smoke
2025-08-17T15:17:57.2692051Z 
2025-08-17T15:17:57.2692156Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T15:17:57.2692345Z 
2025-08-17T15:17:57.2692433Z # price\_importer.tests.test\_normaliser
2025-08-17T15:17:57.2692601Z 
2025-08-17T15:17:57.2692688Z <a id="price_importer.tests"></a>
2025-08-17T15:17:57.2692841Z 
2025-08-17T15:17:57.2692914Z # price\_importer.tests
2025-08-17T15:17:57.2693036Z 
2025-08-17T15:17:57.2693124Z <a id="price_importer.reader"></a>
2025-08-17T15:17:57.2693274Z 
2025-08-17T15:17:57.2693348Z # price\_importer.reader
2025-08-17T15:17:57.2693477Z 
2025-08-17T15:17:57.2693565Z <a id="price_importer.repository"></a>
2025-08-17T15:17:57.2693725Z 
2025-08-17T15:17:57.2693805Z # price\_importer.repository
2025-08-17T15:17:57.2693944Z 
2025-08-17T15:17:57.2694025Z <a id="price_importer.import"></a>
2025-08-17T15:17:57.2694172Z 
2025-08-17T15:17:57.2694250Z # price\_importer.import
2025-08-17T15:17:57.2694372Z 
2025-08-17T15:17:57.2694441Z <a id="fees_h10"></a>
2025-08-17T15:17:57.2694558Z 
2025-08-17T15:17:57.2694619Z # fees\_h10
2025-08-17T15:17:57.2694708Z 
2025-08-17T15:17:57.2694782Z <a id="fees_h10.worker"></a>
2025-08-17T15:17:57.2694914Z 
2025-08-17T15:17:57.2694976Z # fees\_h10.worker
2025-08-17T15:17:57.2695222Z 
2025-08-17T15:17:57.2695329Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T15:17:57.2695503Z 
2025-08-17T15:17:57.2695572Z #### list\_active\_asins
2025-08-17T15:17:57.2695686Z 
2025-08-17T15:17:57.2695753Z ```python
2025-08-17T15:17:57.2695915Z def list_active_asins() -> list[str]
2025-08-17T15:17:57.2696129Z ```
2025-08-17T15:17:57.2696208Z 
2025-08-17T15:17:57.2696318Z Return known ASINs or an empty list if unavailable.
2025-08-17T15:17:57.2696514Z 
2025-08-17T15:17:57.2696594Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T15:17:57.2696750Z 
2025-08-17T15:17:57.2696834Z # fees\_h10.tests.test\_smoke
2025-08-17T15:17:57.2696968Z 
2025-08-17T15:17:57.2697041Z <a id="fees_h10.tests"></a>
2025-08-17T15:17:57.2697175Z 
2025-08-17T15:17:57.2697238Z # fees\_h10.tests
2025-08-17T15:17:57.2697339Z 
2025-08-17T15:17:57.2697411Z <a id="fees_h10.client"></a>
2025-08-17T15:17:57.2697543Z 
2025-08-17T15:17:57.2697606Z # fees\_h10.client
2025-08-17T15:17:57.2697706Z 
2025-08-17T15:17:57.2697795Z <a id="fees_h10.repository"></a>
2025-08-17T15:17:57.2697940Z 
2025-08-17T15:17:57.2698008Z # fees\_h10.repository
2025-08-17T15:17:57.2698122Z 
2025-08-17T15:17:57.2698195Z <a id="emailer"></a>
2025-08-17T15:17:57.2698304Z 
2025-08-17T15:17:57.2698366Z # emailer
2025-08-17T15:17:57.2698458Z 
2025-08-17T15:17:57.2698555Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T15:17:57.2698729Z 
2025-08-17T15:17:57.2698820Z # emailer.tests.test\_import\_emailer
2025-08-17T15:17:57.2698977Z 
2025-08-17T15:17:57.2699063Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T15:17:57.2699214Z 
2025-08-17T15:17:57.2699297Z # emailer.tests.test\_smoke
2025-08-17T15:17:57.2699427Z 
2025-08-17T15:17:57.2699501Z <a id="emailer.tests"></a>
2025-08-17T15:17:57.2699632Z 
2025-08-17T15:17:57.2699695Z # emailer.tests
2025-08-17T15:17:57.2699795Z 
2025-08-17T15:17:57.2699876Z <a id="emailer.generate_body"></a>
2025-08-17T15:17:57.2700028Z 
2025-08-17T15:17:57.2700255Z # emailer.generate\_body
2025-08-17T15:17:57.2700418Z 
2025-08-17T15:17:57.2700497Z <a id="llm_server"></a>
2025-08-17T15:17:57.2700737Z 
2025-08-17T15:17:57.2700801Z # llm\_server
2025-08-17T15:17:57.2700900Z 
2025-08-17T15:17:57.2700975Z <a id="llm_server.app"></a>
2025-08-17T15:17:57.2701101Z 
2025-08-17T15:17:57.2701165Z # llm\_server.app
2025-08-17T15:17:57.2701277Z 
