2025-08-19T14:03:09.8511317Z ##[group]Run pydoc-markdown
2025-08-19T14:03:09.8511619Z [36;1mpydoc-markdown[0m
2025-08-19T14:03:09.8551089Z shell: /usr/bin/bash -e {0}
2025-08-19T14:03:09.8551321Z env:
2025-08-19T14:03:09.8551560Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:03:09.8551960Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T14:03:09.8552340Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:03:09.8552668Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:03:09.8553015Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:03:09.8553351Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T14:03:09.8553638Z ##[endgroup]
2025-08-19T14:03:10.2263946Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T14:03:10.2264967Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T14:03:10.2265523Z In "pydoc-markdown.yml"
2025-08-19T14:03:10.2266022Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T14:03:10.2266835Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T14:03:10.2267708Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T14:03:10.2268110Z 
2025-08-19T14:03:10.5691782Z <a id="__init__"></a>
2025-08-19T14:03:10.5692193Z 
2025-08-19T14:03:10.5692318Z # \_\_init\_\_
2025-08-19T14:03:10.5692527Z 
2025-08-19T14:03:10.5692655Z <a id="api"></a>
2025-08-19T14:03:10.5692855Z 
2025-08-19T14:03:10.5692970Z # api
2025-08-19T14:03:10.5693144Z 
2025-08-19T14:03:10.5693284Z <a id="api.errors"></a>
2025-08-19T14:03:10.5693522Z 
2025-08-19T14:03:10.5693654Z # api.errors
2025-08-19T14:03:10.5693836Z 
2025-08-19T14:03:10.5693990Z <a id="api.sentry_config"></a>
2025-08-19T14:03:10.5694259Z 
2025-08-19T14:03:10.5694405Z # api.sentry\_config
2025-08-19T14:03:10.5694837Z 
2025-08-19T14:03:10.5695039Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T14:03:10.5695390Z 
2025-08-19T14:03:10.5695545Z # api.tests.test\_stats\_contracts
2025-08-19T14:03:10.5695894Z 
2025-08-19T14:03:10.5696068Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T14:03:10.5696388Z 
2025-08-19T14:03:10.5696538Z # api.tests.test\_sentry\_scrub
2025-08-19T14:03:10.5696807Z 
2025-08-19T14:03:10.5696995Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T14:03:10.5697330Z 
2025-08-19T14:03:10.5697485Z # api.tests.test\_roi\_basic\_auth
2025-08-19T14:03:10.5697781Z 
2025-08-19T14:03:10.5697946Z <a id="api.tests.test_errors_json"></a>
2025-08-19T14:03:10.5698255Z 
2025-08-19T14:03:10.5698405Z # api.tests.test\_errors\_json
2025-08-19T14:03:10.5698659Z 
2025-08-19T14:03:10.5698800Z <a id="api.tests.test_llm"></a>
2025-08-19T14:03:10.5699060Z 
2025-08-19T14:03:10.5699199Z # api.tests.test\_llm
2025-08-19T14:03:10.5699420Z 
2025-08-19T14:03:10.5699580Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T14:03:10.5699899Z 
2025-08-19T14:03:10.5700042Z # api.tests.test\_roi\_filters
2025-08-19T14:03:10.5700302Z 
2025-08-19T14:03:10.5700477Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T14:03:10.5701249Z 
2025-08-19T14:03:10.5701413Z # api.tests.test\_sentry\_event
2025-08-19T14:03:10.5701689Z 
2025-08-19T14:03:10.5701928Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T14:03:10.5702324Z 
2025-08-19T14:03:10.5702470Z ## DummyTransport Objects
2025-08-19T14:03:10.5702723Z 
2025-08-19T14:03:10.5702839Z ```python
2025-08-19T14:03:10.5703149Z class DummyTransport()
2025-08-19T14:03:10.5703490Z ```
2025-08-19T14:03:10.5703643Z 
2025-08-19T14:03:10.5703976Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T14:03:10.5704474Z 
2025-08-19T14:03:10.5704813Z #### capture\_envelope
2025-08-19T14:03:10.5705058Z 
2025-08-19T14:03:10.5705178Z ```python
2025-08-19T14:03:10.5705502Z def capture_envelope(envelope)
2025-08-19T14:03:10.5705887Z ```
2025-08-19T14:03:10.5706045Z 
2025-08-19T14:03:10.5706283Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T14:03:10.5706686Z 
2025-08-19T14:03:10.5706844Z <a id="api.tests.test_cors"></a>
2025-08-19T14:03:10.5707484Z 
2025-08-19T14:03:10.5707633Z # api.tests.test\_cors
2025-08-19T14:03:10.5707860Z 
2025-08-19T14:03:10.5708009Z <a id="api.tests.test_imports"></a>
2025-08-19T14:03:10.5708311Z 
2025-08-19T14:03:10.5708454Z # api.tests.test\_imports
2025-08-19T14:03:10.5708693Z 
2025-08-19T14:03:10.5708853Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T14:03:10.5709163Z 
2025-08-19T14:03:10.5709312Z # api.tests.test\_rate\_limit
2025-08-19T14:03:10.5709576Z 
2025-08-19T14:03:10.5709761Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T14:03:10.5710086Z 
2025-08-19T14:03:10.5710201Z #### app
2025-08-19T14:03:10.5710381Z 
2025-08-19T14:03:10.5710495Z noqa: E402
2025-08-19T14:03:10.5710664Z 
2025-08-19T14:03:10.5710824Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T14:03:10.5711144Z 
2025-08-19T14:03:10.5711297Z # api.tests.test\_entrypoint
2025-08-19T14:03:10.5711569Z 
2025-08-19T14:03:10.5711739Z <a id="api.tests.test_health"></a>
2025-08-19T14:03:10.5712047Z 
2025-08-19T14:03:10.5712197Z # api.tests.test\_health
2025-08-19T14:03:10.5712436Z 
2025-08-19T14:03:10.5712593Z <a id="api.tests.test_score"></a>
2025-08-19T14:03:10.5712872Z 
2025-08-19T14:03:10.5713009Z # api.tests.test\_score
2025-08-19T14:03:10.5713246Z 
2025-08-19T14:03:10.5713399Z <a id="api.logging_config"></a>
2025-08-19T14:03:10.5713665Z 
2025-08-19T14:03:10.5713805Z # api.logging\_config
2025-08-19T14:03:10.5714024Z 
2025-08-19T14:03:10.5714170Z <a id="api.migrations.env"></a>
2025-08-19T14:03:10.5714434Z 
2025-08-19T14:03:10.5714752Z # api.migrations.env
2025-08-19T14:03:10.5714985Z 
2025-08-19T14:03:10.5715221Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T14:03:10.5715612Z 
2025-08-19T14:03:10.5715811Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T14:03:10.5716153Z 
2025-08-19T14:03:10.5716367Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T14:03:10.5716724Z 
2025-08-19T14:03:10.5716897Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T14:03:10.5717240Z 
2025-08-19T14:03:10.5717538Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T14:03:10.5717981Z 
2025-08-19T14:03:10.5718238Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T14:03:10.5718658Z 
2025-08-19T14:03:10.5718886Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T14:03:10.5719265Z 
2025-08-19T14:03:10.5719473Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T14:03:10.5719818Z 
2025-08-19T14:03:10.5720040Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T14:03:10.5720430Z 
2025-08-19T14:03:10.5720641Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T14:03:10.5720990Z 
2025-08-19T14:03:10.5721234Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T14:03:10.5721655Z 
2025-08-19T14:03:10.5721927Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T14:03:10.5722295Z 
2025-08-19T14:03:10.5722524Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T14:03:10.5723245Z 
2025-08-19T14:03:10.5723472Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T14:03:10.5723880Z 
2025-08-19T14:03:10.5724115Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T14:03:10.5724498Z 
2025-08-19T14:03:10.5724878Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T14:03:10.5725245Z 
2025-08-19T14:03:10.5725508Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T14:03:10.5725933Z 
2025-08-19T14:03:10.5726157Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T14:03:10.5726533Z 
2025-08-19T14:03:10.5726859Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T14:03:10.5727249Z 
2025-08-19T14:03:10.5727460Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T14:03:10.5727840Z 
2025-08-19T14:03:10.5728103Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T14:03:10.5728518Z 
2025-08-19T14:03:10.5728735Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T14:03:10.5729391Z 
2025-08-19T14:03:10.5729609Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T14:03:10.5729984Z 
2025-08-19T14:03:10.5730165Z # api.migrations.versions.0001\_baseline
2025-08-19T14:03:10.5730484Z 
2025-08-19T14:03:10.5730648Z <a id="api.migrations.versions"></a>
2025-08-19T14:03:10.5730957Z 
2025-08-19T14:03:10.5731110Z # api.migrations.versions
2025-08-19T14:03:10.5731357Z 
2025-08-19T14:03:10.5731500Z <a id="api.migrations"></a>
2025-08-19T14:03:10.5731761Z 
2025-08-19T14:03:10.5731885Z # api.migrations
2025-08-19T14:03:10.5732213Z 
2025-08-19T14:03:10.5732348Z <a id="api.db"></a>
2025-08-19T14:03:10.5732554Z 
2025-08-19T14:03:10.5732668Z # api.db
2025-08-19T14:03:10.5732839Z 
2025-08-19T14:03:10.5732988Z <a id="api.routes.score"></a>
2025-08-19T14:03:10.5733259Z 
2025-08-19T14:03:10.5733395Z # api.routes.score
2025-08-19T14:03:10.5733615Z 
2025-08-19T14:03:10.5733762Z <a id="api.routes.stats"></a>
2025-08-19T14:03:10.5734026Z 
2025-08-19T14:03:10.5734166Z # api.routes.stats
2025-08-19T14:03:10.5734381Z 
2025-08-19T14:03:10.5734521Z <a id="api.routes.roi"></a>
2025-08-19T14:03:10.5734957Z 
2025-08-19T14:03:10.5735085Z # api.routes.roi
2025-08-19T14:03:10.5735285Z 
2025-08-19T14:03:10.5735436Z <a id="api.routes.health"></a>
2025-08-19T14:03:10.5735708Z 
2025-08-19T14:03:10.5735838Z # api.routes.health
2025-08-19T14:03:10.5736047Z 
2025-08-19T14:03:10.5736216Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T14:03:10.5736535Z 
2025-08-19T14:03:10.5736651Z #### MAX\_SKEW
2025-08-19T14:03:10.5736836Z 
2025-08-19T14:03:10.5736954Z seconds
2025-08-19T14:03:10.5737110Z 
2025-08-19T14:03:10.5737273Z <a id="api.routes.health.health"></a>
2025-08-19T14:03:10.5737584Z 
2025-08-19T14:03:10.5737698Z #### health
2025-08-19T14:03:10.5737861Z 
2025-08-19T14:03:10.5737974Z ```python
2025-08-19T14:03:10.5738349Z @router.get("/health", include_in_schema=False)
2025-08-19T14:03:10.5739102Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T14:03:10.5739731Z ```
2025-08-19T14:03:10.5739899Z 
2025-08-19T14:03:10.5740122Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T14:03:10.5740493Z 
2025-08-19T14:03:10.5740654Z <a id="api.routes.repository"></a>
2025-08-19T14:03:10.5740954Z 
2025-08-19T14:03:10.5741098Z # api.routes.repository
2025-08-19T14:03:10.5741335Z 
2025-08-19T14:03:10.5741480Z <a id="api.routes"></a>
2025-08-19T14:03:10.5741702Z 
2025-08-19T14:03:10.5741819Z # api.routes
2025-08-19T14:03:10.5742000Z 
2025-08-19T14:03:10.5742150Z <a id="api.models.fee"></a>
2025-08-19T14:03:10.5742405Z 
2025-08-19T14:03:10.5742534Z # api.models.fee
2025-08-19T14:03:10.5742744Z 
2025-08-19T14:03:10.5742887Z <a id="api.models"></a>
2025-08-19T14:03:10.5743123Z 
2025-08-19T14:03:10.5743245Z # api.models
2025-08-19T14:03:10.5743434Z 
2025-08-19T14:03:10.5743584Z <a id="api.roi_repository"></a>
2025-08-19T14:03:10.5743853Z 
2025-08-19T14:03:10.5743998Z # api.roi\_repository
2025-08-19T14:03:10.5744215Z 
2025-08-19T14:03:10.5744347Z <a id="api.main"></a>
2025-08-19T14:03:10.5745035Z 
2025-08-19T14:03:10.5745163Z # api.main
2025-08-19T14:03:10.5745336Z 
2025-08-19T14:03:10.5745486Z <a id="api.main.ready"></a>
2025-08-19T14:03:10.5745749Z 
2025-08-19T14:03:10.5745863Z #### ready
2025-08-19T14:03:10.5746029Z 
2025-08-19T14:03:10.5746151Z ```python
2025-08-19T14:03:10.5746635Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T14:03:10.5747428Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T14:03:10.5748051Z                                                                       str]
2025-08-19T14:03:10.5748491Z ```
2025-08-19T14:03:10.5748642Z 
2025-08-19T14:03:10.5748825Z Return 200 only when migrations are at head.
2025-08-19T14:03:10.5749168Z 
2025-08-19T14:03:10.5749307Z <a id="api.config"></a>
2025-08-19T14:03:10.5749534Z 
2025-08-19T14:03:10.5749669Z # api.config
2025-08-19T14:03:10.5749853Z 
2025-08-19T14:03:10.5750003Z <a id="api.security"></a>
2025-08-19T14:03:10.5750267Z 
2025-08-19T14:03:10.5750617Z # api.security
2025-08-19T14:03:10.5750813Z 
2025-08-19T14:03:10.5750935Z <a id="etl"></a>
2025-08-19T14:03:10.5751139Z 
2025-08-19T14:03:10.5751250Z # etl
2025-08-19T14:03:10.5751410Z 
2025-08-19T14:03:10.5751566Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T14:03:10.5751852Z 
2025-08-19T14:03:10.5751991Z # etl.fba\_fee\_ingestor
2025-08-19T14:03:10.5752222Z 
2025-08-19T14:03:10.5752380Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T14:03:10.5752659Z 
2025-08-19T14:03:10.5752796Z # etl.sp\_fees\_ingestor
2025-08-19T14:03:10.5753037Z 
2025-08-19T14:03:10.5753185Z <a id="etl.keepa_ingestor"></a>
2025-08-19T14:03:10.5753446Z 
2025-08-19T14:03:10.5753589Z # etl.keepa\_ingestor
2025-08-19T14:03:10.5753804Z 
2025-08-19T14:03:10.5753924Z <a id="etl.db"></a>
2025-08-19T14:03:10.5754132Z 
2025-08-19T14:03:10.5754243Z # etl.db
2025-08-19T14:03:10.5754403Z 
2025-08-19T14:03:10.5754558Z <a id="etl.dialects.schemas"></a>
2025-08-19T14:03:10.5755314Z 
2025-08-19T14:03:10.5755452Z # etl.dialects.schemas
2025-08-19T14:03:10.5755690Z 
2025-08-19T14:03:10.5755891Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T14:03:10.5756240Z 
2025-08-19T14:03:10.5756406Z # etl.dialects.amazon\_reimbursements
2025-08-19T14:03:10.5756706Z 
2025-08-19T14:03:10.5756894Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T14:03:10.5757216Z 
2025-08-19T14:03:10.5757373Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T14:03:10.5757677Z 
2025-08-19T14:03:10.5757835Z <a id="etl.dialects.test_generic"></a>
2025-08-19T14:03:10.5758141Z 
2025-08-19T14:03:10.5758293Z # etl.dialects.test\_generic
2025-08-19T14:03:10.5758548Z 
2025-08-19T14:03:10.5758717Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T14:03:10.5759033Z 
2025-08-19T14:03:10.5759188Z # etl.dialects.amazon\_returns
2025-08-19T14:03:10.5759448Z 
2025-08-19T14:03:10.5759623Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T14:03:10.5759951Z 
2025-08-19T14:03:10.5760106Z # etl.dialects.amazon\_fee\_preview
2025-08-19T14:03:10.5760400Z 
2025-08-19T14:03:10.5760614Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T14:03:10.5760976Z 
2025-08-19T14:03:10.5761141Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T14:03:10.5761455Z 
2025-08-19T14:03:10.5761643Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T14:03:10.5761971Z 
2025-08-19T14:03:10.5762130Z # etl.dialects.amazon\_settlements
2025-08-19T14:03:10.5762425Z 
2025-08-19T14:03:10.5762569Z <a id="etl.dialects"></a>
2025-08-19T14:03:10.5762815Z 
2025-08-19T14:03:10.5762946Z # etl.dialects
2025-08-19T14:03:10.5763135Z 
2025-08-19T14:03:10.5763261Z <a id="ingest"></a>
2025-08-19T14:03:10.5763467Z 
2025-08-19T14:03:10.5763585Z # ingest
2025-08-19T14:03:10.5763746Z 
2025-08-19T14:03:10.5763896Z <a id="ingest.maintenance"></a>
2025-08-19T14:03:10.5764174Z 
2025-08-19T14:03:10.5764312Z # ingest.maintenance
2025-08-19T14:03:10.5764527Z 
2025-08-19T14:03:10.5764862Z <a id="ingest.copy_loader"></a>
2025-08-19T14:03:10.5765145Z 
2025-08-19T14:03:10.5765277Z # ingest.copy\_loader
2025-08-19T14:03:10.5765505Z 
2025-08-19T14:03:10.5765923Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T14:03:10.5766273Z 
2025-08-19T14:03:10.5766409Z #### copy\_df\_via\_temp
2025-08-19T14:03:10.5766649Z 
2025-08-19T14:03:10.5766769Z ```python
2025-08-19T14:03:10.5767084Z def copy_df_via_temp(engine: Engine,
2025-08-19T14:03:10.5767532Z                      df: pd.DataFrame,
2025-08-19T14:03:10.5767970Z                      target_table: str,
2025-08-19T14:03:10.5768373Z                      *,
2025-08-19T14:03:10.5768757Z                      target_schema: Optional[str] = None,
2025-08-19T14:03:10.5769238Z                      columns: Sequence[str],
2025-08-19T14:03:10.5769753Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T14:03:10.5770268Z                      analyze_after: bool = False,
2025-08-19T14:03:10.5770766Z                      connection: Any | None = None) -> int
2025-08-19T14:03:10.5771200Z ```
2025-08-19T14:03:10.5771367Z 
2025-08-19T14:03:10.5771653Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T14:03:10.5772442Z 
2025-08-19T14:03:10.5772620Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T14:03:10.5772930Z 
2025-08-19T14:03:10.5773081Z # ingest.tests.test\_smoke
2025-08-19T14:03:10.5773343Z 
2025-08-19T14:03:10.5773488Z <a id="ingest.tests"></a>
2025-08-19T14:03:10.5773738Z 
2025-08-19T14:03:10.5773864Z # ingest.tests
2025-08-19T14:03:10.5774066Z 
2025-08-19T14:03:10.5774222Z <a id="ingest.upload_router"></a>
2025-08-19T14:03:10.5774501Z 
2025-08-19T14:03:10.5774824Z # ingest.upload\_router
2025-08-19T14:03:10.5775067Z 
2025-08-19T14:03:10.5775220Z <a id="ingest.email_watcher"></a>
2025-08-19T14:03:10.5775504Z 
2025-08-19T14:03:10.5775639Z # ingest.email\_watcher
2025-08-19T14:03:10.5775864Z 
2025-08-19T14:03:10.5776031Z <a id="ingest.email_watcher.main"></a>
2025-08-19T14:03:10.5776346Z 
2025-08-19T14:03:10.5776464Z #### main
2025-08-19T14:03:10.5776631Z 
2025-08-19T14:03:10.5776754Z ```python
2025-08-19T14:03:10.5777062Z def main() -> dict[str, str]
2025-08-19T14:03:10.5777441Z ```
2025-08-19T14:03:10.5777595Z 
2025-08-19T14:03:10.5777862Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T14:03:10.5778280Z 
2025-08-19T14:03:10.5778522Z Returns {"status": "success"} when processing completes.
2025-08-19T14:03:10.5778914Z 
2025-08-19T14:03:10.5779056Z <a id="ingest.tasks"></a>
2025-08-19T14:03:10.5779307Z 
2025-08-19T14:03:10.5779428Z # ingest.tasks
2025-08-19T14:03:10.5779613Z 
2025-08-19T14:03:10.5779794Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T14:03:10.5780123Z 
2025-08-19T14:03:10.5780255Z #### task\_import\_file
2025-08-19T14:03:10.5780482Z 
2025-08-19T14:03:10.5780597Z ```python
2025-08-19T14:03:10.5780978Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T14:03:10.5781540Z def task_import_file(self: Any,
2025-08-19T14:03:10.5781940Z                      uri: str,
2025-08-19T14:03:10.5782353Z                      report_type: str | None = None,
2025-08-19T14:03:10.5782861Z                      force: bool = False) -> dict[str, Any]
2025-08-19T14:03:10.5783335Z ```
2025-08-19T14:03:10.5783498Z 
2025-08-19T14:03:10.5783750Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T14:03:10.5784155Z 
2025-08-19T14:03:10.5784310Z <a id="ingest.celery_app"></a>
2025-08-19T14:03:10.5784789Z 
2025-08-19T14:03:10.5784939Z # ingest.celery\_app
2025-08-19T14:03:10.5785174Z 
2025-08-19T14:03:10.5785325Z <a id="ingest.ingest_router"></a>
2025-08-19T14:03:10.5785608Z 
2025-08-19T14:03:10.5785753Z # ingest.ingest\_router
2025-08-19T14:03:10.5785980Z 
2025-08-19T14:03:10.5786121Z <a id="logistics_etl"></a>
2025-08-19T14:03:10.5786371Z 
2025-08-19T14:03:10.5786493Z # logistics\_etl
2025-08-19T14:03:10.5786685Z 
2025-08-19T14:03:10.5786826Z Daily logistics ETL job.
2025-08-19T14:03:10.5787072Z 
2025-08-19T14:03:10.5787220Z <a id="logistics_etl.__main__"></a>
2025-08-19T14:03:10.5787504Z 
2025-08-19T14:03:10.5787649Z # logistics\_etl.\_\_main\_\_
2025-08-19T14:03:10.5787903Z 
2025-08-19T14:03:10.5788552Z <a id="logistics_etl.dsn"></a>
2025-08-19T14:03:10.5788843Z 
2025-08-19T14:03:10.5788976Z # logistics\_etl.dsn
2025-08-19T14:03:10.5789190Z 
2025-08-19T14:03:10.5789408Z Local DSN builder to avoid cross-service dependency.
2025-08-19T14:03:10.5789798Z 
2025-08-19T14:03:10.5789966Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T14:03:10.5790283Z 
2025-08-19T14:03:10.5790407Z #### build\_dsn
2025-08-19T14:03:10.5790594Z 
2025-08-19T14:03:10.5790709Z ```python
2025-08-19T14:03:10.5791037Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:03:10.5791445Z ```
2025-08-19T14:03:10.5791606Z 
2025-08-19T14:03:10.5791871Z Return a Postgres DSN assembled from environment variables.
2025-08-19T14:03:10.5792297Z 
2025-08-19T14:03:10.5792591Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T14:03:10.5793364Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T14:03:10.5794014Z error when any required variable is missing.
2025-08-19T14:03:10.5794354Z 
2025-08-19T14:03:10.5794946Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T14:03:10.5795295Z 
2025-08-19T14:03:10.5795451Z # logistics\_etl.tests.conftest
2025-08-19T14:03:10.5795725Z 
2025-08-19T14:03:10.5795919Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T14:03:10.5796285Z 
2025-08-19T14:03:10.5796455Z # logistics\_etl.tests.test\_repository
2025-08-19T14:03:10.5796765Z 
2025-08-19T14:03:10.5796944Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T14:03:10.5797275Z 
2025-08-19T14:03:10.5797427Z # logistics\_etl.tests.test\_cron
2025-08-19T14:03:10.5797716Z 
2025-08-19T14:03:10.5797899Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T14:03:10.5798235Z 
2025-08-19T14:03:10.5798393Z # logistics\_etl.tests.test\_imports
2025-08-19T14:03:10.5798709Z 
2025-08-19T14:03:10.5798892Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T14:03:10.5799227Z 
2025-08-19T14:03:10.5799395Z # logistics\_etl.tests.test\_smoke
2025-08-19T14:03:10.5799684Z 
2025-08-19T14:03:10.5799864Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T14:03:10.5800219Z 
2025-08-19T14:03:10.5800375Z # logistics\_etl.tests.test\_client
2025-08-19T14:03:10.5800662Z 
2025-08-19T14:03:10.5800813Z <a id="logistics_etl.tests"></a>
2025-08-19T14:03:10.5801094Z 
2025-08-19T14:03:10.5801224Z # logistics\_etl.tests
2025-08-19T14:03:10.5801441Z 
2025-08-19T14:03:10.5801595Z <a id="logistics_etl.flow"></a>
2025-08-19T14:03:10.5801865Z 
2025-08-19T14:03:10.5801996Z # logistics\_etl.flow
2025-08-19T14:03:10.5802213Z 
2025-08-19T14:03:10.5802378Z <a id="logistics_etl.client"></a>
2025-08-19T14:03:10.5802657Z 
2025-08-19T14:03:10.5802793Z # logistics\_etl.client
2025-08-19T14:03:10.5803026Z 
2025-08-19T14:03:10.5803170Z <a id="logistics_etl.cron"></a>
2025-08-19T14:03:10.5803433Z 
2025-08-19T14:03:10.5803571Z # logistics\_etl.cron
2025-08-19T14:03:10.5803788Z 
2025-08-19T14:03:10.5803931Z <a id="logistics_etl.db"></a>
2025-08-19T14:03:10.5804191Z 
2025-08-19T14:03:10.5804326Z # logistics\_etl.db
2025-08-19T14:03:10.5804545Z 
2025-08-19T14:03:10.5804907Z <a id="logistics_etl.repository"></a>
2025-08-19T14:03:10.5805242Z 
2025-08-19T14:03:10.5835263Z # logistics\_etl.repository
2025-08-19T14:03:10.5835595Z 
2025-08-19T14:03:10.5835723Z <a id="alert_bot"></a>
2025-08-19T14:03:10.5835926Z 
2025-08-19T14:03:10.5836041Z # alert\_bot
2025-08-19T14:03:10.5836203Z 
2025-08-19T14:03:10.5836346Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T14:03:10.5836622Z 
2025-08-19T14:03:10.5836752Z # alert\_bot.tests.test\_smoke
2025-08-19T14:03:10.5837019Z 
2025-08-19T14:03:10.5837143Z <a id="alert_bot.tests"></a>
2025-08-19T14:03:10.5837362Z 
2025-08-19T14:03:10.5837465Z # alert\_bot.tests
2025-08-19T14:03:10.5837640Z 
2025-08-19T14:03:10.5837768Z <a id="alert_bot.alert_bot"></a>
2025-08-19T14:03:10.5837993Z 
2025-08-19T14:03:10.5838111Z # alert\_bot.alert\_bot
2025-08-19T14:03:10.5838297Z 
2025-08-19T14:03:10.5838414Z <a id="alert_bot.rules"></a>
2025-08-19T14:03:10.5838626Z 
2025-08-19T14:03:10.5838742Z # alert\_bot.rules
2025-08-19T14:03:10.5839161Z 
2025-08-19T14:03:10.5839276Z <a id="common"></a>
2025-08-19T14:03:10.5839451Z 
2025-08-19T14:03:10.5839545Z # common
2025-08-19T14:03:10.5839680Z 
2025-08-19T14:03:10.5839798Z <a id="common.dsn"></a>
2025-08-19T14:03:10.5839983Z 
2025-08-19T14:03:10.5840078Z # common.dsn
2025-08-19T14:03:10.5840218Z 
2025-08-19T14:03:10.5840352Z <a id="common.dsn.build_dsn"></a>
2025-08-19T14:03:10.5840594Z 
2025-08-19T14:03:10.5840694Z #### build\_dsn
2025-08-19T14:03:10.5840852Z 
2025-08-19T14:03:10.5840949Z ```python
2025-08-19T14:03:10.5841228Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:03:10.5841580Z ```
2025-08-19T14:03:10.5841704Z 
2025-08-19T14:03:10.5841896Z Return a Postgres DSN, validating required variables.
2025-08-19T14:03:10.5842223Z 
2025-08-19T14:03:10.5842534Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T14:03:10.5843228Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T14:03:10.5843871Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T14:03:10.5844546Z missing.
2025-08-19T14:03:10.5844876Z 
2025-08-19T14:03:10.5845024Z <a id="common.models_vendor"></a>
2025-08-19T14:03:10.5845276Z 
2025-08-19T14:03:10.5845393Z # common.models\_vendor
2025-08-19T14:03:10.5845585Z 
2025-08-19T14:03:10.5845725Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T14:03:10.5845987Z 
2025-08-19T14:03:10.5846088Z ## Vendor Objects
2025-08-19T14:03:10.5846256Z 
2025-08-19T14:03:10.5846350Z ```python
2025-08-19T14:03:10.5846592Z class Vendor(Base)
2025-08-19T14:03:10.5846861Z ```
2025-08-19T14:03:10.5846993Z 
2025-08-19T14:03:10.5847117Z Vendor of inventory items.
2025-08-19T14:03:10.5847316Z 
2025-08-19T14:03:10.5847471Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T14:03:10.5847755Z 
2025-08-19T14:03:10.5847872Z ## VendorPrice Objects
2025-08-19T14:03:10.5848051Z 
2025-08-19T14:03:10.5848156Z ```python
2025-08-19T14:03:10.5848418Z class VendorPrice(Base)
2025-08-19T14:03:10.5848697Z ```
2025-08-19T14:03:10.5848849Z 
2025-08-19T14:03:10.5849007Z Association table linking vendors to pricing.
2025-08-19T14:03:10.5849281Z 
2025-08-19T14:03:10.5849400Z <a id="common.db_url"></a>
2025-08-19T14:03:10.5849590Z 
2025-08-19T14:03:10.5849692Z # common.db\_url
2025-08-19T14:03:10.5849855Z 
2025-08-19T14:03:10.5849986Z <a id="common.db_url.build_url"></a>
2025-08-19T14:03:10.5850230Z 
2025-08-19T14:03:10.5850332Z #### build\_url
2025-08-19T14:03:10.5850492Z 
2025-08-19T14:03:10.5850583Z ```python
2025-08-19T14:03:10.5850843Z def build_url(async_: bool = True) -> str
2025-08-19T14:03:10.5851206Z ```
2025-08-19T14:03:10.5851327Z 
2025-08-19T14:03:10.5851484Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:03:10.5851754Z 
2025-08-19T14:03:10.5851870Z <a id="common.keepa"></a>
2025-08-19T14:03:10.5852072Z 
2025-08-19T14:03:10.5852180Z # common.keepa
2025-08-19T14:03:10.5852337Z 
2025-08-19T14:03:10.5852450Z <a id="common.llm"></a>
2025-08-19T14:03:10.5852645Z 
2025-08-19T14:03:10.5852743Z # common.llm
2025-08-19T14:03:10.5852896Z 
2025-08-19T14:03:10.5853018Z <a id="common.settings"></a>
2025-08-19T14:03:10.5853242Z 
2025-08-19T14:03:10.5853348Z # common.settings
2025-08-19T14:03:10.5853515Z 
2025-08-19T14:03:10.5853634Z <a id="common.db"></a>
2025-08-19T14:03:10.5853827Z 
2025-08-19T14:03:10.5853924Z # common.db
2025-08-19T14:03:10.5854061Z 
2025-08-19T14:03:10.5854198Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T14:03:10.5854453Z 
2025-08-19T14:03:10.5854729Z #### build\_sqlalchemy\_url
2025-08-19T14:03:10.5854938Z 
2025-08-19T14:03:10.5855032Z ```python
2025-08-19T14:03:10.5855329Z def build_sqlalchemy_url() -> str
2025-08-19T14:03:10.5855638Z ```
2025-08-19T14:03:10.5855772Z 
2025-08-19T14:03:10.5855914Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:03:10.5856171Z 
2025-08-19T14:03:10.5856301Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T14:03:10.5856557Z 
2025-08-19T14:03:10.5856669Z #### build\_asyncpg\_dsn
2025-08-19T14:03:10.5856854Z 
2025-08-19T14:03:10.5856958Z ```python
2025-08-19T14:03:10.5857375Z def build_asyncpg_dsn() -> str
2025-08-19T14:03:10.5857675Z ```
2025-08-19T14:03:10.5857797Z 
2025-08-19T14:03:10.5857998Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:03:10.5858322Z 
2025-08-19T14:03:10.5858448Z <a id="common.db.refresh_mvs"></a>
2025-08-19T14:03:10.5858679Z 
2025-08-19T14:03:10.5858780Z #### refresh\_mvs
2025-08-19T14:03:10.5858947Z 
2025-08-19T14:03:10.5859041Z ```python
2025-08-19T14:03:10.5859340Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:03:10.5859715Z ```
2025-08-19T14:03:10.5859833Z 
2025-08-19T14:03:10.5860057Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:03:10.5860400Z 
2025-08-19T14:03:10.5860521Z <a id="common.config"></a>
2025-08-19T14:03:10.5860738Z 
2025-08-19T14:03:10.5860843Z # common.config
2025-08-19T14:03:10.5861007Z 
2025-08-19T14:03:10.5861123Z <a id="common.base"></a>
2025-08-19T14:03:10.5861319Z 
2025-08-19T14:03:10.5861421Z # common.base
2025-08-19T14:03:10.5861756Z 
2025-08-19T14:03:10.5861895Z <a id="common.base.Base"></a>
2025-08-19T14:03:10.5862121Z 
2025-08-19T14:03:10.5862218Z ## Base Objects
2025-08-19T14:03:10.5862381Z 
2025-08-19T14:03:10.5862473Z ```python
2025-08-19T14:03:10.5862721Z class Base(DeclarativeBase)
2025-08-19T14:03:10.5863017Z ```
2025-08-19T14:03:10.5863140Z 
2025-08-19T14:03:10.5863269Z Base class for SQLAlchemy models.
2025-08-19T14:03:10.5863506Z 
2025-08-19T14:03:10.5863616Z <a id="repricer"></a>
2025-08-19T14:03:10.5863792Z 
2025-08-19T14:03:10.5863894Z # repricer
2025-08-19T14:03:10.5864033Z 
2025-08-19T14:03:10.5864161Z <a id="repricer.app.schemas"></a>
2025-08-19T14:03:10.5864391Z 
2025-08-19T14:03:10.5864510Z # repricer.app.schemas
2025-08-19T14:03:10.5864843Z 
2025-08-19T14:03:10.5864972Z <a id="repricer.app.deps"></a>
2025-08-19T14:03:10.5865194Z 
2025-08-19T14:03:10.5865311Z # repricer.app.deps
2025-08-19T14:03:10.5865480Z 
2025-08-19T14:03:10.5865666Z Placeholder module for Keepa / SP-API clients.
2025-08-19T14:03:10.5865963Z 
2025-08-19T14:03:10.5866108Z <a id="repricer.app.logic"></a>
2025-08-19T14:03:10.5866330Z 
2025-08-19T14:03:10.5866439Z # repricer.app.logic
2025-08-19T14:03:10.5866614Z 
2025-08-19T14:03:10.5866761Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T14:03:10.5867034Z 
2025-08-19T14:03:10.5867130Z #### MIN\_MARGIN
2025-08-19T14:03:10.5867285Z 
2025-08-19T14:03:10.5867381Z 15 % ROI
2025-08-19T14:03:10.5867518Z 
2025-08-19T14:03:10.5867672Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T14:03:10.5867949Z 
2025-08-19T14:03:10.5868054Z #### compute\_price
2025-08-19T14:03:10.5868217Z 
2025-08-19T14:03:10.5868313Z ```python
2025-08-19T14:03:10.5868686Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T14:03:10.5869138Z ```
2025-08-19T14:03:10.5869264Z 
2025-08-19T14:03:10.5869424Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T14:03:10.5869911Z Replace with real competitive logic later.
2025-08-19T14:03:10.5870171Z 
2025-08-19T14:03:10.5870296Z <a id="repricer.app.main"></a>
2025-08-19T14:03:10.5870538Z 
2025-08-19T14:03:10.5870649Z # repricer.app.main
2025-08-19T14:03:10.5870813Z 
2025-08-19T14:03:10.5870926Z <a id="repricer.app"></a>
2025-08-19T14:03:10.5871130Z 
2025-08-19T14:03:10.5871229Z # repricer.app
2025-08-19T14:03:10.5871379Z 
2025-08-19T14:03:10.5871525Z <a id="repricer.tests.test_imports"></a>
2025-08-19T14:03:10.5871776Z 
2025-08-19T14:03:10.5871900Z # repricer.tests.test\_imports
2025-08-19T14:03:10.5872120Z 
2025-08-19T14:03:10.5872253Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T14:03:10.5872510Z 
2025-08-19T14:03:10.5872636Z # repricer.tests.test\_smoke
2025-08-19T14:03:10.5872854Z 
2025-08-19T14:03:10.5872969Z <a id="repricer.tests"></a>
2025-08-19T14:03:10.5873172Z 
2025-08-19T14:03:10.5873283Z # repricer.tests
2025-08-19T14:03:10.5873448Z 
2025-08-19T14:03:10.5873547Z <a id="db"></a>
2025-08-19T14:03:10.5873704Z 
2025-08-19T14:03:10.5873795Z # db
2025-08-19T14:03:10.5873920Z 
2025-08-19T14:03:10.5874039Z <a id="db.utils.views"></a>
2025-08-19T14:03:10.5874428Z 
2025-08-19T14:03:10.5874532Z # db.utils.views
2025-08-19T14:03:10.5874901Z 
2025-08-19T14:03:10.5875060Z <a id="db.utils.views.replace_view"></a>
2025-08-19T14:03:10.5875327Z 
2025-08-19T14:03:10.5875433Z #### replace\_view
2025-08-19T14:03:10.5875597Z 
2025-08-19T14:03:10.5875701Z ```python
2025-08-19T14:03:10.5875988Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T14:03:10.5876358Z ```
2025-08-19T14:03:10.5876481Z 
2025-08-19T14:03:10.5876620Z Drop and recreate a SQL view atomically.
2025-08-19T14:03:10.5876879Z 
2025-08-19T14:03:10.5876988Z <a id="db.utils"></a>
2025-08-19T14:03:10.5877171Z 
2025-08-19T14:03:10.5877268Z # db.utils
2025-08-19T14:03:10.5877399Z 
2025-08-19T14:03:10.5877511Z <a id="price_importer"></a>
2025-08-19T14:03:10.5877711Z 
2025-08-19T14:03:10.5877822Z # price\_importer
2025-08-19T14:03:10.5877977Z 
2025-08-19T14:03:10.5878133Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T14:03:10.5878424Z 
2025-08-19T14:03:10.5878561Z # price\_importer.services\_common.dsn
2025-08-19T14:03:10.5879052Z 
2025-08-19T14:03:10.5879258Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T14:03:10.5879577Z 
2025-08-19T14:03:10.5879678Z #### build\_dsn
2025-08-19T14:03:10.5879830Z 
2025-08-19T14:03:10.5879936Z ```python
2025-08-19T14:03:10.5880191Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:03:10.5880528Z ```
2025-08-19T14:03:10.5880652Z 
2025-08-19T14:03:10.5880755Z Return safe DSN.
2025-08-19T14:03:10.5880914Z 
2025-08-19T14:03:10.5881379Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T14:03:10.5881692Z 
2025-08-19T14:03:10.5881889Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T14:03:10.5882214Z 
2025-08-19T14:03:10.5882380Z # price\_importer.services\_common.models\_vendor
2025-08-19T14:03:10.5882671Z 
2025-08-19T14:03:10.5882831Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T14:03:10.5883110Z 
2025-08-19T14:03:10.5883252Z # price\_importer.services\_common.db\_url
2025-08-19T14:03:10.5883537Z 
2025-08-19T14:03:10.5883735Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T14:03:10.5884065Z 
2025-08-19T14:03:10.5884170Z #### build\_url
2025-08-19T14:03:10.5884320Z 
2025-08-19T14:03:10.5884412Z ```python
2025-08-19T14:03:10.5884839Z def build_url(async_: bool = True) -> str
2025-08-19T14:03:10.5885179Z ```
2025-08-19T14:03:10.5885319Z 
2025-08-19T14:03:10.5885464Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:03:10.5885734Z 
2025-08-19T14:03:10.5885904Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T14:03:10.5886190Z 
2025-08-19T14:03:10.5886333Z # price\_importer.services\_common.keepa
2025-08-19T14:03:10.5886598Z 
2025-08-19T14:03:10.5886754Z <a id="price_importer.services_common.llm"></a>
2025-08-19T14:03:10.5887027Z 
2025-08-19T14:03:10.5887163Z # price\_importer.services\_common.llm
2025-08-19T14:03:10.5887415Z 
2025-08-19T14:03:10.5887592Z <a id="price_importer.services_common.settings"></a>
2025-08-19T14:03:10.5887897Z 
2025-08-19T14:03:10.5888053Z # price\_importer.services\_common.settings
2025-08-19T14:03:10.5888317Z 
2025-08-19T14:03:10.5888471Z <a id="price_importer.services_common.db"></a>
2025-08-19T14:03:10.5888746Z 
2025-08-19T14:03:10.5888887Z # price\_importer.services\_common.db
2025-08-19T14:03:10.5889139Z 
2025-08-19T14:03:10.5889375Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T14:03:10.5889746Z 
2025-08-19T14:03:10.5889865Z #### build\_sqlalchemy\_url
2025-08-19T14:03:10.5890065Z 
2025-08-19T14:03:10.5890167Z ```python
2025-08-19T14:03:10.5890430Z def build_sqlalchemy_url() -> str
2025-08-19T14:03:10.5890748Z ```
2025-08-19T14:03:10.5890879Z 
2025-08-19T14:03:10.5891024Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:03:10.5891295Z 
2025-08-19T14:03:10.5891510Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T14:03:10.5891849Z 
2025-08-19T14:03:10.5891960Z #### build\_asyncpg\_dsn
2025-08-19T14:03:10.5892150Z 
2025-08-19T14:03:10.5892253Z ```python
2025-08-19T14:03:10.5892681Z def build_asyncpg_dsn() -> str
2025-08-19T14:03:10.5892976Z ```
2025-08-19T14:03:10.5893096Z 
2025-08-19T14:03:10.5893293Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:03:10.5893606Z 
2025-08-19T14:03:10.5893794Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T14:03:10.5894118Z 
2025-08-19T14:03:10.5894218Z #### refresh\_mvs
2025-08-19T14:03:10.5894378Z 
2025-08-19T14:03:10.5894475Z ```python
2025-08-19T14:03:10.5894928Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:03:10.5895310Z ```
2025-08-19T14:03:10.5895431Z 
2025-08-19T14:03:10.5895635Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:03:10.5895967Z 
2025-08-19T14:03:10.5896109Z <a id="price_importer.services_common"></a>
2025-08-19T14:03:10.5896367Z 
2025-08-19T14:03:10.5896495Z # price\_importer.services\_common
2025-08-19T14:03:10.5896737Z 
2025-08-19T14:03:10.5896899Z <a id="price_importer.services_common.base"></a>
2025-08-19T14:03:10.5897370Z 
2025-08-19T14:03:10.5897516Z # price\_importer.services\_common.base
2025-08-19T14:03:10.5897773Z 
2025-08-19T14:03:10.5897910Z <a id="price_importer.normaliser"></a>
2025-08-19T14:03:10.5898179Z 
2025-08-19T14:03:10.5898302Z # price\_importer.normaliser
2025-08-19T14:03:10.5898519Z 
2025-08-19T14:03:10.5898681Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T14:03:10.5898975Z 
2025-08-19T14:03:10.5899112Z # price\_importer.common.models\_vendor
2025-08-19T14:03:10.5899367Z 
2025-08-19T14:03:10.5899517Z <a id="price_importer.common.db_url"></a>
2025-08-19T14:03:10.5899778Z 
2025-08-19T14:03:10.5899902Z # price\_importer.common.db\_url
2025-08-19T14:03:10.5900123Z 
2025-08-19T14:03:10.5900277Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T14:03:10.5900550Z 
2025-08-19T14:03:10.5900644Z #### make\_dsn
2025-08-19T14:03:10.5900795Z 
2025-08-19T14:03:10.5900888Z ```python
2025-08-19T14:03:10.5901173Z def make_dsn(async_: bool = False) -> str
2025-08-19T14:03:10.5901512Z ```
2025-08-19T14:03:10.5901632Z 
2025-08-19T14:03:10.5901816Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T14:03:10.5902112Z 
2025-08-19T14:03:10.5902277Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T14:03:10.5902581Z 
2025-08-19T14:03:10.5902675Z #### build\_url
2025-08-19T14:03:10.5902821Z 
2025-08-19T14:03:10.5902914Z ```python
2025-08-19T14:03:10.5903182Z def build_url(async_: bool = False) -> str
2025-08-19T14:03:10.5903522Z ```
2025-08-19T14:03:10.5903646Z 
2025-08-19T14:03:10.5903829Z Return Postgres DSN built from environment variables.
2025-08-19T14:03:10.5904148Z 
2025-08-19T14:03:10.5904281Z <a id="price_importer.common"></a>
2025-08-19T14:03:10.5904522Z 
2025-08-19T14:03:10.5904785Z # price\_importer.common
2025-08-19T14:03:10.5904995Z 
2025-08-19T14:03:10.5905137Z <a id="price_importer.common.base"></a>
2025-08-19T14:03:10.5905399Z 
2025-08-19T14:03:10.5905535Z # price\_importer.common.base
2025-08-19T14:03:10.5905757Z 
2025-08-19T14:03:10.5905915Z <a id="price_importer.tests.conftest"></a>
2025-08-19T14:03:10.5906210Z 
2025-08-19T14:03:10.5906350Z # price\_importer.tests.conftest
2025-08-19T14:03:10.5906587Z 
2025-08-19T14:03:10.5906741Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T14:03:10.5907027Z 
2025-08-19T14:03:10.5907162Z # price\_importer.tests.test\_reader
2025-08-19T14:03:10.5907402Z 
2025-08-19T14:03:10.5907587Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T14:03:10.5907869Z 
2025-08-19T14:03:10.5908006Z # price\_importer.tests.test\_imports
2025-08-19T14:03:10.5908241Z 
2025-08-19T14:03:10.5908398Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T14:03:10.5908664Z 
2025-08-19T14:03:10.5908796Z # price\_importer.tests.test\_smoke
2025-08-19T14:03:10.5909040Z 
2025-08-19T14:03:10.5909199Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T14:03:10.5909535Z 
2025-08-19T14:03:10.5909680Z # price\_importer.tests.test\_normaliser
2025-08-19T14:03:10.5909946Z 
2025-08-19T14:03:10.5910076Z <a id="price_importer.tests"></a>
2025-08-19T14:03:10.5910482Z 
2025-08-19T14:03:10.5910613Z # price\_importer.tests
2025-08-19T14:03:10.5910802Z 
2025-08-19T14:03:10.5910933Z <a id="price_importer.reader"></a>
2025-08-19T14:03:10.5911173Z 
2025-08-19T14:03:10.5911296Z # price\_importer.reader
2025-08-19T14:03:10.5911490Z 
2025-08-19T14:03:10.5911636Z <a id="price_importer.repository"></a>
2025-08-19T14:03:10.5911886Z 
2025-08-19T14:03:10.5912015Z # price\_importer.repository
2025-08-19T14:03:10.5912227Z 
2025-08-19T14:03:10.5912363Z <a id="price_importer.import"></a>
2025-08-19T14:03:10.5912593Z 
2025-08-19T14:03:10.5912710Z # price\_importer.import
2025-08-19T14:03:10.5912910Z 
2025-08-19T14:03:10.5913013Z <a id="fees_h10"></a>
2025-08-19T14:03:10.5913192Z 
2025-08-19T14:03:10.5913303Z # fees\_h10
2025-08-19T14:03:10.5913447Z 
2025-08-19T14:03:10.5913562Z <a id="fees_h10.worker"></a>
2025-08-19T14:03:10.5913775Z 
2025-08-19T14:03:10.5913886Z # fees\_h10.worker
2025-08-19T14:03:10.5914047Z 
2025-08-19T14:03:10.5914366Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T14:03:10.5914824Z 
2025-08-19T14:03:10.5914944Z #### list\_active\_asins
2025-08-19T14:03:10.5915132Z 
2025-08-19T14:03:10.5915231Z ```python
2025-08-19T14:03:10.5915500Z def list_active_asins() -> list[str]
2025-08-19T14:03:10.5915843Z ```
2025-08-19T14:03:10.5915970Z 
2025-08-19T14:03:10.5916147Z Return known ASINs or an empty list if unavailable.
2025-08-19T14:03:10.5916461Z 
2025-08-19T14:03:10.5916600Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T14:03:10.5916855Z 
2025-08-19T14:03:10.5916982Z # fees\_h10.tests.test\_smoke
2025-08-19T14:03:10.5917208Z 
2025-08-19T14:03:10.5917326Z <a id="fees_h10.tests"></a>
2025-08-19T14:03:10.5917530Z 
2025-08-19T14:03:10.5917646Z # fees\_h10.tests
2025-08-19T14:03:10.5917809Z 
2025-08-19T14:03:10.5917929Z <a id="fees_h10.client"></a>
2025-08-19T14:03:10.5918141Z 
2025-08-19T14:03:10.5918253Z # fees\_h10.client
2025-08-19T14:03:10.5918418Z 
2025-08-19T14:03:10.5918547Z <a id="fees_h10.repository"></a>
2025-08-19T14:03:10.5918787Z 
2025-08-19T14:03:10.5918896Z # fees\_h10.repository
2025-08-19T14:03:10.5919073Z 
2025-08-19T14:03:10.5919184Z <a id="emailer"></a>
2025-08-19T14:03:10.5919361Z 
2025-08-19T14:03:10.5919455Z # emailer
2025-08-19T14:03:10.5919594Z 
2025-08-19T14:03:10.5919759Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T14:03:10.5920044Z 
2025-08-19T14:03:10.5920185Z # emailer.tests.test\_import\_emailer
2025-08-19T14:03:10.5920445Z 
2025-08-19T14:03:10.5920581Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T14:03:10.5920832Z 
2025-08-19T14:03:10.5920955Z # emailer.tests.test\_smoke
2025-08-19T14:03:10.5921181Z 
2025-08-19T14:03:10.5921306Z <a id="emailer.tests"></a>
2025-08-19T14:03:10.5921513Z 
2025-08-19T14:03:10.5921631Z # emailer.tests
2025-08-19T14:03:10.5921847Z 
2025-08-19T14:03:10.5921977Z <a id="emailer.generate_body"></a>
2025-08-19T14:03:10.5922222Z 
2025-08-19T14:03:10.5922341Z # emailer.generate\_body
2025-08-19T14:03:10.5922543Z 
2025-08-19T14:03:10.5922655Z <a id="llm_server"></a>
2025-08-19T14:03:10.5922870Z 
2025-08-19T14:03:10.5922973Z # llm\_server
2025-08-19T14:03:10.5923127Z 
2025-08-19T14:03:10.5923252Z <a id="llm_server.app"></a>
2025-08-19T14:03:10.5923471Z 
2025-08-19T14:03:10.5923581Z # llm\_server.app
2025-08-19T14:03:10.5923751Z 
