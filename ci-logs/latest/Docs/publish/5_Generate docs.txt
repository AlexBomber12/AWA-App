2025-08-19T14:26:51.3891283Z ##[group]Run pydoc-markdown
2025-08-19T14:26:51.3891603Z [36;1mpydoc-markdown[0m
2025-08-19T14:26:51.3932144Z shell: /usr/bin/bash -e {0}
2025-08-19T14:26:51.3932398Z env:
2025-08-19T14:26:51.3932666Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:26:51.3933135Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T14:26:51.3933574Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:26:51.3933975Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:26:51.3934378Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:26:51.3934772Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T14:26:51.3935101Z ##[endgroup]
2025-08-19T14:26:51.8225521Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T14:26:51.8226284Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T14:26:51.8226632Z In "pydoc-markdown.yml"
2025-08-19T14:26:51.8226941Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T14:26:51.8227496Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T14:26:51.8228059Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T14:26:51.8228441Z 
2025-08-19T14:26:52.1654902Z <a id="__init__"></a>
2025-08-19T14:26:52.1655410Z 
2025-08-19T14:26:52.1655581Z # \_\_init\_\_
2025-08-19T14:26:52.1655845Z 
2025-08-19T14:26:52.1656313Z <a id="api"></a>
2025-08-19T14:26:52.1656577Z 
2025-08-19T14:26:52.1656715Z # api
2025-08-19T14:26:52.1656936Z 
2025-08-19T14:26:52.1657120Z <a id="api.errors"></a>
2025-08-19T14:26:52.1657402Z 
2025-08-19T14:26:52.1657571Z # api.errors
2025-08-19T14:26:52.1657808Z 
2025-08-19T14:26:52.1658003Z <a id="api.sentry_config"></a>
2025-08-19T14:26:52.1658361Z 
2025-08-19T14:26:52.1658525Z # api.sentry\_config
2025-08-19T14:26:52.1658796Z 
2025-08-19T14:26:52.1659042Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T14:26:52.1659529Z 
2025-08-19T14:26:52.1659792Z # api.tests.test\_stats\_contracts
2025-08-19T14:26:52.1660317Z 
2025-08-19T14:26:52.1660614Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T14:26:52.1661130Z 
2025-08-19T14:26:52.1661365Z # api.tests.test\_sentry\_scrub
2025-08-19T14:26:52.1661817Z 
2025-08-19T14:26:52.1662090Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T14:26:52.1662674Z 
2025-08-19T14:26:52.1662897Z # api.tests.test\_roi\_basic\_auth
2025-08-19T14:26:52.1663269Z 
2025-08-19T14:26:52.1663471Z <a id="api.tests.test_errors_json"></a>
2025-08-19T14:26:52.1663870Z 
2025-08-19T14:26:52.1664101Z # api.tests.test\_errors\_json
2025-08-19T14:26:52.1664471Z 
2025-08-19T14:26:52.1664682Z <a id="api.tests.test_llm"></a>
2025-08-19T14:26:52.1665047Z 
2025-08-19T14:26:52.1665224Z # api.tests.test\_llm
2025-08-19T14:26:52.1665488Z 
2025-08-19T14:26:52.1665637Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T14:26:52.1666100Z 
2025-08-19T14:26:52.1666250Z # api.tests.test\_roi\_filters
2025-08-19T14:26:52.1666457Z 
2025-08-19T14:26:52.1666592Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T14:26:52.1667153Z 
2025-08-19T14:26:52.1667269Z # api.tests.test\_sentry\_event
2025-08-19T14:26:52.1667472Z 
2025-08-19T14:26:52.1667662Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T14:26:52.1667977Z 
2025-08-19T14:26:52.1668090Z ## DummyTransport Objects
2025-08-19T14:26:52.1668285Z 
2025-08-19T14:26:52.1668380Z ```python
2025-08-19T14:26:52.1668628Z class DummyTransport()
2025-08-19T14:26:52.1668894Z ```
2025-08-19T14:26:52.1669016Z 
2025-08-19T14:26:52.1669281Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T14:26:52.1669673Z 
2025-08-19T14:26:52.1669778Z #### capture\_envelope
2025-08-19T14:26:52.1669953Z 
2025-08-19T14:26:52.1670045Z ```python
2025-08-19T14:26:52.1670298Z def capture_envelope(envelope)
2025-08-19T14:26:52.1670594Z ```
2025-08-19T14:26:52.1670714Z 
2025-08-19T14:26:52.1670892Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T14:26:52.1671208Z 
2025-08-19T14:26:52.1671329Z <a id="api.tests.test_cors"></a>
2025-08-19T14:26:52.1671778Z 
2025-08-19T14:26:52.1671893Z # api.tests.test\_cors
2025-08-19T14:26:52.1672066Z 
2025-08-19T14:26:52.1672187Z <a id="api.tests.test_imports"></a>
2025-08-19T14:26:52.1672426Z 
2025-08-19T14:26:52.1672546Z # api.tests.test\_imports
2025-08-19T14:26:52.1672733Z 
2025-08-19T14:26:52.1672857Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T14:26:52.1673071Z 
2025-08-19T14:26:52.1673153Z # api.tests.test\_rate\_limit
2025-08-19T14:26:52.1673303Z 
2025-08-19T14:26:52.1673417Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T14:26:52.1673602Z 
2025-08-19T14:26:52.1673670Z #### app
2025-08-19T14:26:52.1673768Z 
2025-08-19T14:26:52.1673835Z noqa: E402
2025-08-19T14:26:52.1673927Z 
2025-08-19T14:26:52.1674017Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T14:26:52.1674194Z 
2025-08-19T14:26:52.1674282Z # api.tests.test\_entrypoint
2025-08-19T14:26:52.1674431Z 
2025-08-19T14:26:52.1674524Z <a id="api.tests.test_health"></a>
2025-08-19T14:26:52.1674686Z 
2025-08-19T14:26:52.1674769Z # api.tests.test\_health
2025-08-19T14:26:52.1674904Z 
2025-08-19T14:26:52.1674986Z <a id="api.tests.test_score"></a>
2025-08-19T14:26:52.1675137Z 
2025-08-19T14:26:52.1675213Z # api.tests.test\_score
2025-08-19T14:26:52.1675344Z 
2025-08-19T14:26:52.1675426Z <a id="api.logging_config"></a>
2025-08-19T14:26:52.1675568Z 
2025-08-19T14:26:52.1675648Z # api.logging\_config
2025-08-19T14:26:52.1675765Z 
2025-08-19T14:26:52.1675848Z <a id="api.migrations.env"></a>
2025-08-19T14:26:52.1676276Z 
2025-08-19T14:26:52.1676357Z # api.migrations.env
2025-08-19T14:26:52.1676478Z 
2025-08-19T14:26:52.1676600Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T14:26:52.1676807Z 
2025-08-19T14:26:52.1676915Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T14:26:52.1677099Z 
2025-08-19T14:26:52.1677217Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T14:26:52.1677410Z 
2025-08-19T14:26:52.1677509Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T14:26:52.1677703Z 
2025-08-19T14:26:52.1677858Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T14:26:52.1678101Z 
2025-08-19T14:26:52.1678240Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T14:26:52.1678471Z 
2025-08-19T14:26:52.1678597Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T14:26:52.1678800Z 
2025-08-19T14:26:52.1678920Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T14:26:52.1679112Z 
2025-08-19T14:26:52.1679232Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T14:26:52.1679439Z 
2025-08-19T14:26:52.1679544Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T14:26:52.1679734Z 
2025-08-19T14:26:52.1679863Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T14:26:52.1680080Z 
2025-08-19T14:26:52.1680194Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T14:26:52.1680386Z 
2025-08-19T14:26:52.1680511Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T14:26:52.1680965Z 
2025-08-19T14:26:52.1681083Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T14:26:52.1681320Z 
2025-08-19T14:26:52.1681444Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T14:26:52.1681653Z 
2025-08-19T14:26:52.1681756Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T14:26:52.1681942Z 
2025-08-19T14:26:52.1682080Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T14:26:52.1682308Z 
2025-08-19T14:26:52.1682428Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T14:26:52.1682627Z 
2025-08-19T14:26:52.1682760Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T14:26:52.1682963Z 
2025-08-19T14:26:52.1683072Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T14:26:52.1683270Z 
2025-08-19T14:26:52.1683407Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T14:26:52.1683623Z 
2025-08-19T14:26:52.1683740Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T14:26:52.1684094Z 
2025-08-19T14:26:52.1684207Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T14:26:52.1684399Z 
2025-08-19T14:26:52.1684501Z # api.migrations.versions.0001\_baseline
2025-08-19T14:26:52.1684674Z 
2025-08-19T14:26:52.1684765Z <a id="api.migrations.versions"></a>
2025-08-19T14:26:52.1684935Z 
2025-08-19T14:26:52.1685018Z # api.migrations.versions
2025-08-19T14:26:52.1685149Z 
2025-08-19T14:26:52.1685236Z <a id="api.migrations"></a>
2025-08-19T14:26:52.1685370Z 
2025-08-19T14:26:52.1685440Z # api.migrations
2025-08-19T14:26:52.1685773Z 
2025-08-19T14:26:52.1686067Z <a id="api.db"></a>
2025-08-19T14:26:52.1686282Z 
2025-08-19T14:26:52.1686394Z # api.db
2025-08-19T14:26:52.1686568Z 
2025-08-19T14:26:52.1686717Z <a id="api.routes.score"></a>
2025-08-19T14:26:52.1686981Z 
2025-08-19T14:26:52.1687108Z # api.routes.score
2025-08-19T14:26:52.1687315Z 
2025-08-19T14:26:52.1687456Z <a id="api.routes.stats"></a>
2025-08-19T14:26:52.1687707Z 
2025-08-19T14:26:52.1687851Z # api.routes.stats
2025-08-19T14:26:52.1688070Z 
2025-08-19T14:26:52.1688212Z <a id="api.routes.roi"></a>
2025-08-19T14:26:52.1688475Z 
2025-08-19T14:26:52.1688551Z # api.routes.roi
2025-08-19T14:26:52.1688661Z 
2025-08-19T14:26:52.1688747Z <a id="api.routes.health"></a>
2025-08-19T14:26:52.1688894Z 
2025-08-19T14:26:52.1688967Z # api.routes.health
2025-08-19T14:26:52.1689078Z 
2025-08-19T14:26:52.1689180Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T14:26:52.1689353Z 
2025-08-19T14:26:52.1689421Z #### MAX\_SKEW
2025-08-19T14:26:52.1689521Z 
2025-08-19T14:26:52.1689593Z seconds
2025-08-19T14:26:52.1689680Z 
2025-08-19T14:26:52.1689777Z <a id="api.routes.health.health"></a>
2025-08-19T14:26:52.1689951Z 
2025-08-19T14:26:52.1690017Z #### health
2025-08-19T14:26:52.1690109Z 
2025-08-19T14:26:52.1690185Z ```python
2025-08-19T14:26:52.1690393Z @router.get("/health", include_in_schema=False)
2025-08-19T14:26:52.1690822Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T14:26:52.1691168Z ```
2025-08-19T14:26:52.1691270Z 
2025-08-19T14:26:52.1691400Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T14:26:52.1691598Z 
2025-08-19T14:26:52.1691689Z <a id="api.routes.repository"></a>
2025-08-19T14:26:52.1691853Z 
2025-08-19T14:26:52.1691933Z # api.routes.repository
2025-08-19T14:26:52.1692058Z 
2025-08-19T14:26:52.1692140Z <a id="api.routes"></a>
2025-08-19T14:26:52.1692258Z 
2025-08-19T14:26:52.1692326Z # api.routes
2025-08-19T14:26:52.1692425Z 
2025-08-19T14:26:52.1692520Z <a id="api.models.fee"></a>
2025-08-19T14:26:52.1692655Z 
2025-08-19T14:26:52.1692723Z # api.models.fee
2025-08-19T14:26:52.1692835Z 
2025-08-19T14:26:52.1692913Z <a id="api.models"></a>
2025-08-19T14:26:52.1693035Z 
2025-08-19T14:26:52.1693102Z # api.models
2025-08-19T14:26:52.1693210Z 
2025-08-19T14:26:52.1693294Z <a id="api.roi_repository"></a>
2025-08-19T14:26:52.1693440Z 
2025-08-19T14:26:52.1693522Z # api.roi\_repository
2025-08-19T14:26:52.1693640Z 
2025-08-19T14:26:52.1693713Z <a id="api.main"></a>
2025-08-19T14:26:52.1694293Z 
2025-08-19T14:26:52.1694371Z # api.main
2025-08-19T14:26:52.1694471Z 
2025-08-19T14:26:52.1694559Z <a id="api.main.ready"></a>
2025-08-19T14:26:52.1694703Z 
2025-08-19T14:26:52.1694769Z #### ready
2025-08-19T14:26:52.1694858Z 
2025-08-19T14:26:52.1694931Z ```python
2025-08-19T14:26:52.1695197Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T14:26:52.1695638Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T14:26:52.1696252Z                                                                       str]
2025-08-19T14:26:52.1696499Z ```
2025-08-19T14:26:52.1696587Z 
2025-08-19T14:26:52.1696684Z Return 200 only when migrations are at head.
2025-08-19T14:26:52.1696897Z 
2025-08-19T14:26:52.1697039Z <a id="api.config"></a>
2025-08-19T14:26:52.1697247Z 
2025-08-19T14:26:52.1697381Z # api.config
2025-08-19T14:26:52.1697520Z 
2025-08-19T14:26:52.1697668Z <a id="api.security"></a>
2025-08-19T14:26:52.1697903Z 
2025-08-19T14:26:52.1698297Z # api.security
2025-08-19T14:26:52.1698497Z 
2025-08-19T14:26:52.1698628Z <a id="etl"></a>
2025-08-19T14:26:52.1698831Z 
2025-08-19T14:26:52.1698951Z # etl
2025-08-19T14:26:52.1699110Z 
2025-08-19T14:26:52.1699272Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T14:26:52.1699534Z 
2025-08-19T14:26:52.1699669Z # etl.fba\_fee\_ingestor
2025-08-19T14:26:52.1699896Z 
2025-08-19T14:26:52.1700047Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T14:26:52.1700324Z 
2025-08-19T14:26:52.1700465Z # etl.sp\_fees\_ingestor
2025-08-19T14:26:52.1700686Z 
2025-08-19T14:26:52.1700840Z <a id="etl.keepa_ingestor"></a>
2025-08-19T14:26:52.1701108Z 
2025-08-19T14:26:52.1701237Z # etl.keepa\_ingestor
2025-08-19T14:26:52.1701440Z 
2025-08-19T14:26:52.1701562Z <a id="etl.db"></a>
2025-08-19T14:26:52.1701750Z 
2025-08-19T14:26:52.1701860Z # etl.db
2025-08-19T14:26:52.1702022Z 
2025-08-19T14:26:52.1702168Z <a id="etl.dialects.schemas"></a>
2025-08-19T14:26:52.1702405Z 
2025-08-19T14:26:52.1702548Z # etl.dialects.schemas
2025-08-19T14:26:52.1702788Z 
2025-08-19T14:26:52.1702967Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T14:26:52.1703312Z 
2025-08-19T14:26:52.1703460Z # etl.dialects.amazon\_reimbursements
2025-08-19T14:26:52.1703739Z 
2025-08-19T14:26:52.1703917Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T14:26:52.1704268Z 
2025-08-19T14:26:52.1704420Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T14:26:52.1704706Z 
2025-08-19T14:26:52.1704870Z <a id="etl.dialects.test_generic"></a>
2025-08-19T14:26:52.1705166Z 
2025-08-19T14:26:52.1705309Z # etl.dialects.test\_generic
2025-08-19T14:26:52.1705566Z 
2025-08-19T14:26:52.1705719Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T14:26:52.1706275Z 
2025-08-19T14:26:52.1706437Z # etl.dialects.amazon\_returns
2025-08-19T14:26:52.1706716Z 
2025-08-19T14:26:52.1706890Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T14:26:52.1707218Z 
2025-08-19T14:26:52.1707388Z # etl.dialects.amazon\_fee\_preview
2025-08-19T14:26:52.1707676Z 
2025-08-19T14:26:52.1707886Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T14:26:52.1708245Z 
2025-08-19T14:26:52.1708402Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T14:26:52.1708696Z 
2025-08-19T14:26:52.1708870Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T14:26:52.1709195Z 
2025-08-19T14:26:52.1709354Z # etl.dialects.amazon\_settlements
2025-08-19T14:26:52.1709630Z 
2025-08-19T14:26:52.1709774Z <a id="etl.dialects"></a>
2025-08-19T14:26:52.1710004Z 
2025-08-19T14:26:52.1710126Z # etl.dialects
2025-08-19T14:26:52.1710305Z 
2025-08-19T14:26:52.1710434Z <a id="ingest"></a>
2025-08-19T14:26:52.1710622Z 
2025-08-19T14:26:52.1710733Z # ingest
2025-08-19T14:26:52.1710896Z 
2025-08-19T14:26:52.1711044Z <a id="ingest.maintenance"></a>
2025-08-19T14:26:52.1711303Z 
2025-08-19T14:26:52.1711438Z # ingest.maintenance
2025-08-19T14:26:52.1711644Z 
2025-08-19T14:26:52.1711785Z <a id="ingest.copy_loader"></a>
2025-08-19T14:26:52.1712042Z 
2025-08-19T14:26:52.1712181Z # ingest.copy\_loader
2025-08-19T14:26:52.1712397Z 
2025-08-19T14:26:52.1712816Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T14:26:52.1713159Z 
2025-08-19T14:26:52.1713292Z #### copy\_df\_via\_temp
2025-08-19T14:26:52.1713508Z 
2025-08-19T14:26:52.1713622Z ```python
2025-08-19T14:26:52.1713929Z def copy_df_via_temp(engine: Engine,
2025-08-19T14:26:52.1714360Z                      df: pd.DataFrame,
2025-08-19T14:26:52.1714752Z                      target_table: str,
2025-08-19T14:26:52.1715147Z                      *,
2025-08-19T14:26:52.1715508Z                      target_schema: Optional[str] = None,
2025-08-19T14:26:52.1716191Z                      columns: Sequence[str],
2025-08-19T14:26:52.1716679Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T14:26:52.1717206Z                      analyze_after: bool = False,
2025-08-19T14:26:52.1717681Z                      connection: Any | None = None) -> int
2025-08-19T14:26:52.1718122Z ```
2025-08-19T14:26:52.1718274Z 
2025-08-19T14:26:52.1718566Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T14:26:52.1719196Z 
2025-08-19T14:26:52.1719355Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T14:26:52.1719663Z 
2025-08-19T14:26:52.1719809Z # ingest.tests.test\_smoke
2025-08-19T14:26:52.1720048Z 
2025-08-19T14:26:52.1720185Z <a id="ingest.tests"></a>
2025-08-19T14:26:52.1720412Z 
2025-08-19T14:26:52.1720526Z # ingest.tests
2025-08-19T14:26:52.1720702Z 
2025-08-19T14:26:52.1720852Z <a id="ingest.upload_router"></a>
2025-08-19T14:26:52.1721121Z 
2025-08-19T14:26:52.1721252Z # ingest.upload\_router
2025-08-19T14:26:52.1721471Z 
2025-08-19T14:26:52.1721606Z <a id="ingest.email_watcher"></a>
2025-08-19T14:26:52.1721897Z 
2025-08-19T14:26:52.1722030Z # ingest.email\_watcher
2025-08-19T14:26:52.1722255Z 
2025-08-19T14:26:52.1722424Z <a id="ingest.email_watcher.main"></a>
2025-08-19T14:26:52.1722746Z 
2025-08-19T14:26:52.1722879Z #### main
2025-08-19T14:26:52.1723046Z 
2025-08-19T14:26:52.1723164Z ```python
2025-08-19T14:26:52.1723487Z def main() -> dict[str, str]
2025-08-19T14:26:52.1723871Z ```
2025-08-19T14:26:52.1724035Z 
2025-08-19T14:26:52.1724306Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T14:26:52.1724726Z 
2025-08-19T14:26:52.1724961Z Returns {"status": "success"} when processing completes.
2025-08-19T14:26:52.1725355Z 
2025-08-19T14:26:52.1725495Z <a id="ingest.tasks"></a>
2025-08-19T14:26:52.1725739Z 
2025-08-19T14:26:52.1726107Z # ingest.tasks
2025-08-19T14:26:52.1726309Z 
2025-08-19T14:26:52.1726486Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T14:26:52.1726806Z 
2025-08-19T14:26:52.1726949Z #### task\_import\_file
2025-08-19T14:26:52.1727169Z 
2025-08-19T14:26:52.1727290Z ```python
2025-08-19T14:26:52.1727687Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T14:26:52.1728261Z def task_import_file(self: Any,
2025-08-19T14:26:52.1728561Z                      uri: str,
2025-08-19T14:26:52.1728793Z                      report_type: str | None = None,
2025-08-19T14:26:52.1729079Z                      force: bool = False) -> dict[str, Any]
2025-08-19T14:26:52.1729339Z ```
2025-08-19T14:26:52.1729432Z 
2025-08-19T14:26:52.1729570Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T14:26:52.1729782Z 
2025-08-19T14:26:52.1729869Z <a id="ingest.celery_app"></a>
2025-08-19T14:26:52.1730023Z 
2025-08-19T14:26:52.1730096Z # ingest.celery\_app
2025-08-19T14:26:52.1730211Z 
2025-08-19T14:26:52.1730304Z <a id="ingest.ingest_router"></a>
2025-08-19T14:26:52.1730455Z 
2025-08-19T14:26:52.1730536Z # ingest.ingest\_router
2025-08-19T14:26:52.1730665Z 
2025-08-19T14:26:52.1730744Z <a id="logistics_etl"></a>
2025-08-19T14:26:52.1730872Z 
2025-08-19T14:26:52.1730943Z # logistics\_etl
2025-08-19T14:26:52.1731053Z 
2025-08-19T14:26:52.1731129Z Daily logistics ETL job.
2025-08-19T14:26:52.1731254Z 
2025-08-19T14:26:52.1731344Z <a id="logistics_etl.__main__"></a>
2025-08-19T14:26:52.1731499Z 
2025-08-19T14:26:52.1731579Z # logistics\_etl.\_\_main\_\_
2025-08-19T14:26:52.1731725Z 
2025-08-19T14:26:52.1732399Z <a id="logistics_etl.dsn"></a>
2025-08-19T14:26:52.1732563Z 
2025-08-19T14:26:52.1732645Z # logistics\_etl.dsn
2025-08-19T14:26:52.1732781Z 
2025-08-19T14:26:52.1732901Z Local DSN builder to avoid cross-service dependency.
2025-08-19T14:26:52.1733107Z 
2025-08-19T14:26:52.1733207Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T14:26:52.1733425Z 
2025-08-19T14:26:52.1733497Z #### build\_dsn
2025-08-19T14:26:52.1733610Z 
2025-08-19T14:26:52.1733677Z ```python
2025-08-19T14:26:52.1733860Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:26:52.1734094Z ```
2025-08-19T14:26:52.1734178Z 
2025-08-19T14:26:52.1734325Z Return a Postgres DSN assembled from environment variables.
2025-08-19T14:26:52.1734551Z 
2025-08-19T14:26:52.1734706Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T14:26:52.1735118Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T14:26:52.1735473Z error when any required variable is missing.
2025-08-19T14:26:52.1735659Z 
2025-08-19T14:26:52.1736107Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T14:26:52.1736326Z 
2025-08-19T14:26:52.1736420Z # logistics\_etl.tests.conftest
2025-08-19T14:26:52.1736567Z 
2025-08-19T14:26:52.1736675Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T14:26:52.1736871Z 
2025-08-19T14:26:52.1736963Z # logistics\_etl.tests.test\_repository
2025-08-19T14:26:52.1737127Z 
2025-08-19T14:26:52.1737221Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T14:26:52.1737397Z 
2025-08-19T14:26:52.1737485Z # logistics\_etl.tests.test\_cron
2025-08-19T14:26:52.1737636Z 
2025-08-19T14:26:52.1737741Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T14:26:52.1737918Z 
2025-08-19T14:26:52.1738003Z # logistics\_etl.tests.test\_imports
2025-08-19T14:26:52.1738165Z 
2025-08-19T14:26:52.1738259Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T14:26:52.1738437Z 
2025-08-19T14:26:52.1738526Z # logistics\_etl.tests.test\_smoke
2025-08-19T14:26:52.1738689Z 
2025-08-19T14:26:52.1738788Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T14:26:52.1738974Z 
2025-08-19T14:26:52.1739065Z # logistics\_etl.tests.test\_client
2025-08-19T14:26:52.1739219Z 
2025-08-19T14:26:52.1739307Z <a id="logistics_etl.tests"></a>
2025-08-19T14:26:52.1739455Z 
2025-08-19T14:26:52.1739529Z # logistics\_etl.tests
2025-08-19T14:26:52.1739651Z 
2025-08-19T14:26:52.1739730Z <a id="logistics_etl.flow"></a>
2025-08-19T14:26:52.1739877Z 
2025-08-19T14:26:52.1739950Z # logistics\_etl.flow
2025-08-19T14:26:52.1740067Z 
2025-08-19T14:26:52.1740156Z <a id="logistics_etl.client"></a>
2025-08-19T14:26:52.1740302Z 
2025-08-19T14:26:52.1740378Z # logistics\_etl.client
2025-08-19T14:26:52.1740499Z 
2025-08-19T14:26:52.1740586Z <a id="logistics_etl.cron"></a>
2025-08-19T14:26:52.1740724Z 
2025-08-19T14:26:52.1740796Z # logistics\_etl.cron
2025-08-19T14:26:52.1740918Z 
2025-08-19T14:26:52.1740998Z <a id="logistics_etl.db"></a>
2025-08-19T14:26:52.1741134Z 
2025-08-19T14:26:52.1741212Z # logistics\_etl.db
2025-08-19T14:26:52.1741326Z 
2025-08-19T14:26:52.1741420Z <a id="logistics_etl.repository"></a>
2025-08-19T14:26:52.1741579Z 
2025-08-19T14:26:52.1768480Z # logistics\_etl.repository
2025-08-19T14:26:52.1768773Z 
2025-08-19T14:26:52.1768910Z <a id="alert_bot"></a>
2025-08-19T14:26:52.1769121Z 
2025-08-19T14:26:52.1769240Z # alert\_bot
2025-08-19T14:26:52.1769404Z 
2025-08-19T14:26:52.1769563Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T14:26:52.1769862Z 
2025-08-19T14:26:52.1770005Z # alert\_bot.tests.test\_smoke
2025-08-19T14:26:52.1770249Z 
2025-08-19T14:26:52.1770393Z <a id="alert_bot.tests"></a>
2025-08-19T14:26:52.1770630Z 
2025-08-19T14:26:52.1770705Z # alert\_bot.tests
2025-08-19T14:26:52.1770820Z 
2025-08-19T14:26:52.1770944Z <a id="alert_bot.alert_bot"></a>
2025-08-19T14:26:52.1771208Z 
2025-08-19T14:26:52.1771333Z # alert\_bot.alert\_bot
2025-08-19T14:26:52.1771548Z 
2025-08-19T14:26:52.1771680Z <a id="alert_bot.rules"></a>
2025-08-19T14:26:52.1771925Z 
2025-08-19T14:26:52.1772045Z # alert\_bot.rules
2025-08-19T14:26:52.1772551Z 
2025-08-19T14:26:52.1772678Z <a id="common"></a>
2025-08-19T14:26:52.1772881Z 
2025-08-19T14:26:52.1773004Z # common
2025-08-19T14:26:52.1773169Z 
2025-08-19T14:26:52.1773305Z <a id="common.dsn"></a>
2025-08-19T14:26:52.1773542Z 
2025-08-19T14:26:52.1773661Z # common.dsn
2025-08-19T14:26:52.1773836Z 
2025-08-19T14:26:52.1773982Z <a id="common.dsn.build_dsn"></a>
2025-08-19T14:26:52.1774256Z 
2025-08-19T14:26:52.1774369Z #### build\_dsn
2025-08-19T14:26:52.1774546Z 
2025-08-19T14:26:52.1774667Z ```python
2025-08-19T14:26:52.1774985Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:26:52.1775396Z ```
2025-08-19T14:26:52.1775548Z 
2025-08-19T14:26:52.1775769Z Return a Postgres DSN, validating required variables.
2025-08-19T14:26:52.1776333Z 
2025-08-19T14:26:52.1776674Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T14:26:52.1777473Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T14:26:52.1778223Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T14:26:52.1779026Z missing.
2025-08-19T14:26:52.1779190Z 
2025-08-19T14:26:52.1779336Z <a id="common.models_vendor"></a>
2025-08-19T14:26:52.1779609Z 
2025-08-19T14:26:52.1779739Z # common.models\_vendor
2025-08-19T14:26:52.1779948Z 
2025-08-19T14:26:52.1780104Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T14:26:52.1780407Z 
2025-08-19T14:26:52.1780523Z ## Vendor Objects
2025-08-19T14:26:52.1780706Z 
2025-08-19T14:26:52.1780821Z ```python
2025-08-19T14:26:52.1781083Z class Vendor(Base)
2025-08-19T14:26:52.1781264Z ```
2025-08-19T14:26:52.1781351Z 
2025-08-19T14:26:52.1781435Z Vendor of inventory items.
2025-08-19T14:26:52.1781576Z 
2025-08-19T14:26:52.1781680Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T14:26:52.1781866Z 
2025-08-19T14:26:52.1781942Z ## VendorPrice Objects
2025-08-19T14:26:52.1782069Z 
2025-08-19T14:26:52.1782135Z ```python
2025-08-19T14:26:52.1782303Z class VendorPrice(Base)
2025-08-19T14:26:52.1782482Z ```
2025-08-19T14:26:52.1782581Z 
2025-08-19T14:26:52.1782696Z Association table linking vendors to pricing.
2025-08-19T14:26:52.1782885Z 
2025-08-19T14:26:52.1782965Z <a id="common.db_url"></a>
2025-08-19T14:26:52.1783101Z 
2025-08-19T14:26:52.1783169Z # common.db\_url
2025-08-19T14:26:52.1783277Z 
2025-08-19T14:26:52.1783365Z <a id="common.db_url.build_url"></a>
2025-08-19T14:26:52.1783588Z 
2025-08-19T14:26:52.1783656Z #### build\_url
2025-08-19T14:26:52.1783761Z 
2025-08-19T14:26:52.1783831Z ```python
2025-08-19T14:26:52.1784008Z def build_url(async_: bool = True) -> str
2025-08-19T14:26:52.1784239Z ```
2025-08-19T14:26:52.1784321Z 
2025-08-19T14:26:52.1784419Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:26:52.1784606Z 
2025-08-19T14:26:52.1784688Z <a id="common.keepa"></a>
2025-08-19T14:26:52.1784817Z 
2025-08-19T14:26:52.1784894Z # common.keepa
2025-08-19T14:26:52.1784996Z 
2025-08-19T14:26:52.1785069Z <a id="common.llm"></a>
2025-08-19T14:26:52.1785187Z 
2025-08-19T14:26:52.1785261Z # common.llm
2025-08-19T14:26:52.1785368Z 
2025-08-19T14:26:52.1785451Z <a id="common.settings"></a>
2025-08-19T14:26:52.1785597Z 
2025-08-19T14:26:52.1785666Z # common.settings
2025-08-19T14:26:52.1785775Z 
2025-08-19T14:26:52.1785848Z <a id="common.db"></a>
2025-08-19T14:26:52.1786222Z 
2025-08-19T14:26:52.1786292Z # common.db
2025-08-19T14:26:52.1786389Z 
2025-08-19T14:26:52.1786490Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T14:26:52.1786666Z 
2025-08-19T14:26:52.1786744Z #### build\_sqlalchemy\_url
2025-08-19T14:26:52.1786885Z 
2025-08-19T14:26:52.1786953Z ```python
2025-08-19T14:26:52.1787131Z def build_sqlalchemy_url() -> str
2025-08-19T14:26:52.1787345Z ```
2025-08-19T14:26:52.1787428Z 
2025-08-19T14:26:52.1787527Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:26:52.1787703Z 
2025-08-19T14:26:52.1787794Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T14:26:52.1787961Z 
2025-08-19T14:26:52.1788042Z #### build\_asyncpg\_dsn
2025-08-19T14:26:52.1788167Z 
2025-08-19T14:26:52.1788237Z ```python
2025-08-19T14:26:52.1788572Z def build_asyncpg_dsn() -> str
2025-08-19T14:26:52.1788770Z ```
2025-08-19T14:26:52.1788857Z 
2025-08-19T14:26:52.1788987Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:26:52.1789202Z 
2025-08-19T14:26:52.1789295Z <a id="common.db.refresh_mvs"></a>
2025-08-19T14:26:52.1789450Z 
2025-08-19T14:26:52.1789517Z #### refresh\_mvs
2025-08-19T14:26:52.1789622Z 
2025-08-19T14:26:52.1789692Z ```python
2025-08-19T14:26:52.1789886Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:26:52.1790141Z ```
2025-08-19T14:26:52.1790222Z 
2025-08-19T14:26:52.1790359Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:26:52.1790584Z 
2025-08-19T14:26:52.1790664Z <a id="common.config"></a>
2025-08-19T14:26:52.1790795Z 
2025-08-19T14:26:52.1790871Z # common.config
2025-08-19T14:26:52.1790974Z 
2025-08-19T14:26:52.1791050Z <a id="common.base"></a>
2025-08-19T14:26:52.1791176Z 
2025-08-19T14:26:52.1791243Z # common.base
2025-08-19T14:26:52.1791458Z 
2025-08-19T14:26:52.1791540Z <a id="common.base.Base"></a>
2025-08-19T14:26:52.1791684Z 
2025-08-19T14:26:52.1791750Z ## Base Objects
2025-08-19T14:26:52.1791851Z 
2025-08-19T14:26:52.1791923Z ```python
2025-08-19T14:26:52.1792092Z class Base(DeclarativeBase)
2025-08-19T14:26:52.1792290Z ```
2025-08-19T14:26:52.1792372Z 
2025-08-19T14:26:52.1792459Z Base class for SQLAlchemy models.
2025-08-19T14:26:52.1792618Z 
2025-08-19T14:26:52.1792692Z <a id="repricer"></a>
2025-08-19T14:26:52.1792811Z 
2025-08-19T14:26:52.1792882Z # repricer
2025-08-19T14:26:52.1792981Z 
2025-08-19T14:26:52.1793068Z <a id="repricer.app.schemas"></a>
2025-08-19T14:26:52.1793218Z 
2025-08-19T14:26:52.1793303Z # repricer.app.schemas
2025-08-19T14:26:52.1793426Z 
2025-08-19T14:26:52.1793511Z <a id="repricer.app.deps"></a>
2025-08-19T14:26:52.1793655Z 
2025-08-19T14:26:52.1793737Z # repricer.app.deps
2025-08-19T14:26:52.1793850Z 
2025-08-19T14:26:52.1793974Z Placeholder module for Keepa / SP-API clients.
2025-08-19T14:26:52.1794177Z 
2025-08-19T14:26:52.1794267Z <a id="repricer.app.logic"></a>
2025-08-19T14:26:52.1794413Z 
2025-08-19T14:26:52.1794494Z # repricer.app.logic
2025-08-19T14:26:52.1794611Z 
2025-08-19T14:26:52.1794709Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T14:26:52.1794884Z 
2025-08-19T14:26:52.1794957Z #### MIN\_MARGIN
2025-08-19T14:26:52.1795059Z 
2025-08-19T14:26:52.1795123Z 15 % ROI
2025-08-19T14:26:52.1795217Z 
2025-08-19T14:26:52.1795322Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T14:26:52.1795504Z 
2025-08-19T14:26:52.1795576Z #### compute\_price
2025-08-19T14:26:52.1795691Z 
2025-08-19T14:26:52.1795755Z ```python
2025-08-19T14:26:52.1796304Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T14:26:52.1796623Z ```
2025-08-19T14:26:52.1796707Z 
2025-08-19T14:26:52.1796821Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T14:26:52.1797102Z Replace with real competitive logic later.
2025-08-19T14:26:52.1797282Z 
2025-08-19T14:26:52.1797369Z <a id="repricer.app.main"></a>
2025-08-19T14:26:52.1797523Z 
2025-08-19T14:26:52.1797604Z # repricer.app.main
2025-08-19T14:26:52.1797720Z 
2025-08-19T14:26:52.1797798Z <a id="repricer.app"></a>
2025-08-19T14:26:52.1797932Z 
2025-08-19T14:26:52.1798010Z # repricer.app
2025-08-19T14:26:52.1798118Z 
2025-08-19T14:26:52.1798212Z <a id="repricer.tests.test_imports"></a>
2025-08-19T14:26:52.1798393Z 
2025-08-19T14:26:52.1798477Z # repricer.tests.test\_imports
2025-08-19T14:26:52.1798616Z 
2025-08-19T14:26:52.1798708Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T14:26:52.1798882Z 
2025-08-19T14:26:52.1798966Z # repricer.tests.test\_smoke
2025-08-19T14:26:52.1799104Z 
2025-08-19T14:26:52.1799193Z <a id="repricer.tests"></a>
2025-08-19T14:26:52.1799326Z 
2025-08-19T14:26:52.1799396Z # repricer.tests
2025-08-19T14:26:52.1799508Z 
2025-08-19T14:26:52.1799575Z <a id="db"></a>
2025-08-19T14:26:52.1799677Z 
2025-08-19T14:26:52.1799739Z # db
2025-08-19T14:26:52.1799834Z 
2025-08-19T14:26:52.1799910Z <a id="db.utils.views"></a>
2025-08-19T14:26:52.1800172Z 
2025-08-19T14:26:52.1800245Z # db.utils.views
2025-08-19T14:26:52.1800349Z 
2025-08-19T14:26:52.1800443Z <a id="db.utils.views.replace_view"></a>
2025-08-19T14:26:52.1800616Z 
2025-08-19T14:26:52.1800683Z #### replace\_view
2025-08-19T14:26:52.1800789Z 
2025-08-19T14:26:52.1800854Z ```python
2025-08-19T14:26:52.1801055Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T14:26:52.1801300Z ```
2025-08-19T14:26:52.1801390Z 
2025-08-19T14:26:52.1801479Z Drop and recreate a SQL view atomically.
2025-08-19T14:26:52.1801644Z 
2025-08-19T14:26:52.1801721Z <a id="db.utils"></a>
2025-08-19T14:26:52.1801837Z 
2025-08-19T14:26:52.1801903Z # db.utils
2025-08-19T14:26:52.1801999Z 
2025-08-19T14:26:52.1802077Z <a id="price_importer"></a>
2025-08-19T14:26:52.1802207Z 
2025-08-19T14:26:52.1802277Z # price\_importer
2025-08-19T14:26:52.1802392Z 
2025-08-19T14:26:52.1802495Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T14:26:52.1802680Z 
2025-08-19T14:26:52.1802778Z # price\_importer.services\_common.dsn
2025-08-19T14:26:52.1803103Z 
2025-08-19T14:26:52.1803231Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T14:26:52.1803447Z 
2025-08-19T14:26:52.1803513Z #### build\_dsn
2025-08-19T14:26:52.1803614Z 
2025-08-19T14:26:52.1803677Z ```python
2025-08-19T14:26:52.1803861Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:26:52.1804086Z ```
2025-08-19T14:26:52.1804175Z 
2025-08-19T14:26:52.1804243Z Return safe DSN.
2025-08-19T14:26:52.1804348Z 
2025-08-19T14:26:52.1804709Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T14:26:52.1804920Z 
2025-08-19T14:26:52.1805048Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T14:26:52.1805264Z 
2025-08-19T14:26:52.1805377Z # price\_importer.services\_common.models\_vendor
2025-08-19T14:26:52.1805570Z 
2025-08-19T14:26:52.1805677Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T14:26:52.1806039Z 
2025-08-19T14:26:52.1806161Z # price\_importer.services\_common.db\_url
2025-08-19T14:26:52.1806357Z 
2025-08-19T14:26:52.1806501Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T14:26:52.1806722Z 
2025-08-19T14:26:52.1806792Z #### build\_url
2025-08-19T14:26:52.1806902Z 
2025-08-19T14:26:52.1806967Z ```python
2025-08-19T14:26:52.1807147Z def build_url(async_: bool = True) -> str
2025-08-19T14:26:52.1807383Z ```
2025-08-19T14:26:52.1807466Z 
2025-08-19T14:26:52.1807569Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:26:52.1807746Z 
2025-08-19T14:26:52.1807857Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T14:26:52.1808048Z 
2025-08-19T14:26:52.1808149Z # price\_importer.services\_common.keepa
2025-08-19T14:26:52.1808322Z 
2025-08-19T14:26:52.1808424Z <a id="price_importer.services_common.llm"></a>
2025-08-19T14:26:52.1808613Z 
2025-08-19T14:26:52.1808703Z # price\_importer.services\_common.llm
2025-08-19T14:26:52.1808869Z 
2025-08-19T14:26:52.1808993Z <a id="price_importer.services_common.settings"></a>
2025-08-19T14:26:52.1809200Z 
2025-08-19T14:26:52.1809305Z # price\_importer.services\_common.settings
2025-08-19T14:26:52.1809486Z 
2025-08-19T14:26:52.1809589Z <a id="price_importer.services_common.db"></a>
2025-08-19T14:26:52.1809772Z 
2025-08-19T14:26:52.1809864Z # price\_importer.services\_common.db
2025-08-19T14:26:52.1810032Z 
2025-08-19T14:26:52.1810190Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T14:26:52.1810434Z 
2025-08-19T14:26:52.1810524Z #### build\_sqlalchemy\_url
2025-08-19T14:26:52.1810657Z 
2025-08-19T14:26:52.1810723Z ```python
2025-08-19T14:26:52.1810904Z def build_sqlalchemy_url() -> str
2025-08-19T14:26:52.1811117Z ```
2025-08-19T14:26:52.1811211Z 
2025-08-19T14:26:52.1811307Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:26:52.1811480Z 
2025-08-19T14:26:52.1811625Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T14:26:52.1811862Z 
2025-08-19T14:26:52.1811938Z #### build\_asyncpg\_dsn
2025-08-19T14:26:52.1812063Z 
2025-08-19T14:26:52.1812272Z ```python
2025-08-19T14:26:52.1812447Z def build_asyncpg_dsn() -> str
2025-08-19T14:26:52.1812649Z ```
2025-08-19T14:26:52.1812730Z 
2025-08-19T14:26:52.1812860Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:26:52.1813076Z 
2025-08-19T14:26:52.1813205Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T14:26:52.1813419Z 
2025-08-19T14:26:52.1813491Z #### refresh\_mvs
2025-08-19T14:26:52.1813596Z 
2025-08-19T14:26:52.1813662Z ```python
2025-08-19T14:26:52.1813862Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:26:52.1814117Z ```
2025-08-19T14:26:52.1814203Z 
2025-08-19T14:26:52.1814340Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:26:52.1814556Z 
2025-08-19T14:26:52.1814652Z <a id="price_importer.services_common"></a>
2025-08-19T14:26:52.1814833Z 
2025-08-19T14:26:52.1814922Z # price\_importer.services\_common
2025-08-19T14:26:52.1815075Z 
2025-08-19T14:26:52.1815187Z <a id="price_importer.services_common.base"></a>
2025-08-19T14:26:52.1815496Z 
2025-08-19T14:26:52.1815588Z # price\_importer.services\_common.base
2025-08-19T14:26:52.1815761Z 
2025-08-19T14:26:52.1815855Z <a id="price_importer.normaliser"></a>
2025-08-19T14:26:52.1816226Z 
2025-08-19T14:26:52.1816318Z # price\_importer.normaliser
2025-08-19T14:26:52.1816467Z 
2025-08-19T14:26:52.1816574Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T14:26:52.1816759Z 
2025-08-19T14:26:52.1816857Z # price\_importer.common.models\_vendor
2025-08-19T14:26:52.1817024Z 
2025-08-19T14:26:52.1817118Z <a id="price_importer.common.db_url"></a>
2025-08-19T14:26:52.1817294Z 
2025-08-19T14:26:52.1817381Z # price\_importer.common.db\_url
2025-08-19T14:26:52.1817530Z 
2025-08-19T14:26:52.1817636Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T14:26:52.1817833Z 
2025-08-19T14:26:52.1817901Z #### make\_dsn
2025-08-19T14:26:52.1818002Z 
2025-08-19T14:26:52.1818072Z ```python
2025-08-19T14:26:52.1818245Z def make_dsn(async_: bool = False) -> str
2025-08-19T14:26:52.1818487Z ```
2025-08-19T14:26:52.1818569Z 
2025-08-19T14:26:52.1818689Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T14:26:52.1818899Z 
2025-08-19T14:26:52.1819009Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T14:26:52.1819202Z 
2025-08-19T14:26:52.1819275Z #### build\_url
2025-08-19T14:26:52.1819378Z 
2025-08-19T14:26:52.1819441Z ```python
2025-08-19T14:26:52.1819626Z def build_url(async_: bool = False) -> str
2025-08-19T14:26:52.1819853Z ```
2025-08-19T14:26:52.1819940Z 
2025-08-19T14:26:52.1820060Z Return Postgres DSN built from environment variables.
2025-08-19T14:26:52.1820261Z 
2025-08-19T14:26:52.1820349Z <a id="price_importer.common"></a>
2025-08-19T14:26:52.1820513Z 
2025-08-19T14:26:52.1820593Z # price\_importer.common
2025-08-19T14:26:52.1820722Z 
2025-08-19T14:26:52.1820835Z <a id="price_importer.common.base"></a>
2025-08-19T14:26:52.1821002Z 
2025-08-19T14:26:52.1821092Z # price\_importer.common.base
2025-08-19T14:26:52.1821243Z 
2025-08-19T14:26:52.1821348Z <a id="price_importer.tests.conftest"></a>
2025-08-19T14:26:52.1821530Z 
2025-08-19T14:26:52.1821619Z # price\_importer.tests.conftest
2025-08-19T14:26:52.1821777Z 
2025-08-19T14:26:52.1821878Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T14:26:52.1822097Z 
2025-08-19T14:26:52.1822197Z # price\_importer.tests.test\_reader
2025-08-19T14:26:52.1822358Z 
2025-08-19T14:26:52.1822461Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T14:26:52.1822655Z 
2025-08-19T14:26:52.1822749Z # price\_importer.tests.test\_imports
2025-08-19T14:26:52.1822910Z 
2025-08-19T14:26:52.1823012Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T14:26:52.1823193Z 
2025-08-19T14:26:52.1823277Z # price\_importer.tests.test\_smoke
2025-08-19T14:26:52.1823435Z 
2025-08-19T14:26:52.1823552Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T14:26:52.1823777Z 
2025-08-19T14:26:52.1823871Z # price\_importer.tests.test\_normaliser
2025-08-19T14:26:52.1824046Z 
2025-08-19T14:26:52.1824129Z <a id="price_importer.tests"></a>
2025-08-19T14:26:52.1824430Z 
2025-08-19T14:26:52.1824510Z # price\_importer.tests
2025-08-19T14:26:52.1824642Z 
2025-08-19T14:26:52.1824729Z <a id="price_importer.reader"></a>
2025-08-19T14:26:52.1824882Z 
2025-08-19T14:26:52.1824970Z # price\_importer.reader
2025-08-19T14:26:52.1825097Z 
2025-08-19T14:26:52.1825188Z <a id="price_importer.repository"></a>
2025-08-19T14:26:52.1825361Z 
2025-08-19T14:26:52.1825445Z # price\_importer.repository
2025-08-19T14:26:52.1825587Z 
2025-08-19T14:26:52.1825671Z <a id="price_importer.import"></a>
2025-08-19T14:26:52.1825830Z 
2025-08-19T14:26:52.1826138Z # price\_importer.import
2025-08-19T14:26:52.1826273Z 
2025-08-19T14:26:52.1826351Z <a id="fees_h10"></a>
2025-08-19T14:26:52.1826465Z 
2025-08-19T14:26:52.1826529Z # fees\_h10
2025-08-19T14:26:52.1826623Z 
2025-08-19T14:26:52.1826708Z <a id="fees_h10.worker"></a>
2025-08-19T14:26:52.1826843Z 
2025-08-19T14:26:52.1826912Z # fees\_h10.worker
2025-08-19T14:26:52.1827022Z 
2025-08-19T14:26:52.1827246Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T14:26:52.1827434Z 
2025-08-19T14:26:52.1827517Z #### list\_active\_asins
2025-08-19T14:26:52.1827638Z 
2025-08-19T14:26:52.1827703Z ```python
2025-08-19T14:26:52.1827880Z def list_active_asins() -> list[str]
2025-08-19T14:26:52.1828093Z ```
2025-08-19T14:26:52.1828181Z 
2025-08-19T14:26:52.1828293Z Return known ASINs or an empty list if unavailable.
2025-08-19T14:26:52.1828489Z 
2025-08-19T14:26:52.1828574Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T14:26:52.1828738Z 
2025-08-19T14:26:52.1828820Z # fees\_h10.tests.test\_smoke
2025-08-19T14:26:52.1828957Z 
2025-08-19T14:26:52.1829041Z <a id="fees_h10.tests"></a>
2025-08-19T14:26:52.1829171Z 
2025-08-19T14:26:52.1829238Z # fees\_h10.tests
2025-08-19T14:26:52.1829349Z 
2025-08-19T14:26:52.1829424Z <a id="fees_h10.client"></a>
2025-08-19T14:26:52.1829557Z 
2025-08-19T14:26:52.1829625Z # fees\_h10.client
2025-08-19T14:26:52.1829736Z 
2025-08-19T14:26:52.1829818Z <a id="fees_h10.repository"></a>
2025-08-19T14:26:52.1829975Z 
2025-08-19T14:26:52.1830054Z # fees\_h10.repository
2025-08-19T14:26:52.1830175Z 
2025-08-19T14:26:52.1830246Z <a id="emailer"></a>
2025-08-19T14:26:52.1830358Z 
2025-08-19T14:26:52.1830433Z # emailer
2025-08-19T14:26:52.1830526Z 
2025-08-19T14:26:52.1830633Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T14:26:52.1830820Z 
2025-08-19T14:26:52.1830910Z # emailer.tests.test\_import\_emailer
2025-08-19T14:26:52.1831069Z 
2025-08-19T14:26:52.1831166Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T14:26:52.1831325Z 
2025-08-19T14:26:52.1831405Z # emailer.tests.test\_smoke
2025-08-19T14:26:52.1831540Z 
2025-08-19T14:26:52.1831626Z <a id="emailer.tests"></a>
2025-08-19T14:26:52.1831756Z 
2025-08-19T14:26:52.1831823Z # emailer.tests
2025-08-19T14:26:52.1831932Z 
2025-08-19T14:26:52.1832018Z <a id="emailer.generate_body"></a>
2025-08-19T14:26:52.1832169Z 
2025-08-19T14:26:52.1832247Z # emailer.generate\_body
2025-08-19T14:26:52.1832383Z 
2025-08-19T14:26:52.1832457Z <a id="llm_server"></a>
2025-08-19T14:26:52.1832591Z 
2025-08-19T14:26:52.1832667Z # llm\_server
2025-08-19T14:26:52.1832768Z 
2025-08-19T14:26:52.1832848Z <a id="llm_server.app"></a>
2025-08-19T14:26:52.1832987Z 
2025-08-19T14:26:52.1833057Z # llm\_server.app
2025-08-19T14:26:52.1833164Z 
