2025-08-20T18:56:36.5571032Z ##[group]Run pydoc-markdown
2025-08-20T18:56:36.5571332Z [36;1mpydoc-markdown[0m
2025-08-20T18:56:36.5612756Z shell: /usr/bin/bash -e {0}
2025-08-20T18:56:36.5613005Z env:
2025-08-20T18:56:36.5613247Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:56:36.5613661Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T18:56:36.5614055Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:56:36.5614404Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:56:36.5614761Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T18:56:36.5615107Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T18:56:36.5615397Z ##[endgroup]
2025-08-20T18:56:36.9192597Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T18:56:36.9193380Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T18:56:36.9193774Z In "pydoc-markdown.yml"
2025-08-20T18:56:36.9194092Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T18:56:36.9194597Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T18:56:36.9195192Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T18:56:36.9195604Z 
2025-08-20T18:56:37.2761004Z <a id="__init__"></a>
2025-08-20T18:56:37.2761437Z 
2025-08-20T18:56:37.2761628Z # \_\_init\_\_
2025-08-20T18:56:37.2761923Z 
2025-08-20T18:56:37.2762115Z <a id="api"></a>
2025-08-20T18:56:37.2762419Z 
2025-08-20T18:56:37.2762610Z # api
2025-08-20T18:56:37.2762846Z 
2025-08-20T18:56:37.2763044Z <a id="api.errors"></a>
2025-08-20T18:56:37.2763400Z 
2025-08-20T18:56:37.2763589Z # api.errors
2025-08-20T18:56:37.2763879Z 
2025-08-20T18:56:37.2764124Z <a id="api.sentry_config"></a>
2025-08-20T18:56:37.2764567Z 
2025-08-20T18:56:37.2764779Z # api.sentry\_config
2025-08-20T18:56:37.2765118Z 
2025-08-20T18:56:37.2765418Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T18:56:37.2766389Z 
2025-08-20T18:56:37.2767306Z # api.tests.test\_stats\_contracts
2025-08-20T18:56:37.2767732Z 
2025-08-20T18:56:37.2767912Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T18:56:37.2768208Z 
2025-08-20T18:56:37.2768343Z # api.tests.test\_sentry\_scrub
2025-08-20T18:56:37.2768603Z 
2025-08-20T18:56:37.2768758Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T18:56:37.2769044Z 
2025-08-20T18:56:37.2769183Z # api.tests.test\_roi\_basic\_auth
2025-08-20T18:56:37.2769454Z 
2025-08-20T18:56:37.2769607Z <a id="api.tests.test_errors_json"></a>
2025-08-20T18:56:37.2769864Z 
2025-08-20T18:56:37.2769984Z # api.tests.test\_errors\_json
2025-08-20T18:56:37.2770188Z 
2025-08-20T18:56:37.2770301Z <a id="api.tests.test_llm"></a>
2025-08-20T18:56:37.2770507Z 
2025-08-20T18:56:37.2770697Z # api.tests.test\_llm
2025-08-20T18:56:37.2770868Z 
2025-08-20T18:56:37.2770995Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T18:56:37.2771228Z 
2025-08-20T18:56:37.2771337Z # api.tests.test\_roi\_filters
2025-08-20T18:56:37.2771538Z 
2025-08-20T18:56:37.2771669Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T18:56:37.2771916Z 
2025-08-20T18:56:37.2772025Z # api.tests.test\_sentry\_event
2025-08-20T18:56:37.2772228Z 
2025-08-20T18:56:37.2772405Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T18:56:37.2772701Z 
2025-08-20T18:56:37.2772815Z ## DummyTransport Objects
2025-08-20T18:56:37.2773005Z 
2025-08-20T18:56:37.2773096Z ```python
2025-08-20T18:56:37.2773338Z class DummyTransport()
2025-08-20T18:56:37.2773593Z ```
2025-08-20T18:56:37.2773716Z 
2025-08-20T18:56:37.2773964Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T18:56:37.2774345Z 
2025-08-20T18:56:37.2774445Z #### capture\_envelope
2025-08-20T18:56:37.2774626Z 
2025-08-20T18:56:37.2774716Z ```python
2025-08-20T18:56:37.2774965Z def capture_envelope(envelope)
2025-08-20T18:56:37.2775255Z ```
2025-08-20T18:56:37.2775374Z 
2025-08-20T18:56:37.2775557Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T18:56:37.2775862Z 
2025-08-20T18:56:37.2775978Z <a id="api.tests.test_cors"></a>
2025-08-20T18:56:37.2776470Z 
2025-08-20T18:56:37.2776750Z # api.tests.test\_cors
2025-08-20T18:56:37.2776918Z 
2025-08-20T18:56:37.2777035Z <a id="api.tests.test_imports"></a>
2025-08-20T18:56:37.2777267Z 
2025-08-20T18:56:37.2777376Z # api.tests.test\_imports
2025-08-20T18:56:37.2777558Z 
2025-08-20T18:56:37.2777692Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T18:56:37.2777927Z 
2025-08-20T18:56:37.2778040Z # api.tests.test\_rate\_limit
2025-08-20T18:56:37.2778246Z 
2025-08-20T18:56:37.2778381Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T18:56:37.2778630Z 
2025-08-20T18:56:37.2778720Z #### app
2025-08-20T18:56:37.2778853Z 
2025-08-20T18:56:37.2778945Z noqa: E402
2025-08-20T18:56:37.2779075Z 
2025-08-20T18:56:37.2779202Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T18:56:37.2779432Z 
2025-08-20T18:56:37.2779543Z # api.tests.test\_stats\_sql
2025-08-20T18:56:37.2779748Z 
2025-08-20T18:56:37.2779876Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T18:56:37.2780122Z 
2025-08-20T18:56:37.2780234Z # api.tests.test\_entrypoint
2025-08-20T18:56:37.2780438Z 
2025-08-20T18:56:37.2780592Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T18:56:37.2780868Z 
2025-08-20T18:56:37.2781003Z # api.tests.test\_stats\_future\_contracts
2025-08-20T18:56:37.2781222Z 
2025-08-20T18:56:37.2781315Z <a id="api.tests.test_health"></a>
2025-08-20T18:56:37.2781485Z 
2025-08-20T18:56:37.2781568Z # api.tests.test\_health
2025-08-20T18:56:37.2781710Z 
2025-08-20T18:56:37.2781799Z <a id="api.tests.test_score"></a>
2025-08-20T18:56:37.2781965Z 
2025-08-20T18:56:37.2782044Z # api.tests.test\_score
2025-08-20T18:56:37.2782175Z 
2025-08-20T18:56:37.2782268Z <a id="api.logging_config"></a>
2025-08-20T18:56:37.2782419Z 
2025-08-20T18:56:37.2782495Z # api.logging\_config
2025-08-20T18:56:37.2782626Z 
2025-08-20T18:56:37.2782710Z <a id="api.migrations.env"></a>
2025-08-20T18:56:37.2782859Z 
2025-08-20T18:56:37.2783068Z # api.migrations.env
2025-08-20T18:56:37.2783201Z 
2025-08-20T18:56:37.2783331Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T18:56:37.2783543Z 
2025-08-20T18:56:37.2783664Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T18:56:37.2783862Z 
2025-08-20T18:56:37.2783975Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T18:56:37.2784183Z 
2025-08-20T18:56:37.2784283Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T18:56:37.2784466Z 
2025-08-20T18:56:37.2784626Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T18:56:37.2784887Z 
2025-08-20T18:56:37.2785036Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T18:56:37.2785265Z 
2025-08-20T18:56:37.2785401Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T18:56:37.2785613Z 
2025-08-20T18:56:37.2785727Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T18:56:37.2785927Z 
2025-08-20T18:56:37.2786052Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T18:56:37.2786340Z 
2025-08-20T18:56:37.2786459Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T18:56:37.2786821Z 
2025-08-20T18:56:37.2786956Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T18:56:37.2787179Z 
2025-08-20T18:56:37.2787295Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T18:56:37.2787497Z 
2025-08-20T18:56:37.2787625Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T18:56:37.2787834Z 
2025-08-20T18:56:37.2787945Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T18:56:37.2788147Z 
2025-08-20T18:56:37.2788275Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T18:56:37.2788490Z 
2025-08-20T18:56:37.2788600Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T18:56:37.2788804Z 
2025-08-20T18:56:37.2788951Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T18:56:37.2789192Z 
2025-08-20T18:56:37.2789334Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T18:56:37.2789556Z 
2025-08-20T18:56:37.2789688Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T18:56:37.2790065Z 
2025-08-20T18:56:37.2790181Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T18:56:37.2790383Z 
2025-08-20T18:56:37.2790528Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T18:56:37.2790764Z 
2025-08-20T18:56:37.2790883Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T18:56:37.2791083Z 
2025-08-20T18:56:37.2791204Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T18:56:37.2791394Z 
2025-08-20T18:56:37.2791493Z # api.migrations.versions.0001\_baseline
2025-08-20T18:56:37.2791914Z 
2025-08-20T18:56:37.2792085Z <a id="api.migrations.versions"></a>
2025-08-20T18:56:37.2792393Z 
2025-08-20T18:56:37.2792551Z # api.migrations.versions
2025-08-20T18:56:37.2792798Z 
2025-08-20T18:56:37.2792940Z <a id="api.migrations"></a>
2025-08-20T18:56:37.2793190Z 
2025-08-20T18:56:37.2793331Z # api.migrations
2025-08-20T18:56:37.2793542Z 
2025-08-20T18:56:37.2793672Z <a id="api.db"></a>
2025-08-20T18:56:37.2793857Z 
2025-08-20T18:56:37.2793928Z # api.db
2025-08-20T18:56:37.2794022Z 
2025-08-20T18:56:37.2794110Z <a id="api.routes.score"></a>
2025-08-20T18:56:37.2794264Z 
2025-08-20T18:56:37.2794339Z # api.routes.score
2025-08-20T18:56:37.2794451Z 
2025-08-20T18:56:37.2794540Z <a id="api.routes.stats"></a>
2025-08-20T18:56:37.2794678Z 
2025-08-20T18:56:37.2794751Z # api.routes.stats
2025-08-20T18:56:37.2794866Z 
2025-08-20T18:56:37.2794945Z <a id="api.routes.roi"></a>
2025-08-20T18:56:37.2795079Z 
2025-08-20T18:56:37.2795149Z # api.routes.roi
2025-08-20T18:56:37.2795265Z 
2025-08-20T18:56:37.2795351Z <a id="api.routes.health"></a>
2025-08-20T18:56:37.2795495Z 
2025-08-20T18:56:37.2795575Z # api.routes.health
2025-08-20T18:56:37.2795691Z 
2025-08-20T18:56:37.2795789Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T18:56:37.2795961Z 
2025-08-20T18:56:37.2796038Z #### MAX\_SKEW
2025-08-20T18:56:37.2796141Z 
2025-08-20T18:56:37.2796379Z seconds
2025-08-20T18:56:37.2796619Z 
2025-08-20T18:56:37.2796718Z <a id="api.routes.health.health"></a>
2025-08-20T18:56:37.2796889Z 
2025-08-20T18:56:37.2796963Z #### health
2025-08-20T18:56:37.2797059Z 
2025-08-20T18:56:37.2797130Z ```python
2025-08-20T18:56:37.2797348Z @router.get("/health", include_in_schema=False)
2025-08-20T18:56:37.2797763Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T18:56:37.2798124Z ```
2025-08-20T18:56:37.2798213Z 
2025-08-20T18:56:37.2798339Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T18:56:37.2798558Z 
2025-08-20T18:56:37.2798654Z <a id="api.routes.repository"></a>
2025-08-20T18:56:37.2798822Z 
2025-08-20T18:56:37.2798913Z # api.routes.repository
2025-08-20T18:56:37.2799043Z 
2025-08-20T18:56:37.2799122Z <a id="api.routes"></a>
2025-08-20T18:56:37.2799243Z 
2025-08-20T18:56:37.2799318Z # api.routes
2025-08-20T18:56:37.2799421Z 
2025-08-20T18:56:37.2799504Z <a id="api.models.fee"></a>
2025-08-20T18:56:37.2799652Z 
2025-08-20T18:56:37.2799724Z # api.models.fee
2025-08-20T18:56:37.2799845Z 
2025-08-20T18:56:37.2799921Z <a id="api.models"></a>
2025-08-20T18:56:37.2800046Z 
2025-08-20T18:56:37.2800116Z # api.models
2025-08-20T18:56:37.2800216Z 
2025-08-20T18:56:37.2800308Z <a id="api.roi_repository"></a>
2025-08-20T18:56:37.2800463Z 
2025-08-20T18:56:37.2800540Z # api.roi\_repository
2025-08-20T18:56:37.2800672Z 
2025-08-20T18:56:37.2800747Z <a id="api.main"></a>
2025-08-20T18:56:37.2800862Z 
2025-08-20T18:56:37.2800936Z # api.main
2025-08-20T18:56:37.2801031Z 
2025-08-20T18:56:37.2801110Z <a id="api.main.ready"></a>
2025-08-20T18:56:37.2801251Z 
2025-08-20T18:56:37.2801319Z #### ready
2025-08-20T18:56:37.2801411Z 
2025-08-20T18:56:37.2801479Z ```python
2025-08-20T18:56:37.2801759Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T18:56:37.2802210Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T18:56:37.2802566Z                                                                       str]
2025-08-20T18:56:37.2802812Z ```
2025-08-20T18:56:37.2803025Z 
2025-08-20T18:56:37.2803129Z Return 200 only when migrations are at head.
2025-08-20T18:56:37.2803313Z 
2025-08-20T18:56:37.2803388Z <a id="api.config"></a>
2025-08-20T18:56:37.2803510Z 
2025-08-20T18:56:37.2803584Z # api.config
2025-08-20T18:56:37.2803682Z 
2025-08-20T18:56:37.2803760Z <a id="api.security"></a>
2025-08-20T18:56:37.2803889Z 
2025-08-20T18:56:37.2803965Z # api.security
2025-08-20T18:56:37.2804067Z 
2025-08-20T18:56:37.2804135Z <a id="etl"></a>
2025-08-20T18:56:37.2804246Z 
2025-08-20T18:56:37.2804310Z # etl
2025-08-20T18:56:37.2804404Z 
2025-08-20T18:56:37.2804490Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T18:56:37.2804646Z 
2025-08-20T18:56:37.2804722Z # etl.fba\_fee\_ingestor
2025-08-20T18:56:37.2804848Z 
2025-08-20T18:56:37.2804938Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T18:56:37.2805086Z 
2025-08-20T18:56:37.2805165Z # etl.sp\_fees\_ingestor
2025-08-20T18:56:37.2805301Z 
2025-08-20T18:56:37.2805383Z <a id="etl.keepa_ingestor"></a>
2025-08-20T18:56:37.2805529Z 
2025-08-20T18:56:37.2805605Z # etl.keepa\_ingestor
2025-08-20T18:56:37.2805731Z 
2025-08-20T18:56:37.2805804Z <a id="etl.db"></a>
2025-08-20T18:56:37.2805913Z 
2025-08-20T18:56:37.2805985Z # etl.db
2025-08-20T18:56:37.2806075Z 
2025-08-20T18:56:37.2806161Z <a id="etl.dialects.schemas"></a>
2025-08-20T18:56:37.2806309Z 
2025-08-20T18:56:37.2806394Z # etl.dialects.schemas
2025-08-20T18:56:37.2806673Z 
2025-08-20T18:56:37.2806787Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T18:56:37.2806986Z 
2025-08-20T18:56:37.2807081Z # etl.dialects.amazon\_reimbursements
2025-08-20T18:56:37.2807248Z 
2025-08-20T18:56:37.2807352Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T18:56:37.2807530Z 
2025-08-20T18:56:37.2807620Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T18:56:37.2807781Z 
2025-08-20T18:56:37.2807876Z <a id="etl.dialects.test_generic"></a>
2025-08-20T18:56:37.2808037Z 
2025-08-20T18:56:37.2808241Z # etl.dialects.test\_generic
2025-08-20T18:56:37.2808389Z 
2025-08-20T18:56:37.2808486Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T18:56:37.2808655Z 
2025-08-20T18:56:37.2808745Z # etl.dialects.amazon\_returns
2025-08-20T18:56:37.2808888Z 
2025-08-20T18:56:37.2808987Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T18:56:37.2809162Z 
2025-08-20T18:56:37.2809258Z # etl.dialects.amazon\_fee\_preview
2025-08-20T18:56:37.2809416Z 
2025-08-20T18:56:37.2809526Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T18:56:37.2809725Z 
2025-08-20T18:56:37.2809818Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T18:56:37.2809986Z 
2025-08-20T18:56:37.2810089Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T18:56:37.2810272Z 
2025-08-20T18:56:37.2810363Z # etl.dialects.amazon\_settlements
2025-08-20T18:56:37.2810522Z 
2025-08-20T18:56:37.2810607Z <a id="etl.dialects"></a>
2025-08-20T18:56:37.2810736Z 
2025-08-20T18:56:37.2810807Z # etl.dialects
2025-08-20T18:56:37.2810916Z 
2025-08-20T18:56:37.2810990Z <a id="ingest"></a>
2025-08-20T18:56:37.2811102Z 
2025-08-20T18:56:37.2811174Z # ingest
2025-08-20T18:56:37.2811272Z 
2025-08-20T18:56:37.2811359Z <a id="ingest.maintenance"></a>
2025-08-20T18:56:37.2811506Z 
2025-08-20T18:56:37.2811590Z # ingest.maintenance
2025-08-20T18:56:37.2811708Z 
2025-08-20T18:56:37.2811790Z <a id="ingest.copy_loader"></a>
2025-08-20T18:56:37.2811936Z 
2025-08-20T18:56:37.2812013Z # ingest.copy\_loader
2025-08-20T18:56:37.2812130Z 
2025-08-20T18:56:37.2812236Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T18:56:37.2812427Z 
2025-08-20T18:56:37.2812504Z #### copy\_df\_via\_temp
2025-08-20T18:56:37.2812632Z 
2025-08-20T18:56:37.2812707Z ```python
2025-08-20T18:56:37.2812887Z def copy_df_via_temp(engine: Engine,
2025-08-20T18:56:37.2813142Z                      df: pd.DataFrame,
2025-08-20T18:56:37.2813383Z                      target_table: str,
2025-08-20T18:56:37.2813616Z                      *,
2025-08-20T18:56:37.2813829Z                      target_schema: str | None = None,
2025-08-20T18:56:37.2814103Z                      columns: Sequence[str],
2025-08-20T18:56:37.2814497Z                      conflict_cols: Sequence[str] | None = None,
2025-08-20T18:56:37.2814774Z                      analyze_after: bool = False,
2025-08-20T18:56:37.2815047Z                      connection: Any | None = None) -> int
2025-08-20T18:56:37.2815289Z ```
2025-08-20T18:56:37.2815383Z 
2025-08-20T18:56:37.2815543Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T18:56:37.2815779Z 
2025-08-20T18:56:37.2815870Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T18:56:37.2816038Z 
2025-08-20T18:56:37.2816121Z # ingest.tests.test\_smoke
2025-08-20T18:56:37.2816255Z 
2025-08-20T18:56:37.2816341Z <a id="ingest.tests"></a>
2025-08-20T18:56:37.2816469Z 
2025-08-20T18:56:37.2816643Z # ingest.tests
2025-08-20T18:56:37.2816747Z 
2025-08-20T18:56:37.2816840Z <a id="ingest.upload_router"></a>
2025-08-20T18:56:37.2816992Z 
2025-08-20T18:56:37.2817075Z # ingest.upload\_router
2025-08-20T18:56:37.2817205Z 
2025-08-20T18:56:37.2817289Z <a id="ingest.email_watcher"></a>
2025-08-20T18:56:37.2817439Z 
2025-08-20T18:56:37.2817520Z # ingest.email\_watcher
2025-08-20T18:56:37.2817639Z 
2025-08-20T18:56:37.2817729Z <a id="ingest.email_watcher.main"></a>
2025-08-20T18:56:37.2817892Z 
2025-08-20T18:56:37.2817966Z #### main
2025-08-20T18:56:37.2818057Z 
2025-08-20T18:56:37.2818123Z ```python
2025-08-20T18:56:37.2818304Z def main() -> dict[str, str]
2025-08-20T18:56:37.2818504Z ```
2025-08-20T18:56:37.2818599Z 
2025-08-20T18:56:37.2818746Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T18:56:37.2818972Z 
2025-08-20T18:56:37.2819113Z Returns {"status": "success"} when processing completes.
2025-08-20T18:56:37.2819325Z 
2025-08-20T18:56:37.2819407Z <a id="ingest.tasks"></a>
2025-08-20T18:56:37.2819540Z 
2025-08-20T18:56:37.2819610Z # ingest.tasks
2025-08-20T18:56:37.2819768Z 
2025-08-20T18:56:37.2819875Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T18:56:37.2820176Z 
2025-08-20T18:56:37.2820259Z #### task\_import\_file
2025-08-20T18:56:37.2820382Z 
2025-08-20T18:56:37.2820449Z ```python
2025-08-20T18:56:37.2820671Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T18:56:37.2820955Z def task_import_file(self: Any,
2025-08-20T18:56:37.2821177Z                      uri: str,
2025-08-20T18:56:37.2821402Z                      report_type: str | None = None,
2025-08-20T18:56:37.2821681Z                      force: bool = False) -> dict[str, Any]
2025-08-20T18:56:37.2821925Z ```
2025-08-20T18:56:37.2822018Z 
2025-08-20T18:56:37.2822152Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T18:56:37.2822363Z 
2025-08-20T18:56:37.2822459Z <a id="ingest.celery_app"></a>
2025-08-20T18:56:37.2822601Z 
2025-08-20T18:56:37.2822677Z # ingest.celery\_app
2025-08-20T18:56:37.2822801Z 
2025-08-20T18:56:37.2822886Z <a id="ingest.ingest_router"></a>
2025-08-20T18:56:37.2823035Z 
2025-08-20T18:56:37.2823113Z # ingest.ingest\_router
2025-08-20T18:56:37.2823247Z 
2025-08-20T18:56:37.2823327Z <a id="logistics_etl"></a>
2025-08-20T18:56:37.2823463Z 
2025-08-20T18:56:37.2823544Z # logistics\_etl
2025-08-20T18:56:37.2823654Z 
2025-08-20T18:56:37.2823734Z Daily logistics ETL job.
2025-08-20T18:56:37.2823860Z 
2025-08-20T18:56:37.2823951Z <a id="logistics_etl.__main__"></a>
2025-08-20T18:56:37.2824104Z 
2025-08-20T18:56:37.2824187Z # logistics\_etl.\_\_main\_\_
2025-08-20T18:56:37.2824335Z 
2025-08-20T18:56:37.2824417Z <a id="logistics_etl.dsn"></a>
2025-08-20T18:56:37.2824555Z 
2025-08-20T18:56:37.2824636Z # logistics\_etl.dsn
2025-08-20T18:56:37.2824750Z 
2025-08-20T18:56:37.2824870Z Local DSN builder to avoid cross-service dependency.
2025-08-20T18:56:37.2825073Z 
2025-08-20T18:56:37.2825176Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T18:56:37.2825344Z 
2025-08-20T18:56:37.2825413Z #### build\_dsn
2025-08-20T18:56:37.2825526Z 
2025-08-20T18:56:37.2825593Z ```python
2025-08-20T18:56:37.2825775Z def build_dsn(sync: bool = True) -> str
2025-08-20T18:56:37.2826012Z ```
2025-08-20T18:56:37.2826100Z 
2025-08-20T18:56:37.2826367Z Return a Postgres DSN assembled from environment variables.
2025-08-20T18:56:37.2826721Z 
2025-08-20T18:56:37.2826874Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T18:56:37.2827270Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T18:56:37.2827615Z error when any required variable is missing.
2025-08-20T18:56:37.2827799Z 
2025-08-20T18:56:37.2827896Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T18:56:37.2828069Z 
2025-08-20T18:56:37.2828158Z # logistics\_etl.tests.conftest
2025-08-20T18:56:37.2828303Z 
2025-08-20T18:56:37.2828409Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T18:56:37.2828597Z 
2025-08-20T18:56:37.2828695Z # logistics\_etl.tests.test\_repository
2025-08-20T18:56:37.2828858Z 
2025-08-20T18:56:37.2828951Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T18:56:37.2829128Z 
2025-08-20T18:56:37.2829212Z # logistics\_etl.tests.test\_cron
2025-08-20T18:56:37.2829372Z 
2025-08-20T18:56:37.2829475Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T18:56:37.2829659Z 
2025-08-20T18:56:37.2829747Z # logistics\_etl.tests.test\_imports
2025-08-20T18:56:37.2829907Z 
2025-08-20T18:56:37.2830009Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T18:56:37.2830180Z 
2025-08-20T18:56:37.2830274Z # logistics\_etl.tests.test\_smoke
2025-08-20T18:56:37.2830433Z 
2025-08-20T18:56:37.2830530Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T18:56:37.2830699Z 
2025-08-20T18:56:37.2830791Z # logistics\_etl.tests.test\_client
2025-08-20T18:56:37.2830945Z 
2025-08-20T18:56:37.2831029Z <a id="logistics_etl.tests"></a>
2025-08-20T18:56:37.2831175Z 
2025-08-20T18:56:37.2831255Z # logistics\_etl.tests
2025-08-20T18:56:37.2831376Z 
2025-08-20T18:56:37.2831458Z <a id="logistics_etl.flow"></a>
2025-08-20T18:56:37.2831605Z 
2025-08-20T18:56:37.2831679Z # logistics\_etl.flow
2025-08-20T18:56:37.2831797Z 
2025-08-20T18:56:37.2831886Z <a id="logistics_etl.client"></a>
2025-08-20T18:56:37.2832159Z 
2025-08-20T18:56:37.2894654Z # logistics\_etl.client
2025-08-20T18:56:37.2895008Z 
2025-08-20T18:56:37.2895188Z <a id="logistics_etl.cron"></a>
2025-08-20T18:56:37.2895536Z 
2025-08-20T18:56:37.2895726Z # logistics\_etl.cron
2025-08-20T18:56:37.2896020Z 
2025-08-20T18:56:37.2896215Z <a id="logistics_etl.db"></a>
2025-08-20T18:56:37.2896807Z 
2025-08-20T18:56:37.2896980Z # logistics\_etl.db
2025-08-20T18:56:37.2897229Z 
2025-08-20T18:56:37.2897420Z <a id="logistics_etl.repository"></a>
2025-08-20T18:56:37.2897781Z 
2025-08-20T18:56:37.2897949Z # logistics\_etl.repository
2025-08-20T18:56:37.2898247Z 
2025-08-20T18:56:37.2898417Z <a id="alert_bot"></a>
2025-08-20T18:56:37.2898653Z 
2025-08-20T18:56:37.2898743Z # alert\_bot
2025-08-20T18:56:37.2898876Z 
2025-08-20T18:56:37.2898993Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T18:56:37.2899212Z 
2025-08-20T18:56:37.2899323Z # alert\_bot.tests.test\_smoke
2025-08-20T18:56:37.2899523Z 
2025-08-20T18:56:37.2899637Z <a id="alert_bot.tests"></a>
2025-08-20T18:56:37.2899821Z 
2025-08-20T18:56:37.2899905Z # alert\_bot.tests
2025-08-20T18:56:37.2900018Z 
2025-08-20T18:56:37.2900105Z <a id="alert_bot.alert_bot"></a>
2025-08-20T18:56:37.2900256Z 
2025-08-20T18:56:37.2900344Z # alert\_bot.alert\_bot
2025-08-20T18:56:37.2900476Z 
2025-08-20T18:56:37.2900561Z <a id="alert_bot.rules"></a>
2025-08-20T18:56:37.2900709Z 
2025-08-20T18:56:37.2900782Z # alert\_bot.rules
2025-08-20T18:56:37.2900894Z 
2025-08-20T18:56:37.2900975Z <a id="common"></a>
2025-08-20T18:56:37.2901090Z 
2025-08-20T18:56:37.2901158Z # common
2025-08-20T18:56:37.2901254Z 
2025-08-20T18:56:37.2901340Z <a id="common.dsn"></a>
2025-08-20T18:56:37.2901470Z 
2025-08-20T18:56:37.2901540Z # common.dsn
2025-08-20T18:56:37.2901653Z 
2025-08-20T18:56:37.2901743Z <a id="common.dsn.build_dsn"></a>
2025-08-20T18:56:37.2901902Z 
2025-08-20T18:56:37.2901971Z #### build\_dsn
2025-08-20T18:56:37.2902088Z 
2025-08-20T18:56:37.2902157Z ```python
2025-08-20T18:56:37.2902358Z def build_dsn(sync: bool = True) -> str
2025-08-20T18:56:37.2902594Z ```
2025-08-20T18:56:37.2902855Z 
2025-08-20T18:56:37.2902993Z Return a Postgres DSN, validating required variables.
2025-08-20T18:56:37.2903208Z 
2025-08-20T18:56:37.2903402Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T18:56:37.2903867Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T18:56:37.2904296Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T18:56:37.2904625Z missing.
2025-08-20T18:56:37.2904721Z 
2025-08-20T18:56:37.2904813Z <a id="common.models_vendor"></a>
2025-08-20T18:56:37.2904971Z 
2025-08-20T18:56:37.2905050Z # common.models\_vendor
2025-08-20T18:56:37.2905182Z 
2025-08-20T18:56:37.2905276Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T18:56:37.2905450Z 
2025-08-20T18:56:37.2905520Z ## Vendor Objects
2025-08-20T18:56:37.2905639Z 
2025-08-20T18:56:37.2905707Z ```python
2025-08-20T18:56:37.2905881Z class Vendor(Base)
2025-08-20T18:56:37.2906055Z ```
2025-08-20T18:56:37.2906144Z 
2025-08-20T18:56:37.2906239Z Vendor of inventory items.
2025-08-20T18:56:37.2906378Z 
2025-08-20T18:56:37.2906645Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T18:56:37.2906851Z 
2025-08-20T18:56:37.2906930Z ## VendorPrice Objects
2025-08-20T18:56:37.2907055Z 
2025-08-20T18:56:37.2907122Z ```python
2025-08-20T18:56:37.2907294Z class VendorPrice(Base)
2025-08-20T18:56:37.2907484Z ```
2025-08-20T18:56:37.2907573Z 
2025-08-20T18:56:37.2907681Z Association table linking vendors to pricing.
2025-08-20T18:56:37.2907868Z 
2025-08-20T18:56:37.2907956Z <a id="common.db_url"></a>
2025-08-20T18:56:37.2908090Z 
2025-08-20T18:56:37.2908162Z # common.db\_url
2025-08-20T18:56:37.2908279Z 
2025-08-20T18:56:37.2908368Z <a id="common.db_url.build_url"></a>
2025-08-20T18:56:37.2908533Z 
2025-08-20T18:56:37.2908603Z #### build\_url
2025-08-20T18:56:37.2908716Z 
2025-08-20T18:56:37.2908782Z ```python
2025-08-20T18:56:37.2908972Z def build_url(async_: bool = True) -> str
2025-08-20T18:56:37.2909328Z ```
2025-08-20T18:56:37.2909418Z 
2025-08-20T18:56:37.2909537Z Return Postgres DSN from environment variables.
2025-08-20T18:56:37.2909735Z 
2025-08-20T18:56:37.2909816Z <a id="common.keepa"></a>
2025-08-20T18:56:37.2909961Z 
2025-08-20T18:56:37.2910034Z # common.keepa
2025-08-20T18:56:37.2910143Z 
2025-08-20T18:56:37.2910226Z <a id="common.llm"></a>
2025-08-20T18:56:37.2910352Z 
2025-08-20T18:56:37.2910421Z # common.llm
2025-08-20T18:56:37.2910520Z 
2025-08-20T18:56:37.2910610Z <a id="common.settings"></a>
2025-08-20T18:56:37.2910751Z 
2025-08-20T18:56:37.2910825Z # common.settings
2025-08-20T18:56:37.2910943Z 
2025-08-20T18:56:37.2911018Z <a id="common.db"></a>
2025-08-20T18:56:37.2911138Z 
2025-08-20T18:56:37.2911207Z # common.db
2025-08-20T18:56:37.2911311Z 
2025-08-20T18:56:37.2911409Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T18:56:37.2911591Z 
2025-08-20T18:56:37.2911679Z #### build\_sqlalchemy\_url
2025-08-20T18:56:37.2911816Z 
2025-08-20T18:56:37.2911885Z ```python
2025-08-20T18:56:37.2912073Z def build_sqlalchemy_url() -> str
2025-08-20T18:56:37.2912348Z ```
2025-08-20T18:56:37.2912453Z 
2025-08-20T18:56:37.2912551Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T18:56:37.2912727Z 
2025-08-20T18:56:37.2912828Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T18:56:37.2912999Z 
2025-08-20T18:56:37.2913079Z #### build\_asyncpg\_dsn
2025-08-20T18:56:37.2913207Z 
2025-08-20T18:56:37.2913283Z ```python
2025-08-20T18:56:37.2913466Z def build_asyncpg_dsn() -> str
2025-08-20T18:56:37.2913680Z ```
2025-08-20T18:56:37.2913768Z 
2025-08-20T18:56:37.2913899Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T18:56:37.2914123Z 
2025-08-20T18:56:37.2914213Z <a id="common.db.refresh_mvs"></a>
2025-08-20T18:56:37.2914369Z 
2025-08-20T18:56:37.2914445Z #### refresh\_mvs
2025-08-20T18:56:37.2914553Z 
2025-08-20T18:56:37.2914619Z ```python
2025-08-20T18:56:37.2914829Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T18:56:37.2915087Z ```
2025-08-20T18:56:37.2915179Z 
2025-08-20T18:56:37.2915438Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T18:56:37.2915660Z 
2025-08-20T18:56:37.2915741Z <a id="common.config"></a>
2025-08-20T18:56:37.2915878Z 
2025-08-20T18:56:37.2915948Z # common.config
2025-08-20T18:56:37.2916055Z 
2025-08-20T18:56:37.2916140Z <a id="common.base"></a>
2025-08-20T18:56:37.2916265Z 
2025-08-20T18:56:37.2916333Z # common.base
2025-08-20T18:56:37.2916439Z 
2025-08-20T18:56:37.2916633Z <a id="common.base.Base"></a>
2025-08-20T18:56:37.2916778Z 
2025-08-20T18:56:37.2916846Z ## Base Objects
2025-08-20T18:56:37.2916955Z 
2025-08-20T18:56:37.2917020Z ```python
2025-08-20T18:56:37.2917196Z class Base(DeclarativeBase)
2025-08-20T18:56:37.2917396Z ```
2025-08-20T18:56:37.2917480Z 
2025-08-20T18:56:37.2917570Z Base class for SQLAlchemy models.
2025-08-20T18:56:37.2917720Z 
2025-08-20T18:56:37.2917795Z <a id="repricer"></a>
2025-08-20T18:56:37.2917920Z 
2025-08-20T18:56:37.2917989Z # repricer
2025-08-20T18:56:37.2918088Z 
2025-08-20T18:56:37.2918183Z <a id="repricer.app.schemas"></a>
2025-08-20T18:56:37.2918351Z 
2025-08-20T18:56:37.2918432Z # repricer.app.schemas
2025-08-20T18:56:37.2918555Z 
2025-08-20T18:56:37.2918649Z <a id="repricer.app.deps"></a>
2025-08-20T18:56:37.2918793Z 
2025-08-20T18:56:37.2918873Z # repricer.app.deps
2025-08-20T18:56:37.2918996Z 
2025-08-20T18:56:37.2919117Z Placeholder module for Keepa / SP-API clients.
2025-08-20T18:56:37.2919308Z 
2025-08-20T18:56:37.2919395Z <a id="repricer.app.logic"></a>
2025-08-20T18:56:37.2919553Z 
2025-08-20T18:56:37.2919634Z # repricer.app.logic
2025-08-20T18:56:37.2919754Z 
2025-08-20T18:56:37.2919862Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T18:56:37.2920042Z 
2025-08-20T18:56:37.2920113Z #### MIN\_MARGIN
2025-08-20T18:56:37.2920230Z 
2025-08-20T18:56:37.2920305Z 15 % ROI
2025-08-20T18:56:37.2920399Z 
2025-08-20T18:56:37.2920508Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T18:56:37.2920700Z 
2025-08-20T18:56:37.2920903Z #### compute\_price
2025-08-20T18:56:37.2921016Z 
2025-08-20T18:56:37.2921092Z ```python
2025-08-20T18:56:37.2921356Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T18:56:37.2921670Z ```
2025-08-20T18:56:37.2921757Z 
2025-08-20T18:56:37.2921869Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T18:56:37.2922167Z Replace with real competitive logic later.
2025-08-20T18:56:37.2922342Z 
2025-08-20T18:56:37.2922430Z <a id="repricer.app.main"></a>
2025-08-20T18:56:37.2922581Z 
2025-08-20T18:56:37.2922657Z # repricer.app.main
2025-08-20T18:56:37.2922771Z 
2025-08-20T18:56:37.2922860Z <a id="repricer.app"></a>
2025-08-20T18:56:37.2922994Z 
2025-08-20T18:56:37.2923066Z # repricer.app
2025-08-20T18:56:37.2923173Z 
2025-08-20T18:56:37.2923276Z <a id="repricer.tests.test_imports"></a>
2025-08-20T18:56:37.2923446Z 
2025-08-20T18:56:37.2923533Z # repricer.tests.test\_imports
2025-08-20T18:56:37.2923683Z 
2025-08-20T18:56:37.2923777Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T18:56:37.2923948Z 
2025-08-20T18:56:37.2924041Z # repricer.tests.test\_smoke
2025-08-20T18:56:37.2924187Z 
2025-08-20T18:56:37.2924269Z <a id="repricer.tests"></a>
2025-08-20T18:56:37.2924407Z 
2025-08-20T18:56:37.2924487Z # repricer.tests
2025-08-20T18:56:37.2924596Z 
2025-08-20T18:56:37.2924668Z <a id="db"></a>
2025-08-20T18:56:37.2924779Z 
2025-08-20T18:56:37.2924845Z # db
2025-08-20T18:56:37.2924935Z 
2025-08-20T18:56:37.2925015Z <a id="db.utils.views"></a>
2025-08-20T18:56:37.2925156Z 
2025-08-20T18:56:37.2925228Z # db.utils.views
2025-08-20T18:56:37.2925336Z 
2025-08-20T18:56:37.2925442Z <a id="db.utils.views.replace_view"></a>
2025-08-20T18:56:37.2925616Z 
2025-08-20T18:56:37.2925687Z #### replace\_view
2025-08-20T18:56:37.2925802Z 
2025-08-20T18:56:37.2925872Z ```python
2025-08-20T18:56:37.2926073Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T18:56:37.2926332Z ```
2025-08-20T18:56:37.2926417Z 
2025-08-20T18:56:37.2926618Z Drop and recreate a SQL view atomically.
2025-08-20T18:56:37.2926793Z 
2025-08-20T18:56:37.2926868Z <a id="db.utils"></a>
2025-08-20T18:56:37.2927154Z 
2025-08-20T18:56:37.2927228Z # db.utils
2025-08-20T18:56:37.2927324Z 
2025-08-20T18:56:37.2927406Z <a id="price_importer"></a>
2025-08-20T18:56:37.2927548Z 
2025-08-20T18:56:37.2927621Z # price\_importer
2025-08-20T18:56:37.2927730Z 
2025-08-20T18:56:37.2927838Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T18:56:37.2928033Z 
2025-08-20T18:56:37.2928129Z # price\_importer.services\_common.dsn
2025-08-20T18:56:37.2928296Z 
2025-08-20T18:56:37.2928433Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T18:56:37.2928645Z 
2025-08-20T18:56:37.2928714Z #### build\_dsn
2025-08-20T18:56:37.2928824Z 
2025-08-20T18:56:37.2928891Z ```python
2025-08-20T18:56:37.2929073Z def build_dsn(sync: bool = True) -> str
2025-08-20T18:56:37.2929308Z ```
2025-08-20T18:56:37.2929395Z 
2025-08-20T18:56:37.2929470Z Return safe DSN.
2025-08-20T18:56:37.2929580Z 
2025-08-20T18:56:37.2929767Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or ``DATABASE_URL``.
2025-08-20T18:56:37.2930160Z Falls back to individual PG_* variables.
2025-08-20T18:56:37.2930704Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T18:56:37.2930921Z 
2025-08-20T18:56:37.2931053Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T18:56:37.2931269Z 
2025-08-20T18:56:37.2931385Z # price\_importer.services\_common.models\_vendor
2025-08-20T18:56:37.2931587Z 
2025-08-20T18:56:37.2931700Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T18:56:37.2931890Z 
2025-08-20T18:56:37.2931994Z # price\_importer.services\_common.db\_url
2025-08-20T18:56:37.2932169Z 
2025-08-20T18:56:37.2932307Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T18:56:37.2932535Z 
2025-08-20T18:56:37.2932608Z #### build\_url
2025-08-20T18:56:37.2932716Z 
2025-08-20T18:56:37.2932785Z ```python
2025-08-20T18:56:37.2932978Z def build_url(async_: bool = True) -> str
2025-08-20T18:56:37.2933624Z ```
2025-08-20T18:56:37.2933791Z 
2025-08-20T18:56:37.2933998Z Return Postgres DSN from environment variables.
2025-08-20T18:56:37.2934372Z 
2025-08-20T18:56:37.2934588Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T18:56:37.2934942Z 
2025-08-20T18:56:37.2935120Z # price\_importer.services\_common.keepa
2025-08-20T18:56:37.2935452Z 
2025-08-20T18:56:37.2935644Z <a id="price_importer.services_common.llm"></a>
2025-08-20T18:56:37.2935994Z 
2025-08-20T18:56:37.2936184Z # price\_importer.services\_common.llm
2025-08-20T18:56:37.2936368Z 
2025-08-20T18:56:37.2936622Z <a id="price_importer.services_common.settings"></a>
2025-08-20T18:56:37.2936832Z 
2025-08-20T18:56:37.2936937Z # price\_importer.services\_common.settings
2025-08-20T18:56:37.2937116Z 
2025-08-20T18:56:37.2937225Z <a id="price_importer.services_common.db"></a>
2025-08-20T18:56:37.2937415Z 
2025-08-20T18:56:37.2937510Z # price\_importer.services\_common.db
2025-08-20T18:56:37.2937678Z 
2025-08-20T18:56:37.2937846Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T18:56:37.2938101Z 
2025-08-20T18:56:37.2938190Z #### build\_sqlalchemy\_url
2025-08-20T18:56:37.2938336Z 
2025-08-20T18:56:37.2938405Z ```python
2025-08-20T18:56:37.2938590Z def build_sqlalchemy_url() -> str
2025-08-20T18:56:37.2938818Z ```
2025-08-20T18:56:37.2938907Z 
2025-08-20T18:56:37.2939007Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T18:56:37.2939190Z 
2025-08-20T18:56:37.2939342Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T18:56:37.2939573Z 
2025-08-20T18:56:37.2939658Z #### build\_asyncpg\_dsn
2025-08-20T18:56:37.2939788Z 
2025-08-20T18:56:37.2939857Z ```python
2025-08-20T18:56:37.2940053Z def build_asyncpg_dsn() -> str
2025-08-20T18:56:37.2940271Z ```
2025-08-20T18:56:37.2940375Z 
2025-08-20T18:56:37.2940509Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T18:56:37.2940724Z 
2025-08-20T18:56:37.2940869Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T18:56:37.2941091Z 
2025-08-20T18:56:37.2941165Z #### refresh\_mvs
2025-08-20T18:56:37.2941461Z 
2025-08-20T18:56:37.2941537Z ```python
2025-08-20T18:56:37.2941745Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T18:56:37.2942009Z ```
2025-08-20T18:56:37.2942096Z 
2025-08-20T18:56:37.2942238Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T18:56:37.2942465Z 
2025-08-20T18:56:37.2942564Z <a id="price_importer.services_common"></a>
2025-08-20T18:56:37.2942743Z 
2025-08-20T18:56:37.2942842Z # price\_importer.services\_common
2025-08-20T18:56:37.2943002Z 
2025-08-20T18:56:37.2943111Z <a id="price_importer.services_common.base"></a>
2025-08-20T18:56:37.2943305Z 
2025-08-20T18:56:37.2943398Z # price\_importer.services\_common.base
2025-08-20T18:56:37.2943568Z 
2025-08-20T18:56:37.2943661Z <a id="price_importer.normaliser"></a>
2025-08-20T18:56:37.2943833Z 
2025-08-20T18:56:37.2943921Z # price\_importer.normaliser
2025-08-20T18:56:37.2944063Z 
2025-08-20T18:56:37.2944178Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T18:56:37.2944371Z 
2025-08-20T18:56:37.2944472Z # price\_importer.common.models\_vendor
2025-08-20T18:56:37.2944646Z 
2025-08-20T18:56:37.2944744Z <a id="price_importer.common.db_url"></a>
2025-08-20T18:56:37.2944916Z 
2025-08-20T18:56:37.2945005Z # price\_importer.common.db\_url
2025-08-20T18:56:37.2945163Z 
2025-08-20T18:56:37.2945272Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T18:56:37.2945461Z 
2025-08-20T18:56:37.2945537Z #### make\_dsn
2025-08-20T18:56:37.2945640Z 
2025-08-20T18:56:37.2945707Z ```python
2025-08-20T18:56:37.2945895Z def make_dsn(async_: bool = False) -> str
2025-08-20T18:56:37.2946125Z ```
2025-08-20T18:56:37.2946219Z 
2025-08-20T18:56:37.2946306Z Return DSN using shared builder.
2025-08-20T18:56:37.2946456Z 
2025-08-20T18:56:37.2946714Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T18:56:37.2946910Z 
2025-08-20T18:56:37.2946979Z #### build\_url
2025-08-20T18:56:37.2947085Z 
2025-08-20T18:56:37.2947158Z ```python
2025-08-20T18:56:37.2947471Z def build_url(async_: bool = False) -> str
2025-08-20T18:56:37.2947714Z ```
2025-08-20T18:56:37.2947800Z 
2025-08-20T18:56:37.2947928Z Return Postgres DSN built from environment variables.
2025-08-20T18:56:37.2948142Z 
2025-08-20T18:56:37.2948234Z <a id="price_importer.common"></a>
2025-08-20T18:56:37.2948393Z 
2025-08-20T18:56:37.2948483Z # price\_importer.common
2025-08-20T18:56:37.2948613Z 
2025-08-20T18:56:37.2948706Z <a id="price_importer.common.base"></a>
2025-08-20T18:56:37.2948875Z 
2025-08-20T18:56:37.2948971Z # price\_importer.common.base
2025-08-20T18:56:37.2949117Z 
2025-08-20T18:56:37.2949217Z <a id="price_importer.tests.conftest"></a>
2025-08-20T18:56:37.2949402Z 
2025-08-20T18:56:37.2949492Z # price\_importer.tests.conftest
2025-08-20T18:56:37.2949644Z 
2025-08-20T18:56:37.2949757Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T18:56:37.2949972Z 
2025-08-20T18:56:37.2950072Z # price\_importer.tests.test\_reader
2025-08-20T18:56:37.2950243Z 
2025-08-20T18:56:37.2950354Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T18:56:37.2950540Z 
2025-08-20T18:56:37.2950634Z # price\_importer.tests.test\_imports
2025-08-20T18:56:37.2950804Z 
2025-08-20T18:56:37.2950905Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T18:56:37.2951081Z 
2025-08-20T18:56:37.2951178Z # price\_importer.tests.test\_smoke
2025-08-20T18:56:37.2951340Z 
2025-08-20T18:56:37.2951452Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T18:56:37.2951652Z 
2025-08-20T18:56:37.2951749Z # price\_importer.tests.test\_normaliser
2025-08-20T18:56:37.2951917Z 
2025-08-20T18:56:37.2952007Z <a id="price_importer.tests"></a>
2025-08-20T18:56:37.2952167Z 
2025-08-20T18:56:37.2952247Z # price\_importer.tests
2025-08-20T18:56:37.2952377Z 
2025-08-20T18:56:37.2952476Z <a id="price_importer.reader"></a>
2025-08-20T18:56:37.2952633Z 
2025-08-20T18:56:37.2952713Z # price\_importer.reader
2025-08-20T18:56:37.2952851Z 
2025-08-20T18:56:37.2952946Z <a id="price_importer.repository"></a>
2025-08-20T18:56:37.2953117Z 
2025-08-20T18:56:37.2953204Z # price\_importer.repository
2025-08-20T18:56:37.2953472Z 
2025-08-20T18:56:37.2953560Z <a id="price_importer.import"></a>
2025-08-20T18:56:37.2953715Z 
2025-08-20T18:56:37.2953806Z # price\_importer.import
2025-08-20T18:56:37.2953934Z 
2025-08-20T18:56:37.2954007Z <a id="fees_h10"></a>
2025-08-20T18:56:37.2954126Z 
2025-08-20T18:56:37.2954201Z # fees\_h10
2025-08-20T18:56:37.2954297Z 
2025-08-20T18:56:37.2954375Z <a id="fees_h10.worker"></a>
2025-08-20T18:56:37.2954517Z 
2025-08-20T18:56:37.2954587Z # fees\_h10.worker
2025-08-20T18:56:37.2954696Z 
2025-08-20T18:56:37.2954800Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T18:56:37.2954982Z 
2025-08-20T18:56:37.2955058Z #### list\_active\_asins
2025-08-20T18:56:37.2955182Z 
2025-08-20T18:56:37.2955257Z ```python
2025-08-20T18:56:37.2955432Z def list_active_asins() -> list[str]
2025-08-20T18:56:37.2955653Z ```
2025-08-20T18:56:37.2955740Z 
2025-08-20T18:56:37.2955856Z Return known ASINs or an empty list if unavailable.
2025-08-20T18:56:37.2956067Z 
2025-08-20T18:56:37.2956159Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T18:56:37.2956324Z 
2025-08-20T18:56:37.2956411Z # fees\_h10.tests.test\_smoke
2025-08-20T18:56:37.2956665Z 
2025-08-20T18:56:37.2956747Z <a id="fees_h10.tests"></a>
2025-08-20T18:56:37.2956882Z 
2025-08-20T18:56:37.2956958Z # fees\_h10.tests
2025-08-20T18:56:37.2957067Z 
2025-08-20T18:56:37.2957145Z <a id="fees_h10.client"></a>
2025-08-20T18:56:37.2957286Z 
2025-08-20T18:56:37.2957356Z # fees\_h10.client
2025-08-20T18:56:37.2957464Z 
2025-08-20T18:56:37.2957554Z <a id="fees_h10.repository"></a>
2025-08-20T18:56:37.2957703Z 
2025-08-20T18:56:37.2957777Z # fees\_h10.repository
2025-08-20T18:56:37.2957896Z 
2025-08-20T18:56:37.2958009Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T18:56:37.2958197Z 
2025-08-20T18:56:37.2958270Z #### upsert\_fees\_raw
2025-08-20T18:56:37.2958391Z 
2025-08-20T18:56:37.2958459Z ```python
2025-08-20T18:56:37.2958634Z def upsert_fees_raw(engine: Engine,
2025-08-20T18:56:37.2959016Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T18:56:37.2959273Z                     *,
2025-08-20T18:56:37.2959497Z                     testing: bool = False) -> dict[str, int] | None
2025-08-20T18:56:37.2959767Z ```
2025-08-20T18:56:37.2959855Z 
2025-08-20T18:56:37.2959940Z Idempotent upsert for fees.
2025-08-20T18:56:37.2960086Z 
2025-08-20T18:56:37.2960244Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T18:56:37.2960592Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T18:56:37.2960915Z Only updates when one of the mutable fields changes.
2025-08-20T18:56:37.2961120Z 
2025-08-20T18:56:37.2961202Z <a id="emailer"></a>
2025-08-20T18:56:37.2961319Z 
2025-08-20T18:56:37.2961386Z # emailer
2025-08-20T18:56:37.2961481Z 
2025-08-20T18:56:37.2961594Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T18:56:37.2961780Z 
2025-08-20T18:56:37.2961874Z # emailer.tests.test\_import\_emailer
2025-08-20T18:56:37.2962048Z 
2025-08-20T18:56:37.2962140Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T18:56:37.2962303Z 
2025-08-20T18:56:37.2962392Z # emailer.tests.test\_smoke
2025-08-20T18:56:37.2962531Z 
2025-08-20T18:56:37.2962614Z <a id="emailer.tests"></a>
2025-08-20T18:56:37.2962748Z 
2025-08-20T18:56:37.2962826Z # emailer.tests
2025-08-20T18:56:37.2962932Z 
2025-08-20T18:56:37.2963022Z <a id="emailer.generate_body"></a>
2025-08-20T18:56:37.2963185Z 
2025-08-20T18:56:37.2982903Z # emailer.generate\_body
2025-08-20T18:56:37.2983120Z 
2025-08-20T18:56:37.2983214Z <a id="llm_server"></a>
2025-08-20T18:56:37.2983363Z 
2025-08-20T18:56:37.2983436Z # llm\_server
2025-08-20T18:56:37.2983546Z 
2025-08-20T18:56:37.2983641Z <a id="llm_server.app"></a>
2025-08-20T18:56:37.2983787Z 
2025-08-20T18:56:37.2983862Z # llm\_server.app
2025-08-20T18:56:37.2983976Z 
