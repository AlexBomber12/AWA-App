2025-08-17T12:42:53.2187640Z ##[group]Run pydoc-markdown
2025-08-17T12:42:53.2187919Z [36;1mpydoc-markdown[0m
2025-08-17T12:42:53.2228554Z shell: /usr/bin/bash -e {0}
2025-08-17T12:42:53.2228798Z env:
2025-08-17T12:42:53.2229025Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:42:53.2229417Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T12:42:53.2229783Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:42:53.2230107Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:42:53.2230442Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T12:42:53.2230775Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T12:42:53.2231058Z ##[endgroup]
2025-08-17T12:42:53.5867670Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T12:42:53.5868365Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T12:42:53.5868843Z In "pydoc-markdown.yml"
2025-08-17T12:42:53.5869271Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T12:42:53.5869924Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T12:42:53.5870684Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T12:42:53.5871202Z 
2025-08-17T12:42:53.7934003Z <a id="__init__"></a>
2025-08-17T12:42:53.7934288Z 
2025-08-17T12:42:53.7934548Z # \_\_init\_\_
2025-08-17T12:42:53.7934743Z 
2025-08-17T12:42:53.7934872Z <a id="api"></a>
2025-08-17T12:42:53.7935078Z 
2025-08-17T12:42:53.7935194Z # api
2025-08-17T12:42:53.7935351Z 
2025-08-17T12:42:53.7935502Z <a id="api.tests.test_llm"></a>
2025-08-17T12:42:53.7935976Z 
2025-08-17T12:42:53.7936121Z # api.tests.test\_llm
2025-08-17T12:42:53.7936341Z 
2025-08-17T12:42:53.7936621Z <a id="api.tests.test_imports"></a>
2025-08-17T12:42:53.7936912Z 
2025-08-17T12:42:53.7937051Z # api.tests.test\_imports
2025-08-17T12:42:53.7937305Z 
2025-08-17T12:42:53.7937465Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T12:42:53.7938076Z 
2025-08-17T12:42:53.7938231Z # api.tests.test\_entrypoint
2025-08-17T12:42:53.7938519Z 
2025-08-17T12:42:53.7938672Z <a id="api.tests.test_health"></a>
2025-08-17T12:42:53.7938946Z 
2025-08-17T12:42:53.7939091Z # api.tests.test\_health
2025-08-17T12:42:53.7939323Z 
2025-08-17T12:42:53.7939469Z <a id="api.migrations.env"></a>
2025-08-17T12:42:53.7939735Z 
2025-08-17T12:42:53.7939865Z # api.migrations.env
2025-08-17T12:42:53.7940080Z 
2025-08-17T12:42:53.7940302Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T12:42:53.7940673Z 
2025-08-17T12:42:53.7940867Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T12:42:53.7941202Z 
2025-08-17T12:42:53.7941408Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T12:42:53.7941755Z 
2025-08-17T12:42:53.7941925Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T12:42:53.7942247Z 
2025-08-17T12:42:53.7942523Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T12:42:53.7942948Z 
2025-08-17T12:42:53.7943213Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T12:42:53.7943611Z 
2025-08-17T12:42:53.7943829Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T12:42:53.7944198Z 
2025-08-17T12:42:53.7944396Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T12:42:53.7944729Z 
2025-08-17T12:42:53.7944942Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T12:42:53.7945312Z 
2025-08-17T12:42:53.7945509Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T12:42:53.7946136Z 
2025-08-17T12:42:53.7946394Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T12:42:53.7946781Z 
2025-08-17T12:42:53.7946989Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T12:42:53.7947347Z 
2025-08-17T12:42:53.7947566Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T12:42:53.7947932Z 
2025-08-17T12:42:53.7948127Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T12:42:53.7948476Z 
2025-08-17T12:42:53.7948699Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T12:42:53.7949421Z 
2025-08-17T12:42:53.7949633Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T12:42:53.7949974Z 
2025-08-17T12:42:53.7950200Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T12:42:53.7950579Z 
2025-08-17T12:42:53.7950774Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T12:42:53.7951110Z 
2025-08-17T12:42:53.7951305Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T12:42:53.7951662Z 
2025-08-17T12:42:53.7951829Z # api.migrations.versions.0001\_baseline
2025-08-17T12:42:53.7952139Z 
2025-08-17T12:42:53.7952305Z <a id="api.migrations.versions"></a>
2025-08-17T12:42:53.7952595Z 
2025-08-17T12:42:53.7952783Z # api.migrations.versions
2025-08-17T12:42:53.7953030Z 
2025-08-17T12:42:53.7953166Z <a id="api.migrations"></a>
2025-08-17T12:42:53.7953406Z 
2025-08-17T12:42:53.7953528Z # api.migrations
2025-08-17T12:42:53.7953726Z 
2025-08-17T12:42:53.7953848Z <a id="api.db"></a>
2025-08-17T12:42:53.7954049Z 
2025-08-17T12:42:53.7954175Z # api.db
2025-08-17T12:42:53.7954332Z 
2025-08-17T12:42:53.7954472Z <a id="api.routes.stats"></a>
2025-08-17T12:42:53.7954723Z 
2025-08-17T12:42:53.7954855Z # api.routes.stats
2025-08-17T12:42:53.7955048Z 
2025-08-17T12:42:53.7955201Z <a id="api.routes.stats.kpi"></a>
2025-08-17T12:42:53.7955485Z 
2025-08-17T12:42:53.7955595Z #### kpi
2025-08-17T12:42:53.7955928Z 
2025-08-17T12:42:53.7956058Z ```python
2025-08-17T12:42:53.7956356Z @router.get("/stats/kpi")
2025-08-17T12:42:53.7956771Z def kpi() -> List[Dict[str, int]]
2025-08-17T12:42:53.7957149Z ```
2025-08-17T12:42:53.7957305Z 
2025-08-17T12:42:53.7957458Z Return KPI metrics (mock).
2025-08-17T12:42:53.7957701Z 
2025-08-17T12:42:53.7957877Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T12:42:53.7958201Z 
2025-08-17T12:42:53.7958324Z #### roi\_by\_vendor
2025-08-17T12:42:53.7958527Z 
2025-08-17T12:42:53.7958646Z ```python
2025-08-17T12:42:53.7958953Z @router.get("/stats/roi_by_vendor")
2025-08-17T12:42:53.7959656Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T12:42:53.7960071Z ```
2025-08-17T12:42:53.7960215Z 
2025-08-17T12:42:53.7960366Z Return ROI percent by vendor.
2025-08-17T12:42:53.7960622Z 
2025-08-17T12:42:53.7960787Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T12:42:53.7961104Z 
2025-08-17T12:42:53.7961218Z #### roi\_trend
2025-08-17T12:42:53.7961397Z 
2025-08-17T12:42:53.7961517Z ```python
2025-08-17T12:42:53.7961813Z @router.get("/stats/roi_trend")
2025-08-17T12:42:53.7962249Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T12:42:53.7962668Z ```
2025-08-17T12:42:53.7962818Z 
2025-08-17T12:42:53.7962958Z Return 30-day ROI trend.
2025-08-17T12:42:53.7963186Z 
2025-08-17T12:42:53.7963326Z <a id="api.routes.roi"></a>
2025-08-17T12:42:53.7963576Z 
2025-08-17T12:42:53.7963692Z # api.routes.roi
2025-08-17T12:42:53.7963908Z 
2025-08-17T12:42:53.7964050Z <a id="api.routes.health"></a>
2025-08-17T12:42:53.7964370Z 
2025-08-17T12:42:53.7964495Z # api.routes.health
2025-08-17T12:42:53.7964714Z 
2025-08-17T12:42:53.7964886Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T12:42:53.7965188Z 
2025-08-17T12:42:53.7965307Z #### MAX\_SKEW
2025-08-17T12:42:53.7965483Z 
2025-08-17T12:42:53.7965591Z seconds
2025-08-17T12:42:53.7965929Z 
2025-08-17T12:42:53.7966110Z <a id="api.routes.health.health"></a>
2025-08-17T12:42:53.7966414Z 
2025-08-17T12:42:53.7966531Z #### health
2025-08-17T12:42:53.7966710Z 
2025-08-17T12:42:53.7966823Z ```python
2025-08-17T12:42:53.7967174Z @router.get("/health", include_in_schema=False)
2025-08-17T12:42:53.7967867Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T12:42:53.7968484Z ```
2025-08-17T12:42:53.7968633Z 
2025-08-17T12:42:53.7968841Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T12:42:53.7969197Z 
2025-08-17T12:42:53.7969371Z <a id="api.routes.repository"></a>
2025-08-17T12:42:53.7969690Z 
2025-08-17T12:42:53.7969830Z # api.routes.repository
2025-08-17T12:42:53.7970063Z 
2025-08-17T12:42:53.7970206Z <a id="api.routes"></a>
2025-08-17T12:42:53.7970706Z 
2025-08-17T12:42:53.7970832Z # api.routes
2025-08-17T12:42:53.7971011Z 
2025-08-17T12:42:53.7971149Z <a id="api.models.fee"></a>
2025-08-17T12:42:53.7971390Z 
2025-08-17T12:42:53.7971516Z # api.models.fee
2025-08-17T12:42:53.7971710Z 
2025-08-17T12:42:53.7971842Z <a id="api.models"></a>
2025-08-17T12:42:53.7972069Z 
2025-08-17T12:42:53.7972186Z # api.models
2025-08-17T12:42:53.7972360Z 
2025-08-17T12:42:53.7972500Z <a id="api.roi_repository"></a>
2025-08-17T12:42:53.7972746Z 
2025-08-17T12:42:53.7972868Z # api.roi\_repository
2025-08-17T12:42:53.7973063Z 
2025-08-17T12:42:53.7973188Z <a id="api.main"></a>
2025-08-17T12:42:53.7973379Z 
2025-08-17T12:42:53.7973484Z # api.main
2025-08-17T12:42:53.7973654Z 
2025-08-17T12:42:53.7973793Z <a id="api.main.ready"></a>
2025-08-17T12:42:53.7974031Z 
2025-08-17T12:42:53.7974139Z #### ready
2025-08-17T12:42:53.7974305Z 
2025-08-17T12:42:53.7974413Z ```python
2025-08-17T12:42:53.7974878Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T12:42:53.7975845Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T12:42:53.7976511Z                                                                       str]
2025-08-17T12:42:53.7976938Z ```
2025-08-17T12:42:53.7977100Z 
2025-08-17T12:42:53.7977283Z Return 200 only when migrations are at head.
2025-08-17T12:42:53.7977607Z 
2025-08-17T12:42:53.7977744Z <a id="api.config"></a>
2025-08-17T12:42:53.7977975Z 
2025-08-17T12:42:53.7978090Z # api.config
2025-08-17T12:42:53.7978265Z 
2025-08-17T12:42:53.7978387Z <a id="etl"></a>
2025-08-17T12:42:53.7978571Z 
2025-08-17T12:42:53.7978677Z # etl
2025-08-17T12:42:53.7978841Z 
2025-08-17T12:42:53.7978987Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T12:42:53.7979255Z 
2025-08-17T12:42:53.7979385Z # etl.fba\_fee\_ingestor
2025-08-17T12:42:53.7979622Z 
2025-08-17T12:42:53.7979764Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T12:42:53.7980026Z 
2025-08-17T12:42:53.7980166Z # etl.sp\_fees\_ingestor
2025-08-17T12:42:53.7980629Z 
2025-08-17T12:42:53.7980773Z <a id="etl.keepa_ingestor"></a>
2025-08-17T12:42:53.7981030Z 
2025-08-17T12:42:53.7981169Z # etl.keepa\_ingestor
2025-08-17T12:42:53.7981378Z 
2025-08-17T12:42:53.7981499Z <a id="etl.db"></a>
2025-08-17T12:42:53.7981699Z 
2025-08-17T12:42:53.7981810Z # etl.db
2025-08-17T12:42:53.7981968Z 
2025-08-17T12:42:53.7982172Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T12:42:53.7982511Z 
2025-08-17T12:42:53.7982674Z # etl.dialects.amazon\_reimbursements
2025-08-17T12:42:53.7982981Z 
2025-08-17T12:42:53.7983148Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T12:42:53.7983457Z 
2025-08-17T12:42:53.7983607Z # etl.dialects.amazon\_returns
2025-08-17T12:42:53.7983873Z 
2025-08-17T12:42:53.7984007Z <a id="etl.dialects"></a>
2025-08-17T12:42:53.7984240Z 
2025-08-17T12:42:53.7984363Z # etl.dialects
2025-08-17T12:42:53.7984544Z 
2025-08-17T12:42:53.7984664Z <a id="ingest"></a>
2025-08-17T12:42:53.7984860Z 
2025-08-17T12:42:53.7984997Z # ingest
2025-08-17T12:42:53.7985162Z 
2025-08-17T12:42:53.7985312Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T12:42:53.7985601Z 
2025-08-17T12:42:53.7985964Z # ingest.tests.test\_smoke
2025-08-17T12:42:53.7986218Z 
2025-08-17T12:42:53.7986355Z <a id="ingest.tests"></a>
2025-08-17T12:42:53.7986596Z 
2025-08-17T12:42:53.7986711Z # ingest.tests
2025-08-17T12:42:53.7986892Z 
2025-08-17T12:42:53.7987047Z <a id="ingest.upload_router"></a>
2025-08-17T12:42:53.7987319Z 
2025-08-17T12:42:53.7987451Z # ingest.upload\_router
2025-08-17T12:42:53.7987674Z 
2025-08-17T12:42:53.7987815Z <a id="ingest.email_watcher"></a>
2025-08-17T12:42:53.7988078Z 
2025-08-17T12:42:53.7988207Z # ingest.email\_watcher
2025-08-17T12:42:53.7988428Z 
2025-08-17T12:42:53.7988581Z <a id="ingest.email_watcher.main"></a>
2025-08-17T12:42:53.7988872Z 
2025-08-17T12:42:53.7988993Z #### main
2025-08-17T12:42:53.7989160Z 
2025-08-17T12:42:53.7989331Z ```python
2025-08-17T12:42:53.7989651Z def main() -> dict[str, str]
2025-08-17T12:42:53.7990013Z ```
2025-08-17T12:42:53.7990174Z 
2025-08-17T12:42:53.7990658Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T12:42:53.7991071Z 
2025-08-17T12:42:53.7991306Z Returns {"status": "success"} when processing completes.
2025-08-17T12:42:53.7991697Z 
2025-08-17T12:42:53.7991844Z <a id="ingest.ingest_router"></a>
2025-08-17T12:42:53.7992115Z 
2025-08-17T12:42:53.7992253Z # ingest.ingest\_router
2025-08-17T12:42:53.7992471Z 
2025-08-17T12:42:53.7992605Z <a id="logistics_etl"></a>
2025-08-17T12:42:53.7992847Z 
2025-08-17T12:42:53.7992967Z # logistics\_etl
2025-08-17T12:42:53.7993155Z 
2025-08-17T12:42:53.7993288Z Daily logistics ETL job.
2025-08-17T12:42:53.7993519Z 
2025-08-17T12:42:53.7993664Z <a id="logistics_etl.__main__"></a>
2025-08-17T12:42:53.7993946Z 
2025-08-17T12:42:53.7994093Z # logistics\_etl.\_\_main\_\_
2025-08-17T12:42:53.7994339Z 
2025-08-17T12:42:53.7994480Z <a id="logistics_etl.dsn"></a>
2025-08-17T12:42:53.7994738Z 
2025-08-17T12:42:53.7994862Z # logistics\_etl.dsn
2025-08-17T12:42:53.7995075Z 
2025-08-17T12:42:53.7995293Z Local DSN builder to avoid cross-service dependency.
2025-08-17T12:42:53.7995839Z 
2025-08-17T12:42:53.7996002Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T12:42:53.7996304Z 
2025-08-17T12:42:53.7996425Z #### build\_dsn
2025-08-17T12:42:53.7996603Z 
2025-08-17T12:42:53.7996716Z ```python
2025-08-17T12:42:53.7997027Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:42:53.7997418Z ```
2025-08-17T12:42:53.7997572Z 
2025-08-17T12:42:53.7997819Z Return a Postgres DSN assembled from environment variables.
2025-08-17T12:42:53.7998220Z 
2025-08-17T12:42:53.7998494Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T12:42:53.7999207Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T12:42:53.7999846Z error when any required variable is missing.
2025-08-17T12:42:53.8000167Z 
2025-08-17T12:42:53.8000339Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T12:42:53.8000661Z 
2025-08-17T12:42:53.8001032Z # logistics\_etl.tests.conftest
2025-08-17T12:42:53.8001313Z 
2025-08-17T12:42:53.8001507Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T12:42:53.8001853Z 
2025-08-17T12:42:53.8002017Z # logistics\_etl.tests.test\_repository
2025-08-17T12:42:53.8002314Z 
2025-08-17T12:42:53.8002489Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T12:42:53.8002802Z 
2025-08-17T12:42:53.8002951Z # logistics\_etl.tests.test\_cron
2025-08-17T12:42:53.8003226Z 
2025-08-17T12:42:53.8003403Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T12:42:53.8003729Z 
2025-08-17T12:42:53.8003880Z # logistics\_etl.tests.test\_imports
2025-08-17T12:42:53.8004168Z 
2025-08-17T12:42:53.8004335Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T12:42:53.8004646Z 
2025-08-17T12:42:53.8004810Z # logistics\_etl.tests.test\_smoke
2025-08-17T12:42:53.8005087Z 
2025-08-17T12:42:53.8005260Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T12:42:53.8005577Z 
2025-08-17T12:42:53.8005910Z # logistics\_etl.tests.test\_client
2025-08-17T12:42:53.8006218Z 
2025-08-17T12:42:53.8006396Z <a id="logistics_etl.tests"></a>
2025-08-17T12:42:53.8006674Z 
2025-08-17T12:42:53.8006803Z # logistics\_etl.tests
2025-08-17T12:42:53.8007014Z 
2025-08-17T12:42:53.8007163Z <a id="logistics_etl.flow"></a>
2025-08-17T12:42:53.8007413Z 
2025-08-17T12:42:53.8007539Z # logistics\_etl.flow
2025-08-17T12:42:53.8007760Z 
2025-08-17T12:42:53.8007908Z <a id="logistics_etl.client"></a>
2025-08-17T12:42:53.8008182Z 
2025-08-17T12:42:53.8008318Z # logistics\_etl.client
2025-08-17T12:42:53.8008550Z 
2025-08-17T12:42:53.8008696Z <a id="logistics_etl.cron"></a>
2025-08-17T12:42:53.8008953Z 
2025-08-17T12:42:53.8009093Z # logistics\_etl.cron
2025-08-17T12:42:53.8009302Z 
2025-08-17T12:42:53.8009440Z <a id="logistics_etl.db"></a>
2025-08-17T12:42:53.8009691Z 
2025-08-17T12:42:53.8009823Z # logistics\_etl.db
2025-08-17T12:42:53.8010019Z 
2025-08-17T12:42:53.8010176Z <a id="logistics_etl.repository"></a>
2025-08-17T12:42:53.8010476Z 
2025-08-17T12:42:53.8010667Z # logistics\_etl.repository
2025-08-17T12:42:53.8011149Z 
2025-08-17T12:42:53.8011290Z <a id="alert_bot"></a>
2025-08-17T12:42:53.8011506Z 
2025-08-17T12:42:53.8011618Z # alert\_bot
2025-08-17T12:42:53.8011793Z 
2025-08-17T12:42:53.8011957Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T12:42:53.8012251Z 
2025-08-17T12:42:53.8012392Z # alert\_bot.tests.test\_smoke
2025-08-17T12:42:53.8012650Z 
2025-08-17T12:42:53.8012785Z <a id="alert_bot.tests"></a>
2025-08-17T12:42:53.8013028Z 
2025-08-17T12:42:53.8013143Z # alert\_bot.tests
2025-08-17T12:42:53.8013348Z 
2025-08-17T12:42:53.8013487Z <a id="alert_bot.alert_bot"></a>
2025-08-17T12:42:53.8013743Z 
2025-08-17T12:42:53.8013880Z # alert\_bot.alert\_bot
2025-08-17T12:42:53.8014104Z 
2025-08-17T12:42:53.8014238Z <a id="alert_bot.rules"></a>
2025-08-17T12:42:53.8014484Z 
2025-08-17T12:42:53.8014607Z # alert\_bot.rules
2025-08-17T12:42:53.8014798Z 
2025-08-17T12:42:53.8014914Z <a id="common"></a>
2025-08-17T12:42:53.8015112Z 
2025-08-17T12:42:53.8015217Z # common
2025-08-17T12:42:53.8015383Z 
2025-08-17T12:42:53.8015526Z <a id="common.dsn"></a>
2025-08-17T12:42:53.8015918Z 
2025-08-17T12:42:53.8016038Z # common.dsn
2025-08-17T12:42:53.8016224Z 
2025-08-17T12:42:53.8016374Z <a id="common.dsn.build_dsn"></a>
2025-08-17T12:42:53.8016650Z 
2025-08-17T12:42:53.8016762Z #### build\_dsn
2025-08-17T12:42:53.8016948Z 
2025-08-17T12:42:53.8017058Z ```python
2025-08-17T12:42:53.8017371Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:42:53.8017857Z ```
2025-08-17T12:42:53.8018011Z 
2025-08-17T12:42:53.8018235Z Return a Postgres DSN, validating required variables.
2025-08-17T12:42:53.8018606Z 
2025-08-17T12:42:53.8018957Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T12:42:53.8019748Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T12:42:53.8020496Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T12:42:53.8021054Z missing.
2025-08-17T12:42:53.8021441Z 
2025-08-17T12:42:53.8021595Z <a id="common.models_vendor"></a>
2025-08-17T12:42:53.8021882Z 
2025-08-17T12:42:53.8022023Z # common.models\_vendor
2025-08-17T12:42:53.8022243Z 
2025-08-17T12:42:53.8022409Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T12:42:53.8022726Z 
2025-08-17T12:42:53.8022845Z ## Vendor Objects
2025-08-17T12:42:53.8023033Z 
2025-08-17T12:42:53.8023144Z ```python
2025-08-17T12:42:53.8023426Z class Vendor(Base)
2025-08-17T12:42:53.8023721Z ```
2025-08-17T12:42:53.8023877Z 
2025-08-17T12:42:53.8024014Z Vendor of inventory items.
2025-08-17T12:42:53.8024251Z 
2025-08-17T12:42:53.8024442Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T12:42:53.8024768Z 
2025-08-17T12:42:53.8024895Z ## VendorPrice Objects
2025-08-17T12:42:53.8025113Z 
2025-08-17T12:42:53.8025221Z ```python
2025-08-17T12:42:53.8025509Z class VendorPrice(Base)
2025-08-17T12:42:53.8026054Z ```
2025-08-17T12:42:53.8026209Z 
2025-08-17T12:42:53.8026411Z Association table linking vendors to pricing.
2025-08-17T12:42:53.8026757Z 
2025-08-17T12:42:53.8026904Z <a id="common.db_url"></a>
2025-08-17T12:42:53.8027143Z 
2025-08-17T12:42:53.8027275Z # common.db\_url
2025-08-17T12:42:53.8027465Z 
2025-08-17T12:42:53.8027616Z <a id="common.db_url.build_url"></a>
2025-08-17T12:42:53.8027917Z 
2025-08-17T12:42:53.8028037Z #### build\_url
2025-08-17T12:42:53.8028228Z 
2025-08-17T12:42:53.8028348Z ```python
2025-08-17T12:42:53.8028670Z def build_url(async_: bool = True) -> str
2025-08-17T12:42:53.8029077Z ```
2025-08-17T12:42:53.8029223Z 
2025-08-17T12:42:53.8029400Z Return Postgres DSN from env or PG_* parts.
2025-08-17T12:42:53.8029721Z 
2025-08-17T12:42:53.8029865Z <a id="common.keepa"></a>
2025-08-17T12:42:53.8030096Z 
2025-08-17T12:42:53.8030213Z # common.keepa
2025-08-17T12:42:53.8030403Z 
2025-08-17T12:42:53.8030534Z <a id="common.llm"></a>
2025-08-17T12:42:53.8030752Z 
2025-08-17T12:42:53.8030873Z # common.llm
2025-08-17T12:42:53.8031046Z 
2025-08-17T12:42:53.8031184Z <a id="common.settings"></a>
2025-08-17T12:42:53.8031442Z 
2025-08-17T12:42:53.8031575Z # common.settings
2025-08-17T12:42:53.8032120Z 
2025-08-17T12:42:53.8032256Z <a id="common.db"></a>
2025-08-17T12:42:53.8032465Z 
2025-08-17T12:42:53.8032575Z # common.db
2025-08-17T12:42:53.8032731Z 
2025-08-17T12:42:53.8032887Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T12:42:53.8033189Z 
2025-08-17T12:42:53.8033322Z #### build\_sqlalchemy\_url
2025-08-17T12:42:53.8033558Z 
2025-08-17T12:42:53.8033680Z ```python
2025-08-17T12:42:53.8033992Z def build_sqlalchemy_url() -> str
2025-08-17T12:42:53.8034367Z ```
2025-08-17T12:42:53.8034512Z 
2025-08-17T12:42:53.8034682Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T12:42:53.8035000Z 
2025-08-17T12:42:53.8035155Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T12:42:53.8035461Z 
2025-08-17T12:42:53.8035598Z #### build\_asyncpg\_dsn
2025-08-17T12:42:53.8036001Z 
2025-08-17T12:42:53.8036119Z ```python
2025-08-17T12:42:53.8036433Z def build_asyncpg_dsn() -> str
2025-08-17T12:42:53.8036794Z ```
2025-08-17T12:42:53.8036958Z 
2025-08-17T12:42:53.8037198Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T12:42:53.8037575Z 
2025-08-17T12:42:53.8037727Z <a id="common.db.refresh_mvs"></a>
2025-08-17T12:42:53.8038005Z 
2025-08-17T12:42:53.8038120Z #### refresh\_mvs
2025-08-17T12:42:53.8038305Z 
2025-08-17T12:42:53.8038425Z ```python
2025-08-17T12:42:53.8038757Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T12:42:53.8039190Z ```
2025-08-17T12:42:53.8039326Z 
2025-08-17T12:42:53.8039555Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T12:42:53.8039923Z 
2025-08-17T12:42:53.8040052Z <a id="common.config"></a>
2025-08-17T12:42:53.8040281Z 
2025-08-17T12:42:53.8040393Z # common.config
2025-08-17T12:42:53.8040576Z 
2025-08-17T12:42:53.8040700Z <a id="common.base"></a>
2025-08-17T12:42:53.8040916Z 
2025-08-17T12:42:53.8041030Z # common.base
2025-08-17T12:42:53.8041181Z 
2025-08-17T12:42:53.8041305Z <a id="common.base.Base"></a>
2025-08-17T12:42:53.8041522Z 
2025-08-17T12:42:53.8042016Z ## Base Objects
2025-08-17T12:42:53.8042189Z 
2025-08-17T12:42:53.8042288Z ```python
2025-08-17T12:42:53.8042545Z class Base(DeclarativeBase)
2025-08-17T12:42:53.8042833Z ```
2025-08-17T12:42:53.8042965Z 
2025-08-17T12:42:53.8043092Z Base class for SQLAlchemy models.
2025-08-17T12:42:53.8043331Z 
2025-08-17T12:42:53.8043440Z <a id="repricer"></a>
2025-08-17T12:42:53.8043612Z 
2025-08-17T12:42:53.8043710Z # repricer
2025-08-17T12:42:53.8043854Z 
2025-08-17T12:42:53.8043983Z <a id="repricer.app.schemas"></a>
2025-08-17T12:42:53.8044219Z 
2025-08-17T12:42:53.8044333Z # repricer.app.schemas
2025-08-17T12:42:53.8044522Z 
2025-08-17T12:42:53.8044645Z <a id="repricer.app.deps"></a>
2025-08-17T12:42:53.8044864Z 
2025-08-17T12:42:53.8044982Z # repricer.app.deps
2025-08-17T12:42:53.8045158Z 
2025-08-17T12:42:53.8045334Z Placeholder module for Keepa / SP-API clients.
2025-08-17T12:42:53.8045629Z 
2025-08-17T12:42:53.8045962Z <a id="repricer.app.logic"></a>
2025-08-17T12:42:53.8046197Z 
2025-08-17T12:42:53.8046316Z # repricer.app.logic
2025-08-17T12:42:53.8046503Z 
2025-08-17T12:42:53.8046663Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T12:42:53.8046941Z 
2025-08-17T12:42:53.8047043Z #### MIN\_MARGIN
2025-08-17T12:42:53.8047201Z 
2025-08-17T12:42:53.8047291Z 15 % ROI
2025-08-17T12:42:53.8047413Z 
2025-08-17T12:42:53.8047574Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T12:42:53.8047849Z 
2025-08-17T12:42:53.8048021Z #### compute\_price
2025-08-17T12:42:53.8048183Z 
2025-08-17T12:42:53.8048274Z ```python
2025-08-17T12:42:53.8048646Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T12:42:53.8049108Z ```
2025-08-17T12:42:53.8049228Z 
2025-08-17T12:42:53.8049387Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T12:42:53.8049810Z Replace with real competitive logic later.
2025-08-17T12:42:53.8050076Z 
2025-08-17T12:42:53.8050195Z <a id="repricer.app.main"></a>
2025-08-17T12:42:53.8050402Z 
2025-08-17T12:42:53.8050503Z # repricer.app.main
2025-08-17T12:42:53.8050680Z 
2025-08-17T12:42:53.8050976Z <a id="repricer.app"></a>
2025-08-17T12:42:53.8051166Z 
2025-08-17T12:42:53.8051270Z # repricer.app
2025-08-17T12:42:53.8051417Z 
2025-08-17T12:42:53.8051555Z <a id="repricer.tests.test_imports"></a>
2025-08-17T12:42:53.8051812Z 
2025-08-17T12:42:53.8051935Z # repricer.tests.test\_imports
2025-08-17T12:42:53.8052147Z 
2025-08-17T12:42:53.8052274Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T12:42:53.8052524Z 
2025-08-17T12:42:53.8052655Z # repricer.tests.test\_smoke
2025-08-17T12:42:53.8052877Z 
2025-08-17T12:42:53.8052999Z <a id="repricer.tests"></a>
2025-08-17T12:42:53.8053206Z 
2025-08-17T12:42:53.8053314Z # repricer.tests
2025-08-17T12:42:53.8053479Z 
2025-08-17T12:42:53.8053582Z <a id="db"></a>
2025-08-17T12:42:53.8053732Z 
2025-08-17T12:42:53.8053818Z # db
2025-08-17T12:42:53.8053948Z 
2025-08-17T12:42:53.8054066Z <a id="db.utils.views"></a>
2025-08-17T12:42:53.8054265Z 
2025-08-17T12:42:53.8054371Z # db.utils.views
2025-08-17T12:42:53.8054519Z 
2025-08-17T12:42:53.8054665Z <a id="db.utils.views.replace_view"></a>
2025-08-17T12:42:53.8054926Z 
2025-08-17T12:42:53.8055035Z #### replace\_view
2025-08-17T12:42:53.8055191Z 
2025-08-17T12:42:53.8055289Z ```python
2025-08-17T12:42:53.8055579Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T12:42:53.8056109Z ```
2025-08-17T12:42:53.8056247Z 
2025-08-17T12:42:53.8056382Z Drop and recreate a SQL view atomically.
2025-08-17T12:42:53.8056629Z 
2025-08-17T12:42:53.8056739Z <a id="db.utils"></a>
2025-08-17T12:42:53.8056912Z 
2025-08-17T12:42:53.8057007Z # db.utils
2025-08-17T12:42:53.8057142Z 
2025-08-17T12:42:53.8057267Z <a id="price_importer"></a>
2025-08-17T12:42:53.8057459Z 
2025-08-17T12:42:53.8057558Z # price\_importer
2025-08-17T12:42:53.8057717Z 
2025-08-17T12:42:53.8057871Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T12:42:53.8058142Z 
2025-08-17T12:42:53.8058278Z # price\_importer.services\_common.dsn
2025-08-17T12:42:53.8058526Z 
2025-08-17T12:42:53.8058707Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T12:42:53.8059191Z 
2025-08-17T12:42:53.8059298Z #### build\_dsn
2025-08-17T12:42:53.8059453Z 
2025-08-17T12:42:53.8059547Z ```python
2025-08-17T12:42:53.8059809Z def build_dsn(sync: bool = True) -> str
2025-08-17T12:42:53.8060130Z ```
2025-08-17T12:42:53.8060264Z 
2025-08-17T12:42:53.8060362Z Return safe DSN.
2025-08-17T12:42:53.8060518Z 
2025-08-17T12:42:53.8060974Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T12:42:53.8061281Z 
2025-08-17T12:42:53.8061471Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T12:42:53.8061778Z 
2025-08-17T12:42:53.8061950Z # price\_importer.services\_common.models\_vendor
2025-08-17T12:42:53.8062236Z 
2025-08-17T12:42:53.8062409Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T12:42:53.8062700Z 
2025-08-17T12:42:53.8062845Z # price\_importer.services\_common.db\_url
2025-08-17T12:42:53.8063114Z 
2025-08-17T12:42:53.8063319Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T12:42:53.8063655Z 
2025-08-17T12:42:53.8063763Z #### build\_url
2025-08-17T12:42:53.8063921Z 
2025-08-17T12:42:53.8064018Z ```python
2025-08-17T12:42:53.8064284Z def build_url(async_: bool = True) -> str
2025-08-17T12:42:53.8064628Z ```
2025-08-17T12:42:53.8064752Z 
2025-08-17T12:42:53.8064893Z Return Postgres DSN from env or PG_* parts.
2025-08-17T12:42:53.8065156Z 
2025-08-17T12:42:53.8065315Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T12:42:53.8065592Z 
2025-08-17T12:42:53.8065909Z # price\_importer.services\_common.keepa
2025-08-17T12:42:53.8066162Z 
2025-08-17T12:42:53.8066315Z <a id="price_importer.services_common.llm"></a>
2025-08-17T12:42:53.8066592Z 
2025-08-17T12:42:53.8066723Z # price\_importer.services\_common.llm
2025-08-17T12:42:53.8066968Z 
2025-08-17T12:42:53.8067138Z <a id="price_importer.services_common.settings"></a>
2025-08-17T12:42:53.8067444Z 
2025-08-17T12:42:53.8067589Z # price\_importer.services\_common.settings
2025-08-17T12:42:53.8067853Z 
2025-08-17T12:42:53.8068022Z <a id="price_importer.services_common.db"></a>
2025-08-17T12:42:53.8068471Z 
2025-08-17T12:42:53.8068607Z # price\_importer.services\_common.db
2025-08-17T12:42:53.8068854Z 
2025-08-17T12:42:53.8069094Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T12:42:53.8069463Z 
2025-08-17T12:42:53.8069586Z #### build\_sqlalchemy\_url
2025-08-17T12:42:53.8069792Z 
2025-08-17T12:42:53.8069887Z ```python
2025-08-17T12:42:53.8070142Z def build_sqlalchemy_url() -> str
2025-08-17T12:42:53.8070453Z ```
2025-08-17T12:42:53.8070570Z 
2025-08-17T12:42:53.8070718Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T12:42:53.8070977Z 
2025-08-17T12:42:53.8071193Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T12:42:53.8071542Z 
2025-08-17T12:42:53.8071656Z #### build\_asyncpg\_dsn
2025-08-17T12:42:53.8071845Z 
2025-08-17T12:42:53.8071942Z ```python
2025-08-17T12:42:53.8072191Z def build_asyncpg_dsn() -> str
2025-08-17T12:42:53.8072491Z ```
2025-08-17T12:42:53.8072626Z 
2025-08-17T12:42:53.8072841Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T12:42:53.8073179Z 
2025-08-17T12:42:53.8073375Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T12:42:53.8073700Z 
2025-08-17T12:42:53.8073800Z #### refresh\_mvs
2025-08-17T12:42:53.8073966Z 
2025-08-17T12:42:53.8074058Z ```python
2025-08-17T12:42:53.8074369Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T12:42:53.8074758Z ```
2025-08-17T12:42:53.8074890Z 
2025-08-17T12:42:53.8075100Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T12:42:53.8075431Z 
2025-08-17T12:42:53.8075583Z <a id="price_importer.services_common"></a>
2025-08-17T12:42:53.8076009Z 
2025-08-17T12:42:53.8076146Z # price\_importer.services\_common
2025-08-17T12:42:53.8076382Z 
2025-08-17T12:42:53.8076554Z <a id="price_importer.services_common.base"></a>
2025-08-17T12:42:53.8076836Z 
2025-08-17T12:42:53.8076965Z # price\_importer.services\_common.base
2025-08-17T12:42:53.8077391Z 
2025-08-17T12:42:53.8077539Z <a id="price_importer.normaliser"></a>
2025-08-17T12:42:53.8077807Z 
2025-08-17T12:42:53.8077940Z # price\_importer.normaliser
2025-08-17T12:42:53.8078170Z 
2025-08-17T12:42:53.8078338Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T12:42:53.8078626Z 
2025-08-17T12:42:53.8078770Z # price\_importer.common.models\_vendor
2025-08-17T12:42:53.8079012Z 
2025-08-17T12:42:53.8079152Z <a id="price_importer.common.db_url"></a>
2025-08-17T12:42:53.8079409Z 
2025-08-17T12:42:53.8079546Z # price\_importer.common.db\_url
2025-08-17T12:42:53.8079770Z 
2025-08-17T12:42:53.8079927Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T12:42:53.8080226Z 
2025-08-17T12:42:53.8080323Z #### make\_dsn
2025-08-17T12:42:53.8080472Z 
2025-08-17T12:42:53.8080570Z ```python
2025-08-17T12:42:53.8080836Z def make_dsn(async_: bool = False) -> str
2025-08-17T12:42:53.8081194Z ```
2025-08-17T12:42:53.8081322Z 
2025-08-17T12:42:53.8081510Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T12:42:53.8081833Z 
2025-08-17T12:42:53.8082011Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T12:42:53.8082314Z 
2025-08-17T12:42:53.8082414Z #### build\_url
2025-08-17T12:42:53.8082570Z 
2025-08-17T12:42:53.8082664Z ```python
2025-08-17T12:42:53.8082940Z def build_url(async_: bool = False) -> str
2025-08-17T12:42:53.8083281Z ```
2025-08-17T12:42:53.8083406Z 
2025-08-17T12:42:53.8083606Z Return Postgres DSN built from environment variables.
2025-08-17T12:42:53.8083923Z 
2025-08-17T12:42:53.8084056Z <a id="price_importer.common"></a>
2025-08-17T12:42:53.8084303Z 
2025-08-17T12:42:53.8084424Z # price\_importer.common
2025-08-17T12:42:53.8084625Z 
2025-08-17T12:42:53.8084765Z <a id="price_importer.common.base"></a>
2025-08-17T12:42:53.8085037Z 
2025-08-17T12:42:53.8085161Z # price\_importer.common.base
2025-08-17T12:42:53.8085384Z 
2025-08-17T12:42:53.8085545Z <a id="price_importer.tests.conftest"></a>
2025-08-17T12:42:53.8086000Z 
2025-08-17T12:42:53.8086142Z # price\_importer.tests.conftest
2025-08-17T12:42:53.8086638Z 
2025-08-17T12:42:53.8086802Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T12:42:53.8087101Z 
2025-08-17T12:42:53.8087242Z # price\_importer.tests.test\_reader
2025-08-17T12:42:53.8087513Z 
2025-08-17T12:42:53.8087673Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T12:42:53.8087969Z 
2025-08-17T12:42:53.8088123Z # price\_importer.tests.test\_imports
2025-08-17T12:42:53.8088379Z 
2025-08-17T12:42:53.8088531Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T12:42:53.8088818Z 
2025-08-17T12:42:53.8088950Z # price\_importer.tests.test\_smoke
2025-08-17T12:42:53.8089190Z 
2025-08-17T12:42:53.8089408Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T12:42:53.8089701Z 
2025-08-17T12:42:53.8089839Z # price\_importer.tests.test\_normaliser
2025-08-17T12:42:53.8090092Z 
2025-08-17T12:42:53.8090229Z <a id="price_importer.tests"></a>
2025-08-17T12:42:53.8090462Z 
2025-08-17T12:42:53.8090575Z # price\_importer.tests
2025-08-17T12:42:53.8090774Z 
2025-08-17T12:42:53.8090915Z <a id="price_importer.reader"></a>
2025-08-17T12:42:53.8091141Z 
2025-08-17T12:42:53.8091262Z # price\_importer.reader
2025-08-17T12:42:53.8091466Z 
2025-08-17T12:42:53.8091612Z <a id="price_importer.reader.load_file"></a>
2025-08-17T12:42:53.8091887Z 
2025-08-17T12:42:53.8091991Z #### load\_file
2025-08-17T12:42:53.8092147Z 
2025-08-17T12:42:53.8092238Z ```python
2025-08-17T12:42:53.8092504Z def load_file(path: str | Path) -> Any
2025-08-17T12:42:53.8092828Z ```
2025-08-17T12:42:53.8092955Z 
2025-08-17T12:42:53.8093089Z Return DataFrame from CSV or Excel file.
2025-08-17T12:42:53.8093336Z 
2025-08-17T12:42:53.8093501Z Raises RuntimeError if pandas is unavailable.
2025-08-17T12:42:53.8093769Z 
2025-08-17T12:42:53.8093901Z <a id="price_importer.repository"></a>
2025-08-17T12:42:53.8094141Z 
2025-08-17T12:42:53.8094280Z # price\_importer.repository
2025-08-17T12:42:53.8094494Z 
2025-08-17T12:42:53.8094624Z <a id="price_importer.import"></a>
2025-08-17T12:42:53.8094859Z 
2025-08-17T12:42:53.8095159Z # price\_importer.import
2025-08-17T12:42:53.8095364Z 
2025-08-17T12:42:53.8095477Z <a id="fees_h10"></a>
2025-08-17T12:42:53.8095649Z 
2025-08-17T12:42:53.8095905Z # fees\_h10
2025-08-17T12:42:53.8096046Z 
2025-08-17T12:42:53.8096164Z <a id="fees_h10.worker"></a>
2025-08-17T12:42:53.8096367Z 
2025-08-17T12:42:53.8096463Z # fees\_h10.worker
2025-08-17T12:42:53.8096631Z 
2025-08-17T12:42:53.8096782Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T12:42:53.8097053Z 
2025-08-17T12:42:53.8097167Z #### list\_active\_asins
2025-08-17T12:42:53.8097363Z 
2025-08-17T12:42:53.8097458Z ```python
2025-08-17T12:42:53.8097727Z def list_active_asins() -> list[str]
2025-08-17T12:42:53.8098054Z ```
2025-08-17T12:42:53.8098179Z 
2025-08-17T12:42:53.8098356Z Return known ASINs or an empty list if unavailable.
2025-08-17T12:42:53.8098655Z 
2025-08-17T12:42:53.8098787Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T12:42:53.8099042Z 
2025-08-17T12:42:53.8099163Z # fees\_h10.tests.test\_smoke
2025-08-17T12:42:53.8099384Z 
2025-08-17T12:42:53.8099507Z <a id="fees_h10.tests"></a>
2025-08-17T12:42:53.8099697Z 
2025-08-17T12:42:53.8099796Z # fees\_h10.tests
2025-08-17T12:42:53.8099957Z 
2025-08-17T12:42:53.8100073Z <a id="fees_h10.client"></a>
2025-08-17T12:42:53.8100271Z 
2025-08-17T12:42:53.8100369Z # fees\_h10.client
2025-08-17T12:42:53.8100535Z 
2025-08-17T12:42:53.8100657Z <a id="fees_h10.repository"></a>
2025-08-17T12:42:53.8100865Z 
2025-08-17T12:42:53.8100971Z # fees\_h10.repository
2025-08-17T12:42:53.8101152Z 
2025-08-17T12:42:53.8101257Z <a id="emailer"></a>
2025-08-17T12:42:53.8101423Z 
2025-08-17T12:42:53.8101520Z # emailer
2025-08-17T12:42:53.8101655Z 
2025-08-17T12:42:53.8101805Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T12:42:53.8102090Z 
2025-08-17T12:42:53.8102221Z # emailer.tests.test\_import\_emailer
2025-08-17T12:42:53.8102477Z 
2025-08-17T12:42:53.8102611Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T12:42:53.8102853Z 
2025-08-17T12:42:53.8102973Z # emailer.tests.test\_smoke
2025-08-17T12:42:53.8103362Z 
2025-08-17T12:42:53.8103490Z <a id="emailer.tests"></a>
2025-08-17T12:42:53.8103690Z 
2025-08-17T12:42:53.8103792Z # emailer.tests
2025-08-17T12:42:53.8103957Z 
2025-08-17T12:42:53.8104081Z <a id="emailer.generate_body"></a>
2025-08-17T12:42:53.8104322Z 
2025-08-17T12:42:53.8104441Z # emailer.generate\_body
2025-08-17T12:42:53.8104638Z 
2025-08-17T12:42:53.8104743Z <a id="llm_server"></a>
2025-08-17T12:42:53.8104925Z 
2025-08-17T12:42:53.8105021Z # llm\_server
2025-08-17T12:42:53.8105163Z 
2025-08-17T12:42:53.8105279Z <a id="llm_server.app"></a>
2025-08-17T12:42:53.8105475Z 
2025-08-17T12:42:53.8105580Z # llm\_server.app
2025-08-17T12:42:53.8105886Z 
