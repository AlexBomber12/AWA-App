2025-08-17T02:26:30.7786311Z ##[group]Run pydoc-markdown
2025-08-17T02:26:30.7786607Z [36;1mpydoc-markdown[0m
2025-08-17T02:26:30.7829684Z shell: /usr/bin/bash -e {0}
2025-08-17T02:26:30.7829905Z env:
2025-08-17T02:26:30.7830134Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:26:30.7830547Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T02:26:30.7830930Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:26:30.7831264Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:26:30.7831851Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T02:26:30.7832197Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T02:26:30.7832486Z ##[endgroup]
2025-08-17T02:26:31.2483092Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T02:26:31.2483765Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T02:26:31.2484078Z In "pydoc-markdown.yml"
2025-08-17T02:26:31.2484378Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T02:26:31.2484833Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T02:26:31.2485334Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T02:26:31.2485674Z 
2025-08-17T02:26:31.4573455Z <a id="__init__"></a>
2025-08-17T02:26:31.4573778Z 
2025-08-17T02:26:31.4573902Z # \_\_init\_\_
2025-08-17T02:26:31.4574110Z 
2025-08-17T02:26:31.4574247Z <a id="api"></a>
2025-08-17T02:26:31.4574424Z 
2025-08-17T02:26:31.4574530Z # api
2025-08-17T02:26:31.4574685Z 
2025-08-17T02:26:31.4574826Z <a id="api.tests.test_llm"></a>
2025-08-17T02:26:31.4575078Z 
2025-08-17T02:26:31.4575206Z # api.tests.test\_llm
2025-08-17T02:26:31.4575414Z 
2025-08-17T02:26:31.4575560Z <a id="api.tests.test_imports"></a>
2025-08-17T02:26:31.4575828Z 
2025-08-17T02:26:31.4575965Z # api.tests.test\_imports
2025-08-17T02:26:31.4576196Z 
2025-08-17T02:26:31.4576355Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T02:26:31.4576973Z 
2025-08-17T02:26:31.4577120Z # api.tests.test\_entrypoint
2025-08-17T02:26:31.4577390Z 
2025-08-17T02:26:31.4577553Z <a id="api.tests.test_health"></a>
2025-08-17T02:26:31.4577878Z 
2025-08-17T02:26:31.4578037Z # api.tests.test\_health
2025-08-17T02:26:31.4578294Z 
2025-08-17T02:26:31.4578464Z <a id="api.migrations.env"></a>
2025-08-17T02:26:31.4578742Z 
2025-08-17T02:26:31.4578880Z # api.migrations.env
2025-08-17T02:26:31.4579102Z 
2025-08-17T02:26:31.4579355Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T02:26:31.4579776Z 
2025-08-17T02:26:31.4579985Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T02:26:31.4580398Z 
2025-08-17T02:26:31.4580767Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T02:26:31.4581192Z 
2025-08-17T02:26:31.4581620Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T02:26:31.4581985Z 
2025-08-17T02:26:31.4582280Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T02:26:31.4582640Z 
2025-08-17T02:26:31.4582817Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T02:26:31.4583090Z 
2025-08-17T02:26:31.4583244Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T02:26:31.4583498Z 
2025-08-17T02:26:31.4583625Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T02:26:31.4583846Z 
2025-08-17T02:26:31.4583992Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T02:26:31.4584231Z 
2025-08-17T02:26:31.4584353Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T02:26:31.4584575Z 
2025-08-17T02:26:31.4584720Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T02:26:31.4584964Z 
2025-08-17T02:26:31.4585096Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T02:26:31.4585320Z 
2025-08-17T02:26:31.4585457Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T02:26:31.4585690Z 
2025-08-17T02:26:31.4585825Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T02:26:31.4586046Z 
2025-08-17T02:26:31.4586191Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T02:26:31.4586713Z 
2025-08-17T02:26:31.4586837Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T02:26:31.4587057Z 
2025-08-17T02:26:31.4587210Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T02:26:31.4587454Z 
2025-08-17T02:26:31.4587570Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T02:26:31.4587775Z 
2025-08-17T02:26:31.4587889Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T02:26:31.4588081Z 
2025-08-17T02:26:31.4588176Z # api.migrations.versions.0001\_baseline
2025-08-17T02:26:31.4588358Z 
2025-08-17T02:26:31.4588448Z <a id="api.migrations.versions"></a>
2025-08-17T02:26:31.4588609Z 
2025-08-17T02:26:31.4588699Z # api.migrations.versions
2025-08-17T02:26:31.4588832Z 
2025-08-17T02:26:31.4588912Z <a id="api.migrations"></a>
2025-08-17T02:26:31.4589055Z 
2025-08-17T02:26:31.4589126Z # api.migrations
2025-08-17T02:26:31.4589234Z 
2025-08-17T02:26:31.4589304Z <a id="api.db"></a>
2025-08-17T02:26:31.4589422Z 
2025-08-17T02:26:31.4589491Z # api.db
2025-08-17T02:26:31.4589581Z 
2025-08-17T02:26:31.4589667Z <a id="api.routes.stats"></a>
2025-08-17T02:26:31.4589807Z 
2025-08-17T02:26:31.4589876Z # api.routes.stats
2025-08-17T02:26:31.4589984Z 
2025-08-17T02:26:31.4590079Z <a id="api.routes.stats.kpi"></a>
2025-08-17T02:26:31.4590233Z 
2025-08-17T02:26:31.4590297Z #### kpi
2025-08-17T02:26:31.4590389Z 
2025-08-17T02:26:31.4590456Z ```python
2025-08-17T02:26:31.4590623Z @router.get("/stats/kpi")
2025-08-17T02:26:31.4591033Z def kpi() -> List[Dict[str, int]]
2025-08-17T02:26:31.4591596Z ```
2025-08-17T02:26:31.4591762Z 
2025-08-17T02:26:31.4591911Z Return KPI metrics (mock).
2025-08-17T02:26:31.4592157Z 
2025-08-17T02:26:31.4592345Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T02:26:31.4592672Z 
2025-08-17T02:26:31.4592799Z #### roi\_by\_vendor
2025-08-17T02:26:31.4593011Z 
2025-08-17T02:26:31.4593127Z ```python
2025-08-17T02:26:31.4593431Z @router.get("/stats/roi_by_vendor")
2025-08-17T02:26:31.4594152Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T02:26:31.4594408Z ```
2025-08-17T02:26:31.4594494Z 
2025-08-17T02:26:31.4594580Z Return ROI percent by vendor.
2025-08-17T02:26:31.4594724Z 
2025-08-17T02:26:31.4594825Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T02:26:31.4594999Z 
2025-08-17T02:26:31.4595065Z #### roi\_trend
2025-08-17T02:26:31.4595174Z 
2025-08-17T02:26:31.4595241Z ```python
2025-08-17T02:26:31.4595411Z @router.get("/stats/roi_trend")
2025-08-17T02:26:31.4595653Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T02:26:31.4595893Z ```
2025-08-17T02:26:31.4595976Z 
2025-08-17T02:26:31.4596052Z Return 30-day ROI trend.
2025-08-17T02:26:31.4596179Z 
2025-08-17T02:26:31.4596264Z <a id="api.routes.roi"></a>
2025-08-17T02:26:31.4596397Z 
2025-08-17T02:26:31.4596465Z # api.routes.roi
2025-08-17T02:26:31.4596646Z 
2025-08-17T02:26:31.4596740Z <a id="api.routes.health"></a>
2025-08-17T02:26:31.4596912Z 
2025-08-17T02:26:31.4596991Z # api.routes.health
2025-08-17T02:26:31.4597108Z 
2025-08-17T02:26:31.4597204Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T02:26:31.4597374Z 
2025-08-17T02:26:31.4597441Z #### MAX\_SKEW
2025-08-17T02:26:31.4597540Z 
2025-08-17T02:26:31.4597612Z seconds
2025-08-17T02:26:31.4597696Z 
2025-08-17T02:26:31.4597786Z <a id="api.routes.health.health"></a>
2025-08-17T02:26:31.4597947Z 
2025-08-17T02:26:31.4598016Z #### health
2025-08-17T02:26:31.4598106Z 
2025-08-17T02:26:31.4598171Z ```python
2025-08-17T02:26:31.4598366Z @router.get("/health", include_in_schema=False)
2025-08-17T02:26:31.4598735Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T02:26:31.4599076Z ```
2025-08-17T02:26:31.4599161Z 
2025-08-17T02:26:31.4599283Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T02:26:31.4599476Z 
2025-08-17T02:26:31.4599566Z <a id="api.routes.repository"></a>
2025-08-17T02:26:31.4599720Z 
2025-08-17T02:26:31.4599810Z # api.routes.repository
2025-08-17T02:26:31.4599936Z 
2025-08-17T02:26:31.4600014Z <a id="api.routes"></a>
2025-08-17T02:26:31.4600526Z 
2025-08-17T02:26:31.4600653Z # api.routes
2025-08-17T02:26:31.4600831Z 
2025-08-17T02:26:31.4600976Z <a id="api.models.fee"></a>
2025-08-17T02:26:31.4601227Z 
2025-08-17T02:26:31.4601564Z # api.models.fee
2025-08-17T02:26:31.4601770Z 
2025-08-17T02:26:31.4601915Z <a id="api.models"></a>
2025-08-17T02:26:31.4602131Z 
2025-08-17T02:26:31.4602248Z # api.models
2025-08-17T02:26:31.4602435Z 
2025-08-17T02:26:31.4602583Z <a id="api.roi_repository"></a>
2025-08-17T02:26:31.4602801Z 
2025-08-17T02:26:31.4602882Z # api.roi\_repository
2025-08-17T02:26:31.4603003Z 
2025-08-17T02:26:31.4603074Z <a id="api.main"></a>
2025-08-17T02:26:31.4603185Z 
2025-08-17T02:26:31.4603257Z # api.main
2025-08-17T02:26:31.4603352Z 
2025-08-17T02:26:31.4603431Z <a id="api.main.ready"></a>
2025-08-17T02:26:31.4603568Z 
2025-08-17T02:26:31.4603634Z #### ready
2025-08-17T02:26:31.4603722Z 
2025-08-17T02:26:31.4603785Z ```python
2025-08-17T02:26:31.4604051Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T02:26:31.4604488Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T02:26:31.4604837Z                                                                       str]
2025-08-17T02:26:31.4605075Z ```
2025-08-17T02:26:31.4605163Z 
2025-08-17T02:26:31.4605265Z Return 200 only when migrations are at head.
2025-08-17T02:26:31.4605454Z 
2025-08-17T02:26:31.4605532Z <a id="api.config"></a>
2025-08-17T02:26:31.4605654Z 
2025-08-17T02:26:31.4605721Z # api.config
2025-08-17T02:26:31.4605827Z 
2025-08-17T02:26:31.4605892Z <a id="etl"></a>
2025-08-17T02:26:31.4605996Z 
2025-08-17T02:26:31.4606063Z # etl
2025-08-17T02:26:31.4606150Z 
2025-08-17T02:26:31.4606231Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T02:26:31.4606430Z 
2025-08-17T02:26:31.4606518Z # etl.fba\_fee\_ingestor
2025-08-17T02:26:31.4606644Z 
2025-08-17T02:26:31.4606725Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T02:26:31.4606879Z 
2025-08-17T02:26:31.4606952Z # etl.sp\_fees\_ingestor
2025-08-17T02:26:31.4607242Z 
2025-08-17T02:26:31.4607329Z <a id="etl.keepa_ingestor"></a>
2025-08-17T02:26:31.4607472Z 
2025-08-17T02:26:31.4607544Z # etl.keepa\_ingestor
2025-08-17T02:26:31.4607660Z 
2025-08-17T02:26:31.4607734Z <a id="etl.db"></a>
2025-08-17T02:26:31.4607840Z 
2025-08-17T02:26:31.4607904Z # etl.db
2025-08-17T02:26:31.4607997Z 
2025-08-17T02:26:31.4608108Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T02:26:31.4608296Z 
2025-08-17T02:26:31.4608387Z # etl.dialects.amazon\_reimbursements
2025-08-17T02:26:31.4608555Z 
2025-08-17T02:26:31.4608645Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T02:26:31.4608808Z 
2025-08-17T02:26:31.4608896Z # etl.dialects.amazon\_returns
2025-08-17T02:26:31.4609036Z 
2025-08-17T02:26:31.4609113Z <a id="etl.dialects"></a>
2025-08-17T02:26:31.4609242Z 
2025-08-17T02:26:31.4609322Z # etl.dialects
2025-08-17T02:26:31.4609429Z 
2025-08-17T02:26:31.4609498Z <a id="ingest"></a>
2025-08-17T02:26:31.4609603Z 
2025-08-17T02:26:31.4609671Z # ingest
2025-08-17T02:26:31.4609773Z 
2025-08-17T02:26:31.4609860Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T02:26:31.4610016Z 
2025-08-17T02:26:31.4610102Z # ingest.tests.test\_smoke
2025-08-17T02:26:31.4610232Z 
2025-08-17T02:26:31.4610307Z <a id="ingest.tests"></a>
2025-08-17T02:26:31.4610437Z 
2025-08-17T02:26:31.4610504Z # ingest.tests
2025-08-17T02:26:31.4610605Z 
2025-08-17T02:26:31.4610691Z <a id="ingest.upload_router"></a>
2025-08-17T02:26:31.4610843Z 
2025-08-17T02:26:31.4610919Z # ingest.upload\_router
2025-08-17T02:26:31.4611038Z 
2025-08-17T02:26:31.4611129Z <a id="ingest.email_watcher"></a>
2025-08-17T02:26:31.4611271Z 
2025-08-17T02:26:31.4611536Z # ingest.email\_watcher
2025-08-17T02:26:31.4611659Z 
2025-08-17T02:26:31.4611758Z <a id="ingest.email_watcher.main"></a>
2025-08-17T02:26:31.4611917Z 
2025-08-17T02:26:31.4611980Z #### main
2025-08-17T02:26:31.4612073Z 
2025-08-17T02:26:31.4612139Z ```python
2025-08-17T02:26:31.4612306Z def main() -> dict[str, str]
2025-08-17T02:26:31.4612512Z ```
2025-08-17T02:26:31.4612597Z 
2025-08-17T02:26:31.4612872Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T02:26:31.4613096Z 
2025-08-17T02:26:31.4613222Z Returns {"status": "success"} when processing completes.
2025-08-17T02:26:31.4613428Z 
2025-08-17T02:26:31.4613510Z <a id="ingest.ingest_router"></a>
2025-08-17T02:26:31.4613652Z 
2025-08-17T02:26:31.4613726Z # ingest.ingest\_router
2025-08-17T02:26:31.4613849Z 
2025-08-17T02:26:31.4613925Z <a id="logistics_etl"></a>
2025-08-17T02:26:31.4614052Z 
2025-08-17T02:26:31.4614126Z # logistics\_etl
2025-08-17T02:26:31.4614232Z 
2025-08-17T02:26:31.4614309Z Daily logistics ETL job.
2025-08-17T02:26:31.4614428Z 
2025-08-17T02:26:31.4614516Z <a id="logistics_etl.__main__"></a>
2025-08-17T02:26:31.4614666Z 
2025-08-17T02:26:31.4614742Z # logistics\_etl.\_\_main\_\_
2025-08-17T02:26:31.4614882Z 
2025-08-17T02:26:31.4614961Z <a id="logistics_etl.dsn"></a>
2025-08-17T02:26:31.4615095Z 
2025-08-17T02:26:31.4615173Z # logistics\_etl.dsn
2025-08-17T02:26:31.4615291Z 
2025-08-17T02:26:31.4615411Z Local DSN builder to avoid cross-service dependency.
2025-08-17T02:26:31.4615608Z 
2025-08-17T02:26:31.4615708Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-17T02:26:31.4615872Z 
2025-08-17T02:26:31.4615937Z #### build\_dsn
2025-08-17T02:26:31.4616045Z 
2025-08-17T02:26:31.4616110Z ```python
2025-08-17T02:26:31.4616286Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:26:31.4616513Z ```
2025-08-17T02:26:31.4616598Z 
2025-08-17T02:26:31.4616757Z Return a Postgres DSN assembled from environment variables.
2025-08-17T02:26:31.4616981Z 
2025-08-17T02:26:31.4617131Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-17T02:26:31.4617518Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-17T02:26:31.4617857Z error when any required variable is missing.
2025-08-17T02:26:31.4618036Z 
2025-08-17T02:26:31.4618129Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T02:26:31.4618297Z 
2025-08-17T02:26:31.4618504Z # logistics\_etl.tests.conftest
2025-08-17T02:26:31.4618657Z 
2025-08-17T02:26:31.4618762Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T02:26:31.4618944Z 
2025-08-17T02:26:31.4619042Z # logistics\_etl.tests.test\_repository
2025-08-17T02:26:31.4619207Z 
2025-08-17T02:26:31.4619302Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T02:26:31.4619475Z 
2025-08-17T02:26:31.4619560Z # logistics\_etl.tests.test\_cron
2025-08-17T02:26:31.4619746Z 
2025-08-17T02:26:31.4619850Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T02:26:31.4620023Z 
2025-08-17T02:26:31.4620108Z # logistics\_etl.tests.test\_imports
2025-08-17T02:26:31.4620261Z 
2025-08-17T02:26:31.4620359Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T02:26:31.4620525Z 
2025-08-17T02:26:31.4620611Z # logistics\_etl.tests.test\_smoke
2025-08-17T02:26:31.4620767Z 
2025-08-17T02:26:31.4620861Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T02:26:31.4621028Z 
2025-08-17T02:26:31.4621117Z # logistics\_etl.tests.test\_client
2025-08-17T02:26:31.4621280Z 
2025-08-17T02:26:31.4621497Z <a id="logistics_etl.tests"></a>
2025-08-17T02:26:31.4621645Z 
2025-08-17T02:26:31.4621726Z # logistics\_etl.tests
2025-08-17T02:26:31.4621845Z 
2025-08-17T02:26:31.4621925Z <a id="logistics_etl.flow"></a>
2025-08-17T02:26:31.4622069Z 
2025-08-17T02:26:31.4622141Z # logistics\_etl.flow
2025-08-17T02:26:31.4622256Z 
2025-08-17T02:26:31.4622347Z <a id="logistics_etl.client"></a>
2025-08-17T02:26:31.4622495Z 
2025-08-17T02:26:31.4622569Z # logistics\_etl.client
2025-08-17T02:26:31.4622688Z 
2025-08-17T02:26:31.4622773Z <a id="logistics_etl.cron"></a>
2025-08-17T02:26:31.4622911Z 
2025-08-17T02:26:31.4622982Z # logistics\_etl.cron
2025-08-17T02:26:31.4623100Z 
2025-08-17T02:26:31.4623178Z <a id="logistics_etl.db"></a>
2025-08-17T02:26:31.4623314Z 
2025-08-17T02:26:31.4623389Z # logistics\_etl.db
2025-08-17T02:26:31.4623498Z 
2025-08-17T02:26:31.4623588Z <a id="logistics_etl.repository"></a>
2025-08-17T02:26:31.4623746Z 
2025-08-17T02:26:31.4623839Z # logistics\_etl.repository
2025-08-17T02:26:31.4624096Z 
2025-08-17T02:26:31.4624169Z <a id="alert_bot"></a>
2025-08-17T02:26:31.4624287Z 
2025-08-17T02:26:31.4624352Z # alert\_bot
2025-08-17T02:26:31.4624449Z 
2025-08-17T02:26:31.4624535Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T02:26:31.4624699Z 
2025-08-17T02:26:31.4624782Z # alert\_bot.tests.test\_smoke
2025-08-17T02:26:31.4624920Z 
2025-08-17T02:26:31.4625003Z <a id="alert_bot.tests"></a>
2025-08-17T02:26:31.4625138Z 
2025-08-17T02:26:31.4625204Z # alert\_bot.tests
2025-08-17T02:26:31.4625314Z 
2025-08-17T02:26:31.4625393Z <a id="alert_bot.alert_bot"></a>
2025-08-17T02:26:31.4625538Z 
2025-08-17T02:26:31.4625610Z # alert\_bot.alert\_bot
2025-08-17T02:26:31.4625728Z 
2025-08-17T02:26:31.4625802Z <a id="alert_bot.rules"></a>
2025-08-17T02:26:31.4625930Z 
2025-08-17T02:26:31.4626000Z # alert\_bot.rules
2025-08-17T02:26:31.4626104Z 
2025-08-17T02:26:31.4626171Z <a id="common"></a>
2025-08-17T02:26:31.4626283Z 
2025-08-17T02:26:31.4626348Z # common
2025-08-17T02:26:31.4626449Z 
2025-08-17T02:26:31.4626527Z <a id="common.dsn"></a>
2025-08-17T02:26:31.4626649Z 
2025-08-17T02:26:31.4626714Z # common.dsn
2025-08-17T02:26:31.4626808Z 
2025-08-17T02:26:31.4626894Z <a id="common.dsn.build_dsn"></a>
2025-08-17T02:26:31.4627037Z 
2025-08-17T02:26:31.4627102Z #### build\_dsn
2025-08-17T02:26:31.4627202Z 
2025-08-17T02:26:31.4627271Z ```python
2025-08-17T02:26:31.4627445Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:26:31.4627686Z ```
2025-08-17T02:26:31.4627777Z 
2025-08-17T02:26:31.4627895Z Return a Postgres DSN, validating required variables.
2025-08-17T02:26:31.4628095Z 
2025-08-17T02:26:31.4628283Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T02:26:31.4628712Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T02:26:31.4629123Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T02:26:31.4629423Z missing.
2025-08-17T02:26:31.4629632Z 
2025-08-17T02:26:31.4629714Z <a id="common.models_vendor"></a>
2025-08-17T02:26:31.4629869Z 
2025-08-17T02:26:31.4629944Z # common.models\_vendor
2025-08-17T02:26:31.4630069Z 
2025-08-17T02:26:31.4630156Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T02:26:31.4630321Z 
2025-08-17T02:26:31.4630396Z ## Vendor Objects
2025-08-17T02:26:31.4630502Z 
2025-08-17T02:26:31.4630566Z ```python
2025-08-17T02:26:31.4630726Z class Vendor(Base)
2025-08-17T02:26:31.4630887Z ```
2025-08-17T02:26:31.4630976Z 
2025-08-17T02:26:31.4631056Z Vendor of inventory items.
2025-08-17T02:26:31.4631184Z 
2025-08-17T02:26:31.4631286Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T02:26:31.4631577Z 
2025-08-17T02:26:31.4631656Z ## VendorPrice Objects
2025-08-17T02:26:31.4631771Z 
2025-08-17T02:26:31.4631842Z ```python
2025-08-17T02:26:31.4632002Z class VendorPrice(Base)
2025-08-17T02:26:31.4632181Z ```
2025-08-17T02:26:31.4632261Z 
2025-08-17T02:26:31.4632364Z Association table linking vendors to pricing.
2025-08-17T02:26:31.4632554Z 
2025-08-17T02:26:31.4632635Z <a id="common.db_url"></a>
2025-08-17T02:26:31.4632765Z 
2025-08-17T02:26:31.4632833Z # common.db\_url
2025-08-17T02:26:31.4632945Z 
2025-08-17T02:26:31.4633033Z <a id="common.db_url.build_url"></a>
2025-08-17T02:26:31.4633186Z 
2025-08-17T02:26:31.4633258Z #### build\_url
2025-08-17T02:26:31.4633359Z 
2025-08-17T02:26:31.4633423Z ```python
2025-08-17T02:26:31.4633602Z def build_url(async_: bool = True) -> str
2025-08-17T02:26:31.4633829Z ```
2025-08-17T02:26:31.4633917Z 
2025-08-17T02:26:31.4634016Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:26:31.4634190Z 
2025-08-17T02:26:31.4634276Z <a id="common.keepa"></a>
2025-08-17T02:26:31.4634403Z 
2025-08-17T02:26:31.4634474Z # common.keepa
2025-08-17T02:26:31.4634574Z 
2025-08-17T02:26:31.4634654Z <a id="common.llm"></a>
2025-08-17T02:26:31.4634769Z 
2025-08-17T02:26:31.4634833Z # common.llm
2025-08-17T02:26:31.4634933Z 
2025-08-17T02:26:31.4635012Z <a id="common.settings"></a>
2025-08-17T02:26:31.4635147Z 
2025-08-17T02:26:31.4635224Z # common.settings
2025-08-17T02:26:31.4635685Z 
2025-08-17T02:26:31.4635819Z <a id="common.db"></a>
2025-08-17T02:26:31.4636029Z 
2025-08-17T02:26:31.4636154Z # common.db
2025-08-17T02:26:31.4636323Z 
2025-08-17T02:26:31.4636494Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T02:26:31.4636827Z 
2025-08-17T02:26:31.4636979Z #### build\_sqlalchemy\_url
2025-08-17T02:26:31.4637155Z 
2025-08-17T02:26:31.4637223Z ```python
2025-08-17T02:26:31.4637408Z def build_sqlalchemy_url() -> str
2025-08-17T02:26:31.4637613Z ```
2025-08-17T02:26:31.4637705Z 
2025-08-17T02:26:31.4637800Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:26:31.4637970Z 
2025-08-17T02:26:31.4638065Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T02:26:31.4638230Z 
2025-08-17T02:26:31.4638306Z #### build\_asyncpg\_dsn
2025-08-17T02:26:31.4638439Z 
2025-08-17T02:26:31.4638502Z ```python
2025-08-17T02:26:31.4638670Z def build_asyncpg_dsn() -> str
2025-08-17T02:26:31.4638873Z ```
2025-08-17T02:26:31.4638966Z 
2025-08-17T02:26:31.4639115Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:26:31.4639325Z 
2025-08-17T02:26:31.4639412Z <a id="common.db.refresh_mvs"></a>
2025-08-17T02:26:31.4639564Z 
2025-08-17T02:26:31.4639638Z #### refresh\_mvs
2025-08-17T02:26:31.4639742Z 
2025-08-17T02:26:31.4639806Z ```python
2025-08-17T02:26:31.4640006Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:26:31.4640253Z ```
2025-08-17T02:26:31.4640339Z 
2025-08-17T02:26:31.4640477Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:26:31.4640688Z 
2025-08-17T02:26:31.4640772Z <a id="common.config"></a>
2025-08-17T02:26:31.4640900Z 
2025-08-17T02:26:31.4640970Z # common.config
2025-08-17T02:26:31.4641079Z 
2025-08-17T02:26:31.4641156Z <a id="common.base"></a>
2025-08-17T02:26:31.4641279Z 
2025-08-17T02:26:31.4641491Z # common.base
2025-08-17T02:26:31.4641603Z 
2025-08-17T02:26:31.4641683Z <a id="common.base.Base"></a>
2025-08-17T02:26:31.4641821Z 
2025-08-17T02:26:31.4642330Z ## Base Objects
2025-08-17T02:26:31.4642458Z 
2025-08-17T02:26:31.4642526Z ```python
2025-08-17T02:26:31.4642706Z class Base(DeclarativeBase)
2025-08-17T02:26:31.4642902Z ```
2025-08-17T02:26:31.4642994Z 
2025-08-17T02:26:31.4643079Z Base class for SQLAlchemy models.
2025-08-17T02:26:31.4643228Z 
2025-08-17T02:26:31.4643301Z <a id="repricer"></a>
2025-08-17T02:26:31.4643426Z 
2025-08-17T02:26:31.4643492Z # repricer
2025-08-17T02:26:31.4643585Z 
2025-08-17T02:26:31.4643679Z <a id="repricer.app.schemas"></a>
2025-08-17T02:26:31.4643829Z 
2025-08-17T02:26:31.4643907Z # repricer.app.schemas
2025-08-17T02:26:31.4644027Z 
2025-08-17T02:26:31.4644119Z <a id="repricer.app.deps"></a>
2025-08-17T02:26:31.4644263Z 
2025-08-17T02:26:31.4644338Z # repricer.app.deps
2025-08-17T02:26:31.4644456Z 
2025-08-17T02:26:31.4644573Z Placeholder module for Keepa / SP-API clients.
2025-08-17T02:26:31.4644760Z 
2025-08-17T02:26:31.4644851Z <a id="repricer.app.logic"></a>
2025-08-17T02:26:31.4644998Z 
2025-08-17T02:26:31.4645080Z # repricer.app.logic
2025-08-17T02:26:31.4645201Z 
2025-08-17T02:26:31.4645306Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T02:26:31.4645479Z 
2025-08-17T02:26:31.4645546Z #### MIN\_MARGIN
2025-08-17T02:26:31.4645656Z 
2025-08-17T02:26:31.4645719Z 15 % ROI
2025-08-17T02:26:31.4645807Z 
2025-08-17T02:26:31.4645908Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T02:26:31.4646093Z 
2025-08-17T02:26:31.4647850Z #### compute\_price
2025-08-17T02:26:31.4648044Z 
2025-08-17T02:26:31.4648159Z ```python
2025-08-17T02:26:31.4648574Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T02:26:31.4649090Z ```
2025-08-17T02:26:31.4649231Z 
2025-08-17T02:26:31.4649410Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T02:26:31.4649881Z Replace with real competitive logic later.
2025-08-17T02:26:31.4650177Z 
2025-08-17T02:26:31.4650339Z <a id="repricer.app.main"></a>
2025-08-17T02:26:31.4650654Z 
2025-08-17T02:26:31.4650785Z # repricer.app.main
2025-08-17T02:26:31.4650995Z 
2025-08-17T02:26:31.4651500Z <a id="repricer.app"></a>
2025-08-17T02:26:31.4651737Z 
2025-08-17T02:26:31.4651856Z # repricer.app
2025-08-17T02:26:31.4652040Z 
2025-08-17T02:26:31.4652196Z <a id="repricer.tests.test_imports"></a>
2025-08-17T02:26:31.4652486Z 
2025-08-17T02:26:31.4652631Z # repricer.tests.test\_imports
2025-08-17T02:26:31.4652866Z 
2025-08-17T02:26:31.4653012Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T02:26:31.4653291Z 
2025-08-17T02:26:31.4653427Z # repricer.tests.test\_smoke
2025-08-17T02:26:31.4653660Z 
2025-08-17T02:26:31.4653795Z <a id="repricer.tests"></a>
2025-08-17T02:26:31.4654025Z 
2025-08-17T02:26:31.4654146Z # repricer.tests
2025-08-17T02:26:31.4654336Z 
2025-08-17T02:26:31.4654456Z <a id="db"></a>
2025-08-17T02:26:31.4654622Z 
2025-08-17T02:26:31.4654721Z # db
2025-08-17T02:26:31.4654857Z 
2025-08-17T02:26:31.4654987Z <a id="db.utils.views"></a>
2025-08-17T02:26:31.4655203Z 
2025-08-17T02:26:31.4655312Z # db.utils.views
2025-08-17T02:26:31.4655425Z 
2025-08-17T02:26:31.4655528Z <a id="db.utils.views.replace_view"></a>
2025-08-17T02:26:31.4655701Z 
2025-08-17T02:26:31.4655780Z #### replace\_view
2025-08-17T02:26:31.4655886Z 
2025-08-17T02:26:31.4655951Z ```python
2025-08-17T02:26:31.4656153Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T02:26:31.4656396Z ```
2025-08-17T02:26:31.4656479Z 
2025-08-17T02:26:31.4656579Z Drop and recreate a SQL view atomically.
2025-08-17T02:26:31.4656752Z 
2025-08-17T02:26:31.4656823Z <a id="db.utils"></a>
2025-08-17T02:26:31.4656943Z 
2025-08-17T02:26:31.4657007Z # db.utils
2025-08-17T02:26:31.4657098Z 
2025-08-17T02:26:31.4657182Z <a id="price_importer"></a>
2025-08-17T02:26:31.4657310Z 
2025-08-17T02:26:31.4657380Z # price\_importer
2025-08-17T02:26:31.4657487Z 
2025-08-17T02:26:31.4657596Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T02:26:31.4657778Z 
2025-08-17T02:26:31.4657869Z # price\_importer.services\_common.dsn
2025-08-17T02:26:31.4658036Z 
2025-08-17T02:26:31.4658158Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T02:26:31.4658527Z 
2025-08-17T02:26:31.4658598Z #### build\_dsn
2025-08-17T02:26:31.4658698Z 
2025-08-17T02:26:31.4658763Z ```python
2025-08-17T02:26:31.4658940Z def build_dsn(sync: bool = True) -> str
2025-08-17T02:26:31.4659165Z ```
2025-08-17T02:26:31.4659254Z 
2025-08-17T02:26:31.4659322Z Return safe DSN.
2025-08-17T02:26:31.4659425Z 
2025-08-17T02:26:31.4659927Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T02:26:31.4660136Z 
2025-08-17T02:26:31.4660265Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T02:26:31.4660469Z 
2025-08-17T02:26:31.4660587Z # price\_importer.services\_common.models\_vendor
2025-08-17T02:26:31.4660774Z 
2025-08-17T02:26:31.4660881Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T02:26:31.4661070Z 
2025-08-17T02:26:31.4661165Z # price\_importer.services\_common.db\_url
2025-08-17T02:26:31.4661546Z 
2025-08-17T02:26:31.4661698Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T02:26:31.4661935Z 
2025-08-17T02:26:31.4662010Z #### build\_url
2025-08-17T02:26:31.4662112Z 
2025-08-17T02:26:31.4662185Z ```python
2025-08-17T02:26:31.4662358Z def build_url(async_: bool = True) -> str
2025-08-17T02:26:31.4662587Z ```
2025-08-17T02:26:31.4662671Z 
2025-08-17T02:26:31.4662768Z Return Postgres DSN from env or PG_* parts.
2025-08-17T02:26:31.4662953Z 
2025-08-17T02:26:31.4663061Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T02:26:31.4663245Z 
2025-08-17T02:26:31.4663336Z # price\_importer.services\_common.keepa
2025-08-17T02:26:31.4663506Z 
2025-08-17T02:26:31.4663607Z <a id="price_importer.services_common.llm"></a>
2025-08-17T02:26:31.4663783Z 
2025-08-17T02:26:31.4663879Z # price\_importer.services\_common.llm
2025-08-17T02:26:31.4664038Z 
2025-08-17T02:26:31.4664149Z <a id="price_importer.services_common.settings"></a>
2025-08-17T02:26:31.4664342Z 
2025-08-17T02:26:31.4664437Z # price\_importer.services\_common.settings
2025-08-17T02:26:31.4664604Z 
2025-08-17T02:26:31.4664712Z <a id="price_importer.services_common.db"></a>
2025-08-17T02:26:31.4665033Z 
2025-08-17T02:26:31.4665122Z # price\_importer.services\_common.db
2025-08-17T02:26:31.4665282Z 
2025-08-17T02:26:31.4665441Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T02:26:31.4665676Z 
2025-08-17T02:26:31.4665751Z #### build\_sqlalchemy\_url
2025-08-17T02:26:31.4665885Z 
2025-08-17T02:26:31.4665952Z ```python
2025-08-17T02:26:31.4666124Z def build_sqlalchemy_url() -> str
2025-08-17T02:26:31.4666334Z ```
2025-08-17T02:26:31.4666416Z 
2025-08-17T02:26:31.4666516Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T02:26:31.4666691Z 
2025-08-17T02:26:31.4666832Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T02:26:31.4667066Z 
2025-08-17T02:26:31.4667142Z #### build\_asyncpg\_dsn
2025-08-17T02:26:31.4667267Z 
2025-08-17T02:26:31.4667332Z ```python
2025-08-17T02:26:31.4667506Z def build_asyncpg_dsn() -> str
2025-08-17T02:26:31.4667704Z ```
2025-08-17T02:26:31.4667801Z 
2025-08-17T02:26:31.4667938Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T02:26:31.4668147Z 
2025-08-17T02:26:31.4668282Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T02:26:31.4668485Z 
2025-08-17T02:26:31.4668553Z #### refresh\_mvs
2025-08-17T02:26:31.4668666Z 
2025-08-17T02:26:31.4668730Z ```python
2025-08-17T02:26:31.4668927Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T02:26:31.4669180Z ```
2025-08-17T02:26:31.4669263Z 
2025-08-17T02:26:31.4669406Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T02:26:31.4669622Z 
2025-08-17T02:26:31.4669718Z <a id="price_importer.services_common"></a>
2025-08-17T02:26:31.4669895Z 
2025-08-17T02:26:31.4669982Z # price\_importer.services\_common
2025-08-17T02:26:31.4670135Z 
2025-08-17T02:26:31.4670239Z <a id="price_importer.services_common.base"></a>
2025-08-17T02:26:31.4670427Z 
2025-08-17T02:26:31.4670516Z # price\_importer.services\_common.base
2025-08-17T02:26:31.4670834Z 
2025-08-17T02:26:31.4670931Z <a id="price_importer.normaliser"></a>
2025-08-17T02:26:31.4671100Z 
2025-08-17T02:26:31.4671183Z # price\_importer.normaliser
2025-08-17T02:26:31.4671488Z 
2025-08-17T02:26:31.4671686Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T02:26:31.4671876Z 
2025-08-17T02:26:31.4671968Z # price\_importer.common.models\_vendor
2025-08-17T02:26:31.4672136Z 
2025-08-17T02:26:31.4672228Z <a id="price_importer.common.db_url"></a>
2025-08-17T02:26:31.4672397Z 
2025-08-17T02:26:31.4672486Z # price\_importer.common.db\_url
2025-08-17T02:26:31.4672633Z 
2025-08-17T02:26:31.4672737Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T02:26:31.4672925Z 
2025-08-17T02:26:31.4672990Z #### make\_dsn
2025-08-17T02:26:31.4673089Z 
2025-08-17T02:26:31.4673156Z ```python
2025-08-17T02:26:31.4673339Z def make_dsn(async_: bool = False) -> str
2025-08-17T02:26:31.4673563Z ```
2025-08-17T02:26:31.4673653Z 
2025-08-17T02:26:31.4673774Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T02:26:31.4673979Z 
2025-08-17T02:26:31.4674100Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T02:26:31.4674289Z 
2025-08-17T02:26:31.4674354Z #### build\_url
2025-08-17T02:26:31.4674461Z 
2025-08-17T02:26:31.4674527Z ```python
2025-08-17T02:26:31.4674706Z def build_url(async_: bool = False) -> str
2025-08-17T02:26:31.4674936Z ```
2025-08-17T02:26:31.4675018Z 
2025-08-17T02:26:31.4675145Z Return Postgres DSN built from environment variables.
2025-08-17T02:26:31.4675342Z 
2025-08-17T02:26:31.4675429Z <a id="price_importer.common"></a>
2025-08-17T02:26:31.4675582Z 
2025-08-17T02:26:31.4675667Z # price\_importer.common
2025-08-17T02:26:31.4675797Z 
2025-08-17T02:26:31.4675887Z <a id="price_importer.common.base"></a>
2025-08-17T02:26:31.4676057Z 
2025-08-17T02:26:31.4676141Z # price\_importer.common.base
2025-08-17T02:26:31.4676283Z 
2025-08-17T02:26:31.4676384Z <a id="price_importer.tests.conftest"></a>
2025-08-17T02:26:31.4676554Z 
2025-08-17T02:26:31.4676639Z # price\_importer.tests.conftest
2025-08-17T02:26:31.4676932Z 
2025-08-17T02:26:31.4677036Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T02:26:31.4677212Z 
2025-08-17T02:26:31.4677301Z # price\_importer.tests.test\_reader
2025-08-17T02:26:31.4677461Z 
2025-08-17T02:26:31.4677559Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T02:26:31.4677733Z 
2025-08-17T02:26:31.4677826Z # price\_importer.tests.test\_imports
2025-08-17T02:26:31.4677984Z 
2025-08-17T02:26:31.4678080Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T02:26:31.4678250Z 
2025-08-17T02:26:31.4678339Z # price\_importer.tests.test\_smoke
2025-08-17T02:26:31.4678496Z 
2025-08-17T02:26:31.4678601Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T02:26:31.4678786Z 
2025-08-17T02:26:31.4678876Z # price\_importer.tests.test\_normaliser
2025-08-17T02:26:31.4679041Z 
2025-08-17T02:26:31.4679128Z <a id="price_importer.tests"></a>
2025-08-17T02:26:31.4679276Z 
2025-08-17T02:26:31.4679351Z # price\_importer.tests
2025-08-17T02:26:31.4679477Z 
2025-08-17T02:26:31.4679573Z <a id="price_importer.reader"></a>
2025-08-17T02:26:31.4679721Z 
2025-08-17T02:26:31.4679800Z # price\_importer.reader
2025-08-17T02:26:31.4679932Z 
2025-08-17T02:26:31.4680027Z <a id="price_importer.reader.load_file"></a>
2025-08-17T02:26:31.4680196Z 
2025-08-17T02:26:31.4680267Z #### load\_file
2025-08-17T02:26:31.4680368Z 
2025-08-17T02:26:31.4680432Z ```python
2025-08-17T02:26:31.4680610Z def load_file(path: str | Path) -> Any
2025-08-17T02:26:31.4680824Z ```
2025-08-17T02:26:31.4680906Z 
2025-08-17T02:26:31.4681003Z Return DataFrame from CSV or Excel file.
2025-08-17T02:26:31.4681166Z 
2025-08-17T02:26:31.4681272Z Raises RuntimeError if pandas is unavailable.
2025-08-17T02:26:31.4681662Z 
2025-08-17T02:26:31.4681759Z <a id="price_importer.repository"></a>
2025-08-17T02:26:31.4681922Z 
2025-08-17T02:26:31.4682012Z # price\_importer.repository
2025-08-17T02:26:31.4682154Z 
2025-08-17T02:26:31.4682238Z <a id="price_importer.import"></a>
2025-08-17T02:26:31.4682389Z 
2025-08-17T02:26:31.4682599Z # price\_importer.import
2025-08-17T02:26:31.4682732Z 
2025-08-17T02:26:31.4682804Z <a id="fees_h10"></a>
2025-08-17T02:26:31.4682924Z 
2025-08-17T02:26:31.4682990Z # fees\_h10
2025-08-17T02:26:31.4683082Z 
2025-08-17T02:26:31.4683167Z <a id="fees_h10.worker"></a>
2025-08-17T02:26:31.4683298Z 
2025-08-17T02:26:31.4683367Z # fees\_h10.worker
2025-08-17T02:26:31.4683472Z 
2025-08-17T02:26:31.4683575Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T02:26:31.4683748Z 
2025-08-17T02:26:31.4683823Z #### list\_active\_asins
2025-08-17T02:26:31.4683951Z 
2025-08-17T02:26:31.4684015Z ```python
2025-08-17T02:26:31.4684189Z def list_active_asins() -> list[str]
2025-08-17T02:26:31.4684406Z ```
2025-08-17T02:26:31.4684491Z 
2025-08-17T02:26:31.4684613Z Return known ASINs or an empty list if unavailable.
2025-08-17T02:26:31.4684806Z 
2025-08-17T02:26:31.4684892Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T02:26:31.4685049Z 
2025-08-17T02:26:31.4685135Z # fees\_h10.tests.test\_smoke
2025-08-17T02:26:31.4685281Z 
2025-08-17T02:26:31.4685363Z <a id="fees_h10.tests"></a>
2025-08-17T02:26:31.4685502Z 
2025-08-17T02:26:31.4685571Z # fees\_h10.tests
2025-08-17T02:26:31.4685677Z 
2025-08-17T02:26:31.4685761Z <a id="fees_h10.client"></a>
2025-08-17T02:26:31.4685895Z 
2025-08-17T02:26:31.4685963Z # fees\_h10.client
2025-08-17T02:26:31.4686069Z 
2025-08-17T02:26:31.4686160Z <a id="fees_h10.repository"></a>
2025-08-17T02:26:31.4686302Z 
2025-08-17T02:26:31.4686376Z # fees\_h10.repository
2025-08-17T02:26:31.4686501Z 
2025-08-17T02:26:31.4686571Z <a id="emailer"></a>
2025-08-17T02:26:31.4686692Z 
2025-08-17T02:26:31.4686757Z # emailer
2025-08-17T02:26:31.4686854Z 
2025-08-17T02:26:31.4686958Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T02:26:31.4687138Z 
2025-08-17T02:26:31.4687233Z # emailer.tests.test\_import\_emailer
2025-08-17T02:26:31.4687390Z 
2025-08-17T02:26:31.4687476Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T02:26:31.4687637Z 
2025-08-17T02:26:31.4687717Z # emailer.tests.test\_smoke
2025-08-17T02:26:31.4687973Z 
2025-08-17T02:26:31.4688052Z <a id="emailer.tests"></a>
2025-08-17T02:26:31.4688186Z 
2025-08-17T02:26:31.4688252Z # emailer.tests
2025-08-17T02:26:31.4688357Z 
2025-08-17T02:26:31.4688446Z <a id="emailer.generate_body"></a>
2025-08-17T02:26:31.4688597Z 
2025-08-17T02:26:31.4688673Z # emailer.generate\_body
2025-08-17T02:26:31.4688803Z 
2025-08-17T02:26:31.4688875Z <a id="llm_server"></a>
2025-08-17T02:26:31.4688995Z 
2025-08-17T02:26:31.4689060Z # llm\_server
2025-08-17T02:26:31.4689164Z 
2025-08-17T02:26:31.4689243Z <a id="llm_server.app"></a>
2025-08-17T02:26:31.4689373Z 
2025-08-17T02:26:31.4689446Z # llm\_server.app
2025-08-17T02:26:31.4689552Z 
