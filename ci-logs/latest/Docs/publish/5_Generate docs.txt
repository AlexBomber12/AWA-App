2025-08-18T19:07:41.9143673Z ##[group]Run pydoc-markdown
2025-08-18T19:07:41.9143962Z [36;1mpydoc-markdown[0m
2025-08-18T19:07:41.9183597Z shell: /usr/bin/bash -e {0}
2025-08-18T19:07:41.9183830Z env:
2025-08-18T19:07:41.9184055Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:07:41.9184459Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T19:07:41.9184842Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:07:41.9185172Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:07:41.9185518Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T19:07:41.9185887Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T19:07:41.9186173Z ##[endgroup]
2025-08-18T19:07:42.3208648Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T19:07:42.3209473Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T19:07:42.3209960Z In "pydoc-markdown.yml"
2025-08-18T19:07:42.3210426Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T19:07:42.3211265Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T19:07:42.3212248Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T19:07:42.3212798Z 
2025-08-18T19:07:42.6170012Z <a id="__init__"></a>
2025-08-18T19:07:42.6170357Z 
2025-08-18T19:07:42.6170496Z # \_\_init\_\_
2025-08-18T19:07:42.6170697Z 
2025-08-18T19:07:42.6170819Z <a id="api"></a>
2025-08-18T19:07:42.6171041Z 
2025-08-18T19:07:42.6171154Z # api
2025-08-18T19:07:42.6171319Z 
2025-08-18T19:07:42.6171462Z <a id="api.errors"></a>
2025-08-18T19:07:42.6171711Z 
2025-08-18T19:07:42.6171835Z # api.errors
2025-08-18T19:07:42.6172376Z 
2025-08-18T19:07:42.6172570Z <a id="api.tests.test_errors_json"></a>
2025-08-18T19:07:42.6172903Z 
2025-08-18T19:07:42.6173065Z # api.tests.test\_errors\_json
2025-08-18T19:07:42.6173348Z 
2025-08-18T19:07:42.6173502Z <a id="api.tests.test_llm"></a>
2025-08-18T19:07:42.6173779Z 
2025-08-18T19:07:42.6174242Z # api.tests.test\_llm
2025-08-18T19:07:42.6174501Z 
2025-08-18T19:07:42.6174658Z <a id="api.tests.test_cors"></a>
2025-08-18T19:07:42.6174949Z 
2025-08-18T19:07:42.6175097Z # api.tests.test\_cors
2025-08-18T19:07:42.6175320Z 
2025-08-18T19:07:42.6175476Z <a id="api.tests.test_imports"></a>
2025-08-18T19:07:42.6175777Z 
2025-08-18T19:07:42.6175922Z # api.tests.test\_imports
2025-08-18T19:07:42.6176162Z 
2025-08-18T19:07:42.6176322Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T19:07:42.6176632Z 
2025-08-18T19:07:42.6176782Z # api.tests.test\_rate\_limit
2025-08-18T19:07:42.6177043Z 
2025-08-18T19:07:42.6177229Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T19:07:42.6177554Z 
2025-08-18T19:07:42.6177671Z #### app
2025-08-18T19:07:42.6177836Z 
2025-08-18T19:07:42.6177961Z noqa: E402
2025-08-18T19:07:42.6178132Z 
2025-08-18T19:07:42.6178297Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T19:07:42.6178616Z 
2025-08-18T19:07:42.6178763Z # api.tests.test\_entrypoint
2025-08-18T19:07:42.6179041Z 
2025-08-18T19:07:42.6179215Z <a id="api.tests.test_health"></a>
2025-08-18T19:07:42.6179500Z 
2025-08-18T19:07:42.6179640Z # api.tests.test\_health
2025-08-18T19:07:42.6179883Z 
2025-08-18T19:07:42.6180044Z <a id="api.logging_config"></a>
2025-08-18T19:07:42.6180315Z 
2025-08-18T19:07:42.6180466Z # api.logging\_config
2025-08-18T19:07:42.6180745Z 
2025-08-18T19:07:42.6180896Z <a id="api.migrations.env"></a>
2025-08-18T19:07:42.6181162Z 
2025-08-18T19:07:42.6181296Z # api.migrations.env
2025-08-18T19:07:42.6181521Z 
2025-08-18T19:07:42.6181738Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T19:07:42.6182309Z 
2025-08-18T19:07:42.6182521Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T19:07:42.6182866Z 
2025-08-18T19:07:42.6183068Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T19:07:42.6183435Z 
2025-08-18T19:07:42.6183610Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T19:07:42.6183934Z 
2025-08-18T19:07:42.6184231Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T19:07:42.6185109Z 
2025-08-18T19:07:42.6185377Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T19:07:42.6185789Z 
2025-08-18T19:07:42.6186031Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T19:07:42.6186426Z 
2025-08-18T19:07:42.6186628Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T19:07:42.6186989Z 
2025-08-18T19:07:42.6187216Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T19:07:42.6187597Z 
2025-08-18T19:07:42.6187798Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T19:07:42.6188148Z 
2025-08-18T19:07:42.6188387Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T19:07:42.6188789Z 
2025-08-18T19:07:42.6188994Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T19:07:42.6189352Z 
2025-08-18T19:07:42.6189579Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T19:07:42.6189974Z 
2025-08-18T19:07:42.6190179Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T19:07:42.6190552Z 
2025-08-18T19:07:42.6190791Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T19:07:42.6191176Z 
2025-08-18T19:07:42.6191372Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T19:07:42.6191728Z 
2025-08-18T19:07:42.6192177Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T19:07:42.6192600Z 
2025-08-18T19:07:42.6192835Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T19:07:42.6193234Z 
2025-08-18T19:07:42.6193481Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T19:07:42.6193903Z 
2025-08-18T19:07:42.6194119Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T19:07:42.6194482Z 
2025-08-18T19:07:42.6194744Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T19:07:42.6195167Z 
2025-08-18T19:07:42.6195390Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T19:07:42.6195766Z 
2025-08-18T19:07:42.6195980Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T19:07:42.6196601Z 
2025-08-18T19:07:42.6196791Z # api.migrations.versions.0001\_baseline
2025-08-18T19:07:42.6197119Z 
2025-08-18T19:07:42.6197299Z <a id="api.migrations.versions"></a>
2025-08-18T19:07:42.6197614Z 
2025-08-18T19:07:42.6197763Z # api.migrations.versions
2025-08-18T19:07:42.6198024Z 
2025-08-18T19:07:42.6198169Z <a id="api.migrations"></a>
2025-08-18T19:07:42.6198428Z 
2025-08-18T19:07:42.6198559Z # api.migrations
2025-08-18T19:07:42.6198761Z 
2025-08-18T19:07:42.6198888Z <a id="api.db"></a>
2025-08-18T19:07:42.6199091Z 
2025-08-18T19:07:42.6199214Z # api.db
2025-08-18T19:07:42.6199375Z 
2025-08-18T19:07:42.6199522Z <a id="api.routes.stats"></a>
2025-08-18T19:07:42.6199794Z 
2025-08-18T19:07:42.6199922Z # api.routes.stats
2025-08-18T19:07:42.6200128Z 
2025-08-18T19:07:42.6200289Z <a id="api.routes.stats.kpi"></a>
2025-08-18T19:07:42.6200583Z 
2025-08-18T19:07:42.6200701Z #### kpi
2025-08-18T19:07:42.6200863Z 
2025-08-18T19:07:42.6200987Z ```python
2025-08-18T19:07:42.6201394Z @router.get("/stats/kpi")
2025-08-18T19:07:42.6201840Z def kpi() -> List[Dict[str, int]]
2025-08-18T19:07:42.6202423Z ```
2025-08-18T19:07:42.6202689Z 
2025-08-18T19:07:42.6202845Z Return KPI metrics (mock).
2025-08-18T19:07:42.6203124Z 
2025-08-18T19:07:42.6203314Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T19:07:42.6203694Z 
2025-08-18T19:07:42.6203822Z #### roi\_by\_vendor
2025-08-18T19:07:42.6204044Z 
2025-08-18T19:07:42.6204161Z ```python
2025-08-18T19:07:42.6204471Z @router.get("/stats/roi_by_vendor")
2025-08-18T19:07:42.6204938Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T19:07:42.6205366Z ```
2025-08-18T19:07:42.6205520Z 
2025-08-18T19:07:42.6205671Z Return ROI percent by vendor.
2025-08-18T19:07:42.6205939Z 
2025-08-18T19:07:42.6206118Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T19:07:42.6206430Z 
2025-08-18T19:07:42.6206551Z #### roi\_trend
2025-08-18T19:07:42.6206751Z 
2025-08-18T19:07:42.6206867Z ```python
2025-08-18T19:07:42.6207172Z @router.get("/stats/roi_trend")
2025-08-18T19:07:42.6207895Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T19:07:42.6208343Z ```
2025-08-18T19:07:42.6208498Z 
2025-08-18T19:07:42.6208638Z Return 30-day ROI trend.
2025-08-18T19:07:42.6208999Z 
2025-08-18T19:07:42.6209159Z <a id="api.routes.roi"></a>
2025-08-18T19:07:42.6209411Z 
2025-08-18T19:07:42.6209539Z # api.routes.roi
2025-08-18T19:07:42.6209753Z 
2025-08-18T19:07:42.6209903Z <a id="api.routes.health"></a>
2025-08-18T19:07:42.6210175Z 
2025-08-18T19:07:42.6210320Z # api.routes.health
2025-08-18T19:07:42.6210528Z 
2025-08-18T19:07:42.6210692Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T19:07:42.6211012Z 
2025-08-18T19:07:42.6211145Z #### MAX\_SKEW
2025-08-18T19:07:42.6211329Z 
2025-08-18T19:07:42.6211485Z seconds
2025-08-18T19:07:42.6211677Z 
2025-08-18T19:07:42.6211826Z <a id="api.routes.health.health"></a>
2025-08-18T19:07:42.6212293Z 
2025-08-18T19:07:42.6212398Z #### health
2025-08-18T19:07:42.6212562Z 
2025-08-18T19:07:42.6212667Z ```python
2025-08-18T19:07:42.6213033Z @router.get("/health", include_in_schema=False)
2025-08-18T19:07:42.6213752Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T19:07:42.6214390Z ```
2025-08-18T19:07:42.6214545Z 
2025-08-18T19:07:42.6214812Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T19:07:42.6215194Z 
2025-08-18T19:07:42.6215359Z <a id="api.routes.repository"></a>
2025-08-18T19:07:42.6215654Z 
2025-08-18T19:07:42.6215809Z # api.routes.repository
2025-08-18T19:07:42.6216045Z 
2025-08-18T19:07:42.6216182Z <a id="api.routes"></a>
2025-08-18T19:07:42.6216405Z 
2025-08-18T19:07:42.6216536Z # api.routes
2025-08-18T19:07:42.6216717Z 
2025-08-18T19:07:42.6216864Z <a id="api.models.fee"></a>
2025-08-18T19:07:42.6217131Z 
2025-08-18T19:07:42.6217256Z # api.models.fee
2025-08-18T19:07:42.6217455Z 
2025-08-18T19:07:42.6217590Z <a id="api.models"></a>
2025-08-18T19:07:42.6217826Z 
2025-08-18T19:07:42.6217951Z # api.models
2025-08-18T19:07:42.6218131Z 
2025-08-18T19:07:42.6218537Z <a id="api.roi_repository"></a>
2025-08-18T19:07:42.6218833Z 
2025-08-18T19:07:42.6218973Z # api.roi\_repository
2025-08-18T19:07:42.6219204Z 
2025-08-18T19:07:42.6219336Z <a id="api.main"></a>
2025-08-18T19:07:42.6219544Z 
2025-08-18T19:07:42.6219661Z # api.main
2025-08-18T19:07:42.6219837Z 
2025-08-18T19:07:42.6219982Z <a id="api.main.ready"></a>
2025-08-18T19:07:42.6220228Z 
2025-08-18T19:07:42.6220350Z #### ready
2025-08-18T19:07:42.6220513Z 
2025-08-18T19:07:42.6220629Z ```python
2025-08-18T19:07:42.6221116Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T19:07:42.6222138Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T19:07:42.6222821Z                                                                       str]
2025-08-18T19:07:42.6223250Z ```
2025-08-18T19:07:42.6223411Z 
2025-08-18T19:07:42.6223598Z Return 200 only when migrations are at head.
2025-08-18T19:07:42.6223931Z 
2025-08-18T19:07:42.6224081Z <a id="api.config"></a>
2025-08-18T19:07:42.6224312Z 
2025-08-18T19:07:42.6224436Z # api.config
2025-08-18T19:07:42.6224614Z 
2025-08-18T19:07:42.6224744Z <a id="etl"></a>
2025-08-18T19:07:42.6224937Z 
2025-08-18T19:07:42.6225046Z # etl
2025-08-18T19:07:42.6225218Z 
2025-08-18T19:07:42.6225370Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T19:07:42.6225652Z 
2025-08-18T19:07:42.6225796Z # etl.fba\_fee\_ingestor
2025-08-18T19:07:42.6226025Z 
2025-08-18T19:07:42.6226175Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T19:07:42.6226453Z 
2025-08-18T19:07:42.6226598Z # etl.sp\_fees\_ingestor
2025-08-18T19:07:42.6226827Z 
2025-08-18T19:07:42.6226977Z <a id="etl.keepa_ingestor"></a>
2025-08-18T19:07:42.6227251Z 
2025-08-18T19:07:42.6227384Z # etl.keepa\_ingestor
2025-08-18T19:07:42.6227603Z 
2025-08-18T19:07:42.6227729Z <a id="etl.db"></a>
2025-08-18T19:07:42.6227946Z 
2025-08-18T19:07:42.6228057Z # etl.db
2025-08-18T19:07:42.6228222Z 
2025-08-18T19:07:42.6228384Z <a id="etl.dialects.schemas"></a>
2025-08-18T19:07:42.6228687Z 
2025-08-18T19:07:42.6228835Z # etl.dialects.schemas
2025-08-18T19:07:42.6229279Z 
2025-08-18T19:07:42.6229479Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T19:07:42.6229843Z 
2025-08-18T19:07:42.6230010Z # etl.dialects.amazon\_reimbursements
2025-08-18T19:07:42.6230317Z 
2025-08-18T19:07:42.6230514Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T19:07:42.6230854Z 
2025-08-18T19:07:42.6231015Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T19:07:42.6231331Z 
2025-08-18T19:07:42.6231505Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T19:07:42.6231827Z 
2025-08-18T19:07:42.6232204Z # etl.dialects.amazon\_returns
2025-08-18T19:07:42.6232493Z 
2025-08-18T19:07:42.6232682Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T19:07:42.6233013Z 
2025-08-18T19:07:42.6233179Z # etl.dialects.amazon\_fee\_preview
2025-08-18T19:07:42.6233473Z 
2025-08-18T19:07:42.6233672Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T19:07:42.6234035Z 
2025-08-18T19:07:42.6234202Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T19:07:42.6234537Z 
2025-08-18T19:07:42.6234721Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T19:07:42.6235052Z 
2025-08-18T19:07:42.6235211Z # etl.dialects.amazon\_settlements
2025-08-18T19:07:42.6235501Z 
2025-08-18T19:07:42.6235650Z <a id="etl.dialects"></a>
2025-08-18T19:07:42.6235890Z 
2025-08-18T19:07:42.6236008Z # etl.dialects
2025-08-18T19:07:42.6236199Z 
2025-08-18T19:07:42.6236321Z <a id="ingest"></a>
2025-08-18T19:07:42.6236522Z 
2025-08-18T19:07:42.6236636Z # ingest
2025-08-18T19:07:42.6236808Z 
2025-08-18T19:07:42.6236957Z <a id="ingest.maintenance"></a>
2025-08-18T19:07:42.6237226Z 
2025-08-18T19:07:42.6237365Z # ingest.maintenance
2025-08-18T19:07:42.6237580Z 
2025-08-18T19:07:42.6237725Z <a id="ingest.copy_loader"></a>
2025-08-18T19:07:42.6237996Z 
2025-08-18T19:07:42.6238127Z # ingest.copy\_loader
2025-08-18T19:07:42.6238342Z 
2025-08-18T19:07:42.6238535Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T19:07:42.6238892Z 
2025-08-18T19:07:42.6239306Z #### copy\_df\_via\_temp
2025-08-18T19:07:42.6239550Z 
2025-08-18T19:07:42.6239676Z ```python
2025-08-18T19:07:42.6239995Z def copy_df_via_temp(engine: Engine,
2025-08-18T19:07:42.6240447Z                      df: pd.DataFrame,
2025-08-18T19:07:42.6240884Z                      target_table: str,
2025-08-18T19:07:42.6241299Z                      *,
2025-08-18T19:07:42.6241688Z                      target_schema: Optional[str] = None,
2025-08-18T19:07:42.6242385Z                      columns: Sequence[str],
2025-08-18T19:07:42.6242901Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T19:07:42.6243436Z                      analyze_after: bool = False,
2025-08-18T19:07:42.6243937Z                      connection: Any | None = None) -> int
2025-08-18T19:07:42.6244374Z ```
2025-08-18T19:07:42.6244530Z 
2025-08-18T19:07:42.6244830Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T19:07:42.6245260Z 
2025-08-18T19:07:42.6245422Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T19:07:42.6245753Z 
2025-08-18T19:07:42.6245903Z # ingest.tests.test\_smoke
2025-08-18T19:07:42.6246149Z 
2025-08-18T19:07:42.6246297Z <a id="ingest.tests"></a>
2025-08-18T19:07:42.6246534Z 
2025-08-18T19:07:42.6246659Z # ingest.tests
2025-08-18T19:07:42.6246846Z 
2025-08-18T19:07:42.6247008Z <a id="ingest.upload_router"></a>
2025-08-18T19:07:42.6247294Z 
2025-08-18T19:07:42.6247434Z # ingest.upload\_router
2025-08-18T19:07:42.6247670Z 
2025-08-18T19:07:42.6247822Z <a id="ingest.email_watcher"></a>
2025-08-18T19:07:42.6248098Z 
2025-08-18T19:07:42.6248240Z # ingest.email\_watcher
2025-08-18T19:07:42.6248464Z 
2025-08-18T19:07:42.6248626Z <a id="ingest.email_watcher.main"></a>
2025-08-18T19:07:42.6248937Z 
2025-08-18T19:07:42.6249062Z #### main
2025-08-18T19:07:42.6249223Z 
2025-08-18T19:07:42.6249338Z ```python
2025-08-18T19:07:42.6249650Z def main() -> dict[str, str]
2025-08-18T19:07:42.6250008Z ```
2025-08-18T19:07:42.6250168Z 
2025-08-18T19:07:42.6250428Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T19:07:42.6251231Z 
2025-08-18T19:07:42.6251500Z Returns {"status": "success"} when processing completes.
2025-08-18T19:07:42.6252085Z 
2025-08-18T19:07:42.6252239Z <a id="ingest.tasks"></a>
2025-08-18T19:07:42.6252481Z 
2025-08-18T19:07:42.6252612Z # ingest.tasks
2025-08-18T19:07:42.6252801Z 
2025-08-18T19:07:42.6252978Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T19:07:42.6253316Z 
2025-08-18T19:07:42.6253450Z #### task\_import\_file
2025-08-18T19:07:42.6253671Z 
2025-08-18T19:07:42.6253795Z ```python
2025-08-18T19:07:42.6254181Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T19:07:42.6254716Z def task_import_file(self: Any,
2025-08-18T19:07:42.6255112Z                      uri: str,
2025-08-18T19:07:42.6255538Z                      report_type: Optional[str] = None,
2025-08-18T19:07:42.6256043Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T19:07:42.6256493Z ```
2025-08-18T19:07:42.6256642Z 
2025-08-18T19:07:42.6256902Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T19:07:42.6257326Z 
2025-08-18T19:07:42.6257480Z <a id="ingest.celery_app"></a>
2025-08-18T19:07:42.6257745Z 
2025-08-18T19:07:42.6257889Z # ingest.celery\_app
2025-08-18T19:07:42.6258111Z 
2025-08-18T19:07:42.6258264Z <a id="ingest.ingest_router"></a>
2025-08-18T19:07:42.6258555Z 
2025-08-18T19:07:42.6258692Z # ingest.ingest\_router
2025-08-18T19:07:42.6258948Z 
2025-08-18T19:07:42.6259088Z <a id="logistics_etl"></a>
2025-08-18T19:07:42.6259336Z 
2025-08-18T19:07:42.6259469Z # logistics\_etl
2025-08-18T19:07:42.6259673Z 
2025-08-18T19:07:42.6259813Z Daily logistics ETL job.
2025-08-18T19:07:42.6260050Z 
2025-08-18T19:07:42.6260208Z <a id="logistics_etl.__main__"></a>
2025-08-18T19:07:42.6260502Z 
2025-08-18T19:07:42.6260644Z # logistics\_etl.\_\_main\_\_
2025-08-18T19:07:42.6260913Z 
2025-08-18T19:07:42.6261063Z <a id="logistics_etl.dsn"></a>
2025-08-18T19:07:42.6261327Z 
2025-08-18T19:07:42.6261466Z # logistics\_etl.dsn
2025-08-18T19:07:42.6262320Z 
2025-08-18T19:07:42.6262578Z Local DSN builder to avoid cross-service dependency.
2025-08-18T19:07:42.6262970Z 
2025-08-18T19:07:42.6263157Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T19:07:42.6263479Z 
2025-08-18T19:07:42.6263599Z #### build\_dsn
2025-08-18T19:07:42.6263797Z 
2025-08-18T19:07:42.6263913Z ```python
2025-08-18T19:07:42.6264237Z def build_dsn(sync: bool = True) -> str
2025-08-18T19:07:42.6264656Z ```
2025-08-18T19:07:42.6264809Z 
2025-08-18T19:07:42.6265079Z Return a Postgres DSN assembled from environment variables.
2025-08-18T19:07:42.6265507Z 
2025-08-18T19:07:42.6265791Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T19:07:42.6266536Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T19:07:42.6267183Z error when any required variable is missing.
2025-08-18T19:07:42.6267535Z 
2025-08-18T19:07:42.6267714Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T19:07:42.6268022Z 
2025-08-18T19:07:42.6268187Z # logistics\_etl.tests.conftest
2025-08-18T19:07:42.6268444Z 
2025-08-18T19:07:42.6268624Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T19:07:42.6268954Z 
2025-08-18T19:07:42.6269127Z # logistics\_etl.tests.test\_repository
2025-08-18T19:07:42.6269435Z 
2025-08-18T19:07:42.6269609Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T19:07:42.6269934Z 
2025-08-18T19:07:42.6270091Z # logistics\_etl.tests.test\_cron
2025-08-18T19:07:42.6270375Z 
2025-08-18T19:07:42.6270564Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T19:07:42.6270902Z 
2025-08-18T19:07:42.6271063Z # logistics\_etl.tests.test\_imports
2025-08-18T19:07:42.6271365Z 
2025-08-18T19:07:42.6271553Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T19:07:42.6272085Z 
2025-08-18T19:07:42.6272256Z # logistics\_etl.tests.test\_smoke
2025-08-18T19:07:42.6272563Z 
2025-08-18T19:07:42.6272742Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T19:07:42.6273074Z 
2025-08-18T19:07:42.6273243Z # logistics\_etl.tests.test\_client
2025-08-18T19:07:42.6273544Z 
2025-08-18T19:07:42.6273946Z <a id="logistics_etl.tests"></a>
2025-08-18T19:07:42.6274235Z 
2025-08-18T19:07:42.6274392Z # logistics\_etl.tests
2025-08-18T19:07:42.6274620Z 
2025-08-18T19:07:42.6274771Z <a id="logistics_etl.flow"></a>
2025-08-18T19:07:42.6275047Z 
2025-08-18T19:07:42.6275178Z # logistics\_etl.flow
2025-08-18T19:07:42.6275393Z 
2025-08-18T19:07:42.6275550Z <a id="logistics_etl.client"></a>
2025-08-18T19:07:42.6275834Z 
2025-08-18T19:07:42.6275970Z # logistics\_etl.client
2025-08-18T19:07:42.6276200Z 
2025-08-18T19:07:42.6276353Z <a id="logistics_etl.cron"></a>
2025-08-18T19:07:42.6276617Z 
2025-08-18T19:07:42.6276748Z # logistics\_etl.cron
2025-08-18T19:07:42.6276964Z 
2025-08-18T19:07:42.6277109Z <a id="logistics_etl.db"></a>
2025-08-18T19:07:42.6277367Z 
2025-08-18T19:07:42.6277500Z # logistics\_etl.db
2025-08-18T19:07:42.6277714Z 
2025-08-18T19:07:42.6277877Z <a id="logistics_etl.repository"></a>
2025-08-18T19:07:42.6278176Z 
2025-08-18T19:07:42.6278345Z # logistics\_etl.repository
2025-08-18T19:07:42.6278610Z 
2025-08-18T19:07:42.6278744Z <a id="alert_bot"></a>
2025-08-18T19:07:42.6278967Z 
2025-08-18T19:07:42.6279086Z # alert\_bot
2025-08-18T19:07:42.6279265Z 
2025-08-18T19:07:42.6279428Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T19:07:42.6279744Z 
2025-08-18T19:07:42.6279897Z # alert\_bot.tests.test\_smoke
2025-08-18T19:07:42.6280157Z 
2025-08-18T19:07:42.6280309Z <a id="alert_bot.tests"></a>
2025-08-18T19:07:42.6280568Z 
2025-08-18T19:07:42.6280692Z # alert\_bot.tests
2025-08-18T19:07:42.6280898Z 
2025-08-18T19:07:42.6281045Z <a id="alert_bot.alert_bot"></a>
2025-08-18T19:07:42.6281321Z 
2025-08-18T19:07:42.6281456Z # alert\_bot.alert\_bot
2025-08-18T19:07:42.6281688Z 
2025-08-18T19:07:42.6281828Z <a id="alert_bot.rules"></a>
2025-08-18T19:07:42.6282259Z 
2025-08-18T19:07:42.6282396Z # alert\_bot.rules
2025-08-18T19:07:42.6282597Z 
2025-08-18T19:07:42.6282725Z <a id="common"></a>
2025-08-18T19:07:42.6282928Z 
2025-08-18T19:07:42.6283051Z # common
2025-08-18T19:07:42.6283449Z 
2025-08-18T19:07:42.6283601Z <a id="common.dsn"></a>
2025-08-18T19:07:42.6283838Z 
2025-08-18T19:07:42.6283957Z # common.dsn
2025-08-18T19:07:42.6284140Z 
2025-08-18T19:07:42.6284296Z <a id="common.dsn.build_dsn"></a>
2025-08-18T19:07:42.6284586Z 
2025-08-18T19:07:42.6284706Z #### build\_dsn
2025-08-18T19:07:42.6284892Z 
2025-08-18T19:07:42.6285016Z ```python
2025-08-18T19:07:42.6306417Z def build_dsn(sync: bool = True) -> str
2025-08-18T19:07:42.6306866Z ```
2025-08-18T19:07:42.6307010Z 
2025-08-18T19:07:42.6307227Z Return a Postgres DSN, validating required variables.
2025-08-18T19:07:42.6307563Z 
2025-08-18T19:07:42.6307868Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T19:07:42.6308569Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T19:07:42.6309250Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T19:07:42.6309751Z missing.
2025-08-18T19:07:42.6309909Z 
2025-08-18T19:07:42.6310037Z <a id="common.models_vendor"></a>
2025-08-18T19:07:42.6310284Z 
2025-08-18T19:07:42.6310399Z # common.models\_vendor
2025-08-18T19:07:42.6310600Z 
2025-08-18T19:07:42.6310743Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T19:07:42.6311011Z 
2025-08-18T19:07:42.6311120Z ## Vendor Objects
2025-08-18T19:07:42.6311279Z 
2025-08-18T19:07:42.6311373Z ```python
2025-08-18T19:07:42.6311611Z class Vendor(Base)
2025-08-18T19:07:42.6311859Z ```
2025-08-18T19:07:42.6312205Z 
2025-08-18T19:07:42.6312336Z Vendor of inventory items.
2025-08-18T19:07:42.6312557Z 
2025-08-18T19:07:42.6312732Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T19:07:42.6313048Z 
2025-08-18T19:07:42.6313173Z ## VendorPrice Objects
2025-08-18T19:07:42.6313379Z 
2025-08-18T19:07:42.6313491Z ```python
2025-08-18T19:07:42.6313749Z class VendorPrice(Base)
2025-08-18T19:07:42.6314047Z ```
2025-08-18T19:07:42.6314183Z 
2025-08-18T19:07:42.6314361Z Association table linking vendors to pricing.
2025-08-18T19:07:42.6314681Z 
2025-08-18T19:07:42.6315088Z <a id="common.db_url"></a>
2025-08-18T19:07:42.6315318Z 
2025-08-18T19:07:42.6315435Z # common.db\_url
2025-08-18T19:07:42.6315611Z 
2025-08-18T19:07:42.6315746Z <a id="common.db_url.build_url"></a>
2025-08-18T19:07:42.6316004Z 
2025-08-18T19:07:42.6316117Z #### build\_url
2025-08-18T19:07:42.6316277Z 
2025-08-18T19:07:42.6316380Z ```python
2025-08-18T19:07:42.6316675Z def build_url(async_: bool = True) -> str
2025-08-18T19:07:42.6317051Z ```
2025-08-18T19:07:42.6317193Z 
2025-08-18T19:07:42.6317358Z Return Postgres DSN from env or PG_* parts.
2025-08-18T19:07:42.6317646Z 
2025-08-18T19:07:42.6317780Z <a id="common.keepa"></a>
2025-08-18T19:07:42.6317999Z 
2025-08-18T19:07:42.6318108Z # common.keepa
2025-08-18T19:07:42.6318277Z 
2025-08-18T19:07:42.6318403Z <a id="common.llm"></a>
2025-08-18T19:07:42.6318603Z 
2025-08-18T19:07:42.6318705Z # common.llm
2025-08-18T19:07:42.6318879Z 
2025-08-18T19:07:42.6319009Z <a id="common.settings"></a>
2025-08-18T19:07:42.6319247Z 
2025-08-18T19:07:42.6319364Z # common.settings
2025-08-18T19:07:42.6319559Z 
2025-08-18T19:07:42.6319682Z <a id="common.db"></a>
2025-08-18T19:07:42.6319881Z 
2025-08-18T19:07:42.6319995Z # common.db
2025-08-18T19:07:42.6320152Z 
2025-08-18T19:07:42.6320308Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T19:07:42.6320609Z 
2025-08-18T19:07:42.6320736Z #### build\_sqlalchemy\_url
2025-08-18T19:07:42.6320959Z 
2025-08-18T19:07:42.6321058Z ```python
2025-08-18T19:07:42.6321344Z def build_sqlalchemy_url() -> str
2025-08-18T19:07:42.6321690Z ```
2025-08-18T19:07:42.6321822Z 
2025-08-18T19:07:42.6322148Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T19:07:42.6322448Z 
2025-08-18T19:07:42.6322612Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T19:07:42.6322894Z 
2025-08-18T19:07:42.6323016Z #### build\_asyncpg\_dsn
2025-08-18T19:07:42.6323242Z 
2025-08-18T19:07:42.6323346Z ```python
2025-08-18T19:07:42.6323627Z def build_asyncpg_dsn() -> str
2025-08-18T19:07:42.6323962Z ```
2025-08-18T19:07:42.6324271Z 
2025-08-18T19:07:42.6324498Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T19:07:42.6324863Z 
2025-08-18T19:07:42.6325007Z <a id="common.db.refresh_mvs"></a>
2025-08-18T19:07:42.6325268Z 
2025-08-18T19:07:42.6325385Z #### refresh\_mvs
2025-08-18T19:07:42.6325565Z 
2025-08-18T19:07:42.6325668Z ```python
2025-08-18T19:07:42.6326011Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T19:07:42.6326429Z ```
2025-08-18T19:07:42.6326573Z 
2025-08-18T19:07:42.6326806Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T19:07:42.6327183Z 
2025-08-18T19:07:42.6327322Z <a id="common.config"></a>
2025-08-18T19:07:42.6327549Z 
2025-08-18T19:07:42.6327660Z # common.config
2025-08-18T19:07:42.6327838Z 
2025-08-18T19:07:42.6327960Z <a id="common.base"></a>
2025-08-18T19:07:42.6328170Z 
2025-08-18T19:07:42.6328278Z # common.base
2025-08-18T19:07:42.6328447Z 
2025-08-18T19:07:42.6328576Z <a id="common.base.Base"></a>
2025-08-18T19:07:42.6328817Z 
2025-08-18T19:07:42.6328941Z ## Base Objects
2025-08-18T19:07:42.6329123Z 
2025-08-18T19:07:42.6329226Z ```python
2025-08-18T19:07:42.6329507Z class Base(DeclarativeBase)
2025-08-18T19:07:42.6329835Z ```
2025-08-18T19:07:42.6329975Z 
2025-08-18T19:07:42.6330110Z Base class for SQLAlchemy models.
2025-08-18T19:07:42.6330362Z 
2025-08-18T19:07:42.6330480Z <a id="repricer"></a>
2025-08-18T19:07:42.6330685Z 
2025-08-18T19:07:42.6330800Z # repricer
2025-08-18T19:07:42.6330948Z 
2025-08-18T19:07:42.6331093Z <a id="repricer.app.schemas"></a>
2025-08-18T19:07:42.6331351Z 
2025-08-18T19:07:42.6331485Z # repricer.app.schemas
2025-08-18T19:07:42.6331690Z 
2025-08-18T19:07:42.6331827Z <a id="repricer.app.deps"></a>
2025-08-18T19:07:42.6332237Z 
2025-08-18T19:07:42.6332362Z # repricer.app.deps
2025-08-18T19:07:42.6332546Z 
2025-08-18T19:07:42.6332743Z Placeholder module for Keepa / SP-API clients.
2025-08-18T19:07:42.6333058Z 
2025-08-18T19:07:42.6333203Z <a id="repricer.app.logic"></a>
2025-08-18T19:07:42.6333443Z 
2025-08-18T19:07:42.6333579Z # repricer.app.logic
2025-08-18T19:07:42.6333956Z 
2025-08-18T19:07:42.6334126Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T19:07:42.6334438Z 
2025-08-18T19:07:42.6334576Z #### MIN\_MARGIN
2025-08-18T19:07:42.6334761Z 
2025-08-18T19:07:42.6334877Z 15 % ROI
2025-08-18T19:07:42.6335018Z 
2025-08-18T19:07:42.6335194Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T19:07:42.6335517Z 
2025-08-18T19:07:42.6335636Z #### compute\_price
2025-08-18T19:07:42.6335820Z 
2025-08-18T19:07:42.6335926Z ```python
2025-08-18T19:07:42.6336353Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T19:07:42.6336851Z ```
2025-08-18T19:07:42.6336991Z 
2025-08-18T19:07:42.6337180Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T19:07:42.6337673Z Replace with real competitive logic later.
2025-08-18T19:07:42.6337977Z 
2025-08-18T19:07:42.6338122Z <a id="repricer.app.main"></a>
2025-08-18T19:07:42.6338376Z 
2025-08-18T19:07:42.6338497Z # repricer.app.main
2025-08-18T19:07:42.6338690Z 
2025-08-18T19:07:42.6338828Z <a id="repricer.app"></a>
2025-08-18T19:07:42.6339042Z 
2025-08-18T19:07:42.6339152Z # repricer.app
2025-08-18T19:07:42.6339317Z 
2025-08-18T19:07:42.6339474Z <a id="repricer.tests.test_imports"></a>
2025-08-18T19:07:42.6339763Z 
2025-08-18T19:07:42.6339902Z # repricer.tests.test\_imports
2025-08-18T19:07:42.6340149Z 
2025-08-18T19:07:42.6340368Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T19:07:42.6340646Z 
2025-08-18T19:07:42.6340788Z # repricer.tests.test\_smoke
2025-08-18T19:07:42.6341021Z 
2025-08-18T19:07:42.6341152Z <a id="repricer.tests"></a>
2025-08-18T19:07:42.6341377Z 
2025-08-18T19:07:42.6341497Z # repricer.tests
2025-08-18T19:07:42.6341677Z 
2025-08-18T19:07:42.6341787Z <a id="db"></a>
2025-08-18T19:07:42.6342130Z 
2025-08-18T19:07:42.6342230Z # db
2025-08-18T19:07:42.6342373Z 
2025-08-18T19:07:42.6342501Z <a id="db.utils.views"></a>
2025-08-18T19:07:42.6342730Z 
2025-08-18T19:07:42.6342842Z # db.utils.views
2025-08-18T19:07:42.6343020Z 
2025-08-18T19:07:42.6343369Z <a id="db.utils.views.replace_view"></a>
2025-08-18T19:07:42.6343667Z 
2025-08-18T19:07:42.6343779Z #### replace\_view
2025-08-18T19:07:42.6343964Z 
2025-08-18T19:07:42.6344067Z ```python
2025-08-18T19:07:42.6344381Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T19:07:42.6344798Z ```
2025-08-18T19:07:42.6344935Z 
2025-08-18T19:07:42.6345089Z Drop and recreate a SQL view atomically.
2025-08-18T19:07:42.6345375Z 
2025-08-18T19:07:42.6345497Z <a id="db.utils"></a>
2025-08-18T19:07:42.6345690Z 
2025-08-18T19:07:42.6345801Z # db.utils
2025-08-18T19:07:42.6345955Z 
2025-08-18T19:07:42.6346088Z <a id="price_importer"></a>
2025-08-18T19:07:42.6346329Z 
2025-08-18T19:07:42.6346444Z # price\_importer
2025-08-18T19:07:42.6346629Z 
2025-08-18T19:07:42.6346805Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T19:07:42.6347125Z 
2025-08-18T19:07:42.6347274Z # price\_importer.services\_common.dsn
2025-08-18T19:07:42.6347548Z 
2025-08-18T19:07:42.6347769Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T19:07:42.6348142Z 
2025-08-18T19:07:42.6348251Z #### build\_dsn
2025-08-18T19:07:42.6348430Z 
2025-08-18T19:07:42.6348537Z ```python
2025-08-18T19:07:42.6348831Z def build_dsn(sync: bool = True) -> str
2025-08-18T19:07:42.6349207Z ```
2025-08-18T19:07:42.6349346Z 
2025-08-18T19:07:42.6349465Z Return safe DSN.
2025-08-18T19:07:42.6349640Z 
2025-08-18T19:07:42.6350123Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T19:07:42.6350471Z 
2025-08-18T19:07:42.6350696Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T19:07:42.6351049Z 
2025-08-18T19:07:42.6351236Z # price\_importer.services\_common.models\_vendor
2025-08-18T19:07:42.6351564Z 
2025-08-18T19:07:42.6351742Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T19:07:42.6352258Z 
2025-08-18T19:07:42.6352431Z # price\_importer.services\_common.db\_url
2025-08-18T19:07:42.6352727Z 
2025-08-18T19:07:42.6352957Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T19:07:42.6353331Z 
2025-08-18T19:07:42.6353695Z #### build\_url
2025-08-18T19:07:42.6353866Z 
2025-08-18T19:07:42.6353975Z ```python
2025-08-18T19:07:42.6354275Z def build_url(async_: bool = True) -> str
2025-08-18T19:07:42.6354663Z ```
2025-08-18T19:07:42.6354813Z 
2025-08-18T19:07:42.6354981Z Return Postgres DSN from env or PG_* parts.
2025-08-18T19:07:42.6355285Z 
2025-08-18T19:07:42.6355472Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T19:07:42.6355788Z 
2025-08-18T19:07:42.6355928Z # price\_importer.services\_common.keepa
2025-08-18T19:07:42.6356193Z 
2025-08-18T19:07:42.6356353Z <a id="price_importer.services_common.llm"></a>
2025-08-18T19:07:42.6356662Z 
2025-08-18T19:07:42.6356814Z # price\_importer.services\_common.llm
2025-08-18T19:07:42.6357108Z 
2025-08-18T19:07:42.6357311Z <a id="price_importer.services_common.settings"></a>
2025-08-18T19:07:42.6357657Z 
2025-08-18T19:07:42.6357829Z # price\_importer.services\_common.settings
2025-08-18T19:07:42.6358113Z 
2025-08-18T19:07:42.6358288Z <a id="price_importer.services_common.db"></a>
2025-08-18T19:07:42.6358589Z 
2025-08-18T19:07:42.6358738Z # price\_importer.services\_common.db
2025-08-18T19:07:42.6358999Z 
2025-08-18T19:07:42.6359245Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T19:07:42.6359641Z 
2025-08-18T19:07:42.6359767Z #### build\_sqlalchemy\_url
2025-08-18T19:07:42.6359983Z 
2025-08-18T19:07:42.6360094Z ```python
2025-08-18T19:07:42.6360366Z def build_sqlalchemy_url() -> str
2025-08-18T19:07:42.6360698Z ```
2025-08-18T19:07:42.6360830Z 
2025-08-18T19:07:42.6360981Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T19:07:42.6361271Z 
2025-08-18T19:07:42.6361497Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T19:07:42.6362014Z 
2025-08-18T19:07:42.6362144Z #### build\_asyncpg\_dsn
2025-08-18T19:07:42.6362342Z 
2025-08-18T19:07:42.6362439Z ```python
2025-08-18T19:07:42.6362705Z def build_asyncpg_dsn() -> str
2025-08-18T19:07:42.6363009Z ```
2025-08-18T19:07:42.6363333Z 
2025-08-18T19:07:42.6363553Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T19:07:42.6363906Z 
2025-08-18T19:07:42.6364114Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T19:07:42.6364468Z 
2025-08-18T19:07:42.6364579Z #### refresh\_mvs
2025-08-18T19:07:42.6364748Z 
2025-08-18T19:07:42.6364860Z ```python
2025-08-18T19:07:42.6365171Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T19:07:42.6365584Z ```
2025-08-18T19:07:42.6365722Z 
2025-08-18T19:07:42.6365945Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T19:07:42.6366309Z 
2025-08-18T19:07:42.6366465Z <a id="price_importer.services_common"></a>
2025-08-18T19:07:42.6366750Z 
2025-08-18T19:07:42.6366892Z # price\_importer.services\_common
2025-08-18T19:07:42.6367154Z 
2025-08-18T19:07:42.6367319Z <a id="price_importer.services_common.base"></a>
2025-08-18T19:07:42.6367616Z 
2025-08-18T19:07:42.6367765Z # price\_importer.services\_common.base
2025-08-18T19:07:42.6368032Z 
2025-08-18T19:07:42.6368170Z <a id="price_importer.normaliser"></a>
2025-08-18T19:07:42.6368445Z 
2025-08-18T19:07:42.6368566Z # price\_importer.normaliser
2025-08-18T19:07:42.6368768Z 
2025-08-18T19:07:42.6368975Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T19:07:42.6369241Z 
2025-08-18T19:07:42.6369369Z # price\_importer.common.models\_vendor
2025-08-18T19:07:42.6369601Z 
2025-08-18T19:07:42.6369736Z <a id="price_importer.common.db_url"></a>
2025-08-18T19:07:42.6369969Z 
2025-08-18T19:07:42.6370090Z # price\_importer.common.db\_url
2025-08-18T19:07:42.6370302Z 
2025-08-18T19:07:42.6370451Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T19:07:42.6370716Z 
2025-08-18T19:07:42.6370814Z #### make\_dsn
2025-08-18T19:07:42.6370952Z 
2025-08-18T19:07:42.6371043Z ```python
2025-08-18T19:07:42.6371294Z def make_dsn(async_: bool = False) -> str
2025-08-18T19:07:42.6371604Z ```
2025-08-18T19:07:42.6371723Z 
2025-08-18T19:07:42.6372043Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T19:07:42.6372337Z 
2025-08-18T19:07:42.6372672Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T19:07:42.6372945Z 
2025-08-18T19:07:42.6373035Z #### build\_url
2025-08-18T19:07:42.6373174Z 
2025-08-18T19:07:42.6373272Z ```python
2025-08-18T19:07:42.6373526Z def build_url(async_: bool = False) -> str
2025-08-18T19:07:42.6373913Z ```
2025-08-18T19:07:42.6374059Z 
2025-08-18T19:07:42.6374241Z Return Postgres DSN built from environment variables.
2025-08-18T19:07:42.6374590Z 
2025-08-18T19:07:42.6374739Z <a id="price_importer.common"></a>
2025-08-18T19:07:42.6375007Z 
2025-08-18T19:07:42.6375141Z # price\_importer.common
2025-08-18T19:07:42.6375369Z 
2025-08-18T19:07:42.6375506Z <a id="price_importer.common.base"></a>
2025-08-18T19:07:42.6375759Z 
2025-08-18T19:07:42.6375881Z # price\_importer.common.base
2025-08-18T19:07:42.6376102Z 
2025-08-18T19:07:42.6376275Z <a id="price_importer.tests.conftest"></a>
2025-08-18T19:07:42.6376591Z 
2025-08-18T19:07:42.6376739Z # price\_importer.tests.conftest
2025-08-18T19:07:42.6377023Z 
2025-08-18T19:07:42.6377202Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T19:07:42.6377533Z 
2025-08-18T19:07:42.6377685Z # price\_importer.tests.test\_reader
2025-08-18T19:07:42.6377948Z 
2025-08-18T19:07:42.6378122Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T19:07:42.6378438Z 
2025-08-18T19:07:42.6378590Z # price\_importer.tests.test\_imports
2025-08-18T19:07:42.6378864Z 
2025-08-18T19:07:42.6379025Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T19:07:42.6379318Z 
2025-08-18T19:07:42.6379463Z # price\_importer.tests.test\_smoke
2025-08-18T19:07:42.6379745Z 
2025-08-18T19:07:42.6379918Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T19:07:42.6380229Z 
2025-08-18T19:07:42.6380389Z # price\_importer.tests.test\_normaliser
2025-08-18T19:07:42.6380657Z 
2025-08-18T19:07:42.6380788Z <a id="price_importer.tests"></a>
2025-08-18T19:07:42.6381035Z 
2025-08-18T19:07:42.6381155Z # price\_importer.tests
2025-08-18T19:07:42.6381528Z 
2025-08-18T19:07:42.6381672Z <a id="price_importer.reader"></a>
2025-08-18T19:07:42.6382078Z 
2025-08-18T19:07:42.6382200Z # price\_importer.reader
2025-08-18T19:07:42.6382407Z 
2025-08-18T19:07:42.6382552Z <a id="price_importer.repository"></a>
2025-08-18T19:07:42.6382812Z 
2025-08-18T19:07:42.6382938Z # price\_importer.repository
2025-08-18T19:07:42.6383166Z 
2025-08-18T19:07:42.6383296Z <a id="price_importer.import"></a>
2025-08-18T19:07:42.6383534Z 
2025-08-18T19:07:42.6383650Z # price\_importer.import
2025-08-18T19:07:42.6383845Z 
2025-08-18T19:07:42.6383953Z <a id="fees_h10"></a>
2025-08-18T19:07:42.6384148Z 
2025-08-18T19:07:42.6384267Z # fees\_h10
2025-08-18T19:07:42.6384421Z 
2025-08-18T19:07:42.6384550Z <a id="fees_h10.worker"></a>
2025-08-18T19:07:42.6384789Z 
2025-08-18T19:07:42.6384913Z # fees\_h10.worker
2025-08-18T19:07:42.6385097Z 
2025-08-18T19:07:42.6385261Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T19:07:42.6385570Z 
2025-08-18T19:07:42.6385693Z #### list\_active\_asins
2025-08-18T19:07:42.6385911Z 
2025-08-18T19:07:42.6386035Z ```python
2025-08-18T19:07:42.6386323Z def list_active_asins() -> list[str]
2025-08-18T19:07:42.6386697Z ```
2025-08-18T19:07:42.6386843Z 
2025-08-18T19:07:42.6387037Z Return known ASINs or an empty list if unavailable.
2025-08-18T19:07:42.6387378Z 
2025-08-18T19:07:42.6387523Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T19:07:42.6387799Z 
2025-08-18T19:07:42.6387929Z # fees\_h10.tests.test\_smoke
2025-08-18T19:07:42.6388173Z 
2025-08-18T19:07:42.6388301Z <a id="fees_h10.tests"></a>
2025-08-18T19:07:42.6388530Z 
2025-08-18T19:07:42.6388652Z # fees\_h10.tests
2025-08-18T19:07:42.6388833Z 
2025-08-18T19:07:42.6388966Z <a id="fees_h10.client"></a>
2025-08-18T19:07:42.6389195Z 
2025-08-18T19:07:42.6389318Z # fees\_h10.client
2025-08-18T19:07:42.6389501Z 
2025-08-18T19:07:42.6389636Z <a id="fees_h10.repository"></a>
2025-08-18T19:07:42.6389896Z 
2025-08-18T19:07:42.6390020Z # fees\_h10.repository
2025-08-18T19:07:42.6390224Z 
2025-08-18T19:07:42.6390360Z <a id="emailer"></a>
2025-08-18T19:07:42.6390731Z 
2025-08-18T19:07:42.6390838Z # emailer
2025-08-18T19:07:42.6390991Z 
2025-08-18T19:07:42.6391173Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T19:07:42.6391485Z 
2025-08-18T19:07:42.6391639Z # emailer.tests.test\_import\_emailer
2025-08-18T19:07:42.6392078Z 
2025-08-18T19:07:42.6392230Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T19:07:42.6392505Z 
2025-08-18T19:07:42.6392648Z # emailer.tests.test\_smoke
2025-08-18T19:07:42.6392888Z 
2025-08-18T19:07:42.6393020Z <a id="emailer.tests"></a>
2025-08-18T19:07:42.6393248Z 
2025-08-18T19:07:42.6393367Z # emailer.tests
2025-08-18T19:07:42.6393550Z 
2025-08-18T19:07:42.6393693Z <a id="emailer.generate_body"></a>
2025-08-18T19:07:42.6393974Z 
2025-08-18T19:07:42.6394104Z # emailer.generate\_body
2025-08-18T19:07:42.6394327Z 
2025-08-18T19:07:42.6394451Z <a id="llm_server"></a>
2025-08-18T19:07:42.6394665Z 
2025-08-18T19:07:42.6394774Z # llm\_server
2025-08-18T19:07:42.6394940Z 
2025-08-18T19:07:42.6395089Z <a id="llm_server.app"></a>
2025-08-18T19:07:42.6395327Z 
2025-08-18T19:07:42.6395442Z # llm\_server.app
2025-08-18T19:07:42.6395628Z 
