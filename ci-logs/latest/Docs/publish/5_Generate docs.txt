2025-08-16T21:01:17.1683741Z ##[group]Run pydoc-markdown
2025-08-16T21:01:17.1684033Z [36;1mpydoc-markdown[0m
2025-08-16T21:01:17.1723978Z shell: /usr/bin/bash -e {0}
2025-08-16T21:01:17.1724196Z env:
2025-08-16T21:01:17.1724426Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:01:17.1724837Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T21:01:17.1725222Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:01:17.1725555Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:01:17.1725899Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:01:17.1726425Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T21:01:17.1726724Z ##[endgroup]
2025-08-16T21:01:17.4922265Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T21:01:17.4923008Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T21:01:17.4923406Z In "pydoc-markdown.yml"
2025-08-16T21:01:17.4923771Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T21:01:17.4924349Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T21:01:17.4924976Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T21:01:17.4925414Z 
2025-08-16T21:01:17.7049182Z <a id="__init__"></a>
2025-08-16T21:01:17.7049651Z 
2025-08-16T21:01:17.7050020Z # \_\_init\_\_
2025-08-16T21:01:17.7050219Z 
2025-08-16T21:01:17.7050344Z <a id="api"></a>
2025-08-16T21:01:17.7050536Z 
2025-08-16T21:01:17.7050651Z # api
2025-08-16T21:01:17.7050808Z 
2025-08-16T21:01:17.7050955Z <a id="api.tests.test_llm"></a>
2025-08-16T21:01:17.7051223Z 
2025-08-16T21:01:17.7051363Z # api.tests.test\_llm
2025-08-16T21:01:17.7051591Z 
2025-08-16T21:01:17.7051856Z <a id="api.tests.test_imports"></a>
2025-08-16T21:01:17.7052150Z 
2025-08-16T21:01:17.7052286Z # api.tests.test\_imports
2025-08-16T21:01:17.7052526Z 
2025-08-16T21:01:17.7052693Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T21:01:17.7053299Z 
2025-08-16T21:01:17.7053445Z # api.tests.test\_entrypoint
2025-08-16T21:01:17.7053727Z 
2025-08-16T21:01:17.7053890Z <a id="api.tests.test_health"></a>
2025-08-16T21:01:17.7054180Z 
2025-08-16T21:01:17.7054328Z # api.tests.test\_health
2025-08-16T21:01:17.7054576Z 
2025-08-16T21:01:17.7054728Z <a id="api.migrations.env"></a>
2025-08-16T21:01:17.7055002Z 
2025-08-16T21:01:17.7055159Z # api.migrations.env
2025-08-16T21:01:17.7055383Z 
2025-08-16T21:01:17.7055599Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T21:01:17.7055986Z 
2025-08-16T21:01:17.7056410Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T21:01:17.7056772Z 
2025-08-16T21:01:17.7056984Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T21:01:17.7057369Z 
2025-08-16T21:01:17.7057555Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T21:01:17.7057886Z 
2025-08-16T21:01:17.7058174Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T21:01:17.7058624Z 
2025-08-16T21:01:17.7058883Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T21:01:17.7059279Z 
2025-08-16T21:01:17.7059508Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T21:01:17.7059879Z 
2025-08-16T21:01:17.7060066Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T21:01:17.7060411Z 
2025-08-16T21:01:17.7060622Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T21:01:17.7061003Z 
2025-08-16T21:01:17.7061203Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T21:01:17.7061537Z 
2025-08-16T21:01:17.7061754Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T21:01:17.7062143Z 
2025-08-16T21:01:17.7062346Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T21:01:17.7062700Z 
2025-08-16T21:01:17.7062914Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T21:01:17.7063285Z 
2025-08-16T21:01:17.7063473Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T21:01:17.7063811Z 
2025-08-16T21:01:17.7064039Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T21:01:17.7064767Z 
2025-08-16T21:01:17.7064974Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T21:01:17.7065335Z 
2025-08-16T21:01:17.7065570Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T21:01:17.7065952Z 
2025-08-16T21:01:17.7066359Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T21:01:17.7066744Z 
2025-08-16T21:01:17.7066988Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T21:01:17.7067380Z 
2025-08-16T21:01:17.7067566Z # api.migrations.versions.0001\_baseline
2025-08-16T21:01:17.7067892Z 
2025-08-16T21:01:17.7068059Z <a id="api.migrations.versions"></a>
2025-08-16T21:01:17.7068363Z 
2025-08-16T21:01:17.7068517Z # api.migrations.versions
2025-08-16T21:01:17.7068759Z 
2025-08-16T21:01:17.7068906Z <a id="api.migrations"></a>
2025-08-16T21:01:17.7069168Z 
2025-08-16T21:01:17.7069342Z # api.migrations
2025-08-16T21:01:17.7069538Z 
2025-08-16T21:01:17.7069670Z <a id="api.db"></a>
2025-08-16T21:01:17.7069884Z 
2025-08-16T21:01:17.7070008Z # api.db
2025-08-16T21:01:17.7070176Z 
2025-08-16T21:01:17.7070319Z <a id="api.routes.stats"></a>
2025-08-16T21:01:17.7070581Z 
2025-08-16T21:01:17.7070710Z # api.routes.stats
2025-08-16T21:01:17.7070923Z 
2025-08-16T21:01:17.7071074Z <a id="api.routes.stats.kpi"></a>
2025-08-16T21:01:17.7071358Z 
2025-08-16T21:01:17.7071484Z #### kpi
2025-08-16T21:01:17.7071643Z 
2025-08-16T21:01:17.7071755Z ```python
2025-08-16T21:01:17.7072062Z @router.get("/stats/kpi")
2025-08-16T21:01:17.7072457Z def kpi() -> List[Dict[str, int]]
2025-08-16T21:01:17.7072830Z ```
2025-08-16T21:01:17.7072980Z 
2025-08-16T21:01:17.7073125Z Return KPI metrics (mock).
2025-08-16T21:01:17.7073376Z 
2025-08-16T21:01:17.7073558Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T21:01:17.7073876Z 
2025-08-16T21:01:17.7074001Z #### roi\_by\_vendor
2025-08-16T21:01:17.7074195Z 
2025-08-16T21:01:17.7074306Z ```python
2025-08-16T21:01:17.7074622Z @router.get("/stats/roi_by_vendor")
2025-08-16T21:01:17.7075328Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T21:01:17.7075757Z ```
2025-08-16T21:01:17.7075901Z 
2025-08-16T21:01:17.7076041Z Return ROI percent by vendor.
2025-08-16T21:01:17.7076503Z 
2025-08-16T21:01:17.7076669Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T21:01:17.7076977Z 
2025-08-16T21:01:17.7077102Z #### roi\_trend
2025-08-16T21:01:17.7077276Z 
2025-08-16T21:01:17.7077386Z ```python
2025-08-16T21:01:17.7077692Z @router.get("/stats/roi_trend")
2025-08-16T21:01:17.7078110Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T21:01:17.7078546Z ```
2025-08-16T21:01:17.7078694Z 
2025-08-16T21:01:17.7078824Z Return 30-day ROI trend.
2025-08-16T21:01:17.7079060Z 
2025-08-16T21:01:17.7079197Z <a id="api.routes.roi"></a>
2025-08-16T21:01:17.7079431Z 
2025-08-16T21:01:17.7079553Z # api.routes.roi
2025-08-16T21:01:17.7079756Z 
2025-08-16T21:01:17.7079896Z <a id="api.routes.health"></a>
2025-08-16T21:01:17.7080205Z 
2025-08-16T21:01:17.7080324Z # api.routes.health
2025-08-16T21:01:17.7080535Z 
2025-08-16T21:01:17.7080704Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T21:01:17.7081004Z 
2025-08-16T21:01:17.7081112Z #### MAX\_SKEW
2025-08-16T21:01:17.7081286Z 
2025-08-16T21:01:17.7081389Z seconds
2025-08-16T21:01:17.7081536Z 
2025-08-16T21:01:17.7081689Z <a id="api.routes.health.health"></a>
2025-08-16T21:01:17.7081986Z 
2025-08-16T21:01:17.7082091Z #### health
2025-08-16T21:01:17.7082248Z 
2025-08-16T21:01:17.7082363Z ```python
2025-08-16T21:01:17.7082691Z @router.get("/health", include_in_schema=False)
2025-08-16T21:01:17.7083384Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T21:01:17.7083994Z ```
2025-08-16T21:01:17.7084144Z 
2025-08-16T21:01:17.7084349Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T21:01:17.7084703Z 
2025-08-16T21:01:17.7084854Z <a id="api.routes.repository"></a>
2025-08-16T21:01:17.7085145Z 
2025-08-16T21:01:17.7085281Z # api.routes.repository
2025-08-16T21:01:17.7085504Z 
2025-08-16T21:01:17.7085648Z <a id="api.routes"></a>
2025-08-16T21:01:17.7086141Z 
2025-08-16T21:01:17.7086441Z # api.routes
2025-08-16T21:01:17.7086624Z 
2025-08-16T21:01:17.7086773Z <a id="api.models.fee"></a>
2025-08-16T21:01:17.7087011Z 
2025-08-16T21:01:17.7087128Z # api.models.fee
2025-08-16T21:01:17.7087325Z 
2025-08-16T21:01:17.7087450Z <a id="api.models"></a>
2025-08-16T21:01:17.7087663Z 
2025-08-16T21:01:17.7087781Z # api.models
2025-08-16T21:01:17.7087946Z 
2025-08-16T21:01:17.7088084Z <a id="api.roi_repository"></a>
2025-08-16T21:01:17.7088334Z 
2025-08-16T21:01:17.7088464Z # api.roi\_repository
2025-08-16T21:01:17.7088665Z 
2025-08-16T21:01:17.7088786Z <a id="api.main"></a>
2025-08-16T21:01:17.7088995Z 
2025-08-16T21:01:17.7089100Z # api.main
2025-08-16T21:01:17.7089256Z 
2025-08-16T21:01:17.7089389Z <a id="api.main.ready"></a>
2025-08-16T21:01:17.7089633Z 
2025-08-16T21:01:17.7089738Z #### ready
2025-08-16T21:01:17.7089893Z 
2025-08-16T21:01:17.7090015Z ```python
2025-08-16T21:01:17.7090470Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T21:01:17.7091291Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T21:01:17.7091918Z                                                                       str]
2025-08-16T21:01:17.7092336Z ```
2025-08-16T21:01:17.7092482Z 
2025-08-16T21:01:17.7092655Z Return 200 only when migrations are at head.
2025-08-16T21:01:17.7092983Z 
2025-08-16T21:01:17.7093112Z <a id="api.config"></a>
2025-08-16T21:01:17.7093330Z 
2025-08-16T21:01:17.7093448Z # api.config
2025-08-16T21:01:17.7093617Z 
2025-08-16T21:01:17.7093735Z <a id="etl"></a>
2025-08-16T21:01:17.7093933Z 
2025-08-16T21:01:17.7094042Z # etl
2025-08-16T21:01:17.7094196Z 
2025-08-16T21:01:17.7094341Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T21:01:17.7094613Z 
2025-08-16T21:01:17.7094739Z # etl.fba\_fee\_ingestor
2025-08-16T21:01:17.7094955Z 
2025-08-16T21:01:17.7095099Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T21:01:17.7095360Z 
2025-08-16T21:01:17.7095481Z # etl.sp\_fees\_ingestor
2025-08-16T21:01:17.7095977Z 
2025-08-16T21:01:17.7096117Z <a id="etl.keepa_ingestor"></a>
2025-08-16T21:01:17.7096548Z 
2025-08-16T21:01:17.7096670Z # etl.keepa\_ingestor
2025-08-16T21:01:17.7096877Z 
2025-08-16T21:01:17.7096989Z <a id="etl.db"></a>
2025-08-16T21:01:17.7097174Z 
2025-08-16T21:01:17.7097283Z # etl.db
2025-08-16T21:01:17.7097433Z 
2025-08-16T21:01:17.7097617Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T21:01:17.7097975Z 
2025-08-16T21:01:17.7098129Z # etl.dialects.amazon\_reimbursements
2025-08-16T21:01:17.7098420Z 
2025-08-16T21:01:17.7098590Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T21:01:17.7098895Z 
2025-08-16T21:01:17.7099036Z # etl.dialects.amazon\_returns
2025-08-16T21:01:17.7099291Z 
2025-08-16T21:01:17.7099425Z <a id="etl.dialects"></a>
2025-08-16T21:01:17.7099649Z 
2025-08-16T21:01:17.7099762Z # etl.dialects
2025-08-16T21:01:17.7099940Z 
2025-08-16T21:01:17.7100052Z <a id="ingest"></a>
2025-08-16T21:01:17.7100237Z 
2025-08-16T21:01:17.7100358Z # ingest
2025-08-16T21:01:17.7100515Z 
2025-08-16T21:01:17.7100661Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T21:01:17.7100947Z 
2025-08-16T21:01:17.7101092Z # ingest.tests.test\_smoke
2025-08-16T21:01:17.7101324Z 
2025-08-16T21:01:17.7101456Z <a id="ingest.tests"></a>
2025-08-16T21:01:17.7101699Z 
2025-08-16T21:01:17.7101818Z # ingest.tests
2025-08-16T21:01:17.7101999Z 
2025-08-16T21:01:17.7102151Z <a id="ingest.upload_router"></a>
2025-08-16T21:01:17.7102417Z 
2025-08-16T21:01:17.7102544Z # ingest.upload\_router
2025-08-16T21:01:17.7102755Z 
2025-08-16T21:01:17.7102899Z <a id="ingest.email_watcher"></a>
2025-08-16T21:01:17.7103158Z 
2025-08-16T21:01:17.7103280Z # ingest.email\_watcher
2025-08-16T21:01:17.7103493Z 
2025-08-16T21:01:17.7103641Z <a id="ingest.email_watcher.main"></a>
2025-08-16T21:01:17.7103930Z 
2025-08-16T21:01:17.7104037Z #### main
2025-08-16T21:01:17.7104195Z 
2025-08-16T21:01:17.7104299Z ```python
2025-08-16T21:01:17.7104581Z def main() -> dict[str, str]
2025-08-16T21:01:17.7104921Z ```
2025-08-16T21:01:17.7105061Z 
2025-08-16T21:01:17.7105495Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T21:01:17.7105902Z 
2025-08-16T21:01:17.7106135Z Returns {"status": "success"} when processing completes.
2025-08-16T21:01:17.7106713Z 
2025-08-16T21:01:17.7106858Z <a id="ingest.ingest_router"></a>
2025-08-16T21:01:17.7107123Z 
2025-08-16T21:01:17.7107252Z # ingest.ingest\_router
2025-08-16T21:01:17.7107463Z 
2025-08-16T21:01:17.7107590Z <a id="logistics_etl"></a>
2025-08-16T21:01:17.7107815Z 
2025-08-16T21:01:17.7107938Z # logistics\_etl
2025-08-16T21:01:17.7108122Z 
2025-08-16T21:01:17.7108254Z Daily logistics ETL job.
2025-08-16T21:01:17.7108481Z 
2025-08-16T21:01:17.7108629Z <a id="logistics_etl.__main__"></a>
2025-08-16T21:01:17.7108903Z 
2025-08-16T21:01:17.7109036Z # logistics\_etl.\_\_main\_\_
2025-08-16T21:01:17.7109295Z 
2025-08-16T21:01:17.7109462Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T21:01:17.7109778Z 
2025-08-16T21:01:17.7109927Z # logistics\_etl.tests.conftest
2025-08-16T21:01:17.7110194Z 
2025-08-16T21:01:17.7110371Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T21:01:17.7110706Z 
2025-08-16T21:01:17.7110854Z # logistics\_etl.tests.test\_repository
2025-08-16T21:01:17.7111144Z 
2025-08-16T21:01:17.7111309Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T21:01:17.7111614Z 
2025-08-16T21:01:17.7111753Z # logistics\_etl.tests.test\_cron
2025-08-16T21:01:17.7112008Z 
2025-08-16T21:01:17.7112179Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T21:01:17.7112491Z 
2025-08-16T21:01:17.7112633Z # logistics\_etl.tests.test\_imports
2025-08-16T21:01:17.7112926Z 
2025-08-16T21:01:17.7113082Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T21:01:17.7113383Z 
2025-08-16T21:01:17.7113534Z # logistics\_etl.tests.test\_smoke
2025-08-16T21:01:17.7113804Z 
2025-08-16T21:01:17.7113969Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T21:01:17.7114277Z 
2025-08-16T21:01:17.7114430Z # logistics\_etl.tests.test\_client
2025-08-16T21:01:17.7115090Z 
2025-08-16T21:01:17.7115252Z <a id="logistics_etl.tests"></a>
2025-08-16T21:01:17.7115520Z 
2025-08-16T21:01:17.7115646Z # logistics\_etl.tests
2025-08-16T21:01:17.7115851Z 
2025-08-16T21:01:17.7116002Z <a id="logistics_etl.flow"></a>
2025-08-16T21:01:17.7116445Z 
2025-08-16T21:01:17.7116568Z # logistics\_etl.flow
2025-08-16T21:01:17.7116773Z 
2025-08-16T21:01:17.7116925Z <a id="logistics_etl.client"></a>
2025-08-16T21:01:17.7117189Z 
2025-08-16T21:01:17.7117318Z # logistics\_etl.client
2025-08-16T21:01:17.7117547Z 
2025-08-16T21:01:17.7117687Z <a id="logistics_etl.cron"></a>
2025-08-16T21:01:17.7117939Z 
2025-08-16T21:01:17.7118065Z # logistics\_etl.cron
2025-08-16T21:01:17.7118286Z 
2025-08-16T21:01:17.7118428Z <a id="logistics_etl.db"></a>
2025-08-16T21:01:17.7118682Z 
2025-08-16T21:01:17.7118809Z # logistics\_etl.db
2025-08-16T21:01:17.7119003Z 
2025-08-16T21:01:17.7119157Z <a id="logistics_etl.repository"></a>
2025-08-16T21:01:17.7119451Z 
2025-08-16T21:01:17.7119588Z # logistics\_etl.repository
2025-08-16T21:01:17.7119839Z 
2025-08-16T21:01:17.7119959Z <a id="alert_bot"></a>
2025-08-16T21:01:17.7120169Z 
2025-08-16T21:01:17.7120276Z # alert\_bot
2025-08-16T21:01:17.7120440Z 
2025-08-16T21:01:17.7120594Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T21:01:17.7120887Z 
2025-08-16T21:01:17.7121020Z # alert\_bot.tests.test\_smoke
2025-08-16T21:01:17.7121271Z 
2025-08-16T21:01:17.7121398Z <a id="alert_bot.tests"></a>
2025-08-16T21:01:17.7121633Z 
2025-08-16T21:01:17.7121746Z # alert\_bot.tests
2025-08-16T21:01:17.7121936Z 
2025-08-16T21:01:17.7122074Z <a id="alert_bot.alert_bot"></a>
2025-08-16T21:01:17.7122322Z 
2025-08-16T21:01:17.7122451Z # alert\_bot.alert\_bot
2025-08-16T21:01:17.7122660Z 
2025-08-16T21:01:17.7122799Z <a id="alert_bot.rules"></a>
2025-08-16T21:01:17.7123047Z 
2025-08-16T21:01:17.7123176Z # alert\_bot.rules
2025-08-16T21:01:17.7123362Z 
2025-08-16T21:01:17.7123486Z <a id="common"></a>
2025-08-16T21:01:17.7123682Z 
2025-08-16T21:01:17.7123787Z # common
2025-08-16T21:01:17.7123949Z 
2025-08-16T21:01:17.7124311Z <a id="common.dsn"></a>
2025-08-16T21:01:17.7124538Z 
2025-08-16T21:01:17.7124654Z # common.dsn
2025-08-16T21:01:17.7124830Z 
2025-08-16T21:01:17.7124987Z <a id="common.dsn.build_dsn"></a>
2025-08-16T21:01:17.7125261Z 
2025-08-16T21:01:17.7125374Z #### build\_dsn
2025-08-16T21:01:17.7125560Z 
2025-08-16T21:01:17.7125671Z ```python
2025-08-16T21:01:17.7125980Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:01:17.7126581Z ```
2025-08-16T21:01:17.7126727Z 
2025-08-16T21:01:17.7126944Z Return a Postgres DSN, validating required variables.
2025-08-16T21:01:17.7127325Z 
2025-08-16T21:01:17.7127676Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T21:01:17.7128502Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T21:01:17.7129300Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T21:01:17.7129888Z missing.
2025-08-16T21:01:17.7130053Z 
2025-08-16T21:01:17.7130215Z <a id="common.models_vendor"></a>
2025-08-16T21:01:17.7130518Z 
2025-08-16T21:01:17.7130658Z # common.models\_vendor
2025-08-16T21:01:17.7130882Z 
2025-08-16T21:01:17.7131058Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T21:01:17.7131386Z 
2025-08-16T21:01:17.7131511Z ## Vendor Objects
2025-08-16T21:01:17.7131721Z 
2025-08-16T21:01:17.7131839Z ```python
2025-08-16T21:01:17.7132122Z class Vendor(Base)
2025-08-16T21:01:17.7132451Z ```
2025-08-16T21:01:17.7132615Z 
2025-08-16T21:01:17.7132758Z Vendor of inventory items.
2025-08-16T21:01:17.7133007Z 
2025-08-16T21:01:17.7133201Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T21:01:17.7133540Z 
2025-08-16T21:01:17.7133677Z ## VendorPrice Objects
2025-08-16T21:01:17.7133909Z 
2025-08-16T21:01:17.7134028Z ```python
2025-08-16T21:01:17.7134330Z class VendorPrice(Base)
2025-08-16T21:01:17.7134660Z ```
2025-08-16T21:01:17.7134807Z 
2025-08-16T21:01:17.7134994Z Association table linking vendors to pricing.
2025-08-16T21:01:17.7135345Z 
2025-08-16T21:01:17.7135743Z <a id="common.db_url"></a>
2025-08-16T21:01:17.7135999Z 
2025-08-16T21:01:17.7136127Z # common.db\_url
2025-08-16T21:01:17.7136527Z 
2025-08-16T21:01:17.7136681Z <a id="common.db_url.build_url"></a>
2025-08-16T21:01:17.7136979Z 
2025-08-16T21:01:17.7137096Z #### build\_url
2025-08-16T21:01:17.7137284Z 
2025-08-16T21:01:17.7137397Z ```python
2025-08-16T21:01:17.7137725Z def build_url(async_: bool = True) -> str
2025-08-16T21:01:17.7138145Z ```
2025-08-16T21:01:17.7138311Z 
2025-08-16T21:01:17.7138491Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:01:17.7138816Z 
2025-08-16T21:01:17.7138967Z <a id="common.keepa"></a>
2025-08-16T21:01:17.7139216Z 
2025-08-16T21:01:17.7139338Z # common.keepa
2025-08-16T21:01:17.7139533Z 
2025-08-16T21:01:17.7139668Z <a id="common.llm"></a>
2025-08-16T21:01:17.7139892Z 
2025-08-16T21:01:17.7140014Z # common.llm
2025-08-16T21:01:17.7140201Z 
2025-08-16T21:01:17.7140345Z <a id="common.settings"></a>
2025-08-16T21:01:17.7140607Z 
2025-08-16T21:01:17.7140755Z # common.settings
2025-08-16T21:01:17.7140959Z 
2025-08-16T21:01:17.7141094Z <a id="common.db"></a>
2025-08-16T21:01:17.7141320Z 
2025-08-16T21:01:17.7141438Z # common.db
2025-08-16T21:01:17.7141610Z 
2025-08-16T21:01:17.7141781Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T21:01:17.7142120Z 
2025-08-16T21:01:17.7142266Z #### build\_sqlalchemy\_url
2025-08-16T21:01:17.7142516Z 
2025-08-16T21:01:17.7142638Z ```python
2025-08-16T21:01:17.7142948Z def build_sqlalchemy_url() -> str
2025-08-16T21:01:17.7143340Z ```
2025-08-16T21:01:17.7143492Z 
2025-08-16T21:01:17.7143670Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:01:17.7144009Z 
2025-08-16T21:01:17.7144173Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T21:01:17.7144486Z 
2025-08-16T21:01:17.7144616Z #### build\_asyncpg\_dsn
2025-08-16T21:01:17.7144847Z 
2025-08-16T21:01:17.7144960Z ```python
2025-08-16T21:01:17.7145276Z def build_asyncpg_dsn() -> str
2025-08-16T21:01:17.7145633Z ```
2025-08-16T21:01:17.7145785Z 
2025-08-16T21:01:17.7146041Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:01:17.7146868Z 
2025-08-16T21:01:17.7147033Z <a id="common.db.refresh_mvs"></a>
2025-08-16T21:01:17.7147332Z 
2025-08-16T21:01:17.7147455Z #### refresh\_mvs
2025-08-16T21:01:17.7147709Z 
2025-08-16T21:01:17.7147828Z ```python
2025-08-16T21:01:17.7148207Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:01:17.7148684Z ```
2025-08-16T21:01:17.7148866Z 
2025-08-16T21:01:17.7149124Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:01:17.7149545Z 
2025-08-16T21:01:17.7149695Z <a id="common.config"></a>
2025-08-16T21:01:17.7149945Z 
2025-08-16T21:01:17.7150077Z # common.config
2025-08-16T21:01:17.7150269Z 
2025-08-16T21:01:17.7150408Z <a id="common.base"></a>
2025-08-16T21:01:17.7150644Z 
2025-08-16T21:01:17.7150757Z # common.base
2025-08-16T21:01:17.7150933Z 
2025-08-16T21:01:17.7151075Z <a id="common.base.Base"></a>
2025-08-16T21:01:17.7151325Z 
2025-08-16T21:01:17.7151435Z ## Base Objects
2025-08-16T21:01:17.7151618Z 
2025-08-16T21:01:17.7151747Z ```python
2025-08-16T21:01:17.7152056Z class Base(DeclarativeBase)
2025-08-16T21:01:17.7152452Z ```
2025-08-16T21:01:17.7152598Z 
2025-08-16T21:01:17.7152744Z Base class for SQLAlchemy models.
2025-08-16T21:01:17.7153023Z 
2025-08-16T21:01:17.7153183Z <a id="repricer"></a>
2025-08-16T21:01:17.7153385Z 
2025-08-16T21:01:17.7153493Z # repricer
2025-08-16T21:01:17.7153663Z 
2025-08-16T21:01:17.7153823Z <a id="repricer.app.schemas"></a>
2025-08-16T21:01:17.7154101Z 
2025-08-16T21:01:17.7154245Z # repricer.app.schemas
2025-08-16T21:01:17.7154466Z 
2025-08-16T21:01:17.7154611Z <a id="repricer.app.deps"></a>
2025-08-16T21:01:17.7154872Z 
2025-08-16T21:01:17.7154996Z # repricer.app.deps
2025-08-16T21:01:17.7155192Z 
2025-08-16T21:01:17.7155397Z Placeholder module for Keepa / SP-API clients.
2025-08-16T21:01:17.7155753Z 
2025-08-16T21:01:17.7155905Z <a id="repricer.app.logic"></a>
2025-08-16T21:01:17.7156363Z 
2025-08-16T21:01:17.7156511Z # repricer.app.logic
2025-08-16T21:01:17.7156968Z 
2025-08-16T21:01:17.7157161Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T21:01:17.7157500Z 
2025-08-16T21:01:17.7157618Z #### MIN\_MARGIN
2025-08-16T21:01:17.7157806Z 
2025-08-16T21:01:17.7157916Z 15 % ROI
2025-08-16T21:01:17.7158085Z 
2025-08-16T21:01:17.7158274Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T21:01:17.7158608Z 
2025-08-16T21:01:17.7158742Z #### compute\_price
2025-08-16T21:01:17.7158939Z 
2025-08-16T21:01:17.7159053Z ```python
2025-08-16T21:01:17.7159489Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T21:01:17.7160006Z ```
2025-08-16T21:01:17.7160141Z 
2025-08-16T21:01:17.7160319Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T21:01:17.7160813Z Replace with real competitive logic later.
2025-08-16T21:01:17.7161133Z 
2025-08-16T21:01:17.7161276Z <a id="repricer.app.main"></a>
2025-08-16T21:01:17.7161524Z 
2025-08-16T21:01:17.7161656Z # repricer.app.main
2025-08-16T21:01:17.7161849Z 
2025-08-16T21:01:17.7161985Z <a id="repricer.app"></a>
2025-08-16T21:01:17.7162225Z 
2025-08-16T21:01:17.7162339Z # repricer.app
2025-08-16T21:01:17.7162510Z 
2025-08-16T21:01:17.7162670Z <a id="repricer.tests.test_imports"></a>
2025-08-16T21:01:17.7162977Z 
2025-08-16T21:01:17.7163117Z # repricer.tests.test\_imports
2025-08-16T21:01:17.7163363Z 
2025-08-16T21:01:17.7163519Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T21:01:17.7163807Z 
2025-08-16T21:01:17.7163945Z # repricer.tests.test\_smoke
2025-08-16T21:01:17.7164193Z 
2025-08-16T21:01:17.7164320Z <a id="repricer.tests"></a>
2025-08-16T21:01:17.7164555Z 
2025-08-16T21:01:17.7164738Z # repricer.tests
2025-08-16T21:01:17.7164925Z 
2025-08-16T21:01:17.7165043Z <a id="db"></a>
2025-08-16T21:01:17.7165214Z 
2025-08-16T21:01:17.7165315Z # db
2025-08-16T21:01:17.7165453Z 
2025-08-16T21:01:17.7165591Z <a id="db.utils.views"></a>
2025-08-16T21:01:17.7165828Z 
2025-08-16T21:01:17.7165954Z # db.utils.views
2025-08-16T21:01:17.7166341Z 
2025-08-16T21:01:17.7166514Z <a id="db.utils.views.replace_view"></a>
2025-08-16T21:01:17.7167030Z 
2025-08-16T21:01:17.7167149Z #### replace\_view
2025-08-16T21:01:17.7167348Z 
2025-08-16T21:01:17.7167458Z ```python
2025-08-16T21:01:17.7167800Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T21:01:17.7168234Z ```
2025-08-16T21:01:17.7168373Z 
2025-08-16T21:01:17.7168532Z Drop and recreate a SQL view atomically.
2025-08-16T21:01:17.7168834Z 
2025-08-16T21:01:17.7168955Z <a id="db.utils"></a>
2025-08-16T21:01:17.7169168Z 
2025-08-16T21:01:17.7169277Z # db.utils
2025-08-16T21:01:17.7169434Z 
2025-08-16T21:01:17.7169566Z <a id="price_importer"></a>
2025-08-16T21:01:17.7169820Z 
2025-08-16T21:01:17.7169941Z # price\_importer
2025-08-16T21:01:17.7170127Z 
2025-08-16T21:01:17.7170316Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T21:01:17.7170654Z 
2025-08-16T21:01:17.7170813Z # price\_importer.services\_common.dsn
2025-08-16T21:01:17.7171114Z 
2025-08-16T21:01:17.7171340Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T21:01:17.7171729Z 
2025-08-16T21:01:17.7171845Z #### build\_dsn
2025-08-16T21:01:17.7172035Z 
2025-08-16T21:01:17.7172147Z ```python
2025-08-16T21:01:17.7172470Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:01:17.7172868Z ```
2025-08-16T21:01:17.7173013Z 
2025-08-16T21:01:17.7173138Z Return safe DSN.
2025-08-16T21:01:17.7173327Z 
2025-08-16T21:01:17.7173806Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T21:01:17.7174181Z 
2025-08-16T21:01:17.7174401Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T21:01:17.7174771Z 
2025-08-16T21:01:17.7174966Z # price\_importer.services\_common.models\_vendor
2025-08-16T21:01:17.7175453Z 
2025-08-16T21:01:17.7175639Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T21:01:17.7175971Z 
2025-08-16T21:01:17.7176139Z # price\_importer.services\_common.db\_url
2025-08-16T21:01:17.7176691Z 
2025-08-16T21:01:17.7176918Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T21:01:17.7177518Z 
2025-08-16T21:01:17.7177645Z #### build\_url
2025-08-16T21:01:17.7177820Z 
2025-08-16T21:01:17.7177931Z ```python
2025-08-16T21:01:17.7178231Z def build_url(async_: bool = True) -> str
2025-08-16T21:01:17.7178630Z ```
2025-08-16T21:01:17.7178778Z 
2025-08-16T21:01:17.7178951Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:01:17.7179309Z 
2025-08-16T21:01:17.7179570Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T21:01:17.7179922Z 
2025-08-16T21:01:17.7180088Z # price\_importer.services\_common.keepa
2025-08-16T21:01:17.7180394Z 
2025-08-16T21:01:17.7180572Z <a id="price_importer.services_common.llm"></a>
2025-08-16T21:01:17.7180897Z 
2025-08-16T21:01:17.7181056Z # price\_importer.services\_common.llm
2025-08-16T21:01:17.7181343Z 
2025-08-16T21:01:17.7181543Z <a id="price_importer.services_common.settings"></a>
2025-08-16T21:01:17.7181901Z 
2025-08-16T21:01:17.7182066Z # price\_importer.services\_common.settings
2025-08-16T21:01:17.7182375Z 
2025-08-16T21:01:17.7182548Z <a id="price_importer.services_common.db"></a>
2025-08-16T21:01:17.7182894Z 
2025-08-16T21:01:17.7183045Z # price\_importer.services\_common.db
2025-08-16T21:01:17.7183333Z 
2025-08-16T21:01:17.7183614Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T21:01:17.7184039Z 
2025-08-16T21:01:17.7184170Z #### build\_sqlalchemy\_url
2025-08-16T21:01:17.7184405Z 
2025-08-16T21:01:17.7184514Z ```python
2025-08-16T21:01:17.7184808Z def build_sqlalchemy_url() -> str
2025-08-16T21:01:17.7185169Z ```
2025-08-16T21:01:17.7185313Z 
2025-08-16T21:01:17.7185482Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:01:17.7185788Z 
2025-08-16T21:01:17.7186037Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T21:01:17.7186634Z 
2025-08-16T21:01:17.7186779Z #### build\_asyncpg\_dsn
2025-08-16T21:01:17.7186990Z 
2025-08-16T21:01:17.7187093Z ```python
2025-08-16T21:01:17.7187364Z def build_asyncpg_dsn() -> str
2025-08-16T21:01:17.7187671Z ```
2025-08-16T21:01:17.7187806Z 
2025-08-16T21:01:17.7188018Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:01:17.7188581Z 
2025-08-16T21:01:17.7188810Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T21:01:17.7189185Z 
2025-08-16T21:01:17.7189298Z #### refresh\_mvs
2025-08-16T21:01:17.7189489Z 
2025-08-16T21:01:17.7189598Z ```python
2025-08-16T21:01:17.7189930Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:01:17.7190377Z ```
2025-08-16T21:01:17.7190522Z 
2025-08-16T21:01:17.7190772Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:01:17.7191169Z 
2025-08-16T21:01:17.7191341Z <a id="price_importer.services_common"></a>
2025-08-16T21:01:17.7191661Z 
2025-08-16T21:01:17.7191817Z # price\_importer.services\_common
2025-08-16T21:01:17.7192098Z 
2025-08-16T21:01:17.7192281Z <a id="price_importer.services_common.base"></a>
2025-08-16T21:01:17.7192633Z 
2025-08-16T21:01:17.7192796Z # price\_importer.services\_common.base
2025-08-16T21:01:17.7193096Z 
2025-08-16T21:01:17.7193270Z <a id="price_importer.normaliser"></a>
2025-08-16T21:01:17.7193576Z 
2025-08-16T21:01:17.7193718Z # price\_importer.normaliser
2025-08-16T21:01:17.7193975Z 
2025-08-16T21:01:17.7194175Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T21:01:17.7194521Z 
2025-08-16T21:01:17.7194681Z # price\_importer.common.models\_vendor
2025-08-16T21:01:17.7194980Z 
2025-08-16T21:01:17.7195140Z <a id="price_importer.common.db_url"></a>
2025-08-16T21:01:17.7195452Z 
2025-08-16T21:01:17.7195616Z # price\_importer.common.db\_url
2025-08-16T21:01:17.7195884Z 
2025-08-16T21:01:17.7196071Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T21:01:17.7196594Z 
2025-08-16T21:01:17.7196717Z #### make\_dsn
2025-08-16T21:01:17.7196894Z 
2025-08-16T21:01:17.7197003Z ```python
2025-08-16T21:01:17.7197320Z def make_dsn(async_: bool = False) -> str
2025-08-16T21:01:17.7197719Z ```
2025-08-16T21:01:17.7197870Z 
2025-08-16T21:01:17.7198079Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T21:01:17.7198619Z 
2025-08-16T21:01:17.7198828Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T21:01:17.7199169Z 
2025-08-16T21:01:17.7199282Z #### build\_url
2025-08-16T21:01:17.7199468Z 
2025-08-16T21:01:17.7199577Z ```python
2025-08-16T21:01:17.7199881Z def build_url(async_: bool = False) -> str
2025-08-16T21:01:17.7200286Z ```
2025-08-16T21:01:17.7200432Z 
2025-08-16T21:01:17.7200649Z Return Postgres DSN built from environment variables.
2025-08-16T21:01:17.7201022Z 
2025-08-16T21:01:17.7201188Z <a id="price_importer.common"></a>
2025-08-16T21:01:17.7201578Z 
2025-08-16T21:01:17.7201765Z # price\_importer.common
2025-08-16T21:01:17.7202085Z 
2025-08-16T21:01:17.7202307Z <a id="price_importer.common.base"></a>
2025-08-16T21:01:17.7202702Z 
2025-08-16T21:01:17.7202843Z # price\_importer.common.base
2025-08-16T21:01:17.7203107Z 
2025-08-16T21:01:17.7203282Z <a id="price_importer.tests.conftest"></a>
2025-08-16T21:01:17.7203611Z 
2025-08-16T21:01:17.7203757Z # price\_importer.tests.conftest
2025-08-16T21:01:17.7204030Z 
2025-08-16T21:01:17.7204217Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T21:01:17.7204543Z 
2025-08-16T21:01:17.7204690Z # price\_importer.tests.test\_reader
2025-08-16T21:01:17.7204984Z 
2025-08-16T21:01:17.7205161Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T21:01:17.7205488Z 
2025-08-16T21:01:17.7205641Z # price\_importer.tests.test\_imports
2025-08-16T21:01:17.7205938Z 
2025-08-16T21:01:17.7206111Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T21:01:17.7206585Z 
2025-08-16T21:01:17.7206748Z # price\_importer.tests.test\_smoke
2025-08-16T21:01:17.7207032Z 
2025-08-16T21:01:17.7207216Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T21:01:17.7207565Z 
2025-08-16T21:01:17.7207727Z # price\_importer.tests.test\_normaliser
2025-08-16T21:01:17.7208030Z 
2025-08-16T21:01:17.7208181Z <a id="price_importer.tests"></a>
2025-08-16T21:01:17.7208470Z 
2025-08-16T21:01:17.7208597Z # price\_importer.tests
2025-08-16T21:01:17.7208811Z 
2025-08-16T21:01:17.7208969Z <a id="price_importer.reader"></a>
2025-08-16T21:01:17.7209431Z 
2025-08-16T21:01:17.7209567Z # price\_importer.reader
2025-08-16T21:01:17.7209799Z 
2025-08-16T21:01:17.7209961Z <a id="price_importer.reader.load_file"></a>
2025-08-16T21:01:17.7210275Z 
2025-08-16T21:01:17.7210390Z #### load\_file
2025-08-16T21:01:17.7210583Z 
2025-08-16T21:01:17.7210694Z ```python
2025-08-16T21:01:17.7211012Z def load_file(path: str | Path) -> Any
2025-08-16T21:01:17.7211415Z ```
2025-08-16T21:01:17.7211571Z 
2025-08-16T21:01:17.7211741Z Return DataFrame from CSV or Excel file.
2025-08-16T21:01:17.7212052Z 
2025-08-16T21:01:17.7212246Z Raises RuntimeError if pandas is unavailable.
2025-08-16T21:01:17.7212594Z 
2025-08-16T21:01:17.7212756Z <a id="price_importer.repository"></a>
2025-08-16T21:01:17.7213067Z 
2025-08-16T21:01:17.7213226Z # price\_importer.repository
2025-08-16T21:01:17.7213487Z 
2025-08-16T21:01:17.7213640Z <a id="price_importer.import"></a>
2025-08-16T21:01:17.7213908Z 
2025-08-16T21:01:17.7214056Z # price\_importer.import
2025-08-16T21:01:17.7214281Z 
2025-08-16T21:01:17.7214402Z <a id="fees_h10"></a>
2025-08-16T21:01:17.7214616Z 
2025-08-16T21:01:17.7214729Z # fees\_h10
2025-08-16T21:01:17.7214894Z 
2025-08-16T21:01:17.7215027Z <a id="fees_h10.worker"></a>
2025-08-16T21:01:17.7215279Z 
2025-08-16T21:01:17.7215390Z # fees\_h10.worker
2025-08-16T21:01:17.7215577Z 
2025-08-16T21:01:17.7215732Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T21:01:17.7216009Z 
2025-08-16T21:01:17.7216142Z # fees\_h10.tests.test\_smoke
2025-08-16T21:01:17.7216583Z 
2025-08-16T21:01:17.7216710Z <a id="fees_h10.tests"></a>
2025-08-16T21:01:17.7216932Z 
2025-08-16T21:01:17.7217049Z # fees\_h10.tests
2025-08-16T21:01:17.7217241Z 
2025-08-16T21:01:17.7217372Z <a id="fees_h10.client"></a>
2025-08-16T21:01:17.7217599Z 
2025-08-16T21:01:17.7217751Z # fees\_h10.client
2025-08-16T21:01:17.7217935Z 
2025-08-16T21:01:17.7218082Z <a id="fees_h10.repository"></a>
2025-08-16T21:01:17.7218276Z 
2025-08-16T21:01:17.7218350Z # fees\_h10.repository
2025-08-16T21:01:17.7218650Z 
2025-08-16T21:01:17.7218723Z <a id="emailer"></a>
2025-08-16T21:01:17.7218845Z 
2025-08-16T21:01:17.7218908Z # emailer
2025-08-16T21:01:17.7218997Z 
2025-08-16T21:01:17.7219114Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T21:01:17.7219305Z 
2025-08-16T21:01:17.7219393Z # emailer.tests.test\_import\_emailer
2025-08-16T21:01:17.7219556Z 
2025-08-16T21:01:17.7219651Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T21:01:17.7219807Z 
2025-08-16T21:01:17.7219885Z # emailer.tests.test\_smoke
2025-08-16T21:01:17.7220030Z 
2025-08-16T21:01:17.7220109Z <a id="emailer.tests"></a>
2025-08-16T21:01:17.7220238Z 
2025-08-16T21:01:17.7220313Z # emailer.tests
2025-08-16T21:01:17.7220419Z 
2025-08-16T21:01:17.7220508Z <a id="emailer.generate_body"></a>
2025-08-16T21:01:17.7220671Z 
2025-08-16T21:01:17.7220755Z # emailer.generate\_body
2025-08-16T21:01:17.7220883Z 
2025-08-16T21:01:17.7220954Z <a id="llm_server"></a>
2025-08-16T21:01:17.7221079Z 
2025-08-16T21:01:17.7221147Z # llm\_server
2025-08-16T21:01:17.7221248Z 
2025-08-16T21:01:17.7221329Z <a id="llm_server.app"></a>
2025-08-16T21:01:17.7221467Z 
2025-08-16T21:01:17.7221534Z # llm\_server.app
2025-08-16T21:01:17.7221640Z 
