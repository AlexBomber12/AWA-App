2025-08-16T21:07:48.5905550Z ##[group]Run pydoc-markdown
2025-08-16T21:07:48.5905860Z [36;1mpydoc-markdown[0m
2025-08-16T21:07:48.5946881Z shell: /usr/bin/bash -e {0}
2025-08-16T21:07:48.5947114Z env:
2025-08-16T21:07:48.5947360Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:07:48.5947788Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-16T21:07:48.5948193Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:07:48.5948569Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:07:48.5948924Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-16T21:07:48.5949282Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-16T21:07:48.5949577Z ##[endgroup]
2025-08-16T21:07:48.9271781Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-16T21:07:48.9272489Z Unknown key(s) "{'output_directory'}" at:
2025-08-16T21:07:48.9272942Z In "pydoc-markdown.yml"
2025-08-16T21:07:48.9273356Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-16T21:07:48.9274028Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-16T21:07:48.9274762Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-16T21:07:48.9275274Z 
2025-08-16T21:07:49.1342718Z <a id="__init__"></a>
2025-08-16T21:07:49.1343062Z 
2025-08-16T21:07:49.1343221Z # \_\_init\_\_
2025-08-16T21:07:49.1343449Z 
2025-08-16T21:07:49.1343588Z <a id="api"></a>
2025-08-16T21:07:49.1343814Z 
2025-08-16T21:07:49.1343940Z # api
2025-08-16T21:07:49.1344117Z 
2025-08-16T21:07:49.1344288Z <a id="api.tests.test_llm"></a>
2025-08-16T21:07:49.1344617Z 
2025-08-16T21:07:49.1344771Z # api.tests.test\_llm
2025-08-16T21:07:49.1345028Z 
2025-08-16T21:07:49.1345220Z <a id="api.tests.test_imports"></a>
2025-08-16T21:07:49.1345604Z 
2025-08-16T21:07:49.1345797Z # api.tests.test\_imports
2025-08-16T21:07:49.1346134Z 
2025-08-16T21:07:49.1346340Z <a id="api.tests.test_entrypoint"></a>
2025-08-16T21:07:49.1346773Z 
2025-08-16T21:07:49.1346982Z # api.tests.test\_entrypoint
2025-08-16T21:07:49.1347407Z 
2025-08-16T21:07:49.1347631Z <a id="api.tests.test_health"></a>
2025-08-16T21:07:49.1348053Z 
2025-08-16T21:07:49.1348244Z # api.tests.test\_health
2025-08-16T21:07:49.1348549Z 
2025-08-16T21:07:49.1348879Z <a id="api.migrations.env"></a>
2025-08-16T21:07:49.1349216Z 
2025-08-16T21:07:49.1349389Z # api.migrations.env
2025-08-16T21:07:49.1349652Z 
2025-08-16T21:07:49.1349873Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-16T21:07:49.1350177Z 
2025-08-16T21:07:49.1350329Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-16T21:07:49.1350596Z 
2025-08-16T21:07:49.1350756Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-16T21:07:49.1351033Z 
2025-08-16T21:07:49.1351164Z # api.migrations.versions.0004\_fee\_cron
2025-08-16T21:07:49.1351686Z 
2025-08-16T21:07:49.1351920Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-16T21:07:49.1352266Z 
2025-08-16T21:07:49.1352459Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-16T21:07:49.1353101Z 
2025-08-16T21:07:49.1353260Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-16T21:07:49.1353502Z 
2025-08-16T21:07:49.1353633Z # api.migrations.versions.0003\_vendor\_prices
2025-08-16T21:07:49.1353853Z 
2025-08-16T21:07:49.1353991Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-16T21:07:49.1354231Z 
2025-08-16T21:07:49.1354352Z # api.migrations.versions.0024\_create\_buybox
2025-08-16T21:07:49.1354567Z 
2025-08-16T21:07:49.1354713Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-16T21:07:49.1354966Z 
2025-08-16T21:07:49.1355094Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-16T21:07:49.1355319Z 
2025-08-16T21:07:49.1355463Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-16T21:07:49.1355696Z 
2025-08-16T21:07:49.1355818Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-16T21:07:49.1356047Z 
2025-08-16T21:07:49.1356192Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-16T21:07:49.1356650Z 
2025-08-16T21:07:49.1356779Z # api.migrations.versions.0020\_unified\_schema
2025-08-16T21:07:49.1357015Z 
2025-08-16T21:07:49.1357167Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-16T21:07:49.1357413Z 
2025-08-16T21:07:49.1357544Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-16T21:07:49.1357769Z 
2025-08-16T21:07:49.1357896Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-16T21:07:49.1358128Z 
2025-08-16T21:07:49.1358239Z # api.migrations.versions.0001\_baseline
2025-08-16T21:07:49.1358443Z 
2025-08-16T21:07:49.1358552Z <a id="api.migrations.versions"></a>
2025-08-16T21:07:49.1358743Z 
2025-08-16T21:07:49.1358838Z # api.migrations.versions
2025-08-16T21:07:49.1358992Z 
2025-08-16T21:07:49.1359091Z <a id="api.migrations"></a>
2025-08-16T21:07:49.1359251Z 
2025-08-16T21:07:49.1359333Z # api.migrations
2025-08-16T21:07:49.1359463Z 
2025-08-16T21:07:49.1359544Z <a id="api.db"></a>
2025-08-16T21:07:49.1359669Z 
2025-08-16T21:07:49.1359755Z # api.db
2025-08-16T21:07:49.1359867Z 
2025-08-16T21:07:49.1359962Z <a id="api.routes.stats"></a>
2025-08-16T21:07:49.1360127Z 
2025-08-16T21:07:49.1360216Z # api.routes.stats
2025-08-16T21:07:49.1360344Z 
2025-08-16T21:07:49.1360446Z <a id="api.routes.stats.kpi"></a>
2025-08-16T21:07:49.1360632Z 
2025-08-16T21:07:49.1360706Z #### kpi
2025-08-16T21:07:49.1360808Z 
2025-08-16T21:07:49.1360883Z ```python
2025-08-16T21:07:49.1361092Z @router.get("/stats/kpi")
2025-08-16T21:07:49.1361488Z def kpi() -> List[Dict[str, int]]
2025-08-16T21:07:49.1361741Z ```
2025-08-16T21:07:49.1361839Z 
2025-08-16T21:07:49.1361936Z Return KPI metrics (mock).
2025-08-16T21:07:49.1362089Z 
2025-08-16T21:07:49.1362206Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-16T21:07:49.1362422Z 
2025-08-16T21:07:49.1362502Z #### roi\_by\_vendor
2025-08-16T21:07:49.1362630Z 
2025-08-16T21:07:49.1362698Z ```python
2025-08-16T21:07:49.1362879Z @router.get("/stats/roi_by_vendor")
2025-08-16T21:07:49.1363118Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-16T21:07:49.1363355Z ```
2025-08-16T21:07:49.1363437Z 
2025-08-16T21:07:49.1363520Z Return ROI percent by vendor.
2025-08-16T21:07:49.1363655Z 
2025-08-16T21:07:49.1363749Z <a id="api.routes.stats.roi_trend"></a>
2025-08-16T21:07:49.1363920Z 
2025-08-16T21:07:49.1363986Z #### roi\_trend
2025-08-16T21:07:49.1364084Z 
2025-08-16T21:07:49.1364146Z ```python
2025-08-16T21:07:49.1364311Z @router.get("/stats/roi_trend")
2025-08-16T21:07:49.1364539Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-16T21:07:49.1364768Z ```
2025-08-16T21:07:49.1364849Z 
2025-08-16T21:07:49.1364928Z Return 30-day ROI trend.
2025-08-16T21:07:49.1365052Z 
2025-08-16T21:07:49.1365132Z <a id="api.routes.roi"></a>
2025-08-16T21:07:49.1365268Z 
2025-08-16T21:07:49.1365337Z # api.routes.roi
2025-08-16T21:07:49.1365511Z 
2025-08-16T21:07:49.1365601Z <a id="api.routes.health"></a>
2025-08-16T21:07:49.1365775Z 
2025-08-16T21:07:49.1365845Z # api.routes.health
2025-08-16T21:07:49.1365957Z 
2025-08-16T21:07:49.1366052Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-16T21:07:49.1366344Z 
2025-08-16T21:07:49.1366407Z #### MAX\_SKEW
2025-08-16T21:07:49.1366510Z 
2025-08-16T21:07:49.1366571Z seconds
2025-08-16T21:07:49.1366654Z 
2025-08-16T21:07:49.1366751Z <a id="api.routes.health.health"></a>
2025-08-16T21:07:49.1366913Z 
2025-08-16T21:07:49.1366975Z #### health
2025-08-16T21:07:49.1367069Z 
2025-08-16T21:07:49.1367132Z ```python
2025-08-16T21:07:49.1367321Z @router.get("/health", include_in_schema=False)
2025-08-16T21:07:49.1367704Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-16T21:07:49.1368038Z ```
2025-08-16T21:07:49.1368127Z 
2025-08-16T21:07:49.1368242Z Return 200 when DB reachable and clocks are in sync.
2025-08-16T21:07:49.1368437Z 
2025-08-16T21:07:49.1368532Z <a id="api.routes.repository"></a>
2025-08-16T21:07:49.1368687Z 
2025-08-16T21:07:49.1368765Z # api.routes.repository
2025-08-16T21:07:49.1368894Z 
2025-08-16T21:07:49.1368968Z <a id="api.routes"></a>
2025-08-16T21:07:49.1369436Z 
2025-08-16T21:07:49.1369566Z # api.routes
2025-08-16T21:07:49.1369753Z 
2025-08-16T21:07:49.1369897Z <a id="api.models.fee"></a>
2025-08-16T21:07:49.1370148Z 
2025-08-16T21:07:49.1370289Z # api.models.fee
2025-08-16T21:07:49.1370484Z 
2025-08-16T21:07:49.1370618Z <a id="api.models"></a>
2025-08-16T21:07:49.1370839Z 
2025-08-16T21:07:49.1370966Z # api.models
2025-08-16T21:07:49.1371143Z 
2025-08-16T21:07:49.1371294Z <a id="api.roi_repository"></a>
2025-08-16T21:07:49.1371717Z 
2025-08-16T21:07:49.1371798Z # api.roi\_repository
2025-08-16T21:07:49.1371920Z 
2025-08-16T21:07:49.1371994Z <a id="api.main"></a>
2025-08-16T21:07:49.1372105Z 
2025-08-16T21:07:49.1372168Z # api.main
2025-08-16T21:07:49.1372260Z 
2025-08-16T21:07:49.1372343Z <a id="api.main.ready"></a>
2025-08-16T21:07:49.1372475Z 
2025-08-16T21:07:49.1372537Z #### ready
2025-08-16T21:07:49.1372630Z 
2025-08-16T21:07:49.1372693Z ```python
2025-08-16T21:07:49.1372956Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-16T21:07:49.1373406Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-16T21:07:49.1373761Z                                                                       str]
2025-08-16T21:07:49.1373982Z ```
2025-08-16T21:07:49.1374063Z 
2025-08-16T21:07:49.1374166Z Return 200 only when migrations are at head.
2025-08-16T21:07:49.1374334Z 
2025-08-16T21:07:49.1374406Z <a id="api.config"></a>
2025-08-16T21:07:49.1374529Z 
2025-08-16T21:07:49.1374593Z # api.config
2025-08-16T21:07:49.1374687Z 
2025-08-16T21:07:49.1374755Z <a id="etl"></a>
2025-08-16T21:07:49.1374860Z 
2025-08-16T21:07:49.1374919Z # etl
2025-08-16T21:07:49.1375004Z 
2025-08-16T21:07:49.1375090Z <a id="etl.fba_fee_ingestor"></a>
2025-08-16T21:07:49.1375239Z 
2025-08-16T21:07:49.1375312Z # etl.fba\_fee\_ingestor
2025-08-16T21:07:49.1375438Z 
2025-08-16T21:07:49.1375518Z <a id="etl.sp_fees_ingestor"></a>
2025-08-16T21:07:49.1375659Z 
2025-08-16T21:07:49.1375730Z # etl.sp\_fees\_ingestor
2025-08-16T21:07:49.1375865Z 
2025-08-16T21:07:49.1375942Z <a id="etl.keepa_ingestor"></a>
2025-08-16T21:07:49.1376081Z 
2025-08-16T21:07:49.1376155Z # etl.keepa\_ingestor
2025-08-16T21:07:49.1376270Z 
2025-08-16T21:07:49.1376341Z <a id="etl.db"></a>
2025-08-16T21:07:49.1376454Z 
2025-08-16T21:07:49.1376517Z # etl.db
2025-08-16T21:07:49.1376606Z 
2025-08-16T21:07:49.1376715Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-16T21:07:49.1376911Z 
2025-08-16T21:07:49.1377000Z # etl.dialects.amazon\_reimbursements
2025-08-16T21:07:49.1377159Z 
2025-08-16T21:07:49.1377252Z <a id="etl.dialects.amazon_returns"></a>
2025-08-16T21:07:49.1377417Z 
2025-08-16T21:07:49.1377501Z # etl.dialects.amazon\_returns
2025-08-16T21:07:49.1377647Z 
2025-08-16T21:07:49.1377724Z <a id="etl.dialects"></a>
2025-08-16T21:07:49.1377846Z 
2025-08-16T21:07:49.1377909Z # etl.dialects
2025-08-16T21:07:49.1378017Z 
2025-08-16T21:07:49.1378081Z <a id="ingest"></a>
2025-08-16T21:07:49.1378184Z 
2025-08-16T21:07:49.1378251Z # ingest
2025-08-16T21:07:49.1378340Z 
2025-08-16T21:07:49.1378602Z <a id="ingest.tests.test_smoke"></a>
2025-08-16T21:07:49.1378754Z 
2025-08-16T21:07:49.1378837Z # ingest.tests.test\_smoke
2025-08-16T21:07:49.1378964Z 
2025-08-16T21:07:49.1379038Z <a id="ingest.tests"></a>
2025-08-16T21:07:49.1379163Z 
2025-08-16T21:07:49.1379227Z # ingest.tests
2025-08-16T21:07:49.1379324Z 
2025-08-16T21:07:49.1379407Z <a id="ingest.upload_router"></a>
2025-08-16T21:07:49.1379557Z 
2025-08-16T21:07:49.1379629Z # ingest.upload\_router
2025-08-16T21:07:49.1379748Z 
2025-08-16T21:07:49.1379835Z <a id="ingest.email_watcher"></a>
2025-08-16T21:07:49.1379976Z 
2025-08-16T21:07:49.1380048Z # ingest.email\_watcher
2025-08-16T21:07:49.1380168Z 
2025-08-16T21:07:49.1380253Z <a id="ingest.email_watcher.main"></a>
2025-08-16T21:07:49.1380407Z 
2025-08-16T21:07:49.1380468Z #### main
2025-08-16T21:07:49.1380560Z 
2025-08-16T21:07:49.1380622Z ```python
2025-08-16T21:07:49.1380791Z def main() -> dict[str, str]
2025-08-16T21:07:49.1380979Z ```
2025-08-16T21:07:49.1381060Z 
2025-08-16T21:07:49.1381455Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-16T21:07:49.1381681Z 
2025-08-16T21:07:49.1381811Z Returns {"status": "success"} when processing completes.
2025-08-16T21:07:49.1382018Z 
2025-08-16T21:07:49.1382104Z <a id="ingest.ingest_router"></a>
2025-08-16T21:07:49.1382251Z 
2025-08-16T21:07:49.1382335Z # ingest.ingest\_router
2025-08-16T21:07:49.1382452Z 
2025-08-16T21:07:49.1382526Z <a id="logistics_etl"></a>
2025-08-16T21:07:49.1382653Z 
2025-08-16T21:07:49.1382726Z # logistics\_etl
2025-08-16T21:07:49.1382829Z 
2025-08-16T21:07:49.1382904Z Daily logistics ETL job.
2025-08-16T21:07:49.1383030Z 
2025-08-16T21:07:49.1383109Z <a id="logistics_etl.__main__"></a>
2025-08-16T21:07:49.1383256Z 
2025-08-16T21:07:49.1383332Z # logistics\_etl.\_\_main\_\_
2025-08-16T21:07:49.1383476Z 
2025-08-16T21:07:49.1383565Z <a id="logistics_etl.tests.conftest"></a>
2025-08-16T21:07:49.1383731Z 
2025-08-16T21:07:49.1383814Z # logistics\_etl.tests.conftest
2025-08-16T21:07:49.1383965Z 
2025-08-16T21:07:49.1384066Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-16T21:07:49.1384251Z 
2025-08-16T21:07:49.1384336Z # logistics\_etl.tests.test\_repository
2025-08-16T21:07:49.1384494Z 
2025-08-16T21:07:49.1384588Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-16T21:07:49.1384751Z 
2025-08-16T21:07:49.1384831Z # logistics\_etl.tests.test\_cron
2025-08-16T21:07:49.1384970Z 
2025-08-16T21:07:49.1385069Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-16T21:07:49.1385237Z 
2025-08-16T21:07:49.1385321Z # logistics\_etl.tests.test\_imports
2025-08-16T21:07:49.1385477Z 
2025-08-16T21:07:49.1385565Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-16T21:07:49.1385727Z 
2025-08-16T21:07:49.1385811Z # logistics\_etl.tests.test\_smoke
2025-08-16T21:07:49.1385955Z 
2025-08-16T21:07:49.1386047Z <a id="logistics_etl.tests.test_client"></a>
2025-08-16T21:07:49.1386210Z 
2025-08-16T21:07:49.1386295Z # logistics\_etl.tests.test\_client
2025-08-16T21:07:49.1386442Z 
2025-08-16T21:07:49.1386531Z <a id="logistics_etl.tests"></a>
2025-08-16T21:07:49.1386676Z 
2025-08-16T21:07:49.1386746Z # logistics\_etl.tests
2025-08-16T21:07:49.1386859Z 
2025-08-16T21:07:49.1386941Z <a id="logistics_etl.flow"></a>
2025-08-16T21:07:49.1387074Z 
2025-08-16T21:07:49.1387142Z # logistics\_etl.flow
2025-08-16T21:07:49.1387255Z 
2025-08-16T21:07:49.1387339Z <a id="logistics_etl.client"></a>
2025-08-16T21:07:49.1387477Z 
2025-08-16T21:07:49.1387549Z # logistics\_etl.client
2025-08-16T21:07:49.1387671Z 
2025-08-16T21:07:49.1387746Z <a id="logistics_etl.cron"></a>
2025-08-16T21:07:49.1387878Z 
2025-08-16T21:07:49.1387952Z # logistics\_etl.cron
2025-08-16T21:07:49.1388061Z 
2025-08-16T21:07:49.1388135Z <a id="logistics_etl.db"></a>
2025-08-16T21:07:49.1388266Z 
2025-08-16T21:07:49.1388339Z # logistics\_etl.db
2025-08-16T21:07:49.1388443Z 
2025-08-16T21:07:49.1388529Z <a id="logistics_etl.repository"></a>
2025-08-16T21:07:49.1388690Z 
2025-08-16T21:07:49.1388767Z # logistics\_etl.repository
2025-08-16T21:07:49.1388907Z 
2025-08-16T21:07:49.1389104Z <a id="alert_bot"></a>
2025-08-16T21:07:49.1389227Z 
2025-08-16T21:07:49.1389289Z # alert\_bot
2025-08-16T21:07:49.1389383Z 
2025-08-16T21:07:49.1389478Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-16T21:07:49.1389641Z 
2025-08-16T21:07:49.1389719Z # alert\_bot.tests.test\_smoke
2025-08-16T21:07:49.1389860Z 
2025-08-16T21:07:49.1389935Z <a id="alert_bot.tests"></a>
2025-08-16T21:07:49.1390065Z 
2025-08-16T21:07:49.1390130Z # alert\_bot.tests
2025-08-16T21:07:49.1390240Z 
2025-08-16T21:07:49.1390317Z <a id="alert_bot.alert_bot"></a>
2025-08-16T21:07:49.1390452Z 
2025-08-16T21:07:49.1390529Z # alert\_bot.alert\_bot
2025-08-16T21:07:49.1390640Z 
2025-08-16T21:07:49.1390713Z <a id="alert_bot.rules"></a>
2025-08-16T21:07:49.1390842Z 
2025-08-16T21:07:49.1390909Z # alert\_bot.rules
2025-08-16T21:07:49.1391010Z 
2025-08-16T21:07:49.1391075Z <a id="common"></a>
2025-08-16T21:07:49.1391183Z 
2025-08-16T21:07:49.1391244Z # common
2025-08-16T21:07:49.1391511Z 
2025-08-16T21:07:49.1391781Z <a id="common.dsn"></a>
2025-08-16T21:07:49.1391922Z 
2025-08-16T21:07:49.1391988Z # common.dsn
2025-08-16T21:07:49.1392091Z 
2025-08-16T21:07:49.1392182Z <a id="common.dsn.build_dsn"></a>
2025-08-16T21:07:49.1392335Z 
2025-08-16T21:07:49.1392400Z #### build\_dsn
2025-08-16T21:07:49.1392506Z 
2025-08-16T21:07:49.1392573Z ```python
2025-08-16T21:07:49.1392752Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:07:49.1392979Z ```
2025-08-16T21:07:49.1393059Z 
2025-08-16T21:07:49.1393188Z Return a Postgres DSN, validating required variables.
2025-08-16T21:07:49.1393391Z 
2025-08-16T21:07:49.1393589Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-16T21:07:49.1394048Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-16T21:07:49.1394462Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-16T21:07:49.1394771Z missing.
2025-08-16T21:07:49.1394859Z 
2025-08-16T21:07:49.1394942Z <a id="common.models_vendor"></a>
2025-08-16T21:07:49.1395111Z 
2025-08-16T21:07:49.1395183Z # common.models\_vendor
2025-08-16T21:07:49.1395301Z 
2025-08-16T21:07:49.1395396Z <a id="common.models_vendor.Vendor"></a>
2025-08-16T21:07:49.1395561Z 
2025-08-16T21:07:49.1395627Z ## Vendor Objects
2025-08-16T21:07:49.1395734Z 
2025-08-16T21:07:49.1395796Z ```python
2025-08-16T21:07:49.1395945Z class Vendor(Base)
2025-08-16T21:07:49.1396128Z ```
2025-08-16T21:07:49.1396212Z 
2025-08-16T21:07:49.1396290Z Vendor of inventory items.
2025-08-16T21:07:49.1396419Z 
2025-08-16T21:07:49.1396530Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-16T21:07:49.1396704Z 
2025-08-16T21:07:49.1396774Z ## VendorPrice Objects
2025-08-16T21:07:49.1396894Z 
2025-08-16T21:07:49.1396954Z ```python
2025-08-16T21:07:49.1397107Z class VendorPrice(Base)
2025-08-16T21:07:49.1397283Z ```
2025-08-16T21:07:49.1397359Z 
2025-08-16T21:07:49.1397460Z Association table linking vendors to pricing.
2025-08-16T21:07:49.1397641Z 
2025-08-16T21:07:49.1397712Z <a id="common.db_url"></a>
2025-08-16T21:07:49.1397846Z 
2025-08-16T21:07:49.1397916Z # common.db\_url
2025-08-16T21:07:49.1398016Z 
2025-08-16T21:07:49.1398098Z <a id="common.db_url.build_url"></a>
2025-08-16T21:07:49.1398257Z 
2025-08-16T21:07:49.1398319Z #### build\_url
2025-08-16T21:07:49.1398417Z 
2025-08-16T21:07:49.1398477Z ```python
2025-08-16T21:07:49.1398651Z def build_url(async_: bool = True) -> str
2025-08-16T21:07:49.1398873Z ```
2025-08-16T21:07:49.1398952Z 
2025-08-16T21:07:49.1399053Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:07:49.1399224Z 
2025-08-16T21:07:49.1399303Z <a id="common.keepa"></a>
2025-08-16T21:07:49.1399426Z 
2025-08-16T21:07:49.1399493Z # common.keepa
2025-08-16T21:07:49.1399596Z 
2025-08-16T21:07:49.1399667Z <a id="common.llm"></a>
2025-08-16T21:07:49.1399782Z 
2025-08-16T21:07:49.1399845Z # common.llm
2025-08-16T21:07:49.1399944Z 
2025-08-16T21:07:49.1400021Z <a id="common.settings"></a>
2025-08-16T21:07:49.1400157Z 
2025-08-16T21:07:49.1400231Z # common.settings
2025-08-16T21:07:49.1400664Z 
2025-08-16T21:07:49.1400793Z <a id="common.db"></a>
2025-08-16T21:07:49.1401021Z 
2025-08-16T21:07:49.1401138Z # common.db
2025-08-16T21:07:49.1401308Z 
2025-08-16T21:07:49.1401652Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-16T21:07:49.1401997Z 
2025-08-16T21:07:49.1402136Z #### build\_sqlalchemy\_url
2025-08-16T21:07:49.1402386Z 
2025-08-16T21:07:49.1402517Z ```python
2025-08-16T21:07:49.1402845Z def build_sqlalchemy_url() -> str
2025-08-16T21:07:49.1403250Z ```
2025-08-16T21:07:49.1403410Z 
2025-08-16T21:07:49.1403589Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:07:49.1403910Z 
2025-08-16T21:07:49.1404062Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-16T21:07:49.1404354Z 
2025-08-16T21:07:49.1404494Z #### build\_asyncpg\_dsn
2025-08-16T21:07:49.1404636Z 
2025-08-16T21:07:49.1404701Z ```python
2025-08-16T21:07:49.1404885Z def build_asyncpg_dsn() -> str
2025-08-16T21:07:49.1405089Z ```
2025-08-16T21:07:49.1405173Z 
2025-08-16T21:07:49.1405358Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:07:49.1406072Z 
2025-08-16T21:07:49.1406169Z <a id="common.db.refresh_mvs"></a>
2025-08-16T21:07:49.1406337Z 
2025-08-16T21:07:49.1406408Z #### refresh\_mvs
2025-08-16T21:07:49.1406515Z 
2025-08-16T21:07:49.1406587Z ```python
2025-08-16T21:07:49.1406791Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:07:49.1407047Z ```
2025-08-16T21:07:49.1407137Z 
2025-08-16T21:07:49.1407277Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:07:49.1407495Z 
2025-08-16T21:07:49.1407576Z <a id="common.config"></a>
2025-08-16T21:07:49.1407706Z 
2025-08-16T21:07:49.1407773Z # common.config
2025-08-16T21:07:49.1407885Z 
2025-08-16T21:07:49.1407957Z <a id="common.base"></a>
2025-08-16T21:07:49.1408079Z 
2025-08-16T21:07:49.1408149Z # common.base
2025-08-16T21:07:49.1408245Z 
2025-08-16T21:07:49.1408322Z <a id="common.base.Base"></a>
2025-08-16T21:07:49.1408457Z 
2025-08-16T21:07:49.1408526Z ## Base Objects
2025-08-16T21:07:49.1408623Z 
2025-08-16T21:07:49.1408698Z ```python
2025-08-16T21:07:49.1408871Z class Base(DeclarativeBase)
2025-08-16T21:07:49.1409060Z ```
2025-08-16T21:07:49.1409146Z 
2025-08-16T21:07:49.1409246Z Base class for SQLAlchemy models.
2025-08-16T21:07:49.1409393Z 
2025-08-16T21:07:49.1409467Z <a id="repricer"></a>
2025-08-16T21:07:49.1409589Z 
2025-08-16T21:07:49.1409653Z # repricer
2025-08-16T21:07:49.1409743Z 
2025-08-16T21:07:49.1409831Z <a id="repricer.app.schemas"></a>
2025-08-16T21:07:49.1409980Z 
2025-08-16T21:07:49.1410056Z # repricer.app.schemas
2025-08-16T21:07:49.1410175Z 
2025-08-16T21:07:49.1410263Z <a id="repricer.app.deps"></a>
2025-08-16T21:07:49.1410403Z 
2025-08-16T21:07:49.1410479Z # repricer.app.deps
2025-08-16T21:07:49.1410593Z 
2025-08-16T21:07:49.1410715Z Placeholder module for Keepa / SP-API clients.
2025-08-16T21:07:49.1410903Z 
2025-08-16T21:07:49.1410988Z <a id="repricer.app.logic"></a>
2025-08-16T21:07:49.1411138Z 
2025-08-16T21:07:49.1411214Z # repricer.app.logic
2025-08-16T21:07:49.1411480Z 
2025-08-16T21:07:49.1411635Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-16T21:07:49.1411811Z 
2025-08-16T21:07:49.1411888Z #### MIN\_MARGIN
2025-08-16T21:07:49.1412008Z 
2025-08-16T21:07:49.1412068Z 15 % ROI
2025-08-16T21:07:49.1412154Z 
2025-08-16T21:07:49.1412260Z <a id="repricer.app.logic.compute_price"></a>
2025-08-16T21:07:49.1412449Z 
2025-08-16T21:07:49.1412515Z #### compute\_price
2025-08-16T21:07:49.1412619Z 
2025-08-16T21:07:49.1412687Z ```python
2025-08-16T21:07:49.1412927Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-16T21:07:49.1413226Z ```
2025-08-16T21:07:49.1413307Z 
2025-08-16T21:07:49.1413415Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-16T21:07:49.1413693Z Replace with real competitive logic later.
2025-08-16T21:07:49.1413862Z 
2025-08-16T21:07:49.1413944Z <a id="repricer.app.main"></a>
2025-08-16T21:07:49.1414089Z 
2025-08-16T21:07:49.1414162Z # repricer.app.main
2025-08-16T21:07:49.1414269Z 
2025-08-16T21:07:49.1414350Z <a id="repricer.app"></a>
2025-08-16T21:07:49.1414621Z 
2025-08-16T21:07:49.1414689Z # repricer.app
2025-08-16T21:07:49.1414793Z 
2025-08-16T21:07:49.1414881Z <a id="repricer.tests.test_imports"></a>
2025-08-16T21:07:49.1415046Z 
2025-08-16T21:07:49.1415128Z # repricer.tests.test\_imports
2025-08-16T21:07:49.1415268Z 
2025-08-16T21:07:49.1415355Z <a id="repricer.tests.test_smoke"></a>
2025-08-16T21:07:49.1415514Z 
2025-08-16T21:07:49.1415598Z # repricer.tests.test\_smoke
2025-08-16T21:07:49.1415732Z 
2025-08-16T21:07:49.1415809Z <a id="repricer.tests"></a>
2025-08-16T21:07:49.1415942Z 
2025-08-16T21:07:49.1416053Z # repricer.tests
2025-08-16T21:07:49.1416166Z 
2025-08-16T21:07:49.1416229Z <a id="db"></a>
2025-08-16T21:07:49.1416331Z 
2025-08-16T21:07:49.1416395Z # db
2025-08-16T21:07:49.1416478Z 
2025-08-16T21:07:49.1416553Z <a id="db.utils.views"></a>
2025-08-16T21:07:49.1416679Z 
2025-08-16T21:07:49.1416751Z # db.utils.views
2025-08-16T21:07:49.1416852Z 
2025-08-16T21:07:49.1416942Z <a id="db.utils.views.replace_view"></a>
2025-08-16T21:07:49.1417234Z 
2025-08-16T21:07:49.1417301Z #### replace\_view
2025-08-16T21:07:49.1417404Z 
2025-08-16T21:07:49.1417464Z ```python
2025-08-16T21:07:49.1417660Z def replace_view(name: str, new_sql: str) -> None
2025-08-16T21:07:49.1417905Z ```
2025-08-16T21:07:49.1417986Z 
2025-08-16T21:07:49.1418072Z Drop and recreate a SQL view atomically.
2025-08-16T21:07:49.1418234Z 
2025-08-16T21:07:49.1418312Z <a id="db.utils"></a>
2025-08-16T21:07:49.1418425Z 
2025-08-16T21:07:49.1418484Z # db.utils
2025-08-16T21:07:49.1418578Z 
2025-08-16T21:07:49.1418656Z <a id="price_importer"></a>
2025-08-16T21:07:49.1418783Z 
2025-08-16T21:07:49.1418851Z # price\_importer
2025-08-16T21:07:49.1418958Z 
2025-08-16T21:07:49.1419059Z <a id="price_importer.services_common.dsn"></a>
2025-08-16T21:07:49.1419238Z 
2025-08-16T21:07:49.1419331Z # price\_importer.services\_common.dsn
2025-08-16T21:07:49.1419489Z 
2025-08-16T21:07:49.1419616Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-16T21:07:49.1419829Z 
2025-08-16T21:07:49.1419898Z #### build\_dsn
2025-08-16T21:07:49.1419998Z 
2025-08-16T21:07:49.1420060Z ```python
2025-08-16T21:07:49.1420236Z def build_dsn(sync: bool = True) -> str
2025-08-16T21:07:49.1420458Z ```
2025-08-16T21:07:49.1420541Z 
2025-08-16T21:07:49.1420607Z Return safe DSN.
2025-08-16T21:07:49.1420712Z 
2025-08-16T21:07:49.1421057Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-16T21:07:49.1421257Z 
2025-08-16T21:07:49.1421501Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-16T21:07:49.1421711Z 
2025-08-16T21:07:49.1421822Z # price\_importer.services\_common.models\_vendor
2025-08-16T21:07:49.1422008Z 
2025-08-16T21:07:49.1422118Z <a id="price_importer.services_common.db_url"></a>
2025-08-16T21:07:49.1422299Z 
2025-08-16T21:07:49.1422390Z # price\_importer.services\_common.db\_url
2025-08-16T21:07:49.1422559Z 
2025-08-16T21:07:49.1422700Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-16T21:07:49.1422912Z 
2025-08-16T21:07:49.1422989Z #### build\_url
2025-08-16T21:07:49.1423101Z 
2025-08-16T21:07:49.1423163Z ```python
2025-08-16T21:07:49.1423332Z def build_url(async_: bool = True) -> str
2025-08-16T21:07:49.1423554Z ```
2025-08-16T21:07:49.1423634Z 
2025-08-16T21:07:49.1423733Z Return Postgres DSN from env or PG_* parts.
2025-08-16T21:07:49.1423900Z 
2025-08-16T21:07:49.1424004Z <a id="price_importer.services_common.keepa"></a>
2025-08-16T21:07:49.1424189Z 
2025-08-16T21:07:49.1424278Z # price\_importer.services\_common.keepa
2025-08-16T21:07:49.1424442Z 
2025-08-16T21:07:49.1424542Z <a id="price_importer.services_common.llm"></a>
2025-08-16T21:07:49.1424724Z 
2025-08-16T21:07:49.1424811Z # price\_importer.services\_common.llm
2025-08-16T21:07:49.1424968Z 
2025-08-16T21:07:49.1425085Z <a id="price_importer.services_common.settings"></a>
2025-08-16T21:07:49.1425273Z 
2025-08-16T21:07:49.1425366Z # price\_importer.services\_common.settings
2025-08-16T21:07:49.1425540Z 
2025-08-16T21:07:49.1425639Z <a id="price_importer.services_common.db"></a>
2025-08-16T21:07:49.1425939Z 
2025-08-16T21:07:49.1426028Z # price\_importer.services\_common.db
2025-08-16T21:07:49.1426190Z 
2025-08-16T21:07:49.1426340Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-16T21:07:49.1426574Z 
2025-08-16T21:07:49.1426656Z #### build\_sqlalchemy\_url
2025-08-16T21:07:49.1426784Z 
2025-08-16T21:07:49.1426845Z ```python
2025-08-16T21:07:49.1427015Z def build_sqlalchemy_url() -> str
2025-08-16T21:07:49.1427213Z ```
2025-08-16T21:07:49.1427302Z 
2025-08-16T21:07:49.1427395Z Return Postgres URL for SQLAlchemy engines.
2025-08-16T21:07:49.1427562Z 
2025-08-16T21:07:49.1427708Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-16T21:07:49.1427929Z 
2025-08-16T21:07:49.1428002Z #### build\_asyncpg\_dsn
2025-08-16T21:07:49.1428126Z 
2025-08-16T21:07:49.1428194Z ```python
2025-08-16T21:07:49.1428358Z def build_asyncpg_dsn() -> str
2025-08-16T21:07:49.1428559Z ```
2025-08-16T21:07:49.1428638Z 
2025-08-16T21:07:49.1428762Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-16T21:07:49.1429094Z 
2025-08-16T21:07:49.1429219Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-16T21:07:49.1429419Z 
2025-08-16T21:07:49.1429491Z #### refresh\_mvs
2025-08-16T21:07:49.1429595Z 
2025-08-16T21:07:49.1429655Z ```python
2025-08-16T21:07:49.1429850Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-16T21:07:49.1430086Z ```
2025-08-16T21:07:49.1430169Z 
2025-08-16T21:07:49.1430299Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-16T21:07:49.1430509Z 
2025-08-16T21:07:49.1430605Z <a id="price_importer.services_common"></a>
2025-08-16T21:07:49.1430771Z 
2025-08-16T21:07:49.1430854Z # price\_importer.services\_common
2025-08-16T21:07:49.1431004Z 
2025-08-16T21:07:49.1431112Z <a id="price_importer.services_common.base"></a>
2025-08-16T21:07:49.1431292Z 
2025-08-16T21:07:49.1431597Z # price\_importer.services\_common.base
2025-08-16T21:07:49.1431777Z 
2025-08-16T21:07:49.1431868Z <a id="price_importer.normaliser"></a>
2025-08-16T21:07:49.1432040Z 
2025-08-16T21:07:49.1432127Z # price\_importer.normaliser
2025-08-16T21:07:49.1432265Z 
2025-08-16T21:07:49.1432367Z <a id="price_importer.common.models_vendor"></a>
2025-08-16T21:07:49.1432545Z 
2025-08-16T21:07:49.1432639Z # price\_importer.common.models\_vendor
2025-08-16T21:07:49.1432797Z 
2025-08-16T21:07:49.1432886Z <a id="price_importer.common.db_url"></a>
2025-08-16T21:07:49.1433059Z 
2025-08-16T21:07:49.1433142Z # price\_importer.common.db\_url
2025-08-16T21:07:49.1433295Z 
2025-08-16T21:07:49.1433412Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-16T21:07:49.1433599Z 
2025-08-16T21:07:49.1433664Z #### make\_dsn
2025-08-16T21:07:49.1433763Z 
2025-08-16T21:07:49.1433834Z ```python
2025-08-16T21:07:49.1434008Z def make_dsn(async_: bool = False) -> str
2025-08-16T21:07:49.1434237Z ```
2025-08-16T21:07:49.1434320Z 
2025-08-16T21:07:49.1434439Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-16T21:07:49.1434644Z 
2025-08-16T21:07:49.1434765Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-16T21:07:49.1434957Z 
2025-08-16T21:07:49.1435028Z #### build\_url
2025-08-16T21:07:49.1435127Z 
2025-08-16T21:07:49.1435189Z ```python
2025-08-16T21:07:49.1435368Z def build_url(async_: bool = False) -> str
2025-08-16T21:07:49.1435588Z ```
2025-08-16T21:07:49.1435673Z 
2025-08-16T21:07:49.1435796Z Return Postgres DSN built from environment variables.
2025-08-16T21:07:49.1435993Z 
2025-08-16T21:07:49.1436079Z <a id="price_importer.common"></a>
2025-08-16T21:07:49.1436235Z 
2025-08-16T21:07:49.1436312Z # price\_importer.common
2025-08-16T21:07:49.1436441Z 
2025-08-16T21:07:49.1436538Z <a id="price_importer.common.base"></a>
2025-08-16T21:07:49.1436702Z 
2025-08-16T21:07:49.1436784Z # price\_importer.common.base
2025-08-16T21:07:49.1436928Z 
2025-08-16T21:07:49.1437021Z <a id="price_importer.tests.conftest"></a>
2025-08-16T21:07:49.1437197Z 
2025-08-16T21:07:49.1437282Z # price\_importer.tests.conftest
2025-08-16T21:07:49.1437436Z 
2025-08-16T21:07:49.1437674Z <a id="price_importer.tests.test_reader"></a>
2025-08-16T21:07:49.1437853Z 
2025-08-16T21:07:49.1437947Z # price\_importer.tests.test\_reader
2025-08-16T21:07:49.1438102Z 
2025-08-16T21:07:49.1438202Z <a id="price_importer.tests.test_imports"></a>
2025-08-16T21:07:49.1438385Z 
2025-08-16T21:07:49.1438471Z # price\_importer.tests.test\_imports
2025-08-16T21:07:49.1438627Z 
2025-08-16T21:07:49.1438724Z <a id="price_importer.tests.test_smoke"></a>
2025-08-16T21:07:49.1438901Z 
2025-08-16T21:07:49.1438985Z # price\_importer.tests.test\_smoke
2025-08-16T21:07:49.1439137Z 
2025-08-16T21:07:49.1439246Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-16T21:07:49.1439429Z 
2025-08-16T21:07:49.1439519Z # price\_importer.tests.test\_normaliser
2025-08-16T21:07:49.1439691Z 
2025-08-16T21:07:49.1439775Z <a id="price_importer.tests"></a>
2025-08-16T21:07:49.1439921Z 
2025-08-16T21:07:49.1439996Z # price\_importer.tests
2025-08-16T21:07:49.1440122Z 
2025-08-16T21:07:49.1440206Z <a id="price_importer.reader"></a>
2025-08-16T21:07:49.1440512Z 
2025-08-16T21:07:49.1440595Z # price\_importer.reader
2025-08-16T21:07:49.1440725Z 
2025-08-16T21:07:49.1440820Z <a id="price_importer.reader.load_file"></a>
2025-08-16T21:07:49.1440998Z 
2025-08-16T21:07:49.1441060Z #### load\_file
2025-08-16T21:07:49.1441160Z 
2025-08-16T21:07:49.1441222Z ```python
2025-08-16T21:07:49.1441518Z def load_file(path: str | Path) -> Any
2025-08-16T21:07:49.1441739Z ```
2025-08-16T21:07:49.1441819Z 
2025-08-16T21:07:49.1441907Z Return DataFrame from CSV or Excel file.
2025-08-16T21:07:49.1442070Z 
2025-08-16T21:07:49.1442183Z Raises RuntimeError if pandas is unavailable.
2025-08-16T21:07:49.1442356Z 
2025-08-16T21:07:49.1442450Z <a id="price_importer.repository"></a>
2025-08-16T21:07:49.1442614Z 
2025-08-16T21:07:49.1442696Z # price\_importer.repository
2025-08-16T21:07:49.1442833Z 
2025-08-16T21:07:49.1442915Z <a id="price_importer.import"></a>
2025-08-16T21:07:49.1443071Z 
2025-08-16T21:07:49.1443149Z # price\_importer.import
2025-08-16T21:07:49.1443292Z 
2025-08-16T21:07:49.1443370Z <a id="fees_h10"></a>
2025-08-16T21:07:49.1443484Z 
2025-08-16T21:07:49.1443547Z # fees\_h10
2025-08-16T21:07:49.1443644Z 
2025-08-16T21:07:49.1443719Z <a id="fees_h10.worker"></a>
2025-08-16T21:07:49.1443853Z 
2025-08-16T21:07:49.1443920Z # fees\_h10.worker
2025-08-16T21:07:49.1444029Z 
2025-08-16T21:07:49.1444113Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-16T21:07:49.1444272Z 
2025-08-16T21:07:49.1444356Z # fees\_h10.tests.test\_smoke
2025-08-16T21:07:49.1444490Z 
2025-08-16T21:07:49.1444566Z <a id="fees_h10.tests"></a>
2025-08-16T21:07:49.1444699Z 
2025-08-16T21:07:49.1444763Z # fees\_h10.tests
2025-08-16T21:07:49.1444868Z 
2025-08-16T21:07:49.1444942Z <a id="fees_h10.client"></a>
2025-08-16T21:07:49.1445078Z 
2025-08-16T21:07:49.1445142Z # fees\_h10.client
2025-08-16T21:07:49.1445244Z 
2025-08-16T21:07:49.1445330Z <a id="fees_h10.repository"></a>
2025-08-16T21:07:49.1445472Z 
2025-08-16T21:07:49.1445543Z # fees\_h10.repository
2025-08-16T21:07:49.1445668Z 
2025-08-16T21:07:49.1445745Z <a id="emailer"></a>
2025-08-16T21:07:49.1445853Z 
2025-08-16T21:07:49.1445915Z # emailer
2025-08-16T21:07:49.1446010Z 
2025-08-16T21:07:49.1446112Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-16T21:07:49.1446288Z 
2025-08-16T21:07:49.1446382Z # emailer.tests.test\_import\_emailer
2025-08-16T21:07:49.1446542Z 
2025-08-16T21:07:49.1446627Z <a id="emailer.tests.test_smoke"></a>
2025-08-16T21:07:49.1446780Z 
2025-08-16T21:07:49.1446866Z # emailer.tests.test\_smoke
2025-08-16T21:07:49.1446999Z 
2025-08-16T21:07:49.1447077Z <a id="emailer.tests"></a>
2025-08-16T21:07:49.1447212Z 
2025-08-16T21:07:49.1447277Z # emailer.tests
2025-08-16T21:07:49.1447380Z 
2025-08-16T21:07:49.1447470Z <a id="emailer.generate_body"></a>
2025-08-16T21:07:49.1447616Z 
2025-08-16T21:07:49.1447689Z # emailer.generate\_body
2025-08-16T21:07:49.1447812Z 
2025-08-16T21:07:49.1447887Z <a id="llm_server"></a>
2025-08-16T21:07:49.1448003Z 
2025-08-16T21:07:49.1448064Z # llm\_server
2025-08-16T21:07:49.1448292Z 
2025-08-16T21:07:49.1448372Z <a id="llm_server.app"></a>
2025-08-16T21:07:49.1448501Z 
2025-08-16T21:07:49.1448567Z # llm\_server.app
2025-08-16T21:07:49.1448676Z 
