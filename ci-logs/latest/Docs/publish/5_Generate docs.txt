2025-08-19T14:27:05.8030278Z ##[group]Run pydoc-markdown
2025-08-19T14:27:05.8030582Z [36;1mpydoc-markdown[0m
2025-08-19T14:27:05.8073740Z shell: /usr/bin/bash -e {0}
2025-08-19T14:27:05.8074008Z env:
2025-08-19T14:27:05.8074253Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:27:05.8074664Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T14:27:05.8075062Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:27:05.8075426Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:27:05.8075783Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T14:27:05.8076133Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T14:27:05.8076427Z ##[endgroup]
2025-08-19T14:27:06.2460925Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T14:27:06.2461865Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T14:27:06.2462343Z In "pydoc-markdown.yml"
2025-08-19T14:27:06.2462798Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T14:27:06.2463509Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T14:27:06.2464288Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T14:27:06.2464804Z 
2025-08-19T14:27:06.5856215Z <a id="__init__"></a>
2025-08-19T14:27:06.5856810Z 
2025-08-19T14:27:06.5856973Z # \_\_init\_\_
2025-08-19T14:27:06.5857188Z 
2025-08-19T14:27:06.5857322Z <a id="api"></a>
2025-08-19T14:27:06.5857548Z 
2025-08-19T14:27:06.5857679Z # api
2025-08-19T14:27:06.5857869Z 
2025-08-19T14:27:06.5858046Z <a id="api.errors"></a>
2025-08-19T14:27:06.5858358Z 
2025-08-19T14:27:06.5858508Z # api.errors
2025-08-19T14:27:06.5858713Z 
2025-08-19T14:27:06.5858897Z <a id="api.sentry_config"></a>
2025-08-19T14:27:06.5859838Z 
2025-08-19T14:27:06.5860029Z # api.sentry\_config
2025-08-19T14:27:06.5860298Z 
2025-08-19T14:27:06.5860515Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T14:27:06.5860888Z 
2025-08-19T14:27:06.5861545Z # api.tests.test\_stats\_contracts
2025-08-19T14:27:06.5862004Z 
2025-08-19T14:27:06.5862256Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T14:27:06.5862711Z 
2025-08-19T14:27:06.5862954Z # api.tests.test\_sentry\_scrub
2025-08-19T14:27:06.5863344Z 
2025-08-19T14:27:06.5863616Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T14:27:06.5864083Z 
2025-08-19T14:27:06.5864345Z # api.tests.test\_roi\_basic\_auth
2025-08-19T14:27:06.5864808Z 
2025-08-19T14:27:06.5865037Z <a id="api.tests.test_errors_json"></a>
2025-08-19T14:27:06.5865481Z 
2025-08-19T14:27:06.5865707Z # api.tests.test\_errors\_json
2025-08-19T14:27:06.5866110Z 
2025-08-19T14:27:06.5866343Z <a id="api.tests.test_llm"></a>
2025-08-19T14:27:06.5866770Z 
2025-08-19T14:27:06.5866981Z # api.tests.test\_llm
2025-08-19T14:27:06.5867322Z 
2025-08-19T14:27:06.5867576Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T14:27:06.5868008Z 
2025-08-19T14:27:06.5868150Z # api.tests.test\_roi\_filters
2025-08-19T14:27:06.5868385Z 
2025-08-19T14:27:06.5868548Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T14:27:06.5868834Z 
2025-08-19T14:27:06.5868973Z # api.tests.test\_sentry\_event
2025-08-19T14:27:06.5869509Z 
2025-08-19T14:27:06.5869720Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T14:27:06.5870054Z 
2025-08-19T14:27:06.5870196Z ## DummyTransport Objects
2025-08-19T14:27:06.5870412Z 
2025-08-19T14:27:06.5870520Z ```python
2025-08-19T14:27:06.5870803Z class DummyTransport()
2025-08-19T14:27:06.5871103Z ```
2025-08-19T14:27:06.5871247Z 
2025-08-19T14:27:06.5871529Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T14:27:06.5871954Z 
2025-08-19T14:27:06.5872084Z #### capture\_envelope
2025-08-19T14:27:06.5872256Z 
2025-08-19T14:27:06.5872344Z ```python
2025-08-19T14:27:06.5872574Z def capture_envelope(envelope)
2025-08-19T14:27:06.5872835Z ```
2025-08-19T14:27:06.5872947Z 
2025-08-19T14:27:06.5873108Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T14:27:06.5873378Z 
2025-08-19T14:27:06.5873495Z <a id="api.tests.test_cors"></a>
2025-08-19T14:27:06.5873960Z 
2025-08-19T14:27:06.5874058Z # api.tests.test\_cors
2025-08-19T14:27:06.5874211Z 
2025-08-19T14:27:06.5874328Z <a id="api.tests.test_imports"></a>
2025-08-19T14:27:06.5874532Z 
2025-08-19T14:27:06.5874632Z # api.tests.test\_imports
2025-08-19T14:27:06.5874802Z 
2025-08-19T14:27:06.5874916Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T14:27:06.5875126Z 
2025-08-19T14:27:06.5875230Z # api.tests.test\_rate\_limit
2025-08-19T14:27:06.5875419Z 
2025-08-19T14:27:06.5875544Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T14:27:06.5875769Z 
2025-08-19T14:27:06.5875860Z #### app
2025-08-19T14:27:06.5875978Z 
2025-08-19T14:27:06.5876063Z noqa: E402
2025-08-19T14:27:06.5876184Z 
2025-08-19T14:27:06.5876298Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T14:27:06.5876508Z 
2025-08-19T14:27:06.5876614Z # api.tests.test\_entrypoint
2025-08-19T14:27:06.5876798Z 
2025-08-19T14:27:06.5876906Z <a id="api.tests.test_health"></a>
2025-08-19T14:27:06.5877118Z 
2025-08-19T14:27:06.5877222Z # api.tests.test\_health
2025-08-19T14:27:06.5877388Z 
2025-08-19T14:27:06.5877496Z <a id="api.tests.test_score"></a>
2025-08-19T14:27:06.5877695Z 
2025-08-19T14:27:06.5877794Z # api.tests.test\_score
2025-08-19T14:27:06.5877928Z 
2025-08-19T14:27:06.5878015Z <a id="api.logging_config"></a>
2025-08-19T14:27:06.5878172Z 
2025-08-19T14:27:06.5878250Z # api.logging\_config
2025-08-19T14:27:06.5878372Z 
2025-08-19T14:27:06.5878466Z <a id="api.migrations.env"></a>
2025-08-19T14:27:06.5878612Z 
2025-08-19T14:27:06.5878690Z # api.migrations.env
2025-08-19T14:27:06.5878809Z 
2025-08-19T14:27:06.5878937Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T14:27:06.5879268Z 
2025-08-19T14:27:06.5879382Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T14:27:06.5879574Z 
2025-08-19T14:27:06.5879686Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T14:27:06.5879876Z 
2025-08-19T14:27:06.5879979Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T14:27:06.5880292Z 
2025-08-19T14:27:06.5880448Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T14:27:06.5880688Z 
2025-08-19T14:27:06.5880826Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T14:27:06.5881041Z 
2025-08-19T14:27:06.5881166Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T14:27:06.5881374Z 
2025-08-19T14:27:06.5881484Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T14:27:06.5881668Z 
2025-08-19T14:27:06.5881795Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T14:27:06.5881989Z 
2025-08-19T14:27:06.5882096Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T14:27:06.5882281Z 
2025-08-19T14:27:06.5882408Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T14:27:06.5882611Z 
2025-08-19T14:27:06.5882720Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T14:27:06.5882913Z 
2025-08-19T14:27:06.5883031Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T14:27:06.5883325Z 
2025-08-19T14:27:06.5883436Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T14:27:06.5883652Z 
2025-08-19T14:27:06.5883783Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T14:27:06.5883987Z 
2025-08-19T14:27:06.5884096Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T14:27:06.5884284Z 
2025-08-19T14:27:06.5884423Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T14:27:06.5884643Z 
2025-08-19T14:27:06.5884764Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T14:27:06.5884969Z 
2025-08-19T14:27:06.5885094Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T14:27:06.5885297Z 
2025-08-19T14:27:06.5885413Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T14:27:06.5885603Z 
2025-08-19T14:27:06.5885740Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T14:27:06.5885969Z 
2025-08-19T14:27:06.5886089Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T14:27:06.5886430Z 
2025-08-19T14:27:06.5886542Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T14:27:06.5886741Z 
2025-08-19T14:27:06.5886837Z # api.migrations.versions.0001\_baseline
2025-08-19T14:27:06.5887007Z 
2025-08-19T14:27:06.5887105Z <a id="api.migrations.versions"></a>
2025-08-19T14:27:06.5887265Z 
2025-08-19T14:27:06.5887349Z # api.migrations.versions
2025-08-19T14:27:06.5887493Z 
2025-08-19T14:27:06.5887577Z <a id="api.migrations"></a>
2025-08-19T14:27:06.5887715Z 
2025-08-19T14:27:06.5887787Z # api.migrations
2025-08-19T14:27:06.5888091Z 
2025-08-19T14:27:06.5888226Z <a id="api.db"></a>
2025-08-19T14:27:06.5888416Z 
2025-08-19T14:27:06.5888548Z # api.db
2025-08-19T14:27:06.5888716Z 
2025-08-19T14:27:06.5888868Z <a id="api.routes.score"></a>
2025-08-19T14:27:06.5889311Z 
2025-08-19T14:27:06.5889447Z # api.routes.score
2025-08-19T14:27:06.5889651Z 
2025-08-19T14:27:06.5889803Z <a id="api.routes.stats"></a>
2025-08-19T14:27:06.5890057Z 
2025-08-19T14:27:06.5890194Z # api.routes.stats
2025-08-19T14:27:06.5890407Z 
2025-08-19T14:27:06.5890567Z <a id="api.routes.roi"></a>
2025-08-19T14:27:06.5890718Z 
2025-08-19T14:27:06.5890832Z # api.routes.roi
2025-08-19T14:27:06.5890940Z 
2025-08-19T14:27:06.5891035Z <a id="api.routes.health"></a>
2025-08-19T14:27:06.5891176Z 
2025-08-19T14:27:06.5891251Z # api.routes.health
2025-08-19T14:27:06.5891368Z 
2025-08-19T14:27:06.5891464Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T14:27:06.5891637Z 
2025-08-19T14:27:06.5891713Z #### MAX\_SKEW
2025-08-19T14:27:06.5891814Z 
2025-08-19T14:27:06.5891880Z seconds
2025-08-19T14:27:06.5891969Z 
2025-08-19T14:27:06.5892070Z <a id="api.routes.health.health"></a>
2025-08-19T14:27:06.5892233Z 
2025-08-19T14:27:06.5892302Z #### health
2025-08-19T14:27:06.5892403Z 
2025-08-19T14:27:06.5892472Z ```python
2025-08-19T14:27:06.5892683Z @router.get("/health", include_in_schema=False)
2025-08-19T14:27:06.5893107Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T14:27:06.5893622Z ```
2025-08-19T14:27:06.5893717Z 
2025-08-19T14:27:06.5893838Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T14:27:06.5894038Z 
2025-08-19T14:27:06.5894137Z <a id="api.routes.repository"></a>
2025-08-19T14:27:06.5894297Z 
2025-08-19T14:27:06.5894378Z # api.routes.repository
2025-08-19T14:27:06.5894512Z 
2025-08-19T14:27:06.5894588Z <a id="api.routes"></a>
2025-08-19T14:27:06.5894708Z 
2025-08-19T14:27:06.5894782Z # api.routes
2025-08-19T14:27:06.5894883Z 
2025-08-19T14:27:06.5894964Z <a id="api.models.fee"></a>
2025-08-19T14:27:06.5895096Z 
2025-08-19T14:27:06.5895175Z # api.models.fee
2025-08-19T14:27:06.5895285Z 
2025-08-19T14:27:06.5895363Z <a id="api.models"></a>
2025-08-19T14:27:06.5895487Z 
2025-08-19T14:27:06.5895557Z # api.models
2025-08-19T14:27:06.5895655Z 
2025-08-19T14:27:06.5895739Z <a id="api.roi_repository"></a>
2025-08-19T14:27:06.5895889Z 
2025-08-19T14:27:06.5895981Z # api.roi\_repository
2025-08-19T14:27:06.5896115Z 
2025-08-19T14:27:06.5896189Z <a id="api.main"></a>
2025-08-19T14:27:06.5896320Z 
2025-08-19T14:27:06.5896395Z # api.main
2025-08-19T14:27:06.5896493Z 
2025-08-19T14:27:06.5896576Z <a id="api.main.ready"></a>
2025-08-19T14:27:06.5896719Z 
2025-08-19T14:27:06.5896787Z #### ready
2025-08-19T14:27:06.5896879Z 
2025-08-19T14:27:06.5896947Z ```python
2025-08-19T14:27:06.5897229Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T14:27:06.5897686Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T14:27:06.5898044Z                                                                       str]
2025-08-19T14:27:06.5898292Z ```
2025-08-19T14:27:06.5898382Z 
2025-08-19T14:27:06.5898486Z Return 200 only when migrations are at head.
2025-08-19T14:27:06.5898672Z 
2025-08-19T14:27:06.5898752Z <a id="api.config"></a>
2025-08-19T14:27:06.5898877Z 
2025-08-19T14:27:06.5898946Z # api.config
2025-08-19T14:27:06.5899051Z 
2025-08-19T14:27:06.5899341Z <a id="api.security"></a>
2025-08-19T14:27:06.5899531Z 
2025-08-19T14:27:06.5899741Z # api.security
2025-08-19T14:27:06.5899847Z 
2025-08-19T14:27:06.5899916Z <a id="etl"></a>
2025-08-19T14:27:06.5900027Z 
2025-08-19T14:27:06.5900090Z # etl
2025-08-19T14:27:06.5900181Z 
2025-08-19T14:27:06.5900268Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T14:27:06.5900423Z 
2025-08-19T14:27:06.5900501Z # etl.fba\_fee\_ingestor
2025-08-19T14:27:06.5900628Z 
2025-08-19T14:27:06.5900719Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T14:27:06.5900867Z 
2025-08-19T14:27:06.5900944Z # etl.sp\_fees\_ingestor
2025-08-19T14:27:06.5901066Z 
2025-08-19T14:27:06.5901157Z <a id="etl.keepa_ingestor"></a>
2025-08-19T14:27:06.5901299Z 
2025-08-19T14:27:06.5901373Z # etl.keepa\_ingestor
2025-08-19T14:27:06.5901497Z 
2025-08-19T14:27:06.5901569Z <a id="etl.db"></a>
2025-08-19T14:27:06.5901680Z 
2025-08-19T14:27:06.5901753Z # etl.db
2025-08-19T14:27:06.5901845Z 
2025-08-19T14:27:06.5901933Z <a id="etl.dialects.schemas"></a>
2025-08-19T14:27:06.5902082Z 
2025-08-19T14:27:06.5902166Z # etl.dialects.schemas
2025-08-19T14:27:06.5902296Z 
2025-08-19T14:27:06.5902406Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T14:27:06.5902602Z 
2025-08-19T14:27:06.5902696Z # etl.dialects.amazon\_reimbursements
2025-08-19T14:27:06.5902866Z 
2025-08-19T14:27:06.5902969Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T14:27:06.5903153Z 
2025-08-19T14:27:06.5903244Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T14:27:06.5903402Z 
2025-08-19T14:27:06.5903502Z <a id="etl.dialects.test_generic"></a>
2025-08-19T14:27:06.5903667Z 
2025-08-19T14:27:06.5903751Z # etl.dialects.test\_generic
2025-08-19T14:27:06.5903896Z 
2025-08-19T14:27:06.5903990Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T14:27:06.5904158Z 
2025-08-19T14:27:06.5904244Z # etl.dialects.amazon\_returns
2025-08-19T14:27:06.5904392Z 
2025-08-19T14:27:06.5904491Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T14:27:06.5904666Z 
2025-08-19T14:27:06.5904760Z # etl.dialects.amazon\_fee\_preview
2025-08-19T14:27:06.5905043Z 
2025-08-19T14:27:06.5905159Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T14:27:06.5905352Z 
2025-08-19T14:27:06.5905445Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T14:27:06.5905611Z 
2025-08-19T14:27:06.5905710Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T14:27:06.5905891Z 
2025-08-19T14:27:06.5905981Z # etl.dialects.amazon\_settlements
2025-08-19T14:27:06.5906136Z 
2025-08-19T14:27:06.5906220Z <a id="etl.dialects"></a>
2025-08-19T14:27:06.5906350Z 
2025-08-19T14:27:06.5906420Z # etl.dialects
2025-08-19T14:27:06.5906529Z 
2025-08-19T14:27:06.5906602Z <a id="ingest"></a>
2025-08-19T14:27:06.5906716Z 
2025-08-19T14:27:06.5906781Z # ingest
2025-08-19T14:27:06.5906877Z 
2025-08-19T14:27:06.5906963Z <a id="ingest.maintenance"></a>
2025-08-19T14:27:06.5907107Z 
2025-08-19T14:27:06.5907189Z # ingest.maintenance
2025-08-19T14:27:06.5907308Z 
2025-08-19T14:27:06.5907391Z <a id="ingest.copy_loader"></a>
2025-08-19T14:27:06.5907536Z 
2025-08-19T14:27:06.5907612Z # ingest.copy\_loader
2025-08-19T14:27:06.5907741Z 
2025-08-19T14:27:06.5907847Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T14:27:06.5908040Z 
2025-08-19T14:27:06.5908118Z #### copy\_df\_via\_temp
2025-08-19T14:27:06.5908242Z 
2025-08-19T14:27:06.5908316Z ```python
2025-08-19T14:27:06.5908496Z def copy_df_via_temp(engine: Engine,
2025-08-19T14:27:06.5908917Z                      df: pd.DataFrame,
2025-08-19T14:27:06.5909527Z                      target_table: str,
2025-08-19T14:27:06.5909918Z                      *,
2025-08-19T14:27:06.5910288Z                      target_schema: Optional[str] = None,
2025-08-19T14:27:06.5910761Z                      columns: Sequence[str],
2025-08-19T14:27:06.5911255Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T14:27:06.5911775Z                      analyze_after: bool = False,
2025-08-19T14:27:06.5912259Z                      connection: Any | None = None) -> int
2025-08-19T14:27:06.5912690Z ```
2025-08-19T14:27:06.5912851Z 
2025-08-19T14:27:06.5913145Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T14:27:06.5913791Z 
2025-08-19T14:27:06.5913959Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T14:27:06.5914267Z 
2025-08-19T14:27:06.5914432Z # ingest.tests.test\_smoke
2025-08-19T14:27:06.5914598Z 
2025-08-19T14:27:06.5914687Z <a id="ingest.tests"></a>
2025-08-19T14:27:06.5914823Z 
2025-08-19T14:27:06.5914894Z # ingest.tests
2025-08-19T14:27:06.5915000Z 
2025-08-19T14:27:06.5915094Z <a id="ingest.upload_router"></a>
2025-08-19T14:27:06.5915246Z 
2025-08-19T14:27:06.5915324Z # ingest.upload\_router
2025-08-19T14:27:06.5915454Z 
2025-08-19T14:27:06.5915541Z <a id="ingest.email_watcher"></a>
2025-08-19T14:27:06.5915687Z 
2025-08-19T14:27:06.5915767Z # ingest.email\_watcher
2025-08-19T14:27:06.5915885Z 
2025-08-19T14:27:06.5915976Z <a id="ingest.email_watcher.main"></a>
2025-08-19T14:27:06.5916143Z 
2025-08-19T14:27:06.5916216Z #### main
2025-08-19T14:27:06.5916309Z 
2025-08-19T14:27:06.5916377Z ```python
2025-08-19T14:27:06.5916562Z def main() -> dict[str, str]
2025-08-19T14:27:06.5916766Z ```
2025-08-19T14:27:06.5916862Z 
2025-08-19T14:27:06.5917005Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T14:27:06.5917236Z 
2025-08-19T14:27:06.5917373Z Returns {"status": "success"} when processing completes.
2025-08-19T14:27:06.5917586Z 
2025-08-19T14:27:06.5917667Z <a id="ingest.tasks"></a>
2025-08-19T14:27:06.5917799Z 
2025-08-19T14:27:06.5917880Z # ingest.tasks
2025-08-19T14:27:06.5917985Z 
2025-08-19T14:27:06.5918086Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T14:27:06.5918272Z 
2025-08-19T14:27:06.5918348Z #### task\_import\_file
2025-08-19T14:27:06.5918469Z 
2025-08-19T14:27:06.5918541Z ```python
2025-08-19T14:27:06.5918802Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T14:27:06.5919319Z def task_import_file(self: Any,
2025-08-19T14:27:06.5919604Z                      uri: str,
2025-08-19T14:27:06.5919831Z                      report_type: str | None = None,
2025-08-19T14:27:06.5920273Z                      force: bool = False) -> dict[str, Any]
2025-08-19T14:27:06.5920554Z ```
2025-08-19T14:27:06.5920642Z 
2025-08-19T14:27:06.5920775Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T14:27:06.5920991Z 
2025-08-19T14:27:06.5921077Z <a id="ingest.celery_app"></a>
2025-08-19T14:27:06.5921218Z 
2025-08-19T14:27:06.5921294Z # ingest.celery\_app
2025-08-19T14:27:06.5921417Z 
2025-08-19T14:27:06.5921504Z <a id="ingest.ingest_router"></a>
2025-08-19T14:27:06.5921652Z 
2025-08-19T14:27:06.5921736Z # ingest.ingest\_router
2025-08-19T14:27:06.5921857Z 
2025-08-19T14:27:06.5921939Z <a id="logistics_etl"></a>
2025-08-19T14:27:06.5922074Z 
2025-08-19T14:27:06.5922143Z # logistics\_etl
2025-08-19T14:27:06.5922250Z 
2025-08-19T14:27:06.5922328Z Daily logistics ETL job.
2025-08-19T14:27:06.5922460Z 
2025-08-19T14:27:06.5922543Z <a id="logistics_etl.__main__"></a>
2025-08-19T14:27:06.5922700Z 
2025-08-19T14:27:06.5922786Z # logistics\_etl.\_\_main\_\_
2025-08-19T14:27:06.5922930Z 
2025-08-19T14:27:06.5923013Z <a id="logistics_etl.dsn"></a>
2025-08-19T14:27:06.5923157Z 
2025-08-19T14:27:06.5923230Z # logistics\_etl.dsn
2025-08-19T14:27:06.5923345Z 
2025-08-19T14:27:06.5923463Z Local DSN builder to avoid cross-service dependency.
2025-08-19T14:27:06.5923670Z 
2025-08-19T14:27:06.5923761Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T14:27:06.5923931Z 
2025-08-19T14:27:06.5924004Z #### build\_dsn
2025-08-19T14:27:06.5924109Z 
2025-08-19T14:27:06.5924176Z ```python
2025-08-19T14:27:06.5924365Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:27:06.5924592Z ```
2025-08-19T14:27:06.5924680Z 
2025-08-19T14:27:06.5924819Z Return a Postgres DSN assembled from environment variables.
2025-08-19T14:27:06.5925042Z 
2025-08-19T14:27:06.5925194Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T14:27:06.5925593Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T14:27:06.5925954Z error when any required variable is missing.
2025-08-19T14:27:06.5926144Z 
2025-08-19T14:27:06.5926369Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T14:27:06.5926549Z 
2025-08-19T14:27:06.5926638Z # logistics\_etl.tests.conftest
2025-08-19T14:27:06.5926788Z 
2025-08-19T14:27:06.5926897Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T14:27:06.5927088Z 
2025-08-19T14:27:06.5927180Z # logistics\_etl.tests.test\_repository
2025-08-19T14:27:06.5927350Z 
2025-08-19T14:27:06.5927449Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T14:27:06.5927619Z 
2025-08-19T14:27:06.5927704Z # logistics\_etl.tests.test\_cron
2025-08-19T14:27:06.5927860Z 
2025-08-19T14:27:06.5927961Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T14:27:06.5928140Z 
2025-08-19T14:27:06.5928227Z # logistics\_etl.tests.test\_imports
2025-08-19T14:27:06.5928391Z 
2025-08-19T14:27:06.5928487Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T14:27:06.5928659Z 
2025-08-19T14:27:06.5928751Z # logistics\_etl.tests.test\_smoke
2025-08-19T14:27:06.5928907Z 
2025-08-19T14:27:06.5929011Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T14:27:06.5929344Z 
2025-08-19T14:27:06.5929433Z # logistics\_etl.tests.test\_client
2025-08-19T14:27:06.5929590Z 
2025-08-19T14:27:06.5929683Z <a id="logistics_etl.tests"></a>
2025-08-19T14:27:06.5929842Z 
2025-08-19T14:27:06.5929917Z # logistics\_etl.tests
2025-08-19T14:27:06.5930038Z 
2025-08-19T14:27:06.5930128Z <a id="logistics_etl.flow"></a>
2025-08-19T14:27:06.5930269Z 
2025-08-19T14:27:06.5930345Z # logistics\_etl.flow
2025-08-19T14:27:06.5930468Z 
2025-08-19T14:27:06.5930556Z <a id="logistics_etl.client"></a>
2025-08-19T14:27:06.5930705Z 
2025-08-19T14:27:06.5930781Z # logistics\_etl.client
2025-08-19T14:27:06.5930914Z 
2025-08-19T14:27:06.5930998Z <a id="logistics_etl.cron"></a>
2025-08-19T14:27:06.5931137Z 
2025-08-19T14:27:06.5931221Z # logistics\_etl.cron
2025-08-19T14:27:06.5931339Z 
2025-08-19T14:27:06.5931421Z <a id="logistics_etl.db"></a>
2025-08-19T14:27:06.5931561Z 
2025-08-19T14:27:06.5931639Z # logistics\_etl.db
2025-08-19T14:27:06.5931886Z 
2025-08-19T14:27:06.5931977Z <a id="logistics_etl.repository"></a>
2025-08-19T14:27:06.5932146Z 
2025-08-19T14:27:06.5965283Z # logistics\_etl.repository
2025-08-19T14:27:06.5965603Z 
2025-08-19T14:27:06.5965772Z <a id="alert_bot"></a>
2025-08-19T14:27:06.5966073Z 
2025-08-19T14:27:06.5966224Z # alert\_bot
2025-08-19T14:27:06.5966403Z 
2025-08-19T14:27:06.5966567Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T14:27:06.5966860Z 
2025-08-19T14:27:06.5967002Z # alert\_bot.tests.test\_smoke
2025-08-19T14:27:06.5967258Z 
2025-08-19T14:27:06.5967392Z <a id="alert_bot.tests"></a>
2025-08-19T14:27:06.5967608Z 
2025-08-19T14:27:06.5967689Z # alert\_bot.tests
2025-08-19T14:27:06.5967802Z 
2025-08-19T14:27:06.5967885Z <a id="alert_bot.alert_bot"></a>
2025-08-19T14:27:06.5968039Z 
2025-08-19T14:27:06.5968114Z # alert\_bot.alert\_bot
2025-08-19T14:27:06.5968240Z 
2025-08-19T14:27:06.5968323Z <a id="alert_bot.rules"></a>
2025-08-19T14:27:06.5968473Z 
2025-08-19T14:27:06.5968546Z # alert\_bot.rules
2025-08-19T14:27:06.5968672Z 
2025-08-19T14:27:06.5968751Z <a id="common"></a>
2025-08-19T14:27:06.5968861Z 
2025-08-19T14:27:06.5968927Z # common
2025-08-19T14:27:06.5969021Z 
2025-08-19T14:27:06.5969103Z <a id="common.dsn"></a>
2025-08-19T14:27:06.5969440Z 
2025-08-19T14:27:06.5969513Z # common.dsn
2025-08-19T14:27:06.5969626Z 
2025-08-19T14:27:06.5969715Z <a id="common.dsn.build_dsn"></a>
2025-08-19T14:27:06.5969875Z 
2025-08-19T14:27:06.5969952Z #### build\_dsn
2025-08-19T14:27:06.5970058Z 
2025-08-19T14:27:06.5970127Z ```python
2025-08-19T14:27:06.5970319Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:27:06.5970552Z ```
2025-08-19T14:27:06.5970646Z 
2025-08-19T14:27:06.5970773Z Return a Postgres DSN, validating required variables.
2025-08-19T14:27:06.5970981Z 
2025-08-19T14:27:06.5971178Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T14:27:06.5971621Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T14:27:06.5972041Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T14:27:06.5972532Z missing.
2025-08-19T14:27:06.5972628Z 
2025-08-19T14:27:06.5972725Z <a id="common.models_vendor"></a>
2025-08-19T14:27:06.5972878Z 
2025-08-19T14:27:06.5972956Z # common.models\_vendor
2025-08-19T14:27:06.5973085Z 
2025-08-19T14:27:06.5973178Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T14:27:06.5973344Z 
2025-08-19T14:27:06.5973420Z ## Vendor Objects
2025-08-19T14:27:06.5973527Z 
2025-08-19T14:27:06.5973593Z ```python
2025-08-19T14:27:06.5973826Z class Vendor(Base)
2025-08-19T14:27:06.5973994Z ```
2025-08-19T14:27:06.5974085Z 
2025-08-19T14:27:06.5974167Z Vendor of inventory items.
2025-08-19T14:27:06.5974305Z 
2025-08-19T14:27:06.5974409Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T14:27:06.5974596Z 
2025-08-19T14:27:06.5974671Z ## VendorPrice Objects
2025-08-19T14:27:06.5974792Z 
2025-08-19T14:27:06.5974862Z ```python
2025-08-19T14:27:06.5975027Z class VendorPrice(Base)
2025-08-19T14:27:06.5975222Z ```
2025-08-19T14:27:06.5975316Z 
2025-08-19T14:27:06.5975421Z Association table linking vendors to pricing.
2025-08-19T14:27:06.5975612Z 
2025-08-19T14:27:06.5975691Z <a id="common.db_url"></a>
2025-08-19T14:27:06.5975820Z 
2025-08-19T14:27:06.5975889Z # common.db\_url
2025-08-19T14:27:06.5976007Z 
2025-08-19T14:27:06.5976096Z <a id="common.db_url.build_url"></a>
2025-08-19T14:27:06.5976265Z 
2025-08-19T14:27:06.5976339Z #### build\_url
2025-08-19T14:27:06.5976441Z 
2025-08-19T14:27:06.5976509Z ```python
2025-08-19T14:27:06.5976691Z def build_url(async_: bool = True) -> str
2025-08-19T14:27:06.5976918Z ```
2025-08-19T14:27:06.5977007Z 
2025-08-19T14:27:06.5977108Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:27:06.5977285Z 
2025-08-19T14:27:06.5977368Z <a id="common.keepa"></a>
2025-08-19T14:27:06.5977503Z 
2025-08-19T14:27:06.5977574Z # common.keepa
2025-08-19T14:27:06.5977679Z 
2025-08-19T14:27:06.5977760Z <a id="common.llm"></a>
2025-08-19T14:27:06.5977880Z 
2025-08-19T14:27:06.5978070Z # common.llm
2025-08-19T14:27:06.5978182Z 
2025-08-19T14:27:06.5978266Z <a id="common.settings"></a>
2025-08-19T14:27:06.5978404Z 
2025-08-19T14:27:06.5978476Z # common.settings
2025-08-19T14:27:06.5978592Z 
2025-08-19T14:27:06.5978667Z <a id="common.db"></a>
2025-08-19T14:27:06.5978789Z 
2025-08-19T14:27:06.5978862Z # common.db
2025-08-19T14:27:06.5978956Z 
2025-08-19T14:27:06.5979049Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T14:27:06.5979436Z 
2025-08-19T14:27:06.5979527Z #### build\_sqlalchemy\_url
2025-08-19T14:27:06.5979662Z 
2025-08-19T14:27:06.5979728Z ```python
2025-08-19T14:27:06.5979913Z def build_sqlalchemy_url() -> str
2025-08-19T14:27:06.5980124Z ```
2025-08-19T14:27:06.5980234Z 
2025-08-19T14:27:06.5980332Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:27:06.5980508Z 
2025-08-19T14:27:06.5980609Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T14:27:06.5980777Z 
2025-08-19T14:27:06.5980858Z #### build\_asyncpg\_dsn
2025-08-19T14:27:06.5980998Z 
2025-08-19T14:27:06.5981072Z ```python
2025-08-19T14:27:06.5981254Z def build_asyncpg_dsn() -> str
2025-08-19T14:27:06.5981468Z ```
2025-08-19T14:27:06.5981553Z 
2025-08-19T14:27:06.5981686Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:27:06.5981918Z 
2025-08-19T14:27:06.5982012Z <a id="common.db.refresh_mvs"></a>
2025-08-19T14:27:06.5982169Z 
2025-08-19T14:27:06.5982247Z #### refresh\_mvs
2025-08-19T14:27:06.5982355Z 
2025-08-19T14:27:06.5982422Z ```python
2025-08-19T14:27:06.5982629Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:27:06.5982885Z ```
2025-08-19T14:27:06.5982973Z 
2025-08-19T14:27:06.5983142Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:27:06.5983517Z 
2025-08-19T14:27:06.5983612Z <a id="common.config"></a>
2025-08-19T14:27:06.5983748Z 
2025-08-19T14:27:06.5983847Z # common.config
2025-08-19T14:27:06.5983969Z 
2025-08-19T14:27:06.5984057Z <a id="common.base"></a>
2025-08-19T14:27:06.5984184Z 
2025-08-19T14:27:06.5984257Z # common.base
2025-08-19T14:27:06.5984516Z 
2025-08-19T14:27:06.5984603Z <a id="common.base.Base"></a>
2025-08-19T14:27:06.5984753Z 
2025-08-19T14:27:06.5984827Z ## Base Objects
2025-08-19T14:27:06.5984938Z 
2025-08-19T14:27:06.5985006Z ```python
2025-08-19T14:27:06.5985196Z class Base(DeclarativeBase)
2025-08-19T14:27:06.5985396Z ```
2025-08-19T14:27:06.5985481Z 
2025-08-19T14:27:06.5985573Z Base class for SQLAlchemy models.
2025-08-19T14:27:06.5985725Z 
2025-08-19T14:27:06.5985802Z <a id="repricer"></a>
2025-08-19T14:27:06.5985926Z 
2025-08-19T14:27:06.5985992Z # repricer
2025-08-19T14:27:06.5986087Z 
2025-08-19T14:27:06.5986191Z <a id="repricer.app.schemas"></a>
2025-08-19T14:27:06.5986342Z 
2025-08-19T14:27:06.5986421Z # repricer.app.schemas
2025-08-19T14:27:06.5986541Z 
2025-08-19T14:27:06.5986640Z <a id="repricer.app.deps"></a>
2025-08-19T14:27:06.5986785Z 
2025-08-19T14:27:06.5986870Z # repricer.app.deps
2025-08-19T14:27:06.5986992Z 
2025-08-19T14:27:06.5987119Z Placeholder module for Keepa / SP-API clients.
2025-08-19T14:27:06.5987330Z 
2025-08-19T14:27:06.5987420Z <a id="repricer.app.logic"></a>
2025-08-19T14:27:06.5987568Z 
2025-08-19T14:27:06.5987653Z # repricer.app.logic
2025-08-19T14:27:06.5987772Z 
2025-08-19T14:27:06.5987874Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T14:27:06.5988060Z 
2025-08-19T14:27:06.5988129Z #### MIN\_MARGIN
2025-08-19T14:27:06.5988236Z 
2025-08-19T14:27:06.5988302Z 15 % ROI
2025-08-19T14:27:06.5988397Z 
2025-08-19T14:27:06.5988504Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T14:27:06.5988687Z 
2025-08-19T14:27:06.5988765Z #### compute\_price
2025-08-19T14:27:06.5988875Z 
2025-08-19T14:27:06.5988943Z ```python
2025-08-19T14:27:06.5989392Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T14:27:06.5989711Z ```
2025-08-19T14:27:06.5989804Z 
2025-08-19T14:27:06.5989915Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T14:27:06.5990198Z Replace with real competitive logic later.
2025-08-19T14:27:06.5990376Z 
2025-08-19T14:27:06.5990655Z <a id="repricer.app.main"></a>
2025-08-19T14:27:06.5990807Z 
2025-08-19T14:27:06.5990889Z # repricer.app.main
2025-08-19T14:27:06.5991001Z 
2025-08-19T14:27:06.5991082Z <a id="repricer.app"></a>
2025-08-19T14:27:06.5991212Z 
2025-08-19T14:27:06.5991289Z # repricer.app
2025-08-19T14:27:06.5991394Z 
2025-08-19T14:27:06.5991489Z <a id="repricer.tests.test_imports"></a>
2025-08-19T14:27:06.5991668Z 
2025-08-19T14:27:06.5991754Z # repricer.tests.test\_imports
2025-08-19T14:27:06.5991896Z 
2025-08-19T14:27:06.5991993Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T14:27:06.5992157Z 
2025-08-19T14:27:06.5992243Z # repricer.tests.test\_smoke
2025-08-19T14:27:06.5992383Z 
2025-08-19T14:27:06.5992474Z <a id="repricer.tests"></a>
2025-08-19T14:27:06.5992609Z 
2025-08-19T14:27:06.5992681Z # repricer.tests
2025-08-19T14:27:06.5992797Z 
2025-08-19T14:27:06.5992864Z <a id="db"></a>
2025-08-19T14:27:06.5992968Z 
2025-08-19T14:27:06.5993040Z # db
2025-08-19T14:27:06.5993128Z 
2025-08-19T14:27:06.5993214Z <a id="db.utils.views"></a>
2025-08-19T14:27:06.5993350Z 
2025-08-19T14:27:06.5993430Z # db.utils.views
2025-08-19T14:27:06.5993535Z 
2025-08-19T14:27:06.5993634Z <a id="db.utils.views.replace_view"></a>
2025-08-19T14:27:06.5993808Z 
2025-08-19T14:27:06.5993880Z #### replace\_view
2025-08-19T14:27:06.5993990Z 
2025-08-19T14:27:06.5994055Z ```python
2025-08-19T14:27:06.5994263Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T14:27:06.5994517Z ```
2025-08-19T14:27:06.5994603Z 
2025-08-19T14:27:06.5994695Z Drop and recreate a SQL view atomically.
2025-08-19T14:27:06.5994863Z 
2025-08-19T14:27:06.5994944Z <a id="db.utils"></a>
2025-08-19T14:27:06.5995063Z 
2025-08-19T14:27:06.5995128Z # db.utils
2025-08-19T14:27:06.5995228Z 
2025-08-19T14:27:06.5995306Z <a id="price_importer"></a>
2025-08-19T14:27:06.5995439Z 
2025-08-19T14:27:06.5995512Z # price\_importer
2025-08-19T14:27:06.5995627Z 
2025-08-19T14:27:06.5995733Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T14:27:06.5995919Z 
2025-08-19T14:27:06.5996028Z # price\_importer.services\_common.dsn
2025-08-19T14:27:06.5996324Z 
2025-08-19T14:27:06.5996450Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T14:27:06.5996666Z 
2025-08-19T14:27:06.5996733Z #### build\_dsn
2025-08-19T14:27:06.5996842Z 
2025-08-19T14:27:06.5996908Z ```python
2025-08-19T14:27:06.5997092Z def build_dsn(sync: bool = True) -> str
2025-08-19T14:27:06.5997320Z ```
2025-08-19T14:27:06.5997406Z 
2025-08-19T14:27:06.5997475Z Return safe DSN.
2025-08-19T14:27:06.5997583Z 
2025-08-19T14:27:06.5997946Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T14:27:06.5998164Z 
2025-08-19T14:27:06.5998293Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T14:27:06.5998509Z 
2025-08-19T14:27:06.5998625Z # price\_importer.services\_common.models\_vendor
2025-08-19T14:27:06.5998819Z 
2025-08-19T14:27:06.5998936Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T14:27:06.5999305Z 
2025-08-19T14:27:06.5999415Z # price\_importer.services\_common.db\_url
2025-08-19T14:27:06.5999613Z 
2025-08-19T14:27:06.5999753Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T14:27:06.5999971Z 
2025-08-19T14:27:06.6000042Z #### build\_url
2025-08-19T14:27:06.6000153Z 
2025-08-19T14:27:06.6000219Z ```python
2025-08-19T14:27:06.6000397Z def build_url(async_: bool = True) -> str
2025-08-19T14:27:06.6000632Z ```
2025-08-19T14:27:06.6000719Z 
2025-08-19T14:27:06.6000823Z Return Postgres DSN from env or PG_* parts.
2025-08-19T14:27:06.6001002Z 
2025-08-19T14:27:06.6001111Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T14:27:06.6001303Z 
2025-08-19T14:27:06.6001398Z # price\_importer.services\_common.keepa
2025-08-19T14:27:06.6001566Z 
2025-08-19T14:27:06.6001670Z <a id="price_importer.services_common.llm"></a>
2025-08-19T14:27:06.6001862Z 
2025-08-19T14:27:06.6001955Z # price\_importer.services\_common.llm
2025-08-19T14:27:06.6002122Z 
2025-08-19T14:27:06.6002247Z <a id="price_importer.services_common.settings"></a>
2025-08-19T14:27:06.6002579Z 
2025-08-19T14:27:06.6002684Z # price\_importer.services\_common.settings
2025-08-19T14:27:06.6002863Z 
2025-08-19T14:27:06.6002965Z <a id="price_importer.services_common.db"></a>
2025-08-19T14:27:06.6003145Z 
2025-08-19T14:27:06.6003237Z # price\_importer.services\_common.db
2025-08-19T14:27:06.6003406Z 
2025-08-19T14:27:06.6003564Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T14:27:06.6003807Z 
2025-08-19T14:27:06.6003892Z #### build\_sqlalchemy\_url
2025-08-19T14:27:06.6004028Z 
2025-08-19T14:27:06.6004095Z ```python
2025-08-19T14:27:06.6004277Z def build_sqlalchemy_url() -> str
2025-08-19T14:27:06.6004488Z ```
2025-08-19T14:27:06.6004586Z 
2025-08-19T14:27:06.6004683Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T14:27:06.6004857Z 
2025-08-19T14:27:06.6005009Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T14:27:06.6005238Z 
2025-08-19T14:27:06.6005314Z #### build\_asyncpg\_dsn
2025-08-19T14:27:06.6005449Z 
2025-08-19T14:27:06.6005527Z ```python
2025-08-19T14:27:06.6005703Z def build_asyncpg_dsn() -> str
2025-08-19T14:27:06.6005913Z ```
2025-08-19T14:27:06.6005998Z 
2025-08-19T14:27:06.6006130Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T14:27:06.6006355Z 
2025-08-19T14:27:06.6006483Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T14:27:06.6006694Z 
2025-08-19T14:27:06.6006771Z #### refresh\_mvs
2025-08-19T14:27:06.6006881Z 
2025-08-19T14:27:06.6006946Z ```python
2025-08-19T14:27:06.6007149Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T14:27:06.6007398Z ```
2025-08-19T14:27:06.6007488Z 
2025-08-19T14:27:06.6007626Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T14:27:06.6007844Z 
2025-08-19T14:27:06.6007947Z <a id="price_importer.services_common"></a>
2025-08-19T14:27:06.6008120Z 
2025-08-19T14:27:06.6008209Z # price\_importer.services\_common
2025-08-19T14:27:06.6008362Z 
2025-08-19T14:27:06.6008490Z <a id="price_importer.services_common.base"></a>
2025-08-19T14:27:06.6008805Z 
2025-08-19T14:27:06.6008898Z # price\_importer.services\_common.base
2025-08-19T14:27:06.6009071Z 
2025-08-19T14:27:06.6009356Z <a id="price_importer.normaliser"></a>
2025-08-19T14:27:06.6009548Z 
2025-08-19T14:27:06.6009642Z # price\_importer.normaliser
2025-08-19T14:27:06.6009786Z 
2025-08-19T14:27:06.6009892Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T14:27:06.6010076Z 
2025-08-19T14:27:06.6010176Z # price\_importer.common.models\_vendor
2025-08-19T14:27:06.6010343Z 
2025-08-19T14:27:06.6010438Z <a id="price_importer.common.db_url"></a>
2025-08-19T14:27:06.6010615Z 
2025-08-19T14:27:06.6010703Z # price\_importer.common.db\_url
2025-08-19T14:27:06.6010850Z 
2025-08-19T14:27:06.6010967Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T14:27:06.6011152Z 
2025-08-19T14:27:06.6011220Z #### make\_dsn
2025-08-19T14:27:06.6011323Z 
2025-08-19T14:27:06.6011395Z ```python
2025-08-19T14:27:06.6011573Z def make_dsn(async_: bool = False) -> str
2025-08-19T14:27:06.6011821Z ```
2025-08-19T14:27:06.6011910Z 
2025-08-19T14:27:06.6012032Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T14:27:06.6012241Z 
2025-08-19T14:27:06.6012354Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T14:27:06.6012547Z 
2025-08-19T14:27:06.6012620Z #### build\_url
2025-08-19T14:27:06.6012724Z 
2025-08-19T14:27:06.6012790Z ```python
2025-08-19T14:27:06.6012975Z def build_url(async_: bool = False) -> str
2025-08-19T14:27:06.6013203Z ```
2025-08-19T14:27:06.6013296Z 
2025-08-19T14:27:06.6013422Z Return Postgres DSN built from environment variables.
2025-08-19T14:27:06.6013625Z 
2025-08-19T14:27:06.6013716Z <a id="price_importer.common"></a>
2025-08-19T14:27:06.6013877Z 
2025-08-19T14:27:06.6013958Z # price\_importer.common
2025-08-19T14:27:06.6014088Z 
2025-08-19T14:27:06.6014192Z <a id="price_importer.common.base"></a>
2025-08-19T14:27:06.6014359Z 
2025-08-19T14:27:06.6014446Z # price\_importer.common.base
2025-08-19T14:27:06.6014731Z 
2025-08-19T14:27:06.6014838Z <a id="price_importer.tests.conftest"></a>
2025-08-19T14:27:06.6015012Z 
2025-08-19T14:27:06.6015102Z # price\_importer.tests.conftest
2025-08-19T14:27:06.6015258Z 
2025-08-19T14:27:06.6015361Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T14:27:06.6015539Z 
2025-08-19T14:27:06.6015638Z # price\_importer.tests.test\_reader
2025-08-19T14:27:06.6015803Z 
2025-08-19T14:27:06.6015908Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T14:27:06.6016093Z 
2025-08-19T14:27:06.6016191Z # price\_importer.tests.test\_imports
2025-08-19T14:27:06.6016357Z 
2025-08-19T14:27:06.6016458Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T14:27:06.6016639Z 
2025-08-19T14:27:06.6016729Z # price\_importer.tests.test\_smoke
2025-08-19T14:27:06.6016888Z 
2025-08-19T14:27:06.6017003Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T14:27:06.6017231Z 
2025-08-19T14:27:06.6017328Z # price\_importer.tests.test\_normaliser
2025-08-19T14:27:06.6017503Z 
2025-08-19T14:27:06.6017596Z <a id="price_importer.tests"></a>
2025-08-19T14:27:06.6017753Z 
2025-08-19T14:27:06.6017833Z # price\_importer.tests
2025-08-19T14:27:06.6017968Z 
2025-08-19T14:27:06.6018061Z <a id="price_importer.reader"></a>
2025-08-19T14:27:06.6018213Z 
2025-08-19T14:27:06.6018301Z # price\_importer.reader
2025-08-19T14:27:06.6018428Z 
2025-08-19T14:27:06.6018520Z <a id="price_importer.repository"></a>
2025-08-19T14:27:06.6018692Z 
2025-08-19T14:27:06.6018781Z # price\_importer.repository
2025-08-19T14:27:06.6018925Z 
2025-08-19T14:27:06.6019013Z <a id="price_importer.import"></a>
2025-08-19T14:27:06.6019329Z 
2025-08-19T14:27:06.6019415Z # price\_importer.import
2025-08-19T14:27:06.6019542Z 
2025-08-19T14:27:06.6019622Z <a id="fees_h10"></a>
2025-08-19T14:27:06.6019739Z 
2025-08-19T14:27:06.6019807Z # fees\_h10
2025-08-19T14:27:06.6019911Z 
2025-08-19T14:27:06.6019990Z <a id="fees_h10.worker"></a>
2025-08-19T14:27:06.6020126Z 
2025-08-19T14:27:06.6020196Z # fees\_h10.worker
2025-08-19T14:27:06.6020313Z 
2025-08-19T14:27:06.6020542Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T14:27:06.6020720Z 
2025-08-19T14:27:06.6020803Z #### list\_active\_asins
2025-08-19T14:27:06.6020924Z 
2025-08-19T14:27:06.6020989Z ```python
2025-08-19T14:27:06.6021170Z def list_active_asins() -> list[str]
2025-08-19T14:27:06.6021384Z ```
2025-08-19T14:27:06.6021475Z 
2025-08-19T14:27:06.6021595Z Return known ASINs or an empty list if unavailable.
2025-08-19T14:27:06.6021789Z 
2025-08-19T14:27:06.6021877Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T14:27:06.6022041Z 
2025-08-19T14:27:06.6022123Z # fees\_h10.tests.test\_smoke
2025-08-19T14:27:06.6022261Z 
2025-08-19T14:27:06.6022344Z <a id="fees_h10.tests"></a>
2025-08-19T14:27:06.6022476Z 
2025-08-19T14:27:06.6022547Z # fees\_h10.tests
2025-08-19T14:27:06.6022658Z 
2025-08-19T14:27:06.6022735Z <a id="fees_h10.client"></a>
2025-08-19T14:27:06.6022869Z 
2025-08-19T14:27:06.6022940Z # fees\_h10.client
2025-08-19T14:27:06.6023069Z 
2025-08-19T14:27:06.6023156Z <a id="fees_h10.repository"></a>
2025-08-19T14:27:06.6023310Z 
2025-08-19T14:27:06.6023391Z # fees\_h10.repository
2025-08-19T14:27:06.6023509Z 
2025-08-19T14:27:06.6023581Z <a id="emailer"></a>
2025-08-19T14:27:06.6023699Z 
2025-08-19T14:27:06.6023765Z # emailer
2025-08-19T14:27:06.6023859Z 
2025-08-19T14:27:06.6023963Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T14:27:06.6024146Z 
2025-08-19T14:27:06.6024238Z # emailer.tests.test\_import\_emailer
2025-08-19T14:27:06.6024399Z 
2025-08-19T14:27:06.6024491Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T14:27:06.6024650Z 
2025-08-19T14:27:06.6024733Z # emailer.tests.test\_smoke
2025-08-19T14:27:06.6024872Z 
2025-08-19T14:27:06.6024957Z <a id="emailer.tests"></a>
2025-08-19T14:27:06.6025091Z 
2025-08-19T14:27:06.6025161Z # emailer.tests
2025-08-19T14:27:06.6025277Z 
2025-08-19T14:27:06.6025365Z <a id="emailer.generate_body"></a>
2025-08-19T14:27:06.6025522Z 
2025-08-19T14:27:06.6025605Z # emailer.generate\_body
2025-08-19T14:27:06.6025734Z 
2025-08-19T14:27:06.6025943Z <a id="llm_server"></a>
2025-08-19T14:27:06.6026071Z 
2025-08-19T14:27:06.6026144Z # llm\_server
2025-08-19T14:27:06.6026245Z 
2025-08-19T14:27:06.6026325Z <a id="llm_server.app"></a>
2025-08-19T14:27:06.6026463Z 
2025-08-19T14:27:06.6026533Z # llm\_server.app
2025-08-19T14:27:06.6026642Z 
