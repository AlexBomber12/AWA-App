2025-08-17T00:21:31.8612669Z ##[group]Run pydoc-markdown
2025-08-17T00:21:31.8613047Z [36;1mpydoc-markdown[0m
2025-08-17T00:21:31.8653221Z shell: /usr/bin/bash -e {0}
2025-08-17T00:21:31.8653457Z env:
2025-08-17T00:21:31.8653687Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:21:31.8654093Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T00:21:31.8654487Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:21:31.8654823Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:21:31.8655167Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T00:21:31.8655504Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T00:21:31.8655797Z ##[endgroup]
2025-08-17T00:21:32.2241256Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T00:21:32.2242205Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T00:21:32.2245478Z In "pydoc-markdown.yml"
2025-08-17T00:21:32.2245849Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T00:21:32.2246722Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T00:21:32.2247577Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T00:21:32.2248195Z 
2025-08-17T00:21:32.4312978Z <a id="__init__"></a>
2025-08-17T00:21:32.4313302Z 
2025-08-17T00:21:32.4313448Z # \_\_init\_\_
2025-08-17T00:21:32.4313799Z 
2025-08-17T00:21:32.4313941Z <a id="api"></a>
2025-08-17T00:21:32.4314156Z 
2025-08-17T00:21:32.4314289Z # api
2025-08-17T00:21:32.4314465Z 
2025-08-17T00:21:32.4314637Z <a id="api.tests.test_llm"></a>
2025-08-17T00:21:32.4314939Z 
2025-08-17T00:21:32.4315041Z # api.tests.test\_llm
2025-08-17T00:21:32.4315207Z 
2025-08-17T00:21:32.4315320Z <a id="api.tests.test_imports"></a>
2025-08-17T00:21:32.4315530Z 
2025-08-17T00:21:32.4315629Z # api.tests.test\_imports
2025-08-17T00:21:32.4315793Z 
2025-08-17T00:21:32.4315922Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T00:21:32.4316135Z 
2025-08-17T00:21:32.4316238Z # api.tests.test\_entrypoint
2025-08-17T00:21:32.4316421Z 
2025-08-17T00:21:32.4316511Z <a id="api.tests.test_health"></a>
2025-08-17T00:21:32.4316665Z 
2025-08-17T00:21:32.4316742Z # api.tests.test\_health
2025-08-17T00:21:32.4316875Z 
2025-08-17T00:21:32.4316958Z <a id="api.migrations.env"></a>
2025-08-17T00:21:32.4317101Z 
2025-08-17T00:21:32.4317181Z # api.migrations.env
2025-08-17T00:21:32.4317301Z 
2025-08-17T00:21:32.4317419Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T00:21:32.4317633Z 
2025-08-17T00:21:32.4317745Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T00:21:32.4317937Z 
2025-08-17T00:21:32.4318049Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T00:21:32.4318254Z 
2025-08-17T00:21:32.4318349Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T00:21:32.4318524Z 
2025-08-17T00:21:32.4318691Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T00:21:32.4318946Z 
2025-08-17T00:21:32.4319088Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T00:21:32.4319612Z 
2025-08-17T00:21:32.4319741Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T00:21:32.4319952Z 
2025-08-17T00:21:32.4320067Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T00:21:32.4320254Z 
2025-08-17T00:21:32.4320374Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T00:21:32.4320573Z 
2025-08-17T00:21:32.4320686Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T00:21:32.4320877Z 
2025-08-17T00:21:32.4321006Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T00:21:32.4321225Z 
2025-08-17T00:21:32.4321337Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T00:21:32.4321530Z 
2025-08-17T00:21:32.4321658Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T00:21:32.4322103Z 
2025-08-17T00:21:32.4322216Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T00:21:32.4322413Z 
2025-08-17T00:21:32.4322539Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T00:21:32.4322970Z 
2025-08-17T00:21:32.4323078Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T00:21:32.4323273Z 
2025-08-17T00:21:32.4323396Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T00:21:32.4323604Z 
2025-08-17T00:21:32.4323718Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T00:21:32.4323910Z 
2025-08-17T00:21:32.4324020Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T00:21:32.4324220Z 
2025-08-17T00:21:32.4324314Z # api.migrations.versions.0001\_baseline
2025-08-17T00:21:32.4324488Z 
2025-08-17T00:21:32.4324584Z <a id="api.migrations.versions"></a>
2025-08-17T00:21:32.4324754Z 
2025-08-17T00:21:32.4324838Z # api.migrations.versions
2025-08-17T00:21:32.4324975Z 
2025-08-17T00:21:32.4325067Z <a id="api.migrations"></a>
2025-08-17T00:21:32.4325207Z 
2025-08-17T00:21:32.4325278Z # api.migrations
2025-08-17T00:21:32.4325391Z 
2025-08-17T00:21:32.4325462Z <a id="api.db"></a>
2025-08-17T00:21:32.4325573Z 
2025-08-17T00:21:32.4325650Z # api.db
2025-08-17T00:21:32.4325749Z 
2025-08-17T00:21:32.4325833Z <a id="api.routes.stats"></a>
2025-08-17T00:21:32.4325976Z 
2025-08-17T00:21:32.4326055Z # api.routes.stats
2025-08-17T00:21:32.4326166Z 
2025-08-17T00:21:32.4326254Z <a id="api.routes.stats.kpi"></a>
2025-08-17T00:21:32.4326408Z 
2025-08-17T00:21:32.4326482Z #### kpi
2025-08-17T00:21:32.4326573Z 
2025-08-17T00:21:32.4326646Z ```python
2025-08-17T00:21:32.4326826Z @router.get("/stats/kpi")
2025-08-17T00:21:32.4327073Z def kpi() -> List[Dict[str, int]]
2025-08-17T00:21:32.4327289Z ```
2025-08-17T00:21:32.4327376Z 
2025-08-17T00:21:32.4327461Z Return KPI metrics (mock).
2025-08-17T00:21:32.4327591Z 
2025-08-17T00:21:32.4327693Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T00:21:32.4327869Z 
2025-08-17T00:21:32.4327944Z #### roi\_by\_vendor
2025-08-17T00:21:32.4328054Z 
2025-08-17T00:21:32.4328118Z ```python
2025-08-17T00:21:32.4328291Z @router.get("/stats/roi_by_vendor")
2025-08-17T00:21:32.4328532Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T00:21:32.4328773Z ```
2025-08-17T00:21:32.4328854Z 
2025-08-17T00:21:32.4328941Z Return ROI percent by vendor.
2025-08-17T00:21:32.4329080Z 
2025-08-17T00:21:32.4329167Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T00:21:32.4329332Z 
2025-08-17T00:21:32.4329408Z #### roi\_trend
2025-08-17T00:21:32.4329508Z 
2025-08-17T00:21:32.4329570Z ```python
2025-08-17T00:21:32.4329741Z @router.get("/stats/roi_trend")
2025-08-17T00:21:32.4329972Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T00:21:32.4330208Z ```
2025-08-17T00:21:32.4330290Z 
2025-08-17T00:21:32.4330370Z Return 30-day ROI trend.
2025-08-17T00:21:32.4330494Z 
2025-08-17T00:21:32.4330572Z <a id="api.routes.roi"></a>
2025-08-17T00:21:32.4330719Z 
2025-08-17T00:21:32.4330810Z # api.routes.roi
2025-08-17T00:21:32.4330931Z 
2025-08-17T00:21:32.4331019Z <a id="api.routes.health"></a>
2025-08-17T00:21:32.4331248Z 
2025-08-17T00:21:32.4331319Z # api.routes.health
2025-08-17T00:21:32.4331428Z 
2025-08-17T00:21:32.4331528Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T00:21:32.4331997Z 
2025-08-17T00:21:32.4332103Z #### MAX\_SKEW
2025-08-17T00:21:32.4332216Z 
2025-08-17T00:21:32.4332280Z seconds
2025-08-17T00:21:32.4332366Z 
2025-08-17T00:21:32.4332463Z <a id="api.routes.health.health"></a>
2025-08-17T00:21:32.4332628Z 
2025-08-17T00:21:32.4332692Z #### health
2025-08-17T00:21:32.4332781Z 
2025-08-17T00:21:32.4332854Z ```python
2025-08-17T00:21:32.4333041Z @router.get("/health", include_in_schema=False)
2025-08-17T00:21:32.4333415Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T00:21:32.4333755Z ```
2025-08-17T00:21:32.4333844Z 
2025-08-17T00:21:32.4333957Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T00:21:32.4334157Z 
2025-08-17T00:21:32.4334251Z <a id="api.routes.repository"></a>
2025-08-17T00:21:32.4334407Z 
2025-08-17T00:21:32.4334484Z # api.routes.repository
2025-08-17T00:21:32.4334607Z 
2025-08-17T00:21:32.4334685Z <a id="api.routes"></a>
2025-08-17T00:21:32.4334963Z 
2025-08-17T00:21:32.4335028Z # api.routes
2025-08-17T00:21:32.4335130Z 
2025-08-17T00:21:32.4335206Z <a id="api.models.fee"></a>
2025-08-17T00:21:32.4335338Z 
2025-08-17T00:21:32.4335403Z # api.models.fee
2025-08-17T00:21:32.4335512Z 
2025-08-17T00:21:32.4335584Z <a id="api.models"></a>
2025-08-17T00:21:32.4335698Z 
2025-08-17T00:21:32.4335770Z # api.models
2025-08-17T00:21:32.4335864Z 
2025-08-17T00:21:32.4335943Z <a id="api.roi_repository"></a>
2025-08-17T00:21:32.4336087Z 
2025-08-17T00:21:32.4336161Z # api.roi\_repository
2025-08-17T00:21:32.4336273Z 
2025-08-17T00:21:32.4336349Z <a id="api.main"></a>
2025-08-17T00:21:32.4336467Z 
2025-08-17T00:21:32.4336530Z # api.main
2025-08-17T00:21:32.4336620Z 
2025-08-17T00:21:32.4336702Z <a id="api.main.ready"></a>
2025-08-17T00:21:32.4336832Z 
2025-08-17T00:21:32.4336894Z #### ready
2025-08-17T00:21:32.4336987Z 
2025-08-17T00:21:32.4337049Z ```python
2025-08-17T00:21:32.4337297Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T00:21:32.4337730Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T00:21:32.4338076Z                                                                       str]
2025-08-17T00:21:32.4338306Z ```
2025-08-17T00:21:32.4338389Z 
2025-08-17T00:21:32.4338491Z Return 200 only when migrations are at head.
2025-08-17T00:21:32.4338662Z 
2025-08-17T00:21:32.4338733Z <a id="api.config"></a>
2025-08-17T00:21:32.4338856Z 
2025-08-17T00:21:32.4338920Z # api.config
2025-08-17T00:21:32.4339013Z 
2025-08-17T00:21:32.4339077Z <a id="etl"></a>
2025-08-17T00:21:32.4339183Z 
2025-08-17T00:21:32.4339243Z # etl
2025-08-17T00:21:32.4339328Z 
2025-08-17T00:21:32.4339413Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T00:21:32.4339558Z 
2025-08-17T00:21:32.4339631Z # etl.fba\_fee\_ingestor
2025-08-17T00:21:32.4339751Z 
2025-08-17T00:21:32.4339838Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T00:21:32.4339980Z 
2025-08-17T00:21:32.4340052Z # etl.sp\_fees\_ingestor
2025-08-17T00:21:32.4340180Z 
2025-08-17T00:21:32.4340266Z <a id="etl.keepa_ingestor"></a>
2025-08-17T00:21:32.4340403Z 
2025-08-17T00:21:32.4340479Z # etl.keepa\_ingestor
2025-08-17T00:21:32.4340589Z 
2025-08-17T00:21:32.4340656Z <a id="etl.db"></a>
2025-08-17T00:21:32.4340764Z 
2025-08-17T00:21:32.4340832Z # etl.db
2025-08-17T00:21:32.4340919Z 
2025-08-17T00:21:32.4341026Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T00:21:32.4341215Z 
2025-08-17T00:21:32.4341302Z # etl.dialects.amazon\_reimbursements
2025-08-17T00:21:32.4341464Z 
2025-08-17T00:21:32.4341550Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T00:21:32.4341719Z 
2025-08-17T00:21:32.4341915Z # etl.dialects.amazon\_returns
2025-08-17T00:21:32.4342057Z 
2025-08-17T00:21:32.4342138Z <a id="etl.dialects"></a>
2025-08-17T00:21:32.4342267Z 
2025-08-17T00:21:32.4342331Z # etl.dialects
2025-08-17T00:21:32.4342437Z 
2025-08-17T00:21:32.4342504Z <a id="ingest"></a>
2025-08-17T00:21:32.4342608Z 
2025-08-17T00:21:32.4342670Z # ingest
2025-08-17T00:21:32.4342766Z 
2025-08-17T00:21:32.4342978Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T00:21:32.4343133Z 
2025-08-17T00:21:32.4343216Z # ingest.tests.test\_smoke
2025-08-17T00:21:32.4343345Z 
2025-08-17T00:21:32.4343419Z <a id="ingest.tests"></a>
2025-08-17T00:21:32.4343546Z 
2025-08-17T00:21:32.4343612Z # ingest.tests
2025-08-17T00:21:32.4343709Z 
2025-08-17T00:21:32.4343790Z <a id="ingest.upload_router"></a>
2025-08-17T00:21:32.4343944Z 
2025-08-17T00:21:32.4344018Z # ingest.upload\_router
2025-08-17T00:21:32.4344134Z 
2025-08-17T00:21:32.4344221Z <a id="ingest.email_watcher"></a>
2025-08-17T00:21:32.4344362Z 
2025-08-17T00:21:32.4344432Z # ingest.email\_watcher
2025-08-17T00:21:32.4344553Z 
2025-08-17T00:21:32.4344640Z <a id="ingest.email_watcher.main"></a>
2025-08-17T00:21:32.4344797Z 
2025-08-17T00:21:32.4344859Z #### main
2025-08-17T00:21:32.4344954Z 
2025-08-17T00:21:32.4345017Z ```python
2025-08-17T00:21:32.4345190Z def main() -> dict[str, str]
2025-08-17T00:21:32.4345379Z ```
2025-08-17T00:21:32.4345465Z 
2025-08-17T00:21:32.4345729Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T00:21:32.4345948Z 
2025-08-17T00:21:32.4346073Z Returns {"status": "success"} when processing completes.
2025-08-17T00:21:32.4346287Z 
2025-08-17T00:21:32.4346370Z <a id="ingest.ingest_router"></a>
2025-08-17T00:21:32.4346515Z 
2025-08-17T00:21:32.4346588Z # ingest.ingest\_router
2025-08-17T00:21:32.4346712Z 
2025-08-17T00:21:32.4346787Z <a id="logistics_etl"></a>
2025-08-17T00:21:32.4346914Z 
2025-08-17T00:21:32.4346987Z # logistics\_etl
2025-08-17T00:21:32.4347091Z 
2025-08-17T00:21:32.4347165Z Daily logistics ETL job.
2025-08-17T00:21:32.4347290Z 
2025-08-17T00:21:32.4347370Z <a id="logistics_etl.__main__"></a>
2025-08-17T00:21:32.4347520Z 
2025-08-17T00:21:32.4347595Z # logistics\_etl.\_\_main\_\_
2025-08-17T00:21:32.4347735Z 
2025-08-17T00:21:32.4347826Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T00:21:32.4347994Z 
2025-08-17T00:21:32.4348081Z # logistics\_etl.tests.conftest
2025-08-17T00:21:32.4348226Z 
2025-08-17T00:21:32.4348330Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T00:21:32.4348514Z 
2025-08-17T00:21:32.4348600Z # logistics\_etl.tests.test\_repository
2025-08-17T00:21:32.4348762Z 
2025-08-17T00:21:32.4348850Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T00:21:32.4349021Z 
2025-08-17T00:21:32.4349101Z # logistics\_etl.tests.test\_cron
2025-08-17T00:21:32.4349243Z 
2025-08-17T00:21:32.4349343Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T00:21:32.4349514Z 
2025-08-17T00:21:32.4349595Z # logistics\_etl.tests.test\_imports
2025-08-17T00:21:32.4349751Z 
2025-08-17T00:21:32.4349840Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T00:21:32.4350005Z 
2025-08-17T00:21:32.4350089Z # logistics\_etl.tests.test\_smoke
2025-08-17T00:21:32.4350242Z 
2025-08-17T00:21:32.4350333Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T00:21:32.4350498Z 
2025-08-17T00:21:32.4350581Z # logistics\_etl.tests.test\_client
2025-08-17T00:21:32.4350730Z 
2025-08-17T00:21:32.4350822Z <a id="logistics_etl.tests"></a>
2025-08-17T00:21:32.4350969Z 
2025-08-17T00:21:32.4351041Z # logistics\_etl.tests
2025-08-17T00:21:32.4351157Z 
2025-08-17T00:21:32.4351234Z <a id="logistics_etl.flow"></a>
2025-08-17T00:21:32.4351377Z 
2025-08-17T00:21:32.4351446Z # logistics\_etl.flow
2025-08-17T00:21:32.4351558Z 
2025-08-17T00:21:32.4351642Z <a id="logistics_etl.client"></a>
2025-08-17T00:21:32.4351785Z 
2025-08-17T00:21:32.4352085Z # logistics\_etl.client
2025-08-17T00:21:32.4352209Z 
2025-08-17T00:21:32.4352294Z <a id="logistics_etl.cron"></a>
2025-08-17T00:21:32.4352428Z 
2025-08-17T00:21:32.4352498Z # logistics\_etl.cron
2025-08-17T00:21:32.4352615Z 
2025-08-17T00:21:32.4352691Z <a id="logistics_etl.db"></a>
2025-08-17T00:21:32.4352826Z 
2025-08-17T00:21:32.4352899Z # logistics\_etl.db
2025-08-17T00:21:32.4353005Z 
2025-08-17T00:21:32.4353090Z <a id="logistics_etl.repository"></a>
2025-08-17T00:21:32.4353246Z 
2025-08-17T00:21:32.4353331Z # logistics\_etl.repository
2025-08-17T00:21:32.4353465Z 
2025-08-17T00:21:32.4353671Z <a id="alert_bot"></a>
2025-08-17T00:21:32.4353792Z 
2025-08-17T00:21:32.4354019Z # alert\_bot
2025-08-17T00:21:32.4354188Z 
2025-08-17T00:21:32.4354387Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T00:21:32.4354547Z 
2025-08-17T00:21:32.4354627Z # alert\_bot.tests.test\_smoke
2025-08-17T00:21:32.4354764Z 
2025-08-17T00:21:32.4354845Z <a id="alert_bot.tests"></a>
2025-08-17T00:21:32.4354975Z 
2025-08-17T00:21:32.4355042Z # alert\_bot.tests
2025-08-17T00:21:32.4355151Z 
2025-08-17T00:21:32.4355231Z <a id="alert_bot.alert_bot"></a>
2025-08-17T00:21:32.4355369Z 
2025-08-17T00:21:32.4355444Z # alert\_bot.alert\_bot
2025-08-17T00:21:32.4355566Z 
2025-08-17T00:21:32.4355639Z <a id="alert_bot.rules"></a>
2025-08-17T00:21:32.4355765Z 
2025-08-17T00:21:32.4355837Z # alert\_bot.rules
2025-08-17T00:21:32.4355946Z 
2025-08-17T00:21:32.4356012Z <a id="common"></a>
2025-08-17T00:21:32.4356122Z 
2025-08-17T00:21:32.4356184Z # common
2025-08-17T00:21:32.4356273Z 
2025-08-17T00:21:32.4356465Z <a id="common.dsn"></a>
2025-08-17T00:21:32.4356596Z 
2025-08-17T00:21:32.4356659Z # common.dsn
2025-08-17T00:21:32.4356753Z 
2025-08-17T00:21:32.4356840Z <a id="common.dsn.build_dsn"></a>
2025-08-17T00:21:32.4356985Z 
2025-08-17T00:21:32.4357048Z #### build\_dsn
2025-08-17T00:21:32.4357148Z 
2025-08-17T00:21:32.4357218Z ```python
2025-08-17T00:21:32.4357387Z def build_dsn(sync: bool = True) -> str
2025-08-17T00:21:32.4357610Z ```
2025-08-17T00:21:32.4357692Z 
2025-08-17T00:21:32.4357810Z Return a Postgres DSN, validating required variables.
2025-08-17T00:21:32.4358017Z 
2025-08-17T00:21:32.4358206Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T00:21:32.4358652Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T00:21:32.4359060Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T00:21:32.4359369Z missing.
2025-08-17T00:21:32.4359455Z 
2025-08-17T00:21:32.4359536Z <a id="common.models_vendor"></a>
2025-08-17T00:21:32.4359698Z 
2025-08-17T00:21:32.4359770Z # common.models\_vendor
2025-08-17T00:21:32.4359891Z 
2025-08-17T00:21:32.4359987Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T00:21:32.4360151Z 
2025-08-17T00:21:32.4360215Z ## Vendor Objects
2025-08-17T00:21:32.4360318Z 
2025-08-17T00:21:32.4360385Z ```python
2025-08-17T00:21:32.4360533Z class Vendor(Base)
2025-08-17T00:21:32.4360710Z ```
2025-08-17T00:21:32.4360799Z 
2025-08-17T00:21:32.4360876Z Vendor of inventory items.
2025-08-17T00:21:32.4361003Z 
2025-08-17T00:21:32.4361102Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T00:21:32.4361286Z 
2025-08-17T00:21:32.4361358Z ## VendorPrice Objects
2025-08-17T00:21:32.4361473Z 
2025-08-17T00:21:32.4361541Z ```python
2025-08-17T00:21:32.4361696Z class VendorPrice(Base)
2025-08-17T00:21:32.4362025Z ```
2025-08-17T00:21:32.4362164Z 
2025-08-17T00:21:32.4362329Z Association table linking vendors to pricing.
2025-08-17T00:21:32.4362560Z 
2025-08-17T00:21:32.4362636Z <a id="common.db_url"></a>
2025-08-17T00:21:32.4362772Z 
2025-08-17T00:21:32.4362843Z # common.db\_url
2025-08-17T00:21:32.4362946Z 
2025-08-17T00:21:32.4363029Z <a id="common.db_url.build_url"></a>
2025-08-17T00:21:32.4363180Z 
2025-08-17T00:21:32.4363249Z #### build\_url
2025-08-17T00:21:32.4363349Z 
2025-08-17T00:21:32.4363410Z ```python
2025-08-17T00:21:32.4363585Z def build_url(async_: bool = True) -> str
2025-08-17T00:21:32.4363804Z ```
2025-08-17T00:21:32.4363893Z 
2025-08-17T00:21:32.4363987Z Return Postgres DSN from env or PG_* parts.
2025-08-17T00:21:32.4364160Z 
2025-08-17T00:21:32.4364245Z <a id="common.keepa"></a>
2025-08-17T00:21:32.4364374Z 
2025-08-17T00:21:32.4364442Z # common.keepa
2025-08-17T00:21:32.4364540Z 
2025-08-17T00:21:32.4364620Z <a id="common.llm"></a>
2025-08-17T00:21:32.4364734Z 
2025-08-17T00:21:32.4364799Z # common.llm
2025-08-17T00:21:32.4364900Z 
2025-08-17T00:21:32.4364978Z <a id="common.settings"></a>
2025-08-17T00:21:32.4365111Z 
2025-08-17T00:21:32.4365185Z # common.settings
2025-08-17T00:21:32.4365426Z 
2025-08-17T00:21:32.4365496Z <a id="common.db"></a>
2025-08-17T00:21:32.4365610Z 
2025-08-17T00:21:32.4365679Z # common.db
2025-08-17T00:21:32.4365768Z 
2025-08-17T00:21:32.4365859Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T00:21:32.4366032Z 
2025-08-17T00:21:32.4366107Z #### build\_sqlalchemy\_url
2025-08-17T00:21:32.4366236Z 
2025-08-17T00:21:32.4366304Z ```python
2025-08-17T00:21:32.4366476Z def build_sqlalchemy_url() -> str
2025-08-17T00:21:32.4366682Z ```
2025-08-17T00:21:32.4366762Z 
2025-08-17T00:21:32.4366854Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T00:21:32.4367020Z 
2025-08-17T00:21:32.4367114Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T00:21:32.4367276Z 
2025-08-17T00:21:32.4367349Z #### build\_asyncpg\_dsn
2025-08-17T00:21:32.4367480Z 
2025-08-17T00:21:32.4367541Z ```python
2025-08-17T00:21:32.4367706Z def build_asyncpg_dsn() -> str
2025-08-17T00:21:32.4367910Z ```
2025-08-17T00:21:32.4367990Z 
2025-08-17T00:21:32.4368124Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T00:21:32.4368449Z 
2025-08-17T00:21:32.4368534Z <a id="common.db.refresh_mvs"></a>
2025-08-17T00:21:32.4368695Z 
2025-08-17T00:21:32.4368759Z #### refresh\_mvs
2025-08-17T00:21:32.4368862Z 
2025-08-17T00:21:32.4368924Z ```python
2025-08-17T00:21:32.4369119Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T00:21:32.4369371Z ```
2025-08-17T00:21:32.4369457Z 
2025-08-17T00:21:32.4369593Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T00:21:32.4369809Z 
2025-08-17T00:21:32.4369894Z <a id="common.config"></a>
2025-08-17T00:21:32.4370020Z 
2025-08-17T00:21:32.4370085Z # common.config
2025-08-17T00:21:32.4370191Z 
2025-08-17T00:21:32.4370267Z <a id="common.base"></a>
2025-08-17T00:21:32.4370386Z 
2025-08-17T00:21:32.4370450Z # common.base
2025-08-17T00:21:32.4370553Z 
2025-08-17T00:21:32.4370632Z <a id="common.base.Base"></a>
2025-08-17T00:21:32.4370767Z 
2025-08-17T00:21:32.4370838Z ## Base Objects
2025-08-17T00:21:32.4370936Z 
2025-08-17T00:21:32.4371007Z ```python
2025-08-17T00:21:32.4371171Z class Base(DeclarativeBase)
2025-08-17T00:21:32.4371356Z ```
2025-08-17T00:21:32.4371439Z 
2025-08-17T00:21:32.4371521Z Base class for SQLAlchemy models.
2025-08-17T00:21:32.4371665Z 
2025-08-17T00:21:32.4371735Z <a id="repricer"></a>
2025-08-17T00:21:32.4372068Z 
2025-08-17T00:21:32.4372140Z # repricer
2025-08-17T00:21:32.4372250Z 
2025-08-17T00:21:32.4372336Z <a id="repricer.app.schemas"></a>
2025-08-17T00:21:32.4372493Z 
2025-08-17T00:21:32.4372571Z # repricer.app.schemas
2025-08-17T00:21:32.4372689Z 
2025-08-17T00:21:32.4372778Z <a id="repricer.app.deps"></a>
2025-08-17T00:21:32.4372916Z 
2025-08-17T00:21:32.4372988Z # repricer.app.deps
2025-08-17T00:21:32.4373096Z 
2025-08-17T00:21:32.4373215Z Placeholder module for Keepa / SP-API clients.
2025-08-17T00:21:32.4373398Z 
2025-08-17T00:21:32.4373478Z <a id="repricer.app.logic"></a>
2025-08-17T00:21:32.4373625Z 
2025-08-17T00:21:32.4373698Z # repricer.app.logic
2025-08-17T00:21:32.4373812Z 
2025-08-17T00:21:32.4373917Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T00:21:32.4374096Z 
2025-08-17T00:21:32.4374161Z #### MIN\_MARGIN
2025-08-17T00:21:32.4374263Z 
2025-08-17T00:21:32.4374332Z 15 % ROI
2025-08-17T00:21:32.4374418Z 
2025-08-17T00:21:32.4374519Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T00:21:32.4374703Z 
2025-08-17T00:21:32.4374772Z #### compute\_price
2025-08-17T00:21:32.4374877Z 
2025-08-17T00:21:32.4374940Z ```python
2025-08-17T00:21:32.4375269Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T00:21:32.4375785Z ```
2025-08-17T00:21:32.4375919Z 
2025-08-17T00:21:32.4376097Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T00:21:32.4376565Z Replace with real competitive logic later.
2025-08-17T00:21:32.4376793Z 
2025-08-17T00:21:32.4376878Z <a id="repricer.app.main"></a>
2025-08-17T00:21:32.4377022Z 
2025-08-17T00:21:32.4377093Z # repricer.app.main
2025-08-17T00:21:32.4377199Z 
2025-08-17T00:21:32.4377275Z <a id="repricer.app"></a>
2025-08-17T00:21:32.4377572Z 
2025-08-17T00:21:32.4377639Z # repricer.app
2025-08-17T00:21:32.4377738Z 
2025-08-17T00:21:32.4377831Z <a id="repricer.tests.test_imports"></a>
2025-08-17T00:21:32.4377996Z 
2025-08-17T00:21:32.4378075Z # repricer.tests.test\_imports
2025-08-17T00:21:32.4378216Z 
2025-08-17T00:21:32.4378303Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T00:21:32.4378463Z 
2025-08-17T00:21:32.4378544Z # repricer.tests.test\_smoke
2025-08-17T00:21:32.4378684Z 
2025-08-17T00:21:32.4378760Z <a id="repricer.tests"></a>
2025-08-17T00:21:32.4378889Z 
2025-08-17T00:21:32.4379009Z # repricer.tests
2025-08-17T00:21:32.4379112Z 
2025-08-17T00:21:32.4379175Z <a id="db"></a>
2025-08-17T00:21:32.4379282Z 
2025-08-17T00:21:32.4379342Z # db
2025-08-17T00:21:32.4379424Z 
2025-08-17T00:21:32.4379499Z <a id="db.utils.views"></a>
2025-08-17T00:21:32.4379634Z 
2025-08-17T00:21:32.4379700Z # db.utils.views
2025-08-17T00:21:32.4379800Z 
2025-08-17T00:21:32.4379897Z <a id="db.utils.views.replace_view"></a>
2025-08-17T00:21:32.4380226Z 
2025-08-17T00:21:32.4380294Z #### replace\_view
2025-08-17T00:21:32.4380404Z 
2025-08-17T00:21:32.4380466Z ```python
2025-08-17T00:21:32.4380651Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T00:21:32.4380899Z ```
2025-08-17T00:21:32.4380982Z 
2025-08-17T00:21:32.4381069Z Drop and recreate a SQL view atomically.
2025-08-17T00:21:32.4381237Z 
2025-08-17T00:21:32.4381307Z <a id="db.utils"></a>
2025-08-17T00:21:32.4381425Z 
2025-08-17T00:21:32.4381494Z # db.utils
2025-08-17T00:21:32.4381583Z 
2025-08-17T00:21:32.4381660Z <a id="price_importer"></a>
2025-08-17T00:21:32.4381922Z 
2025-08-17T00:21:32.4381993Z # price\_importer
2025-08-17T00:21:32.4382097Z 
2025-08-17T00:21:32.4382203Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T00:21:32.4382389Z 
2025-08-17T00:21:32.4382478Z # price\_importer.services\_common.dsn
2025-08-17T00:21:32.4382640Z 
2025-08-17T00:21:32.4382768Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T00:21:32.4382979Z 
2025-08-17T00:21:32.4383047Z #### build\_dsn
2025-08-17T00:21:32.4383152Z 
2025-08-17T00:21:32.4383215Z ```python
2025-08-17T00:21:32.4383386Z def build_dsn(sync: bool = True) -> str
2025-08-17T00:21:32.4383611Z ```
2025-08-17T00:21:32.4383694Z 
2025-08-17T00:21:32.4383760Z Return safe DSN.
2025-08-17T00:21:32.4383875Z 
2025-08-17T00:21:32.4384218Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T00:21:32.4384419Z 
2025-08-17T00:21:32.4384548Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T00:21:32.4384753Z 
2025-08-17T00:21:32.4384862Z # price\_importer.services\_common.models\_vendor
2025-08-17T00:21:32.4385060Z 
2025-08-17T00:21:32.4385164Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T00:21:32.4385349Z 
2025-08-17T00:21:32.4385451Z # price\_importer.services\_common.db\_url
2025-08-17T00:21:32.4385622Z 
2025-08-17T00:21:32.4385752Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T00:21:32.4385967Z 
2025-08-17T00:21:32.4386048Z #### build\_url
2025-08-17T00:21:32.4386156Z 
2025-08-17T00:21:32.4386224Z ```python
2025-08-17T00:21:32.4386405Z def build_url(async_: bool = True) -> str
2025-08-17T00:21:32.4386625Z ```
2025-08-17T00:21:32.4386714Z 
2025-08-17T00:21:32.4386809Z Return Postgres DSN from env or PG_* parts.
2025-08-17T00:21:32.4386979Z 
2025-08-17T00:21:32.4387087Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T00:21:32.4387270Z 
2025-08-17T00:21:32.4387359Z # price\_importer.services\_common.keepa
2025-08-17T00:21:32.4387534Z 
2025-08-17T00:21:32.4387632Z <a id="price_importer.services_common.llm"></a>
2025-08-17T00:21:32.4387810Z 
2025-08-17T00:21:32.4387897Z # price\_importer.services\_common.llm
2025-08-17T00:21:32.4388061Z 
2025-08-17T00:21:32.4388172Z <a id="price_importer.services_common.settings"></a>
2025-08-17T00:21:32.4388360Z 
2025-08-17T00:21:32.4388459Z # price\_importer.services\_common.settings
2025-08-17T00:21:32.4388628Z 
2025-08-17T00:21:32.4388725Z <a id="price_importer.services_common.db"></a>
2025-08-17T00:21:32.4389036Z 
2025-08-17T00:21:32.4389124Z # price\_importer.services\_common.db
2025-08-17T00:21:32.4389282Z 
2025-08-17T00:21:32.4389434Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T00:21:32.4389671Z 
2025-08-17T00:21:32.4389748Z #### build\_sqlalchemy\_url
2025-08-17T00:21:32.4389875Z 
2025-08-17T00:21:32.4389942Z ```python
2025-08-17T00:21:32.4390108Z def build_sqlalchemy_url() -> str
2025-08-17T00:21:32.4390337Z ```
2025-08-17T00:21:32.4390417Z 
2025-08-17T00:21:32.4390509Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T00:21:32.4390683Z 
2025-08-17T00:21:32.4390822Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T00:21:32.4391047Z 
2025-08-17T00:21:32.4391126Z #### build\_asyncpg\_dsn
2025-08-17T00:21:32.4391248Z 
2025-08-17T00:21:32.4391309Z ```python
2025-08-17T00:21:32.4391480Z def build_asyncpg_dsn() -> str
2025-08-17T00:21:32.4391671Z ```
2025-08-17T00:21:32.4391751Z 
2025-08-17T00:21:32.4392089Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T00:21:32.4392443Z 
2025-08-17T00:21:32.4392573Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T00:21:32.4392784Z 
2025-08-17T00:21:32.4392851Z #### refresh\_mvs
2025-08-17T00:21:32.4392955Z 
2025-08-17T00:21:32.4393023Z ```python
2025-08-17T00:21:32.4393215Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T00:21:32.4393467Z ```
2025-08-17T00:21:32.4393548Z 
2025-08-17T00:21:32.4393683Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T00:21:32.4393900Z 
2025-08-17T00:21:32.4393994Z <a id="price_importer.services_common"></a>
2025-08-17T00:21:32.4394163Z 
2025-08-17T00:21:32.4394250Z # price\_importer.services\_common
2025-08-17T00:21:32.4394407Z 
2025-08-17T00:21:32.4394509Z <a id="price_importer.services_common.base"></a>
2025-08-17T00:21:32.4394691Z 
2025-08-17T00:21:32.4394787Z # price\_importer.services\_common.base
2025-08-17T00:21:32.4394948Z 
2025-08-17T00:21:32.4395036Z <a id="price_importer.normaliser"></a>
2025-08-17T00:21:32.4395212Z 
2025-08-17T00:21:32.4395295Z # price\_importer.normaliser
2025-08-17T00:21:32.4395433Z 
2025-08-17T00:21:32.4395534Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T00:21:32.4395721Z 
2025-08-17T00:21:32.4395809Z # price\_importer.common.models\_vendor
2025-08-17T00:21:32.4395970Z 
2025-08-17T00:21:32.4396065Z <a id="price_importer.common.db_url"></a>
2025-08-17T00:21:32.4396232Z 
2025-08-17T00:21:32.4396315Z # price\_importer.common.db\_url
2025-08-17T00:21:32.4396465Z 
2025-08-17T00:21:32.4396569Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T00:21:32.4396754Z 
2025-08-17T00:21:32.4396818Z #### make\_dsn
2025-08-17T00:21:32.4396924Z 
2025-08-17T00:21:32.4396987Z ```python
2025-08-17T00:21:32.4397163Z def make_dsn(async_: bool = False) -> str
2025-08-17T00:21:32.4397384Z ```
2025-08-17T00:21:32.4397465Z 
2025-08-17T00:21:32.4397588Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T00:21:32.4397785Z 
2025-08-17T00:21:32.4397901Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T00:21:32.4398093Z 
2025-08-17T00:21:32.4398157Z #### build\_url
2025-08-17T00:21:32.4398256Z 
2025-08-17T00:21:32.4398325Z ```python
2025-08-17T00:21:32.4398497Z def build_url(async_: bool = False) -> str
2025-08-17T00:21:32.4398725Z ```
2025-08-17T00:21:32.4398808Z 
2025-08-17T00:21:32.4398925Z Return Postgres DSN built from environment variables.
2025-08-17T00:21:32.4399128Z 
2025-08-17T00:21:32.4399213Z <a id="price_importer.common"></a>
2025-08-17T00:21:32.4399364Z 
2025-08-17T00:21:32.4399440Z # price\_importer.common
2025-08-17T00:21:32.4399569Z 
2025-08-17T00:21:32.4399656Z <a id="price_importer.common.base"></a>
2025-08-17T00:21:32.4399817Z 
2025-08-17T00:21:32.4399906Z # price\_importer.common.base
2025-08-17T00:21:32.4400043Z 
2025-08-17T00:21:32.4400136Z <a id="price_importer.tests.conftest"></a>
2025-08-17T00:21:32.4400312Z 
2025-08-17T00:21:32.4400395Z # price\_importer.tests.conftest
2025-08-17T00:21:32.4400538Z 
2025-08-17T00:21:32.4400756Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T00:21:32.4400934Z 
2025-08-17T00:21:32.4401021Z # price\_importer.tests.test\_reader
2025-08-17T00:21:32.4401176Z 
2025-08-17T00:21:32.4401280Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T00:21:32.4401455Z 
2025-08-17T00:21:32.4401541Z # price\_importer.tests.test\_imports
2025-08-17T00:21:32.4401705Z 
2025-08-17T00:21:32.4401909Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T00:21:32.4402083Z 
2025-08-17T00:21:32.4402167Z # price\_importer.tests.test\_smoke
2025-08-17T00:21:32.4402325Z 
2025-08-17T00:21:32.4402427Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T00:21:32.4402608Z 
2025-08-17T00:21:32.4402702Z # price\_importer.tests.test\_normaliser
2025-08-17T00:21:32.4402863Z 
2025-08-17T00:21:32.4402946Z <a id="price_importer.tests"></a>
2025-08-17T00:21:32.4403099Z 
2025-08-17T00:21:32.4403173Z # price\_importer.tests
2025-08-17T00:21:32.4403292Z 
2025-08-17T00:21:32.4403375Z <a id="price_importer.reader"></a>
2025-08-17T00:21:32.4403654Z 
2025-08-17T00:21:32.4403731Z # price\_importer.reader
2025-08-17T00:21:32.4403853Z 
2025-08-17T00:21:32.4403951Z <a id="price_importer.reader.load_file"></a>
2025-08-17T00:21:32.4404122Z 
2025-08-17T00:21:32.4404189Z #### load\_file
2025-08-17T00:21:32.4404294Z 
2025-08-17T00:21:32.4404357Z ```python
2025-08-17T00:21:32.4404526Z def load_file(path: str | Path) -> Any
2025-08-17T00:21:32.4404744Z ```
2025-08-17T00:21:32.4404826Z 
2025-08-17T00:21:32.4404914Z Return DataFrame from CSV or Excel file.
2025-08-17T00:21:32.4405082Z 
2025-08-17T00:21:32.4405185Z Raises RuntimeError if pandas is unavailable.
2025-08-17T00:21:32.4405403Z 
2025-08-17T00:21:32.4405501Z <a id="price_importer.repository"></a>
2025-08-17T00:21:32.4405659Z 
2025-08-17T00:21:32.4405740Z # price\_importer.repository
2025-08-17T00:21:32.4405887Z 
2025-08-17T00:21:32.4405973Z <a id="price_importer.import"></a>
2025-08-17T00:21:32.4406121Z 
2025-08-17T00:21:32.4406196Z # price\_importer.import
2025-08-17T00:21:32.4406338Z 
2025-08-17T00:21:32.4406407Z <a id="fees_h10"></a>
2025-08-17T00:21:32.4406521Z 
2025-08-17T00:21:32.4406599Z # fees\_h10
2025-08-17T00:21:32.4406693Z 
2025-08-17T00:21:32.4406774Z <a id="fees_h10.worker"></a>
2025-08-17T00:21:32.4406911Z 
2025-08-17T00:21:32.4406977Z # fees\_h10.worker
2025-08-17T00:21:32.4407085Z 
2025-08-17T00:21:32.4407180Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T00:21:32.4407357Z 
2025-08-17T00:21:32.4407430Z #### list\_active\_asins
2025-08-17T00:21:32.4407551Z 
2025-08-17T00:21:32.4407619Z ```python
2025-08-17T00:21:32.4407786Z def list_active_asins() -> list[str]
2025-08-17T00:21:32.4408002Z ```
2025-08-17T00:21:32.4408083Z 
2025-08-17T00:21:32.4408195Z Return known ASINs or an empty list if unavailable.
2025-08-17T00:21:32.4408391Z 
2025-08-17T00:21:32.4408479Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T00:21:32.4408635Z 
2025-08-17T00:21:32.4408714Z # fees\_h10.tests.test\_smoke
2025-08-17T00:21:32.4408856Z 
2025-08-17T00:21:32.4408934Z <a id="fees_h10.tests"></a>
2025-08-17T00:21:32.4409067Z 
2025-08-17T00:21:32.4409139Z # fees\_h10.tests
2025-08-17T00:21:32.4409244Z 
2025-08-17T00:21:32.4409318Z <a id="fees_h10.client"></a>
2025-08-17T00:21:32.4409454Z 
2025-08-17T00:21:32.4409519Z # fees\_h10.client
2025-08-17T00:21:32.4409621Z 
2025-08-17T00:21:32.4409703Z <a id="fees_h10.repository"></a>
2025-08-17T00:21:32.4409856Z 
2025-08-17T00:21:32.4409930Z # fees\_h10.repository
2025-08-17T00:21:32.4410047Z 
2025-08-17T00:21:32.4410123Z <a id="emailer"></a>
2025-08-17T00:21:32.4410233Z 
2025-08-17T00:21:32.4410295Z # emailer
2025-08-17T00:21:32.4410384Z 
2025-08-17T00:21:32.4410491Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T00:21:32.4410670Z 
2025-08-17T00:21:32.4410759Z # emailer.tests.test\_import\_emailer
2025-08-17T00:21:32.4410922Z 
2025-08-17T00:21:32.4411005Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T00:21:32.4411159Z 
2025-08-17T00:21:32.4411242Z # emailer.tests.test\_smoke
2025-08-17T00:21:32.4411374Z 
2025-08-17T00:21:32.4411591Z <a id="emailer.tests"></a>
2025-08-17T00:21:32.4411721Z 
2025-08-17T00:21:32.4411793Z # emailer.tests
2025-08-17T00:21:32.4412098Z 
2025-08-17T00:21:32.4412187Z <a id="emailer.generate_body"></a>
2025-08-17T00:21:32.4412349Z 
2025-08-17T00:21:32.4412426Z # emailer.generate\_body
2025-08-17T00:21:32.4412556Z 
2025-08-17T00:21:32.4412631Z <a id="llm_server"></a>
2025-08-17T00:21:32.4412749Z 
2025-08-17T00:21:32.4412812Z # llm\_server
2025-08-17T00:21:32.4412909Z 
2025-08-17T00:21:32.4412993Z <a id="llm_server.app"></a>
2025-08-17T00:21:32.4413125Z 
2025-08-17T00:21:32.4413192Z # llm\_server.app
2025-08-17T00:21:32.4413302Z 
