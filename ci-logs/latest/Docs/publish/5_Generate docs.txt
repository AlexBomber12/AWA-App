2025-08-19T09:43:32.9880566Z ##[group]Run pydoc-markdown
2025-08-19T09:43:32.9880879Z [36;1mpydoc-markdown[0m
2025-08-19T09:43:32.9922172Z shell: /usr/bin/bash -e {0}
2025-08-19T09:43:32.9922412Z env:
2025-08-19T09:43:32.9922654Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:43:32.9923069Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T09:43:32.9923471Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:43:32.9923814Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:43:32.9924193Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T09:43:32.9924540Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T09:43:32.9924831Z ##[endgroup]
2025-08-19T09:43:33.3589047Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T09:43:33.3589738Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T09:43:33.3590201Z In "pydoc-markdown.yml"
2025-08-19T09:43:33.3590615Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T09:43:33.3591353Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T09:43:33.3592129Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T09:43:33.3592658Z 
2025-08-19T09:43:33.7246375Z <a id="__init__"></a>
2025-08-19T09:43:33.7246819Z 
2025-08-19T09:43:33.7246963Z # \_\_init\_\_
2025-08-19T09:43:33.7247503Z 
2025-08-19T09:43:33.7247654Z <a id="api"></a>
2025-08-19T09:43:33.7248173Z 
2025-08-19T09:43:33.7248314Z # api
2025-08-19T09:43:33.7248517Z 
2025-08-19T09:43:33.7248683Z <a id="api.errors"></a>
2025-08-19T09:43:33.7248935Z 
2025-08-19T09:43:33.7249080Z # api.errors
2025-08-19T09:43:33.7249292Z 
2025-08-19T09:43:33.7249457Z <a id="api.sentry_config"></a>
2025-08-19T09:43:33.7249751Z 
2025-08-19T09:43:33.7249917Z # api.sentry\_config
2025-08-19T09:43:33.7250164Z 
2025-08-19T09:43:33.7250351Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T09:43:33.7250683Z 
2025-08-19T09:43:33.7250815Z # api.tests.test\_sentry\_scrub
2025-08-19T09:43:33.7251114Z 
2025-08-19T09:43:33.7251268Z <a id="api.tests.test_errors_json"></a>
2025-08-19T09:43:33.7251558Z 
2025-08-19T09:43:33.7251697Z # api.tests.test\_errors\_json
2025-08-19T09:43:33.7251958Z 
2025-08-19T09:43:33.7252081Z <a id="api.tests.test_llm"></a>
2025-08-19T09:43:33.7252241Z 
2025-08-19T09:43:33.7252323Z # api.tests.test\_llm
2025-08-19T09:43:33.7252458Z 
2025-08-19T09:43:33.7252556Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T09:43:33.7252741Z 
2025-08-19T09:43:33.7252829Z # api.tests.test\_sentry\_event
2025-08-19T09:43:33.7252988Z 
2025-08-19T09:43:33.7253126Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T09:43:33.7253357Z 
2025-08-19T09:43:33.7253450Z ## DummyTransport Objects
2025-08-19T09:43:33.7253592Z 
2025-08-19T09:43:33.7253666Z ```python
2025-08-19T09:43:33.7253858Z class DummyTransport()
2025-08-19T09:43:33.7254062Z ```
2025-08-19T09:43:33.7254164Z 
2025-08-19T09:43:33.7254359Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T09:43:33.7255067Z 
2025-08-19T09:43:33.7255157Z #### capture\_envelope
2025-08-19T09:43:33.7255291Z 
2025-08-19T09:43:33.7255364Z ```python
2025-08-19T09:43:33.7255562Z def capture_envelope(envelope)
2025-08-19T09:43:33.7255793Z ```
2025-08-19T09:43:33.7255890Z 
2025-08-19T09:43:33.7256030Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T09:43:33.7256265Z 
2025-08-19T09:43:33.7256358Z <a id="api.tests.test_cors"></a>
2025-08-19T09:43:33.7256529Z 
2025-08-19T09:43:33.7256611Z # api.tests.test\_cors
2025-08-19T09:43:33.7256740Z 
2025-08-19T09:43:33.7256841Z <a id="api.tests.test_imports"></a>
2025-08-19T09:43:33.7257016Z 
2025-08-19T09:43:33.7257100Z # api.tests.test\_imports
2025-08-19T09:43:33.7257241Z 
2025-08-19T09:43:33.7257344Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T09:43:33.7257526Z 
2025-08-19T09:43:33.7257613Z # api.tests.test\_rate\_limit
2025-08-19T09:43:33.7257777Z 
2025-08-19T09:43:33.7258109Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T09:43:33.7258556Z 
2025-08-19T09:43:33.7258637Z #### app
2025-08-19T09:43:33.7258736Z 
2025-08-19T09:43:33.7258807Z noqa: E402
2025-08-19T09:43:33.7258910Z 
2025-08-19T09:43:33.7259011Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T09:43:33.7259193Z 
2025-08-19T09:43:33.7259282Z # api.tests.test\_entrypoint
2025-08-19T09:43:33.7259440Z 
2025-08-19T09:43:33.7259533Z <a id="api.tests.test_health"></a>
2025-08-19T09:43:33.7259702Z 
2025-08-19T09:43:33.7259792Z # api.tests.test\_health
2025-08-19T09:43:33.7259934Z 
2025-08-19T09:43:33.7260021Z <a id="api.logging_config"></a>
2025-08-19T09:43:33.7260177Z 
2025-08-19T09:43:33.7260264Z # api.logging\_config
2025-08-19T09:43:33.7260393Z 
2025-08-19T09:43:33.7260481Z <a id="api.migrations.env"></a>
2025-08-19T09:43:33.7260645Z 
2025-08-19T09:43:33.7260734Z # api.migrations.env
2025-08-19T09:43:33.7260860Z 
2025-08-19T09:43:33.7260988Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T09:43:33.7261219Z 
2025-08-19T09:43:33.7261336Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T09:43:33.7261550Z 
2025-08-19T09:43:33.7261669Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T09:43:33.7261865Z 
2025-08-19T09:43:33.7261961Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T09:43:33.7262142Z 
2025-08-19T09:43:33.7262295Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T09:43:33.7262541Z 
2025-08-19T09:43:33.7262686Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T09:43:33.7262902Z 
2025-08-19T09:43:33.7263026Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T09:43:33.7263226Z 
2025-08-19T09:43:33.7263341Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T09:43:33.7263521Z 
2025-08-19T09:43:33.7263636Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T09:43:33.7263833Z 
2025-08-19T09:43:33.7263981Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T09:43:33.7264160Z 
2025-08-19T09:43:33.7264293Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T09:43:33.7264500Z 
2025-08-19T09:43:33.7264612Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T09:43:33.7264808Z 
2025-08-19T09:43:33.7264926Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T09:43:33.7265125Z 
2025-08-19T09:43:33.7265234Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T09:43:33.7265425Z 
2025-08-19T09:43:33.7265550Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T09:43:33.7265748Z 
2025-08-19T09:43:33.7265857Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T09:43:33.7266038Z 
2025-08-19T09:43:33.7266176Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T09:43:33.7266398Z 
2025-08-19T09:43:33.7266518Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T09:43:33.7266716Z 
2025-08-19T09:43:33.7266837Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T09:43:33.7267043Z 
2025-08-19T09:43:33.7267152Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T09:43:33.7267469Z 
2025-08-19T09:43:33.7267612Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T09:43:33.7267998Z 
2025-08-19T09:43:33.7268125Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T09:43:33.7268415Z 
2025-08-19T09:43:33.7268526Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T09:43:33.7268721Z 
2025-08-19T09:43:33.7268815Z # api.migrations.versions.0001\_baseline
2025-08-19T09:43:33.7268985Z 
2025-08-19T09:43:33.7269074Z <a id="api.migrations.versions"></a>
2025-08-19T09:43:33.7269239Z 
2025-08-19T09:43:33.7269322Z # api.migrations.versions
2025-08-19T09:43:33.7269452Z 
2025-08-19T09:43:33.7269538Z <a id="api.migrations"></a>
2025-08-19T09:43:33.7269670Z 
2025-08-19T09:43:33.7269740Z # api.migrations
2025-08-19T09:43:33.7269854Z 
2025-08-19T09:43:33.7269923Z <a id="api.db"></a>
2025-08-19T09:43:33.7270030Z 
2025-08-19T09:43:33.7270094Z # api.db
2025-08-19T09:43:33.7270188Z 
2025-08-19T09:43:33.7270269Z <a id="api.routes.stats"></a>
2025-08-19T09:43:33.7270553Z 
2025-08-19T09:43:33.7270638Z # api.routes.stats
2025-08-19T09:43:33.7270745Z 
2025-08-19T09:43:33.7270833Z <a id="api.routes.stats.kpi"></a>
2025-08-19T09:43:33.7270984Z 
2025-08-19T09:43:33.7271052Z #### kpi
2025-08-19T09:43:33.7271138Z 
2025-08-19T09:43:33.7271202Z ```python
2025-08-19T09:43:33.7271372Z @router.get("/stats/kpi")
2025-08-19T09:43:33.7271626Z def kpi() -> List[Dict[str, int]]
2025-08-19T09:43:33.7271836Z ```
2025-08-19T09:43:33.7271920Z 
2025-08-19T09:43:33.7272003Z Return KPI metrics (mock).
2025-08-19T09:43:33.7272130Z 
2025-08-19T09:43:33.7272230Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T09:43:33.7272408Z 
2025-08-19T09:43:33.7272485Z #### roi\_by\_vendor
2025-08-19T09:43:33.7272595Z 
2025-08-19T09:43:33.7272657Z ```python
2025-08-19T09:43:33.7272831Z @router.get("/stats/roi_by_vendor")
2025-08-19T09:43:33.7273075Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T09:43:33.7273306Z ```
2025-08-19T09:43:33.7273391Z 
2025-08-19T09:43:33.7273486Z Return ROI percent by vendor.
2025-08-19T09:43:33.7273622Z 
2025-08-19T09:43:33.7273712Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T09:43:33.7273880Z 
2025-08-19T09:43:33.7273952Z #### roi\_trend
2025-08-19T09:43:33.7274054Z 
2025-08-19T09:43:33.7274120Z ```python
2025-08-19T09:43:33.7274288Z @router.get("/stats/roi_trend")
2025-08-19T09:43:33.7274522Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T09:43:33.7274761Z ```
2025-08-19T09:43:33.7274842Z 
2025-08-19T09:43:33.7274918Z Return 30-day ROI trend.
2025-08-19T09:43:33.7275050Z 
2025-08-19T09:43:33.7275129Z <a id="api.routes.roi"></a>
2025-08-19T09:43:33.7275264Z 
2025-08-19T09:43:33.7275342Z # api.routes.roi
2025-08-19T09:43:33.7275448Z 
2025-08-19T09:43:33.7275535Z <a id="api.routes.health"></a>
2025-08-19T09:43:33.7275683Z 
2025-08-19T09:43:33.7275754Z # api.routes.health
2025-08-19T09:43:33.7275863Z 
2025-08-19T09:43:33.7275955Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T09:43:33.7276127Z 
2025-08-19T09:43:33.7276200Z #### MAX\_SKEW
2025-08-19T09:43:33.7276296Z 
2025-08-19T09:43:33.7276363Z seconds
2025-08-19T09:43:33.7276448Z 
2025-08-19T09:43:33.7276539Z <a id="api.routes.health.health"></a>
2025-08-19T09:43:33.7276707Z 
2025-08-19T09:43:33.7276771Z #### health
2025-08-19T09:43:33.7276860Z 
2025-08-19T09:43:33.7276923Z ```python
2025-08-19T09:43:33.7277118Z @router.get("/health", include_in_schema=False)
2025-08-19T09:43:33.7277490Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T09:43:33.7277963Z ```
2025-08-19T09:43:33.7278048Z 
2025-08-19T09:43:33.7278168Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T09:43:33.7278364Z 
2025-08-19T09:43:33.7278457Z <a id="api.routes.repository"></a>
2025-08-19T09:43:33.7278618Z 
2025-08-19T09:43:33.7278699Z # api.routes.repository
2025-08-19T09:43:33.7278823Z 
2025-08-19T09:43:33.7278895Z <a id="api.routes"></a>
2025-08-19T09:43:33.7279022Z 
2025-08-19T09:43:33.7279088Z # api.routes
2025-08-19T09:43:33.7279186Z 
2025-08-19T09:43:33.7279397Z <a id="api.models.fee"></a>
2025-08-19T09:43:33.7279529Z 
2025-08-19T09:43:33.7279599Z # api.models.fee
2025-08-19T09:43:33.7279710Z 
2025-08-19T09:43:33.7279784Z <a id="api.models"></a>
2025-08-19T09:43:33.7279899Z 
2025-08-19T09:43:33.7279965Z # api.models
2025-08-19T09:43:33.7280067Z 
2025-08-19T09:43:33.7280146Z <a id="api.roi_repository"></a>
2025-08-19T09:43:33.7280286Z 
2025-08-19T09:43:33.7280367Z # api.roi\_repository
2025-08-19T09:43:33.7280482Z 
2025-08-19T09:43:33.7280552Z <a id="api.main"></a>
2025-08-19T09:43:33.7280669Z 
2025-08-19T09:43:33.7280738Z # api.main
2025-08-19T09:43:33.7280830Z 
2025-08-19T09:43:33.7280908Z <a id="api.main.ready"></a>
2025-08-19T09:43:33.7281043Z 
2025-08-19T09:43:33.7281111Z #### ready
2025-08-19T09:43:33.7281202Z 
2025-08-19T09:43:33.7281266Z ```python
2025-08-19T09:43:33.7281529Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T09:43:33.7281962Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T09:43:33.7282424Z                                                                       str]
2025-08-19T09:43:33.7282658Z ```
2025-08-19T09:43:33.7282741Z 
2025-08-19T09:43:33.7282836Z Return 200 only when migrations are at head.
2025-08-19T09:43:33.7283012Z 
2025-08-19T09:43:33.7283091Z <a id="api.config"></a>
2025-08-19T09:43:33.7283213Z 
2025-08-19T09:43:33.7283279Z # api.config
2025-08-19T09:43:33.7283374Z 
2025-08-19T09:43:33.7283445Z <a id="etl"></a>
2025-08-19T09:43:33.7283548Z 
2025-08-19T09:43:33.7283608Z # etl
2025-08-19T09:43:33.7283694Z 
2025-08-19T09:43:33.7283782Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T09:43:33.7283928Z 
2025-08-19T09:43:33.7284003Z # etl.fba\_fee\_ingestor
2025-08-19T09:43:33.7284131Z 
2025-08-19T09:43:33.7284212Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T09:43:33.7284355Z 
2025-08-19T09:43:33.7284429Z # etl.sp\_fees\_ingestor
2025-08-19T09:43:33.7284558Z 
2025-08-19T09:43:33.7284638Z <a id="etl.keepa_ingestor"></a>
2025-08-19T09:43:33.7284783Z 
2025-08-19T09:43:33.7284869Z # etl.keepa\_ingestor
2025-08-19T09:43:33.7284984Z 
2025-08-19T09:43:33.7285052Z <a id="etl.db"></a>
2025-08-19T09:43:33.7285170Z 
2025-08-19T09:43:33.7285234Z # etl.db
2025-08-19T09:43:33.7285324Z 
2025-08-19T09:43:33.7285409Z <a id="etl.dialects.schemas"></a>
2025-08-19T09:43:33.7285824Z 
2025-08-19T09:43:33.7285972Z # etl.dialects.schemas
2025-08-19T09:43:33.7286133Z 
2025-08-19T09:43:33.7286248Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T09:43:33.7286434Z 
2025-08-19T09:43:33.7286525Z # etl.dialects.amazon\_reimbursements
2025-08-19T09:43:33.7286692Z 
2025-08-19T09:43:33.7286789Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T09:43:33.7286962Z 
2025-08-19T09:43:33.7287050Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T09:43:33.7287214Z 
2025-08-19T09:43:33.7287304Z <a id="etl.dialects.test_generic"></a>
2025-08-19T09:43:33.7287466Z 
2025-08-19T09:43:33.7287556Z # etl.dialects.test\_generic
2025-08-19T09:43:33.7287693Z 
2025-08-19T09:43:33.7287954Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T09:43:33.7288140Z 
2025-08-19T09:43:33.7288224Z # etl.dialects.amazon\_returns
2025-08-19T09:43:33.7288365Z 
2025-08-19T09:43:33.7288463Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T09:43:33.7288639Z 
2025-08-19T09:43:33.7288726Z # etl.dialects.amazon\_fee\_preview
2025-08-19T09:43:33.7288879Z 
2025-08-19T09:43:33.7288995Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T09:43:33.7289181Z 
2025-08-19T09:43:33.7289271Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T09:43:33.7289440Z 
2025-08-19T09:43:33.7289535Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T09:43:33.7289703Z 
2025-08-19T09:43:33.7289790Z # etl.dialects.amazon\_settlements
2025-08-19T09:43:33.7289948Z 
2025-08-19T09:43:33.7290026Z <a id="etl.dialects"></a>
2025-08-19T09:43:33.7290153Z 
2025-08-19T09:43:33.7290224Z # etl.dialects
2025-08-19T09:43:33.7290324Z 
2025-08-19T09:43:33.7290393Z <a id="ingest"></a>
2025-08-19T09:43:33.7290504Z 
2025-08-19T09:43:33.7290723Z # ingest
2025-08-19T09:43:33.7290813Z 
2025-08-19T09:43:33.7290897Z <a id="ingest.maintenance"></a>
2025-08-19T09:43:33.7291043Z 
2025-08-19T09:43:33.7291117Z # ingest.maintenance
2025-08-19T09:43:33.7291231Z 
2025-08-19T09:43:33.7291313Z <a id="ingest.copy_loader"></a>
2025-08-19T09:43:33.7291450Z 
2025-08-19T09:43:33.7291523Z # ingest.copy\_loader
2025-08-19T09:43:33.7291637Z 
2025-08-19T09:43:33.7291745Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T09:43:33.7291926Z 
2025-08-19T09:43:33.7292001Z #### copy\_df\_via\_temp
2025-08-19T09:43:33.7292129Z 
2025-08-19T09:43:33.7292194Z ```python
2025-08-19T09:43:33.7292367Z def copy_df_via_temp(engine: Engine,
2025-08-19T09:43:33.7292608Z                      df: pd.DataFrame,
2025-08-19T09:43:33.7292848Z                      target_table: str,
2025-08-19T09:43:33.7293065Z                      *,
2025-08-19T09:43:33.7293281Z                      target_schema: Optional[str] = None,
2025-08-19T09:43:33.7293541Z                      columns: Sequence[str],
2025-08-19T09:43:33.7293928Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T09:43:33.7294210Z                      analyze_after: bool = False,
2025-08-19T09:43:33.7294478Z                      connection: Any | None = None) -> int
2025-08-19T09:43:33.7294720Z ```
2025-08-19T09:43:33.7294806Z 
2025-08-19T09:43:33.7294960Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T09:43:33.7295193Z 
2025-08-19T09:43:33.7295289Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T09:43:33.7295446Z 
2025-08-19T09:43:33.7295527Z # ingest.tests.test\_smoke
2025-08-19T09:43:33.7295665Z 
2025-08-19T09:43:33.7295743Z <a id="ingest.tests"></a>
2025-08-19T09:43:33.7295868Z 
2025-08-19T09:43:33.7295938Z # ingest.tests
2025-08-19T09:43:33.7296049Z 
2025-08-19T09:43:33.7296136Z <a id="ingest.upload_router"></a>
2025-08-19T09:43:33.7296281Z 
2025-08-19T09:43:33.7296364Z # ingest.upload\_router
2025-08-19T09:43:33.7296484Z 
2025-08-19T09:43:33.7296565Z <a id="ingest.email_watcher"></a>
2025-08-19T09:43:33.7296721Z 
2025-08-19T09:43:33.7296797Z # ingest.email\_watcher
2025-08-19T09:43:33.7296911Z 
2025-08-19T09:43:33.7296999Z <a id="ingest.email_watcher.main"></a>
2025-08-19T09:43:33.7297164Z 
2025-08-19T09:43:33.7297227Z #### main
2025-08-19T09:43:33.7297317Z 
2025-08-19T09:43:33.7297392Z ```python
2025-08-19T09:43:33.7297560Z def main() -> dict[str, str]
2025-08-19T09:43:33.7297771Z ```
2025-08-19T09:43:33.7297984Z 
2025-08-19T09:43:33.7298126Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T09:43:33.7298347Z 
2025-08-19T09:43:33.7298480Z Returns {"status": "success"} when processing completes.
2025-08-19T09:43:33.7298693Z 
2025-08-19T09:43:33.7298773Z <a id="ingest.tasks"></a>
2025-08-19T09:43:33.7298897Z 
2025-08-19T09:43:33.7298969Z # ingest.tasks
2025-08-19T09:43:33.7299069Z 
2025-08-19T09:43:33.7299166Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T09:43:33.7299344Z 
2025-08-19T09:43:33.7299418Z #### task\_import\_file
2025-08-19T09:43:33.7299543Z 
2025-08-19T09:43:33.7299609Z ```python
2025-08-19T09:43:33.7299825Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T09:43:33.7300107Z def task_import_file(self: Any,
2025-08-19T09:43:33.7300327Z                      uri: str,
2025-08-19T09:43:33.7300555Z                      report_type: Optional[str] = None,
2025-08-19T09:43:33.7300822Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T09:43:33.7301061Z ```
2025-08-19T09:43:33.7301148Z 
2025-08-19T09:43:33.7301281Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T09:43:33.7301494Z 
2025-08-19T09:43:33.7301577Z <a id="ingest.celery_app"></a>
2025-08-19T09:43:33.7301720Z 
2025-08-19T09:43:33.7301802Z # ingest.celery\_app
2025-08-19T09:43:33.7301921Z 
2025-08-19T09:43:33.7302004Z <a id="ingest.ingest_router"></a>
2025-08-19T09:43:33.7302152Z 
2025-08-19T09:43:33.7302233Z # ingest.ingest\_router
2025-08-19T09:43:33.7302351Z 
2025-08-19T09:43:33.7302429Z <a id="logistics_etl"></a>
2025-08-19T09:43:33.7302707Z 
2025-08-19T09:43:33.7302777Z # logistics\_etl
2025-08-19T09:43:33.7302884Z 
2025-08-19T09:43:33.7302963Z Daily logistics ETL job.
2025-08-19T09:43:33.7303096Z 
2025-08-19T09:43:33.7303180Z <a id="logistics_etl.__main__"></a>
2025-08-19T09:43:33.7303333Z 
2025-08-19T09:43:33.7303417Z # logistics\_etl.\_\_main\_\_
2025-08-19T09:43:33.7303553Z 
2025-08-19T09:43:33.7303630Z <a id="logistics_etl.dsn"></a>
2025-08-19T09:43:33.7303771Z 
2025-08-19T09:43:33.7303844Z # logistics\_etl.dsn
2025-08-19T09:43:33.7303960Z 
2025-08-19T09:43:33.7304078Z Local DSN builder to avoid cross-service dependency.
2025-08-19T09:43:33.7304281Z 
2025-08-19T09:43:33.7304371Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T09:43:33.7304539Z 
2025-08-19T09:43:33.7304611Z #### build\_dsn
2025-08-19T09:43:33.7304712Z 
2025-08-19T09:43:33.7304778Z ```python
2025-08-19T09:43:33.7304957Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:43:33.7305179Z ```
2025-08-19T09:43:33.7305269Z 
2025-08-19T09:43:33.7305514Z Return a Postgres DSN assembled from environment variables.
2025-08-19T09:43:33.7305737Z 
2025-08-19T09:43:33.7305894Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T09:43:33.7306287Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T09:43:33.7306641Z error when any required variable is missing.
2025-08-19T09:43:33.7306820Z 
2025-08-19T09:43:33.7306918Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T09:43:33.7307095Z 
2025-08-19T09:43:33.7307181Z # logistics\_etl.tests.conftest
2025-08-19T09:43:33.7307329Z 
2025-08-19T09:43:33.7307434Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T09:43:33.7307628Z 
2025-08-19T09:43:33.7307719Z # logistics\_etl.tests.test\_repository
2025-08-19T09:43:33.7308025Z 
2025-08-19T09:43:33.7308127Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T09:43:33.7308298Z 
2025-08-19T09:43:33.7308383Z # logistics\_etl.tests.test\_cron
2025-08-19T09:43:33.7308537Z 
2025-08-19T09:43:33.7308636Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T09:43:33.7308818Z 
2025-08-19T09:43:33.7308903Z # logistics\_etl.tests.test\_imports
2025-08-19T09:43:33.7309066Z 
2025-08-19T09:43:33.7309159Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T09:43:33.7309332Z 
2025-08-19T09:43:33.7309439Z # logistics\_etl.tests.test\_smoke
2025-08-19T09:43:33.7309594Z 
2025-08-19T09:43:33.7309689Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T09:43:33.7309866Z 
2025-08-19T09:43:33.7309951Z # logistics\_etl.tests.test\_client
2025-08-19T09:43:33.7310106Z 
2025-08-19T09:43:33.7310190Z <a id="logistics_etl.tests"></a>
2025-08-19T09:43:33.7310340Z 
2025-08-19T09:43:33.7310415Z # logistics\_etl.tests
2025-08-19T09:43:33.7310535Z 
2025-08-19T09:43:33.7310621Z <a id="logistics_etl.flow"></a>
2025-08-19T09:43:33.7310761Z 
2025-08-19T09:43:33.7310834Z # logistics\_etl.flow
2025-08-19T09:43:33.7310956Z 
2025-08-19T09:43:33.7311038Z <a id="logistics_etl.client"></a>
2025-08-19T09:43:33.7311186Z 
2025-08-19T09:43:33.7353857Z # logistics\_etl.client
2025-08-19T09:43:33.7354125Z 
2025-08-19T09:43:33.7354264Z <a id="logistics_etl.cron"></a>
2025-08-19T09:43:33.7354520Z 
2025-08-19T09:43:33.7354642Z # logistics\_etl.cron
2025-08-19T09:43:33.7354839Z 
2025-08-19T09:43:33.7354972Z <a id="logistics_etl.db"></a>
2025-08-19T09:43:33.7355217Z 
2025-08-19T09:43:33.7355331Z # logistics\_etl.db
2025-08-19T09:43:33.7355515Z 
2025-08-19T09:43:33.7355670Z <a id="logistics_etl.repository"></a>
2025-08-19T09:43:33.7355950Z 
2025-08-19T09:43:33.7356039Z # logistics\_etl.repository
2025-08-19T09:43:33.7356185Z 
2025-08-19T09:43:33.7356259Z <a id="alert_bot"></a>
2025-08-19T09:43:33.7356377Z 
2025-08-19T09:43:33.7356445Z # alert\_bot
2025-08-19T09:43:33.7356552Z 
2025-08-19T09:43:33.7356641Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T09:43:33.7356807Z 
2025-08-19T09:43:33.7356894Z # alert\_bot.tests.test\_smoke
2025-08-19T09:43:33.7357036Z 
2025-08-19T09:43:33.7357114Z <a id="alert_bot.tests"></a>
2025-08-19T09:43:33.7357247Z 
2025-08-19T09:43:33.7357554Z # alert\_bot.tests
2025-08-19T09:43:33.7357665Z 
2025-08-19T09:43:33.7357749Z <a id="alert_bot.alert_bot"></a>
2025-08-19T09:43:33.7358118Z 
2025-08-19T09:43:33.7358200Z # alert\_bot.alert\_bot
2025-08-19T09:43:33.7358324Z 
2025-08-19T09:43:33.7358413Z <a id="alert_bot.rules"></a>
2025-08-19T09:43:33.7358548Z 
2025-08-19T09:43:33.7358618Z # alert\_bot.rules
2025-08-19T09:43:33.7358731Z 
2025-08-19T09:43:33.7358807Z <a id="common"></a>
2025-08-19T09:43:33.7358920Z 
2025-08-19T09:43:33.7358984Z # common
2025-08-19T09:43:33.7359081Z 
2025-08-19T09:43:33.7359155Z <a id="common.dsn"></a>
2025-08-19T09:43:33.7359278Z 
2025-08-19T09:43:33.7359345Z # common.dsn
2025-08-19T09:43:33.7359453Z 
2025-08-19T09:43:33.7359541Z <a id="common.dsn.build_dsn"></a>
2025-08-19T09:43:33.7359695Z 
2025-08-19T09:43:33.7359771Z #### build\_dsn
2025-08-19T09:43:33.7359876Z 
2025-08-19T09:43:33.7359943Z ```python
2025-08-19T09:43:33.7360131Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:43:33.7360353Z ```
2025-08-19T09:43:33.7360732Z 
2025-08-19T09:43:33.7360858Z Return a Postgres DSN, validating required variables.
2025-08-19T09:43:33.7361064Z 
2025-08-19T09:43:33.7361338Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T09:43:33.7361783Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T09:43:33.7362199Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T09:43:33.7362517Z missing.
2025-08-19T09:43:33.7362615Z 
2025-08-19T09:43:33.7362702Z <a id="common.models_vendor"></a>
2025-08-19T09:43:33.7362856Z 
2025-08-19T09:43:33.7362934Z # common.models\_vendor
2025-08-19T09:43:33.7363062Z 
2025-08-19T09:43:33.7363158Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T09:43:33.7363333Z 
2025-08-19T09:43:33.7363408Z ## Vendor Objects
2025-08-19T09:43:33.7363517Z 
2025-08-19T09:43:33.7363582Z ```python
2025-08-19T09:43:33.7363743Z class Vendor(Base)
2025-08-19T09:43:33.7363909Z ```
2025-08-19T09:43:33.7363999Z 
2025-08-19T09:43:33.7364089Z Vendor of inventory items.
2025-08-19T09:43:33.7364223Z 
2025-08-19T09:43:33.7364327Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T09:43:33.7364518Z 
2025-08-19T09:43:33.7364593Z ## VendorPrice Objects
2025-08-19T09:43:33.7364711Z 
2025-08-19T09:43:33.7364786Z ```python
2025-08-19T09:43:33.7364949Z class VendorPrice(Base)
2025-08-19T09:43:33.7365137Z ```
2025-08-19T09:43:33.7365220Z 
2025-08-19T09:43:33.7365326Z Association table linking vendors to pricing.
2025-08-19T09:43:33.7365515Z 
2025-08-19T09:43:33.7365596Z <a id="common.db_url"></a>
2025-08-19T09:43:33.7365725Z 
2025-08-19T09:43:33.7365799Z # common.db\_url
2025-08-19T09:43:33.7365906Z 
2025-08-19T09:43:33.7365993Z <a id="common.db_url.build_url"></a>
2025-08-19T09:43:33.7366150Z 
2025-08-19T09:43:33.7366223Z #### build\_url
2025-08-19T09:43:33.7366326Z 
2025-08-19T09:43:33.7366391Z ```python
2025-08-19T09:43:33.7366579Z def build_url(async_: bool = True) -> str
2025-08-19T09:43:33.7366802Z ```
2025-08-19T09:43:33.7366902Z 
2025-08-19T09:43:33.7367003Z Return Postgres DSN from env or PG_* parts.
2025-08-19T09:43:33.7367181Z 
2025-08-19T09:43:33.7367264Z <a id="common.keepa"></a>
2025-08-19T09:43:33.7367395Z 
2025-08-19T09:43:33.7367464Z # common.keepa
2025-08-19T09:43:33.7367567Z 
2025-08-19T09:43:33.7367647Z <a id="common.llm"></a>
2025-08-19T09:43:33.7367763Z 
2025-08-19T09:43:33.7367993Z # common.llm
2025-08-19T09:43:33.7368101Z 
2025-08-19T09:43:33.7368184Z <a id="common.settings"></a>
2025-08-19T09:43:33.7368321Z 
2025-08-19T09:43:33.7368389Z # common.settings
2025-08-19T09:43:33.7368501Z 
2025-08-19T09:43:33.7368575Z <a id="common.db"></a>
2025-08-19T09:43:33.7368692Z 
2025-08-19T09:43:33.7368763Z # common.db
2025-08-19T09:43:33.7368853Z 
2025-08-19T09:43:33.7368946Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T09:43:33.7369123Z 
2025-08-19T09:43:33.7369201Z #### build\_sqlalchemy\_url
2025-08-19T09:43:33.7369333Z 
2025-08-19T09:43:33.7369398Z ```python
2025-08-19T09:43:33.7369580Z def build_sqlalchemy_url() -> str
2025-08-19T09:43:33.7369924Z ```
2025-08-19T09:43:33.7370006Z 
2025-08-19T09:43:33.7370103Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T09:43:33.7370278Z 
2025-08-19T09:43:33.7370374Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T09:43:33.7370545Z 
2025-08-19T09:43:33.7370625Z #### build\_asyncpg\_dsn
2025-08-19T09:43:33.7370759Z 
2025-08-19T09:43:33.7370826Z ```python
2025-08-19T09:43:33.7371004Z def build_asyncpg_dsn() -> str
2025-08-19T09:43:33.7371212Z ```
2025-08-19T09:43:33.7371293Z 
2025-08-19T09:43:33.7371429Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T09:43:33.7371642Z 
2025-08-19T09:43:33.7371728Z <a id="common.db.refresh_mvs"></a>
2025-08-19T09:43:33.7371880Z 
2025-08-19T09:43:33.7371955Z #### refresh\_mvs
2025-08-19T09:43:33.7372060Z 
2025-08-19T09:43:33.7372125Z ```python
2025-08-19T09:43:33.7372336Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T09:43:33.7372593Z ```
2025-08-19T09:43:33.7372683Z 
2025-08-19T09:43:33.7372936Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T09:43:33.7373160Z 
2025-08-19T09:43:33.7373248Z <a id="common.config"></a>
2025-08-19T09:43:33.7373379Z 
2025-08-19T09:43:33.7373449Z # common.config
2025-08-19T09:43:33.7373558Z 
2025-08-19T09:43:33.7373636Z <a id="common.base"></a>
2025-08-19T09:43:33.7373759Z 
2025-08-19T09:43:33.7373826Z # common.base
2025-08-19T09:43:33.7373930Z 
2025-08-19T09:43:33.7374013Z <a id="common.base.Base"></a>
2025-08-19T09:43:33.7374153Z 
2025-08-19T09:43:33.7374225Z ## Base Objects
2025-08-19T09:43:33.7374329Z 
2025-08-19T09:43:33.7374395Z ```python
2025-08-19T09:43:33.7374567Z class Base(DeclarativeBase)
2025-08-19T09:43:33.7374765Z ```
2025-08-19T09:43:33.7374854Z 
2025-08-19T09:43:33.7374941Z Base class for SQLAlchemy models.
2025-08-19T09:43:33.7375093Z 
2025-08-19T09:43:33.7375168Z <a id="repricer"></a>
2025-08-19T09:43:33.7375294Z 
2025-08-19T09:43:33.7375359Z # repricer
2025-08-19T09:43:33.7375451Z 
2025-08-19T09:43:33.7375546Z <a id="repricer.app.schemas"></a>
2025-08-19T09:43:33.7375702Z 
2025-08-19T09:43:33.7375781Z # repricer.app.schemas
2025-08-19T09:43:33.7375904Z 
2025-08-19T09:43:33.7376000Z <a id="repricer.app.deps"></a>
2025-08-19T09:43:33.7376144Z 
2025-08-19T09:43:33.7376220Z # repricer.app.deps
2025-08-19T09:43:33.7376345Z 
2025-08-19T09:43:33.7376475Z Placeholder module for Keepa / SP-API clients.
2025-08-19T09:43:33.7376662Z 
2025-08-19T09:43:33.7376756Z <a id="repricer.app.logic"></a>
2025-08-19T09:43:33.7376898Z 
2025-08-19T09:43:33.7376974Z # repricer.app.logic
2025-08-19T09:43:33.7377092Z 
2025-08-19T09:43:33.7377200Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T09:43:33.7377377Z 
2025-08-19T09:43:33.7377443Z #### MIN\_MARGIN
2025-08-19T09:43:33.7377555Z 
2025-08-19T09:43:33.7377618Z 15 % ROI
2025-08-19T09:43:33.7377706Z 
2025-08-19T09:43:33.7377927Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T09:43:33.7378118Z 
2025-08-19T09:43:33.7378190Z #### compute\_price
2025-08-19T09:43:33.7378297Z 
2025-08-19T09:43:33.7378375Z ```python
2025-08-19T09:43:33.7378622Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T09:43:33.7378929Z ```
2025-08-19T09:43:33.7379013Z 
2025-08-19T09:43:33.7379123Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T09:43:33.7379411Z Replace with real competitive logic later.
2025-08-19T09:43:33.7379584Z 
2025-08-19T09:43:33.7379673Z <a id="repricer.app.main"></a>
2025-08-19T09:43:33.7379818Z 
2025-08-19T09:43:33.7379889Z # repricer.app.main
2025-08-19T09:43:33.7380000Z 
2025-08-19T09:43:33.7380091Z <a id="repricer.app"></a>
2025-08-19T09:43:33.7380220Z 
2025-08-19T09:43:33.7380289Z # repricer.app
2025-08-19T09:43:33.7380397Z 
2025-08-19T09:43:33.7380489Z <a id="repricer.tests.test_imports"></a>
2025-08-19T09:43:33.7380662Z 
2025-08-19T09:43:33.7380745Z # repricer.tests.test\_imports
2025-08-19T09:43:33.7380891Z 
2025-08-19T09:43:33.7380982Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T09:43:33.7381144Z 
2025-08-19T09:43:33.7381235Z # repricer.tests.test\_smoke
2025-08-19T09:43:33.7381508Z 
2025-08-19T09:43:33.7381587Z <a id="repricer.tests"></a>
2025-08-19T09:43:33.7381726Z 
2025-08-19T09:43:33.7381796Z # repricer.tests
2025-08-19T09:43:33.7381903Z 
2025-08-19T09:43:33.7381968Z <a id="db"></a>
2025-08-19T09:43:33.7382074Z 
2025-08-19T09:43:33.7382135Z # db
2025-08-19T09:43:33.7382221Z 
2025-08-19T09:43:33.7382304Z <a id="db.utils.views"></a>
2025-08-19T09:43:33.7382434Z 
2025-08-19T09:43:33.7382502Z # db.utils.views
2025-08-19T09:43:33.7382609Z 
2025-08-19T09:43:33.7382701Z <a id="db.utils.views.replace_view"></a>
2025-08-19T09:43:33.7382870Z 
2025-08-19T09:43:33.7382940Z #### replace\_view
2025-08-19T09:43:33.7383056Z 
2025-08-19T09:43:33.7383122Z ```python
2025-08-19T09:43:33.7383320Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T09:43:33.7383566Z ```
2025-08-19T09:43:33.7383652Z 
2025-08-19T09:43:33.7383755Z Drop and recreate a SQL view atomically.
2025-08-19T09:43:33.7383919Z 
2025-08-19T09:43:33.7383992Z <a id="db.utils"></a>
2025-08-19T09:43:33.7384230Z 
2025-08-19T09:43:33.7384294Z # db.utils
2025-08-19T09:43:33.7384385Z 
2025-08-19T09:43:33.7384463Z <a id="price_importer"></a>
2025-08-19T09:43:33.7384602Z 
2025-08-19T09:43:33.7384672Z # price\_importer
2025-08-19T09:43:33.7384780Z 
2025-08-19T09:43:33.7384891Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T09:43:33.7385077Z 
2025-08-19T09:43:33.7385170Z # price\_importer.services\_common.dsn
2025-08-19T09:43:33.7385344Z 
2025-08-19T09:43:33.7385471Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T09:43:33.7385682Z 
2025-08-19T09:43:33.7385752Z #### build\_dsn
2025-08-19T09:43:33.7385862Z 
2025-08-19T09:43:33.7385926Z ```python
2025-08-19T09:43:33.7386110Z def build_dsn(sync: bool = True) -> str
2025-08-19T09:43:33.7386334Z ```
2025-08-19T09:43:33.7386420Z 
2025-08-19T09:43:33.7386496Z Return safe DSN.
2025-08-19T09:43:33.7386603Z 
2025-08-19T09:43:33.7386964Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T09:43:33.7387177Z 
2025-08-19T09:43:33.7387324Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T09:43:33.7387531Z 
2025-08-19T09:43:33.7387647Z # price\_importer.services\_common.models\_vendor
2025-08-19T09:43:33.7387950Z 
2025-08-19T09:43:33.7388060Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T09:43:33.7388252Z 
2025-08-19T09:43:33.7388356Z # price\_importer.services\_common.db\_url
2025-08-19T09:43:33.7388529Z 
2025-08-19T09:43:33.7388662Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T09:43:33.7388882Z 
2025-08-19T09:43:33.7388950Z #### build\_url
2025-08-19T09:43:33.7389053Z 
2025-08-19T09:43:33.7389118Z ```python
2025-08-19T09:43:33.7389301Z def build_url(async_: bool = True) -> str
2025-08-19T09:43:33.7389533Z ```
2025-08-19T09:43:33.7389616Z 
2025-08-19T09:43:33.7389717Z Return Postgres DSN from env or PG_* parts.
2025-08-19T09:43:33.7389891Z 
2025-08-19T09:43:33.7390004Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T09:43:33.7390191Z 
2025-08-19T09:43:33.7390293Z # price\_importer.services\_common.keepa
2025-08-19T09:43:33.7390466Z 
2025-08-19T09:43:33.7390568Z <a id="price_importer.services_common.llm"></a>
2025-08-19T09:43:33.7390749Z 
2025-08-19T09:43:33.7390847Z # price\_importer.services\_common.llm
2025-08-19T09:43:33.7391010Z 
2025-08-19T09:43:33.7391124Z <a id="price_importer.services_common.settings"></a>
2025-08-19T09:43:33.7391321Z 
2025-08-19T09:43:33.7391419Z # price\_importer.services\_common.settings
2025-08-19T09:43:33.7391590Z 
2025-08-19T09:43:33.7391690Z <a id="price_importer.services_common.db"></a>
2025-08-19T09:43:33.7391872Z 
2025-08-19T09:43:33.7391961Z # price\_importer.services\_common.db
2025-08-19T09:43:33.7392132Z 
2025-08-19T09:43:33.7392301Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T09:43:33.7392545Z 
2025-08-19T09:43:33.7392624Z #### build\_sqlalchemy\_url
2025-08-19T09:43:33.7392765Z 
2025-08-19T09:43:33.7392831Z ```python
2025-08-19T09:43:33.7393005Z def build_sqlalchemy_url() -> str
2025-08-19T09:43:33.7393356Z ```
2025-08-19T09:43:33.7393441Z 
2025-08-19T09:43:33.7393539Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T09:43:33.7393716Z 
2025-08-19T09:43:33.7393863Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T09:43:33.7394096Z 
2025-08-19T09:43:33.7394180Z #### build\_asyncpg\_dsn
2025-08-19T09:43:33.7394306Z 
2025-08-19T09:43:33.7394369Z ```python
2025-08-19T09:43:33.7394544Z def build_asyncpg_dsn() -> str
2025-08-19T09:43:33.7394742Z ```
2025-08-19T09:43:33.7394830Z 
2025-08-19T09:43:33.7394958Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T09:43:33.7395171Z 
2025-08-19T09:43:33.7395308Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T09:43:33.7395515Z 
2025-08-19T09:43:33.7395584Z #### refresh\_mvs
2025-08-19T09:43:33.7395691Z 
2025-08-19T09:43:33.7395763Z ```python
2025-08-19T09:43:33.7395958Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T09:43:33.7396212Z ```
2025-08-19T09:43:33.7396407Z 
2025-08-19T09:43:33.7396549Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T09:43:33.7396769Z 
2025-08-19T09:43:33.7396865Z <a id="price_importer.services_common"></a>
2025-08-19T09:43:33.7397036Z 
2025-08-19T09:43:33.7397133Z # price\_importer.services\_common
2025-08-19T09:43:33.7397287Z 
2025-08-19T09:43:33.7397393Z <a id="price_importer.services_common.base"></a>
2025-08-19T09:43:33.7397583Z 
2025-08-19T09:43:33.7397679Z # price\_importer.services\_common.base
2025-08-19T09:43:33.7397980Z 
2025-08-19T09:43:33.7398079Z <a id="price_importer.normaliser"></a>
2025-08-19T09:43:33.7398257Z 
2025-08-19T09:43:33.7398346Z # price\_importer.normaliser
2025-08-19T09:43:33.7398492Z 
2025-08-19T09:43:33.7398607Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T09:43:33.7398796Z 
2025-08-19T09:43:33.7398890Z # price\_importer.common.models\_vendor
2025-08-19T09:43:33.7399062Z 
2025-08-19T09:43:33.7399159Z <a id="price_importer.common.db_url"></a>
2025-08-19T09:43:33.7399331Z 
2025-08-19T09:43:33.7399447Z # price\_importer.common.db\_url
2025-08-19T09:43:33.7399606Z 
2025-08-19T09:43:33.7399716Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T09:43:33.7399906Z 
2025-08-19T09:43:33.7399982Z #### make\_dsn
2025-08-19T09:43:33.7400085Z 
2025-08-19T09:43:33.7400151Z ```python
2025-08-19T09:43:33.7400338Z def make_dsn(async_: bool = False) -> str
2025-08-19T09:43:33.7400564Z ```
2025-08-19T09:43:33.7400658Z 
2025-08-19T09:43:33.7400779Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T09:43:33.7400990Z 
2025-08-19T09:43:33.7401112Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T09:43:33.7401301Z 
2025-08-19T09:43:33.7401368Z #### build\_url
2025-08-19T09:43:33.7401471Z 
2025-08-19T09:43:33.7401545Z ```python
2025-08-19T09:43:33.7401727Z def build_url(async_: bool = False) -> str
2025-08-19T09:43:33.7401964Z ```
2025-08-19T09:43:33.7402048Z 
2025-08-19T09:43:33.7402172Z Return Postgres DSN built from environment variables.
2025-08-19T09:43:33.7402381Z 
2025-08-19T09:43:33.7402473Z <a id="price_importer.common"></a>
2025-08-19T09:43:33.7402631Z 
2025-08-19T09:43:33.7402719Z # price\_importer.common
2025-08-19T09:43:33.7402853Z 
2025-08-19T09:43:33.7402947Z <a id="price_importer.common.base"></a>
2025-08-19T09:43:33.7403121Z 
2025-08-19T09:43:33.7403209Z # price\_importer.common.base
2025-08-19T09:43:33.7403387Z 
2025-08-19T09:43:33.7403491Z <a id="price_importer.tests.conftest"></a>
2025-08-19T09:43:33.7403673Z 
2025-08-19T09:43:33.7403760Z # price\_importer.tests.conftest
2025-08-19T09:43:33.7403912Z 
2025-08-19T09:43:33.7404018Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T09:43:33.7404196Z 
2025-08-19T09:43:33.7404284Z # price\_importer.tests.test\_reader
2025-08-19T09:43:33.7404452Z 
2025-08-19T09:43:33.7404554Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T09:43:33.7404772Z 
2025-08-19T09:43:33.7404863Z # price\_importer.tests.test\_imports
2025-08-19T09:43:33.7405035Z 
2025-08-19T09:43:33.7405133Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T09:43:33.7405461Z 
2025-08-19T09:43:33.7405561Z # price\_importer.tests.test\_smoke
2025-08-19T09:43:33.7405720Z 
2025-08-19T09:43:33.7405833Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T09:43:33.7406033Z 
2025-08-19T09:43:33.7406128Z # price\_importer.tests.test\_normaliser
2025-08-19T09:43:33.7406297Z 
2025-08-19T09:43:33.7406386Z <a id="price_importer.tests"></a>
2025-08-19T09:43:33.7406545Z 
2025-08-19T09:43:33.7406623Z # price\_importer.tests
2025-08-19T09:43:33.7406749Z 
2025-08-19T09:43:33.7406843Z <a id="price_importer.reader"></a>
2025-08-19T09:43:33.7406996Z 
2025-08-19T09:43:33.7407077Z # price\_importer.reader
2025-08-19T09:43:33.7407212Z 
2025-08-19T09:43:33.7407306Z <a id="price_importer.repository"></a>
2025-08-19T09:43:33.7407473Z 
2025-08-19T09:43:33.7407557Z # price\_importer.repository
2025-08-19T09:43:33.7407705Z 
2025-08-19T09:43:33.7407923Z <a id="price_importer.import"></a>
2025-08-19T09:43:33.7408078Z 
2025-08-19T09:43:33.7408164Z # price\_importer.import
2025-08-19T09:43:33.7408409Z 
2025-08-19T09:43:33.7408482Z <a id="fees_h10"></a>
2025-08-19T09:43:33.7408608Z 
2025-08-19T09:43:33.7408675Z # fees\_h10
2025-08-19T09:43:33.7408768Z 
2025-08-19T09:43:33.7408845Z <a id="fees_h10.worker"></a>
2025-08-19T09:43:33.7408986Z 
2025-08-19T09:43:33.7409054Z # fees\_h10.worker
2025-08-19T09:43:33.7409161Z 
2025-08-19T09:43:33.7409269Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T09:43:33.7409448Z 
2025-08-19T09:43:33.7409523Z #### list\_active\_asins
2025-08-19T09:43:33.7409645Z 
2025-08-19T09:43:33.7409717Z ```python
2025-08-19T09:43:33.7409890Z def list_active_asins() -> list[str]
2025-08-19T09:43:33.7410111Z ```
2025-08-19T09:43:33.7410198Z 
2025-08-19T09:43:33.7410314Z Return known ASINs or an empty list if unavailable.
2025-08-19T09:43:33.7410519Z 
2025-08-19T09:43:33.7410606Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T09:43:33.7410765Z 
2025-08-19T09:43:33.7410852Z # fees\_h10.tests.test\_smoke
2025-08-19T09:43:33.7411000Z 
2025-08-19T09:43:33.7411085Z <a id="fees_h10.tests"></a>
2025-08-19T09:43:33.7411222Z 
2025-08-19T09:43:33.7411290Z # fees\_h10.tests
2025-08-19T09:43:33.7411397Z 
2025-08-19T09:43:33.7411475Z <a id="fees_h10.client"></a>
2025-08-19T09:43:33.7411614Z 
2025-08-19T09:43:33.7411684Z # fees\_h10.client
2025-08-19T09:43:33.7411792Z 
2025-08-19T09:43:33.7411883Z <a id="fees_h10.repository"></a>
2025-08-19T09:43:33.7412029Z 
2025-08-19T09:43:33.7412107Z # fees\_h10.repository
2025-08-19T09:43:33.7412226Z 
2025-08-19T09:43:33.7412307Z <a id="emailer"></a>
2025-08-19T09:43:33.7412418Z 
2025-08-19T09:43:33.7412483Z # emailer
2025-08-19T09:43:33.7412579Z 
2025-08-19T09:43:33.7412681Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T09:43:33.7412864Z 
2025-08-19T09:43:33.7412963Z # emailer.tests.test\_import\_emailer
2025-08-19T09:43:33.7413125Z 
2025-08-19T09:43:33.7413215Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T09:43:33.7413375Z 
2025-08-19T09:43:33.7413465Z # emailer.tests.test\_smoke
2025-08-19T09:43:33.7413609Z 
2025-08-19T09:43:33.7413688Z <a id="emailer.tests"></a>
2025-08-19T09:43:33.7413826Z 
2025-08-19T09:43:33.7413896Z # emailer.tests
2025-08-19T09:43:33.7414002Z 
2025-08-19T09:43:33.7414089Z <a id="emailer.generate_body"></a>
2025-08-19T09:43:33.7414247Z 
2025-08-19T09:43:33.7414326Z # emailer.generate\_body
2025-08-19T09:43:33.7414451Z 
2025-08-19T09:43:33.7414533Z <a id="llm_server"></a>
2025-08-19T09:43:33.7414651Z 
2025-08-19T09:43:33.7414716Z # llm\_server
2025-08-19T09:43:33.7414825Z 
2025-08-19T09:43:33.7414904Z <a id="llm_server.app"></a>
2025-08-19T09:43:33.7415036Z 
2025-08-19T09:43:33.7415105Z # llm\_server.app
2025-08-19T09:43:33.7415220Z 
