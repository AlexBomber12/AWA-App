2025-08-17T01:42:34.5992353Z ##[group]Run pydoc-markdown
2025-08-17T01:42:34.5992888Z [36;1mpydoc-markdown[0m
2025-08-17T01:42:34.6033534Z shell: /usr/bin/bash -e {0}
2025-08-17T01:42:34.6033774Z env:
2025-08-17T01:42:34.6034004Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:42:34.6034404Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-17T01:42:34.6034797Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:42:34.6035136Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:42:34.6035474Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-17T01:42:34.6035814Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-17T01:42:34.6036098Z ##[endgroup]
2025-08-17T01:42:35.0418367Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-17T01:42:35.0419207Z Unknown key(s) "{'output_directory'}" at:
2025-08-17T01:42:35.0419706Z In "pydoc-markdown.yml"
2025-08-17T01:42:35.0420163Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-17T01:42:35.0420832Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-17T01:42:35.0421620Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-17T01:42:35.0422166Z 
2025-08-17T01:42:35.2494126Z <a id="__init__"></a>
2025-08-17T01:42:35.2494502Z 
2025-08-17T01:42:35.2494624Z # \_\_init\_\_
2025-08-17T01:42:35.2494821Z 
2025-08-17T01:42:35.2494967Z <a id="api"></a>
2025-08-17T01:42:35.2495182Z 
2025-08-17T01:42:35.2495304Z # api
2025-08-17T01:42:35.2495488Z 
2025-08-17T01:42:35.2495649Z <a id="api.tests.test_llm"></a>
2025-08-17T01:42:35.2495937Z 
2025-08-17T01:42:35.2496092Z # api.tests.test\_llm
2025-08-17T01:42:35.2496325Z 
2025-08-17T01:42:35.2496488Z <a id="api.tests.test_imports"></a>
2025-08-17T01:42:35.2496797Z 
2025-08-17T01:42:35.2496959Z # api.tests.test\_imports
2025-08-17T01:42:35.2497207Z 
2025-08-17T01:42:35.2497378Z <a id="api.tests.test_entrypoint"></a>
2025-08-17T01:42:35.2498047Z 
2025-08-17T01:42:35.2498212Z # api.tests.test\_entrypoint
2025-08-17T01:42:35.2498495Z 
2025-08-17T01:42:35.2498659Z <a id="api.tests.test_health"></a>
2025-08-17T01:42:35.2498967Z 
2025-08-17T01:42:35.2499117Z # api.tests.test\_health
2025-08-17T01:42:35.2499370Z 
2025-08-17T01:42:35.2499541Z <a id="api.migrations.env"></a>
2025-08-17T01:42:35.2499823Z 
2025-08-17T01:42:35.2499969Z # api.migrations.env
2025-08-17T01:42:35.2500193Z 
2025-08-17T01:42:35.2500404Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-17T01:42:35.2500763Z 
2025-08-17T01:42:35.2500947Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-17T01:42:35.2501281Z 
2025-08-17T01:42:35.2501471Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-17T01:42:35.2501805Z 
2025-08-17T01:42:35.2501976Z # api.migrations.versions.0004\_fee\_cron
2025-08-17T01:42:35.2502280Z 
2025-08-17T01:42:35.2502543Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-17T01:42:35.2503159Z 
2025-08-17T01:42:35.2503363Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-17T01:42:35.2503611Z 
2025-08-17T01:42:35.2503766Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-17T01:42:35.2503994Z 
2025-08-17T01:42:35.2504139Z # api.migrations.versions.0003\_vendor\_prices
2025-08-17T01:42:35.2504346Z 
2025-08-17T01:42:35.2504503Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-17T01:42:35.2504725Z 
2025-08-17T01:42:35.2504858Z # api.migrations.versions.0024\_create\_buybox
2025-08-17T01:42:35.2505061Z 
2025-08-17T01:42:35.2505212Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-17T01:42:35.2505431Z 
2025-08-17T01:42:35.2505563Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-17T01:42:35.2505771Z 
2025-08-17T01:42:35.2505907Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-17T01:42:35.2506131Z 
2025-08-17T01:42:35.2506270Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-17T01:42:35.2506472Z 
2025-08-17T01:42:35.2506620Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-17T01:42:35.2507128Z 
2025-08-17T01:42:35.2507260Z # api.migrations.versions.0020\_unified\_schema
2025-08-17T01:42:35.2507461Z 
2025-08-17T01:42:35.2507609Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-17T01:42:35.2507821Z 
2025-08-17T01:42:35.2507951Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-17T01:42:35.2508161Z 
2025-08-17T01:42:35.2508291Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-17T01:42:35.2508497Z 
2025-08-17T01:42:35.2508626Z # api.migrations.versions.0001\_baseline
2025-08-17T01:42:35.2508818Z 
2025-08-17T01:42:35.2508929Z <a id="api.migrations.versions"></a>
2025-08-17T01:42:35.2509107Z 
2025-08-17T01:42:35.2509219Z # api.migrations.versions
2025-08-17T01:42:35.2509369Z 
2025-08-17T01:42:35.2509464Z <a id="api.migrations"></a>
2025-08-17T01:42:35.2509618Z 
2025-08-17T01:42:35.2509720Z # api.migrations
2025-08-17T01:42:35.2509843Z 
2025-08-17T01:42:35.2509943Z <a id="api.db"></a>
2025-08-17T01:42:35.2510084Z 
2025-08-17T01:42:35.2510183Z # api.db
2025-08-17T01:42:35.2510297Z 
2025-08-17T01:42:35.2510415Z <a id="api.routes.stats"></a>
2025-08-17T01:42:35.2510567Z 
2025-08-17T01:42:35.2510677Z # api.routes.stats
2025-08-17T01:42:35.2510812Z 
2025-08-17T01:42:35.2510933Z <a id="api.routes.stats.kpi"></a>
2025-08-17T01:42:35.2511106Z 
2025-08-17T01:42:35.2511201Z #### kpi
2025-08-17T01:42:35.2511329Z 
2025-08-17T01:42:35.2511428Z ```python
2025-08-17T01:42:35.2511658Z @router.get("/stats/kpi")
2025-08-17T01:42:35.2511938Z def kpi() -> List[Dict[str, int]]
2025-08-17T01:42:35.2512191Z ```
2025-08-17T01:42:35.2512309Z 
2025-08-17T01:42:35.2512420Z Return KPI metrics (mock).
2025-08-17T01:42:35.2512571Z 
2025-08-17T01:42:35.2512934Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-17T01:42:35.2513132Z 
2025-08-17T01:42:35.2513239Z #### roi\_by\_vendor
2025-08-17T01:42:35.2513376Z 
2025-08-17T01:42:35.2513467Z ```python
2025-08-17T01:42:35.2513682Z @router.get("/stats/roi_by_vendor")
2025-08-17T01:42:35.2514115Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-17T01:42:35.2514408Z ```
2025-08-17T01:42:35.2514517Z 
2025-08-17T01:42:35.2514623Z Return ROI percent by vendor.
2025-08-17T01:42:35.2514779Z 
2025-08-17T01:42:35.2514899Z <a id="api.routes.stats.roi_trend"></a>
2025-08-17T01:42:35.2515086Z 
2025-08-17T01:42:35.2515178Z #### roi\_trend
2025-08-17T01:42:35.2515312Z 
2025-08-17T01:42:35.2515417Z ```python
2025-08-17T01:42:35.2515640Z @router.get("/stats/roi_trend")
2025-08-17T01:42:35.2515919Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-17T01:42:35.2516208Z ```
2025-08-17T01:42:35.2516320Z 
2025-08-17T01:42:35.2516433Z Return 30-day ROI trend.
2025-08-17T01:42:35.2516570Z 
2025-08-17T01:42:35.2516691Z <a id="api.routes.roi"></a>
2025-08-17T01:42:35.2516839Z 
2025-08-17T01:42:35.2516951Z # api.routes.roi
2025-08-17T01:42:35.2517161Z 
2025-08-17T01:42:35.2517268Z <a id="api.routes.health"></a>
2025-08-17T01:42:35.2517461Z 
2025-08-17T01:42:35.2517571Z # api.routes.health
2025-08-17T01:42:35.2517704Z 
2025-08-17T01:42:35.2517819Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-17T01:42:35.2518008Z 
2025-08-17T01:42:35.2518096Z #### MAX\_SKEW
2025-08-17T01:42:35.2518217Z 
2025-08-17T01:42:35.2518333Z seconds
2025-08-17T01:42:35.2518446Z 
2025-08-17T01:42:35.2518560Z <a id="api.routes.health.health"></a>
2025-08-17T01:42:35.2518738Z 
2025-08-17T01:42:35.2518834Z #### health
2025-08-17T01:42:35.2518949Z 
2025-08-17T01:42:35.2519044Z ```python
2025-08-17T01:42:35.2519280Z @router.get("/health", include_in_schema=False)
2025-08-17T01:42:35.2519688Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-17T01:42:35.2520087Z ```
2025-08-17T01:42:35.2520196Z 
2025-08-17T01:42:35.2520337Z Return 200 when DB reachable and clocks are in sync.
2025-08-17T01:42:35.2520543Z 
2025-08-17T01:42:35.2520652Z <a id="api.routes.repository"></a>
2025-08-17T01:42:35.2520828Z 
2025-08-17T01:42:35.2520940Z # api.routes.repository
2025-08-17T01:42:35.2521086Z 
2025-08-17T01:42:35.2521206Z <a id="api.routes"></a>
2025-08-17T01:42:35.2521688Z 
2025-08-17T01:42:35.2521824Z # api.routes
2025-08-17T01:42:35.2522025Z 
2025-08-17T01:42:35.2522183Z <a id="api.models.fee"></a>
2025-08-17T01:42:35.2522441Z 
2025-08-17T01:42:35.2522573Z # api.models.fee
2025-08-17T01:42:35.2523007Z 
2025-08-17T01:42:35.2523163Z <a id="api.models"></a>
2025-08-17T01:42:35.2523396Z 
2025-08-17T01:42:35.2523522Z # api.models
2025-08-17T01:42:35.2523725Z 
2025-08-17T01:42:35.2523831Z <a id="api.roi_repository"></a>
2025-08-17T01:42:35.2523994Z 
2025-08-17T01:42:35.2524091Z # api.roi\_repository
2025-08-17T01:42:35.2524231Z 
2025-08-17T01:42:35.2524330Z <a id="api.main"></a>
2025-08-17T01:42:35.2524462Z 
2025-08-17T01:42:35.2524580Z # api.main
2025-08-17T01:42:35.2524701Z 
2025-08-17T01:42:35.2524809Z <a id="api.main.ready"></a>
2025-08-17T01:42:35.2524969Z 
2025-08-17T01:42:35.2525079Z #### ready
2025-08-17T01:42:35.2525186Z 
2025-08-17T01:42:35.2525280Z ```python
2025-08-17T01:42:35.2525586Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-17T01:42:35.2526059Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-17T01:42:35.2526434Z                                                                       str]
2025-08-17T01:42:35.2526711Z ```
2025-08-17T01:42:35.2526828Z 
2025-08-17T01:42:35.2526949Z Return 200 only when migrations are at head.
2025-08-17T01:42:35.2527142Z 
2025-08-17T01:42:35.2527241Z <a id="api.config"></a>
2025-08-17T01:42:35.2527379Z 
2025-08-17T01:42:35.2527482Z # api.config
2025-08-17T01:42:35.2527600Z 
2025-08-17T01:42:35.2527702Z <a id="etl"></a>
2025-08-17T01:42:35.2527831Z 
2025-08-17T01:42:35.2527943Z # etl
2025-08-17T01:42:35.2528058Z 
2025-08-17T01:42:35.2528170Z <a id="etl.fba_fee_ingestor"></a>
2025-08-17T01:42:35.2528337Z 
2025-08-17T01:42:35.2528458Z # etl.fba\_fee\_ingestor
2025-08-17T01:42:35.2528598Z 
2025-08-17T01:42:35.2528700Z <a id="etl.sp_fees_ingestor"></a>
2025-08-17T01:42:35.2528866Z 
2025-08-17T01:42:35.2528962Z # etl.sp\_fees\_ingestor
2025-08-17T01:42:35.2529277Z 
2025-08-17T01:42:35.2529380Z <a id="etl.keepa_ingestor"></a>
2025-08-17T01:42:35.2529546Z 
2025-08-17T01:42:35.2529642Z # etl.keepa\_ingestor
2025-08-17T01:42:35.2529774Z 
2025-08-17T01:42:35.2529871Z <a id="etl.db"></a>
2025-08-17T01:42:35.2530003Z 
2025-08-17T01:42:35.2530099Z # etl.db
2025-08-17T01:42:35.2530222Z 
2025-08-17T01:42:35.2530362Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-17T01:42:35.2530563Z 
2025-08-17T01:42:35.2530680Z # etl.dialects.amazon\_reimbursements
2025-08-17T01:42:35.2530874Z 
2025-08-17T01:42:35.2530994Z <a id="etl.dialects.amazon_returns"></a>
2025-08-17T01:42:35.2531173Z 
2025-08-17T01:42:35.2531290Z # etl.dialects.amazon\_returns
2025-08-17T01:42:35.2531446Z 
2025-08-17T01:42:35.2531543Z <a id="etl.dialects"></a>
2025-08-17T01:42:35.2531682Z 
2025-08-17T01:42:35.2531786Z # etl.dialects
2025-08-17T01:42:35.2531906Z 
2025-08-17T01:42:35.2531997Z <a id="ingest"></a>
2025-08-17T01:42:35.2532134Z 
2025-08-17T01:42:35.2532239Z # ingest
2025-08-17T01:42:35.2532353Z 
2025-08-17T01:42:35.2532460Z <a id="ingest.tests.test_smoke"></a>
2025-08-17T01:42:35.2532849Z 
2025-08-17T01:42:35.2532981Z # ingest.tests.test\_smoke
2025-08-17T01:42:35.2533148Z 
2025-08-17T01:42:35.2533259Z <a id="ingest.tests"></a>
2025-08-17T01:42:35.2533408Z 
2025-08-17T01:42:35.2533502Z # ingest.tests
2025-08-17T01:42:35.2533629Z 
2025-08-17T01:42:35.2533744Z <a id="ingest.upload_router"></a>
2025-08-17T01:42:35.2533919Z 
2025-08-17T01:42:35.2534029Z # ingest.upload\_router
2025-08-17T01:42:35.2534173Z 
2025-08-17T01:42:35.2534279Z <a id="ingest.email_watcher"></a>
2025-08-17T01:42:35.2534441Z 
2025-08-17T01:42:35.2534547Z # ingest.email\_watcher
2025-08-17T01:42:35.2534683Z 
2025-08-17T01:42:35.2534791Z <a id="ingest.email_watcher.main"></a>
2025-08-17T01:42:35.2534976Z 
2025-08-17T01:42:35.2535076Z #### main
2025-08-17T01:42:35.2535183Z 
2025-08-17T01:42:35.2535268Z ```python
2025-08-17T01:42:35.2535499Z def main() -> dict[str, str]
2025-08-17T01:42:35.2535736Z ```
2025-08-17T01:42:35.2535845Z 
2025-08-17T01:42:35.2536141Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-17T01:42:35.2536377Z 
2025-08-17T01:42:35.2536583Z Returns {"status": "success"} when processing completes.
2025-08-17T01:42:35.2536806Z 
2025-08-17T01:42:35.2536913Z <a id="ingest.ingest_router"></a>
2025-08-17T01:42:35.2537083Z 
2025-08-17T01:42:35.2537189Z # ingest.ingest\_router
2025-08-17T01:42:35.2537330Z 
2025-08-17T01:42:35.2537435Z <a id="logistics_etl"></a>
2025-08-17T01:42:35.2537580Z 
2025-08-17T01:42:35.2537685Z # logistics\_etl
2025-08-17T01:42:35.2537812Z 
2025-08-17T01:42:35.2537925Z Daily logistics ETL job.
2025-08-17T01:42:35.2538061Z 
2025-08-17T01:42:35.2538173Z <a id="logistics_etl.__main__"></a>
2025-08-17T01:42:35.2538343Z 
2025-08-17T01:42:35.2538440Z # logistics\_etl.\_\_main\_\_
2025-08-17T01:42:35.2538591Z 
2025-08-17T01:42:35.2538721Z <a id="logistics_etl.tests.conftest"></a>
2025-08-17T01:42:35.2538911Z 
2025-08-17T01:42:35.2539014Z # logistics\_etl.tests.conftest
2025-08-17T01:42:35.2539182Z 
2025-08-17T01:42:35.2539315Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-17T01:42:35.2539513Z 
2025-08-17T01:42:35.2539627Z # logistics\_etl.tests.test\_repository
2025-08-17T01:42:35.2539810Z 
2025-08-17T01:42:35.2539923Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-17T01:42:35.2540105Z 
2025-08-17T01:42:35.2540213Z # logistics\_etl.tests.test\_cron
2025-08-17T01:42:35.2540384Z 
2025-08-17T01:42:35.2540497Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-17T01:42:35.2540686Z 
2025-08-17T01:42:35.2540798Z # logistics\_etl.tests.test\_imports
2025-08-17T01:42:35.2540966Z 
2025-08-17T01:42:35.2541082Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-17T01:42:35.2541267Z 
2025-08-17T01:42:35.2541369Z # logistics\_etl.tests.test\_smoke
2025-08-17T01:42:35.2541534Z 
2025-08-17T01:42:35.2541655Z <a id="logistics_etl.tests.test_client"></a>
2025-08-17T01:42:35.2541846Z 
2025-08-17T01:42:35.2541950Z # logistics\_etl.tests.test\_client
2025-08-17T01:42:35.2542230Z 
2025-08-17T01:42:35.2542337Z <a id="logistics_etl.tests"></a>
2025-08-17T01:42:35.2542501Z 
2025-08-17T01:42:35.2542753Z # logistics\_etl.tests
2025-08-17T01:42:35.2542948Z 
2025-08-17T01:42:35.2543062Z <a id="logistics_etl.flow"></a>
2025-08-17T01:42:35.2543215Z 
2025-08-17T01:42:35.2543306Z # logistics\_etl.flow
2025-08-17T01:42:35.2543446Z 
2025-08-17T01:42:35.2543545Z <a id="logistics_etl.client"></a>
2025-08-17T01:42:35.2543710Z 
2025-08-17T01:42:35.2543820Z # logistics\_etl.client
2025-08-17T01:42:35.2543958Z 
2025-08-17T01:42:35.2544070Z <a id="logistics_etl.cron"></a>
2025-08-17T01:42:35.2544236Z 
2025-08-17T01:42:35.2544340Z # logistics\_etl.cron
2025-08-17T01:42:35.2544476Z 
2025-08-17T01:42:35.2544572Z <a id="logistics_etl.db"></a>
2025-08-17T01:42:35.2544732Z 
2025-08-17T01:42:35.2544824Z # logistics\_etl.db
2025-08-17T01:42:35.2544950Z 
2025-08-17T01:42:35.2545068Z <a id="logistics_etl.repository"></a>
2025-08-17T01:42:35.2545240Z 
2025-08-17T01:42:35.2545341Z # logistics\_etl.repository
2025-08-17T01:42:35.2545503Z 
2025-08-17T01:42:35.2545603Z <a id="alert_bot"></a>
2025-08-17T01:42:35.2545735Z 
2025-08-17T01:42:35.2545821Z # alert\_bot
2025-08-17T01:42:35.2545940Z 
2025-08-17T01:42:35.2546050Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-17T01:42:35.2546230Z 
2025-08-17T01:42:35.2546336Z # alert\_bot.tests.test\_smoke
2025-08-17T01:42:35.2546493Z 
2025-08-17T01:42:35.2546594Z <a id="alert_bot.tests"></a>
2025-08-17T01:42:35.2546745Z 
2025-08-17T01:42:35.2546843Z # alert\_bot.tests
2025-08-17T01:42:35.2546965Z 
2025-08-17T01:42:35.2547062Z <a id="alert_bot.alert_bot"></a>
2025-08-17T01:42:35.2547227Z 
2025-08-17T01:42:35.2547330Z # alert\_bot.alert\_bot
2025-08-17T01:42:35.2547465Z 
2025-08-17T01:42:35.2547567Z <a id="alert_bot.rules"></a>
2025-08-17T01:42:35.2547716Z 
2025-08-17T01:42:35.2547807Z # alert\_bot.rules
2025-08-17T01:42:35.2547929Z 
2025-08-17T01:42:35.2548024Z <a id="common"></a>
2025-08-17T01:42:35.2548152Z 
2025-08-17T01:42:35.2548242Z # common
2025-08-17T01:42:35.2548369Z 
2025-08-17T01:42:35.2548589Z <a id="common.dsn"></a>
2025-08-17T01:42:35.2548730Z 
2025-08-17T01:42:35.2548821Z # common.dsn
2025-08-17T01:42:35.2548944Z 
2025-08-17T01:42:35.2549053Z <a id="common.dsn.build_dsn"></a>
2025-08-17T01:42:35.2549217Z 
2025-08-17T01:42:35.2549326Z #### build\_dsn
2025-08-17T01:42:35.2549450Z 
2025-08-17T01:42:35.2549544Z ```python
2025-08-17T01:42:35.2549760Z def build_dsn(sync: bool = True) -> str
2025-08-17T01:42:35.2550007Z ```
2025-08-17T01:42:35.2550127Z 
2025-08-17T01:42:35.2550265Z Return a Postgres DSN, validating required variables.
2025-08-17T01:42:35.2550481Z 
2025-08-17T01:42:35.2550698Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-17T01:42:35.2551162Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-17T01:42:35.2551614Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-17T01:42:35.2551995Z missing.
2025-08-17T01:42:35.2552120Z 
2025-08-17T01:42:35.2552235Z <a id="common.models_vendor"></a>
2025-08-17T01:42:35.2552406Z 
2025-08-17T01:42:35.2552502Z # common.models\_vendor
2025-08-17T01:42:35.2552785Z 
2025-08-17T01:42:35.2552905Z <a id="common.models_vendor.Vendor"></a>
2025-08-17T01:42:35.2553093Z 
2025-08-17T01:42:35.2553202Z ## Vendor Objects
2025-08-17T01:42:35.2553333Z 
2025-08-17T01:42:35.2553419Z ```python
2025-08-17T01:42:35.2553622Z class Vendor(Base)
2025-08-17T01:42:35.2553847Z ```
2025-08-17T01:42:35.2553958Z 
2025-08-17T01:42:35.2554068Z Vendor of inventory items.
2025-08-17T01:42:35.2554224Z 
2025-08-17T01:42:35.2554341Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-17T01:42:35.2554536Z 
2025-08-17T01:42:35.2554636Z ## VendorPrice Objects
2025-08-17T01:42:35.2554773Z 
2025-08-17T01:42:35.2554868Z ```python
2025-08-17T01:42:35.2555104Z class VendorPrice(Base)
2025-08-17T01:42:35.2555322Z ```
2025-08-17T01:42:35.2555441Z 
2025-08-17T01:42:35.2555574Z Association table linking vendors to pricing.
2025-08-17T01:42:35.2555771Z 
2025-08-17T01:42:35.2556168Z <a id="common.db_url"></a>
2025-08-17T01:42:35.2556455Z 
2025-08-17T01:42:35.2556595Z # common.db\_url
2025-08-17T01:42:35.2556797Z 
2025-08-17T01:42:35.2556963Z <a id="common.db_url.build_url"></a>
2025-08-17T01:42:35.2557271Z 
2025-08-17T01:42:35.2557399Z #### build\_url
2025-08-17T01:42:35.2557594Z 
2025-08-17T01:42:35.2557693Z ```python
2025-08-17T01:42:35.2557923Z def build_url(async_: bool = True) -> str
2025-08-17T01:42:35.2558199Z ```
2025-08-17T01:42:35.2558307Z 
2025-08-17T01:42:35.2558429Z Return Postgres DSN from env or PG_* parts.
2025-08-17T01:42:35.2558637Z 
2025-08-17T01:42:35.2558746Z <a id="common.keepa"></a>
2025-08-17T01:42:35.2558896Z 
2025-08-17T01:42:35.2559002Z # common.keepa
2025-08-17T01:42:35.2559123Z 
2025-08-17T01:42:35.2559232Z <a id="common.llm"></a>
2025-08-17T01:42:35.2559454Z 
2025-08-17T01:42:35.2559577Z # common.llm
2025-08-17T01:42:35.2559751Z 
2025-08-17T01:42:35.2559890Z <a id="common.settings"></a>
2025-08-17T01:42:35.2560145Z 
2025-08-17T01:42:35.2560280Z # common.settings
2025-08-17T01:42:35.2560471Z 
2025-08-17T01:42:35.2560603Z <a id="common.db"></a>
2025-08-17T01:42:35.2560805Z 
2025-08-17T01:42:35.2560915Z # common.db
2025-08-17T01:42:35.2561077Z 
2025-08-17T01:42:35.2561244Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-17T01:42:35.2561546Z 
2025-08-17T01:42:35.2561680Z #### build\_sqlalchemy\_url
2025-08-17T01:42:35.2561917Z 
2025-08-17T01:42:35.2562026Z ```python
2025-08-17T01:42:35.2562319Z def build_sqlalchemy_url() -> str
2025-08-17T01:42:35.2562872Z ```
2025-08-17T01:42:35.2563026Z 
2025-08-17T01:42:35.2563202Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T01:42:35.2563508Z 
2025-08-17T01:42:35.2563630Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-17T01:42:35.2563825Z 
2025-08-17T01:42:35.2563923Z #### build\_asyncpg\_dsn
2025-08-17T01:42:35.2564067Z 
2025-08-17T01:42:35.2564164Z ```python
2025-08-17T01:42:35.2564380Z def build_asyncpg_dsn() -> str
2025-08-17T01:42:35.2564617Z ```
2025-08-17T01:42:35.2564734Z 
2025-08-17T01:42:35.2564890Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T01:42:35.2565555Z 
2025-08-17T01:42:35.2565678Z <a id="common.db.refresh_mvs"></a>
2025-08-17T01:42:35.2565849Z 
2025-08-17T01:42:35.2565942Z #### refresh\_mvs
2025-08-17T01:42:35.2566073Z 
2025-08-17T01:42:35.2566161Z ```python
2025-08-17T01:42:35.2566403Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T01:42:35.2566707Z ```
2025-08-17T01:42:35.2566815Z 
2025-08-17T01:42:35.2566978Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T01:42:35.2567210Z 
2025-08-17T01:42:35.2567309Z <a id="common.config"></a>
2025-08-17T01:42:35.2567459Z 
2025-08-17T01:42:35.2567571Z # common.config
2025-08-17T01:42:35.2567699Z 
2025-08-17T01:42:35.2567804Z <a id="common.base"></a>
2025-08-17T01:42:35.2567956Z 
2025-08-17T01:42:35.2568051Z # common.base
2025-08-17T01:42:35.2568170Z 
2025-08-17T01:42:35.2568279Z <a id="common.base.Base"></a>
2025-08-17T01:42:35.2568445Z 
2025-08-17T01:42:35.2568544Z ## Base Objects
2025-08-17T01:42:35.2568675Z 
2025-08-17T01:42:35.2568798Z ```python
2025-08-17T01:42:35.2569021Z class Base(DeclarativeBase)
2025-08-17T01:42:35.2569272Z ```
2025-08-17T01:42:35.2569382Z 
2025-08-17T01:42:35.2569497Z Base class for SQLAlchemy models.
2025-08-17T01:42:35.2569671Z 
2025-08-17T01:42:35.2569775Z <a id="repricer"></a>
2025-08-17T01:42:35.2569912Z 
2025-08-17T01:42:35.2570026Z # repricer
2025-08-17T01:42:35.2570146Z 
2025-08-17T01:42:35.2570256Z <a id="repricer.app.schemas"></a>
2025-08-17T01:42:35.2570424Z 
2025-08-17T01:42:35.2570541Z # repricer.app.schemas
2025-08-17T01:42:35.2570678Z 
2025-08-17T01:42:35.2570787Z <a id="repricer.app.deps"></a>
2025-08-17T01:42:35.2570963Z 
2025-08-17T01:42:35.2571083Z # repricer.app.deps
2025-08-17T01:42:35.2571217Z 
2025-08-17T01:42:35.2571351Z Placeholder module for Keepa / SP-API clients.
2025-08-17T01:42:35.2571565Z 
2025-08-17T01:42:35.2571677Z <a id="repricer.app.logic"></a>
2025-08-17T01:42:35.2571837Z 
2025-08-17T01:42:35.2571955Z # repricer.app.logic
2025-08-17T01:42:35.2572221Z 
2025-08-17T01:42:35.2572343Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-17T01:42:35.2572539Z 
2025-08-17T01:42:35.2572782Z #### MIN\_MARGIN
2025-08-17T01:42:35.2572909Z 
2025-08-17T01:42:35.2573004Z 15 % ROI
2025-08-17T01:42:35.2573120Z 
2025-08-17T01:42:35.2573246Z <a id="repricer.app.logic.compute_price"></a>
2025-08-17T01:42:35.2573453Z 
2025-08-17T01:42:35.2573564Z #### compute\_price
2025-08-17T01:42:35.2573691Z 
2025-08-17T01:42:35.2573790Z ```python
2025-08-17T01:42:35.2574088Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-17T01:42:35.2574436Z ```
2025-08-17T01:42:35.2574552Z 
2025-08-17T01:42:35.2574681Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-17T01:42:35.2574986Z Replace with real competitive logic later.
2025-08-17T01:42:35.2575178Z 
2025-08-17T01:42:35.2575284Z <a id="repricer.app.main"></a>
2025-08-17T01:42:35.2575444Z 
2025-08-17T01:42:35.2575559Z # repricer.app.main
2025-08-17T01:42:35.2575684Z 
2025-08-17T01:42:35.2575790Z <a id="repricer.app"></a>
2025-08-17T01:42:35.2575944Z 
2025-08-17T01:42:35.2576041Z # repricer.app
2025-08-17T01:42:35.2576159Z 
2025-08-17T01:42:35.2576273Z <a id="repricer.tests.test_imports"></a>
2025-08-17T01:42:35.2576475Z 
2025-08-17T01:42:35.2576584Z # repricer.tests.test\_imports
2025-08-17T01:42:35.2576753Z 
2025-08-17T01:42:35.2576875Z <a id="repricer.tests.test_smoke"></a>
2025-08-17T01:42:35.2577058Z 
2025-08-17T01:42:35.2577167Z # repricer.tests.test\_smoke
2025-08-17T01:42:35.2577326Z 
2025-08-17T01:42:35.2577437Z <a id="repricer.tests"></a>
2025-08-17T01:42:35.2577590Z 
2025-08-17T01:42:35.2577739Z # repricer.tests
2025-08-17T01:42:35.2577868Z 
2025-08-17T01:42:35.2577967Z <a id="db"></a>
2025-08-17T01:42:35.2578089Z 
2025-08-17T01:42:35.2578193Z # db
2025-08-17T01:42:35.2578297Z 
2025-08-17T01:42:35.2578397Z <a id="db.utils.views"></a>
2025-08-17T01:42:35.2578551Z 
2025-08-17T01:42:35.2578657Z # db.utils.views
2025-08-17T01:42:35.2578778Z 
2025-08-17T01:42:35.2578896Z <a id="db.utils.views.replace_view"></a>
2025-08-17T01:42:35.2579217Z 
2025-08-17T01:42:35.2579307Z #### replace\_view
2025-08-17T01:42:35.2579436Z 
2025-08-17T01:42:35.2579537Z ```python
2025-08-17T01:42:35.2579777Z def replace_view(name: str, new_sql: str) -> None
2025-08-17T01:42:35.2580076Z ```
2025-08-17T01:42:35.2580183Z 
2025-08-17T01:42:35.2580299Z Drop and recreate a SQL view atomically.
2025-08-17T01:42:35.2580488Z 
2025-08-17T01:42:35.2580599Z <a id="db.utils"></a>
2025-08-17T01:42:35.2580736Z 
2025-08-17T01:42:35.2580858Z # db.utils
2025-08-17T01:42:35.2580978Z 
2025-08-17T01:42:35.2581086Z <a id="price_importer"></a>
2025-08-17T01:42:35.2581239Z 
2025-08-17T01:42:35.2581352Z # price\_importer
2025-08-17T01:42:35.2581485Z 
2025-08-17T01:42:35.2581614Z <a id="price_importer.services_common.dsn"></a>
2025-08-17T01:42:35.2581811Z 
2025-08-17T01:42:35.2581935Z # price\_importer.services\_common.dsn
2025-08-17T01:42:35.2582112Z 
2025-08-17T01:42:35.2582251Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-17T01:42:35.2582482Z 
2025-08-17T01:42:35.2582581Z #### build\_dsn
2025-08-17T01:42:35.2582810Z 
2025-08-17T01:42:35.2582918Z ```python
2025-08-17T01:42:35.2583141Z def build_dsn(sync: bool = True) -> str
2025-08-17T01:42:35.2583406Z ```
2025-08-17T01:42:35.2583523Z 
2025-08-17T01:42:35.2583732Z Return safe DSN.
2025-08-17T01:42:35.2583872Z 
2025-08-17T01:42:35.2584236Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-17T01:42:35.2584454Z 
2025-08-17T01:42:35.2584600Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-17T01:42:35.2584826Z 
2025-08-17T01:42:35.2584958Z # price\_importer.services\_common.models\_vendor
2025-08-17T01:42:35.2585164Z 
2025-08-17T01:42:35.2585302Z <a id="price_importer.services_common.db_url"></a>
2025-08-17T01:42:35.2585510Z 
2025-08-17T01:42:35.2585630Z # price\_importer.services\_common.db\_url
2025-08-17T01:42:35.2585827Z 
2025-08-17T01:42:35.2585975Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-17T01:42:35.2586333Z 
2025-08-17T01:42:35.2586429Z #### build\_url
2025-08-17T01:42:35.2586557Z 
2025-08-17T01:42:35.2586647Z ```python
2025-08-17T01:42:35.2586885Z def build_url(async_: bool = True) -> str
2025-08-17T01:42:35.2587156Z ```
2025-08-17T01:42:35.2587266Z 
2025-08-17T01:42:35.2587392Z Return Postgres DSN from env or PG_* parts.
2025-08-17T01:42:35.2587579Z 
2025-08-17T01:42:35.2587703Z <a id="price_importer.services_common.keepa"></a>
2025-08-17T01:42:35.2587907Z 
2025-08-17T01:42:35.2588021Z # price\_importer.services\_common.keepa
2025-08-17T01:42:35.2588201Z 
2025-08-17T01:42:35.2588339Z <a id="price_importer.services_common.llm"></a>
2025-08-17T01:42:35.2588530Z 
2025-08-17T01:42:35.2588645Z # price\_importer.services\_common.llm
2025-08-17T01:42:35.2588819Z 
2025-08-17T01:42:35.2588960Z <a id="price_importer.services_common.settings"></a>
2025-08-17T01:42:35.2589161Z 
2025-08-17T01:42:35.2589279Z # price\_importer.services\_common.settings
2025-08-17T01:42:35.2589473Z 
2025-08-17T01:42:35.2589598Z <a id="price_importer.services_common.db"></a>
2025-08-17T01:42:35.2589799Z 
2025-08-17T01:42:35.2589921Z # price\_importer.services\_common.db
2025-08-17T01:42:35.2590099Z 
2025-08-17T01:42:35.2590268Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-17T01:42:35.2590521Z 
2025-08-17T01:42:35.2590626Z #### build\_sqlalchemy\_url
2025-08-17T01:42:35.2590778Z 
2025-08-17T01:42:35.2590873Z ```python
2025-08-17T01:42:35.2591094Z def build_sqlalchemy_url() -> str
2025-08-17T01:42:35.2591355Z ```
2025-08-17T01:42:35.2591468Z 
2025-08-17T01:42:35.2591590Z Return Postgres URL for SQLAlchemy engines.
2025-08-17T01:42:35.2591775Z 
2025-08-17T01:42:35.2591942Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-17T01:42:35.2592181Z 
2025-08-17T01:42:35.2592283Z #### build\_asyncpg\_dsn
2025-08-17T01:42:35.2592435Z 
2025-08-17T01:42:35.2592525Z ```python
2025-08-17T01:42:35.2592905Z def build_asyncpg_dsn() -> str
2025-08-17T01:42:35.2593158Z ```
2025-08-17T01:42:35.2593275Z 
2025-08-17T01:42:35.2593427Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-17T01:42:35.2593788Z 
2025-08-17T01:42:35.2593943Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-17T01:42:35.2594164Z 
2025-08-17T01:42:35.2594274Z #### refresh\_mvs
2025-08-17T01:42:35.2594397Z 
2025-08-17T01:42:35.2594486Z ```python
2025-08-17T01:42:35.2594726Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-17T01:42:35.2595026Z ```
2025-08-17T01:42:35.2595148Z 
2025-08-17T01:42:35.2595296Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-17T01:42:35.2595524Z 
2025-08-17T01:42:35.2595651Z <a id="price_importer.services_common"></a>
2025-08-17T01:42:35.2595844Z 
2025-08-17T01:42:35.2595960Z # price\_importer.services\_common
2025-08-17T01:42:35.2596136Z 
2025-08-17T01:42:35.2596258Z <a id="price_importer.services_common.base"></a>
2025-08-17T01:42:35.2596453Z 
2025-08-17T01:42:35.2596564Z # price\_importer.services\_common.base
2025-08-17T01:42:35.2596750Z 
2025-08-17T01:42:35.2596864Z <a id="price_importer.normaliser"></a>
2025-08-17T01:42:35.2597044Z 
2025-08-17T01:42:35.2597158Z # price\_importer.normaliser
2025-08-17T01:42:35.2597313Z 
2025-08-17T01:42:35.2597439Z <a id="price_importer.common.models_vendor"></a>
2025-08-17T01:42:35.2597638Z 
2025-08-17T01:42:35.2597752Z # price\_importer.common.models\_vendor
2025-08-17T01:42:35.2597933Z 
2025-08-17T01:42:35.2598049Z <a id="price_importer.common.db_url"></a>
2025-08-17T01:42:35.2598241Z 
2025-08-17T01:42:35.2598349Z # price\_importer.common.db\_url
2025-08-17T01:42:35.2598514Z 
2025-08-17T01:42:35.2598642Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-17T01:42:35.2598839Z 
2025-08-17T01:42:35.2598930Z #### make\_dsn
2025-08-17T01:42:35.2599063Z 
2025-08-17T01:42:35.2599165Z ```python
2025-08-17T01:42:35.2599390Z def make_dsn(async_: bool = False) -> str
2025-08-17T01:42:35.2599669Z ```
2025-08-17T01:42:35.2599772Z 
2025-08-17T01:42:35.2599910Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-17T01:42:35.2600249Z 
2025-08-17T01:42:35.2600388Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-17T01:42:35.2600596Z 
2025-08-17T01:42:35.2600697Z #### build\_url
2025-08-17T01:42:35.2600827Z 
2025-08-17T01:42:35.2600928Z ```python
2025-08-17T01:42:35.2601166Z def build_url(async_: bool = False) -> str
2025-08-17T01:42:35.2601423Z ```
2025-08-17T01:42:35.2601543Z 
2025-08-17T01:42:35.2601686Z Return Postgres DSN built from environment variables.
2025-08-17T01:42:35.2601901Z 
2025-08-17T01:42:35.2602021Z <a id="price_importer.common"></a>
2025-08-17T01:42:35.2602187Z 
2025-08-17T01:42:35.2602304Z # price\_importer.common
2025-08-17T01:42:35.2602451Z 
2025-08-17T01:42:35.2602569Z <a id="price_importer.common.base"></a>
2025-08-17T01:42:35.2602854Z 
2025-08-17T01:42:35.2602963Z # price\_importer.common.base
2025-08-17T01:42:35.2603122Z 
2025-08-17T01:42:35.2603238Z <a id="price_importer.tests.conftest"></a>
2025-08-17T01:42:35.2603424Z 
2025-08-17T01:42:35.2603536Z # price\_importer.tests.conftest
2025-08-17T01:42:35.2603707Z 
2025-08-17T01:42:35.2603836Z <a id="price_importer.tests.test_reader"></a>
2025-08-17T01:42:35.2604028Z 
2025-08-17T01:42:35.2604149Z # price\_importer.tests.test\_reader
2025-08-17T01:42:35.2604325Z 
2025-08-17T01:42:35.2604442Z <a id="price_importer.tests.test_imports"></a>
2025-08-17T01:42:35.2604632Z 
2025-08-17T01:42:35.2604750Z # price\_importer.tests.test\_imports
2025-08-17T01:42:35.2604926Z 
2025-08-17T01:42:35.2605052Z <a id="price_importer.tests.test_smoke"></a>
2025-08-17T01:42:35.2605237Z 
2025-08-17T01:42:35.2605347Z # price\_importer.tests.test\_smoke
2025-08-17T01:42:35.2605518Z 
2025-08-17T01:42:35.2605652Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-17T01:42:35.2605849Z 
2025-08-17T01:42:35.2605964Z # price\_importer.tests.test\_normaliser
2025-08-17T01:42:35.2606150Z 
2025-08-17T01:42:35.2606267Z <a id="price_importer.tests"></a>
2025-08-17T01:42:35.2606431Z 
2025-08-17T01:42:35.2606543Z # price\_importer.tests
2025-08-17T01:42:35.2606686Z 
2025-08-17T01:42:35.2606798Z <a id="price_importer.reader"></a>
2025-08-17T01:42:35.2607124Z 
2025-08-17T01:42:35.2607228Z # price\_importer.reader
2025-08-17T01:42:35.2607369Z 
2025-08-17T01:42:35.2607491Z <a id="price_importer.reader.load_file"></a>
2025-08-17T01:42:35.2607684Z 
2025-08-17T01:42:35.2607774Z #### load\_file
2025-08-17T01:42:35.2607893Z 
2025-08-17T01:42:35.2607985Z ```python
2025-08-17T01:42:35.2608222Z def load_file(path: str | Path) -> Any
2025-08-17T01:42:35.2608492Z ```
2025-08-17T01:42:35.2608608Z 
2025-08-17T01:42:35.2608726Z Return DataFrame from CSV or Excel file.
2025-08-17T01:42:35.2608916Z 
2025-08-17T01:42:35.2609041Z Raises RuntimeError if pandas is unavailable.
2025-08-17T01:42:35.2609248Z 
2025-08-17T01:42:35.2609365Z <a id="price_importer.repository"></a>
2025-08-17T01:42:35.2609553Z 
2025-08-17T01:42:35.2609657Z # price\_importer.repository
2025-08-17T01:42:35.2609815Z 
2025-08-17T01:42:35.2609936Z <a id="price_importer.import"></a>
2025-08-17T01:42:35.2610105Z 
2025-08-17T01:42:35.2610219Z # price\_importer.import
2025-08-17T01:42:35.2610368Z 
2025-08-17T01:42:35.2610479Z <a id="fees_h10"></a>
2025-08-17T01:42:35.2610608Z 
2025-08-17T01:42:35.2610703Z # fees\_h10
2025-08-17T01:42:35.2610828Z 
2025-08-17T01:42:35.2610928Z <a id="fees_h10.worker"></a>
2025-08-17T01:42:35.2611074Z 
2025-08-17T01:42:35.2611183Z # fees\_h10.worker
2025-08-17T01:42:35.2611310Z 
2025-08-17T01:42:35.2611440Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-17T01:42:35.2611635Z 
2025-08-17T01:42:35.2611746Z #### list\_active\_asins
2025-08-17T01:42:35.2611886Z 
2025-08-17T01:42:35.2611982Z ```python
2025-08-17T01:42:35.2612210Z def list_active_asins() -> list[str]
2025-08-17T01:42:35.2612464Z ```
2025-08-17T01:42:35.2612576Z 
2025-08-17T01:42:35.2612842Z Return known ASINs or an empty list if unavailable.
2025-08-17T01:42:35.2613053Z 
2025-08-17T01:42:35.2613166Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-17T01:42:35.2613335Z 
2025-08-17T01:42:35.2613443Z # fees\_h10.tests.test\_smoke
2025-08-17T01:42:35.2613718Z 
2025-08-17T01:42:35.2613839Z <a id="fees_h10.tests"></a>
2025-08-17T01:42:35.2613986Z 
2025-08-17T01:42:35.2614080Z # fees\_h10.tests
2025-08-17T01:42:35.2614214Z 
2025-08-17T01:42:35.2614316Z <a id="fees_h10.client"></a>
2025-08-17T01:42:35.2614465Z 
2025-08-17T01:42:35.2614570Z # fees\_h10.client
2025-08-17T01:42:35.2614696Z 
2025-08-17T01:42:35.2614799Z <a id="fees_h10.repository"></a>
2025-08-17T01:42:35.2614954Z 
2025-08-17T01:42:35.2615065Z # fees\_h10.repository
2025-08-17T01:42:35.2615197Z 
2025-08-17T01:42:35.2615303Z <a id="emailer"></a>
2025-08-17T01:42:35.2615439Z 
2025-08-17T01:42:35.2615526Z # emailer
2025-08-17T01:42:35.2615633Z 
2025-08-17T01:42:35.2615750Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-17T01:42:35.2615951Z 
2025-08-17T01:42:35.2616066Z # emailer.tests.test\_import\_emailer
2025-08-17T01:42:35.2616241Z 
2025-08-17T01:42:35.2616355Z <a id="emailer.tests.test_smoke"></a>
2025-08-17T01:42:35.2616525Z 
2025-08-17T01:42:35.2616624Z # emailer.tests.test\_smoke
2025-08-17T01:42:35.2616782Z 
2025-08-17T01:42:35.2616885Z <a id="emailer.tests"></a>
2025-08-17T01:42:35.2617034Z 
2025-08-17T01:42:35.2617123Z # emailer.tests
2025-08-17T01:42:35.2617248Z 
2025-08-17T01:42:35.2617353Z <a id="emailer.generate_body"></a>
2025-08-17T01:42:35.2617520Z 
2025-08-17T01:42:35.2617637Z # emailer.generate\_body
2025-08-17T01:42:35.2617781Z 
2025-08-17T01:42:35.2617884Z <a id="llm_server"></a>
2025-08-17T01:42:35.2618024Z 
2025-08-17T01:42:35.2618127Z # llm\_server
2025-08-17T01:42:35.2618249Z 
2025-08-17T01:42:35.2618349Z <a id="llm_server.app"></a>
2025-08-17T01:42:35.2618506Z 
2025-08-17T01:42:35.2618608Z # llm\_server.app
2025-08-17T01:42:35.2618731Z 
