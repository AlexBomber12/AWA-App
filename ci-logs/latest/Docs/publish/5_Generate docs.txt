2025-08-18T08:59:27.7155994Z ##[group]Run pydoc-markdown
2025-08-18T08:59:27.7156297Z [36;1mpydoc-markdown[0m
2025-08-18T08:59:27.7196509Z shell: /usr/bin/bash -e {0}
2025-08-18T08:59:27.7196736Z env:
2025-08-18T08:59:27.7196980Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:59:27.7197395Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T08:59:27.7197775Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:59:27.7198116Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:59:27.7198451Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T08:59:27.7198792Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T08:59:27.7199071Z ##[endgroup]
2025-08-18T08:59:28.0618575Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T08:59:28.0619409Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T08:59:28.0619953Z In "pydoc-markdown.yml"
2025-08-18T08:59:28.0620445Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T08:59:28.0621520Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T08:59:28.0622446Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T08:59:28.0623147Z 
2025-08-18T08:59:28.3498548Z <a id="__init__"></a>
2025-08-18T08:59:28.3498878Z 
2025-08-18T08:59:28.3499018Z # \_\_init\_\_
2025-08-18T08:59:28.3499268Z 
2025-08-18T08:59:28.3499424Z <a id="api"></a>
2025-08-18T08:59:28.3499673Z 
2025-08-18T08:59:28.3499824Z # api
2025-08-18T08:59:28.3500001Z 
2025-08-18T08:59:28.3500152Z <a id="api.errors"></a>
2025-08-18T08:59:28.3500409Z 
2025-08-18T08:59:28.3500537Z # api.errors
2025-08-18T08:59:28.3500723Z 
2025-08-18T08:59:28.3501263Z <a id="api.tests.test_errors_json"></a>
2025-08-18T08:59:28.3501638Z 
2025-08-18T08:59:28.3501816Z # api.tests.test\_errors\_json
2025-08-18T08:59:28.3502116Z 
2025-08-18T08:59:28.3502296Z <a id="api.tests.test_llm"></a>
2025-08-18T08:59:28.3502593Z 
2025-08-18T08:59:28.3503149Z # api.tests.test\_llm
2025-08-18T08:59:28.3503424Z 
2025-08-18T08:59:28.3503596Z <a id="api.tests.test_imports"></a>
2025-08-18T08:59:28.3503909Z 
2025-08-18T08:59:28.3504063Z # api.tests.test\_imports
2025-08-18T08:59:28.3504331Z 
2025-08-18T08:59:28.3504523Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T08:59:28.3504875Z 
2025-08-18T08:59:28.3505051Z # api.tests.test\_entrypoint
2025-08-18T08:59:28.3505227Z 
2025-08-18T08:59:28.3505333Z <a id="api.tests.test_health"></a>
2025-08-18T08:59:28.3505529Z 
2025-08-18T08:59:28.3505622Z # api.tests.test\_health
2025-08-18T08:59:28.3505779Z 
2025-08-18T08:59:28.3506074Z <a id="api.logging_config"></a>
2025-08-18T08:59:28.3506250Z 
2025-08-18T08:59:28.3506339Z # api.logging\_config
2025-08-18T08:59:28.3506481Z 
2025-08-18T08:59:28.3506587Z <a id="api.migrations.env"></a>
2025-08-18T08:59:28.3506758Z 
2025-08-18T08:59:28.3506849Z # api.migrations.env
2025-08-18T08:59:28.3506996Z 
2025-08-18T08:59:28.3507153Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T08:59:28.3507427Z 
2025-08-18T08:59:28.3507560Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T08:59:28.3507798Z 
2025-08-18T08:59:28.3507932Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T08:59:28.3508170Z 
2025-08-18T08:59:28.3508291Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T08:59:28.3508506Z 
2025-08-18T08:59:28.3508695Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T08:59:28.3508988Z 
2025-08-18T08:59:28.3509121Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T08:59:28.3509338Z 
2025-08-18T08:59:28.3509463Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T08:59:28.3509662Z 
2025-08-18T08:59:28.3509766Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T08:59:28.3509947Z 
2025-08-18T08:59:28.3510067Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T08:59:28.3510259Z 
2025-08-18T08:59:28.3510358Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T08:59:28.3510545Z 
2025-08-18T08:59:28.3511095Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T08:59:28.3511317Z 
2025-08-18T08:59:28.3511432Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T08:59:28.3511618Z 
2025-08-18T08:59:28.3511731Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T08:59:28.3511928Z 
2025-08-18T08:59:28.3512031Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T08:59:28.3512215Z 
2025-08-18T08:59:28.3512336Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T08:59:28.3512542Z 
2025-08-18T08:59:28.3512645Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T08:59:28.3512825Z 
2025-08-18T08:59:28.3512965Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T08:59:28.3513181Z 
2025-08-18T08:59:28.3513297Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T08:59:28.3513500Z 
2025-08-18T08:59:28.3513618Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T08:59:28.3513822Z 
2025-08-18T08:59:28.3513931Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T08:59:28.3514120Z 
2025-08-18T08:59:28.3514250Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T08:59:28.3514464Z 
2025-08-18T08:59:28.3514582Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T08:59:28.3514775Z 
2025-08-18T08:59:28.3514880Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T08:59:28.3515070Z 
2025-08-18T08:59:28.3515161Z # api.migrations.versions.0001\_baseline
2025-08-18T08:59:28.3515329Z 
2025-08-18T08:59:28.3515429Z <a id="api.migrations.versions"></a>
2025-08-18T08:59:28.3515594Z 
2025-08-18T08:59:28.3515674Z # api.migrations.versions
2025-08-18T08:59:28.3515805Z 
2025-08-18T08:59:28.3515892Z <a id="api.migrations"></a>
2025-08-18T08:59:28.3516026Z 
2025-08-18T08:59:28.3516095Z # api.migrations
2025-08-18T08:59:28.3516206Z 
2025-08-18T08:59:28.3516272Z <a id="api.db"></a>
2025-08-18T08:59:28.3516378Z 
2025-08-18T08:59:28.3516567Z # api.db
2025-08-18T08:59:28.3516666Z 
2025-08-18T08:59:28.3516745Z <a id="api.routes.stats"></a>
2025-08-18T08:59:28.3516885Z 
2025-08-18T08:59:28.3516959Z # api.routes.stats
2025-08-18T08:59:28.3517063Z 
2025-08-18T08:59:28.3517148Z <a id="api.routes.stats.kpi"></a>
2025-08-18T08:59:28.3517302Z 
2025-08-18T08:59:28.3517364Z #### kpi
2025-08-18T08:59:28.3517449Z 
2025-08-18T08:59:28.3517513Z ```python
2025-08-18T08:59:28.3517689Z @router.get("/stats/kpi")
2025-08-18T08:59:28.3517920Z def kpi() -> List[Dict[str, int]]
2025-08-18T08:59:28.3518125Z ```
2025-08-18T08:59:28.3518210Z 
2025-08-18T08:59:28.3518294Z Return KPI metrics (mock).
2025-08-18T08:59:28.3518424Z 
2025-08-18T08:59:28.3518524Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T08:59:28.3518706Z 
2025-08-18T08:59:28.3518778Z #### roi\_by\_vendor
2025-08-18T08:59:28.3518890Z 
2025-08-18T08:59:28.3518953Z ```python
2025-08-18T08:59:28.3519121Z @router.get("/stats/roi_by_vendor")
2025-08-18T08:59:28.3519360Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T08:59:28.3519597Z ```
2025-08-18T08:59:28.3519699Z 
2025-08-18T08:59:28.3519779Z Return ROI percent by vendor.
2025-08-18T08:59:28.3519980Z 
2025-08-18T08:59:28.3520067Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T08:59:28.3520237Z 
2025-08-18T08:59:28.3520301Z #### roi\_trend
2025-08-18T08:59:28.3520401Z 
2025-08-18T08:59:28.3520467Z ```python
2025-08-18T08:59:28.3520625Z @router.get("/stats/roi_trend")
2025-08-18T08:59:28.3521008Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T08:59:28.3521263Z ```
2025-08-18T08:59:28.3521350Z 
2025-08-18T08:59:28.3521428Z Return 30-day ROI trend.
2025-08-18T08:59:28.3521551Z 
2025-08-18T08:59:28.3521630Z <a id="api.routes.roi"></a>
2025-08-18T08:59:28.3521765Z 
2025-08-18T08:59:28.3521832Z # api.routes.roi
2025-08-18T08:59:28.3521934Z 
2025-08-18T08:59:28.3522021Z <a id="api.routes.health"></a>
2025-08-18T08:59:28.3522160Z 
2025-08-18T08:59:28.3522229Z # api.routes.health
2025-08-18T08:59:28.3522342Z 
2025-08-18T08:59:28.3522438Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T08:59:28.3522737Z 
2025-08-18T08:59:28.3522799Z #### MAX\_SKEW
2025-08-18T08:59:28.3522902Z 
2025-08-18T08:59:28.3522962Z seconds
2025-08-18T08:59:28.3523059Z 
2025-08-18T08:59:28.3523152Z <a id="api.routes.health.health"></a>
2025-08-18T08:59:28.3523322Z 
2025-08-18T08:59:28.3523382Z #### health
2025-08-18T08:59:28.3523478Z 
2025-08-18T08:59:28.3523540Z ```python
2025-08-18T08:59:28.3523732Z @router.get("/health", include_in_schema=False)
2025-08-18T08:59:28.3524110Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T08:59:28.3524442Z ```
2025-08-18T08:59:28.3524528Z 
2025-08-18T08:59:28.3524644Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T08:59:28.3524839Z 
2025-08-18T08:59:28.3524936Z <a id="api.routes.repository"></a>
2025-08-18T08:59:28.3525089Z 
2025-08-18T08:59:28.3525165Z # api.routes.repository
2025-08-18T08:59:28.3525296Z 
2025-08-18T08:59:28.3525367Z <a id="api.routes"></a>
2025-08-18T08:59:28.3525486Z 
2025-08-18T08:59:28.3525558Z # api.routes
2025-08-18T08:59:28.3525664Z 
2025-08-18T08:59:28.3525740Z <a id="api.models.fee"></a>
2025-08-18T08:59:28.3525871Z 
2025-08-18T08:59:28.3525942Z # api.models.fee
2025-08-18T08:59:28.3526045Z 
2025-08-18T08:59:28.3526115Z <a id="api.models"></a>
2025-08-18T08:59:28.3526226Z 
2025-08-18T08:59:28.3526296Z # api.models
2025-08-18T08:59:28.3526389Z 
2025-08-18T08:59:28.3526471Z <a id="api.roi_repository"></a>
2025-08-18T08:59:28.3526616Z 
2025-08-18T08:59:28.3526685Z # api.roi\_repository
2025-08-18T08:59:28.3526801Z 
2025-08-18T08:59:28.3526872Z <a id="api.main"></a>
2025-08-18T08:59:28.3526979Z 
2025-08-18T08:59:28.3527041Z # api.main
2025-08-18T08:59:28.3527131Z 
2025-08-18T08:59:28.3527212Z <a id="api.main.ready"></a>
2025-08-18T08:59:28.3527339Z 
2025-08-18T08:59:28.3527399Z #### ready
2025-08-18T08:59:28.3527490Z 
2025-08-18T08:59:28.3527550Z ```python
2025-08-18T08:59:28.3527801Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T08:59:28.3528343Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T08:59:28.3528704Z                                                                       str]
2025-08-18T08:59:28.3528924Z ```
2025-08-18T08:59:28.3529004Z 
2025-08-18T08:59:28.3529106Z Return 200 only when migrations are at head.
2025-08-18T08:59:28.3529276Z 
2025-08-18T08:59:28.3529347Z <a id="api.config"></a>
2025-08-18T08:59:28.3529469Z 
2025-08-18T08:59:28.3529531Z # api.config
2025-08-18T08:59:28.3529623Z 
2025-08-18T08:59:28.3529686Z <a id="etl"></a>
2025-08-18T08:59:28.3529795Z 
2025-08-18T08:59:28.3529855Z # etl
2025-08-18T08:59:28.3529940Z 
2025-08-18T08:59:28.3530026Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T08:59:28.3530172Z 
2025-08-18T08:59:28.3530245Z # etl.fba\_fee\_ingestor
2025-08-18T08:59:28.3530370Z 
2025-08-18T08:59:28.3530447Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T08:59:28.3530588Z 
2025-08-18T08:59:28.3530660Z # etl.sp\_fees\_ingestor
2025-08-18T08:59:28.3530791Z 
2025-08-18T08:59:28.3531013Z <a id="etl.keepa_ingestor"></a>
2025-08-18T08:59:28.3531176Z 
2025-08-18T08:59:28.3531252Z # etl.keepa\_ingestor
2025-08-18T08:59:28.3531365Z 
2025-08-18T08:59:28.3531431Z <a id="etl.db"></a>
2025-08-18T08:59:28.3531540Z 
2025-08-18T08:59:28.3531602Z # etl.db
2025-08-18T08:59:28.3531690Z 
2025-08-18T08:59:28.3531771Z <a id="etl.dialects.schemas"></a>
2025-08-18T08:59:28.3531920Z 
2025-08-18T08:59:28.3531991Z # etl.dialects.schemas
2025-08-18T08:59:28.3532130Z 
2025-08-18T08:59:28.3532238Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T08:59:28.3532419Z 
2025-08-18T08:59:28.3532511Z # etl.dialects.amazon\_reimbursements
2025-08-18T08:59:28.3532670Z 
2025-08-18T08:59:28.3532764Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T08:59:28.3532932Z 
2025-08-18T08:59:28.3533023Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T08:59:28.3533180Z 
2025-08-18T08:59:28.3533269Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T08:59:28.3533439Z 
2025-08-18T08:59:28.3533525Z # etl.dialects.amazon\_returns
2025-08-18T08:59:28.3533785Z 
2025-08-18T08:59:28.3533886Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T08:59:28.3534052Z 
2025-08-18T08:59:28.3534136Z # etl.dialects.amazon\_fee\_preview
2025-08-18T08:59:28.3534286Z 
2025-08-18T08:59:28.3534395Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T08:59:28.3534577Z 
2025-08-18T08:59:28.3534664Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T08:59:28.3534834Z 
2025-08-18T08:59:28.3534926Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T08:59:28.3535092Z 
2025-08-18T08:59:28.3535180Z # etl.dialects.amazon\_settlements
2025-08-18T08:59:28.3535326Z 
2025-08-18T08:59:28.3535399Z <a id="etl.dialects"></a>
2025-08-18T08:59:28.3535523Z 
2025-08-18T08:59:28.3535592Z # etl.dialects
2025-08-18T08:59:28.3535688Z 
2025-08-18T08:59:28.3535753Z <a id="ingest"></a>
2025-08-18T08:59:28.3535864Z 
2025-08-18T08:59:28.3535923Z # ingest
2025-08-18T08:59:28.3536007Z 
2025-08-18T08:59:28.3536091Z <a id="ingest.maintenance"></a>
2025-08-18T08:59:28.3536242Z 
2025-08-18T08:59:28.3536313Z # ingest.maintenance
2025-08-18T08:59:28.3536428Z 
2025-08-18T08:59:28.3536512Z <a id="ingest.copy_loader"></a>
2025-08-18T08:59:28.3536653Z 
2025-08-18T08:59:28.3536723Z # ingest.copy\_loader
2025-08-18T08:59:28.3536841Z 
2025-08-18T08:59:28.3536942Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T08:59:28.3537124Z 
2025-08-18T08:59:28.3537197Z #### copy\_df\_via\_temp
2025-08-18T08:59:28.3537322Z 
2025-08-18T08:59:28.3537386Z ```python
2025-08-18T08:59:28.3537562Z def copy_df_via_temp(engine: Engine,
2025-08-18T08:59:28.3537794Z                      df: pd.DataFrame,
2025-08-18T08:59:28.3538028Z                      target_table: str,
2025-08-18T08:59:28.3538247Z                      *,
2025-08-18T08:59:28.3538462Z                      target_schema: Optional[str] = None,
2025-08-18T08:59:28.3538718Z                      columns: Sequence[str],
2025-08-18T08:59:28.3538991Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T08:59:28.3539390Z                      analyze_after: bool = False,
2025-08-18T08:59:28.3539646Z                      connection: Any | None = None) -> int
2025-08-18T08:59:28.3539884Z ```
2025-08-18T08:59:28.3539968Z 
2025-08-18T08:59:28.3540123Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T08:59:28.3540357Z 
2025-08-18T08:59:28.3540444Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T08:59:28.3540602Z 
2025-08-18T08:59:28.3540681Z # ingest.tests.test\_smoke
2025-08-18T08:59:28.3540816Z 
2025-08-18T08:59:28.3541116Z <a id="ingest.tests"></a>
2025-08-18T08:59:28.3541298Z 
2025-08-18T08:59:28.3541370Z # ingest.tests
2025-08-18T08:59:28.3541472Z 
2025-08-18T08:59:28.3541555Z <a id="ingest.upload_router"></a>
2025-08-18T08:59:28.3541707Z 
2025-08-18T08:59:28.3541780Z # ingest.upload\_router
2025-08-18T08:59:28.3541898Z 
2025-08-18T08:59:28.3541977Z <a id="ingest.email_watcher"></a>
2025-08-18T08:59:28.3542123Z 
2025-08-18T08:59:28.3542193Z # ingest.email\_watcher
2025-08-18T08:59:28.3542319Z 
2025-08-18T08:59:28.3542409Z <a id="ingest.email_watcher.main"></a>
2025-08-18T08:59:28.3542569Z 
2025-08-18T08:59:28.3542635Z #### main
2025-08-18T08:59:28.3542729Z 
2025-08-18T08:59:28.3542796Z ```python
2025-08-18T08:59:28.3542961Z def main() -> dict[str, str]
2025-08-18T08:59:28.3543158Z ```
2025-08-18T08:59:28.3543240Z 
2025-08-18T08:59:28.3543379Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T08:59:28.3543612Z 
2025-08-18T08:59:28.3543738Z Returns {"status": "success"} when processing completes.
2025-08-18T08:59:28.3543945Z 
2025-08-18T08:59:28.3544027Z <a id="ingest.tasks"></a>
2025-08-18T08:59:28.3544153Z 
2025-08-18T08:59:28.3544219Z # ingest.tasks
2025-08-18T08:59:28.3544324Z 
2025-08-18T08:59:28.3544423Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T08:59:28.3544597Z 
2025-08-18T08:59:28.3544669Z #### task\_import\_file
2025-08-18T08:59:28.3544791Z 
2025-08-18T08:59:28.3544854Z ```python
2025-08-18T08:59:28.3545062Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T08:59:28.3545470Z def task_import_file(self,
2025-08-18T08:59:28.3545671Z                      uri: str,
2025-08-18T08:59:28.3545887Z                      report_type: Optional[str] = None,
2025-08-18T08:59:28.3546156Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T08:59:28.3546391Z ```
2025-08-18T08:59:28.3546479Z 
2025-08-18T08:59:28.3546605Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T08:59:28.3546810Z 
2025-08-18T08:59:28.3546895Z <a id="ingest.celery_app"></a>
2025-08-18T08:59:28.3547034Z 
2025-08-18T08:59:28.3547104Z # ingest.celery\_app
2025-08-18T08:59:28.3547219Z 
2025-08-18T08:59:28.3547310Z <a id="ingest.ingest_router"></a>
2025-08-18T08:59:28.3547456Z 
2025-08-18T08:59:28.3547528Z # ingest.ingest\_router
2025-08-18T08:59:28.3547648Z 
2025-08-18T08:59:28.3547722Z <a id="logistics_etl"></a>
2025-08-18T08:59:28.3547847Z 
2025-08-18T08:59:28.3547913Z # logistics\_etl
2025-08-18T08:59:28.3548028Z 
2025-08-18T08:59:28.3548104Z Daily logistics ETL job.
2025-08-18T08:59:28.3548233Z 
2025-08-18T08:59:28.3548319Z <a id="logistics_etl.__main__"></a>
2025-08-18T08:59:28.3548467Z 
2025-08-18T08:59:28.3548543Z # logistics\_etl.\_\_main\_\_
2025-08-18T08:59:28.3548684Z 
2025-08-18T08:59:28.3548759Z <a id="logistics_etl.dsn"></a>
2025-08-18T08:59:28.3548898Z 
2025-08-18T08:59:28.3548966Z # logistics\_etl.dsn
2025-08-18T08:59:28.3549087Z 
2025-08-18T08:59:28.3549205Z Local DSN builder to avoid cross-service dependency.
2025-08-18T08:59:28.3549402Z 
2025-08-18T08:59:28.3549489Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T08:59:28.3549660Z 
2025-08-18T08:59:28.3549722Z #### build\_dsn
2025-08-18T08:59:28.3549822Z 
2025-08-18T08:59:28.3549883Z ```python
2025-08-18T08:59:28.3550059Z def build_dsn(sync: bool = True) -> str
2025-08-18T08:59:28.3550275Z ```
2025-08-18T08:59:28.3550360Z 
2025-08-18T08:59:28.3550494Z Return a Postgres DSN assembled from environment variables.
2025-08-18T08:59:28.3550712Z 
2025-08-18T08:59:28.3551200Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T08:59:28.3551598Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T08:59:28.3551937Z error when any required variable is missing.
2025-08-18T08:59:28.3552111Z 
2025-08-18T08:59:28.3552203Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T08:59:28.3552375Z 
2025-08-18T08:59:28.3552455Z # logistics\_etl.tests.conftest
2025-08-18T08:59:28.3552596Z 
2025-08-18T08:59:28.3552702Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T08:59:28.3552887Z 
2025-08-18T08:59:28.3552972Z # logistics\_etl.tests.test\_repository
2025-08-18T08:59:28.3553137Z 
2025-08-18T08:59:28.3553226Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T08:59:28.3553396Z 
2025-08-18T08:59:28.3553479Z # logistics\_etl.tests.test\_cron
2025-08-18T08:59:28.3553632Z 
2025-08-18T08:59:28.3553730Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T08:59:28.3553904Z 
2025-08-18T08:59:28.3553996Z # logistics\_etl.tests.test\_imports
2025-08-18T08:59:28.3554159Z 
2025-08-18T08:59:28.3554251Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T08:59:28.3554425Z 
2025-08-18T08:59:28.3554507Z # logistics\_etl.tests.test\_smoke
2025-08-18T08:59:28.3554656Z 
2025-08-18T08:59:28.3554748Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T08:59:28.3554921Z 
2025-08-18T08:59:28.3555002Z # logistics\_etl.tests.test\_client
2025-08-18T08:59:28.3555154Z 
2025-08-18T08:59:28.3555243Z <a id="logistics_etl.tests"></a>
2025-08-18T08:59:28.3555385Z 
2025-08-18T08:59:28.3555457Z # logistics\_etl.tests
2025-08-18T08:59:28.3555579Z 
2025-08-18T08:59:28.3555656Z <a id="logistics_etl.flow"></a>
2025-08-18T08:59:28.3555793Z 
2025-08-18T08:59:28.3555863Z # logistics\_etl.flow
2025-08-18T08:59:28.3555988Z 
2025-08-18T08:59:28.3556074Z <a id="logistics_etl.client"></a>
2025-08-18T08:59:28.3556222Z 
2025-08-18T08:59:28.3556298Z # logistics\_etl.client
2025-08-18T08:59:28.3556416Z 
2025-08-18T08:59:28.3556493Z <a id="logistics_etl.cron"></a>
2025-08-18T08:59:28.3556759Z 
2025-08-18T08:59:28.3556836Z # logistics\_etl.cron
2025-08-18T08:59:28.3556947Z 
2025-08-18T08:59:28.3557027Z <a id="logistics_etl.db"></a>
2025-08-18T08:59:28.3557168Z 
2025-08-18T08:59:28.3557239Z # logistics\_etl.db
2025-08-18T08:59:28.3557347Z 
2025-08-18T08:59:28.3557440Z <a id="logistics_etl.repository"></a>
2025-08-18T08:59:28.3557600Z 
2025-08-18T08:59:28.3557677Z # logistics\_etl.repository
2025-08-18T08:59:28.3557809Z 
2025-08-18T08:59:28.3557885Z <a id="alert_bot"></a>
2025-08-18T08:59:28.3558001Z 
2025-08-18T08:59:28.3558063Z # alert\_bot
2025-08-18T08:59:28.3558162Z 
2025-08-18T08:59:28.3558249Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T08:59:28.3558408Z 
2025-08-18T08:59:28.3558487Z # alert\_bot.tests.test\_smoke
2025-08-18T08:59:28.3558630Z 
2025-08-18T08:59:28.3558706Z <a id="alert_bot.tests"></a>
2025-08-18T08:59:28.3558839Z 
2025-08-18T08:59:28.3558911Z # alert\_bot.tests
2025-08-18T08:59:28.3559014Z 
2025-08-18T08:59:28.3559092Z <a id="alert_bot.alert_bot"></a>
2025-08-18T08:59:28.3559252Z 
2025-08-18T08:59:28.3559323Z # alert\_bot.alert\_bot
2025-08-18T08:59:28.3559443Z 
2025-08-18T08:59:28.3559517Z <a id="alert_bot.rules"></a>
2025-08-18T08:59:28.3559655Z 
2025-08-18T08:59:28.3559722Z # alert\_bot.rules
2025-08-18T08:59:28.3559824Z 
2025-08-18T08:59:28.3559895Z <a id="common"></a>
2025-08-18T08:59:28.3559999Z 
2025-08-18T08:59:28.3560061Z # common
2025-08-18T08:59:28.3560154Z 
2025-08-18T08:59:28.3560224Z <a id="common.dsn"></a>
2025-08-18T08:59:28.3560338Z 
2025-08-18T08:59:28.3560401Z # common.dsn
2025-08-18T08:59:28.3560498Z 
2025-08-18T08:59:28.3560579Z <a id="common.dsn.build_dsn"></a>
2025-08-18T08:59:28.3560727Z 
2025-08-18T08:59:28.3560795Z #### build\_dsn
2025-08-18T08:59:28.3561058Z 
2025-08-18T08:59:28.3561136Z ```python
2025-08-18T08:59:28.3561310Z def build_dsn(sync: bool = True) -> str
2025-08-18T08:59:28.3561526Z ```
2025-08-18T08:59:28.3561613Z 
2025-08-18T08:59:28.3561733Z Return a Postgres DSN, validating required variables.
2025-08-18T08:59:28.3562068Z 
2025-08-18T08:59:28.3562256Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T08:59:28.3562691Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T08:59:28.3563104Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T08:59:28.3607072Z missing.
2025-08-18T08:59:28.3607252Z 
2025-08-18T08:59:28.3607391Z <a id="common.models_vendor"></a>
2025-08-18T08:59:28.3607649Z 
2025-08-18T08:59:28.3607773Z # common.models\_vendor
2025-08-18T08:59:28.3607987Z 
2025-08-18T08:59:28.3608136Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T08:59:28.3608411Z 
2025-08-18T08:59:28.3608524Z ## Vendor Objects
2025-08-18T08:59:28.3608692Z 
2025-08-18T08:59:28.3608794Z ```python
2025-08-18T08:59:28.3609058Z class Vendor(Base)
2025-08-18T08:59:28.3609290Z ```
2025-08-18T08:59:28.3609383Z 
2025-08-18T08:59:28.3609463Z Vendor of inventory items.
2025-08-18T08:59:28.3609596Z 
2025-08-18T08:59:28.3609712Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T08:59:28.3609906Z 
2025-08-18T08:59:28.3609979Z ## VendorPrice Objects
2025-08-18T08:59:28.3610096Z 
2025-08-18T08:59:28.3610163Z ```python
2025-08-18T08:59:28.3610320Z class VendorPrice(Base)
2025-08-18T08:59:28.3610499Z ```
2025-08-18T08:59:28.3610580Z 
2025-08-18T08:59:28.3610684Z Association table linking vendors to pricing.
2025-08-18T08:59:28.3611007Z 
2025-08-18T08:59:28.3611140Z <a id="common.db_url"></a>
2025-08-18T08:59:28.3611269Z 
2025-08-18T08:59:28.3611341Z # common.db\_url
2025-08-18T08:59:28.3611445Z 
2025-08-18T08:59:28.3611528Z <a id="common.db_url.build_url"></a>
2025-08-18T08:59:28.3611682Z 
2025-08-18T08:59:28.3611751Z #### build\_url
2025-08-18T08:59:28.3611855Z 
2025-08-18T08:59:28.3611917Z ```python
2025-08-18T08:59:28.3612095Z def build_url(async_: bool = True) -> str
2025-08-18T08:59:28.3612316Z ```
2025-08-18T08:59:28.3612404Z 
2025-08-18T08:59:28.3612502Z Return Postgres DSN from env or PG_* parts.
2025-08-18T08:59:28.3612680Z 
2025-08-18T08:59:28.3612920Z <a id="common.keepa"></a>
2025-08-18T08:59:28.3613051Z 
2025-08-18T08:59:28.3613118Z # common.keepa
2025-08-18T08:59:28.3613216Z 
2025-08-18T08:59:28.3613295Z <a id="common.llm"></a>
2025-08-18T08:59:28.3613412Z 
2025-08-18T08:59:28.3613475Z # common.llm
2025-08-18T08:59:28.3613578Z 
2025-08-18T08:59:28.3613657Z <a id="common.settings"></a>
2025-08-18T08:59:28.3613791Z 
2025-08-18T08:59:28.3613866Z # common.settings
2025-08-18T08:59:28.3613971Z 
2025-08-18T08:59:28.3614039Z <a id="common.db"></a>
2025-08-18T08:59:28.3614154Z 
2025-08-18T08:59:28.3614222Z # common.db
2025-08-18T08:59:28.3614310Z 
2025-08-18T08:59:28.3614401Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T08:59:28.3614573Z 
2025-08-18T08:59:28.3614647Z #### build\_sqlalchemy\_url
2025-08-18T08:59:28.3614777Z 
2025-08-18T08:59:28.3614838Z ```python
2025-08-18T08:59:28.3615010Z def build_sqlalchemy_url() -> str
2025-08-18T08:59:28.3615222Z ```
2025-08-18T08:59:28.3615303Z 
2025-08-18T08:59:28.3615402Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T08:59:28.3615576Z 
2025-08-18T08:59:28.3615674Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T08:59:28.3615838Z 
2025-08-18T08:59:28.3615911Z #### build\_asyncpg\_dsn
2025-08-18T08:59:28.3616041Z 
2025-08-18T08:59:28.3616102Z ```python
2025-08-18T08:59:28.3616268Z def build_asyncpg_dsn() -> str
2025-08-18T08:59:28.3616465Z ```
2025-08-18T08:59:28.3616544Z 
2025-08-18T08:59:28.3616676Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T08:59:28.3616884Z 
2025-08-18T08:59:28.3616967Z <a id="common.db.refresh_mvs"></a>
2025-08-18T08:59:28.3617123Z 
2025-08-18T08:59:28.3617188Z #### refresh\_mvs
2025-08-18T08:59:28.3617291Z 
2025-08-18T08:59:28.3617357Z ```python
2025-08-18T08:59:28.3617557Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T08:59:28.3617800Z ```
2025-08-18T08:59:28.3617885Z 
2025-08-18T08:59:28.3618019Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T08:59:28.3618231Z 
2025-08-18T08:59:28.3618429Z <a id="common.config"></a>
2025-08-18T08:59:28.3618562Z 
2025-08-18T08:59:28.3618629Z # common.config
2025-08-18T08:59:28.3618735Z 
2025-08-18T08:59:28.3618808Z <a id="common.base"></a>
2025-08-18T08:59:28.3618935Z 
2025-08-18T08:59:28.3618999Z # common.base
2025-08-18T08:59:28.3619101Z 
2025-08-18T08:59:28.3619179Z <a id="common.base.Base"></a>
2025-08-18T08:59:28.3619317Z 
2025-08-18T08:59:28.3619386Z ## Base Objects
2025-08-18T08:59:28.3619483Z 
2025-08-18T08:59:28.3619542Z ```python
2025-08-18T08:59:28.3619709Z class Base(DeclarativeBase)
2025-08-18T08:59:28.3619896Z ```
2025-08-18T08:59:28.3619981Z 
2025-08-18T08:59:28.3620063Z Base class for SQLAlchemy models.
2025-08-18T08:59:28.3620209Z 
2025-08-18T08:59:28.3620279Z <a id="repricer"></a>
2025-08-18T08:59:28.3620400Z 
2025-08-18T08:59:28.3620462Z # repricer
2025-08-18T08:59:28.3620552Z 
2025-08-18T08:59:28.3620642Z <a id="repricer.app.schemas"></a>
2025-08-18T08:59:28.3620786Z 
2025-08-18T08:59:28.3620965Z # repricer.app.schemas
2025-08-18T08:59:28.3621108Z 
2025-08-18T08:59:28.3621196Z <a id="repricer.app.deps"></a>
2025-08-18T08:59:28.3621337Z 
2025-08-18T08:59:28.3621410Z # repricer.app.deps
2025-08-18T08:59:28.3621534Z 
2025-08-18T08:59:28.3621649Z Placeholder module for Keepa / SP-API clients.
2025-08-18T08:59:28.3621834Z 
2025-08-18T08:59:28.3621922Z <a id="repricer.app.logic"></a>
2025-08-18T08:59:28.3622063Z 
2025-08-18T08:59:28.3622135Z # repricer.app.logic
2025-08-18T08:59:28.3622254Z 
2025-08-18T08:59:28.3622348Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T08:59:28.3622521Z 
2025-08-18T08:59:28.3622584Z #### MIN\_MARGIN
2025-08-18T08:59:28.3622691Z 
2025-08-18T08:59:28.3622752Z 15 % ROI
2025-08-18T08:59:28.3622838Z 
2025-08-18T08:59:28.3622945Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T08:59:28.3623122Z 
2025-08-18T08:59:28.3623190Z #### compute\_price
2025-08-18T08:59:28.3623295Z 
2025-08-18T08:59:28.3623363Z ```python
2025-08-18T08:59:28.3623606Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T08:59:28.3624027Z ```
2025-08-18T08:59:28.3624108Z 
2025-08-18T08:59:28.3624212Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T08:59:28.3624492Z Replace with real competitive logic later.
2025-08-18T08:59:28.3624657Z 
2025-08-18T08:59:28.3624743Z <a id="repricer.app.main"></a>
2025-08-18T08:59:28.3624879Z 
2025-08-18T08:59:28.3624947Z # repricer.app.main
2025-08-18T08:59:28.3625052Z 
2025-08-18T08:59:28.3625132Z <a id="repricer.app"></a>
2025-08-18T08:59:28.3625256Z 
2025-08-18T08:59:28.3625321Z # repricer.app
2025-08-18T08:59:28.3625425Z 
2025-08-18T08:59:28.3625513Z <a id="repricer.tests.test_imports"></a>
2025-08-18T08:59:28.3625677Z 
2025-08-18T08:59:28.3625761Z # repricer.tests.test\_imports
2025-08-18T08:59:28.3625896Z 
2025-08-18T08:59:28.3625982Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T08:59:28.3626139Z 
2025-08-18T08:59:28.3626224Z # repricer.tests.test\_smoke
2025-08-18T08:59:28.3626359Z 
2025-08-18T08:59:28.3626434Z <a id="repricer.tests"></a>
2025-08-18T08:59:28.3626571Z 
2025-08-18T08:59:28.3626642Z # repricer.tests
2025-08-18T08:59:28.3626745Z 
2025-08-18T08:59:28.3626812Z <a id="db"></a>
2025-08-18T08:59:28.3626912Z 
2025-08-18T08:59:28.3626970Z # db
2025-08-18T08:59:28.3627053Z 
2025-08-18T08:59:28.3627134Z <a id="db.utils.views"></a>
2025-08-18T08:59:28.3627260Z 
2025-08-18T08:59:28.3627325Z # db.utils.views
2025-08-18T08:59:28.3627428Z 
2025-08-18T08:59:28.3627516Z <a id="db.utils.views.replace_view"></a>
2025-08-18T08:59:28.3627680Z 
2025-08-18T08:59:28.3627747Z #### replace\_view
2025-08-18T08:59:28.3627856Z 
2025-08-18T08:59:28.3627917Z ```python
2025-08-18T08:59:28.3628109Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T08:59:28.3628351Z ```
2025-08-18T08:59:28.3628438Z 
2025-08-18T08:59:28.3628534Z Drop and recreate a SQL view atomically.
2025-08-18T08:59:28.3628698Z 
2025-08-18T08:59:28.3628768Z <a id="db.utils"></a>
2025-08-18T08:59:28.3628887Z 
2025-08-18T08:59:28.3628948Z # db.utils
2025-08-18T08:59:28.3629036Z 
2025-08-18T08:59:28.3629274Z <a id="price_importer"></a>
2025-08-18T08:59:28.3629417Z 
2025-08-18T08:59:28.3629486Z # price\_importer
2025-08-18T08:59:28.3629591Z 
2025-08-18T08:59:28.3629697Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T08:59:28.3629878Z 
2025-08-18T08:59:28.3629967Z # price\_importer.services\_common.dsn
2025-08-18T08:59:28.3630130Z 
2025-08-18T08:59:28.3630252Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T08:59:28.3630453Z 
2025-08-18T08:59:28.3630517Z #### build\_dsn
2025-08-18T08:59:28.3630620Z 
2025-08-18T08:59:28.3630682Z ```python
2025-08-18T08:59:28.3630975Z def build_dsn(sync: bool = True) -> str
2025-08-18T08:59:28.3631196Z ```
2025-08-18T08:59:28.3631277Z 
2025-08-18T08:59:28.3631372Z Return safe DSN.
2025-08-18T08:59:28.3631477Z 
2025-08-18T08:59:28.3631804Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T08:59:28.3632014Z 
2025-08-18T08:59:28.3632142Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T08:59:28.3632356Z 
2025-08-18T08:59:28.3632471Z # price\_importer.services\_common.models\_vendor
2025-08-18T08:59:28.3632668Z 
2025-08-18T08:59:28.3632773Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T08:59:28.3632958Z 
2025-08-18T08:59:28.3633061Z # price\_importer.services\_common.db\_url
2025-08-18T08:59:28.3633231Z 
2025-08-18T08:59:28.3633365Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T08:59:28.3633582Z 
2025-08-18T08:59:28.3633649Z #### build\_url
2025-08-18T08:59:28.3633750Z 
2025-08-18T08:59:28.3633819Z ```python
2025-08-18T08:59:28.3634000Z def build_url(async_: bool = True) -> str
2025-08-18T08:59:28.3634227Z ```
2025-08-18T08:59:28.3634310Z 
2025-08-18T08:59:28.3634405Z Return Postgres DSN from env or PG_* parts.
2025-08-18T08:59:28.3634581Z 
2025-08-18T08:59:28.3634689Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T08:59:28.3634871Z 
2025-08-18T08:59:28.3634961Z # price\_importer.services\_common.keepa
2025-08-18T08:59:28.3635130Z 
2025-08-18T08:59:28.3635234Z <a id="price_importer.services_common.llm"></a>
2025-08-18T08:59:28.3635532Z 
2025-08-18T08:59:28.3635627Z # price\_importer.services\_common.llm
2025-08-18T08:59:28.3635790Z 
2025-08-18T08:59:28.3635900Z <a id="price_importer.services_common.settings"></a>
2025-08-18T08:59:28.3636096Z 
2025-08-18T08:59:28.3636191Z # price\_importer.services\_common.settings
2025-08-18T08:59:28.3636359Z 
2025-08-18T08:59:28.3636455Z <a id="price_importer.services_common.db"></a>
2025-08-18T08:59:28.3636635Z 
2025-08-18T08:59:28.3636720Z # price\_importer.services\_common.db
2025-08-18T08:59:28.3636876Z 
2025-08-18T08:59:28.3637034Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T08:59:28.3637266Z 
2025-08-18T08:59:28.3637341Z #### build\_sqlalchemy\_url
2025-08-18T08:59:28.3637475Z 
2025-08-18T08:59:28.3637535Z ```python
2025-08-18T08:59:28.3637703Z def build_sqlalchemy_url() -> str
2025-08-18T08:59:28.3637911Z ```
2025-08-18T08:59:28.3637993Z 
2025-08-18T08:59:28.3638092Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T08:59:28.3638274Z 
2025-08-18T08:59:28.3638414Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T08:59:28.3638637Z 
2025-08-18T08:59:28.3638714Z #### build\_asyncpg\_dsn
2025-08-18T08:59:28.3638837Z 
2025-08-18T08:59:28.3638902Z ```python
2025-08-18T08:59:28.3639079Z def build_asyncpg_dsn() -> str
2025-08-18T08:59:28.3639272Z ```
2025-08-18T08:59:28.3639357Z 
2025-08-18T08:59:28.3639483Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T08:59:28.3639689Z 
2025-08-18T08:59:28.3639818Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T08:59:28.3640022Z 
2025-08-18T08:59:28.3640086Z #### refresh\_mvs
2025-08-18T08:59:28.3640195Z 
2025-08-18T08:59:28.3640256Z ```python
2025-08-18T08:59:28.3640446Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T08:59:28.3640692Z ```
2025-08-18T08:59:28.3640772Z 
2025-08-18T08:59:28.3641010Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T08:59:28.3641351Z 
2025-08-18T08:59:28.3641453Z <a id="price_importer.services_common"></a>
2025-08-18T08:59:28.3641620Z 
2025-08-18T08:59:28.3641710Z # price\_importer.services\_common
2025-08-18T08:59:28.3641862Z 
2025-08-18T08:59:28.3641964Z <a id="price_importer.services_common.base"></a>
2025-08-18T08:59:28.3642150Z 
2025-08-18T08:59:28.3642238Z # price\_importer.services\_common.base
2025-08-18T08:59:28.3642402Z 
2025-08-18T08:59:28.3642495Z <a id="price_importer.normaliser"></a>
2025-08-18T08:59:28.3642654Z 
2025-08-18T08:59:28.3642737Z # price\_importer.normaliser
2025-08-18T08:59:28.3642875Z 
2025-08-18T08:59:28.3642981Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T08:59:28.3643161Z 
2025-08-18T08:59:28.3643248Z # price\_importer.common.models\_vendor
2025-08-18T08:59:28.3643414Z 
2025-08-18T08:59:28.3643504Z <a id="price_importer.common.db_url"></a>
2025-08-18T08:59:28.3643672Z 
2025-08-18T08:59:28.3643759Z # price\_importer.common.db\_url
2025-08-18T08:59:28.3643904Z 
2025-08-18T08:59:28.3644011Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T08:59:28.3644195Z 
2025-08-18T08:59:28.3644265Z #### make\_dsn
2025-08-18T08:59:28.3644362Z 
2025-08-18T08:59:28.3644422Z ```python
2025-08-18T08:59:28.3644597Z def make_dsn(async_: bool = False) -> str
2025-08-18T08:59:28.3644813Z ```
2025-08-18T08:59:28.3644899Z 
2025-08-18T08:59:28.3645018Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T08:59:28.3645215Z 
2025-08-18T08:59:28.3645327Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T08:59:28.3645512Z 
2025-08-18T08:59:28.3645576Z #### build\_url
2025-08-18T08:59:28.3645674Z 
2025-08-18T08:59:28.3645741Z ```python
2025-08-18T08:59:28.3645914Z def build_url(async_: bool = False) -> str
2025-08-18T08:59:28.3646143Z ```
2025-08-18T08:59:28.3646224Z 
2025-08-18T08:59:28.3646342Z Return Postgres DSN built from environment variables.
2025-08-18T08:59:28.3646549Z 
2025-08-18T08:59:28.3646633Z <a id="price_importer.common"></a>
2025-08-18T08:59:28.3646782Z 
2025-08-18T08:59:28.3646873Z # price\_importer.common
2025-08-18T08:59:28.3647115Z 
2025-08-18T08:59:28.3647208Z <a id="price_importer.common.base"></a>
2025-08-18T08:59:28.3647374Z 
2025-08-18T08:59:28.3647456Z # price\_importer.common.base
2025-08-18T08:59:28.3647595Z 
2025-08-18T08:59:28.3647690Z <a id="price_importer.tests.conftest"></a>
2025-08-18T08:59:28.3647868Z 
2025-08-18T08:59:28.3647950Z # price\_importer.tests.conftest
2025-08-18T08:59:28.3648092Z 
2025-08-18T08:59:28.3648199Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T08:59:28.3648375Z 
2025-08-18T08:59:28.3648460Z # price\_importer.tests.test\_reader
2025-08-18T08:59:28.3648622Z 
2025-08-18T08:59:28.3648721Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T08:59:28.3648895Z 
2025-08-18T08:59:28.3648981Z # price\_importer.tests.test\_imports
2025-08-18T08:59:28.3649148Z 
2025-08-18T08:59:28.3649243Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T08:59:28.3649412Z 
2025-08-18T08:59:28.3649501Z # price\_importer.tests.test\_smoke
2025-08-18T08:59:28.3649664Z 
2025-08-18T08:59:28.3649770Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T08:59:28.3649959Z 
2025-08-18T08:59:28.3650050Z # price\_importer.tests.test\_normaliser
2025-08-18T08:59:28.3650215Z 
2025-08-18T08:59:28.3650298Z <a id="price_importer.tests"></a>
2025-08-18T08:59:28.3650450Z 
2025-08-18T08:59:28.3650525Z # price\_importer.tests
2025-08-18T08:59:28.3650645Z 
2025-08-18T08:59:28.3650736Z <a id="price_importer.reader"></a>
2025-08-18T08:59:28.3650979Z 
2025-08-18T08:59:28.3651055Z # price\_importer.reader
2025-08-18T08:59:28.3651184Z 
2025-08-18T08:59:28.3651272Z <a id="price_importer.repository"></a>
2025-08-18T08:59:28.3651432Z 
2025-08-18T08:59:28.3651513Z # price\_importer.repository
2025-08-18T08:59:28.3651654Z 
2025-08-18T08:59:28.3651735Z <a id="price_importer.import"></a>
2025-08-18T08:59:28.3651885Z 
2025-08-18T08:59:28.3651966Z # price\_importer.import
2025-08-18T08:59:28.3652089Z 
2025-08-18T08:59:28.3652158Z <a id="fees_h10"></a>
2025-08-18T08:59:28.3652398Z 
2025-08-18T08:59:28.3652466Z # fees\_h10
2025-08-18T08:59:28.3652558Z 
2025-08-18T08:59:28.3652631Z <a id="fees_h10.worker"></a>
2025-08-18T08:59:28.3652769Z 
2025-08-18T08:59:28.3652833Z # fees\_h10.worker
2025-08-18T08:59:28.3652936Z 
2025-08-18T08:59:28.3653036Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T08:59:28.3653211Z 
2025-08-18T08:59:28.3653282Z #### list\_active\_asins
2025-08-18T08:59:28.3653401Z 
2025-08-18T08:59:28.3653469Z ```python
2025-08-18T08:59:28.3653637Z def list_active_asins() -> list[str]
2025-08-18T08:59:28.3653871Z ```
2025-08-18T08:59:28.3653953Z 
2025-08-18T08:59:28.3654064Z Return known ASINs or an empty list if unavailable.
2025-08-18T08:59:28.3654264Z 
2025-08-18T08:59:28.3654346Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T08:59:28.3654501Z 
2025-08-18T08:59:28.3654586Z # fees\_h10.tests.test\_smoke
2025-08-18T08:59:28.3654720Z 
2025-08-18T08:59:28.3654795Z <a id="fees_h10.tests"></a>
2025-08-18T08:59:28.3654930Z 
2025-08-18T08:59:28.3654999Z # fees\_h10.tests
2025-08-18T08:59:28.3655105Z 
2025-08-18T08:59:28.3655179Z <a id="fees_h10.client"></a>
2025-08-18T08:59:28.3655318Z 
2025-08-18T08:59:28.3655382Z # fees\_h10.client
2025-08-18T08:59:28.3655483Z 
2025-08-18T08:59:28.3655569Z <a id="fees_h10.repository"></a>
2025-08-18T08:59:28.3655709Z 
2025-08-18T08:59:28.3655780Z # fees\_h10.repository
2025-08-18T08:59:28.3655899Z 
2025-08-18T08:59:28.3655967Z <a id="emailer"></a>
2025-08-18T08:59:28.3656078Z 
2025-08-18T08:59:28.3656138Z # emailer
2025-08-18T08:59:28.3656232Z 
2025-08-18T08:59:28.3656330Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T08:59:28.3656506Z 
2025-08-18T08:59:28.3656599Z # emailer.tests.test\_import\_emailer
2025-08-18T08:59:28.3656756Z 
2025-08-18T08:59:28.3656841Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T08:59:28.3656994Z 
2025-08-18T08:59:28.3657077Z # emailer.tests.test\_smoke
2025-08-18T08:59:28.3657212Z 
2025-08-18T08:59:28.3657287Z <a id="emailer.tests"></a>
2025-08-18T08:59:28.3657423Z 
2025-08-18T08:59:28.3657494Z # emailer.tests
2025-08-18T08:59:28.3657819Z 
2025-08-18T08:59:28.3657913Z <a id="emailer.generate_body"></a>
2025-08-18T08:59:28.3658065Z 
2025-08-18T08:59:28.3658140Z # emailer.generate\_body
2025-08-18T08:59:28.3658264Z 
2025-08-18T08:59:28.3658342Z <a id="llm_server"></a>
2025-08-18T08:59:28.3658458Z 
2025-08-18T08:59:28.3658522Z # llm\_server
2025-08-18T08:59:28.3658624Z 
2025-08-18T08:59:28.3658700Z <a id="llm_server.app"></a>
2025-08-18T08:59:28.3658832Z 
2025-08-18T08:59:28.3658897Z # llm\_server.app
2025-08-18T08:59:28.3659007Z 
