2025-08-18T17:26:17.1199762Z ##[group]Run pydoc-markdown
2025-08-18T17:26:17.1200089Z [36;1mpydoc-markdown[0m
2025-08-18T17:26:17.1240384Z shell: /usr/bin/bash -e {0}
2025-08-18T17:26:17.1240615Z env:
2025-08-18T17:26:17.1240857Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:26:17.1241284Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T17:26:17.1241690Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:26:17.1242079Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:26:17.1242455Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T17:26:17.1242837Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T17:26:17.1243156Z ##[endgroup]
2025-08-18T17:26:17.4459210Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T17:26:17.4460005Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T17:26:17.4460473Z In "pydoc-markdown.yml"
2025-08-18T17:26:17.4460909Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T17:26:17.4461596Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T17:26:17.4462357Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T17:26:17.4462881Z 
2025-08-18T17:26:17.7459465Z <a id="__init__"></a>
2025-08-18T17:26:17.7459967Z 
2025-08-18T17:26:17.7460226Z # \_\_init\_\_
2025-08-18T17:26:17.7460581Z 
2025-08-18T17:26:17.7460838Z <a id="api"></a>
2025-08-18T17:26:17.7461230Z 
2025-08-18T17:26:17.7461471Z # api
2025-08-18T17:26:17.7461805Z 
2025-08-18T17:26:17.7462090Z <a id="api.errors"></a>
2025-08-18T17:26:17.7462582Z 
2025-08-18T17:26:17.7462796Z # api.errors
2025-08-18T17:26:17.7463106Z 
2025-08-18T17:26:17.7463401Z <a id="api.tests.test_errors_json"></a>
2025-08-18T17:26:17.7464120Z 
2025-08-18T17:26:17.7464328Z # api.tests.test\_errors\_json
2025-08-18T17:26:17.7464608Z 
2025-08-18T17:26:17.7464745Z <a id="api.tests.test_llm"></a>
2025-08-18T17:26:17.7464972Z 
2025-08-18T17:26:17.7465086Z # api.tests.test\_llm
2025-08-18T17:26:17.7465327Z 
2025-08-18T17:26:17.7465455Z <a id="api.tests.test_cors"></a>
2025-08-18T17:26:17.7465687Z 
2025-08-18T17:26:17.7465800Z # api.tests.test\_cors
2025-08-18T17:26:17.7466091Z 
2025-08-18T17:26:17.7466225Z <a id="api.tests.test_imports"></a>
2025-08-18T17:26:17.7466477Z 
2025-08-18T17:26:17.7466607Z # api.tests.test\_imports
2025-08-18T17:26:17.7466814Z 
2025-08-18T17:26:17.7466954Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T17:26:17.7467226Z 
2025-08-18T17:26:17.7467353Z # api.tests.test\_rate\_limit
2025-08-18T17:26:17.7467575Z 
2025-08-18T17:26:17.7467730Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T17:26:17.7468015Z 
2025-08-18T17:26:17.7468117Z #### app
2025-08-18T17:26:17.7468259Z 
2025-08-18T17:26:17.7468366Z noqa: E402
2025-08-18T17:26:17.7468509Z 
2025-08-18T17:26:17.7468647Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T17:26:17.7468912Z 
2025-08-18T17:26:17.7469043Z # api.tests.test\_entrypoint
2025-08-18T17:26:17.7469264Z 
2025-08-18T17:26:17.7469669Z <a id="api.tests.test_health"></a>
2025-08-18T17:26:17.7469917Z 
2025-08-18T17:26:17.7470035Z # api.tests.test\_health
2025-08-18T17:26:17.7470235Z 
2025-08-18T17:26:17.7470365Z <a id="api.logging_config"></a>
2025-08-18T17:26:17.7470588Z 
2025-08-18T17:26:17.7470702Z # api.logging\_config
2025-08-18T17:26:17.7470894Z 
2025-08-18T17:26:17.7471028Z <a id="api.migrations.env"></a>
2025-08-18T17:26:17.7471262Z 
2025-08-18T17:26:17.7471377Z # api.migrations.env
2025-08-18T17:26:17.7471571Z 
2025-08-18T17:26:17.7471758Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T17:26:17.7472084Z 
2025-08-18T17:26:17.7472256Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T17:26:17.7472554Z 
2025-08-18T17:26:17.7472724Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T17:26:17.7473036Z 
2025-08-18T17:26:17.7473185Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T17:26:17.7473466Z 
2025-08-18T17:26:17.7473940Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T17:26:17.7474516Z 
2025-08-18T17:26:17.7474690Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T17:26:17.7474962Z 
2025-08-18T17:26:17.7475116Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T17:26:17.7475362Z 
2025-08-18T17:26:17.7475489Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T17:26:17.7475724Z 
2025-08-18T17:26:17.7475865Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T17:26:17.7476105Z 
2025-08-18T17:26:17.7476234Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T17:26:17.7476454Z 
2025-08-18T17:26:17.7476601Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T17:26:17.7476850Z 
2025-08-18T17:26:17.7476985Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T17:26:17.7477213Z 
2025-08-18T17:26:17.7477351Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T17:26:17.7477593Z 
2025-08-18T17:26:17.7477719Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T17:26:17.7477951Z 
2025-08-18T17:26:17.7478102Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T17:26:17.7478346Z 
2025-08-18T17:26:17.7478470Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T17:26:17.7478698Z 
2025-08-18T17:26:17.7478863Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T17:26:17.7479127Z 
2025-08-18T17:26:17.7479268Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T17:26:17.7479514Z 
2025-08-18T17:26:17.7479659Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T17:26:17.7479905Z 
2025-08-18T17:26:17.7480040Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T17:26:17.7480269Z 
2025-08-18T17:26:17.7480429Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T17:26:17.7480698Z 
2025-08-18T17:26:17.7480837Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T17:26:17.7481077Z 
2025-08-18T17:26:17.7481206Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T17:26:17.7481450Z 
2025-08-18T17:26:17.7481562Z # api.migrations.versions.0001\_baseline
2025-08-18T17:26:17.7481770Z 
2025-08-18T17:26:17.7481884Z <a id="api.migrations.versions"></a>
2025-08-18T17:26:17.7482079Z 
2025-08-18T17:26:17.7482177Z # api.migrations.versions
2025-08-18T17:26:17.7482342Z 
2025-08-18T17:26:17.7482436Z <a id="api.migrations"></a>
2025-08-18T17:26:17.7482597Z 
2025-08-18T17:26:17.7482679Z # api.migrations
2025-08-18T17:26:17.7482814Z 
2025-08-18T17:26:17.7482895Z <a id="api.db"></a>
2025-08-18T17:26:17.7483025Z 
2025-08-18T17:26:17.7483104Z # api.db
2025-08-18T17:26:17.7483210Z 
2025-08-18T17:26:17.7483304Z <a id="api.routes.stats"></a>
2025-08-18T17:26:17.7483481Z 
2025-08-18T17:26:17.7483566Z # api.routes.stats
2025-08-18T17:26:17.7483832Z 
2025-08-18T17:26:17.7483936Z <a id="api.routes.stats.kpi"></a>
2025-08-18T17:26:17.7484126Z 
2025-08-18T17:26:17.7484202Z #### kpi
2025-08-18T17:26:17.7484306Z 
2025-08-18T17:26:17.7484390Z ```python
2025-08-18T17:26:17.7484588Z @router.get("/stats/kpi")
2025-08-18T17:26:17.7485082Z def kpi() -> List[Dict[str, int]]
2025-08-18T17:26:17.7485299Z ```
2025-08-18T17:26:17.7485466Z 
2025-08-18T17:26:17.7485551Z Return KPI metrics (mock).
2025-08-18T17:26:17.7485721Z 
2025-08-18T17:26:17.7485832Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T17:26:17.7486025Z 
2025-08-18T17:26:17.7486099Z #### roi\_by\_vendor
2025-08-18T17:26:17.7486220Z 
2025-08-18T17:26:17.7486287Z ```python
2025-08-18T17:26:17.7486465Z @router.get("/stats/roi_by_vendor")
2025-08-18T17:26:17.7486727Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T17:26:17.7486965Z ```
2025-08-18T17:26:17.7487059Z 
2025-08-18T17:26:17.7487147Z Return ROI percent by vendor.
2025-08-18T17:26:17.7487292Z 
2025-08-18T17:26:17.7487392Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T17:26:17.7487566Z 
2025-08-18T17:26:17.7487637Z #### roi\_trend
2025-08-18T17:26:17.7487747Z 
2025-08-18T17:26:17.7487813Z ```python
2025-08-18T17:26:17.7487984Z @router.get("/stats/roi_trend")
2025-08-18T17:26:17.7488380Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T17:26:17.7488622Z ```
2025-08-18T17:26:17.7488713Z 
2025-08-18T17:26:17.7488790Z Return 30-day ROI trend.
2025-08-18T17:26:17.7488976Z 
2025-08-18T17:26:17.7489063Z <a id="api.routes.roi"></a>
2025-08-18T17:26:17.7489202Z 
2025-08-18T17:26:17.7489273Z # api.routes.roi
2025-08-18T17:26:17.7489389Z 
2025-08-18T17:26:17.7489473Z <a id="api.routes.health"></a>
2025-08-18T17:26:17.7489619Z 
2025-08-18T17:26:17.7489693Z # api.routes.health
2025-08-18T17:26:17.7489815Z 
2025-08-18T17:26:17.7489909Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T17:26:17.7490082Z 
2025-08-18T17:26:17.7490154Z #### MAX\_SKEW
2025-08-18T17:26:17.7490256Z 
2025-08-18T17:26:17.7490322Z seconds
2025-08-18T17:26:17.7490410Z 
2025-08-18T17:26:17.7490511Z <a id="api.routes.health.health"></a>
2025-08-18T17:26:17.7490681Z 
2025-08-18T17:26:17.7490752Z #### health
2025-08-18T17:26:17.7490852Z 
2025-08-18T17:26:17.7490920Z ```python
2025-08-18T17:26:17.7491116Z @router.get("/health", include_in_schema=False)
2025-08-18T17:26:17.7491530Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T17:26:17.7491891Z ```
2025-08-18T17:26:17.7491976Z 
2025-08-18T17:26:17.7492096Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T17:26:17.7492310Z 
2025-08-18T17:26:17.7492402Z <a id="api.routes.repository"></a>
2025-08-18T17:26:17.7492600Z 
2025-08-18T17:26:17.7492683Z # api.routes.repository
2025-08-18T17:26:17.7492816Z 
2025-08-18T17:26:17.7492891Z <a id="api.routes"></a>
2025-08-18T17:26:17.7493013Z 
2025-08-18T17:26:17.7493088Z # api.routes
2025-08-18T17:26:17.7493189Z 
2025-08-18T17:26:17.7493271Z <a id="api.models.fee"></a>
2025-08-18T17:26:17.7493409Z 
2025-08-18T17:26:17.7493487Z # api.models.fee
2025-08-18T17:26:17.7493595Z 
2025-08-18T17:26:17.7493769Z <a id="api.models"></a>
2025-08-18T17:26:17.7493899Z 
2025-08-18T17:26:17.7493967Z # api.models
2025-08-18T17:26:17.7494065Z 
2025-08-18T17:26:17.7494148Z <a id="api.roi_repository"></a>
2025-08-18T17:26:17.7494309Z 
2025-08-18T17:26:17.7494382Z # api.roi\_repository
2025-08-18T17:26:17.7494496Z 
2025-08-18T17:26:17.7494572Z <a id="api.main"></a>
2025-08-18T17:26:17.7494679Z 
2025-08-18T17:26:17.7494742Z # api.main
2025-08-18T17:26:17.7494841Z 
2025-08-18T17:26:17.7494919Z <a id="api.main.ready"></a>
2025-08-18T17:26:17.7495050Z 
2025-08-18T17:26:17.7495111Z #### ready
2025-08-18T17:26:17.7495209Z 
2025-08-18T17:26:17.7495270Z ```python
2025-08-18T17:26:17.7495531Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T17:26:17.7495942Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T17:26:17.7496284Z                                                                       str]
2025-08-18T17:26:17.7496512Z ```
2025-08-18T17:26:17.7496600Z 
2025-08-18T17:26:17.7496696Z Return 200 only when migrations are at head.
2025-08-18T17:26:17.7496867Z 
2025-08-18T17:26:17.7496940Z <a id="api.config"></a>
2025-08-18T17:26:17.7497064Z 
2025-08-18T17:26:17.7497255Z # api.config
2025-08-18T17:26:17.7497353Z 
2025-08-18T17:26:17.7497423Z <a id="etl"></a>
2025-08-18T17:26:17.7497524Z 
2025-08-18T17:26:17.7497585Z # etl
2025-08-18T17:26:17.7497673Z 
2025-08-18T17:26:17.7497753Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T17:26:17.7497898Z 
2025-08-18T17:26:17.7497971Z # etl.fba\_fee\_ingestor
2025-08-18T17:26:17.7498100Z 
2025-08-18T17:26:17.7498181Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T17:26:17.7498323Z 
2025-08-18T17:26:17.7498400Z # etl.sp\_fees\_ingestor
2025-08-18T17:26:17.7498522Z 
2025-08-18T17:26:17.7498600Z <a id="etl.keepa_ingestor"></a>
2025-08-18T17:26:17.7498741Z 
2025-08-18T17:26:17.7498812Z # etl.keepa\_ingestor
2025-08-18T17:26:17.7498925Z 
2025-08-18T17:26:17.7498991Z <a id="etl.db"></a>
2025-08-18T17:26:17.7499102Z 
2025-08-18T17:26:17.7499164Z # etl.db
2025-08-18T17:26:17.7499251Z 
2025-08-18T17:26:17.7499339Z <a id="etl.dialects.schemas"></a>
2025-08-18T17:26:17.7499483Z 
2025-08-18T17:26:17.7499558Z # etl.dialects.schemas
2025-08-18T17:26:17.7499814Z 
2025-08-18T17:26:17.7499940Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T17:26:17.7500119Z 
2025-08-18T17:26:17.7500208Z # etl.dialects.amazon\_reimbursements
2025-08-18T17:26:17.7500385Z 
2025-08-18T17:26:17.7500482Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T17:26:17.7500653Z 
2025-08-18T17:26:17.7500745Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T17:26:17.7500899Z 
2025-08-18T17:26:17.7500987Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T17:26:17.7501146Z 
2025-08-18T17:26:17.7501234Z # etl.dialects.amazon\_returns
2025-08-18T17:26:17.7501372Z 
2025-08-18T17:26:17.7501465Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T17:26:17.7501637Z 
2025-08-18T17:26:17.7501721Z # etl.dialects.amazon\_fee\_preview
2025-08-18T17:26:17.7501872Z 
2025-08-18T17:26:17.7501982Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T17:26:17.7502165Z 
2025-08-18T17:26:17.7502255Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T17:26:17.7502425Z 
2025-08-18T17:26:17.7502527Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T17:26:17.7502694Z 
2025-08-18T17:26:17.7502781Z # etl.dialects.amazon\_settlements
2025-08-18T17:26:17.7502939Z 
2025-08-18T17:26:17.7503016Z <a id="etl.dialects"></a>
2025-08-18T17:26:17.7503141Z 
2025-08-18T17:26:17.7503211Z # etl.dialects
2025-08-18T17:26:17.7503309Z 
2025-08-18T17:26:17.7503375Z <a id="ingest"></a>
2025-08-18T17:26:17.7503481Z 
2025-08-18T17:26:17.7503549Z # ingest
2025-08-18T17:26:17.7503635Z 
2025-08-18T17:26:17.7503815Z <a id="ingest.maintenance"></a>
2025-08-18T17:26:17.7504044Z 
2025-08-18T17:26:17.7504165Z # ingest.maintenance
2025-08-18T17:26:17.7504289Z 
2025-08-18T17:26:17.7504375Z <a id="ingest.copy_loader"></a>
2025-08-18T17:26:17.7504521Z 
2025-08-18T17:26:17.7504594Z # ingest.copy\_loader
2025-08-18T17:26:17.7504709Z 
2025-08-18T17:26:17.7504817Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T17:26:17.7504998Z 
2025-08-18T17:26:17.7505072Z #### copy\_df\_via\_temp
2025-08-18T17:26:17.7505208Z 
2025-08-18T17:26:17.7505271Z ```python
2025-08-18T17:26:17.7505439Z def copy_df_via_temp(engine: Engine,
2025-08-18T17:26:17.7505679Z                      df: pd.DataFrame,
2025-08-18T17:26:17.7505923Z                      target_table: str,
2025-08-18T17:26:17.7506142Z                      *,
2025-08-18T17:26:17.7506355Z                      target_schema: Optional[str] = None,
2025-08-18T17:26:17.7506610Z                      columns: Sequence[str],
2025-08-18T17:26:17.7506879Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T17:26:17.7507156Z                      analyze_after: bool = False,
2025-08-18T17:26:17.7507421Z                      connection: Any | None = None) -> int
2025-08-18T17:26:17.7507656Z ```
2025-08-18T17:26:17.7507748Z 
2025-08-18T17:26:17.7507905Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T17:26:17.7508137Z 
2025-08-18T17:26:17.7508230Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T17:26:17.7508527Z 
2025-08-18T17:26:17.7508606Z # ingest.tests.test\_smoke
2025-08-18T17:26:17.7508742Z 
2025-08-18T17:26:17.7508819Z <a id="ingest.tests"></a>
2025-08-18T17:26:17.7508943Z 
2025-08-18T17:26:17.7509008Z # ingest.tests
2025-08-18T17:26:17.7509116Z 
2025-08-18T17:26:17.7509199Z <a id="ingest.upload_router"></a>
2025-08-18T17:26:17.7509347Z 
2025-08-18T17:26:17.7509427Z # ingest.upload\_router
2025-08-18T17:26:17.7509545Z 
2025-08-18T17:26:17.7509624Z <a id="ingest.email_watcher"></a>
2025-08-18T17:26:17.7509772Z 
2025-08-18T17:26:17.7509843Z # ingest.email\_watcher
2025-08-18T17:26:17.7509957Z 
2025-08-18T17:26:17.7510043Z <a id="ingest.email_watcher.main"></a>
2025-08-18T17:26:17.7510212Z 
2025-08-18T17:26:17.7510273Z #### main
2025-08-18T17:26:17.7510362Z 
2025-08-18T17:26:17.7510433Z ```python
2025-08-18T17:26:17.7510600Z def main() -> dict[str, str]
2025-08-18T17:26:17.7510796Z ```
2025-08-18T17:26:17.7510879Z 
2025-08-18T17:26:17.7511018Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T17:26:17.7511364Z 
2025-08-18T17:26:17.7511491Z Returns {"status": "success"} when processing completes.
2025-08-18T17:26:17.7511702Z 
2025-08-18T17:26:17.7511779Z <a id="ingest.tasks"></a>
2025-08-18T17:26:17.7511912Z 
2025-08-18T17:26:17.7511978Z # ingest.tasks
2025-08-18T17:26:17.7512077Z 
2025-08-18T17:26:17.7512181Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T17:26:17.7512351Z 
2025-08-18T17:26:17.7512423Z #### task\_import\_file
2025-08-18T17:26:17.7512545Z 
2025-08-18T17:26:17.7512608Z ```python
2025-08-18T17:26:17.7512809Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T17:26:17.7513092Z def task_import_file(self,
2025-08-18T17:26:17.7513291Z                      uri: str,
2025-08-18T17:26:17.7513508Z                      report_type: Optional[str] = None,
2025-08-18T17:26:17.7513980Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T17:26:17.7514220Z ```
2025-08-18T17:26:17.7514302Z 
2025-08-18T17:26:17.7514438Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T17:26:17.7514654Z 
2025-08-18T17:26:17.7514735Z <a id="ingest.celery_app"></a>
2025-08-18T17:26:17.7514879Z 
2025-08-18T17:26:17.7514950Z # ingest.celery\_app
2025-08-18T17:26:17.7515061Z 
2025-08-18T17:26:17.7515145Z <a id="ingest.ingest_router"></a>
2025-08-18T17:26:17.7515290Z 
2025-08-18T17:26:17.7515362Z # ingest.ingest\_router
2025-08-18T17:26:17.7515500Z 
2025-08-18T17:26:17.7515573Z <a id="logistics_etl"></a>
2025-08-18T17:26:17.7515702Z 
2025-08-18T17:26:17.7515766Z # logistics\_etl
2025-08-18T17:26:17.7515868Z 
2025-08-18T17:26:17.7515943Z Daily logistics ETL job.
2025-08-18T17:26:17.7516069Z 
2025-08-18T17:26:17.7516148Z <a id="logistics_etl.__main__"></a>
2025-08-18T17:26:17.7516298Z 
2025-08-18T17:26:17.7516378Z # logistics\_etl.\_\_main\_\_
2025-08-18T17:26:17.7516512Z 
2025-08-18T17:26:17.7516589Z <a id="logistics_etl.dsn"></a>
2025-08-18T17:26:17.7516728Z 
2025-08-18T17:26:17.7516797Z # logistics\_etl.dsn
2025-08-18T17:26:17.7516907Z 
2025-08-18T17:26:17.7517034Z Local DSN builder to avoid cross-service dependency.
2025-08-18T17:26:17.7517235Z 
2025-08-18T17:26:17.7517326Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T17:26:17.7517487Z 
2025-08-18T17:26:17.7517556Z #### build\_dsn
2025-08-18T17:26:17.7517656Z 
2025-08-18T17:26:17.7517719Z ```python
2025-08-18T17:26:17.7517901Z def build_dsn(sync: bool = True) -> str
2025-08-18T17:26:17.7518120Z ```
2025-08-18T17:26:17.7518205Z 
2025-08-18T17:26:17.7518344Z Return a Postgres DSN assembled from environment variables.
2025-08-18T17:26:17.7518565Z 
2025-08-18T17:26:17.7518712Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T17:26:17.7519103Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T17:26:17.7519450Z error when any required variable is missing.
2025-08-18T17:26:17.7519623Z 
2025-08-18T17:26:17.7519715Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T17:26:17.7519891Z 
2025-08-18T17:26:17.7519975Z # logistics\_etl.tests.conftest
2025-08-18T17:26:17.7520325Z 
2025-08-18T17:26:17.7520434Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T17:26:17.7520629Z 
2025-08-18T17:26:17.7520718Z # logistics\_etl.tests.test\_repository
2025-08-18T17:26:17.7520882Z 
2025-08-18T17:26:17.7520982Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T17:26:17.7521152Z 
2025-08-18T17:26:17.7521235Z # logistics\_etl.tests.test\_cron
2025-08-18T17:26:17.7521389Z 
2025-08-18T17:26:17.7521485Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T17:26:17.7521655Z 
2025-08-18T17:26:17.7521739Z # logistics\_etl.tests.test\_imports
2025-08-18T17:26:17.7521903Z 
2025-08-18T17:26:17.7521994Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T17:26:17.7522160Z 
2025-08-18T17:26:17.7522249Z # logistics\_etl.tests.test\_smoke
2025-08-18T17:26:17.7522399Z 
2025-08-18T17:26:17.7522491Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T17:26:17.7522665Z 
2025-08-18T17:26:17.7522747Z # logistics\_etl.tests.test\_client
2025-08-18T17:26:17.7522898Z 
2025-08-18T17:26:17.7523237Z <a id="logistics_etl.tests"></a>
2025-08-18T17:26:17.7523389Z 
2025-08-18T17:26:17.7523461Z # logistics\_etl.tests
2025-08-18T17:26:17.7523579Z 
2025-08-18T17:26:17.7523664Z <a id="logistics_etl.flow"></a>
2025-08-18T17:26:17.7523907Z 
2025-08-18T17:26:17.7523978Z # logistics\_etl.flow
2025-08-18T17:26:17.7524098Z 
2025-08-18T17:26:17.7524183Z <a id="logistics_etl.client"></a>
2025-08-18T17:26:17.7524330Z 
2025-08-18T17:26:17.7524403Z # logistics\_etl.client
2025-08-18T17:26:17.7524527Z 
2025-08-18T17:26:17.7524606Z <a id="logistics_etl.cron"></a>
2025-08-18T17:26:17.7524743Z 
2025-08-18T17:26:17.7524820Z # logistics\_etl.cron
2025-08-18T17:26:17.7524933Z 
2025-08-18T17:26:17.7525011Z <a id="logistics_etl.db"></a>
2025-08-18T17:26:17.7525153Z 
2025-08-18T17:26:17.7525221Z # logistics\_etl.db
2025-08-18T17:26:17.7525327Z 
2025-08-18T17:26:17.7525414Z <a id="logistics_etl.repository"></a>
2025-08-18T17:26:17.7525579Z 
2025-08-18T17:26:17.7525662Z # logistics\_etl.repository
2025-08-18T17:26:17.7525812Z 
2025-08-18T17:26:17.7525891Z <a id="alert_bot"></a>
2025-08-18T17:26:17.7526008Z 
2025-08-18T17:26:17.7526072Z # alert\_bot
2025-08-18T17:26:17.7526166Z 
2025-08-18T17:26:17.7526259Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T17:26:17.7526421Z 
2025-08-18T17:26:17.7526502Z # alert\_bot.tests.test\_smoke
2025-08-18T17:26:17.7526645Z 
2025-08-18T17:26:17.7526720Z <a id="alert_bot.tests"></a>
2025-08-18T17:26:17.7526852Z 
2025-08-18T17:26:17.7526925Z # alert\_bot.tests
2025-08-18T17:26:17.7527030Z 
2025-08-18T17:26:17.7527108Z <a id="alert_bot.alert_bot"></a>
2025-08-18T17:26:17.7527248Z 
2025-08-18T17:26:17.7527327Z # alert\_bot.alert\_bot
2025-08-18T17:26:17.7527442Z 
2025-08-18T17:26:17.7527515Z <a id="alert_bot.rules"></a>
2025-08-18T17:26:17.7527649Z 
2025-08-18T17:26:17.7527716Z # alert\_bot.rules
2025-08-18T17:26:17.7527817Z 
2025-08-18T17:26:17.7527883Z <a id="common"></a>
2025-08-18T17:26:17.7527992Z 
2025-08-18T17:26:17.7528052Z # common
2025-08-18T17:26:17.7528139Z 
2025-08-18T17:26:17.7528226Z <a id="common.dsn"></a>
2025-08-18T17:26:17.7528341Z 
2025-08-18T17:26:17.7528406Z # common.dsn
2025-08-18T17:26:17.7528505Z 
2025-08-18T17:26:17.7528587Z <a id="common.dsn.build_dsn"></a>
2025-08-18T17:26:17.7528734Z 
2025-08-18T17:26:17.7528798Z #### build\_dsn
2025-08-18T17:26:17.7528903Z 
2025-08-18T17:26:17.7528967Z ```python
2025-08-18T17:26:17.7566397Z def build_dsn(sync: bool = True) -> str
2025-08-18T17:26:17.7566806Z ```
2025-08-18T17:26:17.7566949Z 
2025-08-18T17:26:17.7567175Z Return a Postgres DSN, validating required variables.
2025-08-18T17:26:17.7567534Z 
2025-08-18T17:26:17.7567860Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T17:26:17.7568570Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T17:26:17.7568985Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T17:26:17.7569299Z missing.
2025-08-18T17:26:17.7569392Z 
2025-08-18T17:26:17.7569486Z <a id="common.models_vendor"></a>
2025-08-18T17:26:17.7569820Z 
2025-08-18T17:26:17.7569898Z # common.models\_vendor
2025-08-18T17:26:17.7570033Z 
2025-08-18T17:26:17.7570125Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T17:26:17.7570292Z 
2025-08-18T17:26:17.7570359Z ## Vendor Objects
2025-08-18T17:26:17.7570471Z 
2025-08-18T17:26:17.7570536Z ```python
2025-08-18T17:26:17.7570698Z class Vendor(Base)
2025-08-18T17:26:17.7570860Z ```
2025-08-18T17:26:17.7570943Z 
2025-08-18T17:26:17.7571084Z Vendor of inventory items.
2025-08-18T17:26:17.7571214Z 
2025-08-18T17:26:17.7571315Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T17:26:17.7571500Z 
2025-08-18T17:26:17.7571570Z ## VendorPrice Objects
2025-08-18T17:26:17.7571708Z 
2025-08-18T17:26:17.7571770Z ```python
2025-08-18T17:26:17.7571932Z class VendorPrice(Base)
2025-08-18T17:26:17.7572105Z ```
2025-08-18T17:26:17.7572186Z 
2025-08-18T17:26:17.7572294Z Association table linking vendors to pricing.
2025-08-18T17:26:17.7572475Z 
2025-08-18T17:26:17.7572551Z <a id="common.db_url"></a>
2025-08-18T17:26:17.7572810Z 
2025-08-18T17:26:17.7572879Z # common.db\_url
2025-08-18T17:26:17.7572983Z 
2025-08-18T17:26:17.7573065Z <a id="common.db_url.build_url"></a>
2025-08-18T17:26:17.7573222Z 
2025-08-18T17:26:17.7573290Z #### build\_url
2025-08-18T17:26:17.7573389Z 
2025-08-18T17:26:17.7573456Z ```python
2025-08-18T17:26:17.7573630Z def build_url(async_: bool = True) -> str
2025-08-18T17:26:17.7574007Z ```
2025-08-18T17:26:17.7574091Z 
2025-08-18T17:26:17.7574189Z Return Postgres DSN from env or PG_* parts.
2025-08-18T17:26:17.7574373Z 
2025-08-18T17:26:17.7574452Z <a id="common.keepa"></a>
2025-08-18T17:26:17.7574581Z 
2025-08-18T17:26:17.7574653Z # common.keepa
2025-08-18T17:26:17.7574754Z 
2025-08-18T17:26:17.7574826Z <a id="common.llm"></a>
2025-08-18T17:26:17.7574943Z 
2025-08-18T17:26:17.7575012Z # common.llm
2025-08-18T17:26:17.7575105Z 
2025-08-18T17:26:17.7575184Z <a id="common.settings"></a>
2025-08-18T17:26:17.7575326Z 
2025-08-18T17:26:17.7575393Z # common.settings
2025-08-18T17:26:17.7575512Z 
2025-08-18T17:26:17.7575584Z <a id="common.db"></a>
2025-08-18T17:26:17.7575710Z 
2025-08-18T17:26:17.7575773Z # common.db
2025-08-18T17:26:17.7575864Z 
2025-08-18T17:26:17.7575961Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T17:26:17.7576133Z 
2025-08-18T17:26:17.7576209Z #### build\_sqlalchemy\_url
2025-08-18T17:26:17.7576346Z 
2025-08-18T17:26:17.7576409Z ```python
2025-08-18T17:26:17.7576579Z def build_sqlalchemy_url() -> str
2025-08-18T17:26:17.7576792Z ```
2025-08-18T17:26:17.7576874Z 
2025-08-18T17:26:17.7576970Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T17:26:17.7577150Z 
2025-08-18T17:26:17.7577239Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T17:26:17.7577407Z 
2025-08-18T17:26:17.7577487Z #### build\_asyncpg\_dsn
2025-08-18T17:26:17.7577612Z 
2025-08-18T17:26:17.7577675Z ```python
2025-08-18T17:26:17.7577846Z def build_asyncpg_dsn() -> str
2025-08-18T17:26:17.7578041Z ```
2025-08-18T17:26:17.7578128Z 
2025-08-18T17:26:17.7578256Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T17:26:17.7578483Z 
2025-08-18T17:26:17.7578573Z <a id="common.db.refresh_mvs"></a>
2025-08-18T17:26:17.7578726Z 
2025-08-18T17:26:17.7578791Z #### refresh\_mvs
2025-08-18T17:26:17.7578895Z 
2025-08-18T17:26:17.7578964Z ```python
2025-08-18T17:26:17.7579157Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T17:26:17.7579413Z ```
2025-08-18T17:26:17.7579492Z 
2025-08-18T17:26:17.7579629Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T17:26:17.7579853Z 
2025-08-18T17:26:17.7579931Z <a id="common.config"></a>
2025-08-18T17:26:17.7580059Z 
2025-08-18T17:26:17.7580133Z # common.config
2025-08-18T17:26:17.7580235Z 
2025-08-18T17:26:17.7580308Z <a id="common.base"></a>
2025-08-18T17:26:17.7580436Z 
2025-08-18T17:26:17.7580498Z # common.base
2025-08-18T17:26:17.7580596Z 
2025-08-18T17:26:17.7580677Z <a id="common.base.Base"></a>
2025-08-18T17:26:17.7580822Z 
2025-08-18T17:26:17.7580887Z ## Base Objects
2025-08-18T17:26:17.7581127Z 
2025-08-18T17:26:17.7581195Z ```python
2025-08-18T17:26:17.7581359Z class Base(DeclarativeBase)
2025-08-18T17:26:17.7581559Z ```
2025-08-18T17:26:17.7581637Z 
2025-08-18T17:26:17.7581722Z Base class for SQLAlchemy models.
2025-08-18T17:26:17.7581880Z 
2025-08-18T17:26:17.7581951Z <a id="repricer"></a>
2025-08-18T17:26:17.7582068Z 
2025-08-18T17:26:17.7582131Z # repricer
2025-08-18T17:26:17.7582233Z 
2025-08-18T17:26:17.7582320Z <a id="repricer.app.schemas"></a>
2025-08-18T17:26:17.7582471Z 
2025-08-18T17:26:17.7582554Z # repricer.app.schemas
2025-08-18T17:26:17.7582675Z 
2025-08-18T17:26:17.7582758Z <a id="repricer.app.deps"></a>
2025-08-18T17:26:17.7582902Z 
2025-08-18T17:26:17.7582982Z # repricer.app.deps
2025-08-18T17:26:17.7583094Z 
2025-08-18T17:26:17.7583214Z Placeholder module for Keepa / SP-API clients.
2025-08-18T17:26:17.7583411Z 
2025-08-18T17:26:17.7583494Z <a id="repricer.app.logic"></a>
2025-08-18T17:26:17.7583640Z 
2025-08-18T17:26:17.7583856Z # repricer.app.logic
2025-08-18T17:26:17.7584161Z 
2025-08-18T17:26:17.7584262Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T17:26:17.7584440Z 
2025-08-18T17:26:17.7584510Z #### MIN\_MARGIN
2025-08-18T17:26:17.7584611Z 
2025-08-18T17:26:17.7584674Z 15 % ROI
2025-08-18T17:26:17.7584767Z 
2025-08-18T17:26:17.7584869Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T17:26:17.7585055Z 
2025-08-18T17:26:17.7585129Z #### compute\_price
2025-08-18T17:26:17.7585239Z 
2025-08-18T17:26:17.7585301Z ```python
2025-08-18T17:26:17.7585551Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T17:26:17.7585853Z ```
2025-08-18T17:26:17.7585936Z 
2025-08-18T17:26:17.7586049Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T17:26:17.7586330Z Replace with real competitive logic later.
2025-08-18T17:26:17.7586509Z 
2025-08-18T17:26:17.7586590Z <a id="repricer.app.main"></a>
2025-08-18T17:26:17.7586735Z 
2025-08-18T17:26:17.7586814Z # repricer.app.main
2025-08-18T17:26:17.7586925Z 
2025-08-18T17:26:17.7587002Z <a id="repricer.app"></a>
2025-08-18T17:26:17.7587140Z 
2025-08-18T17:26:17.7587212Z # repricer.app
2025-08-18T17:26:17.7587313Z 
2025-08-18T17:26:17.7587406Z <a id="repricer.tests.test_imports"></a>
2025-08-18T17:26:17.7587579Z 
2025-08-18T17:26:17.7587662Z # repricer.tests.test\_imports
2025-08-18T17:26:17.7587802Z 
2025-08-18T17:26:17.7587890Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T17:26:17.7588058Z 
2025-08-18T17:26:17.7588142Z # repricer.tests.test\_smoke
2025-08-18T17:26:17.7588281Z 
2025-08-18T17:26:17.7588365Z <a id="repricer.tests"></a>
2025-08-18T17:26:17.7588498Z 
2025-08-18T17:26:17.7588566Z # repricer.tests
2025-08-18T17:26:17.7588675Z 
2025-08-18T17:26:17.7588739Z <a id="db"></a>
2025-08-18T17:26:17.7588838Z 
2025-08-18T17:26:17.7588899Z # db
2025-08-18T17:26:17.7588990Z 
2025-08-18T17:26:17.7589065Z <a id="db.utils.views"></a>
2025-08-18T17:26:17.7589195Z 
2025-08-18T17:26:17.7589268Z # db.utils.views
2025-08-18T17:26:17.7589372Z 
2025-08-18T17:26:17.7589464Z <a id="db.utils.views.replace_view"></a>
2025-08-18T17:26:17.7589648Z 
2025-08-18T17:26:17.7589715Z #### replace\_view
2025-08-18T17:26:17.7589822Z 
2025-08-18T17:26:17.7589884Z ```python
2025-08-18T17:26:17.7590080Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T17:26:17.7590325Z ```
2025-08-18T17:26:17.7590421Z 
2025-08-18T17:26:17.7590510Z Drop and recreate a SQL view atomically.
2025-08-18T17:26:17.7590680Z 
2025-08-18T17:26:17.7590761Z <a id="db.utils"></a>
2025-08-18T17:26:17.7590875Z 
2025-08-18T17:26:17.7590939Z # db.utils
2025-08-18T17:26:17.7591033Z 
2025-08-18T17:26:17.7591108Z <a id="price_importer"></a>
2025-08-18T17:26:17.7591237Z 
2025-08-18T17:26:17.7591304Z # price\_importer
2025-08-18T17:26:17.7591412Z 
2025-08-18T17:26:17.7591515Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T17:26:17.7591694Z 
2025-08-18T17:26:17.7591793Z # price\_importer.services\_common.dsn
2025-08-18T17:26:17.7591969Z 
2025-08-18T17:26:17.7592097Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T17:26:17.7592436Z 
2025-08-18T17:26:17.7592500Z #### build\_dsn
2025-08-18T17:26:17.7592602Z 
2025-08-18T17:26:17.7592664Z ```python
2025-08-18T17:26:17.7592841Z def build_dsn(sync: bool = True) -> str
2025-08-18T17:26:17.7593057Z ```
2025-08-18T17:26:17.7593144Z 
2025-08-18T17:26:17.7593210Z Return safe DSN.
2025-08-18T17:26:17.7593314Z 
2025-08-18T17:26:17.7593794Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T17:26:17.7594001Z 
2025-08-18T17:26:17.7594130Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T17:26:17.7594342Z 
2025-08-18T17:26:17.7594455Z # price\_importer.services\_common.models\_vendor
2025-08-18T17:26:17.7594641Z 
2025-08-18T17:26:17.7594748Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T17:26:17.7594939Z 
2025-08-18T17:26:17.7595035Z # price\_importer.services\_common.db\_url
2025-08-18T17:26:17.7595203Z 
2025-08-18T17:26:17.7595343Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T17:26:17.7595554Z 
2025-08-18T17:26:17.7595762Z #### build\_url
2025-08-18T17:26:17.7595874Z 
2025-08-18T17:26:17.7595938Z ```python
2025-08-18T17:26:17.7596112Z def build_url(async_: bool = True) -> str
2025-08-18T17:26:17.7596342Z ```
2025-08-18T17:26:17.7596427Z 
2025-08-18T17:26:17.7596530Z Return Postgres DSN from env or PG_* parts.
2025-08-18T17:26:17.7596705Z 
2025-08-18T17:26:17.7596813Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T17:26:17.7597002Z 
2025-08-18T17:26:17.7597096Z # price\_importer.services\_common.keepa
2025-08-18T17:26:17.7597263Z 
2025-08-18T17:26:17.7597362Z <a id="price_importer.services_common.llm"></a>
2025-08-18T17:26:17.7597546Z 
2025-08-18T17:26:17.7597635Z # price\_importer.services\_common.llm
2025-08-18T17:26:17.7597795Z 
2025-08-18T17:26:17.7597914Z <a id="price_importer.services_common.settings"></a>
2025-08-18T17:26:17.7598105Z 
2025-08-18T17:26:17.7598201Z # price\_importer.services\_common.settings
2025-08-18T17:26:17.7598376Z 
2025-08-18T17:26:17.7598475Z <a id="price_importer.services_common.db"></a>
2025-08-18T17:26:17.7598660Z 
2025-08-18T17:26:17.7598746Z # price\_importer.services\_common.db
2025-08-18T17:26:17.7598912Z 
2025-08-18T17:26:17.7599063Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T17:26:17.7599294Z 
2025-08-18T17:26:17.7599379Z #### build\_sqlalchemy\_url
2025-08-18T17:26:17.7599511Z 
2025-08-18T17:26:17.7599573Z ```python
2025-08-18T17:26:17.7599745Z def build_sqlalchemy_url() -> str
2025-08-18T17:26:17.7599948Z ```
2025-08-18T17:26:17.7600035Z 
2025-08-18T17:26:17.7600128Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T17:26:17.7600297Z 
2025-08-18T17:26:17.7600440Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T17:26:17.7600667Z 
2025-08-18T17:26:17.7600741Z #### build\_asyncpg\_dsn
2025-08-18T17:26:17.7600866Z 
2025-08-18T17:26:17.7600933Z ```python
2025-08-18T17:26:17.7601101Z def build_asyncpg_dsn() -> str
2025-08-18T17:26:17.7601297Z ```
2025-08-18T17:26:17.7601379Z 
2025-08-18T17:26:17.7601514Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T17:26:17.7601734Z 
2025-08-18T17:26:17.7601861Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T17:26:17.7602067Z 
2025-08-18T17:26:17.7602139Z #### refresh\_mvs
2025-08-18T17:26:17.7602242Z 
2025-08-18T17:26:17.7602304Z ```python
2025-08-18T17:26:17.7602500Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T17:26:17.7602743Z ```
2025-08-18T17:26:17.7602830Z 
2025-08-18T17:26:17.7602965Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T17:26:17.7603178Z 
2025-08-18T17:26:17.7603272Z <a id="price_importer.services_common"></a>
2025-08-18T17:26:17.7603452Z 
2025-08-18T17:26:17.7603538Z # price\_importer.services\_common
2025-08-18T17:26:17.7603792Z 
2025-08-18T17:26:17.7603906Z <a id="price_importer.services_common.base"></a>
2025-08-18T17:26:17.7604087Z 
2025-08-18T17:26:17.7604176Z # price\_importer.services\_common.base
2025-08-18T17:26:17.7604346Z 
2025-08-18T17:26:17.7604435Z <a id="price_importer.normaliser"></a>
2025-08-18T17:26:17.7604737Z 
2025-08-18T17:26:17.7604822Z # price\_importer.normaliser
2025-08-18T17:26:17.7604968Z 
2025-08-18T17:26:17.7605071Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T17:26:17.7605254Z 
2025-08-18T17:26:17.7605349Z # price\_importer.common.models\_vendor
2025-08-18T17:26:17.7605509Z 
2025-08-18T17:26:17.7605599Z <a id="price_importer.common.db_url"></a>
2025-08-18T17:26:17.7605770Z 
2025-08-18T17:26:17.7605857Z # price\_importer.common.db\_url
2025-08-18T17:26:17.7606003Z 
2025-08-18T17:26:17.7606108Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T17:26:17.7606296Z 
2025-08-18T17:26:17.7606361Z #### make\_dsn
2025-08-18T17:26:17.7606457Z 
2025-08-18T17:26:17.7606524Z ```python
2025-08-18T17:26:17.7606694Z def make_dsn(async_: bool = False) -> str
2025-08-18T17:26:17.7606919Z ```
2025-08-18T17:26:17.7607001Z 
2025-08-18T17:26:17.7607119Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T17:26:17.7607320Z 
2025-08-18T17:26:17.7607549Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T17:26:17.7607737Z 
2025-08-18T17:26:17.7607807Z #### build\_url
2025-08-18T17:26:17.7607908Z 
2025-08-18T17:26:17.7607971Z ```python
2025-08-18T17:26:17.7608153Z def build_url(async_: bool = False) -> str
2025-08-18T17:26:17.7608375Z ```
2025-08-18T17:26:17.7608463Z 
2025-08-18T17:26:17.7608587Z Return Postgres DSN built from environment variables.
2025-08-18T17:26:17.7608784Z 
2025-08-18T17:26:17.7608869Z <a id="price_importer.common"></a>
2025-08-18T17:26:17.7609029Z 
2025-08-18T17:26:17.7609106Z # price\_importer.common
2025-08-18T17:26:17.7609233Z 
2025-08-18T17:26:17.7609326Z <a id="price_importer.common.base"></a>
2025-08-18T17:26:17.7609489Z 
2025-08-18T17:26:17.7609570Z # price\_importer.common.base
2025-08-18T17:26:17.7609716Z 
2025-08-18T17:26:17.7609813Z <a id="price_importer.tests.conftest"></a>
2025-08-18T17:26:17.7609980Z 
2025-08-18T17:26:17.7610064Z # price\_importer.tests.conftest
2025-08-18T17:26:17.7610224Z 
2025-08-18T17:26:17.7610330Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T17:26:17.7610504Z 
2025-08-18T17:26:17.7610596Z # price\_importer.tests.test\_reader
2025-08-18T17:26:17.7610752Z 
2025-08-18T17:26:17.7610851Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T17:26:17.7611031Z 
2025-08-18T17:26:17.7611119Z # price\_importer.tests.test\_imports
2025-08-18T17:26:17.7611277Z 
2025-08-18T17:26:17.7611372Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T17:26:17.7611545Z 
2025-08-18T17:26:17.7611630Z # price\_importer.tests.test\_smoke
2025-08-18T17:26:17.7611783Z 
2025-08-18T17:26:17.7611892Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T17:26:17.7612078Z 
2025-08-18T17:26:17.7612168Z # price\_importer.tests.test\_normaliser
2025-08-18T17:26:17.7612336Z 
2025-08-18T17:26:17.7612420Z <a id="price_importer.tests"></a>
2025-08-18T17:26:17.7612566Z 
2025-08-18T17:26:17.7612639Z # price\_importer.tests
2025-08-18T17:26:17.7612763Z 
2025-08-18T17:26:17.7612847Z <a id="price_importer.reader"></a>
2025-08-18T17:26:17.7613004Z 
2025-08-18T17:26:17.7613085Z # price\_importer.reader
2025-08-18T17:26:17.7613209Z 
2025-08-18T17:26:17.7613298Z <a id="price_importer.repository"></a>
2025-08-18T17:26:17.7613465Z 
2025-08-18T17:26:17.7613546Z # price\_importer.repository
2025-08-18T17:26:17.7613783Z 
2025-08-18T17:26:17.7613868Z <a id="price_importer.import"></a>
2025-08-18T17:26:17.7614029Z 
2025-08-18T17:26:17.7614105Z # price\_importer.import
2025-08-18T17:26:17.7614229Z 
2025-08-18T17:26:17.7614305Z <a id="fees_h10"></a>
2025-08-18T17:26:17.7614448Z 
2025-08-18T17:26:17.7614511Z # fees\_h10
2025-08-18T17:26:17.7614603Z 
2025-08-18T17:26:17.7614686Z <a id="fees_h10.worker"></a>
2025-08-18T17:26:17.7614818Z 
2025-08-18T17:26:17.7614885Z # fees\_h10.worker
2025-08-18T17:26:17.7614994Z 
2025-08-18T17:26:17.7615091Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T17:26:17.7615262Z 
2025-08-18T17:26:17.7615340Z #### list\_active\_asins
2025-08-18T17:26:17.7615460Z 
2025-08-18T17:26:17.7615647Z ```python
2025-08-18T17:26:17.7615820Z def list_active_asins() -> list[str]
2025-08-18T17:26:17.7616029Z ```
2025-08-18T17:26:17.7616115Z 
2025-08-18T17:26:17.7616227Z Return known ASINs or an empty list if unavailable.
2025-08-18T17:26:17.7616414Z 
2025-08-18T17:26:17.7616498Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T17:26:17.7616658Z 
2025-08-18T17:26:17.7616737Z # fees\_h10.tests.test\_smoke
2025-08-18T17:26:17.7616871Z 
2025-08-18T17:26:17.7616951Z <a id="fees_h10.tests"></a>
2025-08-18T17:26:17.7617080Z 
2025-08-18T17:26:17.7617144Z # fees\_h10.tests
2025-08-18T17:26:17.7617252Z 
2025-08-18T17:26:17.7617326Z <a id="fees_h10.client"></a>
2025-08-18T17:26:17.7617454Z 
2025-08-18T17:26:17.7617518Z # fees\_h10.client
2025-08-18T17:26:17.7617628Z 
2025-08-18T17:26:17.7617713Z <a id="fees_h10.repository"></a>
2025-08-18T17:26:17.7617857Z 
2025-08-18T17:26:17.7617935Z # fees\_h10.repository
2025-08-18T17:26:17.7618052Z 
2025-08-18T17:26:17.7618120Z <a id="emailer"></a>
2025-08-18T17:26:17.7618352Z 
2025-08-18T17:26:17.7618422Z # emailer
2025-08-18T17:26:17.7618512Z 
2025-08-18T17:26:17.7618613Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T17:26:17.7618793Z 
2025-08-18T17:26:17.7618880Z # emailer.tests.test\_import\_emailer
2025-08-18T17:26:17.7619036Z 
2025-08-18T17:26:17.7619129Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T17:26:17.7619282Z 
2025-08-18T17:26:17.7619361Z # emailer.tests.test\_smoke
2025-08-18T17:26:17.7619494Z 
2025-08-18T17:26:17.7619576Z <a id="emailer.tests"></a>
2025-08-18T17:26:17.7619703Z 
2025-08-18T17:26:17.7619771Z # emailer.tests
2025-08-18T17:26:17.7619880Z 
2025-08-18T17:26:17.7619964Z <a id="emailer.generate_body"></a>
2025-08-18T17:26:17.7620117Z 
2025-08-18T17:26:17.7620193Z # emailer.generate\_body
2025-08-18T17:26:17.7620324Z 
2025-08-18T17:26:17.7620396Z <a id="llm_server"></a>
2025-08-18T17:26:17.7620511Z 
2025-08-18T17:26:17.7620578Z # llm\_server
2025-08-18T17:26:17.7620673Z 
2025-08-18T17:26:17.7620747Z <a id="llm_server.app"></a>
2025-08-18T17:26:17.7620890Z 
2025-08-18T17:26:17.7620957Z # llm\_server.app
2025-08-18T17:26:17.7621059Z 
