2025-08-19T08:54:59.8023529Z ##[group]Run pydoc-markdown
2025-08-19T08:54:59.8023846Z [36;1mpydoc-markdown[0m
2025-08-19T08:54:59.8064063Z shell: /usr/bin/bash -e {0}
2025-08-19T08:54:59.8064294Z env:
2025-08-19T08:54:59.8064534Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:54:59.8064949Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T08:54:59.8065337Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:54:59.8065677Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:54:59.8066028Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T08:54:59.8066402Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T08:54:59.8066715Z ##[endgroup]
2025-08-19T08:55:00.1030061Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T08:55:00.1030800Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T08:55:00.1031298Z In "pydoc-markdown.yml"
2025-08-19T08:55:00.1031740Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T08:55:00.1032551Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T08:55:00.1033604Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T08:55:00.1034175Z 
2025-08-19T08:55:00.4342687Z <a id="__init__"></a>
2025-08-19T08:55:00.4344798Z 
2025-08-19T08:55:00.4344996Z # \_\_init\_\_
2025-08-19T08:55:00.4345237Z 
2025-08-19T08:55:00.4345389Z <a id="api"></a>
2025-08-19T08:55:00.4345614Z 
2025-08-19T08:55:00.4345748Z # api
2025-08-19T08:55:00.4345934Z 
2025-08-19T08:55:00.4346108Z <a id="api.errors"></a>
2025-08-19T08:55:00.4346397Z 
2025-08-19T08:55:00.4346537Z # api.errors
2025-08-19T08:55:00.4346744Z 
2025-08-19T08:55:00.4346912Z <a id="api.sentry_config"></a>
2025-08-19T08:55:00.4347227Z 
2025-08-19T08:55:00.4347380Z # api.sentry\_config
2025-08-19T08:55:00.4347636Z 
2025-08-19T08:55:00.4347837Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T08:55:00.4348205Z 
2025-08-19T08:55:00.4348837Z # api.tests.test\_sentry\_scrub
2025-08-19T08:55:00.4349173Z 
2025-08-19T08:55:00.4349358Z <a id="api.tests.test_errors_json"></a>
2025-08-19T08:55:00.4349714Z 
2025-08-19T08:55:00.4349889Z # api.tests.test\_errors\_json
2025-08-19T08:55:00.4350220Z 
2025-08-19T08:55:00.4350402Z <a id="api.tests.test_llm"></a>
2025-08-19T08:55:00.4351315Z 
2025-08-19T08:55:00.4351531Z # api.tests.test\_llm
2025-08-19T08:55:00.4351796Z 
2025-08-19T08:55:00.4351984Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T08:55:00.4352356Z 
2025-08-19T08:55:00.4352527Z # api.tests.test\_sentry\_event
2025-08-19T08:55:00.4352823Z 
2025-08-19T08:55:00.4353100Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T08:55:00.4353833Z 
2025-08-19T08:55:00.4353987Z ## DummyTransport Objects
2025-08-19T08:55:00.4354233Z 
2025-08-19T08:55:00.4354363Z ```python
2025-08-19T08:55:00.4354665Z class DummyTransport()
2025-08-19T08:55:00.4355001Z ```
2025-08-19T08:55:00.4355152Z 
2025-08-19T08:55:00.4355471Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T08:55:00.4355989Z 
2025-08-19T08:55:00.4356122Z #### capture\_envelope
2025-08-19T08:55:00.4356336Z 
2025-08-19T08:55:00.4356459Z ```python
2025-08-19T08:55:00.4356763Z def capture_envelope(envelope)
2025-08-19T08:55:00.4357156Z ```
2025-08-19T08:55:00.4357333Z 
2025-08-19T08:55:00.4357517Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T08:55:00.4357913Z 
2025-08-19T08:55:00.4358076Z <a id="api.tests.test_cors"></a>
2025-08-19T08:55:00.4358350Z 
2025-08-19T08:55:00.4358483Z # api.tests.test\_cors
2025-08-19T08:55:00.4358704Z 
2025-08-19T08:55:00.4358848Z <a id="api.tests.test_imports"></a>
2025-08-19T08:55:00.4359038Z 
2025-08-19T08:55:00.4359133Z # api.tests.test\_imports
2025-08-19T08:55:00.4359284Z 
2025-08-19T08:55:00.4359385Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T08:55:00.4359577Z 
2025-08-19T08:55:00.4359678Z # api.tests.test\_rate\_limit
2025-08-19T08:55:00.4359840Z 
2025-08-19T08:55:00.4359951Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T08:55:00.4360462Z 
2025-08-19T08:55:00.4360542Z #### app
2025-08-19T08:55:00.4360649Z 
2025-08-19T08:55:00.4360730Z noqa: E402
2025-08-19T08:55:00.4360836Z 
2025-08-19T08:55:00.4360941Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T08:55:00.4361134Z 
2025-08-19T08:55:00.4361238Z # api.tests.test\_entrypoint
2025-08-19T08:55:00.4361401Z 
2025-08-19T08:55:00.4361501Z <a id="api.tests.test_health"></a>
2025-08-19T08:55:00.4361689Z 
2025-08-19T08:55:00.4361778Z # api.tests.test\_health
2025-08-19T08:55:00.4361928Z 
2025-08-19T08:55:00.4362027Z <a id="api.logging_config"></a>
2025-08-19T08:55:00.4362194Z 
2025-08-19T08:55:00.4362278Z # api.logging\_config
2025-08-19T08:55:00.4362415Z 
2025-08-19T08:55:00.4362518Z <a id="api.migrations.env"></a>
2025-08-19T08:55:00.4362683Z 
2025-08-19T08:55:00.4362770Z # api.migrations.env
2025-08-19T08:55:00.4362903Z 
2025-08-19T08:55:00.4363026Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T08:55:00.4363245Z 
2025-08-19T08:55:00.4363610Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T08:55:00.4363846Z 
2025-08-19T08:55:00.4363968Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T08:55:00.4364169Z 
2025-08-19T08:55:00.4364274Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T08:55:00.4364448Z 
2025-08-19T08:55:00.4364605Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T08:55:00.4364851Z 
2025-08-19T08:55:00.4364990Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T08:55:00.4365209Z 
2025-08-19T08:55:00.4365338Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T08:55:00.4365540Z 
2025-08-19T08:55:00.4365647Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T08:55:00.4365829Z 
2025-08-19T08:55:00.4365952Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T08:55:00.4366149Z 
2025-08-19T08:55:00.4366253Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T08:55:00.4366441Z 
2025-08-19T08:55:00.4366713Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T08:55:00.4366935Z 
2025-08-19T08:55:00.4367052Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T08:55:00.4367249Z 
2025-08-19T08:55:00.4367366Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T08:55:00.4367569Z 
2025-08-19T08:55:00.4367675Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T08:55:00.4367861Z 
2025-08-19T08:55:00.4367985Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T08:55:00.4368192Z 
2025-08-19T08:55:00.4368298Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T08:55:00.4368482Z 
2025-08-19T08:55:00.4368626Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T08:55:00.4368846Z 
2025-08-19T08:55:00.4368966Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T08:55:00.4369174Z 
2025-08-19T08:55:00.4369299Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T08:55:00.4369501Z 
2025-08-19T08:55:00.4369617Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T08:55:00.4369819Z 
2025-08-19T08:55:00.4369954Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T08:55:00.4370261Z 
2025-08-19T08:55:00.4370383Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T08:55:00.4370615Z 
2025-08-19T08:55:00.4370734Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T08:55:00.4370927Z 
2025-08-19T08:55:00.4371023Z # api.migrations.versions.0001\_baseline
2025-08-19T08:55:00.4371199Z 
2025-08-19T08:55:00.4371291Z <a id="api.migrations.versions"></a>
2025-08-19T08:55:00.4371454Z 
2025-08-19T08:55:00.4371536Z # api.migrations.versions
2025-08-19T08:55:00.4371673Z 
2025-08-19T08:55:00.4371753Z <a id="api.migrations"></a>
2025-08-19T08:55:00.4371891Z 
2025-08-19T08:55:00.4371965Z # api.migrations
2025-08-19T08:55:00.4372073Z 
2025-08-19T08:55:00.4372141Z <a id="api.db"></a>
2025-08-19T08:55:00.4372247Z 
2025-08-19T08:55:00.4372315Z # api.db
2025-08-19T08:55:00.4372402Z 
2025-08-19T08:55:00.4372490Z <a id="api.routes.stats"></a>
2025-08-19T08:55:00.4372789Z 
2025-08-19T08:55:00.4372860Z # api.routes.stats
2025-08-19T08:55:00.4372965Z 
2025-08-19T08:55:00.4373060Z <a id="api.routes.stats.kpi"></a>
2025-08-19T08:55:00.4373211Z 
2025-08-19T08:55:00.4373274Z #### kpi
2025-08-19T08:55:00.4373612Z 
2025-08-19T08:55:00.4373685Z ```python
2025-08-19T08:55:00.4373856Z @router.get("/stats/kpi")
2025-08-19T08:55:00.4374166Z def kpi() -> List[Dict[str, int]]
2025-08-19T08:55:00.4374372Z ```
2025-08-19T08:55:00.4374463Z 
2025-08-19T08:55:00.4374544Z Return KPI metrics (mock).
2025-08-19T08:55:00.4374681Z 
2025-08-19T08:55:00.4374780Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-19T08:55:00.4374964Z 
2025-08-19T08:55:00.4375033Z #### roi\_by\_vendor
2025-08-19T08:55:00.4375143Z 
2025-08-19T08:55:00.4375212Z ```python
2025-08-19T08:55:00.4375387Z @router.get("/stats/roi_by_vendor")
2025-08-19T08:55:00.4375638Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-19T08:55:00.4375861Z ```
2025-08-19T08:55:00.4375956Z 
2025-08-19T08:55:00.4376043Z Return ROI percent by vendor.
2025-08-19T08:55:00.4376181Z 
2025-08-19T08:55:00.4376274Z <a id="api.routes.stats.roi_trend"></a>
2025-08-19T08:55:00.4376453Z 
2025-08-19T08:55:00.4376517Z #### roi\_trend
2025-08-19T08:55:00.4376619Z 
2025-08-19T08:55:00.4376686Z ```python
2025-08-19T08:55:00.4376847Z @router.get("/stats/roi_trend")
2025-08-19T08:55:00.4377085Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-19T08:55:00.4377316Z ```
2025-08-19T08:55:00.4377402Z 
2025-08-19T08:55:00.4377478Z Return 30-day ROI trend.
2025-08-19T08:55:00.4377602Z 
2025-08-19T08:55:00.4377682Z <a id="api.routes.roi"></a>
2025-08-19T08:55:00.4377821Z 
2025-08-19T08:55:00.4377893Z # api.routes.roi
2025-08-19T08:55:00.4377997Z 
2025-08-19T08:55:00.4378087Z <a id="api.routes.health"></a>
2025-08-19T08:55:00.4378229Z 
2025-08-19T08:55:00.4378301Z # api.routes.health
2025-08-19T08:55:00.4378417Z 
2025-08-19T08:55:00.4378507Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T08:55:00.4378846Z 
2025-08-19T08:55:00.4378922Z #### MAX\_SKEW
2025-08-19T08:55:00.4379028Z 
2025-08-19T08:55:00.4379090Z seconds
2025-08-19T08:55:00.4379176Z 
2025-08-19T08:55:00.4379275Z <a id="api.routes.health.health"></a>
2025-08-19T08:55:00.4379439Z 
2025-08-19T08:55:00.4379501Z #### health
2025-08-19T08:55:00.4379596Z 
2025-08-19T08:55:00.4379658Z ```python
2025-08-19T08:55:00.4379847Z @router.get("/health", include_in_schema=False)
2025-08-19T08:55:00.4380225Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T08:55:00.4380571Z ```
2025-08-19T08:55:00.4380660Z 
2025-08-19T08:55:00.4380773Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T08:55:00.4380970Z 
2025-08-19T08:55:00.4381070Z <a id="api.routes.repository"></a>
2025-08-19T08:55:00.4381227Z 
2025-08-19T08:55:00.4381303Z # api.routes.repository
2025-08-19T08:55:00.4381434Z 
2025-08-19T08:55:00.4381507Z <a id="api.routes"></a>
2025-08-19T08:55:00.4381623Z 
2025-08-19T08:55:00.4381686Z # api.routes
2025-08-19T08:55:00.4381793Z 
2025-08-19T08:55:00.4381879Z <a id="api.models.fee"></a>
2025-08-19T08:55:00.4382008Z 
2025-08-19T08:55:00.4382080Z # api.models.fee
2025-08-19T08:55:00.4382184Z 
2025-08-19T08:55:00.4382254Z <a id="api.models"></a>
2025-08-19T08:55:00.4382370Z 
2025-08-19T08:55:00.4382441Z # api.models
2025-08-19T08:55:00.4382535Z 
2025-08-19T08:55:00.4382614Z <a id="api.roi_repository"></a>
2025-08-19T08:55:00.4382771Z 
2025-08-19T08:55:00.4382850Z # api.roi\_repository
2025-08-19T08:55:00.4382965Z 
2025-08-19T08:55:00.4383038Z <a id="api.main"></a>
2025-08-19T08:55:00.4383156Z 
2025-08-19T08:55:00.4383223Z # api.main
2025-08-19T08:55:00.4383537Z 
2025-08-19T08:55:00.4383678Z <a id="api.main.ready"></a>
2025-08-19T08:55:00.4383827Z 
2025-08-19T08:55:00.4383891Z #### ready
2025-08-19T08:55:00.4383979Z 
2025-08-19T08:55:00.4384053Z ```python
2025-08-19T08:55:00.4384315Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T08:55:00.4384756Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T08:55:00.4385277Z                                                                       str]
2025-08-19T08:55:00.4385515Z ```
2025-08-19T08:55:00.4385597Z 
2025-08-19T08:55:00.4385691Z Return 200 only when migrations are at head.
2025-08-19T08:55:00.4385871Z 
2025-08-19T08:55:00.4385943Z <a id="api.config"></a>
2025-08-19T08:55:00.4386059Z 
2025-08-19T08:55:00.4386128Z # api.config
2025-08-19T08:55:00.4386219Z 
2025-08-19T08:55:00.4386283Z <a id="etl"></a>
2025-08-19T08:55:00.4386382Z 
2025-08-19T08:55:00.4386450Z # etl
2025-08-19T08:55:00.4386534Z 
2025-08-19T08:55:00.4386614Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T08:55:00.4386767Z 
2025-08-19T08:55:00.4386841Z # etl.fba\_fee\_ingestor
2025-08-19T08:55:00.4386964Z 
2025-08-19T08:55:00.4387049Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T08:55:00.4387193Z 
2025-08-19T08:55:00.4387265Z # etl.sp\_fees\_ingestor
2025-08-19T08:55:00.4387382Z 
2025-08-19T08:55:00.4387467Z <a id="etl.keepa_ingestor"></a>
2025-08-19T08:55:00.4387620Z 
2025-08-19T08:55:00.4387691Z # etl.keepa\_ingestor
2025-08-19T08:55:00.4387810Z 
2025-08-19T08:55:00.4387875Z <a id="etl.db"></a>
2025-08-19T08:55:00.4387981Z 
2025-08-19T08:55:00.4388043Z # etl.db
2025-08-19T08:55:00.4388138Z 
2025-08-19T08:55:00.4388220Z <a id="etl.dialects.schemas"></a>
2025-08-19T08:55:00.4388370Z 
2025-08-19T08:55:00.4388450Z # etl.dialects.schemas
2025-08-19T08:55:00.4388568Z 
2025-08-19T08:55:00.4388672Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T08:55:00.4388864Z 
2025-08-19T08:55:00.4388953Z # etl.dialects.amazon\_reimbursements
2025-08-19T08:55:00.4389114Z 
2025-08-19T08:55:00.4389209Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T08:55:00.4389390Z 
2025-08-19T08:55:00.4389476Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T08:55:00.4389635Z 
2025-08-19T08:55:00.4389731Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T08:55:00.4389898Z 
2025-08-19T08:55:00.4389982Z # etl.dialects.amazon\_returns
2025-08-19T08:55:00.4390302Z 
2025-08-19T08:55:00.4390438Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T08:55:00.4390615Z 
2025-08-19T08:55:00.4390700Z # etl.dialects.amazon\_fee\_preview
2025-08-19T08:55:00.4390855Z 
2025-08-19T08:55:00.4390967Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T08:55:00.4391153Z 
2025-08-19T08:55:00.4391243Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T08:55:00.4391411Z 
2025-08-19T08:55:00.4391504Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T08:55:00.4391674Z 
2025-08-19T08:55:00.4391761Z # etl.dialects.amazon\_settlements
2025-08-19T08:55:00.4391919Z 
2025-08-19T08:55:00.4391994Z <a id="etl.dialects"></a>
2025-08-19T08:55:00.4392120Z 
2025-08-19T08:55:00.4392403Z # etl.dialects
2025-08-19T08:55:00.4392585Z 
2025-08-19T08:55:00.4392706Z <a id="ingest"></a>
2025-08-19T08:55:00.4392900Z 
2025-08-19T08:55:00.4393009Z # ingest
2025-08-19T08:55:00.4393164Z 
2025-08-19T08:55:00.4393453Z <a id="ingest.maintenance"></a>
2025-08-19T08:55:00.4393717Z 
2025-08-19T08:55:00.4393810Z # ingest.maintenance
2025-08-19T08:55:00.4393935Z 
2025-08-19T08:55:00.4394020Z <a id="ingest.copy_loader"></a>
2025-08-19T08:55:00.4394267Z 
2025-08-19T08:55:00.4394391Z # ingest.copy\_loader
2025-08-19T08:55:00.4394596Z 
2025-08-19T08:55:00.4394751Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T08:55:00.4394944Z 
2025-08-19T08:55:00.4395066Z #### copy\_df\_via\_temp
2025-08-19T08:55:00.4395303Z 
2025-08-19T08:55:00.4395377Z ```python
2025-08-19T08:55:00.4395627Z def copy_df_via_temp(engine: Engine,
2025-08-19T08:55:00.4395903Z                      df: pd.DataFrame,
2025-08-19T08:55:00.4396244Z                      target_table: str,
2025-08-19T08:55:00.4396472Z                      *,
2025-08-19T08:55:00.4396695Z                      target_schema: Optional[str] = None,
2025-08-19T08:55:00.4397125Z                      columns: Sequence[str],
2025-08-19T08:55:00.4397494Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T08:55:00.4397975Z                      analyze_after: bool = False,
2025-08-19T08:55:00.4398807Z                      connection: Any | None = None) -> int
2025-08-19T08:55:00.4399051Z ```
2025-08-19T08:55:00.4399142Z 
2025-08-19T08:55:00.4399302Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T08:55:00.4399541Z 
2025-08-19T08:55:00.4399640Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T08:55:00.4399799Z 
2025-08-19T08:55:00.4399882Z # ingest.tests.test\_smoke
2025-08-19T08:55:00.4400020Z 
2025-08-19T08:55:00.4400095Z <a id="ingest.tests"></a>
2025-08-19T08:55:00.4400221Z 
2025-08-19T08:55:00.4400288Z # ingest.tests
2025-08-19T08:55:00.4400399Z 
2025-08-19T08:55:00.4400484Z <a id="ingest.upload_router"></a>
2025-08-19T08:55:00.4400632Z 
2025-08-19T08:55:00.4400713Z # ingest.upload\_router
2025-08-19T08:55:00.4400832Z 
2025-08-19T08:55:00.4400913Z <a id="ingest.email_watcher"></a>
2025-08-19T08:55:00.4401061Z 
2025-08-19T08:55:00.4401133Z # ingest.email\_watcher
2025-08-19T08:55:00.4401247Z 
2025-08-19T08:55:00.4401342Z <a id="ingest.email_watcher.main"></a>
2025-08-19T08:55:00.4401517Z 
2025-08-19T08:55:00.4401577Z #### main
2025-08-19T08:55:00.4401667Z 
2025-08-19T08:55:00.4401734Z ```python
2025-08-19T08:55:00.4401898Z def main() -> dict[str, str]
2025-08-19T08:55:00.4402092Z ```
2025-08-19T08:55:00.4402174Z 
2025-08-19T08:55:00.4402314Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T08:55:00.4402561Z 
2025-08-19T08:55:00.4402692Z Returns {"status": "success"} when processing completes.
2025-08-19T08:55:00.4402909Z 
2025-08-19T08:55:00.4402983Z <a id="ingest.tasks"></a>
2025-08-19T08:55:00.4403109Z 
2025-08-19T08:55:00.4403179Z # ingest.tasks
2025-08-19T08:55:00.4403280Z 
2025-08-19T08:55:00.4403677Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T08:55:00.4403868Z 
2025-08-19T08:55:00.4403942Z #### task\_import\_file
2025-08-19T08:55:00.4404062Z 
2025-08-19T08:55:00.4404125Z ```python
2025-08-19T08:55:00.4404335Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T08:55:00.4404961Z def task_import_file(self: Any,
2025-08-19T08:55:00.4405187Z                      uri: str,
2025-08-19T08:55:00.4405412Z                      report_type: Optional[str] = None,
2025-08-19T08:55:00.4405682Z                      force: bool = False) -> Dict[str, Any]
2025-08-19T08:55:00.4405928Z ```
2025-08-19T08:55:00.4406015Z 
2025-08-19T08:55:00.4406148Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T08:55:00.4406370Z 
2025-08-19T08:55:00.4406454Z <a id="ingest.celery_app"></a>
2025-08-19T08:55:00.4406595Z 
2025-08-19T08:55:00.4406673Z # ingest.celery\_app
2025-08-19T08:55:00.4406789Z 
2025-08-19T08:55:00.4406876Z <a id="ingest.ingest_router"></a>
2025-08-19T08:55:00.4407026Z 
2025-08-19T08:55:00.4407109Z # ingest.ingest\_router
2025-08-19T08:55:00.4407229Z 
2025-08-19T08:55:00.4407305Z <a id="logistics_etl"></a>
2025-08-19T08:55:00.4407442Z 
2025-08-19T08:55:00.4407510Z # logistics\_etl
2025-08-19T08:55:00.4407614Z 
2025-08-19T08:55:00.4407691Z Daily logistics ETL job.
2025-08-19T08:55:00.4407844Z 
2025-08-19T08:55:00.4407926Z <a id="logistics_etl.__main__"></a>
2025-08-19T08:55:00.4408079Z 
2025-08-19T08:55:00.4408165Z # logistics\_etl.\_\_main\_\_
2025-08-19T08:55:00.4408298Z 
2025-08-19T08:55:00.4408379Z <a id="logistics_etl.dsn"></a>
2025-08-19T08:55:00.4408520Z 
2025-08-19T08:55:00.4408589Z # logistics\_etl.dsn
2025-08-19T08:55:00.4408701Z 
2025-08-19T08:55:00.4408817Z Local DSN builder to avoid cross-service dependency.
2025-08-19T08:55:00.4409034Z 
2025-08-19T08:55:00.4409124Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T08:55:00.4409292Z 
2025-08-19T08:55:00.4409363Z #### build\_dsn
2025-08-19T08:55:00.4409470Z 
2025-08-19T08:55:00.4409533Z ```python
2025-08-19T08:55:00.4409716Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:55:00.4409941Z ```
2025-08-19T08:55:00.4410031Z 
2025-08-19T08:55:00.4410173Z Return a Postgres DSN assembled from environment variables.
2025-08-19T08:55:00.4410401Z 
2025-08-19T08:55:00.4410549Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T08:55:00.4411092Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T08:55:00.4411444Z error when any required variable is missing.
2025-08-19T08:55:00.4411622Z 
2025-08-19T08:55:00.4411716Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T08:55:00.4411895Z 
2025-08-19T08:55:00.4411978Z # logistics\_etl.tests.conftest
2025-08-19T08:55:00.4412124Z 
2025-08-19T08:55:00.4412230Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T08:55:00.4412421Z 
2025-08-19T08:55:00.4412511Z # logistics\_etl.tests.test\_repository
2025-08-19T08:55:00.4412677Z 
2025-08-19T08:55:00.4412773Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T08:55:00.4412944Z 
2025-08-19T08:55:00.4413030Z # logistics\_etl.tests.test\_cron
2025-08-19T08:55:00.4413186Z 
2025-08-19T08:55:00.4413281Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T08:55:00.4413727Z 
2025-08-19T08:55:00.4413820Z # logistics\_etl.tests.test\_imports
2025-08-19T08:55:00.4413994Z 
2025-08-19T08:55:00.4414094Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T08:55:00.4414267Z 
2025-08-19T08:55:00.4414360Z # logistics\_etl.tests.test\_smoke
2025-08-19T08:55:00.4414510Z 
2025-08-19T08:55:00.4414604Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T08:55:00.4414780Z 
2025-08-19T08:55:00.4414864Z # logistics\_etl.tests.test\_client
2025-08-19T08:55:00.4415020Z 
2025-08-19T08:55:00.4415102Z <a id="logistics_etl.tests"></a>
2025-08-19T08:55:00.4415252Z 
2025-08-19T08:55:00.4415324Z # logistics\_etl.tests
2025-08-19T08:55:00.4415442Z 
2025-08-19T08:55:00.4415530Z <a id="logistics_etl.flow"></a>
2025-08-19T08:55:00.4415668Z 
2025-08-19T08:55:00.4415739Z # logistics\_etl.flow
2025-08-19T08:55:00.4415861Z 
2025-08-19T08:55:00.4415944Z <a id="logistics_etl.client"></a>
2025-08-19T08:55:00.4416093Z 
2025-08-19T08:55:00.4416167Z # logistics\_etl.client
2025-08-19T08:55:00.4416292Z 
2025-08-19T08:55:00.4416369Z <a id="logistics_etl.cron"></a>
2025-08-19T08:55:00.4416658Z 
2025-08-19T08:55:00.4416735Z # logistics\_etl.cron
2025-08-19T08:55:00.4416854Z 
2025-08-19T08:55:00.4416931Z <a id="logistics_etl.db"></a>
2025-08-19T08:55:00.4417074Z 
2025-08-19T08:55:00.4460870Z # logistics\_etl.db
2025-08-19T08:55:00.4461155Z 
2025-08-19T08:55:00.4461357Z <a id="logistics_etl.repository"></a>
2025-08-19T08:55:00.4461724Z 
2025-08-19T08:55:00.4461890Z # logistics\_etl.repository
2025-08-19T08:55:00.4462187Z 
2025-08-19T08:55:00.4462343Z <a id="alert_bot"></a>
2025-08-19T08:55:00.4462589Z 
2025-08-19T08:55:00.4462722Z # alert\_bot
2025-08-19T08:55:00.4462933Z 
2025-08-19T08:55:00.4463120Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T08:55:00.4463657Z 
2025-08-19T08:55:00.4463781Z # alert\_bot.tests.test\_smoke
2025-08-19T08:55:00.4463961Z 
2025-08-19T08:55:00.4464057Z <a id="alert_bot.tests"></a>
2025-08-19T08:55:00.4464227Z 
2025-08-19T08:55:00.4464317Z # alert\_bot.tests
2025-08-19T08:55:00.4464453Z 
2025-08-19T08:55:00.4464552Z <a id="alert_bot.alert_bot"></a>
2025-08-19T08:55:00.4464745Z 
2025-08-19T08:55:00.4464844Z # alert\_bot.alert\_bot
2025-08-19T08:55:00.4464992Z 
2025-08-19T08:55:00.4465093Z <a id="alert_bot.rules"></a>
2025-08-19T08:55:00.4465258Z 
2025-08-19T08:55:00.4465342Z # alert\_bot.rules
2025-08-19T08:55:00.4465470Z 
2025-08-19T08:55:00.4465562Z <a id="common"></a>
2025-08-19T08:55:00.4465694Z 
2025-08-19T08:55:00.4465770Z # common
2025-08-19T08:55:00.4465888Z 
2025-08-19T08:55:00.4465979Z <a id="common.dsn"></a>
2025-08-19T08:55:00.4466125Z 
2025-08-19T08:55:00.4466205Z # common.dsn
2025-08-19T08:55:00.4466331Z 
2025-08-19T08:55:00.4466435Z <a id="common.dsn.build_dsn"></a>
2025-08-19T08:55:00.4466625Z 
2025-08-19T08:55:00.4466714Z #### build\_dsn
2025-08-19T08:55:00.4466839Z 
2025-08-19T08:55:00.4466923Z ```python
2025-08-19T08:55:00.4467159Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:55:00.4467440Z ```
2025-08-19T08:55:00.4467553Z 
2025-08-19T08:55:00.4467712Z Return a Postgres DSN, validating required variables.
2025-08-19T08:55:00.4467978Z 
2025-08-19T08:55:00.4468222Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T08:55:00.4468987Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T08:55:00.4469518Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T08:55:00.4469950Z missing.
2025-08-19T08:55:00.4470067Z 
2025-08-19T08:55:00.4470174Z <a id="common.models_vendor"></a>
2025-08-19T08:55:00.4470367Z 
2025-08-19T08:55:00.4470533Z # common.models\_vendor
2025-08-19T08:55:00.4470692Z 
2025-08-19T08:55:00.4470805Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T08:55:00.4471013Z 
2025-08-19T08:55:00.4471102Z ## Vendor Objects
2025-08-19T08:55:00.4471233Z 
2025-08-19T08:55:00.4471313Z ```python
2025-08-19T08:55:00.4471506Z class Vendor(Base)
2025-08-19T08:55:00.4471711Z ```
2025-08-19T08:55:00.4471818Z 
2025-08-19T08:55:00.4471917Z Vendor of inventory items.
2025-08-19T08:55:00.4472077Z 
2025-08-19T08:55:00.4472205Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T08:55:00.4472456Z 
2025-08-19T08:55:00.4472529Z ## VendorPrice Objects
2025-08-19T08:55:00.4472648Z 
2025-08-19T08:55:00.4472718Z ```python
2025-08-19T08:55:00.4472880Z class VendorPrice(Base)
2025-08-19T08:55:00.4473061Z ```
2025-08-19T08:55:00.4473144Z 
2025-08-19T08:55:00.4473246Z Association table linking vendors to pricing.
2025-08-19T08:55:00.4473561Z 
2025-08-19T08:55:00.4473640Z <a id="common.db_url"></a>
2025-08-19T08:55:00.4473767Z 
2025-08-19T08:55:00.4473833Z # common.db\_url
2025-08-19T08:55:00.4473943Z 
2025-08-19T08:55:00.4474027Z <a id="common.db_url.build_url"></a>
2025-08-19T08:55:00.4474186Z 
2025-08-19T08:55:00.4474255Z #### build\_url
2025-08-19T08:55:00.4474356Z 
2025-08-19T08:55:00.4474418Z ```python
2025-08-19T08:55:00.4474594Z def build_url(async_: bool = True) -> str
2025-08-19T08:55:00.4474816Z ```
2025-08-19T08:55:00.4474900Z 
2025-08-19T08:55:00.4474999Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:55:00.4475176Z 
2025-08-19T08:55:00.4475259Z <a id="common.keepa"></a>
2025-08-19T08:55:00.4475538Z 
2025-08-19T08:55:00.4475607Z # common.keepa
2025-08-19T08:55:00.4475711Z 
2025-08-19T08:55:00.4475792Z <a id="common.llm"></a>
2025-08-19T08:55:00.4475910Z 
2025-08-19T08:55:00.4475975Z # common.llm
2025-08-19T08:55:00.4476075Z 
2025-08-19T08:55:00.4476154Z <a id="common.settings"></a>
2025-08-19T08:55:00.4476291Z 
2025-08-19T08:55:00.4476360Z # common.settings
2025-08-19T08:55:00.4476472Z 
2025-08-19T08:55:00.4476544Z <a id="common.db"></a>
2025-08-19T08:55:00.4476662Z 
2025-08-19T08:55:00.4476732Z # common.db
2025-08-19T08:55:00.4476823Z 
2025-08-19T08:55:00.4476917Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T08:55:00.4477094Z 
2025-08-19T08:55:00.4477173Z #### build\_sqlalchemy\_url
2025-08-19T08:55:00.4477303Z 
2025-08-19T08:55:00.4477366Z ```python
2025-08-19T08:55:00.4477545Z def build_sqlalchemy_url() -> str
2025-08-19T08:55:00.4477762Z ```
2025-08-19T08:55:00.4477846Z 
2025-08-19T08:55:00.4477942Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:55:00.4478129Z 
2025-08-19T08:55:00.4478231Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T08:55:00.4478403Z 
2025-08-19T08:55:00.4478477Z #### build\_asyncpg\_dsn
2025-08-19T08:55:00.4478781Z 
2025-08-19T08:55:00.4478847Z ```python
2025-08-19T08:55:00.4479020Z def build_asyncpg_dsn() -> str
2025-08-19T08:55:00.4479224Z ```
2025-08-19T08:55:00.4479306Z 
2025-08-19T08:55:00.4479442Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:55:00.4479661Z 
2025-08-19T08:55:00.4479746Z <a id="common.db.refresh_mvs"></a>
2025-08-19T08:55:00.4479899Z 
2025-08-19T08:55:00.4479972Z #### refresh\_mvs
2025-08-19T08:55:00.4480076Z 
2025-08-19T08:55:00.4480139Z ```python
2025-08-19T08:55:00.4480335Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:55:00.4480585Z ```
2025-08-19T08:55:00.4480672Z 
2025-08-19T08:55:00.4480810Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:55:00.4481029Z 
2025-08-19T08:55:00.4481114Z <a id="common.config"></a>
2025-08-19T08:55:00.4481252Z 
2025-08-19T08:55:00.4481450Z # common.config
2025-08-19T08:55:00.4481565Z 
2025-08-19T08:55:00.4481639Z <a id="common.base"></a>
2025-08-19T08:55:00.4481761Z 
2025-08-19T08:55:00.4481827Z # common.base
2025-08-19T08:55:00.4481928Z 
2025-08-19T08:55:00.4482007Z <a id="common.base.Base"></a>
2025-08-19T08:55:00.4482146Z 
2025-08-19T08:55:00.4482216Z ## Base Objects
2025-08-19T08:55:00.4482315Z 
2025-08-19T08:55:00.4482375Z ```python
2025-08-19T08:55:00.4482542Z class Base(DeclarativeBase)
2025-08-19T08:55:00.4482731Z ```
2025-08-19T08:55:00.4482817Z 
2025-08-19T08:55:00.4482901Z Base class for SQLAlchemy models.
2025-08-19T08:55:00.4483052Z 
2025-08-19T08:55:00.4483123Z <a id="repricer"></a>
2025-08-19T08:55:00.4483244Z 
2025-08-19T08:55:00.4483307Z # repricer
2025-08-19T08:55:00.4483668Z 
2025-08-19T08:55:00.4483768Z <a id="repricer.app.schemas"></a>
2025-08-19T08:55:00.4483924Z 
2025-08-19T08:55:00.4484000Z # repricer.app.schemas
2025-08-19T08:55:00.4484120Z 
2025-08-19T08:55:00.4484219Z <a id="repricer.app.deps"></a>
2025-08-19T08:55:00.4484370Z 
2025-08-19T08:55:00.4484442Z # repricer.app.deps
2025-08-19T08:55:00.4484558Z 
2025-08-19T08:55:00.4484682Z Placeholder module for Keepa / SP-API clients.
2025-08-19T08:55:00.4484870Z 
2025-08-19T08:55:00.4484960Z <a id="repricer.app.logic"></a>
2025-08-19T08:55:00.4485103Z 
2025-08-19T08:55:00.4485176Z # repricer.app.logic
2025-08-19T08:55:00.4485294Z 
2025-08-19T08:55:00.4485398Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T08:55:00.4485575Z 
2025-08-19T08:55:00.4485640Z #### MIN\_MARGIN
2025-08-19T08:55:00.4485746Z 
2025-08-19T08:55:00.4485806Z 15 % ROI
2025-08-19T08:55:00.4485894Z 
2025-08-19T08:55:00.4486000Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T08:55:00.4486191Z 
2025-08-19T08:55:00.4486261Z #### compute\_price
2025-08-19T08:55:00.4486366Z 
2025-08-19T08:55:00.4486434Z ```python
2025-08-19T08:55:00.4486681Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T08:55:00.4486985Z ```
2025-08-19T08:55:00.4487275Z 
2025-08-19T08:55:00.4487388Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T08:55:00.4487673Z Replace with real competitive logic later.
2025-08-19T08:55:00.4487845Z 
2025-08-19T08:55:00.4487935Z <a id="repricer.app.main"></a>
2025-08-19T08:55:00.4488078Z 
2025-08-19T08:55:00.4488149Z # repricer.app.main
2025-08-19T08:55:00.4488258Z 
2025-08-19T08:55:00.4488344Z <a id="repricer.app"></a>
2025-08-19T08:55:00.4488471Z 
2025-08-19T08:55:00.4488538Z # repricer.app
2025-08-19T08:55:00.4488644Z 
2025-08-19T08:55:00.4488737Z <a id="repricer.tests.test_imports"></a>
2025-08-19T08:55:00.4488904Z 
2025-08-19T08:55:00.4488986Z # repricer.tests.test\_imports
2025-08-19T08:55:00.4489133Z 
2025-08-19T08:55:00.4489221Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T08:55:00.4489386Z 
2025-08-19T08:55:00.4489473Z # repricer.tests.test\_smoke
2025-08-19T08:55:00.4489611Z 
2025-08-19T08:55:00.4489690Z <a id="repricer.tests"></a>
2025-08-19T08:55:00.4489828Z 
2025-08-19T08:55:00.4489900Z # repricer.tests
2025-08-19T08:55:00.4490009Z 
2025-08-19T08:55:00.4490073Z <a id="db"></a>
2025-08-19T08:55:00.4490180Z 
2025-08-19T08:55:00.4490240Z # db
2025-08-19T08:55:00.4490324Z 
2025-08-19T08:55:00.4490406Z <a id="db.utils.views"></a>
2025-08-19T08:55:00.4490537Z 
2025-08-19T08:55:00.4490602Z # db.utils.views
2025-08-19T08:55:00.4490708Z 
2025-08-19T08:55:00.4490802Z <a id="db.utils.views.replace_view"></a>
2025-08-19T08:55:00.4490969Z 
2025-08-19T08:55:00.4491036Z #### replace\_view
2025-08-19T08:55:00.4491145Z 
2025-08-19T08:55:00.4491206Z ```python
2025-08-19T08:55:00.4491403Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T08:55:00.4491648Z ```
2025-08-19T08:55:00.4491731Z 
2025-08-19T08:55:00.4491827Z Drop and recreate a SQL view atomically.
2025-08-19T08:55:00.4491997Z 
2025-08-19T08:55:00.4492068Z <a id="db.utils"></a>
2025-08-19T08:55:00.4492189Z 
2025-08-19T08:55:00.4492252Z # db.utils
2025-08-19T08:55:00.4492341Z 
2025-08-19T08:55:00.4492425Z <a id="price_importer"></a>
2025-08-19T08:55:00.4492567Z 
2025-08-19T08:55:00.4492754Z # price\_importer
2025-08-19T08:55:00.4492859Z 
2025-08-19T08:55:00.4492969Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T08:55:00.4493152Z 
2025-08-19T08:55:00.4493242Z # price\_importer.services\_common.dsn
2025-08-19T08:55:00.4493557Z 
2025-08-19T08:55:00.4493684Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T08:55:00.4493893Z 
2025-08-19T08:55:00.4493958Z #### build\_dsn
2025-08-19T08:55:00.4494062Z 
2025-08-19T08:55:00.4494124Z ```python
2025-08-19T08:55:00.4494298Z def build_dsn(sync: bool = True) -> str
2025-08-19T08:55:00.4494516Z ```
2025-08-19T08:55:00.4494597Z 
2025-08-19T08:55:00.4494669Z Return safe DSN.
2025-08-19T08:55:00.4494773Z 
2025-08-19T08:55:00.4495122Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T08:55:00.4495332Z 
2025-08-19T08:55:00.4495462Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T08:55:00.4495669Z 
2025-08-19T08:55:00.4495778Z # price\_importer.services\_common.models\_vendor
2025-08-19T08:55:00.4495992Z 
2025-08-19T08:55:00.4496099Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T08:55:00.4496287Z 
2025-08-19T08:55:00.4496386Z # price\_importer.services\_common.db\_url
2025-08-19T08:55:00.4496559Z 
2025-08-19T08:55:00.4496692Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T08:55:00.4496915Z 
2025-08-19T08:55:00.4496980Z #### build\_url
2025-08-19T08:55:00.4497080Z 
2025-08-19T08:55:00.4497142Z ```python
2025-08-19T08:55:00.4497321Z def build_url(async_: bool = True) -> str
2025-08-19T08:55:00.4497550Z ```
2025-08-19T08:55:00.4497632Z 
2025-08-19T08:55:00.4497729Z Return Postgres DSN from env or PG_* parts.
2025-08-19T08:55:00.4497904Z 
2025-08-19T08:55:00.4498017Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T08:55:00.4498206Z 
2025-08-19T08:55:00.4498299Z # price\_importer.services\_common.keepa
2025-08-19T08:55:00.4498474Z 
2025-08-19T08:55:00.4498577Z <a id="price_importer.services_common.llm"></a>
2025-08-19T08:55:00.4498915Z 
2025-08-19T08:55:00.4499014Z # price\_importer.services\_common.llm
2025-08-19T08:55:00.4499180Z 
2025-08-19T08:55:00.4499295Z <a id="price_importer.services_common.settings"></a>
2025-08-19T08:55:00.4499494Z 
2025-08-19T08:55:00.4499590Z # price\_importer.services\_common.settings
2025-08-19T08:55:00.4499766Z 
2025-08-19T08:55:00.4499866Z <a id="price_importer.services_common.db"></a>
2025-08-19T08:55:00.4500050Z 
2025-08-19T08:55:00.4500141Z # price\_importer.services\_common.db
2025-08-19T08:55:00.4500305Z 
2025-08-19T08:55:00.4500466Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T08:55:00.4500706Z 
2025-08-19T08:55:00.4500784Z #### build\_sqlalchemy\_url
2025-08-19T08:55:00.4500922Z 
2025-08-19T08:55:00.4500986Z ```python
2025-08-19T08:55:00.4501156Z def build_sqlalchemy_url() -> str
2025-08-19T08:55:00.4501369Z ```
2025-08-19T08:55:00.4501454Z 
2025-08-19T08:55:00.4501551Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T08:55:00.4501741Z 
2025-08-19T08:55:00.4501892Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T08:55:00.4502123Z 
2025-08-19T08:55:00.4502203Z #### build\_asyncpg\_dsn
2025-08-19T08:55:00.4502331Z 
2025-08-19T08:55:00.4502395Z ```python
2025-08-19T08:55:00.4502570Z def build_asyncpg_dsn() -> str
2025-08-19T08:55:00.4502768Z ```
2025-08-19T08:55:00.4502858Z 
2025-08-19T08:55:00.4502985Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T08:55:00.4503199Z 
2025-08-19T08:55:00.4503566Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T08:55:00.4503841Z 
2025-08-19T08:55:00.4503909Z #### refresh\_mvs
2025-08-19T08:55:00.4504016Z 
2025-08-19T08:55:00.4504086Z ```python
2025-08-19T08:55:00.4504280Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T08:55:00.4504533Z ```
2025-08-19T08:55:00.4504614Z 
2025-08-19T08:55:00.4504749Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T08:55:00.4504972Z 
2025-08-19T08:55:00.4505076Z <a id="price_importer.services_common"></a>
2025-08-19T08:55:00.4505403Z 
2025-08-19T08:55:00.4505499Z # price\_importer.services\_common
2025-08-19T08:55:00.4505659Z 
2025-08-19T08:55:00.4505764Z <a id="price_importer.services_common.base"></a>
2025-08-19T08:55:00.4505953Z 
2025-08-19T08:55:00.4506043Z # price\_importer.services\_common.base
2025-08-19T08:55:00.4506213Z 
2025-08-19T08:55:00.4506300Z <a id="price_importer.normaliser"></a>
2025-08-19T08:55:00.4506472Z 
2025-08-19T08:55:00.4506554Z # price\_importer.normaliser
2025-08-19T08:55:00.4506692Z 
2025-08-19T08:55:00.4506800Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T08:55:00.4506987Z 
2025-08-19T08:55:00.4507074Z # price\_importer.common.models\_vendor
2025-08-19T08:55:00.4507246Z 
2025-08-19T08:55:00.4507337Z <a id="price_importer.common.db_url"></a>
2025-08-19T08:55:00.4507507Z 
2025-08-19T08:55:00.4507591Z # price\_importer.common.db\_url
2025-08-19T08:55:00.4507745Z 
2025-08-19T08:55:00.4507848Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T08:55:00.4508044Z 
2025-08-19T08:55:00.4508114Z #### make\_dsn
2025-08-19T08:55:00.4508213Z 
2025-08-19T08:55:00.4508276Z ```python
2025-08-19T08:55:00.4508458Z def make_dsn(async_: bool = False) -> str
2025-08-19T08:55:00.4508677Z ```
2025-08-19T08:55:00.4508767Z 
2025-08-19T08:55:00.4508885Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T08:55:00.4509085Z 
2025-08-19T08:55:00.4509201Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T08:55:00.4509391Z 
2025-08-19T08:55:00.4509453Z #### build\_url
2025-08-19T08:55:00.4509553Z 
2025-08-19T08:55:00.4509620Z ```python
2025-08-19T08:55:00.4509795Z def build_url(async_: bool = False) -> str
2025-08-19T08:55:00.4510022Z ```
2025-08-19T08:55:00.4510104Z 
2025-08-19T08:55:00.4510224Z Return Postgres DSN built from environment variables.
2025-08-19T08:55:00.4510433Z 
2025-08-19T08:55:00.4510520Z <a id="price_importer.common"></a>
2025-08-19T08:55:00.4510673Z 
2025-08-19T08:55:00.4510755Z # price\_importer.common
2025-08-19T08:55:00.4511023Z 
2025-08-19T08:55:00.4511118Z <a id="price_importer.common.base"></a>
2025-08-19T08:55:00.4511289Z 
2025-08-19T08:55:00.4511372Z # price\_importer.common.base
2025-08-19T08:55:00.4511520Z 
2025-08-19T08:55:00.4511615Z <a id="price_importer.tests.conftest"></a>
2025-08-19T08:55:00.4511795Z 
2025-08-19T08:55:00.4511880Z # price\_importer.tests.conftest
2025-08-19T08:55:00.4512067Z 
2025-08-19T08:55:00.4512176Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T08:55:00.4512358Z 
2025-08-19T08:55:00.4512452Z # price\_importer.tests.test\_reader
2025-08-19T08:55:00.4512637Z 
2025-08-19T08:55:00.4512745Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T08:55:00.4512930Z 
2025-08-19T08:55:00.4513022Z # price\_importer.tests.test\_imports
2025-08-19T08:55:00.4513192Z 
2025-08-19T08:55:00.4513291Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T08:55:00.4513601Z 
2025-08-19T08:55:00.4513699Z # price\_importer.tests.test\_smoke
2025-08-19T08:55:00.4513858Z 
2025-08-19T08:55:00.4513975Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T08:55:00.4514176Z 
2025-08-19T08:55:00.4514269Z # price\_importer.tests.test\_normaliser
2025-08-19T08:55:00.4514441Z 
2025-08-19T08:55:00.4514526Z <a id="price_importer.tests"></a>
2025-08-19T08:55:00.4514682Z 
2025-08-19T08:55:00.4514760Z # price\_importer.tests
2025-08-19T08:55:00.4514887Z 
2025-08-19T08:55:00.4514982Z <a id="price_importer.reader"></a>
2025-08-19T08:55:00.4515136Z 
2025-08-19T08:55:00.4515215Z # price\_importer.reader
2025-08-19T08:55:00.4515350Z 
2025-08-19T08:55:00.4515443Z <a id="price_importer.repository"></a>
2025-08-19T08:55:00.4515610Z 
2025-08-19T08:55:00.4515697Z # price\_importer.repository
2025-08-19T08:55:00.4515847Z 
2025-08-19T08:55:00.4515934Z <a id="price_importer.import"></a>
2025-08-19T08:55:00.4516086Z 
2025-08-19T08:55:00.4516175Z # price\_importer.import
2025-08-19T08:55:00.4516301Z 
2025-08-19T08:55:00.4516374Z <a id="fees_h10"></a>
2025-08-19T08:55:00.4516491Z 
2025-08-19T08:55:00.4516571Z # fees\_h10
2025-08-19T08:55:00.4516811Z 
2025-08-19T08:55:00.4516890Z <a id="fees_h10.worker"></a>
2025-08-19T08:55:00.4517032Z 
2025-08-19T08:55:00.4517099Z # fees\_h10.worker
2025-08-19T08:55:00.4517206Z 
2025-08-19T08:55:00.4517311Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T08:55:00.4517488Z 
2025-08-19T08:55:00.4517562Z #### list\_active\_asins
2025-08-19T08:55:00.4517685Z 
2025-08-19T08:55:00.4517757Z ```python
2025-08-19T08:55:00.4517928Z def list_active_asins() -> list[str]
2025-08-19T08:55:00.4518140Z ```
2025-08-19T08:55:00.4518223Z 
2025-08-19T08:55:00.4518336Z Return known ASINs or an empty list if unavailable.
2025-08-19T08:55:00.4518540Z 
2025-08-19T08:55:00.4518627Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T08:55:00.4518785Z 
2025-08-19T08:55:00.4518870Z # fees\_h10.tests.test\_smoke
2025-08-19T08:55:00.4519009Z 
2025-08-19T08:55:00.4519084Z <a id="fees_h10.tests"></a>
2025-08-19T08:55:00.4519218Z 
2025-08-19T08:55:00.4519291Z # fees\_h10.tests
2025-08-19T08:55:00.4519402Z 
2025-08-19T08:55:00.4519483Z <a id="fees_h10.client"></a>
2025-08-19T08:55:00.4519619Z 
2025-08-19T08:55:00.4519685Z # fees\_h10.client
2025-08-19T08:55:00.4519789Z 
2025-08-19T08:55:00.4519879Z <a id="fees_h10.repository"></a>
2025-08-19T08:55:00.4520025Z 
2025-08-19T08:55:00.4520096Z # fees\_h10.repository
2025-08-19T08:55:00.4520212Z 
2025-08-19T08:55:00.4520287Z <a id="emailer"></a>
2025-08-19T08:55:00.4520403Z 
2025-08-19T08:55:00.4520465Z # emailer
2025-08-19T08:55:00.4520560Z 
2025-08-19T08:55:00.4520661Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T08:55:00.4520840Z 
2025-08-19T08:55:00.4520930Z # emailer.tests.test\_import\_emailer
2025-08-19T08:55:00.4521095Z 
2025-08-19T08:55:00.4521182Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T08:55:00.4521339Z 
2025-08-19T08:55:00.4521429Z # emailer.tests.test\_smoke
2025-08-19T08:55:00.4521564Z 
2025-08-19T08:55:00.4521641Z <a id="emailer.tests"></a>
2025-08-19T08:55:00.4521778Z 
2025-08-19T08:55:00.4521844Z # emailer.tests
2025-08-19T08:55:00.4522099Z 
2025-08-19T08:55:00.4522189Z <a id="emailer.generate_body"></a>
2025-08-19T08:55:00.4522347Z 
2025-08-19T08:55:00.4522422Z # emailer.generate\_body
2025-08-19T08:55:00.4522546Z 
2025-08-19T08:55:00.4522623Z <a id="llm_server"></a>
2025-08-19T08:55:00.4522743Z 
2025-08-19T08:55:00.4522807Z # llm\_server
2025-08-19T08:55:00.4522911Z 
2025-08-19T08:55:00.4522989Z <a id="llm_server.app"></a>
2025-08-19T08:55:00.4523120Z 
2025-08-19T08:55:00.4523192Z # llm\_server.app
2025-08-19T08:55:00.4523304Z 
