2025-08-19T15:38:38.5164316Z ##[group]Run pydoc-markdown
2025-08-19T15:38:38.5164675Z [36;1mpydoc-markdown[0m
2025-08-19T15:38:38.5209466Z shell: /usr/bin/bash -e {0}
2025-08-19T15:38:38.5209779Z env:
2025-08-19T15:38:38.5210104Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:38:38.5210680Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T15:38:38.5211493Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:38:38.5211988Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:38:38.5212493Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T15:38:38.5212978Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T15:38:38.5213392Z ##[endgroup]
2025-08-19T15:38:38.8800457Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T15:38:38.8801356Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T15:38:38.8801824Z In "pydoc-markdown.yml"
2025-08-19T15:38:38.8802263Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T15:38:38.8802907Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T15:38:38.8803644Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T15:38:38.8804155Z 
2025-08-19T15:38:39.2234735Z <a id="__init__"></a>
2025-08-19T15:38:39.2235219Z 
2025-08-19T15:38:39.2235460Z # \_\_init\_\_
2025-08-19T15:38:39.2235786Z 
2025-08-19T15:38:39.2236028Z <a id="api"></a>
2025-08-19T15:38:39.2236385Z 
2025-08-19T15:38:39.2236592Z # api
2025-08-19T15:38:39.2236869Z 
2025-08-19T15:38:39.2237106Z <a id="api.errors"></a>
2025-08-19T15:38:39.2237516Z 
2025-08-19T15:38:39.2237762Z # api.errors
2025-08-19T15:38:39.2238057Z 
2025-08-19T15:38:39.2238318Z <a id="api.sentry_config"></a>
2025-08-19T15:38:39.2238847Z 
2025-08-19T15:38:39.2239137Z # api.sentry\_config
2025-08-19T15:38:39.2239529Z 
2025-08-19T15:38:39.2239880Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T15:38:39.2240547Z 
2025-08-19T15:38:39.2241653Z # api.tests.test\_stats\_contracts
2025-08-19T15:38:39.2242314Z 
2025-08-19T15:38:39.2242690Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T15:38:39.2243359Z 
2025-08-19T15:38:39.2243654Z # api.tests.test\_sentry\_scrub
2025-08-19T15:38:39.2244080Z 
2025-08-19T15:38:39.2244277Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T15:38:39.2244748Z 
2025-08-19T15:38:39.2244923Z # api.tests.test\_roi\_basic\_auth
2025-08-19T15:38:39.2245228Z 
2025-08-19T15:38:39.2245399Z <a id="api.tests.test_errors_json"></a>
2025-08-19T15:38:39.2245723Z 
2025-08-19T15:38:39.2245885Z # api.tests.test\_errors\_json
2025-08-19T15:38:39.2246129Z 
2025-08-19T15:38:39.2246249Z <a id="api.tests.test_llm"></a>
2025-08-19T15:38:39.2246475Z 
2025-08-19T15:38:39.2246585Z # api.tests.test\_llm
2025-08-19T15:38:39.2246765Z 
2025-08-19T15:38:39.2246904Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T15:38:39.2247159Z 
2025-08-19T15:38:39.2247280Z # api.tests.test\_roi\_filters
2025-08-19T15:38:39.2247495Z 
2025-08-19T15:38:39.2247647Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T15:38:39.2247912Z 
2025-08-19T15:38:39.2248035Z # api.tests.test\_sentry\_event
2025-08-19T15:38:39.2248259Z 
2025-08-19T15:38:39.2248452Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T15:38:39.2248774Z 
2025-08-19T15:38:39.2248898Z ## DummyTransport Objects
2025-08-19T15:38:39.2249098Z 
2025-08-19T15:38:39.2249199Z ```python
2025-08-19T15:38:39.2249463Z class DummyTransport()
2025-08-19T15:38:39.2249744Z ```
2025-08-19T15:38:39.2249874Z 
2025-08-19T15:38:39.2250152Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T15:38:39.2250571Z 
2025-08-19T15:38:39.2250683Z #### capture\_envelope
2025-08-19T15:38:39.2250869Z 
2025-08-19T15:38:39.2251193Z ```python
2025-08-19T15:38:39.2251469Z def capture_envelope(envelope)
2025-08-19T15:38:39.2251786Z ```
2025-08-19T15:38:39.2251913Z 
2025-08-19T15:38:39.2252112Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T15:38:39.2252441Z 
2025-08-19T15:38:39.2252580Z <a id="api.tests.test_cors"></a>
2025-08-19T15:38:39.2253090Z 
2025-08-19T15:38:39.2253203Z # api.tests.test\_cors
2025-08-19T15:38:39.2253385Z 
2025-08-19T15:38:39.2253516Z <a id="api.tests.test_imports"></a>
2025-08-19T15:38:39.2253763Z 
2025-08-19T15:38:39.2253880Z # api.tests.test\_imports
2025-08-19T15:38:39.2254078Z 
2025-08-19T15:38:39.2254215Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T15:38:39.2254469Z 
2025-08-19T15:38:39.2254592Z # api.tests.test\_rate\_limit
2025-08-19T15:38:39.2254814Z 
2025-08-19T15:38:39.2254959Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T15:38:39.2255231Z 
2025-08-19T15:38:39.2255327Z #### app
2025-08-19T15:38:39.2255469Z 
2025-08-19T15:38:39.2255568Z noqa: E402
2025-08-19T15:38:39.2255707Z 
2025-08-19T15:38:39.2255846Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T15:38:39.2256101Z 
2025-08-19T15:38:39.2256223Z # api.tests.test\_entrypoint
2025-08-19T15:38:39.2256426Z 
2025-08-19T15:38:39.2256530Z <a id="api.tests.test_health"></a>
2025-08-19T15:38:39.2256719Z 
2025-08-19T15:38:39.2256806Z # api.tests.test\_health
2025-08-19T15:38:39.2256960Z 
2025-08-19T15:38:39.2257056Z <a id="api.tests.test_score"></a>
2025-08-19T15:38:39.2257230Z 
2025-08-19T15:38:39.2257328Z # api.tests.test\_score
2025-08-19T15:38:39.2257470Z 
2025-08-19T15:38:39.2257564Z <a id="api.logging_config"></a>
2025-08-19T15:38:39.2257728Z 
2025-08-19T15:38:39.2257821Z # api.logging\_config
2025-08-19T15:38:39.2257958Z 
2025-08-19T15:38:39.2258050Z <a id="api.migrations.env"></a>
2025-08-19T15:38:39.2258225Z 
2025-08-19T15:38:39.2258315Z # api.migrations.env
2025-08-19T15:38:39.2258447Z 
2025-08-19T15:38:39.2258594Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T15:38:39.2258845Z 
2025-08-19T15:38:39.2258972Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T15:38:39.2259188Z 
2025-08-19T15:38:39.2259322Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T15:38:39.2259547Z 
2025-08-19T15:38:39.2259657Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T15:38:39.2259994Z 
2025-08-19T15:38:39.2260175Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T15:38:39.2260457Z 
2025-08-19T15:38:39.2260621Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T15:38:39.2260877Z 
2025-08-19T15:38:39.2261203Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T15:38:39.2261453Z 
2025-08-19T15:38:39.2261578Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T15:38:39.2261794Z 
2025-08-19T15:38:39.2261933Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T15:38:39.2262172Z 
2025-08-19T15:38:39.2262290Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T15:38:39.2262502Z 
2025-08-19T15:38:39.2262650Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T15:38:39.2262888Z 
2025-08-19T15:38:39.2263014Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T15:38:39.2263237Z 
2025-08-19T15:38:39.2263372Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T15:38:39.2263687Z 
2025-08-19T15:38:39.2263816Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T15:38:39.2264058Z 
2025-08-19T15:38:39.2264198Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T15:38:39.2264439Z 
2025-08-19T15:38:39.2264560Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T15:38:39.2264774Z 
2025-08-19T15:38:39.2264940Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T15:38:39.2265197Z 
2025-08-19T15:38:39.2265333Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T15:38:39.2265569Z 
2025-08-19T15:38:39.2265708Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T15:38:39.2265945Z 
2025-08-19T15:38:39.2266066Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T15:38:39.2266294Z 
2025-08-19T15:38:39.2266447Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T15:38:39.2266684Z 
2025-08-19T15:38:39.2266867Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T15:38:39.2267225Z 
2025-08-19T15:38:39.2267339Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T15:38:39.2267540Z 
2025-08-19T15:38:39.2267636Z # api.migrations.versions.0001\_baseline
2025-08-19T15:38:39.2267811Z 
2025-08-19T15:38:39.2267902Z <a id="api.migrations.versions"></a>
2025-08-19T15:38:39.2268077Z 
2025-08-19T15:38:39.2268160Z # api.migrations.versions
2025-08-19T15:38:39.2268293Z 
2025-08-19T15:38:39.2268380Z <a id="api.migrations"></a>
2025-08-19T15:38:39.2268515Z 
2025-08-19T15:38:39.2268588Z # api.migrations
2025-08-19T15:38:39.2268881Z 
2025-08-19T15:38:39.2269000Z <a id="api.db"></a>
2025-08-19T15:38:39.2269183Z 
2025-08-19T15:38:39.2269301Z # api.db
2025-08-19T15:38:39.2269468Z 
2025-08-19T15:38:39.2269615Z <a id="api.routes.score"></a>
2025-08-19T15:38:39.2269865Z 
2025-08-19T15:38:39.2269997Z # api.routes.score
2025-08-19T15:38:39.2270190Z 
2025-08-19T15:38:39.2270336Z <a id="api.routes.stats"></a>
2025-08-19T15:38:39.2270583Z 
2025-08-19T15:38:39.2270736Z # api.routes.stats
2025-08-19T15:38:39.2271086Z 
2025-08-19T15:38:39.2271179Z <a id="api.routes.roi"></a>
2025-08-19T15:38:39.2271325Z 
2025-08-19T15:38:39.2271395Z # api.routes.roi
2025-08-19T15:38:39.2271506Z 
2025-08-19T15:38:39.2271596Z <a id="api.routes.health"></a>
2025-08-19T15:38:39.2271741Z 
2025-08-19T15:38:39.2271813Z # api.routes.health
2025-08-19T15:38:39.2271926Z 
2025-08-19T15:38:39.2272027Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T15:38:39.2272199Z 
2025-08-19T15:38:39.2272265Z #### MAX\_SKEW
2025-08-19T15:38:39.2272371Z 
2025-08-19T15:38:39.2272436Z seconds
2025-08-19T15:38:39.2272522Z 
2025-08-19T15:38:39.2272614Z <a id="api.routes.health.health"></a>
2025-08-19T15:38:39.2272784Z 
2025-08-19T15:38:39.2272849Z #### health
2025-08-19T15:38:39.2272942Z 
2025-08-19T15:38:39.2273015Z ```python
2025-08-19T15:38:39.2273218Z @router.get("/health", include_in_schema=False)
2025-08-19T15:38:39.2273631Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T15:38:39.2274170Z ```
2025-08-19T15:38:39.2274267Z 
2025-08-19T15:38:39.2274385Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T15:38:39.2274595Z 
2025-08-19T15:38:39.2274686Z <a id="api.routes.repository"></a>
2025-08-19T15:38:39.2274856Z 
2025-08-19T15:38:39.2274936Z # api.routes.repository
2025-08-19T15:38:39.2275064Z 
2025-08-19T15:38:39.2275147Z <a id="api.routes"></a>
2025-08-19T15:38:39.2275270Z 
2025-08-19T15:38:39.2275337Z # api.routes
2025-08-19T15:38:39.2275444Z 
2025-08-19T15:38:39.2275524Z <a id="api.models.fee"></a>
2025-08-19T15:38:39.2275660Z 
2025-08-19T15:38:39.2275729Z # api.models.fee
2025-08-19T15:38:39.2275842Z 
2025-08-19T15:38:39.2275916Z <a id="api.models"></a>
2025-08-19T15:38:39.2276036Z 
2025-08-19T15:38:39.2276108Z # api.models
2025-08-19T15:38:39.2276206Z 
2025-08-19T15:38:39.2276287Z <a id="api.roi_repository"></a>
2025-08-19T15:38:39.2276437Z 
2025-08-19T15:38:39.2276507Z # api.roi\_repository
2025-08-19T15:38:39.2276624Z 
2025-08-19T15:38:39.2276691Z <a id="api.main"></a>
2025-08-19T15:38:39.2276835Z 
2025-08-19T15:38:39.2276897Z # api.main
2025-08-19T15:38:39.2276985Z 
2025-08-19T15:38:39.2277065Z <a id="api.main.ready"></a>
2025-08-19T15:38:39.2277193Z 
2025-08-19T15:38:39.2277256Z #### ready
2025-08-19T15:38:39.2277346Z 
2025-08-19T15:38:39.2277407Z ```python
2025-08-19T15:38:39.2277661Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T15:38:39.2278085Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T15:38:39.2278431Z                                                                       str]
2025-08-19T15:38:39.2278652Z ```
2025-08-19T15:38:39.2278732Z 
2025-08-19T15:38:39.2278829Z Return 200 only when migrations are at head.
2025-08-19T15:38:39.2278996Z 
2025-08-19T15:38:39.2279066Z <a id="api.config"></a>
2025-08-19T15:38:39.2279188Z 
2025-08-19T15:38:39.2279250Z # api.config
2025-08-19T15:38:39.2279341Z 
2025-08-19T15:38:39.2279413Z <a id="api.security"></a>
2025-08-19T15:38:39.2279546Z 
2025-08-19T15:38:39.2279731Z # api.security
2025-08-19T15:38:39.2279827Z 
2025-08-19T15:38:39.2279894Z <a id="etl"></a>
2025-08-19T15:38:39.2279992Z 
2025-08-19T15:38:39.2280051Z # etl
2025-08-19T15:38:39.2280138Z 
2025-08-19T15:38:39.2280216Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T15:38:39.2280360Z 
2025-08-19T15:38:39.2280431Z # etl.fba\_fee\_ingestor
2025-08-19T15:38:39.2280555Z 
2025-08-19T15:38:39.2280631Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T15:38:39.2280771Z 
2025-08-19T15:38:39.2280847Z # etl.sp\_fees\_ingestor
2025-08-19T15:38:39.2281149Z 
2025-08-19T15:38:39.2281231Z <a id="etl.keepa_ingestor"></a>
2025-08-19T15:38:39.2281366Z 
2025-08-19T15:38:39.2281441Z # etl.keepa\_ingestor
2025-08-19T15:38:39.2281551Z 
2025-08-19T15:38:39.2281615Z <a id="etl.db"></a>
2025-08-19T15:38:39.2281722Z 
2025-08-19T15:38:39.2281784Z # etl.db
2025-08-19T15:38:39.2281868Z 
2025-08-19T15:38:39.2281953Z <a id="etl.dialects.schemas"></a>
2025-08-19T15:38:39.2282095Z 
2025-08-19T15:38:39.2282166Z # etl.dialects.schemas
2025-08-19T15:38:39.2282294Z 
2025-08-19T15:38:39.2282405Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T15:38:39.2282582Z 
2025-08-19T15:38:39.2282667Z # etl.dialects.amazon\_reimbursements
2025-08-19T15:38:39.2282831Z 
2025-08-19T15:38:39.2282923Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T15:38:39.2283088Z 
2025-08-19T15:38:39.2283179Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T15:38:39.2283331Z 
2025-08-19T15:38:39.2283417Z <a id="etl.dialects.test_generic"></a>
2025-08-19T15:38:39.2283568Z 
2025-08-19T15:38:39.2283654Z # etl.dialects.test\_generic
2025-08-19T15:38:39.2283785Z 
2025-08-19T15:38:39.2283871Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T15:38:39.2284037Z 
2025-08-19T15:38:39.2284116Z # etl.dialects.amazon\_returns
2025-08-19T15:38:39.2284249Z 
2025-08-19T15:38:39.2284346Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T15:38:39.2284510Z 
2025-08-19T15:38:39.2284592Z # etl.dialects.amazon\_fee\_preview
2025-08-19T15:38:39.2284867Z 
2025-08-19T15:38:39.2284980Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T15:38:39.2285160Z 
2025-08-19T15:38:39.2285249Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T15:38:39.2285412Z 
2025-08-19T15:38:39.2285503Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T15:38:39.2285666Z 
2025-08-19T15:38:39.2285754Z # etl.dialects.amazon\_settlements
2025-08-19T15:38:39.2285899Z 
2025-08-19T15:38:39.2285978Z <a id="etl.dialects"></a>
2025-08-19T15:38:39.2286098Z 
2025-08-19T15:38:39.2286167Z # etl.dialects
2025-08-19T15:38:39.2286263Z 
2025-08-19T15:38:39.2286328Z <a id="ingest"></a>
2025-08-19T15:38:39.2286435Z 
2025-08-19T15:38:39.2286495Z # ingest
2025-08-19T15:38:39.2286578Z 
2025-08-19T15:38:39.2286657Z <a id="ingest.maintenance"></a>
2025-08-19T15:38:39.2286798Z 
2025-08-19T15:38:39.2286869Z # ingest.maintenance
2025-08-19T15:38:39.2286980Z 
2025-08-19T15:38:39.2287064Z <a id="ingest.copy_loader"></a>
2025-08-19T15:38:39.2287195Z 
2025-08-19T15:38:39.2287263Z # ingest.copy\_loader
2025-08-19T15:38:39.2287389Z 
2025-08-19T15:38:39.2287485Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T15:38:39.2287662Z 
2025-08-19T15:38:39.2287734Z #### copy\_df\_via\_temp
2025-08-19T15:38:39.2287865Z 
2025-08-19T15:38:39.2287926Z ```python
2025-08-19T15:38:39.2288096Z def copy_df_via_temp(engine: Engine,
2025-08-19T15:38:39.2288483Z                      df: pd.DataFrame,
2025-08-19T15:38:39.2288897Z                      target_table: str,
2025-08-19T15:38:39.2289263Z                      *,
2025-08-19T15:38:39.2289638Z                      target_schema: Optional[str] = None,
2025-08-19T15:38:39.2290098Z                      columns: Sequence[str],
2025-08-19T15:38:39.2290576Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T15:38:39.2291265Z                      analyze_after: bool = False,
2025-08-19T15:38:39.2291731Z                      connection: Any | None = None) -> int
2025-08-19T15:38:39.2292150Z ```
2025-08-19T15:38:39.2292295Z 
2025-08-19T15:38:39.2292576Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T15:38:39.2293209Z 
2025-08-19T15:38:39.2293367Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T15:38:39.2293648Z 
2025-08-19T15:38:39.2293790Z # ingest.tests.test\_smoke
2025-08-19T15:38:39.2294007Z 
2025-08-19T15:38:39.2294086Z <a id="ingest.tests"></a>
2025-08-19T15:38:39.2294213Z 
2025-08-19T15:38:39.2294284Z # ingest.tests
2025-08-19T15:38:39.2294382Z 
2025-08-19T15:38:39.2294463Z <a id="ingest.upload_router"></a>
2025-08-19T15:38:39.2294608Z 
2025-08-19T15:38:39.2294686Z # ingest.upload\_router
2025-08-19T15:38:39.2294802Z 
2025-08-19T15:38:39.2294880Z <a id="ingest.email_watcher"></a>
2025-08-19T15:38:39.2295022Z 
2025-08-19T15:38:39.2295092Z # ingest.email\_watcher
2025-08-19T15:38:39.2295203Z 
2025-08-19T15:38:39.2295296Z <a id="ingest.email_watcher.main"></a>
2025-08-19T15:38:39.2295456Z 
2025-08-19T15:38:39.2295516Z #### main
2025-08-19T15:38:39.2295601Z 
2025-08-19T15:38:39.2295673Z ```python
2025-08-19T15:38:39.2295846Z def main() -> dict[str, str]
2025-08-19T15:38:39.2296049Z ```
2025-08-19T15:38:39.2296128Z 
2025-08-19T15:38:39.2296263Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T15:38:39.2296486Z 
2025-08-19T15:38:39.2296611Z Returns {"status": "success"} when processing completes.
2025-08-19T15:38:39.2296815Z 
2025-08-19T15:38:39.2296894Z <a id="ingest.tasks"></a>
2025-08-19T15:38:39.2297018Z 
2025-08-19T15:38:39.2297083Z # ingest.tasks
2025-08-19T15:38:39.2297180Z 
2025-08-19T15:38:39.2297280Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T15:38:39.2297448Z 
2025-08-19T15:38:39.2297518Z #### task\_import\_file
2025-08-19T15:38:39.2297637Z 
2025-08-19T15:38:39.2297698Z ```python
2025-08-19T15:38:39.2297899Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T15:38:39.2298196Z def task_import_file(self: Any,
2025-08-19T15:38:39.2298398Z                      uri: str,
2025-08-19T15:38:39.2298622Z                      report_type: str | None = None,
2025-08-19T15:38:39.2299410Z                      force: bool = False) -> dict[str, Any]
2025-08-19T15:38:39.2299855Z ```
2025-08-19T15:38:39.2300011Z 
2025-08-19T15:38:39.2300246Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T15:38:39.2300568Z 
2025-08-19T15:38:39.2300656Z <a id="ingest.celery_app"></a>
2025-08-19T15:38:39.2300800Z 
2025-08-19T15:38:39.2300878Z # ingest.celery\_app
2025-08-19T15:38:39.2301241Z 
2025-08-19T15:38:39.2301326Z <a id="ingest.ingest_router"></a>
2025-08-19T15:38:39.2301478Z 
2025-08-19T15:38:39.2301555Z # ingest.ingest\_router
2025-08-19T15:38:39.2301671Z 
2025-08-19T15:38:39.2301746Z <a id="logistics_etl"></a>
2025-08-19T15:38:39.2301879Z 
2025-08-19T15:38:39.2301944Z # logistics\_etl
2025-08-19T15:38:39.2302045Z 
2025-08-19T15:38:39.2302124Z Daily logistics ETL job.
2025-08-19T15:38:39.2302246Z 
2025-08-19T15:38:39.2302326Z <a id="logistics_etl.__main__"></a>
2025-08-19T15:38:39.2302473Z 
2025-08-19T15:38:39.2302554Z # logistics\_etl.\_\_main\_\_
2025-08-19T15:38:39.2302697Z 
2025-08-19T15:38:39.2302777Z <a id="logistics_etl.dsn"></a>
2025-08-19T15:38:39.2302916Z 
2025-08-19T15:38:39.2302984Z # logistics\_etl.dsn
2025-08-19T15:38:39.2303092Z 
2025-08-19T15:38:39.2303213Z Local DSN builder to avoid cross-service dependency.
2025-08-19T15:38:39.2303409Z 
2025-08-19T15:38:39.2303498Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T15:38:39.2303664Z 
2025-08-19T15:38:39.2303736Z #### build\_dsn
2025-08-19T15:38:39.2303834Z 
2025-08-19T15:38:39.2303902Z ```python
2025-08-19T15:38:39.2304083Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:38:39.2304299Z ```
2025-08-19T15:38:39.2304384Z 
2025-08-19T15:38:39.2304521Z Return a Postgres DSN assembled from environment variables.
2025-08-19T15:38:39.2304736Z 
2025-08-19T15:38:39.2304892Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T15:38:39.2305286Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T15:38:39.2305632Z error when any required variable is missing.
2025-08-19T15:38:39.2305811Z 
2025-08-19T15:38:39.2306335Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T15:38:39.2306532Z 
2025-08-19T15:38:39.2306616Z # logistics\_etl.tests.conftest
2025-08-19T15:38:39.2306761Z 
2025-08-19T15:38:39.2306871Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T15:38:39.2307055Z 
2025-08-19T15:38:39.2307143Z # logistics\_etl.tests.test\_repository
2025-08-19T15:38:39.2307305Z 
2025-08-19T15:38:39.2307404Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T15:38:39.2307572Z 
2025-08-19T15:38:39.2307653Z # logistics\_etl.tests.test\_cron
2025-08-19T15:38:39.2307808Z 
2025-08-19T15:38:39.2307902Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T15:38:39.2308072Z 
2025-08-19T15:38:39.2308160Z # logistics\_etl.tests.test\_imports
2025-08-19T15:38:39.2308312Z 
2025-08-19T15:38:39.2308400Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T15:38:39.2308565Z 
2025-08-19T15:38:39.2308652Z # logistics\_etl.tests.test\_smoke
2025-08-19T15:38:39.2308799Z 
2025-08-19T15:38:39.2308895Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T15:38:39.2309072Z 
2025-08-19T15:38:39.2309153Z # logistics\_etl.tests.test\_client
2025-08-19T15:38:39.2309303Z 
2025-08-19T15:38:39.2309388Z <a id="logistics_etl.tests"></a>
2025-08-19T15:38:39.2309528Z 
2025-08-19T15:38:39.2309603Z # logistics\_etl.tests
2025-08-19T15:38:39.2309717Z 
2025-08-19T15:38:39.2309800Z <a id="logistics_etl.flow"></a>
2025-08-19T15:38:39.2309935Z 
2025-08-19T15:38:39.2310005Z # logistics\_etl.flow
2025-08-19T15:38:39.2310122Z 
2025-08-19T15:38:39.2310201Z <a id="logistics_etl.client"></a>
2025-08-19T15:38:39.2310343Z 
2025-08-19T15:38:39.2310421Z # logistics\_etl.client
2025-08-19T15:38:39.2310539Z 
2025-08-19T15:38:39.2310613Z <a id="logistics_etl.cron"></a>
2025-08-19T15:38:39.2310744Z 
2025-08-19T15:38:39.2310819Z # logistics\_etl.cron
2025-08-19T15:38:39.2311111Z 
2025-08-19T15:38:39.2311192Z <a id="logistics_etl.db"></a>
2025-08-19T15:38:39.2311341Z 
2025-08-19T15:38:39.2311406Z # logistics\_etl.db
2025-08-19T15:38:39.2311645Z 
2025-08-19T15:38:39.2311734Z <a id="logistics_etl.repository"></a>
2025-08-19T15:38:39.2311901Z 
2025-08-19T15:38:39.2337773Z # logistics\_etl.repository
2025-08-19T15:38:39.2338049Z 
2025-08-19T15:38:39.2338173Z <a id="alert_bot"></a>
2025-08-19T15:38:39.2338375Z 
2025-08-19T15:38:39.2338481Z # alert\_bot
2025-08-19T15:38:39.2338652Z 
2025-08-19T15:38:39.2338799Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T15:38:39.2339068Z 
2025-08-19T15:38:39.2339206Z # alert\_bot.tests.test\_smoke
2025-08-19T15:38:39.2339432Z 
2025-08-19T15:38:39.2339601Z <a id="alert_bot.tests"></a>
2025-08-19T15:38:39.2339813Z 
2025-08-19T15:38:39.2339884Z # alert\_bot.tests
2025-08-19T15:38:39.2339992Z 
2025-08-19T15:38:39.2340075Z <a id="alert_bot.alert_bot"></a>
2025-08-19T15:38:39.2340228Z 
2025-08-19T15:38:39.2340301Z # alert\_bot.alert\_bot
2025-08-19T15:38:39.2340418Z 
2025-08-19T15:38:39.2340497Z <a id="alert_bot.rules"></a>
2025-08-19T15:38:39.2340628Z 
2025-08-19T15:38:39.2340695Z # alert\_bot.rules
2025-08-19T15:38:39.2340821Z 
2025-08-19T15:38:39.2341036Z <a id="common"></a>
2025-08-19T15:38:39.2341145Z 
2025-08-19T15:38:39.2341207Z # common
2025-08-19T15:38:39.2341303Z 
2025-08-19T15:38:39.2341375Z <a id="common.dsn"></a>
2025-08-19T15:38:39.2341491Z 
2025-08-19T15:38:39.2341561Z # common.dsn
2025-08-19T15:38:39.2341653Z 
2025-08-19T15:38:39.2341736Z <a id="common.dsn.build_dsn"></a>
2025-08-19T15:38:39.2341881Z 
2025-08-19T15:38:39.2341955Z #### build\_dsn
2025-08-19T15:38:39.2342053Z 
2025-08-19T15:38:39.2342116Z ```python
2025-08-19T15:38:39.2342298Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:38:39.2342513Z ```
2025-08-19T15:38:39.2342605Z 
2025-08-19T15:38:39.2342726Z Return a Postgres DSN, validating required variables.
2025-08-19T15:38:39.2342924Z 
2025-08-19T15:38:39.2343115Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T15:38:39.2343544Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T15:38:39.2343965Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T15:38:39.2344430Z missing.
2025-08-19T15:38:39.2344519Z 
2025-08-19T15:38:39.2344602Z <a id="common.models_vendor"></a>
2025-08-19T15:38:39.2344746Z 
2025-08-19T15:38:39.2344818Z # common.models\_vendor
2025-08-19T15:38:39.2345006Z 
2025-08-19T15:38:39.2345096Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T15:38:39.2345258Z 
2025-08-19T15:38:39.2345328Z ## Vendor Objects
2025-08-19T15:38:39.2345432Z 
2025-08-19T15:38:39.2345494Z ```python
2025-08-19T15:38:39.2345650Z class Vendor(Base)
2025-08-19T15:38:39.2345806Z ```
2025-08-19T15:38:39.2345890Z 
2025-08-19T15:38:39.2345966Z Vendor of inventory items.
2025-08-19T15:38:39.2346095Z 
2025-08-19T15:38:39.2346200Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T15:38:39.2346374Z 
2025-08-19T15:38:39.2346445Z ## VendorPrice Objects
2025-08-19T15:38:39.2346559Z 
2025-08-19T15:38:39.2346625Z ```python
2025-08-19T15:38:39.2346786Z class VendorPrice(Base)
2025-08-19T15:38:39.2346964Z ```
2025-08-19T15:38:39.2347052Z 
2025-08-19T15:38:39.2347152Z Association table linking vendors to pricing.
2025-08-19T15:38:39.2347331Z 
2025-08-19T15:38:39.2347405Z <a id="common.db_url"></a>
2025-08-19T15:38:39.2347526Z 
2025-08-19T15:38:39.2347597Z # common.db\_url
2025-08-19T15:38:39.2347698Z 
2025-08-19T15:38:39.2347779Z <a id="common.db_url.build_url"></a>
2025-08-19T15:38:39.2347929Z 
2025-08-19T15:38:39.2347999Z #### build\_url
2025-08-19T15:38:39.2348095Z 
2025-08-19T15:38:39.2348155Z ```python
2025-08-19T15:38:39.2348328Z def build_url(async_: bool = True) -> str
2025-08-19T15:38:39.2348542Z ```
2025-08-19T15:38:39.2348626Z 
2025-08-19T15:38:39.2348721Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:38:39.2348888Z 
2025-08-19T15:38:39.2348972Z <a id="common.keepa"></a>
2025-08-19T15:38:39.2349097Z 
2025-08-19T15:38:39.2349165Z # common.keepa
2025-08-19T15:38:39.2349269Z 
2025-08-19T15:38:39.2349339Z <a id="common.llm"></a>
2025-08-19T15:38:39.2349454Z 
2025-08-19T15:38:39.2349640Z # common.llm
2025-08-19T15:38:39.2349744Z 
2025-08-19T15:38:39.2349824Z <a id="common.settings"></a>
2025-08-19T15:38:39.2349957Z 
2025-08-19T15:38:39.2350030Z # common.settings
2025-08-19T15:38:39.2350133Z 
2025-08-19T15:38:39.2350201Z <a id="common.db"></a>
2025-08-19T15:38:39.2350313Z 
2025-08-19T15:38:39.2350380Z # common.db
2025-08-19T15:38:39.2350468Z 
2025-08-19T15:38:39.2350557Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T15:38:39.2350726Z 
2025-08-19T15:38:39.2350800Z #### build\_sqlalchemy\_url
2025-08-19T15:38:39.2351029Z 
2025-08-19T15:38:39.2351092Z ```python
2025-08-19T15:38:39.2351266Z def build_sqlalchemy_url() -> str
2025-08-19T15:38:39.2351475Z ```
2025-08-19T15:38:39.2351557Z 
2025-08-19T15:38:39.2351650Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:38:39.2351813Z 
2025-08-19T15:38:39.2351918Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T15:38:39.2352078Z 
2025-08-19T15:38:39.2352152Z #### build\_asyncpg\_dsn
2025-08-19T15:38:39.2352289Z 
2025-08-19T15:38:39.2352357Z ```python
2025-08-19T15:38:39.2352526Z def build_asyncpg_dsn() -> str
2025-08-19T15:38:39.2352727Z ```
2025-08-19T15:38:39.2352809Z 
2025-08-19T15:38:39.2352942Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:38:39.2353151Z 
2025-08-19T15:38:39.2353237Z <a id="common.db.refresh_mvs"></a>
2025-08-19T15:38:39.2353391Z 
2025-08-19T15:38:39.2353455Z #### refresh\_mvs
2025-08-19T15:38:39.2353557Z 
2025-08-19T15:38:39.2353618Z ```python
2025-08-19T15:38:39.2353816Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:38:39.2354056Z ```
2025-08-19T15:38:39.2354146Z 
2025-08-19T15:38:39.2354277Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:38:39.2354488Z 
2025-08-19T15:38:39.2354573Z <a id="common.config"></a>
2025-08-19T15:38:39.2354709Z 
2025-08-19T15:38:39.2354778Z # common.config
2025-08-19T15:38:39.2354883Z 
2025-08-19T15:38:39.2354959Z <a id="common.base"></a>
2025-08-19T15:38:39.2355077Z 
2025-08-19T15:38:39.2355145Z # common.base
2025-08-19T15:38:39.2355422Z 
2025-08-19T15:38:39.2355501Z <a id="common.base.Base"></a>
2025-08-19T15:38:39.2355636Z 
2025-08-19T15:38:39.2355702Z ## Base Objects
2025-08-19T15:38:39.2355796Z 
2025-08-19T15:38:39.2355858Z ```python
2025-08-19T15:38:39.2356028Z class Base(DeclarativeBase)
2025-08-19T15:38:39.2356212Z ```
2025-08-19T15:38:39.2356295Z 
2025-08-19T15:38:39.2356375Z Base class for SQLAlchemy models.
2025-08-19T15:38:39.2356516Z 
2025-08-19T15:38:39.2356588Z <a id="repricer"></a>
2025-08-19T15:38:39.2356705Z 
2025-08-19T15:38:39.2356767Z # repricer
2025-08-19T15:38:39.2356855Z 
2025-08-19T15:38:39.2356948Z <a id="repricer.app.schemas"></a>
2025-08-19T15:38:39.2357100Z 
2025-08-19T15:38:39.2357187Z # repricer.app.schemas
2025-08-19T15:38:39.2357321Z 
2025-08-19T15:38:39.2357401Z <a id="repricer.app.deps"></a>
2025-08-19T15:38:39.2357538Z 
2025-08-19T15:38:39.2357610Z # repricer.app.deps
2025-08-19T15:38:39.2357730Z 
2025-08-19T15:38:39.2357842Z Placeholder module for Keepa / SP-API clients.
2025-08-19T15:38:39.2358033Z 
2025-08-19T15:38:39.2358124Z <a id="repricer.app.logic"></a>
2025-08-19T15:38:39.2358265Z 
2025-08-19T15:38:39.2358338Z # repricer.app.logic
2025-08-19T15:38:39.2358458Z 
2025-08-19T15:38:39.2358551Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T15:38:39.2358719Z 
2025-08-19T15:38:39.2358783Z #### MIN\_MARGIN
2025-08-19T15:38:39.2358890Z 
2025-08-19T15:38:39.2358951Z 15 % ROI
2025-08-19T15:38:39.2359038Z 
2025-08-19T15:38:39.2359145Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T15:38:39.2359320Z 
2025-08-19T15:38:39.2359386Z #### compute\_price
2025-08-19T15:38:39.2359490Z 
2025-08-19T15:38:39.2359559Z ```python
2025-08-19T15:38:39.2359798Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T15:38:39.2360107Z ```
2025-08-19T15:38:39.2360187Z 
2025-08-19T15:38:39.2360293Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T15:38:39.2360571Z Replace with real competitive logic later.
2025-08-19T15:38:39.2360737Z 
2025-08-19T15:38:39.2361068Z <a id="repricer.app.main"></a>
2025-08-19T15:38:39.2361216Z 
2025-08-19T15:38:39.2361285Z # repricer.app.main
2025-08-19T15:38:39.2361396Z 
2025-08-19T15:38:39.2361474Z <a id="repricer.app"></a>
2025-08-19T15:38:39.2361598Z 
2025-08-19T15:38:39.2361662Z # repricer.app
2025-08-19T15:38:39.2361769Z 
2025-08-19T15:38:39.2361857Z <a id="repricer.tests.test_imports"></a>
2025-08-19T15:38:39.2362019Z 
2025-08-19T15:38:39.2362105Z # repricer.tests.test\_imports
2025-08-19T15:38:39.2362239Z 
2025-08-19T15:38:39.2362323Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T15:38:39.2362480Z 
2025-08-19T15:38:39.2362573Z # repricer.tests.test\_smoke
2025-08-19T15:38:39.2362706Z 
2025-08-19T15:38:39.2362783Z <a id="repricer.tests"></a>
2025-08-19T15:38:39.2362918Z 
2025-08-19T15:38:39.2362984Z # repricer.tests
2025-08-19T15:38:39.2363087Z 
2025-08-19T15:38:39.2363158Z <a id="db"></a>
2025-08-19T15:38:39.2363253Z 
2025-08-19T15:38:39.2363313Z # db
2025-08-19T15:38:39.2363397Z 
2025-08-19T15:38:39.2363487Z <a id="db.utils.views"></a>
2025-08-19T15:38:39.2363618Z 
2025-08-19T15:38:39.2363683Z # db.utils.views
2025-08-19T15:38:39.2363791Z 
2025-08-19T15:38:39.2363881Z <a id="db.utils.views.replace_view"></a>
2025-08-19T15:38:39.2364041Z 
2025-08-19T15:38:39.2364106Z #### replace\_view
2025-08-19T15:38:39.2364220Z 
2025-08-19T15:38:39.2364290Z ```python
2025-08-19T15:38:39.2364488Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T15:38:39.2364722Z ```
2025-08-19T15:38:39.2364800Z 
2025-08-19T15:38:39.2364897Z Drop and recreate a SQL view atomically.
2025-08-19T15:38:39.2365053Z 
2025-08-19T15:38:39.2365121Z <a id="db.utils"></a>
2025-08-19T15:38:39.2365240Z 
2025-08-19T15:38:39.2365300Z # db.utils
2025-08-19T15:38:39.2365389Z 
2025-08-19T15:38:39.2365464Z <a id="price_importer"></a>
2025-08-19T15:38:39.2365594Z 
2025-08-19T15:38:39.2365663Z # price\_importer
2025-08-19T15:38:39.2365764Z 
2025-08-19T15:38:39.2365870Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T15:38:39.2366047Z 
2025-08-19T15:38:39.2366144Z # price\_importer.services\_common.dsn
2025-08-19T15:38:39.2366436Z 
2025-08-19T15:38:39.2366556Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T15:38:39.2366758Z 
2025-08-19T15:38:39.2366822Z #### build\_dsn
2025-08-19T15:38:39.2366926Z 
2025-08-19T15:38:39.2366986Z ```python
2025-08-19T15:38:39.2367160Z def build_dsn(sync: bool = True) -> str
2025-08-19T15:38:39.2367372Z ```
2025-08-19T15:38:39.2367454Z 
2025-08-19T15:38:39.2367527Z Return safe DSN.
2025-08-19T15:38:39.2367627Z 
2025-08-19T15:38:39.2368030Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T15:38:39.2368232Z 
2025-08-19T15:38:39.2368356Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T15:38:39.2368556Z 
2025-08-19T15:38:39.2368680Z # price\_importer.services\_common.models\_vendor
2025-08-19T15:38:39.2368867Z 
2025-08-19T15:38:39.2368978Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T15:38:39.2369165Z 
2025-08-19T15:38:39.2369275Z # price\_importer.services\_common.db\_url
2025-08-19T15:38:39.2369464Z 
2025-08-19T15:38:39.2369593Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T15:38:39.2369821Z 
2025-08-19T15:38:39.2369888Z #### build\_url
2025-08-19T15:38:39.2369991Z 
2025-08-19T15:38:39.2370066Z ```python
2025-08-19T15:38:39.2370240Z def build_url(async_: bool = True) -> str
2025-08-19T15:38:39.2370481Z ```
2025-08-19T15:38:39.2370561Z 
2025-08-19T15:38:39.2370655Z Return Postgres DSN from env or PG_* parts.
2025-08-19T15:38:39.2370831Z 
2025-08-19T15:38:39.2371080Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T15:38:39.2371271Z 
2025-08-19T15:38:39.2371361Z # price\_importer.services\_common.keepa
2025-08-19T15:38:39.2371534Z 
2025-08-19T15:38:39.2371638Z <a id="price_importer.services_common.llm"></a>
2025-08-19T15:38:39.2371814Z 
2025-08-19T15:38:39.2371910Z # price\_importer.services\_common.llm
2025-08-19T15:38:39.2372071Z 
2025-08-19T15:38:39.2372187Z <a id="price_importer.services_common.settings"></a>
2025-08-19T15:38:39.2372514Z 
2025-08-19T15:38:39.2372611Z # price\_importer.services\_common.settings
2025-08-19T15:38:39.2372780Z 
2025-08-19T15:38:39.2372881Z <a id="price_importer.services_common.db"></a>
2025-08-19T15:38:39.2373067Z 
2025-08-19T15:38:39.2373162Z # price\_importer.services\_common.db
2025-08-19T15:38:39.2373318Z 
2025-08-19T15:38:39.2373483Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T15:38:39.2373721Z 
2025-08-19T15:38:39.2373799Z #### build\_sqlalchemy\_url
2025-08-19T15:38:39.2373937Z 
2025-08-19T15:38:39.2374001Z ```python
2025-08-19T15:38:39.2374179Z def build_sqlalchemy_url() -> str
2025-08-19T15:38:39.2374396Z ```
2025-08-19T15:38:39.2374484Z 
2025-08-19T15:38:39.2374587Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T15:38:39.2374758Z 
2025-08-19T15:38:39.2374903Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T15:38:39.2375129Z 
2025-08-19T15:38:39.2375214Z #### build\_asyncpg\_dsn
2025-08-19T15:38:39.2375355Z 
2025-08-19T15:38:39.2375424Z ```python
2025-08-19T15:38:39.2375592Z def build_asyncpg_dsn() -> str
2025-08-19T15:38:39.2375787Z ```
2025-08-19T15:38:39.2375885Z 
2025-08-19T15:38:39.2376011Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T15:38:39.2376223Z 
2025-08-19T15:38:39.2376370Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T15:38:39.2376578Z 
2025-08-19T15:38:39.2376647Z #### refresh\_mvs
2025-08-19T15:38:39.2376769Z 
2025-08-19T15:38:39.2376831Z ```python
2025-08-19T15:38:39.2377026Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T15:38:39.2377285Z ```
2025-08-19T15:38:39.2377369Z 
2025-08-19T15:38:39.2377505Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T15:38:39.2377725Z 
2025-08-19T15:38:39.2377822Z <a id="price_importer.services_common"></a>
2025-08-19T15:38:39.2377995Z 
2025-08-19T15:38:39.2378105Z # price\_importer.services\_common
2025-08-19T15:38:39.2378259Z 
2025-08-19T15:38:39.2378371Z <a id="price_importer.services_common.base"></a>
2025-08-19T15:38:39.2378701Z 
2025-08-19T15:38:39.2378792Z # price\_importer.services\_common.base
2025-08-19T15:38:39.2378955Z 
2025-08-19T15:38:39.2379064Z <a id="price_importer.normaliser"></a>
2025-08-19T15:38:39.2379224Z 
2025-08-19T15:38:39.2379307Z # price\_importer.normaliser
2025-08-19T15:38:39.2379448Z 
2025-08-19T15:38:39.2379563Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T15:38:39.2379744Z 
2025-08-19T15:38:39.2379836Z # price\_importer.common.models\_vendor
2025-08-19T15:38:39.2380008Z 
2025-08-19T15:38:39.2380102Z <a id="price_importer.common.db_url"></a>
2025-08-19T15:38:39.2380268Z 
2025-08-19T15:38:39.2380370Z # price\_importer.common.db\_url
2025-08-19T15:38:39.2380519Z 
2025-08-19T15:38:39.2380625Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T15:38:39.2380805Z 
2025-08-19T15:38:39.2380875Z #### make\_dsn
2025-08-19T15:38:39.2381098Z 
2025-08-19T15:38:39.2381159Z ```python
2025-08-19T15:38:39.2381345Z def make_dsn(async_: bool = False) -> str
2025-08-19T15:38:39.2381579Z ```
2025-08-19T15:38:39.2381668Z 
2025-08-19T15:38:39.2381789Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T15:38:39.2381984Z 
2025-08-19T15:38:39.2382100Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T15:38:39.2382282Z 
2025-08-19T15:38:39.2382356Z #### build\_url
2025-08-19T15:38:39.2382472Z 
2025-08-19T15:38:39.2382535Z ```python
2025-08-19T15:38:39.2382712Z def build_url(async_: bool = False) -> str
2025-08-19T15:38:39.2382954Z ```
2025-08-19T15:38:39.2383039Z 
2025-08-19T15:38:39.2383163Z Return Postgres DSN built from environment variables.
2025-08-19T15:38:39.2383377Z 
2025-08-19T15:38:39.2383464Z <a id="price_importer.common"></a>
2025-08-19T15:38:39.2383618Z 
2025-08-19T15:38:39.2383713Z # price\_importer.common
2025-08-19T15:38:39.2383845Z 
2025-08-19T15:38:39.2383937Z <a id="price_importer.common.base"></a>
2025-08-19T15:38:39.2384114Z 
2025-08-19T15:38:39.2384199Z # price\_importer.common.base
2025-08-19T15:38:39.2384479Z 
2025-08-19T15:38:39.2384585Z <a id="price_importer.tests.conftest"></a>
2025-08-19T15:38:39.2384780Z 
2025-08-19T15:38:39.2384867Z # price\_importer.tests.conftest
2025-08-19T15:38:39.2385013Z 
2025-08-19T15:38:39.2385128Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T15:38:39.2385300Z 
2025-08-19T15:38:39.2385390Z # price\_importer.tests.test\_reader
2025-08-19T15:38:39.2385558Z 
2025-08-19T15:38:39.2385659Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T15:38:39.2385834Z 
2025-08-19T15:38:39.2385925Z # price\_importer.tests.test\_imports
2025-08-19T15:38:39.2386098Z 
2025-08-19T15:38:39.2386198Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T15:38:39.2386373Z 
2025-08-19T15:38:39.2386477Z # price\_importer.tests.test\_smoke
2025-08-19T15:38:39.2386634Z 
2025-08-19T15:38:39.2386746Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T15:38:39.2386982Z 
2025-08-19T15:38:39.2387077Z # price\_importer.tests.test\_normaliser
2025-08-19T15:38:39.2387242Z 
2025-08-19T15:38:39.2387333Z <a id="price_importer.tests"></a>
2025-08-19T15:38:39.2387498Z 
2025-08-19T15:38:39.2387579Z # price\_importer.tests
2025-08-19T15:38:39.2387703Z 
2025-08-19T15:38:39.2387807Z <a id="price_importer.reader"></a>
2025-08-19T15:38:39.2387954Z 
2025-08-19T15:38:39.2388031Z # price\_importer.reader
2025-08-19T15:38:39.2388161Z 
2025-08-19T15:38:39.2388254Z <a id="price_importer.repository"></a>
2025-08-19T15:38:39.2388413Z 
2025-08-19T15:38:39.2388496Z # price\_importer.repository
2025-08-19T15:38:39.2388645Z 
2025-08-19T15:38:39.2388727Z <a id="price_importer.import"></a>
2025-08-19T15:38:39.2388871Z 
2025-08-19T15:38:39.2388954Z # price\_importer.import
2025-08-19T15:38:39.2389076Z 
2025-08-19T15:38:39.2389149Z <a id="fees_h10"></a>
2025-08-19T15:38:39.2389270Z 
2025-08-19T15:38:39.2389334Z # fees\_h10
2025-08-19T15:38:39.2389427Z 
2025-08-19T15:38:39.2389502Z <a id="fees_h10.worker"></a>
2025-08-19T15:38:39.2389643Z 
2025-08-19T15:38:39.2389709Z # fees\_h10.worker
2025-08-19T15:38:39.2389820Z 
2025-08-19T15:38:39.2390054Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T15:38:39.2390225Z 
2025-08-19T15:38:39.2390303Z #### list\_active\_asins
2025-08-19T15:38:39.2390440Z 
2025-08-19T15:38:39.2390505Z ```python
2025-08-19T15:38:39.2390682Z def list_active_asins() -> list[str]
2025-08-19T15:38:39.2391005Z ```
2025-08-19T15:38:39.2391094Z 
2025-08-19T15:38:39.2391207Z Return known ASINs or an empty list if unavailable.
2025-08-19T15:38:39.2391408Z 
2025-08-19T15:38:39.2391494Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T15:38:39.2391651Z 
2025-08-19T15:38:39.2391746Z # fees\_h10.tests.test\_smoke
2025-08-19T15:38:39.2391884Z 
2025-08-19T15:38:39.2391966Z <a id="fees_h10.tests"></a>
2025-08-19T15:38:39.2392110Z 
2025-08-19T15:38:39.2392183Z # fees\_h10.tests
2025-08-19T15:38:39.2392293Z 
2025-08-19T15:38:39.2392376Z <a id="fees_h10.client"></a>
2025-08-19T15:38:39.2392523Z 
2025-08-19T15:38:39.2392594Z # fees\_h10.client
2025-08-19T15:38:39.2392701Z 
2025-08-19T15:38:39.2392804Z <a id="fees_h10.repository"></a>
2025-08-19T15:38:39.2392971Z 
2025-08-19T15:38:39.2393049Z # fees\_h10.repository
2025-08-19T15:38:39.2393184Z 
2025-08-19T15:38:39.2393257Z <a id="emailer"></a>
2025-08-19T15:38:39.2393371Z 
2025-08-19T15:38:39.2393435Z # emailer
2025-08-19T15:38:39.2393539Z 
2025-08-19T15:38:39.2393642Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T15:38:39.2393822Z 
2025-08-19T15:38:39.2393934Z # emailer.tests.test\_import\_emailer
2025-08-19T15:38:39.2394094Z 
2025-08-19T15:38:39.2394182Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T15:38:39.2394338Z 
2025-08-19T15:38:39.2394436Z # emailer.tests.test\_smoke
2025-08-19T15:38:39.2394574Z 
2025-08-19T15:38:39.2394653Z <a id="emailer.tests"></a>
2025-08-19T15:38:39.2394795Z 
2025-08-19T15:38:39.2394865Z # emailer.tests
2025-08-19T15:38:39.2394968Z 
2025-08-19T15:38:39.2395063Z <a id="emailer.generate_body"></a>
2025-08-19T15:38:39.2395215Z 
2025-08-19T15:38:39.2395295Z # emailer.generate\_body
2025-08-19T15:38:39.2395423Z 
2025-08-19T15:38:39.2395636Z <a id="llm_server"></a>
2025-08-19T15:38:39.2395765Z 
2025-08-19T15:38:39.2395833Z # llm\_server
2025-08-19T15:38:39.2395951Z 
2025-08-19T15:38:39.2396034Z <a id="llm_server.app"></a>
2025-08-19T15:38:39.2396179Z 
2025-08-19T15:38:39.2396249Z # llm\_server.app
2025-08-19T15:38:39.2396367Z 
