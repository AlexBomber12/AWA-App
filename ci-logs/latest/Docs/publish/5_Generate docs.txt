2025-08-18T21:53:12.3692564Z ##[group]Run pydoc-markdown
2025-08-18T21:53:12.3692886Z [36;1mpydoc-markdown[0m
2025-08-18T21:53:12.3735887Z shell: /usr/bin/bash -e {0}
2025-08-18T21:53:12.3736125Z env:
2025-08-18T21:53:12.3736361Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:53:12.3736764Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T21:53:12.3737149Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:53:12.3737480Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:53:12.3737820Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T21:53:12.3738180Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T21:53:12.3738469Z ##[endgroup]
2025-08-18T21:53:12.7122159Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T21:53:12.7122836Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T21:53:12.7123311Z In "pydoc-markdown.yml"
2025-08-18T21:53:12.7123734Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T21:53:12.7124435Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T21:53:12.7125211Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T21:53:12.7125755Z 
2025-08-18T21:53:13.0199682Z <a id="__init__"></a>
2025-08-18T21:53:13.0200014Z 
2025-08-18T21:53:13.0200174Z # \_\_init\_\_
2025-08-18T21:53:13.0200414Z 
2025-08-18T21:53:13.0200555Z <a id="api"></a>
2025-08-18T21:53:13.0200981Z 
2025-08-18T21:53:13.0201119Z # api
2025-08-18T21:53:13.0201300Z 
2025-08-18T21:53:13.0201461Z <a id="api.errors"></a>
2025-08-18T21:53:13.0201746Z 
2025-08-18T21:53:13.0201885Z # api.errors
2025-08-18T21:53:13.0202089Z 
2025-08-18T21:53:13.0202265Z <a id="api.sentry_config"></a>
2025-08-18T21:53:13.0202584Z 
2025-08-18T21:53:13.0202740Z # api.sentry\_config
2025-08-18T21:53:13.0202987Z 
2025-08-18T21:53:13.0203194Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T21:53:13.0203563Z 
2025-08-18T21:53:13.0203732Z # api.tests.test\_sentry\_scrub
2025-08-18T21:53:13.0204082Z 
2025-08-18T21:53:13.0204280Z <a id="api.tests.test_errors_json"></a>
2025-08-18T21:53:13.0204532Z 
2025-08-18T21:53:13.0204638Z # api.tests.test\_errors\_json
2025-08-18T21:53:13.0204828Z 
2025-08-18T21:53:13.0204930Z <a id="api.tests.test_llm"></a>
2025-08-18T21:53:13.0205109Z 
2025-08-18T21:53:13.0205203Z # api.tests.test\_llm
2025-08-18T21:53:13.0205352Z 
2025-08-18T21:53:13.0205465Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T21:53:13.0205688Z 
2025-08-18T21:53:13.0205792Z # api.tests.test\_sentry\_event
2025-08-18T21:53:13.0205978Z 
2025-08-18T21:53:13.0206138Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T21:53:13.0206413Z 
2025-08-18T21:53:13.0206584Z ## DummyTransport Objects
2025-08-18T21:53:13.0206747Z 
2025-08-18T21:53:13.0206838Z ```python
2025-08-18T21:53:13.0207050Z class DummyTransport()
2025-08-18T21:53:13.0207286Z ```
2025-08-18T21:53:13.0207390Z 
2025-08-18T21:53:13.0207614Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T21:53:13.0208230Z 
2025-08-18T21:53:13.0208323Z #### capture\_envelope
2025-08-18T21:53:13.0208470Z 
2025-08-18T21:53:13.0208554Z ```python
2025-08-18T21:53:13.0208771Z def capture_envelope(envelope)
2025-08-18T21:53:13.0209027Z ```
2025-08-18T21:53:13.0209127Z 
2025-08-18T21:53:13.0209286Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T21:53:13.0209561Z 
2025-08-18T21:53:13.0209669Z <a id="api.tests.test_cors"></a>
2025-08-18T21:53:13.0209862Z 
2025-08-18T21:53:13.0209964Z # api.tests.test\_cors
2025-08-18T21:53:13.0210136Z 
2025-08-18T21:53:13.0210262Z <a id="api.tests.test_imports"></a>
2025-08-18T21:53:13.0210462Z 
2025-08-18T21:53:13.0210553Z # api.tests.test\_imports
2025-08-18T21:53:13.0210869Z 
2025-08-18T21:53:13.0210992Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T21:53:13.0211183Z 
2025-08-18T21:53:13.0211271Z # api.tests.test\_rate\_limit
2025-08-18T21:53:13.0211429Z 
2025-08-18T21:53:13.0211535Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T21:53:13.0211965Z 
2025-08-18T21:53:13.0212035Z #### app
2025-08-18T21:53:13.0212135Z 
2025-08-18T21:53:13.0212212Z noqa: E402
2025-08-18T21:53:13.0212312Z 
2025-08-18T21:53:13.0212409Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T21:53:13.0212591Z 
2025-08-18T21:53:13.0212688Z # api.tests.test\_entrypoint
2025-08-18T21:53:13.0212845Z 
2025-08-18T21:53:13.0212938Z <a id="api.tests.test_health"></a>
2025-08-18T21:53:13.0213120Z 
2025-08-18T21:53:13.0213204Z # api.tests.test\_health
2025-08-18T21:53:13.0213345Z 
2025-08-18T21:53:13.0213440Z <a id="api.logging_config"></a>
2025-08-18T21:53:13.0213600Z 
2025-08-18T21:53:13.0213679Z # api.logging\_config
2025-08-18T21:53:13.0213810Z 
2025-08-18T21:53:13.0213903Z <a id="api.migrations.env"></a>
2025-08-18T21:53:13.0214065Z 
2025-08-18T21:53:13.0214149Z # api.migrations.env
2025-08-18T21:53:13.0214284Z 
2025-08-18T21:53:13.0214414Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T21:53:13.0214645Z 
2025-08-18T21:53:13.0214762Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T21:53:13.0214989Z 
2025-08-18T21:53:13.0215110Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T21:53:13.0215325Z 
2025-08-18T21:53:13.0215436Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T21:53:13.0215633Z 
2025-08-18T21:53:13.0215802Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T21:53:13.0216076Z 
2025-08-18T21:53:13.0216225Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T21:53:13.0216470Z 
2025-08-18T21:53:13.0216611Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T21:53:13.0216840Z 
2025-08-18T21:53:13.0216960Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T21:53:13.0217168Z 
2025-08-18T21:53:13.0217305Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T21:53:13.0217531Z 
2025-08-18T21:53:13.0217643Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T21:53:13.0217858Z 
2025-08-18T21:53:13.0217994Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T21:53:13.0218235Z 
2025-08-18T21:53:13.0218362Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T21:53:13.0218579Z 
2025-08-18T21:53:13.0218708Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T21:53:13.0218941Z 
2025-08-18T21:53:13.0219057Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T21:53:13.0219269Z 
2025-08-18T21:53:13.0219403Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T21:53:13.0219640Z 
2025-08-18T21:53:13.0219754Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T21:53:13.0219963Z 
2025-08-18T21:53:13.0220120Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T21:53:13.0220369Z 
2025-08-18T21:53:13.0220500Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T21:53:13.0220912Z 
2025-08-18T21:53:13.0221062Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T21:53:13.0221279Z 
2025-08-18T21:53:13.0221384Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T21:53:13.0221714Z 
2025-08-18T21:53:13.0221852Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T21:53:13.0222092Z 
2025-08-18T21:53:13.0222211Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T21:53:13.0222468Z 
2025-08-18T21:53:13.0222579Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T21:53:13.0222769Z 
2025-08-18T21:53:13.0222862Z # api.migrations.versions.0001\_baseline
2025-08-18T21:53:13.0223037Z 
2025-08-18T21:53:13.0223124Z <a id="api.migrations.versions"></a>
2025-08-18T21:53:13.0223282Z 
2025-08-18T21:53:13.0223361Z # api.migrations.versions
2025-08-18T21:53:13.0223494Z 
2025-08-18T21:53:13.0223571Z <a id="api.migrations"></a>
2025-08-18T21:53:13.0223703Z 
2025-08-18T21:53:13.0223776Z # api.migrations
2025-08-18T21:53:13.0223884Z 
2025-08-18T21:53:13.0223952Z <a id="api.db"></a>
2025-08-18T21:53:13.0224059Z 
2025-08-18T21:53:13.0224128Z # api.db
2025-08-18T21:53:13.0224214Z 
2025-08-18T21:53:13.0224293Z <a id="api.routes.stats"></a>
2025-08-18T21:53:13.0224587Z 
2025-08-18T21:53:13.0224655Z # api.routes.stats
2025-08-18T21:53:13.0224764Z 
2025-08-18T21:53:13.0224855Z <a id="api.routes.stats.kpi"></a>
2025-08-18T21:53:13.0225009Z 
2025-08-18T21:53:13.0225071Z #### kpi
2025-08-18T21:53:13.0225158Z 
2025-08-18T21:53:13.0225227Z ```python
2025-08-18T21:53:13.0225395Z @router.get("/stats/kpi")
2025-08-18T21:53:13.0225643Z def kpi() -> List[Dict[str, int]]
2025-08-18T21:53:13.0225846Z ```
2025-08-18T21:53:13.0225936Z 
2025-08-18T21:53:13.0226014Z Return KPI metrics (mock).
2025-08-18T21:53:13.0226146Z 
2025-08-18T21:53:13.0226244Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T21:53:13.0226429Z 
2025-08-18T21:53:13.0226497Z #### roi\_by\_vendor
2025-08-18T21:53:13.0226608Z 
2025-08-18T21:53:13.0226677Z ```python
2025-08-18T21:53:13.0226848Z @router.get("/stats/roi_by_vendor")
2025-08-18T21:53:13.0227097Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T21:53:13.0227319Z ```
2025-08-18T21:53:13.0227404Z 
2025-08-18T21:53:13.0227496Z Return ROI percent by vendor.
2025-08-18T21:53:13.0227635Z 
2025-08-18T21:53:13.0227725Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T21:53:13.0227895Z 
2025-08-18T21:53:13.0227959Z #### roi\_trend
2025-08-18T21:53:13.0228059Z 
2025-08-18T21:53:13.0228124Z ```python
2025-08-18T21:53:13.0228287Z @router.get("/stats/roi_trend")
2025-08-18T21:53:13.0228529Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T21:53:13.0228765Z ```
2025-08-18T21:53:13.0228854Z 
2025-08-18T21:53:13.0228928Z Return 30-day ROI trend.
2025-08-18T21:53:13.0229058Z 
2025-08-18T21:53:13.0229138Z <a id="api.routes.roi"></a>
2025-08-18T21:53:13.0229276Z 
2025-08-18T21:53:13.0229345Z # api.routes.roi
2025-08-18T21:53:13.0229452Z 
2025-08-18T21:53:13.0229539Z <a id="api.routes.health"></a>
2025-08-18T21:53:13.0229692Z 
2025-08-18T21:53:13.0229765Z # api.routes.health
2025-08-18T21:53:13.0229885Z 
2025-08-18T21:53:13.0229977Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T21:53:13.0230148Z 
2025-08-18T21:53:13.0230223Z #### MAX\_SKEW
2025-08-18T21:53:13.0230328Z 
2025-08-18T21:53:13.0230389Z seconds
2025-08-18T21:53:13.0230472Z 
2025-08-18T21:53:13.0230570Z <a id="api.routes.health.health"></a>
2025-08-18T21:53:13.0230851Z 
2025-08-18T21:53:13.0230914Z #### health
2025-08-18T21:53:13.0231010Z 
2025-08-18T21:53:13.0231071Z ```python
2025-08-18T21:53:13.0231263Z @router.get("/health", include_in_schema=False)
2025-08-18T21:53:13.0231655Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T21:53:13.0232003Z ```
2025-08-18T21:53:13.0232091Z 
2025-08-18T21:53:13.0232208Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T21:53:13.0232407Z 
2025-08-18T21:53:13.0232503Z <a id="api.routes.repository"></a>
2025-08-18T21:53:13.0232660Z 
2025-08-18T21:53:13.0232738Z # api.routes.repository
2025-08-18T21:53:13.0232871Z 
2025-08-18T21:53:13.0232943Z <a id="api.routes"></a>
2025-08-18T21:53:13.0233060Z 
2025-08-18T21:53:13.0233124Z # api.routes
2025-08-18T21:53:13.0233228Z 
2025-08-18T21:53:13.0233444Z <a id="api.models.fee"></a>
2025-08-18T21:53:13.0233588Z 
2025-08-18T21:53:13.0233660Z # api.models.fee
2025-08-18T21:53:13.0233767Z 
2025-08-18T21:53:13.0233838Z <a id="api.models"></a>
2025-08-18T21:53:13.0233956Z 
2025-08-18T21:53:13.0234020Z # api.models
2025-08-18T21:53:13.0234112Z 
2025-08-18T21:53:13.0234192Z <a id="api.roi_repository"></a>
2025-08-18T21:53:13.0234345Z 
2025-08-18T21:53:13.0234415Z # api.roi\_repository
2025-08-18T21:53:13.0234530Z 
2025-08-18T21:53:13.0234603Z <a id="api.main"></a>
2025-08-18T21:53:13.0234713Z 
2025-08-18T21:53:13.0234775Z # api.main
2025-08-18T21:53:13.0234865Z 
2025-08-18T21:53:13.0234949Z <a id="api.main.ready"></a>
2025-08-18T21:53:13.0235081Z 
2025-08-18T21:53:13.0235141Z #### ready
2025-08-18T21:53:13.0235235Z 
2025-08-18T21:53:13.0235296Z ```python
2025-08-18T21:53:13.0235560Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T21:53:13.0236002Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T21:53:13.0236479Z                                                                       str]
2025-08-18T21:53:13.0236704Z ```
2025-08-18T21:53:13.0236788Z 
2025-08-18T21:53:13.0236889Z Return 200 only when migrations are at head.
2025-08-18T21:53:13.0237062Z 
2025-08-18T21:53:13.0237135Z <a id="api.config"></a>
2025-08-18T21:53:13.0237256Z 
2025-08-18T21:53:13.0237319Z # api.config
2025-08-18T21:53:13.0237413Z 
2025-08-18T21:53:13.0237482Z <a id="etl"></a>
2025-08-18T21:53:13.0237584Z 
2025-08-18T21:53:13.0237643Z # etl
2025-08-18T21:53:13.0237728Z 
2025-08-18T21:53:13.0237815Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T21:53:13.0237962Z 
2025-08-18T21:53:13.0238035Z # etl.fba\_fee\_ingestor
2025-08-18T21:53:13.0238169Z 
2025-08-18T21:53:13.0238248Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T21:53:13.0238390Z 
2025-08-18T21:53:13.0238461Z # etl.sp\_fees\_ingestor
2025-08-18T21:53:13.0238586Z 
2025-08-18T21:53:13.0238664Z <a id="etl.keepa_ingestor"></a>
2025-08-18T21:53:13.0238808Z 
2025-08-18T21:53:13.0238894Z # etl.keepa\_ingestor
2025-08-18T21:53:13.0239009Z 
2025-08-18T21:53:13.0239080Z <a id="etl.db"></a>
2025-08-18T21:53:13.0239183Z 
2025-08-18T21:53:13.0239243Z # etl.db
2025-08-18T21:53:13.0239333Z 
2025-08-18T21:53:13.0239413Z <a id="etl.dialects.schemas"></a>
2025-08-18T21:53:13.0239558Z 
2025-08-18T21:53:13.0239630Z # etl.dialects.schemas
2025-08-18T21:53:13.0239753Z 
2025-08-18T21:53:13.0239859Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T21:53:13.0240048Z 
2025-08-18T21:53:13.0240144Z # etl.dialects.amazon\_reimbursements
2025-08-18T21:53:13.0240306Z 
2025-08-18T21:53:13.0240402Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T21:53:13.0240578Z 
2025-08-18T21:53:13.0240661Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T21:53:13.0241034Z 
2025-08-18T21:53:13.0241129Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T21:53:13.0241303Z 
2025-08-18T21:53:13.0241384Z # etl.dialects.amazon\_returns
2025-08-18T21:53:13.0241525Z 
2025-08-18T21:53:13.0241635Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T21:53:13.0241804Z 
2025-08-18T21:53:13.0241886Z # etl.dialects.amazon\_fee\_preview
2025-08-18T21:53:13.0242044Z 
2025-08-18T21:53:13.0242149Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T21:53:13.0242334Z 
2025-08-18T21:53:13.0242424Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T21:53:13.0242595Z 
2025-08-18T21:53:13.0242689Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T21:53:13.0242860Z 
2025-08-18T21:53:13.0242950Z # etl.dialects.amazon\_settlements
2025-08-18T21:53:13.0243103Z 
2025-08-18T21:53:13.0243178Z <a id="etl.dialects"></a>
2025-08-18T21:53:13.0243309Z 
2025-08-18T21:53:13.0243373Z # etl.dialects
2025-08-18T21:53:13.0243471Z 
2025-08-18T21:53:13.0243538Z <a id="ingest"></a>
2025-08-18T21:53:13.0243650Z 
2025-08-18T21:53:13.0243709Z # ingest
2025-08-18T21:53:13.0243795Z 
2025-08-18T21:53:13.0243882Z <a id="ingest.maintenance"></a>
2025-08-18T21:53:13.0244023Z 
2025-08-18T21:53:13.0244094Z # ingest.maintenance
2025-08-18T21:53:13.0244343Z 
2025-08-18T21:53:13.0244425Z <a id="ingest.copy_loader"></a>
2025-08-18T21:53:13.0244567Z 
2025-08-18T21:53:13.0244639Z # ingest.copy\_loader
2025-08-18T21:53:13.0244762Z 
2025-08-18T21:53:13.0244868Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T21:53:13.0245057Z 
2025-08-18T21:53:13.0245141Z #### copy\_df\_via\_temp
2025-08-18T21:53:13.0245265Z 
2025-08-18T21:53:13.0245328Z ```python
2025-08-18T21:53:13.0245504Z def copy_df_via_temp(engine: Engine,
2025-08-18T21:53:13.0245744Z                      df: pd.DataFrame,
2025-08-18T21:53:13.0245984Z                      target_table: str,
2025-08-18T21:53:13.0246204Z                      *,
2025-08-18T21:53:13.0246419Z                      target_schema: Optional[str] = None,
2025-08-18T21:53:13.0246678Z                      columns: Sequence[str],
2025-08-18T21:53:13.0246949Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T21:53:13.0247239Z                      analyze_after: bool = False,
2025-08-18T21:53:13.0247629Z                      connection: Any | None = None) -> int
2025-08-18T21:53:13.0247870Z ```
2025-08-18T21:53:13.0247954Z 
2025-08-18T21:53:13.0248112Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T21:53:13.0248354Z 
2025-08-18T21:53:13.0248441Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T21:53:13.0248600Z 
2025-08-18T21:53:13.0248688Z # ingest.tests.test\_smoke
2025-08-18T21:53:13.0248822Z 
2025-08-18T21:53:13.0248898Z <a id="ingest.tests"></a>
2025-08-18T21:53:13.0249026Z 
2025-08-18T21:53:13.0249099Z # ingest.tests
2025-08-18T21:53:13.0249203Z 
2025-08-18T21:53:13.0249292Z <a id="ingest.upload_router"></a>
2025-08-18T21:53:13.0249445Z 
2025-08-18T21:53:13.0249519Z # ingest.upload\_router
2025-08-18T21:53:13.0249639Z 
2025-08-18T21:53:13.0249718Z <a id="ingest.email_watcher"></a>
2025-08-18T21:53:13.0249874Z 
2025-08-18T21:53:13.0249946Z # ingest.email\_watcher
2025-08-18T21:53:13.0250066Z 
2025-08-18T21:53:13.0250161Z <a id="ingest.email_watcher.main"></a>
2025-08-18T21:53:13.0250337Z 
2025-08-18T21:53:13.0250397Z #### main
2025-08-18T21:53:13.0250498Z 
2025-08-18T21:53:13.0250562Z ```python
2025-08-18T21:53:13.0250830Z def main() -> dict[str, str]
2025-08-18T21:53:13.0251026Z ```
2025-08-18T21:53:13.0251108Z 
2025-08-18T21:53:13.0251253Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T21:53:13.0251489Z 
2025-08-18T21:53:13.0251627Z Returns {"status": "success"} when processing completes.
2025-08-18T21:53:13.0251835Z 
2025-08-18T21:53:13.0251910Z <a id="ingest.tasks"></a>
2025-08-18T21:53:13.0252043Z 
2025-08-18T21:53:13.0252109Z # ingest.tasks
2025-08-18T21:53:13.0252209Z 
2025-08-18T21:53:13.0252306Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T21:53:13.0252486Z 
2025-08-18T21:53:13.0252555Z #### task\_import\_file
2025-08-18T21:53:13.0252675Z 
2025-08-18T21:53:13.0252744Z ```python
2025-08-18T21:53:13.0252950Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T21:53:13.0253235Z def task_import_file(self: Any,
2025-08-18T21:53:13.0253453Z                      uri: str,
2025-08-18T21:53:13.0253676Z                      report_type: Optional[str] = None,
2025-08-18T21:53:13.0253943Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T21:53:13.0254186Z ```
2025-08-18T21:53:13.0254269Z 
2025-08-18T21:53:13.0254407Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T21:53:13.0254619Z 
2025-08-18T21:53:13.0254700Z <a id="ingest.celery_app"></a>
2025-08-18T21:53:13.0254839Z 
2025-08-18T21:53:13.0254917Z # ingest.celery\_app
2025-08-18T21:53:13.0255033Z 
2025-08-18T21:53:13.0255115Z <a id="ingest.ingest_router"></a>
2025-08-18T21:53:13.0255269Z 
2025-08-18T21:53:13.0255343Z # ingest.ingest\_router
2025-08-18T21:53:13.0255463Z 
2025-08-18T21:53:13.0255543Z <a id="logistics_etl"></a>
2025-08-18T21:53:13.0255675Z 
2025-08-18T21:53:13.0255742Z # logistics\_etl
2025-08-18T21:53:13.0255848Z 
2025-08-18T21:53:13.0255930Z Daily logistics ETL job.
2025-08-18T21:53:13.0256058Z 
2025-08-18T21:53:13.0256260Z <a id="logistics_etl.__main__"></a>
2025-08-18T21:53:13.0256424Z 
2025-08-18T21:53:13.0256500Z # logistics\_etl.\_\_main\_\_
2025-08-18T21:53:13.0256640Z 
2025-08-18T21:53:13.0256720Z <a id="logistics_etl.dsn"></a>
2025-08-18T21:53:13.0256868Z 
2025-08-18T21:53:13.0256940Z # logistics\_etl.dsn
2025-08-18T21:53:13.0257054Z 
2025-08-18T21:53:13.0257183Z Local DSN builder to avoid cross-service dependency.
2025-08-18T21:53:13.0257388Z 
2025-08-18T21:53:13.0257479Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T21:53:13.0257656Z 
2025-08-18T21:53:13.0257720Z #### build\_dsn
2025-08-18T21:53:13.0257822Z 
2025-08-18T21:53:13.0257885Z ```python
2025-08-18T21:53:13.0258061Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:53:13.0258289Z ```
2025-08-18T21:53:13.0258371Z 
2025-08-18T21:53:13.0258513Z Return a Postgres DSN assembled from environment variables.
2025-08-18T21:53:13.0258737Z 
2025-08-18T21:53:13.0258890Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T21:53:13.0259402Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T21:53:13.0259753Z error when any required variable is missing.
2025-08-18T21:53:13.0259930Z 
2025-08-18T21:53:13.0260022Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T21:53:13.0260202Z 
2025-08-18T21:53:13.0260284Z # logistics\_etl.tests.conftest
2025-08-18T21:53:13.0260427Z 
2025-08-18T21:53:13.0260537Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T21:53:13.0260895Z 
2025-08-18T21:53:13.0261006Z # logistics\_etl.tests.test\_repository
2025-08-18T21:53:13.0261177Z 
2025-08-18T21:53:13.0261268Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T21:53:13.0261438Z 
2025-08-18T21:53:13.0261528Z # logistics\_etl.tests.test\_cron
2025-08-18T21:53:13.0261676Z 
2025-08-18T21:53:13.0261771Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T21:53:13.0261945Z 
2025-08-18T21:53:13.0262036Z # logistics\_etl.tests.test\_imports
2025-08-18T21:53:13.0262195Z 
2025-08-18T21:53:13.0262293Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T21:53:13.0262475Z 
2025-08-18T21:53:13.0262558Z # logistics\_etl.tests.test\_smoke
2025-08-18T21:53:13.0262708Z 
2025-08-18T21:53:13.0262805Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T21:53:13.0262974Z 
2025-08-18T21:53:13.0263054Z # logistics\_etl.tests.test\_client
2025-08-18T21:53:13.0263207Z 
2025-08-18T21:53:13.0263293Z <a id="logistics_etl.tests"></a>
2025-08-18T21:53:13.0263437Z 
2025-08-18T21:53:13.0263507Z # logistics\_etl.tests
2025-08-18T21:53:13.0263630Z 
2025-08-18T21:53:13.0263707Z <a id="logistics_etl.flow"></a>
2025-08-18T21:53:13.0263847Z 
2025-08-18T21:53:13.0263916Z # logistics\_etl.flow
2025-08-18T21:53:13.0264035Z 
2025-08-18T21:53:13.0264125Z <a id="logistics_etl.client"></a>
2025-08-18T21:53:13.0264272Z 
2025-08-18T21:53:13.0264351Z # logistics\_etl.client
2025-08-18T21:53:13.0264470Z 
2025-08-18T21:53:13.0264546Z <a id="logistics_etl.cron"></a>
2025-08-18T21:53:13.0264687Z 
2025-08-18T21:53:13.0264755Z # logistics\_etl.cron
2025-08-18T21:53:13.0264878Z 
2025-08-18T21:53:13.0264954Z <a id="logistics_etl.db"></a>
2025-08-18T21:53:13.0265098Z 
2025-08-18T21:53:13.0299948Z # logistics\_etl.db
2025-08-18T21:53:13.0300207Z 
2025-08-18T21:53:13.0300410Z <a id="logistics_etl.repository"></a>
2025-08-18T21:53:13.0300987Z 
2025-08-18T21:53:13.0301167Z # logistics\_etl.repository
2025-08-18T21:53:13.0301479Z 
2025-08-18T21:53:13.0301636Z <a id="alert_bot"></a>
2025-08-18T21:53:13.0301884Z 
2025-08-18T21:53:13.0302021Z # alert\_bot
2025-08-18T21:53:13.0302224Z 
2025-08-18T21:53:13.0302407Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T21:53:13.0302763Z 
2025-08-18T21:53:13.0302938Z # alert\_bot.tests.test\_smoke
2025-08-18T21:53:13.0303233Z 
2025-08-18T21:53:13.0303394Z <a id="alert_bot.tests"></a>
2025-08-18T21:53:13.0303689Z 
2025-08-18T21:53:13.0303830Z # alert\_bot.tests
2025-08-18T21:53:13.0304054Z 
2025-08-18T21:53:13.0304222Z <a id="alert_bot.alert_bot"></a>
2025-08-18T21:53:13.0304541Z 
2025-08-18T21:53:13.0304704Z # alert\_bot.alert\_bot
2025-08-18T21:53:13.0305220Z 
2025-08-18T21:53:13.0305390Z <a id="alert_bot.rules"></a>
2025-08-18T21:53:13.0305681Z 
2025-08-18T21:53:13.0305924Z # alert\_bot.rules
2025-08-18T21:53:13.0306156Z 
2025-08-18T21:53:13.0306293Z <a id="common"></a>
2025-08-18T21:53:13.0306520Z 
2025-08-18T21:53:13.0306649Z # common
2025-08-18T21:53:13.0306841Z 
2025-08-18T21:53:13.0306990Z <a id="common.dsn"></a>
2025-08-18T21:53:13.0307231Z 
2025-08-18T21:53:13.0307319Z # common.dsn
2025-08-18T21:53:13.0307441Z 
2025-08-18T21:53:13.0307545Z <a id="common.dsn.build_dsn"></a>
2025-08-18T21:53:13.0307739Z 
2025-08-18T21:53:13.0307818Z #### build\_dsn
2025-08-18T21:53:13.0307949Z 
2025-08-18T21:53:13.0308028Z ```python
2025-08-18T21:53:13.0308248Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:53:13.0308528Z ```
2025-08-18T21:53:13.0308637Z 
2025-08-18T21:53:13.0308792Z Return a Postgres DSN, validating required variables.
2025-08-18T21:53:13.0309044Z 
2025-08-18T21:53:13.0309280Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T21:53:13.0310001Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T21:53:13.0310527Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T21:53:13.0311077Z missing.
2025-08-18T21:53:13.0311176Z 
2025-08-18T21:53:13.0311260Z <a id="common.models_vendor"></a>
2025-08-18T21:53:13.0311411Z 
2025-08-18T21:53:13.0311489Z # common.models\_vendor
2025-08-18T21:53:13.0311608Z 
2025-08-18T21:53:13.0311697Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T21:53:13.0311873Z 
2025-08-18T21:53:13.0311939Z ## Vendor Objects
2025-08-18T21:53:13.0312044Z 
2025-08-18T21:53:13.0312107Z ```python
2025-08-18T21:53:13.0312264Z class Vendor(Base)
2025-08-18T21:53:13.0312425Z ```
2025-08-18T21:53:13.0312510Z 
2025-08-18T21:53:13.0312588Z Vendor of inventory items.
2025-08-18T21:53:13.0312721Z 
2025-08-18T21:53:13.0312829Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T21:53:13.0313016Z 
2025-08-18T21:53:13.0313093Z ## VendorPrice Objects
2025-08-18T21:53:13.0313215Z 
2025-08-18T21:53:13.0313280Z ```python
2025-08-18T21:53:13.0313437Z class VendorPrice(Base)
2025-08-18T21:53:13.0313617Z ```
2025-08-18T21:53:13.0313696Z 
2025-08-18T21:53:13.0313798Z Association table linking vendors to pricing.
2025-08-18T21:53:13.0313987Z 
2025-08-18T21:53:13.0314061Z <a id="common.db_url"></a>
2025-08-18T21:53:13.0314185Z 
2025-08-18T21:53:13.0314258Z # common.db\_url
2025-08-18T21:53:13.0314364Z 
2025-08-18T21:53:13.0314446Z <a id="common.db_url.build_url"></a>
2025-08-18T21:53:13.0314609Z 
2025-08-18T21:53:13.0314673Z #### build\_url
2025-08-18T21:53:13.0314773Z 
2025-08-18T21:53:13.0314834Z ```python
2025-08-18T21:53:13.0315010Z def build_url(async_: bool = True) -> str
2025-08-18T21:53:13.0315233Z ```
2025-08-18T21:53:13.0315311Z 
2025-08-18T21:53:13.0315405Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:53:13.0315578Z 
2025-08-18T21:53:13.0315661Z <a id="common.keepa"></a>
2025-08-18T21:53:13.0315799Z 
2025-08-18T21:53:13.0315866Z # common.keepa
2025-08-18T21:53:13.0315971Z 
2025-08-18T21:53:13.0316043Z <a id="common.llm"></a>
2025-08-18T21:53:13.0316160Z 
2025-08-18T21:53:13.0316222Z # common.llm
2025-08-18T21:53:13.0316325Z 
2025-08-18T21:53:13.0316404Z <a id="common.settings"></a>
2025-08-18T21:53:13.0316539Z 
2025-08-18T21:53:13.0316613Z # common.settings
2025-08-18T21:53:13.0316721Z 
2025-08-18T21:53:13.0316791Z <a id="common.db"></a>
2025-08-18T21:53:13.0316911Z 
2025-08-18T21:53:13.0316974Z # common.db
2025-08-18T21:53:13.0317064Z 
2025-08-18T21:53:13.0317156Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T21:53:13.0317334Z 
2025-08-18T21:53:13.0317409Z #### build\_sqlalchemy\_url
2025-08-18T21:53:13.0317540Z 
2025-08-18T21:53:13.0317611Z ```python
2025-08-18T21:53:13.0317778Z def build_sqlalchemy_url() -> str
2025-08-18T21:53:13.0317992Z ```
2025-08-18T21:53:13.0318074Z 
2025-08-18T21:53:13.0318167Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:53:13.0318344Z 
2025-08-18T21:53:13.0318561Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T21:53:13.0318728Z 
2025-08-18T21:53:13.0318802Z #### build\_asyncpg\_dsn
2025-08-18T21:53:13.0318929Z 
2025-08-18T21:53:13.0318991Z ```python
2025-08-18T21:53:13.0319162Z def build_asyncpg_dsn() -> str
2025-08-18T21:53:13.0319353Z ```
2025-08-18T21:53:13.0319432Z 
2025-08-18T21:53:13.0319563Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:53:13.0319772Z 
2025-08-18T21:53:13.0319856Z <a id="common.db.refresh_mvs"></a>
2025-08-18T21:53:13.0320012Z 
2025-08-18T21:53:13.0320076Z #### refresh\_mvs
2025-08-18T21:53:13.0320180Z 
2025-08-18T21:53:13.0320241Z ```python
2025-08-18T21:53:13.0320437Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:53:13.0320841Z ```
2025-08-18T21:53:13.0320966Z 
2025-08-18T21:53:13.0321105Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:53:13.0321323Z 
2025-08-18T21:53:13.0321407Z <a id="common.config"></a>
2025-08-18T21:53:13.0321535Z 
2025-08-18T21:53:13.0321728Z # common.config
2025-08-18T21:53:13.0321843Z 
2025-08-18T21:53:13.0321917Z <a id="common.base"></a>
2025-08-18T21:53:13.0322043Z 
2025-08-18T21:53:13.0322111Z # common.base
2025-08-18T21:53:13.0322208Z 
2025-08-18T21:53:13.0322287Z <a id="common.base.Base"></a>
2025-08-18T21:53:13.0322427Z 
2025-08-18T21:53:13.0322497Z ## Base Objects
2025-08-18T21:53:13.0322597Z 
2025-08-18T21:53:13.0322660Z ```python
2025-08-18T21:53:13.0322827Z class Base(DeclarativeBase)
2025-08-18T21:53:13.0323017Z ```
2025-08-18T21:53:13.0323103Z 
2025-08-18T21:53:13.0323186Z Base class for SQLAlchemy models.
2025-08-18T21:53:13.0323335Z 
2025-08-18T21:53:13.0323410Z <a id="repricer"></a>
2025-08-18T21:53:13.0323527Z 
2025-08-18T21:53:13.0323588Z # repricer
2025-08-18T21:53:13.0323678Z 
2025-08-18T21:53:13.0323768Z <a id="repricer.app.schemas"></a>
2025-08-18T21:53:13.0323921Z 
2025-08-18T21:53:13.0324000Z # repricer.app.schemas
2025-08-18T21:53:13.0324127Z 
2025-08-18T21:53:13.0324208Z <a id="repricer.app.deps"></a>
2025-08-18T21:53:13.0324358Z 
2025-08-18T21:53:13.0324431Z # repricer.app.deps
2025-08-18T21:53:13.0324547Z 
2025-08-18T21:53:13.0324661Z Placeholder module for Keepa / SP-API clients.
2025-08-18T21:53:13.0324845Z 
2025-08-18T21:53:13.0324933Z <a id="repricer.app.logic"></a>
2025-08-18T21:53:13.0325076Z 
2025-08-18T21:53:13.0325152Z # repricer.app.logic
2025-08-18T21:53:13.0325273Z 
2025-08-18T21:53:13.0325371Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T21:53:13.0325549Z 
2025-08-18T21:53:13.0325614Z #### MIN\_MARGIN
2025-08-18T21:53:13.0325721Z 
2025-08-18T21:53:13.0325781Z 15 % ROI
2025-08-18T21:53:13.0325868Z 
2025-08-18T21:53:13.0325976Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T21:53:13.0326154Z 
2025-08-18T21:53:13.0326223Z #### compute\_price
2025-08-18T21:53:13.0326333Z 
2025-08-18T21:53:13.0326394Z ```python
2025-08-18T21:53:13.0326636Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T21:53:13.0326943Z ```
2025-08-18T21:53:13.0327026Z 
2025-08-18T21:53:13.0327150Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T21:53:13.0327430Z Replace with real competitive logic later.
2025-08-18T21:53:13.0327599Z 
2025-08-18T21:53:13.0327686Z <a id="repricer.app.main"></a>
2025-08-18T21:53:13.0327826Z 
2025-08-18T21:53:13.0327898Z # repricer.app.main
2025-08-18T21:53:13.0328012Z 
2025-08-18T21:53:13.0328088Z <a id="repricer.app"></a>
2025-08-18T21:53:13.0328216Z 
2025-08-18T21:53:13.0328283Z # repricer.app
2025-08-18T21:53:13.0328391Z 
2025-08-18T21:53:13.0328480Z <a id="repricer.tests.test_imports"></a>
2025-08-18T21:53:13.0328646Z 
2025-08-18T21:53:13.0328735Z # repricer.tests.test\_imports
2025-08-18T21:53:13.0328874Z 
2025-08-18T21:53:13.0328962Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T21:53:13.0329136Z 
2025-08-18T21:53:13.0329216Z # repricer.tests.test\_smoke
2025-08-18T21:53:13.0329354Z 
2025-08-18T21:53:13.0329430Z <a id="repricer.tests"></a>
2025-08-18T21:53:13.0329571Z 
2025-08-18T21:53:13.0329640Z # repricer.tests
2025-08-18T21:53:13.0329869Z 
2025-08-18T21:53:13.0329939Z <a id="db"></a>
2025-08-18T21:53:13.0330039Z 
2025-08-18T21:53:13.0330096Z # db
2025-08-18T21:53:13.0330179Z 
2025-08-18T21:53:13.0330302Z <a id="db.utils.views"></a>
2025-08-18T21:53:13.0330431Z 
2025-08-18T21:53:13.0330496Z # db.utils.views
2025-08-18T21:53:13.0330604Z 
2025-08-18T21:53:13.0330792Z <a id="db.utils.views.replace_view"></a>
2025-08-18T21:53:13.0330965Z 
2025-08-18T21:53:13.0331037Z #### replace\_view
2025-08-18T21:53:13.0331141Z 
2025-08-18T21:53:13.0331204Z ```python
2025-08-18T21:53:13.0331402Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T21:53:13.0331646Z ```
2025-08-18T21:53:13.0331738Z 
2025-08-18T21:53:13.0331828Z Drop and recreate a SQL view atomically.
2025-08-18T21:53:13.0331991Z 
2025-08-18T21:53:13.0332062Z <a id="db.utils"></a>
2025-08-18T21:53:13.0332181Z 
2025-08-18T21:53:13.0332243Z # db.utils
2025-08-18T21:53:13.0332333Z 
2025-08-18T21:53:13.0332416Z <a id="price_importer"></a>
2025-08-18T21:53:13.0332545Z 
2025-08-18T21:53:13.0332772Z # price\_importer
2025-08-18T21:53:13.0332878Z 
2025-08-18T21:53:13.0332985Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T21:53:13.0333168Z 
2025-08-18T21:53:13.0333255Z # price\_importer.services\_common.dsn
2025-08-18T21:53:13.0333424Z 
2025-08-18T21:53:13.0333549Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T21:53:13.0333758Z 
2025-08-18T21:53:13.0333825Z #### build\_dsn
2025-08-18T21:53:13.0333925Z 
2025-08-18T21:53:13.0333987Z ```python
2025-08-18T21:53:13.0334163Z def build_dsn(sync: bool = True) -> str
2025-08-18T21:53:13.0334380Z ```
2025-08-18T21:53:13.0334469Z 
2025-08-18T21:53:13.0334535Z Return safe DSN.
2025-08-18T21:53:13.0334639Z 
2025-08-18T21:53:13.0334965Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T21:53:13.0335176Z 
2025-08-18T21:53:13.0335302Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T21:53:13.0335513Z 
2025-08-18T21:53:13.0335628Z # price\_importer.services\_common.models\_vendor
2025-08-18T21:53:13.0335834Z 
2025-08-18T21:53:13.0335940Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T21:53:13.0336132Z 
2025-08-18T21:53:13.0336225Z # price\_importer.services\_common.db\_url
2025-08-18T21:53:13.0336397Z 
2025-08-18T21:53:13.0336529Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T21:53:13.0336751Z 
2025-08-18T21:53:13.0336816Z #### build\_url
2025-08-18T21:53:13.0336914Z 
2025-08-18T21:53:13.0336982Z ```python
2025-08-18T21:53:13.0337154Z def build_url(async_: bool = True) -> str
2025-08-18T21:53:13.0337382Z ```
2025-08-18T21:53:13.0337464Z 
2025-08-18T21:53:13.0337560Z Return Postgres DSN from env or PG_* parts.
2025-08-18T21:53:13.0337745Z 
2025-08-18T21:53:13.0337850Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T21:53:13.0338038Z 
2025-08-18T21:53:13.0338136Z # price\_importer.services\_common.keepa
2025-08-18T21:53:13.0338307Z 
2025-08-18T21:53:13.0338406Z <a id="price_importer.services_common.llm"></a>
2025-08-18T21:53:13.0338591Z 
2025-08-18T21:53:13.0338693Z # price\_importer.services\_common.llm
2025-08-18T21:53:13.0338858Z 
2025-08-18T21:53:13.0338971Z <a id="price_importer.services_common.settings"></a>
2025-08-18T21:53:13.0339173Z 
2025-08-18T21:53:13.0339267Z # price\_importer.services\_common.settings
2025-08-18T21:53:13.0339442Z 
2025-08-18T21:53:13.0339553Z <a id="price_importer.services_common.db"></a>
2025-08-18T21:53:13.0339730Z 
2025-08-18T21:53:13.0339817Z # price\_importer.services\_common.db
2025-08-18T21:53:13.0339977Z 
2025-08-18T21:53:13.0340140Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T21:53:13.0340381Z 
2025-08-18T21:53:13.0340457Z #### build\_sqlalchemy\_url
2025-08-18T21:53:13.0340594Z 
2025-08-18T21:53:13.0340655Z ```python
2025-08-18T21:53:13.0340929Z def build_sqlalchemy_url() -> str
2025-08-18T21:53:13.0341141Z ```
2025-08-18T21:53:13.0341223Z 
2025-08-18T21:53:13.0341324Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T21:53:13.0341497Z 
2025-08-18T21:53:13.0341768Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T21:53:13.0342007Z 
2025-08-18T21:53:13.0342080Z #### build\_asyncpg\_dsn
2025-08-18T21:53:13.0342207Z 
2025-08-18T21:53:13.0342268Z ```python
2025-08-18T21:53:13.0342438Z def build_asyncpg_dsn() -> str
2025-08-18T21:53:13.0342634Z ```
2025-08-18T21:53:13.0342714Z 
2025-08-18T21:53:13.0342837Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T21:53:13.0343045Z 
2025-08-18T21:53:13.0343176Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T21:53:13.0343385Z 
2025-08-18T21:53:13.0343449Z #### refresh\_mvs
2025-08-18T21:53:13.0343558Z 
2025-08-18T21:53:13.0343620Z ```python
2025-08-18T21:53:13.0343808Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T21:53:13.0344061Z ```
2025-08-18T21:53:13.0344140Z 
2025-08-18T21:53:13.0344280Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T21:53:13.0344497Z 
2025-08-18T21:53:13.0344590Z <a id="price_importer.services_common"></a>
2025-08-18T21:53:13.0344900Z 
2025-08-18T21:53:13.0344986Z # price\_importer.services\_common
2025-08-18T21:53:13.0345140Z 
2025-08-18T21:53:13.0345243Z <a id="price_importer.services_common.base"></a>
2025-08-18T21:53:13.0345432Z 
2025-08-18T21:53:13.0345520Z # price\_importer.services\_common.base
2025-08-18T21:53:13.0345684Z 
2025-08-18T21:53:13.0345776Z <a id="price_importer.normaliser"></a>
2025-08-18T21:53:13.0345939Z 
2025-08-18T21:53:13.0346019Z # price\_importer.normaliser
2025-08-18T21:53:13.0346163Z 
2025-08-18T21:53:13.0346267Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T21:53:13.0346450Z 
2025-08-18T21:53:13.0346538Z # price\_importer.common.models\_vendor
2025-08-18T21:53:13.0346706Z 
2025-08-18T21:53:13.0346795Z <a id="price_importer.common.db_url"></a>
2025-08-18T21:53:13.0346964Z 
2025-08-18T21:53:13.0347055Z # price\_importer.common.db\_url
2025-08-18T21:53:13.0347202Z 
2025-08-18T21:53:13.0347305Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T21:53:13.0347508Z 
2025-08-18T21:53:13.0347572Z #### make\_dsn
2025-08-18T21:53:13.0347670Z 
2025-08-18T21:53:13.0347731Z ```python
2025-08-18T21:53:13.0347904Z def make_dsn(async_: bool = False) -> str
2025-08-18T21:53:13.0348131Z ```
2025-08-18T21:53:13.0348217Z 
2025-08-18T21:53:13.0348335Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T21:53:13.0348535Z 
2025-08-18T21:53:13.0348647Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T21:53:13.0348836Z 
2025-08-18T21:53:13.0348899Z #### build\_url
2025-08-18T21:53:13.0349002Z 
2025-08-18T21:53:13.0349066Z ```python
2025-08-18T21:53:13.0349235Z def build_url(async_: bool = False) -> str
2025-08-18T21:53:13.0349465Z ```
2025-08-18T21:53:13.0349546Z 
2025-08-18T21:53:13.0349671Z Return Postgres DSN built from environment variables.
2025-08-18T21:53:13.0349873Z 
2025-08-18T21:53:13.0349957Z <a id="price_importer.common"></a>
2025-08-18T21:53:13.0350110Z 
2025-08-18T21:53:13.0350193Z # price\_importer.common
2025-08-18T21:53:13.0350320Z 
2025-08-18T21:53:13.0350418Z <a id="price_importer.common.base"></a>
2025-08-18T21:53:13.0350587Z 
2025-08-18T21:53:13.0350669Z # price\_importer.common.base
2025-08-18T21:53:13.0351021Z 
2025-08-18T21:53:13.0351132Z <a id="price_importer.tests.conftest"></a>
2025-08-18T21:53:13.0351317Z 
2025-08-18T21:53:13.0351404Z # price\_importer.tests.conftest
2025-08-18T21:53:13.0351573Z 
2025-08-18T21:53:13.0351679Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T21:53:13.0351859Z 
2025-08-18T21:53:13.0351947Z # price\_importer.tests.test\_reader
2025-08-18T21:53:13.0352111Z 
2025-08-18T21:53:13.0352212Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T21:53:13.0352390Z 
2025-08-18T21:53:13.0352482Z # price\_importer.tests.test\_imports
2025-08-18T21:53:13.0352646Z 
2025-08-18T21:53:13.0352740Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T21:53:13.0352910Z 
2025-08-18T21:53:13.0353001Z # price\_importer.tests.test\_smoke
2025-08-18T21:53:13.0353162Z 
2025-08-18T21:53:13.0353268Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T21:53:13.0353598Z 
2025-08-18T21:53:13.0353689Z # price\_importer.tests.test\_normaliser
2025-08-18T21:53:13.0353859Z 
2025-08-18T21:53:13.0353949Z <a id="price_importer.tests"></a>
2025-08-18T21:53:13.0354099Z 
2025-08-18T21:53:13.0354176Z # price\_importer.tests
2025-08-18T21:53:13.0354299Z 
2025-08-18T21:53:13.0354389Z <a id="price_importer.reader"></a>
2025-08-18T21:53:13.0354540Z 
2025-08-18T21:53:13.0354618Z # price\_importer.reader
2025-08-18T21:53:13.0354750Z 
2025-08-18T21:53:13.0354838Z <a id="price_importer.repository"></a>
2025-08-18T21:53:13.0355001Z 
2025-08-18T21:53:13.0355087Z # price\_importer.repository
2025-08-18T21:53:13.0355223Z 
2025-08-18T21:53:13.0355305Z <a id="price_importer.import"></a>
2025-08-18T21:53:13.0355453Z 
2025-08-18T21:53:13.0355535Z # price\_importer.import
2025-08-18T21:53:13.0355658Z 
2025-08-18T21:53:13.0355727Z <a id="fees_h10"></a>
2025-08-18T21:53:13.0355846Z 
2025-08-18T21:53:13.0355907Z # fees\_h10
2025-08-18T21:53:13.0356115Z 
2025-08-18T21:53:13.0356196Z <a id="fees_h10.worker"></a>
2025-08-18T21:53:13.0356327Z 
2025-08-18T21:53:13.0356391Z # fees\_h10.worker
2025-08-18T21:53:13.0356495Z 
2025-08-18T21:53:13.0356596Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T21:53:13.0356768Z 
2025-08-18T21:53:13.0356840Z #### list\_active\_asins
2025-08-18T21:53:13.0356964Z 
2025-08-18T21:53:13.0357025Z ```python
2025-08-18T21:53:13.0357194Z def list_active_asins() -> list[str]
2025-08-18T21:53:13.0357406Z ```
2025-08-18T21:53:13.0357488Z 
2025-08-18T21:53:13.0357604Z Return known ASINs or an empty list if unavailable.
2025-08-18T21:53:13.0357797Z 
2025-08-18T21:53:13.0357879Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T21:53:13.0358035Z 
2025-08-18T21:53:13.0358119Z # fees\_h10.tests.test\_smoke
2025-08-18T21:53:13.0358256Z 
2025-08-18T21:53:13.0358330Z <a id="fees_h10.tests"></a>
2025-08-18T21:53:13.0358467Z 
2025-08-18T21:53:13.0358532Z # fees\_h10.tests
2025-08-18T21:53:13.0358637Z 
2025-08-18T21:53:13.0358722Z <a id="fees_h10.client"></a>
2025-08-18T21:53:13.0358856Z 
2025-08-18T21:53:13.0358922Z # fees\_h10.client
2025-08-18T21:53:13.0359026Z 
2025-08-18T21:53:13.0359113Z <a id="fees_h10.repository"></a>
2025-08-18T21:53:13.0359256Z 
2025-08-18T21:53:13.0359327Z # fees\_h10.repository
2025-08-18T21:53:13.0359452Z 
2025-08-18T21:53:13.0359520Z <a id="emailer"></a>
2025-08-18T21:53:13.0359632Z 
2025-08-18T21:53:13.0359695Z # emailer
2025-08-18T21:53:13.0359790Z 
2025-08-18T21:53:13.0359888Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T21:53:13.0360066Z 
2025-08-18T21:53:13.0360161Z # emailer.tests.test\_import\_emailer
2025-08-18T21:53:13.0360320Z 
2025-08-18T21:53:13.0360405Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T21:53:13.0360567Z 
2025-08-18T21:53:13.0360645Z # emailer.tests.test\_smoke
2025-08-18T21:53:13.0360967Z 
2025-08-18T21:53:13.0361047Z <a id="emailer.tests"></a>
2025-08-18T21:53:13.0361186Z 
2025-08-18T21:53:13.0361254Z # emailer.tests
2025-08-18T21:53:13.0361358Z 
2025-08-18T21:53:13.0361458Z <a id="emailer.generate_body"></a>
2025-08-18T21:53:13.0361609Z 
2025-08-18T21:53:13.0361684Z # emailer.generate\_body
2025-08-18T21:53:13.0361814Z 
2025-08-18T21:53:13.0361885Z <a id="llm_server"></a>
2025-08-18T21:53:13.0362002Z 
2025-08-18T21:53:13.0362065Z # llm\_server
2025-08-18T21:53:13.0362167Z 
2025-08-18T21:53:13.0362243Z <a id="llm_server.app"></a>
2025-08-18T21:53:13.0362372Z 
2025-08-18T21:53:13.0362446Z # llm\_server.app
2025-08-18T21:53:13.0362549Z 
