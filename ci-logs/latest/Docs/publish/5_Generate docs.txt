2025-08-20T01:17:55.2544581Z ##[group]Run pydoc-markdown
2025-08-20T01:17:55.2544876Z [36;1mpydoc-markdown[0m
2025-08-20T01:17:55.2584975Z shell: /usr/bin/bash -e {0}
2025-08-20T01:17:55.2585196Z env:
2025-08-20T01:17:55.2585424Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:17:55.2585823Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T01:17:55.2586235Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:17:55.2586578Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:17:55.2586905Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T01:17:55.2587228Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T01:17:55.2587716Z ##[endgroup]
2025-08-20T01:17:55.6158311Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T01:17:55.6159225Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T01:17:55.6159678Z In "pydoc-markdown.yml"
2025-08-20T01:17:55.6160109Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T01:17:55.6160795Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T01:17:55.6161551Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T01:17:55.6162060Z 
2025-08-20T01:17:55.9750689Z <a id="__init__"></a>
2025-08-20T01:17:55.9751142Z 
2025-08-20T01:17:55.9751279Z # \_\_init\_\_
2025-08-20T01:17:55.9751471Z 
2025-08-20T01:17:55.9751606Z <a id="api"></a>
2025-08-20T01:17:55.9751822Z 
2025-08-20T01:17:55.9751961Z # api
2025-08-20T01:17:55.9752149Z 
2025-08-20T01:17:55.9752299Z <a id="api.errors"></a>
2025-08-20T01:17:55.9752538Z 
2025-08-20T01:17:55.9752672Z # api.errors
2025-08-20T01:17:55.9752868Z 
2025-08-20T01:17:55.9753027Z <a id="api.sentry_config"></a>
2025-08-20T01:17:55.9753315Z 
2025-08-20T01:17:55.9753464Z # api.sentry\_config
2025-08-20T01:17:55.9753709Z 
2025-08-20T01:17:55.9753905Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T01:17:55.9754214Z 
2025-08-20T01:17:55.9754776Z # api.tests.test\_stats\_contracts
2025-08-20T01:17:55.9755106Z 
2025-08-20T01:17:55.9755272Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T01:17:55.9755582Z 
2025-08-20T01:17:55.9755728Z # api.tests.test\_sentry\_scrub
2025-08-20T01:17:55.9756009Z 
2025-08-20T01:17:55.9756183Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T01:17:55.9756522Z 
2025-08-20T01:17:55.9756677Z # api.tests.test\_roi\_basic\_auth
2025-08-20T01:17:55.9756973Z 
2025-08-20T01:17:55.9757147Z <a id="api.tests.test_errors_json"></a>
2025-08-20T01:17:55.9757717Z 
2025-08-20T01:17:55.9757864Z # api.tests.test\_errors\_json
2025-08-20T01:17:55.9758121Z 
2025-08-20T01:17:55.9758263Z <a id="api.tests.test_llm"></a>
2025-08-20T01:17:55.9758523Z 
2025-08-20T01:17:55.9758612Z # api.tests.test\_llm
2025-08-20T01:17:55.9758749Z 
2025-08-20T01:17:55.9758857Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T01:17:55.9759047Z 
2025-08-20T01:17:55.9759139Z # api.tests.test\_roi\_filters
2025-08-20T01:17:55.9759304Z 
2025-08-20T01:17:55.9759422Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T01:17:55.9759626Z 
2025-08-20T01:17:55.9759724Z # api.tests.test\_sentry\_event
2025-08-20T01:17:55.9759893Z 
2025-08-20T01:17:55.9760042Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T01:17:55.9760296Z 
2025-08-20T01:17:55.9760397Z ## DummyTransport Objects
2025-08-20T01:17:55.9760552Z 
2025-08-20T01:17:55.9760629Z ```python
2025-08-20T01:17:55.9760833Z class DummyTransport()
2025-08-20T01:17:55.9761051Z ```
2025-08-20T01:17:55.9761153Z 
2025-08-20T01:17:55.9761362Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T01:17:55.9761668Z 
2025-08-20T01:17:55.9761753Z #### capture\_envelope
2025-08-20T01:17:55.9761898Z 
2025-08-20T01:17:55.9761974Z ```python
2025-08-20T01:17:55.9762180Z def capture_envelope(envelope)
2025-08-20T01:17:55.9762414Z ```
2025-08-20T01:17:55.9762511Z 
2025-08-20T01:17:55.9762663Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T01:17:55.9762911Z 
2025-08-20T01:17:55.9763010Z <a id="api.tests.test_cors"></a>
2025-08-20T01:17:55.9763452Z 
2025-08-20T01:17:55.9763538Z # api.tests.test\_cors
2025-08-20T01:17:55.9763676Z 
2025-08-20T01:17:55.9763777Z <a id="api.tests.test_imports"></a>
2025-08-20T01:17:55.9763959Z 
2025-08-20T01:17:55.9764050Z # api.tests.test\_imports
2025-08-20T01:17:55.9764201Z 
2025-08-20T01:17:55.9764309Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T01:17:55.9764497Z 
2025-08-20T01:17:55.9764579Z # api.tests.test\_rate\_limit
2025-08-20T01:17:55.9764720Z 
2025-08-20T01:17:55.9764813Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T01:17:55.9764978Z 
2025-08-20T01:17:55.9765050Z #### app
2025-08-20T01:17:55.9765140Z 
2025-08-20T01:17:55.9765203Z noqa: E402
2025-08-20T01:17:55.9765292Z 
2025-08-20T01:17:55.9765380Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T01:17:55.9765532Z 
2025-08-20T01:17:55.9765608Z # api.tests.test\_stats\_sql
2025-08-20T01:17:55.9765747Z 
2025-08-20T01:17:55.9765831Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T01:17:55.9765996Z 
2025-08-20T01:17:55.9766073Z # api.tests.test\_entrypoint
2025-08-20T01:17:55.9766209Z 
2025-08-20T01:17:55.9766315Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T01:17:55.9766509Z 
2025-08-20T01:17:55.9766608Z # api.tests.test\_stats\_future\_contracts
2025-08-20T01:17:55.9766774Z 
2025-08-20T01:17:55.9766858Z <a id="api.tests.test_health"></a>
2025-08-20T01:17:55.9767012Z 
2025-08-20T01:17:55.9767086Z # api.tests.test\_health
2025-08-20T01:17:55.9767209Z 
2025-08-20T01:17:55.9767292Z <a id="api.tests.test_score"></a>
2025-08-20T01:17:55.9767691Z 
2025-08-20T01:17:55.9767774Z # api.tests.test\_score
2025-08-20T01:17:55.9767902Z 
2025-08-20T01:17:55.9767992Z <a id="api.logging_config"></a>
2025-08-20T01:17:55.9768132Z 
2025-08-20T01:17:55.9768205Z # api.logging\_config
2025-08-20T01:17:55.9768330Z 
2025-08-20T01:17:55.9768410Z <a id="api.migrations.env"></a>
2025-08-20T01:17:55.9768549Z 
2025-08-20T01:17:55.9768621Z # api.migrations.env
2025-08-20T01:17:55.9768881Z 
2025-08-20T01:17:55.9769012Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T01:17:55.9769216Z 
2025-08-20T01:17:55.9769331Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T01:17:55.9769518Z 
2025-08-20T01:17:55.9769628Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T01:17:55.9769819Z 
2025-08-20T01:17:55.9769913Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T01:17:55.9770084Z 
2025-08-20T01:17:55.9770235Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T01:17:55.9770471Z 
2025-08-20T01:17:55.9770603Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T01:17:55.9770813Z 
2025-08-20T01:17:55.9770937Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T01:17:55.9771130Z 
2025-08-20T01:17:55.9771235Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T01:17:55.9771420Z 
2025-08-20T01:17:55.9771535Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T01:17:55.9771817Z 
2025-08-20T01:17:55.9771920Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T01:17:55.9772128Z 
2025-08-20T01:17:55.9772255Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T01:17:55.9772462Z 
2025-08-20T01:17:55.9772572Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T01:17:55.9772756Z 
2025-08-20T01:17:55.9772877Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T01:17:55.9773067Z 
2025-08-20T01:17:55.9773174Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T01:17:55.9773364Z 
2025-08-20T01:17:55.9773486Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T01:17:55.9773682Z 
2025-08-20T01:17:55.9773784Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T01:17:55.9773977Z 
2025-08-20T01:17:55.9774113Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T01:17:55.9774324Z 
2025-08-20T01:17:55.9774448Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T01:17:55.9774641Z 
2025-08-20T01:17:55.9774766Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T01:17:55.9775101Z 
2025-08-20T01:17:55.9775208Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T01:17:55.9775392Z 
2025-08-20T01:17:55.9775531Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T01:17:55.9775738Z 
2025-08-20T01:17:55.9775854Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T01:17:55.9776044Z 
2025-08-20T01:17:55.9776156Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T01:17:55.9776337Z 
2025-08-20T01:17:55.9776430Z # api.migrations.versions.0001\_baseline
2025-08-20T01:17:55.9776842Z 
2025-08-20T01:17:55.9776997Z <a id="api.migrations.versions"></a>
2025-08-20T01:17:55.9777283Z 
2025-08-20T01:17:55.9777607Z # api.migrations.versions
2025-08-20T01:17:55.9777854Z 
2025-08-20T01:17:55.9777994Z <a id="api.migrations"></a>
2025-08-20T01:17:55.9778230Z 
2025-08-20T01:17:55.9778360Z # api.migrations
2025-08-20T01:17:55.9778542Z 
2025-08-20T01:17:55.9778673Z <a id="api.db"></a>
2025-08-20T01:17:55.9778891Z 
2025-08-20T01:17:55.9778981Z # api.db
2025-08-20T01:17:55.9779075Z 
2025-08-20T01:17:55.9779160Z <a id="api.routes.score"></a>
2025-08-20T01:17:55.9779306Z 
2025-08-20T01:17:55.9779378Z # api.routes.score
2025-08-20T01:17:55.9779483Z 
2025-08-20T01:17:55.9779572Z <a id="api.routes.stats"></a>
2025-08-20T01:17:55.9779714Z 
2025-08-20T01:17:55.9779785Z # api.routes.stats
2025-08-20T01:17:55.9779900Z 
2025-08-20T01:17:55.9779978Z <a id="api.routes.roi"></a>
2025-08-20T01:17:55.9780108Z 
2025-08-20T01:17:55.9780177Z # api.routes.roi
2025-08-20T01:17:55.9780288Z 
2025-08-20T01:17:55.9780370Z <a id="api.routes.health"></a>
2025-08-20T01:17:55.9780508Z 
2025-08-20T01:17:55.9780583Z # api.routes.health
2025-08-20T01:17:55.9780689Z 
2025-08-20T01:17:55.9780782Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T01:17:55.9780957Z 
2025-08-20T01:17:55.9781021Z #### MAX\_SKEW
2025-08-20T01:17:55.9781120Z 
2025-08-20T01:17:55.9781181Z seconds
2025-08-20T01:17:55.9781462Z 
2025-08-20T01:17:55.9781554Z <a id="api.routes.health.health"></a>
2025-08-20T01:17:55.9781720Z 
2025-08-20T01:17:55.9781787Z #### health
2025-08-20T01:17:55.9781875Z 
2025-08-20T01:17:55.9781939Z ```python
2025-08-20T01:17:55.9782140Z @router.get("/health", include_in_schema=False)
2025-08-20T01:17:55.9782539Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T01:17:55.9782921Z ```
2025-08-20T01:17:55.9783010Z 
2025-08-20T01:17:55.9783126Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T01:17:55.9783321Z 
2025-08-20T01:17:55.9783415Z <a id="api.routes.repository"></a>
2025-08-20T01:17:55.9783570Z 
2025-08-20T01:17:55.9783647Z # api.routes.repository
2025-08-20T01:17:55.9783770Z 
2025-08-20T01:17:55.9783849Z <a id="api.routes"></a>
2025-08-20T01:17:55.9783988Z 
2025-08-20T01:17:55.9784054Z # api.routes
2025-08-20T01:17:55.9784152Z 
2025-08-20T01:17:55.9784236Z <a id="api.models.fee"></a>
2025-08-20T01:17:55.9784368Z 
2025-08-20T01:17:55.9784434Z # api.models.fee
2025-08-20T01:17:55.9784552Z 
2025-08-20T01:17:55.9784627Z <a id="api.models"></a>
2025-08-20T01:17:55.9784740Z 
2025-08-20T01:17:55.9784804Z # api.models
2025-08-20T01:17:55.9784905Z 
2025-08-20T01:17:55.9784986Z <a id="api.roi_repository"></a>
2025-08-20T01:17:55.9785127Z 
2025-08-20T01:17:55.9785205Z # api.roi\_repository
2025-08-20T01:17:55.9785318Z 
2025-08-20T01:17:55.9785389Z <a id="api.main"></a>
2025-08-20T01:17:55.9785504Z 
2025-08-20T01:17:55.9785568Z # api.main
2025-08-20T01:17:55.9785659Z 
2025-08-20T01:17:55.9785736Z <a id="api.main.ready"></a>
2025-08-20T01:17:55.9785872Z 
2025-08-20T01:17:55.9785934Z #### ready
2025-08-20T01:17:55.9786024Z 
2025-08-20T01:17:55.9786090Z ```python
2025-08-20T01:17:55.9786344Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T01:17:55.9786771Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T01:17:55.9787113Z                                                                       str]
2025-08-20T01:17:55.9787545Z ```
2025-08-20T01:17:55.9787797Z 
2025-08-20T01:17:55.9787903Z Return 200 only when migrations are at head.
2025-08-20T01:17:55.9788085Z 
2025-08-20T01:17:55.9788158Z <a id="api.config"></a>
2025-08-20T01:17:55.9788278Z 
2025-08-20T01:17:55.9788348Z # api.config
2025-08-20T01:17:55.9788443Z 
2025-08-20T01:17:55.9788518Z <a id="api.security"></a>
2025-08-20T01:17:55.9788651Z 
2025-08-20T01:17:55.9788716Z # api.security
2025-08-20T01:17:55.9788814Z 
2025-08-20T01:17:55.9788880Z <a id="etl"></a>
2025-08-20T01:17:55.9788986Z 
2025-08-20T01:17:55.9789046Z # etl
2025-08-20T01:17:55.9789131Z 
2025-08-20T01:17:55.9789217Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T01:17:55.9789362Z 
2025-08-20T01:17:55.9789435Z # etl.fba\_fee\_ingestor
2025-08-20T01:17:55.9789554Z 
2025-08-20T01:17:55.9789643Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T01:17:55.9789786Z 
2025-08-20T01:17:55.9789858Z # etl.sp\_fees\_ingestor
2025-08-20T01:17:55.9789982Z 
2025-08-20T01:17:55.9790061Z <a id="etl.keepa_ingestor"></a>
2025-08-20T01:17:55.9790208Z 
2025-08-20T01:17:55.9790278Z # etl.keepa\_ingestor
2025-08-20T01:17:55.9790397Z 
2025-08-20T01:17:55.9790465Z <a id="etl.db"></a>
2025-08-20T01:17:55.9790569Z 
2025-08-20T01:17:55.9790638Z # etl.db
2025-08-20T01:17:55.9790726Z 
2025-08-20T01:17:55.9790808Z <a id="etl.dialects.schemas"></a>
2025-08-20T01:17:55.9790961Z 
2025-08-20T01:17:55.9791039Z # etl.dialects.schemas
2025-08-20T01:17:55.9791155Z 
2025-08-20T01:17:55.9791264Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T01:17:55.9791455Z 
2025-08-20T01:17:55.9791546Z # etl.dialects.amazon\_reimbursements
2025-08-20T01:17:55.9791705Z 
2025-08-20T01:17:55.9791808Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T01:17:55.9791977Z 
2025-08-20T01:17:55.9792062Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T01:17:55.9792222Z 
2025-08-20T01:17:55.9792309Z <a id="etl.dialects.test_generic"></a>
2025-08-20T01:17:55.9792467Z 
2025-08-20T01:17:55.9792547Z # etl.dialects.test\_generic
2025-08-20T01:17:55.9792813Z 
2025-08-20T01:17:55.9792907Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T01:17:55.9793071Z 
2025-08-20T01:17:55.9793157Z # etl.dialects.amazon\_returns
2025-08-20T01:17:55.9793294Z 
2025-08-20T01:17:55.9793389Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T01:17:55.9793562Z 
2025-08-20T01:17:55.9793646Z # etl.dialects.amazon\_fee\_preview
2025-08-20T01:17:55.9793799Z 
2025-08-20T01:17:55.9793904Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T01:17:55.9794097Z 
2025-08-20T01:17:55.9794187Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T01:17:55.9794350Z 
2025-08-20T01:17:55.9794450Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T01:17:55.9794618Z 
2025-08-20T01:17:55.9794703Z # etl.dialects.amazon\_settlements
2025-08-20T01:17:55.9794858Z 
2025-08-20T01:17:55.9794933Z <a id="etl.dialects"></a>
2025-08-20T01:17:55.9795056Z 
2025-08-20T01:17:55.9795120Z # etl.dialects
2025-08-20T01:17:55.9795226Z 
2025-08-20T01:17:55.9795294Z <a id="ingest"></a>
2025-08-20T01:17:55.9795405Z 
2025-08-20T01:17:55.9795475Z # ingest
2025-08-20T01:17:55.9795561Z 
2025-08-20T01:17:55.9795642Z <a id="ingest.maintenance"></a>
2025-08-20T01:17:55.9795782Z 
2025-08-20T01:17:55.9795862Z # ingest.maintenance
2025-08-20T01:17:55.9795973Z 
2025-08-20T01:17:55.9796053Z <a id="ingest.copy_loader"></a>
2025-08-20T01:17:55.9796195Z 
2025-08-20T01:17:55.9796269Z # ingest.copy\_loader
2025-08-20T01:17:55.9796383Z 
2025-08-20T01:17:55.9796490Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T01:17:55.9796667Z 
2025-08-20T01:17:55.9796744Z #### copy\_df\_via\_temp
2025-08-20T01:17:55.9796866Z 
2025-08-20T01:17:55.9796939Z ```python
2025-08-20T01:17:55.9797107Z def copy_df_via_temp(engine: Engine,
2025-08-20T01:17:55.9797503Z                      df: pd.DataFrame,
2025-08-20T01:17:55.9797799Z                      target_table: str,
2025-08-20T01:17:55.9798023Z                      *,
2025-08-20T01:17:55.9798224Z                      target_schema: Optional[str] = None,
2025-08-20T01:17:55.9798488Z                      columns: Sequence[str],
2025-08-20T01:17:55.9799222Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T01:17:55.9799727Z                      analyze_after: bool = False,
2025-08-20T01:17:55.9800203Z                      connection: Any | None = None) -> int
2025-08-20T01:17:55.9800514Z ```
2025-08-20T01:17:55.9800607Z 
2025-08-20T01:17:55.9800766Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T01:17:55.9800997Z 
2025-08-20T01:17:55.9801088Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T01:17:55.9801245Z 
2025-08-20T01:17:55.9801323Z # ingest.tests.test\_smoke
2025-08-20T01:17:55.9801451Z 
2025-08-20T01:17:55.9801532Z <a id="ingest.tests"></a>
2025-08-20T01:17:55.9801655Z 
2025-08-20T01:17:55.9801720Z # ingest.tests
2025-08-20T01:17:55.9801828Z 
2025-08-20T01:17:55.9801912Z <a id="ingest.upload_router"></a>
2025-08-20T01:17:55.9802059Z 
2025-08-20T01:17:55.9802134Z # ingest.upload\_router
2025-08-20T01:17:55.9802268Z 
2025-08-20T01:17:55.9802354Z <a id="ingest.email_watcher"></a>
2025-08-20T01:17:55.9802497Z 
2025-08-20T01:17:55.9802576Z # ingest.email\_watcher
2025-08-20T01:17:55.9802692Z 
2025-08-20T01:17:55.9802779Z <a id="ingest.email_watcher.main"></a>
2025-08-20T01:17:55.9802943Z 
2025-08-20T01:17:55.9803004Z #### main
2025-08-20T01:17:55.9803092Z 
2025-08-20T01:17:55.9803155Z ```python
2025-08-20T01:17:55.9803327Z def main() -> dict[str, str]
2025-08-20T01:17:55.9803529Z ```
2025-08-20T01:17:55.9803612Z 
2025-08-20T01:17:55.9803750Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T01:17:55.9803971Z 
2025-08-20T01:17:55.9804107Z Returns {"status": "success"} when processing completes.
2025-08-20T01:17:55.9804315Z 
2025-08-20T01:17:55.9804391Z <a id="ingest.tasks"></a>
2025-08-20T01:17:55.9804521Z 
2025-08-20T01:17:55.9804588Z # ingest.tasks
2025-08-20T01:17:55.9804712Z 
2025-08-20T01:17:55.9804810Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T01:17:55.9804988Z 
2025-08-20T01:17:55.9805517Z #### task\_import\_file
2025-08-20T01:17:55.9805660Z 
2025-08-20T01:17:55.9805728Z ```python
2025-08-20T01:17:55.9805954Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T01:17:55.9806240Z def task_import_file(self: Any,
2025-08-20T01:17:55.9806457Z                      uri: str,
2025-08-20T01:17:55.9806675Z                      report_type: str | None = None,
2025-08-20T01:17:55.9806944Z                      force: bool = False) -> dict[str, Any]
2025-08-20T01:17:55.9807182Z ```
2025-08-20T01:17:55.9807265Z 
2025-08-20T01:17:55.9807520Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T01:17:55.9807729Z 
2025-08-20T01:17:55.9807815Z <a id="ingest.celery_app"></a>
2025-08-20T01:17:55.9807954Z 
2025-08-20T01:17:55.9808028Z # ingest.celery\_app
2025-08-20T01:17:55.9808146Z 
2025-08-20T01:17:55.9808229Z <a id="ingest.ingest_router"></a>
2025-08-20T01:17:55.9808378Z 
2025-08-20T01:17:55.9808460Z # ingest.ingest\_router
2025-08-20T01:17:55.9808577Z 
2025-08-20T01:17:55.9808661Z <a id="logistics_etl"></a>
2025-08-20T01:17:55.9808791Z 
2025-08-20T01:17:55.9808865Z # logistics\_etl
2025-08-20T01:17:55.9808968Z 
2025-08-20T01:17:55.9809043Z Daily logistics ETL job.
2025-08-20T01:17:55.9809172Z 
2025-08-20T01:17:55.9809252Z <a id="logistics_etl.__main__"></a>
2025-08-20T01:17:55.9809400Z 
2025-08-20T01:17:55.9809475Z # logistics\_etl.\_\_main\_\_
2025-08-20T01:17:55.9809614Z 
2025-08-20T01:17:55.9809691Z <a id="logistics_etl.dsn"></a>
2025-08-20T01:17:55.9809825Z 
2025-08-20T01:17:55.9809899Z # logistics\_etl.dsn
2025-08-20T01:17:55.9810007Z 
2025-08-20T01:17:55.9810120Z Local DSN builder to avoid cross-service dependency.
2025-08-20T01:17:55.9810322Z 
2025-08-20T01:17:55.9810413Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T01:17:55.9810575Z 
2025-08-20T01:17:55.9810640Z #### build\_dsn
2025-08-20T01:17:55.9810746Z 
2025-08-20T01:17:55.9810810Z ```python
2025-08-20T01:17:55.9810986Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:17:55.9811201Z ```
2025-08-20T01:17:55.9811287Z 
2025-08-20T01:17:55.9811553Z Return a Postgres DSN assembled from environment variables.
2025-08-20T01:17:55.9811767Z 
2025-08-20T01:17:55.9811913Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T01:17:55.9812298Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T01:17:55.9812640Z error when any required variable is missing.
2025-08-20T01:17:55.9812820Z 
2025-08-20T01:17:55.9812912Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T01:17:55.9813079Z 
2025-08-20T01:17:55.9813168Z # logistics\_etl.tests.conftest
2025-08-20T01:17:55.9813308Z 
2025-08-20T01:17:55.9813411Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T01:17:55.9813600Z 
2025-08-20T01:17:55.9813687Z # logistics\_etl.tests.test\_repository
2025-08-20T01:17:55.9813848Z 
2025-08-20T01:17:55.9813941Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T01:17:55.9814113Z 
2025-08-20T01:17:55.9814194Z # logistics\_etl.tests.test\_cron
2025-08-20T01:17:55.9814347Z 
2025-08-20T01:17:55.9814449Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T01:17:55.9814626Z 
2025-08-20T01:17:55.9814710Z # logistics\_etl.tests.test\_imports
2025-08-20T01:17:55.9814871Z 
2025-08-20T01:17:55.9814960Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T01:17:55.9815125Z 
2025-08-20T01:17:55.9815208Z # logistics\_etl.tests.test\_smoke
2025-08-20T01:17:55.9815363Z 
2025-08-20T01:17:55.9815456Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T01:17:55.9815621Z 
2025-08-20T01:17:55.9815707Z # logistics\_etl.tests.test\_client
2025-08-20T01:17:55.9815859Z 
2025-08-20T01:17:55.9815939Z <a id="logistics_etl.tests"></a>
2025-08-20T01:17:55.9816083Z 
2025-08-20T01:17:55.9816155Z # logistics\_etl.tests
2025-08-20T01:17:55.9816272Z 
2025-08-20T01:17:55.9816350Z <a id="logistics_etl.flow"></a>
2025-08-20T01:17:55.9816495Z 
2025-08-20T01:17:55.9816564Z # logistics\_etl.flow
2025-08-20T01:17:55.9816676Z 
2025-08-20T01:17:55.9816762Z <a id="logistics_etl.client"></a>
2025-08-20T01:17:55.9817036Z 
2025-08-20T01:17:55.9890542Z # logistics\_etl.client
2025-08-20T01:17:55.9890984Z 
2025-08-20T01:17:55.9891160Z <a id="logistics_etl.cron"></a>
2025-08-20T01:17:55.9891463Z 
2025-08-20T01:17:55.9891610Z # logistics\_etl.cron
2025-08-20T01:17:55.9891855Z 
2025-08-20T01:17:55.9892023Z <a id="logistics_etl.db"></a>
2025-08-20T01:17:55.9892302Z 
2025-08-20T01:17:55.9892440Z # logistics\_etl.db
2025-08-20T01:17:55.9892664Z 
2025-08-20T01:17:55.9892842Z <a id="logistics_etl.repository"></a>
2025-08-20T01:17:55.9893174Z 
2025-08-20T01:17:55.9893278Z # logistics\_etl.repository
2025-08-20T01:17:55.9893450Z 
2025-08-20T01:17:55.9893538Z <a id="alert_bot"></a>
2025-08-20T01:17:55.9893681Z 
2025-08-20T01:17:55.9893767Z # alert\_bot
2025-08-20T01:17:55.9893887Z 
2025-08-20T01:17:55.9893995Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T01:17:55.9894195Z 
2025-08-20T01:17:55.9894311Z # alert\_bot.tests.test\_smoke
2025-08-20T01:17:55.9894453Z 
2025-08-20T01:17:55.9894530Z <a id="alert_bot.tests"></a>
2025-08-20T01:17:55.9894676Z 
2025-08-20T01:17:55.9894751Z # alert\_bot.tests
2025-08-20T01:17:55.9894855Z 
2025-08-20T01:17:55.9894943Z <a id="alert_bot.alert_bot"></a>
2025-08-20T01:17:55.9895088Z 
2025-08-20T01:17:55.9895162Z # alert\_bot.alert\_bot
2025-08-20T01:17:55.9895281Z 
2025-08-20T01:17:55.9895364Z <a id="alert_bot.rules"></a>
2025-08-20T01:17:55.9895497Z 
2025-08-20T01:17:55.9895566Z # alert\_bot.rules
2025-08-20T01:17:55.9895676Z 
2025-08-20T01:17:55.9895746Z <a id="common"></a>
2025-08-20T01:17:55.9895852Z 
2025-08-20T01:17:55.9895915Z # common
2025-08-20T01:17:55.9896009Z 
2025-08-20T01:17:55.9896080Z <a id="common.dsn"></a>
2025-08-20T01:17:55.9896197Z 
2025-08-20T01:17:55.9896270Z # common.dsn
2025-08-20T01:17:55.9896366Z 
2025-08-20T01:17:55.9896449Z <a id="common.dsn.build_dsn"></a>
2025-08-20T01:17:55.9896600Z 
2025-08-20T01:17:55.9896665Z #### build\_dsn
2025-08-20T01:17:55.9896765Z 
2025-08-20T01:17:55.9896828Z ```python
2025-08-20T01:17:55.9897007Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:17:55.9897232Z ```
2025-08-20T01:17:55.9897749Z 
2025-08-20T01:17:55.9897885Z Return a Postgres DSN, validating required variables.
2025-08-20T01:17:55.9898093Z 
2025-08-20T01:17:55.9898282Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T01:17:55.9898706Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T01:17:55.9899111Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T01:17:55.9899409Z missing.
2025-08-20T01:17:55.9899504Z 
2025-08-20T01:17:55.9899588Z <a id="common.models_vendor"></a>
2025-08-20T01:17:55.9899734Z 
2025-08-20T01:17:55.9899811Z # common.models\_vendor
2025-08-20T01:17:55.9899929Z 
2025-08-20T01:17:55.9900016Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T01:17:55.9900184Z 
2025-08-20T01:17:55.9900249Z ## Vendor Objects
2025-08-20T01:17:55.9900354Z 
2025-08-20T01:17:55.9900417Z ```python
2025-08-20T01:17:55.9900577Z class Vendor(Base)
2025-08-20T01:17:55.9900745Z ```
2025-08-20T01:17:55.9900845Z 
2025-08-20T01:17:55.9900922Z Vendor of inventory items.
2025-08-20T01:17:55.9901053Z 
2025-08-20T01:17:55.9901160Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T01:17:55.9901337Z 
2025-08-20T01:17:55.9901411Z ## VendorPrice Objects
2025-08-20T01:17:55.9901531Z 
2025-08-20T01:17:55.9901593Z ```python
2025-08-20T01:17:55.9901751Z class VendorPrice(Base)
2025-08-20T01:17:55.9901934Z ```
2025-08-20T01:17:55.9902016Z 
2025-08-20T01:17:55.9902117Z Association table linking vendors to pricing.
2025-08-20T01:17:55.9902300Z 
2025-08-20T01:17:55.9902373Z <a id="common.db_url"></a>
2025-08-20T01:17:55.9902498Z 
2025-08-20T01:17:55.9902571Z # common.db\_url
2025-08-20T01:17:55.9902675Z 
2025-08-20T01:17:55.9902761Z <a id="common.db_url.build_url"></a>
2025-08-20T01:17:55.9902920Z 
2025-08-20T01:17:55.9902985Z #### build\_url
2025-08-20T01:17:55.9903085Z 
2025-08-20T01:17:55.9903146Z ```python
2025-08-20T01:17:55.9903322Z def build_url(async_: bool = True) -> str
2025-08-20T01:17:55.9903667Z ```
2025-08-20T01:17:55.9903751Z 
2025-08-20T01:17:55.9903846Z Return Postgres DSN from env or PG_* parts.
2025-08-20T01:17:55.9904012Z 
2025-08-20T01:17:55.9904096Z <a id="common.keepa"></a>
2025-08-20T01:17:55.9904229Z 
2025-08-20T01:17:55.9904297Z # common.keepa
2025-08-20T01:17:55.9904403Z 
2025-08-20T01:17:55.9904475Z <a id="common.llm"></a>
2025-08-20T01:17:55.9904590Z 
2025-08-20T01:17:55.9904656Z # common.llm
2025-08-20T01:17:55.9904756Z 
2025-08-20T01:17:55.9904836Z <a id="common.settings"></a>
2025-08-20T01:17:55.9904973Z 
2025-08-20T01:17:55.9905046Z # common.settings
2025-08-20T01:17:55.9905151Z 
2025-08-20T01:17:55.9905222Z <a id="common.db"></a>
2025-08-20T01:17:55.9905525Z 
2025-08-20T01:17:55.9905592Z # common.db
2025-08-20T01:17:55.9905686Z 
2025-08-20T01:17:55.9905777Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T01:17:55.9905949Z 
2025-08-20T01:17:55.9906023Z #### build\_sqlalchemy\_url
2025-08-20T01:17:55.9906151Z 
2025-08-20T01:17:55.9906220Z ```python
2025-08-20T01:17:55.9906390Z def build_sqlalchemy_url() -> str
2025-08-20T01:17:55.9906606Z ```
2025-08-20T01:17:55.9906686Z 
2025-08-20T01:17:55.9906782Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T01:17:55.9906953Z 
2025-08-20T01:17:55.9907041Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T01:17:55.9907202Z 
2025-08-20T01:17:55.9907276Z #### build\_asyncpg\_dsn
2025-08-20T01:17:55.9907576Z 
2025-08-20T01:17:55.9907642Z ```python
2025-08-20T01:17:55.9907819Z def build_asyncpg_dsn() -> str
2025-08-20T01:17:55.9908013Z ```
2025-08-20T01:17:55.9908094Z 
2025-08-20T01:17:55.9908225Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T01:17:55.9908431Z 
2025-08-20T01:17:55.9908514Z <a id="common.db.refresh_mvs"></a>
2025-08-20T01:17:55.9908668Z 
2025-08-20T01:17:55.9908732Z #### refresh\_mvs
2025-08-20T01:17:55.9908833Z 
2025-08-20T01:17:55.9908901Z ```python
2025-08-20T01:17:55.9909088Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T01:17:55.9909335Z ```
2025-08-20T01:17:55.9909422Z 
2025-08-20T01:17:55.9909688Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T01:17:55.9909909Z 
2025-08-20T01:17:55.9909986Z <a id="common.config"></a>
2025-08-20T01:17:55.9910124Z 
2025-08-20T01:17:55.9910190Z # common.config
2025-08-20T01:17:55.9910297Z 
2025-08-20T01:17:55.9910369Z <a id="common.base"></a>
2025-08-20T01:17:55.9910487Z 
2025-08-20T01:17:55.9910557Z # common.base
2025-08-20T01:17:55.9910652Z 
2025-08-20T01:17:55.9910731Z <a id="common.base.Base"></a>
2025-08-20T01:17:55.9910865Z 
2025-08-20T01:17:55.9910936Z ## Base Objects
2025-08-20T01:17:55.9911034Z 
2025-08-20T01:17:55.9911094Z ```python
2025-08-20T01:17:55.9911262Z class Base(DeclarativeBase)
2025-08-20T01:17:55.9911448Z ```
2025-08-20T01:17:55.9911532Z 
2025-08-20T01:17:55.9911616Z Base class for SQLAlchemy models.
2025-08-20T01:17:55.9911762Z 
2025-08-20T01:17:55.9911838Z <a id="repricer"></a>
2025-08-20T01:17:55.9911951Z 
2025-08-20T01:17:55.9912015Z # repricer
2025-08-20T01:17:55.9912106Z 
2025-08-20T01:17:55.9912202Z <a id="repricer.app.schemas"></a>
2025-08-20T01:17:55.9912356Z 
2025-08-20T01:17:55.9912431Z # repricer.app.schemas
2025-08-20T01:17:55.9912554Z 
2025-08-20T01:17:55.9912637Z <a id="repricer.app.deps"></a>
2025-08-20T01:17:55.9912777Z 
2025-08-20T01:17:55.9912855Z # repricer.app.deps
2025-08-20T01:17:55.9912965Z 
2025-08-20T01:17:55.9913078Z Placeholder module for Keepa / SP-API clients.
2025-08-20T01:17:55.9913261Z 
2025-08-20T01:17:55.9913348Z <a id="repricer.app.logic"></a>
2025-08-20T01:17:55.9913490Z 
2025-08-20T01:17:55.9913564Z # repricer.app.logic
2025-08-20T01:17:55.9913683Z 
2025-08-20T01:17:55.9913782Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T01:17:55.9913954Z 
2025-08-20T01:17:55.9914019Z #### MIN\_MARGIN
2025-08-20T01:17:55.9914127Z 
2025-08-20T01:17:55.9914188Z 15 % ROI
2025-08-20T01:17:55.9914281Z 
2025-08-20T01:17:55.9914396Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T01:17:55.9914571Z 
2025-08-20T01:17:55.9914639Z #### compute\_price
2025-08-20T01:17:55.9914922Z 
2025-08-20T01:17:55.9914993Z ```python
2025-08-20T01:17:55.9915238Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T01:17:55.9915535Z ```
2025-08-20T01:17:55.9915618Z 
2025-08-20T01:17:55.9915730Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T01:17:55.9916004Z Replace with real competitive logic later.
2025-08-20T01:17:55.9916169Z 
2025-08-20T01:17:55.9916310Z <a id="repricer.app.main"></a>
2025-08-20T01:17:55.9916450Z 
2025-08-20T01:17:55.9916527Z # repricer.app.main
2025-08-20T01:17:55.9916646Z 
2025-08-20T01:17:55.9916723Z <a id="repricer.app"></a>
2025-08-20T01:17:55.9916849Z 
2025-08-20T01:17:55.9916924Z # repricer.app
2025-08-20T01:17:55.9917028Z 
2025-08-20T01:17:55.9917119Z <a id="repricer.tests.test_imports"></a>
2025-08-20T01:17:55.9917284Z 
2025-08-20T01:17:55.9917480Z # repricer.tests.test\_imports
2025-08-20T01:17:55.9917621Z 
2025-08-20T01:17:55.9917710Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T01:17:55.9917877Z 
2025-08-20T01:17:55.9917965Z # repricer.tests.test\_smoke
2025-08-20T01:17:55.9918105Z 
2025-08-20T01:17:55.9918182Z <a id="repricer.tests"></a>
2025-08-20T01:17:55.9918319Z 
2025-08-20T01:17:55.9918389Z # repricer.tests
2025-08-20T01:17:55.9918494Z 
2025-08-20T01:17:55.9918566Z <a id="db"></a>
2025-08-20T01:17:55.9918665Z 
2025-08-20T01:17:55.9918725Z # db
2025-08-20T01:17:55.9918815Z 
2025-08-20T01:17:55.9918891Z <a id="db.utils.views"></a>
2025-08-20T01:17:55.9919019Z 
2025-08-20T01:17:55.9919083Z # db.utils.views
2025-08-20T01:17:55.9919193Z 
2025-08-20T01:17:55.9919283Z <a id="db.utils.views.replace_view"></a>
2025-08-20T01:17:55.9919445Z 
2025-08-20T01:17:55.9919521Z #### replace\_view
2025-08-20T01:17:55.9919625Z 
2025-08-20T01:17:55.9919687Z ```python
2025-08-20T01:17:55.9919881Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T01:17:55.9920114Z ```
2025-08-20T01:17:55.9920203Z 
2025-08-20T01:17:55.9920293Z Drop and recreate a SQL view atomically.
2025-08-20T01:17:55.9920452Z 
2025-08-20T01:17:55.9920528Z <a id="db.utils"></a>
2025-08-20T01:17:55.9920767Z 
2025-08-20T01:17:55.9920830Z # db.utils
2025-08-20T01:17:55.9920918Z 
2025-08-20T01:17:55.9921003Z <a id="price_importer"></a>
2025-08-20T01:17:55.9921131Z 
2025-08-20T01:17:55.9921198Z # price\_importer
2025-08-20T01:17:55.9921305Z 
2025-08-20T01:17:55.9921408Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T01:17:55.9921587Z 
2025-08-20T01:17:55.9921677Z # price\_importer.services\_common.dsn
2025-08-20T01:17:55.9921839Z 
2025-08-20T01:17:55.9921960Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T01:17:55.9922160Z 
2025-08-20T01:17:55.9922229Z #### build\_dsn
2025-08-20T01:17:55.9922328Z 
2025-08-20T01:17:55.9922390Z ```python
2025-08-20T01:17:55.9922565Z def build_dsn(sync: bool = True) -> str
2025-08-20T01:17:55.9922781Z ```
2025-08-20T01:17:55.9922868Z 
2025-08-20T01:17:55.9922936Z Return safe DSN.
2025-08-20T01:17:55.9923036Z 
2025-08-20T01:17:55.9923416Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T01:17:55.9923626Z 
2025-08-20T01:17:55.9923756Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T01:17:55.9923955Z 
2025-08-20T01:17:55.9924069Z # price\_importer.services\_common.models\_vendor
2025-08-20T01:17:55.9924254Z 
2025-08-20T01:17:55.9924358Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T01:17:55.9924543Z 
2025-08-20T01:17:55.9924637Z # price\_importer.services\_common.db\_url
2025-08-20T01:17:55.9924803Z 
2025-08-20T01:17:55.9924938Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T01:17:55.9925146Z 
2025-08-20T01:17:55.9925215Z #### build\_url
2025-08-20T01:17:55.9925313Z 
2025-08-20T01:17:55.9925382Z ```python
2025-08-20T01:17:55.9925554Z def build_url(async_: bool = True) -> str
2025-08-20T01:17:55.9925777Z ```
2025-08-20T01:17:55.9925857Z 
2025-08-20T01:17:55.9925955Z Return Postgres DSN from env or PG_* parts.
2025-08-20T01:17:55.9926130Z 
2025-08-20T01:17:55.9926235Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T01:17:55.9926541Z 
2025-08-20T01:17:55.9926647Z # price\_importer.services\_common.keepa
2025-08-20T01:17:55.9926812Z 
2025-08-20T01:17:55.9926911Z <a id="price_importer.services_common.llm"></a>
2025-08-20T01:17:55.9927089Z 
2025-08-20T01:17:55.9927176Z # price\_importer.services\_common.llm
2025-08-20T01:17:55.9927333Z 
2025-08-20T01:17:55.9927552Z <a id="price_importer.services_common.settings"></a>
2025-08-20T01:17:55.9927747Z 
2025-08-20T01:17:55.9927844Z # price\_importer.services\_common.settings
2025-08-20T01:17:55.9928010Z 
2025-08-20T01:17:55.9928115Z <a id="price_importer.services_common.db"></a>
2025-08-20T01:17:55.9928289Z 
2025-08-20T01:17:55.9928378Z # price\_importer.services\_common.db
2025-08-20T01:17:55.9928540Z 
2025-08-20T01:17:55.9928689Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T01:17:55.9928920Z 
2025-08-20T01:17:55.9928996Z #### build\_sqlalchemy\_url
2025-08-20T01:17:55.9929132Z 
2025-08-20T01:17:55.9929195Z ```python
2025-08-20T01:17:55.9929380Z def build_sqlalchemy_url() -> str
2025-08-20T01:17:55.9929590Z ```
2025-08-20T01:17:55.9929670Z 
2025-08-20T01:17:55.9929772Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T01:17:55.9929938Z 
2025-08-20T01:17:55.9930078Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T01:17:55.9930303Z 
2025-08-20T01:17:55.9930378Z #### build\_asyncpg\_dsn
2025-08-20T01:17:55.9930503Z 
2025-08-20T01:17:55.9930571Z ```python
2025-08-20T01:17:55.9930738Z def build_asyncpg_dsn() -> str
2025-08-20T01:17:55.9930939Z ```
2025-08-20T01:17:55.9931020Z 
2025-08-20T01:17:55.9931143Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T01:17:55.9931343Z 
2025-08-20T01:17:55.9931473Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T01:17:55.9931674Z 
2025-08-20T01:17:55.9931740Z #### refresh\_mvs
2025-08-20T01:17:55.9931849Z 
2025-08-20T01:17:55.9931911Z ```python
2025-08-20T01:17:55.9932108Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T01:17:55.9932352Z ```
2025-08-20T01:17:55.9932557Z 
2025-08-20T01:17:55.9932699Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T01:17:55.9932908Z 
2025-08-20T01:17:55.9933002Z <a id="price_importer.services_common"></a>
2025-08-20T01:17:55.9933174Z 
2025-08-20T01:17:55.9933259Z # price\_importer.services\_common
2025-08-20T01:17:55.9933410Z 
2025-08-20T01:17:55.9933513Z <a id="price_importer.services_common.base"></a>
2025-08-20T01:17:55.9933696Z 
2025-08-20T01:17:55.9933786Z # price\_importer.services\_common.base
2025-08-20T01:17:55.9933951Z 
2025-08-20T01:17:55.9934044Z <a id="price_importer.normaliser"></a>
2025-08-20T01:17:55.9934200Z 
2025-08-20T01:17:55.9934281Z # price\_importer.normaliser
2025-08-20T01:17:55.9934420Z 
2025-08-20T01:17:55.9934522Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T01:17:55.9934699Z 
2025-08-20T01:17:55.9934786Z # price\_importer.common.models\_vendor
2025-08-20T01:17:55.9934953Z 
2025-08-20T01:17:55.9935043Z <a id="price_importer.common.db_url"></a>
2025-08-20T01:17:55.9935215Z 
2025-08-20T01:17:55.9935310Z # price\_importer.common.db\_url
2025-08-20T01:17:55.9935453Z 
2025-08-20T01:17:55.9935556Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T01:17:55.9935743Z 
2025-08-20T01:17:55.9935811Z #### make\_dsn
2025-08-20T01:17:55.9935910Z 
2025-08-20T01:17:55.9935972Z ```python
2025-08-20T01:17:55.9936150Z def make_dsn(async_: bool = False) -> str
2025-08-20T01:17:55.9936373Z ```
2025-08-20T01:17:55.9936457Z 
2025-08-20T01:17:55.9936573Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T01:17:55.9936764Z 
2025-08-20T01:17:55.9936877Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T01:17:55.9937059Z 
2025-08-20T01:17:55.9937123Z #### build\_url
2025-08-20T01:17:55.9937229Z 
2025-08-20T01:17:55.9937290Z ```python
2025-08-20T01:17:55.9937674Z def build_url(async_: bool = False) -> str
2025-08-20T01:17:55.9937907Z ```
2025-08-20T01:17:55.9937988Z 
2025-08-20T01:17:55.9938113Z Return Postgres DSN built from environment variables.
2025-08-20T01:17:55.9938451Z 
2025-08-20T01:17:55.9938538Z <a id="price_importer.common"></a>
2025-08-20T01:17:55.9938695Z 
2025-08-20T01:17:55.9938771Z # price\_importer.common
2025-08-20T01:17:55.9938895Z 
2025-08-20T01:17:55.9938984Z <a id="price_importer.common.base"></a>
2025-08-20T01:17:55.9939149Z 
2025-08-20T01:17:55.9939231Z # price\_importer.common.base
2025-08-20T01:17:55.9939371Z 
2025-08-20T01:17:55.9939472Z <a id="price_importer.tests.conftest"></a>
2025-08-20T01:17:55.9939641Z 
2025-08-20T01:17:55.9939725Z # price\_importer.tests.conftest
2025-08-20T01:17:55.9939874Z 
2025-08-20T01:17:55.9939972Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T01:17:55.9940145Z 
2025-08-20T01:17:55.9940231Z # price\_importer.tests.test\_reader
2025-08-20T01:17:55.9940392Z 
2025-08-20T01:17:55.9940492Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T01:17:55.9940696Z 
2025-08-20T01:17:55.9940794Z # price\_importer.tests.test\_imports
2025-08-20T01:17:55.9940950Z 
2025-08-20T01:17:55.9941051Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T01:17:55.9941231Z 
2025-08-20T01:17:55.9941319Z # price\_importer.tests.test\_smoke
2025-08-20T01:17:55.9941474Z 
2025-08-20T01:17:55.9941579Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T01:17:55.9941767Z 
2025-08-20T01:17:55.9941857Z # price\_importer.tests.test\_normaliser
2025-08-20T01:17:55.9942021Z 
2025-08-20T01:17:55.9942112Z <a id="price_importer.tests"></a>
2025-08-20T01:17:55.9942258Z 
2025-08-20T01:17:55.9942332Z # price\_importer.tests
2025-08-20T01:17:55.9942460Z 
2025-08-20T01:17:55.9942545Z <a id="price_importer.reader"></a>
2025-08-20T01:17:55.9942692Z 
2025-08-20T01:17:55.9942769Z # price\_importer.reader
2025-08-20T01:17:55.9942899Z 
2025-08-20T01:17:55.9942989Z <a id="price_importer.repository"></a>
2025-08-20T01:17:55.9943147Z 
2025-08-20T01:17:55.9943233Z # price\_importer.repository
2025-08-20T01:17:55.9943368Z 
2025-08-20T01:17:55.9943450Z <a id="price_importer.import"></a>
2025-08-20T01:17:55.9943605Z 
2025-08-20T01:17:55.9943680Z # price\_importer.import
2025-08-20T01:17:55.9943919Z 
2025-08-20T01:17:55.9943988Z <a id="fees_h10"></a>
2025-08-20T01:17:55.9944106Z 
2025-08-20T01:17:55.9944173Z # fees\_h10
2025-08-20T01:17:55.9944270Z 
2025-08-20T01:17:55.9944349Z <a id="fees_h10.worker"></a>
2025-08-20T01:17:55.9944478Z 
2025-08-20T01:17:55.9944542Z # fees\_h10.worker
2025-08-20T01:17:55.9944646Z 
2025-08-20T01:17:55.9944744Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T01:17:55.9944913Z 
2025-08-20T01:17:55.9944984Z #### list\_active\_asins
2025-08-20T01:17:55.9945106Z 
2025-08-20T01:17:55.9945167Z ```python
2025-08-20T01:17:55.9945331Z def list_active_asins() -> list[str]
2025-08-20T01:17:55.9945539Z ```
2025-08-20T01:17:55.9945617Z 
2025-08-20T01:17:55.9945735Z Return known ASINs or an empty list if unavailable.
2025-08-20T01:17:55.9945923Z 
2025-08-20T01:17:55.9946061Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T01:17:55.9946226Z 
2025-08-20T01:17:55.9946304Z # fees\_h10.tests.test\_smoke
2025-08-20T01:17:55.9946444Z 
2025-08-20T01:17:55.9946525Z <a id="fees_h10.tests"></a>
2025-08-20T01:17:55.9946656Z 
2025-08-20T01:17:55.9946721Z # fees\_h10.tests
2025-08-20T01:17:55.9946823Z 
2025-08-20T01:17:55.9946905Z <a id="fees_h10.client"></a>
2025-08-20T01:17:55.9947035Z 
2025-08-20T01:17:55.9947102Z # fees\_h10.client
2025-08-20T01:17:55.9947206Z 
2025-08-20T01:17:55.9947291Z <a id="fees_h10.repository"></a>
2025-08-20T01:17:55.9947545Z 
2025-08-20T01:17:55.9947617Z # fees\_h10.repository
2025-08-20T01:17:55.9947738Z 
2025-08-20T01:17:55.9947839Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T01:17:55.9948025Z 
2025-08-20T01:17:55.9948101Z #### upsert\_fees\_raw
2025-08-20T01:17:55.9948214Z 
2025-08-20T01:17:55.9948276Z ```python
2025-08-20T01:17:55.9948448Z def upsert_fees_raw(engine: Engine,
2025-08-20T01:17:55.9948687Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T01:17:55.9948928Z                     *,
2025-08-20T01:17:55.9949148Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T01:17:55.9949540Z ```
2025-08-20T01:17:55.9949622Z 
2025-08-20T01:17:55.9949700Z Idempotent upsert for fees.
2025-08-20T01:17:55.9949838Z 
2025-08-20T01:17:55.9949989Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T01:17:55.9950329Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T01:17:55.9950630Z Only updates when one of the mutable fields changes.
2025-08-20T01:17:55.9950827Z 
2025-08-20T01:17:55.9950897Z <a id="emailer"></a>
2025-08-20T01:17:55.9951006Z 
2025-08-20T01:17:55.9951069Z # emailer
2025-08-20T01:17:55.9951164Z 
2025-08-20T01:17:55.9951262Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T01:17:55.9951436Z 
2025-08-20T01:17:55.9951528Z # emailer.tests.test\_import\_emailer
2025-08-20T01:17:55.9951683Z 
2025-08-20T01:17:55.9951767Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T01:17:55.9952143Z 
2025-08-20T01:17:55.9970394Z # emailer.tests.test\_smoke
2025-08-20T01:17:55.9970580Z 
2025-08-20T01:17:55.9970684Z <a id="emailer.tests"></a>
2025-08-20T01:17:55.9970837Z 
2025-08-20T01:17:55.9970908Z # emailer.tests
2025-08-20T01:17:55.9971018Z 
2025-08-20T01:17:55.9971110Z <a id="emailer.generate_body"></a>
2025-08-20T01:17:55.9971276Z 
2025-08-20T01:17:55.9971356Z # emailer.generate\_body
2025-08-20T01:17:55.9971490Z 
2025-08-20T01:17:55.9971573Z <a id="llm_server"></a>
2025-08-20T01:17:55.9971695Z 
2025-08-20T01:17:55.9971761Z # llm\_server
2025-08-20T01:17:55.9971867Z 
2025-08-20T01:17:55.9971948Z <a id="llm_server.app"></a>
2025-08-20T01:17:55.9972082Z 
2025-08-20T01:17:55.9972151Z # llm\_server.app
2025-08-20T01:17:55.9972264Z 
