2025-08-20T14:35:51.8166039Z ##[group]Run pydoc-markdown
2025-08-20T14:35:51.8166382Z [36;1mpydoc-markdown[0m
2025-08-20T14:35:51.8207506Z shell: /usr/bin/bash -e {0}
2025-08-20T14:35:51.8207747Z env:
2025-08-20T14:35:51.8207998Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:35:51.8208421Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-20T14:35:51.8208823Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:35:51.8209170Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:35:51.8209527Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-20T14:35:51.8209880Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-20T14:35:51.8210175Z ##[endgroup]
2025-08-20T14:35:52.1141950Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-20T14:35:52.1142669Z Unknown key(s) "{'output_directory'}" at:
2025-08-20T14:35:52.1143163Z In "pydoc-markdown.yml"
2025-08-20T14:35:52.1143618Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-20T14:35:52.1144329Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-20T14:35:52.1145132Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-20T14:35:52.1146306Z 
2025-08-20T14:35:52.4613766Z <a id="__init__"></a>
2025-08-20T14:35:52.4614168Z 
2025-08-20T14:35:52.4614330Z # \_\_init\_\_
2025-08-20T14:35:52.4614559Z 
2025-08-20T14:35:52.4614716Z <a id="api"></a>
2025-08-20T14:35:52.4614951Z 
2025-08-20T14:35:52.4615088Z # api
2025-08-20T14:35:52.4615649Z 
2025-08-20T14:35:52.4615833Z <a id="api.errors"></a>
2025-08-20T14:35:52.4616129Z 
2025-08-20T14:35:52.4616281Z # api.errors
2025-08-20T14:35:52.4616511Z 
2025-08-20T14:35:52.4616703Z <a id="api.sentry_config"></a>
2025-08-20T14:35:52.4617005Z 
2025-08-20T14:35:52.4617171Z # api.sentry\_config
2025-08-20T14:35:52.4617438Z 
2025-08-20T14:35:52.4617668Z <a id="api.tests.test_stats_contracts"></a>
2025-08-20T14:35:52.4618110Z 
2025-08-20T14:35:52.4618294Z # api.tests.test\_stats\_contracts
2025-08-20T14:35:52.4618699Z 
2025-08-20T14:35:52.4618829Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-20T14:35:52.4619206Z 
2025-08-20T14:35:52.4619415Z # api.tests.test\_sentry\_scrub
2025-08-20T14:35:52.4619744Z 
2025-08-20T14:35:52.4619910Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-20T14:35:52.4620149Z 
2025-08-20T14:35:52.4620262Z # api.tests.test\_roi\_basic\_auth
2025-08-20T14:35:52.4620464Z 
2025-08-20T14:35:52.4620580Z <a id="api.tests.test_errors_json"></a>
2025-08-20T14:35:52.4620804Z 
2025-08-20T14:35:52.4620913Z # api.tests.test\_errors\_json
2025-08-20T14:35:52.4621099Z 
2025-08-20T14:35:52.4621212Z <a id="api.tests.test_llm"></a>
2025-08-20T14:35:52.4621396Z 
2025-08-20T14:35:52.4621494Z # api.tests.test\_llm
2025-08-20T14:35:52.4621656Z 
2025-08-20T14:35:52.4621772Z <a id="api.tests.test_roi_filters"></a>
2025-08-20T14:35:52.4622137Z 
2025-08-20T14:35:52.4622314Z # api.tests.test\_roi\_filters
2025-08-20T14:35:52.4622637Z 
2025-08-20T14:35:52.4622843Z <a id="api.tests.test_sentry_event"></a>
2025-08-20T14:35:52.4623571Z 
2025-08-20T14:35:52.4623736Z # api.tests.test\_sentry\_event
2025-08-20T14:35:52.4623990Z 
2025-08-20T14:35:52.4624204Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-20T14:35:52.4624562Z 
2025-08-20T14:35:52.4624701Z ## DummyTransport Objects
2025-08-20T14:35:52.4624924Z 
2025-08-20T14:35:52.4625039Z ```python
2025-08-20T14:35:52.4625512Z class DummyTransport()
2025-08-20T14:35:52.4625836Z ```
2025-08-20T14:35:52.4625982Z 
2025-08-20T14:35:52.4626280Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-20T14:35:52.4626702Z 
2025-08-20T14:35:52.4626790Z #### capture\_envelope
2025-08-20T14:35:52.4626917Z 
2025-08-20T14:35:52.4626984Z ```python
2025-08-20T14:35:52.4627177Z def capture_envelope(envelope)
2025-08-20T14:35:52.4627389Z ```
2025-08-20T14:35:52.4627484Z 
2025-08-20T14:35:52.4627613Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-20T14:35:52.4627833Z 
2025-08-20T14:35:52.4627930Z <a id="api.tests.test_cors"></a>
2025-08-20T14:35:52.4628325Z 
2025-08-20T14:35:52.4628403Z # api.tests.test\_cors
2025-08-20T14:35:52.4628526Z 
2025-08-20T14:35:52.4628621Z <a id="api.tests.test_imports"></a>
2025-08-20T14:35:52.4628785Z 
2025-08-20T14:35:52.4628869Z # api.tests.test\_imports
2025-08-20T14:35:52.4629015Z 
2025-08-20T14:35:52.4629110Z <a id="api.tests.test_rate_limit"></a>
2025-08-20T14:35:52.4629282Z 
2025-08-20T14:35:52.4629373Z # api.tests.test\_rate\_limit
2025-08-20T14:35:52.4629519Z 
2025-08-20T14:35:52.4629621Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-20T14:35:52.4629800Z 
2025-08-20T14:35:52.4629877Z #### app
2025-08-20T14:35:52.4629970Z 
2025-08-20T14:35:52.4630037Z noqa: E402
2025-08-20T14:35:52.4630140Z 
2025-08-20T14:35:52.4630230Z <a id="api.tests.test_stats_sql"></a>
2025-08-20T14:35:52.4630393Z 
2025-08-20T14:35:52.4630483Z # api.tests.test\_stats\_sql
2025-08-20T14:35:52.4630624Z 
2025-08-20T14:35:52.4630714Z <a id="api.tests.test_entrypoint"></a>
2025-08-20T14:35:52.4630890Z 
2025-08-20T14:35:52.4630982Z # api.tests.test\_entrypoint
2025-08-20T14:35:52.4631123Z 
2025-08-20T14:35:52.4631237Z <a id="api.tests.test_stats_future_contracts"></a>
2025-08-20T14:35:52.4631442Z 
2025-08-20T14:35:52.4631538Z # api.tests.test\_stats\_future\_contracts
2025-08-20T14:35:52.4631716Z 
2025-08-20T14:35:52.4631810Z <a id="api.tests.test_health"></a>
2025-08-20T14:35:52.4631969Z 
2025-08-20T14:35:52.4632050Z # api.tests.test\_health
2025-08-20T14:35:52.4632180Z 
2025-08-20T14:35:52.4632275Z <a id="api.tests.test_score"></a>
2025-08-20T14:35:52.4632428Z 
2025-08-20T14:35:52.4632507Z # api.tests.test\_score
2025-08-20T14:35:52.4632642Z 
2025-08-20T14:35:52.4632727Z <a id="api.logging_config"></a>
2025-08-20T14:35:52.4632871Z 
2025-08-20T14:35:52.4632946Z # api.logging\_config
2025-08-20T14:35:52.4633075Z 
2025-08-20T14:35:52.4633159Z <a id="api.migrations.env"></a>
2025-08-20T14:35:52.4633305Z 
2025-08-20T14:35:52.4633390Z # api.migrations.env
2025-08-20T14:35:52.4633511Z 
2025-08-20T14:35:52.4633642Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-20T14:35:52.4633859Z 
2025-08-20T14:35:52.4633972Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-20T14:35:52.4634162Z 
2025-08-20T14:35:52.4634275Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-20T14:35:52.4634474Z 
2025-08-20T14:35:52.4634571Z # api.migrations.versions.0004\_fee\_cron
2025-08-20T14:35:52.4634749Z 
2025-08-20T14:35:52.4634912Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-20T14:35:52.4635343Z 
2025-08-20T14:35:52.4635542Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-20T14:35:52.4635781Z 
2025-08-20T14:35:52.4635913Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-20T14:35:52.4636124Z 
2025-08-20T14:35:52.4636245Z # api.migrations.versions.0003\_vendor\_prices
2025-08-20T14:35:52.4636434Z 
2025-08-20T14:35:52.4636557Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-20T14:35:52.4636782Z 
2025-08-20T14:35:52.4636890Z # api.migrations.versions.0024\_create\_buybox
2025-08-20T14:35:52.4637278Z 
2025-08-20T14:35:52.4637412Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-20T14:35:52.4637623Z 
2025-08-20T14:35:52.4637736Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-20T14:35:52.4637934Z 
2025-08-20T14:35:52.4638055Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-20T14:35:52.4638252Z 
2025-08-20T14:35:52.4638361Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-20T14:35:52.4638558Z 
2025-08-20T14:35:52.4638683Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-20T14:35:52.4638887Z 
2025-08-20T14:35:52.4639000Z # api.migrations.versions.0020\_unified\_schema
2025-08-20T14:35:52.4639187Z 
2025-08-20T14:35:52.4639329Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-20T14:35:52.4639555Z 
2025-08-20T14:35:52.4639679Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-20T14:35:52.4639881Z 
2025-08-20T14:35:52.4640012Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-20T14:35:52.4640352Z 
2025-08-20T14:35:52.4640464Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-20T14:35:52.4640657Z 
2025-08-20T14:35:52.4640803Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-20T14:35:52.4641025Z 
2025-08-20T14:35:52.4641145Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-20T14:35:52.4641352Z 
2025-08-20T14:35:52.4641466Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-20T14:35:52.4641660Z 
2025-08-20T14:35:52.4641763Z # api.migrations.versions.0001\_baseline
2025-08-20T14:35:52.4641952Z 
2025-08-20T14:35:52.4642045Z <a id="api.migrations.versions"></a>
2025-08-20T14:35:52.4642266Z 
2025-08-20T14:35:52.4642351Z # api.migrations.versions
2025-08-20T14:35:52.4642485Z 
2025-08-20T14:35:52.4642568Z <a id="api.migrations"></a>
2025-08-20T14:35:52.4642712Z 
2025-08-20T14:35:52.4642784Z # api.migrations
2025-08-20T14:35:52.4642896Z 
2025-08-20T14:35:52.4642976Z <a id="api.db"></a>
2025-08-20T14:35:52.4643101Z 
2025-08-20T14:35:52.4643169Z # api.db
2025-08-20T14:35:52.4643262Z 
2025-08-20T14:35:52.4643353Z <a id="api.routes.score"></a>
2025-08-20T14:35:52.4643498Z 
2025-08-20T14:35:52.4643570Z # api.routes.score
2025-08-20T14:35:52.4643687Z 
2025-08-20T14:35:52.4643777Z <a id="api.routes.stats"></a>
2025-08-20T14:35:52.4643918Z 
2025-08-20T14:35:52.4643994Z # api.routes.stats
2025-08-20T14:35:52.4644102Z 
2025-08-20T14:35:52.4644186Z <a id="api.routes.roi"></a>
2025-08-20T14:35:52.4644319Z 
2025-08-20T14:35:52.4644397Z # api.routes.roi
2025-08-20T14:35:52.4644505Z 
2025-08-20T14:35:52.4644590Z <a id="api.routes.health"></a>
2025-08-20T14:35:52.4644743Z 
2025-08-20T14:35:52.4644817Z # api.routes.health
2025-08-20T14:35:52.4644932Z 
2025-08-20T14:35:52.4645026Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-20T14:35:52.4645416Z 
2025-08-20T14:35:52.4645530Z #### MAX\_SKEW
2025-08-20T14:35:52.4645644Z 
2025-08-20T14:35:52.4645719Z seconds
2025-08-20T14:35:52.4645809Z 
2025-08-20T14:35:52.4645908Z <a id="api.routes.health.health"></a>
2025-08-20T14:35:52.4646095Z 
2025-08-20T14:35:52.4646162Z #### health
2025-08-20T14:35:52.4646258Z 
2025-08-20T14:35:52.4646326Z ```python
2025-08-20T14:35:52.4646542Z @router.get("/health", include_in_schema=False)
2025-08-20T14:35:52.4646954Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-20T14:35:52.4647304Z ```
2025-08-20T14:35:52.4647392Z 
2025-08-20T14:35:52.4647522Z Return 200 when DB reachable and clocks are in sync.
2025-08-20T14:35:52.4647723Z 
2025-08-20T14:35:52.4647821Z <a id="api.routes.repository"></a>
2025-08-20T14:35:52.4647990Z 
2025-08-20T14:35:52.4648071Z # api.routes.repository
2025-08-20T14:35:52.4648199Z 
2025-08-20T14:35:52.4648275Z <a id="api.routes"></a>
2025-08-20T14:35:52.4648403Z 
2025-08-20T14:35:52.4648474Z # api.routes
2025-08-20T14:35:52.4648573Z 
2025-08-20T14:35:52.4648664Z <a id="api.models.fee"></a>
2025-08-20T14:35:52.4648803Z 
2025-08-20T14:35:52.4648874Z # api.models.fee
2025-08-20T14:35:52.4648992Z 
2025-08-20T14:35:52.4649200Z <a id="api.models"></a>
2025-08-20T14:35:52.4649323Z 
2025-08-20T14:35:52.4649390Z # api.models
2025-08-20T14:35:52.4649493Z 
2025-08-20T14:35:52.4649577Z <a id="api.roi_repository"></a>
2025-08-20T14:35:52.4649722Z 
2025-08-20T14:35:52.4649802Z # api.roi\_repository
2025-08-20T14:35:52.4649921Z 
2025-08-20T14:35:52.4649992Z <a id="api.main"></a>
2025-08-20T14:35:52.4650108Z 
2025-08-20T14:35:52.4650181Z # api.main
2025-08-20T14:35:52.4650279Z 
2025-08-20T14:35:52.4650361Z <a id="api.main.ready"></a>
2025-08-20T14:35:52.4650502Z 
2025-08-20T14:35:52.4650569Z #### ready
2025-08-20T14:35:52.4650661Z 
2025-08-20T14:35:52.4650733Z ```python
2025-08-20T14:35:52.4650999Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-20T14:35:52.4651442Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-20T14:35:52.4651798Z                                                                       str]
2025-08-20T14:35:52.4652049Z ```
2025-08-20T14:35:52.4652256Z 
2025-08-20T14:35:52.4652359Z Return 200 only when migrations are at head.
2025-08-20T14:35:52.4652549Z 
2025-08-20T14:35:52.4652626Z <a id="api.config"></a>
2025-08-20T14:35:52.4652751Z 
2025-08-20T14:35:52.4652829Z # api.config
2025-08-20T14:35:52.4652926Z 
2025-08-20T14:35:52.4653007Z <a id="api.security"></a>
2025-08-20T14:35:52.4653138Z 
2025-08-20T14:35:52.4653214Z # api.security
2025-08-20T14:35:52.4653318Z 
2025-08-20T14:35:52.4653386Z <a id="etl"></a>
2025-08-20T14:35:52.4653500Z 
2025-08-20T14:35:52.4653564Z # etl
2025-08-20T14:35:52.4653667Z 
2025-08-20T14:35:52.4653817Z <a id="etl.fba_fee_ingestor"></a>
2025-08-20T14:35:52.4654060Z 
2025-08-20T14:35:52.4654141Z # etl.fba\_fee\_ingestor
2025-08-20T14:35:52.4654268Z 
2025-08-20T14:35:52.4654358Z <a id="etl.sp_fees_ingestor"></a>
2025-08-20T14:35:52.4654510Z 
2025-08-20T14:35:52.4654587Z # etl.sp\_fees\_ingestor
2025-08-20T14:35:52.4654718Z 
2025-08-20T14:35:52.4654802Z <a id="etl.keepa_ingestor"></a>
2025-08-20T14:35:52.4654959Z 
2025-08-20T14:35:52.4655034Z # etl.keepa\_ingestor
2025-08-20T14:35:52.4655318Z 
2025-08-20T14:35:52.4655413Z <a id="etl.db"></a>
2025-08-20T14:35:52.4655528Z 
2025-08-20T14:35:52.4655601Z # etl.db
2025-08-20T14:35:52.4655692Z 
2025-08-20T14:35:52.4655780Z <a id="etl.dialects.schemas"></a>
2025-08-20T14:35:52.4655939Z 
2025-08-20T14:35:52.4656016Z # etl.dialects.schemas
2025-08-20T14:35:52.4656139Z 
2025-08-20T14:35:52.4656251Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-20T14:35:52.4656451Z 
2025-08-20T14:35:52.4656545Z # etl.dialects.amazon\_reimbursements
2025-08-20T14:35:52.4656713Z 
2025-08-20T14:35:52.4656824Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-20T14:35:52.4657002Z 
2025-08-20T14:35:52.4657093Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-20T14:35:52.4657260Z 
2025-08-20T14:35:52.4657353Z <a id="etl.dialects.test_generic"></a>
2025-08-20T14:35:52.4657518Z 
2025-08-20T14:35:52.4657601Z # etl.dialects.test\_generic
2025-08-20T14:35:52.4657749Z 
2025-08-20T14:35:52.4657853Z <a id="etl.dialects.amazon_returns"></a>
2025-08-20T14:35:52.4658022Z 
2025-08-20T14:35:52.4658116Z # etl.dialects.amazon\_returns
2025-08-20T14:35:52.4658261Z 
2025-08-20T14:35:52.4658361Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-20T14:35:52.4658542Z 
2025-08-20T14:35:52.4658629Z # etl.dialects.amazon\_fee\_preview
2025-08-20T14:35:52.4658789Z 
2025-08-20T14:35:52.4658899Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-20T14:35:52.4659094Z 
2025-08-20T14:35:52.4659186Z # etl.dialects.amazon\_inventory\_ledger
2025-08-20T14:35:52.4659355Z 
2025-08-20T14:35:52.4659461Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-20T14:35:52.4659636Z 
2025-08-20T14:35:52.4659725Z # etl.dialects.amazon\_settlements
2025-08-20T14:35:52.4659886Z 
2025-08-20T14:35:52.4659965Z <a id="etl.dialects"></a>
2025-08-20T14:35:52.4660095Z 
2025-08-20T14:35:52.4660164Z # etl.dialects
2025-08-20T14:35:52.4660274Z 
2025-08-20T14:35:52.4660344Z <a id="ingest"></a>
2025-08-20T14:35:52.4660456Z 
2025-08-20T14:35:52.4660664Z # ingest
2025-08-20T14:35:52.4660757Z 
2025-08-20T14:35:52.4660844Z <a id="ingest.maintenance"></a>
2025-08-20T14:35:52.4660995Z 
2025-08-20T14:35:52.4661069Z # ingest.maintenance
2025-08-20T14:35:52.4661188Z 
2025-08-20T14:35:52.4661269Z <a id="ingest.copy_loader"></a>
2025-08-20T14:35:52.4661416Z 
2025-08-20T14:35:52.4661492Z # ingest.copy\_loader
2025-08-20T14:35:52.4661609Z 
2025-08-20T14:35:52.4661772Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-20T14:35:52.4662032Z 
2025-08-20T14:35:52.4662111Z #### copy\_df\_via\_temp
2025-08-20T14:35:52.4662239Z 
2025-08-20T14:35:52.4662315Z ```python
2025-08-20T14:35:52.4662497Z def copy_df_via_temp(engine: Engine,
2025-08-20T14:35:52.4662749Z                      df: pd.DataFrame,
2025-08-20T14:35:52.4662988Z                      target_table: str,
2025-08-20T14:35:52.4663220Z                      *,
2025-08-20T14:35:52.4663439Z                      target_schema: Optional[str] = None,
2025-08-20T14:35:52.4663710Z                      columns: Sequence[str],
2025-08-20T14:35:52.4664125Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T14:35:52.4664435Z                      analyze_after: bool = False,
2025-08-20T14:35:52.4664940Z                      connection: Any | None = None) -> int
2025-08-20T14:35:52.4665363Z ```
2025-08-20T14:35:52.4665462Z 
2025-08-20T14:35:52.4665627Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-20T14:35:52.4665864Z 
2025-08-20T14:35:52.4665960Z <a id="ingest.tests.test_smoke"></a>
2025-08-20T14:35:52.4666127Z 
2025-08-20T14:35:52.4666212Z # ingest.tests.test\_smoke
2025-08-20T14:35:52.4666344Z 
2025-08-20T14:35:52.4666429Z <a id="ingest.tests"></a>
2025-08-20T14:35:52.4666560Z 
2025-08-20T14:35:52.4666630Z # ingest.tests
2025-08-20T14:35:52.4666740Z 
2025-08-20T14:35:52.4666827Z <a id="ingest.upload_router"></a>
2025-08-20T14:35:52.4666978Z 
2025-08-20T14:35:52.4667062Z # ingest.upload\_router
2025-08-20T14:35:52.4667187Z 
2025-08-20T14:35:52.4667280Z <a id="ingest.email_watcher"></a>
2025-08-20T14:35:52.4667432Z 
2025-08-20T14:35:52.4667516Z # ingest.email\_watcher
2025-08-20T14:35:52.4667636Z 
2025-08-20T14:35:52.4667725Z <a id="ingest.email_watcher.main"></a>
2025-08-20T14:35:52.4667896Z 
2025-08-20T14:35:52.4667962Z #### main
2025-08-20T14:35:52.4668055Z 
2025-08-20T14:35:52.4668125Z ```python
2025-08-20T14:35:52.4668302Z def main() -> dict[str, str]
2025-08-20T14:35:52.4668505Z ```
2025-08-20T14:35:52.4668592Z 
2025-08-20T14:35:52.4668734Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-20T14:35:52.4668962Z 
2025-08-20T14:35:52.4669097Z Returns {"status": "success"} when processing completes.
2025-08-20T14:35:52.4669310Z 
2025-08-20T14:35:52.4669390Z <a id="ingest.tasks"></a>
2025-08-20T14:35:52.4669526Z 
2025-08-20T14:35:52.4669595Z # ingest.tasks
2025-08-20T14:35:52.4669716Z 
2025-08-20T14:35:52.4669817Z <a id="ingest.tasks.task_import_file"></a>
2025-08-20T14:35:52.4669996Z 
2025-08-20T14:35:52.4670082Z #### task\_import\_file
2025-08-20T14:35:52.4670212Z 
2025-08-20T14:35:52.4670278Z ```python
2025-08-20T14:35:52.4670499Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-20T14:35:52.4670788Z def task_import_file(self: Any,
2025-08-20T14:35:52.4671007Z                      uri: str,
2025-08-20T14:35:52.4671231Z                      report_type: str | None = None,
2025-08-20T14:35:52.4671510Z                      force: bool = False) -> dict[str, Any]
2025-08-20T14:35:52.4671757Z ```
2025-08-20T14:35:52.4671842Z 
2025-08-20T14:35:52.4671974Z Import a file into Postgres using existing ETL pipeline.
2025-08-20T14:35:52.4672188Z 
2025-08-20T14:35:52.4672277Z <a id="ingest.celery_app"></a>
2025-08-20T14:35:52.4672419Z 
2025-08-20T14:35:52.4672494Z # ingest.celery\_app
2025-08-20T14:35:52.4672618Z 
2025-08-20T14:35:52.4672703Z <a id="ingest.ingest_router"></a>
2025-08-20T14:35:52.4672854Z 
2025-08-20T14:35:52.4672937Z # ingest.ingest\_router
2025-08-20T14:35:52.4673058Z 
2025-08-20T14:35:52.4673136Z <a id="logistics_etl"></a>
2025-08-20T14:35:52.4673418Z 
2025-08-20T14:35:52.4673495Z # logistics\_etl
2025-08-20T14:35:52.4673605Z 
2025-08-20T14:35:52.4673685Z Daily logistics ETL job.
2025-08-20T14:35:52.4673824Z 
2025-08-20T14:35:52.4673907Z <a id="logistics_etl.__main__"></a>
2025-08-20T14:35:52.4674063Z 
2025-08-20T14:35:52.4674142Z # logistics\_etl.\_\_main\_\_
2025-08-20T14:35:52.4674288Z 
2025-08-20T14:35:52.4674370Z <a id="logistics_etl.dsn"></a>
2025-08-20T14:35:52.4674509Z 
2025-08-20T14:35:52.4674588Z # logistics\_etl.dsn
2025-08-20T14:35:52.4674701Z 
2025-08-20T14:35:52.4674820Z Local DSN builder to avoid cross-service dependency.
2025-08-20T14:35:52.4675031Z 
2025-08-20T14:35:52.4675125Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-20T14:35:52.4675542Z 
2025-08-20T14:35:52.4675615Z #### build\_dsn
2025-08-20T14:35:52.4675730Z 
2025-08-20T14:35:52.4675797Z ```python
2025-08-20T14:35:52.4675986Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:35:52.4676216Z ```
2025-08-20T14:35:52.4676301Z 
2025-08-20T14:35:52.4676587Z Return a Postgres DSN assembled from environment variables.
2025-08-20T14:35:52.4676818Z 
2025-08-20T14:35:52.4676973Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-20T14:35:52.4677381Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-20T14:35:52.4677730Z error when any required variable is missing.
2025-08-20T14:35:52.4677916Z 
2025-08-20T14:35:52.4678012Z <a id="logistics_etl.tests.conftest"></a>
2025-08-20T14:35:52.4678187Z 
2025-08-20T14:35:52.4678280Z # logistics\_etl.tests.conftest
2025-08-20T14:35:52.4678428Z 
2025-08-20T14:35:52.4678536Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-20T14:35:52.4678733Z 
2025-08-20T14:35:52.4678825Z # logistics\_etl.tests.test\_repository
2025-08-20T14:35:52.4678995Z 
2025-08-20T14:35:52.4679098Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-20T14:35:52.4679277Z 
2025-08-20T14:35:52.4679365Z # logistics\_etl.tests.test\_cron
2025-08-20T14:35:52.4679519Z 
2025-08-20T14:35:52.4679624Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-20T14:35:52.4679814Z 
2025-08-20T14:35:52.4679902Z # logistics\_etl.tests.test\_imports
2025-08-20T14:35:52.4680067Z 
2025-08-20T14:35:52.4680162Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-20T14:35:52.4680336Z 
2025-08-20T14:35:52.4680428Z # logistics\_etl.tests.test\_smoke
2025-08-20T14:35:52.4680587Z 
2025-08-20T14:35:52.4680684Z <a id="logistics_etl.tests.test_client"></a>
2025-08-20T14:35:52.4680858Z 
2025-08-20T14:35:52.4680951Z # logistics\_etl.tests.test\_client
2025-08-20T14:35:52.4681110Z 
2025-08-20T14:35:52.4681194Z <a id="logistics_etl.tests"></a>
2025-08-20T14:35:52.4681349Z 
2025-08-20T14:35:52.4681424Z # logistics\_etl.tests
2025-08-20T14:35:52.4681547Z 
2025-08-20T14:35:52.4681632Z <a id="logistics_etl.flow"></a>
2025-08-20T14:35:52.4681780Z 
2025-08-20T14:35:52.4681854Z # logistics\_etl.flow
2025-08-20T14:35:52.4681972Z 
2025-08-20T14:35:52.4682065Z <a id="logistics_etl.client"></a>
2025-08-20T14:35:52.4682216Z 
2025-08-20T14:35:52.4754293Z # logistics\_etl.client
2025-08-20T14:35:52.4754610Z 
2025-08-20T14:35:52.4754788Z <a id="logistics_etl.cron"></a>
2025-08-20T14:35:52.4755110Z 
2025-08-20T14:35:52.4755464Z # logistics\_etl.cron
2025-08-20T14:35:52.4755728Z 
2025-08-20T14:35:52.4755899Z <a id="logistics_etl.db"></a>
2025-08-20T14:35:52.4756199Z 
2025-08-20T14:35:52.4756356Z # logistics\_etl.db
2025-08-20T14:35:52.4756588Z 
2025-08-20T14:35:52.4756777Z <a id="logistics_etl.repository"></a>
2025-08-20T14:35:52.4757006Z 
2025-08-20T14:35:52.4757114Z # logistics\_etl.repository
2025-08-20T14:35:52.4757288Z 
2025-08-20T14:35:52.4757387Z <a id="alert_bot"></a>
2025-08-20T14:35:52.4757538Z 
2025-08-20T14:35:52.4757622Z # alert\_bot
2025-08-20T14:35:52.4757748Z 
2025-08-20T14:35:52.4757867Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-20T14:35:52.4758103Z 
2025-08-20T14:35:52.4758214Z # alert\_bot.tests.test\_smoke
2025-08-20T14:35:52.4758396Z 
2025-08-20T14:35:52.4758499Z <a id="alert_bot.tests"></a>
2025-08-20T14:35:52.4758675Z 
2025-08-20T14:35:52.4758961Z # alert\_bot.tests
2025-08-20T14:35:52.4759101Z 
2025-08-20T14:35:52.4759283Z <a id="alert_bot.alert_bot"></a>
2025-08-20T14:35:52.4759479Z 
2025-08-20T14:35:52.4759574Z # alert\_bot.alert\_bot
2025-08-20T14:35:52.4759727Z 
2025-08-20T14:35:52.4759834Z <a id="alert_bot.rules"></a>
2025-08-20T14:35:52.4760005Z 
2025-08-20T14:35:52.4760091Z # alert\_bot.rules
2025-08-20T14:35:52.4760229Z 
2025-08-20T14:35:52.4760325Z <a id="common"></a>
2025-08-20T14:35:52.4760465Z 
2025-08-20T14:35:52.4760545Z # common
2025-08-20T14:35:52.4760663Z 
2025-08-20T14:35:52.4760756Z <a id="common.dsn"></a>
2025-08-20T14:35:52.4760908Z 
2025-08-20T14:35:52.4760990Z # common.dsn
2025-08-20T14:35:52.4761123Z 
2025-08-20T14:35:52.4761231Z <a id="common.dsn.build_dsn"></a>
2025-08-20T14:35:52.4761422Z 
2025-08-20T14:35:52.4761513Z #### build\_dsn
2025-08-20T14:35:52.4761644Z 
2025-08-20T14:35:52.4761728Z ```python
2025-08-20T14:35:52.4761963Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:35:52.4762249Z ```
2025-08-20T14:35:52.4762660Z 
2025-08-20T14:35:52.4762859Z Return a Postgres DSN, validating required variables.
2025-08-20T14:35:52.4763125Z 
2025-08-20T14:35:52.4763365Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-20T14:35:52.4763926Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-20T14:35:52.4764363Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-20T14:35:52.4764679Z missing.
2025-08-20T14:35:52.4764780Z 
2025-08-20T14:35:52.4764867Z <a id="common.models_vendor"></a>
2025-08-20T14:35:52.4765022Z 
2025-08-20T14:35:52.4765099Z # common.models\_vendor
2025-08-20T14:35:52.4765365Z 
2025-08-20T14:35:52.4765461Z <a id="common.models_vendor.Vendor"></a>
2025-08-20T14:35:52.4765635Z 
2025-08-20T14:35:52.4765715Z ## Vendor Objects
2025-08-20T14:35:52.4765825Z 
2025-08-20T14:35:52.4765890Z ```python
2025-08-20T14:35:52.4766053Z class Vendor(Base)
2025-08-20T14:35:52.4766223Z ```
2025-08-20T14:35:52.4766324Z 
2025-08-20T14:35:52.4766411Z Vendor of inventory items.
2025-08-20T14:35:52.4766547Z 
2025-08-20T14:35:52.4766653Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-20T14:35:52.4766842Z 
2025-08-20T14:35:52.4766918Z ## VendorPrice Objects
2025-08-20T14:35:52.4767041Z 
2025-08-20T14:35:52.4767111Z ```python
2025-08-20T14:35:52.4767279Z class VendorPrice(Base)
2025-08-20T14:35:52.4767471Z ```
2025-08-20T14:35:52.4767555Z 
2025-08-20T14:35:52.4767662Z Association table linking vendors to pricing.
2025-08-20T14:35:52.4767854Z 
2025-08-20T14:35:52.4767933Z <a id="common.db_url"></a>
2025-08-20T14:35:52.4768064Z 
2025-08-20T14:35:52.4768134Z # common.db\_url
2025-08-20T14:35:52.4768249Z 
2025-08-20T14:35:52.4768335Z <a id="common.db_url.build_url"></a>
2025-08-20T14:35:52.4768496Z 
2025-08-20T14:35:52.4768570Z #### build\_url
2025-08-20T14:35:52.4768675Z 
2025-08-20T14:35:52.4768741Z ```python
2025-08-20T14:35:52.4768930Z def build_url(async_: bool = True) -> str
2025-08-20T14:35:52.4769161Z ```
2025-08-20T14:35:52.4769261Z 
2025-08-20T14:35:52.4769362Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:35:52.4769541Z 
2025-08-20T14:35:52.4769628Z <a id="common.keepa"></a>
2025-08-20T14:35:52.4769762Z 
2025-08-20T14:35:52.4769833Z # common.keepa
2025-08-20T14:35:52.4769938Z 
2025-08-20T14:35:52.4770020Z <a id="common.llm"></a>
2025-08-20T14:35:52.4770139Z 
2025-08-20T14:35:52.4770206Z # common.llm
2025-08-20T14:35:52.4770310Z 
2025-08-20T14:35:52.4770392Z <a id="common.settings"></a>
2025-08-20T14:35:52.4770531Z 
2025-08-20T14:35:52.4770602Z # common.settings
2025-08-20T14:35:52.4770720Z 
2025-08-20T14:35:52.4770794Z <a id="common.db"></a>
2025-08-20T14:35:52.4770914Z 
2025-08-20T14:35:52.4770986Z # common.db
2025-08-20T14:35:52.4771081Z 
2025-08-20T14:35:52.4771176Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-20T14:35:52.4771356Z 
2025-08-20T14:35:52.4771437Z #### build\_sqlalchemy\_url
2025-08-20T14:35:52.4771572Z 
2025-08-20T14:35:52.4771639Z ```python
2025-08-20T14:35:52.4771824Z def build_sqlalchemy_url() -> str
2025-08-20T14:35:52.4772176Z ```
2025-08-20T14:35:52.4772270Z 
2025-08-20T14:35:52.4772369Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:35:52.4772546Z 
2025-08-20T14:35:52.4772644Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-20T14:35:52.4772814Z 
2025-08-20T14:35:52.4772892Z #### build\_asyncpg\_dsn
2025-08-20T14:35:52.4773027Z 
2025-08-20T14:35:52.4773093Z ```python
2025-08-20T14:35:52.4773267Z def build_asyncpg_dsn() -> str
2025-08-20T14:35:52.4773476Z ```
2025-08-20T14:35:52.4773560Z 
2025-08-20T14:35:52.4773691Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:35:52.4773914Z 
2025-08-20T14:35:52.4774003Z <a id="common.db.refresh_mvs"></a>
2025-08-20T14:35:52.4774167Z 
2025-08-20T14:35:52.4774242Z #### refresh\_mvs
2025-08-20T14:35:52.4774349Z 
2025-08-20T14:35:52.4774414Z ```python
2025-08-20T14:35:52.4774617Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:35:52.4774874Z ```
2025-08-20T14:35:52.4774964Z 
2025-08-20T14:35:52.4775323Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:35:52.4775554Z 
2025-08-20T14:35:52.4775638Z <a id="common.config"></a>
2025-08-20T14:35:52.4775771Z 
2025-08-20T14:35:52.4775846Z # common.config
2025-08-20T14:35:52.4775951Z 
2025-08-20T14:35:52.4776033Z <a id="common.base"></a>
2025-08-20T14:35:52.4776159Z 
2025-08-20T14:35:52.4776226Z # common.base
2025-08-20T14:35:52.4776335Z 
2025-08-20T14:35:52.4776423Z <a id="common.base.Base"></a>
2025-08-20T14:35:52.4776568Z 
2025-08-20T14:35:52.4776641Z ## Base Objects
2025-08-20T14:35:52.4776745Z 
2025-08-20T14:35:52.4776810Z ```python
2025-08-20T14:35:52.4776987Z class Base(DeclarativeBase)
2025-08-20T14:35:52.4777187Z ```
2025-08-20T14:35:52.4777271Z 
2025-08-20T14:35:52.4777363Z Base class for SQLAlchemy models.
2025-08-20T14:35:52.4777515Z 
2025-08-20T14:35:52.4777590Z <a id="repricer"></a>
2025-08-20T14:35:52.4777716Z 
2025-08-20T14:35:52.4777783Z # repricer
2025-08-20T14:35:52.4777878Z 
2025-08-20T14:35:52.4777973Z <a id="repricer.app.schemas"></a>
2025-08-20T14:35:52.4778141Z 
2025-08-20T14:35:52.4778220Z # repricer.app.schemas
2025-08-20T14:35:52.4778345Z 
2025-08-20T14:35:52.4778437Z <a id="repricer.app.deps"></a>
2025-08-20T14:35:52.4778584Z 
2025-08-20T14:35:52.4778660Z # repricer.app.deps
2025-08-20T14:35:52.4778782Z 
2025-08-20T14:35:52.4778900Z Placeholder module for Keepa / SP-API clients.
2025-08-20T14:35:52.4779089Z 
2025-08-20T14:35:52.4779180Z <a id="repricer.app.logic"></a>
2025-08-20T14:35:52.4779328Z 
2025-08-20T14:35:52.4779406Z # repricer.app.logic
2025-08-20T14:35:52.4779526Z 
2025-08-20T14:35:52.4779634Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-20T14:35:52.4779814Z 
2025-08-20T14:35:52.4779882Z #### MIN\_MARGIN
2025-08-20T14:35:52.4779995Z 
2025-08-20T14:35:52.4780061Z 15 % ROI
2025-08-20T14:35:52.4780152Z 
2025-08-20T14:35:52.4780257Z <a id="repricer.app.logic.compute_price"></a>
2025-08-20T14:35:52.4780455Z 
2025-08-20T14:35:52.4780528Z #### compute\_price
2025-08-20T14:35:52.4780638Z 
2025-08-20T14:35:52.4780720Z ```python
2025-08-20T14:35:52.4780970Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-20T14:35:52.4781282Z ```
2025-08-20T14:35:52.4781368Z 
2025-08-20T14:35:52.4781478Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-20T14:35:52.4781772Z Replace with real competitive logic later.
2025-08-20T14:35:52.4781949Z 
2025-08-20T14:35:52.4782036Z <a id="repricer.app.main"></a>
2025-08-20T14:35:52.4782188Z 
2025-08-20T14:35:52.4782265Z # repricer.app.main
2025-08-20T14:35:52.4782381Z 
2025-08-20T14:35:52.4782470Z <a id="repricer.app"></a>
2025-08-20T14:35:52.4782601Z 
2025-08-20T14:35:52.4782672Z # repricer.app
2025-08-20T14:35:52.4782784Z 
2025-08-20T14:35:52.4782880Z <a id="repricer.tests.test_imports"></a>
2025-08-20T14:35:52.4783056Z 
2025-08-20T14:35:52.4783141Z # repricer.tests.test\_imports
2025-08-20T14:35:52.4783292Z 
2025-08-20T14:35:52.4783385Z <a id="repricer.tests.test_smoke"></a>
2025-08-20T14:35:52.4783553Z 
2025-08-20T14:35:52.4783644Z # repricer.tests.test\_smoke
2025-08-20T14:35:52.4783915Z 
2025-08-20T14:35:52.4783997Z <a id="repricer.tests"></a>
2025-08-20T14:35:52.4784145Z 
2025-08-20T14:35:52.4784216Z # repricer.tests
2025-08-20T14:35:52.4784325Z 
2025-08-20T14:35:52.4784392Z <a id="db"></a>
2025-08-20T14:35:52.4784502Z 
2025-08-20T14:35:52.4784566Z # db
2025-08-20T14:35:52.4784652Z 
2025-08-20T14:35:52.4784738Z <a id="db.utils.views"></a>
2025-08-20T14:35:52.4784869Z 
2025-08-20T14:35:52.4784939Z # db.utils.views
2025-08-20T14:35:52.4785045Z 
2025-08-20T14:35:52.4785249Z <a id="db.utils.views.replace_view"></a>
2025-08-20T14:35:52.4785426Z 
2025-08-20T14:35:52.4785496Z #### replace\_view
2025-08-20T14:35:52.4785610Z 
2025-08-20T14:35:52.4785676Z ```python
2025-08-20T14:35:52.4785875Z def replace_view(name: str, new_sql: str) -> None
2025-08-20T14:35:52.4786131Z ```
2025-08-20T14:35:52.4786218Z 
2025-08-20T14:35:52.4786316Z Drop and recreate a SQL view atomically.
2025-08-20T14:35:52.4786486Z 
2025-08-20T14:35:52.4786562Z <a id="db.utils"></a>
2025-08-20T14:35:52.4786866Z 
2025-08-20T14:35:52.4786934Z # db.utils
2025-08-20T14:35:52.4787026Z 
2025-08-20T14:35:52.4787108Z <a id="price_importer"></a>
2025-08-20T14:35:52.4787252Z 
2025-08-20T14:35:52.4787322Z # price\_importer
2025-08-20T14:35:52.4787432Z 
2025-08-20T14:35:52.4787543Z <a id="price_importer.services_common.dsn"></a>
2025-08-20T14:35:52.4787733Z 
2025-08-20T14:35:52.4787828Z # price\_importer.services\_common.dsn
2025-08-20T14:35:52.4787995Z 
2025-08-20T14:35:52.4788131Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-20T14:35:52.4788343Z 
2025-08-20T14:35:52.4788410Z #### build\_dsn
2025-08-20T14:35:52.4788520Z 
2025-08-20T14:35:52.4788589Z ```python
2025-08-20T14:35:52.4788767Z def build_dsn(sync: bool = True) -> str
2025-08-20T14:35:52.4788995Z ```
2025-08-20T14:35:52.4789082Z 
2025-08-20T14:35:52.4789157Z Return safe DSN.
2025-08-20T14:35:52.4789265Z 
2025-08-20T14:35:52.4789617Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-20T14:35:52.4789833Z 
2025-08-20T14:35:52.4789980Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-20T14:35:52.4790192Z 
2025-08-20T14:35:52.4790307Z # price\_importer.services\_common.models\_vendor
2025-08-20T14:35:52.4790511Z 
2025-08-20T14:35:52.4790621Z <a id="price_importer.services_common.db_url"></a>
2025-08-20T14:35:52.4790814Z 
2025-08-20T14:35:52.4790919Z # price\_importer.services\_common.db\_url
2025-08-20T14:35:52.4791097Z 
2025-08-20T14:35:52.4791233Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-20T14:35:52.4791457Z 
2025-08-20T14:35:52.4791526Z #### build\_url
2025-08-20T14:35:52.4791629Z 
2025-08-20T14:35:52.4791696Z ```python
2025-08-20T14:35:52.4791887Z def build_url(async_: bool = True) -> str
2025-08-20T14:35:52.4792127Z ```
2025-08-20T14:35:52.4792212Z 
2025-08-20T14:35:52.4792312Z Return Postgres DSN from env or PG_* parts.
2025-08-20T14:35:52.4792489Z 
2025-08-20T14:35:52.4792604Z <a id="price_importer.services_common.keepa"></a>
2025-08-20T14:35:52.4792795Z 
2025-08-20T14:35:52.4792901Z # price\_importer.services\_common.keepa
2025-08-20T14:35:52.4793081Z 
2025-08-20T14:35:52.4793185Z <a id="price_importer.services_common.llm"></a>
2025-08-20T14:35:52.4793371Z 
2025-08-20T14:35:52.4793467Z # price\_importer.services\_common.llm
2025-08-20T14:35:52.4793635Z 
2025-08-20T14:35:52.4793754Z <a id="price_importer.services_common.settings"></a>
2025-08-20T14:35:52.4793954Z 
2025-08-20T14:35:52.4794068Z # price\_importer.services\_common.settings
2025-08-20T14:35:52.4794244Z 
2025-08-20T14:35:52.4794350Z <a id="price_importer.services_common.db"></a>
2025-08-20T14:35:52.4794537Z 
2025-08-20T14:35:52.4794629Z # price\_importer.services\_common.db
2025-08-20T14:35:52.4794799Z 
2025-08-20T14:35:52.4794965Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-20T14:35:52.4795326Z 
2025-08-20T14:35:52.4795409Z #### build\_sqlalchemy\_url
2025-08-20T14:35:52.4795555Z 
2025-08-20T14:35:52.4795627Z ```python
2025-08-20T14:35:52.4795807Z def build_sqlalchemy_url() -> str
2025-08-20T14:35:52.4796162Z ```
2025-08-20T14:35:52.4796249Z 
2025-08-20T14:35:52.4796349Z Return Postgres URL for SQLAlchemy engines.
2025-08-20T14:35:52.4796536Z 
2025-08-20T14:35:52.4796688Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-20T14:35:52.4796921Z 
2025-08-20T14:35:52.4797004Z #### build\_asyncpg\_dsn
2025-08-20T14:35:52.4797134Z 
2025-08-20T14:35:52.4797201Z ```python
2025-08-20T14:35:52.4797383Z def build_asyncpg_dsn() -> str
2025-08-20T14:35:52.4797587Z ```
2025-08-20T14:35:52.4797679Z 
2025-08-20T14:35:52.4797809Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-20T14:35:52.4798027Z 
2025-08-20T14:35:52.4798165Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-20T14:35:52.4798376Z 
2025-08-20T14:35:52.4798450Z #### refresh\_mvs
2025-08-20T14:35:52.4798557Z 
2025-08-20T14:35:52.4798627Z ```python
2025-08-20T14:35:52.4798830Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-20T14:35:52.4799092Z ```
2025-08-20T14:35:52.4799292Z 
2025-08-20T14:35:52.4799436Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-20T14:35:52.4799662Z 
2025-08-20T14:35:52.4799759Z <a id="price_importer.services_common"></a>
2025-08-20T14:35:52.4799935Z 
2025-08-20T14:35:52.4800032Z # price\_importer.services\_common
2025-08-20T14:35:52.4800191Z 
2025-08-20T14:35:52.4800299Z <a id="price_importer.services_common.base"></a>
2025-08-20T14:35:52.4800495Z 
2025-08-20T14:35:52.4800587Z # price\_importer.services\_common.base
2025-08-20T14:35:52.4800755Z 
2025-08-20T14:35:52.4800850Z <a id="price_importer.normaliser"></a>
2025-08-20T14:35:52.4801026Z 
2025-08-20T14:35:52.4801114Z # price\_importer.normaliser
2025-08-20T14:35:52.4801260Z 
2025-08-20T14:35:52.4801371Z <a id="price_importer.common.models_vendor"></a>
2025-08-20T14:35:52.4801560Z 
2025-08-20T14:35:52.4801652Z # price\_importer.common.models\_vendor
2025-08-20T14:35:52.4801826Z 
2025-08-20T14:35:52.4801921Z <a id="price_importer.common.db_url"></a>
2025-08-20T14:35:52.4802093Z 
2025-08-20T14:35:52.4802196Z # price\_importer.common.db\_url
2025-08-20T14:35:52.4802353Z 
2025-08-20T14:35:52.4802462Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-20T14:35:52.4802652Z 
2025-08-20T14:35:52.4802725Z #### make\_dsn
2025-08-20T14:35:52.4802828Z 
2025-08-20T14:35:52.4802893Z ```python
2025-08-20T14:35:52.4803079Z def make_dsn(async_: bool = False) -> str
2025-08-20T14:35:52.4803310Z ```
2025-08-20T14:35:52.4803400Z 
2025-08-20T14:35:52.4803524Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-20T14:35:52.4803731Z 
2025-08-20T14:35:52.4803843Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-20T14:35:52.4804046Z 
2025-08-20T14:35:52.4804113Z #### build\_url
2025-08-20T14:35:52.4804217Z 
2025-08-20T14:35:52.4804287Z ```python
2025-08-20T14:35:52.4804468Z def build_url(async_: bool = False) -> str
2025-08-20T14:35:52.4804704Z ```
2025-08-20T14:35:52.4804788Z 
2025-08-20T14:35:52.4804911Z Return Postgres DSN built from environment variables.
2025-08-20T14:35:52.4805131Z 
2025-08-20T14:35:52.4805352Z <a id="price_importer.common"></a>
2025-08-20T14:35:52.4805511Z 
2025-08-20T14:35:52.4805599Z # price\_importer.common
2025-08-20T14:35:52.4805732Z 
2025-08-20T14:35:52.4805827Z <a id="price_importer.common.base"></a>
2025-08-20T14:35:52.4805996Z 
2025-08-20T14:35:52.4806089Z # price\_importer.common.base
2025-08-20T14:35:52.4806234Z 
2025-08-20T14:35:52.4806334Z <a id="price_importer.tests.conftest"></a>
2025-08-20T14:35:52.4806517Z 
2025-08-20T14:35:52.4806607Z # price\_importer.tests.conftest
2025-08-20T14:35:52.4806758Z 
2025-08-20T14:35:52.4806865Z <a id="price_importer.tests.test_reader"></a>
2025-08-20T14:35:52.4807045Z 
2025-08-20T14:35:52.4807135Z # price\_importer.tests.test\_reader
2025-08-20T14:35:52.4807308Z 
2025-08-20T14:35:52.4807418Z <a id="price_importer.tests.test_imports"></a>
2025-08-20T14:35:52.4807619Z 
2025-08-20T14:35:52.4807711Z # price\_importer.tests.test\_imports
2025-08-20T14:35:52.4807884Z 
2025-08-20T14:35:52.4807983Z <a id="price_importer.tests.test_smoke"></a>
2025-08-20T14:35:52.4808289Z 
2025-08-20T14:35:52.4808386Z # price\_importer.tests.test\_smoke
2025-08-20T14:35:52.4808548Z 
2025-08-20T14:35:52.4808657Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-20T14:35:52.4808855Z 
2025-08-20T14:35:52.4808950Z # price\_importer.tests.test\_normaliser
2025-08-20T14:35:52.4809122Z 
2025-08-20T14:35:52.4809210Z <a id="price_importer.tests"></a>
2025-08-20T14:35:52.4809372Z 
2025-08-20T14:35:52.4809451Z # price\_importer.tests
2025-08-20T14:35:52.4809578Z 
2025-08-20T14:35:52.4809673Z <a id="price_importer.reader"></a>
2025-08-20T14:35:52.4809830Z 
2025-08-20T14:35:52.4809914Z # price\_importer.reader
2025-08-20T14:35:52.4810046Z 
2025-08-20T14:35:52.4810146Z <a id="price_importer.repository"></a>
2025-08-20T14:35:52.4810314Z 
2025-08-20T14:35:52.4810400Z # price\_importer.repository
2025-08-20T14:35:52.4810549Z 
2025-08-20T14:35:52.4810636Z <a id="price_importer.import"></a>
2025-08-20T14:35:52.4810790Z 
2025-08-20T14:35:52.4810875Z # price\_importer.import
2025-08-20T14:35:52.4811120Z 
2025-08-20T14:35:52.4811196Z <a id="fees_h10"></a>
2025-08-20T14:35:52.4811315Z 
2025-08-20T14:35:52.4811386Z # fees\_h10
2025-08-20T14:35:52.4811483Z 
2025-08-20T14:35:52.4811563Z <a id="fees_h10.worker"></a>
2025-08-20T14:35:52.4811703Z 
2025-08-20T14:35:52.4811773Z # fees\_h10.worker
2025-08-20T14:35:52.4811884Z 
2025-08-20T14:35:52.4811983Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-20T14:35:52.4812167Z 
2025-08-20T14:35:52.4812243Z #### list\_active\_asins
2025-08-20T14:35:52.4812369Z 
2025-08-20T14:35:52.4812440Z ```python
2025-08-20T14:35:52.4812616Z def list_active_asins() -> list[str]
2025-08-20T14:35:52.4812840Z ```
2025-08-20T14:35:52.4812925Z 
2025-08-20T14:35:52.4813039Z Return known ASINs or an empty list if unavailable.
2025-08-20T14:35:52.4813245Z 
2025-08-20T14:35:52.4813332Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-20T14:35:52.4813496Z 
2025-08-20T14:35:52.4813586Z # fees\_h10.tests.test\_smoke
2025-08-20T14:35:52.4813727Z 
2025-08-20T14:35:52.4813817Z <a id="fees_h10.tests"></a>
2025-08-20T14:35:52.4813952Z 
2025-08-20T14:35:52.4814026Z # fees\_h10.tests
2025-08-20T14:35:52.4814134Z 
2025-08-20T14:35:52.4814212Z <a id="fees_h10.client"></a>
2025-08-20T14:35:52.4814356Z 
2025-08-20T14:35:52.4814424Z # fees\_h10.client
2025-08-20T14:35:52.4814533Z 
2025-08-20T14:35:52.4814624Z <a id="fees_h10.repository"></a>
2025-08-20T14:35:52.4814772Z 
2025-08-20T14:35:52.4814849Z # fees\_h10.repository
2025-08-20T14:35:52.4814968Z 
2025-08-20T14:35:52.4815081Z <a id="fees_h10.repository.upsert_fees_raw"></a>
2025-08-20T14:35:52.4815377Z 
2025-08-20T14:35:52.4815451Z #### upsert\_fees\_raw
2025-08-20T14:35:52.4815577Z 
2025-08-20T14:35:52.4815642Z ```python
2025-08-20T14:35:52.4815816Z def upsert_fees_raw(engine: Engine,
2025-08-20T14:35:52.4816074Z                     rows: Iterable[Mapping[str, Any]],
2025-08-20T14:35:52.4816329Z                     *,
2025-08-20T14:35:52.4816561Z                     testing: bool = False) -> Optional[Dict[str, int]]
2025-08-20T14:35:52.4816849Z ```
2025-08-20T14:35:52.4816935Z 
2025-08-20T14:35:52.4817021Z Idempotent upsert for fees.
2025-08-20T14:35:52.4817164Z 
2025-08-20T14:35:52.4817322Z TESTING-only: returns counts for inserted/updated/skipped rows.
2025-08-20T14:35:52.4817677Z Assumes logical key (asin, marketplace, fee_type).
2025-08-20T14:35:52.4817996Z Only updates when one of the mutable fields changes.
2025-08-20T14:35:52.4818199Z 
2025-08-20T14:35:52.4818276Z <a id="emailer"></a>
2025-08-20T14:35:52.4818389Z 
2025-08-20T14:35:52.4818455Z # emailer
2025-08-20T14:35:52.4818548Z 
2025-08-20T14:35:52.4818659Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-20T14:35:52.4818841Z 
2025-08-20T14:35:52.4818932Z # emailer.tests.test\_import\_emailer
2025-08-20T14:35:52.4819108Z 
2025-08-20T14:35:52.4819201Z <a id="emailer.tests.test_smoke"></a>
2025-08-20T14:35:52.4819363Z 
2025-08-20T14:35:52.4819453Z # emailer.tests.test\_smoke
2025-08-20T14:35:52.4819593Z 
2025-08-20T14:35:52.4819675Z <a id="emailer.tests"></a>
2025-08-20T14:35:52.4819939Z 
2025-08-20T14:35:52.4820018Z # emailer.tests
2025-08-20T14:35:52.4820125Z 
2025-08-20T14:35:52.4820214Z <a id="emailer.generate_body"></a>
2025-08-20T14:35:52.4820377Z 
2025-08-20T14:35:52.4820461Z # emailer.generate\_body
2025-08-20T14:35:52.4820591Z 
2025-08-20T14:35:52.4820670Z <a id="llm_server"></a>
2025-08-20T14:35:52.4820792Z 
2025-08-20T14:35:52.4820859Z # llm\_server
2025-08-20T14:35:52.4820958Z 
2025-08-20T14:35:52.4821046Z <a id="llm_server.app"></a>
2025-08-20T14:35:52.4821182Z 
2025-08-20T14:35:52.4821255Z # llm\_server.app
2025-08-20T14:35:52.4821369Z 
