2025-08-19T12:10:28.0594598Z ##[group]Run pydoc-markdown
2025-08-19T12:10:28.0594896Z [36;1mpydoc-markdown[0m
2025-08-19T12:10:28.0635318Z shell: /usr/bin/bash -e {0}
2025-08-19T12:10:28.0635550Z env:
2025-08-19T12:10:28.0635790Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:10:28.0636191Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-19T12:10:28.0636589Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:10:28.0636924Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:10:28.0637267Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-19T12:10:28.0637611Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-19T12:10:28.0637914Z ##[endgroup]
2025-08-19T12:10:28.3905055Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-19T12:10:28.3905680Z Unknown key(s) "{'output_directory'}" at:
2025-08-19T12:10:28.3906018Z In "pydoc-markdown.yml"
2025-08-19T12:10:28.3906328Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-19T12:10:28.3907010Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-19T12:10:28.3907770Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-19T12:10:28.3908309Z 
2025-08-19T12:10:28.7273760Z <a id="__init__"></a>
2025-08-19T12:10:28.7274188Z 
2025-08-19T12:10:28.7274318Z # \_\_init\_\_
2025-08-19T12:10:28.7274519Z 
2025-08-19T12:10:28.7274660Z <a id="api"></a>
2025-08-19T12:10:28.7274862Z 
2025-08-19T12:10:28.7274980Z # api
2025-08-19T12:10:28.7275154Z 
2025-08-19T12:10:28.7275298Z <a id="api.errors"></a>
2025-08-19T12:10:28.7275534Z 
2025-08-19T12:10:28.7275671Z # api.errors
2025-08-19T12:10:28.7275857Z 
2025-08-19T12:10:28.7276012Z <a id="api.sentry_config"></a>
2025-08-19T12:10:28.7276289Z 
2025-08-19T12:10:28.7276436Z # api.sentry\_config
2025-08-19T12:10:28.7276657Z 
2025-08-19T12:10:28.7276843Z <a id="api.tests.test_stats_contracts"></a>
2025-08-19T12:10:28.7277193Z 
2025-08-19T12:10:28.7277773Z # api.tests.test\_stats\_contracts
2025-08-19T12:10:28.7278093Z 
2025-08-19T12:10:28.7278266Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-19T12:10:28.7278599Z 
2025-08-19T12:10:28.7278756Z # api.tests.test\_sentry\_scrub
2025-08-19T12:10:28.7279257Z 
2025-08-19T12:10:28.7279452Z <a id="api.tests.test_roi_basic_auth"></a>
2025-08-19T12:10:28.7279783Z 
2025-08-19T12:10:28.7279938Z # api.tests.test\_roi\_basic\_auth
2025-08-19T12:10:28.7280233Z 
2025-08-19T12:10:28.7280398Z <a id="api.tests.test_errors_json"></a>
2025-08-19T12:10:28.7280716Z 
2025-08-19T12:10:28.7280868Z # api.tests.test\_errors\_json
2025-08-19T12:10:28.7281150Z 
2025-08-19T12:10:28.7281301Z <a id="api.tests.test_llm"></a>
2025-08-19T12:10:28.7281570Z 
2025-08-19T12:10:28.7281715Z # api.tests.test\_llm
2025-08-19T12:10:28.7281941Z 
2025-08-19T12:10:28.7282166Z <a id="api.tests.test_roi_filters"></a>
2025-08-19T12:10:28.7282492Z 
2025-08-19T12:10:28.7282648Z # api.tests.test\_roi\_filters
2025-08-19T12:10:28.7282920Z 
2025-08-19T12:10:28.7283102Z <a id="api.tests.test_sentry_event"></a>
2025-08-19T12:10:28.7283440Z 
2025-08-19T12:10:28.7283596Z # api.tests.test\_sentry\_event
2025-08-19T12:10:28.7283867Z 
2025-08-19T12:10:28.7284113Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-19T12:10:28.7284506Z 
2025-08-19T12:10:28.7284656Z ## DummyTransport Objects
2025-08-19T12:10:28.7284908Z 
2025-08-19T12:10:28.7285027Z ```python
2025-08-19T12:10:28.7285338Z class DummyTransport()
2025-08-19T12:10:28.7285684Z ```
2025-08-19T12:10:28.7285841Z 
2025-08-19T12:10:28.7286165Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-19T12:10:28.7286665Z 
2025-08-19T12:10:28.7286805Z #### capture\_envelope
2025-08-19T12:10:28.7287029Z 
2025-08-19T12:10:28.7287155Z ```python
2025-08-19T12:10:28.7287483Z def capture_envelope(envelope)
2025-08-19T12:10:28.7287883Z ```
2025-08-19T12:10:28.7288052Z 
2025-08-19T12:10:28.7288303Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-19T12:10:28.7288713Z 
2025-08-19T12:10:28.7288872Z <a id="api.tests.test_cors"></a>
2025-08-19T12:10:28.7289728Z 
2025-08-19T12:10:28.7289887Z # api.tests.test\_cors
2025-08-19T12:10:28.7290121Z 
2025-08-19T12:10:28.7290302Z <a id="api.tests.test_imports"></a>
2025-08-19T12:10:28.7290604Z 
2025-08-19T12:10:28.7290761Z # api.tests.test\_imports
2025-08-19T12:10:28.7291006Z 
2025-08-19T12:10:28.7291169Z <a id="api.tests.test_rate_limit"></a>
2025-08-19T12:10:28.7291492Z 
2025-08-19T12:10:28.7291644Z # api.tests.test\_rate\_limit
2025-08-19T12:10:28.7291908Z 
2025-08-19T12:10:28.7292096Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-19T12:10:28.7292429Z 
2025-08-19T12:10:28.7292549Z #### app
2025-08-19T12:10:28.7292719Z 
2025-08-19T12:10:28.7292852Z noqa: E402
2025-08-19T12:10:28.7293027Z 
2025-08-19T12:10:28.7293195Z <a id="api.tests.test_entrypoint"></a>
2025-08-19T12:10:28.7293517Z 
2025-08-19T12:10:28.7293680Z # api.tests.test\_entrypoint
2025-08-19T12:10:28.7293950Z 
2025-08-19T12:10:28.7294120Z <a id="api.tests.test_health"></a>
2025-08-19T12:10:28.7294426Z 
2025-08-19T12:10:28.7294568Z # api.tests.test\_health
2025-08-19T12:10:28.7294805Z 
2025-08-19T12:10:28.7294971Z <a id="api.tests.test_score"></a>
2025-08-19T12:10:28.7295254Z 
2025-08-19T12:10:28.7295398Z # api.tests.test\_score
2025-08-19T12:10:28.7295636Z 
2025-08-19T12:10:28.7295786Z <a id="api.logging_config"></a>
2025-08-19T12:10:28.7296051Z 
2025-08-19T12:10:28.7296191Z # api.logging\_config
2025-08-19T12:10:28.7296418Z 
2025-08-19T12:10:28.7296569Z <a id="api.migrations.env"></a>
2025-08-19T12:10:28.7296834Z 
2025-08-19T12:10:28.7296983Z # api.migrations.env
2025-08-19T12:10:28.7297204Z 
2025-08-19T12:10:28.7297426Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-19T12:10:28.7297810Z 
2025-08-19T12:10:28.7298009Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-19T12:10:28.7298358Z 
2025-08-19T12:10:28.7298561Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-19T12:10:28.7299194Z 
2025-08-19T12:10:28.7299387Z # api.migrations.versions.0004\_fee\_cron
2025-08-19T12:10:28.7299969Z 
2025-08-19T12:10:28.7300272Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-19T12:10:28.7300723Z 
2025-08-19T12:10:28.7301021Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-19T12:10:28.7301446Z 
2025-08-19T12:10:28.7301677Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-19T12:10:28.7302057Z 
2025-08-19T12:10:28.7302264Z # api.migrations.versions.0003\_vendor\_prices
2025-08-19T12:10:28.7302627Z 
2025-08-19T12:10:28.7302857Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-19T12:10:28.7303248Z 
2025-08-19T12:10:28.7303464Z # api.migrations.versions.0024\_create\_buybox
2025-08-19T12:10:28.7303818Z 
2025-08-19T12:10:28.7304055Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-19T12:10:28.7304454Z 
2025-08-19T12:10:28.7304659Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-19T12:10:28.7305021Z 
2025-08-19T12:10:28.7305255Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-19T12:10:28.7305741Z 
2025-08-19T12:10:28.7305949Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-19T12:10:28.7306354Z 
2025-08-19T12:10:28.7306595Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-19T12:10:28.7306996Z 
2025-08-19T12:10:28.7307203Z # api.migrations.versions.0020\_unified\_schema
2025-08-19T12:10:28.7307555Z 
2025-08-19T12:10:28.7307821Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-19T12:10:28.7308256Z 
2025-08-19T12:10:28.7308486Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-19T12:10:28.7308883Z 
2025-08-19T12:10:28.7309321Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-19T12:10:28.7309732Z 
2025-08-19T12:10:28.7309944Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-19T12:10:28.7310309Z 
2025-08-19T12:10:28.7310578Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-19T12:10:28.7310997Z 
2025-08-19T12:10:28.7311221Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-19T12:10:28.7311859Z 
2025-08-19T12:10:28.7312070Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-19T12:10:28.7312439Z 
2025-08-19T12:10:28.7312627Z # api.migrations.versions.0001\_baseline
2025-08-19T12:10:28.7312955Z 
2025-08-19T12:10:28.7313120Z <a id="api.migrations.versions"></a>
2025-08-19T12:10:28.7313431Z 
2025-08-19T12:10:28.7313586Z # api.migrations.versions
2025-08-19T12:10:28.7313841Z 
2025-08-19T12:10:28.7313990Z <a id="api.migrations"></a>
2025-08-19T12:10:28.7314259Z 
2025-08-19T12:10:28.7314392Z # api.migrations
2025-08-19T12:10:28.7314730Z 
2025-08-19T12:10:28.7314872Z <a id="api.db"></a>
2025-08-19T12:10:28.7315088Z 
2025-08-19T12:10:28.7315208Z # api.db
2025-08-19T12:10:28.7315380Z 
2025-08-19T12:10:28.7315541Z <a id="api.routes.score"></a>
2025-08-19T12:10:28.7315808Z 
2025-08-19T12:10:28.7315942Z # api.routes.score
2025-08-19T12:10:28.7316160Z 
2025-08-19T12:10:28.7316315Z <a id="api.routes.stats"></a>
2025-08-19T12:10:28.7316577Z 
2025-08-19T12:10:28.7316720Z # api.routes.stats
2025-08-19T12:10:28.7316945Z 
2025-08-19T12:10:28.7317094Z <a id="api.routes.roi"></a>
2025-08-19T12:10:28.7317348Z 
2025-08-19T12:10:28.7317489Z # api.routes.roi
2025-08-19T12:10:28.7317711Z 
2025-08-19T12:10:28.7317863Z <a id="api.routes.health"></a>
2025-08-19T12:10:28.7318133Z 
2025-08-19T12:10:28.7318268Z # api.routes.health
2025-08-19T12:10:28.7318474Z 
2025-08-19T12:10:28.7318645Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-19T12:10:28.7319188Z 
2025-08-19T12:10:28.7319323Z #### MAX\_SKEW
2025-08-19T12:10:28.7319521Z 
2025-08-19T12:10:28.7319647Z seconds
2025-08-19T12:10:28.7319827Z 
2025-08-19T12:10:28.7320011Z <a id="api.routes.health.health"></a>
2025-08-19T12:10:28.7320339Z 
2025-08-19T12:10:28.7320457Z #### health
2025-08-19T12:10:28.7320629Z 
2025-08-19T12:10:28.7320750Z ```python
2025-08-19T12:10:28.7321131Z @router.get("/health", include_in_schema=False)
2025-08-19T12:10:28.7321875Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-19T12:10:28.7322766Z ```
2025-08-19T12:10:28.7322937Z 
2025-08-19T12:10:28.7323169Z Return 200 when DB reachable and clocks are in sync.
2025-08-19T12:10:28.7323549Z 
2025-08-19T12:10:28.7323719Z <a id="api.routes.repository"></a>
2025-08-19T12:10:28.7324036Z 
2025-08-19T12:10:28.7324190Z # api.routes.repository
2025-08-19T12:10:28.7324436Z 
2025-08-19T12:10:28.7324571Z <a id="api.routes"></a>
2025-08-19T12:10:28.7324803Z 
2025-08-19T12:10:28.7324925Z # api.routes
2025-08-19T12:10:28.7325108Z 
2025-08-19T12:10:28.7325265Z <a id="api.models.fee"></a>
2025-08-19T12:10:28.7325518Z 
2025-08-19T12:10:28.7325647Z # api.models.fee
2025-08-19T12:10:28.7325850Z 
2025-08-19T12:10:28.7325993Z <a id="api.models"></a>
2025-08-19T12:10:28.7326217Z 
2025-08-19T12:10:28.7326337Z # api.models
2025-08-19T12:10:28.7326526Z 
2025-08-19T12:10:28.7326677Z <a id="api.roi_repository"></a>
2025-08-19T12:10:28.7326949Z 
2025-08-19T12:10:28.7327093Z # api.roi\_repository
2025-08-19T12:10:28.7327309Z 
2025-08-19T12:10:28.7327451Z <a id="api.main"></a>
2025-08-19T12:10:28.7327675Z 
2025-08-19T12:10:28.7327802Z # api.main
2025-08-19T12:10:28.7327976Z 
2025-08-19T12:10:28.7328101Z <a id="api.main.ready"></a>
2025-08-19T12:10:28.7328348Z 
2025-08-19T12:10:28.7328458Z #### ready
2025-08-19T12:10:28.7328614Z 
2025-08-19T12:10:28.7328724Z ```python
2025-08-19T12:10:28.7329389Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-19T12:10:28.7330280Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-19T12:10:28.7330961Z                                                                       str]
2025-08-19T12:10:28.7331421Z ```
2025-08-19T12:10:28.7331585Z 
2025-08-19T12:10:28.7331837Z Return 200 only when migrations are at head.
2025-08-19T12:10:28.7332199Z 
2025-08-19T12:10:28.7332340Z <a id="api.config"></a>
2025-08-19T12:10:28.7332570Z 
2025-08-19T12:10:28.7332693Z # api.config
2025-08-19T12:10:28.7332883Z 
2025-08-19T12:10:28.7333031Z <a id="api.security"></a>
2025-08-19T12:10:28.7333289Z 
2025-08-19T12:10:28.7333639Z # api.security
2025-08-19T12:10:28.7333837Z 
2025-08-19T12:10:28.7333960Z <a id="etl"></a>
2025-08-19T12:10:28.7334163Z 
2025-08-19T12:10:28.7334278Z # etl
2025-08-19T12:10:28.7334439Z 
2025-08-19T12:10:28.7334590Z <a id="etl.fba_fee_ingestor"></a>
2025-08-19T12:10:28.7334881Z 
2025-08-19T12:10:28.7335020Z # etl.fba\_fee\_ingestor
2025-08-19T12:10:28.7335254Z 
2025-08-19T12:10:28.7335415Z <a id="etl.sp_fees_ingestor"></a>
2025-08-19T12:10:28.7335698Z 
2025-08-19T12:10:28.7335834Z # etl.sp\_fees\_ingestor
2025-08-19T12:10:28.7336067Z 
2025-08-19T12:10:28.7336227Z <a id="etl.keepa_ingestor"></a>
2025-08-19T12:10:28.7336495Z 
2025-08-19T12:10:28.7336628Z # etl.keepa\_ingestor
2025-08-19T12:10:28.7336857Z 
2025-08-19T12:10:28.7336983Z <a id="etl.db"></a>
2025-08-19T12:10:28.7337184Z 
2025-08-19T12:10:28.7337312Z # etl.db
2025-08-19T12:10:28.7337477Z 
2025-08-19T12:10:28.7337636Z <a id="etl.dialects.schemas"></a>
2025-08-19T12:10:28.7337915Z 
2025-08-19T12:10:28.7338074Z # etl.dialects.schemas
2025-08-19T12:10:28.7338312Z 
2025-08-19T12:10:28.7338512Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-19T12:10:28.7338875Z 
2025-08-19T12:10:28.7339215Z # etl.dialects.amazon\_reimbursements
2025-08-19T12:10:28.7339543Z 
2025-08-19T12:10:28.7339731Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-19T12:10:28.7340078Z 
2025-08-19T12:10:28.7340236Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-19T12:10:28.7340532Z 
2025-08-19T12:10:28.7340701Z <a id="etl.dialects.test_generic"></a>
2025-08-19T12:10:28.7341008Z 
2025-08-19T12:10:28.7341158Z # etl.dialects.test\_generic
2025-08-19T12:10:28.7341428Z 
2025-08-19T12:10:28.7341603Z <a id="etl.dialects.amazon_returns"></a>
2025-08-19T12:10:28.7341921Z 
2025-08-19T12:10:28.7342072Z # etl.dialects.amazon\_returns
2025-08-19T12:10:28.7342348Z 
2025-08-19T12:10:28.7342532Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-19T12:10:28.7342874Z 
2025-08-19T12:10:28.7343045Z # etl.dialects.amazon\_fee\_preview
2025-08-19T12:10:28.7343577Z 
2025-08-19T12:10:28.7343802Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-19T12:10:28.7344187Z 
2025-08-19T12:10:28.7344359Z # etl.dialects.amazon\_inventory\_ledger
2025-08-19T12:10:28.7344682Z 
2025-08-19T12:10:28.7344871Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-19T12:10:28.7345207Z 
2025-08-19T12:10:28.7345368Z # etl.dialects.amazon\_settlements
2025-08-19T12:10:28.7345659Z 
2025-08-19T12:10:28.7345809Z <a id="etl.dialects"></a>
2025-08-19T12:10:28.7346049Z 
2025-08-19T12:10:28.7346173Z # etl.dialects
2025-08-19T12:10:28.7346372Z 
2025-08-19T12:10:28.7346502Z <a id="ingest"></a>
2025-08-19T12:10:28.7346703Z 
2025-08-19T12:10:28.7346822Z # ingest
2025-08-19T12:10:28.7346994Z 
2025-08-19T12:10:28.7347145Z <a id="ingest.maintenance"></a>
2025-08-19T12:10:28.7347421Z 
2025-08-19T12:10:28.7347564Z # ingest.maintenance
2025-08-19T12:10:28.7347783Z 
2025-08-19T12:10:28.7347934Z <a id="ingest.copy_loader"></a>
2025-08-19T12:10:28.7348207Z 
2025-08-19T12:10:28.7348343Z # ingest.copy\_loader
2025-08-19T12:10:28.7348581Z 
2025-08-19T12:10:28.7348775Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-19T12:10:28.7349319Z 
2025-08-19T12:10:28.7349463Z #### copy\_df\_via\_temp
2025-08-19T12:10:28.7349702Z 
2025-08-19T12:10:28.7349831Z ```python
2025-08-19T12:10:28.7350157Z def copy_df_via_temp(engine: Engine,
2025-08-19T12:10:28.7350612Z                      df: pd.DataFrame,
2025-08-19T12:10:28.7351048Z                      target_table: str,
2025-08-19T12:10:28.7351465Z                      *,
2025-08-19T12:10:28.7351852Z                      target_schema: Optional[str] = None,
2025-08-19T12:10:28.7352354Z                      columns: Sequence[str],
2025-08-19T12:10:28.7352873Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-19T12:10:28.7353421Z                      analyze_after: bool = False,
2025-08-19T12:10:28.7353936Z                      connection: Any | None = None) -> int
2025-08-19T12:10:28.7354394Z ```
2025-08-19T12:10:28.7354553Z 
2025-08-19T12:10:28.7354868Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-19T12:10:28.7355536Z 
2025-08-19T12:10:28.7355705Z <a id="ingest.tests.test_smoke"></a>
2025-08-19T12:10:28.7356026Z 
2025-08-19T12:10:28.7356176Z # ingest.tests.test\_smoke
2025-08-19T12:10:28.7356433Z 
2025-08-19T12:10:28.7356583Z <a id="ingest.tests"></a>
2025-08-19T12:10:28.7356828Z 
2025-08-19T12:10:28.7356954Z # ingest.tests
2025-08-19T12:10:28.7357144Z 
2025-08-19T12:10:28.7357318Z <a id="ingest.upload_router"></a>
2025-08-19T12:10:28.7357609Z 
2025-08-19T12:10:28.7357752Z # ingest.upload\_router
2025-08-19T12:10:28.7357995Z 
2025-08-19T12:10:28.7358149Z <a id="ingest.email_watcher"></a>
2025-08-19T12:10:28.7358430Z 
2025-08-19T12:10:28.7358573Z # ingest.email\_watcher
2025-08-19T12:10:28.7358795Z 
2025-08-19T12:10:28.7359170Z <a id="ingest.email_watcher.main"></a>
2025-08-19T12:10:28.7359498Z 
2025-08-19T12:10:28.7359627Z #### main
2025-08-19T12:10:28.7359797Z 
2025-08-19T12:10:28.7359922Z ```python
2025-08-19T12:10:28.7360280Z def main() -> dict[str, str]
2025-08-19T12:10:28.7360652Z ```
2025-08-19T12:10:28.7360814Z 
2025-08-19T12:10:28.7361084Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-19T12:10:28.7361509Z 
2025-08-19T12:10:28.7361768Z Returns {"status": "success"} when processing completes.
2025-08-19T12:10:28.7362169Z 
2025-08-19T12:10:28.7362312Z <a id="ingest.tasks"></a>
2025-08-19T12:10:28.7362553Z 
2025-08-19T12:10:28.7362687Z # ingest.tasks
2025-08-19T12:10:28.7362885Z 
2025-08-19T12:10:28.7363069Z <a id="ingest.tasks.task_import_file"></a>
2025-08-19T12:10:28.7363412Z 
2025-08-19T12:10:28.7363557Z #### task\_import\_file
2025-08-19T12:10:28.7363792Z 
2025-08-19T12:10:28.7363919Z ```python
2025-08-19T12:10:28.7364319Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-19T12:10:28.7364943Z def task_import_file(self: Any,
2025-08-19T12:10:28.7365360Z                      uri: str,
2025-08-19T12:10:28.7365771Z                      report_type: str | None = None,
2025-08-19T12:10:28.7366651Z                      force: bool = False) -> dict[str, Any]
2025-08-19T12:10:28.7367118Z ```
2025-08-19T12:10:28.7367285Z 
2025-08-19T12:10:28.7367536Z Import a file into Postgres using existing ETL pipeline.
2025-08-19T12:10:28.7367939Z 
2025-08-19T12:10:28.7368102Z <a id="ingest.celery_app"></a>
2025-08-19T12:10:28.7368377Z 
2025-08-19T12:10:28.7368573Z # ingest.celery\_app
2025-08-19T12:10:28.7368807Z 
2025-08-19T12:10:28.7369139Z <a id="ingest.ingest_router"></a>
2025-08-19T12:10:28.7369440Z 
2025-08-19T12:10:28.7369583Z # ingest.ingest\_router
2025-08-19T12:10:28.7369824Z 
2025-08-19T12:10:28.7369966Z <a id="logistics_etl"></a>
2025-08-19T12:10:28.7370211Z 
2025-08-19T12:10:28.7370342Z # logistics\_etl
2025-08-19T12:10:28.7370540Z 
2025-08-19T12:10:28.7370681Z Daily logistics ETL job.
2025-08-19T12:10:28.7370922Z 
2025-08-19T12:10:28.7371085Z <a id="logistics_etl.__main__"></a>
2025-08-19T12:10:28.7371379Z 
2025-08-19T12:10:28.7371526Z # logistics\_etl.\_\_main\_\_
2025-08-19T12:10:28.7371806Z 
2025-08-19T12:10:28.7371964Z <a id="logistics_etl.dsn"></a>
2025-08-19T12:10:28.7372237Z 
2025-08-19T12:10:28.7372379Z # logistics\_etl.dsn
2025-08-19T12:10:28.7372605Z 
2025-08-19T12:10:28.7372829Z Local DSN builder to avoid cross-service dependency.
2025-08-19T12:10:28.7373222Z 
2025-08-19T12:10:28.7373406Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-19T12:10:28.7373729Z 
2025-08-19T12:10:28.7373853Z #### build\_dsn
2025-08-19T12:10:28.7374056Z 
2025-08-19T12:10:28.7374177Z ```python
2025-08-19T12:10:28.7374509Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:10:28.7374939Z ```
2025-08-19T12:10:28.7375097Z 
2025-08-19T12:10:28.7375369Z Return a Postgres DSN assembled from environment variables.
2025-08-19T12:10:28.7375797Z 
2025-08-19T12:10:28.7376074Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-19T12:10:28.7376813Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-19T12:10:28.7377460Z error when any required variable is missing.
2025-08-19T12:10:28.7377820Z 
2025-08-19T12:10:28.7378453Z <a id="logistics_etl.tests.conftest"></a>
2025-08-19T12:10:28.7378867Z 
2025-08-19T12:10:28.7379223Z # logistics\_etl.tests.conftest
2025-08-19T12:10:28.7379517Z 
2025-08-19T12:10:28.7379720Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-19T12:10:28.7380078Z 
2025-08-19T12:10:28.7380251Z # logistics\_etl.tests.test\_repository
2025-08-19T12:10:28.7380568Z 
2025-08-19T12:10:28.7380744Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-19T12:10:28.7381079Z 
2025-08-19T12:10:28.7381236Z # logistics\_etl.tests.test\_cron
2025-08-19T12:10:28.7381520Z 
2025-08-19T12:10:28.7381714Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-19T12:10:28.7382053Z 
2025-08-19T12:10:28.7382217Z # logistics\_etl.tests.test\_imports
2025-08-19T12:10:28.7382518Z 
2025-08-19T12:10:28.7382710Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-19T12:10:28.7383038Z 
2025-08-19T12:10:28.7383195Z # logistics\_etl.tests.test\_smoke
2025-08-19T12:10:28.7383501Z 
2025-08-19T12:10:28.7383682Z <a id="logistics_etl.tests.test_client"></a>
2025-08-19T12:10:28.7384017Z 
2025-08-19T12:10:28.7384184Z # logistics\_etl.tests.test\_client
2025-08-19T12:10:28.7384481Z 
2025-08-19T12:10:28.7384643Z <a id="logistics_etl.tests"></a>
2025-08-19T12:10:28.7384931Z 
2025-08-19T12:10:28.7385088Z # logistics\_etl.tests
2025-08-19T12:10:28.7385323Z 
2025-08-19T12:10:28.7385476Z <a id="logistics_etl.flow"></a>
2025-08-19T12:10:28.7385747Z 
2025-08-19T12:10:28.7385883Z # logistics\_etl.flow
2025-08-19T12:10:28.7386105Z 
2025-08-19T12:10:28.7386269Z <a id="logistics_etl.client"></a>
2025-08-19T12:10:28.7386551Z 
2025-08-19T12:10:28.7386690Z # logistics\_etl.client
2025-08-19T12:10:28.7386920Z 
2025-08-19T12:10:28.7387074Z <a id="logistics_etl.cron"></a>
2025-08-19T12:10:28.7387342Z 
2025-08-19T12:10:28.7387476Z # logistics\_etl.cron
2025-08-19T12:10:28.7387697Z 
2025-08-19T12:10:28.7387830Z <a id="logistics_etl.db"></a>
2025-08-19T12:10:28.7388077Z 
2025-08-19T12:10:28.7388196Z # logistics\_etl.db
2025-08-19T12:10:28.7388676Z 
2025-08-19T12:10:28.7388848Z <a id="logistics_etl.repository"></a>
2025-08-19T12:10:28.7389337Z 
2025-08-19T12:10:28.7415934Z # logistics\_etl.repository
2025-08-19T12:10:28.7416273Z 
2025-08-19T12:10:28.7416404Z <a id="alert_bot"></a>
2025-08-19T12:10:28.7416613Z 
2025-08-19T12:10:28.7416724Z # alert\_bot
2025-08-19T12:10:28.7416885Z 
2025-08-19T12:10:28.7417025Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-19T12:10:28.7417304Z 
2025-08-19T12:10:28.7417449Z # alert\_bot.tests.test\_smoke
2025-08-19T12:10:28.7417681Z 
2025-08-19T12:10:28.7417806Z <a id="alert_bot.tests"></a>
2025-08-19T12:10:28.7418027Z 
2025-08-19T12:10:28.7418139Z # alert\_bot.tests
2025-08-19T12:10:28.7418310Z 
2025-08-19T12:10:28.7418444Z <a id="alert_bot.alert_bot"></a>
2025-08-19T12:10:28.7418687Z 
2025-08-19T12:10:28.7418805Z # alert\_bot.alert\_bot
2025-08-19T12:10:28.7419332Z 
2025-08-19T12:10:28.7419462Z <a id="alert_bot.rules"></a>
2025-08-19T12:10:28.7419689Z 
2025-08-19T12:10:28.7419813Z # alert\_bot.rules
2025-08-19T12:10:28.7420003Z 
2025-08-19T12:10:28.7420105Z <a id="common"></a>
2025-08-19T12:10:28.7420267Z 
2025-08-19T12:10:28.7420374Z # common
2025-08-19T12:10:28.7420512Z 
2025-08-19T12:10:28.7420625Z <a id="common.dsn"></a>
2025-08-19T12:10:28.7420811Z 
2025-08-19T12:10:28.7420917Z # common.dsn
2025-08-19T12:10:28.7421075Z 
2025-08-19T12:10:28.7421206Z <a id="common.dsn.build_dsn"></a>
2025-08-19T12:10:28.7421443Z 
2025-08-19T12:10:28.7421546Z #### build\_dsn
2025-08-19T12:10:28.7421702Z 
2025-08-19T12:10:28.7421801Z ```python
2025-08-19T12:10:28.7422076Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:10:28.7422434Z ```
2025-08-19T12:10:28.7422570Z 
2025-08-19T12:10:28.7422788Z Return a Postgres DSN, validating required variables.
2025-08-19T12:10:28.7423129Z 
2025-08-19T12:10:28.7423436Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-19T12:10:28.7424138Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-19T12:10:28.7424817Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-19T12:10:28.7425543Z missing.
2025-08-19T12:10:28.7425696Z 
2025-08-19T12:10:28.7425834Z <a id="common.models_vendor"></a>
2025-08-19T12:10:28.7426082Z 
2025-08-19T12:10:28.7426205Z # common.models\_vendor
2025-08-19T12:10:28.7426398Z 
2025-08-19T12:10:28.7426542Z <a id="common.models_vendor.Vendor"></a>
2025-08-19T12:10:28.7426840Z 
2025-08-19T12:10:28.7426953Z ## Vendor Objects
2025-08-19T12:10:28.7427116Z 
2025-08-19T12:10:28.7427216Z ```python
2025-08-19T12:10:28.7427472Z class Vendor(Base)
2025-08-19T12:10:28.7427737Z ```
2025-08-19T12:10:28.7427867Z 
2025-08-19T12:10:28.7428005Z Vendor of inventory items.
2025-08-19T12:10:28.7428226Z 
2025-08-19T12:10:28.7428396Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-19T12:10:28.7428686Z 
2025-08-19T12:10:28.7428797Z ## VendorPrice Objects
2025-08-19T12:10:28.7429171Z 
2025-08-19T12:10:28.7429274Z ```python
2025-08-19T12:10:28.7429527Z class VendorPrice(Base)
2025-08-19T12:10:28.7429811Z ```
2025-08-19T12:10:28.7429944Z 
2025-08-19T12:10:28.7430111Z Association table linking vendors to pricing.
2025-08-19T12:10:28.7430393Z 
2025-08-19T12:10:28.7430513Z <a id="common.db_url"></a>
2025-08-19T12:10:28.7430742Z 
2025-08-19T12:10:28.7430853Z # common.db\_url
2025-08-19T12:10:28.7431019Z 
2025-08-19T12:10:28.7431147Z <a id="common.db_url.build_url"></a>
2025-08-19T12:10:28.7431392Z 
2025-08-19T12:10:28.7431494Z #### build\_url
2025-08-19T12:10:28.7431656Z 
2025-08-19T12:10:28.7431762Z ```python
2025-08-19T12:10:28.7432040Z def build_url(async_: bool = True) -> str
2025-08-19T12:10:28.7432395Z ```
2025-08-19T12:10:28.7432532Z 
2025-08-19T12:10:28.7432691Z Return Postgres DSN from env or PG_* parts.
2025-08-19T12:10:28.7432982Z 
2025-08-19T12:10:28.7433112Z <a id="common.keepa"></a>
2025-08-19T12:10:28.7433313Z 
2025-08-19T12:10:28.7433419Z # common.keepa
2025-08-19T12:10:28.7433582Z 
2025-08-19T12:10:28.7433695Z <a id="common.llm"></a>
2025-08-19T12:10:28.7434045Z 
2025-08-19T12:10:28.7434152Z # common.llm
2025-08-19T12:10:28.7434310Z 
2025-08-19T12:10:28.7434431Z <a id="common.settings"></a>
2025-08-19T12:10:28.7434640Z 
2025-08-19T12:10:28.7434754Z # common.settings
2025-08-19T12:10:28.7434916Z 
2025-08-19T12:10:28.7435025Z <a id="common.db"></a>
2025-08-19T12:10:28.7435210Z 
2025-08-19T12:10:28.7435311Z # common.db
2025-08-19T12:10:28.7435448Z 
2025-08-19T12:10:28.7435591Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-19T12:10:28.7435868Z 
2025-08-19T12:10:28.7435982Z #### build\_sqlalchemy\_url
2025-08-19T12:10:28.7436188Z 
2025-08-19T12:10:28.7436297Z ```python
2025-08-19T12:10:28.7436560Z def build_sqlalchemy_url() -> str
2025-08-19T12:10:28.7436897Z ```
2025-08-19T12:10:28.7437036Z 
2025-08-19T12:10:28.7437191Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T12:10:28.7437480Z 
2025-08-19T12:10:28.7437627Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-19T12:10:28.7437896Z 
2025-08-19T12:10:28.7438018Z #### build\_asyncpg\_dsn
2025-08-19T12:10:28.7438220Z 
2025-08-19T12:10:28.7438328Z ```python
2025-08-19T12:10:28.7438608Z def build_asyncpg_dsn() -> str
2025-08-19T12:10:28.7439060Z ```
2025-08-19T12:10:28.7439200Z 
2025-08-19T12:10:28.7439413Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T12:10:28.7439744Z 
2025-08-19T12:10:28.7439877Z <a id="common.db.refresh_mvs"></a>
2025-08-19T12:10:28.7440125Z 
2025-08-19T12:10:28.7440228Z #### refresh\_mvs
2025-08-19T12:10:28.7440395Z 
2025-08-19T12:10:28.7440505Z ```python
2025-08-19T12:10:28.7440820Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T12:10:28.7441231Z ```
2025-08-19T12:10:28.7441364Z 
2025-08-19T12:10:28.7441579Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T12:10:28.7441932Z 
2025-08-19T12:10:28.7442058Z <a id="common.config"></a>
2025-08-19T12:10:28.7442259Z 
2025-08-19T12:10:28.7442367Z # common.config
2025-08-19T12:10:28.7442537Z 
2025-08-19T12:10:28.7442653Z <a id="common.base"></a>
2025-08-19T12:10:28.7442849Z 
2025-08-19T12:10:28.7442963Z # common.base
2025-08-19T12:10:28.7443284Z 
2025-08-19T12:10:28.7443407Z <a id="common.base.Base"></a>
2025-08-19T12:10:28.7443632Z 
2025-08-19T12:10:28.7443732Z ## Base Objects
2025-08-19T12:10:28.7443888Z 
2025-08-19T12:10:28.7443988Z ```python
2025-08-19T12:10:28.7444251Z class Base(DeclarativeBase)
2025-08-19T12:10:28.7444555Z ```
2025-08-19T12:10:28.7444696Z 
2025-08-19T12:10:28.7444829Z Base class for SQLAlchemy models.
2025-08-19T12:10:28.7445063Z 
2025-08-19T12:10:28.7445183Z <a id="repricer"></a>
2025-08-19T12:10:28.7445362Z 
2025-08-19T12:10:28.7445466Z # repricer
2025-08-19T12:10:28.7445618Z 
2025-08-19T12:10:28.7445754Z <a id="repricer.app.schemas"></a>
2025-08-19T12:10:28.7445992Z 
2025-08-19T12:10:28.7446109Z # repricer.app.schemas
2025-08-19T12:10:28.7446298Z 
2025-08-19T12:10:28.7446428Z <a id="repricer.app.deps"></a>
2025-08-19T12:10:28.7446652Z 
2025-08-19T12:10:28.7446773Z # repricer.app.deps
2025-08-19T12:10:28.7446948Z 
2025-08-19T12:10:28.7447128Z Placeholder module for Keepa / SP-API clients.
2025-08-19T12:10:28.7447438Z 
2025-08-19T12:10:28.7447585Z <a id="repricer.app.logic"></a>
2025-08-19T12:10:28.7447815Z 
2025-08-19T12:10:28.7447932Z # repricer.app.logic
2025-08-19T12:10:28.7448122Z 
2025-08-19T12:10:28.7448284Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-19T12:10:28.7448572Z 
2025-08-19T12:10:28.7448682Z #### MIN\_MARGIN
2025-08-19T12:10:28.7448847Z 
2025-08-19T12:10:28.7449090Z 15 % ROI
2025-08-19T12:10:28.7449239Z 
2025-08-19T12:10:28.7449412Z <a id="repricer.app.logic.compute_price"></a>
2025-08-19T12:10:28.7449706Z 
2025-08-19T12:10:28.7449825Z #### compute\_price
2025-08-19T12:10:28.7450004Z 
2025-08-19T12:10:28.7450105Z ```python
2025-08-19T12:10:28.7450493Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-19T12:10:28.7450962Z ```
2025-08-19T12:10:28.7451093Z 
2025-08-19T12:10:28.7451266Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-19T12:10:28.7451717Z Replace with real competitive logic later.
2025-08-19T12:10:28.7452152Z 
2025-08-19T12:10:28.7452292Z <a id="repricer.app.main"></a>
2025-08-19T12:10:28.7452519Z 
2025-08-19T12:10:28.7452631Z # repricer.app.main
2025-08-19T12:10:28.7452814Z 
2025-08-19T12:10:28.7452934Z <a id="repricer.app"></a>
2025-08-19T12:10:28.7453135Z 
2025-08-19T12:10:28.7453246Z # repricer.app
2025-08-19T12:10:28.7453409Z 
2025-08-19T12:10:28.7453558Z <a id="repricer.tests.test_imports"></a>
2025-08-19T12:10:28.7453833Z 
2025-08-19T12:10:28.7453973Z # repricer.tests.test\_imports
2025-08-19T12:10:28.7454198Z 
2025-08-19T12:10:28.7454336Z <a id="repricer.tests.test_smoke"></a>
2025-08-19T12:10:28.7454600Z 
2025-08-19T12:10:28.7454730Z # repricer.tests.test\_smoke
2025-08-19T12:10:28.7454946Z 
2025-08-19T12:10:28.7455080Z <a id="repricer.tests"></a>
2025-08-19T12:10:28.7455294Z 
2025-08-19T12:10:28.7455402Z # repricer.tests
2025-08-19T12:10:28.7455575Z 
2025-08-19T12:10:28.7455682Z <a id="db"></a>
2025-08-19T12:10:28.7455844Z 
2025-08-19T12:10:28.7455945Z # db
2025-08-19T12:10:28.7456093Z 
2025-08-19T12:10:28.7456223Z <a id="db.utils.views"></a>
2025-08-19T12:10:28.7456432Z 
2025-08-19T12:10:28.7456538Z # db.utils.views
2025-08-19T12:10:28.7456710Z 
2025-08-19T12:10:28.7456852Z <a id="db.utils.views.replace_view"></a>
2025-08-19T12:10:28.7457115Z 
2025-08-19T12:10:28.7457233Z #### replace\_view
2025-08-19T12:10:28.7457399Z 
2025-08-19T12:10:28.7457501Z ```python
2025-08-19T12:10:28.7457821Z def replace_view(name: str, new_sql: str) -> None
2025-08-19T12:10:28.7458199Z ```
2025-08-19T12:10:28.7458336Z 
2025-08-19T12:10:28.7458477Z Drop and recreate a SQL view atomically.
2025-08-19T12:10:28.7458737Z 
2025-08-19T12:10:28.7458845Z <a id="db.utils"></a>
2025-08-19T12:10:28.7459257Z 
2025-08-19T12:10:28.7459368Z # db.utils
2025-08-19T12:10:28.7459515Z 
2025-08-19T12:10:28.7459651Z <a id="price_importer"></a>
2025-08-19T12:10:28.7459879Z 
2025-08-19T12:10:28.7459993Z # price\_importer
2025-08-19T12:10:28.7460169Z 
2025-08-19T12:10:28.7460336Z <a id="price_importer.services_common.dsn"></a>
2025-08-19T12:10:28.7460636Z 
2025-08-19T12:10:28.7460784Z # price\_importer.services\_common.dsn
2025-08-19T12:10:28.7461219Z 
2025-08-19T12:10:28.7461476Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-19T12:10:28.7461814Z 
2025-08-19T12:10:28.7461919Z #### build\_dsn
2025-08-19T12:10:28.7462084Z 
2025-08-19T12:10:28.7462197Z ```python
2025-08-19T12:10:28.7462470Z def build_dsn(sync: bool = True) -> str
2025-08-19T12:10:28.7462827Z ```
2025-08-19T12:10:28.7462958Z 
2025-08-19T12:10:28.7463062Z Return safe DSN.
2025-08-19T12:10:28.7463238Z 
2025-08-19T12:10:28.7463696Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-19T12:10:28.7464023Z 
2025-08-19T12:10:28.7464229Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-19T12:10:28.7464544Z 
2025-08-19T12:10:28.7464717Z # price\_importer.services\_common.models\_vendor
2025-08-19T12:10:28.7465068Z 
2025-08-19T12:10:28.7465235Z <a id="price_importer.services_common.db_url"></a>
2025-08-19T12:10:28.7465531Z 
2025-08-19T12:10:28.7465682Z # price\_importer.services\_common.db\_url
2025-08-19T12:10:28.7465978Z 
2025-08-19T12:10:28.7466186Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-19T12:10:28.7466532Z 
2025-08-19T12:10:28.7466641Z #### build\_url
2025-08-19T12:10:28.7466802Z 
2025-08-19T12:10:28.7466903Z ```python
2025-08-19T12:10:28.7467181Z def build_url(async_: bool = True) -> str
2025-08-19T12:10:28.7467526Z ```
2025-08-19T12:10:28.7467665Z 
2025-08-19T12:10:28.7467816Z Return Postgres DSN from env or PG_* parts.
2025-08-19T12:10:28.7468082Z 
2025-08-19T12:10:28.7468256Z <a id="price_importer.services_common.keepa"></a>
2025-08-19T12:10:28.7468543Z 
2025-08-19T12:10:28.7468690Z # price\_importer.services\_common.keepa
2025-08-19T12:10:28.7469338Z 
2025-08-19T12:10:28.7469543Z <a id="price_importer.services_common.llm"></a>
2025-08-19T12:10:28.7469772Z 
2025-08-19T12:10:28.7469880Z # price\_importer.services\_common.llm
2025-08-19T12:10:28.7470069Z 
2025-08-19T12:10:28.7470202Z <a id="price_importer.services_common.settings"></a>
2025-08-19T12:10:28.7470632Z 
2025-08-19T12:10:28.7470744Z # price\_importer.services\_common.settings
2025-08-19T12:10:28.7470933Z 
2025-08-19T12:10:28.7471042Z <a id="price_importer.services_common.db"></a>
2025-08-19T12:10:28.7471229Z 
2025-08-19T12:10:28.7471333Z # price\_importer.services\_common.db
2025-08-19T12:10:28.7471501Z 
2025-08-19T12:10:28.7471661Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-19T12:10:28.7471915Z 
2025-08-19T12:10:28.7472001Z #### build\_sqlalchemy\_url
2025-08-19T12:10:28.7472138Z 
2025-08-19T12:10:28.7472213Z ```python
2025-08-19T12:10:28.7472403Z def build_sqlalchemy_url() -> str
2025-08-19T12:10:28.7472631Z ```
2025-08-19T12:10:28.7472721Z 
2025-08-19T12:10:28.7472825Z Return Postgres URL for SQLAlchemy engines.
2025-08-19T12:10:28.7473010Z 
2025-08-19T12:10:28.7473161Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-19T12:10:28.7473396Z 
2025-08-19T12:10:28.7473477Z #### build\_asyncpg\_dsn
2025-08-19T12:10:28.7473621Z 
2025-08-19T12:10:28.7473694Z ```python
2025-08-19T12:10:28.7473888Z def build_asyncpg_dsn() -> str
2025-08-19T12:10:28.7474100Z ```
2025-08-19T12:10:28.7474189Z 
2025-08-19T12:10:28.7474330Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-19T12:10:28.7474551Z 
2025-08-19T12:10:28.7474688Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-19T12:10:28.7474910Z 
2025-08-19T12:10:28.7474982Z #### refresh\_mvs
2025-08-19T12:10:28.7475095Z 
2025-08-19T12:10:28.7475169Z ```python
2025-08-19T12:10:28.7475390Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-19T12:10:28.7475663Z ```
2025-08-19T12:10:28.7475755Z 
2025-08-19T12:10:28.7475899Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-19T12:10:28.7476131Z 
2025-08-19T12:10:28.7476241Z <a id="price_importer.services_common"></a>
2025-08-19T12:10:28.7476424Z 
2025-08-19T12:10:28.7476516Z # price\_importer.services\_common
2025-08-19T12:10:28.7476684Z 
2025-08-19T12:10:28.7476793Z <a id="price_importer.services_common.base"></a>
2025-08-19T12:10:28.7477124Z 
2025-08-19T12:10:28.7477228Z # price\_importer.services\_common.base
2025-08-19T12:10:28.7477402Z 
2025-08-19T12:10:28.7477500Z <a id="price_importer.normaliser"></a>
2025-08-19T12:10:28.7477681Z 
2025-08-19T12:10:28.7477772Z # price\_importer.normaliser
2025-08-19T12:10:28.7477918Z 
2025-08-19T12:10:28.7478029Z <a id="price_importer.common.models_vendor"></a>
2025-08-19T12:10:28.7478228Z 
2025-08-19T12:10:28.7478323Z # price\_importer.common.models\_vendor
2025-08-19T12:10:28.7478488Z 
2025-08-19T12:10:28.7478593Z <a id="price_importer.common.db_url"></a>
2025-08-19T12:10:28.7478770Z 
2025-08-19T12:10:28.7478861Z # price\_importer.common.db\_url
2025-08-19T12:10:28.7479247Z 
2025-08-19T12:10:28.7479366Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-19T12:10:28.7479558Z 
2025-08-19T12:10:28.7479629Z #### make\_dsn
2025-08-19T12:10:28.7479740Z 
2025-08-19T12:10:28.7479809Z ```python
2025-08-19T12:10:28.7480000Z def make_dsn(async_: bool = False) -> str
2025-08-19T12:10:28.7480241Z ```
2025-08-19T12:10:28.7480329Z 
2025-08-19T12:10:28.7480458Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-19T12:10:28.7480659Z 
2025-08-19T12:10:28.7480774Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-19T12:10:28.7480972Z 
2025-08-19T12:10:28.7481043Z #### build\_url
2025-08-19T12:10:28.7481148Z 
2025-08-19T12:10:28.7481214Z ```python
2025-08-19T12:10:28.7481404Z def build_url(async_: bool = False) -> str
2025-08-19T12:10:28.7481646Z ```
2025-08-19T12:10:28.7481732Z 
2025-08-19T12:10:28.7481854Z Return Postgres DSN built from environment variables.
2025-08-19T12:10:28.7482054Z 
2025-08-19T12:10:28.7482151Z <a id="price_importer.common"></a>
2025-08-19T12:10:28.7482306Z 
2025-08-19T12:10:28.7482390Z # price\_importer.common
2025-08-19T12:10:28.7482527Z 
2025-08-19T12:10:28.7482622Z <a id="price_importer.common.base"></a>
2025-08-19T12:10:28.7482788Z 
2025-08-19T12:10:28.7482882Z # price\_importer.common.base
2025-08-19T12:10:28.7483158Z 
2025-08-19T12:10:28.7483264Z <a id="price_importer.tests.conftest"></a>
2025-08-19T12:10:28.7483440Z 
2025-08-19T12:10:28.7483536Z # price\_importer.tests.conftest
2025-08-19T12:10:28.7483686Z 
2025-08-19T12:10:28.7483792Z <a id="price_importer.tests.test_reader"></a>
2025-08-19T12:10:28.7483975Z 
2025-08-19T12:10:28.7484065Z # price\_importer.tests.test\_reader
2025-08-19T12:10:28.7484226Z 
2025-08-19T12:10:28.7484334Z <a id="price_importer.tests.test_imports"></a>
2025-08-19T12:10:28.7484514Z 
2025-08-19T12:10:28.7484606Z # price\_importer.tests.test\_imports
2025-08-19T12:10:28.7484766Z 
2025-08-19T12:10:28.7484878Z <a id="price_importer.tests.test_smoke"></a>
2025-08-19T12:10:28.7485052Z 
2025-08-19T12:10:28.7485141Z # price\_importer.tests.test\_smoke
2025-08-19T12:10:28.7485307Z 
2025-08-19T12:10:28.7485416Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-19T12:10:28.7485646Z 
2025-08-19T12:10:28.7485748Z # price\_importer.tests.test\_normaliser
2025-08-19T12:10:28.7485918Z 
2025-08-19T12:10:28.7486013Z <a id="price_importer.tests"></a>
2025-08-19T12:10:28.7486178Z 
2025-08-19T12:10:28.7486260Z # price\_importer.tests
2025-08-19T12:10:28.7486386Z 
2025-08-19T12:10:28.7486474Z <a id="price_importer.reader"></a>
2025-08-19T12:10:28.7486632Z 
2025-08-19T12:10:28.7486714Z # price\_importer.reader
2025-08-19T12:10:28.7486842Z 
2025-08-19T12:10:28.7486943Z <a id="price_importer.repository"></a>
2025-08-19T12:10:28.7487104Z 
2025-08-19T12:10:28.7487191Z # price\_importer.repository
2025-08-19T12:10:28.7487377Z 
2025-08-19T12:10:28.7487472Z <a id="price_importer.import"></a>
2025-08-19T12:10:28.7487623Z 
2025-08-19T12:10:28.7487704Z # price\_importer.import
2025-08-19T12:10:28.7487835Z 
2025-08-19T12:10:28.7487913Z <a id="fees_h10"></a>
2025-08-19T12:10:28.7488030Z 
2025-08-19T12:10:28.7488104Z # fees\_h10
2025-08-19T12:10:28.7488199Z 
2025-08-19T12:10:28.7488281Z <a id="fees_h10.worker"></a>
2025-08-19T12:10:28.7488414Z 
2025-08-19T12:10:28.7488493Z # fees\_h10.worker
2025-08-19T12:10:28.7488607Z 
2025-08-19T12:10:28.7488830Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-19T12:10:28.7489233Z 
2025-08-19T12:10:28.7489320Z #### list\_active\_asins
2025-08-19T12:10:28.7489444Z 
2025-08-19T12:10:28.7489517Z ```python
2025-08-19T12:10:28.7489704Z def list_active_asins() -> list[str]
2025-08-19T12:10:28.7489932Z ```
2025-08-19T12:10:28.7490020Z 
2025-08-19T12:10:28.7490138Z Return known ASINs or an empty list if unavailable.
2025-08-19T12:10:28.7490333Z 
2025-08-19T12:10:28.7490430Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-19T12:10:28.7490590Z 
2025-08-19T12:10:28.7490678Z # fees\_h10.tests.test\_smoke
2025-08-19T12:10:28.7490831Z 
2025-08-19T12:10:28.7490913Z <a id="fees_h10.tests"></a>
2025-08-19T12:10:28.7491049Z 
2025-08-19T12:10:28.7491130Z # fees\_h10.tests
2025-08-19T12:10:28.7491240Z 
2025-08-19T12:10:28.7491322Z <a id="fees_h10.client"></a>
2025-08-19T12:10:28.7491461Z 
2025-08-19T12:10:28.7491538Z # fees\_h10.client
2025-08-19T12:10:28.7491644Z 
2025-08-19T12:10:28.7491737Z <a id="fees_h10.repository"></a>
2025-08-19T12:10:28.7491895Z 
2025-08-19T12:10:28.7491974Z # fees\_h10.repository
2025-08-19T12:10:28.7492096Z 
2025-08-19T12:10:28.7492174Z <a id="emailer"></a>
2025-08-19T12:10:28.7492296Z 
2025-08-19T12:10:28.7492363Z # emailer
2025-08-19T12:10:28.7492456Z 
2025-08-19T12:10:28.7492569Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-19T12:10:28.7492749Z 
2025-08-19T12:10:28.7492841Z # emailer.tests.test\_import\_emailer
2025-08-19T12:10:28.7493010Z 
2025-08-19T12:10:28.7493099Z <a id="emailer.tests.test_smoke"></a>
2025-08-19T12:10:28.7493252Z 
2025-08-19T12:10:28.7493335Z # emailer.tests.test\_smoke
2025-08-19T12:10:28.7493478Z 
2025-08-19T12:10:28.7493563Z <a id="emailer.tests"></a>
2025-08-19T12:10:28.7493694Z 
2025-08-19T12:10:28.7493774Z # emailer.tests
2025-08-19T12:10:28.7493880Z 
2025-08-19T12:10:28.7493968Z <a id="emailer.generate_body"></a>
2025-08-19T12:10:28.7494127Z 
2025-08-19T12:10:28.7494207Z # emailer.generate\_body
2025-08-19T12:10:28.7494334Z 
2025-08-19T12:10:28.7494551Z <a id="llm_server"></a>
2025-08-19T12:10:28.7494683Z 
2025-08-19T12:10:28.7494751Z # llm\_server
2025-08-19T12:10:28.7494851Z 
2025-08-19T12:10:28.7494939Z <a id="llm_server.app"></a>
2025-08-19T12:10:28.7495071Z 
2025-08-19T12:10:28.7495142Z # llm\_server.app
2025-08-19T12:10:28.7495257Z 
