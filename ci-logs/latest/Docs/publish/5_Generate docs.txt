2025-08-18T22:10:39.5444128Z ##[group]Run pydoc-markdown
2025-08-18T22:10:39.5444475Z [36;1mpydoc-markdown[0m
2025-08-18T22:10:39.5484385Z shell: /usr/bin/bash -e {0}
2025-08-18T22:10:39.5484621Z env:
2025-08-18T22:10:39.5484857Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:10:39.5485270Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-08-18T22:10:39.5485665Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:10:39.5486012Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:10:39.5486346Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-08-18T22:10:39.5486689Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-08-18T22:10:39.5486972Z ##[endgroup]
2025-08-18T22:10:39.8410290Z [WARNING - pydoc_markdown.main]: Unknown configuration options:
2025-08-18T22:10:39.8410754Z Unknown key(s) "{'output_directory'}" at:
2025-08-18T22:10:39.8411035Z In "pydoc-markdown.yml"
2025-08-18T22:10:39.8411275Z   $: TypeHint(pydoc_markdown.PydocMarkdown)
2025-08-18T22:10:39.8411676Z   .renderer: TypeHint(pydoc_markdown.interfaces.Renderer)
2025-08-18T22:10:39.8412085Z   ^: TypeHint(pydoc_markdown.contrib.renderers.markdown.MarkdownRenderer)
2025-08-18T22:10:39.8412364Z 
2025-08-18T22:10:40.1602320Z <a id="__init__"></a>
2025-08-18T22:10:40.1602783Z 
2025-08-18T22:10:40.1602914Z # \_\_init\_\_
2025-08-18T22:10:40.1603104Z 
2025-08-18T22:10:40.1603223Z <a id="api"></a>
2025-08-18T22:10:40.1603411Z 
2025-08-18T22:10:40.1603526Z # api
2025-08-18T22:10:40.1603869Z 
2025-08-18T22:10:40.1604008Z <a id="api.errors"></a>
2025-08-18T22:10:40.1604246Z 
2025-08-18T22:10:40.1604363Z # api.errors
2025-08-18T22:10:40.1604556Z 
2025-08-18T22:10:40.1604747Z <a id="api.sentry_config"></a>
2025-08-18T22:10:40.1605103Z 
2025-08-18T22:10:40.1605228Z # api.sentry\_config
2025-08-18T22:10:40.1605440Z 
2025-08-18T22:10:40.1605610Z <a id="api.tests.test_sentry_scrub"></a>
2025-08-18T22:10:40.1605922Z 
2025-08-18T22:10:40.1606065Z # api.tests.test\_sentry\_scrub
2025-08-18T22:10:40.1606360Z 
2025-08-18T22:10:40.1606511Z <a id="api.tests.test_errors_json"></a>
2025-08-18T22:10:40.1606805Z 
2025-08-18T22:10:40.1606948Z # api.tests.test\_errors\_json
2025-08-18T22:10:40.1607205Z 
2025-08-18T22:10:40.1607340Z <a id="api.tests.test_llm"></a>
2025-08-18T22:10:40.1607590Z 
2025-08-18T22:10:40.1607721Z # api.tests.test\_llm
2025-08-18T22:10:40.1607932Z 
2025-08-18T22:10:40.1608090Z <a id="api.tests.test_sentry_event"></a>
2025-08-18T22:10:40.1608390Z 
2025-08-18T22:10:40.1608530Z # api.tests.test\_sentry\_event
2025-08-18T22:10:40.1608782Z 
2025-08-18T22:10:40.1609000Z <a id="api.tests.test_sentry_event.DummyTransport"></a>
2025-08-18T22:10:40.1609386Z 
2025-08-18T22:10:40.1609526Z ## DummyTransport Objects
2025-08-18T22:10:40.1609759Z 
2025-08-18T22:10:40.1609882Z ```python
2025-08-18T22:10:40.1610173Z class DummyTransport()
2025-08-18T22:10:40.1610498Z ```
2025-08-18T22:10:40.1610647Z 
2025-08-18T22:10:40.1610958Z <a id="api.tests.test_sentry_event.DummyTransport.capture_envelope"></a>
2025-08-18T22:10:40.1611759Z 
2025-08-18T22:10:40.1611892Z #### capture\_envelope
2025-08-18T22:10:40.1612103Z 
2025-08-18T22:10:40.1612213Z ```python
2025-08-18T22:10:40.1612523Z def capture_envelope(envelope)
2025-08-18T22:10:40.1612879Z ```
2025-08-18T22:10:40.1613018Z 
2025-08-18T22:10:40.1613232Z Capture events sent as envelopes by Sentry SDK >= 2.0.
2025-08-18T22:10:40.1613823Z 
2025-08-18T22:10:40.1613978Z <a id="api.tests.test_cors"></a>
2025-08-18T22:10:40.1614288Z 
2025-08-18T22:10:40.1614423Z # api.tests.test\_cors
2025-08-18T22:10:40.1614623Z 
2025-08-18T22:10:40.1614712Z <a id="api.tests.test_imports"></a>
2025-08-18T22:10:40.1614870Z 
2025-08-18T22:10:40.1614956Z # api.tests.test\_imports
2025-08-18T22:10:40.1615086Z 
2025-08-18T22:10:40.1615181Z <a id="api.tests.test_rate_limit"></a>
2025-08-18T22:10:40.1615348Z 
2025-08-18T22:10:40.1615436Z # api.tests.test\_rate\_limit
2025-08-18T22:10:40.1615581Z 
2025-08-18T22:10:40.1615680Z <a id="api.tests.test_rate_limit.app"></a>
2025-08-18T22:10:40.1616113Z 
2025-08-18T22:10:40.1616178Z #### app
2025-08-18T22:10:40.1616268Z 
2025-08-18T22:10:40.1616334Z noqa: E402
2025-08-18T22:10:40.1616432Z 
2025-08-18T22:10:40.1616523Z <a id="api.tests.test_entrypoint"></a>
2025-08-18T22:10:40.1616689Z 
2025-08-18T22:10:40.1616774Z # api.tests.test\_entrypoint
2025-08-18T22:10:40.1616909Z 
2025-08-18T22:10:40.1616993Z <a id="api.tests.test_health"></a>
2025-08-18T22:10:40.1617148Z 
2025-08-18T22:10:40.1617223Z # api.tests.test\_health
2025-08-18T22:10:40.1617347Z 
2025-08-18T22:10:40.1617426Z <a id="api.logging_config"></a>
2025-08-18T22:10:40.1617573Z 
2025-08-18T22:10:40.1617642Z # api.logging\_config
2025-08-18T22:10:40.1617756Z 
2025-08-18T22:10:40.1617840Z <a id="api.migrations.env"></a>
2025-08-18T22:10:40.1617980Z 
2025-08-18T22:10:40.1618050Z # api.migrations.env
2025-08-18T22:10:40.1618169Z 
2025-08-18T22:10:40.1618285Z <a id="api.migrations.versions.0022_fix_roi_view"></a>
2025-08-18T22:10:40.1618487Z 
2025-08-18T22:10:40.1618590Z # api.migrations.versions.0022\_fix\_roi\_view
2025-08-18T22:10:40.1618787Z 
2025-08-18T22:10:40.1618893Z <a id="api.migrations.versions.0004_fee_cron"></a>
2025-08-18T22:10:40.1619081Z 
2025-08-18T22:10:40.1619182Z # api.migrations.versions.0004\_fee\_cron
2025-08-18T22:10:40.1619355Z 
2025-08-18T22:10:40.1619508Z <a id="api.migrations.versions.3e9d5c5aff2c_rename_fulf_fee"></a>
2025-08-18T22:10:40.1619753Z 
2025-08-18T22:10:40.1619896Z # api.migrations.versions.3e9d5c5aff2c\_rename\_fulf\_fee
2025-08-18T22:10:40.1620111Z 
2025-08-18T22:10:40.1620229Z <a id="api.migrations.versions.0003_vendor_prices"></a>
2025-08-18T22:10:40.1620433Z 
2025-08-18T22:10:40.1620538Z # api.migrations.versions.0003\_vendor\_prices
2025-08-18T22:10:40.1620720Z 
2025-08-18T22:10:40.1620840Z <a id="api.migrations.versions.0024_create_buybox"></a>
2025-08-18T22:10:40.1621053Z 
2025-08-18T22:10:40.1621157Z # api.migrations.versions.0024\_create\_buybox
2025-08-18T22:10:40.1621348Z 
2025-08-18T22:10:40.1621475Z <a id="api.migrations.versions.0002_create_roi_view"></a>
2025-08-18T22:10:40.1621690Z 
2025-08-18T22:10:40.1621803Z # api.migrations.versions.0002\_create\_roi\_view
2025-08-18T22:10:40.1621993Z 
2025-08-18T22:10:40.1622109Z <a id="api.migrations.versions.0006_fix_roi_views"></a>
2025-08-18T22:10:40.1622305Z 
2025-08-18T22:10:40.1622416Z # api.migrations.versions.0006\_fix\_roi\_views
2025-08-18T22:10:40.1622599Z 
2025-08-18T22:10:40.1622719Z <a id="api.migrations.versions.0020_unified_schema"></a>
2025-08-18T22:10:40.1622926Z 
2025-08-18T22:10:40.1623028Z # api.migrations.versions.0020\_unified\_schema
2025-08-18T22:10:40.1623208Z 
2025-08-18T22:10:40.1623349Z <a id="api.migrations.versions.0025_pr4_indexes_loadlog"></a>
2025-08-18T22:10:40.1623806Z 
2025-08-18T22:10:40.1623967Z # api.migrations.versions.0025\_pr4\_indexes\_loadlog
2025-08-18T22:10:40.1624179Z 
2025-08-18T22:10:40.1624305Z <a id="api.migrations.versions.0023_add_storage_fee"></a>
2025-08-18T22:10:40.1624513Z 
2025-08-18T22:10:40.1624621Z # api.migrations.versions.0023\_add\_storage\_fee
2025-08-18T22:10:40.1624972Z 
2025-08-18T22:10:40.1625111Z <a id="api.migrations.versions.0026_amazon_new_reports"></a>
2025-08-18T22:10:40.1625354Z 
2025-08-18T22:10:40.1625471Z # api.migrations.versions.0026\_amazon\_new\_reports
2025-08-18T22:10:40.1625714Z 
2025-08-18T22:10:40.1625830Z <a id="api.migrations.versions.0001_baseline"></a>
2025-08-18T22:10:40.1626023Z 
2025-08-18T22:10:40.1626118Z # api.migrations.versions.0001\_baseline
2025-08-18T22:10:40.1626291Z 
2025-08-18T22:10:40.1626386Z <a id="api.migrations.versions"></a>
2025-08-18T22:10:40.1626549Z 
2025-08-18T22:10:40.1626631Z # api.migrations.versions
2025-08-18T22:10:40.1626767Z 
2025-08-18T22:10:40.1626847Z <a id="api.migrations"></a>
2025-08-18T22:10:40.1626980Z 
2025-08-18T22:10:40.1627053Z # api.migrations
2025-08-18T22:10:40.1627158Z 
2025-08-18T22:10:40.1627225Z <a id="api.db"></a>
2025-08-18T22:10:40.1627333Z 
2025-08-18T22:10:40.1627400Z # api.db
2025-08-18T22:10:40.1627486Z 
2025-08-18T22:10:40.1627566Z <a id="api.routes.stats"></a>
2025-08-18T22:10:40.1627854Z 
2025-08-18T22:10:40.1627924Z # api.routes.stats
2025-08-18T22:10:40.1628029Z 
2025-08-18T22:10:40.1628115Z <a id="api.routes.stats.kpi"></a>
2025-08-18T22:10:40.1628274Z 
2025-08-18T22:10:40.1628338Z #### kpi
2025-08-18T22:10:40.1628424Z 
2025-08-18T22:10:40.1628499Z ```python
2025-08-18T22:10:40.1628663Z @router.get("/stats/kpi")
2025-08-18T22:10:40.1628916Z def kpi() -> List[Dict[str, int]]
2025-08-18T22:10:40.1629122Z ```
2025-08-18T22:10:40.1629213Z 
2025-08-18T22:10:40.1629291Z Return KPI metrics (mock).
2025-08-18T22:10:40.1629422Z 
2025-08-18T22:10:40.1629521Z <a id="api.routes.stats.roi_by_vendor"></a>
2025-08-18T22:10:40.1629704Z 
2025-08-18T22:10:40.1629773Z #### roi\_by\_vendor
2025-08-18T22:10:40.1629884Z 
2025-08-18T22:10:40.1629952Z ```python
2025-08-18T22:10:40.1630118Z @router.get("/stats/roi_by_vendor")
2025-08-18T22:10:40.1630365Z def roi_by_vendor() -> List[Dict[str, int]]
2025-08-18T22:10:40.1630589Z ```
2025-08-18T22:10:40.1630673Z 
2025-08-18T22:10:40.1630761Z Return ROI percent by vendor.
2025-08-18T22:10:40.1630902Z 
2025-08-18T22:10:40.1630991Z <a id="api.routes.stats.roi_trend"></a>
2025-08-18T22:10:40.1631164Z 
2025-08-18T22:10:40.1631228Z #### roi\_trend
2025-08-18T22:10:40.1631328Z 
2025-08-18T22:10:40.1631395Z ```python
2025-08-18T22:10:40.1631555Z @router.get("/stats/roi_trend")
2025-08-18T22:10:40.1631790Z def roi_trend() -> List[Dict[str, int | str]]
2025-08-18T22:10:40.1632022Z ```
2025-08-18T22:10:40.1632111Z 
2025-08-18T22:10:40.1632184Z Return 30-day ROI trend.
2025-08-18T22:10:40.1632311Z 
2025-08-18T22:10:40.1632389Z <a id="api.routes.roi"></a>
2025-08-18T22:10:40.1632526Z 
2025-08-18T22:10:40.1632593Z # api.routes.roi
2025-08-18T22:10:40.1632696Z 
2025-08-18T22:10:40.1632782Z <a id="api.routes.health"></a>
2025-08-18T22:10:40.1632923Z 
2025-08-18T22:10:40.1632992Z # api.routes.health
2025-08-18T22:10:40.1633103Z 
2025-08-18T22:10:40.1633193Z <a id="api.routes.health.MAX_SKEW"></a>
2025-08-18T22:10:40.1633358Z 
2025-08-18T22:10:40.1633428Z #### MAX\_SKEW
2025-08-18T22:10:40.1633530Z 
2025-08-18T22:10:40.1633780Z seconds
2025-08-18T22:10:40.1633878Z 
2025-08-18T22:10:40.1633982Z <a id="api.routes.health.health"></a>
2025-08-18T22:10:40.1634147Z 
2025-08-18T22:10:40.1634209Z #### health
2025-08-18T22:10:40.1634296Z 
2025-08-18T22:10:40.1634364Z ```python
2025-08-18T22:10:40.1634555Z @router.get("/health", include_in_schema=False)
2025-08-18T22:10:40.1634930Z async def health(session: AsyncSession = Depends(get_session)) -> JSONResponse
2025-08-18T22:10:40.1635268Z ```
2025-08-18T22:10:40.1635357Z 
2025-08-18T22:10:40.1635469Z Return 200 when DB reachable and clocks are in sync.
2025-08-18T22:10:40.1635667Z 
2025-08-18T22:10:40.1635760Z <a id="api.routes.repository"></a>
2025-08-18T22:10:40.1635917Z 
2025-08-18T22:10:40.1635996Z # api.routes.repository
2025-08-18T22:10:40.1636122Z 
2025-08-18T22:10:40.1636240Z <a id="api.routes"></a>
2025-08-18T22:10:40.1636361Z 
2025-08-18T22:10:40.1636425Z # api.routes
2025-08-18T22:10:40.1636522Z 
2025-08-18T22:10:40.1636740Z <a id="api.models.fee"></a>
2025-08-18T22:10:40.1636890Z 
2025-08-18T22:10:40.1636958Z # api.models.fee
2025-08-18T22:10:40.1637065Z 
2025-08-18T22:10:40.1637144Z <a id="api.models"></a>
2025-08-18T22:10:40.1637262Z 
2025-08-18T22:10:40.1637326Z # api.models
2025-08-18T22:10:40.1637427Z 
2025-08-18T22:10:40.1637507Z <a id="api.roi_repository"></a>
2025-08-18T22:10:40.1637648Z 
2025-08-18T22:10:40.1637723Z # api.roi\_repository
2025-08-18T22:10:40.1637843Z 
2025-08-18T22:10:40.1637912Z <a id="api.main"></a>
2025-08-18T22:10:40.1638023Z 
2025-08-18T22:10:40.1638091Z # api.main
2025-08-18T22:10:40.1638182Z 
2025-08-18T22:10:40.1638259Z <a id="api.main.ready"></a>
2025-08-18T22:10:40.1638399Z 
2025-08-18T22:10:40.1638459Z #### ready
2025-08-18T22:10:40.1638547Z 
2025-08-18T22:10:40.1638609Z ```python
2025-08-18T22:10:40.1638875Z @app.get("/ready", status_code=status.HTTP_200_OK, include_in_schema=False)
2025-08-18T22:10:40.1639311Z async def ready(session: AsyncSession = Depends(get_session)) -> dict[str,
2025-08-18T22:10:40.1639790Z                                                                       str]
2025-08-18T22:10:40.1640027Z ```
2025-08-18T22:10:40.1640113Z 
2025-08-18T22:10:40.1640211Z Return 200 only when migrations are at head.
2025-08-18T22:10:40.1640390Z 
2025-08-18T22:10:40.1640464Z <a id="api.config"></a>
2025-08-18T22:10:40.1640580Z 
2025-08-18T22:10:40.1640644Z # api.config
2025-08-18T22:10:40.1640743Z 
2025-08-18T22:10:40.1640810Z <a id="etl"></a>
2025-08-18T22:10:40.1640911Z 
2025-08-18T22:10:40.1640976Z # etl
2025-08-18T22:10:40.1641062Z 
2025-08-18T22:10:40.1641143Z <a id="etl.fba_fee_ingestor"></a>
2025-08-18T22:10:40.1641290Z 
2025-08-18T22:10:40.1641370Z # etl.fba\_fee\_ingestor
2025-08-18T22:10:40.1641491Z 
2025-08-18T22:10:40.1641570Z <a id="etl.sp_fees_ingestor"></a>
2025-08-18T22:10:40.1641716Z 
2025-08-18T22:10:40.1641794Z # etl.sp\_fees\_ingestor
2025-08-18T22:10:40.1641911Z 
2025-08-18T22:10:40.1641998Z <a id="etl.keepa_ingestor"></a>
2025-08-18T22:10:40.1642144Z 
2025-08-18T22:10:40.1642218Z # etl.keepa\_ingestor
2025-08-18T22:10:40.1642335Z 
2025-08-18T22:10:40.1642400Z <a id="etl.db"></a>
2025-08-18T22:10:40.1642506Z 
2025-08-18T22:10:40.1642571Z # etl.db
2025-08-18T22:10:40.1642665Z 
2025-08-18T22:10:40.1642745Z <a id="etl.dialects.schemas"></a>
2025-08-18T22:10:40.1642889Z 
2025-08-18T22:10:40.1642970Z # etl.dialects.schemas
2025-08-18T22:10:40.1643087Z 
2025-08-18T22:10:40.1643194Z <a id="etl.dialects.amazon_reimbursements"></a>
2025-08-18T22:10:40.1643775Z 
2025-08-18T22:10:40.1643953Z # etl.dialects.amazon\_reimbursements
2025-08-18T22:10:40.1644133Z 
2025-08-18T22:10:40.1644234Z <a id="etl.dialects.amazon_ads_sp_cost"></a>
2025-08-18T22:10:40.1644422Z 
2025-08-18T22:10:40.1644507Z # etl.dialects.amazon\_ads\_sp\_cost
2025-08-18T22:10:40.1644668Z 
2025-08-18T22:10:40.1644765Z <a id="etl.dialects.amazon_returns"></a>
2025-08-18T22:10:40.1644935Z 
2025-08-18T22:10:40.1645018Z # etl.dialects.amazon\_returns
2025-08-18T22:10:40.1645167Z 
2025-08-18T22:10:40.1645274Z <a id="etl.dialects.amazon_fee_preview"></a>
2025-08-18T22:10:40.1645446Z 
2025-08-18T22:10:40.1645530Z # etl.dialects.amazon\_fee\_preview
2025-08-18T22:10:40.1645690Z 
2025-08-18T22:10:40.1645794Z <a id="etl.dialects.amazon_inventory_ledger"></a>
2025-08-18T22:10:40.1645980Z 
2025-08-18T22:10:40.1646075Z # etl.dialects.amazon\_inventory\_ledger
2025-08-18T22:10:40.1646238Z 
2025-08-18T22:10:40.1646332Z <a id="etl.dialects.amazon_settlements"></a>
2025-08-18T22:10:40.1646506Z 
2025-08-18T22:10:40.1646592Z # etl.dialects.amazon\_settlements
2025-08-18T22:10:40.1646741Z 
2025-08-18T22:10:40.1646817Z <a id="etl.dialects"></a>
2025-08-18T22:10:40.1646950Z 
2025-08-18T22:10:40.1647015Z # etl.dialects
2025-08-18T22:10:40.1647113Z 
2025-08-18T22:10:40.1647191Z <a id="ingest"></a>
2025-08-18T22:10:40.1647296Z 
2025-08-18T22:10:40.1647355Z # ingest
2025-08-18T22:10:40.1647440Z 
2025-08-18T22:10:40.1647528Z <a id="ingest.maintenance"></a>
2025-08-18T22:10:40.1647668Z 
2025-08-18T22:10:40.1647740Z # ingest.maintenance
2025-08-18T22:10:40.1647994Z 
2025-08-18T22:10:40.1648075Z <a id="ingest.copy_loader"></a>
2025-08-18T22:10:40.1648214Z 
2025-08-18T22:10:40.1648288Z # ingest.copy\_loader
2025-08-18T22:10:40.1648400Z 
2025-08-18T22:10:40.1648500Z <a id="ingest.copy_loader.copy_df_via_temp"></a>
2025-08-18T22:10:40.1648681Z 
2025-08-18T22:10:40.1648761Z #### copy\_df\_via\_temp
2025-08-18T22:10:40.1648882Z 
2025-08-18T22:10:40.1648950Z ```python
2025-08-18T22:10:40.1649123Z def copy_df_via_temp(engine: Engine,
2025-08-18T22:10:40.1649357Z                      df: pd.DataFrame,
2025-08-18T22:10:40.1649599Z                      target_table: str,
2025-08-18T22:10:40.1649825Z                      *,
2025-08-18T22:10:40.1650031Z                      target_schema: Optional[str] = None,
2025-08-18T22:10:40.1650306Z                      columns: Sequence[str],
2025-08-18T22:10:40.1650596Z                      conflict_cols: Optional[Sequence[str]] = None,
2025-08-18T22:10:40.1650887Z                      analyze_after: bool = False,
2025-08-18T22:10:40.1651283Z                      connection: Any | None = None) -> int
2025-08-18T22:10:40.1651522Z ```
2025-08-18T22:10:40.1651608Z 
2025-08-18T22:10:40.1651762Z Bulk load *df* into *target_table* using COPY and a staging table.
2025-08-18T22:10:40.1652000Z 
2025-08-18T22:10:40.1652088Z <a id="ingest.tests.test_smoke"></a>
2025-08-18T22:10:40.1652248Z 
2025-08-18T22:10:40.1652334Z # ingest.tests.test\_smoke
2025-08-18T22:10:40.1652464Z 
2025-08-18T22:10:40.1652541Z <a id="ingest.tests"></a>
2025-08-18T22:10:40.1652673Z 
2025-08-18T22:10:40.1652742Z # ingest.tests
2025-08-18T22:10:40.1652842Z 
2025-08-18T22:10:40.1652928Z <a id="ingest.upload_router"></a>
2025-08-18T22:10:40.1653081Z 
2025-08-18T22:10:40.1653156Z # ingest.upload\_router
2025-08-18T22:10:40.1653275Z 
2025-08-18T22:10:40.1653363Z <a id="ingest.email_watcher"></a>
2025-08-18T22:10:40.1653505Z 
2025-08-18T22:10:40.1653753Z # ingest.email\_watcher
2025-08-18T22:10:40.1653897Z 
2025-08-18T22:10:40.1653987Z <a id="ingest.email_watcher.main"></a>
2025-08-18T22:10:40.1654156Z 
2025-08-18T22:10:40.1654218Z #### main
2025-08-18T22:10:40.1654313Z 
2025-08-18T22:10:40.1654378Z ```python
2025-08-18T22:10:40.1654556Z def main() -> dict[str, str]
2025-08-18T22:10:40.1654749Z ```
2025-08-18T22:10:40.1654832Z 
2025-08-18T22:10:40.1654984Z Upload CSV/XLSX attachments to MinIO and trigger ingestion.
2025-08-18T22:10:40.1655227Z 
2025-08-18T22:10:40.1655361Z Returns {"status": "success"} when processing completes.
2025-08-18T22:10:40.1655572Z 
2025-08-18T22:10:40.1655649Z <a id="ingest.tasks"></a>
2025-08-18T22:10:40.1655782Z 
2025-08-18T22:10:40.1655849Z # ingest.tasks
2025-08-18T22:10:40.1655950Z 
2025-08-18T22:10:40.1656058Z <a id="ingest.tasks.task_import_file"></a>
2025-08-18T22:10:40.1656233Z 
2025-08-18T22:10:40.1656305Z #### task\_import\_file
2025-08-18T22:10:40.1656427Z 
2025-08-18T22:10:40.1656491Z ```python
2025-08-18T22:10:40.1656698Z @celery_app.task(name="ingest.import_file", bind=True)
2025-08-18T22:10:40.1656985Z def task_import_file(self: Any,
2025-08-18T22:10:40.1657202Z                      uri: str,
2025-08-18T22:10:40.1657426Z                      report_type: Optional[str] = None,
2025-08-18T22:10:40.1657700Z                      force: bool = False) -> Dict[str, Any]
2025-08-18T22:10:40.1657932Z ```
2025-08-18T22:10:40.1658014Z 
2025-08-18T22:10:40.1658149Z Import a file into Postgres using existing ETL pipeline.
2025-08-18T22:10:40.1658356Z 
2025-08-18T22:10:40.1658436Z <a id="ingest.celery_app"></a>
2025-08-18T22:10:40.1658582Z 
2025-08-18T22:10:40.1658653Z # ingest.celery\_app
2025-08-18T22:10:40.1658766Z 
2025-08-18T22:10:40.1658853Z <a id="ingest.ingest_router"></a>
2025-08-18T22:10:40.1658999Z 
2025-08-18T22:10:40.1659070Z # ingest.ingest\_router
2025-08-18T22:10:40.1659184Z 
2025-08-18T22:10:40.1659264Z <a id="logistics_etl"></a>
2025-08-18T22:10:40.1659390Z 
2025-08-18T22:10:40.1659456Z # logistics\_etl
2025-08-18T22:10:40.1659566Z 
2025-08-18T22:10:40.1659640Z Daily logistics ETL job.
2025-08-18T22:10:40.1659766Z 
2025-08-18T22:10:40.1659989Z <a id="logistics_etl.__main__"></a>
2025-08-18T22:10:40.1660155Z 
2025-08-18T22:10:40.1660231Z # logistics\_etl.\_\_main\_\_
2025-08-18T22:10:40.1660365Z 
2025-08-18T22:10:40.1660447Z <a id="logistics_etl.dsn"></a>
2025-08-18T22:10:40.1660582Z 
2025-08-18T22:10:40.1660650Z # logistics\_etl.dsn
2025-08-18T22:10:40.1660768Z 
2025-08-18T22:10:40.1660883Z Local DSN builder to avoid cross-service dependency.
2025-08-18T22:10:40.1661088Z 
2025-08-18T22:10:40.1661179Z <a id="logistics_etl.dsn.build_dsn"></a>
2025-08-18T22:10:40.1661351Z 
2025-08-18T22:10:40.1661417Z #### build\_dsn
2025-08-18T22:10:40.1661517Z 
2025-08-18T22:10:40.1661587Z ```python
2025-08-18T22:10:40.1661761Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:10:40.1661987Z ```
2025-08-18T22:10:40.1662067Z 
2025-08-18T22:10:40.1662204Z Return a Postgres DSN assembled from environment variables.
2025-08-18T22:10:40.1662434Z 
2025-08-18T22:10:40.1662580Z Prefers explicit DSNs via ``PG_SYNC_DSN``/``PG_ASYNC_DSN`` or
2025-08-18T22:10:40.1663107Z ``DATABASE_URL``. Falls back to individual PG_* settings and raises an
2025-08-18T22:10:40.1663454Z error when any required variable is missing.
2025-08-18T22:10:40.1663921Z 
2025-08-18T22:10:40.1664030Z <a id="logistics_etl.tests.conftest"></a>
2025-08-18T22:10:40.1664203Z 
2025-08-18T22:10:40.1664288Z # logistics\_etl.tests.conftest
2025-08-18T22:10:40.1664437Z 
2025-08-18T22:10:40.1664540Z <a id="logistics_etl.tests.test_repository"></a>
2025-08-18T22:10:40.1664725Z 
2025-08-18T22:10:40.1664814Z # logistics\_etl.tests.test\_repository
2025-08-18T22:10:40.1664982Z 
2025-08-18T22:10:40.1665074Z <a id="logistics_etl.tests.test_cron"></a>
2025-08-18T22:10:40.1665243Z 
2025-08-18T22:10:40.1665332Z # logistics\_etl.tests.test\_cron
2025-08-18T22:10:40.1665482Z 
2025-08-18T22:10:40.1665577Z <a id="logistics_etl.tests.test_imports"></a>
2025-08-18T22:10:40.1665757Z 
2025-08-18T22:10:40.1665842Z # logistics\_etl.tests.test\_imports
2025-08-18T22:10:40.1665999Z 
2025-08-18T22:10:40.1666096Z <a id="logistics_etl.tests.test_smoke"></a>
2025-08-18T22:10:40.1666285Z 
2025-08-18T22:10:40.1666369Z # logistics\_etl.tests.test\_smoke
2025-08-18T22:10:40.1666522Z 
2025-08-18T22:10:40.1666623Z <a id="logistics_etl.tests.test_client"></a>
2025-08-18T22:10:40.1666797Z 
2025-08-18T22:10:40.1666881Z # logistics\_etl.tests.test\_client
2025-08-18T22:10:40.1667044Z 
2025-08-18T22:10:40.1667124Z <a id="logistics_etl.tests"></a>
2025-08-18T22:10:40.1667268Z 
2025-08-18T22:10:40.1667339Z # logistics\_etl.tests
2025-08-18T22:10:40.1667464Z 
2025-08-18T22:10:40.1667544Z <a id="logistics_etl.flow"></a>
2025-08-18T22:10:40.1667682Z 
2025-08-18T22:10:40.1667760Z # logistics\_etl.flow
2025-08-18T22:10:40.1667873Z 
2025-08-18T22:10:40.1667957Z <a id="logistics_etl.client"></a>
2025-08-18T22:10:40.1668111Z 
2025-08-18T22:10:40.1668185Z # logistics\_etl.client
2025-08-18T22:10:40.1668303Z 
2025-08-18T22:10:40.1668382Z <a id="logistics_etl.cron"></a>
2025-08-18T22:10:40.1668526Z 
2025-08-18T22:10:40.1668597Z # logistics\_etl.cron
2025-08-18T22:10:40.1668716Z 
2025-08-18T22:10:40.1668800Z <a id="logistics_etl.db"></a>
2025-08-18T22:10:40.1668936Z 
2025-08-18T22:10:40.1708251Z # logistics\_etl.db
2025-08-18T22:10:40.1708478Z 
2025-08-18T22:10:40.1708643Z <a id="logistics_etl.repository"></a>
2025-08-18T22:10:40.1708924Z 
2025-08-18T22:10:40.1709062Z # logistics\_etl.repository
2025-08-18T22:10:40.1709305Z 
2025-08-18T22:10:40.1709429Z <a id="alert_bot"></a>
2025-08-18T22:10:40.1709630Z 
2025-08-18T22:10:40.1709744Z # alert\_bot
2025-08-18T22:10:40.1709903Z 
2025-08-18T22:10:40.1710071Z <a id="alert_bot.tests.test_smoke"></a>
2025-08-18T22:10:40.1710364Z 
2025-08-18T22:10:40.1710499Z # alert\_bot.tests.test\_smoke
2025-08-18T22:10:40.1710739Z 
2025-08-18T22:10:40.1710877Z <a id="alert_bot.tests"></a>
2025-08-18T22:10:40.1711106Z 
2025-08-18T22:10:40.1711218Z # alert\_bot.tests
2025-08-18T22:10:40.1711407Z 
2025-08-18T22:10:40.1711540Z <a id="alert_bot.alert_bot"></a>
2025-08-18T22:10:40.1711789Z 
2025-08-18T22:10:40.1711920Z # alert\_bot.alert\_bot
2025-08-18T22:10:40.1712335Z 
2025-08-18T22:10:40.1712467Z <a id="alert_bot.rules"></a>
2025-08-18T22:10:40.1712697Z 
2025-08-18T22:10:40.1712818Z # alert\_bot.rules
2025-08-18T22:10:40.1712999Z 
2025-08-18T22:10:40.1713113Z <a id="common"></a>
2025-08-18T22:10:40.1713300Z 
2025-08-18T22:10:40.1713402Z # common
2025-08-18T22:10:40.1713551Z 
2025-08-18T22:10:40.1713863Z <a id="common.dsn"></a>
2025-08-18T22:10:40.1714083Z 
2025-08-18T22:10:40.1714213Z # common.dsn
2025-08-18T22:10:40.1714312Z 
2025-08-18T22:10:40.1714401Z <a id="common.dsn.build_dsn"></a>
2025-08-18T22:10:40.1714561Z 
2025-08-18T22:10:40.1714626Z #### build\_dsn
2025-08-18T22:10:40.1714732Z 
2025-08-18T22:10:40.1714803Z ```python
2025-08-18T22:10:40.1714981Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:10:40.1715211Z ```
2025-08-18T22:10:40.1715293Z 
2025-08-18T22:10:40.1715422Z Return a Postgres DSN, validating required variables.
2025-08-18T22:10:40.1715644Z 
2025-08-18T22:10:40.1715861Z The function prefers explicit DSNs via ``PG_SYNC_DSN`` / ``PG_ASYNC_DSN`` or
2025-08-18T22:10:40.1716474Z ``DATABASE_URL``.  If those are absent it assembles a connection string from
2025-08-18T22:10:40.1716891Z ``PG_HOST`` and related variables and raises a helpful error when any are
2025-08-18T22:10:40.1717210Z missing.
2025-08-18T22:10:40.1717301Z 
2025-08-18T22:10:40.1717385Z <a id="common.models_vendor"></a>
2025-08-18T22:10:40.1717639Z 
2025-08-18T22:10:40.1717775Z # common.models\_vendor
2025-08-18T22:10:40.1717959Z 
2025-08-18T22:10:40.1718131Z <a id="common.models_vendor.Vendor"></a>
2025-08-18T22:10:40.1718369Z 
2025-08-18T22:10:40.1718441Z ## Vendor Objects
2025-08-18T22:10:40.1718547Z 
2025-08-18T22:10:40.1718617Z ```python
2025-08-18T22:10:40.1718770Z class Vendor(Base)
2025-08-18T22:10:40.1718939Z ```
2025-08-18T22:10:40.1719019Z 
2025-08-18T22:10:40.1719102Z Vendor of inventory items.
2025-08-18T22:10:40.1719240Z 
2025-08-18T22:10:40.1719342Z <a id="common.models_vendor.VendorPrice"></a>
2025-08-18T22:10:40.1719535Z 
2025-08-18T22:10:40.1719619Z ## VendorPrice Objects
2025-08-18T22:10:40.1719734Z 
2025-08-18T22:10:40.1719798Z ```python
2025-08-18T22:10:40.1719971Z class VendorPrice(Base)
2025-08-18T22:10:40.1720146Z ```
2025-08-18T22:10:40.1720231Z 
2025-08-18T22:10:40.1720334Z Association table linking vendors to pricing.
2025-08-18T22:10:40.1720514Z 
2025-08-18T22:10:40.1720590Z <a id="common.db_url"></a>
2025-08-18T22:10:40.1720721Z 
2025-08-18T22:10:40.1720788Z # common.db\_url
2025-08-18T22:10:40.1720893Z 
2025-08-18T22:10:40.1720985Z <a id="common.db_url.build_url"></a>
2025-08-18T22:10:40.1721143Z 
2025-08-18T22:10:40.1721207Z #### build\_url
2025-08-18T22:10:40.1721306Z 
2025-08-18T22:10:40.1721374Z ```python
2025-08-18T22:10:40.1721546Z def build_url(async_: bool = True) -> str
2025-08-18T22:10:40.1721771Z ```
2025-08-18T22:10:40.1721850Z 
2025-08-18T22:10:40.1721947Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:10:40.1722125Z 
2025-08-18T22:10:40.1722202Z <a id="common.keepa"></a>
2025-08-18T22:10:40.1722340Z 
2025-08-18T22:10:40.1722415Z # common.keepa
2025-08-18T22:10:40.1722513Z 
2025-08-18T22:10:40.1722586Z <a id="common.llm"></a>
2025-08-18T22:10:40.1722707Z 
2025-08-18T22:10:40.1722771Z # common.llm
2025-08-18T22:10:40.1722864Z 
2025-08-18T22:10:40.1722942Z <a id="common.settings"></a>
2025-08-18T22:10:40.1723083Z 
2025-08-18T22:10:40.1723150Z # common.settings
2025-08-18T22:10:40.1723256Z 
2025-08-18T22:10:40.1723332Z <a id="common.db"></a>
2025-08-18T22:10:40.1723445Z 
2025-08-18T22:10:40.1723508Z # common.db
2025-08-18T22:10:40.1723813Z 
2025-08-18T22:10:40.1723940Z <a id="common.db.build_sqlalchemy_url"></a>
2025-08-18T22:10:40.1724119Z 
2025-08-18T22:10:40.1724196Z #### build\_sqlalchemy\_url
2025-08-18T22:10:40.1724332Z 
2025-08-18T22:10:40.1724394Z ```python
2025-08-18T22:10:40.1724564Z def build_sqlalchemy_url() -> str
2025-08-18T22:10:40.1724778Z ```
2025-08-18T22:10:40.1724859Z 
2025-08-18T22:10:40.1724958Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:10:40.1725126Z 
2025-08-18T22:10:40.1725408Z <a id="common.db.build_asyncpg_dsn"></a>
2025-08-18T22:10:40.1725590Z 
2025-08-18T22:10:40.1725667Z #### build\_asyncpg\_dsn
2025-08-18T22:10:40.1725792Z 
2025-08-18T22:10:40.1725855Z ```python
2025-08-18T22:10:40.1726026Z def build_asyncpg_dsn() -> str
2025-08-18T22:10:40.1726225Z ```
2025-08-18T22:10:40.1726309Z 
2025-08-18T22:10:40.1726433Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:10:40.1726644Z 
2025-08-18T22:10:40.1726736Z <a id="common.db.refresh_mvs"></a>
2025-08-18T22:10:40.1726888Z 
2025-08-18T22:10:40.1726952Z #### refresh\_mvs
2025-08-18T22:10:40.1727059Z 
2025-08-18T22:10:40.1727120Z ```python
2025-08-18T22:10:40.1727316Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:10:40.1727565Z ```
2025-08-18T22:10:40.1727648Z 
2025-08-18T22:10:40.1727787Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:10:40.1728003Z 
2025-08-18T22:10:40.1728081Z <a id="common.config"></a>
2025-08-18T22:10:40.1728210Z 
2025-08-18T22:10:40.1728401Z # common.config
2025-08-18T22:10:40.1728508Z 
2025-08-18T22:10:40.1728586Z <a id="common.base"></a>
2025-08-18T22:10:40.1728713Z 
2025-08-18T22:10:40.1728778Z # common.base
2025-08-18T22:10:40.1728872Z 
2025-08-18T22:10:40.1728952Z <a id="common.base.Base"></a>
2025-08-18T22:10:40.1729096Z 
2025-08-18T22:10:40.1729161Z ## Base Objects
2025-08-18T22:10:40.1729259Z 
2025-08-18T22:10:40.1729327Z ```python
2025-08-18T22:10:40.1729489Z class Base(DeclarativeBase)
2025-08-18T22:10:40.1729684Z ```
2025-08-18T22:10:40.1729763Z 
2025-08-18T22:10:40.1729845Z Base class for SQLAlchemy models.
2025-08-18T22:10:40.1730005Z 
2025-08-18T22:10:40.1730075Z <a id="repricer"></a>
2025-08-18T22:10:40.1730189Z 
2025-08-18T22:10:40.1730253Z # repricer
2025-08-18T22:10:40.1730348Z 
2025-08-18T22:10:40.1730435Z <a id="repricer.app.schemas"></a>
2025-08-18T22:10:40.1730587Z 
2025-08-18T22:10:40.1730668Z # repricer.app.schemas
2025-08-18T22:10:40.1730787Z 
2025-08-18T22:10:40.1730870Z <a id="repricer.app.deps"></a>
2025-08-18T22:10:40.1731027Z 
2025-08-18T22:10:40.1731100Z # repricer.app.deps
2025-08-18T22:10:40.1731212Z 
2025-08-18T22:10:40.1731327Z Placeholder module for Keepa / SP-API clients.
2025-08-18T22:10:40.1731523Z 
2025-08-18T22:10:40.1731605Z <a id="repricer.app.logic"></a>
2025-08-18T22:10:40.1731750Z 
2025-08-18T22:10:40.1731830Z # repricer.app.logic
2025-08-18T22:10:40.1731943Z 
2025-08-18T22:10:40.1732040Z <a id="repricer.app.logic.MIN_MARGIN"></a>
2025-08-18T22:10:40.1732222Z 
2025-08-18T22:10:40.1732287Z #### MIN\_MARGIN
2025-08-18T22:10:40.1732389Z 
2025-08-18T22:10:40.1732451Z 15 % ROI
2025-08-18T22:10:40.1732545Z 
2025-08-18T22:10:40.1732648Z <a id="repricer.app.logic.compute_price"></a>
2025-08-18T22:10:40.1732830Z 
2025-08-18T22:10:40.1732904Z #### compute\_price
2025-08-18T22:10:40.1733012Z 
2025-08-18T22:10:40.1733075Z ```python
2025-08-18T22:10:40.1733326Z def compute_price(asin: str, cost: Decimal, fees: Decimal) -> Decimal
2025-08-18T22:10:40.1733789Z ```
2025-08-18T22:10:40.1733881Z 
2025-08-18T22:10:40.1733999Z Toy algorithm: ensure 15 % ROI and round to cents.
2025-08-18T22:10:40.1734284Z Replace with real competitive logic later.
2025-08-18T22:10:40.1734464Z 
2025-08-18T22:10:40.1734547Z <a id="repricer.app.main"></a>
2025-08-18T22:10:40.1734687Z 
2025-08-18T22:10:40.1734764Z # repricer.app.main
2025-08-18T22:10:40.1734874Z 
2025-08-18T22:10:40.1734951Z <a id="repricer.app"></a>
2025-08-18T22:10:40.1735084Z 
2025-08-18T22:10:40.1735153Z # repricer.app
2025-08-18T22:10:40.1735291Z 
2025-08-18T22:10:40.1735383Z <a id="repricer.tests.test_imports"></a>
2025-08-18T22:10:40.1735559Z 
2025-08-18T22:10:40.1735641Z # repricer.tests.test\_imports
2025-08-18T22:10:40.1735780Z 
2025-08-18T22:10:40.1735879Z <a id="repricer.tests.test_smoke"></a>
2025-08-18T22:10:40.1736040Z 
2025-08-18T22:10:40.1736121Z # repricer.tests.test\_smoke
2025-08-18T22:10:40.1736266Z 
2025-08-18T22:10:40.1736342Z <a id="repricer.tests"></a>
2025-08-18T22:10:40.1736474Z 
2025-08-18T22:10:40.1736542Z # repricer.tests
2025-08-18T22:10:40.1736786Z 
2025-08-18T22:10:40.1736855Z <a id="db"></a>
2025-08-18T22:10:40.1736955Z 
2025-08-18T22:10:40.1737021Z # db
2025-08-18T22:10:40.1737103Z 
2025-08-18T22:10:40.1737178Z <a id="db.utils.views"></a>
2025-08-18T22:10:40.1737305Z 
2025-08-18T22:10:40.1737378Z # db.utils.views
2025-08-18T22:10:40.1737478Z 
2025-08-18T22:10:40.1737569Z <a id="db.utils.views.replace_view"></a>
2025-08-18T22:10:40.1737743Z 
2025-08-18T22:10:40.1737811Z #### replace\_view
2025-08-18T22:10:40.1737919Z 
2025-08-18T22:10:40.1737981Z ```python
2025-08-18T22:10:40.1738181Z def replace_view(name: str, new_sql: str) -> None
2025-08-18T22:10:40.1738432Z ```
2025-08-18T22:10:40.1738514Z 
2025-08-18T22:10:40.1738602Z Drop and recreate a SQL view atomically.
2025-08-18T22:10:40.1738766Z 
2025-08-18T22:10:40.1738844Z <a id="db.utils"></a>
2025-08-18T22:10:40.1738957Z 
2025-08-18T22:10:40.1739017Z # db.utils
2025-08-18T22:10:40.1739116Z 
2025-08-18T22:10:40.1739193Z <a id="price_importer"></a>
2025-08-18T22:10:40.1739321Z 
2025-08-18T22:10:40.1739512Z # price\_importer
2025-08-18T22:10:40.1739617Z 
2025-08-18T22:10:40.1739719Z <a id="price_importer.services_common.dsn"></a>
2025-08-18T22:10:40.1739900Z 
2025-08-18T22:10:40.1739995Z # price\_importer.services\_common.dsn
2025-08-18T22:10:40.1740159Z 
2025-08-18T22:10:40.1740282Z <a id="price_importer.services_common.dsn.build_dsn"></a>
2025-08-18T22:10:40.1740495Z 
2025-08-18T22:10:40.1740559Z #### build\_dsn
2025-08-18T22:10:40.1740654Z 
2025-08-18T22:10:40.1740717Z ```python
2025-08-18T22:10:40.1740892Z def build_dsn(sync: bool = True) -> str
2025-08-18T22:10:40.1741116Z ```
2025-08-18T22:10:40.1741197Z 
2025-08-18T22:10:40.1741265Z Return safe DSN.
2025-08-18T22:10:40.1741368Z 
2025-08-18T22:10:40.1741726Z sync=True → SQLAlchemy (+psycopg) else plain asyncpg.
2025-08-18T22:10:40.1741932Z 
2025-08-18T22:10:40.1742057Z <a id="price_importer.services_common.models_vendor"></a>
2025-08-18T22:10:40.1742267Z 
2025-08-18T22:10:40.1742375Z # price\_importer.services\_common.models\_vendor
2025-08-18T22:10:40.1742582Z 
2025-08-18T22:10:40.1742691Z <a id="price_importer.services_common.db_url"></a>
2025-08-18T22:10:40.1742880Z 
2025-08-18T22:10:40.1742973Z # price\_importer.services\_common.db\_url
2025-08-18T22:10:40.1743149Z 
2025-08-18T22:10:40.1743280Z <a id="price_importer.services_common.db_url.build_url"></a>
2025-08-18T22:10:40.1743493Z 
2025-08-18T22:10:40.1743558Z #### build\_url
2025-08-18T22:10:40.1743837Z 
2025-08-18T22:10:40.1743956Z ```python
2025-08-18T22:10:40.1744173Z def build_url(async_: bool = True) -> str
2025-08-18T22:10:40.1744393Z ```
2025-08-18T22:10:40.1744473Z 
2025-08-18T22:10:40.1744575Z Return Postgres DSN from env or PG_* parts.
2025-08-18T22:10:40.1744746Z 
2025-08-18T22:10:40.1744849Z <a id="price_importer.services_common.keepa"></a>
2025-08-18T22:10:40.1745037Z 
2025-08-18T22:10:40.1745128Z # price\_importer.services\_common.keepa
2025-08-18T22:10:40.1745292Z 
2025-08-18T22:10:40.1745390Z <a id="price_importer.services_common.llm"></a>
2025-08-18T22:10:40.1745581Z 
2025-08-18T22:10:40.1745673Z # price\_importer.services\_common.llm
2025-08-18T22:10:40.1745833Z 
2025-08-18T22:10:40.1745950Z <a id="price_importer.services_common.settings"></a>
2025-08-18T22:10:40.1746151Z 
2025-08-18T22:10:40.1746251Z # price\_importer.services\_common.settings
2025-08-18T22:10:40.1746433Z 
2025-08-18T22:10:40.1746536Z <a id="price_importer.services_common.db"></a>
2025-08-18T22:10:40.1746717Z 
2025-08-18T22:10:40.1746813Z # price\_importer.services\_common.db
2025-08-18T22:10:40.1746974Z 
2025-08-18T22:10:40.1747129Z <a id="price_importer.services_common.db.build_sqlalchemy_url"></a>
2025-08-18T22:10:40.1747371Z 
2025-08-18T22:10:40.1747455Z #### build\_sqlalchemy\_url
2025-08-18T22:10:40.1747586Z 
2025-08-18T22:10:40.1747652Z ```python
2025-08-18T22:10:40.1747830Z def build_sqlalchemy_url() -> str
2025-08-18T22:10:40.1748038Z ```
2025-08-18T22:10:40.1748126Z 
2025-08-18T22:10:40.1748221Z Return Postgres URL for SQLAlchemy engines.
2025-08-18T22:10:40.1748391Z 
2025-08-18T22:10:40.1748545Z <a id="price_importer.services_common.db.build_asyncpg_dsn"></a>
2025-08-18T22:10:40.1748913Z 
2025-08-18T22:10:40.1748991Z #### build\_asyncpg\_dsn
2025-08-18T22:10:40.1749124Z 
2025-08-18T22:10:40.1749185Z ```python
2025-08-18T22:10:40.1749354Z def build_asyncpg_dsn() -> str
2025-08-18T22:10:40.1749557Z ```
2025-08-18T22:10:40.1749637Z 
2025-08-18T22:10:40.1749760Z Return DSN suitable for asyncpg (without driver suffix).
2025-08-18T22:10:40.1749975Z 
2025-08-18T22:10:40.1750110Z <a id="price_importer.services_common.db.refresh_mvs"></a>
2025-08-18T22:10:40.1750317Z 
2025-08-18T22:10:40.1750388Z #### refresh\_mvs
2025-08-18T22:10:40.1750490Z 
2025-08-18T22:10:40.1750550Z ```python
2025-08-18T22:10:40.1750746Z def refresh_mvs(conn: Engine | Connection) -> None
2025-08-18T22:10:40.1750989Z ```
2025-08-18T22:10:40.1751074Z 
2025-08-18T22:10:40.1751204Z Refresh materialized views, using CONCURRENTLY when safe.
2025-08-18T22:10:40.1751417Z 
2025-08-18T22:10:40.1751516Z <a id="price_importer.services_common"></a>
2025-08-18T22:10:40.1751806Z 
2025-08-18T22:10:40.1751893Z # price\_importer.services\_common
2025-08-18T22:10:40.1752045Z 
2025-08-18T22:10:40.1752153Z <a id="price_importer.services_common.base"></a>
2025-08-18T22:10:40.1752333Z 
2025-08-18T22:10:40.1752423Z # price\_importer.services\_common.base
2025-08-18T22:10:40.1752594Z 
2025-08-18T22:10:40.1752680Z <a id="price_importer.normaliser"></a>
2025-08-18T22:10:40.1752841Z 
2025-08-18T22:10:40.1752929Z # price\_importer.normaliser
2025-08-18T22:10:40.1753064Z 
2025-08-18T22:10:40.1753170Z <a id="price_importer.common.models_vendor"></a>
2025-08-18T22:10:40.1753349Z 
2025-08-18T22:10:40.1753443Z # price\_importer.common.models\_vendor
2025-08-18T22:10:40.1753754Z 
2025-08-18T22:10:40.1753847Z <a id="price_importer.common.db_url"></a>
2025-08-18T22:10:40.1754021Z 
2025-08-18T22:10:40.1754108Z # price\_importer.common.db\_url
2025-08-18T22:10:40.1754253Z 
2025-08-18T22:10:40.1754360Z <a id="price_importer.common.db_url.make_dsn"></a>
2025-08-18T22:10:40.1754552Z 
2025-08-18T22:10:40.1754616Z #### make\_dsn
2025-08-18T22:10:40.1754715Z 
2025-08-18T22:10:40.1754784Z ```python
2025-08-18T22:10:40.1754954Z def make_dsn(async_: bool = False) -> str
2025-08-18T22:10:40.1755180Z ```
2025-08-18T22:10:40.1755261Z 
2025-08-18T22:10:40.1755380Z Return DSN built from either PG_* or POSTGRES_* vars.
2025-08-18T22:10:40.1755587Z 
2025-08-18T22:10:40.1755694Z <a id="price_importer.common.db_url.build_url"></a>
2025-08-18T22:10:40.1755882Z 
2025-08-18T22:10:40.1755951Z #### build\_url
2025-08-18T22:10:40.1756050Z 
2025-08-18T22:10:40.1756113Z ```python
2025-08-18T22:10:40.1756291Z def build_url(async_: bool = False) -> str
2025-08-18T22:10:40.1756521Z ```
2025-08-18T22:10:40.1756609Z 
2025-08-18T22:10:40.1756729Z Return Postgres DSN built from environment variables.
2025-08-18T22:10:40.1756926Z 
2025-08-18T22:10:40.1757012Z <a id="price_importer.common"></a>
2025-08-18T22:10:40.1757170Z 
2025-08-18T22:10:40.1757247Z # price\_importer.common
2025-08-18T22:10:40.1757373Z 
2025-08-18T22:10:40.1757479Z <a id="price_importer.common.base"></a>
2025-08-18T22:10:40.1757639Z 
2025-08-18T22:10:40.1757722Z # price\_importer.common.base
2025-08-18T22:10:40.1757867Z 
2025-08-18T22:10:40.1757969Z <a id="price_importer.tests.conftest"></a>
2025-08-18T22:10:40.1758143Z 
2025-08-18T22:10:40.1758227Z # price\_importer.tests.conftest
2025-08-18T22:10:40.1758415Z 
2025-08-18T22:10:40.1758516Z <a id="price_importer.tests.test_reader"></a>
2025-08-18T22:10:40.1758691Z 
2025-08-18T22:10:40.1758776Z # price\_importer.tests.test\_reader
2025-08-18T22:10:40.1758941Z 
2025-08-18T22:10:40.1759043Z <a id="price_importer.tests.test_imports"></a>
2025-08-18T22:10:40.1759223Z 
2025-08-18T22:10:40.1759321Z # price\_importer.tests.test\_imports
2025-08-18T22:10:40.1759478Z 
2025-08-18T22:10:40.1759574Z <a id="price_importer.tests.test_smoke"></a>
2025-08-18T22:10:40.1759753Z 
2025-08-18T22:10:40.1759837Z # price\_importer.tests.test\_smoke
2025-08-18T22:10:40.1759991Z 
2025-08-18T22:10:40.1760094Z <a id="price_importer.tests.test_normaliser"></a>
2025-08-18T22:10:40.1760418Z 
2025-08-18T22:10:40.1760513Z # price\_importer.tests.test\_normaliser
2025-08-18T22:10:40.1760678Z 
2025-08-18T22:10:40.1760769Z <a id="price_importer.tests"></a>
2025-08-18T22:10:40.1760918Z 
2025-08-18T22:10:40.1760994Z # price\_importer.tests
2025-08-18T22:10:40.1761120Z 
2025-08-18T22:10:40.1761204Z <a id="price_importer.reader"></a>
2025-08-18T22:10:40.1761352Z 
2025-08-18T22:10:40.1761427Z # price\_importer.reader
2025-08-18T22:10:40.1761556Z 
2025-08-18T22:10:40.1761644Z <a id="price_importer.repository"></a>
2025-08-18T22:10:40.1761804Z 
2025-08-18T22:10:40.1761890Z # price\_importer.repository
2025-08-18T22:10:40.1762026Z 
2025-08-18T22:10:40.1762106Z <a id="price_importer.import"></a>
2025-08-18T22:10:40.1762255Z 
2025-08-18T22:10:40.1762336Z # price\_importer.import
2025-08-18T22:10:40.1762457Z 
2025-08-18T22:10:40.1762529Z <a id="fees_h10"></a>
2025-08-18T22:10:40.1762646Z 
2025-08-18T22:10:40.1762709Z # fees\_h10
2025-08-18T22:10:40.1762921Z 
2025-08-18T22:10:40.1763005Z <a id="fees_h10.worker"></a>
2025-08-18T22:10:40.1763135Z 
2025-08-18T22:10:40.1763201Z # fees\_h10.worker
2025-08-18T22:10:40.1763307Z 
2025-08-18T22:10:40.1763407Z <a id="fees_h10.worker.list_active_asins"></a>
2025-08-18T22:10:40.1763693Z 
2025-08-18T22:10:40.1763766Z #### list\_active\_asins
2025-08-18T22:10:40.1763888Z 
2025-08-18T22:10:40.1763951Z ```python
2025-08-18T22:10:40.1764120Z def list_active_asins() -> list[str]
2025-08-18T22:10:40.1764335Z ```
2025-08-18T22:10:40.1764414Z 
2025-08-18T22:10:40.1764533Z Return known ASINs or an empty list if unavailable.
2025-08-18T22:10:40.1764725Z 
2025-08-18T22:10:40.1764807Z <a id="fees_h10.tests.test_smoke"></a>
2025-08-18T22:10:40.1764962Z 
2025-08-18T22:10:40.1765048Z # fees\_h10.tests.test\_smoke
2025-08-18T22:10:40.1765184Z 
2025-08-18T22:10:40.1765257Z <a id="fees_h10.tests"></a>
2025-08-18T22:10:40.1765392Z 
2025-08-18T22:10:40.1765457Z # fees\_h10.tests
2025-08-18T22:10:40.1765558Z 
2025-08-18T22:10:40.1765644Z <a id="fees_h10.client"></a>
2025-08-18T22:10:40.1765779Z 
2025-08-18T22:10:40.1765843Z # fees\_h10.client
2025-08-18T22:10:40.1765948Z 
2025-08-18T22:10:40.1766034Z <a id="fees_h10.repository"></a>
2025-08-18T22:10:40.1766175Z 
2025-08-18T22:10:40.1766250Z # fees\_h10.repository
2025-08-18T22:10:40.1766369Z 
2025-08-18T22:10:40.1766438Z <a id="emailer"></a>
2025-08-18T22:10:40.1766549Z 
2025-08-18T22:10:40.1766608Z # emailer
2025-08-18T22:10:40.1766703Z 
2025-08-18T22:10:40.1766802Z <a id="emailer.tests.test_import_emailer"></a>
2025-08-18T22:10:40.1766979Z 
2025-08-18T22:10:40.1767077Z # emailer.tests.test\_import\_emailer
2025-08-18T22:10:40.1767229Z 
2025-08-18T22:10:40.1767311Z <a id="emailer.tests.test_smoke"></a>
2025-08-18T22:10:40.1767468Z 
2025-08-18T22:10:40.1767546Z # emailer.tests.test\_smoke
2025-08-18T22:10:40.1767676Z 
2025-08-18T22:10:40.1767752Z <a id="emailer.tests"></a>
2025-08-18T22:10:40.1767888Z 
2025-08-18T22:10:40.1767955Z # emailer.tests
2025-08-18T22:10:40.1768056Z 
2025-08-18T22:10:40.1768152Z <a id="emailer.generate_body"></a>
2025-08-18T22:10:40.1768300Z 
2025-08-18T22:10:40.1768375Z # emailer.generate\_body
2025-08-18T22:10:40.1768503Z 
2025-08-18T22:10:40.1768576Z <a id="llm_server"></a>
2025-08-18T22:10:40.1768691Z 
2025-08-18T22:10:40.1768756Z # llm\_server
2025-08-18T22:10:40.1768857Z 
2025-08-18T22:10:40.1768933Z <a id="llm_server.app"></a>
2025-08-18T22:10:40.1769062Z 
2025-08-18T22:10:40.1769137Z # llm\_server.app
2025-08-18T22:10:40.1769238Z 
