2025-08-20T18:27:11.2132761Z ##[group]Run ruff check .
2025-08-20T18:27:11.2133038Z [36;1mruff check .[0m
2025-08-20T18:27:11.2133249Z [36;1mruff format --check .[0m
2025-08-20T18:27:11.2133465Z [36;1mvulture[0m
2025-08-20T18:27:11.2174129Z shell: /usr/bin/bash -e {0}
2025-08-20T18:27:11.2174352Z env:
2025-08-20T18:27:11.2174552Z   REDIS_URL: redis://localhost:6379/0
2025-08-20T18:27:11.2174813Z   RATE_LIMIT_DEFAULT: 100/minute
2025-08-20T18:27:11.2175213Z   TRUST_X_FORWARDED: 1
2025-08-20T18:27:11.2175407Z   PG_USER: postgres
2025-08-20T18:27:11.2175605Z   PG_PASSWORD: pass
2025-08-20T18:27:11.2175783Z   PG_DATABASE: awa
2025-08-20T18:27:11.2175955Z   PG_HOST: localhost
2025-08-20T18:27:11.2176135Z   PG_PORT: 5432
2025-08-20T18:27:11.2176549Z   PG_SYNC_DSN: ***localhost:5432/awa
2025-08-20T18:27:11.2176953Z   PG_ASYNC_DSN: ***localhost:5432/awa
2025-08-20T18:27:11.2177331Z   DATABASE_URL: ***localhost:5432/awa
2025-08-20T18:27:11.2177559Z   DATA_DIR: /tmp/awa-data
2025-08-20T18:27:11.2177757Z   ENABLE_LIVE: 0
2025-08-20T18:27:11.2177963Z   TESTING: 1
2025-08-20T18:27:11.2178200Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:27:11.2178609Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.11/x64/lib/pkgconfig
2025-08-20T18:27:11.2179011Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:27:11.2179350Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:27:11.2179698Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:27:11.2180043Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.11/x64/lib
2025-08-20T18:27:11.2180328Z ##[endgroup]
2025-08-20T18:27:11.2469649Z api/routers/ingest.py:21:10: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2470313Z    |
2025-08-20T18:27:11.2470494Z 19 |     request: Request,
2025-08-20T18:27:11.2470745Z 20 |     file: UploadFile | None = File(None),
2025-08-20T18:27:11.2471018Z 21 |     uri: Optional[str] = None,
2025-08-20T18:27:11.2471254Z    |          ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2471875Z 22 |     report_type: Optional[str] = None,
2025-08-20T18:27:11.2472207Z 23 |     force: bool = False,
2025-08-20T18:27:11.2472408Z    |
2025-08-20T18:27:11.2472575Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2472713Z 
2025-08-20T18:27:11.2472907Z api/routers/ingest.py:22:18: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2473245Z    |
2025-08-20T18:27:11.2473551Z 20 |     file: UploadFile | None = File(None),
2025-08-20T18:27:11.2473933Z 21 |     uri: Optional[str] = None,
2025-08-20T18:27:11.2474180Z 22 |     report_type: Optional[str] = None,
2025-08-20T18:27:11.2474423Z    |                  ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2474760Z 23 |     force: bool = False,
2025-08-20T18:27:11.2475166Z 24 | ) -> Dict[str, Any]:
2025-08-20T18:27:11.2475358Z    |
2025-08-20T18:27:11.2475522Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2475657Z 
2025-08-20T18:27:11.2475852Z services/api/routes/roi.py:88:13: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2476193Z    |
2025-08-20T18:27:11.2476349Z 86 |     request: Request,
2025-08-20T18:27:11.2476548Z 87 |     roi_min: int = 0,
2025-08-20T18:27:11.2476746Z 88 |     vendor: Optional[int] = None,
2025-08-20T18:27:11.2476983Z    |             ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2477216Z 89 |     category: Optional[str] = None,
2025-08-20T18:27:11.2477466Z 90 |     _: str = Depends(_check_basic_auth),
2025-08-20T18:27:11.2477702Z    |
2025-08-20T18:27:11.2477858Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2477992Z 
2025-08-20T18:27:11.2478177Z services/api/routes/roi.py:89:15: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2478510Z    |
2025-08-20T18:27:11.2478748Z 87 |     roi_min: int = 0,
2025-08-20T18:27:11.2479024Z 88 |     vendor: Optional[int] = None,
2025-08-20T18:27:11.2479274Z 89 |     category: Optional[str] = None,
2025-08-20T18:27:11.2479510Z    |               ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2479749Z 90 |     _: str = Depends(_check_basic_auth),
2025-08-20T18:27:11.2480200Z 91 | ):
2025-08-20T18:27:11.2480348Z    |
2025-08-20T18:27:11.2480508Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2480643Z 
2025-08-20T18:27:11.2480833Z services/api/routes/score.py:53:10: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2481175Z    |
2025-08-20T18:27:11.2481341Z 51 | class ScoreItem(BaseModel):
2025-08-20T18:27:11.2481557Z 52 |     asin: str
2025-08-20T18:27:11.2481738Z 53 |     roi: Optional[float] = None
2025-08-20T18:27:11.2481962Z    |          ^^^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2482321Z 54 |     vendor: Optional[str] = None
2025-08-20T18:27:11.2482935Z 55 |     category: Optional[str] = None
2025-08-20T18:27:11.2483326Z    |
2025-08-20T18:27:11.2483613Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2483854Z 
2025-08-20T18:27:11.2484186Z services/api/routes/score.py:54:13: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2484593Z    |
2025-08-20T18:27:11.2484744Z 52 |     asin: str
2025-08-20T18:27:11.2485122Z 53 |     roi: Optional[float] = None
2025-08-20T18:27:11.2485432Z 54 |     vendor: Optional[str] = None
2025-08-20T18:27:11.2485660Z    |             ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2485893Z 55 |     category: Optional[str] = None
2025-08-20T18:27:11.2486128Z 56 |     error: Optional[str] = None
2025-08-20T18:27:11.2486338Z    |
2025-08-20T18:27:11.2486500Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2486643Z 
2025-08-20T18:27:11.2486835Z services/api/routes/score.py:55:15: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2487181Z    |
2025-08-20T18:27:11.2487342Z 53 |     roi: Optional[float] = None
2025-08-20T18:27:11.2487574Z 54 |     vendor: Optional[str] = None
2025-08-20T18:27:11.2487809Z 55 |     category: Optional[str] = None
2025-08-20T18:27:11.2488108Z    |               ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2488465Z 56 |     error: Optional[str] = None
2025-08-20T18:27:11.2488779Z    |
2025-08-20T18:27:11.2489005Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2489145Z 
2025-08-20T18:27:11.2489731Z services/api/routes/score.py:56:12: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2490086Z    |
2025-08-20T18:27:11.2490362Z 54 |     vendor: Optional[str] = None
2025-08-20T18:27:11.2490709Z 55 |     category: Optional[str] = None
2025-08-20T18:27:11.2490963Z 56 |     error: Optional[str] = None
2025-08-20T18:27:11.2491181Z    |            ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2491387Z    |
2025-08-20T18:27:11.2491551Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2491692Z 
2025-08-20T18:27:11.2491872Z services/common/llm.py:100:14: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2492203Z     |
2025-08-20T18:27:11.2492375Z  98 |     temperature: float,
2025-08-20T18:27:11.2492581Z  99 |     max_tokens: int,
2025-08-20T18:27:11.2492803Z 100 |     timeout: Optional[float] = None,
2025-08-20T18:27:11.2493046Z     |              ^^^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2493261Z 101 | ) -> str:
2025-08-20T18:27:11.2493462Z 102 |     to = timeout or _timeout_seconds()
2025-08-20T18:27:11.2493705Z     |
2025-08-20T18:27:11.2493871Z     = help: Convert to `X | Y`
2025-08-20T18:27:11.2494009Z 
2025-08-20T18:27:11.2494179Z services/common/llm.py:129:14: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2494503Z     |
2025-08-20T18:27:11.2494674Z 127 |     provider: str | None = None,
2025-08-20T18:27:11.2495079Z 128 |     *,
2025-08-20T18:27:11.2495278Z 129 |     timeout: Optional[float] = None,
2025-08-20T18:27:11.2495520Z     |              ^^^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2495732Z 130 | ) -> str:
2025-08-20T18:27:11.2495925Z 131 |     env_prov = _selected_provider()
2025-08-20T18:27:11.2496156Z     |
2025-08-20T18:27:11.2496312Z     = help: Convert to `X | Y`
2025-08-20T18:27:11.2496457Z 
2025-08-20T18:27:11.2496661Z services/fees_h10/repository.py:14:6: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2497009Z    |
2025-08-20T18:27:11.2497173Z 12 | def upsert_fees_raw(
2025-08-20T18:27:11.2497482Z 13 |     engine: Engine, rows: Iterable[Mapping[str, Any]], *, testing: bool = False
2025-08-20T18:27:11.2497997Z 14 | ) -> Optional[Dict[str, int]]:
2025-08-20T18:27:11.2498248Z    |      ^^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2498497Z 15 |     """Idempotent upsert for fees.
2025-08-20T18:27:11.2498732Z    |
2025-08-20T18:27:11.2498891Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2499037Z 
2025-08-20T18:27:11.2499239Z services/ingest/copy_loader.py:16:23: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2499586Z    |
2025-08-20T18:27:11.2499808Z 16 | def _fq_ident(schema: Optional[str], table: str) -> sql.SQL:
2025-08-20T18:27:11.2500116Z    |                       ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2500360Z 17 |     if schema:
2025-08-20T18:27:11.2500634Z 18 |         return sql.SQL(".").join([_ensure_ident(schema), _ensure_ident(table)])
2025-08-20T18:27:11.2500950Z    |
2025-08-20T18:27:11.2501134Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2501275Z 
2025-08-20T18:27:11.2501487Z services/ingest/copy_loader.py:27:20: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2501837Z    |
2025-08-20T18:27:11.2501997Z 25 |     target_table: str,
2025-08-20T18:27:11.2502195Z 26 |     *,
2025-08-20T18:27:11.2502376Z 27 |     target_schema: Optional[str] = None,
2025-08-20T18:27:11.2502624Z    |                    ^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2502863Z 28 |     columns: Sequence[str],
2025-08-20T18:27:11.2503116Z 29 |     conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T18:27:11.2503376Z    |
2025-08-20T18:27:11.2503538Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2503673Z 
2025-08-20T18:27:11.2503876Z services/ingest/copy_loader.py:29:20: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2504233Z    |
2025-08-20T18:27:11.2504407Z 27 |     target_schema: Optional[str] = None,
2025-08-20T18:27:11.2504655Z 28 |     columns: Sequence[str],
2025-08-20T18:27:11.2505067Z 29 |     conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T18:27:11.2505417Z    |                    ^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2505820Z 30 |     analyze_after: bool = False,
2025-08-20T18:27:11.2506093Z 31 |     connection: Any | None = None,
2025-08-20T18:27:11.2506315Z    |
2025-08-20T18:27:11.2506474Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2506609Z 
2025-08-20T18:27:11.2506839Z services/logistics_etl/repository.py:45:25: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2507208Z    |
2025-08-20T18:27:11.2507369Z 43 |         key_cols: Sequence[str],
2025-08-20T18:27:11.2507618Z 44 |         rows: Iterable[Mapping[str, Any]],
2025-08-20T18:27:11.2507908Z 45 |         update_columns: Optional[Sequence[str]] = None,
2025-08-20T18:27:11.2508203Z    |                         ^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2508457Z 46 |         testing: bool = False,
2025-08-20T18:27:11.2508698Z 47 |     ) -> Optional[Dict[str, int]]:
2025-08-20T18:27:11.2508917Z    |
2025-08-20T18:27:11.2509075Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2509215Z 
2025-08-20T18:27:11.2509459Z services/logistics_etl/repository.py:47:10: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:27:11.2509828Z    |
2025-08-20T18:27:11.2510026Z 45 |         update_columns: Optional[Sequence[str]] = None,
2025-08-20T18:27:11.2510300Z 46 |         testing: bool = False,
2025-08-20T18:27:11.2510524Z 47 |     ) -> Optional[Dict[str, int]]:
2025-08-20T18:27:11.2510761Z    |          ^^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:27:11.2510983Z 48 |         """
2025-08-20T18:27:11.2511303Z 49 |         TESTING-only helper: generic UPSERT into `table` with explicit `key_cols`.
2025-08-20T18:27:11.2511653Z    |
2025-08-20T18:27:11.2511810Z    = help: Convert to `X | Y`
2025-08-20T18:27:11.2511946Z 
2025-08-20T18:27:11.2512018Z Found 16 errors.
2025-08-20T18:27:11.2512203Z [*] 16 fixable with the `--fix` option.
2025-08-20T18:27:11.2522250Z ##[error]Process completed with exit code 1.
