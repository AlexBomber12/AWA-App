2025-08-20T18:14:35.3586194Z ##[group]Run ruff check .
2025-08-20T18:14:35.3586492Z [36;1mruff check .[0m
2025-08-20T18:14:35.3586705Z [36;1mruff format --check .[0m
2025-08-20T18:14:35.3586929Z [36;1mvulture[0m
2025-08-20T18:14:35.3627758Z shell: /usr/bin/bash -e {0}
2025-08-20T18:14:35.3628009Z env:
2025-08-20T18:14:35.3628218Z   REDIS_URL: redis://localhost:6379/0
2025-08-20T18:14:35.3628479Z   RATE_LIMIT_DEFAULT: 100/minute
2025-08-20T18:14:35.3628712Z   TRUST_X_FORWARDED: 1
2025-08-20T18:14:35.3628914Z   PG_USER: postgres
2025-08-20T18:14:35.3629111Z   PG_PASSWORD: pass
2025-08-20T18:14:35.3629309Z   PG_DATABASE: awa
2025-08-20T18:14:35.3629496Z   PG_HOST: localhost
2025-08-20T18:14:35.3629856Z   PG_PORT: 5432
2025-08-20T18:14:35.3630289Z   PG_SYNC_DSN: ***localhost:5432/awa
2025-08-20T18:14:35.3630696Z   PG_ASYNC_DSN: ***localhost:5432/awa
2025-08-20T18:14:35.3631091Z   DATABASE_URL: ***localhost:5432/awa
2025-08-20T18:14:35.3631332Z   DATA_DIR: /tmp/awa-data
2025-08-20T18:14:35.3631538Z   ENABLE_LIVE: 0
2025-08-20T18:14:35.3631749Z   TESTING: 1
2025-08-20T18:14:35.3631984Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:14:35.3632388Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.11/x64/lib/pkgconfig
2025-08-20T18:14:35.3632793Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:14:35.3633152Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:14:35.3633696Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.11/x64
2025-08-20T18:14:35.3634122Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.11/x64/lib
2025-08-20T18:14:35.3634442Z ##[endgroup]
2025-08-20T18:14:35.3925319Z api/routers/ingest.py:21:10: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3926033Z    |
2025-08-20T18:14:35.3926302Z 19 |     request: Request,
2025-08-20T18:14:35.3926571Z 20 |     file: UploadFile | None = File(None),
2025-08-20T18:14:35.3926844Z 21 |     uri: Optional[str] = None,
2025-08-20T18:14:35.3927094Z    |          ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3927354Z 22 |     report_type: Optional[str] = None,
2025-08-20T18:14:35.3927603Z 23 |     force: bool = False,
2025-08-20T18:14:35.3927808Z    |
2025-08-20T18:14:35.3927975Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3928110Z 
2025-08-20T18:14:35.3928295Z api/routers/ingest.py:22:18: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3928612Z    |
2025-08-20T18:14:35.3928793Z 20 |     file: UploadFile | None = File(None),
2025-08-20T18:14:35.3929048Z 21 |     uri: Optional[str] = None,
2025-08-20T18:14:35.3929285Z 22 |     report_type: Optional[str] = None,
2025-08-20T18:14:35.3929530Z    |                  ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3929766Z 23 |     force: bool = False,
2025-08-20T18:14:35.3929981Z 24 | ) -> Dict[str, Any]:
2025-08-20T18:14:35.3930173Z    |
2025-08-20T18:14:35.3930339Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3930474Z 
2025-08-20T18:14:35.3930655Z services/api/routes/roi.py:88:13: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3931001Z    |
2025-08-20T18:14:35.3931167Z 86 |     request: Request,
2025-08-20T18:14:35.3931367Z 87 |     roi_min: int = 0,
2025-08-20T18:14:35.3931578Z 88 |     vendor: Optional[int] = None,
2025-08-20T18:14:35.3931812Z    |             ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3932051Z 89 |     category: Optional[str] = None,
2025-08-20T18:14:35.3932300Z 90 |     _: str = Depends(_check_basic_auth),
2025-08-20T18:14:35.3932530Z    |
2025-08-20T18:14:35.3932695Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3932831Z 
2025-08-20T18:14:35.3933009Z services/api/routes/roi.py:89:15: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3933331Z    |
2025-08-20T18:14:35.3933492Z 87 |     roi_min: int = 0,
2025-08-20T18:14:35.3933917Z 88 |     vendor: Optional[int] = None,
2025-08-20T18:14:35.3934164Z 89 |     category: Optional[str] = None,
2025-08-20T18:14:35.3934396Z    |               ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3934631Z 90 |     _: str = Depends(_check_basic_auth),
2025-08-20T18:14:35.3935098Z 91 | ):
2025-08-20T18:14:35.3935253Z    |
2025-08-20T18:14:35.3935417Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3935554Z 
2025-08-20T18:14:35.3935752Z services/api/routes/score.py:53:10: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3936095Z    |
2025-08-20T18:14:35.3936271Z 51 | class ScoreItem(BaseModel):
2025-08-20T18:14:35.3936487Z 52 |     asin: str
2025-08-20T18:14:35.3936682Z 53 |     roi: Optional[float] = None
2025-08-20T18:14:35.3936912Z    |          ^^^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3937134Z 54 |     vendor: Optional[str] = None
2025-08-20T18:14:35.3937376Z 55 |     category: Optional[str] = None
2025-08-20T18:14:35.3937752Z    |
2025-08-20T18:14:35.3937921Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3938061Z 
2025-08-20T18:14:35.3938252Z services/api/routes/score.py:54:13: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3938586Z    |
2025-08-20T18:14:35.3938735Z 52 |     asin: str
2025-08-20T18:14:35.3938915Z 53 |     roi: Optional[float] = None
2025-08-20T18:14:35.3939306Z 54 |     vendor: Optional[str] = None
2025-08-20T18:14:35.3939687Z    |             ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3940068Z 55 |     category: Optional[str] = None
2025-08-20T18:14:35.3940459Z 56 |     error: Optional[str] = None
2025-08-20T18:14:35.3940805Z    |
2025-08-20T18:14:35.3941066Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3941240Z 
2025-08-20T18:14:35.3941433Z services/api/routes/score.py:55:15: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3941766Z    |
2025-08-20T18:14:35.3941926Z 53 |     roi: Optional[float] = None
2025-08-20T18:14:35.3942153Z 54 |     vendor: Optional[str] = None
2025-08-20T18:14:35.3942398Z 55 |     category: Optional[str] = None
2025-08-20T18:14:35.3942631Z    |               ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3942860Z 56 |     error: Optional[str] = None
2025-08-20T18:14:35.3943078Z    |
2025-08-20T18:14:35.3943244Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3943384Z 
2025-08-20T18:14:35.3943772Z services/api/routes/score.py:56:12: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3944116Z    |
2025-08-20T18:14:35.3944286Z 54 |     vendor: Optional[str] = None
2025-08-20T18:14:35.3944534Z 55 |     category: Optional[str] = None
2025-08-20T18:14:35.3944771Z 56 |     error: Optional[str] = None
2025-08-20T18:14:35.3944993Z    |            ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3945197Z    |
2025-08-20T18:14:35.3945351Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3945492Z 
2025-08-20T18:14:35.3945664Z services/common/llm.py:100:14: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3945981Z     |
2025-08-20T18:14:35.3946144Z  98 |     temperature: float,
2025-08-20T18:14:35.3946354Z  99 |     max_tokens: int,
2025-08-20T18:14:35.3946571Z 100 |     timeout: Optional[float] = None,
2025-08-20T18:14:35.3946812Z     |              ^^^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3947022Z 101 | ) -> str:
2025-08-20T18:14:35.3947221Z 102 |     to = timeout or _timeout_seconds()
2025-08-20T18:14:35.3947460Z     |
2025-08-20T18:14:35.3947622Z     = help: Convert to `X | Y`
2025-08-20T18:14:35.3947765Z 
2025-08-20T18:14:35.3947931Z services/common/llm.py:129:14: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3948246Z     |
2025-08-20T18:14:35.3948411Z 127 |     provider: str | None = None,
2025-08-20T18:14:35.3948632Z 128 |     *,
2025-08-20T18:14:35.3948819Z 129 |     timeout: Optional[float] = None,
2025-08-20T18:14:35.3949049Z     |              ^^^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3949264Z 130 | ) -> str:
2025-08-20T18:14:35.3949462Z 131 |     env_prov = _selected_provider()
2025-08-20T18:14:35.3949694Z     |
2025-08-20T18:14:35.3949862Z     = help: Convert to `X | Y`
2025-08-20T18:14:35.3950006Z 
2025-08-20T18:14:35.3950207Z services/fees_h10/repository.py:14:6: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3950542Z    |
2025-08-20T18:14:35.3950697Z 12 | def upsert_fees_raw(
2025-08-20T18:14:35.3951011Z 13 |     engine: Engine, rows: Iterable[Mapping[str, Any]], *, testing: bool = False
2025-08-20T18:14:35.3951538Z 14 | ) -> Optional[Dict[str, int]]:
2025-08-20T18:14:35.3951780Z    |      ^^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3952022Z 15 |     """Idempotent upsert for fees.
2025-08-20T18:14:35.3952240Z    |
2025-08-20T18:14:35.3952404Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3952541Z 
2025-08-20T18:14:35.3952742Z services/ingest/copy_loader.py:16:23: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3953070Z    |
2025-08-20T18:14:35.3953294Z 16 | def _fq_ident(schema: Optional[str], table: str) -> sql.SQL:
2025-08-20T18:14:35.3953770Z    |                       ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3954150Z 17 |     if schema:
2025-08-20T18:14:35.3954424Z 18 |         return sql.SQL(".").join([_ensure_ident(schema), _ensure_ident(table)])
2025-08-20T18:14:35.3954733Z    |
2025-08-20T18:14:35.3954903Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3955057Z 
2025-08-20T18:14:35.3955255Z services/ingest/copy_loader.py:27:20: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3955598Z    |
2025-08-20T18:14:35.3955760Z 25 |     target_table: str,
2025-08-20T18:14:35.3955953Z 26 |     *,
2025-08-20T18:14:35.3956142Z 27 |     target_schema: Optional[str] = None,
2025-08-20T18:14:35.3956392Z    |                    ^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3956631Z 28 |     columns: Sequence[str],
2025-08-20T18:14:35.3956885Z 29 |     conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T18:14:35.3957139Z    |
2025-08-20T18:14:35.3957302Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3957438Z 
2025-08-20T18:14:35.3957625Z services/ingest/copy_loader.py:29:20: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3957966Z    |
2025-08-20T18:14:35.3958144Z 27 |     target_schema: Optional[str] = None,
2025-08-20T18:14:35.3958385Z 28 |     columns: Sequence[str],
2025-08-20T18:14:35.3958635Z 29 |     conflict_cols: Optional[Sequence[str]] = None,
2025-08-20T18:14:35.3958912Z    |                    ^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3959168Z 30 |     analyze_after: bool = False,
2025-08-20T18:14:35.3959405Z 31 |     connection: Any | None = None,
2025-08-20T18:14:35.3959627Z    |
2025-08-20T18:14:35.3959787Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3959925Z 
2025-08-20T18:14:35.3960139Z services/logistics_etl/repository.py:45:25: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3960505Z    |
2025-08-20T18:14:35.3960674Z 43 |         key_cols: Sequence[str],
2025-08-20T18:14:35.3960920Z 44 |         rows: Iterable[Mapping[str, Any]],
2025-08-20T18:14:35.3961214Z 45 |         update_columns: Optional[Sequence[str]] = None,
2025-08-20T18:14:35.3961505Z    |                         ^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3961752Z 46 |         testing: bool = False,
2025-08-20T18:14:35.3961979Z 47 |     ) -> Optional[Dict[str, int]]:
2025-08-20T18:14:35.3962203Z    |
2025-08-20T18:14:35.3962364Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3962497Z 
2025-08-20T18:14:35.3962711Z services/logistics_etl/repository.py:47:10: UP007 [*] Use `X | Y` for type annotations
2025-08-20T18:14:35.3963068Z    |
2025-08-20T18:14:35.3963263Z 45 |         update_columns: Optional[Sequence[str]] = None,
2025-08-20T18:14:35.3963748Z 46 |         testing: bool = False,
2025-08-20T18:14:35.3964022Z 47 |     ) -> Optional[Dict[str, int]]:
2025-08-20T18:14:35.3964272Z    |          ^^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-20T18:14:35.3964496Z 48 |         """
2025-08-20T18:14:35.3964823Z 49 |         TESTING-only helper: generic UPSERT into `table` with explicit `key_cols`.
2025-08-20T18:14:35.3965160Z    |
2025-08-20T18:14:35.3965329Z    = help: Convert to `X | Y`
2025-08-20T18:14:35.3965466Z 
2025-08-20T18:14:35.3965536Z Found 16 errors.
2025-08-20T18:14:35.3965726Z [*] 16 fixable with the `--fix` option.
2025-08-20T18:14:35.3976740Z ##[error]Process completed with exit code 1.
