services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 1s
      retries: 60

  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 2s
      timeout: 1s
      retries: 60

  api:
    build: { context: ., dockerfile: services/api/Dockerfile }
    volumes:
      - ./services:/app/services
    environment:
      ENV: ${ENV:-local}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://app:app@db:5432/app}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      SENTRY_DSN: ${SENTRY_DSN:-}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://api:8000}
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD","curl","-fsS","http://localhost:8000/ready"]
      interval: 5s
      timeout: 3s
      retries: 12

  worker:
    build: { context: ., dockerfile: services/worker/Dockerfile }
    volumes:
      - ./services:/app/services
    environment:
      ENV: ${ENV:-local}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://app:app@db:5432/app}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      SENTRY_DSN: ${SENTRY_DSN:-}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      SCHEDULE_MV_REFRESH: ${SCHEDULE_MV_REFRESH:-true}
      MV_REFRESH_CRON: "${MV_REFRESH_CRON:-*/15 * * * *}"
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    ports: ["8001:8001"]
    healthcheck:
      test: ["CMD","curl","-fsS","http://localhost:8001/ready"]
      interval: 5s
      timeout: 3s
      retries: 12

  webapp:
    build: { context: ., dockerfile: webapp/Dockerfile }
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://api:8000}
    depends_on:
      api: { condition: service_healthy }
    ports: ["3000:3000"]
