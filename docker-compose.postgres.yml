services:
  postgres:
    build:
      context: .
      dockerfile: infra/postgres/Dockerfile
    environment:
      PG_HOST: ${PG_HOST:-postgres}
      PG_PORT: ${PG_PORT:-5432}
      PG_USER: ${PG_USER:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-pass}
      PG_DATABASE: ${PG_DATABASE:-awa}
      POSTGRES_USER: ${POSTGRES_USER:-${PG_USER:-postgres}}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-${PG_PASSWORD:-pass}}
      POSTGRES_DB: ${POSTGRES_DB:-${PG_DATABASE:-awa}}
      PGPASSWORD: ${POSTGRES_PASSWORD:-${PG_PASSWORD:-pass}}
      TZ: UTC
      LANG: en_US.UTF-8
      POSTGRES_CONFIG_FILE: /etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    ports:
      - "5432:5432"
    volumes:
      - ./infra/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - awa-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 60s
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - awa-net

  minio:
    image: minio/minio
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data
    networks:
      - awa-net

  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
      args:
        TZ_CACHE_BUST: ${GITHUB_SHA:-dev}
    environment:
      PG_HOST: ${PG_HOST:-postgres}
      PG_PORT: ${PG_PORT:-5432}
      PG_USER: ${PG_USER:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-pass}
      PG_DATABASE: ${PG_DATABASE:-awa}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://${PG_USER:-postgres}:${PG_PASSWORD:-pass}@${PG_HOST:-postgres}:${PG_PORT:-5432}/${PG_DATABASE:-awa}}
      TZ: UTC
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fsSL", "http://localhost:8000/health"]
      start_period: 70s
      interval: 10s
      timeout: 3s
      retries: 6
    networks:
      - awa-net
    volumes:
      - awa-data:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  etl:
    build:
      context: .
      dockerfile: services/etl/Dockerfile
      args:
        TZ_CACHE_BUST: ${GITHUB_SHA:-dev}
    environment:
      PG_HOST: ${PG_HOST:-postgres}
      PG_PORT: ${PG_PORT:-5432}
      PG_USER: ${PG_USER:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-pass}
      PG_DATABASE: ${PG_DATABASE:-awa}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://${PG_USER:-postgres}:${PG_PASSWORD:-pass}@${PG_HOST:-postgres}:${PG_PORT:-5432}/${PG_DATABASE:-awa}}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    healthcheck:
      test: ["CMD", "true"]
    networks:
      - awa-net
    volumes:
      - awa-data:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  web:
    build: ./webapp
    environment:
      NEXT_PUBLIC_API_URL: http://api:8000
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-fsSL", "http://localhost:3000/api/health"]
      interval: 5s
      timeout: 3s
      retries: 24
    depends_on:
      api:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - awa-net

  repricer:
    build:
      context: .
      dockerfile: services/worker/repricer/Dockerfile
      args:
        TZ_CACHE_BUST: ${GITHUB_SHA:-dev}
    ports:
      - "8100:8100"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8100/health || exit 1"]
      interval: 10s
      retries: 5
    environment:
      PG_HOST: ${PG_HOST:-postgres}
      PG_PORT: ${PG_PORT:-5432}
      PG_USER: ${PG_USER:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-pass}
      PG_DATABASE: ${PG_DATABASE:-awa}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://${PG_USER:-postgres}:${PG_PASSWORD:-pass}@${PG_HOST:-postgres}:${PG_PORT:-5432}/${PG_DATABASE:-awa}}
    depends_on:
      api:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - awa-net
    volumes:
      - awa-data:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
  fees_h10:
    build: services/fees_h10
    command: ["celery", "-A", "services.fees_h10.worker", "beat", "-l", "info"]
    environment:
      PG_HOST: ${PG_HOST:-postgres}
      PG_PORT: ${PG_PORT:-5432}
      PG_USER: ${PG_USER:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-pass}
      PG_DATABASE: ${PG_DATABASE:-awa}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://${PG_USER:-postgres}:${PG_PASSWORD:-pass}@${PG_HOST:-postgres}:${PG_PORT:-5432}/${PG_DATABASE:-awa}}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - awa-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
  logistics_etl:
    build: services/logistics_etl
    command: ["python", "-m", "logistics_etl"]
    environment:
      PG_HOST: ${PG_HOST:-postgres}
      PG_PORT: ${PG_PORT:-5432}
      PG_USER: ${PG_USER:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-pass}
      PG_DATABASE: ${PG_DATABASE:-awa}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://${PG_USER:-postgres}:${PG_PASSWORD:-pass}@${PG_HOST:-postgres}:${PG_PORT:-5432}/${PG_DATABASE:-awa}}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - awa-net
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  awa-pgdata:
  miniodata:
  awa-data:

networks:
  awa-net:
